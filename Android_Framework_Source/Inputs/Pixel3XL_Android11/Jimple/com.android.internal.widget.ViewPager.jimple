public class com.android.internal.widget.ViewPager extends android.view.ViewGroup
{
    private static final int CLOSE_ENOUGH;
    private static final java.util.Comparator COMPARATOR;
    private static final boolean DEBUG;
    private static final int DEFAULT_GUTTER_SIZE;
    private static final int DEFAULT_OFFSCREEN_PAGES;
    private static final int DRAW_ORDER_DEFAULT;
    private static final int DRAW_ORDER_FORWARD;
    private static final int DRAW_ORDER_REVERSE;
    private static final int INVALID_POINTER;
    private static final int[] LAYOUT_ATTRS;
    private static final int MAX_SCROLL_X;
    private static final int MAX_SETTLE_DURATION;
    private static final int MIN_DISTANCE_FOR_FLING;
    private static final int MIN_FLING_VELOCITY;
    public static final int SCROLL_STATE_DRAGGING;
    public static final int SCROLL_STATE_IDLE;
    public static final int SCROLL_STATE_SETTLING;
    private static final java.lang.String TAG;
    private static final boolean USE_CACHE;
    private static final android.view.animation.Interpolator sInterpolator;
    private static final com.android.internal.widget.ViewPager$ViewPositionComparator sPositionComparator;
    private int mActivePointerId;
    private com.android.internal.widget.PagerAdapter mAdapter;
    private com.android.internal.widget.ViewPager$OnAdapterChangeListener mAdapterChangeListener;
    private int mBottomPageBounds;
    private boolean mCalledSuper;
    private int mChildHeightMeasureSpec;
    private int mChildWidthMeasureSpec;
    private final int mCloseEnough;
    private int mCurItem;
    private int mDecorChildCount;
    private final int mDefaultGutterSize;
    private int mDrawingOrder;
    private java.util.ArrayList mDrawingOrderedChildren;
    private final java.lang.Runnable mEndScrollRunnable;
    private int mExpectedAdapterCount;
    private boolean mFirstLayout;
    private float mFirstOffset;
    private final int mFlingDistance;
    private int mGutterSize;
    private boolean mInLayout;
    private float mInitialMotionX;
    private float mInitialMotionY;
    private com.android.internal.widget.ViewPager$OnPageChangeListener mInternalPageChangeListener;
    private boolean mIsBeingDragged;
    private boolean mIsUnableToDrag;
    private final java.util.ArrayList mItems;
    private float mLastMotionX;
    private float mLastMotionY;
    private float mLastOffset;
    private final android.widget.EdgeEffect mLeftEdge;
    private int mLeftIncr;
    private android.graphics.drawable.Drawable mMarginDrawable;
    private final int mMaximumVelocity;
    private final int mMinimumVelocity;
    private com.android.internal.widget.ViewPager$PagerObserver mObserver;
    private int mOffscreenPageLimit;
    private com.android.internal.widget.ViewPager$OnPageChangeListener mOnPageChangeListener;
    private int mPageMargin;
    private com.android.internal.widget.ViewPager$PageTransformer mPageTransformer;
    private boolean mPopulatePending;
    private android.os.Parcelable mRestoredAdapterState;
    private java.lang.ClassLoader mRestoredClassLoader;
    private int mRestoredCurItem;
    private final android.widget.EdgeEffect mRightEdge;
    private int mScrollState;
    private final android.widget.Scroller mScroller;
    private boolean mScrollingCacheEnabled;
    private final com.android.internal.widget.ViewPager$ItemInfo mTempItem;
    private final android.graphics.Rect mTempRect;
    private int mTopPageBounds;
    private final int mTouchSlop;
    private android.view.VelocityTracker mVelocityTracker;

    static void <clinit>()
    {
        int[] $r0;
        com.android.internal.widget.ViewPager$1 $r1;
        com.android.internal.widget.ViewPager$2 $r2;
        com.android.internal.widget.ViewPager$ViewPositionComparator $r3;

        <com.android.internal.widget.ViewPager: boolean USE_CACHE> = 0;

        <com.android.internal.widget.ViewPager: java.lang.String TAG> = "ViewPager";

        <com.android.internal.widget.ViewPager: int SCROLL_STATE_SETTLING> = 2;

        <com.android.internal.widget.ViewPager: int SCROLL_STATE_IDLE> = 0;

        <com.android.internal.widget.ViewPager: int SCROLL_STATE_DRAGGING> = 1;

        <com.android.internal.widget.ViewPager: int MIN_FLING_VELOCITY> = 400;

        <com.android.internal.widget.ViewPager: int MIN_DISTANCE_FOR_FLING> = 25;

        <com.android.internal.widget.ViewPager: int MAX_SETTLE_DURATION> = 600;

        <com.android.internal.widget.ViewPager: int MAX_SCROLL_X> = 16777216;

        <com.android.internal.widget.ViewPager: int INVALID_POINTER> = -1;

        <com.android.internal.widget.ViewPager: int DRAW_ORDER_REVERSE> = 2;

        <com.android.internal.widget.ViewPager: int DRAW_ORDER_FORWARD> = 1;

        <com.android.internal.widget.ViewPager: int DRAW_ORDER_DEFAULT> = 0;

        <com.android.internal.widget.ViewPager: int DEFAULT_OFFSCREEN_PAGES> = 1;

        <com.android.internal.widget.ViewPager: int DEFAULT_GUTTER_SIZE> = 16;

        <com.android.internal.widget.ViewPager: boolean DEBUG> = 0;

        <com.android.internal.widget.ViewPager: int CLOSE_ENOUGH> = 2;

        $r0 = newarray (int)[1];

        $r0[0] = 16842931;

        <com.android.internal.widget.ViewPager: int[] LAYOUT_ATTRS> = $r0;

        $r1 = new com.android.internal.widget.ViewPager$1;

        specialinvoke $r1.<com.android.internal.widget.ViewPager$1: void <init>()>();

        <com.android.internal.widget.ViewPager: java.util.Comparator COMPARATOR> = $r1;

        $r2 = new com.android.internal.widget.ViewPager$2;

        specialinvoke $r2.<com.android.internal.widget.ViewPager$2: void <init>()>();

        <com.android.internal.widget.ViewPager: android.view.animation.Interpolator sInterpolator> = $r2;

        $r3 = new com.android.internal.widget.ViewPager$ViewPositionComparator;

        specialinvoke $r3.<com.android.internal.widget.ViewPager$ViewPositionComparator: void <init>()>();

        <com.android.internal.widget.ViewPager: com.android.internal.widget.ViewPager$ViewPositionComparator sPositionComparator> = $r3;

        return;
    }

    public void <init>(android.content.Context)
    {
        com.android.internal.widget.ViewPager r0;
        android.content.Context r1;

        r0 := @this: com.android.internal.widget.ViewPager;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.android.internal.widget.ViewPager: void <init>(android.content.Context,android.util.AttributeSet)>(r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.android.internal.widget.ViewPager r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: com.android.internal.widget.ViewPager;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<com.android.internal.widget.ViewPager: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        com.android.internal.widget.ViewPager r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0;

        r0 := @this: com.android.internal.widget.ViewPager;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.internal.widget.ViewPager: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r1, r2, i0, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int, int)
    {
        com.android.internal.widget.ViewPager r0;
        android.content.Context r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        float f0, $f1, $f2, $f3, $f4;
        java.util.ArrayList $r2;
        com.android.internal.widget.ViewPager$ItemInfo $r3;
        android.graphics.Rect $r4;
        com.android.internal.widget.ViewPager$3 $r5;
        android.widget.Scroller $r6;
        android.view.animation.Interpolator $r7;
        android.content.res.Resources $r8;
        android.util.DisplayMetrics $r9;
        android.widget.EdgeEffect $r10, $r11;
        android.util.AttributeSet r12;
        android.view.ViewConfiguration r13;

        r0 := @this: com.android.internal.widget.ViewPager;

        r1 := @parameter0: android.content.Context;

        r12 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r1, r12, i0, i1);

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.widget.ViewPager: java.util.ArrayList mItems> = $r2;

        $r3 = new com.android.internal.widget.ViewPager$ItemInfo;

        specialinvoke $r3.<com.android.internal.widget.ViewPager$ItemInfo: void <init>()>();

        r0.<com.android.internal.widget.ViewPager: com.android.internal.widget.ViewPager$ItemInfo mTempItem> = $r3;

        $r4 = new android.graphics.Rect;

        specialinvoke $r4.<android.graphics.Rect: void <init>()>();

        r0.<com.android.internal.widget.ViewPager: android.graphics.Rect mTempRect> = $r4;

        r0.<com.android.internal.widget.ViewPager: int mRestoredCurItem> = -1;

        r0.<com.android.internal.widget.ViewPager: android.os.Parcelable mRestoredAdapterState> = null;

        r0.<com.android.internal.widget.ViewPager: java.lang.ClassLoader mRestoredClassLoader> = null;

        r0.<com.android.internal.widget.ViewPager: int mLeftIncr> = -1;

        r0.<com.android.internal.widget.ViewPager: float mFirstOffset> = -3.4028235E38F;

        r0.<com.android.internal.widget.ViewPager: float mLastOffset> = 3.4028235E38F;

        r0.<com.android.internal.widget.ViewPager: int mOffscreenPageLimit> = 1;

        r0.<com.android.internal.widget.ViewPager: int mActivePointerId> = -1;

        r0.<com.android.internal.widget.ViewPager: boolean mFirstLayout> = 1;

        $r5 = new com.android.internal.widget.ViewPager$3;

        specialinvoke $r5.<com.android.internal.widget.ViewPager$3: void <init>(com.android.internal.widget.ViewPager)>(r0);

        r0.<com.android.internal.widget.ViewPager: java.lang.Runnable mEndScrollRunnable> = $r5;

        r0.<com.android.internal.widget.ViewPager: int mScrollState> = 0;

        virtualinvoke r0.<com.android.internal.widget.ViewPager: void setWillNotDraw(boolean)>(0);

        virtualinvoke r0.<com.android.internal.widget.ViewPager: void setDescendantFocusability(int)>(262144);

        virtualinvoke r0.<com.android.internal.widget.ViewPager: void setFocusable(boolean)>(1);

        $r6 = new android.widget.Scroller;

        $r7 = <com.android.internal.widget.ViewPager: android.view.animation.Interpolator sInterpolator>;

        specialinvoke $r6.<android.widget.Scroller: void <init>(android.content.Context,android.view.animation.Interpolator)>(r1, $r7);

        r0.<com.android.internal.widget.ViewPager: android.widget.Scroller mScroller> = $r6;

        r13 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>(r1);

        $r8 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r9 = virtualinvoke $r8.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        f0 = $r9.<android.util.DisplayMetrics: float density>;

        $i2 = virtualinvoke r13.<android.view.ViewConfiguration: int getScaledPagingTouchSlop()>();

        r0.<com.android.internal.widget.ViewPager: int mTouchSlop> = $i2;

        $f1 = 400.0F * f0;

        $i3 = (int) $f1;

        r0.<com.android.internal.widget.ViewPager: int mMinimumVelocity> = $i3;

        $i4 = virtualinvoke r13.<android.view.ViewConfiguration: int getScaledMaximumFlingVelocity()>();

        r0.<com.android.internal.widget.ViewPager: int mMaximumVelocity> = $i4;

        $r10 = new android.widget.EdgeEffect;

        specialinvoke $r10.<android.widget.EdgeEffect: void <init>(android.content.Context)>(r1);

        r0.<com.android.internal.widget.ViewPager: android.widget.EdgeEffect mLeftEdge> = $r10;

        $r11 = new android.widget.EdgeEffect;

        specialinvoke $r11.<android.widget.EdgeEffect: void <init>(android.content.Context)>(r1);

        r0.<com.android.internal.widget.ViewPager: android.widget.EdgeEffect mRightEdge> = $r11;

        $f2 = 25.0F * f0;

        $i5 = (int) $f2;

        r0.<com.android.internal.widget.ViewPager: int mFlingDistance> = $i5;

        $f3 = 2.0F * f0;

        $i6 = (int) $f3;

        r0.<com.android.internal.widget.ViewPager: int mCloseEnough> = $i6;

        $f4 = 16.0F * f0;

        $i7 = (int) $f4;

        r0.<com.android.internal.widget.ViewPager: int mDefaultGutterSize> = $i7;

        $i8 = virtualinvoke r0.<com.android.internal.widget.ViewPager: int getImportantForAccessibility()>();

        if $i8 != 0 goto label1;

        virtualinvoke r0.<com.android.internal.widget.ViewPager: void setImportantForAccessibility(int)>(1);

     label1:
        return;
    }

    static void access$000(com.android.internal.widget.ViewPager, int)
    {
        com.android.internal.widget.ViewPager r0;
        int i0;

        r0 := @parameter0: com.android.internal.widget.ViewPager;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.internal.widget.ViewPager: void setScrollState(int)>(i0);

        return;
    }

    static int[] access$200()
    {
        int[] $r0;

        $r0 = <com.android.internal.widget.ViewPager: int[] LAYOUT_ATTRS>;

        return $r0;
    }

    private void calculatePageOffsets(com.android.internal.widget.ViewPager$ItemInfo, int, com.android.internal.widget.ViewPager$ItemInfo)
    {
        com.android.internal.widget.ViewPager r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, i20, i21, i22, i23, i24, i25, $i26, i27, i28, i29, $i30, i31, $i32, i33, $i34, i35, i36, i37, i38;
        com.android.internal.widget.PagerAdapter $r1, $r4, $r7, $r11, $r17;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39;
        java.util.ArrayList $r2, $r5, $r8, $r9, $r12, $r14, $r15, $r18, $r19, $r25;
        java.lang.Object $r3, $r6, $r10, $r13, $r16, $r20;
        com.android.internal.widget.ViewPager$ItemInfo r21, r22, r23, r24, r26, r27;

        r0 := @this: com.android.internal.widget.ViewPager;

        r21 := @parameter0: com.android.internal.widget.ViewPager$ItemInfo;

        i20 := @parameter1: int;

        r22 := @parameter2: com.android.internal.widget.ViewPager$ItemInfo;

        $r1 = r0.<com.android.internal.widget.ViewPager: com.android.internal.widget.PagerAdapter mAdapter>;

        i0 = virtualinvoke $r1.<com.android.internal.widget.PagerAdapter: int getCount()>();

        i21 = specialinvoke r0.<com.android.internal.widget.ViewPager: int getPaddedWidth()>();

        if i21 <= 0 goto label01;

        $i19 = r0.<com.android.internal.widget.ViewPager: int mPageMargin>;

        $f29 = (float) $i19;

        $f28 = (float) i21;

        f30 = $f29 / $f28;

        goto label02;

     label01:
        f30 = 0.0F;

     label02:
        if r22 == null goto label12;

        i22 = r22.<com.android.internal.widget.ViewPager$ItemInfo: int position>;

        $i9 = r21.<com.android.internal.widget.ViewPager$ItemInfo: int position>;

        if i22 >= $i9 goto label07;

        i23 = 0;

        $f22 = r22.<com.android.internal.widget.ViewPager$ItemInfo: float offset>;

        $f21 = r22.<com.android.internal.widget.ViewPager$ItemInfo: float widthFactor>;

        $f23 = $f22 + $f21;

        f31 = $f23 + f30;

        i24 = i22 + 1;

     label03:
        $i14 = r21.<com.android.internal.widget.ViewPager$ItemInfo: int position>;

        if i24 > $i14 goto label12;

        $r14 = r0.<com.android.internal.widget.ViewPager: java.util.ArrayList mItems>;

        $i15 = virtualinvoke $r14.<java.util.ArrayList: int size()>();

        if i23 >= $i15 goto label12;

        $r15 = r0.<com.android.internal.widget.ViewPager: java.util.ArrayList mItems>;

        $r16 = virtualinvoke $r15.<java.util.ArrayList: java.lang.Object get(int)>(i23);

        r23 = (com.android.internal.widget.ViewPager$ItemInfo) $r16;

     label04:
        f32 = f31;

        i25 = i24;

        $i16 = r23.<com.android.internal.widget.ViewPager$ItemInfo: int position>;

        if i24 <= $i16 goto label05;

        f32 = f31;

        i25 = i24;

        $r18 = r0.<com.android.internal.widget.ViewPager: java.util.ArrayList mItems>;

        $i17 = virtualinvoke $r18.<java.util.ArrayList: int size()>();

        $i18 = $i17 - 1;

        if i23 >= $i18 goto label05;

        i23 = i23 + 1;

        $r19 = r0.<com.android.internal.widget.ViewPager: java.util.ArrayList mItems>;

        $r20 = virtualinvoke $r19.<java.util.ArrayList: java.lang.Object get(int)>(i23);

        r23 = (com.android.internal.widget.ViewPager$ItemInfo) $r20;

        goto label04;

     label05:
        $i26 = r23.<com.android.internal.widget.ViewPager$ItemInfo: int position>;

        if i25 >= $i26 goto label06;

        $r17 = r0.<com.android.internal.widget.ViewPager: com.android.internal.widget.PagerAdapter mAdapter>;

        $f26 = virtualinvoke $r17.<com.android.internal.widget.PagerAdapter: float getPageWidth(int)>(i25);

        $f27 = $f26 + f30;

        f32 = f32 + $f27;

        i25 = i25 + 1;

        goto label05;

     label06:
        r23.<com.android.internal.widget.ViewPager$ItemInfo: float offset> = f32;

        $f24 = r23.<com.android.internal.widget.ViewPager$ItemInfo: float widthFactor>;

        $f25 = $f24 + f30;

        f31 = f32 + $f25;

        i24 = i25 + 1;

        goto label03;

     label07:
        $i10 = r21.<com.android.internal.widget.ViewPager$ItemInfo: int position>;

        if i22 <= $i10 goto label12;

        $r8 = r0.<com.android.internal.widget.ViewPager: java.util.ArrayList mItems>;

        $i11 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

        i27 = $i11 - 1;

        f33 = r22.<com.android.internal.widget.ViewPager$ItemInfo: float offset>;

        i28 = i22 + -1;

     label08:
        $i12 = r21.<com.android.internal.widget.ViewPager$ItemInfo: int position>;

        if i28 < $i12 goto label12;

        if i27 < 0 goto label12;

        $r9 = r0.<com.android.internal.widget.ViewPager: java.util.ArrayList mItems>;

        $r10 = virtualinvoke $r9.<java.util.ArrayList: java.lang.Object get(int)>(i27);

        r24 = (com.android.internal.widget.ViewPager$ItemInfo) $r10;

     label09:
        f34 = f33;

        i29 = i28;

        $i13 = r24.<com.android.internal.widget.ViewPager$ItemInfo: int position>;

        if i28 >= $i13 goto label10;

        f34 = f33;

        i29 = i28;

        if i27 <= 0 goto label10;

        i27 = i27 + -1;

        $r12 = r0.<com.android.internal.widget.ViewPager: java.util.ArrayList mItems>;

        $r13 = virtualinvoke $r12.<java.util.ArrayList: java.lang.Object get(int)>(i27);

        r24 = (com.android.internal.widget.ViewPager$ItemInfo) $r13;

        goto label09;

     label10:
        $i30 = r24.<com.android.internal.widget.ViewPager$ItemInfo: int position>;

        if i29 <= $i30 goto label11;

        $r11 = r0.<com.android.internal.widget.ViewPager: com.android.internal.widget.PagerAdapter mAdapter>;

        $f19 = virtualinvoke $r11.<com.android.internal.widget.PagerAdapter: float getPageWidth(int)>(i29);

        $f20 = $f19 + f30;

        f34 = f34 - $f20;

        i29 = i29 + -1;

        goto label10;

     label11:
        $f17 = r24.<com.android.internal.widget.ViewPager$ItemInfo: float widthFactor>;

        $f18 = $f17 + f30;

        f33 = f34 - $f18;

        r24.<com.android.internal.widget.ViewPager$ItemInfo: float offset> = f33;

        i28 = i29 - 1;

        goto label08;

     label12:
        $r25 = r0.<com.android.internal.widget.ViewPager: java.util.ArrayList mItems>;

        i31 = virtualinvoke $r25.<java.util.ArrayList: int size()>();

        f35 = r21.<com.android.internal.widget.ViewPager$ItemInfo: float offset>;

        $i32 = r21.<com.android.internal.widget.ViewPager$ItemInfo: int position>;

        i33 = $i32 - 1;

        $i34 = r21.<com.android.internal.widget.ViewPager$ItemInfo: int position>;

        if $i34 != 0 goto label13;

        f36 = r21.<com.android.internal.widget.ViewPager$ItemInfo: float offset>;

        goto label14;

     label13:
        f36 = -3.4028235E38F;

     label14:
        r0.<com.android.internal.widget.ViewPager: float mFirstOffset> = f36;

        $i2 = r21.<com.android.internal.widget.ViewPager$ItemInfo: int position>;

        $i1 = i0 - 1;

        if $i2 != $i1 goto label15;

        $f15 = r21.<com.android.internal.widget.ViewPager$ItemInfo: float offset>;

        $f14 = r21.<com.android.internal.widget.ViewPager$ItemInfo: float widthFactor>;

        $f16 = $f15 + $f14;

        f37 = $f16 - 1.0F;

        goto label16;

     label15:
        f37 = 3.4028235E38F;

     label16:
        r0.<com.android.internal.widget.ViewPager: float mLastOffset> = f37;

        i35 = i20 - 1;

        f38 = f35;

     label17:
        if i35 < 0 goto label21;

        $r5 = r0.<com.android.internal.widget.ViewPager: java.util.ArrayList mItems>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i35);

        r26 = (com.android.internal.widget.ViewPager$ItemInfo) $r6;

     label18:
        $i7 = r26.<com.android.internal.widget.ViewPager$ItemInfo: int position>;

        if i33 <= $i7 goto label19;

        $r7 = r0.<com.android.internal.widget.ViewPager: com.android.internal.widget.PagerAdapter mAdapter>;

        $f12 = virtualinvoke $r7.<com.android.internal.widget.PagerAdapter: float getPageWidth(int)>(i33);

        $f13 = $f12 + f30;

        f38 = f38 - $f13;

        i33 = i33 + -1;

        goto label18;

     label19:
        $f10 = r26.<com.android.internal.widget.ViewPager$ItemInfo: float widthFactor>;

        $f11 = $f10 + f30;

        f38 = f38 - $f11;

        r26.<com.android.internal.widget.ViewPager$ItemInfo: float offset> = f38;

        $i8 = r26.<com.android.internal.widget.ViewPager$ItemInfo: int position>;

        if $i8 != 0 goto label20;

        r0.<com.android.internal.widget.ViewPager: float mFirstOffset> = f38;

     label20:
        i35 = i35 + -1;

        i33 = i33 + -1;

        goto label17;

     label21:
        $f1 = r21.<com.android.internal.widget.ViewPager$ItemInfo: float offset>;

        $f0 = r21.<com.android.internal.widget.ViewPager$ItemInfo: float widthFactor>;

        $f2 = $f1 + $f0;

        f39 = $f2 + f30;

        $i3 = r21.<com.android.internal.widget.ViewPager$ItemInfo: int position>;

        i36 = $i3 + 1;

        i37 = i20 + 1;

        i38 = i36;

     label22:
        if i37 >= i31 goto label26;

        $r2 = r0.<com.android.internal.widget.ViewPager: java.util.ArrayList mItems>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i37);

        r27 = (com.android.internal.widget.ViewPager$ItemInfo) $r3;

     label23:
        $i4 = r27.<com.android.internal.widget.ViewPager$ItemInfo: int position>;

        if i38 >= $i4 goto label24;

        $r4 = r0.<com.android.internal.widget.ViewPager: com.android.internal.widget.PagerAdapter mAdapter>;

        $f8 = virtualinvoke $r4.<com.android.internal.widget.PagerAdapter: float getPageWidth(int)>(i38);

        $f9 = $f8 + f30;

        f39 = f39 + $f9;

        i38 = i38 + 1;

        goto label23;

     label24:
        $i6 = r27.<com.android.internal.widget.ViewPager$ItemInfo: int position>;

        $i5 = i0 - 1;

        if $i6 != $i5 goto label25;

        $f5 = r27.<com.android.internal.widget.ViewPager$ItemInfo: float widthFactor>;

        $f6 = $f5 + f39;

        $f7 = $f6 - 1.0F;

        r0.<com.android.internal.widget.ViewPager: float mLastOffset> = $f7;

     label25:
        r27.<com.android.internal.widget.ViewPager$ItemInfo: float offset> = f39;

        $f3 = r27.<com.android.internal.widget.ViewPager$ItemInfo: float widthFactor>;

        $f4 = $f3 + f30;

        f39 = f39 + $f4;

        i37 = i37 + 1;

        i38 = i38 + 1;

        goto label22;

     label26:
        return;
    }

    private boolean canScroll()
    {
        com.android.internal.widget.ViewPager r0;
        com.android.internal.widget.PagerAdapter r1;
        int $i0;
        boolean z0;

        r0 := @this: com.android.internal.widget.ViewPager;

        r1 = r0.<com.android.internal.widget.ViewPager: com.android.internal.widget.PagerAdapter mAdapter>;

        z0 = 1;

        if r1 == null goto label1;

        $i0 = virtualinvoke r1.<com.android.internal.widget.PagerAdapter: int getCount()>();

        if $i0 <= 1 goto label1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private void completeScroll(boolean)
    {
        com.android.internal.widget.ViewPager r0;
        boolean z0, $z1, z2;
        int i0, i1, i2, $i3, i4, i5, $i6;
        com.android.internal.widget.ViewPager$ItemInfo r1;
        java.lang.Runnable $r2, $r3;
        java.util.ArrayList $r4, $r9;
        java.lang.Object $r5;
        android.widget.Scroller $r6, $r7, $r8;

        r0 := @this: com.android.internal.widget.ViewPager;

        z0 := @parameter0: boolean;

        $i3 = r0.<com.android.internal.widget.ViewPager: int mScrollState>;

        if $i3 != 2 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        if z2 == 0 goto label4;

        specialinvoke r0.<com.android.internal.widget.ViewPager: void setScrollingCacheEnabled(boolean)>(0);

        $r6 = r0.<com.android.internal.widget.ViewPager: android.widget.Scroller mScroller>;

        virtualinvoke $r6.<android.widget.Scroller: void abortAnimation()>();

        i0 = virtualinvoke r0.<com.android.internal.widget.ViewPager: int getScrollX()>();

        i4 = virtualinvoke r0.<com.android.internal.widget.ViewPager: int getScrollY()>();

        $r7 = r0.<com.android.internal.widget.ViewPager: android.widget.Scroller mScroller>;

        i1 = virtualinvoke $r7.<android.widget.Scroller: int getCurrX()>();

        $r8 = r0.<com.android.internal.widget.ViewPager: android.widget.Scroller mScroller>;

        i2 = virtualinvoke $r8.<android.widget.Scroller: int getCurrY()>();

        if i0 != i1 goto label3;

        if i4 == i2 goto label4;

     label3:
        virtualinvoke r0.<com.android.internal.widget.ViewPager: void scrollTo(int,int)>(i1, i2);

     label4:
        r0.<com.android.internal.widget.ViewPager: boolean mPopulatePending> = 0;

        i5 = 0;

     label5:
        $r9 = r0.<com.android.internal.widget.ViewPager: java.util.ArrayList mItems>;

        $i6 = virtualinvoke $r9.<java.util.ArrayList: int size()>();

        if i5 >= $i6 goto label7;

        $r4 = r0.<com.android.internal.widget.ViewPager: java.util.ArrayList mItems>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        r1 = (com.android.internal.widget.ViewPager$ItemInfo) $r5;

        $z1 = r1.<com.android.internal.widget.ViewPager$ItemInfo: boolean scrolling>;

        if $z1 == 0 goto label6;

        z2 = 1;

        r1.<com.android.internal.widget.ViewPager$ItemInfo: boolean scrolling> = 0;

     label6:
        i5 = i5 + 1;

        goto label5;

     label7:
        if z2 == 0 goto label9;

        if z0 == 0 goto label8;

        $r3 = r0.<com.android.internal.widget.ViewPager: java.lang.Runnable mEndScrollRunnable>;

        virtualinvoke r0.<com.android.internal.widget.ViewPager: void postOnAnimation(java.lang.Runnable)>($r3);

        goto label9;

     label8:
        $r2 = r0.<com.android.internal.widget.ViewPager: java.lang.Runnable mEndScrollRunnable>;

        interfaceinvoke $r2.<java.lang.Runnable: void run()>();

     label9:
        return;
    }

    private int determineTargetPage(int, float, int, int)
    {
        com.android.internal.widget.ViewPager r0;
        float f0, $f1, $f2, $f3, $f4, $f5, f6;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12, i13, i14, i15, $i16;
        com.android.internal.widget.ViewPager$ItemInfo r1, r7;
        java.util.ArrayList $r2, $r5, r6;
        java.lang.Object $r3, $r4;

        r0 := @this: com.android.internal.widget.ViewPager;

        i11 := @parameter0: int;

        f0 := @parameter1: float;

        i12 := @parameter2: int;

        i0 := @parameter3: int;

        $i1 = staticinvoke <java.lang.Math: int abs(int)>(i0);

        $i2 = r0.<com.android.internal.widget.ViewPager: int mFlingDistance>;

        if $i1 <= $i2 goto label3;

        $i9 = staticinvoke <java.lang.Math: int abs(int)>(i12);

        $i10 = r0.<com.android.internal.widget.ViewPager: int mMinimumVelocity>;

        if $i9 <= $i10 goto label3;

        if i12 >= 0 goto label1;

        i13 = r0.<com.android.internal.widget.ViewPager: int mLeftIncr>;

        goto label2;

     label1:
        i13 = 0;

     label2:
        i14 = i11 - i13;

        goto label6;

     label3:
        $i3 = r0.<com.android.internal.widget.ViewPager: int mCurItem>;

        if i11 < $i3 goto label4;

        f6 = 0.4F;

        goto label5;

     label4:
        f6 = 0.6F;

     label5:
        $f4 = (float) i11;

        $i4 = r0.<com.android.internal.widget.ViewPager: int mLeftIncr>;

        $f2 = (float) $i4;

        $f1 = f0 + f6;

        $f3 = $f2 * $f1;

        $f5 = $f4 - $f3;

        i14 = (int) $f5;

     label6:
        i15 = i14;

        $r5 = r0.<com.android.internal.widget.ViewPager: java.util.ArrayList mItems>;

        $i16 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        if $i16 <= 0 goto label7;

        $r2 = r0.<com.android.internal.widget.ViewPager: java.util.ArrayList mItems>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(0);

        r1 = (com.android.internal.widget.ViewPager$ItemInfo) $r3;

        r6 = r0.<com.android.internal.widget.ViewPager: java.util.ArrayList mItems>;

        $i5 = virtualinvoke r6.<java.util.ArrayList: int size()>();

        $i6 = $i5 - 1;

        $r4 = virtualinvoke r6.<java.util.ArrayList: java.lang.Object get(int)>($i6);

        r7 = (com.android.internal.widget.ViewPager$ItemInfo) $r4;

        $i8 = r1.<com.android.internal.widget.ViewPager$ItemInfo: int position>;

        $i7 = r7.<com.android.internal.widget.ViewPager$ItemInfo: int position>;

        i15 = staticinvoke <android.util.MathUtils: int constrain(int,int,int)>(i14, $i8, $i7);

     label7:
        return i15;
    }

    private void enableLayers(boolean)
    {
        com.android.internal.widget.ViewPager r0;
        boolean z0;
        int i0, i1;
        android.view.View $r1;
        byte b2;

        r0 := @this: com.android.internal.widget.ViewPager;

        z0 := @parameter0: boolean;

        i0 = virtualinvoke r0.<com.android.internal.widget.ViewPager: int getChildCount()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label4;

        if z0 == 0 goto label2;

        b2 = 2;

        goto label3;

     label2:
        b2 = 0;

     label3:
        $r1 = virtualinvoke r0.<com.android.internal.widget.ViewPager: android.view.View getChildAt(int)>(i1);

        virtualinvoke $r1.<android.view.View: void setLayerType(int,android.graphics.Paint)>(b2, null);

        i1 = i1 + 1;

        goto label1;

     label4:
        return;
    }

    private void endDrag()
    {
        com.android.internal.widget.ViewPager r0;
        android.view.VelocityTracker r1;

        r0 := @this: com.android.internal.widget.ViewPager;

        r0.<com.android.internal.widget.ViewPager: boolean mIsBeingDragged> = 0;

        r0.<com.android.internal.widget.ViewPager: boolean mIsUnableToDrag> = 0;

        r1 = r0.<com.android.internal.widget.ViewPager: android.view.VelocityTracker mVelocityTracker>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.view.VelocityTracker: void recycle()>();

        r0.<com.android.internal.widget.ViewPager: android.view.VelocityTracker mVelocityTracker> = null;

     label1:
        return;
    }

    private android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect, android.view.View)
    {
        com.android.internal.widget.ViewPager r0;
        android.view.View r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        boolean $z0;
        android.graphics.Rect $r2, r3, r4;
        android.view.ViewParent r5;
        android.view.ViewGroup r6;

        r0 := @this: com.android.internal.widget.ViewPager;

        r3 := @parameter0: android.graphics.Rect;

        r1 := @parameter1: android.view.View;

        r4 = r3;

        if r3 != null goto label1;

        $r2 = new android.graphics.Rect;

        specialinvoke $r2.<android.graphics.Rect: void <init>()>();

        r4 = $r2;

     label1:
        if r1 != null goto label2;

        virtualinvoke r4.<android.graphics.Rect: void set(int,int,int,int)>(0, 0, 0, 0);

        return r4;

     label2:
        $i0 = virtualinvoke r1.<android.view.View: int getLeft()>();

        r4.<android.graphics.Rect: int left> = $i0;

        $i1 = virtualinvoke r1.<android.view.View: int getRight()>();

        r4.<android.graphics.Rect: int right> = $i1;

        $i2 = virtualinvoke r1.<android.view.View: int getTop()>();

        r4.<android.graphics.Rect: int top> = $i2;

        $i3 = virtualinvoke r1.<android.view.View: int getBottom()>();

        r4.<android.graphics.Rect: int bottom> = $i3;

        r5 = virtualinvoke r1.<android.view.View: android.view.ViewParent getParent()>();

     label3:
        $z0 = r5 instanceof android.view.ViewGroup;

        if $z0 == 0 goto label4;

        if r5 == r0 goto label4;

        r6 = (android.view.ViewGroup) r5;

        $i4 = r4.<android.graphics.Rect: int left>;

        $i5 = virtualinvoke r6.<android.view.ViewGroup: int getLeft()>();

        $i6 = $i4 + $i5;

        r4.<android.graphics.Rect: int left> = $i6;

        $i7 = r4.<android.graphics.Rect: int right>;

        $i8 = virtualinvoke r6.<android.view.ViewGroup: int getRight()>();

        $i9 = $i7 + $i8;

        r4.<android.graphics.Rect: int right> = $i9;

        $i10 = r4.<android.graphics.Rect: int top>;

        $i11 = virtualinvoke r6.<android.view.ViewGroup: int getTop()>();

        $i12 = $i10 + $i11;

        r4.<android.graphics.Rect: int top> = $i12;

        $i13 = r4.<android.graphics.Rect: int bottom>;

        $i14 = virtualinvoke r6.<android.view.ViewGroup: int getBottom()>();

        $i15 = $i13 + $i14;

        r4.<android.graphics.Rect: int bottom> = $i15;

        r5 = virtualinvoke r6.<android.view.ViewGroup: android.view.ViewParent getParent()>();

        goto label3;

     label4:
        return r4;
    }

    private int getLeftEdgeForItem(int)
    {
        com.android.internal.widget.ViewPager r0;
        com.android.internal.widget.ViewPager$ItemInfo r1;
        int i0, $i1, $i2, $i3, i4, i5;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9;
        boolean $z0;

        r0 := @this: com.android.internal.widget.ViewPager;

        i4 := @parameter0: int;

        r1 = virtualinvoke r0.<com.android.internal.widget.ViewPager: com.android.internal.widget.ViewPager$ItemInfo infoForPosition(int)>(i4);

        if r1 != null goto label1;

        return 0;

     label1:
        i0 = specialinvoke r0.<com.android.internal.widget.ViewPager: int getPaddedWidth()>();

        $f3 = (float) i0;

        $f2 = r1.<com.android.internal.widget.ViewPager$ItemInfo: float offset>;

        $f1 = r0.<com.android.internal.widget.ViewPager: float mFirstOffset>;

        $f0 = r0.<com.android.internal.widget.ViewPager: float mLastOffset>;

        $f4 = staticinvoke <android.util.MathUtils: float constrain(float,float,float)>($f2, $f1, $f0);

        $f5 = $f3 * $f4;

        i5 = (int) $f5;

        $z0 = virtualinvoke r0.<com.android.internal.widget.ViewPager: boolean isLayoutRtl()>();

        if $z0 == 0 goto label2;

        $f7 = (float) i0;

        $f6 = r1.<com.android.internal.widget.ViewPager$ItemInfo: float widthFactor>;

        $f8 = $f7 * $f6;

        $f9 = $f8 + 0.5F;

        $i1 = (int) $f9;

        $i2 = 16777216 - $i1;

        $i3 = $i2 - i5;

        return $i3;

     label2:
        return i5;
    }

    private int getPaddedWidth()
    {
        com.android.internal.widget.ViewPager r0;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: com.android.internal.widget.ViewPager;

        $i0 = virtualinvoke r0.<com.android.internal.widget.ViewPager: int getMeasuredWidth()>();

        $i1 = virtualinvoke r0.<com.android.internal.widget.ViewPager: int getPaddingLeft()>();

        $i2 = $i0 - $i1;

        $i3 = virtualinvoke r0.<com.android.internal.widget.ViewPager: int getPaddingRight()>();

        $i4 = $i2 - $i3;

        return $i4;
    }

    private int getScrollStart()
    {
        com.android.internal.widget.ViewPager r0;
        boolean $z0;
        int $i0, $i1, $i2;

        r0 := @this: com.android.internal.widget.ViewPager;

        $z0 = virtualinvoke r0.<com.android.internal.widget.ViewPager: boolean isLayoutRtl()>();

        if $z0 == 0 goto label1;

        $i1 = virtualinvoke r0.<com.android.internal.widget.ViewPager: int getScrollX()>();

        $i2 = 16777216 - $i1;

        return $i2;

     label1:
        $i0 = virtualinvoke r0.<com.android.internal.widget.ViewPager: int getScrollX()>();

        return $i0;
    }

    private com.android.internal.widget.ViewPager$ItemInfo infoForFirstVisiblePage()
    {
        com.android.internal.widget.ViewPager r0;
        int i0, i1, $i3, $i4, $i6, $i7, $i8, $i9, $i10, i11, i12, i13, i14;
        com.android.internal.widget.ViewPager$ItemInfo r1, r7, r8;
        java.util.ArrayList $r2, $r3, $r5;
        java.lang.Object $r4;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, f10, f11, f12, f13;
        byte $b2, $b5;
        com.android.internal.widget.PagerAdapter $r6;
        boolean z0;

        r0 := @this: com.android.internal.widget.ViewPager;

        i0 = specialinvoke r0.<com.android.internal.widget.ViewPager: int getScrollStart()>();

        i11 = specialinvoke r0.<com.android.internal.widget.ViewPager: int getPaddedWidth()>();

        f10 = 0.0F;

        if i11 <= 0 goto label01;

        $f9 = (float) i0;

        $f8 = (float) i11;

        f11 = $f9 / $f8;

        goto label02;

     label01:
        f11 = 0.0F;

     label02:
        if i11 <= 0 goto label03;

        $i10 = r0.<com.android.internal.widget.ViewPager: int mPageMargin>;

        $f7 = (float) $i10;

        $f6 = (float) i11;

        f10 = $f7 / $f6;

     label03:
        i12 = -1;

        f12 = 0.0F;

        f13 = 0.0F;

        z0 = 1;

        r7 = null;

        $r2 = r0.<com.android.internal.widget.ViewPager: java.util.ArrayList mItems>;

        i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i13 = 0;

     label04:
        if i13 >= i1 goto label10;

        $r3 = r0.<com.android.internal.widget.ViewPager: java.util.ArrayList mItems>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i13);

        r1 = (com.android.internal.widget.ViewPager$ItemInfo) $r4;

        i14 = i13;

        r8 = r1;

        if z0 != 0 goto label05;

        i14 = i13;

        r8 = r1;

        $i7 = r1.<com.android.internal.widget.ViewPager$ItemInfo: int position>;

        $i6 = i12 + 1;

        if $i7 == $i6 goto label05;

        r8 = r0.<com.android.internal.widget.ViewPager: com.android.internal.widget.ViewPager$ItemInfo mTempItem>;

        $f3 = f12 + f13;

        $f4 = $f3 + f10;

        r8.<com.android.internal.widget.ViewPager$ItemInfo: float offset> = $f4;

        $i8 = i12 + 1;

        r8.<com.android.internal.widget.ViewPager$ItemInfo: int position> = $i8;

        $r6 = r0.<com.android.internal.widget.ViewPager: com.android.internal.widget.PagerAdapter mAdapter>;

        $i9 = r8.<com.android.internal.widget.ViewPager$ItemInfo: int position>;

        $f5 = virtualinvoke $r6.<com.android.internal.widget.PagerAdapter: float getPageWidth(int)>($i9);

        r8.<com.android.internal.widget.ViewPager$ItemInfo: float widthFactor> = $f5;

        i14 = i13 - 1;

     label05:
        f12 = r8.<com.android.internal.widget.ViewPager$ItemInfo: float offset>;

        if z0 != 0 goto label07;

        $b5 = f11 cmpl f12;

        if $b5 < 0 goto label06;

        goto label07;

     label06:
        return r7;

     label07:
        $f0 = r8.<com.android.internal.widget.ViewPager$ItemInfo: float widthFactor>;

        $f1 = $f0 + f12;

        $f2 = $f1 + f10;

        $b2 = f11 cmpg $f2;

        if $b2 < 0 goto label09;

        $r5 = r0.<com.android.internal.widget.ViewPager: java.util.ArrayList mItems>;

        $i3 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        $i4 = $i3 - 1;

        if i14 != $i4 goto label08;

        goto label09;

     label08:
        z0 = 0;

        i12 = r8.<com.android.internal.widget.ViewPager$ItemInfo: int position>;

        f13 = r8.<com.android.internal.widget.ViewPager$ItemInfo: float widthFactor>;

        i13 = i14 + 1;

        r7 = r8;

        goto label04;

     label09:
        return r8;

     label10:
        return r7;
    }

    private boolean isGutterDrag(float, float)
    {
        com.android.internal.widget.ViewPager r0;
        float f0, f1, $f2, $f3;
        int $i0, $i2, $i3, $i4;
        byte $b1, $b5, $b6, $b7;
        boolean z0;

        r0 := @this: com.android.internal.widget.ViewPager;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $i0 = r0.<com.android.internal.widget.ViewPager: int mGutterSize>;

        $f2 = (float) $i0;

        $b1 = f0 cmpg $f2;

        if $b1 >= 0 goto label1;

        $b7 = f1 cmpl 0.0F;

        if $b7 > 0 goto label2;

     label1:
        $i2 = virtualinvoke r0.<com.android.internal.widget.ViewPager: int getWidth()>();

        $i3 = r0.<com.android.internal.widget.ViewPager: int mGutterSize>;

        $i4 = $i2 - $i3;

        $f3 = (float) $i4;

        $b5 = f0 cmpl $f3;

        if $b5 <= 0 goto label3;

        $b6 = f1 cmpg 0.0F;

        if $b6 >= 0 goto label3;

     label2:
        z0 = 1;

        goto label4;

     label3:
        z0 = 0;

     label4:
        return z0;
    }

    private void onSecondaryPointerUp(android.view.MotionEvent)
    {
        com.android.internal.widget.ViewPager r0;
        int $i0, $i1, $i2, i3;
        float $f0;
        android.view.MotionEvent r1;
        byte b4;
        android.view.VelocityTracker r2;

        r0 := @this: com.android.internal.widget.ViewPager;

        r1 := @parameter0: android.view.MotionEvent;

        i3 = virtualinvoke r1.<android.view.MotionEvent: int getActionIndex()>();

        $i0 = virtualinvoke r1.<android.view.MotionEvent: int getPointerId(int)>(i3);

        $i1 = r0.<com.android.internal.widget.ViewPager: int mActivePointerId>;

        if $i0 != $i1 goto label3;

        if i3 != 0 goto label1;

        b4 = 1;

        goto label2;

     label1:
        b4 = 0;

     label2:
        $f0 = virtualinvoke r1.<android.view.MotionEvent: float getX(int)>(b4);

        r0.<com.android.internal.widget.ViewPager: float mLastMotionX> = $f0;

        $i2 = virtualinvoke r1.<android.view.MotionEvent: int getPointerId(int)>(b4);

        r0.<com.android.internal.widget.ViewPager: int mActivePointerId> = $i2;

        r2 = r0.<com.android.internal.widget.ViewPager: android.view.VelocityTracker mVelocityTracker>;

        if r2 == null goto label3;

        virtualinvoke r2.<android.view.VelocityTracker: void clear()>();

     label3:
        return;
    }

    private boolean pageScrolled(int)
    {
        com.android.internal.widget.ViewPager r0;
        com.android.internal.widget.ViewPager$ItemInfo r1;
        int i0, i1, i2, $i3, $i4, i5, i6;
        java.util.ArrayList $r2;
        boolean $z0, $z1, $z2;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, f11, f12;
        java.lang.IllegalStateException $r3, $r4;

        r0 := @this: com.android.internal.widget.ViewPager;

        i5 := @parameter0: int;

        $r2 = r0.<com.android.internal.widget.ViewPager: java.util.ArrayList mItems>;

        $i3 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if $i3 != 0 goto label2;

        r0.<com.android.internal.widget.ViewPager: boolean mCalledSuper> = 0;

        virtualinvoke r0.<com.android.internal.widget.ViewPager: void onPageScrolled(int,float,int)>(0, 0.0F, 0);

        $z2 = r0.<com.android.internal.widget.ViewPager: boolean mCalledSuper>;

        if $z2 == 0 goto label1;

        return 0;

     label1:
        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("onPageScrolled did not call superclass implementation");

        throw $r4;

     label2:
        $z0 = virtualinvoke r0.<com.android.internal.widget.ViewPager: boolean isLayoutRtl()>();

        if $z0 == 0 goto label3;

        i5 = 16777216 - i5;

        goto label3;

     label3:
        r1 = specialinvoke r0.<com.android.internal.widget.ViewPager: com.android.internal.widget.ViewPager$ItemInfo infoForFirstVisiblePage()>();

        i0 = specialinvoke r0.<com.android.internal.widget.ViewPager: int getPaddedWidth()>();

        i1 = r0.<com.android.internal.widget.ViewPager: int mPageMargin>;

        $f1 = (float) i1;

        $f0 = (float) i0;

        f11 = $f1 / $f0;

        i2 = r1.<com.android.internal.widget.ViewPager$ItemInfo: int position>;

        $f3 = (float) i5;

        $f2 = (float) i0;

        $f5 = $f3 / $f2;

        $f4 = r1.<com.android.internal.widget.ViewPager$ItemInfo: float offset>;

        $f8 = $f5 - $f4;

        $f6 = r1.<com.android.internal.widget.ViewPager$ItemInfo: float widthFactor>;

        $f7 = $f6 + f11;

        f12 = $f8 / $f7;

        $i4 = i0 + i1;

        $f9 = (float) $i4;

        $f10 = $f9 * f12;

        i6 = (int) $f10;

        r0.<com.android.internal.widget.ViewPager: boolean mCalledSuper> = 0;

        virtualinvoke r0.<com.android.internal.widget.ViewPager: void onPageScrolled(int,float,int)>(i2, f12, i6);

        $z1 = r0.<com.android.internal.widget.ViewPager: boolean mCalledSuper>;

        if $z1 == 0 goto label4;

        return 1;

     label4:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("onPageScrolled did not call superclass implementation");

        throw $r3;
    }

    private boolean performDrag(float)
    {
        com.android.internal.widget.ViewPager r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i10, $i11, $i12, $i13;
        boolean $z2, $z3, z5, z6, z7, $z8;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, f22, f23, f24, f25, f26;
        java.util.ArrayList $r1, r8;
        java.lang.Object $r2, $r3;
        com.android.internal.widget.PagerAdapter $r4;
        byte $b8, $b9;
        android.widget.EdgeEffect r5, r6;
        com.android.internal.widget.ViewPager$ItemInfo r7, r9;

        r0 := @this: com.android.internal.widget.ViewPager;

        f22 := @parameter0: float;

        z5 = 0;

        i0 = specialinvoke r0.<com.android.internal.widget.ViewPager: int getPaddedWidth()>();

        f23 = r0.<com.android.internal.widget.ViewPager: float mLastMotionX>;

        r0.<com.android.internal.widget.ViewPager: float mLastMotionX> = f22;

        $z2 = virtualinvoke r0.<com.android.internal.widget.ViewPager: boolean isLayoutRtl()>();

        if $z2 == 0 goto label01;

        r5 = r0.<com.android.internal.widget.ViewPager: android.widget.EdgeEffect mRightEdge>;

        r6 = r0.<com.android.internal.widget.ViewPager: android.widget.EdgeEffect mLeftEdge>;

        goto label02;

     label01:
        r5 = r0.<com.android.internal.widget.ViewPager: android.widget.EdgeEffect mLeftEdge>;

        r6 = r0.<com.android.internal.widget.ViewPager: android.widget.EdgeEffect mRightEdge>;

     label02:
        $i1 = virtualinvoke r0.<com.android.internal.widget.ViewPager: int getScrollX()>();

        $f1 = (float) $i1;

        $f0 = f23 - f22;

        f24 = $f1 + $f0;

        $z3 = virtualinvoke r0.<com.android.internal.widget.ViewPager: boolean isLayoutRtl()>();

        if $z3 == 0 goto label03;

        f24 = 1.6777216E7F - f24;

        goto label03;

     label03:
        $r1 = r0.<com.android.internal.widget.ViewPager: java.util.ArrayList mItems>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>(0);

        r7 = (com.android.internal.widget.ViewPager$ItemInfo) $r2;

        $i2 = r7.<com.android.internal.widget.ViewPager$ItemInfo: int position>;

        if $i2 != 0 goto label04;

        z6 = 1;

        goto label05;

     label04:
        z6 = 0;

     label05:
        if z6 == 0 goto label06;

        $f21 = r7.<com.android.internal.widget.ViewPager$ItemInfo: float offset>;

        $f20 = (float) i0;

        f25 = $f21 * $f20;

        goto label07;

     label06:
        $f3 = (float) i0;

        $f2 = r0.<com.android.internal.widget.ViewPager: float mFirstOffset>;

        f25 = $f3 * $f2;

     label07:
        r8 = r0.<com.android.internal.widget.ViewPager: java.util.ArrayList mItems>;

        $i3 = virtualinvoke r8.<java.util.ArrayList: int size()>();

        $i4 = $i3 - 1;

        $r3 = virtualinvoke r8.<java.util.ArrayList: java.lang.Object get(int)>($i4);

        r9 = (com.android.internal.widget.ViewPager$ItemInfo) $r3;

        $i5 = r9.<com.android.internal.widget.ViewPager$ItemInfo: int position>;

        $r4 = r0.<com.android.internal.widget.ViewPager: com.android.internal.widget.PagerAdapter mAdapter>;

        $i6 = virtualinvoke $r4.<com.android.internal.widget.PagerAdapter: int getCount()>();

        $i7 = $i6 - 1;

        if $i5 != $i7 goto label08;

        z7 = 1;

        goto label09;

     label08:
        z7 = 0;

     label09:
        if z7 == 0 goto label10;

        $f19 = r9.<com.android.internal.widget.ViewPager$ItemInfo: float offset>;

        $f18 = (float) i0;

        f26 = $f19 * $f18;

        goto label11;

     label10:
        $f5 = (float) i0;

        $f4 = r0.<com.android.internal.widget.ViewPager: float mLastOffset>;

        f26 = $f5 * $f4;

     label11:
        $b8 = f24 cmpg f25;

        if $b8 >= 0 goto label13;

        if z6 == 0 goto label12;

        $f14 = f25 - f24;

        $f15 = staticinvoke <java.lang.Math: float abs(float)>($f14);

        $f16 = (float) i0;

        $f17 = $f15 / $f16;

        virtualinvoke r5.<android.widget.EdgeEffect: void onPull(float)>($f17);

        z5 = 1;

     label12:
        f24 = f25;

        goto label16;

     label13:
        $b9 = f24 cmpl f26;

        if $b9 <= 0 goto label15;

        z5 = 0;

        if z7 == 0 goto label14;

        $f10 = f24 - f26;

        $f11 = staticinvoke <java.lang.Math: float abs(float)>($f10);

        $f12 = (float) i0;

        $f13 = $f11 / $f12;

        virtualinvoke r6.<android.widget.EdgeEffect: void onPull(float)>($f13);

        z5 = 1;

     label14:
        f24 = f26;

        goto label16;

     label15:
        z5 = 0;

     label16:
        $z8 = virtualinvoke r0.<com.android.internal.widget.ViewPager: boolean isLayoutRtl()>();

        if $z8 == 0 goto label17;

        f24 = 1.6777216E7F - f24;

        goto label17;

     label17:
        $f8 = r0.<com.android.internal.widget.ViewPager: float mLastMotionX>;

        $i10 = (int) f24;

        $f6 = (float) $i10;

        $f7 = f24 - $f6;

        $f9 = $f8 + $f7;

        r0.<com.android.internal.widget.ViewPager: float mLastMotionX> = $f9;

        $i11 = (int) f24;

        $i12 = virtualinvoke r0.<com.android.internal.widget.ViewPager: int getScrollY()>();

        virtualinvoke r0.<com.android.internal.widget.ViewPager: void scrollTo(int,int)>($i11, $i12);

        $i13 = (int) f24;

        specialinvoke r0.<com.android.internal.widget.ViewPager: boolean pageScrolled(int)>($i13);

        return z5;
    }

    private void recomputeScrollPosition(int, int, int, int)
    {
        com.android.internal.widget.ViewPager r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, i22, i23, i24, i25, i26, i27, i28, i29;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, f11, f12;
        java.util.ArrayList $r1;
        boolean $z0, $z1;
        android.widget.Scroller $r2, $r3, $r4, $r5;
        com.android.internal.widget.ViewPager$ItemInfo r6, r7;

        r0 := @this: com.android.internal.widget.ViewPager;

        i22 := @parameter0: int;

        i23 := @parameter1: int;

        i24 := @parameter2: int;

        i25 := @parameter3: int;

        if i23 <= 0 goto label2;

        $r1 = r0.<com.android.internal.widget.ViewPager: java.util.ArrayList mItems>;

        $z0 = virtualinvoke $r1.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        i0 = virtualinvoke r0.<com.android.internal.widget.ViewPager: int getPaddingLeft()>();

        i1 = virtualinvoke r0.<com.android.internal.widget.ViewPager: int getPaddingRight()>();

        i2 = virtualinvoke r0.<com.android.internal.widget.ViewPager: int getPaddingLeft()>();

        i3 = virtualinvoke r0.<com.android.internal.widget.ViewPager: int getPaddingRight()>();

        $i11 = virtualinvoke r0.<com.android.internal.widget.ViewPager: int getScrollX()>();

        $f5 = (float) $i11;

        $i12 = i23 - i2;

        $i13 = $i12 - i3;

        $i14 = $i13 + i25;

        $f4 = (float) $i14;

        f11 = $f5 / $f4;

        $i15 = i22 - i0;

        $i16 = $i15 - i1;

        $i17 = $i16 + i24;

        $f6 = (float) $i17;

        $f7 = $f6 * f11;

        i26 = (int) $f7;

        $i18 = virtualinvoke r0.<com.android.internal.widget.ViewPager: int getScrollY()>();

        virtualinvoke r0.<com.android.internal.widget.ViewPager: void scrollTo(int,int)>(i26, $i18);

        $r2 = r0.<com.android.internal.widget.ViewPager: android.widget.Scroller mScroller>;

        $z1 = virtualinvoke $r2.<android.widget.Scroller: boolean isFinished()>();

        if $z1 != 0 goto label1;

        $r3 = r0.<com.android.internal.widget.ViewPager: android.widget.Scroller mScroller>;

        i27 = virtualinvoke $r3.<android.widget.Scroller: int getDuration()>();

        $r4 = r0.<com.android.internal.widget.ViewPager: android.widget.Scroller mScroller>;

        i28 = virtualinvoke $r4.<android.widget.Scroller: int timePassed()>();

        $i19 = r0.<com.android.internal.widget.ViewPager: int mCurItem>;

        r6 = virtualinvoke r0.<com.android.internal.widget.ViewPager: com.android.internal.widget.ViewPager$ItemInfo infoForPosition(int)>($i19);

        $r5 = r0.<com.android.internal.widget.ViewPager: android.widget.Scroller mScroller>;

        $f9 = r6.<com.android.internal.widget.ViewPager$ItemInfo: float offset>;

        $f8 = (float) i22;

        $f10 = $f9 * $f8;

        $i21 = (int) $f10;

        $i20 = i27 - i28;

        virtualinvoke $r5.<android.widget.Scroller: void startScroll(int,int,int,int,int)>(i26, 0, $i21, 0, $i20);

     label1:
        goto label5;

     label2:
        $i4 = r0.<com.android.internal.widget.ViewPager: int mCurItem>;

        r7 = virtualinvoke r0.<com.android.internal.widget.ViewPager: com.android.internal.widget.ViewPager$ItemInfo infoForPosition(int)>($i4);

        if r7 == null goto label3;

        $f3 = r7.<com.android.internal.widget.ViewPager$ItemInfo: float offset>;

        $f2 = r0.<com.android.internal.widget.ViewPager: float mLastOffset>;

        f12 = staticinvoke <java.lang.Math: float min(float,float)>($f3, $f2);

        goto label4;

     label3:
        f12 = 0.0F;

     label4:
        $i5 = virtualinvoke r0.<com.android.internal.widget.ViewPager: int getPaddingLeft()>();

        $i6 = i22 - $i5;

        $i7 = virtualinvoke r0.<com.android.internal.widget.ViewPager: int getPaddingRight()>();

        $i8 = $i6 - $i7;

        $f0 = (float) $i8;

        $f1 = $f0 * f12;

        i29 = (int) $f1;

        $i9 = virtualinvoke r0.<com.android.internal.widget.ViewPager: int getScrollX()>();

        if i29 == $i9 goto label5;

        specialinvoke r0.<com.android.internal.widget.ViewPager: void completeScroll(boolean)>(0);

        $i10 = virtualinvoke r0.<com.android.internal.widget.ViewPager: int getScrollY()>();

        virtualinvoke r0.<com.android.internal.widget.ViewPager: void scrollTo(int,int)>(i29, $i10);

     label5:
        return;
    }

    private void removeNonDecorViews()
    {
        com.android.internal.widget.ViewPager r0;
        int $i0, i1, i2;
        android.view.View $r1;
        android.view.ViewGroup$LayoutParams $r2;
        com.android.internal.widget.ViewPager$LayoutParams $r3;
        boolean $z0;

        r0 := @this: com.android.internal.widget.ViewPager;

        i1 = 0;

     label1:
        $i0 = virtualinvoke r0.<com.android.internal.widget.ViewPager: int getChildCount()>();

        if i1 >= $i0 goto label3;

        i2 = i1;

        $r1 = virtualinvoke r0.<com.android.internal.widget.ViewPager: android.view.View getChildAt(int)>(i1);

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (com.android.internal.widget.ViewPager$LayoutParams) $r2;

        $z0 = $r3.<com.android.internal.widget.ViewPager$LayoutParams: boolean isDecor>;

        if $z0 != 0 goto label2;

        virtualinvoke r0.<com.android.internal.widget.ViewPager: void removeViewAt(int)>(i1);

        i2 = i1 - 1;

     label2:
        i1 = i2 + 1;

        goto label1;

     label3:
        return;
    }

    private void requestParentDisallowInterceptTouchEvent(boolean)
    {
        com.android.internal.widget.ViewPager r0;
        boolean z0;
        android.view.ViewParent r1;

        r0 := @this: com.android.internal.widget.ViewPager;

        z0 := @parameter0: boolean;

        r1 = virtualinvoke r0.<com.android.internal.widget.ViewPager: android.view.ViewParent getParent()>();

        if r1 == null goto label1;

        interfaceinvoke r1.<android.view.ViewParent: void requestDisallowInterceptTouchEvent(boolean)>(z0);

     label1:
        return;
    }

    private void scrollToItem(int, boolean, int, boolean)
    {
        com.android.internal.widget.ViewPager r0;
        int i0, i1, i2;
        boolean z0, z1;
        com.android.internal.widget.ViewPager$OnPageChangeListener r1, r2, r3, r4;

        r0 := @this: com.android.internal.widget.ViewPager;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        i1 := @parameter2: int;

        z1 := @parameter3: boolean;

        i2 = specialinvoke r0.<com.android.internal.widget.ViewPager: int getLeftEdgeForItem(int)>(i0);

        if z0 == 0 goto label2;

        virtualinvoke r0.<com.android.internal.widget.ViewPager: void smoothScrollTo(int,int,int)>(i2, 0, i1);

        if z1 == 0 goto label1;

        r1 = r0.<com.android.internal.widget.ViewPager: com.android.internal.widget.ViewPager$OnPageChangeListener mOnPageChangeListener>;

        if r1 == null goto label1;

        interfaceinvoke r1.<com.android.internal.widget.ViewPager$OnPageChangeListener: void onPageSelected(int)>(i0);

     label1:
        if z1 == 0 goto label5;

        r2 = r0.<com.android.internal.widget.ViewPager: com.android.internal.widget.ViewPager$OnPageChangeListener mInternalPageChangeListener>;

        if r2 == null goto label5;

        interfaceinvoke r2.<com.android.internal.widget.ViewPager$OnPageChangeListener: void onPageSelected(int)>(i0);

        goto label5;

     label2:
        if z1 == 0 goto label3;

        r3 = r0.<com.android.internal.widget.ViewPager: com.android.internal.widget.ViewPager$OnPageChangeListener mOnPageChangeListener>;

        if r3 == null goto label3;

        interfaceinvoke r3.<com.android.internal.widget.ViewPager$OnPageChangeListener: void onPageSelected(int)>(i0);

     label3:
        if z1 == 0 goto label4;

        r4 = r0.<com.android.internal.widget.ViewPager: com.android.internal.widget.ViewPager$OnPageChangeListener mInternalPageChangeListener>;

        if r4 == null goto label4;

        interfaceinvoke r4.<com.android.internal.widget.ViewPager$OnPageChangeListener: void onPageSelected(int)>(i0);

     label4:
        specialinvoke r0.<com.android.internal.widget.ViewPager: void completeScroll(boolean)>(0);

        virtualinvoke r0.<com.android.internal.widget.ViewPager: void scrollTo(int,int)>(i2, 0);

        specialinvoke r0.<com.android.internal.widget.ViewPager: boolean pageScrolled(int)>(i2);

     label5:
        return;
    }

    private void setScrollState(int)
    {
        com.android.internal.widget.ViewPager r0;
        int i0, $i1;
        com.android.internal.widget.ViewPager$OnPageChangeListener r1;
        com.android.internal.widget.ViewPager$PageTransformer $r2;
        boolean z0;

        r0 := @this: com.android.internal.widget.ViewPager;

        i0 := @parameter0: int;

        $i1 = r0.<com.android.internal.widget.ViewPager: int mScrollState>;

        if $i1 != i0 goto label1;

        return;

     label1:
        r0.<com.android.internal.widget.ViewPager: int mScrollState> = i0;

        $r2 = r0.<com.android.internal.widget.ViewPager: com.android.internal.widget.ViewPager$PageTransformer mPageTransformer>;

        if $r2 == null goto label4;

        if i0 == 0 goto label2;

        z0 = 1;

        goto label3;

     label2:
        z0 = 0;

     label3:
        specialinvoke r0.<com.android.internal.widget.ViewPager: void enableLayers(boolean)>(z0);

     label4:
        r1 = r0.<com.android.internal.widget.ViewPager: com.android.internal.widget.ViewPager$OnPageChangeListener mOnPageChangeListener>;

        if r1 == null goto label5;

        interfaceinvoke r1.<com.android.internal.widget.ViewPager$OnPageChangeListener: void onPageScrollStateChanged(int)>(i0);

     label5:
        return;
    }

    private void setScrollingCacheEnabled(boolean)
    {
        com.android.internal.widget.ViewPager r0;
        boolean z0, $z1;

        r0 := @this: com.android.internal.widget.ViewPager;

        z0 := @parameter0: boolean;

        $z1 = r0.<com.android.internal.widget.ViewPager: boolean mScrollingCacheEnabled>;

        if $z1 == z0 goto label1;

        r0.<com.android.internal.widget.ViewPager: boolean mScrollingCacheEnabled> = z0;

     label1:
        return;
    }

    private void sortChildDrawingOrder()
    {
        com.android.internal.widget.ViewPager r0;
        int i0, $i1, i2;
        com.android.internal.widget.ViewPager$ViewPositionComparator $r1;
        java.util.ArrayList $r2, $r3, $r4, r5;
        android.view.View r6;

        r0 := @this: com.android.internal.widget.ViewPager;

        $i1 = r0.<com.android.internal.widget.ViewPager: int mDrawingOrder>;

        if $i1 == 0 goto label5;

        r5 = r0.<com.android.internal.widget.ViewPager: java.util.ArrayList mDrawingOrderedChildren>;

        if r5 != null goto label1;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.widget.ViewPager: java.util.ArrayList mDrawingOrderedChildren> = $r4;

        goto label2;

     label1:
        virtualinvoke r5.<java.util.ArrayList: void clear()>();

     label2:
        i0 = virtualinvoke r0.<com.android.internal.widget.ViewPager: int getChildCount()>();

        i2 = 0;

     label3:
        if i2 >= i0 goto label4;

        r6 = virtualinvoke r0.<com.android.internal.widget.ViewPager: android.view.View getChildAt(int)>(i2);

        $r3 = r0.<com.android.internal.widget.ViewPager: java.util.ArrayList mDrawingOrderedChildren>;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r6);

        i2 = i2 + 1;

        goto label3;

     label4:
        $r2 = r0.<com.android.internal.widget.ViewPager: java.util.ArrayList mDrawingOrderedChildren>;

        $r1 = <com.android.internal.widget.ViewPager: com.android.internal.widget.ViewPager$ViewPositionComparator sPositionComparator>;

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r2, $r1);

     label5:
        return;
    }

    public void addFocusables(java.util.ArrayList, int, int)
    {
        com.android.internal.widget.ViewPager r0;
        java.util.ArrayList r1;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, i10;
        android.view.View r2;
        com.android.internal.widget.ViewPager$ItemInfo r3;
        boolean $z0, $z2, $z3;

        r0 := @this: com.android.internal.widget.ViewPager;

        r1 := @parameter0: java.util.ArrayList;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        i3 = virtualinvoke r0.<com.android.internal.widget.ViewPager: int getDescendantFocusability()>();

        if i3 == 393216 goto label3;

        i10 = 0;

     label1:
        $i6 = virtualinvoke r0.<com.android.internal.widget.ViewPager: int getChildCount()>();

        if i10 >= $i6 goto label3;

        r2 = virtualinvoke r0.<com.android.internal.widget.ViewPager: android.view.View getChildAt(int)>(i10);

        $i7 = virtualinvoke r2.<android.view.View: int getVisibility()>();

        if $i7 != 0 goto label2;

        r3 = virtualinvoke r0.<com.android.internal.widget.ViewPager: com.android.internal.widget.ViewPager$ItemInfo infoForChild(android.view.View)>(r2);

        if r3 == null goto label2;

        $i9 = r3.<com.android.internal.widget.ViewPager$ItemInfo: int position>;

        $i8 = r0.<com.android.internal.widget.ViewPager: int mCurItem>;

        if $i9 != $i8 goto label2;

        virtualinvoke r2.<android.view.View: void addFocusables(java.util.ArrayList,int,int)>(r1, i0, i1);

     label2:
        i10 = i10 + 1;

        goto label1;

     label3:
        if i3 != 262144 goto label4;

        $i5 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if i2 != $i5 goto label7;

     label4:
        $z0 = virtualinvoke r0.<com.android.internal.widget.ViewPager: boolean isFocusable()>();

        if $z0 != 0 goto label5;

        return;

     label5:
        $i4 = i1 & 1;

        if $i4 != 1 goto label6;

        $z2 = virtualinvoke r0.<com.android.internal.widget.ViewPager: boolean isInTouchMode()>();

        if $z2 == 0 goto label6;

        $z3 = virtualinvoke r0.<com.android.internal.widget.ViewPager: boolean isFocusableInTouchMode()>();

        if $z3 != 0 goto label6;

        return;

     label6:
        if r1 == null goto label7;

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r0);

     label7:
        return;
    }

    com.android.internal.widget.ViewPager$ItemInfo addNewItem(int, int)
    {
        com.android.internal.widget.ViewPager r0;
        int i0, i1, $i2;
        com.android.internal.widget.ViewPager$ItemInfo $r2;
        com.android.internal.widget.PagerAdapter $r3, $r5;
        java.lang.Object $r4;
        float $f0;
        java.util.ArrayList $r6, $r7, $r8;

        r0 := @this: com.android.internal.widget.ViewPager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = new com.android.internal.widget.ViewPager$ItemInfo;

        specialinvoke $r2.<com.android.internal.widget.ViewPager$ItemInfo: void <init>()>();

        $r2.<com.android.internal.widget.ViewPager$ItemInfo: int position> = i0;

        $r3 = r0.<com.android.internal.widget.ViewPager: com.android.internal.widget.PagerAdapter mAdapter>;

        $r4 = virtualinvoke $r3.<com.android.internal.widget.PagerAdapter: java.lang.Object instantiateItem(android.view.ViewGroup,int)>(r0, i0);

        $r2.<com.android.internal.widget.ViewPager$ItemInfo: java.lang.Object object> = $r4;

        $r5 = r0.<com.android.internal.widget.ViewPager: com.android.internal.widget.PagerAdapter mAdapter>;

        $f0 = virtualinvoke $r5.<com.android.internal.widget.PagerAdapter: float getPageWidth(int)>(i0);

        $r2.<com.android.internal.widget.ViewPager$ItemInfo: float widthFactor> = $f0;

        if i1 < 0 goto label2;

        $r7 = r0.<com.android.internal.widget.ViewPager: java.util.ArrayList mItems>;

        $i2 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        if i1 < $i2 goto label1;

        goto label2;

     label1:
        $r8 = r0.<com.android.internal.widget.ViewPager: java.util.ArrayList mItems>;

        virtualinvoke $r8.<java.util.ArrayList: void add(int,java.lang.Object)>(i1, $r2);

        goto label3;

     label2:
        $r6 = r0.<com.android.internal.widget.ViewPager: java.util.ArrayList mItems>;

        virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

     label3:
        return $r2;
    }

    public void addTouchables(java.util.ArrayList)
    {
        com.android.internal.widget.ViewPager r0;
        java.util.ArrayList r1;
        android.view.View r2;
        com.android.internal.widget.ViewPager$ItemInfo r3;
        int $i0, $i1, $i2, $i3, i4;

        r0 := @this: com.android.internal.widget.ViewPager;

        r1 := @parameter0: java.util.ArrayList;

        i4 = 0;

     label1:
        $i0 = virtualinvoke r0.<com.android.internal.widget.ViewPager: int getChildCount()>();

        if i4 >= $i0 goto label3;

        r2 = virtualinvoke r0.<com.android.internal.widget.ViewPager: android.view.View getChildAt(int)>(i4);

        $i1 = virtualinvoke r2.<android.view.View: int getVisibility()>();

        if $i1 != 0 goto label2;

        r3 = virtualinvoke r0.<com.android.internal.widget.ViewPager: com.android.internal.widget.ViewPager$ItemInfo infoForChild(android.view.View)>(r2);

        if r3 == null goto label2;

        $i3 = r3.<com.android.internal.widget.ViewPager$ItemInfo: int position>;

        $i2 = r0.<com.android.internal.widget.ViewPager: int mCurItem>;

        if $i3 != $i2 goto label2;

        virtualinvoke r2.<android.view.View: void addTouchables(java.util.ArrayList)>(r1);

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        return;
    }

    public void addView(android.view.View, int, android.view.ViewGroup$LayoutParams)
    {
        com.android.internal.widget.ViewPager r0;
        android.view.View r1;
        int i0;
        boolean $z0, $z1, $z2, $z3, $z4, $z6;
        java.lang.IllegalStateException $r2;
        android.view.ViewGroup$LayoutParams r3, r4;
        com.android.internal.widget.ViewPager$LayoutParams r5;

        r0 := @this: com.android.internal.widget.ViewPager;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        r3 := @parameter2: android.view.ViewGroup$LayoutParams;

        r4 = r3;

        $z0 = virtualinvoke r0.<com.android.internal.widget.ViewPager: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>(r3);

        if $z0 != 0 goto label1;

        r4 = virtualinvoke r0.<com.android.internal.widget.ViewPager: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>(r3);

     label1:
        r5 = (com.android.internal.widget.ViewPager$LayoutParams) r4;

        $z2 = r5.<com.android.internal.widget.ViewPager$LayoutParams: boolean isDecor>;

        $z1 = r1 instanceof com.android.internal.widget.ViewPager$Decor;

        $z3 = $z2 | $z1;

        r5.<com.android.internal.widget.ViewPager$LayoutParams: boolean isDecor> = $z3;

        $z4 = r0.<com.android.internal.widget.ViewPager: boolean mInLayout>;

        if $z4 == 0 goto label4;

        if r5 == null goto label3;

        $z6 = r5.<com.android.internal.widget.ViewPager$LayoutParams: boolean isDecor>;

        if $z6 != 0 goto label2;

        goto label3;

     label2:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot add pager decor view during layout");

        throw $r2;

     label3:
        r5.<com.android.internal.widget.ViewPager$LayoutParams: boolean needsMeasure> = 1;

        virtualinvoke r0.<com.android.internal.widget.ViewPager: boolean addViewInLayout(android.view.View,int,android.view.ViewGroup$LayoutParams)>(r1, i0, r4);

        goto label5;

     label4:
        specialinvoke r0.<android.view.ViewGroup: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>(r1, i0, r4);

     label5:
        return;
    }

    public boolean arrowScroll(int)
    {
        com.android.internal.widget.ViewPager r0;
        int i0, $i1, i3, i4, i5, i6;
        android.graphics.Rect $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        boolean $z1, $z2, z4, z5;
        java.lang.StringBuilder $r10, $r14;
        java.lang.Class $r11, $r20;
        java.lang.String $r12, $r16, $r18, $r21;
        android.view.View r23, r24, r29;
        android.view.ViewParent r25, r26;
        android.view.FocusFinder $r28;

        r0 := @this: com.android.internal.widget.ViewPager;

        i0 := @parameter0: int;

        r23 = virtualinvoke r0.<com.android.internal.widget.ViewPager: android.view.View findFocus()>();

        if r23 != r0 goto label01;

        r24 = null;

        goto label07;

     label01:
        r24 = r23;

        if r23 == null goto label07;

        r25 = virtualinvoke r23.<android.view.View: android.view.ViewParent getParent()>();

     label02:
        z4 = 0;

        $z1 = r25 instanceof android.view.ViewGroup;

        if $z1 == 0 goto label04;

        if r25 != r0 goto label03;

        z4 = 1;

        goto label04;

     label03:
        r25 = interfaceinvoke r25.<android.view.ViewParent: android.view.ViewParent getParent()>();

        goto label02;

     label04:
        r24 = r23;

        if z4 != 0 goto label07;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke r23.<java.lang.Object: java.lang.Class getClass()>();

        $r12 = virtualinvoke $r11.<java.lang.Class: java.lang.String getSimpleName()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        r26 = virtualinvoke r23.<android.view.View: android.view.ViewParent getParent()>();

     label05:
        $z2 = r26 instanceof android.view.ViewGroup;

        if $z2 == 0 goto label06;

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" => ");

        $r20 = virtualinvoke r26.<java.lang.Object: java.lang.Class getClass()>();

        $r21 = virtualinvoke $r20.<java.lang.Class: java.lang.String getSimpleName()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        r26 = interfaceinvoke r26.<android.view.ViewParent: android.view.ViewParent getParent()>();

        goto label05;

     label06:
        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("arrowScroll tried to find focus based on non-child current focused view ");

        $r16 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ViewPager", $r18);

        r24 = null;

     label07:
        z5 = 0;

        $r28 = staticinvoke <android.view.FocusFinder: android.view.FocusFinder getInstance()>();

        r29 = virtualinvoke $r28.<android.view.FocusFinder: android.view.View findNextFocus(android.view.ViewGroup,android.view.View,int)>(r0, r24, i0);

        if r29 == null goto label13;

        if r29 == r24 goto label13;

        if i0 != 17 goto label10;

        $r6 = r0.<com.android.internal.widget.ViewPager: android.graphics.Rect mTempRect>;

        $r7 = specialinvoke r0.<com.android.internal.widget.ViewPager: android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View)>($r6, r29);

        i3 = $r7.<android.graphics.Rect: int left>;

        $r8 = r0.<com.android.internal.widget.ViewPager: android.graphics.Rect mTempRect>;

        $r9 = specialinvoke r0.<com.android.internal.widget.ViewPager: android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View)>($r8, r24);

        i4 = $r9.<android.graphics.Rect: int left>;

        if r24 == null goto label08;

        if i3 < i4 goto label08;

        z5 = virtualinvoke r0.<com.android.internal.widget.ViewPager: boolean pageLeft()>();

        goto label09;

     label08:
        z5 = virtualinvoke r29.<android.view.View: boolean requestFocus()>();

     label09:
        goto label17;

     label10:
        if i0 != 66 goto label09;

        $r2 = r0.<com.android.internal.widget.ViewPager: android.graphics.Rect mTempRect>;

        $r3 = specialinvoke r0.<com.android.internal.widget.ViewPager: android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View)>($r2, r29);

        i5 = $r3.<android.graphics.Rect: int left>;

        $r4 = r0.<com.android.internal.widget.ViewPager: android.graphics.Rect mTempRect>;

        $r5 = specialinvoke r0.<com.android.internal.widget.ViewPager: android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View)>($r4, r24);

        i6 = $r5.<android.graphics.Rect: int left>;

        if r24 == null goto label11;

        if i5 > i6 goto label11;

        z5 = virtualinvoke r0.<com.android.internal.widget.ViewPager: boolean pageRight()>();

        goto label12;

     label11:
        z5 = virtualinvoke r29.<android.view.View: boolean requestFocus()>();

     label12:
        goto label17;

     label13:
        if i0 == 17 goto label16;

        if i0 != 1 goto label14;

        goto label16;

     label14:
        if i0 == 66 goto label15;

        z5 = 0;

        if i0 != 2 goto label17;

     label15:
        z5 = virtualinvoke r0.<com.android.internal.widget.ViewPager: boolean pageRight()>();

        goto label17;

     label16:
        z5 = virtualinvoke r0.<com.android.internal.widget.ViewPager: boolean pageLeft()>();

     label17:
        if z5 == 0 goto label18;

        $i1 = staticinvoke <android.view.SoundEffectConstants: int getContantForFocusDirection(int)>(i0);

        virtualinvoke r0.<com.android.internal.widget.ViewPager: void playSoundEffect(int)>($i1);

     label18:
        return z5;
    }

    protected boolean canScroll(android.view.View, boolean, int, int, int)
    {
        com.android.internal.widget.ViewPager r0;
        android.view.View r1, r3;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, i21;
        boolean z0, $z2, $z3, z4, z5;
        android.view.ViewGroup r2;

        r0 := @this: com.android.internal.widget.ViewPager;

        r1 := @parameter0: android.view.View;

        z4 := @parameter1: boolean;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        z0 = r1 instanceof android.view.ViewGroup;

        if z0 == 0 goto label3;

        r2 = (android.view.ViewGroup) r1;

        i3 = virtualinvoke r1.<android.view.View: int getScrollX()>();

        i4 = virtualinvoke r1.<android.view.View: int getScrollY()>();

        $i6 = virtualinvoke r2.<android.view.ViewGroup: int getChildCount()>();

        i21 = $i6 - 1;

     label1:
        if i21 < 0 goto label3;

        r3 = virtualinvoke r2.<android.view.ViewGroup: android.view.View getChildAt(int)>(i21);

        $i7 = i1 + i3;

        $i8 = virtualinvoke r3.<android.view.View: int getLeft()>();

        if $i7 < $i8 goto label2;

        $i9 = i1 + i3;

        $i10 = virtualinvoke r3.<android.view.View: int getRight()>();

        if $i9 >= $i10 goto label2;

        $i11 = i2 + i4;

        $i12 = virtualinvoke r3.<android.view.View: int getTop()>();

        if $i11 < $i12 goto label2;

        $i13 = i2 + i4;

        $i14 = virtualinvoke r3.<android.view.View: int getBottom()>();

        if $i13 >= $i14 goto label2;

        $i15 = i1 + i3;

        $i16 = virtualinvoke r3.<android.view.View: int getLeft()>();

        $i17 = $i15 - $i16;

        $i18 = i2 + i4;

        $i19 = virtualinvoke r3.<android.view.View: int getTop()>();

        $i20 = $i18 - $i19;

        $z3 = virtualinvoke r0.<com.android.internal.widget.ViewPager: boolean canScroll(android.view.View,boolean,int,int,int)>(r3, 1, i0, $i17, $i20);

        if $z3 == 0 goto label2;

        return 1;

     label2:
        i21 = i21 + -1;

        goto label1;

     label3:
        if z4 == 0 goto label4;

        $i5 = neg i0;

        $z2 = virtualinvoke r1.<android.view.View: boolean canScrollHorizontally(int)>($i5);

        if $z2 == 0 goto label4;

        z5 = 1;

        goto label5;

     label4:
        z5 = 0;

     label5:
        return z5;
    }

    public boolean canScrollHorizontally(int)
    {
        com.android.internal.widget.ViewPager r0;
        int i0, i1, i2, $i3, $i4;
        com.android.internal.widget.PagerAdapter r1;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        boolean z1, z2;

        r0 := @this: com.android.internal.widget.ViewPager;

        i0 := @parameter0: int;

        r1 = r0.<com.android.internal.widget.ViewPager: com.android.internal.widget.PagerAdapter mAdapter>;

        z1 = 0;

        if r1 != null goto label1;

        return 0;

     label1:
        i1 = specialinvoke r0.<com.android.internal.widget.ViewPager: int getPaddedWidth()>();

        i2 = virtualinvoke r0.<com.android.internal.widget.ViewPager: int getScrollX()>();

        if i0 >= 0 goto label3;

        $f4 = (float) i1;

        $f3 = r0.<com.android.internal.widget.ViewPager: float mFirstOffset>;

        $f5 = $f4 * $f3;

        $i4 = (int) $f5;

        if i2 <= $i4 goto label2;

        z1 = 1;

     label2:
        return z1;

     label3:
        if i0 <= 0 goto label5;

        z2 = 0;

        $f1 = (float) i1;

        $f0 = r0.<com.android.internal.widget.ViewPager: float mLastOffset>;

        $f2 = $f1 * $f0;

        $i3 = (int) $f2;

        if i2 >= $i3 goto label4;

        z2 = 1;

     label4:
        return z2;

     label5:
        return 0;
    }

    protected boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        com.android.internal.widget.ViewPager r0;
        android.view.ViewGroup$LayoutParams r1;
        boolean $z0, $z1, z2;

        r0 := @this: com.android.internal.widget.ViewPager;

        r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $z0 = r1 instanceof com.android.internal.widget.ViewPager$LayoutParams;

        if $z0 == 0 goto label1;

        $z1 = specialinvoke r0.<android.view.ViewGroup: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>(r1);

        if $z1 == 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;
    }

    public void computeScroll()
    {
        com.android.internal.widget.ViewPager r0;
        int i0, i1, i2, i3;
        android.widget.Scroller $r1, $r2, $r3, $r4, $r5;
        boolean $z0, $z1, $z2;

        r0 := @this: com.android.internal.widget.ViewPager;

        $r1 = r0.<com.android.internal.widget.ViewPager: android.widget.Scroller mScroller>;

        $z0 = virtualinvoke $r1.<android.widget.Scroller: boolean isFinished()>();

        if $z0 != 0 goto label3;

        $r2 = r0.<com.android.internal.widget.ViewPager: android.widget.Scroller mScroller>;

        $z1 = virtualinvoke $r2.<android.widget.Scroller: boolean computeScrollOffset()>();

        if $z1 == 0 goto label3;

        i0 = virtualinvoke r0.<com.android.internal.widget.ViewPager: int getScrollX()>();

        i1 = virtualinvoke r0.<com.android.internal.widget.ViewPager: int getScrollY()>();

        $r3 = r0.<com.android.internal.widget.ViewPager: android.widget.Scroller mScroller>;

        i2 = virtualinvoke $r3.<android.widget.Scroller: int getCurrX()>();

        $r4 = r0.<com.android.internal.widget.ViewPager: android.widget.Scroller mScroller>;

        i3 = virtualinvoke $r4.<android.widget.Scroller: int getCurrY()>();

        if i0 != i2 goto label1;

        if i1 == i3 goto label2;

     label1:
        virtualinvoke r0.<com.android.internal.widget.ViewPager: void scrollTo(int,int)>(i2, i3);

        $z2 = specialinvoke r0.<com.android.internal.widget.ViewPager: boolean pageScrolled(int)>(i2);

        if $z2 != 0 goto label2;

        $r5 = r0.<com.android.internal.widget.ViewPager: android.widget.Scroller mScroller>;

        virtualinvoke $r5.<android.widget.Scroller: void abortAnimation()>();

        virtualinvoke r0.<com.android.internal.widget.ViewPager: void scrollTo(int,int)>(0, i3);

     label2:
        virtualinvoke r0.<com.android.internal.widget.ViewPager: void postInvalidateOnAnimation()>();

        return;

     label3:
        specialinvoke r0.<com.android.internal.widget.ViewPager: void completeScroll(boolean)>(1);

        return;
    }

    void dataSetChanged()
    {
        com.android.internal.widget.ViewPager r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, i16, $i17, i18, i19, i20, i21, i22, i23;
        com.android.internal.widget.PagerAdapter $r1, $r7, $r11, $r15, $r16;
        java.util.ArrayList $r2, $r4, $r8, $r12, $r17, $r18;
        java.util.Comparator $r3;
        android.view.View $r5;
        android.view.ViewGroup$LayoutParams $r6;
        boolean $z1, z2, z3, z4, z5;
        java.lang.Object $r9, $r10, $r14;
        com.android.internal.widget.ViewPager$ItemInfo r19;
        com.android.internal.widget.ViewPager$LayoutParams r20;

        r0 := @this: com.android.internal.widget.ViewPager;

        $r1 = r0.<com.android.internal.widget.ViewPager: com.android.internal.widget.PagerAdapter mAdapter>;

        i0 = virtualinvoke $r1.<com.android.internal.widget.PagerAdapter: int getCount()>();

        r0.<com.android.internal.widget.ViewPager: int mExpectedAdapterCount> = i0;

        $r2 = r0.<com.android.internal.widget.ViewPager: java.util.ArrayList mItems>;

        $i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        $i2 = r0.<com.android.internal.widget.ViewPager: int mOffscreenPageLimit>;

        $i3 = $i2 * 2;

        $i4 = $i3 + 1;

        if $i1 >= $i4 goto label01;

        $r17 = r0.<com.android.internal.widget.ViewPager: java.util.ArrayList mItems>;

        $i14 = virtualinvoke $r17.<java.util.ArrayList: int size()>();

        if $i14 >= i0 goto label01;

        z2 = 1;

        goto label02;

     label01:
        z2 = 0;

     label02:
        i15 = r0.<com.android.internal.widget.ViewPager: int mCurItem>;

        z3 = 0;

        i16 = 0;

     label03:
        $r18 = r0.<com.android.internal.widget.ViewPager: java.util.ArrayList mItems>;

        $i17 = virtualinvoke $r18.<java.util.ArrayList: int size()>();

        if i16 >= $i17 goto label09;

        $r8 = r0.<com.android.internal.widget.ViewPager: java.util.ArrayList mItems>;

        $r9 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object get(int)>(i16);

        r19 = (com.android.internal.widget.ViewPager$ItemInfo) $r9;

        $r11 = r0.<com.android.internal.widget.ViewPager: com.android.internal.widget.PagerAdapter mAdapter>;

        $r10 = r19.<com.android.internal.widget.ViewPager$ItemInfo: java.lang.Object object>;

        i18 = virtualinvoke $r11.<com.android.internal.widget.PagerAdapter: int getItemPosition(java.lang.Object)>($r10);

        if i18 != -1 goto label04;

        i19 = i15;

        z4 = z3;

        i20 = i16;

        goto label08;

     label04:
        if i18 != -2 goto label06;

        $r12 = r0.<com.android.internal.widget.ViewPager: java.util.ArrayList mItems>;

        virtualinvoke $r12.<java.util.ArrayList: java.lang.Object remove(int)>(i16);

        i21 = i16 - 1;

        z5 = z3;

        if z3 != 0 goto label05;

        $r16 = r0.<com.android.internal.widget.ViewPager: com.android.internal.widget.PagerAdapter mAdapter>;

        virtualinvoke $r16.<com.android.internal.widget.PagerAdapter: void startUpdate(android.view.ViewGroup)>(r0);

        z5 = 1;

     label05:
        $r15 = r0.<com.android.internal.widget.ViewPager: com.android.internal.widget.PagerAdapter mAdapter>;

        $i8 = r19.<com.android.internal.widget.ViewPager$ItemInfo: int position>;

        $r14 = r19.<com.android.internal.widget.ViewPager$ItemInfo: java.lang.Object object>;

        virtualinvoke $r15.<com.android.internal.widget.PagerAdapter: void destroyItem(android.view.ViewGroup,int,java.lang.Object)>(r0, $i8, $r14);

        z2 = 1;

        i19 = i15;

        z4 = z5;

        i20 = i21;

        $i10 = r0.<com.android.internal.widget.ViewPager: int mCurItem>;

        $i9 = r19.<com.android.internal.widget.ViewPager$ItemInfo: int position>;

        if $i10 != $i9 goto label08;

        $i12 = r0.<com.android.internal.widget.ViewPager: int mCurItem>;

        $i11 = i0 - 1;

        $i13 = staticinvoke <java.lang.Math: int min(int,int)>($i12, $i11);

        i19 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i13);

        z2 = 1;

        z4 = z5;

        i20 = i21;

        goto label08;

     label06:
        i19 = i15;

        z4 = z3;

        i20 = i16;

        $i5 = r19.<com.android.internal.widget.ViewPager$ItemInfo: int position>;

        if $i5 == i18 goto label08;

        $i7 = r19.<com.android.internal.widget.ViewPager$ItemInfo: int position>;

        $i6 = r0.<com.android.internal.widget.ViewPager: int mCurItem>;

        if $i7 != $i6 goto label07;

        i15 = i18;

     label07:
        r19.<com.android.internal.widget.ViewPager$ItemInfo: int position> = i18;

        z2 = 1;

        i20 = i16;

        z4 = z3;

        i19 = i15;

     label08:
        i16 = i20 + 1;

        i15 = i19;

        z3 = z4;

        goto label03;

     label09:
        if z3 == 0 goto label10;

        $r7 = r0.<com.android.internal.widget.ViewPager: com.android.internal.widget.PagerAdapter mAdapter>;

        virtualinvoke $r7.<com.android.internal.widget.PagerAdapter: void finishUpdate(android.view.ViewGroup)>(r0);

     label10:
        $r4 = r0.<com.android.internal.widget.ViewPager: java.util.ArrayList mItems>;

        $r3 = <com.android.internal.widget.ViewPager: java.util.Comparator COMPARATOR>;

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r4, $r3);

        if z2 == 0 goto label14;

        i22 = virtualinvoke r0.<com.android.internal.widget.ViewPager: int getChildCount()>();

        i23 = 0;

     label11:
        if i23 >= i22 goto label13;

        $r5 = virtualinvoke r0.<com.android.internal.widget.ViewPager: android.view.View getChildAt(int)>(i23);

        $r6 = virtualinvoke $r5.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r20 = (com.android.internal.widget.ViewPager$LayoutParams) $r6;

        $z1 = r20.<com.android.internal.widget.ViewPager$LayoutParams: boolean isDecor>;

        if $z1 != 0 goto label12;

        r20.<com.android.internal.widget.ViewPager$LayoutParams: float widthFactor> = 0.0F;

     label12:
        i23 = i23 + 1;

        goto label11;

     label13:
        virtualinvoke r0.<com.android.internal.widget.ViewPager: boolean setCurrentItemInternal(int,boolean,boolean)>(i15, 0, 1);

        virtualinvoke r0.<com.android.internal.widget.ViewPager: void requestLayout()>();

     label14:
        return;
    }

    public boolean dispatchKeyEvent(android.view.KeyEvent)
    {
        com.android.internal.widget.ViewPager r0;
        android.view.KeyEvent r1;
        boolean $z0, $z1, z2;

        r0 := @this: com.android.internal.widget.ViewPager;

        r1 := @parameter0: android.view.KeyEvent;

        $z0 = specialinvoke r0.<android.view.ViewGroup: boolean dispatchKeyEvent(android.view.KeyEvent)>(r1);

        if $z0 != 0 goto label2;

        $z1 = virtualinvoke r0.<com.android.internal.widget.ViewPager: boolean executeKeyEvent(android.view.KeyEvent)>(r1);

        if $z1 == 0 goto label1;

        goto label2;

     label1:
        z2 = 0;

        goto label3;

     label2:
        z2 = 1;

     label3:
        return z2;
    }

    float distanceInfluenceForSnapDuration(float)
    {
        com.android.internal.widget.ViewPager r0;
        float f0, $f1, $f2, $f3;
        double $d0, $d1, $d2, $d3;

        r0 := @this: com.android.internal.widget.ViewPager;

        f0 := @parameter0: float;

        $f1 = f0 - 0.5F;

        $d0 = (double) $f1;

        $d1 = $d0 * 0.4712389167638204;

        $f2 = (float) $d1;

        $d2 = (double) $f2;

        $d3 = staticinvoke <java.lang.Math: double sin(double)>($d2);

        $f3 = (float) $d3;

        return $f3;
    }

    public void draw(android.graphics.Canvas)
    {
        com.android.internal.widget.ViewPager r0;
        android.graphics.Canvas r1;
        com.android.internal.widget.PagerAdapter r2;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, i16, i17, i18, i19, i20;
        android.widget.EdgeEffect $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        boolean $z0, $z1, $z2, $z3, z4, z5;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9;

        r0 := @this: com.android.internal.widget.ViewPager;

        r1 := @parameter0: android.graphics.Canvas;

        specialinvoke r0.<android.view.ViewGroup: void draw(android.graphics.Canvas)>(r1);

        z4 = 0;

        z5 = 0;

        i15 = virtualinvoke r0.<com.android.internal.widget.ViewPager: int getOverScrollMode()>();

        if i15 == 0 goto label2;

        if i15 != 1 goto label1;

        r2 = r0.<com.android.internal.widget.ViewPager: com.android.internal.widget.PagerAdapter mAdapter>;

        if r2 == null goto label1;

        $i14 = virtualinvoke r2.<com.android.internal.widget.PagerAdapter: int getCount()>();

        if $i14 <= 1 goto label1;

        goto label2;

     label1:
        $r9 = r0.<com.android.internal.widget.ViewPager: android.widget.EdgeEffect mLeftEdge>;

        virtualinvoke $r9.<android.widget.EdgeEffect: void finish()>();

        $r10 = r0.<com.android.internal.widget.ViewPager: android.widget.EdgeEffect mRightEdge>;

        virtualinvoke $r10.<android.widget.EdgeEffect: void finish()>();

        goto label4;

     label2:
        $r3 = r0.<com.android.internal.widget.ViewPager: android.widget.EdgeEffect mLeftEdge>;

        $z0 = virtualinvoke $r3.<android.widget.EdgeEffect: boolean isFinished()>();

        if $z0 != 0 goto label3;

        i16 = virtualinvoke r1.<android.graphics.Canvas: int save()>();

        $i7 = virtualinvoke r0.<com.android.internal.widget.ViewPager: int getHeight()>();

        $i8 = virtualinvoke r0.<com.android.internal.widget.ViewPager: int getPaddingTop()>();

        $i9 = $i7 - $i8;

        $i10 = virtualinvoke r0.<com.android.internal.widget.ViewPager: int getPaddingBottom()>();

        i17 = $i9 - $i10;

        i18 = virtualinvoke r0.<com.android.internal.widget.ViewPager: int getWidth()>();

        virtualinvoke r1.<android.graphics.Canvas: void rotate(float)>(270.0F);

        $i11 = neg i17;

        $i12 = virtualinvoke r0.<com.android.internal.widget.ViewPager: int getPaddingTop()>();

        $i13 = $i11 + $i12;

        $f9 = (float) $i13;

        $f7 = r0.<com.android.internal.widget.ViewPager: float mFirstOffset>;

        $f6 = (float) i18;

        $f8 = $f7 * $f6;

        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>($f9, $f8);

        $r7 = r0.<com.android.internal.widget.ViewPager: android.widget.EdgeEffect mLeftEdge>;

        virtualinvoke $r7.<android.widget.EdgeEffect: void setSize(int,int)>(i17, i18);

        $r8 = r0.<com.android.internal.widget.ViewPager: android.widget.EdgeEffect mLeftEdge>;

        $z3 = virtualinvoke $r8.<android.widget.EdgeEffect: boolean draw(android.graphics.Canvas)>(r1);

        z5 = 0 | $z3;

        virtualinvoke r1.<android.graphics.Canvas: void restoreToCount(int)>(i16);

     label3:
        z4 = z5;

        $r4 = r0.<com.android.internal.widget.ViewPager: android.widget.EdgeEffect mRightEdge>;

        $z1 = virtualinvoke $r4.<android.widget.EdgeEffect: boolean isFinished()>();

        if $z1 != 0 goto label4;

        i19 = virtualinvoke r1.<android.graphics.Canvas: int save()>();

        i20 = virtualinvoke r0.<com.android.internal.widget.ViewPager: int getWidth()>();

        i0 = virtualinvoke r0.<com.android.internal.widget.ViewPager: int getHeight()>();

        i1 = virtualinvoke r0.<com.android.internal.widget.ViewPager: int getPaddingTop()>();

        i2 = virtualinvoke r0.<com.android.internal.widget.ViewPager: int getPaddingBottom()>();

        virtualinvoke r1.<android.graphics.Canvas: void rotate(float)>(90.0F);

        $i3 = virtualinvoke r0.<com.android.internal.widget.ViewPager: int getPaddingTop()>();

        $i4 = neg $i3;

        $f5 = (float) $i4;

        $f0 = r0.<com.android.internal.widget.ViewPager: float mLastOffset>;

        $f1 = $f0 + 1.0F;

        $f3 = neg $f1;

        $f2 = (float) i20;

        $f4 = $f3 * $f2;

        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>($f5, $f4);

        $r5 = r0.<com.android.internal.widget.ViewPager: android.widget.EdgeEffect mRightEdge>;

        $i5 = i0 - i1;

        $i6 = $i5 - i2;

        virtualinvoke $r5.<android.widget.EdgeEffect: void setSize(int,int)>($i6, i20);

        $r6 = r0.<com.android.internal.widget.ViewPager: android.widget.EdgeEffect mRightEdge>;

        $z2 = virtualinvoke $r6.<android.widget.EdgeEffect: boolean draw(android.graphics.Canvas)>(r1);

        z4 = z5 | $z2;

        virtualinvoke r1.<android.graphics.Canvas: void restoreToCount(int)>(i19);

     label4:
        if z4 == 0 goto label5;

        virtualinvoke r0.<com.android.internal.widget.ViewPager: void postInvalidateOnAnimation()>();

     label5:
        return;
    }

    protected void drawableStateChanged()
    {
        com.android.internal.widget.ViewPager r0;
        android.graphics.drawable.Drawable r1;
        boolean $z0, $z1;
        int[] $r2;

        r0 := @this: com.android.internal.widget.ViewPager;

        specialinvoke r0.<android.view.ViewGroup: void drawableStateChanged()>();

        r1 = r0.<com.android.internal.widget.ViewPager: android.graphics.drawable.Drawable mMarginDrawable>;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<android.graphics.drawable.Drawable: boolean isStateful()>();

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<com.android.internal.widget.ViewPager: int[] getDrawableState()>();

        $z1 = virtualinvoke r1.<android.graphics.drawable.Drawable: boolean setState(int[])>($r2);

        if $z1 == 0 goto label1;

        virtualinvoke r0.<com.android.internal.widget.ViewPager: void invalidateDrawable(android.graphics.drawable.Drawable)>(r1);

     label1:
        return;
    }

    public boolean executeKeyEvent(android.view.KeyEvent)
    {
        com.android.internal.widget.ViewPager r0;
        android.view.KeyEvent r1;
        int i0, $i1;
        boolean $z1, $z2, z3;

        r0 := @this: com.android.internal.widget.ViewPager;

        r1 := @parameter0: android.view.KeyEvent;

        z3 = 0;

        $i1 = virtualinvoke r1.<android.view.KeyEvent: int getAction()>();

        if $i1 != 0 goto label5;

        i0 = virtualinvoke r1.<android.view.KeyEvent: int getKeyCode()>();

        if i0 == 21 goto label4;

        if i0 == 22 goto label3;

        if i0 == 61 goto label1;

        z3 = 0;

        goto label5;

     label1:
        $z1 = virtualinvoke r1.<android.view.KeyEvent: boolean hasNoModifiers()>();

        if $z1 == 0 goto label2;

        z3 = virtualinvoke r0.<com.android.internal.widget.ViewPager: boolean arrowScroll(int)>(2);

        goto label5;

     label2:
        z3 = 0;

        $z2 = virtualinvoke r1.<android.view.KeyEvent: boolean hasModifiers(int)>(1);

        if $z2 == 0 goto label5;

        z3 = virtualinvoke r0.<com.android.internal.widget.ViewPager: boolean arrowScroll(int)>(1);

        goto label5;

     label3:
        z3 = virtualinvoke r0.<com.android.internal.widget.ViewPager: boolean arrowScroll(int)>(66);

        goto label5;

     label4:
        z3 = virtualinvoke r0.<com.android.internal.widget.ViewPager: boolean arrowScroll(int)>(17);

     label5:
        return z3;
    }

    protected android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
    {
        com.android.internal.widget.ViewPager r0;
        com.android.internal.widget.ViewPager$LayoutParams $r1;

        r0 := @this: com.android.internal.widget.ViewPager;

        $r1 = new com.android.internal.widget.ViewPager$LayoutParams;

        specialinvoke $r1.<com.android.internal.widget.ViewPager$LayoutParams: void <init>()>();

        return $r1;
    }

    public android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        com.android.internal.widget.ViewPager r0;
        android.util.AttributeSet r1;
        com.android.internal.widget.ViewPager$LayoutParams $r2;
        android.content.Context $r3;

        r0 := @this: com.android.internal.widget.ViewPager;

        r1 := @parameter0: android.util.AttributeSet;

        $r2 = new com.android.internal.widget.ViewPager$LayoutParams;

        $r3 = virtualinvoke r0.<com.android.internal.widget.ViewPager: android.content.Context getContext()>();

        specialinvoke $r2.<com.android.internal.widget.ViewPager$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>($r3, r1);

        return $r2;
    }

    protected android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        com.android.internal.widget.ViewPager r0;
        android.view.ViewGroup$LayoutParams r1, $r2;

        r0 := @this: com.android.internal.widget.ViewPager;

        r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $r2 = virtualinvoke r0.<com.android.internal.widget.ViewPager: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()>();

        return $r2;
    }

    public com.android.internal.widget.PagerAdapter getAdapter()
    {
        com.android.internal.widget.ViewPager r0;
        com.android.internal.widget.PagerAdapter $r1;

        r0 := @this: com.android.internal.widget.ViewPager;

        $r1 = r0.<com.android.internal.widget.ViewPager: com.android.internal.widget.PagerAdapter mAdapter>;

        return $r1;
    }

    protected int getChildDrawingOrder(int, int)
    {
        com.android.internal.widget.ViewPager r0;
        int i0, $i1, $i2, $i3, i4;
        java.util.ArrayList $r1;
        java.lang.Object $r2;
        android.view.View $r3;
        android.view.ViewGroup$LayoutParams $r4;
        com.android.internal.widget.ViewPager$LayoutParams $r5;

        r0 := @this: com.android.internal.widget.ViewPager;

        i0 := @parameter0: int;

        i4 := @parameter1: int;

        $i1 = r0.<com.android.internal.widget.ViewPager: int mDrawingOrder>;

        if $i1 != 2 goto label1;

        $i3 = i0 - 1;

        i4 = $i3 - i4;

        goto label1;

     label1:
        $r1 = r0.<com.android.internal.widget.ViewPager: java.util.ArrayList mDrawingOrderedChildren>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        $r3 = (android.view.View) $r2;

        $r4 = virtualinvoke $r3.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r5 = (com.android.internal.widget.ViewPager$LayoutParams) $r4;

        $i2 = $r5.<com.android.internal.widget.ViewPager$LayoutParams: int childIndex>;

        return $i2;
    }

    public java.lang.Object getCurrent()
    {
        com.android.internal.widget.ViewPager r0;
        int $i0;
        com.android.internal.widget.ViewPager$ItemInfo r1;
        java.lang.Object r2;

        r0 := @this: com.android.internal.widget.ViewPager;

        $i0 = virtualinvoke r0.<com.android.internal.widget.ViewPager: int getCurrentItem()>();

        r1 = virtualinvoke r0.<com.android.internal.widget.ViewPager: com.android.internal.widget.ViewPager$ItemInfo infoForPosition(int)>($i0);

        if r1 != null goto label1;

        r2 = null;

        goto label2;

     label1:
        r2 = r1.<com.android.internal.widget.ViewPager$ItemInfo: java.lang.Object object>;

     label2:
        return r2;
    }

    public int getCurrentItem()
    {
        com.android.internal.widget.ViewPager r0;
        int $i0;

        r0 := @this: com.android.internal.widget.ViewPager;

        $i0 = r0.<com.android.internal.widget.ViewPager: int mCurItem>;

        return $i0;
    }

    public int getOffscreenPageLimit()
    {
        com.android.internal.widget.ViewPager r0;
        int $i0;

        r0 := @this: com.android.internal.widget.ViewPager;

        $i0 = r0.<com.android.internal.widget.ViewPager: int mOffscreenPageLimit>;

        return $i0;
    }

    public int getPageMargin()
    {
        com.android.internal.widget.ViewPager r0;
        int $i0;

        r0 := @this: com.android.internal.widget.ViewPager;

        $i0 = r0.<com.android.internal.widget.ViewPager: int mPageMargin>;

        return $i0;
    }

    com.android.internal.widget.ViewPager$ItemInfo infoForAnyChild(android.view.View)
    {
        com.android.internal.widget.ViewPager r0;
        android.view.ViewParent r1;
        com.android.internal.widget.ViewPager$ItemInfo $r2;
        boolean $z0;
        android.view.View r3;

        r0 := @this: com.android.internal.widget.ViewPager;

        r3 := @parameter0: android.view.View;

     label1:
        r1 = virtualinvoke r3.<android.view.View: android.view.ViewParent getParent()>();

        if r1 == r0 goto label4;

        if r1 == null goto label3;

        $z0 = r1 instanceof android.view.View;

        if $z0 != 0 goto label2;

        goto label3;

     label2:
        r3 = (android.view.View) r1;

        goto label1;

     label3:
        return null;

     label4:
        $r2 = virtualinvoke r0.<com.android.internal.widget.ViewPager: com.android.internal.widget.ViewPager$ItemInfo infoForChild(android.view.View)>(r3);

        return $r2;
    }

    com.android.internal.widget.ViewPager$ItemInfo infoForChild(android.view.View)
    {
        com.android.internal.widget.ViewPager r0;
        android.view.View r1;
        com.android.internal.widget.ViewPager$ItemInfo r2;
        java.util.ArrayList $r3, $r4;
        int $i0, i1;
        java.lang.Object $r5, $r6;
        com.android.internal.widget.PagerAdapter $r7;
        boolean $z0;

        r0 := @this: com.android.internal.widget.ViewPager;

        r1 := @parameter0: android.view.View;

        i1 = 0;

     label1:
        $r3 = r0.<com.android.internal.widget.ViewPager: java.util.ArrayList mItems>;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if i1 >= $i0 goto label3;

        $r4 = r0.<com.android.internal.widget.ViewPager: java.util.ArrayList mItems>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r2 = (com.android.internal.widget.ViewPager$ItemInfo) $r5;

        $r7 = r0.<com.android.internal.widget.ViewPager: com.android.internal.widget.PagerAdapter mAdapter>;

        $r6 = r2.<com.android.internal.widget.ViewPager$ItemInfo: java.lang.Object object>;

        $z0 = virtualinvoke $r7.<com.android.internal.widget.PagerAdapter: boolean isViewFromObject(android.view.View,java.lang.Object)>(r1, $r6);

        if $z0 == 0 goto label2;

        return r2;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return null;
    }

    com.android.internal.widget.ViewPager$ItemInfo infoForPosition(int)
    {
        com.android.internal.widget.ViewPager r0;
        int i0, $i1, $i2, i3;
        com.android.internal.widget.ViewPager$ItemInfo r1;
        java.util.ArrayList $r2, $r3;
        java.lang.Object $r4;

        r0 := @this: com.android.internal.widget.ViewPager;

        i0 := @parameter0: int;

        i3 = 0;

     label1:
        $r2 = r0.<com.android.internal.widget.ViewPager: java.util.ArrayList mItems>;

        $i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if i3 >= $i1 goto label3;

        $r3 = r0.<com.android.internal.widget.ViewPager: java.util.ArrayList mItems>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r1 = (com.android.internal.widget.ViewPager$ItemInfo) $r4;

        $i2 = r1.<com.android.internal.widget.ViewPager$ItemInfo: int position>;

        if $i2 != i0 goto label2;

        return r1;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return null;
    }

    protected void onAttachedToWindow()
    {
        com.android.internal.widget.ViewPager r0;

        r0 := @this: com.android.internal.widget.ViewPager;

        specialinvoke r0.<android.view.ViewGroup: void onAttachedToWindow()>();

        r0.<com.android.internal.widget.ViewPager: boolean mFirstLayout> = 1;

        return;
    }

    protected void onDetachedFromWindow()
    {
        com.android.internal.widget.ViewPager r0;
        java.lang.Runnable $r1;

        r0 := @this: com.android.internal.widget.ViewPager;

        $r1 = r0.<com.android.internal.widget.ViewPager: java.lang.Runnable mEndScrollRunnable>;

        virtualinvoke r0.<com.android.internal.widget.ViewPager: boolean removeCallbacks(java.lang.Runnable)>($r1);

        specialinvoke r0.<android.view.ViewGroup: void onDetachedFromWindow()>();

        return;
    }

    protected void onDraw(android.graphics.Canvas)
    {
        com.android.internal.widget.ViewPager r0;
        android.graphics.Canvas r1;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i12, $i14, $i15, $i16, $i17, i18, i19;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, f14, f15, f16, f17;
        android.graphics.drawable.Drawable $r2, $r12, $r13;
        java.util.ArrayList $r3, $r5, $r7, $r8, r16;
        com.android.internal.widget.PagerAdapter $r4, $r11;
        java.lang.Object $r6, $r9, $r14;
        com.android.internal.widget.ViewPager$ItemInfo $r10, r15;
        boolean $z0;
        byte $b11, $b13;

        r0 := @this: com.android.internal.widget.ViewPager;

        r1 := @parameter0: android.graphics.Canvas;

        specialinvoke r0.<android.view.ViewGroup: void onDraw(android.graphics.Canvas)>(r1);

        $i5 = r0.<com.android.internal.widget.ViewPager: int mPageMargin>;

        if $i5 <= 0 goto label11;

        $r2 = r0.<com.android.internal.widget.ViewPager: android.graphics.drawable.Drawable mMarginDrawable>;

        if $r2 == null goto label11;

        $r3 = r0.<com.android.internal.widget.ViewPager: java.util.ArrayList mItems>;

        $i6 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if $i6 <= 0 goto label11;

        $r4 = r0.<com.android.internal.widget.ViewPager: com.android.internal.widget.PagerAdapter mAdapter>;

        if $r4 == null goto label11;

        i0 = virtualinvoke r0.<com.android.internal.widget.ViewPager: int getScrollX()>();

        i1 = virtualinvoke r0.<com.android.internal.widget.ViewPager: int getWidth()>();

        $i7 = r0.<com.android.internal.widget.ViewPager: int mPageMargin>;

        $f2 = (float) $i7;

        $f1 = (float) i1;

        f0 = $f2 / $f1;

        i18 = 0;

        $r5 = r0.<com.android.internal.widget.ViewPager: java.util.ArrayList mItems>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(0);

        r15 = (com.android.internal.widget.ViewPager$ItemInfo) $r6;

        f14 = r15.<com.android.internal.widget.ViewPager$ItemInfo: float offset>;

        $r7 = r0.<com.android.internal.widget.ViewPager: java.util.ArrayList mItems>;

        i2 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        i19 = r15.<com.android.internal.widget.ViewPager$ItemInfo: int position>;

        $r8 = r0.<com.android.internal.widget.ViewPager: java.util.ArrayList mItems>;

        $i8 = i2 - 1;

        $r9 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object get(int)>($i8);

        $r10 = (com.android.internal.widget.ViewPager$ItemInfo) $r9;

        i3 = $r10.<com.android.internal.widget.ViewPager$ItemInfo: int position>;

     label01:
        if i19 >= i3 goto label10;

     label02:
        $i9 = r15.<com.android.internal.widget.ViewPager$ItemInfo: int position>;

        if i19 <= $i9 goto label03;

        if i18 >= i2 goto label03;

        r16 = r0.<com.android.internal.widget.ViewPager: java.util.ArrayList mItems>;

        i18 = i18 + 1;

        $r14 = virtualinvoke r16.<java.util.ArrayList: java.lang.Object get(int)>(i18);

        r15 = (com.android.internal.widget.ViewPager$ItemInfo) $r14;

        goto label02;

     label03:
        $i10 = r15.<com.android.internal.widget.ViewPager$ItemInfo: int position>;

        if i19 != $i10 goto label04;

        f14 = r15.<com.android.internal.widget.ViewPager$ItemInfo: float offset>;

        f15 = r15.<com.android.internal.widget.ViewPager$ItemInfo: float widthFactor>;

        goto label05;

     label04:
        $r11 = r0.<com.android.internal.widget.ViewPager: com.android.internal.widget.PagerAdapter mAdapter>;

        f15 = virtualinvoke $r11.<com.android.internal.widget.PagerAdapter: float getPageWidth(int)>(i19);

     label05:
        $f3 = (float) i1;

        f16 = $f3 * f14;

        $z0 = virtualinvoke r0.<com.android.internal.widget.ViewPager: boolean isLayoutRtl()>();

        if $z0 == 0 goto label06;

        f17 = 1.6777216E7F - f16;

        goto label07;

     label06:
        $f4 = (float) i1;

        $f5 = $f4 * f15;

        f17 = $f5 + f16;

     label07:
        $f6 = f14 + f15;

        f14 = $f6 + f0;

        i4 = r0.<com.android.internal.widget.ViewPager: int mPageMargin>;

        $f7 = (float) i4;

        $f9 = $f7 + f17;

        $f8 = (float) i0;

        $b11 = $f9 cmpl $f8;

        if $b11 <= 0 goto label08;

        $r12 = r0.<com.android.internal.widget.ViewPager: android.graphics.drawable.Drawable mMarginDrawable>;

        $i17 = (int) f17;

        $i16 = r0.<com.android.internal.widget.ViewPager: int mTopPageBounds>;

        $f11 = (float) i4;

        $f12 = $f11 + f17;

        $f13 = $f12 + 0.5F;

        $i15 = (int) $f13;

        $i14 = r0.<com.android.internal.widget.ViewPager: int mBottomPageBounds>;

        virtualinvoke $r12.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>($i17, $i16, $i15, $i14);

        $r13 = r0.<com.android.internal.widget.ViewPager: android.graphics.drawable.Drawable mMarginDrawable>;

        virtualinvoke $r13.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

        goto label08;

     label08:
        $i12 = i0 + i1;

        $f10 = (float) $i12;

        $b13 = f17 cmpl $f10;

        if $b13 <= 0 goto label09;

        goto label11;

     label09:
        i19 = i19 + 1;

        goto label01;

     label10:
        goto label11;

     label11:
        return;
    }

    public void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        com.android.internal.widget.ViewPager r0;
        android.view.accessibility.AccessibilityEvent r1;
        com.android.internal.widget.PagerAdapter r2;
        java.lang.Class $r3;
        java.lang.String $r4;
        boolean $z0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: com.android.internal.widget.ViewPager;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        specialinvoke r0.<android.view.ViewGroup: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>(r1);

        $r3 = class "Lcom/android/internal/widget/ViewPager;";

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setClassName(java.lang.CharSequence)>($r4);

        $z0 = specialinvoke r0.<com.android.internal.widget.ViewPager: boolean canScroll()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setScrollable(boolean)>($z0);

        $i0 = virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: int getEventType()>();

        if $i0 != 4096 goto label1;

        r2 = r0.<com.android.internal.widget.ViewPager: com.android.internal.widget.PagerAdapter mAdapter>;

        if r2 == null goto label1;

        $i1 = virtualinvoke r2.<com.android.internal.widget.PagerAdapter: int getCount()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setItemCount(int)>($i1);

        $i2 = r0.<com.android.internal.widget.ViewPager: int mCurItem>;

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setFromIndex(int)>($i2);

        $i3 = r0.<com.android.internal.widget.ViewPager: int mCurItem>;

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setToIndex(int)>($i3);

     label1:
        return;
    }

    public void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
    {
        com.android.internal.widget.ViewPager r0;
        android.view.accessibility.AccessibilityNodeInfo r1;
        java.lang.Class $r2;
        java.lang.String $r3;
        boolean $z0, $z1, $z2;
        android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction $r4, $r5, $r6, $r7;

        r0 := @this: com.android.internal.widget.ViewPager;

        r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        specialinvoke r0.<android.view.ViewGroup: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>(r1);

        $r2 = class "Lcom/android/internal/widget/ViewPager;";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setClassName(java.lang.CharSequence)>($r3);

        $z0 = specialinvoke r0.<com.android.internal.widget.ViewPager: boolean canScroll()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setScrollable(boolean)>($z0);

        $z1 = virtualinvoke r0.<com.android.internal.widget.ViewPager: boolean canScrollHorizontally(int)>(1);

        if $z1 == 0 goto label1;

        $r6 = <android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction: android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction ACTION_SCROLL_FORWARD>;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void addAction(android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction)>($r6);

        $r7 = <android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction: android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction ACTION_SCROLL_RIGHT>;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void addAction(android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction)>($r7);

     label1:
        $z2 = virtualinvoke r0.<com.android.internal.widget.ViewPager: boolean canScrollHorizontally(int)>(-1);

        if $z2 == 0 goto label2;

        $r4 = <android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction: android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction ACTION_SCROLL_BACKWARD>;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void addAction(android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction)>($r4);

        $r5 = <android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction: android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction ACTION_SCROLL_LEFT>;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void addAction(android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction)>($r5);

     label2:
        return;
    }

    public boolean onInterceptTouchEvent(android.view.MotionEvent)
    {
        com.android.internal.widget.ViewPager r0;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, f14, $f15, f16, f17, f18;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i9, $i13, $i14, $i15, $i16, $i17, i18, i19, i20, $i21;
        android.widget.Scroller $r1, $r4, $r5, $r6;
        android.view.VelocityTracker $r2, $r3, $r8, r9;
        boolean $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        byte $b8, $b10, $b11, $b12, $b22;
        android.view.MotionEvent r7;

        r0 := @this: com.android.internal.widget.ViewPager;

        r7 := @parameter0: android.view.MotionEvent;

        $i0 = virtualinvoke r7.<android.view.MotionEvent: int getAction()>();

        i18 = $i0 & 255;

        if i18 == 3 goto label16;

        if i18 != 1 goto label01;

        goto label16;

     label01:
        if i18 == 0 goto label03;

        $z5 = r0.<com.android.internal.widget.ViewPager: boolean mIsBeingDragged>;

        if $z5 == 0 goto label02;

        return 1;

     label02:
        $z6 = r0.<com.android.internal.widget.ViewPager: boolean mIsUnableToDrag>;

        if $z6 == 0 goto label03;

        return 0;

     label03:
        if i18 == 0 goto label12;

        if i18 == 2 goto label05;

        if i18 == 6 goto label04;

        goto label14;

     label04:
        specialinvoke r0.<com.android.internal.widget.ViewPager: void onSecondaryPointerUp(android.view.MotionEvent)>(r7);

        goto label14;

     label05:
        i19 = r0.<com.android.internal.widget.ViewPager: int mActivePointerId>;

        if i19 != -1 goto label06;

        goto label14;

     label06:
        i20 = virtualinvoke r7.<android.view.MotionEvent: int findPointerIndex(int)>(i19);

        f0 = virtualinvoke r7.<android.view.MotionEvent: float getX(int)>(i20);

        $f4 = r0.<com.android.internal.widget.ViewPager: float mLastMotionX>;

        f1 = f0 - $f4;

        f14 = staticinvoke <java.lang.Math: float abs(float)>(f1);

        f2 = virtualinvoke r7.<android.view.MotionEvent: float getY(int)>(i20);

        $f5 = r0.<com.android.internal.widget.ViewPager: float mInitialMotionY>;

        $f6 = f2 - $f5;

        f3 = staticinvoke <java.lang.Math: float abs(float)>($f6);

        $b8 = f1 cmpl 0.0F;

        if $b8 == 0 goto label07;

        $f13 = r0.<com.android.internal.widget.ViewPager: float mLastMotionX>;

        $z3 = specialinvoke r0.<com.android.internal.widget.ViewPager: boolean isGutterDrag(float,float)>($f13, f1);

        if $z3 != 0 goto label07;

        $i17 = (int) f1;

        $i16 = (int) f0;

        $i15 = (int) f2;

        $z4 = virtualinvoke r0.<com.android.internal.widget.ViewPager: boolean canScroll(android.view.View,boolean,int,int,int)>(r0, 0, $i17, $i16, $i15);

        if $z4 == 0 goto label07;

        r0.<com.android.internal.widget.ViewPager: float mLastMotionX> = f0;

        r0.<com.android.internal.widget.ViewPager: float mLastMotionY> = f2;

        r0.<com.android.internal.widget.ViewPager: boolean mIsUnableToDrag> = 1;

        return 0;

     label07:
        $i21 = r0.<com.android.internal.widget.ViewPager: int mTouchSlop>;

        $f15 = (float) $i21;

        $b22 = f14 cmpl $f15;

        if $b22 <= 0 goto label10;

        $f8 = 0.5F * f14;

        $b11 = $f8 cmpl f3;

        if $b11 <= 0 goto label10;

        r0.<com.android.internal.widget.ViewPager: boolean mIsBeingDragged> = 1;

        specialinvoke r0.<com.android.internal.widget.ViewPager: void requestParentDisallowInterceptTouchEvent(boolean)>(1);

        specialinvoke r0.<com.android.internal.widget.ViewPager: void setScrollState(int)>(1);

        $b12 = f1 cmpl 0.0F;

        if $b12 <= 0 goto label08;

        $f12 = r0.<com.android.internal.widget.ViewPager: float mInitialMotionX>;

        $i14 = r0.<com.android.internal.widget.ViewPager: int mTouchSlop>;

        $f11 = (float) $i14;

        f16 = $f12 + $f11;

        goto label09;

     label08:
        $f10 = r0.<com.android.internal.widget.ViewPager: float mInitialMotionX>;

        $i13 = r0.<com.android.internal.widget.ViewPager: int mTouchSlop>;

        $f9 = (float) $i13;

        f16 = $f10 - $f9;

     label09:
        r0.<com.android.internal.widget.ViewPager: float mLastMotionX> = f16;

        r0.<com.android.internal.widget.ViewPager: float mLastMotionY> = f2;

        specialinvoke r0.<com.android.internal.widget.ViewPager: void setScrollingCacheEnabled(boolean)>(1);

        goto label11;

     label10:
        $i9 = r0.<com.android.internal.widget.ViewPager: int mTouchSlop>;

        $f7 = (float) $i9;

        $b10 = f3 cmpl $f7;

        if $b10 <= 0 goto label11;

        r0.<com.android.internal.widget.ViewPager: boolean mIsUnableToDrag> = 1;

     label11:
        $z7 = r0.<com.android.internal.widget.ViewPager: boolean mIsBeingDragged>;

        if $z7 == 0 goto label14;

        $z2 = specialinvoke r0.<com.android.internal.widget.ViewPager: boolean performDrag(float)>(f0);

        if $z2 == 0 goto label14;

        virtualinvoke r0.<com.android.internal.widget.ViewPager: void postInvalidateOnAnimation()>();

        goto label14;

     label12:
        f17 = virtualinvoke r7.<android.view.MotionEvent: float getX()>();

        r0.<com.android.internal.widget.ViewPager: float mInitialMotionX> = f17;

        r0.<com.android.internal.widget.ViewPager: float mLastMotionX> = f17;

        f18 = virtualinvoke r7.<android.view.MotionEvent: float getY()>();

        r0.<com.android.internal.widget.ViewPager: float mInitialMotionY> = f18;

        r0.<com.android.internal.widget.ViewPager: float mLastMotionY> = f18;

        $i1 = virtualinvoke r7.<android.view.MotionEvent: int getPointerId(int)>(0);

        r0.<com.android.internal.widget.ViewPager: int mActivePointerId> = $i1;

        r0.<com.android.internal.widget.ViewPager: boolean mIsUnableToDrag> = 0;

        $r1 = r0.<com.android.internal.widget.ViewPager: android.widget.Scroller mScroller>;

        virtualinvoke $r1.<android.widget.Scroller: boolean computeScrollOffset()>();

        $i2 = r0.<com.android.internal.widget.ViewPager: int mScrollState>;

        if $i2 != 2 goto label13;

        $r4 = r0.<com.android.internal.widget.ViewPager: android.widget.Scroller mScroller>;

        $i3 = virtualinvoke $r4.<android.widget.Scroller: int getFinalX()>();

        $r5 = r0.<com.android.internal.widget.ViewPager: android.widget.Scroller mScroller>;

        $i4 = virtualinvoke $r5.<android.widget.Scroller: int getCurrX()>();

        $i5 = $i3 - $i4;

        $i6 = staticinvoke <java.lang.Math: int abs(int)>($i5);

        $i7 = r0.<com.android.internal.widget.ViewPager: int mCloseEnough>;

        if $i6 <= $i7 goto label13;

        $r6 = r0.<com.android.internal.widget.ViewPager: android.widget.Scroller mScroller>;

        virtualinvoke $r6.<android.widget.Scroller: void abortAnimation()>();

        r0.<com.android.internal.widget.ViewPager: boolean mPopulatePending> = 0;

        virtualinvoke r0.<com.android.internal.widget.ViewPager: void populate()>();

        r0.<com.android.internal.widget.ViewPager: boolean mIsBeingDragged> = 1;

        specialinvoke r0.<com.android.internal.widget.ViewPager: void requestParentDisallowInterceptTouchEvent(boolean)>(1);

        specialinvoke r0.<com.android.internal.widget.ViewPager: void setScrollState(int)>(1);

        goto label14;

     label13:
        specialinvoke r0.<com.android.internal.widget.ViewPager: void completeScroll(boolean)>(0);

        r0.<com.android.internal.widget.ViewPager: boolean mIsBeingDragged> = 0;

     label14:
        $r8 = r0.<com.android.internal.widget.ViewPager: android.view.VelocityTracker mVelocityTracker>;

        if $r8 != null goto label15;

        $r3 = staticinvoke <android.view.VelocityTracker: android.view.VelocityTracker obtain()>();

        r0.<com.android.internal.widget.ViewPager: android.view.VelocityTracker mVelocityTracker> = $r3;

     label15:
        $r2 = r0.<com.android.internal.widget.ViewPager: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r2.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>(r7);

        $z1 = r0.<com.android.internal.widget.ViewPager: boolean mIsBeingDragged>;

        return $z1;

     label16:
        r0.<com.android.internal.widget.ViewPager: boolean mIsBeingDragged> = 0;

        r0.<com.android.internal.widget.ViewPager: boolean mIsUnableToDrag> = 0;

        r0.<com.android.internal.widget.ViewPager: int mActivePointerId> = -1;

        r9 = r0.<com.android.internal.widget.ViewPager: android.view.VelocityTracker mVelocityTracker>;

        if r9 == null goto label17;

        virtualinvoke r9.<android.view.VelocityTracker: void recycle()>();

        r0.<com.android.internal.widget.ViewPager: android.view.VelocityTracker mVelocityTracker> = null;

     label17:
        return 0;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        com.android.internal.widget.ViewPager r0;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, i35, i36, i37, i38, i39, i40, i41, i42, i43, i44, i45, i46, i47, i48, i49, i50, i51, i52, i53, i54, i55, $i56, $i57, $i58, $i59, i60, i61, i64, i65, i66;
        android.view.View r1, r4;
        android.view.ViewGroup$LayoutParams $r2, $r3;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        com.android.internal.widget.ViewPager$LayoutParams r5, r6;
        com.android.internal.widget.ViewPager$ItemInfo r7;

        r0 := @this: com.android.internal.widget.ViewPager;

        z0 := @parameter0: boolean;

        i35 := @parameter1: int;

        i36 := @parameter2: int;

        i37 := @parameter3: int;

        i38 := @parameter4: int;

        i0 = virtualinvoke r0.<com.android.internal.widget.ViewPager: int getChildCount()>();

        i1 = i37 - i35;

        i2 = i38 - i36;

        i39 = virtualinvoke r0.<com.android.internal.widget.ViewPager: int getPaddingLeft()>();

        i40 = virtualinvoke r0.<com.android.internal.widget.ViewPager: int getPaddingTop()>();

        i41 = virtualinvoke r0.<com.android.internal.widget.ViewPager: int getPaddingRight()>();

        i42 = virtualinvoke r0.<com.android.internal.widget.ViewPager: int getPaddingBottom()>();

        i3 = virtualinvoke r0.<com.android.internal.widget.ViewPager: int getScrollX()>();

        i43 = 0;

        i44 = 0;

     label01:
        if i44 >= i0 goto label12;

        r4 = virtualinvoke r0.<com.android.internal.widget.ViewPager: android.view.View getChildAt(int)>(i44);

        i45 = i39;

        i46 = i40;

        i47 = i41;

        i48 = i42;

        i49 = i43;

        $i18 = virtualinvoke r4.<android.view.View: int getVisibility()>();

        if $i18 == 8 goto label11;

        $r3 = virtualinvoke r4.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r5 = (com.android.internal.widget.ViewPager$LayoutParams) $r3;

        $z5 = r5.<com.android.internal.widget.ViewPager$LayoutParams: boolean isDecor>;

        if $z5 == 0 goto label10;

        $i19 = r5.<com.android.internal.widget.ViewPager$LayoutParams: int gravity>;

        i50 = $i19 & 7;

        $i20 = r5.<com.android.internal.widget.ViewPager$LayoutParams: int gravity>;

        i51 = $i20 & 112;

        if i50 == 1 goto label04;

        if i50 == 3 goto label03;

        if i50 == 5 goto label02;

        i52 = i39;

        i53 = i39;

        goto label05;

     label02:
        $i32 = i1 - i41;

        $i33 = virtualinvoke r4.<android.view.View: int getMeasuredWidth()>();

        i52 = $i32 - $i33;

        $i34 = virtualinvoke r4.<android.view.View: int getMeasuredWidth()>();

        i41 = i41 + $i34;

        i53 = i39;

        goto label05;

     label03:
        i52 = i39;

        $i31 = virtualinvoke r4.<android.view.View: int getMeasuredWidth()>();

        i53 = i39 + $i31;

        goto label05;

     label04:
        $i21 = virtualinvoke r4.<android.view.View: int getMeasuredWidth()>();

        $i22 = i1 - $i21;

        $i23 = $i22 / 2;

        i52 = staticinvoke <java.lang.Math: int max(int,int)>($i23, i39);

        i53 = i39;

     label05:
        if i51 == 16 goto label08;

        if i51 == 48 goto label07;

        if i51 == 80 goto label06;

        i54 = i40;

        goto label09;

     label06:
        $i28 = i2 - i42;

        $i29 = virtualinvoke r4.<android.view.View: int getMeasuredHeight()>();

        i54 = $i28 - $i29;

        $i30 = virtualinvoke r4.<android.view.View: int getMeasuredHeight()>();

        i42 = i42 + $i30;

        goto label09;

     label07:
        i54 = i40;

        $i27 = virtualinvoke r4.<android.view.View: int getMeasuredHeight()>();

        i40 = i40 + $i27;

        goto label09;

     label08:
        $i24 = virtualinvoke r4.<android.view.View: int getMeasuredHeight()>();

        $i25 = i2 - $i24;

        $i26 = $i25 / 2;

        i54 = staticinvoke <java.lang.Math: int max(int,int)>($i26, i40);

     label09:
        i55 = i52 + i3;

        $i56 = virtualinvoke r4.<android.view.View: int getMeasuredWidth()>();

        $i57 = $i56 + i55;

        $i58 = virtualinvoke r4.<android.view.View: int getMeasuredHeight()>();

        $i59 = i54 + $i58;

        virtualinvoke r4.<android.view.View: void layout(int,int,int,int)>(i55, i54, $i57, $i59);

        i49 = i43 + 1;

        i45 = i53;

        i46 = i40;

        i47 = i41;

        i48 = i42;

        goto label11;

     label10:
        i49 = i43;

        i48 = i42;

        i47 = i41;

        i46 = i40;

        i45 = i39;

     label11:
        i44 = i44 + 1;

        i39 = i45;

        i40 = i46;

        i41 = i47;

        i42 = i48;

        i43 = i49;

        goto label01;

     label12:
        $i4 = i1 - i39;

        i60 = $i4 - i41;

        i61 = 0;

     label13:
        if i61 >= i0 goto label21;

        r1 = virtualinvoke r0.<com.android.internal.widget.ViewPager: android.view.View getChildAt(int)>(i61);

        $i7 = virtualinvoke r1.<android.view.View: int getVisibility()>();

        if $i7 != 8 goto label14;

        goto label20;

     label14:
        $r2 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r6 = (com.android.internal.widget.ViewPager$LayoutParams) $r2;

        $z2 = r6.<com.android.internal.widget.ViewPager$LayoutParams: boolean isDecor>;

        if $z2 == 0 goto label15;

        goto label20;

     label15:
        r7 = virtualinvoke r0.<com.android.internal.widget.ViewPager: com.android.internal.widget.ViewPager$ItemInfo infoForChild(android.view.View)>(r1);

        if r7 != null goto label16;

        goto label20;

     label16:
        $z3 = r6.<com.android.internal.widget.ViewPager$LayoutParams: boolean needsMeasure>;

        if $z3 == 0 goto label17;

        r6.<com.android.internal.widget.ViewPager$LayoutParams: boolean needsMeasure> = 0;

        $f4 = (float) i60;

        $f3 = r6.<com.android.internal.widget.ViewPager$LayoutParams: float widthFactor>;

        $f5 = $f4 * $f3;

        $i13 = (int) $f5;

        $i14 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i13, 1073741824);

        $i15 = i2 - i40;

        $i16 = $i15 - i42;

        $i17 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i16, 1073741824);

        virtualinvoke r1.<android.view.View: void measure(int,int)>($i14, $i17);

        goto label17;

     label17:
        i64 = virtualinvoke r1.<android.view.View: int getMeasuredWidth()>();

        $f1 = (float) i60;

        $f0 = r7.<com.android.internal.widget.ViewPager$ItemInfo: float offset>;

        $f2 = $f1 * $f0;

        i65 = (int) $f2;

        $z4 = virtualinvoke r0.<com.android.internal.widget.ViewPager: boolean isLayoutRtl()>();

        if $z4 == 0 goto label18;

        $i11 = 16777216 - i41;

        $i12 = $i11 - i65;

        i66 = $i12 - i64;

        goto label19;

     label18:
        i66 = i39 + i65;

     label19:
        $i8 = i66 + i64;

        $i9 = virtualinvoke r1.<android.view.View: int getMeasuredHeight()>();

        $i10 = i40 + $i9;

        virtualinvoke r1.<android.view.View: void layout(int,int,int,int)>(i66, i40, $i8, $i10);

     label20:
        i61 = i61 + 1;

        goto label13;

     label21:
        r0.<com.android.internal.widget.ViewPager: int mTopPageBounds> = i40;

        $i5 = i2 - i42;

        r0.<com.android.internal.widget.ViewPager: int mBottomPageBounds> = $i5;

        r0.<com.android.internal.widget.ViewPager: int mDecorChildCount> = i43;

        $z1 = r0.<com.android.internal.widget.ViewPager: boolean mFirstLayout>;

        if $z1 == 0 goto label22;

        $i6 = r0.<com.android.internal.widget.ViewPager: int mCurItem>;

        specialinvoke r0.<com.android.internal.widget.ViewPager: void scrollToItem(int,boolean,int,boolean)>($i6, 0, 0, 0);

        goto label22;

     label22:
        r0.<com.android.internal.widget.ViewPager: boolean mFirstLayout> = 0;

        return;
    }

    protected void onMeasure(int, int)
    {
        com.android.internal.widget.ViewPager r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, i27, i28, i29, i30, i31, i32, i33, i35, i36, $i37, i38, i39, $i41, i42, $i43, $i44, i45, i46, i47, i48;
        android.view.ViewGroup$LayoutParams $r1, $r2;
        float $f0, $f1, $f2;
        boolean $z0, $z1, z2, z3;
        android.view.View r3, r5;
        com.android.internal.widget.ViewPager$LayoutParams r4, r6;

        r0 := @this: com.android.internal.widget.ViewPager;

        i27 := @parameter0: int;

        i28 := @parameter1: int;

        $i3 = staticinvoke <com.android.internal.widget.ViewPager: int getDefaultSize(int,int)>(0, i27);

        $i4 = staticinvoke <com.android.internal.widget.ViewPager: int getDefaultSize(int,int)>(0, i28);

        virtualinvoke r0.<com.android.internal.widget.ViewPager: void setMeasuredDimension(int,int)>($i3, $i4);

        i0 = virtualinvoke r0.<com.android.internal.widget.ViewPager: int getMeasuredWidth()>();

        i1 = i0 / 10;

        $i5 = r0.<com.android.internal.widget.ViewPager: int mDefaultGutterSize>;

        $i6 = staticinvoke <java.lang.Math: int min(int,int)>(i1, $i5);

        r0.<com.android.internal.widget.ViewPager: int mGutterSize> = $i6;

        $i7 = virtualinvoke r0.<com.android.internal.widget.ViewPager: int getPaddingLeft()>();

        $i8 = i0 - $i7;

        $i9 = virtualinvoke r0.<com.android.internal.widget.ViewPager: int getPaddingRight()>();

        i29 = $i8 - $i9;

        $i10 = virtualinvoke r0.<com.android.internal.widget.ViewPager: int getMeasuredHeight()>();

        $i11 = virtualinvoke r0.<com.android.internal.widget.ViewPager: int getPaddingTop()>();

        $i12 = $i10 - $i11;

        $i13 = virtualinvoke r0.<com.android.internal.widget.ViewPager: int getPaddingBottom()>();

        i30 = $i12 - $i13;

        i2 = virtualinvoke r0.<com.android.internal.widget.ViewPager: int getChildCount()>();

        i31 = 0;

     label01:
        if i31 >= i2 goto label20;

        r3 = virtualinvoke r0.<com.android.internal.widget.ViewPager: android.view.View getChildAt(int)>(i31);

        $i20 = virtualinvoke r3.<android.view.View: int getVisibility()>();

        if $i20 == 8 goto label18;

        $r2 = virtualinvoke r3.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r4 = (com.android.internal.widget.ViewPager$LayoutParams) $r2;

        if r4 == null goto label17;

        $z1 = r4.<com.android.internal.widget.ViewPager$LayoutParams: boolean isDecor>;

        if $z1 == 0 goto label17;

        $i21 = r4.<com.android.internal.widget.ViewPager$LayoutParams: int gravity>;

        i32 = $i21 & 7;

        $i22 = r4.<com.android.internal.widget.ViewPager$LayoutParams: int gravity>;

        i33 = $i22 & 112;

        i35 = -2147483648;

        if i33 == 48 goto label03;

        if i33 != 80 goto label02;

        goto label03;

     label02:
        z2 = 0;

        goto label04;

     label03:
        z2 = 1;

     label04:
        if i32 == 3 goto label06;

        if i32 != 5 goto label05;

        goto label06;

     label05:
        z3 = 0;

        goto label07;

     label06:
        z3 = 1;

     label07:
        if z2 == 0 goto label08;

        i36 = 1073741824;

        goto label09;

     label08:
        i36 = -2147483648;

        if z3 == 0 goto label09;

        i35 = 1073741824;

        i36 = -2147483648;

     label09:
        $i37 = r4.<com.android.internal.widget.ViewPager$LayoutParams: int width>;

        if $i37 == -2 goto label11;

        i38 = 1073741824;

        $i26 = r4.<com.android.internal.widget.ViewPager$LayoutParams: int width>;

        if $i26 == -1 goto label10;

        i39 = r4.<com.android.internal.widget.ViewPager$LayoutParams: int width>;

        goto label12;

     label10:
        i39 = i29;

        goto label12;

     label11:
        i38 = i36;

        i39 = i29;

     label12:
        $i41 = r4.<com.android.internal.widget.ViewPager$LayoutParams: int height>;

        if $i41 == -2 goto label14;

        $i25 = r4.<com.android.internal.widget.ViewPager$LayoutParams: int height>;

        if $i25 == -1 goto label13;

        i42 = r4.<com.android.internal.widget.ViewPager$LayoutParams: int height>;

        i35 = 1073741824;

        goto label15;

     label13:
        i35 = 1073741824;

        i42 = i30;

        goto label15;

     label14:
        i42 = i30;

     label15:
        $i43 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i39, i38);

        $i44 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i42, i35);

        virtualinvoke r3.<android.view.View: void measure(int,int)>($i43, $i44);

        if z2 == 0 goto label16;

        $i24 = virtualinvoke r3.<android.view.View: int getMeasuredHeight()>();

        i45 = i30 - $i24;

        i46 = i29;

        goto label19;

     label16:
        i46 = i29;

        i45 = i30;

        if z3 == 0 goto label19;

        $i23 = virtualinvoke r3.<android.view.View: int getMeasuredWidth()>();

        i46 = i29 - $i23;

        i45 = i30;

        goto label19;

     label17:
        i46 = i29;

        i45 = i30;

        goto label19;

     label18:
        i45 = i30;

        i46 = i29;

     label19:
        i31 = i31 + 1;

        i29 = i46;

        i30 = i45;

        goto label01;

     label20:
        $i14 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i29, 1073741824);

        r0.<com.android.internal.widget.ViewPager: int mChildWidthMeasureSpec> = $i14;

        $i15 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i30, 1073741824);

        r0.<com.android.internal.widget.ViewPager: int mChildHeightMeasureSpec> = $i15;

        r0.<com.android.internal.widget.ViewPager: boolean mInLayout> = 1;

        virtualinvoke r0.<com.android.internal.widget.ViewPager: void populate()>();

        r0.<com.android.internal.widget.ViewPager: boolean mInLayout> = 0;

        i47 = virtualinvoke r0.<com.android.internal.widget.ViewPager: int getChildCount()>();

        i48 = 0;

     label21:
        if i48 >= i47 goto label24;

        r5 = virtualinvoke r0.<com.android.internal.widget.ViewPager: android.view.View getChildAt(int)>(i48);

        $i16 = virtualinvoke r5.<android.view.View: int getVisibility()>();

        if $i16 == 8 goto label23;

        $r1 = virtualinvoke r5.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r6 = (com.android.internal.widget.ViewPager$LayoutParams) $r1;

        if r6 == null goto label22;

        $z0 = r6.<com.android.internal.widget.ViewPager$LayoutParams: boolean isDecor>;

        if $z0 != 0 goto label23;

     label22:
        $f1 = (float) i29;

        $f0 = r6.<com.android.internal.widget.ViewPager$LayoutParams: float widthFactor>;

        $f2 = $f1 * $f0;

        $i17 = (int) $f2;

        $i18 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i17, 1073741824);

        $i19 = r0.<com.android.internal.widget.ViewPager: int mChildHeightMeasureSpec>;

        virtualinvoke r5.<android.view.View: void measure(int,int)>($i18, $i19);

     label23:
        i48 = i48 + 1;

        goto label21;

     label24:
        return;
    }

    protected void onPageScrolled(int, float, int)
    {
        com.android.internal.widget.ViewPager r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16, i17, i18, i19, i20, i21, i22, i23, i24, $i25, $i26, i27, i28, i29;
        android.view.View r1, r10;
        com.android.internal.widget.ViewPager$PageTransformer $r2, $r5;
        android.view.ViewGroup$LayoutParams $r3, $r6;
        com.android.internal.widget.ViewPager$LayoutParams $r4, r7;
        boolean $z0, $z1;
        float $f0, $f1, f2, f3;
        com.android.internal.widget.ViewPager$OnPageChangeListener r8, r9;

        r0 := @this: com.android.internal.widget.ViewPager;

        i16 := @parameter0: int;

        f2 := @parameter1: float;

        i17 := @parameter2: int;

        $i4 = r0.<com.android.internal.widget.ViewPager: int mDecorChildCount>;

        if $i4 <= 0 goto label08;

        i0 = virtualinvoke r0.<com.android.internal.widget.ViewPager: int getScrollX()>();

        i18 = virtualinvoke r0.<com.android.internal.widget.ViewPager: int getPaddingLeft()>();

        i19 = virtualinvoke r0.<com.android.internal.widget.ViewPager: int getPaddingRight()>();

        i1 = virtualinvoke r0.<com.android.internal.widget.ViewPager: int getWidth()>();

        i2 = virtualinvoke r0.<com.android.internal.widget.ViewPager: int getChildCount()>();

        i20 = 0;

     label01:
        if i20 >= i2 goto label08;

        r1 = virtualinvoke r0.<com.android.internal.widget.ViewPager: android.view.View getChildAt(int)>(i20);

        $r6 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r7 = (com.android.internal.widget.ViewPager$LayoutParams) $r6;

        $z1 = r7.<com.android.internal.widget.ViewPager$LayoutParams: boolean isDecor>;

        if $z1 != 0 goto label02;

        i21 = i18;

        i22 = i19;

        goto label07;

     label02:
        $i8 = r7.<com.android.internal.widget.ViewPager$LayoutParams: int gravity>;

        i23 = $i8 & 7;

        if i23 == 1 goto label05;

        if i23 == 3 goto label04;

        if i23 == 5 goto label03;

        i24 = i18;

        goto label06;

     label03:
        $i13 = i1 - i19;

        $i14 = virtualinvoke r1.<android.view.View: int getMeasuredWidth()>();

        i24 = $i13 - $i14;

        $i15 = virtualinvoke r1.<android.view.View: int getMeasuredWidth()>();

        i19 = i19 + $i15;

        goto label06;

     label04:
        i24 = i18;

        $i12 = virtualinvoke r1.<android.view.View: int getWidth()>();

        i18 = i18 + $i12;

        goto label06;

     label05:
        $i9 = virtualinvoke r1.<android.view.View: int getMeasuredWidth()>();

        $i10 = i1 - $i9;

        $i11 = $i10 / 2;

        i24 = staticinvoke <java.lang.Math: int max(int,int)>($i11, i18);

     label06:
        $i25 = i24 + i0;

        $i26 = virtualinvoke r1.<android.view.View: int getLeft()>();

        i3 = $i25 - $i26;

        i21 = i18;

        i22 = i19;

        if i3 == 0 goto label07;

        virtualinvoke r1.<android.view.View: void offsetLeftAndRight(int)>(i3);

        i22 = i19;

        i21 = i18;

     label07:
        i20 = i20 + 1;

        i18 = i21;

        i19 = i22;

        goto label01;

     label08:
        r8 = r0.<com.android.internal.widget.ViewPager: com.android.internal.widget.ViewPager$OnPageChangeListener mOnPageChangeListener>;

        if r8 == null goto label09;

        interfaceinvoke r8.<com.android.internal.widget.ViewPager$OnPageChangeListener: void onPageScrolled(int,float,int)>(i16, f2, i17);

     label09:
        r9 = r0.<com.android.internal.widget.ViewPager: com.android.internal.widget.ViewPager$OnPageChangeListener mInternalPageChangeListener>;

        if r9 == null goto label10;

        interfaceinvoke r9.<com.android.internal.widget.ViewPager$OnPageChangeListener: void onPageScrolled(int,float,int)>(i16, f2, i17);

     label10:
        $r2 = r0.<com.android.internal.widget.ViewPager: com.android.internal.widget.ViewPager$PageTransformer mPageTransformer>;

        if $r2 == null goto label14;

        i27 = virtualinvoke r0.<com.android.internal.widget.ViewPager: int getScrollX()>();

        i28 = virtualinvoke r0.<com.android.internal.widget.ViewPager: int getChildCount()>();

        i29 = 0;

     label11:
        if i29 >= i28 goto label14;

        r10 = virtualinvoke r0.<com.android.internal.widget.ViewPager: android.view.View getChildAt(int)>(i29);

        $r3 = virtualinvoke r10.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r4 = (com.android.internal.widget.ViewPager$LayoutParams) $r3;

        $z0 = $r4.<com.android.internal.widget.ViewPager$LayoutParams: boolean isDecor>;

        if $z0 == 0 goto label12;

        goto label13;

     label12:
        $i5 = virtualinvoke r10.<android.view.View: int getLeft()>();

        $i6 = $i5 - i27;

        $f0 = (float) $i6;

        $i7 = specialinvoke r0.<com.android.internal.widget.ViewPager: int getPaddedWidth()>();

        $f1 = (float) $i7;

        f3 = $f0 / $f1;

        $r5 = r0.<com.android.internal.widget.ViewPager: com.android.internal.widget.ViewPager$PageTransformer mPageTransformer>;

        interfaceinvoke $r5.<com.android.internal.widget.ViewPager$PageTransformer: void transformPage(android.view.View,float)>(r10, f3);

     label13:
        i29 = i29 + 1;

        goto label11;

     label14:
        r0.<com.android.internal.widget.ViewPager: boolean mCalledSuper> = 1;

        return;
    }

    protected boolean onRequestFocusInDescendants(int, android.graphics.Rect)
    {
        com.android.internal.widget.ViewPager r0;
        int i0, $i1, $i2, $i3, $i4, i5, i6;
        android.graphics.Rect r1;
        android.view.View r2;
        com.android.internal.widget.ViewPager$ItemInfo r3;
        boolean $z0;
        byte b7;

        r0 := @this: com.android.internal.widget.ViewPager;

        i0 := @parameter0: int;

        r1 := @parameter1: android.graphics.Rect;

        i5 = virtualinvoke r0.<com.android.internal.widget.ViewPager: int getChildCount()>();

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        i6 = 0;

        b7 = 1;

        goto label2;

     label1:
        i6 = i5 - 1;

        b7 = -1;

        i5 = -1;

     label2:
        if i6 == i5 goto label4;

        r2 = virtualinvoke r0.<com.android.internal.widget.ViewPager: android.view.View getChildAt(int)>(i6);

        $i2 = virtualinvoke r2.<android.view.View: int getVisibility()>();

        if $i2 != 0 goto label3;

        r3 = virtualinvoke r0.<com.android.internal.widget.ViewPager: com.android.internal.widget.ViewPager$ItemInfo infoForChild(android.view.View)>(r2);

        if r3 == null goto label3;

        $i4 = r3.<com.android.internal.widget.ViewPager$ItemInfo: int position>;

        $i3 = r0.<com.android.internal.widget.ViewPager: int mCurItem>;

        if $i4 != $i3 goto label3;

        $z0 = virtualinvoke r2.<android.view.View: boolean requestFocus(int,android.graphics.Rect)>(i0, r1);

        if $z0 == 0 goto label3;

        return 1;

     label3:
        i6 = i6 + b7;

        goto label2;

     label4:
        return 0;
    }

    public void onRestoreInstanceState(android.os.Parcelable)
    {
        com.android.internal.widget.ViewPager r0;
        com.android.internal.widget.ViewPager$SavedState r1;
        boolean $z0;
        android.os.Parcelable $r2, $r3, $r6, r7;
        int $i0, $i1;
        java.lang.ClassLoader $r4, $r5;
        com.android.internal.widget.PagerAdapter r8;

        r0 := @this: com.android.internal.widget.ViewPager;

        r7 := @parameter0: android.os.Parcelable;

        $z0 = r7 instanceof com.android.internal.widget.ViewPager$SavedState;

        if $z0 != 0 goto label1;

        specialinvoke r0.<android.view.ViewGroup: void onRestoreInstanceState(android.os.Parcelable)>(r7);

        return;

     label1:
        r1 = (com.android.internal.widget.ViewPager$SavedState) r7;

        $r2 = virtualinvoke r1.<com.android.internal.widget.ViewPager$SavedState: android.os.Parcelable getSuperState()>();

        specialinvoke r0.<android.view.ViewGroup: void onRestoreInstanceState(android.os.Parcelable)>($r2);

        r8 = r0.<com.android.internal.widget.ViewPager: com.android.internal.widget.PagerAdapter mAdapter>;

        if r8 == null goto label2;

        $r6 = r1.<com.android.internal.widget.ViewPager$SavedState: android.os.Parcelable adapterState>;

        $r5 = r1.<com.android.internal.widget.ViewPager$SavedState: java.lang.ClassLoader loader>;

        virtualinvoke r8.<com.android.internal.widget.PagerAdapter: void restoreState(android.os.Parcelable,java.lang.ClassLoader)>($r6, $r5);

        $i1 = r1.<com.android.internal.widget.ViewPager$SavedState: int position>;

        virtualinvoke r0.<com.android.internal.widget.ViewPager: boolean setCurrentItemInternal(int,boolean,boolean)>($i1, 0, 1);

        goto label3;

     label2:
        $i0 = r1.<com.android.internal.widget.ViewPager$SavedState: int position>;

        r0.<com.android.internal.widget.ViewPager: int mRestoredCurItem> = $i0;

        $r3 = r1.<com.android.internal.widget.ViewPager$SavedState: android.os.Parcelable adapterState>;

        r0.<com.android.internal.widget.ViewPager: android.os.Parcelable mRestoredAdapterState> = $r3;

        $r4 = r1.<com.android.internal.widget.ViewPager$SavedState: java.lang.ClassLoader loader>;

        r0.<com.android.internal.widget.ViewPager: java.lang.ClassLoader mRestoredClassLoader> = $r4;

     label3:
        return;
    }

    public void onRtlPropertiesChanged(int)
    {
        com.android.internal.widget.ViewPager r0;
        int i0;

        r0 := @this: com.android.internal.widget.ViewPager;

        i0 := @parameter0: int;

        specialinvoke r0.<android.view.ViewGroup: void onRtlPropertiesChanged(int)>(i0);

        if i0 != 0 goto label1;

        r0.<com.android.internal.widget.ViewPager: int mLeftIncr> = -1;

        goto label2;

     label1:
        r0.<com.android.internal.widget.ViewPager: int mLeftIncr> = 1;

     label2:
        return;
    }

    public android.os.Parcelable onSaveInstanceState()
    {
        com.android.internal.widget.ViewPager r0;
        com.android.internal.widget.PagerAdapter r2;
        com.android.internal.widget.ViewPager$SavedState $r3;
        android.os.Parcelable $r4, $r5;
        int $i0;

        r0 := @this: com.android.internal.widget.ViewPager;

        $r3 = new com.android.internal.widget.ViewPager$SavedState;

        $r4 = specialinvoke r0.<android.view.ViewGroup: android.os.Parcelable onSaveInstanceState()>();

        specialinvoke $r3.<com.android.internal.widget.ViewPager$SavedState: void <init>(android.os.Parcelable)>($r4);

        $i0 = r0.<com.android.internal.widget.ViewPager: int mCurItem>;

        $r3.<com.android.internal.widget.ViewPager$SavedState: int position> = $i0;

        r2 = r0.<com.android.internal.widget.ViewPager: com.android.internal.widget.PagerAdapter mAdapter>;

        if r2 == null goto label1;

        $r5 = virtualinvoke r2.<com.android.internal.widget.PagerAdapter: android.os.Parcelable saveState()>();

        $r3.<com.android.internal.widget.ViewPager$SavedState: android.os.Parcelable adapterState> = $r5;

     label1:
        return $r3;
    }

    protected void onSizeChanged(int, int, int, int)
    {
        com.android.internal.widget.ViewPager r0;
        int i0, i1, i2, i3, i4;

        r0 := @this: com.android.internal.widget.ViewPager;

        i0 := @parameter0: int;

        i3 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        specialinvoke r0.<android.view.ViewGroup: void onSizeChanged(int,int,int,int)>(i0, i3, i1, i2);

        if i0 == i1 goto label1;

        i4 = r0.<com.android.internal.widget.ViewPager: int mPageMargin>;

        specialinvoke r0.<com.android.internal.widget.ViewPager: void recomputeScrollPosition(int,int,int,int)>(i0, i1, i4, i4);

     label1:
        return;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        com.android.internal.widget.ViewPager r0;
        android.view.MotionEvent r1;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, f26, f27, f28, f29, f30, f31, f32, f33;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i18, $i19, $i20, $i21, $i22, $i23, $i24, i25, i26, i27, i28, i29, i30;
        android.view.VelocityTracker $r2, $r3, $r9, r12;
        android.widget.Scroller $r4;
        boolean $z0, $z1, $z3, $z4, $z5, z6, $z7;
        android.widget.EdgeEffect $r5, $r6, $r7, $r8;
        byte $b15, $b16, $b17;
        com.android.internal.widget.PagerAdapter r10;
        android.view.ViewParent r11;
        com.android.internal.widget.ViewPager$ItemInfo r13;

        r0 := @this: com.android.internal.widget.ViewPager;

        r1 := @parameter0: android.view.MotionEvent;

        $i0 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();

        if $i0 != 0 goto label01;

        $i24 = virtualinvoke r1.<android.view.MotionEvent: int getEdgeFlags()>();

        if $i24 == 0 goto label01;

        return 0;

     label01:
        r10 = r0.<com.android.internal.widget.ViewPager: com.android.internal.widget.PagerAdapter mAdapter>;

        if r10 == null goto label17;

        $i1 = virtualinvoke r10.<com.android.internal.widget.PagerAdapter: int getCount()>();

        if $i1 != 0 goto label02;

        goto label17;

     label02:
        $r2 = r0.<com.android.internal.widget.ViewPager: android.view.VelocityTracker mVelocityTracker>;

        if $r2 != null goto label03;

        $r9 = staticinvoke <android.view.VelocityTracker: android.view.VelocityTracker obtain()>();

        r0.<com.android.internal.widget.ViewPager: android.view.VelocityTracker mVelocityTracker> = $r9;

     label03:
        $r3 = r0.<com.android.internal.widget.ViewPager: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r3.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>(r1);

        i25 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();

        z6 = 0;

        i26 = i25 & 255;

        if i26 == 0 goto label14;

        if i26 == 1 goto label11;

        if i26 == 2 goto label07;

        if i26 == 3 goto label06;

        if i26 == 5 goto label05;

        if i26 == 6 goto label04;

        goto label15;

     label04:
        specialinvoke r0.<com.android.internal.widget.ViewPager: void onSecondaryPointerUp(android.view.MotionEvent)>(r1);

        $i22 = r0.<com.android.internal.widget.ViewPager: int mActivePointerId>;

        $i23 = virtualinvoke r1.<android.view.MotionEvent: int findPointerIndex(int)>($i22);

        $f25 = virtualinvoke r1.<android.view.MotionEvent: float getX(int)>($i23);

        r0.<com.android.internal.widget.ViewPager: float mLastMotionX> = $f25;

        goto label15;

     label05:
        i27 = virtualinvoke r1.<android.view.MotionEvent: int getActionIndex()>();

        $f24 = virtualinvoke r1.<android.view.MotionEvent: float getX(int)>(i27);

        r0.<com.android.internal.widget.ViewPager: float mLastMotionX> = $f24;

        $i21 = virtualinvoke r1.<android.view.MotionEvent: int getPointerId(int)>(i27);

        r0.<com.android.internal.widget.ViewPager: int mActivePointerId> = $i21;

        goto label15;

     label06:
        $z5 = r0.<com.android.internal.widget.ViewPager: boolean mIsBeingDragged>;

        if $z5 == 0 goto label15;

        $i20 = r0.<com.android.internal.widget.ViewPager: int mCurItem>;

        specialinvoke r0.<com.android.internal.widget.ViewPager: void scrollToItem(int,boolean,int,boolean)>($i20, 1, 0, 0);

        r0.<com.android.internal.widget.ViewPager: int mActivePointerId> = -1;

        specialinvoke r0.<com.android.internal.widget.ViewPager: void endDrag()>();

        $r7 = r0.<com.android.internal.widget.ViewPager: android.widget.EdgeEffect mLeftEdge>;

        virtualinvoke $r7.<android.widget.EdgeEffect: void onRelease()>();

        $r8 = r0.<com.android.internal.widget.ViewPager: android.widget.EdgeEffect mRightEdge>;

        virtualinvoke $r8.<android.widget.EdgeEffect: void onRelease()>();

        z6 = 1;

        goto label15;

     label07:
        $z3 = r0.<com.android.internal.widget.ViewPager: boolean mIsBeingDragged>;

        if $z3 != 0 goto label10;

        $i13 = r0.<com.android.internal.widget.ViewPager: int mActivePointerId>;

        i28 = virtualinvoke r1.<android.view.MotionEvent: int findPointerIndex(int)>($i13);

        f26 = virtualinvoke r1.<android.view.MotionEvent: float getX(int)>(i28);

        $f16 = r0.<com.android.internal.widget.ViewPager: float mLastMotionX>;

        $f17 = f26 - $f16;

        f27 = staticinvoke <java.lang.Math: float abs(float)>($f17);

        f0 = virtualinvoke r1.<android.view.MotionEvent: float getY(int)>(i28);

        $f18 = r0.<com.android.internal.widget.ViewPager: float mLastMotionY>;

        $f19 = f0 - $f18;

        f1 = staticinvoke <java.lang.Math: float abs(float)>($f19);

        $i14 = r0.<com.android.internal.widget.ViewPager: int mTouchSlop>;

        $f20 = (float) $i14;

        $b15 = f27 cmpl $f20;

        if $b15 <= 0 goto label10;

        $b16 = f27 cmpl f1;

        if $b16 <= 0 goto label10;

        r0.<com.android.internal.widget.ViewPager: boolean mIsBeingDragged> = 1;

        specialinvoke r0.<com.android.internal.widget.ViewPager: void requestParentDisallowInterceptTouchEvent(boolean)>(1);

        f28 = r0.<com.android.internal.widget.ViewPager: float mInitialMotionX>;

        $f21 = f26 - f28;

        $b17 = $f21 cmpl 0.0F;

        if $b17 <= 0 goto label08;

        $i19 = r0.<com.android.internal.widget.ViewPager: int mTouchSlop>;

        $f23 = (float) $i19;

        f29 = f28 + $f23;

        goto label09;

     label08:
        $i18 = r0.<com.android.internal.widget.ViewPager: int mTouchSlop>;

        $f22 = (float) $i18;

        f29 = f28 - $f22;

     label09:
        r0.<com.android.internal.widget.ViewPager: float mLastMotionX> = f29;

        r0.<com.android.internal.widget.ViewPager: float mLastMotionY> = f0;

        specialinvoke r0.<com.android.internal.widget.ViewPager: void setScrollState(int)>(1);

        specialinvoke r0.<com.android.internal.widget.ViewPager: void setScrollingCacheEnabled(boolean)>(1);

        r11 = virtualinvoke r0.<com.android.internal.widget.ViewPager: android.view.ViewParent getParent()>();

        if r11 == null goto label10;

        interfaceinvoke r11.<android.view.ViewParent: void requestDisallowInterceptTouchEvent(boolean)>(1);

     label10:
        $z7 = r0.<com.android.internal.widget.ViewPager: boolean mIsBeingDragged>;

        if $z7 == 0 goto label15;

        $i11 = r0.<com.android.internal.widget.ViewPager: int mActivePointerId>;

        $i12 = virtualinvoke r1.<android.view.MotionEvent: int findPointerIndex(int)>($i11);

        $f15 = virtualinvoke r1.<android.view.MotionEvent: float getX(int)>($i12);

        $z4 = specialinvoke r0.<com.android.internal.widget.ViewPager: boolean performDrag(float)>($f15);

        z6 = 0 | $z4;

        goto label15;

     label11:
        $z0 = r0.<com.android.internal.widget.ViewPager: boolean mIsBeingDragged>;

        if $z0 == 0 goto label15;

        r12 = r0.<com.android.internal.widget.ViewPager: android.view.VelocityTracker mVelocityTracker>;

        $i3 = r0.<com.android.internal.widget.ViewPager: int mMaximumVelocity>;

        $f2 = (float) $i3;

        virtualinvoke r12.<android.view.VelocityTracker: void computeCurrentVelocity(int,float)>(1000, $f2);

        $i4 = r0.<com.android.internal.widget.ViewPager: int mActivePointerId>;

        $f3 = virtualinvoke r12.<android.view.VelocityTracker: float getXVelocity(int)>($i4);

        i29 = (int) $f3;

        r0.<com.android.internal.widget.ViewPager: boolean mPopulatePending> = 1;

        $i5 = specialinvoke r0.<com.android.internal.widget.ViewPager: int getScrollStart()>();

        $f4 = (float) $i5;

        $i6 = specialinvoke r0.<com.android.internal.widget.ViewPager: int getPaddedWidth()>();

        $f5 = (float) $i6;

        f30 = $f4 / $f5;

        r13 = specialinvoke r0.<com.android.internal.widget.ViewPager: com.android.internal.widget.ViewPager$ItemInfo infoForFirstVisiblePage()>();

        i30 = r13.<com.android.internal.widget.ViewPager$ItemInfo: int position>;

        $z1 = virtualinvoke r0.<com.android.internal.widget.ViewPager: boolean isLayoutRtl()>();

        if $z1 == 0 goto label12;

        $f12 = r13.<com.android.internal.widget.ViewPager$ItemInfo: float offset>;

        $f14 = $f12 - f30;

        $f13 = r13.<com.android.internal.widget.ViewPager$ItemInfo: float widthFactor>;

        f31 = $f14 / $f13;

        goto label13;

     label12:
        $f6 = r13.<com.android.internal.widget.ViewPager$ItemInfo: float offset>;

        $f8 = f30 - $f6;

        $f7 = r13.<com.android.internal.widget.ViewPager$ItemInfo: float widthFactor>;

        f31 = $f8 / $f7;

     label13:
        $i7 = r0.<com.android.internal.widget.ViewPager: int mActivePointerId>;

        $i8 = virtualinvoke r1.<android.view.MotionEvent: int findPointerIndex(int)>($i7);

        $f9 = virtualinvoke r1.<android.view.MotionEvent: float getX(int)>($i8);

        $f10 = r0.<com.android.internal.widget.ViewPager: float mInitialMotionX>;

        $f11 = $f9 - $f10;

        $i9 = (int) $f11;

        $i10 = specialinvoke r0.<com.android.internal.widget.ViewPager: int determineTargetPage(int,float,int,int)>(i30, f31, i29, $i9);

        virtualinvoke r0.<com.android.internal.widget.ViewPager: boolean setCurrentItemInternal(int,boolean,boolean,int)>($i10, 1, 1, i29);

        r0.<com.android.internal.widget.ViewPager: int mActivePointerId> = -1;

        specialinvoke r0.<com.android.internal.widget.ViewPager: void endDrag()>();

        $r5 = r0.<com.android.internal.widget.ViewPager: android.widget.EdgeEffect mLeftEdge>;

        virtualinvoke $r5.<android.widget.EdgeEffect: void onRelease()>();

        $r6 = r0.<com.android.internal.widget.ViewPager: android.widget.EdgeEffect mRightEdge>;

        virtualinvoke $r6.<android.widget.EdgeEffect: void onRelease()>();

        z6 = 1;

        goto label15;

     label14:
        $r4 = r0.<com.android.internal.widget.ViewPager: android.widget.Scroller mScroller>;

        virtualinvoke $r4.<android.widget.Scroller: void abortAnimation()>();

        r0.<com.android.internal.widget.ViewPager: boolean mPopulatePending> = 0;

        virtualinvoke r0.<com.android.internal.widget.ViewPager: void populate()>();

        f32 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        r0.<com.android.internal.widget.ViewPager: float mInitialMotionX> = f32;

        r0.<com.android.internal.widget.ViewPager: float mLastMotionX> = f32;

        f33 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        r0.<com.android.internal.widget.ViewPager: float mInitialMotionY> = f33;

        r0.<com.android.internal.widget.ViewPager: float mLastMotionY> = f33;

        $i2 = virtualinvoke r1.<android.view.MotionEvent: int getPointerId(int)>(0);

        r0.<com.android.internal.widget.ViewPager: int mActivePointerId> = $i2;

     label15:
        if z6 == 0 goto label16;

        virtualinvoke r0.<com.android.internal.widget.ViewPager: void postInvalidateOnAnimation()>();

     label16:
        return 1;

     label17:
        return 0;
    }

    boolean pageLeft()
    {
        com.android.internal.widget.ViewPager r0;
        int $i0, $i1, $i2;
        boolean $z0;

        r0 := @this: com.android.internal.widget.ViewPager;

        $i1 = r0.<com.android.internal.widget.ViewPager: int mCurItem>;

        $i0 = r0.<com.android.internal.widget.ViewPager: int mLeftIncr>;

        $i2 = $i1 + $i0;

        $z0 = virtualinvoke r0.<com.android.internal.widget.ViewPager: boolean setCurrentItemInternal(int,boolean,boolean)>($i2, 1, 0);

        return $z0;
    }

    boolean pageRight()
    {
        com.android.internal.widget.ViewPager r0;
        int $i0, $i1, $i2;
        boolean $z0;

        r0 := @this: com.android.internal.widget.ViewPager;

        $i1 = r0.<com.android.internal.widget.ViewPager: int mCurItem>;

        $i0 = r0.<com.android.internal.widget.ViewPager: int mLeftIncr>;

        $i2 = $i1 - $i0;

        $z0 = virtualinvoke r0.<com.android.internal.widget.ViewPager: boolean setCurrentItemInternal(int,boolean,boolean)>($i2, 1, 0);

        return $z0;
    }

    public boolean performAccessibilityAction(int, android.os.Bundle)
    {
        com.android.internal.widget.ViewPager r0;
        int i0, $i1, $i2, $i3, $i4;
        android.os.Bundle r1;
        boolean $z0, $z1, $z2;

        r0 := @this: com.android.internal.widget.ViewPager;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Bundle;

        $z0 = specialinvoke r0.<android.view.ViewGroup: boolean performAccessibilityAction(int,android.os.Bundle)>(i0, r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        if i0 == 4096 goto label4;

        if i0 == 8192 goto label2;

        if i0 == 16908345 goto label2;

        if i0 == 16908347 goto label4;

        return 0;

     label2:
        $z2 = virtualinvoke r0.<com.android.internal.widget.ViewPager: boolean canScrollHorizontally(int)>(-1);

        if $z2 == 0 goto label3;

        $i3 = r0.<com.android.internal.widget.ViewPager: int mCurItem>;

        $i4 = $i3 - 1;

        virtualinvoke r0.<com.android.internal.widget.ViewPager: void setCurrentItem(int)>($i4);

        return 1;

     label3:
        return 0;

     label4:
        $z1 = virtualinvoke r0.<com.android.internal.widget.ViewPager: boolean canScrollHorizontally(int)>(1);

        if $z1 == 0 goto label5;

        $i1 = r0.<com.android.internal.widget.ViewPager: int mCurItem>;

        $i2 = $i1 + 1;

        virtualinvoke r0.<com.android.internal.widget.ViewPager: void setCurrentItem(int)>($i2);

        return 1;

     label5:
        return 0;
    }

    public void populate()
    {
        com.android.internal.widget.ViewPager r0;
        int $i0;

        r0 := @this: com.android.internal.widget.ViewPager;

        $i0 = r0.<com.android.internal.widget.ViewPager: int mCurItem>;

        virtualinvoke r0.<com.android.internal.widget.ViewPager: void populate(int)>($i0);

        return;
    }

    void populate(int)
    {
        com.android.internal.widget.ViewPager r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i19, $i20, $i21, $i23, $i24, $i25, $i27, $i28, $i29, $i30, $i31, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, i43, i44, i47, i48, i49, i50, i51, i52, i53, i54, i55, i56, i57, i58, $i59;
        com.android.internal.widget.PagerAdapter $r1, $r3, $r4, $r8, $r13, $r27, $r40, r57;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        android.os.IBinder $r2;
        android.content.res.Resources $r5;
        java.lang.StringBuilder $r6;
        java.lang.Class $r7, $r9;
        java.lang.IllegalStateException $r10;
        java.lang.String $r11, r67;
        java.util.ArrayList $r12, $r18, $r19, $r20, $r22, $r23, $r25, $r28, $r29, $r31, $r34, $r36, $r38, $r41, $r43, $r45;
        android.graphics.Rect $r14, $r15, $r16, r66;
        android.view.ViewGroup$LayoutParams $r17;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, f14, f15, f16, f17, f18, f19;
        byte $b18, $b22, $b26, $b32, b45, b46;
        java.lang.Object $r21, $r24, $r26, $r30, $r32, $r35, $r37, $r39, $r42, $r44, $r46, r58;
        com.android.internal.widget.ViewPager$ItemInfo $r33, r48, r49, r50, r51, r52, r53, r54, r55, r56, r61, r63, r65;
        android.content.res.Resources$NotFoundException $r47;
        android.view.View r59, r62, r64;
        com.android.internal.widget.ViewPager$LayoutParams r60;

        r0 := @this: com.android.internal.widget.ViewPager;

        i43 := @parameter0: int;

        i44 = r0.<com.android.internal.widget.ViewPager: int mCurItem>;

        if i44 == i43 goto label03;

        if i44 >= i43 goto label01;

        b45 = 66;

        goto label02;

     label01:
        b45 = 17;

     label02:
        $i41 = r0.<com.android.internal.widget.ViewPager: int mCurItem>;

        r48 = virtualinvoke r0.<com.android.internal.widget.ViewPager: com.android.internal.widget.ViewPager$ItemInfo infoForPosition(int)>($i41);

        r0.<com.android.internal.widget.ViewPager: int mCurItem> = i43;

        b46 = b45;

        goto label04;

     label03:
        b46 = 2;

        r48 = null;

     label04:
        $r1 = r0.<com.android.internal.widget.ViewPager: com.android.internal.widget.PagerAdapter mAdapter>;

        if $r1 != null goto label05;

        specialinvoke r0.<com.android.internal.widget.ViewPager: void sortChildDrawingOrder()>();

        return;

     label05:
        $z0 = r0.<com.android.internal.widget.ViewPager: boolean mPopulatePending>;

        if $z0 == 0 goto label06;

        specialinvoke r0.<com.android.internal.widget.ViewPager: void sortChildDrawingOrder()>();

        return;

     label06:
        $r2 = virtualinvoke r0.<com.android.internal.widget.ViewPager: android.os.IBinder getWindowToken()>();

        if $r2 != null goto label07;

        return;

     label07:
        $r3 = r0.<com.android.internal.widget.ViewPager: com.android.internal.widget.PagerAdapter mAdapter>;

        virtualinvoke $r3.<com.android.internal.widget.PagerAdapter: void startUpdate(android.view.ViewGroup)>(r0);

        i0 = r0.<com.android.internal.widget.ViewPager: int mOffscreenPageLimit>;

        $i5 = r0.<com.android.internal.widget.ViewPager: int mCurItem>;

        $i6 = $i5 - i0;

        i1 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i6);

        $r4 = r0.<com.android.internal.widget.ViewPager: com.android.internal.widget.PagerAdapter mAdapter>;

        i2 = virtualinvoke $r4.<com.android.internal.widget.PagerAdapter: int getCount()>();

        $i9 = i2 - 1;

        $i7 = r0.<com.android.internal.widget.ViewPager: int mCurItem>;

        $i8 = $i7 + i0;

        i3 = staticinvoke <java.lang.Math: int min(int,int)>($i9, $i8);

        $i10 = r0.<com.android.internal.widget.ViewPager: int mExpectedAdapterCount>;

        if i2 != $i10 goto label59;

        i47 = 0;

     label08:
        r49 = null;

        $r12 = r0.<com.android.internal.widget.ViewPager: java.util.ArrayList mItems>;

        $i13 = virtualinvoke $r12.<java.util.ArrayList: int size()>();

        if i47 >= $i13 goto label10;

        $r45 = r0.<com.android.internal.widget.ViewPager: java.util.ArrayList mItems>;

        $r46 = virtualinvoke $r45.<java.util.ArrayList: java.lang.Object get(int)>(i47);

        r50 = (com.android.internal.widget.ViewPager$ItemInfo) $r46;

        $i38 = r50.<com.android.internal.widget.ViewPager$ItemInfo: int position>;

        $i37 = r0.<com.android.internal.widget.ViewPager: int mCurItem>;

        if $i38 < $i37 goto label09;

        r49 = null;

        $i40 = r50.<com.android.internal.widget.ViewPager$ItemInfo: int position>;

        $i39 = r0.<com.android.internal.widget.ViewPager: int mCurItem>;

        if $i40 != $i39 goto label10;

        r49 = r50;

        goto label10;

     label09:
        i47 = i47 + 1;

        goto label08;

     label10:
        r51 = r49;

        if r49 != null goto label11;

        r51 = r49;

        if i2 <= 0 goto label11;

        $i36 = r0.<com.android.internal.widget.ViewPager: int mCurItem>;

        r51 = virtualinvoke r0.<com.android.internal.widget.ViewPager: com.android.internal.widget.ViewPager$ItemInfo addNewItem(int,int)>($i36, i47);

     label11:
        if r51 == null goto label45;

        f14 = 0.0F;

        i48 = i47 - 1;

        if i48 < 0 goto label12;

        $r43 = r0.<com.android.internal.widget.ViewPager: java.util.ArrayList mItems>;

        $r44 = virtualinvoke $r43.<java.util.ArrayList: java.lang.Object get(int)>(i48);

        r52 = (com.android.internal.widget.ViewPager$ItemInfo) $r44;

        goto label13;

     label12:
        r52 = null;

     label13:
        i4 = specialinvoke r0.<com.android.internal.widget.ViewPager: int getPaddedWidth()>();

        if i4 > 0 goto label14;

        f15 = 0.0F;

        goto label15;

     label14:
        $f2 = r51.<com.android.internal.widget.ViewPager$ItemInfo: float widthFactor>;

        $f3 = 2.0F - $f2;

        $i20 = virtualinvoke r0.<com.android.internal.widget.ViewPager: int getPaddingLeft()>();

        $f5 = (float) $i20;

        $f4 = (float) i4;

        $f6 = $f5 / $f4;

        f15 = $f3 + $f6;

     label15:
        $i21 = r0.<com.android.internal.widget.ViewPager: int mCurItem>;

        i49 = $i21 - 1;

        r53 = r52;

        i50 = i47;

        f16 = f15;

     label16:
        if i49 < 0 goto label27;

        $b32 = f14 cmpl f16;

        if $b32 < 0 goto label20;

        if i49 >= i1 goto label20;

        if r53 != null goto label17;

        goto label27;

     label17:
        i51 = i50;

        f17 = f14;

        i52 = i48;

        r54 = r53;

        $i35 = r53.<com.android.internal.widget.ViewPager$ItemInfo: int position>;

        if i49 != $i35 goto label26;

        i51 = i50;

        f17 = f14;

        i52 = i48;

        r54 = r53;

        $z5 = r53.<com.android.internal.widget.ViewPager$ItemInfo: boolean scrolling>;

        if $z5 != 0 goto label26;

        $r38 = r0.<com.android.internal.widget.ViewPager: java.util.ArrayList mItems>;

        virtualinvoke $r38.<java.util.ArrayList: java.lang.Object remove(int)>(i48);

        $r40 = r0.<com.android.internal.widget.ViewPager: com.android.internal.widget.PagerAdapter mAdapter>;

        $r39 = r53.<com.android.internal.widget.ViewPager$ItemInfo: java.lang.Object object>;

        virtualinvoke $r40.<com.android.internal.widget.PagerAdapter: void destroyItem(android.view.ViewGroup,int,java.lang.Object)>(r0, i49, $r39);

        i52 = i48 - 1;

        i51 = i50 - 1;

        if i52 < 0 goto label18;

        $r41 = r0.<com.android.internal.widget.ViewPager: java.util.ArrayList mItems>;

        $r42 = virtualinvoke $r41.<java.util.ArrayList: java.lang.Object get(int)>(i52);

        r54 = (com.android.internal.widget.ViewPager$ItemInfo) $r42;

        goto label19;

     label18:
        r54 = null;

     label19:
        f17 = f14;

        goto label26;

     label20:
        if r53 == null goto label23;

        $i34 = r53.<com.android.internal.widget.ViewPager$ItemInfo: int position>;

        if i49 != $i34 goto label23;

        $f13 = r53.<com.android.internal.widget.ViewPager$ItemInfo: float widthFactor>;

        f17 = f14 + $f13;

        i52 = i48 - 1;

        if i52 < 0 goto label21;

        $r36 = r0.<com.android.internal.widget.ViewPager: java.util.ArrayList mItems>;

        $r37 = virtualinvoke $r36.<java.util.ArrayList: java.lang.Object get(int)>(i52);

        r54 = (com.android.internal.widget.ViewPager$ItemInfo) $r37;

        goto label22;

     label21:
        r54 = null;

     label22:
        i51 = i50;

        goto label26;

     label23:
        $i33 = i48 + 1;

        $r33 = virtualinvoke r0.<com.android.internal.widget.ViewPager: com.android.internal.widget.ViewPager$ItemInfo addNewItem(int,int)>(i49, $i33);

        $f12 = $r33.<com.android.internal.widget.ViewPager$ItemInfo: float widthFactor>;

        f17 = f14 + $f12;

        i51 = i50 + 1;

        if i48 < 0 goto label24;

        $r34 = r0.<com.android.internal.widget.ViewPager: java.util.ArrayList mItems>;

        $r35 = virtualinvoke $r34.<java.util.ArrayList: java.lang.Object get(int)>(i48);

        r54 = (com.android.internal.widget.ViewPager$ItemInfo) $r35;

        goto label25;

     label24:
        r54 = null;

     label25:
        i52 = i48;

     label26:
        i49 = i49 + -1;

        i50 = i51;

        f14 = f17;

        i48 = i52;

        r53 = r54;

        goto label16;

     label27:
        f18 = r51.<com.android.internal.widget.ViewPager$ItemInfo: float widthFactor>;

        i53 = i50 + 1;

        $b22 = f18 cmpg 2.0F;

        if $b22 >= 0 goto label44;

        $r18 = r0.<com.android.internal.widget.ViewPager: java.util.ArrayList mItems>;

        $i23 = virtualinvoke $r18.<java.util.ArrayList: int size()>();

        if i53 >= $i23 goto label28;

        $r31 = r0.<com.android.internal.widget.ViewPager: java.util.ArrayList mItems>;

        $r32 = virtualinvoke $r31.<java.util.ArrayList: java.lang.Object get(int)>(i53);

        r55 = (com.android.internal.widget.ViewPager$ItemInfo) $r32;

        goto label29;

     label28:
        r55 = null;

     label29:
        if i4 > 0 goto label30;

        f19 = 0.0F;

        goto label31;

     label30:
        $i24 = virtualinvoke r0.<com.android.internal.widget.ViewPager: int getPaddingRight()>();

        $f8 = (float) $i24;

        $f7 = (float) i4;

        $f9 = $f8 / $f7;

        f19 = $f9 + 2.0F;

     label31:
        $i25 = r0.<com.android.internal.widget.ViewPager: int mCurItem>;

        i54 = $i25 + 1;

     label32:
        if i54 >= i2 goto label43;

        $b26 = f18 cmpl f19;

        if $b26 < 0 goto label37;

        if i54 <= i3 goto label37;

        if r55 != null goto label33;

        goto label43;

     label33:
        $i30 = r55.<com.android.internal.widget.ViewPager$ItemInfo: int position>;

        if i54 != $i30 goto label36;

        $z4 = r55.<com.android.internal.widget.ViewPager$ItemInfo: boolean scrolling>;

        if $z4 != 0 goto label36;

        $r25 = r0.<com.android.internal.widget.ViewPager: java.util.ArrayList mItems>;

        virtualinvoke $r25.<java.util.ArrayList: java.lang.Object remove(int)>(i53);

        $r27 = r0.<com.android.internal.widget.ViewPager: com.android.internal.widget.PagerAdapter mAdapter>;

        $r26 = r55.<com.android.internal.widget.ViewPager$ItemInfo: java.lang.Object object>;

        virtualinvoke $r27.<com.android.internal.widget.PagerAdapter: void destroyItem(android.view.ViewGroup,int,java.lang.Object)>(r0, i54, $r26);

        $r28 = r0.<com.android.internal.widget.ViewPager: java.util.ArrayList mItems>;

        $i31 = virtualinvoke $r28.<java.util.ArrayList: int size()>();

        if i53 >= $i31 goto label34;

        $r29 = r0.<com.android.internal.widget.ViewPager: java.util.ArrayList mItems>;

        $r30 = virtualinvoke $r29.<java.util.ArrayList: java.lang.Object get(int)>(i53);

        r55 = (com.android.internal.widget.ViewPager$ItemInfo) $r30;

        goto label35;

     label34:
        r55 = null;

     label35:
        goto label42;

     label36:
        goto label42;

     label37:
        if r55 == null goto label40;

        $i28 = r55.<com.android.internal.widget.ViewPager$ItemInfo: int position>;

        if i54 != $i28 goto label40;

        $f11 = r55.<com.android.internal.widget.ViewPager$ItemInfo: float widthFactor>;

        f18 = f18 + $f11;

        i53 = i53 + 1;

        $r22 = r0.<com.android.internal.widget.ViewPager: java.util.ArrayList mItems>;

        $i29 = virtualinvoke $r22.<java.util.ArrayList: int size()>();

        if i53 >= $i29 goto label38;

        $r23 = r0.<com.android.internal.widget.ViewPager: java.util.ArrayList mItems>;

        $r24 = virtualinvoke $r23.<java.util.ArrayList: java.lang.Object get(int)>(i53);

        r55 = (com.android.internal.widget.ViewPager$ItemInfo) $r24;

        goto label39;

     label38:
        r55 = null;

     label39:
        goto label42;

     label40:
        r56 = virtualinvoke r0.<com.android.internal.widget.ViewPager: com.android.internal.widget.ViewPager$ItemInfo addNewItem(int,int)>(i54, i53);

        i53 = i53 + 1;

        $f10 = r56.<com.android.internal.widget.ViewPager$ItemInfo: float widthFactor>;

        f18 = f18 + $f10;

        $r19 = r0.<com.android.internal.widget.ViewPager: java.util.ArrayList mItems>;

        $i27 = virtualinvoke $r19.<java.util.ArrayList: int size()>();

        if i53 >= $i27 goto label41;

        $r20 = r0.<com.android.internal.widget.ViewPager: java.util.ArrayList mItems>;

        $r21 = virtualinvoke $r20.<java.util.ArrayList: java.lang.Object get(int)>(i53);

        r55 = (com.android.internal.widget.ViewPager$ItemInfo) $r21;

        goto label42;

     label41:
        r55 = null;

     label42:
        i54 = i54 + 1;

        goto label32;

     label43:
        goto label44;

     label44:
        specialinvoke r0.<com.android.internal.widget.ViewPager: void calculatePageOffsets(com.android.internal.widget.ViewPager$ItemInfo,int,com.android.internal.widget.ViewPager$ItemInfo)>(r51, i50, r48);

        goto label45;

     label45:
        r57 = r0.<com.android.internal.widget.ViewPager: com.android.internal.widget.PagerAdapter mAdapter>;

        i55 = r0.<com.android.internal.widget.ViewPager: int mCurItem>;

        if r51 == null goto label46;

        r58 = r51.<com.android.internal.widget.ViewPager$ItemInfo: java.lang.Object object>;

        goto label47;

     label46:
        r58 = null;

     label47:
        virtualinvoke r57.<com.android.internal.widget.PagerAdapter: void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object)>(r0, i55, r58);

        $r13 = r0.<com.android.internal.widget.ViewPager: com.android.internal.widget.PagerAdapter mAdapter>;

        virtualinvoke $r13.<com.android.internal.widget.PagerAdapter: void finishUpdate(android.view.ViewGroup)>(r0);

        i56 = virtualinvoke r0.<com.android.internal.widget.ViewPager: int getChildCount()>();

        i57 = 0;

     label48:
        if i57 >= i56 goto label50;

        r59 = virtualinvoke r0.<com.android.internal.widget.ViewPager: android.view.View getChildAt(int)>(i57);

        $r17 = virtualinvoke r59.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r60 = (com.android.internal.widget.ViewPager$LayoutParams) $r17;

        r60.<com.android.internal.widget.ViewPager$LayoutParams: int childIndex> = i57;

        $z3 = r60.<com.android.internal.widget.ViewPager$LayoutParams: boolean isDecor>;

        if $z3 != 0 goto label49;

        $f0 = r60.<com.android.internal.widget.ViewPager$LayoutParams: float widthFactor>;

        $b18 = $f0 cmpl 0.0F;

        if $b18 != 0 goto label49;

        r61 = virtualinvoke r0.<com.android.internal.widget.ViewPager: com.android.internal.widget.ViewPager$ItemInfo infoForChild(android.view.View)>(r59);

        if r61 == null goto label49;

        $f1 = r61.<com.android.internal.widget.ViewPager$ItemInfo: float widthFactor>;

        r60.<com.android.internal.widget.ViewPager$LayoutParams: float widthFactor> = $f1;

        $i19 = r61.<com.android.internal.widget.ViewPager$ItemInfo: int position>;

        r60.<com.android.internal.widget.ViewPager$LayoutParams: int position> = $i19;

        goto label49;

     label49:
        i57 = i57 + 1;

        goto label48;

     label50:
        specialinvoke r0.<com.android.internal.widget.ViewPager: void sortChildDrawingOrder()>();

        $z1 = virtualinvoke r0.<com.android.internal.widget.ViewPager: boolean hasFocus()>();

        if $z1 == 0 goto label58;

        r62 = virtualinvoke r0.<com.android.internal.widget.ViewPager: android.view.View findFocus()>();

        if r62 == null goto label51;

        r63 = virtualinvoke r0.<com.android.internal.widget.ViewPager: com.android.internal.widget.ViewPager$ItemInfo infoForAnyChild(android.view.View)>(r62);

        goto label52;

     label51:
        r63 = null;

     label52:
        if r63 == null goto label53;

        $i17 = r63.<com.android.internal.widget.ViewPager$ItemInfo: int position>;

        $i16 = r0.<com.android.internal.widget.ViewPager: int mCurItem>;

        if $i17 == $i16 goto label58;

     label53:
        i58 = 0;

     label54:
        $i59 = virtualinvoke r0.<com.android.internal.widget.ViewPager: int getChildCount()>();

        if i58 >= $i59 goto label58;

        r64 = virtualinvoke r0.<com.android.internal.widget.ViewPager: android.view.View getChildAt(int)>(i58);

        r65 = virtualinvoke r0.<com.android.internal.widget.ViewPager: com.android.internal.widget.ViewPager$ItemInfo infoForChild(android.view.View)>(r64);

        if r65 == null goto label57;

        $i15 = r65.<com.android.internal.widget.ViewPager$ItemInfo: int position>;

        $i14 = r0.<com.android.internal.widget.ViewPager: int mCurItem>;

        if $i15 != $i14 goto label57;

        if r62 != null goto label55;

        r66 = null;

        goto label56;

     label55:
        r66 = r0.<com.android.internal.widget.ViewPager: android.graphics.Rect mTempRect>;

        $r14 = r0.<com.android.internal.widget.ViewPager: android.graphics.Rect mTempRect>;

        virtualinvoke r62.<android.view.View: void getFocusedRect(android.graphics.Rect)>($r14);

        $r15 = r0.<com.android.internal.widget.ViewPager: android.graphics.Rect mTempRect>;

        virtualinvoke r0.<com.android.internal.widget.ViewPager: void offsetDescendantRectToMyCoords(android.view.View,android.graphics.Rect)>(r62, $r15);

        $r16 = r0.<com.android.internal.widget.ViewPager: android.graphics.Rect mTempRect>;

        virtualinvoke r0.<com.android.internal.widget.ViewPager: void offsetRectIntoDescendantCoords(android.view.View,android.graphics.Rect)>(r64, $r16);

     label56:
        $z2 = virtualinvoke r64.<android.view.View: boolean requestFocus(int,android.graphics.Rect)>(b46, r66);

        if $z2 == 0 goto label57;

        goto label58;

     label57:
        i58 = i58 + 1;

        goto label54;

     label58:
        return;

     label59:
        $r5 = virtualinvoke r0.<com.android.internal.widget.ViewPager: android.content.res.Resources getResources()>();

        $i11 = virtualinvoke r0.<com.android.internal.widget.ViewPager: int getId()>();

        r67 = virtualinvoke $r5.<android.content.res.Resources: java.lang.String getResourceName(int)>($i11);

     label60:
        goto label62;

     label61:
        $r47 := @caughtexception;

        $i42 = virtualinvoke r0.<com.android.internal.widget.ViewPager: int getId()>();

        r67 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i42);

     label62:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The application\'s PagerAdapter changed the adapter\'s contents without calling PagerAdapter#notifyDataSetChanged! Expected adapter item count: ");

        $i12 = r0.<com.android.internal.widget.ViewPager: int mExpectedAdapterCount>;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", found: ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Pager id: ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r67);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Pager class: ");

        $r7 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Problematic adapter: ");

        $r8 = r0.<com.android.internal.widget.ViewPager: com.android.internal.widget.PagerAdapter mAdapter>;

        $r9 = virtualinvoke $r8.<java.lang.Object: java.lang.Class getClass()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r10 = new java.lang.IllegalStateException;

        $r11 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r11);

        throw $r10;

        catch android.content.res.Resources$NotFoundException from label59 to label60 with label61;
    }

    public void removeView(android.view.View)
    {
        com.android.internal.widget.ViewPager r0;
        android.view.View r1;
        boolean $z0;

        r0 := @this: com.android.internal.widget.ViewPager;

        r1 := @parameter0: android.view.View;

        $z0 = r0.<com.android.internal.widget.ViewPager: boolean mInLayout>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<com.android.internal.widget.ViewPager: void removeViewInLayout(android.view.View)>(r1);

        goto label2;

     label1:
        specialinvoke r0.<android.view.ViewGroup: void removeView(android.view.View)>(r1);

     label2:
        return;
    }

    public void setAdapter(com.android.internal.widget.PagerAdapter)
    {
        com.android.internal.widget.ViewPager r0;
        com.android.internal.widget.PagerAdapter r1, r2, $r5, $r6, $r9, $r12, $r14, $r19, r20;
        boolean z0;
        com.android.internal.widget.ViewPager$PagerObserver $r3, $r4, $r10, $r11;
        int $i0, $i1, $i2, $i3, $i4, i5;
        java.lang.ClassLoader $r7;
        android.os.Parcelable $r8;
        java.util.ArrayList $r13, $r15, $r16;
        java.lang.Object $r17, $r18;
        com.android.internal.widget.ViewPager$ItemInfo r21;
        com.android.internal.widget.ViewPager$OnAdapterChangeListener r22;

        r0 := @this: com.android.internal.widget.ViewPager;

        r1 := @parameter0: com.android.internal.widget.PagerAdapter;

        r20 = r0.<com.android.internal.widget.ViewPager: com.android.internal.widget.PagerAdapter mAdapter>;

        if r20 == null goto label3;

        $r11 = r0.<com.android.internal.widget.ViewPager: com.android.internal.widget.ViewPager$PagerObserver mObserver>;

        virtualinvoke r20.<com.android.internal.widget.PagerAdapter: void unregisterDataSetObserver(android.database.DataSetObserver)>($r11);

        $r12 = r0.<com.android.internal.widget.ViewPager: com.android.internal.widget.PagerAdapter mAdapter>;

        virtualinvoke $r12.<com.android.internal.widget.PagerAdapter: void startUpdate(android.view.ViewGroup)>(r0);

        i5 = 0;

     label1:
        $r13 = r0.<com.android.internal.widget.ViewPager: java.util.ArrayList mItems>;

        $i3 = virtualinvoke $r13.<java.util.ArrayList: int size()>();

        if i5 >= $i3 goto label2;

        $r16 = r0.<com.android.internal.widget.ViewPager: java.util.ArrayList mItems>;

        $r17 = virtualinvoke $r16.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        r21 = (com.android.internal.widget.ViewPager$ItemInfo) $r17;

        $r19 = r0.<com.android.internal.widget.ViewPager: com.android.internal.widget.PagerAdapter mAdapter>;

        $i4 = r21.<com.android.internal.widget.ViewPager$ItemInfo: int position>;

        $r18 = r21.<com.android.internal.widget.ViewPager$ItemInfo: java.lang.Object object>;

        virtualinvoke $r19.<com.android.internal.widget.PagerAdapter: void destroyItem(android.view.ViewGroup,int,java.lang.Object)>(r0, $i4, $r18);

        i5 = i5 + 1;

        goto label1;

     label2:
        $r14 = r0.<com.android.internal.widget.ViewPager: com.android.internal.widget.PagerAdapter mAdapter>;

        virtualinvoke $r14.<com.android.internal.widget.PagerAdapter: void finishUpdate(android.view.ViewGroup)>(r0);

        $r15 = r0.<com.android.internal.widget.ViewPager: java.util.ArrayList mItems>;

        virtualinvoke $r15.<java.util.ArrayList: void clear()>();

        specialinvoke r0.<com.android.internal.widget.ViewPager: void removeNonDecorViews()>();

        r0.<com.android.internal.widget.ViewPager: int mCurItem> = 0;

        virtualinvoke r0.<com.android.internal.widget.ViewPager: void scrollTo(int,int)>(0, 0);

     label3:
        r2 = r0.<com.android.internal.widget.ViewPager: com.android.internal.widget.PagerAdapter mAdapter>;

        r0.<com.android.internal.widget.ViewPager: com.android.internal.widget.PagerAdapter mAdapter> = r1;

        r0.<com.android.internal.widget.ViewPager: int mExpectedAdapterCount> = 0;

        if r1 == null goto label7;

        $r3 = r0.<com.android.internal.widget.ViewPager: com.android.internal.widget.ViewPager$PagerObserver mObserver>;

        if $r3 != null goto label4;

        $r10 = new com.android.internal.widget.ViewPager$PagerObserver;

        specialinvoke $r10.<com.android.internal.widget.ViewPager$PagerObserver: void <init>(com.android.internal.widget.ViewPager,com.android.internal.widget.ViewPager$1)>(r0, null);

        r0.<com.android.internal.widget.ViewPager: com.android.internal.widget.ViewPager$PagerObserver mObserver> = $r10;

     label4:
        $r5 = r0.<com.android.internal.widget.ViewPager: com.android.internal.widget.PagerAdapter mAdapter>;

        $r4 = r0.<com.android.internal.widget.ViewPager: com.android.internal.widget.ViewPager$PagerObserver mObserver>;

        virtualinvoke $r5.<com.android.internal.widget.PagerAdapter: void registerDataSetObserver(android.database.DataSetObserver)>($r4);

        r0.<com.android.internal.widget.ViewPager: boolean mPopulatePending> = 0;

        z0 = r0.<com.android.internal.widget.ViewPager: boolean mFirstLayout>;

        r0.<com.android.internal.widget.ViewPager: boolean mFirstLayout> = 1;

        $r6 = r0.<com.android.internal.widget.ViewPager: com.android.internal.widget.PagerAdapter mAdapter>;

        $i0 = virtualinvoke $r6.<com.android.internal.widget.PagerAdapter: int getCount()>();

        r0.<com.android.internal.widget.ViewPager: int mExpectedAdapterCount> = $i0;

        $i1 = r0.<com.android.internal.widget.ViewPager: int mRestoredCurItem>;

        if $i1 < 0 goto label5;

        $r9 = r0.<com.android.internal.widget.ViewPager: com.android.internal.widget.PagerAdapter mAdapter>;

        $r8 = r0.<com.android.internal.widget.ViewPager: android.os.Parcelable mRestoredAdapterState>;

        $r7 = r0.<com.android.internal.widget.ViewPager: java.lang.ClassLoader mRestoredClassLoader>;

        virtualinvoke $r9.<com.android.internal.widget.PagerAdapter: void restoreState(android.os.Parcelable,java.lang.ClassLoader)>($r8, $r7);

        $i2 = r0.<com.android.internal.widget.ViewPager: int mRestoredCurItem>;

        virtualinvoke r0.<com.android.internal.widget.ViewPager: boolean setCurrentItemInternal(int,boolean,boolean)>($i2, 0, 1);

        r0.<com.android.internal.widget.ViewPager: int mRestoredCurItem> = -1;

        r0.<com.android.internal.widget.ViewPager: android.os.Parcelable mRestoredAdapterState> = null;

        r0.<com.android.internal.widget.ViewPager: java.lang.ClassLoader mRestoredClassLoader> = null;

        goto label7;

     label5:
        if z0 != 0 goto label6;

        virtualinvoke r0.<com.android.internal.widget.ViewPager: void populate()>();

        goto label7;

     label6:
        virtualinvoke r0.<com.android.internal.widget.ViewPager: void requestLayout()>();

     label7:
        r22 = r0.<com.android.internal.widget.ViewPager: com.android.internal.widget.ViewPager$OnAdapterChangeListener mAdapterChangeListener>;

        if r22 == null goto label8;

        if r2 == r1 goto label8;

        interfaceinvoke r22.<com.android.internal.widget.ViewPager$OnAdapterChangeListener: void onAdapterChanged(com.android.internal.widget.PagerAdapter,com.android.internal.widget.PagerAdapter)>(r2, r1);

     label8:
        return;
    }

    public void setCurrentItem(int)
    {
        com.android.internal.widget.ViewPager r0;
        int i0;
        boolean $z0, $z1;

        r0 := @this: com.android.internal.widget.ViewPager;

        i0 := @parameter0: int;

        r0.<com.android.internal.widget.ViewPager: boolean mPopulatePending> = 0;

        $z0 = r0.<com.android.internal.widget.ViewPager: boolean mFirstLayout>;

        $z1 = $z0 ^ 1;

        virtualinvoke r0.<com.android.internal.widget.ViewPager: boolean setCurrentItemInternal(int,boolean,boolean)>(i0, $z1, 0);

        return;
    }

    public void setCurrentItem(int, boolean)
    {
        com.android.internal.widget.ViewPager r0;
        int i0;
        boolean z0;

        r0 := @this: com.android.internal.widget.ViewPager;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r0.<com.android.internal.widget.ViewPager: boolean mPopulatePending> = 0;

        virtualinvoke r0.<com.android.internal.widget.ViewPager: boolean setCurrentItemInternal(int,boolean,boolean)>(i0, z0, 0);

        return;
    }

    boolean setCurrentItemInternal(int, boolean, boolean)
    {
        com.android.internal.widget.ViewPager r0;
        int i0;
        boolean z0, z1, $z2;

        r0 := @this: com.android.internal.widget.ViewPager;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        $z2 = virtualinvoke r0.<com.android.internal.widget.ViewPager: boolean setCurrentItemInternal(int,boolean,boolean,int)>(i0, z0, z1, 0);

        return $z2;
    }

    boolean setCurrentItemInternal(int, boolean, boolean, int)
    {
        com.android.internal.widget.ViewPager r0;
        boolean z0, $z2, z3, z4;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11, $i12, i13, $i14;
        com.android.internal.widget.PagerAdapter $r1, r6;
        java.util.ArrayList $r2, $r5, $r7;
        java.lang.Object $r3;
        com.android.internal.widget.ViewPager$ItemInfo $r4;
        com.android.internal.widget.ViewPager$OnPageChangeListener r8, r9;

        r0 := @this: com.android.internal.widget.ViewPager;

        i10 := @parameter0: int;

        z0 := @parameter1: boolean;

        z3 := @parameter2: boolean;

        i0 := @parameter3: int;

        r6 = r0.<com.android.internal.widget.ViewPager: com.android.internal.widget.PagerAdapter mAdapter>;

        if r6 == null goto label11;

        $i3 = virtualinvoke r6.<com.android.internal.widget.PagerAdapter: int getCount()>();

        if $i3 > 0 goto label01;

        goto label11;

     label01:
        $r1 = r0.<com.android.internal.widget.ViewPager: com.android.internal.widget.PagerAdapter mAdapter>;

        $i4 = virtualinvoke $r1.<com.android.internal.widget.PagerAdapter: int getCount()>();

        $i5 = $i4 - 1;

        i1 = staticinvoke <android.util.MathUtils: int constrain(int,int,int)>(i10, 0, $i5);

        if z3 != 0 goto label02;

        $i8 = r0.<com.android.internal.widget.ViewPager: int mCurItem>;

        if $i8 != i1 goto label02;

        $r5 = r0.<com.android.internal.widget.ViewPager: java.util.ArrayList mItems>;

        $i9 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        if $i9 == 0 goto label02;

        specialinvoke r0.<com.android.internal.widget.ViewPager: void setScrollingCacheEnabled(boolean)>(0);

        return 0;

     label02:
        i11 = r0.<com.android.internal.widget.ViewPager: int mOffscreenPageLimit>;

        i2 = r0.<com.android.internal.widget.ViewPager: int mCurItem>;

        $i12 = i2 + i11;

        if i1 > $i12 goto label03;

        $i7 = i2 - i11;

        if i1 >= $i7 goto label05;

     label03:
        i13 = 0;

     label04:
        $r7 = r0.<com.android.internal.widget.ViewPager: java.util.ArrayList mItems>;

        $i14 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        if i13 >= $i14 goto label05;

        $r2 = r0.<com.android.internal.widget.ViewPager: java.util.ArrayList mItems>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i13);

        $r4 = (com.android.internal.widget.ViewPager$ItemInfo) $r3;

        $r4.<com.android.internal.widget.ViewPager$ItemInfo: boolean scrolling> = 1;

        i13 = i13 + 1;

        goto label04;

     label05:
        z4 = 0;

        $i6 = r0.<com.android.internal.widget.ViewPager: int mCurItem>;

        if $i6 == i1 goto label06;

        z4 = 1;

     label06:
        $z2 = r0.<com.android.internal.widget.ViewPager: boolean mFirstLayout>;

        if $z2 == 0 goto label09;

        r0.<com.android.internal.widget.ViewPager: int mCurItem> = i1;

        if z4 == 0 goto label07;

        r8 = r0.<com.android.internal.widget.ViewPager: com.android.internal.widget.ViewPager$OnPageChangeListener mOnPageChangeListener>;

        if r8 == null goto label07;

        interfaceinvoke r8.<com.android.internal.widget.ViewPager$OnPageChangeListener: void onPageSelected(int)>(i1);

     label07:
        if z4 == 0 goto label08;

        r9 = r0.<com.android.internal.widget.ViewPager: com.android.internal.widget.ViewPager$OnPageChangeListener mInternalPageChangeListener>;

        if r9 == null goto label08;

        interfaceinvoke r9.<com.android.internal.widget.ViewPager$OnPageChangeListener: void onPageSelected(int)>(i1);

     label08:
        virtualinvoke r0.<com.android.internal.widget.ViewPager: void requestLayout()>();

        goto label10;

     label09:
        virtualinvoke r0.<com.android.internal.widget.ViewPager: void populate(int)>(i1);

        specialinvoke r0.<com.android.internal.widget.ViewPager: void scrollToItem(int,boolean,int,boolean)>(i1, z0, i0, z4);

     label10:
        return 1;

     label11:
        specialinvoke r0.<com.android.internal.widget.ViewPager: void setScrollingCacheEnabled(boolean)>(0);

        return 0;
    }

    com.android.internal.widget.ViewPager$OnPageChangeListener setInternalPageChangeListener(com.android.internal.widget.ViewPager$OnPageChangeListener)
    {
        com.android.internal.widget.ViewPager r0;
        com.android.internal.widget.ViewPager$OnPageChangeListener r1, r2;

        r0 := @this: com.android.internal.widget.ViewPager;

        r1 := @parameter0: com.android.internal.widget.ViewPager$OnPageChangeListener;

        r2 = r0.<com.android.internal.widget.ViewPager: com.android.internal.widget.ViewPager$OnPageChangeListener mInternalPageChangeListener>;

        r0.<com.android.internal.widget.ViewPager: com.android.internal.widget.ViewPager$OnPageChangeListener mInternalPageChangeListener> = r1;

        return r2;
    }

    public void setOffscreenPageLimit(int)
    {
        com.android.internal.widget.ViewPager r0;
        int i0, $i1, i3;
        java.lang.StringBuilder $r2;
        java.lang.String $r7;

        r0 := @this: com.android.internal.widget.ViewPager;

        i0 := @parameter0: int;

        i3 = i0;

        if i0 >= 1 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requested offscreen page limit ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" too small; defaulting to ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(1);

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ViewPager", $r7);

        i3 = 1;

     label1:
        $i1 = r0.<com.android.internal.widget.ViewPager: int mOffscreenPageLimit>;

        if i3 == $i1 goto label2;

        r0.<com.android.internal.widget.ViewPager: int mOffscreenPageLimit> = i3;

        virtualinvoke r0.<com.android.internal.widget.ViewPager: void populate()>();

     label2:
        return;
    }

    void setOnAdapterChangeListener(com.android.internal.widget.ViewPager$OnAdapterChangeListener)
    {
        com.android.internal.widget.ViewPager r0;
        com.android.internal.widget.ViewPager$OnAdapterChangeListener r1;

        r0 := @this: com.android.internal.widget.ViewPager;

        r1 := @parameter0: com.android.internal.widget.ViewPager$OnAdapterChangeListener;

        r0.<com.android.internal.widget.ViewPager: com.android.internal.widget.ViewPager$OnAdapterChangeListener mAdapterChangeListener> = r1;

        return;
    }

    public void setOnPageChangeListener(com.android.internal.widget.ViewPager$OnPageChangeListener)
    {
        com.android.internal.widget.ViewPager r0;
        com.android.internal.widget.ViewPager$OnPageChangeListener r1;

        r0 := @this: com.android.internal.widget.ViewPager;

        r1 := @parameter0: com.android.internal.widget.ViewPager$OnPageChangeListener;

        r0.<com.android.internal.widget.ViewPager: com.android.internal.widget.ViewPager$OnPageChangeListener mOnPageChangeListener> = r1;

        return;
    }

    public void setPageMargin(int)
    {
        com.android.internal.widget.ViewPager r0;
        int i0, i1, i2;

        r0 := @this: com.android.internal.widget.ViewPager;

        i0 := @parameter0: int;

        i1 = r0.<com.android.internal.widget.ViewPager: int mPageMargin>;

        r0.<com.android.internal.widget.ViewPager: int mPageMargin> = i0;

        i2 = virtualinvoke r0.<com.android.internal.widget.ViewPager: int getWidth()>();

        specialinvoke r0.<com.android.internal.widget.ViewPager: void recomputeScrollPosition(int,int,int,int)>(i2, i2, i0, i1);

        virtualinvoke r0.<com.android.internal.widget.ViewPager: void requestLayout()>();

        return;
    }

    public void setPageMarginDrawable(int)
    {
        com.android.internal.widget.ViewPager r0;
        int i0;
        android.content.Context $r1;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: com.android.internal.widget.ViewPager;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.android.internal.widget.ViewPager: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>(i0);

        virtualinvoke r0.<com.android.internal.widget.ViewPager: void setPageMarginDrawable(android.graphics.drawable.Drawable)>($r2);

        return;
    }

    public void setPageMarginDrawable(android.graphics.drawable.Drawable)
    {
        com.android.internal.widget.ViewPager r0;
        android.graphics.drawable.Drawable r1;
        boolean z0;

        r0 := @this: com.android.internal.widget.ViewPager;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        r0.<com.android.internal.widget.ViewPager: android.graphics.drawable.Drawable mMarginDrawable> = r1;

        if r1 == null goto label1;

        virtualinvoke r0.<com.android.internal.widget.ViewPager: void refreshDrawableState()>();

     label1:
        if r1 != null goto label2;

        z0 = 1;

        goto label3;

     label2:
        z0 = 0;

     label3:
        virtualinvoke r0.<com.android.internal.widget.ViewPager: void setWillNotDraw(boolean)>(z0);

        virtualinvoke r0.<com.android.internal.widget.ViewPager: void invalidate()>();

        return;
    }

    public void setPageTransformer(boolean, com.android.internal.widget.ViewPager$PageTransformer)
    {
        com.android.internal.widget.ViewPager r0;
        boolean z0, z1, z2, z3;
        com.android.internal.widget.ViewPager$PageTransformer r1, $r2;
        byte b0;

        r0 := @this: com.android.internal.widget.ViewPager;

        z0 := @parameter0: boolean;

        r1 := @parameter1: com.android.internal.widget.ViewPager$PageTransformer;

        b0 = 1;

        if r1 == null goto label01;

        z1 = 1;

        goto label02;

     label01:
        z1 = 0;

     label02:
        $r2 = r0.<com.android.internal.widget.ViewPager: com.android.internal.widget.ViewPager$PageTransformer mPageTransformer>;

        if $r2 == null goto label03;

        z2 = 1;

        goto label04;

     label03:
        z2 = 0;

     label04:
        if z1 == z2 goto label05;

        z3 = 1;

        goto label06;

     label05:
        z3 = 0;

     label06:
        r0.<com.android.internal.widget.ViewPager: com.android.internal.widget.ViewPager$PageTransformer mPageTransformer> = r1;

        virtualinvoke r0.<com.android.internal.widget.ViewPager: void setChildrenDrawingOrderEnabled(boolean)>(z1);

        if z1 == 0 goto label08;

        if z0 == 0 goto label07;

        b0 = 2;

     label07:
        r0.<com.android.internal.widget.ViewPager: int mDrawingOrder> = b0;

        goto label09;

     label08:
        r0.<com.android.internal.widget.ViewPager: int mDrawingOrder> = 0;

     label09:
        if z3 == 0 goto label10;

        virtualinvoke r0.<com.android.internal.widget.ViewPager: void populate()>();

     label10:
        return;
    }

    void smoothScrollTo(int, int)
    {
        com.android.internal.widget.ViewPager r0;
        int i0, i1;

        r0 := @this: com.android.internal.widget.ViewPager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<com.android.internal.widget.ViewPager: void smoothScrollTo(int,int,int)>(i0, i1, 0);

        return;
    }

    void smoothScrollTo(int, int, int)
    {
        com.android.internal.widget.ViewPager r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11, i12, i13, i14, i15, i16, i17;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, f17, f18, f19, f20, f21, f22;
        com.android.internal.widget.PagerAdapter $r1;
        android.widget.Scroller $r2;

        r0 := @this: com.android.internal.widget.ViewPager;

        i10 := @parameter0: int;

        i11 := @parameter1: int;

        i12 := @parameter2: int;

        $i4 = virtualinvoke r0.<com.android.internal.widget.ViewPager: int getChildCount()>();

        if $i4 != 0 goto label1;

        specialinvoke r0.<com.android.internal.widget.ViewPager: void setScrollingCacheEnabled(boolean)>(0);

        return;

     label1:
        i0 = virtualinvoke r0.<com.android.internal.widget.ViewPager: int getScrollX()>();

        i1 = virtualinvoke r0.<com.android.internal.widget.ViewPager: int getScrollY()>();

        i2 = i10 - i0;

        i13 = i11 - i1;

        if i2 != 0 goto label2;

        if i13 != 0 goto label2;

        specialinvoke r0.<com.android.internal.widget.ViewPager: void completeScroll(boolean)>(0);

        virtualinvoke r0.<com.android.internal.widget.ViewPager: void populate()>();

        specialinvoke r0.<com.android.internal.widget.ViewPager: void setScrollState(int)>(0);

        return;

     label2:
        specialinvoke r0.<com.android.internal.widget.ViewPager: void setScrollingCacheEnabled(boolean)>(1);

        specialinvoke r0.<com.android.internal.widget.ViewPager: void setScrollState(int)>(2);

        i14 = specialinvoke r0.<com.android.internal.widget.ViewPager: int getPaddedWidth()>();

        i3 = i14 / 2;

        $i5 = staticinvoke <java.lang.Math: int abs(int)>(i2);

        $f0 = (float) $i5;

        $f2 = $f0 * 1.0F;

        $f1 = (float) i14;

        $f3 = $f2 / $f1;

        f17 = staticinvoke <java.lang.Math: float min(float,float)>(1.0F, $f3);

        f18 = (float) i3;

        f19 = (float) i3;

        f20 = virtualinvoke r0.<com.android.internal.widget.ViewPager: float distanceInfluenceForSnapDuration(float)>(f17);

        i15 = staticinvoke <java.lang.Math: int abs(int)>(i12);

        if i15 <= 0 goto label3;

        $f11 = f19 * f20;

        $f13 = f18 + $f11;

        $f12 = (float) i15;

        $f14 = $f13 / $f12;

        $f15 = staticinvoke <java.lang.Math: float abs(float)>($f14);

        $f16 = $f15 * 1000.0F;

        $i9 = staticinvoke <java.lang.Math: int round(float)>($f16);

        i16 = $i9 * 4;

        goto label4;

     label3:
        f21 = (float) i14;

        $r1 = r0.<com.android.internal.widget.ViewPager: com.android.internal.widget.PagerAdapter mAdapter>;

        $i6 = r0.<com.android.internal.widget.ViewPager: int mCurItem>;

        f22 = virtualinvoke $r1.<com.android.internal.widget.PagerAdapter: float getPageWidth(int)>($i6);

        $i7 = staticinvoke <java.lang.Math: int abs(int)>(i2);

        $f7 = (float) $i7;

        $i8 = r0.<com.android.internal.widget.ViewPager: int mPageMargin>;

        $f5 = (float) $i8;

        $f4 = f21 * f22;

        $f6 = $f5 + $f4;

        $f8 = $f7 / $f6;

        $f9 = 1.0F + $f8;

        $f10 = $f9 * 100.0F;

        i16 = (int) $f10;

     label4:
        i17 = staticinvoke <java.lang.Math: int min(int,int)>(i16, 600);

        $r2 = r0.<com.android.internal.widget.ViewPager: android.widget.Scroller mScroller>;

        virtualinvoke $r2.<android.widget.Scroller: void startScroll(int,int,int,int,int)>(i0, i1, i2, i13, i17);

        virtualinvoke r0.<com.android.internal.widget.ViewPager: void postInvalidateOnAnimation()>();

        return;
    }

    protected boolean verifyDrawable(android.graphics.drawable.Drawable)
    {
        com.android.internal.widget.ViewPager r0;
        android.graphics.drawable.Drawable r1, $r2;
        boolean $z0, z1;

        r0 := @this: com.android.internal.widget.ViewPager;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        $z0 = specialinvoke r0.<android.view.ViewGroup: boolean verifyDrawable(android.graphics.drawable.Drawable)>(r1);

        if $z0 != 0 goto label2;

        $r2 = r0.<com.android.internal.widget.ViewPager: android.graphics.drawable.Drawable mMarginDrawable>;

        if r1 != $r2 goto label1;

        goto label2;

     label1:
        z1 = 0;

        goto label3;

     label2:
        z1 = 1;

     label3:
        return z1;
    }
}
