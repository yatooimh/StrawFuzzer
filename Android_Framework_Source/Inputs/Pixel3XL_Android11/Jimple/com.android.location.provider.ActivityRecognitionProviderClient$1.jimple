class com.android.location.provider.ActivityRecognitionProviderClient$1 extends android.hardware.location.IActivityRecognitionHardwareClient$Stub
{
    final com.android.location.provider.ActivityRecognitionProviderClient this$0;

    void <init>(com.android.location.provider.ActivityRecognitionProviderClient)
    {
        com.android.location.provider.ActivityRecognitionProviderClient$1 r0;
        com.android.location.provider.ActivityRecognitionProviderClient r1;

        r0 := @this: com.android.location.provider.ActivityRecognitionProviderClient$1;

        r1 := @parameter0: com.android.location.provider.ActivityRecognitionProviderClient;

        r0.<com.android.location.provider.ActivityRecognitionProviderClient$1: com.android.location.provider.ActivityRecognitionProviderClient this$0> = r1;

        specialinvoke r0.<android.hardware.location.IActivityRecognitionHardwareClient$Stub: void <init>()>();

        return;
    }

    public void onAvailabilityChanged(boolean, android.hardware.location.IActivityRecognitionHardware)
    {
        com.android.location.provider.ActivityRecognitionProviderClient$1 r0;
        boolean z0;
        int i0;
        com.android.location.provider.ActivityRecognitionProviderClient $r1;
        com.android.location.provider.ActivityRecognitionProvider $r2, r10;
        java.lang.StringBuilder $r3;
        java.lang.String $r6;
        android.os.RemoteException $r7;
        android.hardware.location.IActivityRecognitionHardware r8;

        r0 := @this: com.android.location.provider.ActivityRecognitionProviderClient$1;

        z0 := @parameter0: boolean;

        r8 := @parameter1: android.hardware.location.IActivityRecognitionHardware;

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if i0 == 1000 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring calls from non-system server. Uid: ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ArProviderClient", $r6);

        return;

     label1:
        if z0 == 0 goto label5;

     label2:
        $r2 = new com.android.location.provider.ActivityRecognitionProvider;

        specialinvoke $r2.<com.android.location.provider.ActivityRecognitionProvider: void <init>(android.hardware.location.IActivityRecognitionHardware)>(r8);

        r10 = $r2;

     label3:
        goto label6;

     label4:
        $r7 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ArProviderClient", "Error creating Hardware Activity-Recognition Provider.", $r7);

        return;

     label5:
        r10 = null;

     label6:
        $r1 = r0.<com.android.location.provider.ActivityRecognitionProviderClient$1: com.android.location.provider.ActivityRecognitionProviderClient this$0>;

        virtualinvoke $r1.<com.android.location.provider.ActivityRecognitionProviderClient: void onProviderChanged(boolean,com.android.location.provider.ActivityRecognitionProvider)>(z0, r10);

        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }
}
