public abstract class com.android.location.provider.LocationProviderBase extends java.lang.Object
{
    public static final java.lang.String EXTRA_NO_GPS_LOCATION;
    public static final java.lang.String FUSED_PROVIDER;
    private final java.util.ArrayList mAdditionalProviderPackages;
    private volatile boolean mAllowed;
    private final android.os.IBinder mBinder;
    protected final android.location.ILocationManager mLocationManager;
    private volatile com.android.internal.location.ILocationProviderManager mManager;
    private volatile com.android.internal.location.ProviderProperties mProperties;
    private final java.lang.String mTag;

    public void <init>(java.lang.String, com.android.location.provider.ProviderPropertiesUnbundled)
    {
        com.android.location.provider.LocationProviderBase r0;
        java.lang.String r1;
        com.android.location.provider.ProviderPropertiesUnbundled r2;
        com.android.location.provider.LocationProviderBase$Service $r3;
        android.os.IBinder $r4;
        android.location.ILocationManager $r5;
        com.android.internal.location.ProviderProperties $r6;
        java.util.ArrayList $r7;

        r0 := @this: com.android.location.provider.LocationProviderBase;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.android.location.provider.ProviderPropertiesUnbundled;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.location.provider.LocationProviderBase: java.lang.String mTag> = r1;

        $r3 = new com.android.location.provider.LocationProviderBase$Service;

        specialinvoke $r3.<com.android.location.provider.LocationProviderBase$Service: void <init>(com.android.location.provider.LocationProviderBase,com.android.location.provider.LocationProviderBase$1)>(r0, null);

        r0.<com.android.location.provider.LocationProviderBase: android.os.IBinder mBinder> = $r3;

        $r4 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("location");

        $r5 = staticinvoke <android.location.ILocationManager$Stub: android.location.ILocationManager asInterface(android.os.IBinder)>($r4);

        r0.<com.android.location.provider.LocationProviderBase: android.location.ILocationManager mLocationManager> = $r5;

        r0.<com.android.location.provider.LocationProviderBase: com.android.internal.location.ILocationProviderManager mManager> = null;

        $r6 = virtualinvoke r2.<com.android.location.provider.ProviderPropertiesUnbundled: com.android.internal.location.ProviderProperties getProviderProperties()>();

        r0.<com.android.location.provider.LocationProviderBase: com.android.internal.location.ProviderProperties mProperties> = $r6;

        r0.<com.android.location.provider.LocationProviderBase: boolean mAllowed> = 1;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>(int)>(0);

        r0.<com.android.location.provider.LocationProviderBase: java.util.ArrayList mAdditionalProviderPackages> = $r7;

        return;
    }

    static android.os.IBinder access$100(com.android.location.provider.LocationProviderBase)
    {
        com.android.location.provider.LocationProviderBase r0;
        android.os.IBinder $r1;

        r0 := @parameter0: com.android.location.provider.LocationProviderBase;

        $r1 = r0.<com.android.location.provider.LocationProviderBase: android.os.IBinder mBinder>;

        return $r1;
    }

    static java.util.ArrayList access$200(com.android.location.provider.LocationProviderBase)
    {
        com.android.location.provider.LocationProviderBase r0;
        java.util.ArrayList $r1;

        r0 := @parameter0: com.android.location.provider.LocationProviderBase;

        $r1 = r0.<com.android.location.provider.LocationProviderBase: java.util.ArrayList mAdditionalProviderPackages>;

        return $r1;
    }

    static com.android.internal.location.ProviderProperties access$300(com.android.location.provider.LocationProviderBase)
    {
        com.android.location.provider.LocationProviderBase r0;
        com.android.internal.location.ProviderProperties $r1;

        r0 := @parameter0: com.android.location.provider.LocationProviderBase;

        $r1 = r0.<com.android.location.provider.LocationProviderBase: com.android.internal.location.ProviderProperties mProperties>;

        return $r1;
    }

    static boolean access$400(com.android.location.provider.LocationProviderBase)
    {
        com.android.location.provider.LocationProviderBase r0;
        boolean $z0;

        r0 := @parameter0: com.android.location.provider.LocationProviderBase;

        $z0 = r0.<com.android.location.provider.LocationProviderBase: boolean mAllowed>;

        return $z0;
    }

    static java.lang.String access$500(com.android.location.provider.LocationProviderBase)
    {
        com.android.location.provider.LocationProviderBase r0;
        java.lang.String $r1;

        r0 := @parameter0: com.android.location.provider.LocationProviderBase;

        $r1 = r0.<com.android.location.provider.LocationProviderBase: java.lang.String mTag>;

        return $r1;
    }

    static com.android.internal.location.ILocationProviderManager access$602(com.android.location.provider.LocationProviderBase, com.android.internal.location.ILocationProviderManager)
    {
        com.android.location.provider.LocationProviderBase r0;
        com.android.internal.location.ILocationProviderManager r1;

        r0 := @parameter0: com.android.location.provider.LocationProviderBase;

        r1 := @parameter1: com.android.internal.location.ILocationProviderManager;

        r0.<com.android.location.provider.LocationProviderBase: com.android.internal.location.ILocationProviderManager mManager> = r1;

        return r1;
    }

    public android.os.IBinder getBinder()
    {
        com.android.location.provider.LocationProviderBase r0;
        android.os.IBinder $r1;

        r0 := @this: com.android.location.provider.LocationProviderBase;

        $r1 = r0.<com.android.location.provider.LocationProviderBase: android.os.IBinder mBinder>;

        return $r1;
    }

    public boolean isAllowed()
    {
        com.android.location.provider.LocationProviderBase r0;
        boolean $z0;

        r0 := @this: com.android.location.provider.LocationProviderBase;

        $z0 = r0.<com.android.location.provider.LocationProviderBase: boolean mAllowed>;

        return $z0;
    }

    public boolean isEnabled()
    {
        com.android.location.provider.LocationProviderBase r0;
        boolean $z0;

        r0 := @this: com.android.location.provider.LocationProviderBase;

        $z0 = virtualinvoke r0.<com.android.location.provider.LocationProviderBase: boolean isAllowed()>();

        return $z0;
    }

    protected void onDisable()
    {
        com.android.location.provider.LocationProviderBase r0;

        r0 := @this: com.android.location.provider.LocationProviderBase;

        return;
    }

    protected void onDump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.location.provider.LocationProviderBase r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;

        r0 := @this: com.android.location.provider.LocationProviderBase;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        return;
    }

    protected void onEnable()
    {
        com.android.location.provider.LocationProviderBase r0;

        r0 := @this: com.android.location.provider.LocationProviderBase;

        return;
    }

    protected int onGetStatus(android.os.Bundle)
    {
        com.android.location.provider.LocationProviderBase r0;
        android.os.Bundle r1;

        r0 := @this: com.android.location.provider.LocationProviderBase;

        r1 := @parameter0: android.os.Bundle;

        return 2;
    }

    protected long onGetStatusUpdateTime()
    {
        com.android.location.provider.LocationProviderBase r0;

        r0 := @this: com.android.location.provider.LocationProviderBase;

        return 0L;
    }

    protected void onInit()
    {
        com.android.location.provider.LocationProviderBase r0;

        r0 := @this: com.android.location.provider.LocationProviderBase;

        virtualinvoke r0.<com.android.location.provider.LocationProviderBase: void onEnable()>();

        return;
    }

    protected boolean onSendExtraCommand(java.lang.String, android.os.Bundle)
    {
        com.android.location.provider.LocationProviderBase r0;
        java.lang.String r1;
        android.os.Bundle r2;

        r0 := @this: com.android.location.provider.LocationProviderBase;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        return 0;
    }

    protected abstract void onSetRequest(com.android.location.provider.ProviderRequestUnbundled, android.os.WorkSource);

    public void reportLocation(android.location.Location)
    {
        com.android.location.provider.LocationProviderBase r0;
        com.android.internal.location.ILocationProviderManager r1;
        boolean $z0, $z1, $z2;
        android.location.Location $r2, r5, r7;
        java.lang.Exception $r3;
        java.lang.String $r4;
        android.os.Bundle r6, r9;

        r0 := @this: com.android.location.provider.LocationProviderBase;

        r5 := @parameter0: android.location.Location;

        r1 = r0.<com.android.location.provider.LocationProviderBase: com.android.internal.location.ILocationProviderManager mManager>;

        if r1 == null goto label5;

        r6 = virtualinvoke r5.<android.location.Location: android.os.Bundle getExtras()>();

        r7 = r5;

        if r6 == null goto label2;

        $z0 = virtualinvoke r6.<android.os.Bundle: boolean containsKey(java.lang.String)>("noGPSLocation");

        if $z0 != 0 goto label1;

        r7 = r5;

        $z2 = virtualinvoke r6.<android.os.Bundle: boolean containsKey(java.lang.String)>("coarseLocation");

        if $z2 == 0 goto label2;

     label1:
        $r2 = new android.location.Location;

        specialinvoke $r2.<android.location.Location: void <init>(android.location.Location)>(r5);

        r9 = virtualinvoke $r2.<android.location.Location: android.os.Bundle getExtras()>();

        virtualinvoke r9.<android.os.Bundle: void remove(java.lang.String)>("noGPSLocation");

        virtualinvoke r9.<android.os.Bundle: void remove(java.lang.String)>("coarseLocation");

        r7 = $r2;

        $z1 = virtualinvoke r9.<android.os.Bundle: boolean isEmpty()>();

        if $z1 == 0 goto label2;

        virtualinvoke $r2.<android.location.Location: void setExtras(android.os.Bundle)>(null);

        r7 = $r2;

     label2:
        interfaceinvoke r1.<com.android.internal.location.ILocationProviderManager: void onReportLocation(android.location.Location)>(r7);

     label3:
        goto label5;

     label4:
        $r3 := @caughtexception;

        $r4 = r0.<com.android.location.provider.LocationProviderBase: java.lang.String mTag>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.Throwable)>($r4, $r3);

     label5:
        return;

        catch android.os.RemoteException from label2 to label3 with label4;
        catch java.lang.RuntimeException from label2 to label3 with label4;
    }

    public void setAdditionalProviderPackages(java.util.List)
    {
        com.android.location.provider.LocationProviderBase r0;
        android.os.IBinder r1;
        java.util.ArrayList $r2, $r3, $r4;
        java.lang.Throwable $r5;
        java.lang.Exception $r6;
        java.lang.String $r7;
        java.util.List r8;
        com.android.internal.location.ILocationProviderManager r9;

        r0 := @this: com.android.location.provider.LocationProviderBase;

        r8 := @parameter0: java.util.List;

        r1 = r0.<com.android.location.provider.LocationProviderBase: android.os.IBinder mBinder>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.location.provider.LocationProviderBase: java.util.ArrayList mAdditionalProviderPackages>;

        virtualinvoke $r2.<java.util.ArrayList: void clear()>();

        $r3 = r0.<com.android.location.provider.LocationProviderBase: java.util.ArrayList mAdditionalProviderPackages>;

        virtualinvoke $r3.<java.util.ArrayList: boolean addAll(java.util.Collection)>(r8);

        exitmonitor r1;

     label2:
        r9 = r0.<com.android.location.provider.LocationProviderBase: com.android.internal.location.ILocationProviderManager mManager>;

        if r9 == null goto label6;

     label3:
        $r4 = r0.<com.android.location.provider.LocationProviderBase: java.util.ArrayList mAdditionalProviderPackages>;

        interfaceinvoke r9.<com.android.internal.location.ILocationProviderManager: void onSetAdditionalProviderPackages(java.util.List)>($r4);

     label4:
        goto label6;

     label5:
        $r6 := @caughtexception;

        $r7 = r0.<com.android.location.provider.LocationProviderBase: java.lang.String mTag>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.Throwable)>($r7, $r6);

     label6:
        return;

     label7:
        $r5 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch android.os.RemoteException from label3 to label4 with label5;
        catch java.lang.RuntimeException from label3 to label4 with label5;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public void setAllowed(boolean)
    {
        com.android.location.provider.LocationProviderBase r0;
        boolean z0, $z1, $z2;
        android.os.IBinder r1;
        java.lang.Throwable $r2;
        java.lang.Exception $r3;
        java.lang.String $r4;
        com.android.internal.location.ILocationProviderManager r5;

        r0 := @this: com.android.location.provider.LocationProviderBase;

        z0 := @parameter0: boolean;

        r1 = r0.<com.android.location.provider.LocationProviderBase: android.os.IBinder mBinder>;

        entermonitor r1;

     label01:
        $z1 = r0.<com.android.location.provider.LocationProviderBase: boolean mAllowed>;

        if $z1 != z0 goto label03;

        exitmonitor r1;

     label02:
        return;

     label03:
        r0.<com.android.location.provider.LocationProviderBase: boolean mAllowed> = z0;

        exitmonitor r1;

     label04:
        r5 = r0.<com.android.location.provider.LocationProviderBase: com.android.internal.location.ILocationProviderManager mManager>;

        if r5 == null goto label08;

     label05:
        $z2 = r0.<com.android.location.provider.LocationProviderBase: boolean mAllowed>;

        interfaceinvoke r5.<com.android.internal.location.ILocationProviderManager: void onSetAllowed(boolean)>($z2);

     label06:
        goto label08;

     label07:
        $r3 := @caughtexception;

        $r4 = r0.<com.android.location.provider.LocationProviderBase: java.lang.String mTag>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.Throwable)>($r4, $r3);

     label08:
        return;

     label09:
        $r2 := @caughtexception;

     label10:
        exitmonitor r1;

     label11:
        throw $r2;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch android.os.RemoteException from label05 to label06 with label07;
        catch java.lang.RuntimeException from label05 to label06 with label07;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public void setEnabled(boolean)
    {
        com.android.location.provider.LocationProviderBase r0;
        boolean z0;

        r0 := @this: com.android.location.provider.LocationProviderBase;

        z0 := @parameter0: boolean;

        virtualinvoke r0.<com.android.location.provider.LocationProviderBase: void setAllowed(boolean)>(z0);

        return;
    }

    public void setProperties(com.android.location.provider.ProviderPropertiesUnbundled)
    {
        com.android.location.provider.LocationProviderBase r0;
        android.os.IBinder r1;
        com.android.internal.location.ProviderProperties $r2, $r3;
        java.lang.Exception $r4;
        java.lang.String $r5;
        java.lang.Throwable $r6;
        com.android.location.provider.ProviderPropertiesUnbundled r7;
        com.android.internal.location.ILocationProviderManager r8;

        r0 := @this: com.android.location.provider.LocationProviderBase;

        r7 := @parameter0: com.android.location.provider.ProviderPropertiesUnbundled;

        r1 = r0.<com.android.location.provider.LocationProviderBase: android.os.IBinder mBinder>;

        entermonitor r1;

     label1:
        $r2 = virtualinvoke r7.<com.android.location.provider.ProviderPropertiesUnbundled: com.android.internal.location.ProviderProperties getProviderProperties()>();

        r0.<com.android.location.provider.LocationProviderBase: com.android.internal.location.ProviderProperties mProperties> = $r2;

        exitmonitor r1;

     label2:
        r8 = r0.<com.android.location.provider.LocationProviderBase: com.android.internal.location.ILocationProviderManager mManager>;

        if r8 == null goto label6;

     label3:
        $r3 = r0.<com.android.location.provider.LocationProviderBase: com.android.internal.location.ProviderProperties mProperties>;

        interfaceinvoke r8.<com.android.internal.location.ILocationProviderManager: void onSetProperties(com.android.internal.location.ProviderProperties)>($r3);

     label4:
        goto label6;

     label5:
        $r4 := @caughtexception;

        $r5 = r0.<com.android.location.provider.LocationProviderBase: java.lang.String mTag>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.Throwable)>($r5, $r4);

     label6:
        return;

     label7:
        $r6 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch android.os.RemoteException from label3 to label4 with label5;
        catch java.lang.RuntimeException from label3 to label4 with label5;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public static void <clinit>()
    {
        <com.android.location.provider.LocationProviderBase: java.lang.String FUSED_PROVIDER> = "fused";

        <com.android.location.provider.LocationProviderBase: java.lang.String EXTRA_NO_GPS_LOCATION> = "noGPSLocation";

        return;
    }
}
