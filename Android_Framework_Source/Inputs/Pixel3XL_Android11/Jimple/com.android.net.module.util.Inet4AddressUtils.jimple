public class com.android.net.module.util.Inet4AddressUtils extends java.lang.Object
{

    public void <init>()
    {
        com.android.net.module.util.Inet4AddressUtils r0;

        r0 := @this: com.android.net.module.util.Inet4AddressUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.net.Inet4Address getBroadcastAddress(java.net.Inet4Address, int) throws java.lang.IllegalArgumentException
    {
        java.net.Inet4Address r0, $r1;
        int i0, $i1, $i2, $i3;

        r0 := @parameter0: java.net.Inet4Address;

        i0 := @parameter1: int;

        $i1 = staticinvoke <com.android.net.module.util.Inet4AddressUtils: int inet4AddressToIntHTH(java.net.Inet4Address)>(r0);

        $i2 = staticinvoke <com.android.net.module.util.Inet4AddressUtils: int prefixLengthToV4NetmaskIntHTH(int)>(i0);

        $i3 = $i1 | $i2;

        $r1 = staticinvoke <com.android.net.module.util.Inet4AddressUtils: java.net.Inet4Address intToInet4AddressHTH(int)>($i3);

        return $r1;
    }

    public static int getImplicitNetmask(java.net.Inet4Address)
    {
        java.net.Inet4Address r0;
        short s0;
        byte[] $r1;
        byte $b1;

        r0 := @parameter0: java.net.Inet4Address;

        $r1 = virtualinvoke r0.<java.net.Inet4Address: byte[] getAddress()>();

        $b1 = $r1[0];

        s0 = $b1 & 255;

        if s0 >= 128 goto label1;

        return 8;

     label1:
        if s0 >= 192 goto label2;

        return 16;

     label2:
        if s0 >= 224 goto label3;

        return 24;

     label3:
        return 32;
    }

    public static java.net.Inet4Address getPrefixMaskAsInet4Address(int) throws java.lang.IllegalArgumentException
    {
        int i0, $i1;
        java.net.Inet4Address $r0;

        i0 := @parameter0: int;

        $i1 = staticinvoke <com.android.net.module.util.Inet4AddressUtils: int prefixLengthToV4NetmaskIntHTH(int)>(i0);

        $r0 = staticinvoke <com.android.net.module.util.Inet4AddressUtils: java.net.Inet4Address intToInet4AddressHTH(int)>($i1);

        return $r0;
    }

    public static int inet4AddressToIntHTH(java.net.Inet4Address) throws java.lang.IllegalArgumentException
    {
        byte $b0, $b2, $b6, $b10;
        short $s1, $s3, $s7, $s11;
        int $i4, $i5, $i8, $i9, $i12, $i13;
        java.net.Inet4Address r0;
        byte[] r1;

        r0 := @parameter0: java.net.Inet4Address;

        r1 = virtualinvoke r0.<java.net.Inet4Address: byte[] getAddress()>();

        $b0 = r1[0];

        $s1 = $b0 & 255;

        $i5 = $s1 << 24;

        $b2 = r1[1];

        $s3 = $b2 & 255;

        $i4 = $s3 << 16;

        $i9 = $i5 | $i4;

        $b6 = r1[2];

        $s7 = $b6 & 255;

        $i8 = $s7 << 8;

        $i12 = $i9 | $i8;

        $b10 = r1[3];

        $s11 = $b10 & 255;

        $i13 = $i12 | $s11;

        return $i13;
    }

    public static int inet4AddressToIntHTL(java.net.Inet4Address)
    {
        java.net.Inet4Address r0;
        int $i0, $i1;

        r0 := @parameter0: java.net.Inet4Address;

        $i0 = staticinvoke <com.android.net.module.util.Inet4AddressUtils: int inet4AddressToIntHTH(java.net.Inet4Address)>(r0);

        $i1 = staticinvoke <java.lang.Integer: int reverseBytes(int)>($i0);

        return $i1;
    }

    public static java.net.Inet4Address intToInet4AddressHTH(int)
    {
        int i0, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        byte b1, b2, b3, b4;
        byte[] $r0;
        java.net.InetAddress $r1;
        java.lang.Throwable $r2;
        java.lang.AssertionError $r3;
        java.net.Inet4Address r4;

        i0 := @parameter0: int;

        $i5 = i0 >> 24;

        $i6 = $i5 & 255;

        b1 = (byte) $i6;

        $i7 = i0 >> 16;

        $i8 = $i7 & 255;

        b2 = (byte) $i8;

        $i9 = i0 >> 8;

        $i10 = $i9 & 255;

        b3 = (byte) $i10;

        $i11 = i0 & 255;

        b4 = (byte) $i11;

     label1:
        $r0 = newarray (byte)[4];

        $r0[0] = b1;

        $r0[1] = b2;

        $r0[2] = b3;

        $r0[3] = b4;

        $r1 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByAddress(byte[])>($r0);

        r4 = (java.net.Inet4Address) $r1;

     label2:
        return r4;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

        catch java.net.UnknownHostException from label1 to label2 with label3;
    }

    public static java.net.Inet4Address intToInet4AddressHTL(int)
    {
        int i0, $i1;
        java.net.Inet4Address $r0;

        i0 := @parameter0: int;

        $i1 = staticinvoke <java.lang.Integer: int reverseBytes(int)>(i0);

        $r0 = staticinvoke <com.android.net.module.util.Inet4AddressUtils: java.net.Inet4Address intToInet4AddressHTH(int)>($i1);

        return $r0;
    }

    public static int netmaskToPrefixLength(java.net.Inet4Address)
    {
        int i0, i1, $i2, $i3;
        java.lang.StringBuilder $r0;
        java.lang.String $r2, $r5;
        java.lang.IllegalArgumentException $r4;
        java.net.Inet4Address r6;

        r6 := @parameter0: java.net.Inet4Address;

        i0 = staticinvoke <com.android.net.module.util.Inet4AddressUtils: int inet4AddressToIntHTH(java.net.Inet4Address)>(r6);

        i1 = staticinvoke <java.lang.Integer: int bitCount(int)>(i0);

        $i2 = staticinvoke <java.lang.Integer: int numberOfTrailingZeros(int)>(i0);

        $i3 = 32 - i1;

        if $i2 != $i3 goto label1;

        return i1;

     label1:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Non-contiguous netmask: ");

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r4;
    }

    public static int prefixLengthToV4NetmaskIntHTH(int) throws java.lang.IllegalArgumentException
    {
        java.lang.IllegalArgumentException $r0;
        int $i0, i1, i2;

        i1 := @parameter0: int;

        if i1 < 0 goto label3;

        if i1 > 32 goto label3;

        if i1 != 0 goto label1;

        i2 = 0;

        goto label2;

     label1:
        $i0 = 32 - i1;

        i2 = -1 << $i0;

     label2:
        return i2;

     label3:
        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid prefix length (0 <= prefix <= 32)");

        throw $r0;
    }

    public static int prefixLengthToV4NetmaskIntHTL(int) throws java.lang.IllegalArgumentException
    {
        int i0, $i1, $i2;

        i0 := @parameter0: int;

        $i1 = staticinvoke <com.android.net.module.util.Inet4AddressUtils: int prefixLengthToV4NetmaskIntHTH(int)>(i0);

        $i2 = staticinvoke <java.lang.Integer: int reverseBytes(int)>($i1);

        return $i2;
    }
}
