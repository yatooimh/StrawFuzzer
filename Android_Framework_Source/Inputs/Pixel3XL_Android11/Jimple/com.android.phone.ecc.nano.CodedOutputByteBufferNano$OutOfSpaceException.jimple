public class com.android.phone.ecc.nano.CodedOutputByteBufferNano$OutOfSpaceException extends java.io.IOException
{
    private static final long serialVersionUID;

    void <init>(int, int)
    {
        com.android.phone.ecc.nano.CodedOutputByteBufferNano$OutOfSpaceException r0;
        int i0, i1;
        java.lang.StringBuilder $r2;
        java.lang.String $r8;

        r0 := @this: com.android.phone.ecc.nano.CodedOutputByteBufferNano$OutOfSpaceException;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CodedOutputStream was writing to a flat byte array and ran out of space (pos ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" limit ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(").");

        $r8 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<java.io.IOException: void <init>(java.lang.String)>($r8);

        return;
    }

    public static void <clinit>()
    {
        <com.android.phone.ecc.nano.CodedOutputByteBufferNano$OutOfSpaceException: long serialVersionUID> = -6947486886997889499L;

        return;
    }
}
