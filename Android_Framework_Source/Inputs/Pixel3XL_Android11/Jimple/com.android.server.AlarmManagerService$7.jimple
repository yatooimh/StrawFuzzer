class com.android.server.AlarmManagerService$7 extends com.android.server.AppStateTracker$Listener
{
    final com.android.server.AlarmManagerService this$0;

    void <init>(com.android.server.AlarmManagerService)
    {
        com.android.server.AlarmManagerService$7 r0;
        com.android.server.AlarmManagerService r1;

        r0 := @this: com.android.server.AlarmManagerService$7;

        r1 := @parameter0: com.android.server.AlarmManagerService;

        r0.<com.android.server.AlarmManagerService$7: com.android.server.AlarmManagerService this$0> = r1;

        specialinvoke r0.<com.android.server.AppStateTracker$Listener: void <init>()>();

        return;
    }

    public void onUidForeground(int, boolean)
    {
        com.android.server.AlarmManagerService$7 r0;
        int i0;
        boolean z0;
        java.lang.Object r1;
        com.android.server.AlarmManagerService $r3, $r4;
        android.util.SparseBooleanArray $r5;
        java.lang.Throwable $r6;

        r0 := @this: com.android.server.AlarmManagerService$7;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r3 = r0.<com.android.server.AlarmManagerService$7: com.android.server.AlarmManagerService this$0>;

        r1 = $r3.<com.android.server.AlarmManagerService: java.lang.Object mLock>;

        entermonitor r1;

        if z0 == 0 goto label2;

     label1:
        $r4 = r0.<com.android.server.AlarmManagerService$7: com.android.server.AlarmManagerService this$0>;

        $r5 = $r4.<com.android.server.AlarmManagerService: android.util.SparseBooleanArray mUseAllowWhileIdleShortTime>;

        virtualinvoke $r5.<android.util.SparseBooleanArray: void put(int,boolean)>(i0, 1);

     label2:
        exitmonitor r1;

     label3:
        return;

     label4:
        $r6 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void unblockAlarmsForUid(int)
    {
        com.android.server.AlarmManagerService$7 r0;
        int i0;
        java.lang.Object r1;
        com.android.server.AlarmManagerService $r3, $r4;
        java.lang.Throwable $r5;

        r0 := @this: com.android.server.AlarmManagerService$7;

        i0 := @parameter0: int;

        $r3 = r0.<com.android.server.AlarmManagerService$7: com.android.server.AlarmManagerService this$0>;

        r1 = $r3.<com.android.server.AlarmManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r4 = r0.<com.android.server.AlarmManagerService$7: com.android.server.AlarmManagerService this$0>;

        virtualinvoke $r4.<com.android.server.AlarmManagerService: void sendPendingBackgroundAlarmsLocked(int,java.lang.String)>(i0, null);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void unblockAlarmsForUidPackage(int, java.lang.String)
    {
        com.android.server.AlarmManagerService$7 r0;
        int i0;
        java.lang.Object r1;
        com.android.server.AlarmManagerService $r2, $r3;
        java.lang.Throwable $r4;
        java.lang.String r5;

        r0 := @this: com.android.server.AlarmManagerService$7;

        i0 := @parameter0: int;

        r5 := @parameter1: java.lang.String;

        $r2 = r0.<com.android.server.AlarmManagerService$7: com.android.server.AlarmManagerService this$0>;

        r1 = $r2.<com.android.server.AlarmManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.AlarmManagerService$7: com.android.server.AlarmManagerService this$0>;

        virtualinvoke $r3.<com.android.server.AlarmManagerService: void sendPendingBackgroundAlarmsLocked(int,java.lang.String)>(i0, r5);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void unblockAllUnrestrictedAlarms()
    {
        com.android.server.AlarmManagerService$7 r0;
        java.lang.Object r1;
        com.android.server.AlarmManagerService $r3, $r4;
        java.lang.Throwable $r5;

        r0 := @this: com.android.server.AlarmManagerService$7;

        $r3 = r0.<com.android.server.AlarmManagerService$7: com.android.server.AlarmManagerService this$0>;

        r1 = $r3.<com.android.server.AlarmManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r4 = r0.<com.android.server.AlarmManagerService$7: com.android.server.AlarmManagerService this$0>;

        virtualinvoke $r4.<com.android.server.AlarmManagerService: void sendAllUnrestrictedPendingBackgroundAlarmsLocked()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }
}
