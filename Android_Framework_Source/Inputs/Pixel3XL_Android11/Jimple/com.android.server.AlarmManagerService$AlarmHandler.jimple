class com.android.server.AlarmManagerService$AlarmHandler extends android.os.Handler
{
    public static final int ALARM_EVENT;
    public static final int APP_STANDBY_BUCKET_CHANGED;
    public static final int CHARGING_STATUS_CHANGED;
    public static final int LISTENER_TIMEOUT;
    public static final int REMOVE_FOR_CANCELED;
    public static final int REMOVE_FOR_STOPPED;
    public static final int REPORT_ALARMS_ACTIVE;
    public static final int SEND_NEXT_ALARM_CLOCK_CHANGED;
    final com.android.server.AlarmManagerService this$0;

    void <init>(com.android.server.AlarmManagerService)
    {
        com.android.server.AlarmManagerService$AlarmHandler r0;
        com.android.server.AlarmManagerService r1;
        android.os.Looper $r2;

        r0 := @this: com.android.server.AlarmManagerService$AlarmHandler;

        r1 := @parameter0: com.android.server.AlarmManagerService;

        r0.<com.android.server.AlarmManagerService$AlarmHandler: com.android.server.AlarmManagerService this$0> = r1;

        $r2 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        specialinvoke r0.<android.os.Handler: void <init>(android.os.Looper)>($r2);

        return;
    }

    public void handleMessage(android.os.Message)
    {
        com.android.server.AlarmManagerService$AlarmHandler r0;
        long l0, $l5;
        java.lang.Object $r1, $r7, $r14, $r25, $r35, r47, r49, r51, r53, r58;
        com.android.server.AlarmManagerService $r2, $r3, $r4, $r5, $r6, $r9, $r10, $r11, $r12, $r13, $r18, $r19, $r20, $r21, $r23, $r24, $r28, $r30, $r31, $r33, $r34, $r41, $r61;
        int $i1, $i2, $i3, $i4, i7, i8, $i9;
        java.lang.Boolean $r8;
        boolean $z0, $z2, $z4, z6;
        java.lang.String $r15;
        java.lang.Integer $r16;
        android.util.Pair $r17;
        com.android.server.DeviceIdleInternal $r22, r56;
        android.os.IBinder $r26;
        com.android.server.AlarmManagerService$DeliveryTracker $r27;
        java.util.ArrayList $r29;
        com.android.server.AlarmManagerService$Injector $r32;
        android.app.PendingIntent $r36, $r40, r46;
        java.lang.Throwable $r37, $r38, $r42, $r43, $r44;
        android.app.PendingIntent$CanceledException $r39;
        byte $b6;
        android.os.Message r45;
        android.util.ArraySet r54;
        com.android.server.AlarmManagerService$Alarm r59;

        r0 := @this: com.android.server.AlarmManagerService$AlarmHandler;

        r45 := @parameter0: android.os.Message;

        i7 = r45.<android.os.Message: int what>;

        z6 = 1;

        tableswitch(i7)
        {
            case 1: goto label33;
            case 2: goto label32;
            case 3: goto label31;
            case 4: goto label28;
            case 5: goto label21;
            case 6: goto label14;
            case 7: goto label08;
            case 8: goto label02;
            default: goto label01;
        };

     label01:
        goto label45;

     label02:
        $r1 = r45.<android.os.Message: java.lang.Object obj>;

        r46 = (android.app.PendingIntent) $r1;

        $r2 = r0.<com.android.server.AlarmManagerService$AlarmHandler: com.android.server.AlarmManagerService this$0>;

        r47 = $r2.<com.android.server.AlarmManagerService: java.lang.Object mLock>;

        entermonitor r47;

     label03:
        $r3 = r0.<com.android.server.AlarmManagerService$AlarmHandler: com.android.server.AlarmManagerService this$0>;

        virtualinvoke $r3.<com.android.server.AlarmManagerService: void removeLocked(android.app.PendingIntent,android.app.IAlarmListener)>(r46, null);

        exitmonitor r47;

     label04:
        goto label45;

     label05:
        $r44 := @caughtexception;

     label06:
        exitmonitor r47;

     label07:
        throw $r44;

     label08:
        $r4 = r0.<com.android.server.AlarmManagerService$AlarmHandler: com.android.server.AlarmManagerService this$0>;

        r49 = $r4.<com.android.server.AlarmManagerService: java.lang.Object mLock>;

        entermonitor r49;

     label09:
        $r5 = r0.<com.android.server.AlarmManagerService$AlarmHandler: com.android.server.AlarmManagerService this$0>;

        $i1 = r45.<android.os.Message: int arg1>;

        virtualinvoke $r5.<com.android.server.AlarmManagerService: void removeForStoppedLocked(int)>($i1);

        exitmonitor r49;

     label10:
        goto label45;

     label11:
        $r38 := @caughtexception;

     label12:
        exitmonitor r49;

     label13:
        throw $r38;

     label14:
        $r6 = r0.<com.android.server.AlarmManagerService$AlarmHandler: com.android.server.AlarmManagerService this$0>;

        r51 = $r6.<com.android.server.AlarmManagerService: java.lang.Object mLock>;

        entermonitor r51;

     label15:
        $r9 = r0.<com.android.server.AlarmManagerService$AlarmHandler: com.android.server.AlarmManagerService this$0>;

        $r7 = r45.<android.os.Message: java.lang.Object obj>;

        $r8 = (java.lang.Boolean) $r7;

        $z0 = virtualinvoke $r8.<java.lang.Boolean: boolean booleanValue()>();

        staticinvoke <com.android.server.AlarmManagerService: boolean access$2602(com.android.server.AlarmManagerService,boolean)>($r9, $z0);

        $r10 = r0.<com.android.server.AlarmManagerService$AlarmHandler: com.android.server.AlarmManagerService this$0>;

        $z2 = virtualinvoke $r10.<com.android.server.AlarmManagerService: boolean reorderAlarmsBasedOnStandbyBuckets(android.util.ArraySet)>(null);

        if $z2 == 0 goto label16;

        $r11 = r0.<com.android.server.AlarmManagerService$AlarmHandler: com.android.server.AlarmManagerService this$0>;

        virtualinvoke $r11.<com.android.server.AlarmManagerService: void rescheduleKernelAlarmsLocked()>();

        $r12 = r0.<com.android.server.AlarmManagerService$AlarmHandler: com.android.server.AlarmManagerService this$0>;

        staticinvoke <com.android.server.AlarmManagerService: void access$2300(com.android.server.AlarmManagerService)>($r12);

     label16:
        exitmonitor r51;

     label17:
        goto label45;

     label18:
        $r43 := @caughtexception;

     label19:
        exitmonitor r51;

     label20:
        throw $r43;

     label21:
        $r13 = r0.<com.android.server.AlarmManagerService$AlarmHandler: com.android.server.AlarmManagerService this$0>;

        r53 = $r13.<com.android.server.AlarmManagerService: java.lang.Object mLock>;

        entermonitor r53;

     label22:
        r54 = new android.util.ArraySet;

        specialinvoke r54.<android.util.ArraySet: void <init>()>();

        $r14 = r45.<android.os.Message: java.lang.Object obj>;

        $r15 = (java.lang.String) $r14;

        $i2 = r45.<android.os.Message: int arg1>;

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r17 = staticinvoke <android.util.Pair: android.util.Pair create(java.lang.Object,java.lang.Object)>($r15, $r16);

        virtualinvoke r54.<android.util.ArraySet: boolean add(java.lang.Object)>($r17);

        $r18 = r0.<com.android.server.AlarmManagerService$AlarmHandler: com.android.server.AlarmManagerService this$0>;

        $z4 = virtualinvoke $r18.<com.android.server.AlarmManagerService: boolean reorderAlarmsBasedOnStandbyBuckets(android.util.ArraySet)>(r54);

        if $z4 == 0 goto label23;

        $r19 = r0.<com.android.server.AlarmManagerService$AlarmHandler: com.android.server.AlarmManagerService this$0>;

        virtualinvoke $r19.<com.android.server.AlarmManagerService: void rescheduleKernelAlarmsLocked()>();

        $r20 = r0.<com.android.server.AlarmManagerService$AlarmHandler: com.android.server.AlarmManagerService this$0>;

        staticinvoke <com.android.server.AlarmManagerService: void access$2300(com.android.server.AlarmManagerService)>($r20);

     label23:
        exitmonitor r53;

     label24:
        goto label45;

     label25:
        $r37 := @caughtexception;

     label26:
        exitmonitor r53;

     label27:
        throw $r37;

     label28:
        $r21 = r0.<com.android.server.AlarmManagerService$AlarmHandler: com.android.server.AlarmManagerService this$0>;

        $r22 = $r21.<com.android.server.AlarmManagerService: com.android.server.DeviceIdleInternal mLocalDeviceIdleController>;

        if $r22 == null goto label45;

        $r23 = r0.<com.android.server.AlarmManagerService$AlarmHandler: com.android.server.AlarmManagerService this$0>;

        r56 = $r23.<com.android.server.AlarmManagerService: com.android.server.DeviceIdleInternal mLocalDeviceIdleController>;

        $i3 = r45.<android.os.Message: int arg1>;

        if $i3 == 0 goto label29;

        goto label30;

     label29:
        z6 = 0;

     label30:
        interfaceinvoke r56.<com.android.server.DeviceIdleInternal: void setAlarmsActive(boolean)>(z6);

        goto label45;

     label31:
        $r24 = r0.<com.android.server.AlarmManagerService$AlarmHandler: com.android.server.AlarmManagerService this$0>;

        $r27 = $r24.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$DeliveryTracker mDeliveryTracker>;

        $r25 = r45.<android.os.Message: java.lang.Object obj>;

        $r26 = (android.os.IBinder) $r25;

        virtualinvoke $r27.<com.android.server.AlarmManagerService$DeliveryTracker: void alarmTimedOut(android.os.IBinder)>($r26);

        goto label45;

     label32:
        $r28 = r0.<com.android.server.AlarmManagerService$AlarmHandler: com.android.server.AlarmManagerService this$0>;

        staticinvoke <com.android.server.AlarmManagerService: void access$2500(com.android.server.AlarmManagerService)>($r28);

        goto label45;

     label33:
        $r29 = new java.util.ArrayList;

        specialinvoke $r29.<java.util.ArrayList: void <init>()>();

        $r30 = r0.<com.android.server.AlarmManagerService$AlarmHandler: com.android.server.AlarmManagerService this$0>;

        r58 = $r30.<com.android.server.AlarmManagerService: java.lang.Object mLock>;

        entermonitor r58;

     label34:
        $r31 = r0.<com.android.server.AlarmManagerService$AlarmHandler: com.android.server.AlarmManagerService this$0>;

        $r32 = staticinvoke <com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Injector access$100(com.android.server.AlarmManagerService)>($r31);

        l0 = virtualinvoke $r32.<com.android.server.AlarmManagerService$Injector: long getElapsedRealtime()>();

        $r33 = r0.<com.android.server.AlarmManagerService$AlarmHandler: com.android.server.AlarmManagerService this$0>;

        virtualinvoke $r33.<com.android.server.AlarmManagerService: boolean triggerAlarmsLocked(java.util.ArrayList,long)>($r29, l0);

        $r34 = r0.<com.android.server.AlarmManagerService$AlarmHandler: com.android.server.AlarmManagerService this$0>;

        staticinvoke <com.android.server.AlarmManagerService: void access$2300(com.android.server.AlarmManagerService)>($r34);

        exitmonitor r58;

     label35:
        i8 = 0;

     label36:
        $i4 = virtualinvoke $r29.<java.util.ArrayList: int size()>();

        if i8 >= $i4 goto label41;

        $r35 = virtualinvoke $r29.<java.util.ArrayList: java.lang.Object get(int)>(i8);

        r59 = (com.android.server.AlarmManagerService$Alarm) $r35;

     label37:
        $r36 = r59.<com.android.server.AlarmManagerService$Alarm: android.app.PendingIntent operation>;

        virtualinvoke $r36.<android.app.PendingIntent: void send()>();

     label38:
        goto label40;

     label39:
        $r39 := @caughtexception;

        $l5 = r59.<com.android.server.AlarmManagerService$Alarm: long repeatInterval>;

        $b6 = $l5 cmp 0L;

        if $b6 <= 0 goto label40;

        $r41 = r0.<com.android.server.AlarmManagerService$AlarmHandler: com.android.server.AlarmManagerService this$0>;

        $r40 = r59.<com.android.server.AlarmManagerService$Alarm: android.app.PendingIntent operation>;

        virtualinvoke $r41.<com.android.server.AlarmManagerService: void removeImpl(android.app.PendingIntent,android.app.IAlarmListener)>($r40, null);

     label40:
        $r61 = r0.<com.android.server.AlarmManagerService$AlarmHandler: com.android.server.AlarmManagerService this$0>;

        $i9 = r59.<com.android.server.AlarmManagerService$Alarm: int uid>;

        staticinvoke <com.android.server.AlarmManagerService: void access$200(com.android.server.AlarmManagerService,int,int)>($r61, $i9, 1);

        i8 = i8 + 1;

        goto label36;

     label41:
        goto label45;

     label42:
        $r42 := @caughtexception;

     label43:
        exitmonitor r58;

     label44:
        throw $r42;

     label45:
        return;

        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label06 to label07 with label05;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
        catch java.lang.Throwable from label15 to label16 with label18;
        catch java.lang.Throwable from label16 to label17 with label18;
        catch java.lang.Throwable from label19 to label20 with label18;
        catch java.lang.Throwable from label22 to label23 with label25;
        catch java.lang.Throwable from label23 to label24 with label25;
        catch java.lang.Throwable from label26 to label27 with label25;
        catch java.lang.Throwable from label34 to label35 with label42;
        catch android.app.PendingIntent$CanceledException from label37 to label38 with label39;
        catch java.lang.Throwable from label43 to label44 with label42;
    }

    public void postRemoveForStopped(int)
    {
        com.android.server.AlarmManagerService$AlarmHandler r0;
        int i0;
        android.os.Message $r1;

        r0 := @this: com.android.server.AlarmManagerService$AlarmHandler;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.android.server.AlarmManagerService$AlarmHandler: android.os.Message obtainMessage(int,int,int)>(7, i0, 0);

        virtualinvoke $r1.<android.os.Message: void sendToTarget()>();

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.AlarmManagerService$AlarmHandler: int SEND_NEXT_ALARM_CLOCK_CHANGED> = 2;

        <com.android.server.AlarmManagerService$AlarmHandler: int REPORT_ALARMS_ACTIVE> = 4;

        <com.android.server.AlarmManagerService$AlarmHandler: int REMOVE_FOR_STOPPED> = 7;

        <com.android.server.AlarmManagerService$AlarmHandler: int REMOVE_FOR_CANCELED> = 8;

        <com.android.server.AlarmManagerService$AlarmHandler: int LISTENER_TIMEOUT> = 3;

        <com.android.server.AlarmManagerService$AlarmHandler: int CHARGING_STATUS_CHANGED> = 6;

        <com.android.server.AlarmManagerService$AlarmHandler: int APP_STANDBY_BUCKET_CHANGED> = 5;

        <com.android.server.AlarmManagerService$AlarmHandler: int ALARM_EVENT> = 1;

        return;
    }
}
