class com.android.server.AlarmManagerService$ClockReceiver extends android.content.BroadcastReceiver
{
    final com.android.server.AlarmManagerService this$0;

    public void <init>(com.android.server.AlarmManagerService)
    {
        com.android.server.AlarmManagerService$ClockReceiver r0;
        com.android.server.AlarmManagerService r1;
        android.content.IntentFilter $r3;
        android.content.Context $r4;

        r0 := @this: com.android.server.AlarmManagerService$ClockReceiver;

        r1 := @parameter0: com.android.server.AlarmManagerService;

        r0.<com.android.server.AlarmManagerService$ClockReceiver: com.android.server.AlarmManagerService this$0> = r1;

        specialinvoke r0.<android.content.BroadcastReceiver: void <init>()>();

        $r3 = new android.content.IntentFilter;

        specialinvoke $r3.<android.content.IntentFilter: void <init>()>();

        virtualinvoke $r3.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.DATE_CHANGED");

        $r4 = virtualinvoke r1.<com.android.server.AlarmManagerService: android.content.Context getContext()>();

        virtualinvoke $r4.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>(r0, $r3);

        return;
    }

    public void onReceive(android.content.Context, android.content.Intent)
    {
        com.android.server.AlarmManagerService$ClockReceiver r0;
        android.content.Context r1;
        android.content.Intent r2;
        int i0, $i2, $i3;
        java.lang.String $r3, $r4;
        boolean $z0;
        java.util.TimeZone $r5;
        com.android.server.AlarmManagerService $r6, $r8;
        com.android.server.AlarmManagerService$Injector $r7, $r9;
        long $l1;

        r0 := @this: com.android.server.AlarmManagerService$ClockReceiver;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.Intent;

        $r3 = virtualinvoke r2.<android.content.Intent: java.lang.String getAction()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("android.intent.action.DATE_CHANGED");

        if $z0 == 0 goto label1;

        $r4 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("persist.sys.timezone");

        $r5 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>($r4);

        $r6 = r0.<com.android.server.AlarmManagerService$ClockReceiver: com.android.server.AlarmManagerService this$0>;

        $r7 = staticinvoke <com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Injector access$100(com.android.server.AlarmManagerService)>($r6);

        $l1 = virtualinvoke $r7.<com.android.server.AlarmManagerService$Injector: long getCurrentTimeMillis()>();

        i0 = virtualinvoke $r5.<java.util.TimeZone: int getOffset(long)>($l1);

        $r8 = r0.<com.android.server.AlarmManagerService$ClockReceiver: com.android.server.AlarmManagerService this$0>;

        $r9 = staticinvoke <com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Injector access$100(com.android.server.AlarmManagerService)>($r8);

        $i2 = i0 / 60000;

        $i3 = neg $i2;

        virtualinvoke $r9.<com.android.server.AlarmManagerService$Injector: void setKernelTimezone(int)>($i3);

        virtualinvoke r0.<com.android.server.AlarmManagerService$ClockReceiver: void scheduleDateChangedEvent()>();

     label1:
        return;
    }

    public void scheduleDateChangedEvent()
    {
        com.android.server.AlarmManagerService$ClockReceiver r0;
        java.util.Calendar r1;
        com.android.server.AlarmManagerService $r2, $r4, $r5;
        com.android.server.AlarmManagerService$Injector $r3;
        long $l0, $l1;
        android.app.PendingIntent $r6;
        int $i2;

        r0 := @this: com.android.server.AlarmManagerService$ClockReceiver;

        r1 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        $r2 = r0.<com.android.server.AlarmManagerService$ClockReceiver: com.android.server.AlarmManagerService this$0>;

        $r3 = staticinvoke <com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Injector access$100(com.android.server.AlarmManagerService)>($r2);

        $l0 = virtualinvoke $r3.<com.android.server.AlarmManagerService$Injector: long getCurrentTimeMillis()>();

        virtualinvoke r1.<java.util.Calendar: void setTimeInMillis(long)>($l0);

        virtualinvoke r1.<java.util.Calendar: void set(int,int)>(11, 0);

        virtualinvoke r1.<java.util.Calendar: void set(int,int)>(12, 0);

        virtualinvoke r1.<java.util.Calendar: void set(int,int)>(13, 0);

        virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 0);

        virtualinvoke r1.<java.util.Calendar: void add(int,int)>(5, 1);

        $r4 = r0.<com.android.server.AlarmManagerService$ClockReceiver: com.android.server.AlarmManagerService this$0>;

        $l1 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>();

        $r5 = r0.<com.android.server.AlarmManagerService$ClockReceiver: com.android.server.AlarmManagerService this$0>;

        $r6 = $r5.<com.android.server.AlarmManagerService: android.app.PendingIntent mDateChangeSender>;

        $i2 = staticinvoke <android.os.Process: int myUid()>();

        virtualinvoke $r4.<com.android.server.AlarmManagerService: void setImpl(int,long,long,long,android.app.PendingIntent,android.app.IAlarmListener,java.lang.String,int,android.os.WorkSource,android.app.AlarmManager$AlarmClockInfo,int,java.lang.String)>(1, $l1, 0L, 0L, $r6, null, null, 1, null, null, $i2, "android");

        return;
    }

    public void scheduleTimeTickEvent()
    {
        com.android.server.AlarmManagerService$ClockReceiver r0;
        long l0, l1, $l2, $l3, $l4, $l5, $l6;
        java.lang.Object r1;
        com.android.server.AlarmManagerService $r2, $r5, $r7, $r8, r10;
        com.android.server.AlarmManagerService$Injector $r3, $r4;
        android.app.IAlarmListener $r6;
        int $i7;
        java.lang.Throwable $r9;

        r0 := @this: com.android.server.AlarmManagerService$ClockReceiver;

        $r2 = r0.<com.android.server.AlarmManagerService$ClockReceiver: com.android.server.AlarmManagerService this$0>;

        $r3 = staticinvoke <com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Injector access$100(com.android.server.AlarmManagerService)>($r2);

        l0 = virtualinvoke $r3.<com.android.server.AlarmManagerService$Injector: long getCurrentTimeMillis()>();

        l1 = l0 / 60000L;

        r10 = r0.<com.android.server.AlarmManagerService$ClockReceiver: com.android.server.AlarmManagerService this$0>;

        $r4 = staticinvoke <com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Injector access$100(com.android.server.AlarmManagerService)>(r10);

        $l2 = virtualinvoke $r4.<com.android.server.AlarmManagerService$Injector: long getElapsedRealtime()>();

        $l3 = l1 + 1L;

        $l4 = $l3 * 60000L;

        $l5 = $l4 - l0;

        $l6 = $l2 + $l5;

        $r5 = r0.<com.android.server.AlarmManagerService$ClockReceiver: com.android.server.AlarmManagerService this$0>;

        $r6 = $r5.<com.android.server.AlarmManagerService: android.app.IAlarmListener mTimeTickTrigger>;

        $i7 = staticinvoke <android.os.Process: int myUid()>();

        virtualinvoke r10.<com.android.server.AlarmManagerService: void setImpl(int,long,long,long,android.app.PendingIntent,android.app.IAlarmListener,java.lang.String,int,android.os.WorkSource,android.app.AlarmManager$AlarmClockInfo,int,java.lang.String)>(3, $l6, 0L, 0L, null, $r6, "TIME_TICK", 1, null, null, $i7, "android");

        $r7 = r0.<com.android.server.AlarmManagerService$ClockReceiver: com.android.server.AlarmManagerService this$0>;

        r1 = $r7.<com.android.server.AlarmManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r8 = r0.<com.android.server.AlarmManagerService$ClockReceiver: com.android.server.AlarmManagerService this$0>;

        staticinvoke <com.android.server.AlarmManagerService: long access$2702(com.android.server.AlarmManagerService,long)>($r8, l0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r9 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }
}
