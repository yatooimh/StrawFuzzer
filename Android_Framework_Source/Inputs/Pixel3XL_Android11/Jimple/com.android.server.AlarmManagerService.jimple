class com.android.server.AlarmManagerService extends com.android.server.SystemService
{
    static final int ACTIVE_INDEX;
    static final boolean DEBUG_ALARM_CLOCK;
    static final boolean DEBUG_BATCH;
    static final boolean DEBUG_BG_LIMIT;
    static final boolean DEBUG_LISTENER_CALLBACK;
    static final boolean DEBUG_PER_UID_LIMIT;
    static final boolean DEBUG_STANDBY;
    static final boolean DEBUG_VALIDATE;
    static final boolean DEBUG_WAKELOCK;
    private static final int ELAPSED_REALTIME_MASK;
    private static final int ELAPSED_REALTIME_WAKEUP_MASK;
    static final int FREQUENT_INDEX;
    static final int IS_WAKEUP_MASK;
    static final long MILLIS_IN_DAY;
    static final long MIN_FUZZABLE_INTERVAL;
    static final int NEVER_INDEX;
    private static final android.content.Intent NEXT_ALARM_CLOCK_CHANGED_INTENT;
    static final int PRIO_NORMAL;
    static final int PRIO_TICK;
    static final int PRIO_WAKEUP;
    static final int RARE_INDEX;
    static final boolean RECORD_ALARMS_IN_HISTORY;
    static final boolean RECORD_DEVICE_IDLE_ALARMS;
    private static final int RTC_MASK;
    private static final int RTC_WAKEUP_MASK;
    static final java.lang.String TAG;
    static final int TICK_HISTORY_DEPTH;
    static final java.lang.String TIMEZONE_PROPERTY;
    static final int TIME_CHANGED_MASK;
    static final int TYPE_NONWAKEUP_MASK;
    static final boolean WAKEUP_STATS;
    static final int WORKING_INDEX;
    static final boolean localLOGV;
    static final com.android.server.AlarmManagerService$BatchTimeOrder sBatchOrder;
    static final com.android.server.AlarmManagerService$IncreasingTimeOrder sIncreasingTimeOrder;
    final long RECENT_WAKEUP_PERIOD;
    final java.util.ArrayList mAlarmBatches;
    final java.util.Comparator mAlarmDispatchComparator;
    android.util.SparseIntArray mAlarmsPerUid;
    final java.util.ArrayList mAllowWhileIdleDispatches;
    android.app.AppOpsManager mAppOps;
    private boolean mAppStandbyParole;
    private com.android.server.AppStateTracker mAppStateTracker;
    com.android.server.AlarmManagerService$AppWakeupHistory mAppWakeupHistory;
    private final android.content.Intent mBackgroundIntent;
    int mBroadcastRefCount;
    final android.util.SparseArray mBroadcastStats;
    com.android.server.AlarmManagerService$ClockReceiver mClockReceiver;
    com.android.server.AlarmManagerService$Constants mConstants;
    int mCurrentSeq;
    android.app.PendingIntent mDateChangeSender;
    final com.android.server.AlarmManagerService$DeliveryTracker mDeliveryTracker;
    private final com.android.server.AppStateTracker$Listener mForceAppStandbyListener;
    com.android.server.AlarmManagerService$AlarmHandler mHandler;
    private final android.util.SparseArray mHandlerSparseAlarmClockArray;
    android.os.Bundle mIdleOptions;
    java.util.ArrayList mInFlight;
    private final java.util.ArrayList mInFlightListeners;
    private final com.android.server.AlarmManagerService$Injector mInjector;
    boolean mInteractive;
    long mLastAlarmDeliveryTime;
    final android.util.SparseLongArray mLastAllowWhileIdleDispatch;
    private long mLastTickAdded;
    private long mLastTickReceived;
    private long mLastTickRemoved;
    private long mLastTickSet;
    long mLastTimeChangeClockTime;
    long mLastTimeChangeRealtime;
    private long mLastTrigger;
    private long mLastWakeup;
    private int mListenerCount;
    android.os.IBinder$DeathRecipient mListenerDeathRecipient;
    private int mListenerFinishCount;
    com.android.server.DeviceIdleInternal mLocalDeviceIdleController;
    final java.lang.Object mLock;
    final com.android.internal.util.LocalLog mLog;
    long mMaxDelayTime;
    private final android.util.SparseArray mNextAlarmClockForUser;
    private boolean mNextAlarmClockMayChange;
    private long mNextNonWakeUpSetAt;
    private long mNextNonWakeup;
    long mNextNonWakeupDeliveryTime;
    private int mNextTickHistory;
    com.android.server.AlarmManagerService$Alarm mNextWakeFromIdle;
    private long mNextWakeUpSetAt;
    private long mNextWakeup;
    long mNonInteractiveStartTime;
    long mNonInteractiveTime;
    int mNumDelayedAlarms;
    int mNumTimeChanged;
    android.util.SparseArray mPendingBackgroundAlarms;
    com.android.server.AlarmManagerService$Alarm mPendingIdleUntil;
    java.util.ArrayList mPendingNonWakeupAlarms;
    private final android.util.SparseBooleanArray mPendingSendNextAlarmClockChangedForUser;
    java.util.ArrayList mPendingWhileIdleAlarms;
    final java.util.HashMap mPriorities;
    java.util.Random mRandom;
    final java.util.LinkedList mRecentWakeups;
    private int mSendCount;
    private int mSendFinishCount;
    private final android.os.IBinder mService;
    long mStartCurrentDelayTime;
    private final com.android.internal.util.StatLogger mStatLogger;
    int mSystemUiUid;
    private final long[] mTickHistory;
    android.content.Intent mTimeTickIntent;
    android.app.IAlarmListener mTimeTickTrigger;
    private final android.util.SparseArray mTmpSparseAlarmClockArray;
    long mTotalDelayTime;
    private android.app.usage.UsageStatsManagerInternal mUsageStatsManagerInternal;
    final android.util.SparseBooleanArray mUseAllowWhileIdleShortTime;
    android.os.PowerManager$WakeLock mWakeLock;

    static void <clinit>()
    {
        com.android.server.AlarmManagerService$IncreasingTimeOrder $r0;
        android.content.Intent $r1, $r2;
        com.android.server.AlarmManagerService$BatchTimeOrder $r3;

        <com.android.server.AlarmManagerService: boolean localLOGV> = 0;

        <com.android.server.AlarmManagerService: int WORKING_INDEX> = 1;

        <com.android.server.AlarmManagerService: boolean WAKEUP_STATS> = 0;

        <com.android.server.AlarmManagerService: int TYPE_NONWAKEUP_MASK> = 1;

        <com.android.server.AlarmManagerService: int TIME_CHANGED_MASK> = 65536;

        <com.android.server.AlarmManagerService: java.lang.String TIMEZONE_PROPERTY> = "persist.sys.timezone";

        <com.android.server.AlarmManagerService: int TICK_HISTORY_DEPTH> = 10;

        <com.android.server.AlarmManagerService: java.lang.String TAG> = "AlarmManager";

        <com.android.server.AlarmManagerService: int RTC_WAKEUP_MASK> = 1;

        <com.android.server.AlarmManagerService: int RTC_MASK> = 2;

        <com.android.server.AlarmManagerService: boolean RECORD_DEVICE_IDLE_ALARMS> = 0;

        <com.android.server.AlarmManagerService: boolean RECORD_ALARMS_IN_HISTORY> = 1;

        <com.android.server.AlarmManagerService: int RARE_INDEX> = 3;

        <com.android.server.AlarmManagerService: int PRIO_WAKEUP> = 1;

        <com.android.server.AlarmManagerService: int PRIO_TICK> = 0;

        <com.android.server.AlarmManagerService: int PRIO_NORMAL> = 2;

        <com.android.server.AlarmManagerService: int NEVER_INDEX> = 4;

        <com.android.server.AlarmManagerService: long MIN_FUZZABLE_INTERVAL> = 10000L;

        <com.android.server.AlarmManagerService: long MILLIS_IN_DAY> = 86400000L;

        <com.android.server.AlarmManagerService: int IS_WAKEUP_MASK> = 5;

        <com.android.server.AlarmManagerService: int FREQUENT_INDEX> = 2;

        <com.android.server.AlarmManagerService: int ELAPSED_REALTIME_WAKEUP_MASK> = 4;

        <com.android.server.AlarmManagerService: int ELAPSED_REALTIME_MASK> = 8;

        <com.android.server.AlarmManagerService: boolean DEBUG_WAKELOCK> = 0;

        <com.android.server.AlarmManagerService: boolean DEBUG_VALIDATE> = 0;

        <com.android.server.AlarmManagerService: boolean DEBUG_STANDBY> = 0;

        <com.android.server.AlarmManagerService: boolean DEBUG_PER_UID_LIMIT> = 1;

        <com.android.server.AlarmManagerService: boolean DEBUG_LISTENER_CALLBACK> = 0;

        <com.android.server.AlarmManagerService: boolean DEBUG_BG_LIMIT> = 0;

        <com.android.server.AlarmManagerService: boolean DEBUG_BATCH> = 0;

        <com.android.server.AlarmManagerService: boolean DEBUG_ALARM_CLOCK> = 0;

        <com.android.server.AlarmManagerService: int ACTIVE_INDEX> = 0;

        $r0 = new com.android.server.AlarmManagerService$IncreasingTimeOrder;

        specialinvoke $r0.<com.android.server.AlarmManagerService$IncreasingTimeOrder: void <init>()>();

        <com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$IncreasingTimeOrder sIncreasingTimeOrder> = $r0;

        $r1 = new android.content.Intent;

        specialinvoke $r1.<android.content.Intent: void <init>(java.lang.String)>("android.app.action.NEXT_ALARM_CLOCK_CHANGED");

        $r2 = virtualinvoke $r1.<android.content.Intent: android.content.Intent addFlags(int)>(553648128);

        <com.android.server.AlarmManagerService: android.content.Intent NEXT_ALARM_CLOCK_CHANGED_INTENT> = $r2;

        $r3 = new com.android.server.AlarmManagerService$BatchTimeOrder;

        specialinvoke $r3.<com.android.server.AlarmManagerService$BatchTimeOrder: void <init>()>();

        <com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$BatchTimeOrder sBatchOrder> = $r3;

        return;
    }

    void <init>(android.content.Context)
    {
        com.android.server.AlarmManagerService r0;
        android.content.Context r1;
        com.android.server.AlarmManagerService$Injector $r2;

        r0 := @this: com.android.server.AlarmManagerService;

        r1 := @parameter0: android.content.Context;

        $r2 = new com.android.server.AlarmManagerService$Injector;

        specialinvoke $r2.<com.android.server.AlarmManagerService$Injector: void <init>(android.content.Context)>(r1);

        specialinvoke r0.<com.android.server.AlarmManagerService: void <init>(android.content.Context,com.android.server.AlarmManagerService$Injector)>(r1, $r2);

        return;
    }

    void <init>(android.content.Context, com.android.server.AlarmManagerService$Injector)
    {
        com.android.server.AlarmManagerService r0;
        android.content.Context r1;
        com.android.server.AlarmManagerService$Injector r2;
        android.content.Intent $r3, $r4;
        com.android.internal.util.LocalLog $r5;
        java.lang.Object $r6;
        android.util.SparseArray $r7, $r19, $r20, $r22, $r28;
        long[] $r8;
        android.util.SparseIntArray $r9;
        java.util.ArrayList $r10, $r11, $r12, $r16, $r26, $r27;
        com.android.server.AlarmManagerService$DeliveryTracker $r13;
        android.util.SparseLongArray $r14;
        android.util.SparseBooleanArray $r15, $r21;
        com.android.internal.util.StatLogger $r17;
        java.lang.String[] $r18;
        java.util.HashMap $r23;
        java.util.LinkedList $r24;
        com.android.server.AlarmManagerService$1 $r25;
        com.android.server.AlarmManagerService$4 $r29;
        com.android.server.AlarmManagerService$7 $r30;

        r0 := @this: com.android.server.AlarmManagerService;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.server.AlarmManagerService$Injector;

        specialinvoke r0.<com.android.server.SystemService: void <init>(android.content.Context)>(r1);

        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>()>();

        $r4 = virtualinvoke $r3.<android.content.Intent: android.content.Intent addFlags(int)>(4);

        r0.<com.android.server.AlarmManagerService: android.content.Intent mBackgroundIntent> = $r4;

        $r5 = new com.android.internal.util.LocalLog;

        specialinvoke $r5.<com.android.internal.util.LocalLog: void <init>(java.lang.String)>("AlarmManager");

        r0.<com.android.server.AlarmManagerService: com.android.internal.util.LocalLog mLog> = $r5;

        $r6 = new java.lang.Object;

        specialinvoke $r6.<java.lang.Object: void <init>()>();

        r0.<com.android.server.AlarmManagerService: java.lang.Object mLock> = $r6;

        $r7 = new android.util.SparseArray;

        specialinvoke $r7.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.AlarmManagerService: android.util.SparseArray mPendingBackgroundAlarms> = $r7;

        $r8 = newarray (long)[10];

        r0.<com.android.server.AlarmManagerService: long[] mTickHistory> = $r8;

        r0.<com.android.server.AlarmManagerService: int mBroadcastRefCount> = 0;

        $r9 = new android.util.SparseIntArray;

        specialinvoke $r9.<android.util.SparseIntArray: void <init>()>();

        r0.<com.android.server.AlarmManagerService: android.util.SparseIntArray mAlarmsPerUid> = $r9;

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.AlarmManagerService: java.util.ArrayList mPendingNonWakeupAlarms> = $r10;

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.AlarmManagerService: java.util.ArrayList mInFlight> = $r11;

        $r12 = new java.util.ArrayList;

        specialinvoke $r12.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.AlarmManagerService: java.util.ArrayList mInFlightListeners> = $r12;

        $r13 = new com.android.server.AlarmManagerService$DeliveryTracker;

        specialinvoke $r13.<com.android.server.AlarmManagerService$DeliveryTracker: void <init>(com.android.server.AlarmManagerService)>(r0);

        r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$DeliveryTracker mDeliveryTracker> = $r13;

        r0.<com.android.server.AlarmManagerService: boolean mInteractive> = 1;

        $r14 = new android.util.SparseLongArray;

        specialinvoke $r14.<android.util.SparseLongArray: void <init>()>();

        r0.<com.android.server.AlarmManagerService: android.util.SparseLongArray mLastAllowWhileIdleDispatch> = $r14;

        $r15 = new android.util.SparseBooleanArray;

        specialinvoke $r15.<android.util.SparseBooleanArray: void <init>()>();

        r0.<com.android.server.AlarmManagerService: android.util.SparseBooleanArray mUseAllowWhileIdleShortTime> = $r15;

        $r16 = new java.util.ArrayList;

        specialinvoke $r16.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.AlarmManagerService: java.util.ArrayList mAllowWhileIdleDispatches> = $r16;

        $r17 = new com.android.internal.util.StatLogger;

        $r18 = newarray (java.lang.String)[2];

        $r18[0] = "REBATCH_ALL_ALARMS";

        $r18[1] = "REORDER_ALARMS_FOR_STANDBY";

        specialinvoke $r17.<com.android.internal.util.StatLogger: void <init>(java.lang.String[])>($r18);

        r0.<com.android.server.AlarmManagerService: com.android.internal.util.StatLogger mStatLogger> = $r17;

        $r19 = new android.util.SparseArray;

        specialinvoke $r19.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.AlarmManagerService: android.util.SparseArray mNextAlarmClockForUser> = $r19;

        $r20 = new android.util.SparseArray;

        specialinvoke $r20.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.AlarmManagerService: android.util.SparseArray mTmpSparseAlarmClockArray> = $r20;

        $r21 = new android.util.SparseBooleanArray;

        specialinvoke $r21.<android.util.SparseBooleanArray: void <init>()>();

        r0.<com.android.server.AlarmManagerService: android.util.SparseBooleanArray mPendingSendNextAlarmClockChangedForUser> = $r21;

        $r22 = new android.util.SparseArray;

        specialinvoke $r22.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.AlarmManagerService: android.util.SparseArray mHandlerSparseAlarmClockArray> = $r22;

        $r23 = new java.util.HashMap;

        specialinvoke $r23.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.AlarmManagerService: java.util.HashMap mPriorities> = $r23;

        r0.<com.android.server.AlarmManagerService: int mCurrentSeq> = 0;

        $r24 = new java.util.LinkedList;

        specialinvoke $r24.<java.util.LinkedList: void <init>()>();

        r0.<com.android.server.AlarmManagerService: java.util.LinkedList mRecentWakeups> = $r24;

        r0.<com.android.server.AlarmManagerService: long RECENT_WAKEUP_PERIOD> = 86400000L;

        $r25 = new com.android.server.AlarmManagerService$1;

        specialinvoke $r25.<com.android.server.AlarmManagerService$1: void <init>(com.android.server.AlarmManagerService)>(r0);

        r0.<com.android.server.AlarmManagerService: java.util.Comparator mAlarmDispatchComparator> = $r25;

        $r26 = new java.util.ArrayList;

        specialinvoke $r26.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.AlarmManagerService: java.util.ArrayList mAlarmBatches> = $r26;

        r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Alarm mPendingIdleUntil> = null;

        r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Alarm mNextWakeFromIdle> = null;

        $r27 = new java.util.ArrayList;

        specialinvoke $r27.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.AlarmManagerService: java.util.ArrayList mPendingWhileIdleAlarms> = $r27;

        $r28 = new android.util.SparseArray;

        specialinvoke $r28.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.AlarmManagerService: android.util.SparseArray mBroadcastStats> = $r28;

        r0.<com.android.server.AlarmManagerService: int mNumDelayedAlarms> = 0;

        r0.<com.android.server.AlarmManagerService: long mTotalDelayTime> = 0L;

        r0.<com.android.server.AlarmManagerService: long mMaxDelayTime> = 0L;

        $r29 = new com.android.server.AlarmManagerService$4;

        specialinvoke $r29.<com.android.server.AlarmManagerService$4: void <init>(com.android.server.AlarmManagerService)>(r0);

        r0.<com.android.server.AlarmManagerService: android.os.IBinder mService> = $r29;

        $r30 = new com.android.server.AlarmManagerService$7;

        specialinvoke $r30.<com.android.server.AlarmManagerService$7: void <init>(com.android.server.AlarmManagerService)>(r0);

        r0.<com.android.server.AlarmManagerService: com.android.server.AppStateTracker$Listener mForceAppStandbyListener> = $r30;

        r0.<com.android.server.AlarmManagerService: int mSendCount> = 0;

        r0.<com.android.server.AlarmManagerService: int mSendFinishCount> = 0;

        r0.<com.android.server.AlarmManagerService: int mListenerCount> = 0;

        r0.<com.android.server.AlarmManagerService: int mListenerFinishCount> = 0;

        r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Injector mInjector> = r2;

        return;
    }

    static long access$002(com.android.server.AlarmManagerService, long)
    {
        com.android.server.AlarmManagerService r0;
        long l0;

        r0 := @parameter0: com.android.server.AlarmManagerService;

        l0 := @parameter1: long;

        r0.<com.android.server.AlarmManagerService: long mLastTickAdded> = l0;

        return l0;
    }

    static com.android.server.AlarmManagerService$Injector access$100(com.android.server.AlarmManagerService)
    {
        com.android.server.AlarmManagerService r0;
        com.android.server.AlarmManagerService$Injector $r1;

        r0 := @parameter0: com.android.server.AlarmManagerService;

        $r1 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Injector mInjector>;

        return $r1;
    }

    static boolean access$1000(com.android.server.AlarmManagerService)
    {
        com.android.server.AlarmManagerService r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.AlarmManagerService;

        $z0 = specialinvoke r0.<com.android.server.AlarmManagerService: boolean isIdlingImpl()>();

        return $z0;
    }

    static java.util.ArrayList access$1100(com.android.server.AlarmManagerService)
    {
        com.android.server.AlarmManagerService r0;
        java.util.ArrayList $r1;

        r0 := @parameter0: com.android.server.AlarmManagerService;

        $r1 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mInFlightListeners>;

        return $r1;
    }

    static com.android.server.AppStateTracker access$1200(com.android.server.AlarmManagerService)
    {
        com.android.server.AlarmManagerService r0;
        com.android.server.AppStateTracker $r1;

        r0 := @parameter0: com.android.server.AlarmManagerService;

        $r1 = r0.<com.android.server.AlarmManagerService: com.android.server.AppStateTracker mAppStateTracker>;

        return $r1;
    }

    static long access$1400()
    {
        long $l0;

        $l0 = staticinvoke <com.android.server.AlarmManagerService: long init()>();

        return $l0;
    }

    static int access$1500(long)
    {
        long l0;
        int $i1;

        l0 := @parameter0: long;

        $i1 = staticinvoke <com.android.server.AlarmManagerService: int waitForAlarm(long)>(l0);

        return $i1;
    }

    static int access$1600(long, int, long, long)
    {
        long l0, l2, l3;
        int i1, $i4;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        l2 := @parameter2: long;

        l3 := @parameter3: long;

        $i4 = staticinvoke <com.android.server.AlarmManagerService: int set(long,int,long,long)>(l0, i1, l2, l3);

        return $i4;
    }

    static long access$1700(long, int)
    {
        long l0, $l2;
        int i1;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $l2 = staticinvoke <com.android.server.AlarmManagerService: long getNextAlarm(long,int)>(l0, i1);

        return $l2;
    }

    static int access$1800(long, int)
    {
        long l0;
        int i1, $i2;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $i2 = staticinvoke <com.android.server.AlarmManagerService: int setKernelTimezone(long,int)>(l0, i1);

        return $i2;
    }

    static int access$1900(long, long)
    {
        long l0, l1;
        int $i2;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $i2 = staticinvoke <com.android.server.AlarmManagerService: int setKernelTime(long,long)>(l0, l1);

        return $i2;
    }

    static void access$200(com.android.server.AlarmManagerService, int, int)
    {
        com.android.server.AlarmManagerService r0;
        int i0, i1;

        r0 := @parameter0: com.android.server.AlarmManagerService;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<com.android.server.AlarmManagerService: void decrementAlarmCount(int,int)>(i0, i1);

        return;
    }

    static void access$2000(long)
    {
        long l0;

        l0 := @parameter0: long;

        staticinvoke <com.android.server.AlarmManagerService: void close(long)>(l0);

        return;
    }

    static long access$2102(com.android.server.AlarmManagerService, long)
    {
        com.android.server.AlarmManagerService r0;
        long l0;

        r0 := @parameter0: com.android.server.AlarmManagerService;

        l0 := @parameter1: long;

        r0.<com.android.server.AlarmManagerService: long mLastWakeup> = l0;

        return l0;
    }

    static long access$2202(com.android.server.AlarmManagerService, long)
    {
        com.android.server.AlarmManagerService r0;
        long l0;

        r0 := @parameter0: com.android.server.AlarmManagerService;

        l0 := @parameter1: long;

        r0.<com.android.server.AlarmManagerService: long mLastTrigger> = l0;

        return l0;
    }

    static void access$2300(com.android.server.AlarmManagerService)
    {
        com.android.server.AlarmManagerService r0;

        r0 := @parameter0: com.android.server.AlarmManagerService;

        specialinvoke r0.<com.android.server.AlarmManagerService: void updateNextAlarmClockLocked()>();

        return;
    }

    static boolean access$2400(com.android.server.AlarmManagerService, com.android.server.AlarmManagerService$Alarm)
    {
        com.android.server.AlarmManagerService r0;
        com.android.server.AlarmManagerService$Alarm r1;
        boolean $z0;

        r0 := @parameter0: com.android.server.AlarmManagerService;

        r1 := @parameter1: com.android.server.AlarmManagerService$Alarm;

        $z0 = specialinvoke r0.<com.android.server.AlarmManagerService: boolean isExemptFromAppStandby(com.android.server.AlarmManagerService$Alarm)>(r1);

        return $z0;
    }

    static void access$2500(com.android.server.AlarmManagerService)
    {
        com.android.server.AlarmManagerService r0;

        r0 := @parameter0: com.android.server.AlarmManagerService;

        specialinvoke r0.<com.android.server.AlarmManagerService: void sendNextAlarmClockChanged()>();

        return;
    }

    static boolean access$2602(com.android.server.AlarmManagerService, boolean)
    {
        com.android.server.AlarmManagerService r0;
        boolean z0;

        r0 := @parameter0: com.android.server.AlarmManagerService;

        z0 := @parameter1: boolean;

        r0.<com.android.server.AlarmManagerService: boolean mAppStandbyParole> = z0;

        return z0;
    }

    static long access$2702(com.android.server.AlarmManagerService, long)
    {
        com.android.server.AlarmManagerService r0;
        long l0;

        r0 := @parameter0: com.android.server.AlarmManagerService;

        l0 := @parameter1: long;

        r0.<com.android.server.AlarmManagerService: long mLastTickSet> = l0;

        return l0;
    }

    static void access$2800(com.android.server.AlarmManagerService, int)
    {
        com.android.server.AlarmManagerService r0;
        int i0;

        r0 := @parameter0: com.android.server.AlarmManagerService;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.AlarmManagerService: void notifyBroadcastAlarmCompleteLocked(int)>(i0);

        return;
    }

    static int access$2908(com.android.server.AlarmManagerService)
    {
        com.android.server.AlarmManagerService r0;
        int i0, $i1;

        r0 := @parameter0: com.android.server.AlarmManagerService;

        i0 = r0.<com.android.server.AlarmManagerService: int mListenerFinishCount>;

        $i1 = i0 + 1;

        r0.<com.android.server.AlarmManagerService: int mListenerFinishCount> = $i1;

        return i0;
    }

    static int access$3008(com.android.server.AlarmManagerService)
    {
        com.android.server.AlarmManagerService r0;
        int i0, $i1;

        r0 := @parameter0: com.android.server.AlarmManagerService;

        i0 = r0.<com.android.server.AlarmManagerService: int mSendFinishCount>;

        $i1 = i0 + 1;

        r0.<com.android.server.AlarmManagerService: int mSendFinishCount> = $i1;

        return i0;
    }

    static boolean access$302(com.android.server.AlarmManagerService, boolean)
    {
        com.android.server.AlarmManagerService r0;
        boolean z0;

        r0 := @parameter0: com.android.server.AlarmManagerService;

        z0 := @parameter1: boolean;

        r0.<com.android.server.AlarmManagerService: boolean mNextAlarmClockMayChange> = z0;

        return z0;
    }

    static int access$3100(com.android.server.AlarmManagerService$Alarm)
    {
        com.android.server.AlarmManagerService$Alarm r0;
        int $i0;

        r0 := @parameter0: com.android.server.AlarmManagerService$Alarm;

        $i0 = staticinvoke <com.android.server.AlarmManagerService: int getAlarmAttributionUid(com.android.server.AlarmManagerService$Alarm)>(r0);

        return $i0;
    }

    static int access$3208(com.android.server.AlarmManagerService)
    {
        com.android.server.AlarmManagerService r0;
        int i0, $i1;

        r0 := @parameter0: com.android.server.AlarmManagerService;

        i0 = r0.<com.android.server.AlarmManagerService: int mSendCount>;

        $i1 = i0 + 1;

        r0.<com.android.server.AlarmManagerService: int mSendCount> = $i1;

        return i0;
    }

    static android.content.Intent access$3300(com.android.server.AlarmManagerService)
    {
        com.android.server.AlarmManagerService r0;
        android.content.Intent $r1;

        r0 := @parameter0: com.android.server.AlarmManagerService;

        $r1 = r0.<com.android.server.AlarmManagerService: android.content.Intent mBackgroundIntent>;

        return $r1;
    }

    static int access$3408(com.android.server.AlarmManagerService)
    {
        com.android.server.AlarmManagerService r0;
        int i0, $i1;

        r0 := @parameter0: com.android.server.AlarmManagerService;

        i0 = r0.<com.android.server.AlarmManagerService: int mListenerCount>;

        $i1 = i0 + 1;

        r0.<com.android.server.AlarmManagerService: int mListenerCount> = $i1;

        return i0;
    }

    static long[] access$3500(com.android.server.AlarmManagerService)
    {
        com.android.server.AlarmManagerService r0;
        long[] $r1;

        r0 := @parameter0: com.android.server.AlarmManagerService;

        $r1 = r0.<com.android.server.AlarmManagerService: long[] mTickHistory>;

        return $r1;
    }

    static int access$3600(com.android.server.AlarmManagerService)
    {
        com.android.server.AlarmManagerService r0;
        int $i0;

        r0 := @parameter0: com.android.server.AlarmManagerService;

        $i0 = r0.<com.android.server.AlarmManagerService: int mNextTickHistory>;

        return $i0;
    }

    static int access$3602(com.android.server.AlarmManagerService, int)
    {
        com.android.server.AlarmManagerService r0;
        int i0;

        r0 := @parameter0: com.android.server.AlarmManagerService;

        i0 := @parameter1: int;

        r0.<com.android.server.AlarmManagerService: int mNextTickHistory> = i0;

        return i0;
    }

    static int access$3608(com.android.server.AlarmManagerService)
    {
        com.android.server.AlarmManagerService r0;
        int i0, $i1;

        r0 := @parameter0: com.android.server.AlarmManagerService;

        i0 = r0.<com.android.server.AlarmManagerService: int mNextTickHistory>;

        $i1 = i0 + 1;

        r0.<com.android.server.AlarmManagerService: int mNextTickHistory> = $i1;

        return i0;
    }

    static void access$3700(com.android.server.AlarmManagerService, int)
    {
        com.android.server.AlarmManagerService r0;
        int i0;

        r0 := @parameter0: com.android.server.AlarmManagerService;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.AlarmManagerService: void notifyBroadcastAlarmPendingLocked(int)>(i0);

        return;
    }

    static android.os.IBinder access$3800(com.android.server.AlarmManagerService)
    {
        com.android.server.AlarmManagerService r0;
        android.os.IBinder $r1;

        r0 := @parameter0: com.android.server.AlarmManagerService;

        $r1 = r0.<com.android.server.AlarmManagerService: android.os.IBinder mService>;

        return $r1;
    }

    static long access$402(com.android.server.AlarmManagerService, long)
    {
        com.android.server.AlarmManagerService r0;
        long l0;

        r0 := @parameter0: com.android.server.AlarmManagerService;

        l0 := @parameter1: long;

        r0.<com.android.server.AlarmManagerService: long mLastTickRemoved> = l0;

        return l0;
    }

    static com.android.server.AlarmManagerService$BroadcastStats access$500(com.android.server.AlarmManagerService, android.app.PendingIntent)
    {
        com.android.server.AlarmManagerService r0;
        android.app.PendingIntent r1;
        com.android.server.AlarmManagerService$BroadcastStats $r2;

        r0 := @parameter0: com.android.server.AlarmManagerService;

        r1 := @parameter1: android.app.PendingIntent;

        $r2 = specialinvoke r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$BroadcastStats getStatsLocked(android.app.PendingIntent)>(r1);

        return $r2;
    }

    static com.android.server.AlarmManagerService$BroadcastStats access$600(com.android.server.AlarmManagerService, int, java.lang.String)
    {
        com.android.server.AlarmManagerService r0;
        int i0;
        java.lang.String r1;
        com.android.server.AlarmManagerService$BroadcastStats $r2;

        r0 := @parameter0: com.android.server.AlarmManagerService;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        $r2 = specialinvoke r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$BroadcastStats getStatsLocked(int,java.lang.String)>(i0, r1);

        return $r2;
    }

    static long access$702(com.android.server.AlarmManagerService, long)
    {
        com.android.server.AlarmManagerService r0;
        long l0;

        r0 := @parameter0: com.android.server.AlarmManagerService;

        l0 := @parameter1: long;

        r0.<com.android.server.AlarmManagerService: long mLastTickReceived> = l0;

        return l0;
    }

    static boolean addBatchLocked(java.util.ArrayList, com.android.server.AlarmManagerService$Batch)
    {
        java.util.ArrayList r0;
        com.android.server.AlarmManagerService$Batch r1;
        int i0, $i1, i2;
        com.android.server.AlarmManagerService$BatchTimeOrder $r2;
        boolean z0;

        r0 := @parameter0: java.util.ArrayList;

        r1 := @parameter1: com.android.server.AlarmManagerService$Batch;

        $r2 = <com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$BatchTimeOrder sBatchOrder>;

        i0 = staticinvoke <java.util.Collections: int binarySearch(java.util.List,java.lang.Object,java.util.Comparator)>(r0, r1, $r2);

        z0 = 1;

        i2 = i0;

        if i0 >= 0 goto label1;

        $i1 = 0 - i0;

        i2 = $i1 - 1;

     label1:
        virtualinvoke r0.<java.util.ArrayList: void add(int,java.lang.Object)>(i2, r1);

        if i2 != 0 goto label2;

        goto label3;

     label2:
        z0 = 0;

     label3:
        return z0;
    }

    private boolean adjustDeliveryTimeBasedOnBucketLocked(com.android.server.AlarmManagerService$Alarm)
    {
        com.android.server.AlarmManagerService r0;
        com.android.server.AlarmManagerService$Alarm r1;
        long l0, l1, $l5, $l6, $l8, $l10, $l11, $l12, $l13, $l15, $l17, $l18, $l19, $l21, $l22, $l24, $l25, $l27, $l28, l30, l31, l33, l34;
        java.lang.String r2;
        int i2, i3, $i4, $i16, i29, i32;
        boolean $z1, $z2, z4, z5;
        com.android.server.AlarmManagerService$Injector $r3, $r8, $r11;
        android.app.usage.UsageStatsManagerInternal $r4;
        com.android.server.AlarmManagerService$AppWakeupHistory $r5, $r6, $r10;
        byte $b7, $b9, $b14, $b20, $b23, $b26;
        com.android.server.AlarmManagerService$Constants $r7, $r9, $r12, $r13;

        r0 := @this: com.android.server.AlarmManagerService;

        r1 := @parameter0: com.android.server.AlarmManagerService$Alarm;

        $z1 = specialinvoke r0.<com.android.server.AlarmManagerService: boolean isExemptFromAppStandby(com.android.server.AlarmManagerService$Alarm)>(r1);

        if $z1 == 0 goto label01;

        return 0;

     label01:
        $z2 = r0.<com.android.server.AlarmManagerService: boolean mAppStandbyParole>;

        if $z2 == 0 goto label03;

        $l25 = r1.<com.android.server.AlarmManagerService$Alarm: long whenElapsed>;

        $l24 = r1.<com.android.server.AlarmManagerService$Alarm: long expectedWhenElapsed>;

        $b26 = $l25 cmp $l24;

        if $b26 <= 0 goto label02;

        $l27 = r1.<com.android.server.AlarmManagerService$Alarm: long expectedWhenElapsed>;

        r1.<com.android.server.AlarmManagerService$Alarm: long whenElapsed> = $l27;

        $l28 = r1.<com.android.server.AlarmManagerService$Alarm: long expectedMaxWhenElapsed>;

        r1.<com.android.server.AlarmManagerService$Alarm: long maxWhenElapsed> = $l28;

        return 1;

     label02:
        return 0;

     label03:
        l0 = r1.<com.android.server.AlarmManagerService$Alarm: long whenElapsed>;

        l1 = r1.<com.android.server.AlarmManagerService$Alarm: long maxWhenElapsed>;

        r2 = r1.<com.android.server.AlarmManagerService$Alarm: java.lang.String sourcePackage>;

        $i4 = r1.<com.android.server.AlarmManagerService$Alarm: int creatorUid>;

        i2 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i4);

        $r4 = r0.<com.android.server.AlarmManagerService: android.app.usage.UsageStatsManagerInternal mUsageStatsManagerInternal>;

        $r3 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Injector mInjector>;

        $l5 = virtualinvoke $r3.<com.android.server.AlarmManagerService$Injector: long getElapsedRealtime()>();

        i29 = virtualinvoke $r4.<android.app.usage.UsageStatsManagerInternal: int getAppStandbyBucket(java.lang.String,int,long)>(r2, i2, $l5);

        $r5 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$AppWakeupHistory mAppWakeupHistory>;

        i3 = virtualinvoke $r5.<com.android.server.AlarmManagerService$AppWakeupHistory: int getTotalWakeupsInWindow(java.lang.String,int)>(r2, i2);

        if i29 != 45 goto label06;

        if i3 <= 0 goto label05;

        $r10 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$AppWakeupHistory mAppWakeupHistory>;

        $r9 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Constants mConstants>;

        $i16 = $r9.<com.android.server.AlarmManagerService$Constants: int APP_STANDBY_RESTRICTED_QUOTA>;

        l30 = virtualinvoke $r10.<com.android.server.AlarmManagerService$AppWakeupHistory: long getNthLastWakeupForPackage(java.lang.String,int,int)>(r2, i2, $i16);

        z4 = 0;

        $r11 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Injector mInjector>;

        $l17 = virtualinvoke $r11.<com.android.server.AlarmManagerService$Injector: long getElapsedRealtime()>();

        $l19 = $l17 - l30;

        $r12 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Constants mConstants>;

        $l18 = $r12.<com.android.server.AlarmManagerService$Constants: long APP_STANDBY_RESTRICTED_WINDOW>;

        $b20 = $l19 cmp $l18;

        if $b20 >= 0 goto label04;

        $r13 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Constants mConstants>;

        $l21 = $r13.<com.android.server.AlarmManagerService$Constants: long APP_STANDBY_RESTRICTED_WINDOW>;

        l31 = $l21 + l30;

        z4 = 0;

        $l22 = r1.<com.android.server.AlarmManagerService$Alarm: long expectedWhenElapsed>;

        $b23 = $l22 cmp l31;

        if $b23 >= 0 goto label04;

        r1.<com.android.server.AlarmManagerService$Alarm: long maxWhenElapsed> = l31;

        r1.<com.android.server.AlarmManagerService$Alarm: long whenElapsed> = l31;

        z4 = 1;

     label04:
        goto label09;

     label05:
        z4 = 0;

        goto label09;

     label06:
        i32 = virtualinvoke r0.<com.android.server.AlarmManagerService: int getQuotaForBucketLocked(int)>(i29);

        z4 = 0;

        if i3 < i32 goto label09;

        if i32 > 0 goto label07;

        $r8 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Injector mInjector>;

        $l15 = virtualinvoke $r8.<com.android.server.AlarmManagerService$Injector: long getElapsedRealtime()>();

        l33 = $l15 + 86400000L;

        goto label08;

     label07:
        $r6 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$AppWakeupHistory mAppWakeupHistory>;

        l34 = virtualinvoke $r6.<com.android.server.AlarmManagerService$AppWakeupHistory: long getNthLastWakeupForPackage(java.lang.String,int,int)>(r2, i2, i32);

        $r7 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Constants mConstants>;

        $l12 = $r7.<com.android.server.AlarmManagerService$Constants: long APP_STANDBY_WINDOW>;

        l33 = $l12 + l34;

     label08:
        z4 = 0;

        $l13 = r1.<com.android.server.AlarmManagerService$Alarm: long expectedWhenElapsed>;

        $b14 = $l13 cmp l33;

        if $b14 >= 0 goto label09;

        r1.<com.android.server.AlarmManagerService$Alarm: long maxWhenElapsed> = l33;

        r1.<com.android.server.AlarmManagerService$Alarm: long whenElapsed> = l33;

        z4 = 1;

     label09:
        if z4 != 0 goto label10;

        $l10 = r1.<com.android.server.AlarmManagerService$Alarm: long expectedWhenElapsed>;

        r1.<com.android.server.AlarmManagerService$Alarm: long whenElapsed> = $l10;

        $l11 = r1.<com.android.server.AlarmManagerService$Alarm: long expectedMaxWhenElapsed>;

        r1.<com.android.server.AlarmManagerService$Alarm: long maxWhenElapsed> = $l11;

     label10:
        $l6 = r1.<com.android.server.AlarmManagerService$Alarm: long whenElapsed>;

        $b7 = l0 cmp $l6;

        if $b7 != 0 goto label12;

        $l8 = r1.<com.android.server.AlarmManagerService$Alarm: long maxWhenElapsed>;

        $b9 = l1 cmp $l8;

        if $b9 == 0 goto label11;

        goto label12;

     label11:
        z5 = 0;

        goto label13;

     label12:
        z5 = 1;

     label13:
        return z5;
    }

    static long clampPositive(long)
    {
        byte $b0;
        long l1;

        l1 := @parameter0: long;

        $b0 = l1 cmp 0L;

        if $b0 < 0 goto label1;

        goto label2;

     label1:
        l1 = 9223372036854775807L;

     label2:
        return l1;
    }

    private static native void close(long);

    private long convertToElapsed(long, int)
    {
        com.android.server.AlarmManagerService r0;
        long l0, $l2, $l3, $l4, l5;
        int i1;
        com.android.server.AlarmManagerService$Injector $r1, $r2;
        boolean z1;

        r0 := @this: com.android.server.AlarmManagerService;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        z1 = 1;

        if i1 == 1 goto label2;

        if i1 != 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        l5 = l0;

        if z1 == 0 goto label3;

        $r1 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Injector mInjector>;

        $l2 = virtualinvoke $r1.<com.android.server.AlarmManagerService$Injector: long getCurrentTimeMillis()>();

        $r2 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Injector mInjector>;

        $l3 = virtualinvoke $r2.<com.android.server.AlarmManagerService$Injector: long getElapsedRealtime()>();

        $l4 = $l2 - $l3;

        l5 = l0 - $l4;

     label3:
        return l5;
    }

    private void decrementAlarmCount(int, int)
    {
        com.android.server.AlarmManagerService r0;
        int i0, i1, i2, $i4, i5;
        android.util.SparseIntArray $r2, $r11, $r12, $r13;
        java.lang.StringBuilder $r3;
        java.lang.String $r10;

        r0 := @this: com.android.server.AlarmManagerService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i5 = 0;

        $r2 = r0.<com.android.server.AlarmManagerService: android.util.SparseIntArray mAlarmsPerUid>;

        i2 = virtualinvoke $r2.<android.util.SparseIntArray: int indexOfKey(int)>(i0);

        if i2 < 0 goto label2;

        $r11 = r0.<com.android.server.AlarmManagerService: android.util.SparseIntArray mAlarmsPerUid>;

        i5 = virtualinvoke $r11.<android.util.SparseIntArray: int valueAt(int)>(i2);

        if i5 <= i1 goto label1;

        $r13 = r0.<com.android.server.AlarmManagerService: android.util.SparseIntArray mAlarmsPerUid>;

        $i4 = i5 - i1;

        virtualinvoke $r13.<android.util.SparseIntArray: void setValueAt(int,int)>(i2, $i4);

        goto label2;

     label1:
        $r12 = r0.<com.android.server.AlarmManagerService: android.util.SparseIntArray mAlarmsPerUid>;

        virtualinvoke $r12.<android.util.SparseIntArray: void removeAt(int)>(i2);

     label2:
        if i5 >= i1 goto label3;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempt to decrement existing alarm count ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" by ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for uid ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r10 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("AlarmManager", $r10);

     label3:
        return;
    }

    private void deliverPendingBackgroundAlarmsLocked(java.util.ArrayList, long)
    {
        com.android.server.AlarmManagerService r0;
        java.util.ArrayList r1, $r3, $r4, $r5, $r6, $r7;
        long l0, l2, $l4, $l5, $l6, $l7, $l13, $l14, $l15, $l16, $l17, $l20, $l21, $l22, $l23, $l24, $l25, $l28, $l29, $l30, $l31, $l32, $l34, $l35, $l36, $l39, l41, l43;
        int i1, $i3, $i9, $i10, $i11, $i12, $i19, $i26, $i27, $i33, $i37, $i38, i40;
        byte $b8, $b18;
        boolean $z1, $z3, z4;
        java.lang.Object $r8;
        java.lang.String $r9;
        android.app.AlarmManager$AlarmClockInfo $r10;
        android.os.WorkSource $r11;
        android.app.PendingIntent $r12;
        com.android.server.AlarmManagerService$Alarm r13;
        java.util.Comparator $r16;

        r0 := @this: com.android.server.AlarmManagerService;

        r1 := @parameter0: java.util.ArrayList;

        l0 := @parameter1: long;

        i1 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        z4 = 0;

        i40 = 0;

     label01:
        if i40 >= i1 goto label04;

        $r8 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i40);

        r13 = (com.android.server.AlarmManagerService$Alarm) $r8;

        $z3 = r13.<com.android.server.AlarmManagerService$Alarm: boolean wakeup>;

        if $z3 == 0 goto label02;

        z4 = 1;

        goto label02;

     label02:
        r13.<com.android.server.AlarmManagerService$Alarm: int count> = 1;

        $l17 = r13.<com.android.server.AlarmManagerService$Alarm: long repeatInterval>;

        $b18 = $l17 cmp 0L;

        if $b18 <= 0 goto label03;

        $i19 = r13.<com.android.server.AlarmManagerService$Alarm: int count>;

        $l24 = (long) $i19;

        $l20 = r13.<com.android.server.AlarmManagerService$Alarm: long expectedWhenElapsed>;

        $l22 = l0 - $l20;

        $l21 = r13.<com.android.server.AlarmManagerService$Alarm: long repeatInterval>;

        $l23 = $l22 / $l21;

        $l25 = $l24 + $l23;

        $i26 = (int) $l25;

        r13.<com.android.server.AlarmManagerService$Alarm: int count> = $i26;

        $i27 = r13.<com.android.server.AlarmManagerService$Alarm: int count>;

        $l29 = (long) $i27;

        $l28 = r13.<com.android.server.AlarmManagerService$Alarm: long repeatInterval>;

        l2 = $l29 * $l28;

        $l30 = r13.<com.android.server.AlarmManagerService$Alarm: long expectedWhenElapsed>;

        l41 = $l30 + l2;

        $i33 = r13.<com.android.server.AlarmManagerService$Alarm: int type>;

        $l31 = r13.<com.android.server.AlarmManagerService$Alarm: long when>;

        $l34 = $l31 + l2;

        $l35 = r13.<com.android.server.AlarmManagerService$Alarm: long windowLength>;

        $l32 = r13.<com.android.server.AlarmManagerService$Alarm: long repeatInterval>;

        $l36 = staticinvoke <com.android.server.AlarmManagerService: long maxTriggerTime(long,long,long)>(l0, l41, $l32);

        $l39 = r13.<com.android.server.AlarmManagerService$Alarm: long repeatInterval>;

        $r12 = r13.<com.android.server.AlarmManagerService$Alarm: android.app.PendingIntent operation>;

        $i38 = r13.<com.android.server.AlarmManagerService$Alarm: int flags>;

        $r11 = r13.<com.android.server.AlarmManagerService$Alarm: android.os.WorkSource workSource>;

        $r10 = r13.<com.android.server.AlarmManagerService$Alarm: android.app.AlarmManager$AlarmClockInfo alarmClock>;

        $i37 = r13.<com.android.server.AlarmManagerService$Alarm: int uid>;

        $r9 = r13.<com.android.server.AlarmManagerService$Alarm: java.lang.String packageName>;

        specialinvoke r0.<com.android.server.AlarmManagerService: void setImplLocked(int,long,long,long,long,long,android.app.PendingIntent,android.app.IAlarmListener,java.lang.String,int,boolean,android.os.WorkSource,android.app.AlarmManager$AlarmClockInfo,int,java.lang.String)>($i33, $l34, l41, $l35, $l36, $l39, $r12, null, null, $i38, 1, $r11, $r10, $i37, $r9);

        goto label03;

     label03:
        i40 = i40 + 1;

        goto label01;

     label04:
        if z4 != 0 goto label07;

        $z1 = virtualinvoke r0.<com.android.server.AlarmManagerService: boolean checkAllowNonWakeupDelayLocked(long)>(l0);

        if $z1 == 0 goto label06;

        $r6 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mPendingNonWakeupAlarms>;

        $i9 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        if $i9 != 0 goto label05;

        r0.<com.android.server.AlarmManagerService: long mStartCurrentDelayTime> = l0;

        $l13 = virtualinvoke r0.<com.android.server.AlarmManagerService: long currentNonWakeupFuzzLocked(long)>(l0);

        $l14 = $l13 * 3L;

        $l15 = $l14 / 2L;

        $l16 = $l15 + l0;

        r0.<com.android.server.AlarmManagerService: long mNextNonWakeupDeliveryTime> = $l16;

     label05:
        $r7 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mPendingNonWakeupAlarms>;

        virtualinvoke $r7.<java.util.ArrayList: boolean addAll(java.util.Collection)>(r1);

        $i10 = r0.<com.android.server.AlarmManagerService: int mNumDelayedAlarms>;

        $i11 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        $i12 = $i10 + $i11;

        r0.<com.android.server.AlarmManagerService: int mNumDelayedAlarms> = $i12;

        goto label10;

     label06:
        goto label07;

     label07:
        $r3 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mPendingNonWakeupAlarms>;

        $i3 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if $i3 <= 0 goto label09;

        $r4 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mPendingNonWakeupAlarms>;

        virtualinvoke r1.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r4);

        $l4 = r0.<com.android.server.AlarmManagerService: long mStartCurrentDelayTime>;

        l43 = l0 - $l4;

        $l5 = r0.<com.android.server.AlarmManagerService: long mTotalDelayTime>;

        $l6 = $l5 + l43;

        r0.<com.android.server.AlarmManagerService: long mTotalDelayTime> = $l6;

        $l7 = r0.<com.android.server.AlarmManagerService: long mMaxDelayTime>;

        $b8 = $l7 cmp l43;

        if $b8 >= 0 goto label08;

        r0.<com.android.server.AlarmManagerService: long mMaxDelayTime> = l43;

     label08:
        $r5 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mPendingNonWakeupAlarms>;

        virtualinvoke $r5.<java.util.ArrayList: void clear()>();

     label09:
        virtualinvoke r0.<com.android.server.AlarmManagerService: void calculateDeliveryPriorities(java.util.ArrayList)>(r1);

        $r16 = r0.<com.android.server.AlarmManagerService: java.util.Comparator mAlarmDispatchComparator>;

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r1, $r16);

        virtualinvoke r0.<com.android.server.AlarmManagerService: void deliverAlarmsLocked(java.util.ArrayList,long)>(r1, l0);

     label10:
        return;
    }

    private static final void dumpAlarmList(java.io.PrintWriter, java.util.ArrayList, java.lang.String, long, long, java.text.SimpleDateFormat)
    {
        java.io.PrintWriter r0;
        java.util.ArrayList r1;
        java.lang.String r2, $r9, r10;
        long l0, l1;
        java.text.SimpleDateFormat r3;
        com.android.server.AlarmManagerService$Alarm r4;
        int $i2, $i3, i4;
        java.lang.Object $r5;
        java.lang.StringBuilder $r6;

        r0 := @parameter0: java.io.PrintWriter;

        r1 := @parameter1: java.util.ArrayList;

        r2 := @parameter2: java.lang.String;

        l0 := @parameter3: long;

        l1 := @parameter4: long;

        r3 := @parameter5: java.text.SimpleDateFormat;

        $i2 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        i4 = $i2 - 1;

     label1:
        if i4 < 0 goto label2;

        $r5 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        r4 = (com.android.server.AlarmManagerService$Alarm) $r5;

        $i3 = r4.<com.android.server.AlarmManagerService$Alarm: int type>;

        r10 = staticinvoke <com.android.server.AlarmManagerService: java.lang.String labelForType(int)>($i3);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r10);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(" #");

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>(i4);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.Object)>(r4);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r4.<com.android.server.AlarmManagerService$Alarm: void dump(java.io.PrintWriter,java.lang.String,long,long,java.text.SimpleDateFormat)>(r0, $r9, l0, l1, r3);

        i4 = i4 + -1;

        goto label1;

     label2:
        return;
    }

    private static final void dumpAlarmList(java.io.PrintWriter, java.util.ArrayList, java.lang.String, java.lang.String, long, long, java.text.SimpleDateFormat)
    {
        java.io.PrintWriter r0;
        java.util.ArrayList r1;
        java.lang.String r2, r3, $r11;
        long l0, l1;
        java.text.SimpleDateFormat r4;
        com.android.server.AlarmManagerService$Alarm r5;
        int $i2, i3;
        java.lang.Object $r7;
        java.lang.StringBuilder $r8;

        r0 := @parameter0: java.io.PrintWriter;

        r1 := @parameter1: java.util.ArrayList;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        l0 := @parameter4: long;

        l1 := @parameter5: long;

        r4 := @parameter6: java.text.SimpleDateFormat;

        $i2 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        i3 = $i2 - 1;

     label1:
        if i3 < 0 goto label2;

        $r7 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r5 = (com.android.server.AlarmManagerService$Alarm) $r7;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r3);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(" #");

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>(i3);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.Object)>(r5);

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r5.<com.android.server.AlarmManagerService$Alarm: void dump(java.io.PrintWriter,java.lang.String,long,long,java.text.SimpleDateFormat)>(r0, $r11, l0, l1, r4);

        i3 = i3 + -1;

        goto label1;

     label2:
        return;
    }

    private void dumpUpcomingNAlarmsForUid(java.io.PrintWriter, int, int)
    {
        com.android.server.AlarmManagerService r0;
        java.io.PrintWriter r1;
        int i0, i1, $i4, $i5, $i6, $i7, i8, i9, i10;
        long l2, l3;
        com.android.server.AlarmManagerService$Alarm r3;
        java.lang.String r4, $r17;
        java.text.SimpleDateFormat $r6;
        com.android.server.AlarmManagerService$Injector $r7, $r8;
        java.util.ArrayList $r9, $r10;
        java.lang.Object $r11;
        java.lang.StringBuilder $r12;
        com.android.server.AlarmManagerService$Batch r20;

        r0 := @this: com.android.server.AlarmManagerService;

        r1 := @parameter0: java.io.PrintWriter;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r6 = new java.text.SimpleDateFormat;

        specialinvoke $r6.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyy-MM-dd HH:mm:ss");

        $r7 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Injector mInjector>;

        l2 = virtualinvoke $r7.<com.android.server.AlarmManagerService$Injector: long getElapsedRealtime()>();

        $r8 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Injector mInjector>;

        l3 = virtualinvoke $r8.<com.android.server.AlarmManagerService$Injector: long getCurrentTimeMillis()>();

        i8 = 0;

        i9 = 0;

     label1:
        $r9 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mAlarmBatches>;

        $i4 = virtualinvoke $r9.<java.util.ArrayList: int size()>();

        if i9 >= $i4 goto label5;

        if i8 >= i1 goto label5;

        $r10 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mAlarmBatches>;

        $r11 = virtualinvoke $r10.<java.util.ArrayList: java.lang.Object get(int)>(i9);

        r20 = (com.android.server.AlarmManagerService$Batch) $r11;

        i10 = 0;

     label2:
        $i5 = virtualinvoke r20.<com.android.server.AlarmManagerService$Batch: int size()>();

        if i10 >= $i5 goto label4;

        if i8 >= i1 goto label4;

        r3 = virtualinvoke r20.<com.android.server.AlarmManagerService$Batch: com.android.server.AlarmManagerService$Alarm get(int)>(i10);

        $i6 = r3.<com.android.server.AlarmManagerService$Alarm: int uid>;

        if $i6 != i0 goto label3;

        $i7 = r3.<com.android.server.AlarmManagerService$Alarm: int type>;

        r4 = staticinvoke <com.android.server.AlarmManagerService: java.lang.String labelForType(int)>($i7);

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" #");

        i8 = i8 + 1;

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i8);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r17 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r17);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>(r3);

        virtualinvoke r3.<com.android.server.AlarmManagerService$Alarm: void dump(java.io.PrintWriter,java.lang.String,long,long,java.text.SimpleDateFormat)>(r1, "  ", l2, l3, $r6);

        goto label3;

     label3:
        i10 = i10 + 1;

        goto label2;

     label4:
        i9 = i9 + 1;

        goto label1;

     label5:
        return;
    }

    static void findAllUnrestrictedPendingBackgroundAlarmsLockedInner(android.util.SparseArray, java.util.ArrayList, java.util.function.Predicate)
    {
        android.util.SparseArray r0;
        java.util.ArrayList r1, r3;
        java.util.function.Predicate r2;
        com.android.server.AlarmManagerService$Alarm r4;
        int $i0, $i2, $i3, i4, i5;
        java.lang.Object $r5, $r6;
        boolean $z0;

        r0 := @parameter0: android.util.SparseArray;

        r1 := @parameter1: java.util.ArrayList;

        r2 := @parameter2: java.util.function.Predicate;

        $i0 = virtualinvoke r0.<android.util.SparseArray: int size()>();

        i4 = $i0 - 1;

     label1:
        if i4 < 0 goto label7;

        virtualinvoke r0.<android.util.SparseArray: int keyAt(int)>(i4);

        $r5 = virtualinvoke r0.<android.util.SparseArray: java.lang.Object valueAt(int)>(i4);

        r3 = (java.util.ArrayList) $r5;

        $i2 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        i5 = $i2 - 1;

     label2:
        if i5 < 0 goto label5;

        $r6 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        r4 = (com.android.server.AlarmManagerService$Alarm) $r6;

        $z0 = interfaceinvoke r2.<java.util.function.Predicate: boolean test(java.lang.Object)>(r4);

        if $z0 == 0 goto label3;

        goto label4;

     label3:
        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r4);

        virtualinvoke r3.<java.util.ArrayList: java.lang.Object remove(int)>(i5);

     label4:
        i5 = i5 + -1;

        goto label2;

     label5:
        $i3 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        if $i3 != 0 goto label6;

        virtualinvoke r0.<android.util.SparseArray: void removeAt(int)>(i4);

     label6:
        i4 = i4 + -1;

        goto label1;

     label7:
        return;
    }

    private com.android.server.AlarmManagerService$Batch findFirstWakeupBatchLocked()
    {
        com.android.server.AlarmManagerService r0;
        int i0, i1;
        com.android.server.AlarmManagerService$Batch r1;
        java.util.ArrayList $r2, $r3;
        java.lang.Object $r4;
        boolean $z0;

        r0 := @this: com.android.server.AlarmManagerService;

        $r2 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mAlarmBatches>;

        i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r3 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mAlarmBatches>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r1 = (com.android.server.AlarmManagerService$Batch) $r4;

        $z0 = virtualinvoke r1.<com.android.server.AlarmManagerService$Batch: boolean hasWakeups()>();

        if $z0 == 0 goto label2;

        return r1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return null;
    }

    private static java.lang.String formatNextAlarm(android.content.Context, android.app.AlarmManager$AlarmClockInfo, int)
    {
        android.app.AlarmManager$AlarmClockInfo r0;
        int i0;
        boolean $z0;
        java.util.Locale $r1;
        long $l1;
        java.lang.CharSequence $r2;
        android.content.Context r3;
        java.lang.String r4, r5, r6;

        r3 := @parameter0: android.content.Context;

        r0 := @parameter1: android.app.AlarmManager$AlarmClockInfo;

        i0 := @parameter2: int;

        $z0 = staticinvoke <android.text.format.DateFormat: boolean is24HourFormat(android.content.Context,int)>(r3, i0);

        if $z0 == 0 goto label1;

        r4 = "EHm";

        goto label2;

     label1:
        r4 = "Ehma";

     label2:
        $r1 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        r5 = staticinvoke <android.text.format.DateFormat: java.lang.String getBestDateTimePattern(java.util.Locale,java.lang.String)>($r1, r4);

        if r0 != null goto label3;

        r6 = "";

        goto label4;

     label3:
        $l1 = virtualinvoke r0.<android.app.AlarmManager$AlarmClockInfo: long getTriggerTime()>();

        $r2 = staticinvoke <android.text.format.DateFormat: java.lang.CharSequence format(java.lang.CharSequence,long)>(r5, $l1);

        r6 = interfaceinvoke $r2.<java.lang.CharSequence: java.lang.String toString()>();

     label4:
        return r6;
    }

    static int fuzzForDuration(long)
    {
        long l0;
        byte $b1, $b2;
        int $i3;

        l0 := @parameter0: long;

        $b1 = l0 cmp 900000L;

        if $b1 >= 0 goto label1;

        $i3 = (int) l0;

        return $i3;

     label1:
        $b2 = l0 cmp 5400000L;

        if $b2 >= 0 goto label2;

        return 900000;

     label2:
        return 1800000;
    }

    private static int getAlarmAttributionUid(com.android.server.AlarmManagerService$Alarm)
    {
        com.android.server.AlarmManagerService$Alarm r0;
        android.os.WorkSource $r1, $r2, $r3;
        int $i0, $i1;
        boolean $z0;

        r0 := @parameter0: com.android.server.AlarmManagerService$Alarm;

        $r1 = r0.<com.android.server.AlarmManagerService$Alarm: android.os.WorkSource workSource>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.server.AlarmManagerService$Alarm: android.os.WorkSource workSource>;

        $z0 = virtualinvoke $r2.<android.os.WorkSource: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r3 = r0.<com.android.server.AlarmManagerService$Alarm: android.os.WorkSource workSource>;

        $i1 = virtualinvoke $r3.<android.os.WorkSource: int getAttributionUid()>();

        return $i1;

     label1:
        $i0 = r0.<com.android.server.AlarmManagerService$Alarm: int creatorUid>;

        return $i0;
    }

    static int getAlarmCount(java.util.ArrayList)
    {
        java.util.ArrayList r0;
        int i0, $i1, i2, i3;
        java.lang.Object $r1;
        com.android.server.AlarmManagerService$Batch $r2;

        r0 := @parameter0: java.util.ArrayList;

        i2 = 0;

        i0 = virtualinvoke r0.<java.util.ArrayList: int size()>();

        i3 = 0;

     label1:
        if i3 >= i0 goto label2;

        $r1 = virtualinvoke r0.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        $r2 = (com.android.server.AlarmManagerService$Batch) $r1;

        $i1 = virtualinvoke $r2.<com.android.server.AlarmManagerService$Batch: int size()>();

        i2 = i2 + $i1;

        i3 = i3 + 1;

        goto label1;

     label2:
        return i2;
    }

    private static native long getNextAlarm(long, int);

    private final com.android.server.AlarmManagerService$BroadcastStats getStatsLocked(int, java.lang.String)
    {
        com.android.server.AlarmManagerService r0;
        int i0;
        java.lang.String r1;
        com.android.server.AlarmManagerService$BroadcastStats r2, $r6, r12;
        android.util.SparseArray $r3, $r9;
        java.lang.Object $r4, $r5;
        android.util.ArrayMap $r8, r10, r11;

        r0 := @this: com.android.server.AlarmManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r3 = r0.<com.android.server.AlarmManagerService: android.util.SparseArray mBroadcastStats>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r10 = (android.util.ArrayMap) $r4;

        r11 = r10;

        if r10 != null goto label1;

        $r8 = new android.util.ArrayMap;

        specialinvoke $r8.<android.util.ArrayMap: void <init>()>();

        r11 = $r8;

        $r9 = r0.<com.android.server.AlarmManagerService: android.util.SparseArray mBroadcastStats>;

        virtualinvoke $r9.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, $r8);

     label1:
        $r5 = virtualinvoke r11.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (com.android.server.AlarmManagerService$BroadcastStats) $r5;

        r12 = r2;

        if r2 != null goto label2;

        $r6 = new com.android.server.AlarmManagerService$BroadcastStats;

        specialinvoke $r6.<com.android.server.AlarmManagerService$BroadcastStats: void <init>(int,java.lang.String)>(i0, r1);

        r12 = $r6;

        virtualinvoke r11.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r6);

     label2:
        return r12;
    }

    private final com.android.server.AlarmManagerService$BroadcastStats getStatsLocked(android.app.PendingIntent)
    {
        com.android.server.AlarmManagerService r0;
        android.app.PendingIntent r1;
        java.lang.String r2;
        int $i0;
        com.android.server.AlarmManagerService$BroadcastStats $r3;

        r0 := @this: com.android.server.AlarmManagerService;

        r1 := @parameter0: android.app.PendingIntent;

        r2 = virtualinvoke r1.<android.app.PendingIntent: java.lang.String getCreatorPackage()>();

        $i0 = virtualinvoke r1.<android.app.PendingIntent: int getCreatorUid()>();

        $r3 = specialinvoke r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$BroadcastStats getStatsLocked(int,java.lang.String)>($i0, r2);

        return $r3;
    }

    private long getWhileIdleMinIntervalLocked(int)
    {
        com.android.server.AlarmManagerService r0;
        int i0;
        android.util.SparseBooleanArray $r1;
        boolean $z0, $z1, z2, z3;
        com.android.server.AlarmManagerService$Constants $r2, $r3, $r4, $r5;
        long $l1, $l2, $l3, $l4;
        com.android.server.AlarmManagerService$Alarm r6;
        com.android.server.AppStateTracker r7;

        r0 := @this: com.android.server.AlarmManagerService;

        i0 := @parameter0: int;

        r6 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Alarm mPendingIdleUntil>;

        z2 = 1;

        if r6 == null goto label1;

        z3 = 1;

        goto label2;

     label1:
        z3 = 0;

     label2:
        r7 = r0.<com.android.server.AlarmManagerService: com.android.server.AppStateTracker mAppStateTracker>;

        if r7 == null goto label3;

        $z1 = virtualinvoke r7.<com.android.server.AppStateTracker: boolean isForceAllAppsStandbyEnabled()>();

        if $z1 == 0 goto label3;

        goto label4;

     label3:
        z2 = 0;

     label4:
        if z3 != 0 goto label5;

        if z2 != 0 goto label5;

        $r5 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Constants mConstants>;

        $l4 = $r5.<com.android.server.AlarmManagerService$Constants: long ALLOW_WHILE_IDLE_SHORT_TIME>;

        return $l4;

     label5:
        if z3 == 0 goto label6;

        $r4 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Constants mConstants>;

        $l3 = $r4.<com.android.server.AlarmManagerService$Constants: long ALLOW_WHILE_IDLE_LONG_TIME>;

        return $l3;

     label6:
        $r1 = r0.<com.android.server.AlarmManagerService: android.util.SparseBooleanArray mUseAllowWhileIdleShortTime>;

        $z0 = virtualinvoke $r1.<android.util.SparseBooleanArray: boolean get(int)>(i0);

        if $z0 == 0 goto label7;

        $r3 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Constants mConstants>;

        $l2 = $r3.<com.android.server.AlarmManagerService$Constants: long ALLOW_WHILE_IDLE_SHORT_TIME>;

        return $l2;

     label7:
        $r2 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Constants mConstants>;

        $l1 = $r2.<com.android.server.AlarmManagerService$Constants: long ALLOW_WHILE_IDLE_LONG_TIME>;

        return $l1;
    }

    private void incrementAlarmCount(int)
    {
        com.android.server.AlarmManagerService r0;
        int i0, i1, $i2, $i3;
        android.util.SparseIntArray r1, $r2, $r3;

        r0 := @this: com.android.server.AlarmManagerService;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.AlarmManagerService: android.util.SparseIntArray mAlarmsPerUid>;

        i1 = virtualinvoke $r2.<android.util.SparseIntArray: int indexOfKey(int)>(i0);

        if i1 < 0 goto label1;

        r1 = r0.<com.android.server.AlarmManagerService: android.util.SparseIntArray mAlarmsPerUid>;

        $i2 = virtualinvoke r1.<android.util.SparseIntArray: int valueAt(int)>(i1);

        $i3 = $i2 + 1;

        virtualinvoke r1.<android.util.SparseIntArray: void setValueAt(int,int)>(i1, $i3);

        goto label2;

     label1:
        $r3 = r0.<com.android.server.AlarmManagerService: android.util.SparseIntArray mAlarmsPerUid>;

        virtualinvoke $r3.<android.util.SparseIntArray: void put(int,int)>(i0, 1);

     label2:
        return;
    }

    private static native long init();

    private void insertAndBatchAlarmLocked(com.android.server.AlarmManagerService$Alarm)
    {
        com.android.server.AlarmManagerService r0;
        com.android.server.AlarmManagerService$Alarm r1;
        com.android.server.AlarmManagerService$Batch r2, $r8;
        int $i0, $i1, i4;
        long $l2, $l3;
        java.util.ArrayList $r3, $r5, $r7, $r9;
        java.lang.Object $r4;
        boolean $z0;

        r0 := @this: com.android.server.AlarmManagerService;

        r1 := @parameter0: com.android.server.AlarmManagerService$Alarm;

        $i0 = r1.<com.android.server.AlarmManagerService$Alarm: int flags>;

        $i1 = $i0 & 1;

        if $i1 == 0 goto label1;

        i4 = -1;

        goto label2;

     label1:
        $l3 = r1.<com.android.server.AlarmManagerService$Alarm: long whenElapsed>;

        $l2 = r1.<com.android.server.AlarmManagerService$Alarm: long maxWhenElapsed>;

        i4 = virtualinvoke r0.<com.android.server.AlarmManagerService: int attemptCoalesceLocked(long,long)>($l3, $l2);

     label2:
        if i4 >= 0 goto label3;

        $r9 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mAlarmBatches>;

        $r8 = new com.android.server.AlarmManagerService$Batch;

        specialinvoke $r8.<com.android.server.AlarmManagerService$Batch: void <init>(com.android.server.AlarmManagerService,com.android.server.AlarmManagerService$Alarm)>(r0, r1);

        staticinvoke <com.android.server.AlarmManagerService: boolean addBatchLocked(java.util.ArrayList,com.android.server.AlarmManagerService$Batch)>($r9, $r8);

        goto label4;

     label3:
        $r3 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mAlarmBatches>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        r2 = (com.android.server.AlarmManagerService$Batch) $r4;

        $z0 = virtualinvoke r2.<com.android.server.AlarmManagerService$Batch: boolean add(com.android.server.AlarmManagerService$Alarm)>(r1);

        if $z0 == 0 goto label4;

        $r5 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mAlarmBatches>;

        virtualinvoke $r5.<java.util.ArrayList: java.lang.Object remove(int)>(i4);

        $r7 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mAlarmBatches>;

        staticinvoke <com.android.server.AlarmManagerService: boolean addBatchLocked(java.util.ArrayList,com.android.server.AlarmManagerService$Batch)>($r7, r2);

     label4:
        return;
    }

    private boolean isBackgroundRestricted(com.android.server.AlarmManagerService$Alarm)
    {
        com.android.server.AlarmManagerService r0;
        java.lang.String r1;
        int $i0, i1, i2;
        android.app.AlarmManager$AlarmClockInfo $r2;
        android.app.PendingIntent $r3, $r4, $r5;
        boolean $z1, $z2, $z3, z4, z5, z6;
        com.android.server.AlarmManagerService$Alarm r6;
        com.android.server.AppStateTracker r7;

        r0 := @this: com.android.server.AlarmManagerService;

        r6 := @parameter0: com.android.server.AlarmManagerService$Alarm;

        i1 = r6.<com.android.server.AlarmManagerService$Alarm: int flags>;

        $i0 = i1 & 4;

        if $i0 == 0 goto label1;

        z4 = 1;

        goto label2;

     label1:
        z4 = 0;

     label2:
        $r2 = r6.<com.android.server.AlarmManagerService$Alarm: android.app.AlarmManager$AlarmClockInfo alarmClock>;

        if $r2 == null goto label3;

        return 0;

     label3:
        z5 = z4;

        $r3 = r6.<com.android.server.AlarmManagerService$Alarm: android.app.PendingIntent operation>;

        if $r3 == null goto label5;

        $r4 = r6.<com.android.server.AlarmManagerService$Alarm: android.app.PendingIntent operation>;

        $z2 = virtualinvoke $r4.<android.app.PendingIntent: boolean isActivity()>();

        if $z2 == 0 goto label4;

        return 0;

     label4:
        z5 = z4;

        $r5 = r6.<com.android.server.AlarmManagerService$Alarm: android.app.PendingIntent operation>;

        $z3 = virtualinvoke $r5.<android.app.PendingIntent: boolean isForegroundService()>();

        if $z3 == 0 goto label5;

        z5 = 1;

     label5:
        r1 = r6.<com.android.server.AlarmManagerService$Alarm: java.lang.String sourcePackage>;

        i2 = r6.<com.android.server.AlarmManagerService$Alarm: int creatorUid>;

        r7 = r0.<com.android.server.AlarmManagerService: com.android.server.AppStateTracker mAppStateTracker>;

        if r7 == null goto label6;

        $z1 = virtualinvoke r7.<com.android.server.AppStateTracker: boolean areAlarmsRestricted(int,java.lang.String,boolean)>(i2, r1, z5);

        if $z1 == 0 goto label6;

        z6 = 1;

        goto label7;

     label6:
        z6 = 0;

     label7:
        return z6;
    }

    private boolean isExemptFromAppStandby(com.android.server.AlarmManagerService$Alarm)
    {
        com.android.server.AlarmManagerService r0;
        com.android.server.AlarmManagerService$Alarm r1;
        android.app.AlarmManager$AlarmClockInfo $r2;
        int $i0, $i1, $i2;
        boolean $z0, z1;

        r0 := @this: com.android.server.AlarmManagerService;

        r1 := @parameter0: com.android.server.AlarmManagerService$Alarm;

        $r2 = r1.<com.android.server.AlarmManagerService$Alarm: android.app.AlarmManager$AlarmClockInfo alarmClock>;

        if $r2 != null goto label2;

        $i0 = r1.<com.android.server.AlarmManagerService$Alarm: int creatorUid>;

        $z0 = staticinvoke <android.os.UserHandle: boolean isCore(int)>($i0);

        if $z0 != 0 goto label2;

        $i1 = r1.<com.android.server.AlarmManagerService$Alarm: int flags>;

        $i2 = $i1 & 8;

        if $i2 == 0 goto label1;

        goto label2;

     label1:
        z1 = 0;

        goto label3;

     label2:
        z1 = 1;

     label3:
        return z1;
    }

    private boolean isIdlingImpl()
    {
        com.android.server.AlarmManagerService r0;
        java.lang.Object r1;
        com.android.server.AlarmManagerService$Alarm $r3;
        java.lang.Throwable $r4;
        boolean z0;

        r0 := @this: com.android.server.AlarmManagerService;

        r1 = r0.<com.android.server.AlarmManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Alarm mPendingIdleUntil>;

        if $r3 == null goto label3;

     label2:
        z0 = 1;

        goto label4;

     label3:
        z0 = 0;

     label4:
        exitmonitor r1;

     label5:
        return z0;

     label6:
        $r4 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    private static final java.lang.String labelForType(int)
    {
        int i0;

        i0 := @parameter0: int;

        if i0 == 0 goto label4;

        if i0 == 1 goto label3;

        if i0 == 2 goto label2;

        if i0 == 3 goto label1;

        return "--unknown--";

     label1:
        return "ELAPSED";

     label2:
        return "ELAPSED_WAKEUP";

     label3:
        return "RTC";

     label4:
        return "RTC_WAKEUP";
    }

    public static boolean lambda$nSJw2tKfoL3YIrKDtszoL44jcSM(com.android.server.AlarmManagerService, com.android.server.AlarmManagerService$Alarm)
    {
        com.android.server.AlarmManagerService r0;
        com.android.server.AlarmManagerService$Alarm r1;
        boolean $z0;

        r0 := @parameter0: com.android.server.AlarmManagerService;

        r1 := @parameter1: com.android.server.AlarmManagerService$Alarm;

        $z0 = specialinvoke r0.<com.android.server.AlarmManagerService: boolean isBackgroundRestricted(com.android.server.AlarmManagerService$Alarm)>(r1);

        return $z0;
    }

    static boolean lambda$removeForStoppedLocked$3(int, com.android.server.AlarmManagerService$Alarm)
    {
        int i0, $i1;
        boolean z0;
        android.app.IActivityManager $r0;
        java.lang.String $r1;
        android.os.RemoteException $r2;
        com.android.server.AlarmManagerService$Alarm r3;

        i0 := @parameter0: int;

        r3 := @parameter1: com.android.server.AlarmManagerService$Alarm;

     label1:
        $i1 = r3.<com.android.server.AlarmManagerService$Alarm: int uid>;

        if $i1 != i0 goto label4;

        $r0 = staticinvoke <android.app.ActivityManager: android.app.IActivityManager getService()>();

        $r1 = r3.<com.android.server.AlarmManagerService$Alarm: java.lang.String packageName>;

        z0 = interfaceinvoke $r0.<android.app.IActivityManager: boolean isAppStartModeDisabled(int,java.lang.String)>(i0, $r1);

     label2:
        if z0 == 0 goto label4;

        return 1;

     label3:
        $r2 := @caughtexception;

     label4:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    static boolean lambda$removeLocked$0(android.app.PendingIntent, android.app.IAlarmListener, com.android.server.AlarmManagerService$Alarm)
    {
        android.app.PendingIntent r0;
        android.app.IAlarmListener r1;
        com.android.server.AlarmManagerService$Alarm r2;
        boolean $z0;

        r0 := @parameter0: android.app.PendingIntent;

        r1 := @parameter1: android.app.IAlarmListener;

        r2 := @parameter2: com.android.server.AlarmManagerService$Alarm;

        $z0 = virtualinvoke r2.<com.android.server.AlarmManagerService$Alarm: boolean matches(android.app.PendingIntent,android.app.IAlarmListener)>(r0, r1);

        return $z0;
    }

    static boolean lambda$removeLocked$1(int, com.android.server.AlarmManagerService$Alarm)
    {
        int i0, $i1;
        com.android.server.AlarmManagerService$Alarm r0;
        boolean z0;

        i0 := @parameter0: int;

        r0 := @parameter1: com.android.server.AlarmManagerService$Alarm;

        $i1 = r0.<com.android.server.AlarmManagerService$Alarm: int uid>;

        if $i1 != i0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    static boolean lambda$removeUserLocked$4(int, com.android.server.AlarmManagerService$Alarm)
    {
        int i0, $i1, $i2;
        com.android.server.AlarmManagerService$Alarm r0;
        boolean z0;

        i0 := @parameter0: int;

        r0 := @parameter1: com.android.server.AlarmManagerService$Alarm;

        $i1 = r0.<com.android.server.AlarmManagerService$Alarm: int creatorUid>;

        $i2 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i1);

        if $i2 != i0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private void logAllAlarmsForUidLocked(int)
    {
        com.android.server.AlarmManagerService r0;
        int i0, $i1;
        java.io.StringWriter $r4;
        java.io.PrintWriter $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r8, $r11, $r13;
        com.android.server.AlarmManagerService$Constants $r12;

        r0 := @this: com.android.server.AlarmManagerService;

        i0 := @parameter0: int;

        $r4 = new java.io.StringWriter;

        specialinvoke $r4.<java.io.StringWriter: void <init>()>();

        $r5 = new java.io.PrintWriter;

        specialinvoke $r5.<java.io.PrintWriter: void <init>(java.io.Writer)>($r4);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("List of all pending alarms for ");

        $r8 = staticinvoke <android.os.UserHandle: java.lang.String formatUid(int)>(i0);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r11 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.PrintWriter: void println(java.lang.String)>($r11);

        $r12 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Constants mConstants>;

        $i1 = $r12.<com.android.server.AlarmManagerService$Constants: int MAX_ALARMS_PER_UID>;

        specialinvoke r0.<com.android.server.AlarmManagerService: void dumpUpcomingNAlarmsForUid(java.io.PrintWriter,int,int)>($r5, i0, $i1);

        virtualinvoke $r5.<java.io.PrintWriter: void flush()>();

        $r13 = virtualinvoke $r4.<java.io.StringWriter: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("AlarmManager", $r13);

        return;
    }

    private void logBatchesLocked(java.text.SimpleDateFormat)
    {
        com.android.server.AlarmManagerService r0;
        java.text.SimpleDateFormat r1;
        long l0, l1;
        int i2, i4;
        com.android.server.AlarmManagerService$Batch r4;
        java.io.ByteArrayOutputStream $r5;
        java.io.PrintWriter $r6;
        com.android.server.AlarmManagerService$Injector $r7, $r8;
        java.util.ArrayList $r9, $r10, $r14;
        java.lang.Object $r11;
        java.lang.String $r15;

        r0 := @this: com.android.server.AlarmManagerService;

        r1 := @parameter0: java.text.SimpleDateFormat;

        $r5 = new java.io.ByteArrayOutputStream;

        specialinvoke $r5.<java.io.ByteArrayOutputStream: void <init>(int)>(2048);

        $r6 = new java.io.PrintWriter;

        specialinvoke $r6.<java.io.PrintWriter: void <init>(java.io.OutputStream)>($r5);

        $r7 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Injector mInjector>;

        l0 = virtualinvoke $r7.<com.android.server.AlarmManagerService$Injector: long getCurrentTimeMillis()>();

        $r8 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Injector mInjector>;

        l1 = virtualinvoke $r8.<com.android.server.AlarmManagerService$Injector: long getElapsedRealtime()>();

        $r9 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mAlarmBatches>;

        i2 = virtualinvoke $r9.<java.util.ArrayList: int size()>();

        i4 = 0;

     label1:
        if i4 >= i2 goto label2;

        $r10 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mAlarmBatches>;

        $r11 = virtualinvoke $r10.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        r4 = (com.android.server.AlarmManagerService$Batch) $r11;

        virtualinvoke $r6.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("Batch ");

        virtualinvoke $r6.<java.io.PrintWriter: void print(int)>(i4);

        virtualinvoke $r6.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(": ");

        virtualinvoke $r6.<java.io.PrintWriter: void println(java.lang.Object)>(r4);

        $r14 = r4.<com.android.server.AlarmManagerService$Batch: java.util.ArrayList alarms>;

        staticinvoke <com.android.server.AlarmManagerService: void dumpAlarmList(java.io.PrintWriter,java.util.ArrayList,java.lang.String,long,long,java.text.SimpleDateFormat)>($r6, $r14, "  ", l1, l0, r1);

        virtualinvoke $r6.<java.io.PrintWriter: void flush()>();

        $r15 = virtualinvoke $r5.<java.io.ByteArrayOutputStream: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("AlarmManager", $r15);

        virtualinvoke $r5.<java.io.ByteArrayOutputStream: void reset()>();

        i4 = i4 + 1;

        goto label1;

     label2:
        return;
    }

    static long maxTriggerTime(long, long, long)
    {
        long l0, $l3, $l4, $l5, l6, l7, l8, l9;
        byte $b1, $b2;
        double $d0, $d1;

        l6 := @parameter0: long;

        l0 := @parameter1: long;

        l7 := @parameter2: long;

        $b1 = l7 cmp 0L;

        if $b1 != 0 goto label1;

        l8 = l0 - l6;

        goto label2;

     label1:
        l8 = l7;

     label2:
        l9 = l8;

        $b2 = l8 cmp 10000L;

        if $b2 >= 0 goto label3;

        l9 = 0L;

     label3:
        $d0 = (double) l9;

        $d1 = $d0 * 0.75;

        $l3 = (long) $d1;

        $l4 = $l3 + l0;

        $l5 = staticinvoke <com.android.server.AlarmManagerService: long clampPositive(long)>($l4);

        return $l5;
    }

    private void notifyBroadcastAlarmCompleteLocked(int)
    {
        com.android.server.AlarmManagerService r0;
        int i0, i1, i2;
        java.util.ArrayList $r1, $r2;
        java.lang.Object $r3;
        com.android.server.AlarmManagerInternal$InFlightListener $r4;

        r0 := @this: com.android.server.AlarmManagerService;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mInFlightListeners>;

        i1 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        $r2 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mInFlightListeners>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r4 = (com.android.server.AlarmManagerInternal$InFlightListener) $r3;

        interfaceinvoke $r4.<com.android.server.AlarmManagerInternal$InFlightListener: void broadcastAlarmComplete(int)>(i0);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    private void notifyBroadcastAlarmPendingLocked(int)
    {
        com.android.server.AlarmManagerService r0;
        int i0, i1, i2;
        java.util.ArrayList $r1, $r2;
        java.lang.Object $r3;
        com.android.server.AlarmManagerInternal$InFlightListener $r4;

        r0 := @this: com.android.server.AlarmManagerService;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mInFlightListeners>;

        i1 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        $r2 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mInFlightListeners>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r4 = (com.android.server.AlarmManagerInternal$InFlightListener) $r3;

        interfaceinvoke $r4.<com.android.server.AlarmManagerInternal$InFlightListener: void broadcastAlarmPending(int)>(i0);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    private void sendNextAlarmClockChanged()
    {
        com.android.server.AlarmManagerService r0;
        android.util.SparseBooleanArray $r1, $r2, $r11;
        java.lang.Object $r3, $r13, r17;
        android.content.Context $r4, $r6, $r8;
        android.content.ContentResolver $r5;
        java.lang.String $r7;
        android.os.UserHandle $r9;
        android.content.Intent $r10;
        android.util.SparseArray $r12, r16;
        android.app.AlarmManager$AlarmClockInfo $r14, r18;
        java.lang.Throwable $r15;
        int i0, i1, i2, i3, i4, i5;

        r0 := @this: com.android.server.AlarmManagerService;

        r16 = r0.<com.android.server.AlarmManagerService: android.util.SparseArray mHandlerSparseAlarmClockArray>;

        virtualinvoke r16.<android.util.SparseArray: void clear()>();

        r17 = r0.<com.android.server.AlarmManagerService: java.lang.Object mLock>;

        entermonitor r17;

     label01:
        $r1 = r0.<com.android.server.AlarmManagerService: android.util.SparseBooleanArray mPendingSendNextAlarmClockChangedForUser>;

        i0 = virtualinvoke $r1.<android.util.SparseBooleanArray: int size()>();

     label02:
        i1 = 0;

     label03:
        if i1 >= i0 goto label06;

     label04:
        $r11 = r0.<com.android.server.AlarmManagerService: android.util.SparseBooleanArray mPendingSendNextAlarmClockChangedForUser>;

        i2 = virtualinvoke $r11.<android.util.SparseBooleanArray: int keyAt(int)>(i1);

        $r12 = r0.<com.android.server.AlarmManagerService: android.util.SparseArray mNextAlarmClockForUser>;

        $r13 = virtualinvoke $r12.<android.util.SparseArray: java.lang.Object get(int)>(i2);

        $r14 = (android.app.AlarmManager$AlarmClockInfo) $r13;

        virtualinvoke r16.<android.util.SparseArray: void append(int,java.lang.Object)>(i2, $r14);

     label05:
        i1 = i1 + 1;

        goto label03;

     label06:
        $r2 = r0.<com.android.server.AlarmManagerService: android.util.SparseBooleanArray mPendingSendNextAlarmClockChangedForUser>;

        virtualinvoke $r2.<android.util.SparseBooleanArray: void clear()>();

        exitmonitor r17;

     label07:
        i3 = virtualinvoke r16.<android.util.SparseArray: int size()>();

        i4 = 0;

     label08:
        if i4 >= i3 goto label09;

        i5 = virtualinvoke r16.<android.util.SparseArray: int keyAt(int)>(i4);

        $r3 = virtualinvoke r16.<android.util.SparseArray: java.lang.Object valueAt(int)>(i4);

        r18 = (android.app.AlarmManager$AlarmClockInfo) $r3;

        $r4 = virtualinvoke r0.<com.android.server.AlarmManagerService: android.content.Context getContext()>();

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r6 = virtualinvoke r0.<com.android.server.AlarmManagerService: android.content.Context getContext()>();

        $r7 = staticinvoke <com.android.server.AlarmManagerService: java.lang.String formatNextAlarm(android.content.Context,android.app.AlarmManager$AlarmClockInfo,int)>($r6, r18, i5);

        staticinvoke <android.provider.Settings$System: boolean putStringForUser(android.content.ContentResolver,java.lang.String,java.lang.String,int)>($r5, "next_alarm_formatted", $r7, i5);

        $r8 = virtualinvoke r0.<com.android.server.AlarmManagerService: android.content.Context getContext()>();

        $r10 = <com.android.server.AlarmManagerService: android.content.Intent NEXT_ALARM_CLOCK_CHANGED_INTENT>;

        $r9 = new android.os.UserHandle;

        specialinvoke $r9.<android.os.UserHandle: void <init>(int)>(i5);

        virtualinvoke $r8.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)>($r10, $r9);

        i4 = i4 + 1;

        goto label08;

     label09:
        return;

     label10:
        $r15 := @caughtexception;

     label11:
        exitmonitor r17;

     label12:
        throw $r15;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    private static native int set(long, int, long, long);

    private void setImplLocked(int, long, long, long, long, long, android.app.PendingIntent, android.app.IAlarmListener, java.lang.String, int, boolean, android.os.WorkSource, android.app.AlarmManager$AlarmClockInfo, int, java.lang.String)
    {
        com.android.server.AlarmManagerService r0;
        int i0, i6, i7, $i9;
        long l1, l2, l3, l4, l5;
        android.app.PendingIntent r1;
        android.app.IAlarmListener r2;
        boolean z0, $z1;
        android.app.AlarmManager$AlarmClockInfo r3;
        java.lang.String r4, $r11, r14;
        com.android.server.AlarmManagerService$Alarm $r5;
        android.os.RemoteException $r12, $r13;
        android.os.WorkSource r15;
        android.app.IActivityManager r17;
        java.lang.StringBuilder r18;

        r0 := @this: com.android.server.AlarmManagerService;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        l3 := @parameter3: long;

        l4 := @parameter4: long;

        l5 := @parameter5: long;

        r1 := @parameter6: android.app.PendingIntent;

        r2 := @parameter7: android.app.IAlarmListener;

        r14 := @parameter8: java.lang.String;

        i6 := @parameter9: int;

        z0 := @parameter10: boolean;

        r15 := @parameter11: android.os.WorkSource;

        r3 := @parameter12: android.app.AlarmManager$AlarmClockInfo;

        i7 := @parameter13: int;

        r4 := @parameter14: java.lang.String;

        $r5 = new com.android.server.AlarmManagerService$Alarm;

        specialinvoke $r5.<com.android.server.AlarmManagerService$Alarm: void <init>(int,long,long,long,long,long,android.app.PendingIntent,android.app.IAlarmListener,java.lang.String,android.os.WorkSource,int,android.app.AlarmManager$AlarmClockInfo,int,java.lang.String)>(i0, l1, l2, l3, l4, l5, r1, r2, r14, r15, i6, r3, i7, r4);

     label1:
        r17 = staticinvoke <android.app.ActivityManager: android.app.IActivityManager getService()>();

     label2:
        $z1 = interfaceinvoke r17.<android.app.IActivityManager: boolean isAppStartModeDisabled(int,java.lang.String)>(i7, r4);

        if $z1 == 0 goto label4;

        r18 = new java.lang.StringBuilder;

        specialinvoke r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not setting alarm from ");

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i7);

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -- package not allowed to start");

        $r11 = virtualinvoke r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AlarmManager", $r11);

     label3:
        return;

     label4:
        goto label7;

     label5:
        $r13 := @caughtexception;

        goto label7;

     label6:
        $r12 := @caughtexception;

     label7:
        virtualinvoke r0.<com.android.server.AlarmManagerService: void removeLocked(android.app.PendingIntent,android.app.IAlarmListener)>(r1, r2);

        $i9 = $r5.<com.android.server.AlarmManagerService$Alarm: int uid>;

        specialinvoke r0.<com.android.server.AlarmManagerService: void incrementAlarmCount(int)>($i9);

        specialinvoke r0.<com.android.server.AlarmManagerService: void setImplLocked(com.android.server.AlarmManagerService$Alarm,boolean,boolean)>($r5, 0, z0);

        return;

        catch android.os.RemoteException from label1 to label2 with label6;
        catch android.os.RemoteException from label2 to label3 with label5;
    }

    private void setImplLocked(com.android.server.AlarmManagerService$Alarm, boolean, boolean)
    {
        com.android.server.AlarmManagerService r0;
        com.android.server.AlarmManagerService$Alarm r1, $r2, $r3, $r6, $r12, $r16, $r17, r20, r22;
        boolean z0, z1, z5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i10, $i11, i22, i23;
        long $l6, $l7, $l12, $l13, $l14, $l15, $l16, l18, l19, $l20, $l21, l24;
        byte $b8, $b17;
        java.lang.StringBuilder $r4;
        java.lang.String $r10;
        java.util.ArrayList $r11;
        java.util.Random $r13, $r14, $r15;
        com.android.server.AlarmManagerService$Injector $r18;
        android.app.AlarmManager$AlarmClockInfo $r19;

        r0 := @this: com.android.server.AlarmManagerService;

        r1 := @parameter0: com.android.server.AlarmManagerService$Alarm;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        $i0 = r1.<com.android.server.AlarmManagerService$Alarm: int flags>;

        $i1 = $i0 & 16;

        if $i1 == 0 goto label03;

        $r12 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Alarm mNextWakeFromIdle>;

        if $r12 == null goto label01;

        $l16 = r1.<com.android.server.AlarmManagerService$Alarm: long whenElapsed>;

        $r16 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Alarm mNextWakeFromIdle>;

        $l15 = $r16.<com.android.server.AlarmManagerService$Alarm: long whenElapsed>;

        $b17 = $l16 cmp $l15;

        if $b17 <= 0 goto label01;

        $r17 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Alarm mNextWakeFromIdle>;

        l18 = $r17.<com.android.server.AlarmManagerService$Alarm: long whenElapsed>;

        r1.<com.android.server.AlarmManagerService$Alarm: long maxWhenElapsed> = l18;

        r1.<com.android.server.AlarmManagerService$Alarm: long whenElapsed> = l18;

        r1.<com.android.server.AlarmManagerService$Alarm: long when> = l18;

     label01:
        $r18 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Injector mInjector>;

        l19 = virtualinvoke $r18.<com.android.server.AlarmManagerService$Injector: long getElapsedRealtime()>();

        $l20 = r1.<com.android.server.AlarmManagerService$Alarm: long whenElapsed>;

        $l21 = $l20 - l19;

        i22 = staticinvoke <com.android.server.AlarmManagerService: int fuzzForDuration(long)>($l21);

        if i22 <= 0 goto label04;

        $r13 = r0.<com.android.server.AlarmManagerService: java.util.Random mRandom>;

        if $r13 != null goto label02;

        $r15 = new java.util.Random;

        specialinvoke $r15.<java.util.Random: void <init>()>();

        r0.<com.android.server.AlarmManagerService: java.util.Random mRandom> = $r15;

     label02:
        $r14 = r0.<com.android.server.AlarmManagerService: java.util.Random mRandom>;

        i23 = virtualinvoke $r14.<java.util.Random: int nextInt(int)>(i22);

        $l13 = r1.<com.android.server.AlarmManagerService$Alarm: long whenElapsed>;

        $l12 = (long) i23;

        $l14 = $l13 - $l12;

        r1.<com.android.server.AlarmManagerService$Alarm: long whenElapsed> = $l14;

        l24 = r1.<com.android.server.AlarmManagerService$Alarm: long whenElapsed>;

        r1.<com.android.server.AlarmManagerService$Alarm: long maxWhenElapsed> = l24;

        r1.<com.android.server.AlarmManagerService$Alarm: long when> = l24;

        goto label04;

     label03:
        $r2 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Alarm mPendingIdleUntil>;

        if $r2 == null goto label04;

        $i10 = r1.<com.android.server.AlarmManagerService$Alarm: int flags>;

        $i11 = $i10 & 14;

        if $i11 != 0 goto label04;

        $r11 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mPendingWhileIdleAlarms>;

        virtualinvoke $r11.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        return;

     label04:
        specialinvoke r0.<com.android.server.AlarmManagerService: boolean adjustDeliveryTimeBasedOnBucketLocked(com.android.server.AlarmManagerService$Alarm)>(r1);

        specialinvoke r0.<com.android.server.AlarmManagerService: void insertAndBatchAlarmLocked(com.android.server.AlarmManagerService$Alarm)>(r1);

        $r19 = r1.<com.android.server.AlarmManagerService$Alarm: android.app.AlarmManager$AlarmClockInfo alarmClock>;

        if $r19 == null goto label05;

        r0.<com.android.server.AlarmManagerService: boolean mNextAlarmClockMayChange> = 1;

     label05:
        $i2 = r1.<com.android.server.AlarmManagerService$Alarm: int flags>;

        $i3 = $i2 & 16;

        if $i3 == 0 goto label07;

        r20 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Alarm mPendingIdleUntil>;

        if r20 == r1 goto label06;

        if r20 == null goto label06;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setImplLocked: idle until changed from ");

        $r6 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Alarm mPendingIdleUntil>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r10 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtfStack(java.lang.String,java.lang.String)>("AlarmManager", $r10);

     label06:
        r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Alarm mPendingIdleUntil> = r1;

        z5 = 1;

        goto label09;

     label07:
        z5 = 0;

        $i4 = r1.<com.android.server.AlarmManagerService$Alarm: int flags>;

        $i5 = $i4 & 2;

        if $i5 == 0 goto label09;

        r22 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Alarm mNextWakeFromIdle>;

        if r22 == null goto label08;

        z5 = 0;

        $l7 = r22.<com.android.server.AlarmManagerService$Alarm: long whenElapsed>;

        $l6 = r1.<com.android.server.AlarmManagerService$Alarm: long whenElapsed>;

        $b8 = $l7 cmp $l6;

        if $b8 <= 0 goto label09;

     label08:
        r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Alarm mNextWakeFromIdle> = r1;

        z5 = 0;

        $r3 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Alarm mPendingIdleUntil>;

        if $r3 == null goto label09;

        z5 = 1;

     label09:
        if z0 != 0 goto label11;

        if z5 == 0 goto label10;

        virtualinvoke r0.<com.android.server.AlarmManagerService: void rebatchAllAlarmsLocked(boolean)>(0);

     label10:
        virtualinvoke r0.<com.android.server.AlarmManagerService: void rescheduleKernelAlarmsLocked()>();

        specialinvoke r0.<com.android.server.AlarmManagerService: void updateNextAlarmClockLocked()>();

     label11:
        return;
    }

    private static native int setKernelTime(long, long);

    private static native int setKernelTimezone(long, int);

    private void setLocked(int, long)
    {
        com.android.server.AlarmManagerService r0;
        int i0, $i2;
        long l1;
        android.os.Message r1;
        com.android.server.AlarmManagerService$Injector $r2, $r5;
        boolean $z0;
        com.android.server.AlarmManagerService$AlarmHandler $r3, $r4;

        r0 := @this: com.android.server.AlarmManagerService;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        $r2 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Injector mInjector>;

        $z0 = virtualinvoke $r2.<com.android.server.AlarmManagerService$Injector: boolean isAlarmDriverPresent()>();

        if $z0 == 0 goto label1;

        $r5 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Injector mInjector>;

        virtualinvoke $r5.<com.android.server.AlarmManagerService$Injector: void setAlarm(int,long)>(i0, l1);

        goto label2;

     label1:
        r1 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        r1.<android.os.Message: int what> = 1;

        $r3 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$AlarmHandler mHandler>;

        $i2 = r1.<android.os.Message: int what>;

        virtualinvoke $r3.<com.android.server.AlarmManagerService$AlarmHandler: void removeMessages(int)>($i2);

        $r4 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$AlarmHandler mHandler>;

        virtualinvoke $r4.<com.android.server.AlarmManagerService$AlarmHandler: boolean sendMessageAtTime(android.os.Message,long)>(r1, l1);

     label2:
        return;
    }

    private void updateNextAlarmClockLocked()
    {
        com.android.server.AlarmManagerService r0;
        android.util.SparseArray r1, $r5, $r6, $r9, $r17;
        int i0, i1, $i2, $i3, i7, i8, i9, i10, i11, i12, i13, i14;
        com.android.server.AlarmManagerService$Alarm r2;
        android.app.AlarmManager$AlarmClockInfo r3, $r11, $r16, $r20, $r22, $r23, r25;
        boolean $z0, $z1, $z2;
        java.util.ArrayList $r4, $r12, r24;
        java.lang.Object $r7, $r8, $r10, $r13, $r15, $r18, $r19, $r21;
        com.android.server.AlarmManagerService$Batch $r14;
        long $l4, $l5;
        byte $b6;

        r0 := @this: com.android.server.AlarmManagerService;

        $z0 = r0.<com.android.server.AlarmManagerService: boolean mNextAlarmClockMayChange>;

        if $z0 != 0 goto label01;

        return;

     label01:
        r0.<com.android.server.AlarmManagerService: boolean mNextAlarmClockMayChange> = 0;

        r1 = r0.<com.android.server.AlarmManagerService: android.util.SparseArray mTmpSparseAlarmClockArray>;

        virtualinvoke r1.<android.util.SparseArray: void clear()>();

        $r4 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mAlarmBatches>;

        i7 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        i8 = 0;

     label02:
        if i8 >= i7 goto label07;

        $r12 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mAlarmBatches>;

        $r13 = virtualinvoke $r12.<java.util.ArrayList: java.lang.Object get(int)>(i8);

        $r14 = (com.android.server.AlarmManagerService$Batch) $r13;

        r24 = $r14.<com.android.server.AlarmManagerService$Batch: java.util.ArrayList alarms>;

        i0 = virtualinvoke r24.<java.util.ArrayList: int size()>();

        i9 = 0;

     label03:
        if i9 >= i0 goto label06;

        $r15 = virtualinvoke r24.<java.util.ArrayList: java.lang.Object get(int)>(i9);

        r2 = (com.android.server.AlarmManagerService$Alarm) $r15;

        $r16 = r2.<com.android.server.AlarmManagerService$Alarm: android.app.AlarmManager$AlarmClockInfo alarmClock>;

        if $r16 == null goto label05;

        $i3 = r2.<com.android.server.AlarmManagerService$Alarm: int uid>;

        i1 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i3);

        $r17 = r0.<com.android.server.AlarmManagerService: android.util.SparseArray mNextAlarmClockForUser>;

        $r18 = virtualinvoke $r17.<android.util.SparseArray: java.lang.Object get(int)>(i1);

        r3 = (android.app.AlarmManager$AlarmClockInfo) $r18;

        $r19 = virtualinvoke r1.<android.util.SparseArray: java.lang.Object get(int)>(i1);

        if $r19 != null goto label04;

        $r23 = r2.<com.android.server.AlarmManagerService$Alarm: android.app.AlarmManager$AlarmClockInfo alarmClock>;

        virtualinvoke r1.<android.util.SparseArray: void put(int,java.lang.Object)>(i1, $r23);

        goto label05;

     label04:
        $r20 = r2.<com.android.server.AlarmManagerService$Alarm: android.app.AlarmManager$AlarmClockInfo alarmClock>;

        $z2 = virtualinvoke $r20.<java.lang.Object: boolean equals(java.lang.Object)>(r3);

        if $z2 == 0 goto label05;

        $l4 = virtualinvoke r3.<android.app.AlarmManager$AlarmClockInfo: long getTriggerTime()>();

        $r21 = virtualinvoke r1.<android.util.SparseArray: java.lang.Object get(int)>(i1);

        $r22 = (android.app.AlarmManager$AlarmClockInfo) $r21;

        $l5 = virtualinvoke $r22.<android.app.AlarmManager$AlarmClockInfo: long getTriggerTime()>();

        $b6 = $l4 cmp $l5;

        if $b6 > 0 goto label05;

        virtualinvoke r1.<android.util.SparseArray: void put(int,java.lang.Object)>(i1, r3);

     label05:
        i9 = i9 + 1;

        goto label03;

     label06:
        i8 = i8 + 1;

        goto label02;

     label07:
        i10 = virtualinvoke r1.<android.util.SparseArray: int size()>();

        i11 = 0;

     label08:
        if i11 >= i10 goto label10;

        $r8 = virtualinvoke r1.<android.util.SparseArray: java.lang.Object valueAt(int)>(i11);

        r25 = (android.app.AlarmManager$AlarmClockInfo) $r8;

        i12 = virtualinvoke r1.<android.util.SparseArray: int keyAt(int)>(i11);

        $r9 = r0.<com.android.server.AlarmManagerService: android.util.SparseArray mNextAlarmClockForUser>;

        $r10 = virtualinvoke $r9.<android.util.SparseArray: java.lang.Object get(int)>(i12);

        $r11 = (android.app.AlarmManager$AlarmClockInfo) $r10;

        $z1 = virtualinvoke r25.<java.lang.Object: boolean equals(java.lang.Object)>($r11);

        if $z1 != 0 goto label09;

        specialinvoke r0.<com.android.server.AlarmManagerService: void updateNextAlarmInfoForUserLocked(int,android.app.AlarmManager$AlarmClockInfo)>(i12, r25);

     label09:
        i11 = i11 + 1;

        goto label08;

     label10:
        $r5 = r0.<com.android.server.AlarmManagerService: android.util.SparseArray mNextAlarmClockForUser>;

        $i2 = virtualinvoke $r5.<android.util.SparseArray: int size()>();

        i13 = $i2 - 1;

     label11:
        if i13 < 0 goto label13;

        $r6 = r0.<com.android.server.AlarmManagerService: android.util.SparseArray mNextAlarmClockForUser>;

        i14 = virtualinvoke $r6.<android.util.SparseArray: int keyAt(int)>(i13);

        $r7 = virtualinvoke r1.<android.util.SparseArray: java.lang.Object get(int)>(i14);

        if $r7 != null goto label12;

        specialinvoke r0.<com.android.server.AlarmManagerService: void updateNextAlarmInfoForUserLocked(int,android.app.AlarmManager$AlarmClockInfo)>(i14, null);

     label12:
        i13 = i13 + -1;

        goto label11;

     label13:
        return;
    }

    private void updateNextAlarmInfoForUserLocked(int, android.app.AlarmManager$AlarmClockInfo)
    {
        com.android.server.AlarmManagerService r0;
        int i0;
        android.app.AlarmManager$AlarmClockInfo r1;
        android.util.SparseArray $r2, $r6;
        android.util.SparseBooleanArray $r3;
        com.android.server.AlarmManagerService$AlarmHandler $r4, $r5;

        r0 := @this: com.android.server.AlarmManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: android.app.AlarmManager$AlarmClockInfo;

        if r1 == null goto label1;

        $r6 = r0.<com.android.server.AlarmManagerService: android.util.SparseArray mNextAlarmClockForUser>;

        virtualinvoke $r6.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r1);

        goto label2;

     label1:
        $r2 = r0.<com.android.server.AlarmManagerService: android.util.SparseArray mNextAlarmClockForUser>;

        virtualinvoke $r2.<android.util.SparseArray: void remove(int)>(i0);

     label2:
        $r3 = r0.<com.android.server.AlarmManagerService: android.util.SparseBooleanArray mPendingSendNextAlarmClockChangedForUser>;

        virtualinvoke $r3.<android.util.SparseBooleanArray: void put(int,boolean)>(i0, 1);

        $r4 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$AlarmHandler mHandler>;

        virtualinvoke $r4.<com.android.server.AlarmManagerService$AlarmHandler: void removeMessages(int)>(2);

        $r5 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$AlarmHandler mHandler>;

        virtualinvoke $r5.<com.android.server.AlarmManagerService$AlarmHandler: boolean sendEmptyMessage(int)>(2);

        return;
    }

    private boolean validateConsistencyLocked()
    {
        com.android.server.AlarmManagerService r0;

        r0 := @this: com.android.server.AlarmManagerService;

        return 1;
    }

    private static native int waitForAlarm(long);

    int attemptCoalesceLocked(long, long)
    {
        com.android.server.AlarmManagerService r0;
        long l0, l1;
        int i2, $i3, $i4, i5;
        com.android.server.AlarmManagerService$Batch r1;
        java.util.ArrayList $r2, $r3;
        java.lang.Object $r4;
        boolean $z0;

        r0 := @this: com.android.server.AlarmManagerService;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $r2 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mAlarmBatches>;

        i2 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i5 = 0;

     label1:
        if i5 >= i2 goto label3;

        $r3 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mAlarmBatches>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        r1 = (com.android.server.AlarmManagerService$Batch) $r4;

        $i3 = r1.<com.android.server.AlarmManagerService$Batch: int flags>;

        $i4 = $i3 & 1;

        if $i4 != 0 goto label2;

        $z0 = virtualinvoke r1.<com.android.server.AlarmManagerService$Batch: boolean canHold(long,long)>(l0, l1);

        if $z0 == 0 goto label2;

        return i5;

     label2:
        i5 = i5 + 1;

        goto label1;

     label3:
        return -1;
    }

    void calculateDeliveryPriorities(java.util.ArrayList)
    {
        com.android.server.AlarmManagerService r0;
        java.util.ArrayList r1;
        int i0, $i1, $i2, $i3, $i4, i5;
        com.android.server.AlarmManagerService$Alarm r2;
        java.lang.String r3;
        java.lang.Object $r4, $r11;
        android.app.IAlarmListener $r5, $r6;
        boolean $z0;
        com.android.server.AlarmManagerService$PriorityClass $r7, r12, r13, r14;
        java.util.HashMap $r8, $r10;
        byte b6;

        r0 := @this: com.android.server.AlarmManagerService;

        r1 := @parameter0: java.util.ArrayList;

        i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        i5 = 0;

     label1:
        if i5 >= i0 goto label9;

        $r4 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        r2 = (com.android.server.AlarmManagerService$Alarm) $r4;

        $r6 = r2.<com.android.server.AlarmManagerService$Alarm: android.app.IAlarmListener listener>;

        $r5 = r0.<com.android.server.AlarmManagerService: android.app.IAlarmListener mTimeTickTrigger>;

        if $r6 != $r5 goto label2;

        b6 = 0;

        goto label4;

     label2:
        $z0 = r2.<com.android.server.AlarmManagerService$Alarm: boolean wakeup>;

        if $z0 == 0 goto label3;

        b6 = 1;

        goto label4;

     label3:
        b6 = 2;

     label4:
        r12 = r2.<com.android.server.AlarmManagerService$Alarm: com.android.server.AlarmManagerService$PriorityClass priorityClass>;

        r3 = r2.<com.android.server.AlarmManagerService$Alarm: java.lang.String sourcePackage>;

        r13 = r12;

        if r12 != null goto label5;

        $r10 = r0.<com.android.server.AlarmManagerService: java.util.HashMap mPriorities>;

        $r11 = virtualinvoke $r10.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r3);

        r13 = (com.android.server.AlarmManagerService$PriorityClass) $r11;

     label5:
        r14 = r13;

        if r13 != null goto label6;

        $r7 = new com.android.server.AlarmManagerService$PriorityClass;

        specialinvoke $r7.<com.android.server.AlarmManagerService$PriorityClass: void <init>(com.android.server.AlarmManagerService)>(r0);

        r14 = $r7;

        r2.<com.android.server.AlarmManagerService$Alarm: com.android.server.AlarmManagerService$PriorityClass priorityClass> = $r7;

        $r8 = r0.<com.android.server.AlarmManagerService: java.util.HashMap mPriorities>;

        virtualinvoke $r8.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, $r7);

     label6:
        r2.<com.android.server.AlarmManagerService$Alarm: com.android.server.AlarmManagerService$PriorityClass priorityClass> = r14;

        $i2 = r14.<com.android.server.AlarmManagerService$PriorityClass: int seq>;

        $i1 = r0.<com.android.server.AlarmManagerService: int mCurrentSeq>;

        if $i2 == $i1 goto label7;

        r14.<com.android.server.AlarmManagerService$PriorityClass: int priority> = b6;

        $i4 = r0.<com.android.server.AlarmManagerService: int mCurrentSeq>;

        r14.<com.android.server.AlarmManagerService$PriorityClass: int seq> = $i4;

        goto label8;

     label7:
        $i3 = r14.<com.android.server.AlarmManagerService$PriorityClass: int priority>;

        if b6 >= $i3 goto label8;

        r14.<com.android.server.AlarmManagerService$PriorityClass: int priority> = b6;

     label8:
        i5 = i5 + 1;

        goto label1;

     label9:
        return;
    }

    boolean checkAllowNonWakeupDelayLocked(long)
    {
        com.android.server.AlarmManagerService r0;
        long l0, $l1, $l4, $l5, $l6, $l8;
        boolean z0, z1;
        byte $b2, $b7, $b9;
        java.util.ArrayList $r1;
        int $i3;

        r0 := @this: com.android.server.AlarmManagerService;

        l0 := @parameter0: long;

        z0 = r0.<com.android.server.AlarmManagerService: boolean mInteractive>;

        z1 = 0;

        if z0 == 0 goto label1;

        return 0;

     label1:
        $l1 = r0.<com.android.server.AlarmManagerService: long mLastAlarmDeliveryTime>;

        $b2 = $l1 cmp 0L;

        if $b2 > 0 goto label2;

        return 0;

     label2:
        $r1 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mPendingNonWakeupAlarms>;

        $i3 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if $i3 <= 0 goto label3;

        $l8 = r0.<com.android.server.AlarmManagerService: long mNextNonWakeupDeliveryTime>;

        $b9 = $l8 cmp l0;

        if $b9 >= 0 goto label3;

        return 0;

     label3:
        $l4 = r0.<com.android.server.AlarmManagerService: long mLastAlarmDeliveryTime>;

        $l5 = l0 - $l4;

        $l6 = virtualinvoke r0.<com.android.server.AlarmManagerService: long currentNonWakeupFuzzLocked(long)>(l0);

        $b7 = $l5 cmp $l6;

        if $b7 > 0 goto label4;

        z1 = 1;

     label4:
        return z1;
    }

    long currentNonWakeupFuzzLocked(long)
    {
        com.android.server.AlarmManagerService r0;
        long $l0, l3, l4;
        byte $b1, $b2;

        r0 := @this: com.android.server.AlarmManagerService;

        l3 := @parameter0: long;

        $l0 = r0.<com.android.server.AlarmManagerService: long mNonInteractiveStartTime>;

        l4 = l3 - $l0;

        $b1 = l4 cmp 300000L;

        if $b1 >= 0 goto label1;

        return 120000L;

     label1:
        $b2 = l4 cmp 1800000L;

        if $b2 >= 0 goto label2;

        return 900000L;

     label2:
        return 3600000L;
    }

    void deliverAlarmsLocked(java.util.ArrayList, long)
    {
        com.android.server.AlarmManagerService r0;
        java.util.ArrayList r1;
        long l0;
        com.android.server.AlarmManagerService$Alarm r2;
        int $i1, $i2, $i3, $i4, $i5, i7;
        java.lang.Object $r3;
        boolean $z0, z1;
        java.lang.StringBuilder $r4, $r13;
        java.lang.String $r6, $r8, $r9, $r15, $r17;
        android.os.WorkSource $r10;
        android.app.PendingIntent $r11;
        com.android.server.AlarmManagerService$DeliveryTracker $r12;
        java.lang.RuntimeException $r18;

        r0 := @this: com.android.server.AlarmManagerService;

        r1 := @parameter0: java.util.ArrayList;

        l0 := @parameter1: long;

        r0.<com.android.server.AlarmManagerService: long mLastAlarmDeliveryTime> = l0;

        i7 = 0;

     label1:
        $i1 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if i7 >= $i1 goto label9;

        $r3 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i7);

        r2 = (com.android.server.AlarmManagerService$Alarm) $r3;

        $i2 = r2.<com.android.server.AlarmManagerService$Alarm: int flags>;

        $i3 = $i2 & 4;

        if $i3 == 0 goto label2;

        z1 = 1;

        goto label3;

     label2:
        z1 = 0;

     label3:
        $z0 = r2.<com.android.server.AlarmManagerService$Alarm: boolean wakeup>;

        if $z0 == 0 goto label4;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Dispatch wakeup alarm to ");

        $r15 = r2.<com.android.server.AlarmManagerService$Alarm: java.lang.String packageName>;

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.os.Trace: void traceBegin(long,java.lang.String)>(131072L, $r17);

        goto label5;

     label4:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Dispatch non-wakeup alarm to ");

        $r6 = r2.<com.android.server.AlarmManagerService$Alarm: java.lang.String packageName>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.os.Trace: void traceBegin(long,java.lang.String)>(131072L, $r8);

     label5:
        $r11 = r2.<com.android.server.AlarmManagerService$Alarm: android.app.PendingIntent operation>;

        $r10 = r2.<com.android.server.AlarmManagerService$Alarm: android.os.WorkSource workSource>;

        $i4 = r2.<com.android.server.AlarmManagerService$Alarm: int uid>;

        $r9 = r2.<com.android.server.AlarmManagerService$Alarm: java.lang.String statsTag>;

        staticinvoke <android.app.ActivityManager: void noteAlarmStart(android.app.PendingIntent,android.os.WorkSource,int,java.lang.String)>($r11, $r10, $i4, $r9);

        $r12 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$DeliveryTracker mDeliveryTracker>;

        virtualinvoke $r12.<com.android.server.AlarmManagerService$DeliveryTracker: void deliverLocked(com.android.server.AlarmManagerService$Alarm,long,boolean)>(r2, l0, z1);

     label6:
        goto label8;

     label7:
        $r18 := @caughtexception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("AlarmManager", "Failure sending alarm.", $r18);

     label8:
        staticinvoke <android.os.Trace: void traceEnd(long)>(131072L);

        $i5 = r2.<com.android.server.AlarmManagerService$Alarm: int uid>;

        specialinvoke r0.<com.android.server.AlarmManagerService: void decrementAlarmCount(int,int)>($i5, 1);

        i7 = i7 + 1;

        goto label1;

     label9:
        return;

        catch java.lang.RuntimeException from label5 to label6 with label7;
    }

    void dumpImpl(java.io.PrintWriter)
    {
        com.android.server.AlarmManagerService r0;
        java.lang.Object r1, $r16, $r33, $r34, $r36, $r39, $r46, $r47, $r50, $r58, $r69, $r72, $r74, $r77;
        long l0, l1, $l4, $l5, $l6, $l7, $l8, $l9, $l10, $l13, $l14, $l15, $l16, $l17, $l18, $l19, $l20, $l21, $l22, $l23, $l24, $l25, $l26, $l27, $l28, $l29, $l30, $l31, $l32, $l38, $l39, $l40, $l51, $l55, $l58, $l60, $l74, $l85, $l86, $l87, $l88, $l89, $l90, $l91, $l92, $l93, l94, l95, l98, l99, l104, l114, l115;
        boolean z0, $z1, $z2, $z3, $z5, $z6, $z9, $z10, z11;
        int i3, $i12, $i33, $i34, $i35, $i36, $i37, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i52, $i53, $i54, $i56, $i57, $i59, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i83, $i84, i96, i97, i100, $i101, i102, i103, i107, $i108, i109, $i110, i111, i112, i113, i116, $i117, i118, i119, $i120, i121, i122, i123, i124, i125, i126, i127, $i128, i129, i130, $i131, i132;
        com.android.server.AlarmManagerService$Constants $r2;
        com.android.server.AppStateTracker $r3, $r85;
        java.lang.String $r6, $r9, $r10, $r11, $r12, $r13, $r14, $r17, $r18, $r35, $r37, $r43, $r44, $r79, $r84, r97;
        com.android.server.AlarmManagerService$Injector $r7, $r8, $r19, $r20;
        long[] $r15;
        byte $b11, $b82;
        android.util.SparseBooleanArray $r21, $r51, $r52, $r78, $r80, $r113;
        java.util.ArrayList $r22, $r26, $r27, $r28, $r56, $r57, $r59, $r60, $r65, $r70, $r71, $r73, r110, r121;
        com.android.server.AlarmManagerService$AppWakeupHistory $r23;
        com.android.server.AlarmManagerService$Alarm $r24, $r25, $r61, $r62, $r63, $r64, $r112;
        android.util.SparseLongArray $r29, $r53, $r54, $r55;
        com.android.internal.util.LocalLog $r30;
        com.android.internal.util.StatLogger $r31;
        android.util.SparseArray $r32, $r45, $r68, $r76, $r82, $r103, $r109, $r116, $r124;
        android.util.ArrayMap $r38, $r48, $r49, r117, r125, $r127;
        com.android.server.AlarmManagerService$FilterStats $r40, r119, r120, r128;
        com.android.server.AlarmManagerService$BroadcastStats $r41, $r42, r118, r126;
        android.util.SparseIntArray $r66, $r67, $r111;
        java.lang.Integer $r75, $r81, $r83;
        java.lang.Throwable $r86;
        java.io.PrintWriter r87;
        java.lang.StringBuilder r88;
        java.text.SimpleDateFormat r89;
        java.util.Date r90, r91, r92, r93, r94, r95, r96, r99, r100, r101, r106;
        com.android.server.SystemServiceManager r98;
        java.util.TreeSet r102;
        java.util.Iterator r104, r107;
        android.app.AlarmManager$AlarmClockInfo r105;
        com.android.server.AlarmManagerService$Batch r108;
        com.android.server.AlarmManagerService$FilterStats[] r114;
        com.android.server.AlarmManagerService$5 r115;

        r0 := @this: com.android.server.AlarmManagerService;

        r87 := @parameter0: java.io.PrintWriter;

        r1 = r0.<com.android.server.AlarmManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label001:
        virtualinvoke r87.<java.io.PrintWriter: void println(java.lang.String)>("Current Alarm Manager state:");

        $r2 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Constants mConstants>;

        virtualinvoke $r2.<com.android.server.AlarmManagerService$Constants: void dump(java.io.PrintWriter,java.lang.String)>(r87, "  ");

        virtualinvoke r87.<java.io.PrintWriter: void println()>();

        $r3 = r0.<com.android.server.AlarmManagerService: com.android.server.AppStateTracker mAppStateTracker>;

        if $r3 == null goto label002;

        $r85 = r0.<com.android.server.AlarmManagerService: com.android.server.AppStateTracker mAppStateTracker>;

        virtualinvoke $r85.<com.android.server.AppStateTracker: void dump(java.io.PrintWriter,java.lang.String)>(r87, "  ");

        virtualinvoke r87.<java.io.PrintWriter: void println()>();

     label002:
        r88 = new java.lang.StringBuilder;

        specialinvoke r88.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  App Standby Parole: ");

        $z1 = r0.<com.android.server.AlarmManagerService: boolean mAppStandbyParole>;

        virtualinvoke r88.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r6 = virtualinvoke r88.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r87.<java.io.PrintWriter: void println(java.lang.String)>($r6);

        virtualinvoke r87.<java.io.PrintWriter: void println()>();

        $r7 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Injector mInjector>;

        l0 = virtualinvoke $r7.<com.android.server.AlarmManagerService$Injector: long getElapsedRealtime()>();

        l94 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r8 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Injector mInjector>;

        l95 = virtualinvoke $r8.<com.android.server.AlarmManagerService$Injector: long getCurrentTimeMillis()>();

        r89 = new java.text.SimpleDateFormat;

        specialinvoke r89.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyy-MM-dd HH:mm:ss.SSS");

     label003:
        virtualinvoke r87.<java.io.PrintWriter: void print(java.lang.String)>("  nowRTC=");

        virtualinvoke r87.<java.io.PrintWriter: void print(long)>(l95);

        virtualinvoke r87.<java.io.PrintWriter: void print(java.lang.String)>("=");

        r90 = new java.util.Date;

        specialinvoke r90.<java.util.Date: void <init>(long)>(l95);

        $r9 = virtualinvoke r89.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>(r90);

        virtualinvoke r87.<java.io.PrintWriter: void print(java.lang.String)>($r9);

        virtualinvoke r87.<java.io.PrintWriter: void print(java.lang.String)>(" nowELAPSED=");

        virtualinvoke r87.<java.io.PrintWriter: void print(long)>(l0);

        virtualinvoke r87.<java.io.PrintWriter: void println()>();

        virtualinvoke r87.<java.io.PrintWriter: void print(java.lang.String)>("  mLastTimeChangeClockTime=");

        $l4 = r0.<com.android.server.AlarmManagerService: long mLastTimeChangeClockTime>;

        virtualinvoke r87.<java.io.PrintWriter: void print(long)>($l4);

        virtualinvoke r87.<java.io.PrintWriter: void print(java.lang.String)>("=");

        r91 = new java.util.Date;

        $l5 = r0.<com.android.server.AlarmManagerService: long mLastTimeChangeClockTime>;

        specialinvoke r91.<java.util.Date: void <init>(long)>($l5);

        $r10 = virtualinvoke r89.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>(r91);

        virtualinvoke r87.<java.io.PrintWriter: void println(java.lang.String)>($r10);

        virtualinvoke r87.<java.io.PrintWriter: void print(java.lang.String)>("  mLastTimeChangeRealtime=");

        $l6 = r0.<com.android.server.AlarmManagerService: long mLastTimeChangeRealtime>;

        virtualinvoke r87.<java.io.PrintWriter: void println(long)>($l6);

        virtualinvoke r87.<java.io.PrintWriter: void print(java.lang.String)>("  mLastTickReceived=");

        r92 = new java.util.Date;

        $l7 = r0.<com.android.server.AlarmManagerService: long mLastTickReceived>;

        specialinvoke r92.<java.util.Date: void <init>(long)>($l7);

        $r11 = virtualinvoke r89.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>(r92);

        virtualinvoke r87.<java.io.PrintWriter: void println(java.lang.String)>($r11);

        virtualinvoke r87.<java.io.PrintWriter: void print(java.lang.String)>("  mLastTickSet=");

        r93 = new java.util.Date;

        $l8 = r0.<com.android.server.AlarmManagerService: long mLastTickSet>;

        specialinvoke r93.<java.util.Date: void <init>(long)>($l8);

        $r12 = virtualinvoke r89.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>(r93);

        virtualinvoke r87.<java.io.PrintWriter: void println(java.lang.String)>($r12);

        virtualinvoke r87.<java.io.PrintWriter: void print(java.lang.String)>("  mLastTickAdded=");

        r94 = new java.util.Date;

        $l9 = r0.<com.android.server.AlarmManagerService: long mLastTickAdded>;

        specialinvoke r94.<java.util.Date: void <init>(long)>($l9);

        $r13 = virtualinvoke r89.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>(r94);

        virtualinvoke r87.<java.io.PrintWriter: void println(java.lang.String)>($r13);

        virtualinvoke r87.<java.io.PrintWriter: void print(java.lang.String)>("  mLastTickRemoved=");

        r95 = new java.util.Date;

        $l10 = r0.<com.android.server.AlarmManagerService: long mLastTickRemoved>;

        specialinvoke r95.<java.util.Date: void <init>(long)>($l10);

        $r14 = virtualinvoke r89.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>(r95);

        virtualinvoke r87.<java.io.PrintWriter: void println(java.lang.String)>($r14);

        virtualinvoke r87.<java.io.PrintWriter: void println()>();

        virtualinvoke r87.<java.io.PrintWriter: void println(java.lang.String)>("  Recent TIME_TICK history:");

        i96 = r0.<com.android.server.AlarmManagerService: int mNextTickHistory>;

     label004:
        i97 = i96 - 1;

        i96 = i97;

        if i97 >= 0 goto label005;

        i96 = 9;

     label005:
        $r15 = r0.<com.android.server.AlarmManagerService: long[] mTickHistory>;

        l98 = $r15[i96];

        virtualinvoke r87.<java.io.PrintWriter: void print(java.lang.String)>("    ");

     label006:
        $b11 = l98 cmp 0L;

        if $b11 <= 0 goto label009;

     label007:
        r96 = new java.util.Date;

        $l92 = l0 - l98;

        $l93 = l95 - $l92;

        specialinvoke r96.<java.util.Date: void <init>(long)>($l93);

        r97 = virtualinvoke r89.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>(r96);

     label008:
        goto label010;

     label009:
        r97 = "-";

     label010:
        virtualinvoke r87.<java.io.PrintWriter: void println(java.lang.String)>(r97);

        $i12 = r0.<com.android.server.AlarmManagerService: int mNextTickHistory>;

        if i96 != $i12 goto label125;

        $r16 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Lcom/android/server/SystemServiceManager;");

        r98 = (com.android.server.SystemServiceManager) $r16;

     label011:
        if r98 == null goto label014;

     label012:
        virtualinvoke r87.<java.io.PrintWriter: void println()>();

        virtualinvoke r87.<java.io.PrintWriter: void print(java.lang.String)>("  RuntimeStarted=");

        r99 = new java.util.Date;

        $l87 = l95 - l0;

        $l88 = virtualinvoke r98.<com.android.server.SystemServiceManager: long getRuntimeStartElapsedTime()>();

        $l89 = $l87 + $l88;

        specialinvoke r99.<java.util.Date: void <init>(long)>($l89);

        $r84 = virtualinvoke r89.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>(r99);

        virtualinvoke r87.<java.io.PrintWriter: void print(java.lang.String)>($r84);

        $z9 = virtualinvoke r98.<com.android.server.SystemServiceManager: boolean isRuntimeRestarted()>();

        if $z9 == 0 goto label013;

        virtualinvoke r87.<java.io.PrintWriter: void print(java.lang.String)>("  (Runtime restarted)");

     label013:
        virtualinvoke r87.<java.io.PrintWriter: void println()>();

        virtualinvoke r87.<java.io.PrintWriter: void print(java.lang.String)>("  Runtime uptime (elapsed): ");

        $l90 = virtualinvoke r98.<com.android.server.SystemServiceManager: long getRuntimeStartElapsedTime()>();

        staticinvoke <android.util.TimeUtils: void formatDuration(long,long,java.io.PrintWriter)>(l0, $l90, r87);

        virtualinvoke r87.<java.io.PrintWriter: void println()>();

        virtualinvoke r87.<java.io.PrintWriter: void print(java.lang.String)>("  Runtime uptime (uptime): ");

        $l91 = virtualinvoke r98.<com.android.server.SystemServiceManager: long getRuntimeStartUptime()>();

        staticinvoke <android.util.TimeUtils: void formatDuration(long,long,java.io.PrintWriter)>(l94, $l91, r87);

        virtualinvoke r87.<java.io.PrintWriter: void println()>();

     label014:
        virtualinvoke r87.<java.io.PrintWriter: void println()>();

        $z10 = r0.<com.android.server.AlarmManagerService: boolean mInteractive>;

        if $z10 != 0 goto label015;

        virtualinvoke r87.<java.io.PrintWriter: void print(java.lang.String)>("  Time since non-interactive: ");

        $l85 = r0.<com.android.server.AlarmManagerService: long mNonInteractiveStartTime>;

        $l86 = l0 - $l85;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>($l86, r87);

        virtualinvoke r87.<java.io.PrintWriter: void println()>();

     label015:
        virtualinvoke r87.<java.io.PrintWriter: void print(java.lang.String)>("  Max wakeup delay: ");

        $l13 = virtualinvoke r0.<com.android.server.AlarmManagerService: long currentNonWakeupFuzzLocked(long)>(l0);

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>($l13, r87);

        virtualinvoke r87.<java.io.PrintWriter: void println()>();

        virtualinvoke r87.<java.io.PrintWriter: void print(java.lang.String)>("  Time since last dispatch: ");

        $l14 = r0.<com.android.server.AlarmManagerService: long mLastAlarmDeliveryTime>;

        $l15 = l0 - $l14;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>($l15, r87);

        virtualinvoke r87.<java.io.PrintWriter: void println()>();

        virtualinvoke r87.<java.io.PrintWriter: void print(java.lang.String)>("  Next non-wakeup delivery time: ");

        $l16 = r0.<com.android.server.AlarmManagerService: long mNextNonWakeupDeliveryTime>;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,long,java.io.PrintWriter)>($l16, l0, r87);

        virtualinvoke r87.<java.io.PrintWriter: void println()>();

        $l18 = r0.<com.android.server.AlarmManagerService: long mNextWakeup>;

        $l17 = l95 - l0;

        l1 = $l18 + $l17;

        $l20 = r0.<com.android.server.AlarmManagerService: long mNextNonWakeup>;

        $l19 = l95 - l0;

        l99 = $l20 + $l19;

        virtualinvoke r87.<java.io.PrintWriter: void print(java.lang.String)>("  Next non-wakeup alarm: ");

        $l21 = r0.<com.android.server.AlarmManagerService: long mNextNonWakeup>;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,long,java.io.PrintWriter)>($l21, l0, r87);

        virtualinvoke r87.<java.io.PrintWriter: void print(java.lang.String)>(" = ");

        $l22 = r0.<com.android.server.AlarmManagerService: long mNextNonWakeup>;

        virtualinvoke r87.<java.io.PrintWriter: void print(long)>($l22);

        virtualinvoke r87.<java.io.PrintWriter: void print(java.lang.String)>(" = ");

        r100 = new java.util.Date;

        specialinvoke r100.<java.util.Date: void <init>(long)>(l99);

        $r17 = virtualinvoke r89.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>(r100);

        virtualinvoke r87.<java.io.PrintWriter: void println(java.lang.String)>($r17);

        virtualinvoke r87.<java.io.PrintWriter: void print(java.lang.String)>("    set at ");

        $l23 = r0.<com.android.server.AlarmManagerService: long mNextNonWakeUpSetAt>;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,long,java.io.PrintWriter)>($l23, l0, r87);

        virtualinvoke r87.<java.io.PrintWriter: void println()>();

        virtualinvoke r87.<java.io.PrintWriter: void print(java.lang.String)>("  Next wakeup alarm: ");

        $l24 = r0.<com.android.server.AlarmManagerService: long mNextWakeup>;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,long,java.io.PrintWriter)>($l24, l0, r87);

        virtualinvoke r87.<java.io.PrintWriter: void print(java.lang.String)>(" = ");

        $l25 = r0.<com.android.server.AlarmManagerService: long mNextWakeup>;

        virtualinvoke r87.<java.io.PrintWriter: void print(long)>($l25);

        virtualinvoke r87.<java.io.PrintWriter: void print(java.lang.String)>(" = ");

        r101 = new java.util.Date;

        specialinvoke r101.<java.util.Date: void <init>(long)>(l1);

        $r18 = virtualinvoke r89.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>(r101);

        virtualinvoke r87.<java.io.PrintWriter: void println(java.lang.String)>($r18);

        virtualinvoke r87.<java.io.PrintWriter: void print(java.lang.String)>("    set at ");

        $l26 = r0.<com.android.server.AlarmManagerService: long mNextWakeUpSetAt>;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,long,java.io.PrintWriter)>($l26, l0, r87);

        virtualinvoke r87.<java.io.PrintWriter: void println()>();

        virtualinvoke r87.<java.io.PrintWriter: void print(java.lang.String)>("  Next kernel non-wakeup alarm: ");

        $r19 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Injector mInjector>;

        $l27 = virtualinvoke $r19.<com.android.server.AlarmManagerService$Injector: long getNextAlarm(int)>(3);

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>($l27, r87);

        virtualinvoke r87.<java.io.PrintWriter: void println()>();

        virtualinvoke r87.<java.io.PrintWriter: void print(java.lang.String)>("  Next kernel wakeup alarm: ");

        $r20 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Injector mInjector>;

        $l28 = virtualinvoke $r20.<com.android.server.AlarmManagerService$Injector: long getNextAlarm(int)>(2);

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>($l28, r87);

        virtualinvoke r87.<java.io.PrintWriter: void println()>();

        virtualinvoke r87.<java.io.PrintWriter: void print(java.lang.String)>("  Last wakeup: ");

        $l29 = r0.<com.android.server.AlarmManagerService: long mLastWakeup>;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,long,java.io.PrintWriter)>($l29, l0, r87);

        virtualinvoke r87.<java.io.PrintWriter: void print(java.lang.String)>(" = ");

        $l30 = r0.<com.android.server.AlarmManagerService: long mLastWakeup>;

        virtualinvoke r87.<java.io.PrintWriter: void println(long)>($l30);

        virtualinvoke r87.<java.io.PrintWriter: void print(java.lang.String)>("  Last trigger: ");

        $l31 = r0.<com.android.server.AlarmManagerService: long mLastTrigger>;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,long,java.io.PrintWriter)>($l31, l0, r87);

        virtualinvoke r87.<java.io.PrintWriter: void print(java.lang.String)>(" = ");

        $l32 = r0.<com.android.server.AlarmManagerService: long mLastTrigger>;

        virtualinvoke r87.<java.io.PrintWriter: void println(long)>($l32);

        virtualinvoke r87.<java.io.PrintWriter: void print(java.lang.String)>("  Num time change events: ");

        $i33 = r0.<com.android.server.AlarmManagerService: int mNumTimeChanged>;

        virtualinvoke r87.<java.io.PrintWriter: void println(int)>($i33);

        virtualinvoke r87.<java.io.PrintWriter: void println()>();

        virtualinvoke r87.<java.io.PrintWriter: void println(java.lang.String)>("  Next alarm clock information: ");

        r102 = new java.util.TreeSet;

        specialinvoke r102.<java.util.TreeSet: void <init>()>();

     label016:
        i100 = 0;

     label017:
        $r103 = r0.<com.android.server.AlarmManagerService: android.util.SparseArray mNextAlarmClockForUser>;

        $i101 = virtualinvoke $r103.<android.util.SparseArray: int size()>();

        if i100 >= $i101 goto label019;

        $r82 = r0.<com.android.server.AlarmManagerService: android.util.SparseArray mNextAlarmClockForUser>;

        $i84 = virtualinvoke $r82.<android.util.SparseArray: int keyAt(int)>(i100);

        $r83 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i84);

        virtualinvoke r102.<java.util.TreeSet: boolean add(java.lang.Object)>($r83);

     label018:
        i100 = i100 + 1;

        goto label017;

     label019:
        i102 = 0;

     label020:
        $r21 = r0.<com.android.server.AlarmManagerService: android.util.SparseBooleanArray mPendingSendNextAlarmClockChangedForUser>;

        $i34 = virtualinvoke $r21.<android.util.SparseBooleanArray: int size()>();

        if i102 >= $i34 goto label022;

        $r80 = r0.<com.android.server.AlarmManagerService: android.util.SparseBooleanArray mPendingSendNextAlarmClockChangedForUser>;

        $i83 = virtualinvoke $r80.<android.util.SparseBooleanArray: int keyAt(int)>(i102);

        $r81 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i83);

        virtualinvoke r102.<java.util.TreeSet: boolean add(java.lang.Object)>($r81);

     label021:
        i102 = i102 + 1;

        goto label020;

     label022:
        r104 = virtualinvoke r102.<java.util.TreeSet: java.util.Iterator iterator()>();

     label023:
        $z2 = interfaceinvoke r104.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label034;

        $r74 = interfaceinvoke r104.<java.util.Iterator: java.lang.Object next()>();

        $r75 = (java.lang.Integer) $r74;

        i103 = virtualinvoke $r75.<java.lang.Integer: int intValue()>();

        $r76 = r0.<com.android.server.AlarmManagerService: android.util.SparseArray mNextAlarmClockForUser>;

        $r77 = virtualinvoke $r76.<android.util.SparseArray: java.lang.Object get(int)>(i103);

        r105 = (android.app.AlarmManager$AlarmClockInfo) $r77;

     label024:
        if r105 == null goto label027;

     label025:
        l104 = virtualinvoke r105.<android.app.AlarmManager$AlarmClockInfo: long getTriggerTime()>();

     label026:
        goto label028;

     label027:
        l104 = 0L;

     label028:
        $r78 = r0.<com.android.server.AlarmManagerService: android.util.SparseBooleanArray mPendingSendNextAlarmClockChangedForUser>;

        z0 = virtualinvoke $r78.<android.util.SparseBooleanArray: boolean get(int)>(i103);

        virtualinvoke r87.<java.io.PrintWriter: void print(java.lang.String)>("    user:");

        virtualinvoke r87.<java.io.PrintWriter: void print(int)>(i103);

        virtualinvoke r87.<java.io.PrintWriter: void print(java.lang.String)>(" pendingSend:");

        virtualinvoke r87.<java.io.PrintWriter: void print(boolean)>(z0);

        virtualinvoke r87.<java.io.PrintWriter: void print(java.lang.String)>(" time:");

        virtualinvoke r87.<java.io.PrintWriter: void print(long)>(l104);

     label029:
        $b82 = l104 cmp 0L;

        if $b82 <= 0 goto label032;

     label030:
        virtualinvoke r87.<java.io.PrintWriter: void print(java.lang.String)>(" = ");

        r106 = new java.util.Date;

        specialinvoke r106.<java.util.Date: void <init>(long)>(l104);

        $r79 = virtualinvoke r89.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>(r106);

        virtualinvoke r87.<java.io.PrintWriter: void print(java.lang.String)>($r79);

        virtualinvoke r87.<java.io.PrintWriter: void print(java.lang.String)>(" = ");

        staticinvoke <android.util.TimeUtils: void formatDuration(long,long,java.io.PrintWriter)>(l104, l95, r87);

     label031:
        goto label032;

     label032:
        virtualinvoke r87.<java.io.PrintWriter: void println()>();

     label033:
        goto label023;

     label034:
        $r22 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mAlarmBatches>;

        $i35 = virtualinvoke $r22.<java.util.ArrayList: int size()>();

        if $i35 <= 0 goto label038;

        virtualinvoke r87.<java.io.PrintWriter: void println()>();

        virtualinvoke r87.<java.io.PrintWriter: void print(java.lang.String)>("  Pending alarm batches: ");

        $r70 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mAlarmBatches>;

        $i81 = virtualinvoke $r70.<java.util.ArrayList: int size()>();

        virtualinvoke r87.<java.io.PrintWriter: void println(int)>($i81);

        $r71 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mAlarmBatches>;

        r107 = virtualinvoke $r71.<java.util.ArrayList: java.util.Iterator iterator()>();

     label035:
        $z6 = interfaceinvoke r107.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label037;

        $r72 = interfaceinvoke r107.<java.util.Iterator: java.lang.Object next()>();

        r108 = (com.android.server.AlarmManagerService$Batch) $r72;

        virtualinvoke r87.<java.io.PrintWriter: void print(java.lang.Object)>(r108);

        virtualinvoke r87.<java.io.PrintWriter: void println(char)>(58);

        $r73 = r108.<com.android.server.AlarmManagerService$Batch: java.util.ArrayList alarms>;

        staticinvoke <com.android.server.AlarmManagerService: void dumpAlarmList(java.io.PrintWriter,java.util.ArrayList,java.lang.String,long,long,java.text.SimpleDateFormat)>(r87, $r73, "    ", l0, l95, r89);

     label036:
        goto label035;

     label037:
        goto label038;

     label038:
        virtualinvoke r87.<java.io.PrintWriter: void println()>();

        virtualinvoke r87.<java.io.PrintWriter: void println(java.lang.String)>("  Pending user blocked background alarms: ");

     label039:
        z11 = 0;

        i107 = 0;

     label040:
        $r109 = r0.<com.android.server.AlarmManagerService: android.util.SparseArray mPendingBackgroundAlarms>;

        $i108 = virtualinvoke $r109.<android.util.SparseArray: int size()>();

        if i107 >= $i108 goto label047;

        $r68 = r0.<com.android.server.AlarmManagerService: android.util.SparseArray mPendingBackgroundAlarms>;

        $r69 = virtualinvoke $r68.<android.util.SparseArray: java.lang.Object valueAt(int)>(i107);

        r110 = (java.util.ArrayList) $r69;

     label041:
        if r110 == null goto label046;

     label042:
        $i80 = virtualinvoke r110.<java.util.ArrayList: int size()>();

        if $i80 <= 0 goto label046;

     label043:
        z11 = 1;

     label044:
        staticinvoke <com.android.server.AlarmManagerService: void dumpAlarmList(java.io.PrintWriter,java.util.ArrayList,java.lang.String,long,long,java.text.SimpleDateFormat)>(r87, r110, "    ", l0, l95, r89);

     label045:
        goto label046;

     label046:
        i107 = i107 + 1;

        goto label040;

     label047:
        if z11 != 0 goto label049;

     label048:
        virtualinvoke r87.<java.io.PrintWriter: void println(java.lang.String)>("    none");

     label049:
        virtualinvoke r87.<java.io.PrintWriter: void println()>();

        virtualinvoke r87.<java.io.PrintWriter: void print(java.lang.String)>("  Pending alarms per uid: [");

     label050:
        i109 = 0;

     label051:
        $r111 = r0.<com.android.server.AlarmManagerService: android.util.SparseIntArray mAlarmsPerUid>;

        $i110 = virtualinvoke $r111.<android.util.SparseIntArray: int size()>();

        if i109 >= $i110 goto label056;

     label052:
        if i109 <= 0 goto label054;

     label053:
        virtualinvoke r87.<java.io.PrintWriter: void print(java.lang.String)>(", ");

     label054:
        $r66 = r0.<com.android.server.AlarmManagerService: android.util.SparseIntArray mAlarmsPerUid>;

        $i78 = virtualinvoke $r66.<android.util.SparseIntArray: int keyAt(int)>(i109);

        staticinvoke <android.os.UserHandle: void formatUid(java.io.PrintWriter,int)>(r87, $i78);

        virtualinvoke r87.<java.io.PrintWriter: void print(java.lang.String)>(":");

        $r67 = r0.<com.android.server.AlarmManagerService: android.util.SparseIntArray mAlarmsPerUid>;

        $i79 = virtualinvoke $r67.<android.util.SparseIntArray: int valueAt(int)>(i109);

        virtualinvoke r87.<java.io.PrintWriter: void print(int)>($i79);

     label055:
        i109 = i109 + 1;

        goto label051;

     label056:
        virtualinvoke r87.<java.io.PrintWriter: void println(java.lang.String)>("]");

        virtualinvoke r87.<java.io.PrintWriter: void println()>();

        $r23 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$AppWakeupHistory mAppWakeupHistory>;

        virtualinvoke $r23.<com.android.server.AlarmManagerService$AppWakeupHistory: void dump(java.io.PrintWriter,java.lang.String,long)>(r87, "  ", l0);

        $r24 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Alarm mPendingIdleUntil>;

        if $r24 != null goto label057;

        $r65 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mPendingWhileIdleAlarms>;

        $i77 = virtualinvoke $r65.<java.util.ArrayList: int size()>();

        if $i77 <= 0 goto label061;

     label057:
        virtualinvoke r87.<java.io.PrintWriter: void println()>();

        virtualinvoke r87.<java.io.PrintWriter: void println(java.lang.String)>("    Idle mode state:");

        virtualinvoke r87.<java.io.PrintWriter: void print(java.lang.String)>("      Idling until: ");

        $r25 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Alarm mPendingIdleUntil>;

        if $r25 == null goto label059;

        $r63 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Alarm mPendingIdleUntil>;

        virtualinvoke r87.<java.io.PrintWriter: void println(java.lang.Object)>($r63);

        $r64 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Alarm mPendingIdleUntil>;

        virtualinvoke $r64.<com.android.server.AlarmManagerService$Alarm: void dump(java.io.PrintWriter,java.lang.String,long,long,java.text.SimpleDateFormat)>(r87, "        ", l0, l95, r89);

     label058:
        goto label060;

     label059:
        virtualinvoke r87.<java.io.PrintWriter: void println(java.lang.String)>("null");

     label060:
        virtualinvoke r87.<java.io.PrintWriter: void println(java.lang.String)>("      Pending alarms:");

        $r26 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mPendingWhileIdleAlarms>;

        staticinvoke <com.android.server.AlarmManagerService: void dumpAlarmList(java.io.PrintWriter,java.util.ArrayList,java.lang.String,long,long,java.text.SimpleDateFormat)>(r87, $r26, "      ", l0, l95, r89);

     label061:
        $r112 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Alarm mNextWakeFromIdle>;

        if $r112 == null goto label062;

        virtualinvoke r87.<java.io.PrintWriter: void println()>();

        virtualinvoke r87.<java.io.PrintWriter: void print(java.lang.String)>("  Next wake from idle: ");

        $r61 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Alarm mNextWakeFromIdle>;

        virtualinvoke r87.<java.io.PrintWriter: void println(java.lang.Object)>($r61);

        $r62 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Alarm mNextWakeFromIdle>;

        virtualinvoke $r62.<com.android.server.AlarmManagerService$Alarm: void dump(java.io.PrintWriter,java.lang.String,long,long,java.text.SimpleDateFormat)>(r87, "    ", l0, l95, r89);

     label062:
        virtualinvoke r87.<java.io.PrintWriter: void println()>();

        virtualinvoke r87.<java.io.PrintWriter: void print(java.lang.String)>("  Past-due non-wakeup alarms: ");

        $r27 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mPendingNonWakeupAlarms>;

        $i36 = virtualinvoke $r27.<java.util.ArrayList: int size()>();

        if $i36 <= 0 goto label064;

        $r59 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mPendingNonWakeupAlarms>;

        $i76 = virtualinvoke $r59.<java.util.ArrayList: int size()>();

        virtualinvoke r87.<java.io.PrintWriter: void println(int)>($i76);

        $r60 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mPendingNonWakeupAlarms>;

        staticinvoke <com.android.server.AlarmManagerService: void dumpAlarmList(java.io.PrintWriter,java.util.ArrayList,java.lang.String,long,long,java.text.SimpleDateFormat)>(r87, $r60, "    ", l0, l95, r89);

     label063:
        goto label065;

     label064:
        virtualinvoke r87.<java.io.PrintWriter: void println(java.lang.String)>("(none)");

     label065:
        virtualinvoke r87.<java.io.PrintWriter: void print(java.lang.String)>("    Number of delayed alarms: ");

        $i37 = r0.<com.android.server.AlarmManagerService: int mNumDelayedAlarms>;

        virtualinvoke r87.<java.io.PrintWriter: void print(int)>($i37);

        virtualinvoke r87.<java.io.PrintWriter: void print(java.lang.String)>(", total delay time: ");

        $l38 = r0.<com.android.server.AlarmManagerService: long mTotalDelayTime>;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>($l38, r87);

        virtualinvoke r87.<java.io.PrintWriter: void println()>();

        virtualinvoke r87.<java.io.PrintWriter: void print(java.lang.String)>("    Max delay time: ");

        $l39 = r0.<com.android.server.AlarmManagerService: long mMaxDelayTime>;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>($l39, r87);

        virtualinvoke r87.<java.io.PrintWriter: void print(java.lang.String)>(", max non-interactive time: ");

        $l40 = r0.<com.android.server.AlarmManagerService: long mNonInteractiveTime>;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>($l40, r87);

        virtualinvoke r87.<java.io.PrintWriter: void println()>();

        virtualinvoke r87.<java.io.PrintWriter: void println()>();

        virtualinvoke r87.<java.io.PrintWriter: void print(java.lang.String)>("  Broadcast ref count: ");

        $i41 = r0.<com.android.server.AlarmManagerService: int mBroadcastRefCount>;

        virtualinvoke r87.<java.io.PrintWriter: void println(int)>($i41);

        virtualinvoke r87.<java.io.PrintWriter: void print(java.lang.String)>("  PendingIntent send count: ");

        $i42 = r0.<com.android.server.AlarmManagerService: int mSendCount>;

        virtualinvoke r87.<java.io.PrintWriter: void println(int)>($i42);

        virtualinvoke r87.<java.io.PrintWriter: void print(java.lang.String)>("  PendingIntent finish count: ");

        $i43 = r0.<com.android.server.AlarmManagerService: int mSendFinishCount>;

        virtualinvoke r87.<java.io.PrintWriter: void println(int)>($i43);

        virtualinvoke r87.<java.io.PrintWriter: void print(java.lang.String)>("  Listener send count: ");

        $i44 = r0.<com.android.server.AlarmManagerService: int mListenerCount>;

        virtualinvoke r87.<java.io.PrintWriter: void println(int)>($i44);

        virtualinvoke r87.<java.io.PrintWriter: void print(java.lang.String)>("  Listener finish count: ");

        $i45 = r0.<com.android.server.AlarmManagerService: int mListenerFinishCount>;

        virtualinvoke r87.<java.io.PrintWriter: void println(int)>($i45);

        virtualinvoke r87.<java.io.PrintWriter: void println()>();

        $r28 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mInFlight>;

        $i46 = virtualinvoke $r28.<java.util.ArrayList: int size()>();

        if $i46 <= 0 goto label070;

        virtualinvoke r87.<java.io.PrintWriter: void println(java.lang.String)>("Outstanding deliveries:");

     label066:
        i111 = 0;

     label067:
        $r56 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mInFlight>;

        $i75 = virtualinvoke $r56.<java.util.ArrayList: int size()>();

        if i111 >= $i75 goto label069;

        virtualinvoke r87.<java.io.PrintWriter: void print(java.lang.String)>("   #");

        virtualinvoke r87.<java.io.PrintWriter: void print(int)>(i111);

        virtualinvoke r87.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        $r57 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mInFlight>;

        $r58 = virtualinvoke $r57.<java.util.ArrayList: java.lang.Object get(int)>(i111);

        virtualinvoke r87.<java.io.PrintWriter: void println(java.lang.Object)>($r58);

     label068:
        i111 = i111 + 1;

        goto label067;

     label069:
        virtualinvoke r87.<java.io.PrintWriter: void println()>();

     label070:
        $r29 = r0.<com.android.server.AlarmManagerService: android.util.SparseLongArray mLastAllowWhileIdleDispatch>;

        $i47 = virtualinvoke $r29.<android.util.SparseLongArray: int size()>();

        if $i47 <= 0 goto label074;

        virtualinvoke r87.<java.io.PrintWriter: void println(java.lang.String)>("  Last allow while idle dispatch times:");

     label071:
        i112 = 0;

     label072:
        $r53 = r0.<com.android.server.AlarmManagerService: android.util.SparseLongArray mLastAllowWhileIdleDispatch>;

        $i73 = virtualinvoke $r53.<android.util.SparseLongArray: int size()>();

        if i112 >= $i73 goto label074;

        virtualinvoke r87.<java.io.PrintWriter: void print(java.lang.String)>("    UID ");

        $r54 = r0.<com.android.server.AlarmManagerService: android.util.SparseLongArray mLastAllowWhileIdleDispatch>;

        i113 = virtualinvoke $r54.<android.util.SparseLongArray: int keyAt(int)>(i112);

        staticinvoke <android.os.UserHandle: void formatUid(java.io.PrintWriter,int)>(r87, i113);

        virtualinvoke r87.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        $r55 = r0.<com.android.server.AlarmManagerService: android.util.SparseLongArray mLastAllowWhileIdleDispatch>;

        l114 = virtualinvoke $r55.<android.util.SparseLongArray: long valueAt(int)>(i112);

        staticinvoke <android.util.TimeUtils: void formatDuration(long,long,java.io.PrintWriter)>(l114, l0, r87);

        l115 = specialinvoke r0.<com.android.server.AlarmManagerService: long getWhileIdleMinIntervalLocked(int)>(i113);

        virtualinvoke r87.<java.io.PrintWriter: void print(java.lang.String)>("  Next allowed:");

        $l74 = l114 + l115;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,long,java.io.PrintWriter)>($l74, l0, r87);

        virtualinvoke r87.<java.io.PrintWriter: void print(java.lang.String)>(" (");

        staticinvoke <android.util.TimeUtils: void formatDuration(long,long,java.io.PrintWriter)>(l115, 0L, r87);

        virtualinvoke r87.<java.io.PrintWriter: void print(java.lang.String)>(")");

        virtualinvoke r87.<java.io.PrintWriter: void println()>();

     label073:
        i112 = i112 + 1;

        goto label072;

     label074:
        virtualinvoke r87.<java.io.PrintWriter: void print(java.lang.String)>("  mUseAllowWhileIdleShortTime: [");

     label075:
        i116 = 0;

     label076:
        $r113 = r0.<com.android.server.AlarmManagerService: android.util.SparseBooleanArray mUseAllowWhileIdleShortTime>;

        $i117 = virtualinvoke $r113.<android.util.SparseBooleanArray: int size()>();

        if i116 >= $i117 goto label078;

        $r51 = r0.<com.android.server.AlarmManagerService: android.util.SparseBooleanArray mUseAllowWhileIdleShortTime>;

        $z5 = virtualinvoke $r51.<android.util.SparseBooleanArray: boolean valueAt(int)>(i116);

        if $z5 == 0 goto label077;

        $r52 = r0.<com.android.server.AlarmManagerService: android.util.SparseBooleanArray mUseAllowWhileIdleShortTime>;

        $i72 = virtualinvoke $r52.<android.util.SparseBooleanArray: int keyAt(int)>(i116);

        staticinvoke <android.os.UserHandle: void formatUid(java.io.PrintWriter,int)>(r87, $i72);

        virtualinvoke r87.<java.io.PrintWriter: void print(java.lang.String)>(" ");

     label077:
        i116 = i116 + 1;

        goto label076;

     label078:
        virtualinvoke r87.<java.io.PrintWriter: void println(java.lang.String)>("]");

        virtualinvoke r87.<java.io.PrintWriter: void println()>();

        $r30 = r0.<com.android.server.AlarmManagerService: com.android.internal.util.LocalLog mLog>;

        $z3 = virtualinvoke $r30.<com.android.internal.util.LocalLog: boolean dump(java.io.PrintWriter,java.lang.String,java.lang.String)>(r87, "  Recent problems", "    ");

        if $z3 == 0 goto label079;

        virtualinvoke r87.<java.io.PrintWriter: void println()>();

     label079:
        r114 = newarray (com.android.server.AlarmManagerService$FilterStats)[10];

        r115 = new com.android.server.AlarmManagerService$5;

        specialinvoke r115.<com.android.server.AlarmManagerService$5: void <init>(com.android.server.AlarmManagerService)>(r0);

     label080:
        i118 = 0;

        i119 = 0;

     label081:
        $r116 = r0.<com.android.server.AlarmManagerService: android.util.SparseArray mBroadcastStats>;

        $i120 = virtualinvoke $r116.<android.util.SparseArray: int size()>();

        if i119 >= $i120 goto label100;

        $r45 = r0.<com.android.server.AlarmManagerService: android.util.SparseArray mBroadcastStats>;

        $r46 = virtualinvoke $r45.<android.util.SparseArray: java.lang.Object valueAt(int)>(i119);

        r117 = (android.util.ArrayMap) $r46;

     label082:
        i121 = 0;

     label083:
        $i64 = virtualinvoke r117.<android.util.ArrayMap: int size()>();

        if i121 >= $i64 goto label099;

        $r47 = virtualinvoke r117.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i121);

        r118 = (com.android.server.AlarmManagerService$BroadcastStats) $r47;

     label084:
        i122 = 0;

        i123 = i118;

     label085:
        $r48 = r118.<com.android.server.AlarmManagerService$BroadcastStats: android.util.ArrayMap filterStats>;

        $i65 = virtualinvoke $r48.<android.util.ArrayMap: int size()>();

        if i122 >= $i65 goto label098;

        $r49 = r118.<com.android.server.AlarmManagerService$BroadcastStats: android.util.ArrayMap filterStats>;

        $r50 = virtualinvoke $r49.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i122);

        r119 = (com.android.server.AlarmManagerService$FilterStats) $r50;

     label086:
        i124 = 0;

        if i123 <= 0 goto label088;

     label087:
        i124 = staticinvoke <java.util.Arrays: int binarySearch(java.lang.Object[],int,int,java.lang.Object,java.util.Comparator)>(r114, 0, i123, r119, r115);

     label088:
        if i124 >= 0 goto label089;

        $i71 = neg i124;

        i124 = $i71 - 1;

        goto label089;

     label089:
        $i66 = lengthof r114;

        if i124 >= $i66 goto label096;

        $i67 = lengthof r114;

        $i68 = $i67 - i124;

        i3 = $i68 - 1;

     label090:
        if i3 <= 0 goto label093;

     label091:
        $i70 = i124 + 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r114, i124, r114, $i70, i3);

     label092:
        goto label093;

     label093:
        r114[i124] = r119;

        i125 = i123;

     label094:
        $i69 = lengthof r114;

        if i123 >= $i69 goto label097;

     label095:
        i125 = i123 + 1;

        goto label097;

     label096:
        i125 = i123;

     label097:
        i122 = i122 + 1;

        i123 = i125;

        goto label085;

     label098:
        i121 = i121 + 1;

        i118 = i123;

        goto label083;

     label099:
        i119 = i119 + 1;

        goto label081;

     label100:
        if i118 <= 0 goto label107;

     label101:
        virtualinvoke r87.<java.io.PrintWriter: void println(java.lang.String)>("  Top Alarms:");

     label102:
        i126 = 0;

     label103:
        if i126 >= i118 goto label107;

        r120 = r114[i126];

     label104:
        virtualinvoke r87.<java.io.PrintWriter: void print(java.lang.String)>("    ");

        $i59 = r120.<com.android.server.AlarmManagerService$FilterStats: int nesting>;

        if $i59 <= 0 goto label105;

        virtualinvoke r87.<java.io.PrintWriter: void print(java.lang.String)>("*ACTIVE* ");

     label105:
        $l60 = r120.<com.android.server.AlarmManagerService$FilterStats: long aggregateTime>;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>($l60, r87);

        virtualinvoke r87.<java.io.PrintWriter: void print(java.lang.String)>(" running, ");

        $i61 = r120.<com.android.server.AlarmManagerService$FilterStats: int numWakeup>;

        virtualinvoke r87.<java.io.PrintWriter: void print(int)>($i61);

        virtualinvoke r87.<java.io.PrintWriter: void print(java.lang.String)>(" wakeups, ");

        $i62 = r120.<com.android.server.AlarmManagerService$FilterStats: int count>;

        virtualinvoke r87.<java.io.PrintWriter: void print(int)>($i62);

        virtualinvoke r87.<java.io.PrintWriter: void print(java.lang.String)>(" alarms: ");

        $r41 = r120.<com.android.server.AlarmManagerService$FilterStats: com.android.server.AlarmManagerService$BroadcastStats mBroadcastStats>;

        $i63 = $r41.<com.android.server.AlarmManagerService$BroadcastStats: int mUid>;

        staticinvoke <android.os.UserHandle: void formatUid(java.io.PrintWriter,int)>(r87, $i63);

        virtualinvoke r87.<java.io.PrintWriter: void print(java.lang.String)>(":");

        $r42 = r120.<com.android.server.AlarmManagerService$FilterStats: com.android.server.AlarmManagerService$BroadcastStats mBroadcastStats>;

        $r43 = $r42.<com.android.server.AlarmManagerService$BroadcastStats: java.lang.String mPackageName>;

        virtualinvoke r87.<java.io.PrintWriter: void print(java.lang.String)>($r43);

        virtualinvoke r87.<java.io.PrintWriter: void println()>();

        virtualinvoke r87.<java.io.PrintWriter: void print(java.lang.String)>("      ");

        $r44 = r120.<com.android.server.AlarmManagerService$FilterStats: java.lang.String mTag>;

        virtualinvoke r87.<java.io.PrintWriter: void print(java.lang.String)>($r44);

        virtualinvoke r87.<java.io.PrintWriter: void println()>();

     label106:
        i126 = i126 + 1;

        goto label103;

     label107:
        virtualinvoke r87.<java.io.PrintWriter: void println(java.lang.String)>(" ");

        virtualinvoke r87.<java.io.PrintWriter: void println(java.lang.String)>("  Alarm Stats:");

        r121 = new java.util.ArrayList;

        specialinvoke r121.<java.util.ArrayList: void <init>()>();

     label108:
        i127 = 0;

     label109:
        $r124 = r0.<com.android.server.AlarmManagerService: android.util.SparseArray mBroadcastStats>;

        $i128 = virtualinvoke $r124.<android.util.SparseArray: int size()>();

        if i127 >= $i128 goto label123;

        $r32 = r0.<com.android.server.AlarmManagerService: android.util.SparseArray mBroadcastStats>;

        $r33 = virtualinvoke $r32.<android.util.SparseArray: java.lang.Object valueAt(int)>(i127);

        r125 = (android.util.ArrayMap) $r33;

     label110:
        i129 = 0;

     label111:
        $i48 = virtualinvoke r125.<android.util.ArrayMap: int size()>();

        if i129 >= $i48 goto label122;

        $r34 = virtualinvoke r125.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i129);

        r126 = (com.android.server.AlarmManagerService$BroadcastStats) $r34;

        virtualinvoke r87.<java.io.PrintWriter: void print(java.lang.String)>("  ");

        $i49 = r126.<com.android.server.AlarmManagerService$BroadcastStats: int nesting>;

        if $i49 <= 0 goto label112;

        virtualinvoke r87.<java.io.PrintWriter: void print(java.lang.String)>("*ACTIVE* ");

     label112:
        $i50 = r126.<com.android.server.AlarmManagerService$BroadcastStats: int mUid>;

        staticinvoke <android.os.UserHandle: void formatUid(java.io.PrintWriter,int)>(r87, $i50);

        virtualinvoke r87.<java.io.PrintWriter: void print(java.lang.String)>(":");

        $r35 = r126.<com.android.server.AlarmManagerService$BroadcastStats: java.lang.String mPackageName>;

        virtualinvoke r87.<java.io.PrintWriter: void print(java.lang.String)>($r35);

        virtualinvoke r87.<java.io.PrintWriter: void print(java.lang.String)>(" ");

        $l51 = r126.<com.android.server.AlarmManagerService$BroadcastStats: long aggregateTime>;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>($l51, r87);

        virtualinvoke r87.<java.io.PrintWriter: void print(java.lang.String)>(" running, ");

        $i52 = r126.<com.android.server.AlarmManagerService$BroadcastStats: int numWakeup>;

        virtualinvoke r87.<java.io.PrintWriter: void print(int)>($i52);

        virtualinvoke r87.<java.io.PrintWriter: void println(java.lang.String)>(" wakeups:");

        virtualinvoke r121.<java.util.ArrayList: void clear()>();

     label113:
        i130 = 0;

     label114:
        $r127 = r126.<com.android.server.AlarmManagerService$BroadcastStats: android.util.ArrayMap filterStats>;

        $i131 = virtualinvoke $r127.<android.util.ArrayMap: int size()>();

        if i130 >= $i131 goto label116;

        $r38 = r126.<com.android.server.AlarmManagerService$BroadcastStats: android.util.ArrayMap filterStats>;

        $r39 = virtualinvoke $r38.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i130);

        $r40 = (com.android.server.AlarmManagerService$FilterStats) $r39;

        virtualinvoke r121.<java.util.ArrayList: boolean add(java.lang.Object)>($r40);

     label115:
        i130 = i130 + 1;

        goto label114;

     label116:
        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r121, r115);

     label117:
        i132 = 0;

     label118:
        $i53 = virtualinvoke r121.<java.util.ArrayList: int size()>();

        if i132 >= $i53 goto label121;

        $r36 = virtualinvoke r121.<java.util.ArrayList: java.lang.Object get(int)>(i132);

        r128 = (com.android.server.AlarmManagerService$FilterStats) $r36;

        virtualinvoke r87.<java.io.PrintWriter: void print(java.lang.String)>("    ");

        $i54 = r128.<com.android.server.AlarmManagerService$FilterStats: int nesting>;

        if $i54 <= 0 goto label119;

        virtualinvoke r87.<java.io.PrintWriter: void print(java.lang.String)>("*ACTIVE* ");

     label119:
        $l55 = r128.<com.android.server.AlarmManagerService$FilterStats: long aggregateTime>;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>($l55, r87);

        virtualinvoke r87.<java.io.PrintWriter: void print(java.lang.String)>(" ");

        $i56 = r128.<com.android.server.AlarmManagerService$FilterStats: int numWakeup>;

        virtualinvoke r87.<java.io.PrintWriter: void print(int)>($i56);

        virtualinvoke r87.<java.io.PrintWriter: void print(java.lang.String)>(" wakes ");

        $i57 = r128.<com.android.server.AlarmManagerService$FilterStats: int count>;

        virtualinvoke r87.<java.io.PrintWriter: void print(int)>($i57);

        virtualinvoke r87.<java.io.PrintWriter: void print(java.lang.String)>(" alarms, last ");

        $l58 = r128.<com.android.server.AlarmManagerService$FilterStats: long lastTime>;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,long,java.io.PrintWriter)>($l58, l0, r87);

        virtualinvoke r87.<java.io.PrintWriter: void println(java.lang.String)>(":");

        virtualinvoke r87.<java.io.PrintWriter: void print(java.lang.String)>("      ");

        $r37 = r128.<com.android.server.AlarmManagerService$FilterStats: java.lang.String mTag>;

        virtualinvoke r87.<java.io.PrintWriter: void print(java.lang.String)>($r37);

        virtualinvoke r87.<java.io.PrintWriter: void println()>();

     label120:
        i132 = i132 + 1;

        goto label118;

     label121:
        i129 = i129 + 1;

        goto label111;

     label122:
        i127 = i127 + 1;

        goto label109;

     label123:
        virtualinvoke r87.<java.io.PrintWriter: void println()>();

        $r31 = r0.<com.android.server.AlarmManagerService: com.android.internal.util.StatLogger mStatLogger>;

        virtualinvoke $r31.<com.android.internal.util.StatLogger: void dump(java.io.PrintWriter,java.lang.String)>(r87, "  ");

        exitmonitor r1;

     label124:
        return;

     label125:
        goto label004;

     label126:
        $r86 := @caughtexception;

     label127:
        exitmonitor r1;

     label128:
        throw $r86;

        catch java.lang.Throwable from label001 to label002 with label126;
        catch java.lang.Throwable from label002 to label003 with label126;
        catch java.lang.Throwable from label003 to label004 with label126;
        catch java.lang.Throwable from label005 to label006 with label126;
        catch java.lang.Throwable from label007 to label008 with label126;
        catch java.lang.Throwable from label010 to label011 with label126;
        catch java.lang.Throwable from label012 to label013 with label126;
        catch java.lang.Throwable from label013 to label014 with label126;
        catch java.lang.Throwable from label014 to label015 with label126;
        catch java.lang.Throwable from label015 to label016 with label126;
        catch java.lang.Throwable from label017 to label018 with label126;
        catch java.lang.Throwable from label020 to label021 with label126;
        catch java.lang.Throwable from label022 to label023 with label126;
        catch java.lang.Throwable from label023 to label024 with label126;
        catch java.lang.Throwable from label025 to label026 with label126;
        catch java.lang.Throwable from label028 to label029 with label126;
        catch java.lang.Throwable from label030 to label031 with label126;
        catch java.lang.Throwable from label032 to label033 with label126;
        catch java.lang.Throwable from label034 to label035 with label126;
        catch java.lang.Throwable from label035 to label036 with label126;
        catch java.lang.Throwable from label038 to label039 with label126;
        catch java.lang.Throwable from label040 to label041 with label126;
        catch java.lang.Throwable from label042 to label043 with label126;
        catch java.lang.Throwable from label044 to label045 with label126;
        catch java.lang.Throwable from label048 to label049 with label126;
        catch java.lang.Throwable from label049 to label050 with label126;
        catch java.lang.Throwable from label051 to label052 with label126;
        catch java.lang.Throwable from label053 to label054 with label126;
        catch java.lang.Throwable from label054 to label055 with label126;
        catch java.lang.Throwable from label056 to label057 with label126;
        catch java.lang.Throwable from label057 to label058 with label126;
        catch java.lang.Throwable from label059 to label060 with label126;
        catch java.lang.Throwable from label060 to label061 with label126;
        catch java.lang.Throwable from label061 to label062 with label126;
        catch java.lang.Throwable from label062 to label063 with label126;
        catch java.lang.Throwable from label064 to label065 with label126;
        catch java.lang.Throwable from label065 to label066 with label126;
        catch java.lang.Throwable from label067 to label068 with label126;
        catch java.lang.Throwable from label069 to label070 with label126;
        catch java.lang.Throwable from label070 to label071 with label126;
        catch java.lang.Throwable from label072 to label073 with label126;
        catch java.lang.Throwable from label074 to label075 with label126;
        catch java.lang.Throwable from label076 to label077 with label126;
        catch java.lang.Throwable from label078 to label079 with label126;
        catch java.lang.Throwable from label079 to label080 with label126;
        catch java.lang.Throwable from label081 to label082 with label126;
        catch java.lang.Throwable from label083 to label084 with label126;
        catch java.lang.Throwable from label085 to label086 with label126;
        catch java.lang.Throwable from label087 to label088 with label126;
        catch java.lang.Throwable from label089 to label090 with label126;
        catch java.lang.Throwable from label091 to label092 with label126;
        catch java.lang.Throwable from label094 to label095 with label126;
        catch java.lang.Throwable from label101 to label102 with label126;
        catch java.lang.Throwable from label104 to label105 with label126;
        catch java.lang.Throwable from label105 to label106 with label126;
        catch java.lang.Throwable from label107 to label108 with label126;
        catch java.lang.Throwable from label109 to label110 with label126;
        catch java.lang.Throwable from label111 to label112 with label126;
        catch java.lang.Throwable from label112 to label113 with label126;
        catch java.lang.Throwable from label114 to label115 with label126;
        catch java.lang.Throwable from label116 to label117 with label126;
        catch java.lang.Throwable from label118 to label119 with label126;
        catch java.lang.Throwable from label119 to label120 with label126;
        catch java.lang.Throwable from label123 to label124 with label126;
        catch java.lang.Throwable from label127 to label128 with label126;
    }

    void dumpProto(java.io.FileDescriptor)
    {
        com.android.server.AlarmManagerService r0;
        java.lang.Object r2, $r26, $r27, $r29, $r32, $r38, $r39, $r42, $r47, $r49, $r52, $r56, $r57, $r59, $r61, $r64;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z8, $z9, $z12, $z13;
        long l0, $l1, $l2, $l3, $l4, $l5, $l6, $l7, $l8, $l9, $l10, $l14, $l15, $l16, $l38, $l39, $l42, $l43, $l44, $l45, $l46, $l47, $l48, l49, l50, l57, l61, l63, l75, l78;
        com.android.server.AlarmManagerService$FilterStats[] r3;
        com.android.server.AlarmManagerService$BroadcastStats r4, $r34, $r35, r90;
        com.android.server.AlarmManagerService$FilterStats r5, $r30, $r33, r86;
        android.util.proto.ProtoOutputStream $r6;
        com.android.server.AlarmManagerService$Injector $r7, $r8;
        com.android.server.AlarmManagerService$Constants $r9;
        com.android.server.AppStateTracker $r10, $r70;
        int $i11, $i12, $i13, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i40, $i41, i51, i52, i53, i54, i56, i59, i60, i62, i64, i65, i66, i67, i68, i69, i70, i71, i72, i73, i74, i76, i77, i79;
        android.util.SparseArray $r11, $r14, $r23, $r24, $r25, $r37, $r55, $r63, $r68;
        android.util.SparseBooleanArray $r12, $r21, $r43, $r44, $r65, $r66;
        java.util.ArrayList $r13, $r16, $r18, $r19, r78, r87;
        com.android.server.AlarmManagerService$Alarm $r15, $r17, $r50, $r51, $r53, $r54, $r58;
        android.util.SparseLongArray $r20, $r45, $r46;
        com.android.internal.util.LocalLog $r22;
        android.util.ArrayMap $r28, $r31, $r40, $r41, r85, r89;
        java.lang.String $r36;
        com.android.server.AlarmManagerService$InFlight $r48;
        com.android.server.AlarmManagerService$Batch $r60;
        java.lang.Integer $r62, $r67, $r69;
        java.lang.Throwable $r71;
        java.io.FileDescriptor r72;
        java.util.TreeSet r74;
        java.util.Iterator r75, r77, r79, r80, r81, r82, r91;
        android.app.AlarmManager$AlarmClockInfo r76;
        com.android.server.AlarmManagerService$6 r83;

        r0 := @this: com.android.server.AlarmManagerService;

        r72 := @parameter0: java.io.FileDescriptor;

        $r6 = new android.util.proto.ProtoOutputStream;

        specialinvoke $r6.<android.util.proto.ProtoOutputStream: void <init>(java.io.FileDescriptor)>(r72);

        r2 = r0.<com.android.server.AlarmManagerService: java.lang.Object mLock>;

        entermonitor r2;

     label01:
        $r7 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Injector mInjector>;

        l49 = virtualinvoke $r7.<com.android.server.AlarmManagerService$Injector: long getCurrentTimeMillis()>();

        $r8 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Injector mInjector>;

        l50 = virtualinvoke $r8.<com.android.server.AlarmManagerService$Injector: long getElapsedRealtime()>();

        virtualinvoke $r6.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529665L, l49);

        virtualinvoke $r6.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529666L, l50);

        $l1 = r0.<com.android.server.AlarmManagerService: long mLastTimeChangeClockTime>;

        virtualinvoke $r6.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529667L, $l1);

        $l2 = r0.<com.android.server.AlarmManagerService: long mLastTimeChangeRealtime>;

        virtualinvoke $r6.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529668L, $l2);

        $r9 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Constants mConstants>;

        virtualinvoke $r9.<com.android.server.AlarmManagerService$Constants: void dumpProto(android.util.proto.ProtoOutputStream,long)>($r6, 1146756268037L);

        $r10 = r0.<com.android.server.AlarmManagerService: com.android.server.AppStateTracker mAppStateTracker>;

        if $r10 == null goto label02;

        $r70 = r0.<com.android.server.AlarmManagerService: com.android.server.AppStateTracker mAppStateTracker>;

        virtualinvoke $r70.<com.android.server.AppStateTracker: void dumpProto(android.util.proto.ProtoOutputStream,long)>($r6, 1146756268038L);

     label02:
        $z1 = r0.<com.android.server.AlarmManagerService: boolean mInteractive>;

        virtualinvoke $r6.<android.util.proto.ProtoOutputStream: void write(long,boolean)>(1133871366151L, $z1);

        $z2 = r0.<com.android.server.AlarmManagerService: boolean mInteractive>;

        if $z2 != 0 goto label03;

        $l42 = r0.<com.android.server.AlarmManagerService: long mNonInteractiveStartTime>;

        $l43 = l50 - $l42;

        virtualinvoke $r6.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529672L, $l43);

        $l44 = virtualinvoke r0.<com.android.server.AlarmManagerService: long currentNonWakeupFuzzLocked(long)>(l50);

        virtualinvoke $r6.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529673L, $l44);

        $l45 = r0.<com.android.server.AlarmManagerService: long mLastAlarmDeliveryTime>;

        $l46 = l50 - $l45;

        virtualinvoke $r6.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529674L, $l46);

        $l47 = r0.<com.android.server.AlarmManagerService: long mNextNonWakeupDeliveryTime>;

        $l48 = l50 - $l47;

        virtualinvoke $r6.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529675L, $l48);

     label03:
        $l3 = r0.<com.android.server.AlarmManagerService: long mNextNonWakeup>;

        $l4 = $l3 - l50;

        virtualinvoke $r6.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529676L, $l4);

        $l5 = r0.<com.android.server.AlarmManagerService: long mNextWakeup>;

        $l6 = $l5 - l50;

        virtualinvoke $r6.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529677L, $l6);

        $l7 = r0.<com.android.server.AlarmManagerService: long mLastWakeup>;

        $l8 = l50 - $l7;

        virtualinvoke $r6.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529678L, $l8);

        $l9 = r0.<com.android.server.AlarmManagerService: long mNextWakeUpSetAt>;

        $l10 = l50 - $l9;

        virtualinvoke $r6.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529679L, $l10);

        $i11 = r0.<com.android.server.AlarmManagerService: int mNumTimeChanged>;

        virtualinvoke $r6.<android.util.proto.ProtoOutputStream: void write(long,int)>(1112396529680L, $i11);

        r74 = new java.util.TreeSet;

        specialinvoke r74.<java.util.TreeSet: void <init>()>();

        $r11 = r0.<com.android.server.AlarmManagerService: android.util.SparseArray mNextAlarmClockForUser>;

        i51 = virtualinvoke $r11.<android.util.SparseArray: int size()>();

     label04:
        i52 = 0;

     label05:
        if i52 >= i51 goto label08;

     label06:
        $r68 = r0.<com.android.server.AlarmManagerService: android.util.SparseArray mNextAlarmClockForUser>;

        $i41 = virtualinvoke $r68.<android.util.SparseArray: int keyAt(int)>(i52);

        $r69 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i41);

        virtualinvoke r74.<java.util.TreeSet: boolean add(java.lang.Object)>($r69);

     label07:
        i52 = i52 + 1;

        goto label05;

     label08:
        $r12 = r0.<com.android.server.AlarmManagerService: android.util.SparseBooleanArray mPendingSendNextAlarmClockChangedForUser>;

        i53 = virtualinvoke $r12.<android.util.SparseBooleanArray: int size()>();

     label09:
        i54 = 0;

     label10:
        if i54 >= i53 goto label13;

     label11:
        $r66 = r0.<com.android.server.AlarmManagerService: android.util.SparseBooleanArray mPendingSendNextAlarmClockChangedForUser>;

        $i40 = virtualinvoke $r66.<android.util.SparseBooleanArray: int keyAt(int)>(i54);

        $r67 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i40);

        virtualinvoke r74.<java.util.TreeSet: boolean add(java.lang.Object)>($r67);

     label12:
        i54 = i54 + 1;

        goto label10;

     label13:
        r75 = virtualinvoke r74.<java.util.TreeSet: java.util.Iterator iterator()>();

     label14:
        $z3 = interfaceinvoke r75.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label21;

        $r61 = interfaceinvoke r75.<java.util.Iterator: java.lang.Object next()>();

        $r62 = (java.lang.Integer) $r61;

        i56 = virtualinvoke $r62.<java.lang.Integer: int intValue()>();

        $r63 = r0.<com.android.server.AlarmManagerService: android.util.SparseArray mNextAlarmClockForUser>;

        $r64 = virtualinvoke $r63.<android.util.SparseArray: java.lang.Object get(int)>(i56);

        r76 = (android.app.AlarmManager$AlarmClockInfo) $r64;

     label15:
        if r76 == null goto label18;

     label16:
        l57 = virtualinvoke r76.<android.app.AlarmManager$AlarmClockInfo: long getTriggerTime()>();

     label17:
        goto label19;

     label18:
        l57 = 0L;

     label19:
        $r65 = r0.<com.android.server.AlarmManagerService: android.util.SparseBooleanArray mPendingSendNextAlarmClockChangedForUser>;

        z0 = virtualinvoke $r65.<android.util.SparseBooleanArray: boolean get(int)>(i56);

        l0 = virtualinvoke $r6.<android.util.proto.ProtoOutputStream: long start(long)>(2246267895826L);

        virtualinvoke $r6.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464257L, i56);

        virtualinvoke $r6.<android.util.proto.ProtoOutputStream: void write(long,boolean)>(1133871366146L, z0);

        virtualinvoke $r6.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529667L, l57);

        virtualinvoke $r6.<android.util.proto.ProtoOutputStream: void end(long)>(l0);

     label20:
        goto label14;

     label21:
        $r13 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mAlarmBatches>;

        r77 = virtualinvoke $r13.<java.util.ArrayList: java.util.Iterator iterator()>();

     label22:
        $z4 = interfaceinvoke r77.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label24;

        $r59 = interfaceinvoke r77.<java.util.Iterator: java.lang.Object next()>();

        $r60 = (com.android.server.AlarmManagerService$Batch) $r59;

        virtualinvoke $r60.<com.android.server.AlarmManagerService$Batch: void dumpDebug(android.util.proto.ProtoOutputStream,long,long,long)>($r6, 2246267895827L, l50, l49);

     label23:
        goto label22;

     label24:
        i59 = 0;

     label25:
        $r14 = r0.<com.android.server.AlarmManagerService: android.util.SparseArray mPendingBackgroundAlarms>;

        $i12 = virtualinvoke $r14.<android.util.SparseArray: int size()>();

        if i59 >= $i12 goto label31;

        $r55 = r0.<com.android.server.AlarmManagerService: android.util.SparseArray mPendingBackgroundAlarms>;

        $r56 = virtualinvoke $r55.<android.util.SparseArray: java.lang.Object valueAt(int)>(i59);

        r78 = (java.util.ArrayList) $r56;

     label26:
        if r78 == null goto label30;

     label27:
        r79 = virtualinvoke r78.<java.util.ArrayList: java.util.Iterator iterator()>();

     label28:
        $z9 = interfaceinvoke r79.<java.util.Iterator: boolean hasNext()>();

        if $z9 == 0 goto label30;

        $r57 = interfaceinvoke r79.<java.util.Iterator: java.lang.Object next()>();

        $r58 = (com.android.server.AlarmManagerService$Alarm) $r57;

        virtualinvoke $r58.<com.android.server.AlarmManagerService$Alarm: void dumpDebug(android.util.proto.ProtoOutputStream,long,long,long)>($r6, 2246267895828L, l50, l49);

     label29:
        goto label28;

     label30:
        i59 = i59 + 1;

        goto label25;

     label31:
        $r15 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Alarm mPendingIdleUntil>;

        if $r15 == null goto label32;

        $r54 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Alarm mPendingIdleUntil>;

        virtualinvoke $r54.<com.android.server.AlarmManagerService$Alarm: void dumpDebug(android.util.proto.ProtoOutputStream,long,long,long)>($r6, 1146756268053L, l50, l49);

     label32:
        $r16 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mPendingWhileIdleAlarms>;

        r80 = virtualinvoke $r16.<java.util.ArrayList: java.util.Iterator iterator()>();

     label33:
        $z12 = interfaceinvoke r80.<java.util.Iterator: boolean hasNext()>();

        if $z12 == 0 goto label35;

        $r52 = interfaceinvoke r80.<java.util.Iterator: java.lang.Object next()>();

        $r53 = (com.android.server.AlarmManagerService$Alarm) $r52;

        virtualinvoke $r53.<com.android.server.AlarmManagerService$Alarm: void dumpDebug(android.util.proto.ProtoOutputStream,long,long,long)>($r6, 2246267895830L, l50, l49);

     label34:
        goto label33;

     label35:
        $r17 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Alarm mNextWakeFromIdle>;

        if $r17 == null goto label36;

        $r51 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Alarm mNextWakeFromIdle>;

        virtualinvoke $r51.<com.android.server.AlarmManagerService$Alarm: void dumpDebug(android.util.proto.ProtoOutputStream,long,long,long)>($r6, 1146756268055L, l50, l49);

     label36:
        $r18 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mPendingNonWakeupAlarms>;

        r81 = virtualinvoke $r18.<java.util.ArrayList: java.util.Iterator iterator()>();

     label37:
        $z13 = interfaceinvoke r81.<java.util.Iterator: boolean hasNext()>();

        if $z13 == 0 goto label39;

        $r49 = interfaceinvoke r81.<java.util.Iterator: java.lang.Object next()>();

        $r50 = (com.android.server.AlarmManagerService$Alarm) $r49;

        virtualinvoke $r50.<com.android.server.AlarmManagerService$Alarm: void dumpDebug(android.util.proto.ProtoOutputStream,long,long,long)>($r6, 2246267895832L, l50, l49);

     label38:
        goto label37;

     label39:
        $i13 = r0.<com.android.server.AlarmManagerService: int mNumDelayedAlarms>;

        virtualinvoke $r6.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464281L, $i13);

        $l14 = r0.<com.android.server.AlarmManagerService: long mTotalDelayTime>;

        virtualinvoke $r6.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529690L, $l14);

        $l15 = r0.<com.android.server.AlarmManagerService: long mMaxDelayTime>;

        virtualinvoke $r6.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529691L, $l15);

        $l16 = r0.<com.android.server.AlarmManagerService: long mNonInteractiveTime>;

        virtualinvoke $r6.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529692L, $l16);

        $i17 = r0.<com.android.server.AlarmManagerService: int mBroadcastRefCount>;

        virtualinvoke $r6.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464285L, $i17);

        $i18 = r0.<com.android.server.AlarmManagerService: int mSendCount>;

        virtualinvoke $r6.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464286L, $i18);

        $i19 = r0.<com.android.server.AlarmManagerService: int mSendFinishCount>;

        virtualinvoke $r6.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464287L, $i19);

        $i20 = r0.<com.android.server.AlarmManagerService: int mListenerCount>;

        virtualinvoke $r6.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464288L, $i20);

        $i21 = r0.<com.android.server.AlarmManagerService: int mListenerFinishCount>;

        virtualinvoke $r6.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464289L, $i21);

        $r19 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mInFlight>;

        r82 = virtualinvoke $r19.<java.util.ArrayList: java.util.Iterator iterator()>();

     label40:
        $z5 = interfaceinvoke r82.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label42;

        $r47 = interfaceinvoke r82.<java.util.Iterator: java.lang.Object next()>();

        $r48 = (com.android.server.AlarmManagerService$InFlight) $r47;

        virtualinvoke $r48.<com.android.server.AlarmManagerService$InFlight: void dumpDebug(android.util.proto.ProtoOutputStream,long)>($r6, 2246267895842L);

     label41:
        goto label40;

     label42:
        i60 = 0;

     label43:
        $r20 = r0.<com.android.server.AlarmManagerService: android.util.SparseLongArray mLastAllowWhileIdleDispatch>;

        $i22 = virtualinvoke $r20.<android.util.SparseLongArray: int size()>();

        if i60 >= $i22 goto label46;

        l61 = virtualinvoke $r6.<android.util.proto.ProtoOutputStream: long start(long)>(2246267895844L);

        $r45 = r0.<com.android.server.AlarmManagerService: android.util.SparseLongArray mLastAllowWhileIdleDispatch>;

        i62 = virtualinvoke $r45.<android.util.SparseLongArray: int keyAt(int)>(i60);

        $r46 = r0.<com.android.server.AlarmManagerService: android.util.SparseLongArray mLastAllowWhileIdleDispatch>;

        l63 = virtualinvoke $r46.<android.util.SparseLongArray: long valueAt(int)>(i60);

        virtualinvoke $r6.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464257L, i62);

        virtualinvoke $r6.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529666L, l63);

     label44:
        $l38 = specialinvoke r0.<com.android.server.AlarmManagerService: long getWhileIdleMinIntervalLocked(int)>(i62);

        $l39 = l63 + $l38;

        virtualinvoke $r6.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529667L, $l39);

        virtualinvoke $r6.<android.util.proto.ProtoOutputStream: void end(long)>(l61);

     label45:
        i60 = i60 + 1;

        goto label43;

     label46:
        i64 = 0;

     label47:
        $r21 = r0.<com.android.server.AlarmManagerService: android.util.SparseBooleanArray mUseAllowWhileIdleShortTime>;

        $i23 = virtualinvoke $r21.<android.util.SparseBooleanArray: int size()>();

        if i64 >= $i23 goto label49;

        $r43 = r0.<com.android.server.AlarmManagerService: android.util.SparseBooleanArray mUseAllowWhileIdleShortTime>;

        $z8 = virtualinvoke $r43.<android.util.SparseBooleanArray: boolean valueAt(int)>(i64);

        if $z8 == 0 goto label48;

        $r44 = r0.<com.android.server.AlarmManagerService: android.util.SparseBooleanArray mUseAllowWhileIdleShortTime>;

        $i37 = virtualinvoke $r44.<android.util.SparseBooleanArray: int keyAt(int)>(i64);

        virtualinvoke $r6.<android.util.proto.ProtoOutputStream: void write(long,int)>(2220498092067L, $i37);

     label48:
        i64 = i64 + 1;

        goto label47;

     label49:
        $r22 = r0.<com.android.server.AlarmManagerService: com.android.internal.util.LocalLog mLog>;

        virtualinvoke $r22.<com.android.internal.util.LocalLog: void dumpDebug(android.util.proto.ProtoOutputStream,long)>($r6, 1146756268069L);

        r3 = newarray (com.android.server.AlarmManagerService$FilterStats)[10];

        r83 = new com.android.server.AlarmManagerService$6;

        specialinvoke r83.<com.android.server.AlarmManagerService$6: void <init>(com.android.server.AlarmManagerService)>(r0);

     label50:
        i65 = 0;

        i66 = 0;

     label51:
        $r23 = r0.<com.android.server.AlarmManagerService: android.util.SparseArray mBroadcastStats>;

        $i24 = virtualinvoke $r23.<android.util.SparseArray: int size()>();

        if i66 >= $i24 goto label70;

        $r37 = r0.<com.android.server.AlarmManagerService: android.util.SparseArray mBroadcastStats>;

        $r38 = virtualinvoke $r37.<android.util.SparseArray: java.lang.Object valueAt(int)>(i66);

        r85 = (android.util.ArrayMap) $r38;

     label52:
        i67 = 0;

     label53:
        $i29 = virtualinvoke r85.<android.util.ArrayMap: int size()>();

        if i67 >= $i29 goto label69;

        $r39 = virtualinvoke r85.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i67);

        r4 = (com.android.server.AlarmManagerService$BroadcastStats) $r39;

     label54:
        i68 = 0;

        i69 = i65;

     label55:
        $r40 = r4.<com.android.server.AlarmManagerService$BroadcastStats: android.util.ArrayMap filterStats>;

        $i30 = virtualinvoke $r40.<android.util.ArrayMap: int size()>();

        if i68 >= $i30 goto label68;

        $r41 = r4.<com.android.server.AlarmManagerService$BroadcastStats: android.util.ArrayMap filterStats>;

        $r42 = virtualinvoke $r41.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i68);

        r5 = (com.android.server.AlarmManagerService$FilterStats) $r42;

     label56:
        i70 = 0;

        if i69 <= 0 goto label58;

     label57:
        i70 = staticinvoke <java.util.Arrays: int binarySearch(java.lang.Object[],int,int,java.lang.Object,java.util.Comparator)>(r3, 0, i69, r5, r83);

     label58:
        i71 = i70;

        if i70 >= 0 goto label59;

        $i36 = neg i70;

        i71 = $i36 - 1;

     label59:
        $i31 = lengthof r3;

        if i71 >= $i31 goto label66;

        $i32 = lengthof r3;

        $i33 = $i32 - i71;

        i72 = $i33 - 1;

     label60:
        if i72 <= 0 goto label63;

     label61:
        $i35 = i71 + 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r3, i71, r3, $i35, i72);

     label62:
        goto label63;

     label63:
        r3[i71] = r5;

        i73 = i69;

     label64:
        $i34 = lengthof r3;

        if i69 >= $i34 goto label67;

     label65:
        i73 = i69 + 1;

        goto label67;

     label66:
        i73 = i69;

     label67:
        i68 = i68 + 1;

        i69 = i73;

        goto label55;

     label68:
        i67 = i67 + 1;

        i65 = i69;

        goto label53;

     label69:
        i66 = i66 + 1;

        goto label51;

     label70:
        i74 = 0;

     label71:
        if i74 >= i65 goto label76;

     label72:
        l75 = virtualinvoke $r6.<android.util.proto.ProtoOutputStream: long start(long)>(2246267895846L);

     label73:
        r86 = r3[i74];

     label74:
        $r34 = r86.<com.android.server.AlarmManagerService$FilterStats: com.android.server.AlarmManagerService$BroadcastStats mBroadcastStats>;

        $i28 = $r34.<com.android.server.AlarmManagerService$BroadcastStats: int mUid>;

        virtualinvoke $r6.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464257L, $i28);

        $r35 = r86.<com.android.server.AlarmManagerService$FilterStats: com.android.server.AlarmManagerService$BroadcastStats mBroadcastStats>;

        $r36 = $r35.<com.android.server.AlarmManagerService$BroadcastStats: java.lang.String mPackageName>;

        virtualinvoke $r6.<android.util.proto.ProtoOutputStream: void write(long,java.lang.String)>(1138166333442L, $r36);

        virtualinvoke r86.<com.android.server.AlarmManagerService$FilterStats: void dumpDebug(android.util.proto.ProtoOutputStream,long)>($r6, 1146756268035L);

        virtualinvoke $r6.<android.util.proto.ProtoOutputStream: void end(long)>(l75);

     label75:
        i74 = i74 + 1;

        goto label71;

     label76:
        r87 = new java.util.ArrayList;

        specialinvoke r87.<java.util.ArrayList: void <init>()>();

     label77:
        i76 = 0;

     label78:
        $r24 = r0.<com.android.server.AlarmManagerService: android.util.SparseArray mBroadcastStats>;

        $i25 = virtualinvoke $r24.<android.util.SparseArray: int size()>();

        if i76 >= $i25 goto label90;

        $r25 = r0.<com.android.server.AlarmManagerService: android.util.SparseArray mBroadcastStats>;

        $r26 = virtualinvoke $r25.<android.util.SparseArray: java.lang.Object valueAt(int)>(i76);

        r89 = (android.util.ArrayMap) $r26;

     label79:
        i77 = 0;

     label80:
        $i26 = virtualinvoke r89.<android.util.ArrayMap: int size()>();

        if i77 >= $i26 goto label89;

        l78 = virtualinvoke $r6.<android.util.proto.ProtoOutputStream: long start(long)>(2246267895847L);

        $r27 = virtualinvoke r89.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i77);

        r90 = (com.android.server.AlarmManagerService$BroadcastStats) $r27;

        virtualinvoke r90.<com.android.server.AlarmManagerService$BroadcastStats: void dumpDebug(android.util.proto.ProtoOutputStream,long)>($r6, 1146756268033L);

        virtualinvoke r87.<java.util.ArrayList: void clear()>();

     label81:
        i79 = 0;

     label82:
        $r28 = r90.<com.android.server.AlarmManagerService$BroadcastStats: android.util.ArrayMap filterStats>;

        $i27 = virtualinvoke $r28.<android.util.ArrayMap: int size()>();

        if i79 >= $i27 goto label84;

        $r31 = r90.<com.android.server.AlarmManagerService$BroadcastStats: android.util.ArrayMap filterStats>;

        $r32 = virtualinvoke $r31.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i79);

        $r33 = (com.android.server.AlarmManagerService$FilterStats) $r32;

        virtualinvoke r87.<java.util.ArrayList: boolean add(java.lang.Object)>($r33);

     label83:
        i79 = i79 + 1;

        goto label82;

     label84:
        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r87, r83);

        r91 = virtualinvoke r87.<java.util.ArrayList: java.util.Iterator iterator()>();

     label85:
        $z6 = interfaceinvoke r91.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label87;

        $r29 = interfaceinvoke r91.<java.util.Iterator: java.lang.Object next()>();

        $r30 = (com.android.server.AlarmManagerService$FilterStats) $r29;

        virtualinvoke $r30.<com.android.server.AlarmManagerService$FilterStats: void dumpDebug(android.util.proto.ProtoOutputStream,long)>($r6, 2246267895810L);

     label86:
        goto label85;

     label87:
        virtualinvoke $r6.<android.util.proto.ProtoOutputStream: void end(long)>(l78);

     label88:
        i77 = i77 + 1;

        goto label80;

     label89:
        i76 = i76 + 1;

        goto label78;

     label90:
        exitmonitor r2;

     label91:
        virtualinvoke $r6.<android.util.proto.ProtoOutputStream: void flush()>();

        return;

     label92:
        $r71 := @caughtexception;

     label93:
        exitmonitor r2;

     label94:
        throw $r71;

        catch java.lang.Throwable from label01 to label02 with label92;
        catch java.lang.Throwable from label02 to label03 with label92;
        catch java.lang.Throwable from label03 to label04 with label92;
        catch java.lang.Throwable from label06 to label07 with label92;
        catch java.lang.Throwable from label08 to label09 with label92;
        catch java.lang.Throwable from label11 to label12 with label92;
        catch java.lang.Throwable from label13 to label14 with label92;
        catch java.lang.Throwable from label14 to label15 with label92;
        catch java.lang.Throwable from label16 to label17 with label92;
        catch java.lang.Throwable from label19 to label20 with label92;
        catch java.lang.Throwable from label21 to label22 with label92;
        catch java.lang.Throwable from label22 to label23 with label92;
        catch java.lang.Throwable from label25 to label26 with label92;
        catch java.lang.Throwable from label27 to label28 with label92;
        catch java.lang.Throwable from label28 to label29 with label92;
        catch java.lang.Throwable from label31 to label32 with label92;
        catch java.lang.Throwable from label32 to label33 with label92;
        catch java.lang.Throwable from label33 to label34 with label92;
        catch java.lang.Throwable from label35 to label36 with label92;
        catch java.lang.Throwable from label36 to label37 with label92;
        catch java.lang.Throwable from label37 to label38 with label92;
        catch java.lang.Throwable from label39 to label40 with label92;
        catch java.lang.Throwable from label40 to label41 with label92;
        catch java.lang.Throwable from label43 to label44 with label92;
        catch java.lang.Throwable from label44 to label45 with label92;
        catch java.lang.Throwable from label47 to label48 with label92;
        catch java.lang.Throwable from label49 to label50 with label92;
        catch java.lang.Throwable from label51 to label52 with label92;
        catch java.lang.Throwable from label53 to label54 with label92;
        catch java.lang.Throwable from label55 to label56 with label92;
        catch java.lang.Throwable from label57 to label58 with label92;
        catch java.lang.Throwable from label59 to label60 with label92;
        catch java.lang.Throwable from label61 to label62 with label92;
        catch java.lang.Throwable from label64 to label65 with label92;
        catch java.lang.Throwable from label72 to label73 with label92;
        catch java.lang.Throwable from label74 to label75 with label92;
        catch java.lang.Throwable from label76 to label77 with label92;
        catch java.lang.Throwable from label78 to label79 with label92;
        catch java.lang.Throwable from label80 to label81 with label92;
        catch java.lang.Throwable from label82 to label83 with label92;
        catch java.lang.Throwable from label84 to label85 with label92;
        catch java.lang.Throwable from label85 to label86 with label92;
        catch java.lang.Throwable from label87 to label88 with label92;
        catch java.lang.Throwable from label90 to label91 with label92;
        catch java.lang.Throwable from label93 to label94 with label92;
    }

    protected void finalize() throws java.lang.Throwable
    {
        com.android.server.AlarmManagerService r0;
        com.android.server.AlarmManagerService$Injector $r2;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.AlarmManagerService;

     label1:
        $r2 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Injector mInjector>;

        virtualinvoke $r2.<com.android.server.AlarmManagerService$Injector: void close()>();

     label2:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        return;

     label3:
        $r3 := @caughtexception;

        specialinvoke r0.<java.lang.Object: void finalize()>();

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    android.app.AlarmManager$AlarmClockInfo getNextAlarmClockImpl(int)
    {
        com.android.server.AlarmManagerService r0;
        int i0;
        java.lang.Object r1, $r3;
        android.util.SparseArray $r2;
        java.lang.Throwable $r4;
        android.app.AlarmManager$AlarmClockInfo r5;

        r0 := @this: com.android.server.AlarmManagerService;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.AlarmManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.AlarmManagerService: android.util.SparseArray mNextAlarmClockForUser>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r5 = (android.app.AlarmManager$AlarmClockInfo) $r3;

        exitmonitor r1;

     label2:
        return r5;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    long getNextWakeFromIdleTimeImpl()
    {
        com.android.server.AlarmManagerService r0;
        java.lang.Object r1;
        com.android.server.AlarmManagerService$Alarm $r3, $r4;
        java.lang.Throwable $r5;
        long l0;

        r0 := @this: com.android.server.AlarmManagerService;

        r1 = r0.<com.android.server.AlarmManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Alarm mNextWakeFromIdle>;

        if $r3 == null goto label3;

        $r4 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Alarm mNextWakeFromIdle>;

        l0 = $r4.<com.android.server.AlarmManagerService$Alarm: long whenElapsed>;

     label2:
        goto label4;

     label3:
        l0 = 9223372036854775807L;

     label4:
        exitmonitor r1;

     label5:
        return l0;

     label6:
        $r5 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    int getQuotaForBucketLocked(int)
    {
        com.android.server.AlarmManagerService r0;
        int i0, $i2;
        byte b1;
        com.android.server.AlarmManagerService$Constants $r1;
        int[] $r2;

        r0 := @this: com.android.server.AlarmManagerService;

        i0 := @parameter0: int;

        if i0 > 10 goto label1;

        b1 = 0;

        goto label5;

     label1:
        if i0 > 20 goto label2;

        b1 = 1;

        goto label5;

     label2:
        if i0 > 30 goto label3;

        b1 = 2;

        goto label5;

     label3:
        if i0 >= 50 goto label4;

        b1 = 3;

        goto label5;

     label4:
        b1 = 4;

     label5:
        $r1 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Constants mConstants>;

        $r2 = $r1.<com.android.server.AlarmManagerService$Constants: int[] APP_STANDBY_QUOTAS>;

        $i2 = $r2[b1];

        return $i2;
    }

    boolean haveAlarmsTimeTickAlarm(java.util.ArrayList)
    {
        com.android.server.AlarmManagerService r0;
        java.util.ArrayList r1;
        int i0, $i1, i2;
        java.lang.Object $r2;
        com.android.server.AlarmManagerService$Alarm $r3;
        android.app.IAlarmListener $r4, $r5;

        r0 := @this: com.android.server.AlarmManagerService;

        r1 := @parameter0: java.util.ArrayList;

        $i1 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if $i1 != 0 goto label1;

        return 0;

     label1:
        i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        i2 = 0;

     label2:
        if i2 >= i0 goto label4;

        $r2 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r3 = (com.android.server.AlarmManagerService$Alarm) $r2;

        $r5 = $r3.<com.android.server.AlarmManagerService$Alarm: android.app.IAlarmListener listener>;

        $r4 = r0.<com.android.server.AlarmManagerService: android.app.IAlarmListener mTimeTickTrigger>;

        if $r5 != $r4 goto label3;

        return 1;

     label3:
        i2 = i2 + 1;

        goto label2;

     label4:
        return 0;
    }

    boolean haveBatchesTimeTickAlarm(java.util.ArrayList)
    {
        com.android.server.AlarmManagerService r0;
        java.util.ArrayList r1, $r4;
        int i0, i1;
        java.lang.Object $r2;
        com.android.server.AlarmManagerService$Batch $r3;
        boolean $z0;

        r0 := @this: com.android.server.AlarmManagerService;

        r1 := @parameter0: java.util.ArrayList;

        i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r2 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r3 = (com.android.server.AlarmManagerService$Batch) $r2;

        $r4 = $r3.<com.android.server.AlarmManagerService$Batch: java.util.ArrayList alarms>;

        $z0 = virtualinvoke r0.<com.android.server.AlarmManagerService: boolean haveAlarmsTimeTickAlarm(java.util.ArrayList)>($r4);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    void interactiveStateChangedLocked(boolean)
    {
        com.android.server.AlarmManagerService r0;
        boolean z0, $z1;
        com.android.server.AlarmManagerService$Injector $r1;
        java.util.ArrayList $r2, $r3, $r4;
        int $i0;
        long $l1, $l3, $l4, $l5, $l6, l8, l9, l10, l12;
        byte $b2, $b7, $b11;
        com.android.server.AlarmManagerService$AlarmHandler $r5;
        com.android.server._$$Lambda$AlarmManagerService$gKXZ864LsHRTGbnNeLAgHKL2YPk $r6;

        r0 := @this: com.android.server.AlarmManagerService;

        z0 := @parameter0: boolean;

        $z1 = r0.<com.android.server.AlarmManagerService: boolean mInteractive>;

        if $z1 == z0 goto label5;

        r0.<com.android.server.AlarmManagerService: boolean mInteractive> = z0;

        $r1 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Injector mInjector>;

        l8 = virtualinvoke $r1.<com.android.server.AlarmManagerService$Injector: long getElapsedRealtime()>();

        if z0 == 0 goto label4;

        $r2 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mPendingNonWakeupAlarms>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if $i0 <= 0 goto label2;

        $l3 = r0.<com.android.server.AlarmManagerService: long mStartCurrentDelayTime>;

        l9 = l8 - $l3;

        $l4 = r0.<com.android.server.AlarmManagerService: long mTotalDelayTime>;

        $l5 = $l4 + l9;

        r0.<com.android.server.AlarmManagerService: long mTotalDelayTime> = $l5;

        $l6 = r0.<com.android.server.AlarmManagerService: long mMaxDelayTime>;

        $b7 = $l6 cmp l9;

        if $b7 >= 0 goto label1;

        r0.<com.android.server.AlarmManagerService: long mMaxDelayTime> = l9;

     label1:
        $r3 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mPendingNonWakeupAlarms>;

        virtualinvoke r0.<com.android.server.AlarmManagerService: void deliverAlarmsLocked(java.util.ArrayList,long)>($r3, l8);

        $r4 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mPendingNonWakeupAlarms>;

        virtualinvoke $r4.<java.util.ArrayList: void clear()>();

     label2:
        l10 = r0.<com.android.server.AlarmManagerService: long mNonInteractiveStartTime>;

        $b11 = l10 cmp 0L;

        if $b11 <= 0 goto label3;

        l12 = l8 - l10;

        $l1 = r0.<com.android.server.AlarmManagerService: long mNonInteractiveTime>;

        $b2 = l12 cmp $l1;

        if $b2 <= 0 goto label3;

        r0.<com.android.server.AlarmManagerService: long mNonInteractiveTime> = l12;

     label3:
        $r5 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$AlarmHandler mHandler>;

        $r6 = new com.android.server._$$Lambda$AlarmManagerService$gKXZ864LsHRTGbnNeLAgHKL2YPk;

        specialinvoke $r6.<com.android.server._$$Lambda$AlarmManagerService$gKXZ864LsHRTGbnNeLAgHKL2YPk: void <init>(com.android.server.AlarmManagerService)>(r0);

        virtualinvoke $r5.<com.android.server.AlarmManagerService$AlarmHandler: boolean post(java.lang.Runnable)>($r6);

        goto label5;

     label4:
        r0.<com.android.server.AlarmManagerService: long mNonInteractiveStartTime> = l8;

     label5:
        return;
    }

    public void lambda$interactiveStateChangedLocked$5$AlarmManagerService()
    {
        com.android.server.AlarmManagerService r0;
        android.content.Context $r1;
        android.os.UserHandle $r2;
        android.content.Intent $r3;

        r0 := @this: com.android.server.AlarmManagerService;

        $r1 = virtualinvoke r0.<com.android.server.AlarmManagerService: android.content.Context getContext()>();

        $r3 = r0.<com.android.server.AlarmManagerService: android.content.Intent mTimeTickIntent>;

        $r2 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r1.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)>($r3, $r2);

        return;
    }

    public boolean lambda$removeLocked$2$AlarmManagerService(java.lang.String, android.util.MutableBoolean, com.android.server.AlarmManagerService$Alarm)
    {
        com.android.server.AlarmManagerService r0;
        java.lang.String r1;
        android.util.MutableBoolean r2;
        com.android.server.AlarmManagerService$Alarm r3, $r4;
        boolean z0;

        r0 := @this: com.android.server.AlarmManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.util.MutableBoolean;

        r3 := @parameter2: com.android.server.AlarmManagerService$Alarm;

        z0 = virtualinvoke r3.<com.android.server.AlarmManagerService$Alarm: boolean matches(java.lang.String)>(r1);

        if z0 == 0 goto label1;

        $r4 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Alarm mNextWakeFromIdle>;

        if r3 != $r4 goto label1;

        r2.<android.util.MutableBoolean: boolean value> = 1;

     label1:
        return z0;
    }

    boolean lookForPackageLocked(java.lang.String)
    {
        com.android.server.AlarmManagerService r0;
        java.lang.String r1;
        java.util.ArrayList $r2, $r3, $r4, $r7;
        int $i0, $i1, i2, i3;
        java.lang.Object $r5, $r8;
        com.android.server.AlarmManagerService$Alarm $r6;
        boolean $z0, $z1;
        com.android.server.AlarmManagerService$Batch $r9;

        r0 := @this: com.android.server.AlarmManagerService;

        r1 := @parameter0: java.lang.String;

        i2 = 0;

     label1:
        $r2 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mAlarmBatches>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if i2 >= $i0 goto label3;

        $r7 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mAlarmBatches>;

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r9 = (com.android.server.AlarmManagerService$Batch) $r8;

        $z1 = virtualinvoke $r9.<com.android.server.AlarmManagerService$Batch: boolean hasPackage(java.lang.String)>(r1);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        i3 = 0;

     label4:
        $r3 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mPendingWhileIdleAlarms>;

        $i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if i3 >= $i1 goto label6;

        $r4 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mPendingWhileIdleAlarms>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        $r6 = (com.android.server.AlarmManagerService$Alarm) $r5;

        $z0 = virtualinvoke $r6.<com.android.server.AlarmManagerService$Alarm: boolean matches(java.lang.String)>(r1);

        if $z0 == 0 goto label5;

        return 1;

     label5:
        i3 = i3 + 1;

        goto label4;

     label6:
        return 0;
    }

    public void onBootPhase(int)
    {
        com.android.server.AlarmManagerService r0;
        int i0;
        java.lang.Object r1, $r7, $r9, $r11, $r13, $r14;
        com.android.server.usage.AppStandbyInternal r2;
        com.android.server.AlarmManagerService$Constants $r3;
        android.content.Context $r4, $r6;
        android.content.ContentResolver $r5;
        android.app.AppOpsManager $r8;
        com.android.server.DeviceIdleInternal $r10;
        android.app.usage.UsageStatsManagerInternal $r12;
        com.android.server.AppStateTracker$Listener $r15;
        com.android.server.AlarmManagerService$ClockReceiver $r16, $r17;
        java.lang.Throwable $r18;
        com.android.server.AlarmManagerService$AppStandbyTracker r19;
        com.android.server.AppStateTracker r20;

        r0 := @this: com.android.server.AlarmManagerService;

        i0 := @parameter0: int;

        if i0 != 500 goto label6;

        r1 = r0.<com.android.server.AlarmManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Constants mConstants>;

        $r4 = virtualinvoke r0.<com.android.server.AlarmManagerService: android.content.Context getContext()>();

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        virtualinvoke $r3.<com.android.server.AlarmManagerService$Constants: void start(android.content.ContentResolver)>($r5);

        $r6 = virtualinvoke r0.<com.android.server.AlarmManagerService: android.content.Context getContext()>();

        $r7 = virtualinvoke $r6.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("appops");

        $r8 = (android.app.AppOpsManager) $r7;

        r0.<com.android.server.AlarmManagerService: android.app.AppOpsManager mAppOps> = $r8;

        $r9 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Lcom/android/server/DeviceIdleInternal;");

        $r10 = (com.android.server.DeviceIdleInternal) $r9;

        r0.<com.android.server.AlarmManagerService: com.android.server.DeviceIdleInternal mLocalDeviceIdleController> = $r10;

        $r11 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/app/usage/UsageStatsManagerInternal;");

        $r12 = (android.app.usage.UsageStatsManagerInternal) $r11;

        r0.<com.android.server.AlarmManagerService: android.app.usage.UsageStatsManagerInternal mUsageStatsManagerInternal> = $r12;

        $r13 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Lcom/android/server/usage/AppStandbyInternal;");

        r2 = (com.android.server.usage.AppStandbyInternal) $r13;

        r19 = new com.android.server.AlarmManagerService$AppStandbyTracker;

        specialinvoke r19.<com.android.server.AlarmManagerService$AppStandbyTracker: void <init>(com.android.server.AlarmManagerService,com.android.server.AlarmManagerService$1)>(r0, null);

        interfaceinvoke r2.<com.android.server.usage.AppStandbyInternal: void addListener(com.android.server.usage.AppStandbyInternal$AppIdleStateChangeListener)>(r19);

        $r14 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Lcom/android/server/AppStateTracker;");

        r20 = (com.android.server.AppStateTracker) $r14;

        r0.<com.android.server.AlarmManagerService: com.android.server.AppStateTracker mAppStateTracker> = r20;

        $r15 = r0.<com.android.server.AlarmManagerService: com.android.server.AppStateTracker$Listener mForceAppStandbyListener>;

        virtualinvoke r20.<com.android.server.AppStateTracker: void addListener(com.android.server.AppStateTracker$Listener)>($r15);

        $r16 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$ClockReceiver mClockReceiver>;

        virtualinvoke $r16.<com.android.server.AlarmManagerService$ClockReceiver: void scheduleTimeTickEvent()>();

        $r17 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$ClockReceiver mClockReceiver>;

        virtualinvoke $r17.<com.android.server.AlarmManagerService$ClockReceiver: void scheduleDateChangedEvent()>();

        exitmonitor r1;

     label2:
        goto label6;

     label3:
        $r18 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r18;

     label6:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void onStart()
    {
        com.android.server.AlarmManagerService r0;
        java.lang.Object r1;
        long l0, $l2, $l3, $l4, $l5, $l6, $l7, $l11;
        int i1;
        com.android.server.AlarmManagerService$UidObserver r2;
        com.android.server.AlarmManagerService$Injector $r3, $r8, $r9, $r10, $r17, $r22, $r26, $r31;
        com.android.server.AlarmManagerService$2 $r4;
        com.android.server.AlarmManagerService$AlarmHandler $r5, r34;
        java.lang.String $r6, $r30;
        java.io.File $r7;
        byte $b8;
        android.os.PowerManager$WakeLock $r11;
        android.content.Intent $r12, r38, r40;
        android.content.Context $r14;
        android.os.UserHandle $r15;
        android.app.PendingIntent $r16;
        com.android.server.AlarmManagerService$ClockReceiver $r18;
        com.android.server.AlarmManagerService$ChargingReceiver $r19;
        com.android.server.AlarmManagerService$InteractiveStateReceiver $r20;
        com.android.server.AlarmManagerService$UninstallReceiver $r21;
        boolean $z0;
        com.android.server.AlarmManagerService$LocalService $r23;
        android.os.IBinder $r24;
        java.lang.Throwable $r32;
        android.os.RemoteException $r33;
        com.android.server.AlarmManagerService$Constants r35;
        com.android.server.AlarmManagerService$AppWakeupHistory r36;
        java.lang.StringBuilder r37;
        com.android.server.AlarmManagerService$3 r39;
        com.android.server.AlarmManagerService$AlarmThread r41;
        android.app.IActivityManager r42;

        r0 := @this: com.android.server.AlarmManagerService;

        $r3 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Injector mInjector>;

        virtualinvoke $r3.<com.android.server.AlarmManagerService$Injector: void init()>();

        $r4 = new com.android.server.AlarmManagerService$2;

        specialinvoke $r4.<com.android.server.AlarmManagerService$2: void <init>(com.android.server.AlarmManagerService)>(r0);

        r0.<com.android.server.AlarmManagerService: android.os.IBinder$DeathRecipient mListenerDeathRecipient> = $r4;

        r1 = r0.<com.android.server.AlarmManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        r34 = new com.android.server.AlarmManagerService$AlarmHandler;

        specialinvoke r34.<com.android.server.AlarmManagerService$AlarmHandler: void <init>(com.android.server.AlarmManagerService)>(r0);

        r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$AlarmHandler mHandler> = r34;

        r35 = new com.android.server.AlarmManagerService$Constants;

        $r5 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$AlarmHandler mHandler>;

        specialinvoke r35.<com.android.server.AlarmManagerService$Constants: void <init>(com.android.server.AlarmManagerService,android.os.Handler)>(r0, $r5);

        r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Constants mConstants> = r35;

        r36 = new com.android.server.AlarmManagerService$AppWakeupHistory;

        specialinvoke r36.<com.android.server.AlarmManagerService$AppWakeupHistory: void <init>(long)>(3600000L);

        r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$AppWakeupHistory mAppWakeupHistory> = r36;

        r0.<com.android.server.AlarmManagerService: long mNextNonWakeup> = 0L;

        r0.<com.android.server.AlarmManagerService: long mNextWakeup> = 0L;

        $r6 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("persist.sys.timezone");

        virtualinvoke r0.<com.android.server.AlarmManagerService: void setTimeZoneImpl(java.lang.String)>($r6);

        $l2 = staticinvoke <android.os.SystemProperties: long getLong(java.lang.String,long)>("ro.build.date.utc", -1L);

        $l3 = $l2 * 1000L;

        $r7 = staticinvoke <android.os.Environment: java.io.File getRootDirectory()>();

        $l4 = virtualinvoke $r7.<java.io.File: long lastModified()>();

        $l5 = <android.os.Build: long TIME>;

        $l6 = staticinvoke <java.lang.Long: long max(long,long)>($l4, $l5);

        l0 = staticinvoke <java.lang.Long: long max(long,long)>($l3, $l6);

        $r8 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Injector mInjector>;

        $l7 = virtualinvoke $r8.<com.android.server.AlarmManagerService$Injector: long getCurrentTimeMillis()>();

        $b8 = $l7 cmp l0;

        if $b8 >= 0 goto label02;

        r37 = new java.lang.StringBuilder;

        specialinvoke r37.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Current time only ");

        $r26 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Injector mInjector>;

        $l11 = virtualinvoke $r26.<com.android.server.AlarmManagerService$Injector: long getCurrentTimeMillis()>();

        virtualinvoke r37.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l11);

        virtualinvoke r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", advancing to build time ");

        virtualinvoke r37.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r30 = virtualinvoke r37.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("AlarmManager", $r30);

        $r31 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Injector mInjector>;

        virtualinvoke $r31.<com.android.server.AlarmManagerService$Injector: void setKernelTime(long)>(l0);

     label02:
        $r9 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Injector mInjector>;

        i1 = virtualinvoke $r9.<com.android.server.AlarmManagerService$Injector: int getSystemUiUid()>();

        r0.<com.android.server.AlarmManagerService: int mSystemUiUid> = i1;

     label03:
        if i1 > 0 goto label05;

     label04:
        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("AlarmManager", "SysUI package not found!");

     label05:
        $r10 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Injector mInjector>;

        $r11 = virtualinvoke $r10.<com.android.server.AlarmManagerService$Injector: android.os.PowerManager$WakeLock getAlarmWakeLock()>();

        r0.<com.android.server.AlarmManagerService: android.os.PowerManager$WakeLock mWakeLock> = $r11;

        r38 = new android.content.Intent;

        specialinvoke r38.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.TIME_TICK");

        $r12 = virtualinvoke r38.<android.content.Intent: android.content.Intent addFlags(int)>(1344274432);

        r0.<com.android.server.AlarmManagerService: android.content.Intent mTimeTickIntent> = $r12;

        r39 = new com.android.server.AlarmManagerService$3;

        specialinvoke r39.<com.android.server.AlarmManagerService$3: void <init>(com.android.server.AlarmManagerService)>(r0);

        r0.<com.android.server.AlarmManagerService: android.app.IAlarmListener mTimeTickTrigger> = r39;

        r40 = new android.content.Intent;

        specialinvoke r40.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.DATE_CHANGED");

        virtualinvoke r40.<android.content.Intent: android.content.Intent addFlags(int)>(538968064);

        $r14 = virtualinvoke r0.<com.android.server.AlarmManagerService: android.content.Context getContext()>();

        $r15 = <android.os.UserHandle: android.os.UserHandle ALL>;

        $r16 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getBroadcastAsUser(android.content.Context,int,android.content.Intent,int,android.os.UserHandle)>($r14, 0, r40, 67108864, $r15);

        r0.<com.android.server.AlarmManagerService: android.app.PendingIntent mDateChangeSender> = $r16;

        $r17 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Injector mInjector>;

        $r18 = virtualinvoke $r17.<com.android.server.AlarmManagerService$Injector: com.android.server.AlarmManagerService$ClockReceiver getClockReceiver(com.android.server.AlarmManagerService)>(r0);

        r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$ClockReceiver mClockReceiver> = $r18;

        $r19 = new com.android.server.AlarmManagerService$ChargingReceiver;

        specialinvoke $r19.<com.android.server.AlarmManagerService$ChargingReceiver: void <init>(com.android.server.AlarmManagerService)>(r0);

        $r20 = new com.android.server.AlarmManagerService$InteractiveStateReceiver;

        specialinvoke $r20.<com.android.server.AlarmManagerService$InteractiveStateReceiver: void <init>(com.android.server.AlarmManagerService)>(r0);

        $r21 = new com.android.server.AlarmManagerService$UninstallReceiver;

        specialinvoke $r21.<com.android.server.AlarmManagerService$UninstallReceiver: void <init>(com.android.server.AlarmManagerService)>(r0);

        $r22 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Injector mInjector>;

        $z0 = virtualinvoke $r22.<com.android.server.AlarmManagerService$Injector: boolean isAlarmDriverPresent()>();

        if $z0 == 0 goto label07;

        r41 = new com.android.server.AlarmManagerService$AlarmThread;

        specialinvoke r41.<com.android.server.AlarmManagerService$AlarmThread: void <init>(com.android.server.AlarmManagerService)>(r0);

        virtualinvoke r41.<com.android.server.AlarmManagerService$AlarmThread: void start()>();

     label06:
        goto label08;

     label07:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AlarmManager", "Failed to open alarm driver. Falling back to a handler.");

     label08:
        r42 = staticinvoke <android.app.ActivityManager: android.app.IActivityManager getService()>();

        r2 = new com.android.server.AlarmManagerService$UidObserver;

        specialinvoke r2.<com.android.server.AlarmManagerService$UidObserver: void <init>(com.android.server.AlarmManagerService)>(r0);

        interfaceinvoke r42.<android.app.IActivityManager: void registerUidObserver(android.app.IUidObserver,int,int,java.lang.String)>(r2, 14, -1, null);

     label09:
        goto label11;

     label10:
        $r33 := @caughtexception;

     label11:
        exitmonitor r1;

     label12:
        $r23 = new com.android.server.AlarmManagerService$LocalService;

        specialinvoke $r23.<com.android.server.AlarmManagerService$LocalService: void <init>(com.android.server.AlarmManagerService,com.android.server.AlarmManagerService$1)>(r0, null);

        virtualinvoke r0.<com.android.server.AlarmManagerService: void publishLocalService(java.lang.Class,java.lang.Object)>(class "Lcom/android/server/AlarmManagerInternal;", $r23);

        $r24 = r0.<com.android.server.AlarmManagerService: android.os.IBinder mService>;

        virtualinvoke r0.<com.android.server.AlarmManagerService: void publishBinderService(java.lang.String,android.os.IBinder)>("alarm", $r24);

        return;

     label13:
        $r32 := @caughtexception;

     label14:
        exitmonitor r1;

     label15:
        throw $r32;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label02 to label03 with label13;
        catch java.lang.Throwable from label04 to label05 with label13;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch android.os.RemoteException from label08 to label09 with label10;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
    }

    void reAddAlarmLocked(com.android.server.AlarmManagerService$Alarm, long, boolean)
    {
        com.android.server.AlarmManagerService r0;
        com.android.server.AlarmManagerService$Alarm r1;
        boolean z0;
        long l0, $l1, $l3, $l4, $l6, $l8, $l9, $l10, l11, l12;
        int $i2;
        byte $b5, $b7;

        r0 := @this: com.android.server.AlarmManagerService;

        r1 := @parameter0: com.android.server.AlarmManagerService$Alarm;

        l11 := @parameter1: long;

        z0 := @parameter2: boolean;

        $l1 = r1.<com.android.server.AlarmManagerService$Alarm: long origWhen>;

        r1.<com.android.server.AlarmManagerService$Alarm: long when> = $l1;

        $l3 = r1.<com.android.server.AlarmManagerService$Alarm: long when>;

        $i2 = r1.<com.android.server.AlarmManagerService$Alarm: int type>;

        l0 = specialinvoke r0.<com.android.server.AlarmManagerService: long convertToElapsed(long,int)>($l3, $i2);

        $l4 = r1.<com.android.server.AlarmManagerService$Alarm: long windowLength>;

        $b5 = $l4 cmp 0L;

        if $b5 != 0 goto label1;

        l12 = l0;

        goto label3;

     label1:
        $l6 = r1.<com.android.server.AlarmManagerService$Alarm: long windowLength>;

        $b7 = $l6 cmp 0L;

        if $b7 <= 0 goto label2;

        $l9 = r1.<com.android.server.AlarmManagerService$Alarm: long windowLength>;

        $l10 = $l9 + l0;

        l12 = staticinvoke <com.android.server.AlarmManagerService: long clampPositive(long)>($l10);

        goto label3;

     label2:
        $l8 = r1.<com.android.server.AlarmManagerService$Alarm: long repeatInterval>;

        l12 = staticinvoke <com.android.server.AlarmManagerService: long maxTriggerTime(long,long,long)>(l11, l0, $l8);

     label3:
        r1.<com.android.server.AlarmManagerService$Alarm: long whenElapsed> = l0;

        r1.<com.android.server.AlarmManagerService$Alarm: long expectedWhenElapsed> = l0;

        r1.<com.android.server.AlarmManagerService$Alarm: long maxWhenElapsed> = l12;

        r1.<com.android.server.AlarmManagerService$Alarm: long expectedMaxWhenElapsed> = l12;

        specialinvoke r0.<com.android.server.AlarmManagerService: void setImplLocked(com.android.server.AlarmManagerService$Alarm,boolean,boolean)>(r1, 1, z0);

        return;
    }

    void rebatchAllAlarms()
    {
        com.android.server.AlarmManagerService r0;
        java.lang.Object r1;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.AlarmManagerService;

        r1 = r0.<com.android.server.AlarmManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        virtualinvoke r0.<com.android.server.AlarmManagerService: void rebatchAllAlarmsLocked(boolean)>(1);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    void rebatchAllAlarmsLocked(boolean)
    {
        com.android.server.AlarmManagerService r0;
        long l0, l2;
        int i1, i3, i4, $i5, $i6, i11, i12, $i13, $i14, i15;
        java.util.ArrayList r1, $r3, $r4, $r5, $r19, $r31, $r32, $r34, $r39, $r40, $r41;
        com.android.internal.util.StatLogger $r2, $r6;
        boolean $z0, $z1, $z2, z3, z4, $z5, z6;
        java.lang.StringBuilder $r7, $r13, $r21;
        java.lang.String $r12, $r18, $r27;
        com.android.server.AlarmManagerService$Alarm $r20, $r25, $r28, $r30, r35;
        java.lang.Object $r29, $r33;
        com.android.server.AlarmManagerService$Injector $r36;
        com.android.server.AlarmManagerService$Batch r37;

        r0 := @this: com.android.server.AlarmManagerService;

        z3 := @parameter0: boolean;

        $r2 = r0.<com.android.server.AlarmManagerService: com.android.internal.util.StatLogger mStatLogger>;

        l0 = virtualinvoke $r2.<com.android.internal.util.StatLogger: long getTime()>();

        $r3 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mAlarmBatches>;

        $i5 = staticinvoke <com.android.server.AlarmManagerService: int getAlarmCount(java.util.ArrayList)>($r3);

        $r4 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mPendingWhileIdleAlarms>;

        $i6 = staticinvoke <com.android.internal.util.ArrayUtils: int size(java.util.Collection)>($r4);

        i1 = $i5 + $i6;

        $r5 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mAlarmBatches>;

        $z0 = virtualinvoke r0.<com.android.server.AlarmManagerService: boolean haveBatchesTimeTickAlarm(java.util.ArrayList)>($r5);

        if $z0 != 0 goto label02;

        $r31 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mPendingWhileIdleAlarms>;

        $z2 = virtualinvoke r0.<com.android.server.AlarmManagerService: boolean haveAlarmsTimeTickAlarm(java.util.ArrayList)>($r31);

        if $z2 == 0 goto label01;

        goto label02;

     label01:
        z4 = 0;

        goto label03;

     label02:
        z4 = 1;

     label03:
        $r32 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mAlarmBatches>;

        $r33 = virtualinvoke $r32.<java.util.ArrayList: java.lang.Object clone()>();

        r1 = (java.util.ArrayList) $r33;

        $r34 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mAlarmBatches>;

        virtualinvoke $r34.<java.util.ArrayList: void clear()>();

        r35 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Alarm mPendingIdleUntil>;

        $r36 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Injector mInjector>;

        l2 = virtualinvoke $r36.<com.android.server.AlarmManagerService$Injector: long getElapsedRealtime()>();

        i3 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        i11 = 0;

     label04:
        if i11 >= i3 goto label07;

        $r29 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i11);

        r37 = (com.android.server.AlarmManagerService$Batch) $r29;

        i4 = virtualinvoke r37.<com.android.server.AlarmManagerService$Batch: int size()>();

        i12 = 0;

     label05:
        if i12 >= i4 goto label06;

        $r30 = virtualinvoke r37.<com.android.server.AlarmManagerService$Batch: com.android.server.AlarmManagerService$Alarm get(int)>(i12);

        virtualinvoke r0.<com.android.server.AlarmManagerService: void reAddAlarmLocked(com.android.server.AlarmManagerService$Alarm,long,boolean)>($r30, l2, z3);

        i12 = i12 + 1;

        goto label05;

     label06:
        i11 = i11 + 1;

        goto label04;

     label07:
        if r35 == null goto label08;

        $r20 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Alarm mPendingIdleUntil>;

        if r35 == $r20 goto label08;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Rebatching: idle until changed from ");

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r35);

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r25 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Alarm mPendingIdleUntil>;

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r25);

        $r27 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("AlarmManager", $r27);

        $r28 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Alarm mPendingIdleUntil>;

        if $r28 != null goto label08;

        virtualinvoke r0.<com.android.server.AlarmManagerService: void restorePendingWhileIdleAlarmsLocked()>();

     label08:
        $r39 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mAlarmBatches>;

        $i13 = staticinvoke <com.android.server.AlarmManagerService: int getAlarmCount(java.util.ArrayList)>($r39);

        $r40 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mPendingWhileIdleAlarms>;

        $i14 = staticinvoke <com.android.internal.util.ArrayUtils: int size(java.util.Collection)>($r40);

        i15 = $i13 + $i14;

        $r41 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mAlarmBatches>;

        $z5 = virtualinvoke r0.<com.android.server.AlarmManagerService: boolean haveBatchesTimeTickAlarm(java.util.ArrayList)>($r41);

        if $z5 != 0 goto label10;

        $r19 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mPendingWhileIdleAlarms>;

        $z1 = virtualinvoke r0.<com.android.server.AlarmManagerService: boolean haveAlarmsTimeTickAlarm(java.util.ArrayList)>($r19);

        if $z1 == 0 goto label09;

        goto label10;

     label09:
        z6 = 0;

        goto label11;

     label10:
        z6 = 1;

     label11:
        if i1 == i15 goto label12;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Rebatching: total count changed from ");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i15);

        $r18 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("AlarmManager", $r18);

     label12:
        if z4 == z6 goto label13;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Rebatching: hasTick changed from ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z4);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z6);

        $r12 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("AlarmManager", $r12);

     label13:
        virtualinvoke r0.<com.android.server.AlarmManagerService: void rescheduleKernelAlarmsLocked()>();

        specialinvoke r0.<com.android.server.AlarmManagerService: void updateNextAlarmClockLocked()>();

        $r6 = r0.<com.android.server.AlarmManagerService: com.android.internal.util.StatLogger mStatLogger>;

        virtualinvoke $r6.<com.android.internal.util.StatLogger: long logDurationStat(int,long)>(0, l0);

        return;
    }

    void recordWakeupAlarms(java.util.ArrayList, long, long)
    {
        com.android.server.AlarmManagerService r0;
        java.util.ArrayList r1, $r5, $r6;
        long l0, l1, $l4;
        int i2, i3, i6, i7;
        com.android.server.AlarmManagerService$Batch r2;
        com.android.server.AlarmManagerService$Alarm r3;
        java.lang.Object $r4, $r7;
        byte $b5;
        java.util.LinkedList $r8;
        com.android.server.AlarmManagerService$WakeupEvent $r9;

        r0 := @this: com.android.server.AlarmManagerService;

        r1 := @parameter0: java.util.ArrayList;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        i2 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        i6 = 0;

     label1:
        if i6 >= i2 goto label5;

        $r4 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i6);

        r2 = (com.android.server.AlarmManagerService$Batch) $r4;

        $l4 = r2.<com.android.server.AlarmManagerService$Batch: long start>;

        $b5 = $l4 cmp l0;

        if $b5 <= 0 goto label2;

        goto label5;

     label2:
        $r5 = r2.<com.android.server.AlarmManagerService$Batch: java.util.ArrayList alarms>;

        i3 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        i7 = 0;

     label3:
        if i7 >= i3 goto label4;

        $r6 = r2.<com.android.server.AlarmManagerService$Batch: java.util.ArrayList alarms>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(i7);

        r3 = (com.android.server.AlarmManagerService$Alarm) $r7;

        $r8 = r0.<com.android.server.AlarmManagerService: java.util.LinkedList mRecentWakeups>;

        $r9 = virtualinvoke r3.<com.android.server.AlarmManagerService$Alarm: com.android.server.AlarmManagerService$WakeupEvent makeWakeupEvent(long)>(l1);

        virtualinvoke $r8.<java.util.LinkedList: boolean add(java.lang.Object)>($r9);

        i7 = i7 + 1;

        goto label3;

     label4:
        i6 = i6 + 1;

        goto label1;

     label5:
        return;
    }

    void removeForStoppedLocked(int)
    {
        com.android.server.AlarmManagerService r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9, i10;
        com.android.server.AlarmManagerService$Batch r1;
        com.android.server._$$Lambda$AlarmManagerService$lzZOWJB2te9UTLsLWoZ6M8xouQQ $r2;
        java.util.ArrayList $r3, $r4, $r10, $r13, $r15, $r17, r20;
        android.util.SparseArray $r5, $r6, $r7, $r9;
        java.lang.Object $r8, $r11, $r16;
        com.android.server.AlarmManagerService$Alarm $r12;
        boolean $z0, z1;

        r0 := @this: com.android.server.AlarmManagerService;

        i0 := @parameter0: int;

        if i0 != 1000 goto label01;

        return;

     label01:
        z1 = 0;

        $r2 = new com.android.server._$$Lambda$AlarmManagerService$lzZOWJB2te9UTLsLWoZ6M8xouQQ;

        specialinvoke $r2.<com.android.server._$$Lambda$AlarmManagerService$lzZOWJB2te9UTLsLWoZ6M8xouQQ: void <init>(int)>(i0);

        $r3 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mAlarmBatches>;

        $i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i8 = $i1 - 1;

     label02:
        if i8 < 0 goto label04;

        $r15 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mAlarmBatches>;

        $r16 = virtualinvoke $r15.<java.util.ArrayList: java.lang.Object get(int)>(i8);

        r1 = (com.android.server.AlarmManagerService$Batch) $r16;

        $z0 = virtualinvoke r1.<com.android.server.AlarmManagerService$Batch: boolean remove(java.util.function.Predicate,boolean)>($r2, 0);

        z1 = z1 | $z0;

        $i7 = virtualinvoke r1.<com.android.server.AlarmManagerService$Batch: int size()>();

        if $i7 != 0 goto label03;

        $r17 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mAlarmBatches>;

        virtualinvoke $r17.<java.util.ArrayList: java.lang.Object remove(int)>(i8);

     label03:
        i8 = i8 + -1;

        goto label02;

     label04:
        $r4 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mPendingWhileIdleAlarms>;

        $i2 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        i9 = $i2 - 1;

     label05:
        if i9 < 0 goto label07;

        $r10 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mPendingWhileIdleAlarms>;

        $r11 = virtualinvoke $r10.<java.util.ArrayList: java.lang.Object get(int)>(i9);

        $r12 = (com.android.server.AlarmManagerService$Alarm) $r11;

        $i6 = $r12.<com.android.server.AlarmManagerService$Alarm: int uid>;

        if $i6 != i0 goto label06;

        $r13 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mPendingWhileIdleAlarms>;

        virtualinvoke $r13.<java.util.ArrayList: java.lang.Object remove(int)>(i9);

        specialinvoke r0.<com.android.server.AlarmManagerService: void decrementAlarmCount(int,int)>(i0, 1);

     label06:
        i9 = i9 + -1;

        goto label05;

     label07:
        $r5 = r0.<com.android.server.AlarmManagerService: android.util.SparseArray mPendingBackgroundAlarms>;

        $i3 = virtualinvoke $r5.<android.util.SparseArray: int size()>();

        i10 = $i3 - 1;

     label08:
        if i10 < 0 goto label11;

        $r6 = r0.<com.android.server.AlarmManagerService: android.util.SparseArray mPendingBackgroundAlarms>;

        $i4 = virtualinvoke $r6.<android.util.SparseArray: int keyAt(int)>(i10);

        if $i4 != i0 goto label10;

        $r7 = r0.<com.android.server.AlarmManagerService: android.util.SparseArray mPendingBackgroundAlarms>;

        $r8 = virtualinvoke $r7.<android.util.SparseArray: java.lang.Object valueAt(int)>(i10);

        r20 = (java.util.ArrayList) $r8;

        if r20 == null goto label09;

        $i5 = virtualinvoke r20.<java.util.ArrayList: int size()>();

        specialinvoke r0.<com.android.server.AlarmManagerService: void decrementAlarmCount(int,int)>(i0, $i5);

     label09:
        $r9 = r0.<com.android.server.AlarmManagerService: android.util.SparseArray mPendingBackgroundAlarms>;

        virtualinvoke $r9.<android.util.SparseArray: void removeAt(int)>(i10);

     label10:
        i10 = i10 + -1;

        goto label08;

     label11:
        if z1 == 0 goto label12;

        virtualinvoke r0.<com.android.server.AlarmManagerService: void rebatchAllAlarmsLocked(boolean)>(1);

        virtualinvoke r0.<com.android.server.AlarmManagerService: void rescheduleKernelAlarmsLocked()>();

        specialinvoke r0.<com.android.server.AlarmManagerService: void updateNextAlarmClockLocked()>();

     label12:
        return;
    }

    void removeImpl(android.app.PendingIntent, android.app.IAlarmListener)
    {
        com.android.server.AlarmManagerService r0;
        android.app.IAlarmListener r1;
        java.lang.Object r2;
        java.lang.Throwable $r3;
        android.app.PendingIntent r4;

        r0 := @this: com.android.server.AlarmManagerService;

        r4 := @parameter0: android.app.PendingIntent;

        r1 := @parameter1: android.app.IAlarmListener;

        r2 = r0.<com.android.server.AlarmManagerService: java.lang.Object mLock>;

        entermonitor r2;

     label1:
        virtualinvoke r0.<com.android.server.AlarmManagerService: void removeLocked(android.app.PendingIntent,android.app.IAlarmListener)>(r4, r1);

        exitmonitor r2;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r2;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    void removeLocked(int)
    {
        com.android.server.AlarmManagerService r0;
        int i0, $i1, $i2, $i3, $i4, $i6, $i7, $i8, $i9, $i10, $i11, i12, i13, i14, i15;
        com.android.server.AlarmManagerService$Batch r1;
        com.android.server._$$Lambda$AlarmManagerService$qehVSjTLWvtJYPGgKh2mkJ6ePnk $r2;
        java.util.ArrayList $r3, $r4, $r17, $r20, $r22, $r24, r27;
        android.util.SparseArray $r5, $r11, $r13;
        java.lang.StringBuilder $r6;
        java.lang.String $r10;
        java.lang.Object $r12, $r14, $r18, $r23;
        com.android.server.AlarmManagerService$Alarm $r15, $r19, r28, r29;
        boolean $z0, z1;

        r0 := @this: com.android.server.AlarmManagerService;

        i0 := @parameter0: int;

        if i0 != 1000 goto label01;

        return;

     label01:
        z1 = 0;

        $r2 = new com.android.server._$$Lambda$AlarmManagerService$qehVSjTLWvtJYPGgKh2mkJ6ePnk;

        specialinvoke $r2.<com.android.server._$$Lambda$AlarmManagerService$qehVSjTLWvtJYPGgKh2mkJ6ePnk: void <init>(int)>(i0);

        $r3 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mAlarmBatches>;

        $i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i12 = $i1 - 1;

     label02:
        if i12 < 0 goto label04;

        $r22 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mAlarmBatches>;

        $r23 = virtualinvoke $r22.<java.util.ArrayList: java.lang.Object get(int)>(i12);

        r1 = (com.android.server.AlarmManagerService$Batch) $r23;

        $z0 = virtualinvoke r1.<com.android.server.AlarmManagerService$Batch: boolean remove(java.util.function.Predicate,boolean)>($r2, 0);

        z1 = z1 | $z0;

        $i11 = virtualinvoke r1.<com.android.server.AlarmManagerService$Batch: int size()>();

        if $i11 != 0 goto label03;

        $r24 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mAlarmBatches>;

        virtualinvoke $r24.<java.util.ArrayList: java.lang.Object remove(int)>(i12);

     label03:
        i12 = i12 + -1;

        goto label02;

     label04:
        $r4 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mPendingWhileIdleAlarms>;

        $i2 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        i13 = $i2 - 1;

     label05:
        if i13 < 0 goto label07;

        $r17 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mPendingWhileIdleAlarms>;

        $r18 = virtualinvoke $r17.<java.util.ArrayList: java.lang.Object get(int)>(i13);

        $r19 = (com.android.server.AlarmManagerService$Alarm) $r18;

        $i10 = $r19.<com.android.server.AlarmManagerService$Alarm: int uid>;

        if $i10 != i0 goto label06;

        $r20 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mPendingWhileIdleAlarms>;

        virtualinvoke $r20.<java.util.ArrayList: java.lang.Object remove(int)>(i13);

        specialinvoke r0.<com.android.server.AlarmManagerService: void decrementAlarmCount(int,int)>(i0, 1);

     label06:
        i13 = i13 + -1;

        goto label05;

     label07:
        $r5 = r0.<com.android.server.AlarmManagerService: android.util.SparseArray mPendingBackgroundAlarms>;

        $i3 = virtualinvoke $r5.<android.util.SparseArray: int size()>();

        i14 = $i3 - 1;

     label08:
        if i14 < 0 goto label13;

        $r11 = r0.<com.android.server.AlarmManagerService: android.util.SparseArray mPendingBackgroundAlarms>;

        $r12 = virtualinvoke $r11.<android.util.SparseArray: java.lang.Object valueAt(int)>(i14);

        r27 = (java.util.ArrayList) $r12;

        $i7 = virtualinvoke r27.<java.util.ArrayList: int size()>();

        i15 = $i7 - 1;

     label09:
        if i15 < 0 goto label11;

        $r14 = virtualinvoke r27.<java.util.ArrayList: java.lang.Object get(int)>(i15);

        $r15 = (com.android.server.AlarmManagerService$Alarm) $r14;

        $i9 = $r15.<com.android.server.AlarmManagerService$Alarm: int uid>;

        if $i9 != i0 goto label10;

        virtualinvoke r27.<java.util.ArrayList: java.lang.Object remove(int)>(i15);

        specialinvoke r0.<com.android.server.AlarmManagerService: void decrementAlarmCount(int,int)>(i0, 1);

     label10:
        i15 = i15 + -1;

        goto label09;

     label11:
        $i8 = virtualinvoke r27.<java.util.ArrayList: int size()>();

        if $i8 != 0 goto label12;

        $r13 = r0.<com.android.server.AlarmManagerService: android.util.SparseArray mPendingBackgroundAlarms>;

        virtualinvoke $r13.<android.util.SparseArray: void removeAt(int)>(i14);

     label12:
        i14 = i14 + -1;

        goto label08;

     label13:
        r28 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Alarm mNextWakeFromIdle>;

        if r28 == null goto label14;

        $i6 = r28.<com.android.server.AlarmManagerService$Alarm: int uid>;

        if $i6 != i0 goto label14;

        r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Alarm mNextWakeFromIdle> = null;

     label14:
        r29 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Alarm mPendingIdleUntil>;

        if r29 == null goto label15;

        $i4 = r29.<com.android.server.AlarmManagerService$Alarm: int uid>;

        if $i4 != i0 goto label15;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removed app uid ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" set idle-until alarm!");

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("AlarmManager", $r10);

        r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Alarm mPendingIdleUntil> = null;

     label15:
        if z1 == 0 goto label16;

        virtualinvoke r0.<com.android.server.AlarmManagerService: void rebatchAllAlarmsLocked(boolean)>(1);

        virtualinvoke r0.<com.android.server.AlarmManagerService: void rescheduleKernelAlarmsLocked()>();

        specialinvoke r0.<com.android.server.AlarmManagerService: void updateNextAlarmClockLocked()>();

     label16:
        return;
    }

    void removeLocked(android.app.PendingIntent, android.app.IAlarmListener)
    {
        com.android.server.AlarmManagerService r0;
        android.app.PendingIntent r1;
        android.app.IAlarmListener r2;
        com.android.server._$$Lambda$AlarmManagerService$ZVedZIeWdB3G6AGM0__9P_GEO24 $r3;
        java.util.ArrayList $r4, $r5, $r12, $r14, $r16, $r18, r23;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9, i10, i11;
        android.util.SparseArray $r6, $r7, $r9;
        boolean $z0, $z1, $z2, $z3, $z4, z5, z7;
        java.lang.Object $r8, $r10, $r13, $r17;
        com.android.server.AlarmManagerService$Batch r21;
        com.android.server.AlarmManagerService$Alarm r22, r24, r25, r26;

        r0 := @this: com.android.server.AlarmManagerService;

        r1 := @parameter0: android.app.PendingIntent;

        r2 := @parameter1: android.app.IAlarmListener;

        if r1 != null goto label01;

        if r2 != null goto label01;

        return;

     label01:
        z5 = 0;

        $r3 = new com.android.server._$$Lambda$AlarmManagerService$ZVedZIeWdB3G6AGM0__9P_GEO24;

        specialinvoke $r3.<com.android.server._$$Lambda$AlarmManagerService$ZVedZIeWdB3G6AGM0__9P_GEO24: void <init>(android.app.PendingIntent,android.app.IAlarmListener)>(r1, r2);

        $r4 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mAlarmBatches>;

        $i0 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        i8 = $i0 - 1;

     label02:
        if i8 < 0 goto label04;

        $r16 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mAlarmBatches>;

        $r17 = virtualinvoke $r16.<java.util.ArrayList: java.lang.Object get(int)>(i8);

        r21 = (com.android.server.AlarmManagerService$Batch) $r17;

        $z4 = virtualinvoke r21.<com.android.server.AlarmManagerService$Batch: boolean remove(java.util.function.Predicate,boolean)>($r3, 0);

        z5 = z5 | $z4;

        $i7 = virtualinvoke r21.<com.android.server.AlarmManagerService$Batch: int size()>();

        if $i7 != 0 goto label03;

        $r18 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mAlarmBatches>;

        virtualinvoke $r18.<java.util.ArrayList: java.lang.Object remove(int)>(i8);

     label03:
        i8 = i8 + -1;

        goto label02;

     label04:
        $r5 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mPendingWhileIdleAlarms>;

        $i1 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        i9 = $i1 - 1;

     label05:
        if i9 < 0 goto label07;

        $r12 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mPendingWhileIdleAlarms>;

        $r13 = virtualinvoke $r12.<java.util.ArrayList: java.lang.Object get(int)>(i9);

        r22 = (com.android.server.AlarmManagerService$Alarm) $r13;

        $z3 = virtualinvoke r22.<com.android.server.AlarmManagerService$Alarm: boolean matches(android.app.PendingIntent,android.app.IAlarmListener)>(r1, r2);

        if $z3 == 0 goto label06;

        $r14 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mPendingWhileIdleAlarms>;

        virtualinvoke $r14.<java.util.ArrayList: java.lang.Object remove(int)>(i9);

        $i6 = r22.<com.android.server.AlarmManagerService$Alarm: int uid>;

        specialinvoke r0.<com.android.server.AlarmManagerService: void decrementAlarmCount(int,int)>($i6, 1);

     label06:
        i9 = i9 + -1;

        goto label05;

     label07:
        $r6 = r0.<com.android.server.AlarmManagerService: android.util.SparseArray mPendingBackgroundAlarms>;

        $i2 = virtualinvoke $r6.<android.util.SparseArray: int size()>();

        i10 = $i2 - 1;

     label08:
        if i10 < 0 goto label13;

        $r7 = r0.<com.android.server.AlarmManagerService: android.util.SparseArray mPendingBackgroundAlarms>;

        $r8 = virtualinvoke $r7.<android.util.SparseArray: java.lang.Object valueAt(int)>(i10);

        r23 = (java.util.ArrayList) $r8;

        $i3 = virtualinvoke r23.<java.util.ArrayList: int size()>();

        i11 = $i3 - 1;

     label09:
        if i11 < 0 goto label11;

        $r10 = virtualinvoke r23.<java.util.ArrayList: java.lang.Object get(int)>(i11);

        r24 = (com.android.server.AlarmManagerService$Alarm) $r10;

        $z2 = virtualinvoke r24.<com.android.server.AlarmManagerService$Alarm: boolean matches(android.app.PendingIntent,android.app.IAlarmListener)>(r1, r2);

        if $z2 == 0 goto label10;

        virtualinvoke r23.<java.util.ArrayList: java.lang.Object remove(int)>(i11);

        $i5 = r24.<com.android.server.AlarmManagerService$Alarm: int uid>;

        specialinvoke r0.<com.android.server.AlarmManagerService: void decrementAlarmCount(int,int)>($i5, 1);

     label10:
        i11 = i11 + -1;

        goto label09;

     label11:
        $i4 = virtualinvoke r23.<java.util.ArrayList: int size()>();

        if $i4 != 0 goto label12;

        $r9 = r0.<com.android.server.AlarmManagerService: android.util.SparseArray mPendingBackgroundAlarms>;

        virtualinvoke $r9.<android.util.SparseArray: void removeAt(int)>(i10);

     label12:
        i10 = i10 + -1;

        goto label08;

     label13:
        if z5 == 0 goto label17;

        r25 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Alarm mPendingIdleUntil>;

        z7 = 0;

        if r25 == null goto label14;

        z7 = 0;

        $z1 = virtualinvoke r25.<com.android.server.AlarmManagerService$Alarm: boolean matches(android.app.PendingIntent,android.app.IAlarmListener)>(r1, r2);

        if $z1 == 0 goto label14;

        r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Alarm mPendingIdleUntil> = null;

        z7 = 1;

     label14:
        r26 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Alarm mNextWakeFromIdle>;

        if r26 == null goto label15;

        $z0 = virtualinvoke r26.<com.android.server.AlarmManagerService$Alarm: boolean matches(android.app.PendingIntent,android.app.IAlarmListener)>(r1, r2);

        if $z0 == 0 goto label15;

        r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Alarm mNextWakeFromIdle> = null;

     label15:
        virtualinvoke r0.<com.android.server.AlarmManagerService: void rebatchAllAlarmsLocked(boolean)>(1);

        if z7 == 0 goto label16;

        virtualinvoke r0.<com.android.server.AlarmManagerService: void restorePendingWhileIdleAlarmsLocked()>();

     label16:
        specialinvoke r0.<com.android.server.AlarmManagerService: void updateNextAlarmClockLocked()>();

     label17:
        return;
    }

    void removeLocked(java.lang.String)
    {
        com.android.server.AlarmManagerService r0;
        java.lang.String r1, $r24;
        boolean z0, z1, $z2, $z3, $z4, $z5, z6;
        android.util.MutableBoolean $r3;
        com.android.server._$$Lambda$AlarmManagerService$Kswc8z2_RnUW_V0bP_uNErDNN_4 $r4;
        java.util.ArrayList $r5, $r6, $r7, $r8, $r15, $r17, $r25, $r27, r33;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i8, i9, i10, i11, i12;
        android.util.SparseArray $r9, $r10, $r12;
        java.lang.Object $r11, $r13, $r16, $r26;
        java.lang.StringBuilder $r19;
        com.android.server.AlarmManagerService$Batch r30;
        com.android.server.AlarmManagerService$Alarm r32, r34;

        r0 := @this: com.android.server.AlarmManagerService;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label01;

        return;

     label01:
        z6 = 0;

        $r3 = new android.util.MutableBoolean;

        specialinvoke $r3.<android.util.MutableBoolean: void <init>(boolean)>(0);

        $r4 = new com.android.server._$$Lambda$AlarmManagerService$Kswc8z2_RnUW_V0bP_uNErDNN_4;

        specialinvoke $r4.<com.android.server._$$Lambda$AlarmManagerService$Kswc8z2_RnUW_V0bP_uNErDNN_4: void <init>(com.android.server.AlarmManagerService,java.lang.String,android.util.MutableBoolean)>(r0, r1, $r3);

        $r5 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mAlarmBatches>;

        z0 = virtualinvoke r0.<com.android.server.AlarmManagerService: boolean haveBatchesTimeTickAlarm(java.util.ArrayList)>($r5);

        $r6 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mAlarmBatches>;

        $i0 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        i9 = $i0 - 1;

     label02:
        if i9 < 0 goto label04;

        $r25 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mAlarmBatches>;

        $r26 = virtualinvoke $r25.<java.util.ArrayList: java.lang.Object get(int)>(i9);

        r30 = (com.android.server.AlarmManagerService$Batch) $r26;

        $z5 = virtualinvoke r30.<com.android.server.AlarmManagerService$Batch: boolean remove(java.util.function.Predicate,boolean)>($r4, 0);

        z6 = z6 | $z5;

        $i8 = virtualinvoke r30.<com.android.server.AlarmManagerService$Batch: int size()>();

        if $i8 != 0 goto label03;

        $r27 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mAlarmBatches>;

        virtualinvoke $r27.<java.util.ArrayList: java.lang.Object remove(int)>(i9);

     label03:
        i9 = i9 + -1;

        goto label02;

     label04:
        $r7 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mAlarmBatches>;

        z1 = virtualinvoke r0.<com.android.server.AlarmManagerService: boolean haveBatchesTimeTickAlarm(java.util.ArrayList)>($r7);

        if z0 == z1 goto label05;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("removeLocked: hasTick changed from ");

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z1);

        $r24 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("AlarmManager", $r24);

     label05:
        $r8 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mPendingWhileIdleAlarms>;

        $i1 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

        i10 = $i1 - 1;

     label06:
        if i10 < 0 goto label08;

        $r15 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mPendingWhileIdleAlarms>;

        $r16 = virtualinvoke $r15.<java.util.ArrayList: java.lang.Object get(int)>(i10);

        r32 = (com.android.server.AlarmManagerService$Alarm) $r16;

        $z4 = virtualinvoke r32.<com.android.server.AlarmManagerService$Alarm: boolean matches(java.lang.String)>(r1);

        if $z4 == 0 goto label07;

        $r17 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mPendingWhileIdleAlarms>;

        virtualinvoke $r17.<java.util.ArrayList: java.lang.Object remove(int)>(i10);

        $i6 = r32.<com.android.server.AlarmManagerService$Alarm: int uid>;

        specialinvoke r0.<com.android.server.AlarmManagerService: void decrementAlarmCount(int,int)>($i6, 1);

     label07:
        i10 = i10 + -1;

        goto label06;

     label08:
        $r9 = r0.<com.android.server.AlarmManagerService: android.util.SparseArray mPendingBackgroundAlarms>;

        $i2 = virtualinvoke $r9.<android.util.SparseArray: int size()>();

        i11 = $i2 - 1;

     label09:
        if i11 < 0 goto label14;

        $r10 = r0.<com.android.server.AlarmManagerService: android.util.SparseArray mPendingBackgroundAlarms>;

        $r11 = virtualinvoke $r10.<android.util.SparseArray: java.lang.Object valueAt(int)>(i11);

        r33 = (java.util.ArrayList) $r11;

        $i3 = virtualinvoke r33.<java.util.ArrayList: int size()>();

        i12 = $i3 - 1;

     label10:
        if i12 < 0 goto label12;

        $r13 = virtualinvoke r33.<java.util.ArrayList: java.lang.Object get(int)>(i12);

        r34 = (com.android.server.AlarmManagerService$Alarm) $r13;

        $z3 = virtualinvoke r34.<com.android.server.AlarmManagerService$Alarm: boolean matches(java.lang.String)>(r1);

        if $z3 == 0 goto label11;

        virtualinvoke r33.<java.util.ArrayList: java.lang.Object remove(int)>(i12);

        $i5 = r34.<com.android.server.AlarmManagerService$Alarm: int uid>;

        specialinvoke r0.<com.android.server.AlarmManagerService: void decrementAlarmCount(int,int)>($i5, 1);

     label11:
        i12 = i12 + -1;

        goto label10;

     label12:
        $i4 = virtualinvoke r33.<java.util.ArrayList: int size()>();

        if $i4 != 0 goto label13;

        $r12 = r0.<com.android.server.AlarmManagerService: android.util.SparseArray mPendingBackgroundAlarms>;

        virtualinvoke $r12.<android.util.SparseArray: void removeAt(int)>(i11);

     label13:
        i11 = i11 + -1;

        goto label09;

     label14:
        $z2 = $r3.<android.util.MutableBoolean: boolean value>;

        if $z2 == 0 goto label15;

        r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Alarm mNextWakeFromIdle> = null;

     label15:
        if z6 == 0 goto label16;

        virtualinvoke r0.<com.android.server.AlarmManagerService: void rebatchAllAlarmsLocked(boolean)>(1);

        virtualinvoke r0.<com.android.server.AlarmManagerService: void rescheduleKernelAlarmsLocked()>();

        specialinvoke r0.<com.android.server.AlarmManagerService: void updateNextAlarmClockLocked()>();

     label16:
        return;
    }

    void removeUserLocked(int)
    {
        com.android.server.AlarmManagerService r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, i16, i17, i18, i19;
        com.android.server.AlarmManagerService$Batch r1;
        com.android.server._$$Lambda$AlarmManagerService$nhEd_CDoc7mzdNLRwGUhwl9TaGk $r2;
        java.util.ArrayList $r3, $r4, $r15, $r18, $r21, $r23, r26;
        android.util.SparseArray $r5, $r9, $r10, $r12;
        android.util.SparseLongArray $r6, $r7, $r8;
        java.lang.Object $r11, $r13, $r16, $r19, $r22;
        com.android.server.AlarmManagerService$Alarm $r14, $r17, $r20;
        boolean $z0, z1;

        r0 := @this: com.android.server.AlarmManagerService;

        i0 := @parameter0: int;

        if i0 != 0 goto label01;

        return;

     label01:
        z1 = 0;

        $r2 = new com.android.server._$$Lambda$AlarmManagerService$nhEd_CDoc7mzdNLRwGUhwl9TaGk;

        specialinvoke $r2.<com.android.server._$$Lambda$AlarmManagerService$nhEd_CDoc7mzdNLRwGUhwl9TaGk: void <init>(int)>(i0);

        $r3 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mAlarmBatches>;

        $i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i15 = $i1 - 1;

     label02:
        if i15 < 0 goto label04;

        $r21 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mAlarmBatches>;

        $r22 = virtualinvoke $r21.<java.util.ArrayList: java.lang.Object get(int)>(i15);

        r1 = (com.android.server.AlarmManagerService$Batch) $r22;

        $z0 = virtualinvoke r1.<com.android.server.AlarmManagerService$Batch: boolean remove(java.util.function.Predicate,boolean)>($r2, 0);

        z1 = z1 | $z0;

        $i14 = virtualinvoke r1.<com.android.server.AlarmManagerService$Batch: int size()>();

        if $i14 != 0 goto label03;

        $r23 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mAlarmBatches>;

        virtualinvoke $r23.<java.util.ArrayList: java.lang.Object remove(int)>(i15);

     label03:
        i15 = i15 + -1;

        goto label02;

     label04:
        $r4 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mPendingWhileIdleAlarms>;

        $i2 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        i16 = $i2 - 1;

     label05:
        if i16 < 0 goto label07;

        $r15 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mPendingWhileIdleAlarms>;

        $r16 = virtualinvoke $r15.<java.util.ArrayList: java.lang.Object get(int)>(i16);

        $r17 = (com.android.server.AlarmManagerService$Alarm) $r16;

        $i11 = $r17.<com.android.server.AlarmManagerService$Alarm: int creatorUid>;

        $i12 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i11);

        if $i12 != i0 goto label06;

        $r18 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mPendingWhileIdleAlarms>;

        $r19 = virtualinvoke $r18.<java.util.ArrayList: java.lang.Object remove(int)>(i16);

        $r20 = (com.android.server.AlarmManagerService$Alarm) $r19;

        $i13 = $r20.<com.android.server.AlarmManagerService$Alarm: int uid>;

        specialinvoke r0.<com.android.server.AlarmManagerService: void decrementAlarmCount(int,int)>($i13, 1);

     label06:
        i16 = i16 + -1;

        goto label05;

     label07:
        $r5 = r0.<com.android.server.AlarmManagerService: android.util.SparseArray mPendingBackgroundAlarms>;

        $i3 = virtualinvoke $r5.<android.util.SparseArray: int size()>();

        i17 = $i3 - 1;

     label08:
        if i17 < 0 goto label12;

        $r9 = r0.<com.android.server.AlarmManagerService: android.util.SparseArray mPendingBackgroundAlarms>;

        $i7 = virtualinvoke $r9.<android.util.SparseArray: int keyAt(int)>(i17);

        $i8 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i7);

        if $i8 != i0 goto label11;

        $r10 = r0.<com.android.server.AlarmManagerService: android.util.SparseArray mPendingBackgroundAlarms>;

        $r11 = virtualinvoke $r10.<android.util.SparseArray: java.lang.Object valueAt(int)>(i17);

        r26 = (java.util.ArrayList) $r11;

        if r26 == null goto label10;

        i18 = 0;

     label09:
        $i9 = virtualinvoke r26.<java.util.ArrayList: int size()>();

        if i18 >= $i9 goto label10;

        $r13 = virtualinvoke r26.<java.util.ArrayList: java.lang.Object get(int)>(i18);

        $r14 = (com.android.server.AlarmManagerService$Alarm) $r13;

        $i10 = $r14.<com.android.server.AlarmManagerService$Alarm: int uid>;

        specialinvoke r0.<com.android.server.AlarmManagerService: void decrementAlarmCount(int,int)>($i10, 1);

        i18 = i18 + 1;

        goto label09;

     label10:
        $r12 = r0.<com.android.server.AlarmManagerService: android.util.SparseArray mPendingBackgroundAlarms>;

        virtualinvoke $r12.<android.util.SparseArray: void removeAt(int)>(i17);

     label11:
        i17 = i17 + -1;

        goto label08;

     label12:
        $r6 = r0.<com.android.server.AlarmManagerService: android.util.SparseLongArray mLastAllowWhileIdleDispatch>;

        $i4 = virtualinvoke $r6.<android.util.SparseLongArray: int size()>();

        i19 = $i4 - 1;

     label13:
        if i19 < 0 goto label15;

        $r7 = r0.<com.android.server.AlarmManagerService: android.util.SparseLongArray mLastAllowWhileIdleDispatch>;

        $i5 = virtualinvoke $r7.<android.util.SparseLongArray: int keyAt(int)>(i19);

        $i6 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i5);

        if $i6 != i0 goto label14;

        $r8 = r0.<com.android.server.AlarmManagerService: android.util.SparseLongArray mLastAllowWhileIdleDispatch>;

        virtualinvoke $r8.<android.util.SparseLongArray: void removeAt(int)>(i19);

     label14:
        i19 = i19 + -1;

        goto label13;

     label15:
        if z1 == 0 goto label16;

        virtualinvoke r0.<com.android.server.AlarmManagerService: void rebatchAllAlarmsLocked(boolean)>(1);

        virtualinvoke r0.<com.android.server.AlarmManagerService: void rescheduleKernelAlarmsLocked()>();

        specialinvoke r0.<com.android.server.AlarmManagerService: void updateNextAlarmClockLocked()>();

     label16:
        return;
    }

    boolean reorderAlarmsBasedOnStandbyBuckets(android.util.ArraySet)
    {
        com.android.server.AlarmManagerService r0;
        android.util.ArraySet r1;
        long l0;
        com.android.server.AlarmManagerService$Batch r3;
        com.android.server.AlarmManagerService$Alarm r4, $r11;
        android.util.Pair r5;
        com.android.internal.util.StatLogger $r6, $r9;
        java.util.ArrayList $r7, $r8, $r12, $r14;
        int $i1, $i3, $i4, $i5, $i6, $i7, i8, i9, i10, i11;
        java.lang.Object $r10, $r13;
        java.lang.String $r16;
        java.lang.Integer $r17;
        boolean $z0, $z3, z4;

        r0 := @this: com.android.server.AlarmManagerService;

        r1 := @parameter0: android.util.ArraySet;

        $r6 = r0.<com.android.server.AlarmManagerService: com.android.internal.util.StatLogger mStatLogger>;

        l0 = virtualinvoke $r6.<com.android.internal.util.StatLogger: long getTime()>();

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        $r8 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mAlarmBatches>;

        i8 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

        z4 = 1;

        i9 = i8 + -1;

     label01:
        if i9 < 0 goto label07;

        $r12 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mAlarmBatches>;

        $r13 = virtualinvoke $r12.<java.util.ArrayList: java.lang.Object get(int)>(i9);

        r3 = (com.android.server.AlarmManagerService$Batch) $r13;

        $i4 = virtualinvoke r3.<com.android.server.AlarmManagerService$Batch: int size()>();

        i10 = $i4 - 1;

     label02:
        if i10 < 0 goto label05;

        r4 = virtualinvoke r3.<com.android.server.AlarmManagerService$Batch: com.android.server.AlarmManagerService$Alarm get(int)>(i10);

        $r16 = r4.<com.android.server.AlarmManagerService$Alarm: java.lang.String sourcePackage>;

        $i6 = r4.<com.android.server.AlarmManagerService$Alarm: int creatorUid>;

        $i7 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i6);

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);

        r5 = staticinvoke <android.util.Pair: android.util.Pair create(java.lang.Object,java.lang.Object)>($r16, $r17);

        if r1 == null goto label03;

        $z3 = virtualinvoke r1.<android.util.ArraySet: boolean contains(java.lang.Object)>(r5);

        if $z3 != 0 goto label03;

        goto label04;

     label03:
        $z0 = specialinvoke r0.<com.android.server.AlarmManagerService: boolean adjustDeliveryTimeBasedOnBucketLocked(com.android.server.AlarmManagerService$Alarm)>(r4);

        if $z0 == 0 goto label04;

        virtualinvoke r3.<com.android.server.AlarmManagerService$Batch: boolean remove(com.android.server.AlarmManagerService$Alarm)>(r4);

        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>(r4);

     label04:
        i10 = i10 + -1;

        goto label02;

     label05:
        $i5 = virtualinvoke r3.<com.android.server.AlarmManagerService$Batch: int size()>();

        if $i5 != 0 goto label06;

        $r14 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mAlarmBatches>;

        virtualinvoke $r14.<java.util.ArrayList: java.lang.Object remove(int)>(i9);

     label06:
        i9 = i9 + -1;

        goto label01;

     label07:
        i11 = 0;

     label08:
        $i1 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        if i11 >= $i1 goto label09;

        $r10 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(i11);

        $r11 = (com.android.server.AlarmManagerService$Alarm) $r10;

        specialinvoke r0.<com.android.server.AlarmManagerService: void insertAndBatchAlarmLocked(com.android.server.AlarmManagerService$Alarm)>($r11);

        i11 = i11 + 1;

        goto label08;

     label09:
        $r9 = r0.<com.android.server.AlarmManagerService: com.android.internal.util.StatLogger mStatLogger>;

        virtualinvoke $r9.<com.android.internal.util.StatLogger: long logDurationStat(int,long)>(1, l0);

        $i3 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        if $i3 <= 0 goto label10;

        goto label11;

     label10:
        z4 = 0;

     label11:
        return z4;
    }

    void rescheduleKernelAlarmsLocked()
    {
        com.android.server.AlarmManagerService r0;
        long l0, $l3, $l5, $l6, l8, l9;
        com.android.server.AlarmManagerService$Batch r1, r2;
        com.android.server.AlarmManagerService$Injector $r3;
        java.util.ArrayList $r4, $r5, $r7;
        int $i1, $i10;
        byte $b2, $b4, $b11;
        java.lang.Object $r6;

        r0 := @this: com.android.server.AlarmManagerService;

        $r3 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Injector mInjector>;

        l0 = virtualinvoke $r3.<com.android.server.AlarmManagerService$Injector: long getElapsedRealtime()>();

        l8 = 0L;

        $r4 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mAlarmBatches>;

        $i1 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        if $i1 <= 0 goto label2;

        r1 = specialinvoke r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Batch findFirstWakeupBatchLocked()>();

        $r5 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mAlarmBatches>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(0);

        r2 = (com.android.server.AlarmManagerService$Batch) $r6;

        if r1 == null goto label1;

        $l5 = r1.<com.android.server.AlarmManagerService$Batch: long start>;

        r0.<com.android.server.AlarmManagerService: long mNextWakeup> = $l5;

        r0.<com.android.server.AlarmManagerService: long mNextWakeUpSetAt> = l0;

        $l6 = r1.<com.android.server.AlarmManagerService$Batch: long start>;

        specialinvoke r0.<com.android.server.AlarmManagerService: void setLocked(int,long)>(2, $l6);

     label1:
        l8 = 0L;

        if r2 == r1 goto label2;

        l8 = r2.<com.android.server.AlarmManagerService$Batch: long start>;

     label2:
        l9 = l8;

        $r7 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mPendingNonWakeupAlarms>;

        $i10 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        if $i10 <= 0 goto label4;

        $b2 = l8 cmp 0L;

        if $b2 == 0 goto label3;

        l9 = l8;

        $l3 = r0.<com.android.server.AlarmManagerService: long mNextNonWakeupDeliveryTime>;

        $b4 = $l3 cmp l8;

        if $b4 >= 0 goto label4;

     label3:
        l9 = r0.<com.android.server.AlarmManagerService: long mNextNonWakeupDeliveryTime>;

     label4:
        $b11 = l9 cmp 0L;

        if $b11 == 0 goto label5;

        r0.<com.android.server.AlarmManagerService: long mNextNonWakeup> = l9;

        r0.<com.android.server.AlarmManagerService: long mNextNonWakeUpSetAt> = l0;

        specialinvoke r0.<com.android.server.AlarmManagerService: void setLocked(int,long)>(3, l9);

     label5:
        return;
    }

    void restorePendingWhileIdleAlarmsLocked()
    {
        com.android.server.AlarmManagerService r0;
        java.util.ArrayList r1, $r2, $r3;
        long l0;
        int $i1, $i2, i3;
        com.android.server.AlarmManagerService$Injector $r4;
        java.lang.Object $r5;
        com.android.server.AlarmManagerService$Alarm $r6;

        r0 := @this: com.android.server.AlarmManagerService;

        $r2 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mPendingWhileIdleAlarms>;

        $i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if $i1 <= 0 goto label2;

        r1 = r0.<com.android.server.AlarmManagerService: java.util.ArrayList mPendingWhileIdleAlarms>;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.AlarmManagerService: java.util.ArrayList mPendingWhileIdleAlarms> = $r3;

        $r4 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Injector mInjector>;

        l0 = virtualinvoke $r4.<com.android.server.AlarmManagerService$Injector: long getElapsedRealtime()>();

        $i2 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        i3 = $i2 - 1;

     label1:
        if i3 < 0 goto label2;

        $r5 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        $r6 = (com.android.server.AlarmManagerService$Alarm) $r5;

        virtualinvoke r0.<com.android.server.AlarmManagerService: void reAddAlarmLocked(com.android.server.AlarmManagerService$Alarm,long,boolean)>($r6, l0, 0);

        i3 = i3 + -1;

        goto label1;

     label2:
        virtualinvoke r0.<com.android.server.AlarmManagerService: void rescheduleKernelAlarmsLocked()>();

        specialinvoke r0.<com.android.server.AlarmManagerService: void updateNextAlarmClockLocked()>();

        return;
    }

    void sendAllUnrestrictedPendingBackgroundAlarmsLocked()
    {
        com.android.server.AlarmManagerService r0;
        java.util.ArrayList $r2;
        com.android.server._$$Lambda$AlarmManagerService$nSJw2tKfoL3YIrKDtszoL44jcSM $r3;
        android.util.SparseArray $r4;
        int $i0;
        com.android.server.AlarmManagerService$Injector $r5;
        long $l1;

        r0 := @this: com.android.server.AlarmManagerService;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r4 = r0.<com.android.server.AlarmManagerService: android.util.SparseArray mPendingBackgroundAlarms>;

        $r3 = new com.android.server._$$Lambda$AlarmManagerService$nSJw2tKfoL3YIrKDtszoL44jcSM;

        specialinvoke $r3.<com.android.server._$$Lambda$AlarmManagerService$nSJw2tKfoL3YIrKDtszoL44jcSM: void <init>(com.android.server.AlarmManagerService)>(r0);

        staticinvoke <com.android.server.AlarmManagerService: void findAllUnrestrictedPendingBackgroundAlarmsLockedInner(android.util.SparseArray,java.util.ArrayList,java.util.function.Predicate)>($r4, $r2, $r3);

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if $i0 <= 0 goto label1;

        $r5 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Injector mInjector>;

        $l1 = virtualinvoke $r5.<com.android.server.AlarmManagerService$Injector: long getElapsedRealtime()>();

        specialinvoke r0.<com.android.server.AlarmManagerService: void deliverPendingBackgroundAlarmsLocked(java.util.ArrayList,long)>($r2, $l1);

     label1:
        return;
    }

    void sendPendingBackgroundAlarmsLocked(int, java.lang.String)
    {
        com.android.server.AlarmManagerService r0;
        int i0, $i1, $i2, $i3, i4;
        java.util.ArrayList r1, $r6, r13;
        android.util.SparseArray $r3, $r5, $r7;
        java.lang.Object $r4, $r8, $r10;
        com.android.server.AlarmManagerService$Alarm $r9, $r11;
        boolean $z0;
        java.lang.String r12;
        com.android.server.AlarmManagerService$Injector $r14;
        long $l5;

        r0 := @this: com.android.server.AlarmManagerService;

        i0 := @parameter0: int;

        r12 := @parameter1: java.lang.String;

        $r3 = r0.<com.android.server.AlarmManagerService: android.util.SparseArray mPendingBackgroundAlarms>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r1 = (java.util.ArrayList) $r4;

        if r1 == null goto label7;

        $i1 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if $i1 != 0 goto label1;

        goto label7;

     label1:
        if r12 == null goto label5;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        $i2 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        i4 = $i2 - 1;

     label2:
        if i4 < 0 goto label4;

        $r8 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        $r9 = (com.android.server.AlarmManagerService$Alarm) $r8;

        $z0 = virtualinvoke $r9.<com.android.server.AlarmManagerService$Alarm: boolean matches(java.lang.String)>(r12);

        if $z0 == 0 goto label3;

        $r10 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object remove(int)>(i4);

        $r11 = (com.android.server.AlarmManagerService$Alarm) $r10;

        virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>($r11);

     label3:
        i4 = i4 + -1;

        goto label2;

     label4:
        r13 = $r6;

        $i3 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if $i3 != 0 goto label6;

        $r7 = r0.<com.android.server.AlarmManagerService: android.util.SparseArray mPendingBackgroundAlarms>;

        virtualinvoke $r7.<android.util.SparseArray: void remove(int)>(i0);

        r13 = $r6;

        goto label6;

     label5:
        r13 = r1;

        $r5 = r0.<com.android.server.AlarmManagerService: android.util.SparseArray mPendingBackgroundAlarms>;

        virtualinvoke $r5.<android.util.SparseArray: void remove(int)>(i0);

     label6:
        $r14 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Injector mInjector>;

        $l5 = virtualinvoke $r14.<com.android.server.AlarmManagerService$Injector: long getElapsedRealtime()>();

        specialinvoke r0.<com.android.server.AlarmManagerService: void deliverPendingBackgroundAlarmsLocked(java.util.ArrayList,long)>(r13, $l5);

        return;

     label7:
        return;
    }

    void setImpl(int, long, long, long, android.app.PendingIntent, android.app.IAlarmListener, java.lang.String, int, android.os.WorkSource, android.app.AlarmManager$AlarmClockInfo, int, java.lang.String)
    {
        com.android.server.AlarmManagerService r0;
        int i0, i1, i2, i3, i4, $i13, $i15;
        java.lang.String r1, r4, $r12, $r19, $r30, $r35, $r43, $r48, $r57, r72;
        android.os.WorkSource r2;
        android.app.AlarmManager$AlarmClockInfo r3;
        byte $b5, $b6, $b8, $b9, $b10, $b11, $b12, $b18;
        com.android.server.AlarmManagerService$Constants $r6, $r7, $r14, $r16, $r36, $r70;
        long $l7, $l19, l24, l25, l26, l28, l29, l30, l31, l32, l33, l34, l35, l38, l39, l40, l41;
        java.lang.StringBuilder $r8, $r23, $r31, $r37, $r44, $r54, r71;
        java.lang.IllegalArgumentException $r11;
        com.android.server.AlarmManagerService$Injector $r13;
        boolean $z0, $z1;
        android.os.IBinder $r49;
        android.os.IBinder$DeathRecipient $r50;
        java.lang.Throwable $r51, $r52, $r58, $r59, r74;
        android.os.RemoteException $r53;
        android.app.PendingIntent r60;
        android.app.IAlarmListener r61;
        java.lang.Object r68, r75, r76;
        android.util.SparseIntArray $r69;
        java.lang.IllegalStateException r73;

        r0 := @this: com.android.server.AlarmManagerService;

        i0 := @parameter0: int;

        l24 := @parameter1: long;

        l25 := @parameter2: long;

        l26 := @parameter3: long;

        r60 := @parameter4: android.app.PendingIntent;

        r61 := @parameter5: android.app.IAlarmListener;

        r1 := @parameter6: java.lang.String;

        i1 := @parameter7: int;

        r2 := @parameter8: android.os.WorkSource;

        r3 := @parameter9: android.app.AlarmManager$AlarmClockInfo;

        i2 := @parameter10: int;

        r4 := @parameter11: java.lang.String;

        if r60 != null goto label01;

        if r61 == null goto label02;

     label01:
        if r60 == null goto label03;

        if r61 == null goto label03;

     label02:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AlarmManager", "Alarms must either supply a PendingIntent or an AlarmReceiver");

        return;

     label03:
        if r61 == null goto label07;

     label04:
        $r49 = interfaceinvoke r61.<android.app.IAlarmListener: android.os.IBinder asBinder()>();

        $r50 = r0.<com.android.server.AlarmManagerService: android.os.IBinder$DeathRecipient mListenerDeathRecipient>;

        interfaceinvoke $r49.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>($r50, 0);

     label05:
        goto label07;

     label06:
        $r53 := @caughtexception;

        $r54 = new java.lang.StringBuilder;

        specialinvoke $r54.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Dropping unreachable alarm listener ");

        virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r57 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AlarmManager", $r57);

        return;

     label07:
        l28 = l25;

        $b5 = l25 cmp 43200000L;

        if $b5 <= 0 goto label08;

        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Window length ");

        virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l25);

        virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms suspiciously long; limiting to 1 hour");

        $r48 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AlarmManager", $r48);

        l28 = 3600000L;

     label08:
        $r6 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Constants mConstants>;

        l29 = $r6.<com.android.server.AlarmManagerService$Constants: long MIN_INTERVAL>;

        $b6 = l26 cmp 0L;

        if $b6 <= 0 goto label09;

        $b18 = l26 cmp l29;

        if $b18 >= 0 goto label09;

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Suspiciously short interval ");

        virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l26);

        virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" millis; expanding to ");

        $l19 = l29 / 1000L;

        virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l19);

        virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds");

        $r43 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AlarmManager", $r43);

        l26 = l29;

        goto label10;

     label09:
        $r7 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Constants mConstants>;

        $l7 = $r7.<com.android.server.AlarmManagerService$Constants: long MAX_INTERVAL>;

        $b8 = l26 cmp $l7;

        if $b8 <= 0 goto label10;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Suspiciously long interval ");

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l26);

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" millis; clamping");

        $r35 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AlarmManager", $r35);

        $r36 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Constants mConstants>;

        l26 = $r36.<com.android.server.AlarmManagerService$Constants: long MAX_INTERVAL>;

        goto label10;

     label10:
        if i0 < 0 goto label37;

        if i0 > 3 goto label37;

        $b9 = l24 cmp 0L;

        if $b9 >= 0 goto label11;

        $i15 = staticinvoke <android.os.Binder: int getCallingPid()>();

        l30 = (long) $i15;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid alarm trigger time! ");

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l24);

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from uid=");

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" pid=");

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l30);

        $r30 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AlarmManager", $r30);

        l31 = 0L;

        goto label12;

     label11:
        l31 = l24;

     label12:
        $r13 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Injector mInjector>;

        l32 = virtualinvoke $r13.<com.android.server.AlarmManagerService$Injector: long getElapsedRealtime()>();

        l33 = specialinvoke r0.<com.android.server.AlarmManagerService: long convertToElapsed(long,int)>(l31, i0);

        $z0 = staticinvoke <android.os.UserHandle: boolean isCore(int)>(i2);

        if $z0 == 0 goto label13;

        l34 = 0L;

        goto label14;

     label13:
        $r14 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Constants mConstants>;

        l34 = $r14.<com.android.server.AlarmManagerService$Constants: long MIN_FUTURITY>;

     label14:
        l35 = l32 + l34;

        $b10 = l33 cmp l35;

        if $b10 <= 0 goto label15;

        l35 = l33;

        goto label15;

     label15:
        $b11 = l28 cmp 0L;

        if $b11 != 0 goto label16;

        l38 = l35;

        l39 = l28;

        goto label18;

     label16:
        $b12 = l28 cmp 0L;

        if $b12 >= 0 goto label17;

        l40 = staticinvoke <com.android.server.AlarmManagerService: long maxTriggerTime(long,long,long)>(l32, l35, l26);

        l38 = l40;

        l39 = l40 - l35;

        goto label18;

     label17:
        l41 = l35 + l28;

        l39 = l28;

        l38 = l41;

     label18:
        r68 = r0.<com.android.server.AlarmManagerService: java.lang.Object mLock>;

        entermonitor r68;

     label19:
        $r69 = r0.<com.android.server.AlarmManagerService: android.util.SparseIntArray mAlarmsPerUid>;

        i3 = virtualinvoke $r69.<android.util.SparseIntArray: int get(int,int)>(i2, 0);

        $r70 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Constants mConstants>;

        i4 = $r70.<com.android.server.AlarmManagerService$Constants: int MAX_ALARMS_PER_UID>;

     label20:
        if i3 < i4 goto label27;

     label21:
        r71 = new java.lang.StringBuilder;

        specialinvoke r71.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Maximum limit of concurrent alarms ");

        $r16 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Constants mConstants>;

        $i13 = $r16.<com.android.server.AlarmManagerService$Constants: int MAX_ALARMS_PER_UID>;

        virtualinvoke r71.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i13);

        virtualinvoke r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" reached for uid: ");

        $r19 = staticinvoke <android.os.UserHandle: java.lang.String formatUid(int)>(i2);

        virtualinvoke r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        virtualinvoke r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", callingPackage: ");

     label22:
        virtualinvoke r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        r72 = virtualinvoke r71.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AlarmManager", r72);

        $z1 = staticinvoke <android.os.UserHandle: boolean isCore(int)>(i2);

        if $z1 == 0 goto label23;

        specialinvoke r0.<com.android.server.AlarmManagerService: void logAllAlarmsForUidLocked(int)>(i2);

     label23:
        r73 = new java.lang.IllegalStateException;

        specialinvoke r73.<java.lang.IllegalStateException: void <init>(java.lang.String)>(r72);

        throw r73;

     label24:
        $r51 := @caughtexception;

        r74 = $r51;

        goto label26;

     label25:
        $r58 := @caughtexception;

        r74 = $r58;

     label26:
        r75 = r68;

        goto label33;

     label27:
        r76 = r68;

     label28:
        specialinvoke r0.<com.android.server.AlarmManagerService: void setImplLocked(int,long,long,long,long,long,android.app.PendingIntent,android.app.IAlarmListener,java.lang.String,int,boolean,android.os.WorkSource,android.app.AlarmManager$AlarmClockInfo,int,java.lang.String)>(i0, l31, l35, l39, l38, l26, r60, r61, r1, i1, 1, r2, r3, i2, r4);

     label29:
        r76 = r68;

     label30:
        exitmonitor r68;

     label31:
        return;

     label32:
        $r59 := @caughtexception;

        r74 = $r59;

        r75 = r68;

     label33:
        r76 = r75;

     label34:
        exitmonitor r75;

     label35:
        throw r74;

     label36:
        $r52 := @caughtexception;

        r74 = $r52;

        r75 = r76;

        goto label33;

     label37:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid alarm type ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r11 = new java.lang.IllegalArgumentException;

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r11;

        catch android.os.RemoteException from label04 to label05 with label06;
        catch java.lang.Throwable from label19 to label20 with label32;
        catch java.lang.Throwable from label21 to label22 with label25;
        catch java.lang.Throwable from label22 to label23 with label24;
        catch java.lang.Throwable from label23 to label24 with label24;
        catch java.lang.Throwable from label28 to label29 with label36;
        catch java.lang.Throwable from label30 to label31 with label36;
        catch java.lang.Throwable from label34 to label35 with label36;
    }

    boolean setTimeImpl(long)
    {
        com.android.server.AlarmManagerService r0;
        long l0, l1;
        java.lang.Object r1;
        int i2, i3, $i5, $i6;
        com.android.server.AlarmManagerService$Injector $r2, $r3, $r4, $r5;
        boolean $z0;
        java.lang.Throwable $r6;
        java.util.TimeZone r7;

        r0 := @this: com.android.server.AlarmManagerService;

        l0 := @parameter0: long;

        $r2 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Injector mInjector>;

        $z0 = virtualinvoke $r2.<com.android.server.AlarmManagerService$Injector: boolean isAlarmDriverPresent()>();

        if $z0 != 0 goto label1;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AlarmManager", "Not setting time since no alarm driver is available.");

        return 0;

     label1:
        r1 = r0.<com.android.server.AlarmManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label2:
        $r3 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Injector mInjector>;

        l1 = virtualinvoke $r3.<com.android.server.AlarmManagerService$Injector: long getCurrentTimeMillis()>();

        $r4 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Injector mInjector>;

        virtualinvoke $r4.<com.android.server.AlarmManagerService$Injector: void setKernelTime(long)>(l0);

        r7 = staticinvoke <java.util.TimeZone: java.util.TimeZone getDefault()>();

        i2 = virtualinvoke r7.<java.util.TimeZone: int getOffset(long)>(l1);

        i3 = virtualinvoke r7.<java.util.TimeZone: int getOffset(long)>(l0);

     label3:
        if i2 == i3 goto label5;

     label4:
        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("AlarmManager", "Timezone offset has changed, updating kernel timezone");

        $r5 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Injector mInjector>;

        $i5 = i3 / 60000;

        $i6 = neg $i5;

        virtualinvoke $r5.<com.android.server.AlarmManagerService$Injector: void setKernelTimezone(int)>($i6);

     label5:
        exitmonitor r1;

     label6:
        return 1;

     label7:
        $r6 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r6;

        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    void setTimeZoneImpl(java.lang.String)
    {
        com.android.server.AlarmManagerService r0;
        int i0, $i2, $i3;
        boolean $z0, $z1, z2;
        java.lang.String $r1, $r5, $r9, r11, r13;
        com.android.server.AlarmManagerService$ClockReceiver $r2;
        android.content.Intent $r3;
        android.content.Context $r7;
        android.os.UserHandle $r8;
        java.lang.Throwable $r10;
        java.util.TimeZone r12;
        com.android.server.AlarmManagerService$Injector $r14, $r15;
        long $l1;

        r0 := @this: com.android.server.AlarmManagerService;

        r11 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r11);

        if $z0 == 0 goto label01;

        return;

     label01:
        r12 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>(r11);

        z2 = 0;

        entermonitor r0;

     label02:
        r13 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("persist.sys.timezone");

     label03:
        if r13 == null goto label05;

     label04:
        $r9 = virtualinvoke r12.<java.util.TimeZone: java.lang.String getID()>();

        $z1 = virtualinvoke r13.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z1 != 0 goto label07;

     label05:
        z2 = 1;

     label06:
        $r1 = virtualinvoke r12.<java.util.TimeZone: java.lang.String getID()>();

        staticinvoke <android.os.SystemProperties: void set(java.lang.String,java.lang.String)>("persist.sys.timezone", $r1);

     label07:
        $r14 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Injector mInjector>;

        $l1 = virtualinvoke $r14.<com.android.server.AlarmManagerService$Injector: long getCurrentTimeMillis()>();

        i0 = virtualinvoke r12.<java.util.TimeZone: int getOffset(long)>($l1);

        $r15 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Injector mInjector>;

        $i2 = i0 / 60000;

        $i3 = neg $i2;

        virtualinvoke $r15.<com.android.server.AlarmManagerService$Injector: void setKernelTimezone(int)>($i3);

        exitmonitor r0;

     label08:
        staticinvoke <java.util.TimeZone: void setDefault(java.util.TimeZone)>(null);

        if z2 == 0 goto label09;

        $r2 = r0.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$ClockReceiver mClockReceiver>;

        virtualinvoke $r2.<com.android.server.AlarmManagerService$ClockReceiver: void scheduleDateChangedEvent()>();

        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.TIMEZONE_CHANGED");

        virtualinvoke $r3.<android.content.Intent: android.content.Intent addFlags(int)>(622854144);

        $r5 = virtualinvoke r12.<java.util.TimeZone: java.lang.String getID()>();

        virtualinvoke $r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("time-zone", $r5);

        $r7 = virtualinvoke r0.<com.android.server.AlarmManagerService: android.content.Context getContext()>();

        $r8 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r7.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)>($r3, $r8);

     label09:
        return;

     label10:
        $r10 := @caughtexception;

     label11:
        exitmonitor r0;

     label12:
        throw $r10;

        catch java.lang.Throwable from label02 to label03 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    void setWakelockWorkSource(android.os.WorkSource, int, java.lang.String, boolean)
    {
        com.android.server.AlarmManagerService r0;
        int i0;
        boolean z0;
        android.os.PowerManager$WakeLock r1, $r2, $r3, r7;
        java.lang.Exception $r4;
        android.os.WorkSource r5, r8;
        java.lang.String r6;

        r0 := @this: com.android.server.AlarmManagerService;

        r5 := @parameter0: android.os.WorkSource;

        i0 := @parameter1: int;

        r6 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

     label01:
        r1 = r0.<com.android.server.AlarmManagerService: android.os.PowerManager$WakeLock mWakeLock>;

     label02:
        if z0 == 0 goto label03;

        goto label04;

     label03:
        r6 = null;

     label04:
        virtualinvoke r1.<android.os.PowerManager$WakeLock: void setHistoryTag(java.lang.String)>(r6);

     label05:
        if r5 == null goto label08;

     label06:
        $r3 = r0.<com.android.server.AlarmManagerService: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r3.<android.os.PowerManager$WakeLock: void setWorkSource(android.os.WorkSource)>(r5);

     label07:
        return;

     label08:
        if i0 < 0 goto label11;

     label09:
        r7 = r0.<com.android.server.AlarmManagerService: android.os.PowerManager$WakeLock mWakeLock>;

        r8 = new android.os.WorkSource;

        specialinvoke r8.<android.os.WorkSource: void <init>(int)>(i0);

        virtualinvoke r7.<android.os.PowerManager$WakeLock: void setWorkSource(android.os.WorkSource)>(r8);

     label10:
        return;

     label11:
        goto label13;

     label12:
        $r4 := @caughtexception;

     label13:
        $r2 = r0.<com.android.server.AlarmManagerService: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r2.<android.os.PowerManager$WakeLock: void setWorkSource(android.os.WorkSource)>(null);

        return;

        catch java.lang.Exception from label01 to label02 with label12;
        catch java.lang.Exception from label04 to label05 with label12;
        catch java.lang.Exception from label06 to label07 with label12;
        catch java.lang.Exception from label09 to label10 with label12;
    }

    boolean triggerAlarmsLocked(java.util.ArrayList, long)
    {
        com.android.server.AlarmManagerService r0, r22;
        java.util.ArrayList r1, r3, $r4, $r7, $r19, r23, r25;
        long l0, l2, l3, l4, $l7, $l13, $l16, $l17, $l18, $l19, $l20, $l21, $l24, $l25, $l26, $l27, $l28, $l31, $l36, $l39, $l41, l44, l45, l46, l47;
        int i1, $i5, $i6, $i9, $i10, $i11, $i12, $i15, $i22, $i23, $i29, $i30, $i32, $i33, $i34, $i35, i42, i43, i48, i49, i50;
        com.android.server.AlarmManagerService$Alarm r2, $r9, $r15, $r26;
        java.util.Comparator $r5;
        java.lang.Object $r6, $r18;
        byte $b8, $b14, $b37, $b38, $b40;
        boolean $z1, z3, z4, z5, $z6, z8, z9;
        android.app.AlarmManager$AlarmClockInfo $r10, $r12;
        java.lang.String $r11, $r16;
        android.os.WorkSource $r13;
        android.app.PendingIntent $r14;
        android.util.SparseArray $r17, $r20;
        android.util.SparseLongArray $r21;
        com.android.server.AlarmManagerService$Batch r24;

        r0 := @this: com.android.server.AlarmManagerService;

        r1 := @parameter0: java.util.ArrayList;

        l0 := @parameter1: long;

        r22 = r0;

        z3 = 0;

     label01:
        $r4 = r22.<com.android.server.AlarmManagerService: java.util.ArrayList mAlarmBatches>;

        i42 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        z4 = 1;

        if i42 <= 0 goto label20;

        r23 = r22.<com.android.server.AlarmManagerService: java.util.ArrayList mAlarmBatches>;

        z5 = 0;

        $r6 = virtualinvoke r23.<java.util.ArrayList: java.lang.Object get(int)>(0);

        r24 = (com.android.server.AlarmManagerService$Batch) $r6;

        $l7 = r24.<com.android.server.AlarmManagerService$Batch: long start>;

        $b8 = $l7 cmp l0;

        if $b8 <= 0 goto label02;

        goto label20;

     label02:
        $r7 = r22.<com.android.server.AlarmManagerService: java.util.ArrayList mAlarmBatches>;

        virtualinvoke $r7.<java.util.ArrayList: java.lang.Object remove(int)>(0);

        i1 = virtualinvoke r24.<com.android.server.AlarmManagerService$Batch: int size()>();

        i43 = 0;

     label03:
        if i43 >= i1 goto label19;

        r2 = virtualinvoke r24.<com.android.server.AlarmManagerService$Batch: com.android.server.AlarmManagerService$Alarm get(int)>(i43);

        $i9 = r2.<com.android.server.AlarmManagerService$Alarm: int flags>;

        $i10 = $i9 & 4;

        if $i10 == 0 goto label05;

        $r21 = r22.<com.android.server.AlarmManagerService: android.util.SparseLongArray mLastAllowWhileIdleDispatch>;

        $i34 = r2.<com.android.server.AlarmManagerService$Alarm: int creatorUid>;

        l44 = virtualinvoke $r21.<android.util.SparseLongArray: long get(int,long)>($i34, -1L);

        $i35 = r2.<com.android.server.AlarmManagerService$Alarm: int creatorUid>;

        $l36 = specialinvoke r22.<com.android.server.AlarmManagerService: long getWhileIdleMinIntervalLocked(int)>($i35);

        l45 = $l36 + l44;

        $b37 = l44 cmp 0L;

        if $b37 < 0 goto label05;

        $b38 = l0 cmp l45;

        if $b38 >= 0 goto label05;

        r2.<com.android.server.AlarmManagerService$Alarm: long whenElapsed> = l45;

        r2.<com.android.server.AlarmManagerService$Alarm: long expectedWhenElapsed> = l45;

        $l39 = r2.<com.android.server.AlarmManagerService$Alarm: long maxWhenElapsed>;

        $b40 = $l39 cmp l45;

        if $b40 >= 0 goto label04;

        r2.<com.android.server.AlarmManagerService$Alarm: long maxWhenElapsed> = l45;

     label04:
        $l41 = r2.<com.android.server.AlarmManagerService$Alarm: long maxWhenElapsed>;

        r2.<com.android.server.AlarmManagerService$Alarm: long expectedMaxWhenElapsed> = $l41;

        specialinvoke r22.<com.android.server.AlarmManagerService: void setImplLocked(com.android.server.AlarmManagerService$Alarm,boolean,boolean)>(r2, z4, z5);

        goto label07;

     label05:
        $z6 = specialinvoke r22.<com.android.server.AlarmManagerService: boolean isBackgroundRestricted(com.android.server.AlarmManagerService$Alarm)>(r2);

        if $z6 == 0 goto label08;

        $r17 = r22.<com.android.server.AlarmManagerService: android.util.SparseArray mPendingBackgroundAlarms>;

        $i32 = r2.<com.android.server.AlarmManagerService$Alarm: int creatorUid>;

        $r18 = virtualinvoke $r17.<android.util.SparseArray: java.lang.Object get(int)>($i32);

        r3 = (java.util.ArrayList) $r18;

        r25 = r3;

        if r3 != null goto label06;

        $r19 = new java.util.ArrayList;

        specialinvoke $r19.<java.util.ArrayList: void <init>()>();

        r25 = $r19;

        $r20 = r22.<com.android.server.AlarmManagerService: android.util.SparseArray mPendingBackgroundAlarms>;

        $i33 = r2.<com.android.server.AlarmManagerService$Alarm: int creatorUid>;

        virtualinvoke $r20.<android.util.SparseArray: void put(int,java.lang.Object)>($i33, $r19);

     label06:
        virtualinvoke r25.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

     label07:
        z8 = z4;

        z9 = z5;

        goto label18;

     label08:
        i49 = (int) z4;

        r2.<com.android.server.AlarmManagerService$Alarm: int count> = i49;

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

        $i11 = r2.<com.android.server.AlarmManagerService$Alarm: int flags>;

        $i12 = $i11 & 2;

        if $i12 == 0 goto label11;

        $r15 = r22.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Alarm mPendingIdleUntil>;

        if $r15 == null goto label09;

        goto label10;

     label09:
        z4 = z5;

     label10:
        $r16 = r2.<com.android.server.AlarmManagerService$Alarm: java.lang.String statsTag>;

        i50 = (int) z4;

        staticinvoke <com.android.server.EventLogTags: void writeDeviceIdleWakeFromIdle(int,java.lang.String)>(i50, $r16);

     label11:
        $r26 = r22.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Alarm mPendingIdleUntil>;

        if $r26 != r2 goto label12;

        r22.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Alarm mPendingIdleUntil> = null;

        virtualinvoke r22.<com.android.server.AlarmManagerService: void rebatchAllAlarmsLocked(boolean)>(z5);

        virtualinvoke r0.<com.android.server.AlarmManagerService: void restorePendingWhileIdleAlarmsLocked()>();

     label12:
        $r9 = r22.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Alarm mNextWakeFromIdle>;

        if $r9 != r2 goto label13;

        r22.<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$Alarm mNextWakeFromIdle> = null;

        virtualinvoke r22.<com.android.server.AlarmManagerService: void rebatchAllAlarmsLocked(boolean)>(z5);

     label13:
        $l13 = r2.<com.android.server.AlarmManagerService$Alarm: long repeatInterval>;

        $b14 = $l13 cmp 0L;

        if $b14 <= 0 goto label14;

        $i15 = r2.<com.android.server.AlarmManagerService$Alarm: int count>;

        $l20 = (long) $i15;

        $l16 = r2.<com.android.server.AlarmManagerService$Alarm: long expectedWhenElapsed>;

        $l18 = l0 - $l16;

        $l17 = r2.<com.android.server.AlarmManagerService$Alarm: long repeatInterval>;

        $l19 = $l18 / $l17;

        $l21 = $l20 + $l19;

        $i22 = (int) $l21;

        r2.<com.android.server.AlarmManagerService$Alarm: int count> = $i22;

        $i23 = r2.<com.android.server.AlarmManagerService$Alarm: int count>;

        $l25 = (long) $i23;

        $l24 = r2.<com.android.server.AlarmManagerService$Alarm: long repeatInterval>;

        l46 = $l25 * $l24;

        $l26 = r2.<com.android.server.AlarmManagerService$Alarm: long expectedWhenElapsed>;

        l47 = $l26 + l46;

        i48 = r2.<com.android.server.AlarmManagerService$Alarm: int type>;

        l2 = r2.<com.android.server.AlarmManagerService$Alarm: long when>;

        l3 = r2.<com.android.server.AlarmManagerService$Alarm: long windowLength>;

        l4 = r2.<com.android.server.AlarmManagerService$Alarm: long repeatInterval>;

        z9 = 0;

        $l27 = l2 + l46;

        $l28 = staticinvoke <com.android.server.AlarmManagerService: long maxTriggerTime(long,long,long)>(l0, l47, l4);

        $l31 = r2.<com.android.server.AlarmManagerService$Alarm: long repeatInterval>;

        $r14 = r2.<com.android.server.AlarmManagerService$Alarm: android.app.PendingIntent operation>;

        $i30 = r2.<com.android.server.AlarmManagerService$Alarm: int flags>;

        $r13 = r2.<com.android.server.AlarmManagerService$Alarm: android.os.WorkSource workSource>;

        $r12 = r2.<com.android.server.AlarmManagerService$Alarm: android.app.AlarmManager$AlarmClockInfo alarmClock>;

        $i29 = r2.<com.android.server.AlarmManagerService$Alarm: int uid>;

        $r11 = r2.<com.android.server.AlarmManagerService$Alarm: java.lang.String packageName>;

        specialinvoke r0.<com.android.server.AlarmManagerService: void setImplLocked(int,long,long,long,long,long,android.app.PendingIntent,android.app.IAlarmListener,java.lang.String,int,boolean,android.os.WorkSource,android.app.AlarmManager$AlarmClockInfo,int,java.lang.String)>(i48, $l27, l47, l3, $l28, $l31, $r14, null, null, $i30, 1, $r13, $r12, $i29, $r11);

        goto label15;

     label14:
        z9 = z5;

     label15:
        $z1 = r2.<com.android.server.AlarmManagerService$Alarm: boolean wakeup>;

        if $z1 == 0 goto label16;

        z3 = 1;

     label16:
        $r10 = r2.<com.android.server.AlarmManagerService$Alarm: android.app.AlarmManager$AlarmClockInfo alarmClock>;

        if $r10 == null goto label17;

        z8 = 1;

        r22 = r0;

        r0.<com.android.server.AlarmManagerService: boolean mNextAlarmClockMayChange> = 1;

        goto label18;

     label17:
        z8 = 1;

        r22 = r0;

     label18:
        i43 = i43 + 1;

        z5 = z9;

        z4 = z8;

        goto label03;

     label19:
        goto label01;

     label20:
        $i5 = r22.<com.android.server.AlarmManagerService: int mCurrentSeq>;

        $i6 = $i5 + 1;

        r22.<com.android.server.AlarmManagerService: int mCurrentSeq> = $i6;

        virtualinvoke r0.<com.android.server.AlarmManagerService: void calculateDeliveryPriorities(java.util.ArrayList)>(r1);

        $r5 = r22.<com.android.server.AlarmManagerService: java.util.Comparator mAlarmDispatchComparator>;

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r1, $r5);

        return z3;
    }
}
