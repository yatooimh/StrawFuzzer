class com.android.server.BinderCallsStatsService$AuthorizedWorkSourceProvider extends java.lang.Object implements com.android.internal.os.BinderInternal$WorkSourceProvider
{
    private android.util.ArraySet mAppIdWhitelist;

    void <init>()
    {
        com.android.server.BinderCallsStatsService$AuthorizedWorkSourceProvider r0;
        android.util.ArraySet $r1;

        r0 := @this: com.android.server.BinderCallsStatsService$AuthorizedWorkSourceProvider;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new android.util.ArraySet;

        specialinvoke $r1.<android.util.ArraySet: void <init>()>();

        r0.<com.android.server.BinderCallsStatsService$AuthorizedWorkSourceProvider: android.util.ArraySet mAppIdWhitelist> = $r1;

        return;
    }

    private android.util.ArraySet createAppidWhitelist(android.content.Context)
    {
        com.android.server.BinderCallsStatsService$AuthorizedWorkSourceProvider r0;
        android.content.pm.PackageManager r2;
        int i0, $i1, $i2, $i3, $i4, i6;
        android.content.pm.PackageInfo r3;
        android.util.ArraySet $r6;
        java.lang.Integer $r7, $r11;
        java.lang.String[] $r8;
        java.lang.Object $r9;
        java.lang.String $r10, $r15, $r17;
        android.content.pm.PackageManager$NameNotFoundException $r12;
        java.lang.StringBuilder $r13;
        android.content.Context r18;
        java.util.List r19;

        r0 := @this: com.android.server.BinderCallsStatsService$AuthorizedWorkSourceProvider;

        r18 := @parameter0: android.content.Context;

        $r6 = new android.util.ArraySet;

        specialinvoke $r6.<android.util.ArraySet: void <init>()>();

        $i1 = staticinvoke <android.os.Process: int myUid()>();

        $i2 = staticinvoke <android.os.UserHandle: int getAppId(int)>($i1);

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        virtualinvoke $r6.<android.util.ArraySet: boolean add(java.lang.Object)>($r7);

        r2 = virtualinvoke r18.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r8 = newarray (java.lang.String)[1];

        $r8[0] = "android.permission.UPDATE_DEVICE_STATS";

        r19 = virtualinvoke r2.<android.content.pm.PackageManager: java.util.List getPackagesHoldingPermissions(java.lang.String[],int)>($r8, 786432);

        i0 = interfaceinvoke r19.<java.util.List: int size()>();

        i6 = 0;

     label1:
        if i6 >= i0 goto label6;

        $r9 = interfaceinvoke r19.<java.util.List: java.lang.Object get(int)>(i6);

        r3 = (android.content.pm.PackageInfo) $r9;

     label2:
        $r10 = r3.<android.content.pm.PackageInfo: java.lang.String packageName>;

        $i3 = virtualinvoke r2.<android.content.pm.PackageManager: int getPackageUid(java.lang.String,int)>($r10, 786432);

        $i4 = staticinvoke <android.os.UserHandle: int getAppId(int)>($i3);

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        virtualinvoke $r6.<android.util.ArraySet: boolean add(java.lang.Object)>($r11);

     label3:
        goto label5;

     label4:
        $r12 := @caughtexception;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot find uid for package name ");

        $r15 = r3.<android.content.pm.PackageInfo: java.lang.String packageName>;

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BinderCallsStatsService", $r17, $r12);

     label5:
        i6 = i6 + 1;

        goto label1;

     label6:
        return $r6;

        catch android.content.pm.PackageManager$NameNotFoundException from label2 to label3 with label4;
    }

    public void dump(java.io.PrintWriter, com.android.internal.os.AppIdToPackageMap)
    {
        com.android.server.BinderCallsStatsService$AuthorizedWorkSourceProvider r0;
        java.io.PrintWriter r1;
        com.android.internal.os.AppIdToPackageMap r2;
        java.util.Iterator r3;
        java.lang.Integer r4;
        android.util.ArraySet $r6;
        boolean $z0;
        java.lang.Object $r7;
        java.lang.StringBuilder $r8;
        int $i0;
        java.lang.String $r10, $r12;

        r0 := @this: com.android.server.BinderCallsStatsService$AuthorizedWorkSourceProvider;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: com.android.internal.os.AppIdToPackageMap;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("AppIds of apps that can set the work source:");

        $r6 = r0.<com.android.server.BinderCallsStatsService$AuthorizedWorkSourceProvider: android.util.ArraySet mAppIdWhitelist>;

        r3 = virtualinvoke $r6.<android.util.ArraySet: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.Integer) $r7;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t- ");

        $i0 = virtualinvoke r4.<java.lang.Integer: int intValue()>();

        $r10 = virtualinvoke r2.<com.android.internal.os.AppIdToPackageMap: java.lang.String mapAppId(int)>($i0);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r12);

        goto label1;

     label2:
        return;
    }

    protected int getCallingUid()
    {
        com.android.server.BinderCallsStatsService$AuthorizedWorkSourceProvider r0;
        int $i0;

        r0 := @this: com.android.server.BinderCallsStatsService$AuthorizedWorkSourceProvider;

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        return $i0;
    }

    public int resolveWorkSourceUid(int)
    {
        com.android.server.BinderCallsStatsService$AuthorizedWorkSourceProvider r0;
        int i0, i1, i2;
        android.util.ArraySet $r1;
        java.lang.Integer $r2;
        boolean $z0, z1;

        r0 := @this: com.android.server.BinderCallsStatsService$AuthorizedWorkSourceProvider;

        i1 := @parameter0: int;

        i0 = virtualinvoke r0.<com.android.server.BinderCallsStatsService$AuthorizedWorkSourceProvider: int getCallingUid()>();

        i2 = staticinvoke <android.os.UserHandle: int getAppId(int)>(i0);

        $r1 = r0.<com.android.server.BinderCallsStatsService$AuthorizedWorkSourceProvider: android.util.ArraySet mAppIdWhitelist>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $z0 = virtualinvoke $r1.<android.util.ArraySet: boolean contains(java.lang.Object)>($r2);

        if $z0 == 0 goto label5;

        if i1 == -1 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        if z1 == 0 goto label3;

        goto label4;

     label3:
        i1 = i0;

     label4:
        return i1;

     label5:
        return i0;
    }

    public void systemReady(android.content.Context)
    {
        com.android.server.BinderCallsStatsService$AuthorizedWorkSourceProvider r0;
        android.content.Context r1;
        android.util.ArraySet $r2;

        r0 := @this: com.android.server.BinderCallsStatsService$AuthorizedWorkSourceProvider;

        r1 := @parameter0: android.content.Context;

        $r2 = specialinvoke r0.<com.android.server.BinderCallsStatsService$AuthorizedWorkSourceProvider: android.util.ArraySet createAppidWhitelist(android.content.Context)>(r1);

        r0.<com.android.server.BinderCallsStatsService$AuthorizedWorkSourceProvider: android.util.ArraySet mAppIdWhitelist> = $r2;

        return;
    }
}
