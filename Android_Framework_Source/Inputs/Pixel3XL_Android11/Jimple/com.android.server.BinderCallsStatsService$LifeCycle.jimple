public class com.android.server.BinderCallsStatsService$LifeCycle extends com.android.server.SystemService
{
    private com.android.internal.os.BinderCallsStats mBinderCallsStats;
    private com.android.server.BinderCallsStatsService mService;
    private com.android.server.BinderCallsStatsService$AuthorizedWorkSourceProvider mWorkSourceProvider;

    public void <init>(android.content.Context)
    {
        com.android.server.BinderCallsStatsService$LifeCycle r0;
        android.content.Context r1;

        r0 := @this: com.android.server.BinderCallsStatsService$LifeCycle;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.android.server.SystemService: void <init>(android.content.Context)>(r1);

        return;
    }

    public void onBootPhase(int)
    {
        com.android.server.BinderCallsStatsService$LifeCycle r0;
        int i0;
        com.android.internal.os.CachedDeviceState$Readonly r1;
        java.lang.Object $r2;
        com.android.internal.os.BinderCallsStats $r3;
        com.android.server.BinderCallsStatsService$AuthorizedWorkSourceProvider $r4;
        android.content.Context $r5, $r7;
        com.android.server.BinderCallsStatsService $r6;

        r0 := @this: com.android.server.BinderCallsStatsService$LifeCycle;

        i0 := @parameter0: int;

        if 500 != i0 goto label1;

        $r2 = virtualinvoke r0.<com.android.server.BinderCallsStatsService$LifeCycle: java.lang.Object getLocalService(java.lang.Class)>(class "Lcom/android/internal/os/CachedDeviceState$Readonly;");

        r1 = (com.android.internal.os.CachedDeviceState$Readonly) $r2;

        $r3 = r0.<com.android.server.BinderCallsStatsService$LifeCycle: com.android.internal.os.BinderCallsStats mBinderCallsStats>;

        virtualinvoke $r3.<com.android.internal.os.BinderCallsStats: void setDeviceState(com.android.internal.os.CachedDeviceState$Readonly)>(r1);

        $r4 = r0.<com.android.server.BinderCallsStatsService$LifeCycle: com.android.server.BinderCallsStatsService$AuthorizedWorkSourceProvider mWorkSourceProvider>;

        $r5 = virtualinvoke r0.<com.android.server.BinderCallsStatsService$LifeCycle: android.content.Context getContext()>();

        virtualinvoke $r4.<com.android.server.BinderCallsStatsService$AuthorizedWorkSourceProvider: void systemReady(android.content.Context)>($r5);

        $r6 = r0.<com.android.server.BinderCallsStatsService$LifeCycle: com.android.server.BinderCallsStatsService mService>;

        $r7 = virtualinvoke r0.<com.android.server.BinderCallsStatsService$LifeCycle: android.content.Context getContext()>();

        virtualinvoke $r6.<com.android.server.BinderCallsStatsService: void systemReady(android.content.Context)>($r7);

     label1:
        return;
    }

    public void onStart()
    {
        com.android.server.BinderCallsStatsService$LifeCycle r0;
        com.android.internal.os.BinderCallsStats $r1, $r6, $r8, $r10;
        com.android.internal.os.BinderCallsStats$Injector $r2;
        com.android.server.BinderCallsStatsService$AuthorizedWorkSourceProvider $r3, $r5;
        com.android.server.BinderCallsStatsService $r4, $r9;
        com.android.server.BinderCallsStatsService$Internal $r7;
        boolean $z0;

        r0 := @this: com.android.server.BinderCallsStatsService$LifeCycle;

        $r1 = new com.android.internal.os.BinderCallsStats;

        $r2 = new com.android.internal.os.BinderCallsStats$Injector;

        specialinvoke $r2.<com.android.internal.os.BinderCallsStats$Injector: void <init>()>();

        specialinvoke $r1.<com.android.internal.os.BinderCallsStats: void <init>(com.android.internal.os.BinderCallsStats$Injector)>($r2);

        r0.<com.android.server.BinderCallsStatsService$LifeCycle: com.android.internal.os.BinderCallsStats mBinderCallsStats> = $r1;

        $r3 = new com.android.server.BinderCallsStatsService$AuthorizedWorkSourceProvider;

        specialinvoke $r3.<com.android.server.BinderCallsStatsService$AuthorizedWorkSourceProvider: void <init>()>();

        r0.<com.android.server.BinderCallsStatsService$LifeCycle: com.android.server.BinderCallsStatsService$AuthorizedWorkSourceProvider mWorkSourceProvider> = $r3;

        $r4 = new com.android.server.BinderCallsStatsService;

        $r6 = r0.<com.android.server.BinderCallsStatsService$LifeCycle: com.android.internal.os.BinderCallsStats mBinderCallsStats>;

        $r5 = r0.<com.android.server.BinderCallsStatsService$LifeCycle: com.android.server.BinderCallsStatsService$AuthorizedWorkSourceProvider mWorkSourceProvider>;

        specialinvoke $r4.<com.android.server.BinderCallsStatsService: void <init>(com.android.internal.os.BinderCallsStats,com.android.server.BinderCallsStatsService$AuthorizedWorkSourceProvider)>($r6, $r5);

        r0.<com.android.server.BinderCallsStatsService$LifeCycle: com.android.server.BinderCallsStatsService mService> = $r4;

        $r7 = new com.android.server.BinderCallsStatsService$Internal;

        $r8 = r0.<com.android.server.BinderCallsStatsService$LifeCycle: com.android.internal.os.BinderCallsStats mBinderCallsStats>;

        specialinvoke $r7.<com.android.server.BinderCallsStatsService$Internal: void <init>(com.android.internal.os.BinderCallsStats)>($r8);

        virtualinvoke r0.<com.android.server.BinderCallsStatsService$LifeCycle: void publishLocalService(java.lang.Class,java.lang.Object)>(class "Lcom/android/server/BinderCallsStatsService$Internal;", $r7);

        $r9 = r0.<com.android.server.BinderCallsStatsService$LifeCycle: com.android.server.BinderCallsStatsService mService>;

        virtualinvoke r0.<com.android.server.BinderCallsStatsService$LifeCycle: void publishBinderService(java.lang.String,android.os.IBinder)>("binder_calls_stats", $r9);

        $z0 = staticinvoke <android.os.SystemProperties: boolean getBoolean(java.lang.String,boolean)>("persist.sys.binder_calls_detailed_tracking", 0);

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("BinderCallsStatsService", "Enabled CPU usage tracking for binder calls. Controlled by persist.sys.binder_calls_detailed_tracking or via dumpsys binder_calls_stats --enable-detailed-tracking");

        $r10 = r0.<com.android.server.BinderCallsStatsService$LifeCycle: com.android.internal.os.BinderCallsStats mBinderCallsStats>;

        virtualinvoke $r10.<com.android.internal.os.BinderCallsStats: void setDetailedTracking(boolean)>(1);

     label1:
        return;
    }
}
