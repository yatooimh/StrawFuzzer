public class com.android.server.BootReceiver extends android.content.BroadcastReceiver
{
    private static final java.lang.String FSCK_FS_MODIFIED;
    private static final java.lang.String FSCK_PASS_PATTERN;
    private static final java.lang.String FSCK_TREE_OPTIMIZATION_PATTERN;
    private static final int FS_STAT_FS_FIXED;
    private static final java.lang.String FS_STAT_PATTERN;
    private static final int GMSCORE_LASTK_LOG_SIZE;
    private static final int LASTK_LOG_SIZE;
    private static final java.lang.String LAST_HEADER_FILE;
    private static final java.lang.String[] LAST_KMSG_FILES;
    private static final java.lang.String LAST_SHUTDOWN_TIME_PATTERN;
    private static final java.lang.String LOG_FILES_FILE;
    private static final int LOG_SIZE;
    private static final java.lang.String METRIC_SHUTDOWN_TIME_START;
    private static final java.lang.String METRIC_SYSTEM_SERVER;
    private static final java.lang.String[] MOUNT_DURATION_PROPS_POSTFIX;
    private static final java.lang.String OLD_UPDATER_CLASS;
    private static final java.lang.String OLD_UPDATER_PACKAGE;
    private static final java.lang.String SHUTDOWN_METRICS_FILE;
    private static final java.lang.String SHUTDOWN_TRON_METRICS_PREFIX;
    private static final java.lang.String TAG;
    private static final java.lang.String TAG_TOMBSTONE;
    private static final java.lang.String TAG_TRUNCATED;
    private static final java.io.File TOMBSTONE_DIR;
    private static final int UMOUNT_STATUS_NOT_AVAILABLE;
    private static final java.io.File lastHeaderFile;
    private static final android.util.AtomicFile sFile;
    private static android.os.FileObserver sTombstoneObserver;

    static void <clinit>()
    {
        int $i1, i2, i3, i4;
        java.io.File $r0, $r2, $r3, $r4, $r5;
        android.util.AtomicFile $r1;
        java.lang.String[] $r6, $r7;

        <com.android.server.BootReceiver: int UMOUNT_STATUS_NOT_AVAILABLE> = 4;

        <com.android.server.BootReceiver: java.lang.String TAG_TRUNCATED> = "[[TRUNCATED]]\n";

        <com.android.server.BootReceiver: java.lang.String TAG_TOMBSTONE> = "SYSTEM_TOMBSTONE";

        <com.android.server.BootReceiver: java.lang.String TAG> = "BootReceiver";

        <com.android.server.BootReceiver: java.lang.String SHUTDOWN_TRON_METRICS_PREFIX> = "shutdown_";

        <com.android.server.BootReceiver: java.lang.String SHUTDOWN_METRICS_FILE> = "/data/system/shutdown-metrics.txt";

        <com.android.server.BootReceiver: java.lang.String OLD_UPDATER_PACKAGE> = "com.google.android.systemupdater";

        <com.android.server.BootReceiver: java.lang.String OLD_UPDATER_CLASS> = "com.google.android.systemupdater.SystemUpdateReceiver";

        <com.android.server.BootReceiver: java.lang.String METRIC_SYSTEM_SERVER> = "shutdown_system_server";

        <com.android.server.BootReceiver: java.lang.String METRIC_SHUTDOWN_TIME_START> = "begin_shutdown";

        <com.android.server.BootReceiver: java.lang.String LOG_FILES_FILE> = "log-files.xml";

        <com.android.server.BootReceiver: java.lang.String LAST_SHUTDOWN_TIME_PATTERN> = "powerctl_shutdown_time_ms:([0-9]+):([0-9]+)";

        <com.android.server.BootReceiver: java.lang.String LAST_HEADER_FILE> = "last-header.txt";

        <com.android.server.BootReceiver: int GMSCORE_LASTK_LOG_SIZE> = 196608;

        <com.android.server.BootReceiver: java.lang.String FS_STAT_PATTERN> = "fs_stat,[^,]*/([^/,]+),(0x[0-9a-fA-F]+)";

        <com.android.server.BootReceiver: int FS_STAT_FS_FIXED> = 1024;

        <com.android.server.BootReceiver: java.lang.String FSCK_TREE_OPTIMIZATION_PATTERN> = "Inode [0-9]+ extent tree.*could be shorter";

        <com.android.server.BootReceiver: java.lang.String FSCK_PASS_PATTERN> = "Pass ([1-9]E?):";

        <com.android.server.BootReceiver: java.lang.String FSCK_FS_MODIFIED> = "FILE SYSTEM WAS MODIFIED";

        i2 = staticinvoke <android.os.SystemProperties: int getInt(java.lang.String,int)>("ro.debuggable", 0);

        if i2 != 1 goto label1;

        i3 = 98304;

        goto label2;

     label1:
        i3 = 65536;

     label2:
        <com.android.server.BootReceiver: int LOG_SIZE> = i3;

        i4 = 65536;

        $i1 = staticinvoke <android.os.SystemProperties: int getInt(java.lang.String,int)>("ro.debuggable", 0);

        if $i1 != 1 goto label3;

        i4 = 196608;

     label3:
        <com.android.server.BootReceiver: int LASTK_LOG_SIZE> = i4;

        $r0 = new java.io.File;

        specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>("/data/tombstones");

        <com.android.server.BootReceiver: java.io.File TOMBSTONE_DIR> = $r0;

        <com.android.server.BootReceiver: android.os.FileObserver sTombstoneObserver> = null;

        $r1 = new android.util.AtomicFile;

        $r2 = new java.io.File;

        $r3 = staticinvoke <android.os.Environment: java.io.File getDataSystemDirectory()>();

        specialinvoke $r2.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, "log-files.xml");

        specialinvoke $r1.<android.util.AtomicFile: void <init>(java.io.File,java.lang.String)>($r2, "log-files");

        <com.android.server.BootReceiver: android.util.AtomicFile sFile> = $r1;

        $r4 = new java.io.File;

        $r5 = staticinvoke <android.os.Environment: java.io.File getDataSystemDirectory()>();

        specialinvoke $r4.<java.io.File: void <init>(java.io.File,java.lang.String)>($r5, "last-header.txt");

        <com.android.server.BootReceiver: java.io.File lastHeaderFile> = $r4;

        $r6 = newarray (java.lang.String)[3];

        $r6[0] = "early";

        $r6[1] = "default";

        $r6[2] = "late";

        <com.android.server.BootReceiver: java.lang.String[] MOUNT_DURATION_PROPS_POSTFIX> = $r6;

        $r7 = newarray (java.lang.String)[2];

        $r7[0] = "/sys/fs/pstore/console-ramoops";

        $r7[1] = "/proc/last_kmsg";

        <com.android.server.BootReceiver: java.lang.String[] LAST_KMSG_FILES> = $r7;

        return;
    }

    public void <init>()
    {
        com.android.server.BootReceiver r0;

        r0 := @this: com.android.server.BootReceiver;

        specialinvoke r0.<android.content.BroadcastReceiver: void <init>()>();

        return;
    }

    static void access$000(com.android.server.BootReceiver, android.content.Context) throws java.io.IOException
    {
        com.android.server.BootReceiver r0;
        android.content.Context r1;

        r0 := @parameter0: com.android.server.BootReceiver;

        r1 := @parameter1: android.content.Context;

        specialinvoke r0.<com.android.server.BootReceiver: void logBootEvents(android.content.Context)>(r1);

        return;
    }

    static void access$100(com.android.server.BootReceiver, android.content.Context)
    {
        com.android.server.BootReceiver r0;
        android.content.Context r1;

        r0 := @parameter0: com.android.server.BootReceiver;

        r1 := @parameter1: android.content.Context;

        specialinvoke r0.<com.android.server.BootReceiver: void removeOldUpdatePackages(android.content.Context)>(r1);

        return;
    }

    static java.util.HashMap access$200()
    {
        java.util.HashMap $r0;

        $r0 = staticinvoke <com.android.server.BootReceiver: java.util.HashMap readTimestamps()>();

        return $r0;
    }

    static java.io.File access$300()
    {
        java.io.File $r0;

        $r0 = <com.android.server.BootReceiver: java.io.File TOMBSTONE_DIR>;

        return $r0;
    }

    static int access$400()
    {
        int $i0;

        $i0 = <com.android.server.BootReceiver: int LOG_SIZE>;

        return $i0;
    }

    static void access$500(android.os.DropBoxManager, java.util.HashMap, java.lang.String, java.lang.String, int, java.lang.String) throws java.io.IOException
    {
        android.os.DropBoxManager r0;
        java.util.HashMap r1;
        java.lang.String r2, r3, r4;
        int i0;

        r0 := @parameter0: android.os.DropBoxManager;

        r1 := @parameter1: java.util.HashMap;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        i0 := @parameter4: int;

        r4 := @parameter5: java.lang.String;

        staticinvoke <com.android.server.BootReceiver: void addFileToDropBox(android.os.DropBoxManager,java.util.HashMap,java.lang.String,java.lang.String,int,java.lang.String)>(r0, r1, r2, r3, i0, r4);

        return;
    }

    static void access$600(com.android.server.BootReceiver, java.util.HashMap)
    {
        com.android.server.BootReceiver r0;
        java.util.HashMap r1;

        r0 := @parameter0: com.android.server.BootReceiver;

        r1 := @parameter1: java.util.HashMap;

        specialinvoke r0.<com.android.server.BootReceiver: void writeTimestamps(java.util.HashMap)>(r1);

        return;
    }

    private static void addAuditErrorsToDropBox(android.os.DropBoxManager, java.util.HashMap, java.lang.String, int, java.lang.String) throws java.io.IOException
    {
        android.os.DropBoxManager r0;
        java.lang.String r1, r2, r4, $r11, $r14, $r17, $r19, $r23, r31;
        java.lang.String[] r3;
        int i0, $i3, i8, i13;
        boolean $z0, $z1, $z2;
        java.io.File $r5, $r27, $r28, r30;
        byte $b2, $b6, $b7, $b12;
        java.lang.Long $r6, $r26;
        java.lang.StringBuilder $r8, $r9, $r15, $r20;
        java.lang.Object $r25;
        long $l5, l9, l10, l11;
        java.util.HashMap r29;

        r0 := @parameter0: android.os.DropBoxManager;

        r29 := @parameter1: java.util.HashMap;

        r1 := @parameter2: java.lang.String;

        i8 := @parameter3: int;

        r2 := @parameter4: java.lang.String;

        if r0 == null goto label8;

        $z0 = virtualinvoke r0.<android.os.DropBoxManager: boolean isTagEnabled(java.lang.String)>(r2);

        if $z0 != 0 goto label1;

        goto label8;

     label1:
        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("BootReceiver", "Copying audit failures to DropBox");

        $r5 = new java.io.File;

        specialinvoke $r5.<java.io.File: void <init>(java.lang.String)>("/proc/last_kmsg");

        r30 = $r5;

        l9 = virtualinvoke $r5.<java.io.File: long lastModified()>();

        l10 = l9;

        $b2 = l9 cmp 0L;

        if $b2 > 0 goto label2;

        $r27 = new java.io.File;

        specialinvoke $r27.<java.io.File: void <init>(java.lang.String)>("/sys/fs/pstore/console-ramoops");

        r30 = $r27;

        l11 = virtualinvoke $r27.<java.io.File: long lastModified()>();

        l10 = l11;

        $b7 = l11 cmp 0L;

        if $b7 > 0 goto label2;

        $r28 = new java.io.File;

        specialinvoke $r28.<java.io.File: void <init>(java.lang.String)>("/sys/fs/pstore/console-ramoops-0");

        r30 = $r28;

        l10 = virtualinvoke $r28.<java.io.File: long lastModified()>();

     label2:
        $b12 = l10 cmp 0L;

        if $b12 > 0 goto label3;

        return;

     label3:
        $z1 = virtualinvoke r29.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r2);

        if $z1 == 0 goto label4;

        $r25 = virtualinvoke r29.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r2);

        $r26 = (java.lang.Long) $r25;

        $l5 = virtualinvoke $r26.<java.lang.Long: long longValue()>();

        $b6 = $l5 cmp l10;

        if $b6 != 0 goto label4;

        return;

     label4:
        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l10);

        virtualinvoke r29.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r6);

        r31 = staticinvoke <android.os.FileUtils: java.lang.String readTextFile(java.io.File,int,java.lang.String)>(r30, i8, "[[TRUNCATED]]\n");

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        r3 = virtualinvoke r31.<java.lang.String: java.lang.String[] split(java.lang.String)>("\n");

        i0 = lengthof r3;

        i13 = 0;

     label5:
        if i13 >= i0 goto label7;

        r4 = r3[i13];

        $z2 = virtualinvoke r4.<java.lang.String: boolean contains(java.lang.CharSequence)>("audit");

        if $z2 == 0 goto label6;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

     label6:
        i13 = i13 + 1;

        goto label5;

     label7:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Copied ");

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $i3 = virtualinvoke $r11.<java.lang.String: int length()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" worth of audits to DropBox");

        $r14 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("BootReceiver", $r14);

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r17 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<android.os.DropBoxManager: void addText(java.lang.String,java.lang.String)>(r2, $r19);

        return;

     label8:
        return;
    }

    private static void addFileToDropBox(android.os.DropBoxManager, java.util.HashMap, java.lang.String, java.lang.String, int, java.lang.String) throws java.io.IOException
    {
        android.os.DropBoxManager r0;
        java.util.HashMap r1;
        java.lang.String r2, r3, r4;
        int i0;

        r0 := @parameter0: android.os.DropBoxManager;

        r1 := @parameter1: java.util.HashMap;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        i0 := @parameter4: int;

        r4 := @parameter5: java.lang.String;

        staticinvoke <com.android.server.BootReceiver: void addFileWithFootersToDropBox(android.os.DropBoxManager,java.util.HashMap,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>(r0, r1, r2, "", r3, i0, r4);

        return;
    }

    private static void addFileWithFootersToDropBox(android.os.DropBoxManager, java.util.HashMap, java.lang.String, java.lang.String, java.lang.String, int, java.lang.String) throws java.io.IOException
    {
        android.os.DropBoxManager r0;
        java.lang.String r1, r2, r3, r14, r16, r18;
        int i0;
        long l1, $l3;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.io.File $r4;
        byte $b2, $b4;
        java.lang.Long $r5, $r12;
        java.lang.StringBuilder $r7;
        java.lang.Object $r11;
        java.util.HashMap r13;

        r0 := @parameter0: android.os.DropBoxManager;

        r13 := @parameter1: java.util.HashMap;

        r14 := @parameter2: java.lang.String;

        r1 := @parameter3: java.lang.String;

        r2 := @parameter4: java.lang.String;

        i0 := @parameter5: int;

        r3 := @parameter6: java.lang.String;

        if r0 == null goto label6;

        $z0 = virtualinvoke r0.<android.os.DropBoxManager: boolean isTagEnabled(java.lang.String)>(r3);

        if $z0 != 0 goto label1;

        goto label6;

     label1:
        $r4 = new java.io.File;

        specialinvoke $r4.<java.io.File: void <init>(java.lang.String)>(r2);

        l1 = virtualinvoke $r4.<java.io.File: long lastModified()>();

        $b2 = l1 cmp 0L;

        if $b2 > 0 goto label2;

        return;

     label2:
        $z1 = virtualinvoke r13.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r2);

        if $z1 == 0 goto label3;

        $r11 = virtualinvoke r13.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r2);

        $r12 = (java.lang.Long) $r11;

        $l3 = virtualinvoke $r12.<java.lang.Long: long longValue()>();

        $b4 = $l3 cmp l1;

        if $b4 != 0 goto label3;

        return;

     label3:
        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);

        virtualinvoke r13.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r5);

        r16 = staticinvoke <android.os.FileUtils: java.lang.String readTextFile(java.io.File,int,java.lang.String)>($r4, i0, "[[TRUNCATED]]\n");

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r14);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        r18 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $z2 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("SYSTEM_TOMBSTONE");

        if $z2 == 0 goto label4;

        $z3 = virtualinvoke r16.<java.lang.String: boolean contains(java.lang.CharSequence)>(">>> system_server <<<");

        if $z3 == 0 goto label4;

        staticinvoke <com.android.server.BootReceiver: void addTextToDropBox(android.os.DropBoxManager,java.lang.String,java.lang.String,java.lang.String,int)>(r0, "system_server_native_crash", r18, r2, i0);

     label4:
        $z4 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("SYSTEM_TOMBSTONE");

        if $z4 == 0 goto label5;

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int)>(186);

     label5:
        staticinvoke <com.android.server.BootReceiver: void addTextToDropBox(android.os.DropBoxManager,java.lang.String,java.lang.String,java.lang.String,int)>(r0, r3, r18, r2, i0);

        return;

     label6:
        return;
    }

    private static void addFsckErrorsToDropBoxAndLogFsStat(android.os.DropBoxManager, java.util.HashMap, java.lang.String, int, java.lang.String) throws java.io.IOException
    {
        android.os.DropBoxManager r0;
        java.util.HashMap r1;
        java.lang.String r2, r3, r6, $r10, r12;
        int i0, i1, i6, i7, i8;
        java.util.regex.Pattern r5;
        boolean $z1, $z2, $z3, $z4, z5, z6;
        java.lang.StringBuilder $r7;
        java.io.File $r11;
        long $l4;
        byte $b5;
        java.lang.String[] r13;
        java.util.regex.Matcher r14;

        r0 := @parameter0: android.os.DropBoxManager;

        r1 := @parameter1: java.util.HashMap;

        r2 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        r3 := @parameter4: java.lang.String;

        if r0 == null goto label02;

        $z4 = virtualinvoke r0.<android.os.DropBoxManager: boolean isTagEnabled(java.lang.String)>(r3);

        if $z4 != 0 goto label01;

        goto label02;

     label01:
        z5 = 1;

        goto label03;

     label02:
        z5 = 0;

     label03:
        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("BootReceiver", "Checking for fsck errors");

        $r11 = new java.io.File;

        specialinvoke $r11.<java.io.File: void <init>(java.lang.String)>("/dev/fscklogs/log");

        $l4 = virtualinvoke $r11.<java.io.File: long lastModified()>();

        $b5 = $l4 cmp 0L;

        if $b5 > 0 goto label04;

        return;

     label04:
        r12 = staticinvoke <android.os.FileUtils: java.lang.String readTextFile(java.io.File,int,java.lang.String)>($r11, i0, "[[TRUNCATED]]\n");

        r5 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("fs_stat,[^,]*/([^/,]+),(0x[0-9a-fA-F]+)");

        r13 = virtualinvoke r12.<java.lang.String: java.lang.String[] split(java.lang.String)>("\n");

        i6 = 0;

        i1 = lengthof r13;

        z6 = 0;

        i7 = 0;

        i8 = 0;

     label05:
        if i7 >= i1 goto label09;

        r6 = r13[i7];

        $z1 = virtualinvoke r6.<java.lang.String: boolean contains(java.lang.CharSequence)>("FILE SYSTEM WAS MODIFIED");

        if $z1 == 0 goto label06;

        z6 = 1;

        goto label08;

     label06:
        $z2 = virtualinvoke r6.<java.lang.String: boolean contains(java.lang.CharSequence)>("fs_stat");

        if $z2 == 0 goto label08;

        r14 = virtualinvoke r5.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r6);

        $z3 = virtualinvoke r14.<java.util.regex.Matcher: boolean find()>();

        if $z3 == 0 goto label07;

        staticinvoke <com.android.server.BootReceiver: void handleFsckFsStat(java.util.regex.Matcher,java.lang.String[],int,int)>(r14, r13, i6, i8);

        i6 = i8;

        goto label08;

     label07:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cannot parse fs_stat:");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BootReceiver", $r10);

        goto label08;

     label08:
        i8 = i8 + 1;

        i7 = i7 + 1;

        goto label05;

     label09:
        if z5 == 0 goto label10;

        if z6 == 0 goto label10;

        staticinvoke <com.android.server.BootReceiver: void addFileToDropBox(android.os.DropBoxManager,java.util.HashMap,java.lang.String,java.lang.String,int,java.lang.String)>(r0, r1, r2, "/dev/fscklogs/log", i0, r3);

        goto label10;

     label10:
        virtualinvoke $r11.<java.io.File: boolean delete()>();

        return;
    }

    private static void addLastkToDropBox(android.os.DropBoxManager, java.util.HashMap, java.lang.String, java.lang.String, java.lang.String, int, java.lang.String) throws java.io.IOException
    {
        android.os.DropBoxManager r0;
        java.util.HashMap r1;
        java.lang.String r2, r3, r4, r5, $r6;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8;

        r0 := @parameter0: android.os.DropBoxManager;

        r1 := @parameter1: java.util.HashMap;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String;

        i8 := @parameter5: int;

        r5 := @parameter6: java.lang.String;

        $i1 = virtualinvoke r2.<java.lang.String: int length()>();

        $r6 = "[[TRUNCATED]]\n";

        $i2 = virtualinvoke $r6.<java.lang.String: int length()>();

        $i3 = $i1 + $i2;

        $i4 = virtualinvoke r3.<java.lang.String: int length()>();

        i0 = $i3 + $i4;

        $i5 = <com.android.server.BootReceiver: int LASTK_LOG_SIZE>;

        $i6 = $i5 + i0;

        if $i6 <= 196608 goto label2;

        if 196608 <= i0 goto label1;

        $i7 = 196608 - i0;

        i8 = neg $i7;

        goto label2;

     label1:
        i8 = 0;

     label2:
        staticinvoke <com.android.server.BootReceiver: void addFileWithFootersToDropBox(android.os.DropBoxManager,java.util.HashMap,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>(r0, r1, r2, r3, r4, i8, r5);

        return;
    }

    private static void addTextToDropBox(android.os.DropBoxManager, java.lang.String, java.lang.String, java.lang.String, int)
    {
        android.os.DropBoxManager r0;
        java.lang.String r1, r2, r3, $r11;
        int i0;
        java.lang.StringBuilder $r5;
        java.lang.Object[] $r12;
        java.lang.Integer $r13;

        r0 := @parameter0: android.os.DropBoxManager;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        i0 := @parameter4: int;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Copying ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to DropBox (");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r11 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("BootReceiver", $r11);

        virtualinvoke r0.<android.os.DropBoxManager: void addText(java.lang.String,java.lang.String)>(r1, r2);

        $r12 = newarray (java.lang.Object)[3];

        $r12[0] = r3;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r12[1] = $r13;

        $r12[2] = r1;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(81002, $r12);

        return;
    }

    public static int fixFsckFsStat(java.lang.String, int, java.lang.String[], int, int)
    {
        java.lang.String r0, $r4, $r6, $r8, $r10, $r11, $r13, $r16, r18, r19, r22, r25;
        int i0, $i2, $i3, i4, i5, i6, i7;
        java.util.regex.Pattern r1, r2;
        java.lang.StringBuilder $r3, $r5, $r7, $r9, $r12, $r15;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, z15, z16, z17, z18, z19, z20, $z21;
        java.util.regex.Matcher $r14, r20;
        java.lang.String[] r17;

        r0 := @parameter0: java.lang.String;

        i4 := @parameter1: int;

        r17 := @parameter2: java.lang.String[];

        i5 := @parameter3: int;

        i0 := @parameter4: int;

        $i2 = i4 & 1024;

        if $i2 == 0 goto label19;

        r1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("Pass ([1-9]E?):");

        r2 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("Inode [0-9]+ extent tree.*could be shorter");

        r18 = "";

        z15 = 0;

        z16 = 0;

        z17 = 0;

     label01:
        if i5 >= i0 goto label13;

        r19 = r17[i5];

        $z0 = virtualinvoke r19.<java.lang.String: boolean contains(java.lang.CharSequence)>("FILE SYSTEM WAS MODIFIED");

        if $z0 == 0 goto label02;

        goto label13;

     label02:
        $z1 = virtualinvoke r19.<java.lang.String: boolean startsWith(java.lang.String)>("Pass ");

        if $z1 == 0 goto label04;

        r20 = virtualinvoke r1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r19);

        $z14 = virtualinvoke r20.<java.util.regex.Matcher: boolean find()>();

        if $z14 == 0 goto label03;

        r18 = virtualinvoke r20.<java.util.regex.Matcher: java.lang.String group(int)>(1);

     label03:
        z18 = z15;

        z19 = z17;

        goto label12;

     label04:
        $z2 = virtualinvoke r19.<java.lang.String: boolean startsWith(java.lang.String)>("Inode ");

        if $z2 == 0 goto label06;

        $r14 = virtualinvoke r2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r19);

        $z12 = virtualinvoke $r14.<java.util.regex.Matcher: boolean find()>();

        if $z12 == 0 goto label05;

        $z13 = virtualinvoke r18.<java.lang.String: boolean equals(java.lang.Object)>("1");

        if $z13 == 0 goto label05;

        z18 = 1;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("fs_stat, partition:");

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" found tree optimization:");

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r19);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("BootReceiver", $r16);

        z19 = z17;

        goto label12;

     label05:
        z20 = 1;

        r22 = r19;

        goto label14;

     label06:
        $z3 = virtualinvoke r19.<java.lang.String: boolean startsWith(java.lang.String)>("[QUOTA WARNING]");

        if $z3 == 0 goto label07;

        $z11 = virtualinvoke r18.<java.lang.String: boolean equals(java.lang.Object)>("5");

        if $z11 == 0 goto label07;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("fs_stat, partition:");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" found quota warning:");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r19);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("BootReceiver", $r13);

        z16 = 1;

        z18 = z15;

        z19 = z17;

        if z15 != 0 goto label12;

        r22 = r19;

        z16 = 1;

        z20 = 0;

        goto label14;

     label07:
        $z4 = virtualinvoke r19.<java.lang.String: boolean startsWith(java.lang.String)>("Update quota info");

        if $z4 == 0 goto label08;

        $z10 = virtualinvoke r18.<java.lang.String: boolean equals(java.lang.Object)>("5");

        if $z10 == 0 goto label08;

        goto label11;

     label08:
        $z5 = virtualinvoke r19.<java.lang.String: boolean startsWith(java.lang.String)>("Timestamp(s) on inode");

        if $z5 == 0 goto label10;

        $z7 = virtualinvoke r19.<java.lang.String: boolean contains(java.lang.CharSequence)>("beyond 2310-04-04 are likely pre-1970");

        if $z7 == 0 goto label10;

        $z8 = virtualinvoke r18.<java.lang.String: boolean equals(java.lang.Object)>("1");

        if $z8 == 0 goto label10;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("fs_stat, partition:");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" found timestamp adjustment:");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r19);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("BootReceiver", $r10);

        i6 = i5;

        $i3 = i5 + 1;

        $r11 = r17[$i3];

        $z9 = virtualinvoke $r11.<java.lang.String: boolean contains(java.lang.CharSequence)>("Fix? yes");

        if $z9 == 0 goto label09;

        i6 = i5 + 1;

     label09:
        z19 = 1;

        z18 = z15;

        i5 = i6;

        goto label12;

     label10:
        r25 = virtualinvoke r19.<java.lang.String: java.lang.String trim()>();

        $z21 = virtualinvoke r25.<java.lang.String: boolean isEmpty()>();

        if $z21 != 0 goto label11;

        $z6 = virtualinvoke r18.<java.lang.String: boolean isEmpty()>();

        if $z6 != 0 goto label11;

        z20 = 1;

        r22 = r25;

        goto label14;

     label11:
        z19 = z17;

        z18 = z15;

     label12:
        i5 = i5 + 1;

        z15 = z18;

        z17 = z19;

        goto label01;

     label13:
        r22 = null;

        z20 = 0;

     label14:
        if z20 == 0 goto label15;

        i7 = i4;

        if r22 == null goto label20;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("fs_stat, partition:");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" fix:");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r22);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("BootReceiver", $r8);

        i7 = i4;

        goto label20;

     label15:
        if z16 == 0 goto label16;

        if z15 != 0 goto label16;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("fs_stat, got quota fix without tree optimization, partition:");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("BootReceiver", $r6);

        i7 = i4;

        goto label20;

     label16:
        if z15 == 0 goto label17;

        if z16 != 0 goto label18;

     label17:
        i7 = i4;

        if z17 == 0 goto label20;

     label18:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("fs_stat, partition:");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" fix ignored");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("BootReceiver", $r4);

        i7 = i4 & -1025;

        goto label20;

     label19:
        i7 = i4;

     label20:
        return i7;
    }

    private java.lang.String getBootHeadersToLogAndUpdate() throws java.io.IOException
    {
        com.android.server.BootReceiver r0;
        java.io.File $r3, $r15;
        java.lang.StringBuilder $r4, $r8, $r13;
        java.lang.String $r7, $r11, $r17, r18, r19;
        java.lang.Throwable $r12;

        r0 := @this: com.android.server.BootReceiver;

        r18 = specialinvoke r0.<com.android.server.BootReceiver: java.lang.String getPreviousBootHeaders()>();

        r19 = specialinvoke r0.<com.android.server.BootReceiver: java.lang.String getCurrentBootHeaders()>();

     label1:
        $r3 = <com.android.server.BootReceiver: java.io.File lastHeaderFile>;

        staticinvoke <android.os.FileUtils: void stringToFile(java.io.File,java.lang.String)>($r3, r19);

     label2:
        goto label4;

     label3:
        $r12 := @caughtexception;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error writing ");

        $r15 = <com.android.server.BootReceiver: java.io.File lastHeaderFile>;

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15);

        $r17 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BootReceiver", $r17, $r12);

     label4:
        if r18 != null goto label5;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isPrevious: false\n");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r19);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;

     label5:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isPrevious: true\n");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private java.lang.String getCurrentBootHeaders() throws java.io.IOException
    {
        com.android.server.BootReceiver r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r4, $r8, $r12, $r16, $r20, $r25, $r28;
        java.io.File $r24;

        r0 := @this: com.android.server.BootReceiver;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>(512);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Build: ");

        $r4 = <android.os.Build: java.lang.String FINGERPRINT>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Hardware: ");

        $r8 = <android.os.Build: java.lang.String BOARD>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Revision: ");

        $r12 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String,java.lang.String)>("ro.revision", "");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bootloader: ");

        $r16 = <android.os.Build: java.lang.String BOOTLOADER>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Radio: ");

        $r20 = staticinvoke <android.os.Build: java.lang.String getRadioVersion()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Kernel: ");

        $r24 = new java.io.File;

        specialinvoke $r24.<java.io.File: void <init>(java.lang.String)>("/proc/version");

        $r25 = staticinvoke <android.os.FileUtils: java.lang.String readTextFile(java.io.File,int,java.lang.String)>($r24, 1024, "...\n");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r28 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r28;
    }

    private java.lang.String getPreviousBootHeaders()
    {
        com.android.server.BootReceiver r0;
        java.io.File $r1;
        java.lang.Throwable $r2;
        java.lang.String r3;

        r0 := @this: com.android.server.BootReceiver;

     label1:
        $r1 = <com.android.server.BootReceiver: java.io.File lastHeaderFile>;

        r3 = staticinvoke <android.os.FileUtils: java.lang.String readTextFile(java.io.File,int,java.lang.String)>($r1, 0, null);

     label2:
        return r3;

     label3:
        $r2 := @caughtexception;

        return null;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private static void handleFsckFsStat(java.util.regex.Matcher, java.lang.String[], int, int)
    {
        int i0, i1, i4, i5;
        java.lang.String r0, $r1, $r3, $r8, $r14, $r16, $r21, $r22;
        java.lang.Integer $r2;
        boolean $z0, $z1;
        java.lang.Throwable $r9;
        java.lang.StringBuilder $r10, $r19;
        java.util.regex.Matcher r17;
        java.lang.String[] r18;

        r17 := @parameter0: java.util.regex.Matcher;

        r18 := @parameter1: java.lang.String[];

        i4 := @parameter2: int;

        i0 := @parameter3: int;

        r0 = virtualinvoke r17.<java.util.regex.Matcher: java.lang.String group(int)>(1);

     label1:
        $r1 = virtualinvoke r17.<java.util.regex.Matcher: java.lang.String group(int)>(2);

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>($r1);

        i1 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

     label2:
        i5 = staticinvoke <com.android.server.BootReceiver: int fixFsckFsStat(java.lang.String,int,java.lang.String[],int,int)>(r0, i1, r18, i4, i0);

        $r3 = "userdata";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 != 0 goto label3;

        $r8 = "data";

        $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z1 == 0 goto label4;

     label3:
        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int,int)>(242, 3, i5);

     label4:
        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("fs_stat, partition:");

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" stat:0x");

        $r21 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i5);

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("BootReceiver", $r22);

        return;

     label5:
        $r9 := @caughtexception;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cannot parse fs_stat: partition:");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" stat:");

        $r14 = virtualinvoke r17.<java.util.regex.Matcher: java.lang.String group(int)>(2);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BootReceiver", $r16);

        return;

        catch java.lang.NumberFormatException from label1 to label2 with label5;
    }

    private void logBootEvents(android.content.Context) throws java.io.IOException
    {
        com.android.server.BootReceiver r0;
        android.os.DropBoxManager r1;
        java.lang.String r2, $r7, $r10, $r11, $r21, r23, r24, r26;
        java.lang.Object $r4;
        long $l0, $l4;
        byte $b1;
        com.android.server.BootReceiver$2 $r5;
        java.io.File $r6, $r8, $r9, $r28;
        int $i2, $i3, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, i19;
        boolean $z0, $z1;
        java.lang.StringBuilder $r12, $r18;
        android.content.Context r22;
        java.util.HashMap r27;
        java.io.File[] r29;

        r0 := @this: com.android.server.BootReceiver;

        r22 := @parameter0: android.content.Context;

        $r4 = virtualinvoke r22.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("dropbox");

        r1 = (android.os.DropBoxManager) $r4;

        r2 = specialinvoke r0.<com.android.server.BootReceiver: java.lang.String getBootHeadersToLogAndUpdate()>();

        r23 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String,java.lang.String)>("ro.boot.bootreason", null);

        r24 = staticinvoke <android.os.RecoverySystem: java.lang.String handleAftermath(android.content.Context)>(r22);

        if r24 == null goto label01;

        if r1 == null goto label01;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r24);

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<android.os.DropBoxManager: void addText(java.lang.String,java.lang.String)>("SYSTEM_RECOVERY_LOG", $r21);

     label01:
        if r23 == null goto label02;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>(int)>(512);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Boot info:\n");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Last boot reason: ");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r23);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        r26 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label03;

     label02:
        r26 = "";

     label03:
        r27 = staticinvoke <com.android.server.BootReceiver: java.util.HashMap readTimestamps()>();

        $l0 = staticinvoke <android.os.SystemProperties: long getLong(java.lang.String,long)>("ro.runtime.firstboot", 0L);

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label07;

        $z1 = staticinvoke <android.os.storage.StorageManager: boolean inCryptKeeperBounce()>();

        if $z1 == 0 goto label04;

        goto label05;

     label04:
        $l4 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r11 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l4);

        staticinvoke <android.os.SystemProperties: void set(java.lang.String,java.lang.String)>("ro.runtime.firstboot", $r11);

     label05:
        if r1 == null goto label06;

        virtualinvoke r1.<android.os.DropBoxManager: void addText(java.lang.String,java.lang.String)>("SYSTEM_BOOT", r2);

     label06:
        $i5 = <com.android.server.BootReceiver: int LASTK_LOG_SIZE>;

        $i6 = neg $i5;

        staticinvoke <com.android.server.BootReceiver: void addLastkToDropBox(android.os.DropBoxManager,java.util.HashMap,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>(r1, r27, r2, r26, "/proc/last_kmsg", $i6, "SYSTEM_LAST_KMSG");

        $i7 = <com.android.server.BootReceiver: int LASTK_LOG_SIZE>;

        $i8 = neg $i7;

        staticinvoke <com.android.server.BootReceiver: void addLastkToDropBox(android.os.DropBoxManager,java.util.HashMap,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>(r1, r27, r2, r26, "/sys/fs/pstore/console-ramoops", $i8, "SYSTEM_LAST_KMSG");

        $i9 = <com.android.server.BootReceiver: int LASTK_LOG_SIZE>;

        $i10 = neg $i9;

        staticinvoke <com.android.server.BootReceiver: void addLastkToDropBox(android.os.DropBoxManager,java.util.HashMap,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>(r1, r27, r2, r26, "/sys/fs/pstore/console-ramoops-0", $i10, "SYSTEM_LAST_KMSG");

        $i11 = <com.android.server.BootReceiver: int LOG_SIZE>;

        $i12 = neg $i11;

        staticinvoke <com.android.server.BootReceiver: void addFileToDropBox(android.os.DropBoxManager,java.util.HashMap,java.lang.String,java.lang.String,int,java.lang.String)>(r1, r27, r2, "/cache/recovery/log", $i12, "SYSTEM_RECOVERY_LOG");

        $i13 = <com.android.server.BootReceiver: int LOG_SIZE>;

        $i14 = neg $i13;

        staticinvoke <com.android.server.BootReceiver: void addFileToDropBox(android.os.DropBoxManager,java.util.HashMap,java.lang.String,java.lang.String,int,java.lang.String)>(r1, r27, r2, "/cache/recovery/last_kmsg", $i14, "SYSTEM_RECOVERY_KMSG");

        $i15 = <com.android.server.BootReceiver: int LOG_SIZE>;

        $i16 = neg $i15;

        staticinvoke <com.android.server.BootReceiver: void addAuditErrorsToDropBox(android.os.DropBoxManager,java.util.HashMap,java.lang.String,int,java.lang.String)>(r1, r27, r2, $i16, "SYSTEM_AUDIT");

        goto label08;

     label07:
        if r1 == null goto label08;

        virtualinvoke r1.<android.os.DropBoxManager: void addText(java.lang.String,java.lang.String)>("SYSTEM_RESTART", r2);

     label08:
        staticinvoke <com.android.server.BootReceiver: void logFsShutdownTime()>();

        staticinvoke <com.android.server.BootReceiver: void logFsMountTime()>();

        $i17 = <com.android.server.BootReceiver: int LOG_SIZE>;

        $i18 = neg $i17;

        staticinvoke <com.android.server.BootReceiver: void addFsckErrorsToDropBoxAndLogFsStat(android.os.DropBoxManager,java.util.HashMap,java.lang.String,int,java.lang.String)>(r1, r27, r2, $i18, "SYSTEM_FSCK");

        staticinvoke <com.android.server.BootReceiver: void logSystemServerShutdownTimeMetrics()>();

        $r28 = <com.android.server.BootReceiver: java.io.File TOMBSTONE_DIR>;

        r29 = virtualinvoke $r28.<java.io.File: java.io.File[] listFiles()>();

        i19 = 0;

     label09:
        if r29 == null goto label11;

        $i2 = lengthof r29;

        if i19 >= $i2 goto label11;

        $r8 = r29[i19];

        $z0 = virtualinvoke $r8.<java.io.File: boolean isFile()>();

        if $z0 == 0 goto label10;

        $r9 = r29[i19];

        $r10 = virtualinvoke $r9.<java.io.File: java.lang.String getPath()>();

        $i3 = <com.android.server.BootReceiver: int LOG_SIZE>;

        staticinvoke <com.android.server.BootReceiver: void addFileToDropBox(android.os.DropBoxManager,java.util.HashMap,java.lang.String,java.lang.String,int,java.lang.String)>(r1, r27, r2, $r10, $i3, "SYSTEM_TOMBSTONE");

     label10:
        i19 = i19 + 1;

        goto label09;

     label11:
        specialinvoke r0.<com.android.server.BootReceiver: void writeTimestamps(java.util.HashMap)>(r27);

        $r5 = new com.android.server.BootReceiver$2;

        $r6 = <com.android.server.BootReceiver: java.io.File TOMBSTONE_DIR>;

        $r7 = virtualinvoke $r6.<java.io.File: java.lang.String getPath()>();

        specialinvoke $r5.<com.android.server.BootReceiver$2: void <init>(com.android.server.BootReceiver,java.lang.String,int,android.os.DropBoxManager,java.lang.String)>(r0, $r7, 256, r1, r2);

        <com.android.server.BootReceiver: android.os.FileObserver sTombstoneObserver> = $r5;

        virtualinvoke $r5.<android.os.FileObserver: void startWatching()>();

        return;
    }

    private static void logFsMountTime()
    {
        java.lang.String[] r0;
        int i0, i1, i2, i3;
        java.lang.String r1, $r6;
        java.lang.StringBuilder $r3;
        boolean $z0, $z1, $z2;
        byte b4, b5;

        r0 = <com.android.server.BootReceiver: java.lang.String[] MOUNT_DURATION_PROPS_POSTFIX>;

        i0 = lengthof r0;

        i3 = 0;

     label01:
        if i3 >= i0 goto label12;

        r1 = r0[i3];

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ro.boottime.init.mount_all.");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        i1 = staticinvoke <android.os.SystemProperties: int getInt(java.lang.String,int)>($r6, 0);

        if i1 == 0 goto label11;

        b4 = -1;

        i2 = virtualinvoke r1.<java.lang.String: int hashCode()>();

        if i2 == 3314342 goto label05;

        if i2 == 96278371 goto label04;

        if i2 == 1544803905 goto label03;

     label02:
        goto label06;

     label03:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("default");

        if $z2 == 0 goto label02;

        b4 = 1;

        goto label06;

     label04:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("early");

        if $z1 == 0 goto label02;

        b4 = 0;

        goto label06;

     label05:
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("late");

        if $z0 == 0 goto label02;

        b4 = 2;

     label06:
        if b4 == 0 goto label09;

        if b4 == 1 goto label08;

        if b4 == 2 goto label07;

        goto label11;

     label07:
        b5 = 12;

        goto label10;

     label08:
        b5 = 10;

        goto label10;

     label09:
        b5 = 11;

     label10:
        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int,int)>(239, b5, i1);

     label11:
        i3 = i3 + 1;

        goto label01;

     label12:
        return;
    }

    private static void logFsShutdownTime()
    {
        java.lang.String[] r0;
        int i0, $i1, $i2, i3;
        java.util.regex.Pattern $r1;
        boolean $z0, $z1;
        java.lang.String $r2, $r3, $r5, $r6, $r7, $r9, r12;
        java.lang.StringBuilder $r4;
        java.io.File $r8, r11;
        java.lang.Throwable $r10;
        java.util.regex.Matcher r13;

        r0 = <com.android.server.BootReceiver: java.lang.String[] LAST_KMSG_FILES>;

        i0 = lengthof r0;

        i3 = 0;

     label1:
        r11 = null;

        if i3 >= i0 goto label2;

        $r8 = new java.io.File;

        $r9 = r0[i3];

        specialinvoke $r8.<java.io.File: void <init>(java.lang.String)>($r9);

        r11 = $r8;

        $z1 = virtualinvoke $r8.<java.io.File: boolean exists()>();

        if $z1 != 0 goto label2;

        i3 = i3 + 1;

        goto label1;

     label2:
        if r11 != null goto label3;

        return;

     label3:
        r12 = staticinvoke <android.os.FileUtils: java.lang.String readTextFile(java.io.File,int,java.lang.String)>(r11, -16384, null);

     label4:
        $r1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>("powerctl_shutdown_time_ms:([0-9]+):([0-9]+)", 8);

        r13 = virtualinvoke $r1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r12);

        $z0 = virtualinvoke r13.<java.util.regex.Matcher: boolean find()>();

        if $z0 == 0 goto label5;

        $r2 = virtualinvoke r13.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int,int)>(239, 9, $i1);

        $r3 = virtualinvoke r13.<java.util.regex.Matcher: java.lang.String group(int)>(2);

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3);

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int,int)>(242, 2, $i2);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("boot_fs_shutdown,");

        $r5 = virtualinvoke r13.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r6 = virtualinvoke r13.<java.util.regex.Matcher: java.lang.String group(int)>(2);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("BootReceiver", $r7);

        goto label6;

     label5:
        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int,int)>(242, 2, 4);

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BootReceiver", "boot_fs_shutdown, string not found");

     label6:
        return;

     label7:
        $r10 := @caughtexception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("BootReceiver", "cannot read last msg", $r10);

        return;

        catch java.io.IOException from label3 to label4 with label7;
    }

    private static void logStatsdShutdownAtom(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, $r7, $r12, $r17, r18, r19, r20;
        boolean $z0, $z1, z2;
        java.lang.StringBuilder $r4, $r9, $r14;
        java.lang.Throwable $r8, $r13;
        long l8, l9, l10, l11;

        r18 := @parameter0: java.lang.String;

        r19 := @parameter1: java.lang.String;

        r0 := @parameter2: java.lang.String;

        r1 := @parameter3: java.lang.String;

        l8 = 0L;

        if r18 == null goto label02;

        $z0 = virtualinvoke r18.<java.lang.String: boolean equals(java.lang.Object)>("y");

        if $z0 == 0 goto label01;

        z2 = 1;

        goto label04;

     label01:
        $z1 = virtualinvoke r18.<java.lang.String: boolean equals(java.lang.Object)>("n");

        if $z1 != 0 goto label03;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected value for reboot : ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("BootReceiver", $r7);

        goto label03;

     label02:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("BootReceiver", "No value received for reboot");

     label03:
        z2 = 0;

     label04:
        if r19 == null goto label05;

        r20 = r19;

        goto label06;

     label05:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("BootReceiver", "No value received for shutdown reason");

        r20 = "<EMPTY>";

     label06:
        if r0 == null goto label11;

     label07:
        l9 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r0);

     label08:
        l8 = l9;

     label09:
        l10 = l8;

        goto label12;

     label10:
        $r8 := @caughtexception;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot parse shutdown start time: ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("BootReceiver", $r12);

        goto label09;

     label11:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("BootReceiver", "No value received for shutdown start time");

        l10 = 0L;

     label12:
        if r1 == null goto label16;

     label13:
        l11 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r1);

     label14:
        goto label17;

     label15:
        $r13 := @caughtexception;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot parse shutdown duration: ");

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("BootReceiver", $r17);

        l11 = 0L;

        goto label14;

     label16:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("BootReceiver", "No value received for shutdown duration");

        l11 = 0L;

     label17:
        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,boolean,java.lang.String,long,long)>(56, z2, r20, l10, l11);

        return;

        catch java.lang.NumberFormatException from label07 to label08 with label10;
        catch java.lang.NumberFormatException from label13 to label14 with label15;
    }

    private static void logSystemServerShutdownTimeMetrics()
    {
        java.lang.String[] r1, r2;
        int i0, $i1, i2;
        java.io.File $r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.String $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r12, $r15, r16, r19, r20, r21, r22, r24, r25, r26, $r27;
        java.lang.StringBuilder $r11, $r14;
        java.lang.Throwable $r13;

        $r3 = new java.io.File;

        specialinvoke $r3.<java.io.File: void <init>(java.lang.String)>("/data/system/shutdown-metrics.txt");

        r16 = null;

        $z0 = virtualinvoke $r3.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label04;

     label01:
        r16 = staticinvoke <android.os.FileUtils: java.lang.String readTextFile(java.io.File,int,java.lang.String)>($r3, 0, null);

     label02:
        goto label04;

     label03:
        $r13 := @caughtexception;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Problem reading ");

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BootReceiver", $r15, $r13);

        r16 = null;

     label04:
        $z5 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r16);

        if $z5 != 0 goto label12;

        r19 = null;

        r20 = null;

        r21 = null;

        r22 = null;

        r1 = virtualinvoke r16.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        i0 = lengthof r1;

        i2 = 0;

     label05:
        if i2 >= i0 goto label11;

        $r4 = r1[i2];

        r2 = virtualinvoke $r4.<java.lang.String: java.lang.String[] split(java.lang.String)>(":");

        $i1 = lengthof r2;

        if $i1 == 2 goto label06;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Wrong format of shutdown metrics - ");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("BootReceiver", $r12);

        r24 = r19;

        r25 = r20;

        goto label10;

     label06:
        r26 = r22;

        $r5 = r2[0];

        $z1 = virtualinvoke $r5.<java.lang.String: boolean startsWith(java.lang.String)>("shutdown_");

        if $z1 == 0 goto label07;

        $r9 = r2[0];

        $r8 = r2[1];

        staticinvoke <com.android.server.BootReceiver: void logTronShutdownMetric(java.lang.String,java.lang.String)>($r9, $r8);

        r26 = r22;

        $r10 = r2[0];

        $z4 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>("shutdown_system_server");

        if $z4 == 0 goto label07;

        r26 = r2[1];

     label07:
        $r27 = r2[0];

        $z6 = virtualinvoke $r27.<java.lang.String: boolean equals(java.lang.Object)>("reboot");

        if $z6 == 0 goto label08;

        r24 = r2[1];

        r25 = r20;

        r22 = r26;

        goto label10;

     label08:
        $r6 = r2[0];

        $z2 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("reason");

        if $z2 == 0 goto label09;

        r25 = r2[1];

        r24 = r19;

        r22 = r26;

        goto label10;

     label09:
        r24 = r19;

        r25 = r20;

        r22 = r26;

        $r7 = r2[0];

        $z3 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("begin_shutdown");

        if $z3 == 0 goto label10;

        r21 = r2[1];

        r22 = r26;

        r25 = r20;

        r24 = r19;

     label10:
        i2 = i2 + 1;

        r19 = r24;

        r20 = r25;

        goto label05;

     label11:
        staticinvoke <com.android.server.BootReceiver: void logStatsdShutdownAtom(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r19, r20, r21, r22);

     label12:
        virtualinvoke $r3.<java.io.File: boolean delete()>();

        return;

        catch java.io.IOException from label01 to label02 with label03;
    }

    private static void logTronShutdownMetric(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, $r8;
        int i0;
        java.lang.Throwable $r2;
        java.lang.StringBuilder $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

     label1:
        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r1);

     label2:
        if i0 < 0 goto label3;

        staticinvoke <com.android.internal.logging.MetricsLogger: void histogram(android.content.Context,java.lang.String,int)>(null, r0, i0);

     label3:
        return;

     label4:
        $r2 := @caughtexception;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot parse metric ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" int value - ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("BootReceiver", $r8);

        return;

        catch java.lang.NumberFormatException from label1 to label2 with label4;
    }

    private static java.util.HashMap readTimestamps()
    {
        android.util.AtomicFile r0, $r2, $r32;
        org.xmlpull.v1.XmlPullParser r1;
        java.nio.charset.Charset $r3;
        java.lang.String $r4, $r5, $r7, $r9, $r10, $r11, $r19, $r23, $r28, $r36, $r41;
        boolean $z6, z7, z8, z9, z10, z11, z12;
        java.lang.Long $r12, $r13;
        long $l1;
        int $i2, i8, i9, i10;
        java.lang.Throwable $r15, $r16, $r20, $r24, $r25, $r29, $r30, $r37;
        java.io.File $r33;
        java.lang.NullPointerException $r38;
        java.util.HashMap r42;
        java.io.FileInputStream r43;
        java.lang.StringBuilder r44, r50, r52, r54, r56, r58;
        java.lang.IllegalStateException r45;

        r0 = <com.android.server.BootReceiver: android.util.AtomicFile sFile>;

        entermonitor r0;

     label01:
        r42 = new java.util.HashMap;

        specialinvoke r42.<java.util.HashMap: void <init>()>();

     label02:
        z7 = 0;

        z8 = 0;

        z9 = 0;

        z10 = 0;

        z11 = 0;

        z12 = 0;

     label03:
        $r2 = <com.android.server.BootReceiver: android.util.AtomicFile sFile>;

        r43 = virtualinvoke $r2.<android.util.AtomicFile: java.io.FileInputStream openRead()>();

     label04:
        r1 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

        $r3 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r4 = virtualinvoke $r3.<java.nio.charset.Charset: java.lang.String name()>();

        interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>(r43, $r4);

     label05:
        i8 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

     label06:
        if i8 == 2 goto label07;

        if i8 == 1 goto label07;

        goto label05;

     label07:
        if i8 != 2 goto label22;

     label08:
        i9 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label09:
        i10 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

     label10:
        if i10 == 1 goto label17;

        if i10 != 3 goto label12;

     label11:
        $i2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i2 <= i9 goto label17;

     label12:
        if i10 == 3 goto label09;

        if i10 != 4 goto label13;

        goto label09;

     label13:
        $r5 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z6 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("log");

        if $z6 == 0 goto label15;

        $r10 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "filename");

        $r11 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "timestamp");

        $r12 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>($r11);

        $l1 = virtualinvoke $r12.<java.lang.Long: long longValue()>();

        $r13 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        virtualinvoke r42.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, $r13);

     label14:
        goto label16;

     label15:
        r44 = new java.lang.StringBuilder;

        specialinvoke r44.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown tag: ");

        $r7 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        virtualinvoke r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke r44.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BootReceiver", $r9);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r1);

     label16:
        goto label09;

     label17:
        z8 = 1;

        z9 = 1;

        z10 = 1;

        z11 = 1;

        z12 = 1;

        z7 = 1;

        if r43 == null goto label19;

     label18:
        virtualinvoke r43.<java.io.FileInputStream: void close()>();

     label19:
        goto label88;

     label20:
        virtualinvoke r42.<java.util.HashMap: void clear()>();

     label21:
        goto label88;

     label22:
        r45 = new java.lang.IllegalStateException;

        specialinvoke r45.<java.lang.IllegalStateException: void <init>(java.lang.String)>("no start tag found");

        throw r45;

     label23:
        $r15 := @caughtexception;

        if r43 == null goto label28;

     label24:
        virtualinvoke r43.<java.io.FileInputStream: void close()>();

     label25:
        goto label28;

     label26:
        $r37 := @caughtexception;

        z7 = 0;

        z8 = 0;

        z9 = 0;

        z10 = 0;

        z11 = 0;

        z12 = 0;

     label27:
        virtualinvoke $r15.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r37);

     label28:
        z7 = 0;

        z8 = 0;

        z9 = 0;

        z10 = 0;

        z11 = 0;

        z12 = 0;

     label29:
        throw $r15;

     label30:
        $r29 := @caughtexception;

        goto label90;

     label31:
        $r25 := @caughtexception;

        z7 = z8;

     label32:
        r50 = new java.lang.StringBuilder;

     label33:
        z7 = z8;

     label34:
        specialinvoke r50.<java.lang.StringBuilder: void <init>()>();

     label35:
        z7 = z8;

     label36:
        virtualinvoke r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed parsing ");

     label37:
        z7 = z8;

     label38:
        virtualinvoke r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r25);

     label39:
        z7 = z8;

     label40:
        $r28 = virtualinvoke r50.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BootReceiver", $r28);

     label41:
        if z8 != 0 goto label88;

        goto label20;

     label42:
        $r38 := @caughtexception;

        z7 = z9;

     label43:
        r52 = new java.lang.StringBuilder;

     label44:
        z7 = z9;

     label45:
        specialinvoke r52.<java.lang.StringBuilder: void <init>()>();

     label46:
        z7 = z9;

     label47:
        virtualinvoke r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed parsing ");

     label48:
        z7 = z9;

     label49:
        virtualinvoke r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r38);

     label50:
        z7 = z9;

     label51:
        $r41 = virtualinvoke r52.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BootReceiver", $r41);

     label52:
        if z9 != 0 goto label88;

        goto label20;

     label53:
        $r16 := @caughtexception;

        z7 = z10;

     label54:
        r54 = new java.lang.StringBuilder;

     label55:
        z7 = z10;

     label56:
        specialinvoke r54.<java.lang.StringBuilder: void <init>()>();

     label57:
        z7 = z10;

     label58:
        virtualinvoke r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed parsing ");

     label59:
        z7 = z10;

     label60:
        virtualinvoke r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

     label61:
        z7 = z10;

     label62:
        $r19 = virtualinvoke r54.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BootReceiver", $r19);

     label63:
        if z10 != 0 goto label88;

        goto label20;

     label64:
        $r20 := @caughtexception;

        z7 = z11;

     label65:
        r56 = new java.lang.StringBuilder;

     label66:
        z7 = z11;

     label67:
        specialinvoke r56.<java.lang.StringBuilder: void <init>()>();

     label68:
        z7 = z11;

     label69:
        virtualinvoke r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed parsing ");

     label70:
        z7 = z11;

     label71:
        virtualinvoke r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r20);

     label72:
        z7 = z11;

     label73:
        $r23 = virtualinvoke r56.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BootReceiver", $r23);

     label74:
        if z11 != 0 goto label88;

        goto label20;

     label75:
        $r30 := @caughtexception;

        z7 = z12;

     label76:
        r58 = new java.lang.StringBuilder;

     label77:
        z7 = z12;

     label78:
        specialinvoke r58.<java.lang.StringBuilder: void <init>()>();

     label79:
        z7 = z12;

     label80:
        virtualinvoke r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No existing last log timestamp file ");

     label81:
        z7 = z12;

     label82:
        $r32 = <com.android.server.BootReceiver: android.util.AtomicFile sFile>;

        $r33 = virtualinvoke $r32.<android.util.AtomicFile: java.io.File getBaseFile()>();

        virtualinvoke r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r33);

     label83:
        z7 = z12;

     label84:
        virtualinvoke r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; starting empty");

     label85:
        z7 = z12;

     label86:
        $r36 = virtualinvoke r58.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("BootReceiver", $r36);

     label87:
        if z12 != 0 goto label88;

        goto label20;

     label88:
        exitmonitor r0;

     label89:
        return r42;

     label90:
        if z7 != 0 goto label92;

     label91:
        virtualinvoke r42.<java.util.HashMap: void clear()>();

     label92:
        throw $r29;

     label93:
        $r24 := @caughtexception;

     label94:
        exitmonitor r0;

     label95:
        throw $r24;

        catch java.lang.Throwable from label01 to label02 with label93;
        catch java.io.FileNotFoundException from label03 to label04 with label75;
        catch java.io.IOException from label03 to label04 with label64;
        catch java.lang.IllegalStateException from label03 to label04 with label53;
        catch java.lang.NullPointerException from label03 to label04 with label42;
        catch org.xmlpull.v1.XmlPullParserException from label03 to label04 with label31;
        catch java.lang.Throwable from label03 to label04 with label30;
        catch java.lang.Throwable from label04 to label05 with label23;
        catch java.lang.Throwable from label05 to label06 with label23;
        catch java.lang.Throwable from label08 to label09 with label23;
        catch java.lang.Throwable from label09 to label10 with label23;
        catch java.lang.Throwable from label11 to label12 with label23;
        catch java.lang.Throwable from label13 to label14 with label23;
        catch java.lang.Throwable from label15 to label16 with label23;
        catch java.io.FileNotFoundException from label18 to label19 with label75;
        catch java.io.IOException from label18 to label19 with label64;
        catch java.lang.IllegalStateException from label18 to label19 with label53;
        catch java.lang.NullPointerException from label18 to label19 with label42;
        catch org.xmlpull.v1.XmlPullParserException from label18 to label19 with label31;
        catch java.lang.Throwable from label18 to label19 with label30;
        catch java.lang.Throwable from label20 to label21 with label93;
        catch java.lang.Throwable from label22 to label23 with label23;
        catch java.lang.Throwable from label24 to label25 with label26;
        catch java.io.FileNotFoundException from label27 to label28 with label75;
        catch java.io.IOException from label27 to label28 with label64;
        catch java.lang.IllegalStateException from label27 to label28 with label53;
        catch java.lang.NullPointerException from label27 to label28 with label42;
        catch org.xmlpull.v1.XmlPullParserException from label27 to label28 with label31;
        catch java.lang.Throwable from label27 to label28 with label30;
        catch java.io.FileNotFoundException from label29 to label30 with label75;
        catch java.io.IOException from label29 to label30 with label64;
        catch java.lang.IllegalStateException from label29 to label30 with label53;
        catch java.lang.NullPointerException from label29 to label30 with label42;
        catch org.xmlpull.v1.XmlPullParserException from label29 to label30 with label31;
        catch java.lang.Throwable from label29 to label30 with label30;
        catch java.lang.Throwable from label32 to label33 with label30;
        catch java.lang.Throwable from label34 to label35 with label30;
        catch java.lang.Throwable from label36 to label37 with label30;
        catch java.lang.Throwable from label38 to label39 with label30;
        catch java.lang.Throwable from label40 to label41 with label30;
        catch java.lang.Throwable from label43 to label44 with label30;
        catch java.lang.Throwable from label45 to label46 with label30;
        catch java.lang.Throwable from label47 to label48 with label30;
        catch java.lang.Throwable from label49 to label50 with label30;
        catch java.lang.Throwable from label51 to label52 with label30;
        catch java.lang.Throwable from label54 to label55 with label30;
        catch java.lang.Throwable from label56 to label57 with label30;
        catch java.lang.Throwable from label58 to label59 with label30;
        catch java.lang.Throwable from label60 to label61 with label30;
        catch java.lang.Throwable from label62 to label63 with label30;
        catch java.lang.Throwable from label65 to label66 with label30;
        catch java.lang.Throwable from label67 to label68 with label30;
        catch java.lang.Throwable from label69 to label70 with label30;
        catch java.lang.Throwable from label71 to label72 with label30;
        catch java.lang.Throwable from label73 to label74 with label30;
        catch java.lang.Throwable from label76 to label77 with label30;
        catch java.lang.Throwable from label78 to label79 with label30;
        catch java.lang.Throwable from label80 to label81 with label30;
        catch java.lang.Throwable from label82 to label83 with label30;
        catch java.lang.Throwable from label84 to label85 with label30;
        catch java.lang.Throwable from label86 to label87 with label30;
        catch java.lang.Throwable from label88 to label89 with label93;
        catch java.lang.Throwable from label91 to label92 with label93;
        catch java.lang.Throwable from label92 to label93 with label93;
        catch java.lang.Throwable from label94 to label95 with label93;
    }

    private void removeOldUpdatePackages(android.content.Context)
    {
        com.android.server.BootReceiver r0;
        android.content.Context r1;

        r0 := @this: com.android.server.BootReceiver;

        r1 := @parameter0: android.content.Context;

        staticinvoke <android.provider.Downloads: void removeAllDownloadsByPackage(android.content.Context,java.lang.String,java.lang.String)>(r1, "com.google.android.systemupdater", "com.google.android.systemupdater.SystemUpdateReceiver");

        return;
    }

    private void writeTimestamps(java.util.HashMap)
    {
        com.android.server.BootReceiver r0;
        android.util.AtomicFile r1, $r4, $r11, $r25;
        java.util.Iterator r2;
        java.lang.String r3, $r6, $r17, $r24, $r29;
        java.nio.charset.Charset $r5;
        java.lang.Boolean $r7;
        java.util.Set $r9;
        boolean $z0;
        java.lang.Object $r12, $r15;
        java.lang.Long $r16;
        java.lang.Throwable $r20, $r21, $r26;
        java.util.HashMap r30;
        java.io.FileOutputStream r31;
        com.android.internal.util.FastXmlSerializer r32;
        java.lang.StringBuilder r34, r37;

        r0 := @this: com.android.server.BootReceiver;

        r30 := @parameter0: java.util.HashMap;

        r1 = <com.android.server.BootReceiver: android.util.AtomicFile sFile>;

        entermonitor r1;

     label01:
        $r4 = <com.android.server.BootReceiver: android.util.AtomicFile sFile>;

        r31 = virtualinvoke $r4.<android.util.AtomicFile: java.io.FileOutputStream startWrite()>();

     label02:
        r32 = new com.android.internal.util.FastXmlSerializer;

        specialinvoke r32.<com.android.internal.util.FastXmlSerializer: void <init>()>();

        $r5 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r6 = virtualinvoke $r5.<java.nio.charset.Charset: java.lang.String name()>();

        interfaceinvoke r32.<org.xmlpull.v1.XmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>(r31, $r6);

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke r32.<org.xmlpull.v1.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>(null, $r7);

        interfaceinvoke r32.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "log-files");

        $r9 = virtualinvoke r30.<java.util.HashMap: java.util.Set keySet()>();

        r2 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>();

     label03:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label05;

        $r12 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.String) $r12;

        interfaceinvoke r32.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "log");

        interfaceinvoke r32.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "filename", r3);

        $r15 = virtualinvoke r30.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r3);

        $r16 = (java.lang.Long) $r15;

        $r17 = virtualinvoke $r16.<java.lang.Long: java.lang.String toString()>();

        interfaceinvoke r32.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "timestamp", $r17);

        interfaceinvoke r32.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "log");

     label04:
        goto label03;

     label05:
        interfaceinvoke r32.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "log-files");

        interfaceinvoke r32.<org.xmlpull.v1.XmlSerializer: void endDocument()>();

        $r11 = <com.android.server.BootReceiver: android.util.AtomicFile sFile>;

        virtualinvoke $r11.<android.util.AtomicFile: void finishWrite(java.io.FileOutputStream)>(r31);

     label06:
        goto label09;

     label07:
        $r21 := @caughtexception;

     label08:
        r34 = new java.lang.StringBuilder;

        specialinvoke r34.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to write timestamp file, using the backup: ");

        virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r21);

        $r24 = virtualinvoke r34.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BootReceiver", $r24);

        $r25 = <com.android.server.BootReceiver: android.util.AtomicFile sFile>;

        virtualinvoke $r25.<android.util.AtomicFile: void failWrite(java.io.FileOutputStream)>(r31);

     label09:
        exitmonitor r1;

     label10:
        return;

     label11:
        $r20 := @caughtexception;

        goto label15;

     label12:
        $r26 := @caughtexception;

     label13:
        r37 = new java.lang.StringBuilder;

        specialinvoke r37.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to write timestamp file: ");

        virtualinvoke r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r26);

        $r29 = virtualinvoke r37.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BootReceiver", $r29);

        exitmonitor r1;

     label14:
        return;

     label15:
        exitmonitor r1;

     label16:
        throw $r20;

        catch java.io.IOException from label01 to label02 with label12;
        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.io.IOException from label02 to label03 with label07;
        catch java.lang.Throwable from label02 to label03 with label11;
        catch java.io.IOException from label03 to label04 with label07;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.io.IOException from label05 to label06 with label07;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label08 to label09 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label13 to label14 with label11;
        catch java.lang.Throwable from label15 to label16 with label11;
    }

    public void onReceive(android.content.Context, android.content.Intent)
    {
        com.android.server.BootReceiver r0;
        android.content.Context r1;
        android.content.Intent r2;
        com.android.server.BootReceiver$1 $r3;

        r0 := @this: com.android.server.BootReceiver;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.Intent;

        $r3 = new com.android.server.BootReceiver$1;

        specialinvoke $r3.<com.android.server.BootReceiver$1: void <init>(com.android.server.BootReceiver,android.content.Context)>(r0, r1);

        virtualinvoke $r3.<com.android.server.BootReceiver$1: void start()>();

        return;
    }
}
