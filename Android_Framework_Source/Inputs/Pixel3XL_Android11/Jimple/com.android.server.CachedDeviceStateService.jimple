public class com.android.server.CachedDeviceStateService extends com.android.server.SystemService
{
    private static final java.lang.String TAG;
    private final android.content.BroadcastReceiver mBroadcastReceiver;
    private final com.android.internal.os.CachedDeviceState mDeviceState;

    public void <init>(android.content.Context)
    {
        com.android.server.CachedDeviceStateService r0;
        android.content.Context r1;
        com.android.internal.os.CachedDeviceState $r2;
        com.android.server.CachedDeviceStateService$1 $r3;

        r0 := @this: com.android.server.CachedDeviceStateService;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.android.server.SystemService: void <init>(android.content.Context)>(r1);

        $r2 = new com.android.internal.os.CachedDeviceState;

        specialinvoke $r2.<com.android.internal.os.CachedDeviceState: void <init>()>();

        r0.<com.android.server.CachedDeviceStateService: com.android.internal.os.CachedDeviceState mDeviceState> = $r2;

        $r3 = new com.android.server.CachedDeviceStateService$1;

        specialinvoke $r3.<com.android.server.CachedDeviceStateService$1: void <init>(com.android.server.CachedDeviceStateService)>(r0);

        r0.<com.android.server.CachedDeviceStateService: android.content.BroadcastReceiver mBroadcastReceiver> = $r3;

        return;
    }

    static com.android.internal.os.CachedDeviceState access$000(com.android.server.CachedDeviceStateService)
    {
        com.android.server.CachedDeviceStateService r0;
        com.android.internal.os.CachedDeviceState $r1;

        r0 := @parameter0: com.android.server.CachedDeviceStateService;

        $r1 = r0.<com.android.server.CachedDeviceStateService: com.android.internal.os.CachedDeviceState mDeviceState>;

        return $r1;
    }

    private boolean queryIsCharging()
    {
        com.android.server.CachedDeviceStateService r0;
        android.os.BatteryManagerInternal r1;
        java.lang.Object $r2;
        int $i0;
        boolean z0;

        r0 := @this: com.android.server.CachedDeviceStateService;

        $r2 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/os/BatteryManagerInternal;");

        r1 = (android.os.BatteryManagerInternal) $r2;

        z0 = 1;

        if r1 != null goto label1;

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("CachedDeviceStateService", "BatteryManager null while starting CachedDeviceStateService");

        return 1;

     label1:
        $i0 = virtualinvoke r1.<android.os.BatteryManagerInternal: int getPlugType()>();

        if $i0 == 0 goto label2;

        goto label3;

     label2:
        z0 = 0;

     label3:
        return z0;
    }

    private boolean queryScreenInteractive(android.content.Context)
    {
        com.android.server.CachedDeviceStateService r0;
        java.lang.Object $r1;
        boolean $z0;
        android.content.Context r2;
        android.os.PowerManager r3;

        r0 := @this: com.android.server.CachedDeviceStateService;

        r2 := @parameter0: android.content.Context;

        $r1 = virtualinvoke r2.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/os/PowerManager;");

        r3 = (android.os.PowerManager) $r1;

        if r3 != null goto label1;

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("CachedDeviceStateService", "PowerManager null while starting CachedDeviceStateService");

        return 0;

     label1:
        $z0 = virtualinvoke r3.<android.os.PowerManager: boolean isInteractive()>();

        return $z0;
    }

    public void onBootPhase(int)
    {
        com.android.server.CachedDeviceStateService r0;
        int i0;
        android.content.IntentFilter $r2;
        android.content.Context $r3, $r8;
        android.content.BroadcastReceiver $r4;
        com.android.internal.os.CachedDeviceState $r6, $r7;
        boolean $z0, $z1;

        r0 := @this: com.android.server.CachedDeviceStateService;

        i0 := @parameter0: int;

        if 500 != i0 goto label1;

        $r2 = new android.content.IntentFilter;

        specialinvoke $r2.<android.content.IntentFilter: void <init>()>();

        virtualinvoke $r2.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.BATTERY_CHANGED");

        virtualinvoke $r2.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.SCREEN_ON");

        virtualinvoke $r2.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.SCREEN_OFF");

        virtualinvoke $r2.<android.content.IntentFilter: void setPriority(int)>(1000);

        $r3 = virtualinvoke r0.<com.android.server.CachedDeviceStateService: android.content.Context getContext()>();

        $r4 = r0.<com.android.server.CachedDeviceStateService: android.content.BroadcastReceiver mBroadcastReceiver>;

        virtualinvoke $r3.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r4, $r2);

        $r6 = r0.<com.android.server.CachedDeviceStateService: com.android.internal.os.CachedDeviceState mDeviceState>;

        $z0 = specialinvoke r0.<com.android.server.CachedDeviceStateService: boolean queryIsCharging()>();

        virtualinvoke $r6.<com.android.internal.os.CachedDeviceState: void setCharging(boolean)>($z0);

        $r7 = r0.<com.android.server.CachedDeviceStateService: com.android.internal.os.CachedDeviceState mDeviceState>;

        $r8 = virtualinvoke r0.<com.android.server.CachedDeviceStateService: android.content.Context getContext()>();

        $z1 = specialinvoke r0.<com.android.server.CachedDeviceStateService: boolean queryScreenInteractive(android.content.Context)>($r8);

        virtualinvoke $r7.<com.android.internal.os.CachedDeviceState: void setScreenInteractive(boolean)>($z1);

     label1:
        return;
    }

    public void onStart()
    {
        com.android.server.CachedDeviceStateService r0;
        com.android.internal.os.CachedDeviceState $r1;
        com.android.internal.os.CachedDeviceState$Readonly $r2;

        r0 := @this: com.android.server.CachedDeviceStateService;

        $r1 = r0.<com.android.server.CachedDeviceStateService: com.android.internal.os.CachedDeviceState mDeviceState>;

        $r2 = virtualinvoke $r1.<com.android.internal.os.CachedDeviceState: com.android.internal.os.CachedDeviceState$Readonly getReadonlyClient()>();

        virtualinvoke r0.<com.android.server.CachedDeviceStateService: void publishLocalService(java.lang.Class,java.lang.Object)>(class "Lcom/android/internal/os/CachedDeviceState$Readonly;", $r2);

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.CachedDeviceStateService: java.lang.String TAG> = "CachedDeviceStateService";

        return;
    }
}
