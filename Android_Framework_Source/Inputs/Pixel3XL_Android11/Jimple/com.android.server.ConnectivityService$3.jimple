class com.android.server.ConnectivityService$3 extends com.android.server.net.BaseNetdEventCallback
{
    final com.android.server.ConnectivityService this$0;

    void <init>(com.android.server.ConnectivityService)
    {
        com.android.server.ConnectivityService$3 r0;
        com.android.server.ConnectivityService r1;

        r0 := @this: com.android.server.ConnectivityService$3;

        r1 := @parameter0: com.android.server.ConnectivityService;

        r0.<com.android.server.ConnectivityService$3: com.android.server.ConnectivityService this$0> = r1;

        specialinvoke r0.<com.android.server.net.BaseNetdEventCallback: void <init>()>();

        return;
    }

    public void lambda$onNat64PrefixEvent$0$ConnectivityService$3(int, boolean, java.lang.String, int)
    {
        com.android.server.ConnectivityService$3 r0;
        int i0, i1;
        boolean z0;
        java.lang.String r1;
        com.android.server.ConnectivityService $r2;

        r0 := @this: com.android.server.ConnectivityService$3;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 := @parameter2: java.lang.String;

        i1 := @parameter3: int;

        $r2 = r0.<com.android.server.ConnectivityService$3: com.android.server.ConnectivityService this$0>;

        staticinvoke <com.android.server.ConnectivityService: void access$800(com.android.server.ConnectivityService,int,boolean,java.lang.String,int)>($r2, i0, z0, r1, i1);

        return;
    }

    public void onDnsEvent(int, int, int, java.lang.String, java.lang.String[], int, long, int)
    {
        com.android.server.ConnectivityService$3 r0;
        int i0, i1, i2, i3, i5;
        java.lang.String[] r1;
        long l4;
        com.android.server.ConnectivityService $r2, $r3;
        android.net.NetworkRequest $r4;
        boolean $z0;
        android.net.NetworkMonitorManager $r5;
        java.lang.String r6;
        com.android.server.connectivity.NetworkAgentInfo r7;

        r0 := @this: com.android.server.ConnectivityService$3;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r6 := @parameter3: java.lang.String;

        r1 := @parameter4: java.lang.String[];

        i3 := @parameter5: int;

        l4 := @parameter6: long;

        i5 := @parameter7: int;

        $r2 = r0.<com.android.server.ConnectivityService$3: com.android.server.ConnectivityService this$0>;

        r7 = staticinvoke <com.android.server.ConnectivityService: com.android.server.connectivity.NetworkAgentInfo access$600(com.android.server.ConnectivityService,int)>($r2, i0);

        if r7 == null goto label1;

        $r3 = r0.<com.android.server.ConnectivityService$3: com.android.server.ConnectivityService this$0>;

        $r4 = staticinvoke <com.android.server.ConnectivityService: android.net.NetworkRequest access$700(com.android.server.ConnectivityService)>($r3);

        $z0 = virtualinvoke r7.<com.android.server.connectivity.NetworkAgentInfo: boolean satisfies(android.net.NetworkRequest)>($r4);

        if $z0 == 0 goto label1;

        $r5 = virtualinvoke r7.<com.android.server.connectivity.NetworkAgentInfo: android.net.NetworkMonitorManager networkMonitor()>();

        virtualinvoke $r5.<android.net.NetworkMonitorManager: boolean notifyDnsResponse(int)>(i2);

     label1:
        return;
    }

    public void onNat64PrefixEvent(int, boolean, java.lang.String, int)
    {
        com.android.server.ConnectivityService$3 r0;
        int i0, i1;
        boolean z0;
        java.lang.String r1;
        com.android.server.ConnectivityService $r2;
        com.android.server.ConnectivityService$InternalHandler $r3;
        com.android.server._$$Lambda$ConnectivityService$3$_itgrpHpWu3QvA9Wb0gtsEYJWZY $r4;

        r0 := @this: com.android.server.ConnectivityService$3;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 := @parameter2: java.lang.String;

        i1 := @parameter3: int;

        $r2 = r0.<com.android.server.ConnectivityService$3: com.android.server.ConnectivityService this$0>;

        $r3 = staticinvoke <com.android.server.ConnectivityService: com.android.server.ConnectivityService$InternalHandler access$400(com.android.server.ConnectivityService)>($r2);

        $r4 = new com.android.server._$$Lambda$ConnectivityService$3$_itgrpHpWu3QvA9Wb0gtsEYJWZY;

        specialinvoke $r4.<com.android.server._$$Lambda$ConnectivityService$3$_itgrpHpWu3QvA9Wb0gtsEYJWZY: void <init>(com.android.server.ConnectivityService$3,int,boolean,java.lang.String,int)>(r0, i0, z0, r1, i1);

        virtualinvoke $r3.<com.android.server.ConnectivityService$InternalHandler: boolean post(java.lang.Runnable)>($r4);

        return;
    }

    public void onPrivateDnsValidationEvent(int, java.lang.String, java.lang.String, boolean)
    {
        com.android.server.ConnectivityService$3 r0;
        int i0;
        java.lang.String r1, r10;
        boolean z0;
        com.android.server.ConnectivityService$InternalHandler r2, r3;
        com.android.server.connectivity.DnsManager$PrivateDnsValidationUpdate r4;
        com.android.server.ConnectivityService $r5, $r6;
        java.net.InetAddress $r7;
        android.os.Message $r8;
        java.lang.Throwable $r9;

        r0 := @this: com.android.server.ConnectivityService$3;

        i0 := @parameter0: int;

        r10 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

     label1:
        $r5 = r0.<com.android.server.ConnectivityService$3: com.android.server.ConnectivityService this$0>;

        r2 = staticinvoke <com.android.server.ConnectivityService: com.android.server.ConnectivityService$InternalHandler access$400(com.android.server.ConnectivityService)>($r5);

        $r6 = r0.<com.android.server.ConnectivityService$3: com.android.server.ConnectivityService this$0>;

        r3 = staticinvoke <com.android.server.ConnectivityService: com.android.server.ConnectivityService$InternalHandler access$400(com.android.server.ConnectivityService)>($r6);

        r4 = new com.android.server.connectivity.DnsManager$PrivateDnsValidationUpdate;

        $r7 = staticinvoke <java.net.InetAddress: java.net.InetAddress parseNumericAddress(java.lang.String)>(r10);

        specialinvoke r4.<com.android.server.connectivity.DnsManager$PrivateDnsValidationUpdate: void <init>(int,java.net.InetAddress,java.lang.String,boolean)>(i0, $r7, r1, z0);

        $r8 = virtualinvoke r3.<com.android.server.ConnectivityService$InternalHandler: android.os.Message obtainMessage(int,java.lang.Object)>(38, r4);

        virtualinvoke r2.<com.android.server.ConnectivityService$InternalHandler: boolean sendMessage(android.os.Message)>($r8);

     label2:
        goto label4;

     label3:
        $r9 := @caughtexception;

        staticinvoke <com.android.server.ConnectivityService: void access$500(java.lang.String)>("Error parsing ip address in validation event");

     label4:
        return;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }
}
