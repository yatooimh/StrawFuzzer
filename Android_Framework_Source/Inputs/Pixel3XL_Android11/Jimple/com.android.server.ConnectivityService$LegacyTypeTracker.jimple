class com.android.server.ConnectivityService$LegacyTypeTracker extends java.lang.Object
{
    private static final boolean DBG;
    private static final boolean VDBG;
    private final com.android.server.ConnectivityService mService;
    private final java.util.ArrayList[] mTypeLists;

    void <init>(com.android.server.ConnectivityService)
    {
        com.android.server.ConnectivityService$LegacyTypeTracker r0;
        com.android.server.ConnectivityService r1;
        java.util.ArrayList[] $r2;

        r0 := @this: com.android.server.ConnectivityService$LegacyTypeTracker;

        r1 := @parameter0: com.android.server.ConnectivityService;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.ConnectivityService$LegacyTypeTracker: com.android.server.ConnectivityService mService> = r1;

        $r2 = newarray (java.util.ArrayList)[19];

        r0.<com.android.server.ConnectivityService$LegacyTypeTracker: java.util.ArrayList[] mTypeLists> = $r2;

        return;
    }

    private void maybeLogBroadcast(com.android.server.connectivity.NetworkAgentInfo, android.net.NetworkInfo$DetailedState, int, boolean)
    {
        com.android.server.ConnectivityService$LegacyTypeTracker r0;
        com.android.server.connectivity.NetworkAgentInfo r1;
        android.net.NetworkInfo$DetailedState r2;
        int i0;
        boolean z0;
        java.lang.StringBuilder $r4;
        java.lang.String $r10, $r14;

        r0 := @this: com.android.server.ConnectivityService$LegacyTypeTracker;

        r1 := @parameter0: com.android.server.connectivity.NetworkAgentInfo;

        r2 := @parameter1: android.net.NetworkInfo$DetailedState;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Sending ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" broadcast for type ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r10 = virtualinvoke r1.<com.android.server.connectivity.NetworkAgentInfo: java.lang.String toShortString()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" isDefaultNetwork=");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r14 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService: void access$000(java.lang.String)>($r14);

        return;
    }

    public void add(int, com.android.server.connectivity.NetworkAgentInfo)
    {
        com.android.server.ConnectivityService$LegacyTypeTracker r0;
        int i0, $i1;
        java.util.ArrayList r1;
        java.util.ArrayList[] r2, $r3;
        boolean z0, $z1, $z2;
        com.android.server.ConnectivityService $r4, $r7;
        android.net.NetworkInfo$DetailedState $r5, $r6;
        java.lang.Throwable $r8;
        com.android.server.connectivity.NetworkAgentInfo r9;

        r0 := @this: com.android.server.ConnectivityService$LegacyTypeTracker;

        i0 := @parameter0: int;

        r9 := @parameter1: com.android.server.connectivity.NetworkAgentInfo;

        $z1 = virtualinvoke r0.<com.android.server.ConnectivityService$LegacyTypeTracker: boolean isTypeSupported(int)>(i0);

        if $z1 != 0 goto label1;

        return;

     label1:
        $r3 = r0.<com.android.server.ConnectivityService$LegacyTypeTracker: java.util.ArrayList[] mTypeLists>;

        r1 = $r3[i0];

        $z2 = virtualinvoke r1.<java.util.ArrayList: boolean contains(java.lang.Object)>(r9);

        if $z2 == 0 goto label2;

        return;

     label2:
        r2 = r0.<com.android.server.ConnectivityService$LegacyTypeTracker: java.util.ArrayList[] mTypeLists>;

        entermonitor r2;

     label3:
        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r9);

        exitmonitor r2;

     label4:
        $r4 = r0.<com.android.server.ConnectivityService$LegacyTypeTracker: com.android.server.ConnectivityService mService>;

        z0 = virtualinvoke $r4.<com.android.server.ConnectivityService: boolean isDefaultNetwork(com.android.server.connectivity.NetworkAgentInfo)>(r9);

        $i1 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if $i1 == 1 goto label5;

        if z0 == 0 goto label6;

     label5:
        $r5 = <android.net.NetworkInfo$DetailedState: android.net.NetworkInfo$DetailedState CONNECTED>;

        specialinvoke r0.<com.android.server.ConnectivityService$LegacyTypeTracker: void maybeLogBroadcast(com.android.server.connectivity.NetworkAgentInfo,android.net.NetworkInfo$DetailedState,int,boolean)>(r9, $r5, i0, z0);

        $r7 = r0.<com.android.server.ConnectivityService$LegacyTypeTracker: com.android.server.ConnectivityService mService>;

        $r6 = <android.net.NetworkInfo$DetailedState: android.net.NetworkInfo$DetailedState CONNECTED>;

        virtualinvoke $r7.<com.android.server.ConnectivityService: void sendLegacyNetworkBroadcast(com.android.server.connectivity.NetworkAgentInfo,android.net.NetworkInfo$DetailedState,int)>(r9, $r6, i0);

     label6:
        return;

     label7:
        $r8 := @caughtexception;

     label8:
        exitmonitor r2;

     label9:
        throw $r8;

        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public void addSupportedType(int)
    {
        com.android.server.ConnectivityService$LegacyTypeTracker r0;
        int i0;
        java.util.ArrayList $r1, $r8;
        java.lang.StringBuilder $r2;
        java.lang.IllegalStateException $r6;
        java.lang.String $r7;
        java.util.ArrayList[] r9;

        r0 := @this: com.android.server.ConnectivityService$LegacyTypeTracker;

        i0 := @parameter0: int;

        r9 = r0.<com.android.server.ConnectivityService$LegacyTypeTracker: java.util.ArrayList[] mTypeLists>;

        $r1 = r9[i0];

        if $r1 != null goto label1;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r9[i0] = $r8;

        return;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("legacy list for type ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("already initialized");

        $r6 = new java.lang.IllegalStateException;

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r7);

        throw $r6;
    }

    public void dump(com.android.internal.util.IndentingPrintWriter)
    {
        com.android.server.ConnectivityService$LegacyTypeTracker r0;
        java.util.Iterator r1;
        com.android.server.connectivity.NetworkAgentInfo r2;
        java.lang.StringBuilder r3, $r22;
        int $i0, $i1, i2, i3;
        java.util.ArrayList[] $r6, $r9, $r11, $r13, r28, r30;
        java.util.ArrayList $r10, $r12, $r14, $r21;
        boolean $z0, $z1;
        java.lang.Object $r15;
        java.lang.String $r18, $r20, $r25;
        java.lang.Throwable $r26;
        com.android.internal.util.IndentingPrintWriter r27;

        r0 := @this: com.android.server.ConnectivityService$LegacyTypeTracker;

        r27 := @parameter0: com.android.internal.util.IndentingPrintWriter;

        virtualinvoke r27.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("mLegacyTypeTracker:");

        virtualinvoke r27.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

        virtualinvoke r27.<com.android.internal.util.IndentingPrintWriter: void print(java.lang.String)>("Supported types:");

        i2 = 0;

     label01:
        r28 = r0.<com.android.server.ConnectivityService$LegacyTypeTracker: java.util.ArrayList[] mTypeLists>;

        $i0 = lengthof r28;

        if i2 >= $i0 goto label03;

        $r21 = r28[i2];

        if $r21 == null goto label02;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r27.<com.android.internal.util.IndentingPrintWriter: void print(java.lang.String)>($r25);

     label02:
        i2 = i2 + 1;

        goto label01;

     label03:
        virtualinvoke r27.<com.android.internal.util.IndentingPrintWriter: void println()>();

        virtualinvoke r27.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("Current state:");

        virtualinvoke r27.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

        r30 = r0.<com.android.server.ConnectivityService$LegacyTypeTracker: java.util.ArrayList[] mTypeLists>;

        entermonitor r30;

        i3 = 0;

     label04:
        $r6 = r0.<com.android.server.ConnectivityService$LegacyTypeTracker: java.util.ArrayList[] mTypeLists>;

        $i1 = lengthof $r6;

        if i3 >= $i1 goto label10;

        $r9 = r0.<com.android.server.ConnectivityService$LegacyTypeTracker: java.util.ArrayList[] mTypeLists>;

        $r10 = $r9[i3];

        if $r10 == null goto label09;

        $r11 = r0.<com.android.server.ConnectivityService$LegacyTypeTracker: java.util.ArrayList[] mTypeLists>;

        $r12 = $r11[i3];

        $z0 = virtualinvoke $r12.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 == 0 goto label06;

     label05:
        goto label09;

     label06:
        $r13 = r0.<com.android.server.ConnectivityService$LegacyTypeTracker: java.util.ArrayList[] mTypeLists>;

        $r14 = $r13[i3];

        r1 = virtualinvoke $r14.<java.util.ArrayList: java.util.Iterator iterator()>();

     label07:
        $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label09;

        $r15 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.android.server.connectivity.NetworkAgentInfo) $r15;

        r3 = new java.lang.StringBuilder;

        specialinvoke r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r18 = virtualinvoke r2.<com.android.server.connectivity.NetworkAgentInfo: java.lang.String toShortString()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r27.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r20);

     label08:
        goto label07;

     label09:
        i3 = i3 + 1;

        goto label04;

     label10:
        exitmonitor r30;

     label11:
        virtualinvoke r27.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

        virtualinvoke r27.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

        virtualinvoke r27.<com.android.internal.util.IndentingPrintWriter: void println()>();

        return;

     label12:
        $r26 := @caughtexception;

     label13:
        exitmonitor r30;

     label14:
        throw $r26;

        catch java.lang.Throwable from label04 to label05 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label07 to label08 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public com.android.server.connectivity.NetworkAgentInfo getNetworkForType(int)
    {
        com.android.server.ConnectivityService$LegacyTypeTracker r0;
        int i0;
        java.util.ArrayList[] r1, $r2, $r4;
        boolean $z0, $z1;
        java.util.ArrayList $r3, $r5;
        java.lang.Object $r6;
        java.lang.Throwable $r7;
        com.android.server.connectivity.NetworkAgentInfo r8;

        r0 := @this: com.android.server.ConnectivityService$LegacyTypeTracker;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.ConnectivityService$LegacyTypeTracker: java.util.ArrayList[] mTypeLists>;

        entermonitor r1;

     label1:
        $z0 = virtualinvoke r0.<com.android.server.ConnectivityService$LegacyTypeTracker: boolean isTypeSupported(int)>(i0);

        if $z0 == 0 goto label3;

        $r2 = r0.<com.android.server.ConnectivityService$LegacyTypeTracker: java.util.ArrayList[] mTypeLists>;

        $r3 = $r2[i0];

        $z1 = virtualinvoke $r3.<java.util.ArrayList: boolean isEmpty()>();

        if $z1 != 0 goto label3;

        $r4 = r0.<com.android.server.ConnectivityService$LegacyTypeTracker: java.util.ArrayList[] mTypeLists>;

        $r5 = $r4[i0];

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(0);

        r8 = (com.android.server.connectivity.NetworkAgentInfo) $r6;

        exitmonitor r1;

     label2:
        return r8;

     label3:
        exitmonitor r1;

     label4:
        return null;

     label5:
        $r7 := @caughtexception;

     label6:
        exitmonitor r1;

     label7:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public boolean isTypeSupported(int)
    {
        com.android.server.ConnectivityService$LegacyTypeTracker r0;
        int i0;
        boolean $z0, z1;
        java.util.ArrayList[] $r1;
        java.util.ArrayList $r2;

        r0 := @this: com.android.server.ConnectivityService$LegacyTypeTracker;

        i0 := @parameter0: int;

        $z0 = staticinvoke <android.net.ConnectivityManager: boolean isNetworkTypeValid(int)>(i0);

        if $z0 == 0 goto label1;

        $r1 = r0.<com.android.server.ConnectivityService$LegacyTypeTracker: java.util.ArrayList[] mTypeLists>;

        $r2 = $r1[i0];

        if $r2 == null goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public void remove(int, com.android.server.connectivity.NetworkAgentInfo, boolean)
    {
        com.android.server.ConnectivityService$LegacyTypeTracker r0;
        int i0;
        boolean z0, z1, $z2, $z3, $z4, $z5;
        java.util.ArrayList r1;
        java.util.ArrayList[] r2, $r3;
        java.lang.Object $r4, $r14;
        com.android.server.connectivity.NetworkAgentInfo $r5, r20, r22;
        android.net.NetworkInfo$DetailedState $r6, $r7, $r16, $r17;
        com.android.server.ConnectivityService $r8, $r15, $r18;
        java.lang.StringBuilder $r9;
        java.lang.String $r13;
        java.lang.Throwable $r19;

        r0 := @this: com.android.server.ConnectivityService$LegacyTypeTracker;

        i0 := @parameter0: int;

        r20 := @parameter1: com.android.server.connectivity.NetworkAgentInfo;

        z0 := @parameter2: boolean;

        $r3 = r0.<com.android.server.ConnectivityService$LegacyTypeTracker: java.util.ArrayList[] mTypeLists>;

        r1 = $r3[i0];

        if r1 == null goto label12;

        $z2 = virtualinvoke r1.<java.util.ArrayList: boolean isEmpty()>();

        if $z2 == 0 goto label01;

        goto label12;

     label01:
        $r4 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r5 = (com.android.server.connectivity.NetworkAgentInfo) $r4;

        z1 = virtualinvoke $r5.<java.lang.Object: boolean equals(java.lang.Object)>(r20);

        r2 = r0.<com.android.server.ConnectivityService$LegacyTypeTracker: java.util.ArrayList[] mTypeLists>;

        entermonitor r2;

     label02:
        $z3 = virtualinvoke r1.<java.util.ArrayList: boolean remove(java.lang.Object)>(r20);

        if $z3 != 0 goto label04;

        exitmonitor r2;

     label03:
        return;

     label04:
        exitmonitor r2;

     label05:
        if z1 != 0 goto label06;

        if z0 == 0 goto label07;

     label06:
        $r6 = <android.net.NetworkInfo$DetailedState: android.net.NetworkInfo$DetailedState DISCONNECTED>;

        specialinvoke r0.<com.android.server.ConnectivityService$LegacyTypeTracker: void maybeLogBroadcast(com.android.server.connectivity.NetworkAgentInfo,android.net.NetworkInfo$DetailedState,int,boolean)>(r20, $r6, i0, z0);

        $r8 = r0.<com.android.server.ConnectivityService$LegacyTypeTracker: com.android.server.ConnectivityService mService>;

        $r7 = <android.net.NetworkInfo$DetailedState: android.net.NetworkInfo$DetailedState DISCONNECTED>;

        virtualinvoke $r8.<com.android.server.ConnectivityService: void sendLegacyNetworkBroadcast(com.android.server.connectivity.NetworkAgentInfo,android.net.NetworkInfo$DetailedState,int)>(r20, $r7, i0);

     label07:
        $z5 = virtualinvoke r1.<java.util.ArrayList: boolean isEmpty()>();

        if $z5 != 0 goto label08;

        if z1 == 0 goto label08;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Other network available for type ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", sending connected broadcast");

        $r13 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService: void access$000(java.lang.String)>($r13);

        $r14 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(0);

        r22 = (com.android.server.connectivity.NetworkAgentInfo) $r14;

        $r16 = <android.net.NetworkInfo$DetailedState: android.net.NetworkInfo$DetailedState CONNECTED>;

        $r15 = r0.<com.android.server.ConnectivityService$LegacyTypeTracker: com.android.server.ConnectivityService mService>;

        $z4 = virtualinvoke $r15.<com.android.server.ConnectivityService: boolean isDefaultNetwork(com.android.server.connectivity.NetworkAgentInfo)>(r22);

        specialinvoke r0.<com.android.server.ConnectivityService$LegacyTypeTracker: void maybeLogBroadcast(com.android.server.connectivity.NetworkAgentInfo,android.net.NetworkInfo$DetailedState,int,boolean)>(r22, $r16, i0, $z4);

        $r18 = r0.<com.android.server.ConnectivityService$LegacyTypeTracker: com.android.server.ConnectivityService mService>;

        $r17 = <android.net.NetworkInfo$DetailedState: android.net.NetworkInfo$DetailedState CONNECTED>;

        virtualinvoke $r18.<com.android.server.ConnectivityService: void sendLegacyNetworkBroadcast(com.android.server.connectivity.NetworkAgentInfo,android.net.NetworkInfo$DetailedState,int)>(r22, $r17, i0);

     label08:
        return;

     label09:
        $r19 := @caughtexception;

     label10:
        exitmonitor r2;

     label11:
        throw $r19;

     label12:
        return;

        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public void remove(com.android.server.connectivity.NetworkAgentInfo, boolean)
    {
        com.android.server.ConnectivityService$LegacyTypeTracker r0;
        com.android.server.connectivity.NetworkAgentInfo r1;
        boolean z0;
        java.util.ArrayList[] $r2;
        int $i0, i1;

        r0 := @this: com.android.server.ConnectivityService$LegacyTypeTracker;

        r1 := @parameter0: com.android.server.connectivity.NetworkAgentInfo;

        z0 := @parameter1: boolean;

        i1 = 0;

     label1:
        $r2 = r0.<com.android.server.ConnectivityService$LegacyTypeTracker: java.util.ArrayList[] mTypeLists>;

        $i0 = lengthof $r2;

        if i1 >= $i0 goto label2;

        virtualinvoke r0.<com.android.server.ConnectivityService$LegacyTypeTracker: void remove(int,com.android.server.connectivity.NetworkAgentInfo,boolean)>(i1, r1, z0);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void update(com.android.server.connectivity.NetworkAgentInfo)
    {
        com.android.server.ConnectivityService$LegacyTypeTracker r0;
        com.android.server.connectivity.NetworkAgentInfo r1;
        boolean z0, $z1, z2, z3;
        android.net.NetworkInfo$DetailedState r2;
        com.android.server.ConnectivityService $r3, $r5;
        android.net.NetworkInfo $r4;
        int $i0, i1;
        java.lang.Object $r6;
        java.util.ArrayList[] r7;
        java.util.ArrayList r8;

        r0 := @this: com.android.server.ConnectivityService$LegacyTypeTracker;

        r1 := @parameter0: com.android.server.connectivity.NetworkAgentInfo;

        $r3 = r0.<com.android.server.ConnectivityService$LegacyTypeTracker: com.android.server.ConnectivityService mService>;

        z0 = virtualinvoke $r3.<com.android.server.ConnectivityService: boolean isDefaultNetwork(com.android.server.connectivity.NetworkAgentInfo)>(r1);

        $r4 = r1.<com.android.server.connectivity.NetworkAgentInfo: android.net.NetworkInfo networkInfo>;

        r2 = virtualinvoke $r4.<android.net.NetworkInfo: android.net.NetworkInfo$DetailedState getDetailedState()>();

        i1 = 0;

     label1:
        r7 = r0.<com.android.server.ConnectivityService$LegacyTypeTracker: java.util.ArrayList[] mTypeLists>;

        $i0 = lengthof r7;

        if i1 >= $i0 goto label8;

        r8 = r7[i1];

        z2 = 1;

        if r8 == null goto label2;

        $z1 = virtualinvoke r8.<java.util.ArrayList: boolean contains(java.lang.Object)>(r1);

        if $z1 == 0 goto label2;

        z3 = 1;

        goto label3;

     label2:
        z3 = 0;

     label3:
        if z3 == 0 goto label4;

        $r6 = virtualinvoke r8.<java.util.ArrayList: java.lang.Object get(int)>(0);

        if r1 != $r6 goto label4;

        goto label5;

     label4:
        z2 = 0;

     label5:
        if z2 != 0 goto label6;

        if z3 == 0 goto label7;

        if z0 == 0 goto label7;

     label6:
        specialinvoke r0.<com.android.server.ConnectivityService$LegacyTypeTracker: void maybeLogBroadcast(com.android.server.connectivity.NetworkAgentInfo,android.net.NetworkInfo$DetailedState,int,boolean)>(r1, r2, i1, z0);

        $r5 = r0.<com.android.server.ConnectivityService$LegacyTypeTracker: com.android.server.ConnectivityService mService>;

        virtualinvoke $r5.<com.android.server.ConnectivityService: void sendLegacyNetworkBroadcast(com.android.server.connectivity.NetworkAgentInfo,android.net.NetworkInfo$DetailedState,int)>(r1, r2, i1);

     label7:
        i1 = i1 + 1;

        goto label1;

     label8:
        return;
    }

    public static void <clinit>()
    {
        <com.android.server.ConnectivityService$LegacyTypeTracker: boolean VDBG> = 0;

        <com.android.server.ConnectivityService$LegacyTypeTracker: boolean DBG> = 1;

        return;
    }
}
