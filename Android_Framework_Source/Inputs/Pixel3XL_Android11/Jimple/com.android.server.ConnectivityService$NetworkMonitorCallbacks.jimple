class com.android.server.ConnectivityService$NetworkMonitorCallbacks extends android.net.INetworkMonitorCallbacks$Stub
{
    private final com.android.server.connectivity.AutodestructReference mNai;
    private final int mNetId;
    final com.android.server.ConnectivityService this$0;

    private void <init>(com.android.server.ConnectivityService, com.android.server.connectivity.NetworkAgentInfo)
    {
        com.android.server.ConnectivityService$NetworkMonitorCallbacks r0;
        com.android.server.ConnectivityService r1;
        com.android.server.connectivity.NetworkAgentInfo r2;
        android.net.Network $r3;
        int $i0;
        com.android.server.connectivity.AutodestructReference $r4;

        r0 := @this: com.android.server.ConnectivityService$NetworkMonitorCallbacks;

        r1 := @parameter0: com.android.server.ConnectivityService;

        r2 := @parameter1: com.android.server.connectivity.NetworkAgentInfo;

        r0.<com.android.server.ConnectivityService$NetworkMonitorCallbacks: com.android.server.ConnectivityService this$0> = r1;

        specialinvoke r0.<android.net.INetworkMonitorCallbacks$Stub: void <init>()>();

        $r3 = r2.<com.android.server.connectivity.NetworkAgentInfo: android.net.Network network>;

        $i0 = $r3.<android.net.Network: int netId>;

        r0.<com.android.server.ConnectivityService$NetworkMonitorCallbacks: int mNetId> = $i0;

        $r4 = new com.android.server.connectivity.AutodestructReference;

        specialinvoke $r4.<com.android.server.connectivity.AutodestructReference: void <init>(java.lang.Object)>(r2);

        r0.<com.android.server.ConnectivityService$NetworkMonitorCallbacks: com.android.server.connectivity.AutodestructReference mNai> = $r4;

        return;
    }

    void <init>(com.android.server.ConnectivityService, com.android.server.connectivity.NetworkAgentInfo, com.android.server.ConnectivityService$1)
    {
        com.android.server.ConnectivityService$NetworkMonitorCallbacks r0;
        com.android.server.ConnectivityService r1;
        com.android.server.connectivity.NetworkAgentInfo r2;
        com.android.server.ConnectivityService$1 r3;

        r0 := @this: com.android.server.ConnectivityService$NetworkMonitorCallbacks;

        r1 := @parameter0: com.android.server.ConnectivityService;

        r2 := @parameter1: com.android.server.connectivity.NetworkAgentInfo;

        r3 := @parameter2: com.android.server.ConnectivityService$1;

        specialinvoke r0.<com.android.server.ConnectivityService$NetworkMonitorCallbacks: void <init>(com.android.server.ConnectivityService,com.android.server.connectivity.NetworkAgentInfo)>(r1, r2);

        return;
    }

    public java.lang.String getInterfaceHash()
    {
        com.android.server.ConnectivityService$NetworkMonitorCallbacks r0;

        r0 := @this: com.android.server.ConnectivityService$NetworkMonitorCallbacks;

        return "02cd6fd07d5c04eca0c35a350f7b0be576242883";
    }

    public int getInterfaceVersion()
    {
        com.android.server.ConnectivityService$NetworkMonitorCallbacks r0;

        r0 := @this: com.android.server.ConnectivityService$NetworkMonitorCallbacks;

        return 7;
    }

    public void hideProvisioningNotification()
    {
        com.android.server.ConnectivityService$NetworkMonitorCallbacks r0;
        com.android.server.ConnectivityService $r1, $r3;
        com.android.server.ConnectivityService$NetworkStateTrackerHandler $r2, $r4;
        int $i0;
        android.os.Message $r5;

        r0 := @this: com.android.server.ConnectivityService$NetworkMonitorCallbacks;

        $r1 = r0.<com.android.server.ConnectivityService$NetworkMonitorCallbacks: com.android.server.ConnectivityService this$0>;

        $r2 = staticinvoke <com.android.server.ConnectivityService: com.android.server.ConnectivityService$NetworkStateTrackerHandler access$3900(com.android.server.ConnectivityService)>($r1);

        $r3 = r0.<com.android.server.ConnectivityService$NetworkMonitorCallbacks: com.android.server.ConnectivityService this$0>;

        $r4 = staticinvoke <com.android.server.ConnectivityService: com.android.server.ConnectivityService$NetworkStateTrackerHandler access$3900(com.android.server.ConnectivityService)>($r3);

        $i0 = r0.<com.android.server.ConnectivityService$NetworkMonitorCallbacks: int mNetId>;

        $r5 = virtualinvoke $r4.<com.android.server.ConnectivityService$NetworkStateTrackerHandler: android.os.Message obtainMessage(int,int,int)>(43, 0, $i0);

        virtualinvoke $r2.<com.android.server.ConnectivityService$NetworkStateTrackerHandler: boolean sendMessage(android.os.Message)>($r5);

        return;
    }

    public void notifyCaptivePortalDataChanged(android.net.CaptivePortalData)
    {
        com.android.server.ConnectivityService$NetworkMonitorCallbacks r0;
        android.net.CaptivePortalData r1;
        com.android.server.ConnectivityService $r2, $r4;
        com.android.server.ConnectivityService$NetworkStateTrackerHandler $r3, $r5;
        int $i0;
        android.os.Message $r6;

        r0 := @this: com.android.server.ConnectivityService$NetworkMonitorCallbacks;

        r1 := @parameter0: android.net.CaptivePortalData;

        $r2 = r0.<com.android.server.ConnectivityService$NetworkMonitorCallbacks: com.android.server.ConnectivityService this$0>;

        $r3 = staticinvoke <com.android.server.ConnectivityService: com.android.server.ConnectivityService$NetworkStateTrackerHandler access$3900(com.android.server.ConnectivityService)>($r2);

        $r4 = r0.<com.android.server.ConnectivityService$NetworkMonitorCallbacks: com.android.server.ConnectivityService this$0>;

        $r5 = staticinvoke <com.android.server.ConnectivityService: com.android.server.ConnectivityService$NetworkStateTrackerHandler access$3900(com.android.server.ConnectivityService)>($r4);

        $i0 = r0.<com.android.server.ConnectivityService$NetworkMonitorCallbacks: int mNetId>;

        $r6 = virtualinvoke $r5.<com.android.server.ConnectivityService$NetworkStateTrackerHandler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(46, 0, $i0, r1);

        virtualinvoke $r3.<com.android.server.ConnectivityService$NetworkStateTrackerHandler: boolean sendMessage(android.os.Message)>($r6);

        return;
    }

    public void notifyDataStallSuspected(android.net.DataStallReportParcelable)
    {
        com.android.server.ConnectivityService$NetworkMonitorCallbacks r0;
        android.net.DataStallReportParcelable r1;
        int $i0;
        com.android.server.ConnectivityService $r2;

        r0 := @this: com.android.server.ConnectivityService$NetworkMonitorCallbacks;

        r1 := @parameter0: android.net.DataStallReportParcelable;

        $r2 = r0.<com.android.server.ConnectivityService$NetworkMonitorCallbacks: com.android.server.ConnectivityService this$0>;

        $i0 = r0.<com.android.server.ConnectivityService$NetworkMonitorCallbacks: int mNetId>;

        staticinvoke <com.android.server.ConnectivityService: void access$4100(com.android.server.ConnectivityService,android.net.DataStallReportParcelable,int)>($r2, r1, $i0);

        return;
    }

    public void notifyNetworkTested(int, java.lang.String)
    {
        com.android.server.ConnectivityService$NetworkMonitorCallbacks r0;
        int i0;
        java.lang.String r1, $r2;

        r0 := @this: com.android.server.ConnectivityService$NetworkMonitorCallbacks;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <com.android.server.ConnectivityService: java.lang.String access$1400()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>($r2, "Deprecated notifyNetworkTested called: no action taken");

        return;
    }

    public void notifyNetworkTestedWithExtras(android.net.NetworkTestResultParcelable)
    {
        com.android.server.ConnectivityService$NetworkMonitorCallbacks r0;
        android.net.NetworkTestResultParcelable r1;
        android.os.Message r2, r17;
        com.android.server.ConnectivityService $r3, $r7, $r9, $r10, $r15;
        com.android.server.ConnectivityService$NetworkStateTrackerHandler $r4, $r8;
        com.android.server.ConnectivityService$NetworkTestedResults $r5;
        java.lang.String $r6;
        long $l0, $l4;
        int $i1, $i2, $i3, $i5, $i6, $i7;
        com.android.server.ConnectivityService$ConnectivityReportEvent $r11;
        com.android.server.ConnectivityService$ConnectivityDiagnosticsHandler $r12, $r16;
        android.os.PersistableBundle $r13;
        android.os.Bundle $r14;
        com.android.server.connectivity.NetworkAgentInfo r18;

        r0 := @this: com.android.server.ConnectivityService$NetworkMonitorCallbacks;

        r1 := @parameter0: android.net.NetworkTestResultParcelable;

        $r3 = r0.<com.android.server.ConnectivityService$NetworkMonitorCallbacks: com.android.server.ConnectivityService this$0>;

        $r4 = staticinvoke <com.android.server.ConnectivityService: com.android.server.ConnectivityService$NetworkStateTrackerHandler access$3900(com.android.server.ConnectivityService)>($r3);

        $r5 = new com.android.server.ConnectivityService$NetworkTestedResults;

        $i2 = r0.<com.android.server.ConnectivityService$NetworkMonitorCallbacks: int mNetId>;

        $i1 = r1.<android.net.NetworkTestResultParcelable: int result>;

        $l0 = r1.<android.net.NetworkTestResultParcelable: long timestampMillis>;

        $r6 = r1.<android.net.NetworkTestResultParcelable: java.lang.String redirectUrl>;

        specialinvoke $r5.<com.android.server.ConnectivityService$NetworkTestedResults: void <init>(int,int,long,java.lang.String,com.android.server.ConnectivityService$1)>($i2, $i1, $l0, $r6, null);

        r17 = virtualinvoke $r4.<com.android.server.ConnectivityService$NetworkStateTrackerHandler: android.os.Message obtainMessage(int,java.lang.Object)>(41, $r5);

        $r7 = r0.<com.android.server.ConnectivityService$NetworkMonitorCallbacks: com.android.server.ConnectivityService this$0>;

        $r8 = staticinvoke <com.android.server.ConnectivityService: com.android.server.ConnectivityService$NetworkStateTrackerHandler access$3900(com.android.server.ConnectivityService)>($r7);

        virtualinvoke $r8.<com.android.server.ConnectivityService$NetworkStateTrackerHandler: boolean sendMessage(android.os.Message)>(r17);

        $r9 = r0.<com.android.server.ConnectivityService$NetworkMonitorCallbacks: com.android.server.ConnectivityService this$0>;

        $i3 = r0.<com.android.server.ConnectivityService$NetworkMonitorCallbacks: int mNetId>;

        r18 = staticinvoke <com.android.server.ConnectivityService: com.android.server.connectivity.NetworkAgentInfo access$600(com.android.server.ConnectivityService,int)>($r9, $i3);

        if r18 != null goto label1;

        return;

     label1:
        $r10 = r0.<com.android.server.ConnectivityService$NetworkMonitorCallbacks: com.android.server.ConnectivityService this$0>;

        $r12 = $r10.<com.android.server.ConnectivityService: com.android.server.ConnectivityService$ConnectivityDiagnosticsHandler mConnectivityDiagnosticsHandler>;

        $r11 = new com.android.server.ConnectivityService$ConnectivityReportEvent;

        $l4 = r1.<android.net.NetworkTestResultParcelable: long timestampMillis>;

        specialinvoke $r11.<com.android.server.ConnectivityService$ConnectivityReportEvent: void <init>(long,com.android.server.connectivity.NetworkAgentInfo,com.android.server.ConnectivityService$1)>($l4, r18, null);

        r2 = virtualinvoke $r12.<com.android.server.ConnectivityService$ConnectivityDiagnosticsHandler: android.os.Message obtainMessage(int,java.lang.Object)>(41, $r11);

        $r13 = new android.os.PersistableBundle;

        specialinvoke $r13.<android.os.PersistableBundle: void <init>()>();

        $i5 = r1.<android.net.NetworkTestResultParcelable: int result>;

        virtualinvoke $r13.<android.os.PersistableBundle: void putInt(java.lang.String,int)>("networkValidationResult", $i5);

        $i6 = r1.<android.net.NetworkTestResultParcelable: int probesSucceeded>;

        virtualinvoke $r13.<android.os.PersistableBundle: void putInt(java.lang.String,int)>("networkProbesSucceeded", $i6);

        $i7 = r1.<android.net.NetworkTestResultParcelable: int probesAttempted>;

        virtualinvoke $r13.<android.os.PersistableBundle: void putInt(java.lang.String,int)>("networkProbesAttempted", $i7);

        $r14 = new android.os.Bundle;

        specialinvoke $r14.<android.os.Bundle: void <init>(android.os.PersistableBundle)>($r13);

        virtualinvoke r2.<android.os.Message: void setData(android.os.Bundle)>($r14);

        $r15 = r0.<com.android.server.ConnectivityService$NetworkMonitorCallbacks: com.android.server.ConnectivityService this$0>;

        $r16 = $r15.<com.android.server.ConnectivityService: com.android.server.ConnectivityService$ConnectivityDiagnosticsHandler mConnectivityDiagnosticsHandler>;

        virtualinvoke $r16.<com.android.server.ConnectivityService$ConnectivityDiagnosticsHandler: boolean sendMessage(android.os.Message)>(r2);

        return;
    }

    public void notifyPrivateDnsConfigResolved(android.net.PrivateDnsConfigParcel)
    {
        com.android.server.ConnectivityService$NetworkMonitorCallbacks r0;
        android.net.PrivateDnsConfigParcel r1;
        com.android.server.ConnectivityService $r2, $r4;
        com.android.server.ConnectivityService$NetworkStateTrackerHandler $r3, $r5;
        int $i0;
        android.net.shared.PrivateDnsConfig $r6;
        android.os.Message $r7;

        r0 := @this: com.android.server.ConnectivityService$NetworkMonitorCallbacks;

        r1 := @parameter0: android.net.PrivateDnsConfigParcel;

        $r2 = r0.<com.android.server.ConnectivityService$NetworkMonitorCallbacks: com.android.server.ConnectivityService this$0>;

        $r3 = staticinvoke <com.android.server.ConnectivityService: com.android.server.ConnectivityService$NetworkStateTrackerHandler access$3900(com.android.server.ConnectivityService)>($r2);

        $r4 = r0.<com.android.server.ConnectivityService$NetworkMonitorCallbacks: com.android.server.ConnectivityService this$0>;

        $r5 = staticinvoke <com.android.server.ConnectivityService: com.android.server.ConnectivityService$NetworkStateTrackerHandler access$3900(com.android.server.ConnectivityService)>($r4);

        $i0 = r0.<com.android.server.ConnectivityService$NetworkMonitorCallbacks: int mNetId>;

        $r6 = staticinvoke <android.net.shared.PrivateDnsConfig: android.net.shared.PrivateDnsConfig fromParcel(android.net.PrivateDnsConfigParcel)>(r1);

        $r7 = virtualinvoke $r5.<com.android.server.ConnectivityService$NetworkStateTrackerHandler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(42, 0, $i0, $r6);

        virtualinvoke $r3.<com.android.server.ConnectivityService$NetworkStateTrackerHandler: boolean sendMessage(android.os.Message)>($r7);

        return;
    }

    public void notifyProbeStatusChanged(int, int)
    {
        com.android.server.ConnectivityService$NetworkMonitorCallbacks r0;
        int i0, i1, $i2;
        com.android.server.ConnectivityService $r1, $r3;
        com.android.server.ConnectivityService$NetworkStateTrackerHandler $r2, $r4;
        java.lang.Integer $r5;
        android.os.Message $r6;

        r0 := @this: com.android.server.ConnectivityService$NetworkMonitorCallbacks;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.server.ConnectivityService$NetworkMonitorCallbacks: com.android.server.ConnectivityService this$0>;

        $r2 = staticinvoke <com.android.server.ConnectivityService: com.android.server.ConnectivityService$NetworkStateTrackerHandler access$3900(com.android.server.ConnectivityService)>($r1);

        $r3 = r0.<com.android.server.ConnectivityService$NetworkMonitorCallbacks: com.android.server.ConnectivityService this$0>;

        $r4 = staticinvoke <com.android.server.ConnectivityService: com.android.server.ConnectivityService$NetworkStateTrackerHandler access$3900(com.android.server.ConnectivityService)>($r3);

        $r5 = new java.lang.Integer;

        $i2 = r0.<com.android.server.ConnectivityService$NetworkMonitorCallbacks: int mNetId>;

        specialinvoke $r5.<java.lang.Integer: void <init>(int)>($i2);

        $r6 = virtualinvoke $r4.<com.android.server.ConnectivityService$NetworkStateTrackerHandler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(45, i0, i1, $r5);

        virtualinvoke $r2.<com.android.server.ConnectivityService$NetworkStateTrackerHandler: boolean sendMessage(android.os.Message)>($r6);

        return;
    }

    public void onNetworkMonitorCreated(android.net.INetworkMonitor)
    {
        com.android.server.ConnectivityService$NetworkMonitorCallbacks r0;
        android.net.INetworkMonitor r1;
        com.android.server.ConnectivityService $r2, $r4;
        com.android.server.ConnectivityService$InternalHandler $r3, $r5;
        android.util.Pair $r6;
        com.android.server.connectivity.AutodestructReference $r7;
        java.lang.Object $r8;
        com.android.server.connectivity.NetworkAgentInfo $r9;
        android.os.Message $r10;

        r0 := @this: com.android.server.ConnectivityService$NetworkMonitorCallbacks;

        r1 := @parameter0: android.net.INetworkMonitor;

        $r2 = r0.<com.android.server.ConnectivityService$NetworkMonitorCallbacks: com.android.server.ConnectivityService this$0>;

        $r3 = staticinvoke <com.android.server.ConnectivityService: com.android.server.ConnectivityService$InternalHandler access$400(com.android.server.ConnectivityService)>($r2);

        $r4 = r0.<com.android.server.ConnectivityService$NetworkMonitorCallbacks: com.android.server.ConnectivityService this$0>;

        $r5 = staticinvoke <com.android.server.ConnectivityService: com.android.server.ConnectivityService$InternalHandler access$400(com.android.server.ConnectivityService)>($r4);

        $r6 = new android.util.Pair;

        $r7 = r0.<com.android.server.ConnectivityService$NetworkMonitorCallbacks: com.android.server.connectivity.AutodestructReference mNai>;

        $r8 = virtualinvoke $r7.<com.android.server.connectivity.AutodestructReference: java.lang.Object getAndDestroy()>();

        $r9 = (com.android.server.connectivity.NetworkAgentInfo) $r8;

        specialinvoke $r6.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r9, r1);

        $r10 = virtualinvoke $r5.<com.android.server.ConnectivityService$InternalHandler: android.os.Message obtainMessage(int,java.lang.Object)>(18, $r6);

        virtualinvoke $r3.<com.android.server.ConnectivityService$InternalHandler: boolean sendMessage(android.os.Message)>($r10);

        return;
    }

    public void showProvisioningNotification(java.lang.String, java.lang.String)
    {
        com.android.server.ConnectivityService$NetworkMonitorCallbacks r0;
        java.lang.String r1, r12;
        long l0;
        android.content.Intent $r2;
        com.android.server.ConnectivityService $r4, $r6, $r8;
        android.content.Context $r5;
        com.android.server.ConnectivityService$NetworkStateTrackerHandler $r7, $r9;
        int $i1;
        android.os.Message $r10;
        java.lang.Throwable $r11;
        android.app.PendingIntent r14;

        r0 := @this: com.android.server.ConnectivityService$NetworkMonitorCallbacks;

        r12 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = new android.content.Intent;

        specialinvoke $r2.<android.content.Intent: void <init>(java.lang.String)>(r12);

        virtualinvoke $r2.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>(r1);

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r4 = r0.<com.android.server.ConnectivityService$NetworkMonitorCallbacks: com.android.server.ConnectivityService this$0>;

        $r5 = staticinvoke <com.android.server.ConnectivityService: android.content.Context access$3500(com.android.server.ConnectivityService)>($r4);

        r14 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>($r5, 0, $r2, 67108864);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        $r6 = r0.<com.android.server.ConnectivityService$NetworkMonitorCallbacks: com.android.server.ConnectivityService this$0>;

        $r7 = staticinvoke <com.android.server.ConnectivityService: com.android.server.ConnectivityService$NetworkStateTrackerHandler access$3900(com.android.server.ConnectivityService)>($r6);

        $r8 = r0.<com.android.server.ConnectivityService$NetworkMonitorCallbacks: com.android.server.ConnectivityService this$0>;

        $r9 = staticinvoke <com.android.server.ConnectivityService: com.android.server.ConnectivityService$NetworkStateTrackerHandler access$3900(com.android.server.ConnectivityService)>($r8);

        $i1 = r0.<com.android.server.ConnectivityService$NetworkMonitorCallbacks: int mNetId>;

        $r10 = virtualinvoke $r9.<com.android.server.ConnectivityService$NetworkStateTrackerHandler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(43, 1, $i1, r14);

        virtualinvoke $r7.<com.android.server.ConnectivityService$NetworkStateTrackerHandler: boolean sendMessage(android.os.Message)>($r10);

        return;

     label3:
        $r11 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r11;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
