class com.android.server.ConnectivityService$NetworkProviderInfo extends java.lang.Object
{
    private final com.android.internal.util.AsyncChannel mAsyncChannel;
    private final android.os.IBinder$DeathRecipient mDeathRecipient;
    public final android.os.Messenger messenger;
    public final java.lang.String name;
    public final int providerId;

    void <init>(java.lang.String, android.os.Messenger, com.android.internal.util.AsyncChannel, int, android.os.IBinder$DeathRecipient)
    {
        com.android.server.ConnectivityService$NetworkProviderInfo r0;
        java.lang.String r1;
        android.os.Messenger r2;
        com.android.internal.util.AsyncChannel r3;
        android.os.IBinder$DeathRecipient r4, $r5;
        java.lang.AssertionError $r6;
        int i0;
        boolean z0, z1;

        r0 := @this: com.android.server.ConnectivityService$NetworkProviderInfo;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Messenger;

        r3 := @parameter2: com.android.internal.util.AsyncChannel;

        i0 := @parameter3: int;

        r4 := @parameter4: android.os.IBinder$DeathRecipient;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.ConnectivityService$NetworkProviderInfo: java.lang.String name> = r1;

        r0.<com.android.server.ConnectivityService$NetworkProviderInfo: android.os.Messenger messenger> = r2;

        r0.<com.android.server.ConnectivityService$NetworkProviderInfo: int providerId> = i0;

        r0.<com.android.server.ConnectivityService$NetworkProviderInfo: com.android.internal.util.AsyncChannel mAsyncChannel> = r3;

        r0.<com.android.server.ConnectivityService$NetworkProviderInfo: android.os.IBinder$DeathRecipient mDeathRecipient> = r4;

        z0 = 1;

        if r3 != null goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        $r5 = r0.<com.android.server.ConnectivityService$NetworkProviderInfo: android.os.IBinder$DeathRecipient mDeathRecipient>;

        if $r5 != null goto label3;

        goto label4;

     label3:
        z0 = 0;

     label4:
        if z1 == z0 goto label5;

        return;

     label5:
        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>(java.lang.Object)>("Must pass exactly one of asyncChannel or deathRecipient");

        throw $r6;
    }

    void cancelRequest(android.net.NetworkRequest)
    {
        com.android.server.ConnectivityService$NetworkProviderInfo r0;
        android.net.NetworkRequest r1;
        boolean $z0;
        com.android.internal.util.AsyncChannel $r2;

        r0 := @this: com.android.server.ConnectivityService$NetworkProviderInfo;

        r1 := @parameter0: android.net.NetworkRequest;

        $z0 = virtualinvoke r0.<com.android.server.ConnectivityService$NetworkProviderInfo: boolean isLegacyNetworkFactory()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<com.android.server.ConnectivityService$NetworkProviderInfo: com.android.internal.util.AsyncChannel mAsyncChannel>;

        virtualinvoke $r2.<com.android.internal.util.AsyncChannel: void sendMessage(int,java.lang.Object)>(2, r1);

        goto label2;

     label1:
        virtualinvoke r0.<com.android.server.ConnectivityService$NetworkProviderInfo: void sendMessageToNetworkProvider(int,int,int,java.lang.Object)>(2, 0, 0, r1);

     label2:
        return;
    }

    void completeConnection()
    {
        com.android.server.ConnectivityService$NetworkProviderInfo r0;
        boolean $z0;
        com.android.internal.util.AsyncChannel $r1;

        r0 := @this: com.android.server.ConnectivityService$NetworkProviderInfo;

        $z0 = virtualinvoke r0.<com.android.server.ConnectivityService$NetworkProviderInfo: boolean isLegacyNetworkFactory()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<com.android.server.ConnectivityService$NetworkProviderInfo: com.android.internal.util.AsyncChannel mAsyncChannel>;

        virtualinvoke $r1.<com.android.internal.util.AsyncChannel: void sendMessage(int)>(69633);

     label1:
        return;
    }

    void connect(android.content.Context, android.os.Handler)
    {
        com.android.server.ConnectivityService$NetworkProviderInfo r0;
        android.os.Handler r1;
        boolean $z0;
        android.os.Messenger $r2, $r5;
        android.os.IBinder $r3;
        android.os.IBinder$DeathRecipient $r4, $r8;
        com.android.internal.util.AsyncChannel $r6;
        android.os.RemoteException $r7;
        android.content.Context r9;

        r0 := @this: com.android.server.ConnectivityService$NetworkProviderInfo;

        r9 := @parameter0: android.content.Context;

        r1 := @parameter1: android.os.Handler;

        $z0 = virtualinvoke r0.<com.android.server.ConnectivityService$NetworkProviderInfo: boolean isLegacyNetworkFactory()>();

        if $z0 == 0 goto label1;

        $r6 = r0.<com.android.server.ConnectivityService$NetworkProviderInfo: com.android.internal.util.AsyncChannel mAsyncChannel>;

        $r5 = r0.<com.android.server.ConnectivityService$NetworkProviderInfo: android.os.Messenger messenger>;

        virtualinvoke $r6.<com.android.internal.util.AsyncChannel: void connect(android.content.Context,android.os.Handler,android.os.Messenger)>(r9, r1, $r5);

        goto label4;

     label1:
        $r2 = r0.<com.android.server.ConnectivityService$NetworkProviderInfo: android.os.Messenger messenger>;

        $r3 = virtualinvoke $r2.<android.os.Messenger: android.os.IBinder getBinder()>();

        $r4 = r0.<com.android.server.ConnectivityService$NetworkProviderInfo: android.os.IBinder$DeathRecipient mDeathRecipient>;

        interfaceinvoke $r3.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>($r4, 0);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        $r8 = r0.<com.android.server.ConnectivityService$NetworkProviderInfo: android.os.IBinder$DeathRecipient mDeathRecipient>;

        interfaceinvoke $r8.<android.os.IBinder$DeathRecipient: void binderDied()>();

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    boolean isLegacyNetworkFactory()
    {
        com.android.server.ConnectivityService$NetworkProviderInfo r0;
        com.android.internal.util.AsyncChannel $r1;
        boolean z0;

        r0 := @this: com.android.server.ConnectivityService$NetworkProviderInfo;

        $r1 = r0.<com.android.server.ConnectivityService$NetworkProviderInfo: com.android.internal.util.AsyncChannel mAsyncChannel>;

        if $r1 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    void requestNetwork(android.net.NetworkRequest, int, int)
    {
        com.android.server.ConnectivityService$NetworkProviderInfo r0;
        android.net.NetworkRequest r1;
        int i0, i1;
        boolean $z0;
        com.android.internal.util.AsyncChannel $r2;

        r0 := @this: com.android.server.ConnectivityService$NetworkProviderInfo;

        r1 := @parameter0: android.net.NetworkRequest;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $z0 = virtualinvoke r0.<com.android.server.ConnectivityService$NetworkProviderInfo: boolean isLegacyNetworkFactory()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<com.android.server.ConnectivityService$NetworkProviderInfo: com.android.internal.util.AsyncChannel mAsyncChannel>;

        virtualinvoke $r2.<com.android.internal.util.AsyncChannel: void sendMessage(int,int,int,java.lang.Object)>(1, i0, i1, r1);

        goto label2;

     label1:
        virtualinvoke r0.<com.android.server.ConnectivityService$NetworkProviderInfo: void sendMessageToNetworkProvider(int,int,int,java.lang.Object)>(1, i0, i1, r1);

     label2:
        return;
    }

    void sendMessageToNetworkProvider(int, int, int, java.lang.Object)
    {
        com.android.server.ConnectivityService$NetworkProviderInfo r0;
        int i0, i1, i2;
        android.os.Messenger $r1;
        android.os.Message $r2;
        android.os.RemoteException $r3;
        java.lang.Object r4;

        r0 := @this: com.android.server.ConnectivityService$NetworkProviderInfo;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r4 := @parameter3: java.lang.Object;

     label1:
        $r1 = r0.<com.android.server.ConnectivityService$NetworkProviderInfo: android.os.Messenger messenger>;

        $r2 = staticinvoke <android.os.Message: android.os.Message obtain(android.os.Handler,int,int,int,java.lang.Object)>(null, i0, i1, i2, r4);

        virtualinvoke $r1.<android.os.Messenger: void send(android.os.Message)>($r2);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }
}
