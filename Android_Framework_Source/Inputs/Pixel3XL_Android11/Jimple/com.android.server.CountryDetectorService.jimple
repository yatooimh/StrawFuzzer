public class com.android.server.CountryDetectorService extends android.location.ICountryDetector$Stub
{
    private static final boolean DEBUG;
    private static final java.lang.String TAG;
    private final android.content.Context mContext;
    private com.android.server.location.CountryDetectorBase mCountryDetector;
    private android.os.Handler mHandler;
    private android.location.CountryListener mLocationBasedDetectorListener;
    private final java.util.HashMap mReceivers;
    private boolean mSystemReady;

    public void <init>(android.content.Context)
    {
        com.android.server.CountryDetectorService r0;
        android.content.Context r1;
        android.os.Handler $r2;

        r0 := @this: com.android.server.CountryDetectorService;

        r1 := @parameter0: android.content.Context;

        $r2 = staticinvoke <com.android.internal.os.BackgroundThread: android.os.Handler getHandler()>();

        specialinvoke r0.<com.android.server.CountryDetectorService: void <init>(android.content.Context,android.os.Handler)>(r1, $r2);

        return;
    }

    void <init>(android.content.Context, android.os.Handler)
    {
        com.android.server.CountryDetectorService r0;
        android.content.Context r1;
        android.os.Handler r2;
        java.util.HashMap $r3;

        r0 := @this: com.android.server.CountryDetectorService;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.os.Handler;

        specialinvoke r0.<android.location.ICountryDetector$Stub: void <init>()>();

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.CountryDetectorService: java.util.HashMap mReceivers> = $r3;

        r0.<com.android.server.CountryDetectorService: android.content.Context mContext> = r1;

        r0.<com.android.server.CountryDetectorService: android.os.Handler mHandler> = r2;

        return;
    }

    static void access$000(com.android.server.CountryDetectorService, android.os.IBinder)
    {
        com.android.server.CountryDetectorService r0;
        android.os.IBinder r1;

        r0 := @parameter0: com.android.server.CountryDetectorService;

        r1 := @parameter1: android.os.IBinder;

        specialinvoke r0.<com.android.server.CountryDetectorService: void removeListener(android.os.IBinder)>(r1);

        return;
    }

    private void addListener(android.location.ICountryListener)
    {
        com.android.server.CountryDetectorService r0;
        java.util.HashMap r1, $r4, $r7;
        com.android.server.CountryDetectorService$Receiver r2;
        android.os.IBinder $r3, $r5;
        int $i0;
        android.location.CountryListener $r8;
        android.os.RemoteException $r9;
        java.lang.Throwable $r10;
        android.location.ICountryListener r11;

        r0 := @this: com.android.server.CountryDetectorService;

        r11 := @parameter0: android.location.ICountryListener;

        r1 = r0.<com.android.server.CountryDetectorService: java.util.HashMap mReceivers>;

        entermonitor r1;

     label01:
        r2 = new com.android.server.CountryDetectorService$Receiver;

        specialinvoke r2.<com.android.server.CountryDetectorService$Receiver: void <init>(com.android.server.CountryDetectorService,android.location.ICountryListener)>(r0, r11);

     label02:
        $r3 = interfaceinvoke r11.<android.location.ICountryListener: android.os.IBinder asBinder()>();

        interfaceinvoke $r3.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>(r2, 0);

        $r4 = r0.<com.android.server.CountryDetectorService: java.util.HashMap mReceivers>;

        $r5 = interfaceinvoke r11.<android.location.ICountryListener: android.os.IBinder asBinder()>();

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, r2);

        $r7 = r0.<com.android.server.CountryDetectorService: java.util.HashMap mReceivers>;

        $i0 = virtualinvoke $r7.<java.util.HashMap: int size()>();

        if $i0 != 1 goto label03;

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("CountryDetector", "The first listener is added");

        $r8 = r0.<com.android.server.CountryDetectorService: android.location.CountryListener mLocationBasedDetectorListener>;

        virtualinvoke r0.<com.android.server.CountryDetectorService: void setCountryListener(android.location.CountryListener)>($r8);

     label03:
        goto label06;

     label04:
        $r9 := @caughtexception;

     label05:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("CountryDetector", "linkToDeath failed:", $r9);

     label06:
        exitmonitor r1;

     label07:
        return;

     label08:
        $r10 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r10;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch android.os.RemoteException from label02 to label03 with label04;
        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    private com.android.server.location.CountryDetectorBase loadCustomCountryDetectorIfAvailable(java.lang.String)
    {
        com.android.server.CountryDetectorService r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r3, r12;
        java.lang.Class $r4, $r5;
        java.lang.Class[] $r6;
        java.lang.reflect.Constructor $r7;
        java.lang.Object[] $r8;
        android.content.Context $r9;
        java.lang.Object $r10;
        java.lang.Throwable $r11;
        com.android.server.location.CountryDetectorBase r13;

        r0 := @this: com.android.server.CountryDetectorService;

        r12 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Using custom country detector class: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("CountryDetector", $r3);

     label1:
        $r4 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r12);

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.Class asSubclass(java.lang.Class)>(class "Lcom/android/server/location/CountryDetectorBase;");

        $r6 = newarray (java.lang.Class)[1];

        $r6[0] = class "Landroid/content/Context;";

        $r7 = virtualinvoke $r5.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r6);

        $r8 = newarray (java.lang.Object)[1];

        $r9 = r0.<com.android.server.CountryDetectorService: android.content.Context mContext>;

        $r8[0] = $r9;

        $r10 = virtualinvoke $r7.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r8);

        r13 = (com.android.server.location.CountryDetectorBase) $r10;

     label2:
        goto label4;

     label3:
        $r11 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("CountryDetector", "Could not instantiate the custom country detector class");

        r13 = null;

     label4:
        return r13;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
        catch java.lang.InstantiationException from label1 to label2 with label3;
        catch java.lang.IllegalAccessException from label1 to label2 with label3;
        catch java.lang.NoSuchMethodException from label1 to label2 with label3;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label3;
    }

    private void removeListener(android.os.IBinder)
    {
        com.android.server.CountryDetectorService r0;
        java.util.HashMap r1, $r2, $r4;
        boolean $z0;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: com.android.server.CountryDetectorService;

        r6 := @parameter0: android.os.IBinder;

        r1 = r0.<com.android.server.CountryDetectorService: java.util.HashMap mReceivers>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.CountryDetectorService: java.util.HashMap mReceivers>;

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r6);

        $r4 = r0.<com.android.server.CountryDetectorService: java.util.HashMap mReceivers>;

        $z0 = virtualinvoke $r4.<java.util.HashMap: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        virtualinvoke r0.<com.android.server.CountryDetectorService: void setCountryListener(android.location.CountryListener)>(null);

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("CountryDetector", "No listener is left");

     label2:
        exitmonitor r1;

     label3:
        return;

     label4:
        $r5 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void addCountryListener(android.location.ICountryListener) throws android.os.RemoteException
    {
        com.android.server.CountryDetectorService r0;
        android.location.ICountryListener r1;
        boolean $z0;
        android.os.RemoteException $r2;

        r0 := @this: com.android.server.CountryDetectorService;

        r1 := @parameter0: android.location.ICountryListener;

        $z0 = r0.<com.android.server.CountryDetectorService: boolean mSystemReady>;

        if $z0 == 0 goto label1;

        specialinvoke r0.<com.android.server.CountryDetectorService: void addListener(android.location.ICountryListener)>(r1);

        return;

     label1:
        $r2 = new android.os.RemoteException;

        specialinvoke $r2.<android.os.RemoteException: void <init>()>();

        throw $r2;
    }

    public android.location.Country detectCountry()
    {
        com.android.server.CountryDetectorService r0;
        boolean $z0;
        com.android.server.location.CountryDetectorBase $r1;
        android.location.Country $r2;

        r0 := @this: com.android.server.CountryDetectorService;

        $z0 = r0.<com.android.server.CountryDetectorService: boolean mSystemReady>;

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r1 = r0.<com.android.server.CountryDetectorService: com.android.server.location.CountryDetectorBase mCountryDetector>;

        $r2 = virtualinvoke $r1.<com.android.server.location.CountryDetectorBase: android.location.Country detectCountry()>();

        return $r2;
    }

    protected void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.CountryDetectorService r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        android.content.Context $r4;
        boolean $z0;

        r0 := @this: com.android.server.CountryDetectorService;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        $r4 = r0.<com.android.server.CountryDetectorService: android.content.Context mContext>;

        $z0 = staticinvoke <com.android.internal.util.DumpUtils: boolean checkDumpPermission(android.content.Context,java.lang.String,java.io.PrintWriter)>($r4, "CountryDetector", r2);

        if $z0 != 0 goto label1;

        return;

     label1:
        return;
    }

    com.android.server.location.CountryDetectorBase getCountryDetector()
    {
        com.android.server.CountryDetectorService r0;
        com.android.server.location.CountryDetectorBase $r1;

        r0 := @this: com.android.server.CountryDetectorService;

        $r1 = r0.<com.android.server.CountryDetectorService: com.android.server.location.CountryDetectorBase mCountryDetector>;

        return $r1;
    }

    void initialize()
    {
        com.android.server.CountryDetectorService r0;
        java.lang.String r1;
        android.content.Context $r2, $r6;
        boolean $z0;
        com.android.server.location.CountryDetectorBase $r3, $r7;
        com.android.server._$$Lambda$CountryDetectorService$YZWlE4qqoDuiwnkSrasi91p2_Tk $r4;
        com.android.server.location.ComprehensiveCountryDetector $r5;

        r0 := @this: com.android.server.CountryDetectorService;

        $r2 = r0.<com.android.server.CountryDetectorService: android.content.Context mContext>;

        r1 = virtualinvoke $r2.<android.content.Context: java.lang.String getString(int)>(17039846);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 != 0 goto label1;

        $r7 = specialinvoke r0.<com.android.server.CountryDetectorService: com.android.server.location.CountryDetectorBase loadCustomCountryDetectorIfAvailable(java.lang.String)>(r1);

        r0.<com.android.server.CountryDetectorService: com.android.server.location.CountryDetectorBase mCountryDetector> = $r7;

     label1:
        $r3 = r0.<com.android.server.CountryDetectorService: com.android.server.location.CountryDetectorBase mCountryDetector>;

        if $r3 != null goto label2;

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("CountryDetector", "Using default country detector");

        $r5 = new com.android.server.location.ComprehensiveCountryDetector;

        $r6 = r0.<com.android.server.CountryDetectorService: android.content.Context mContext>;

        specialinvoke $r5.<com.android.server.location.ComprehensiveCountryDetector: void <init>(android.content.Context)>($r6);

        r0.<com.android.server.CountryDetectorService: com.android.server.location.CountryDetectorBase mCountryDetector> = $r5;

     label2:
        $r4 = new com.android.server._$$Lambda$CountryDetectorService$YZWlE4qqoDuiwnkSrasi91p2_Tk;

        specialinvoke $r4.<com.android.server._$$Lambda$CountryDetectorService$YZWlE4qqoDuiwnkSrasi91p2_Tk: void <init>(com.android.server.CountryDetectorService)>(r0);

        r0.<com.android.server.CountryDetectorService: android.location.CountryListener mLocationBasedDetectorListener> = $r4;

        return;
    }

    boolean isSystemReady()
    {
        com.android.server.CountryDetectorService r0;
        boolean $z0;

        r0 := @this: com.android.server.CountryDetectorService;

        $z0 = r0.<com.android.server.CountryDetectorService: boolean mSystemReady>;

        return $z0;
    }

    public void lambda$initialize$1$CountryDetectorService(android.location.Country)
    {
        com.android.server.CountryDetectorService r0;
        android.location.Country r1;

        r0 := @this: com.android.server.CountryDetectorService;

        r1 := @parameter0: android.location.Country;

        virtualinvoke r0.<com.android.server.CountryDetectorService: void notifyReceivers(android.location.Country)>(r1);

        return;
    }

    public void lambda$initialize$2$CountryDetectorService(android.location.Country)
    {
        com.android.server.CountryDetectorService r0;
        android.location.Country r1;
        com.android.server._$$Lambda$CountryDetectorService$fFSTHORponDwFf2wlaJLUdUhirQ $r2;
        android.os.Handler $r3;

        r0 := @this: com.android.server.CountryDetectorService;

        r1 := @parameter0: android.location.Country;

        $r3 = r0.<com.android.server.CountryDetectorService: android.os.Handler mHandler>;

        $r2 = new com.android.server._$$Lambda$CountryDetectorService$fFSTHORponDwFf2wlaJLUdUhirQ;

        specialinvoke $r2.<com.android.server._$$Lambda$CountryDetectorService$fFSTHORponDwFf2wlaJLUdUhirQ: void <init>(com.android.server.CountryDetectorService,android.location.Country)>(r0, r1);

        virtualinvoke $r3.<android.os.Handler: boolean post(java.lang.Runnable)>($r2);

        return;
    }

    public void lambda$setCountryListener$3$CountryDetectorService(android.location.CountryListener)
    {
        com.android.server.CountryDetectorService r0;
        android.location.CountryListener r1;
        com.android.server.location.CountryDetectorBase $r2;

        r0 := @this: com.android.server.CountryDetectorService;

        r1 := @parameter0: android.location.CountryListener;

        $r2 = r0.<com.android.server.CountryDetectorService: com.android.server.location.CountryDetectorBase mCountryDetector>;

        virtualinvoke $r2.<com.android.server.location.CountryDetectorBase: void setCountryListener(android.location.CountryListener)>(r1);

        return;
    }

    public void lambda$systemRunning$0$CountryDetectorService()
    {
        com.android.server.CountryDetectorService r0;

        r0 := @this: com.android.server.CountryDetectorService;

        virtualinvoke r0.<com.android.server.CountryDetectorService: void initialize()>();

        r0.<com.android.server.CountryDetectorService: boolean mSystemReady> = 1;

        return;
    }

    protected void notifyReceivers(android.location.Country)
    {
        com.android.server.CountryDetectorService r0;
        java.util.HashMap r1, $r3;
        java.util.Iterator r2;
        java.util.Collection $r4;
        boolean $z0;
        java.lang.Object $r5;
        android.location.ICountryListener $r6;
        java.lang.Throwable $r7;
        android.os.RemoteException $r8;
        android.location.Country r9;
        com.android.server.CountryDetectorService$Receiver r10;

        r0 := @this: com.android.server.CountryDetectorService;

        r9 := @parameter0: android.location.Country;

        r1 = r0.<com.android.server.CountryDetectorService: java.util.HashMap mReceivers>;

        entermonitor r1;

     label01:
        $r3 = r0.<com.android.server.CountryDetectorService: java.util.HashMap mReceivers>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.util.Collection values()>();

        r2 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label08;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r10 = (com.android.server.CountryDetectorService$Receiver) $r5;

     label03:
        $r6 = virtualinvoke r10.<com.android.server.CountryDetectorService$Receiver: android.location.ICountryListener getListener()>();

        interfaceinvoke $r6.<android.location.ICountryListener: void onCountryDetected(android.location.Country)>(r9);

     label04:
        goto label07;

     label05:
        $r8 := @caughtexception;

     label06:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("CountryDetector", "notifyReceivers failed:", $r8);

     label07:
        goto label02;

     label08:
        exitmonitor r1;

     label09:
        return;

     label10:
        $r7 := @caughtexception;

     label11:
        exitmonitor r1;

     label12:
        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label02 to label03 with label10;
        catch android.os.RemoteException from label03 to label04 with label05;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public void removeCountryListener(android.location.ICountryListener) throws android.os.RemoteException
    {
        com.android.server.CountryDetectorService r0;
        android.location.ICountryListener r1;
        boolean $z0;
        android.os.RemoteException $r2;
        android.os.IBinder $r3;

        r0 := @this: com.android.server.CountryDetectorService;

        r1 := @parameter0: android.location.ICountryListener;

        $z0 = r0.<com.android.server.CountryDetectorService: boolean mSystemReady>;

        if $z0 == 0 goto label1;

        $r3 = interfaceinvoke r1.<android.location.ICountryListener: android.os.IBinder asBinder()>();

        specialinvoke r0.<com.android.server.CountryDetectorService: void removeListener(android.os.IBinder)>($r3);

        return;

     label1:
        $r2 = new android.os.RemoteException;

        specialinvoke $r2.<android.os.RemoteException: void <init>()>();

        throw $r2;
    }

    protected void setCountryListener(android.location.CountryListener)
    {
        com.android.server.CountryDetectorService r0;
        android.location.CountryListener r1;
        com.android.server._$$Lambda$CountryDetectorService$UdoYpHRrhGb_PF6QTwQ4SluOe20 $r2;
        android.os.Handler $r3;

        r0 := @this: com.android.server.CountryDetectorService;

        r1 := @parameter0: android.location.CountryListener;

        $r3 = r0.<com.android.server.CountryDetectorService: android.os.Handler mHandler>;

        $r2 = new com.android.server._$$Lambda$CountryDetectorService$UdoYpHRrhGb_PF6QTwQ4SluOe20;

        specialinvoke $r2.<com.android.server._$$Lambda$CountryDetectorService$UdoYpHRrhGb_PF6QTwQ4SluOe20: void <init>(com.android.server.CountryDetectorService,android.location.CountryListener)>(r0, r1);

        virtualinvoke $r3.<android.os.Handler: boolean post(java.lang.Runnable)>($r2);

        return;
    }

    void systemRunning()
    {
        com.android.server.CountryDetectorService r0;
        com.android.server._$$Lambda$CountryDetectorService$ESi5ICoEixGJHWdY67G_J38VrJI $r1;
        android.os.Handler $r2;

        r0 := @this: com.android.server.CountryDetectorService;

        $r2 = r0.<com.android.server.CountryDetectorService: android.os.Handler mHandler>;

        $r1 = new com.android.server._$$Lambda$CountryDetectorService$ESi5ICoEixGJHWdY67G_J38VrJI;

        specialinvoke $r1.<com.android.server._$$Lambda$CountryDetectorService$ESi5ICoEixGJHWdY67G_J38VrJI: void <init>(com.android.server.CountryDetectorService)>(r0);

        virtualinvoke $r2.<android.os.Handler: boolean post(java.lang.Runnable)>($r1);

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.CountryDetectorService: java.lang.String TAG> = "CountryDetector";

        <com.android.server.CountryDetectorService: boolean DEBUG> = 0;

        return;
    }
}
