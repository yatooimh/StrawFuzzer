final class com.android.server.DeviceIdleController$BinderService extends android.os.IDeviceIdleController$Stub
{
    final com.android.server.DeviceIdleController this$0;

    private void <init>(com.android.server.DeviceIdleController)
    {
        com.android.server.DeviceIdleController$BinderService r0;
        com.android.server.DeviceIdleController r1;

        r0 := @this: com.android.server.DeviceIdleController$BinderService;

        r1 := @parameter0: com.android.server.DeviceIdleController;

        r0.<com.android.server.DeviceIdleController$BinderService: com.android.server.DeviceIdleController this$0> = r1;

        specialinvoke r0.<android.os.IDeviceIdleController$Stub: void <init>()>();

        return;
    }

    void <init>(com.android.server.DeviceIdleController, com.android.server.DeviceIdleController$1)
    {
        com.android.server.DeviceIdleController$BinderService r0;
        com.android.server.DeviceIdleController r1;
        com.android.server.DeviceIdleController$1 r2;

        r0 := @this: com.android.server.DeviceIdleController$BinderService;

        r1 := @parameter0: com.android.server.DeviceIdleController;

        r2 := @parameter1: com.android.server.DeviceIdleController$1;

        specialinvoke r0.<com.android.server.DeviceIdleController$BinderService: void <init>(com.android.server.DeviceIdleController)>(r1);

        return;
    }

    public void addPowerSaveTempWhitelistApp(java.lang.String, long, int, java.lang.String) throws android.os.RemoteException
    {
        com.android.server.DeviceIdleController$BinderService r0;
        java.lang.String r1, r2;
        long l0;
        int i1;
        com.android.server.DeviceIdleController $r3;

        r0 := @this: com.android.server.DeviceIdleController$BinderService;

        r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        r2 := @parameter3: java.lang.String;

        $r3 = r0.<com.android.server.DeviceIdleController$BinderService: com.android.server.DeviceIdleController this$0>;

        virtualinvoke $r3.<com.android.server.DeviceIdleController: void addPowerSaveTempWhitelistAppChecked(java.lang.String,long,int,java.lang.String)>(r1, l0, i1, r2);

        return;
    }

    public long addPowerSaveTempWhitelistAppForMms(java.lang.String, int, java.lang.String) throws android.os.RemoteException
    {
        com.android.server.DeviceIdleController$BinderService r0;
        java.lang.String r1, r2;
        int i0;
        long l1;
        com.android.server.DeviceIdleController $r3, $r5;
        com.android.server.DeviceIdleController$Constants $r4;

        r0 := @this: com.android.server.DeviceIdleController$BinderService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        $r3 = r0.<com.android.server.DeviceIdleController$BinderService: com.android.server.DeviceIdleController this$0>;

        $r4 = staticinvoke <com.android.server.DeviceIdleController: com.android.server.DeviceIdleController$Constants access$100(com.android.server.DeviceIdleController)>($r3);

        l1 = $r4.<com.android.server.DeviceIdleController$Constants: long MMS_TEMP_APP_WHITELIST_DURATION>;

        $r5 = r0.<com.android.server.DeviceIdleController$BinderService: com.android.server.DeviceIdleController this$0>;

        virtualinvoke $r5.<com.android.server.DeviceIdleController: void addPowerSaveTempWhitelistAppChecked(java.lang.String,long,int,java.lang.String)>(r1, l1, i0, r2);

        return l1;
    }

    public long addPowerSaveTempWhitelistAppForSms(java.lang.String, int, java.lang.String) throws android.os.RemoteException
    {
        com.android.server.DeviceIdleController$BinderService r0;
        java.lang.String r1, r2;
        int i0;
        long l1;
        com.android.server.DeviceIdleController $r3, $r5;
        com.android.server.DeviceIdleController$Constants $r4;

        r0 := @this: com.android.server.DeviceIdleController$BinderService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        $r3 = r0.<com.android.server.DeviceIdleController$BinderService: com.android.server.DeviceIdleController this$0>;

        $r4 = staticinvoke <com.android.server.DeviceIdleController: com.android.server.DeviceIdleController$Constants access$100(com.android.server.DeviceIdleController)>($r3);

        l1 = $r4.<com.android.server.DeviceIdleController$Constants: long SMS_TEMP_APP_WHITELIST_DURATION>;

        $r5 = r0.<com.android.server.DeviceIdleController$BinderService: com.android.server.DeviceIdleController this$0>;

        virtualinvoke $r5.<com.android.server.DeviceIdleController: void addPowerSaveTempWhitelistAppChecked(java.lang.String,long,int,java.lang.String)>(r1, l1, i0, r2);

        return l1;
    }

    public void addPowerSaveWhitelistApp(java.lang.String)
    {
        com.android.server.DeviceIdleController$BinderService r0;
        java.lang.String r1;
        java.util.List $r2;

        r0 := @this: com.android.server.DeviceIdleController$BinderService;

        r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r1);

        virtualinvoke r0.<com.android.server.DeviceIdleController$BinderService: int addPowerSaveWhitelistApps(java.util.List)>($r2);

        return;
    }

    public int addPowerSaveWhitelistApps(java.util.List)
    {
        com.android.server.DeviceIdleController$BinderService r0;
        long l0;
        int i1;
        com.android.server.DeviceIdleController $r1, $r3;
        android.content.Context $r2;
        java.lang.Throwable $r4;
        java.util.List r5;

        r0 := @this: com.android.server.DeviceIdleController$BinderService;

        r5 := @parameter0: java.util.List;

        $r1 = r0.<com.android.server.DeviceIdleController$BinderService: com.android.server.DeviceIdleController this$0>;

        $r2 = virtualinvoke $r1.<com.android.server.DeviceIdleController: android.content.Context getContext()>();

        virtualinvoke $r2.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.DEVICE_POWER", null);

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r3 = r0.<com.android.server.DeviceIdleController$BinderService: com.android.server.DeviceIdleController this$0>;

        i1 = staticinvoke <com.android.server.DeviceIdleController: int access$1700(com.android.server.DeviceIdleController,java.util.List)>($r3, r5);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return i1;

     label3:
        $r4 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    protected void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.DeviceIdleController$BinderService r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        com.android.server.DeviceIdleController $r4;

        r0 := @this: com.android.server.DeviceIdleController$BinderService;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        $r4 = r0.<com.android.server.DeviceIdleController$BinderService: com.android.server.DeviceIdleController this$0>;

        virtualinvoke $r4.<com.android.server.DeviceIdleController: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r1, r2, r3);

        return;
    }

    public void exitIdle(java.lang.String)
    {
        com.android.server.DeviceIdleController$BinderService r0;
        long l0;
        com.android.server.DeviceIdleController $r1, $r3;
        android.content.Context $r2;
        java.lang.Throwable $r4;
        java.lang.String r5;

        r0 := @this: com.android.server.DeviceIdleController$BinderService;

        r5 := @parameter0: java.lang.String;

        $r1 = r0.<com.android.server.DeviceIdleController$BinderService: com.android.server.DeviceIdleController this$0>;

        $r2 = virtualinvoke $r1.<com.android.server.DeviceIdleController: android.content.Context getContext()>();

        virtualinvoke $r2.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.DEVICE_POWER", null);

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r3 = r0.<com.android.server.DeviceIdleController$BinderService: com.android.server.DeviceIdleController this$0>;

        virtualinvoke $r3.<com.android.server.DeviceIdleController: void exitIdleInternal(java.lang.String)>(r5);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label3:
        $r4 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public int[] getAppIdTempWhitelist()
    {
        com.android.server.DeviceIdleController$BinderService r0;
        com.android.server.DeviceIdleController $r1;
        int[] $r2;

        r0 := @this: com.android.server.DeviceIdleController$BinderService;

        $r1 = r0.<com.android.server.DeviceIdleController$BinderService: com.android.server.DeviceIdleController this$0>;

        $r2 = virtualinvoke $r1.<com.android.server.DeviceIdleController: int[] getAppIdTempWhitelistInternal()>();

        return $r2;
    }

    public int[] getAppIdUserWhitelist()
    {
        com.android.server.DeviceIdleController$BinderService r0;
        com.android.server.DeviceIdleController $r1;
        int[] $r2;

        r0 := @this: com.android.server.DeviceIdleController$BinderService;

        $r1 = r0.<com.android.server.DeviceIdleController$BinderService: com.android.server.DeviceIdleController this$0>;

        $r2 = virtualinvoke $r1.<com.android.server.DeviceIdleController: int[] getAppIdUserWhitelistInternal()>();

        return $r2;
    }

    public int[] getAppIdWhitelist()
    {
        com.android.server.DeviceIdleController$BinderService r0;
        com.android.server.DeviceIdleController $r1;
        int[] $r2;

        r0 := @this: com.android.server.DeviceIdleController$BinderService;

        $r1 = r0.<com.android.server.DeviceIdleController$BinderService: com.android.server.DeviceIdleController this$0>;

        $r2 = virtualinvoke $r1.<com.android.server.DeviceIdleController: int[] getAppIdWhitelistInternal()>();

        return $r2;
    }

    public int[] getAppIdWhitelistExceptIdle()
    {
        com.android.server.DeviceIdleController$BinderService r0;
        com.android.server.DeviceIdleController $r1;
        int[] $r2;

        r0 := @this: com.android.server.DeviceIdleController$BinderService;

        $r1 = r0.<com.android.server.DeviceIdleController$BinderService: com.android.server.DeviceIdleController this$0>;

        $r2 = virtualinvoke $r1.<com.android.server.DeviceIdleController: int[] getAppIdWhitelistExceptIdleInternal()>();

        return $r2;
    }

    public java.lang.String[] getFullPowerWhitelist()
    {
        com.android.server.DeviceIdleController$BinderService r0;
        com.android.server.DeviceIdleController $r1;
        java.lang.String[] $r2;

        r0 := @this: com.android.server.DeviceIdleController$BinderService;

        $r1 = r0.<com.android.server.DeviceIdleController$BinderService: com.android.server.DeviceIdleController this$0>;

        $r2 = virtualinvoke $r1.<com.android.server.DeviceIdleController: java.lang.String[] getFullPowerWhitelistInternal()>();

        return $r2;
    }

    public java.lang.String[] getFullPowerWhitelistExceptIdle()
    {
        com.android.server.DeviceIdleController$BinderService r0;
        com.android.server.DeviceIdleController $r1;
        java.lang.String[] $r2;

        r0 := @this: com.android.server.DeviceIdleController$BinderService;

        $r1 = r0.<com.android.server.DeviceIdleController$BinderService: com.android.server.DeviceIdleController this$0>;

        $r2 = virtualinvoke $r1.<com.android.server.DeviceIdleController: java.lang.String[] getFullPowerWhitelistExceptIdleInternal()>();

        return $r2;
    }

    public java.lang.String[] getRemovedSystemPowerWhitelistApps()
    {
        com.android.server.DeviceIdleController$BinderService r0;
        com.android.server.DeviceIdleController $r1;
        java.lang.String[] $r2;

        r0 := @this: com.android.server.DeviceIdleController$BinderService;

        $r1 = r0.<com.android.server.DeviceIdleController$BinderService: com.android.server.DeviceIdleController this$0>;

        $r2 = virtualinvoke $r1.<com.android.server.DeviceIdleController: java.lang.String[] getRemovedSystemPowerWhitelistAppsInternal()>();

        return $r2;
    }

    public java.lang.String[] getSystemPowerWhitelist()
    {
        com.android.server.DeviceIdleController$BinderService r0;
        com.android.server.DeviceIdleController $r1;
        java.lang.String[] $r2;

        r0 := @this: com.android.server.DeviceIdleController$BinderService;

        $r1 = r0.<com.android.server.DeviceIdleController$BinderService: com.android.server.DeviceIdleController this$0>;

        $r2 = virtualinvoke $r1.<com.android.server.DeviceIdleController: java.lang.String[] getSystemPowerWhitelistInternal()>();

        return $r2;
    }

    public java.lang.String[] getSystemPowerWhitelistExceptIdle()
    {
        com.android.server.DeviceIdleController$BinderService r0;
        com.android.server.DeviceIdleController $r1;
        java.lang.String[] $r2;

        r0 := @this: com.android.server.DeviceIdleController$BinderService;

        $r1 = r0.<com.android.server.DeviceIdleController$BinderService: com.android.server.DeviceIdleController this$0>;

        $r2 = virtualinvoke $r1.<com.android.server.DeviceIdleController: java.lang.String[] getSystemPowerWhitelistExceptIdleInternal()>();

        return $r2;
    }

    public java.lang.String[] getUserPowerWhitelist()
    {
        com.android.server.DeviceIdleController$BinderService r0;
        com.android.server.DeviceIdleController $r1;
        java.lang.String[] $r2;

        r0 := @this: com.android.server.DeviceIdleController$BinderService;

        $r1 = r0.<com.android.server.DeviceIdleController$BinderService: com.android.server.DeviceIdleController this$0>;

        $r2 = virtualinvoke $r1.<com.android.server.DeviceIdleController: java.lang.String[] getUserPowerWhitelistInternal()>();

        return $r2;
    }

    public boolean isPowerSaveWhitelistApp(java.lang.String)
    {
        com.android.server.DeviceIdleController$BinderService r0;
        java.lang.String r1;
        com.android.server.DeviceIdleController $r2;
        boolean $z0;

        r0 := @this: com.android.server.DeviceIdleController$BinderService;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.DeviceIdleController$BinderService: com.android.server.DeviceIdleController this$0>;

        $z0 = virtualinvoke $r2.<com.android.server.DeviceIdleController: boolean isPowerSaveWhitelistAppInternal(java.lang.String)>(r1);

        return $z0;
    }

    public boolean isPowerSaveWhitelistExceptIdleApp(java.lang.String)
    {
        com.android.server.DeviceIdleController$BinderService r0;
        java.lang.String r1;
        com.android.server.DeviceIdleController $r2;
        boolean $z0;

        r0 := @this: com.android.server.DeviceIdleController$BinderService;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.DeviceIdleController$BinderService: com.android.server.DeviceIdleController this$0>;

        $z0 = virtualinvoke $r2.<com.android.server.DeviceIdleController: boolean isPowerSaveWhitelistExceptIdleAppInternal(java.lang.String)>(r1);

        return $z0;
    }

    public void onShellCommand(java.io.FileDescriptor, java.io.FileDescriptor, java.io.FileDescriptor, java.lang.String[], android.os.ShellCallback, android.os.ResultReceiver)
    {
        com.android.server.DeviceIdleController$BinderService r0;
        java.io.FileDescriptor r1, r2, r3;
        java.lang.String[] r4;
        android.os.ShellCallback r5;
        android.os.ResultReceiver r6;
        com.android.server.DeviceIdleController$Shell $r7;
        com.android.server.DeviceIdleController $r8;

        r0 := @this: com.android.server.DeviceIdleController$BinderService;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.FileDescriptor;

        r3 := @parameter2: java.io.FileDescriptor;

        r4 := @parameter3: java.lang.String[];

        r5 := @parameter4: android.os.ShellCallback;

        r6 := @parameter5: android.os.ResultReceiver;

        $r7 = new com.android.server.DeviceIdleController$Shell;

        $r8 = r0.<com.android.server.DeviceIdleController$BinderService: com.android.server.DeviceIdleController this$0>;

        specialinvoke $r7.<com.android.server.DeviceIdleController$Shell: void <init>(com.android.server.DeviceIdleController)>($r8);

        virtualinvoke $r7.<com.android.server.DeviceIdleController$Shell: int exec(android.os.Binder,java.io.FileDescriptor,java.io.FileDescriptor,java.io.FileDescriptor,java.lang.String[],android.os.ShellCallback,android.os.ResultReceiver)>(r0, r1, r2, r3, r4, r5, r6);

        return;
    }

    public void removePowerSaveWhitelistApp(java.lang.String)
    {
        com.android.server.DeviceIdleController$BinderService r0;
        long l0;
        com.android.server.DeviceIdleController $r1, $r3;
        android.content.Context $r2;
        java.lang.Throwable $r4;
        java.lang.String r5;

        r0 := @this: com.android.server.DeviceIdleController$BinderService;

        r5 := @parameter0: java.lang.String;

        $r1 = r0.<com.android.server.DeviceIdleController$BinderService: com.android.server.DeviceIdleController this$0>;

        $r2 = virtualinvoke $r1.<com.android.server.DeviceIdleController: android.content.Context getContext()>();

        virtualinvoke $r2.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.DEVICE_POWER", null);

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r3 = r0.<com.android.server.DeviceIdleController$BinderService: com.android.server.DeviceIdleController this$0>;

        virtualinvoke $r3.<com.android.server.DeviceIdleController: boolean removePowerSaveWhitelistAppInternal(java.lang.String)>(r5);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label3:
        $r4 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void removeSystemPowerWhitelistApp(java.lang.String)
    {
        com.android.server.DeviceIdleController$BinderService r0;
        long l0;
        com.android.server.DeviceIdleController $r1, $r3;
        android.content.Context $r2;
        java.lang.Throwable $r4;
        java.lang.String r5;

        r0 := @this: com.android.server.DeviceIdleController$BinderService;

        r5 := @parameter0: java.lang.String;

        $r1 = r0.<com.android.server.DeviceIdleController$BinderService: com.android.server.DeviceIdleController this$0>;

        $r2 = virtualinvoke $r1.<com.android.server.DeviceIdleController: android.content.Context getContext()>();

        virtualinvoke $r2.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.DEVICE_POWER", null);

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r3 = r0.<com.android.server.DeviceIdleController$BinderService: com.android.server.DeviceIdleController this$0>;

        virtualinvoke $r3.<com.android.server.DeviceIdleController: boolean removeSystemPowerWhitelistAppInternal(java.lang.String)>(r5);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label3:
        $r4 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void resetPreIdleTimeoutMode()
    {
        com.android.server.DeviceIdleController$BinderService r0;
        long l0;
        com.android.server.DeviceIdleController $r2, $r4;
        android.content.Context $r3;
        java.lang.Throwable $r5;

        r0 := @this: com.android.server.DeviceIdleController$BinderService;

        $r2 = r0.<com.android.server.DeviceIdleController$BinderService: com.android.server.DeviceIdleController this$0>;

        $r3 = virtualinvoke $r2.<com.android.server.DeviceIdleController: android.content.Context getContext()>();

        virtualinvoke $r3.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.DEVICE_POWER", null);

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r4 = r0.<com.android.server.DeviceIdleController$BinderService: com.android.server.DeviceIdleController this$0>;

        virtualinvoke $r4.<com.android.server.DeviceIdleController: void resetPreIdleTimeoutMode()>();

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void restoreSystemPowerWhitelistApp(java.lang.String)
    {
        com.android.server.DeviceIdleController$BinderService r0;
        long l0;
        com.android.server.DeviceIdleController $r1, $r3;
        android.content.Context $r2;
        java.lang.Throwable $r4;
        java.lang.String r5;

        r0 := @this: com.android.server.DeviceIdleController$BinderService;

        r5 := @parameter0: java.lang.String;

        $r1 = r0.<com.android.server.DeviceIdleController$BinderService: com.android.server.DeviceIdleController this$0>;

        $r2 = virtualinvoke $r1.<com.android.server.DeviceIdleController: android.content.Context getContext()>();

        virtualinvoke $r2.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.DEVICE_POWER", null);

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r3 = r0.<com.android.server.DeviceIdleController$BinderService: com.android.server.DeviceIdleController this$0>;

        virtualinvoke $r3.<com.android.server.DeviceIdleController: boolean restoreSystemPowerWhitelistAppInternal(java.lang.String)>(r5);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label3:
        $r4 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public int setPreIdleTimeoutMode(int)
    {
        com.android.server.DeviceIdleController$BinderService r0;
        long l0;
        com.android.server.DeviceIdleController $r2, $r4;
        android.content.Context $r3;
        java.lang.Throwable $r5;
        int i1, i2;

        r0 := @this: com.android.server.DeviceIdleController$BinderService;

        i1 := @parameter0: int;

        $r2 = r0.<com.android.server.DeviceIdleController$BinderService: com.android.server.DeviceIdleController this$0>;

        $r3 = virtualinvoke $r2.<com.android.server.DeviceIdleController: android.content.Context getContext()>();

        virtualinvoke $r3.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.DEVICE_POWER", null);

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r4 = r0.<com.android.server.DeviceIdleController$BinderService: com.android.server.DeviceIdleController this$0>;

        i2 = virtualinvoke $r4.<com.android.server.DeviceIdleController: int setPreIdleTimeoutMode(int)>(i1);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return i2;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public long whitelistAppTemporarily(java.lang.String, int, java.lang.String) throws android.os.RemoteException
    {
        com.android.server.DeviceIdleController$BinderService r0;
        java.lang.String r1, r2;
        int i0;
        long l1, $l2, $l3;
        com.android.server.DeviceIdleController $r3, $r5;
        com.android.server.DeviceIdleController$Constants $r4;

        r0 := @this: com.android.server.DeviceIdleController$BinderService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        $r3 = r0.<com.android.server.DeviceIdleController$BinderService: com.android.server.DeviceIdleController this$0>;

        $r4 = staticinvoke <com.android.server.DeviceIdleController: com.android.server.DeviceIdleController$Constants access$100(com.android.server.DeviceIdleController)>($r3);

        $l2 = $r4.<com.android.server.DeviceIdleController$Constants: long MAX_TEMP_APP_WHITELIST_DURATION>;

        $l3 = $l2 / 2L;

        l1 = staticinvoke <java.lang.Math: long max(long,long)>(10000L, $l3);

        $r5 = r0.<com.android.server.DeviceIdleController$BinderService: com.android.server.DeviceIdleController this$0>;

        virtualinvoke $r5.<com.android.server.DeviceIdleController: void addPowerSaveTempWhitelistAppChecked(java.lang.String,long,int,java.lang.String)>(r1, l1, i0, r2);

        return l1;
    }
}
