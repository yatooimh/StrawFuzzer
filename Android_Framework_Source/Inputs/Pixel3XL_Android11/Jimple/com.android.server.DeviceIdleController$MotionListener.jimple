final class com.android.server.DeviceIdleController$MotionListener extends android.hardware.TriggerEventListener implements android.hardware.SensorEventListener
{
    long activatedTimeElapsed;
    boolean active;
    final com.android.server.DeviceIdleController this$0;

    void <init>(com.android.server.DeviceIdleController)
    {
        com.android.server.DeviceIdleController$MotionListener r0;
        com.android.server.DeviceIdleController r1;

        r0 := @this: com.android.server.DeviceIdleController$MotionListener;

        r1 := @parameter0: com.android.server.DeviceIdleController;

        r0.<com.android.server.DeviceIdleController$MotionListener: com.android.server.DeviceIdleController this$0> = r1;

        specialinvoke r0.<android.hardware.TriggerEventListener: void <init>()>();

        r0.<com.android.server.DeviceIdleController$MotionListener: boolean active> = 0;

        return;
    }

    public boolean isActive()
    {
        com.android.server.DeviceIdleController$MotionListener r0;
        boolean $z0;

        r0 := @this: com.android.server.DeviceIdleController$MotionListener;

        $z0 = r0.<com.android.server.DeviceIdleController$MotionListener: boolean active>;

        return $z0;
    }

    public void onAccuracyChanged(android.hardware.Sensor, int)
    {
        com.android.server.DeviceIdleController$MotionListener r0;
        android.hardware.Sensor r1;
        int i0;

        r0 := @this: com.android.server.DeviceIdleController$MotionListener;

        r1 := @parameter0: android.hardware.Sensor;

        i0 := @parameter1: int;

        return;
    }

    public void onSensorChanged(android.hardware.SensorEvent)
    {
        com.android.server.DeviceIdleController$MotionListener r0;
        com.android.server.DeviceIdleController r1, $r2, $r4, $r6;
        android.hardware.SensorManager $r3;
        android.hardware.Sensor $r5;
        java.lang.Throwable $r7;
        android.hardware.SensorEvent r8;

        r0 := @this: com.android.server.DeviceIdleController$MotionListener;

        r8 := @parameter0: android.hardware.SensorEvent;

        r1 = r0.<com.android.server.DeviceIdleController$MotionListener: com.android.server.DeviceIdleController this$0>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.DeviceIdleController$MotionListener: com.android.server.DeviceIdleController this$0>;

        $r3 = staticinvoke <com.android.server.DeviceIdleController: android.hardware.SensorManager access$300(com.android.server.DeviceIdleController)>($r2);

        $r4 = r0.<com.android.server.DeviceIdleController$MotionListener: com.android.server.DeviceIdleController this$0>;

        $r5 = staticinvoke <com.android.server.DeviceIdleController: android.hardware.Sensor access$200(com.android.server.DeviceIdleController)>($r4);

        virtualinvoke $r3.<android.hardware.SensorManager: void unregisterListener(android.hardware.SensorEventListener,android.hardware.Sensor)>(r0, $r5);

        r0.<com.android.server.DeviceIdleController$MotionListener: boolean active> = 0;

        $r6 = r0.<com.android.server.DeviceIdleController$MotionListener: com.android.server.DeviceIdleController this$0>;

        virtualinvoke $r6.<com.android.server.DeviceIdleController: void motionLocked()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r7 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void onTrigger(android.hardware.TriggerEvent)
    {
        com.android.server.DeviceIdleController$MotionListener r0;
        com.android.server.DeviceIdleController $r2, r5;
        java.lang.Throwable $r3;
        android.hardware.TriggerEvent r4;

        r0 := @this: com.android.server.DeviceIdleController$MotionListener;

        r4 := @parameter0: android.hardware.TriggerEvent;

        r5 = r0.<com.android.server.DeviceIdleController$MotionListener: com.android.server.DeviceIdleController this$0>;

        entermonitor r5;

     label1:
        r0.<com.android.server.DeviceIdleController$MotionListener: boolean active> = 0;

        $r2 = r0.<com.android.server.DeviceIdleController$MotionListener: com.android.server.DeviceIdleController this$0>;

        virtualinvoke $r2.<com.android.server.DeviceIdleController: void motionLocked()>();

        exitmonitor r5;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r5;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean registerLocked()
    {
        com.android.server.DeviceIdleController$MotionListener r0, $r8, $r22;
        com.android.server.DeviceIdleController $r2, $r4, $r6, $r7, $r12, $r16, $r18, $r20, $r21;
        android.hardware.Sensor $r3, $r9, $r13, $r23;
        int $i0;
        android.hardware.SensorManager $r5, $r19;
        java.lang.StringBuilder $r10;
        java.lang.String $r15;
        com.android.server.DeviceIdleController$Injector $r17;
        long $l2;
        boolean z0;

        r0 := @this: com.android.server.DeviceIdleController$MotionListener;

        $r2 = r0.<com.android.server.DeviceIdleController$MotionListener: com.android.server.DeviceIdleController this$0>;

        $r3 = staticinvoke <com.android.server.DeviceIdleController: android.hardware.Sensor access$200(com.android.server.DeviceIdleController)>($r2);

        $i0 = virtualinvoke $r3.<android.hardware.Sensor: int getReportingMode()>();

        if $i0 != 2 goto label1;

        $r18 = r0.<com.android.server.DeviceIdleController$MotionListener: com.android.server.DeviceIdleController this$0>;

        $r19 = staticinvoke <com.android.server.DeviceIdleController: android.hardware.SensorManager access$300(com.android.server.DeviceIdleController)>($r18);

        $r20 = r0.<com.android.server.DeviceIdleController$MotionListener: com.android.server.DeviceIdleController this$0>;

        $r22 = $r20.<com.android.server.DeviceIdleController: com.android.server.DeviceIdleController$MotionListener mMotionListener>;

        $r21 = r0.<com.android.server.DeviceIdleController$MotionListener: com.android.server.DeviceIdleController this$0>;

        $r23 = staticinvoke <com.android.server.DeviceIdleController: android.hardware.Sensor access$200(com.android.server.DeviceIdleController)>($r21);

        z0 = virtualinvoke $r19.<android.hardware.SensorManager: boolean requestTriggerSensor(android.hardware.TriggerEventListener,android.hardware.Sensor)>($r22, $r23);

        goto label2;

     label1:
        $r4 = r0.<com.android.server.DeviceIdleController$MotionListener: com.android.server.DeviceIdleController this$0>;

        $r5 = staticinvoke <com.android.server.DeviceIdleController: android.hardware.SensorManager access$300(com.android.server.DeviceIdleController)>($r4);

        $r6 = r0.<com.android.server.DeviceIdleController$MotionListener: com.android.server.DeviceIdleController this$0>;

        $r8 = $r6.<com.android.server.DeviceIdleController: com.android.server.DeviceIdleController$MotionListener mMotionListener>;

        $r7 = r0.<com.android.server.DeviceIdleController$MotionListener: com.android.server.DeviceIdleController this$0>;

        $r9 = staticinvoke <com.android.server.DeviceIdleController: android.hardware.Sensor access$200(com.android.server.DeviceIdleController)>($r7);

        z0 = virtualinvoke $r5.<android.hardware.SensorManager: boolean registerListener(android.hardware.SensorEventListener,android.hardware.Sensor,int)>($r8, $r9, 3);

     label2:
        if z0 == 0 goto label3;

        r0.<com.android.server.DeviceIdleController$MotionListener: boolean active> = 1;

        $r16 = r0.<com.android.server.DeviceIdleController$MotionListener: com.android.server.DeviceIdleController this$0>;

        $r17 = staticinvoke <com.android.server.DeviceIdleController: com.android.server.DeviceIdleController$Injector access$400(com.android.server.DeviceIdleController)>($r16);

        $l2 = virtualinvoke $r17.<com.android.server.DeviceIdleController$Injector: long getElapsedRealtime()>();

        r0.<com.android.server.DeviceIdleController$MotionListener: long activatedTimeElapsed> = $l2;

        goto label4;

     label3:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to register for ");

        $r12 = r0.<com.android.server.DeviceIdleController$MotionListener: com.android.server.DeviceIdleController this$0>;

        $r13 = staticinvoke <com.android.server.DeviceIdleController: android.hardware.Sensor access$200(com.android.server.DeviceIdleController)>($r12);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r15 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("DeviceIdleController", $r15);

     label4:
        return z0;
    }

    public void unregisterLocked()
    {
        com.android.server.DeviceIdleController$MotionListener r0, $r6, $r11;
        com.android.server.DeviceIdleController $r1, $r3, $r5, $r7, $r9, $r10;
        android.hardware.Sensor $r2, $r12;
        int $i0;
        android.hardware.SensorManager $r4, $r8;

        r0 := @this: com.android.server.DeviceIdleController$MotionListener;

        $r1 = r0.<com.android.server.DeviceIdleController$MotionListener: com.android.server.DeviceIdleController this$0>;

        $r2 = staticinvoke <com.android.server.DeviceIdleController: android.hardware.Sensor access$200(com.android.server.DeviceIdleController)>($r1);

        $i0 = virtualinvoke $r2.<android.hardware.Sensor: int getReportingMode()>();

        if $i0 != 2 goto label1;

        $r7 = r0.<com.android.server.DeviceIdleController$MotionListener: com.android.server.DeviceIdleController this$0>;

        $r8 = staticinvoke <com.android.server.DeviceIdleController: android.hardware.SensorManager access$300(com.android.server.DeviceIdleController)>($r7);

        $r9 = r0.<com.android.server.DeviceIdleController$MotionListener: com.android.server.DeviceIdleController this$0>;

        $r11 = $r9.<com.android.server.DeviceIdleController: com.android.server.DeviceIdleController$MotionListener mMotionListener>;

        $r10 = r0.<com.android.server.DeviceIdleController$MotionListener: com.android.server.DeviceIdleController this$0>;

        $r12 = staticinvoke <com.android.server.DeviceIdleController: android.hardware.Sensor access$200(com.android.server.DeviceIdleController)>($r10);

        virtualinvoke $r8.<android.hardware.SensorManager: boolean cancelTriggerSensor(android.hardware.TriggerEventListener,android.hardware.Sensor)>($r11, $r12);

        goto label2;

     label1:
        $r3 = r0.<com.android.server.DeviceIdleController$MotionListener: com.android.server.DeviceIdleController this$0>;

        $r4 = staticinvoke <com.android.server.DeviceIdleController: android.hardware.SensorManager access$300(com.android.server.DeviceIdleController)>($r3);

        $r5 = r0.<com.android.server.DeviceIdleController$MotionListener: com.android.server.DeviceIdleController this$0>;

        $r6 = $r5.<com.android.server.DeviceIdleController: com.android.server.DeviceIdleController$MotionListener mMotionListener>;

        virtualinvoke $r4.<android.hardware.SensorManager: void unregisterListener(android.hardware.SensorEventListener)>($r6);

     label2:
        r0.<com.android.server.DeviceIdleController$MotionListener: boolean active> = 0;

        return;
    }
}
