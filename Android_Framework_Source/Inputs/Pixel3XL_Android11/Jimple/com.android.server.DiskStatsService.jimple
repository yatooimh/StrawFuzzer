public class com.android.server.DiskStatsService extends android.os.Binder
{
    private static final java.lang.String DISKSTATS_DUMP_FILE;
    private static final java.lang.String TAG;
    private final android.content.Context mContext;

    public void <init>(android.content.Context)
    {
        com.android.server.DiskStatsService r0;
        android.content.Context r1;

        r0 := @this: com.android.server.DiskStatsService;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.os.Binder: void <init>()>();

        r0.<com.android.server.DiskStatsService: android.content.Context mContext> = r1;

        staticinvoke <com.android.server.storage.DiskStatsLoggingService: void schedule(android.content.Context)>(r1);

        return;
    }

    private int getRecentPerf() throws android.os.RemoteException, java.lang.IllegalStateException
    {
        com.android.server.DiskStatsService r0;
        android.os.IBinder r1;
        java.lang.IllegalStateException $r2;
        android.os.IStoraged $r3;
        int $i0;

        r0 := @this: com.android.server.DiskStatsService;

        r1 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("storaged");

        if r1 == null goto label1;

        $r3 = staticinvoke <android.os.IStoraged$Stub: android.os.IStoraged asInterface(android.os.IBinder)>(r1);

        $i0 = interfaceinvoke $r3.<android.os.IStoraged: int getRecentPerf()>();

        return $i0;

     label1:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("storaged not found");

        throw $r2;
    }

    private boolean hasOption(java.lang.String[], java.lang.String)
    {
        com.android.server.DiskStatsService r0;
        java.lang.String[] r1;
        java.lang.String r2, $r3;
        int i0, i1;
        boolean $z0;

        r0 := @this: com.android.server.DiskStatsService;

        r1 := @parameter0: java.lang.String[];

        r2 := @parameter1: java.lang.String;

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r3 = r1[i1];

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    private void reportCachedValues(java.io.PrintWriter)
    {
        com.android.server.DiskStatsService r0;
        java.lang.String r1;
        org.json.JSONObject r2;
        long $l0, $l1, $l2, $l3, $l4, $l5, $l6, $l7, $l8;
        org.json.JSONArray $r3, $r4, $r5, $r6;
        java.lang.Throwable $r7;
        java.io.PrintWriter r8;

        r0 := @this: com.android.server.DiskStatsService;

        r8 := @parameter0: java.io.PrintWriter;

     label1:
        r1 = staticinvoke <libcore.io.IoUtils: java.lang.String readFileAsString(java.lang.String)>("/data/system/diskstats_cache.json");

        r2 = new org.json.JSONObject;

        specialinvoke r2.<org.json.JSONObject: void <init>(java.lang.String)>(r1);

        virtualinvoke r8.<java.io.PrintWriter: void print(java.lang.String)>("App Size: ");

        $l0 = virtualinvoke r2.<org.json.JSONObject: long getLong(java.lang.String)>("appSize");

        virtualinvoke r8.<java.io.PrintWriter: void println(long)>($l0);

        virtualinvoke r8.<java.io.PrintWriter: void print(java.lang.String)>("App Data Size: ");

        $l1 = virtualinvoke r2.<org.json.JSONObject: long getLong(java.lang.String)>("appDataSize");

        virtualinvoke r8.<java.io.PrintWriter: void println(long)>($l1);

        virtualinvoke r8.<java.io.PrintWriter: void print(java.lang.String)>("App Cache Size: ");

        $l2 = virtualinvoke r2.<org.json.JSONObject: long getLong(java.lang.String)>("cacheSize");

        virtualinvoke r8.<java.io.PrintWriter: void println(long)>($l2);

        virtualinvoke r8.<java.io.PrintWriter: void print(java.lang.String)>("Photos Size: ");

        $l3 = virtualinvoke r2.<org.json.JSONObject: long getLong(java.lang.String)>("photosSize");

        virtualinvoke r8.<java.io.PrintWriter: void println(long)>($l3);

        virtualinvoke r8.<java.io.PrintWriter: void print(java.lang.String)>("Videos Size: ");

        $l4 = virtualinvoke r2.<org.json.JSONObject: long getLong(java.lang.String)>("videosSize");

        virtualinvoke r8.<java.io.PrintWriter: void println(long)>($l4);

        virtualinvoke r8.<java.io.PrintWriter: void print(java.lang.String)>("Audio Size: ");

        $l5 = virtualinvoke r2.<org.json.JSONObject: long getLong(java.lang.String)>("audioSize");

        virtualinvoke r8.<java.io.PrintWriter: void println(long)>($l5);

        virtualinvoke r8.<java.io.PrintWriter: void print(java.lang.String)>("Downloads Size: ");

        $l6 = virtualinvoke r2.<org.json.JSONObject: long getLong(java.lang.String)>("downloadsSize");

        virtualinvoke r8.<java.io.PrintWriter: void println(long)>($l6);

        virtualinvoke r8.<java.io.PrintWriter: void print(java.lang.String)>("System Size: ");

        $l7 = virtualinvoke r2.<org.json.JSONObject: long getLong(java.lang.String)>("systemSize");

        virtualinvoke r8.<java.io.PrintWriter: void println(long)>($l7);

        virtualinvoke r8.<java.io.PrintWriter: void print(java.lang.String)>("Other Size: ");

        $l8 = virtualinvoke r2.<org.json.JSONObject: long getLong(java.lang.String)>("otherSize");

        virtualinvoke r8.<java.io.PrintWriter: void println(long)>($l8);

        virtualinvoke r8.<java.io.PrintWriter: void print(java.lang.String)>("Package Names: ");

        $r3 = virtualinvoke r2.<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>("packageNames");

        virtualinvoke r8.<java.io.PrintWriter: void println(java.lang.Object)>($r3);

        virtualinvoke r8.<java.io.PrintWriter: void print(java.lang.String)>("App Sizes: ");

        $r4 = virtualinvoke r2.<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>("appSizes");

        virtualinvoke r8.<java.io.PrintWriter: void println(java.lang.Object)>($r4);

        virtualinvoke r8.<java.io.PrintWriter: void print(java.lang.String)>("App Data Sizes: ");

        $r5 = virtualinvoke r2.<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>("appDataSizes");

        virtualinvoke r8.<java.io.PrintWriter: void println(java.lang.Object)>($r5);

        virtualinvoke r8.<java.io.PrintWriter: void print(java.lang.String)>("Cache Sizes: ");

        $r6 = virtualinvoke r2.<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>("cacheSizes");

        virtualinvoke r8.<java.io.PrintWriter: void println(java.lang.Object)>($r6);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("DiskStatsService", "exception reading diskstats cache file", $r7);

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
        catch org.json.JSONException from label1 to label2 with label3;
    }

    private void reportCachedValuesProto(android.util.proto.ProtoOutputStream)
    {
        com.android.server.DiskStatsService r0;
        org.json.JSONObject r1;
        org.json.JSONArray r2, r3, r4, r9;
        int i0, $i10, $i12, $i13, i20;
        long $l1, $l2, $l3, $l4, $l5, $l6, $l7, $l8, $l9, $l14, $l15, $l16, l18, l19, l21;
        java.lang.String $r5, r8;
        java.lang.Throwable $r6;
        android.util.proto.ProtoOutputStream r7;

        r0 := @this: com.android.server.DiskStatsService;

        r7 := @parameter0: android.util.proto.ProtoOutputStream;

     label01:
        r8 = staticinvoke <libcore.io.IoUtils: java.lang.String readFileAsString(java.lang.String)>("/data/system/diskstats_cache.json");

        r1 = new org.json.JSONObject;

        specialinvoke r1.<org.json.JSONObject: void <init>(java.lang.String)>(r8);

        l18 = virtualinvoke r7.<android.util.proto.ProtoOutputStream: long start(long)>(1146756268038L);

     label02:
        l19 = l18;

     label03:
        $l1 = virtualinvoke r1.<org.json.JSONObject: long getLong(java.lang.String)>("appSize");

        virtualinvoke r7.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529665L, $l1);

        $l2 = virtualinvoke r1.<org.json.JSONObject: long getLong(java.lang.String)>("appDataSize");

        virtualinvoke r7.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529674L, $l2);

        $l3 = virtualinvoke r1.<org.json.JSONObject: long getLong(java.lang.String)>("cacheSize");

        virtualinvoke r7.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529666L, $l3);

        $l4 = virtualinvoke r1.<org.json.JSONObject: long getLong(java.lang.String)>("photosSize");

        virtualinvoke r7.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529667L, $l4);

        $l5 = virtualinvoke r1.<org.json.JSONObject: long getLong(java.lang.String)>("videosSize");

        virtualinvoke r7.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529668L, $l5);

        $l6 = virtualinvoke r1.<org.json.JSONObject: long getLong(java.lang.String)>("audioSize");

        virtualinvoke r7.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529669L, $l6);

        $l7 = virtualinvoke r1.<org.json.JSONObject: long getLong(java.lang.String)>("downloadsSize");

        virtualinvoke r7.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529670L, $l7);

        $l8 = virtualinvoke r1.<org.json.JSONObject: long getLong(java.lang.String)>("systemSize");

        virtualinvoke r7.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529671L, $l8);

        $l9 = virtualinvoke r1.<org.json.JSONObject: long getLong(java.lang.String)>("otherSize");

        virtualinvoke r7.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529672L, $l9);

        r9 = virtualinvoke r1.<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>("packageNames");

        r2 = virtualinvoke r1.<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>("appSizes");

        r3 = virtualinvoke r1.<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>("appDataSizes");

        r4 = virtualinvoke r1.<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>("cacheSizes");

        i0 = virtualinvoke r9.<org.json.JSONArray: int length()>();

        $i10 = virtualinvoke r2.<org.json.JSONArray: int length()>();

        if i0 != $i10 goto label12;

        $i12 = virtualinvoke r3.<org.json.JSONArray: int length()>();

        if i0 != $i12 goto label11;

        $i13 = virtualinvoke r4.<org.json.JSONArray: int length()>();

        if i0 != $i13 goto label10;

     label04:
        i20 = 0;

     label05:
        if i20 >= i0 goto label09;

     label06:
        l21 = virtualinvoke r7.<android.util.proto.ProtoOutputStream: long start(long)>(2246267895817L);

     label07:
        $r5 = virtualinvoke r9.<org.json.JSONArray: java.lang.String getString(int)>(i20);

        virtualinvoke r7.<android.util.proto.ProtoOutputStream: void write(long,java.lang.String)>(1138166333441L, $r5);

        $l14 = virtualinvoke r2.<org.json.JSONArray: long getLong(int)>(i20);

        virtualinvoke r7.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529666L, $l14);

        $l15 = virtualinvoke r3.<org.json.JSONArray: long getLong(int)>(i20);

        virtualinvoke r7.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529668L, $l15);

        $l16 = virtualinvoke r4.<org.json.JSONArray: long getLong(int)>(i20);

        virtualinvoke r7.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529667L, $l16);

        virtualinvoke r7.<android.util.proto.ProtoOutputStream: void end(long)>(l21);

     label08:
        i20 = i20 + 1;

        goto label05;

     label09:
        goto label14;

     label10:
        goto label12;

     label11:
        goto label12;

     label12:
        l19 = l18;

     label13:
        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("DiskStatsService", "Sizes of packageNamesArray, appSizesArray, appDataSizesArray  and cacheSizesArray are not the same");

     label14:
        virtualinvoke r7.<android.util.proto.ProtoOutputStream: void end(long)>(l19);

     label15:
        goto label17;

     label16:
        $r6 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("DiskStatsService", "exception reading diskstats cache file", $r6);

     label17:
        return;

        catch java.io.IOException from label01 to label02 with label16;
        catch org.json.JSONException from label01 to label02 with label16;
        catch java.io.IOException from label03 to label04 with label16;
        catch org.json.JSONException from label03 to label04 with label16;
        catch java.io.IOException from label06 to label07 with label16;
        catch org.json.JSONException from label06 to label07 with label16;
        catch java.io.IOException from label07 to label08 with label16;
        catch org.json.JSONException from label07 to label08 with label16;
        catch java.io.IOException from label13 to label14 with label16;
        catch org.json.JSONException from label13 to label14 with label16;
        catch java.io.IOException from label14 to label15 with label16;
        catch org.json.JSONException from label14 to label15 with label16;
    }

    private void reportDiskWriteSpeed(java.io.PrintWriter)
    {
        com.android.server.DiskStatsService r0;
        java.io.PrintWriter r1;
        long l0;
        int $i1;
        byte $b2;
        java.lang.Throwable $r3;
        java.lang.String $r4, $r5;
        java.lang.Exception r6, r7;

        r0 := @this: com.android.server.DiskStatsService;

        r1 := @parameter0: java.io.PrintWriter;

     label1:
        $i1 = specialinvoke r0.<com.android.server.DiskStatsService: int getRecentPerf()>();

        l0 = (long) $i1;

     label2:
        $b2 = l0 cmp 0L;

        if $b2 == 0 goto label5;

     label3:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("Recent Disk Write Speed (kB/s) = ");

        virtualinvoke r1.<java.io.PrintWriter: void println(long)>(l0);

     label4:
        goto label6;

     label5:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Recent Disk Write Speed data unavailable");

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("DiskStatsService", "Recent Disk Write Speed data unavailable!");

     label6:
        goto label8;

     label7:
        $r3 := @caughtexception;

        r6 = (java.lang.Exception) $r3;

        $r4 = virtualinvoke r6.<java.lang.Exception: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r4);

        r7 = (java.lang.Exception) $r3;

        $r5 = virtualinvoke r7.<java.lang.Exception: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("DiskStatsService", $r5);

     label8:
        return;

        catch android.os.RemoteException from label1 to label2 with label7;
        catch java.lang.IllegalStateException from label1 to label2 with label7;
        catch android.os.RemoteException from label3 to label4 with label7;
        catch java.lang.IllegalStateException from label3 to label4 with label7;
        catch android.os.RemoteException from label5 to label6 with label7;
        catch java.lang.IllegalStateException from label5 to label6 with label7;
    }

    private void reportDiskWriteSpeedProto(android.util.proto.ProtoOutputStream)
    {
        com.android.server.DiskStatsService r0;
        long l0;
        int $i1;
        byte $b2;
        java.lang.Throwable $r1;
        java.lang.String $r2;
        android.util.proto.ProtoOutputStream r3;
        java.lang.Exception r5;

        r0 := @this: com.android.server.DiskStatsService;

        r3 := @parameter0: android.util.proto.ProtoOutputStream;

     label1:
        $i1 = specialinvoke r0.<com.android.server.DiskStatsService: int getRecentPerf()>();

        l0 = (long) $i1;

     label2:
        $b2 = l0 cmp 0L;

        if $b2 == 0 goto label5;

     label3:
        virtualinvoke r3.<android.util.proto.ProtoOutputStream: void write(long,long)>(1120986464263L, l0);

     label4:
        goto label6;

     label5:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("DiskStatsService", "Recent Disk Write Speed data unavailable!");

     label6:
        goto label8;

     label7:
        $r1 := @caughtexception;

        r5 = (java.lang.Exception) $r1;

        $r2 = virtualinvoke r5.<java.lang.Exception: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("DiskStatsService", $r2);

     label8:
        return;

        catch android.os.RemoteException from label1 to label2 with label7;
        catch java.lang.IllegalStateException from label1 to label2 with label7;
        catch android.os.RemoteException from label3 to label4 with label7;
        catch java.lang.IllegalStateException from label3 to label4 with label7;
        catch android.os.RemoteException from label5 to label6 with label7;
        catch java.lang.IllegalStateException from label5 to label6 with label7;
    }

    private void reportFreeSpace(java.io.File, java.lang.String, java.io.PrintWriter, android.util.proto.ProtoOutputStream, int)
    {
        com.android.server.DiskStatsService r0;
        java.lang.String r1, $r4, $r11, $r13;
        java.io.PrintWriter r2;
        android.util.proto.ProtoOutputStream r3;
        int i0, $i5, $i6, $i7;
        long l1, l2, l3, l4, $l10, $l11, $l12, $l13, $l14, $l15, $l16, $l17, $l18, $l19;
        byte $b8, $b9;
        java.lang.Throwable $r12;
        java.io.File r14;
        android.os.StatFs r19;
        java.lang.StringBuilder r20;
        java.lang.IllegalArgumentException r21, r22;

        r0 := @this: com.android.server.DiskStatsService;

        r14 := @parameter0: java.io.File;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.io.PrintWriter;

        r3 := @parameter3: android.util.proto.ProtoOutputStream;

        i0 := @parameter4: int;

     label01:
        r19 = new android.os.StatFs;

        $r4 = virtualinvoke r14.<java.io.File: java.lang.String getPath()>();

        specialinvoke r19.<android.os.StatFs: void <init>(java.lang.String)>($r4);

        $i5 = virtualinvoke r19.<android.os.StatFs: int getBlockSize()>();

        l1 = (long) $i5;

        $i6 = virtualinvoke r19.<android.os.StatFs: int getAvailableBlocks()>();

        l2 = (long) $i6;

        $i7 = virtualinvoke r19.<android.os.StatFs: int getBlockCount()>();

        l3 = (long) $i7;

     label02:
        $b8 = l1 cmp 0L;

        if $b8 <= 0 goto label07;

        $b9 = l3 cmp 0L;

        if $b9 <= 0 goto label07;

        if r3 == null goto label05;

     label03:
        l4 = virtualinvoke r3.<android.util.proto.ProtoOutputStream: long start(long)>(2246267895812L);

        virtualinvoke r3.<android.util.proto.ProtoOutputStream: void write(long,int)>(1159641169921L, i0);

        $l16 = l2 * l1;

        $l17 = $l16 / 1024L;

        virtualinvoke r3.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529666L, $l17);

        $l18 = l3 * l1;

        $l19 = $l18 / 1024L;

        virtualinvoke r3.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529667L, $l19);

        virtualinvoke r3.<android.util.proto.ProtoOutputStream: void end(long)>(l4);

     label04:
        goto label06;

     label05:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("-Free: ");

        $l10 = l2 * l1;

        $l11 = $l10 / 1024L;

        virtualinvoke r2.<java.io.PrintWriter: void print(long)>($l11);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("K / ");

        $l12 = l3 * l1;

        $l13 = $l12 / 1024L;

        virtualinvoke r2.<java.io.PrintWriter: void print(long)>($l13);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("K total = ");

        $l14 = 100L * l2;

        $l15 = $l14 / l3;

        virtualinvoke r2.<java.io.PrintWriter: void print(long)>($l15);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("% free");

     label06:
        return;

     label07:
        r21 = new java.lang.IllegalArgumentException;

        r20 = new java.lang.StringBuilder;

        specialinvoke r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid stat: bsize=");

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" avail=");

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l2);

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" total=");

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l3);

        $r11 = virtualinvoke r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r21.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw r21;

     label08:
        $r12 := @caughtexception;

        if r3 == null goto label09;

        goto label10;

     label09:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("-Error: ");

        r22 = (java.lang.IllegalArgumentException) $r12;

        $r13 = virtualinvoke r22.<java.lang.IllegalArgumentException: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r13);

     label10:
        return;

        catch java.lang.IllegalArgumentException from label01 to label02 with label08;
        catch java.lang.IllegalArgumentException from label03 to label04 with label08;
        catch java.lang.IllegalArgumentException from label05 to label06 with label08;
        catch java.lang.IllegalArgumentException from label07 to label08 with label08;
    }

    protected void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.DiskStatsService r0;
        byte[] r1;
        long l0, l1, $l3, $l4;
        boolean z0, z1, $z2, $z3, z4, z5;
        android.content.Context $r3;
        int $i2, i7;
        java.io.File $r5, $r6, $r7, r28, r31;
        java.lang.String $r9, $r11;
        byte $b5, $b6;
        java.lang.Throwable $r12, $r13, $r14, $r15, $r16, r23;
        java.io.FileDescriptor r17;
        java.io.PrintWriter r18;
        java.lang.String[] r19;
        java.io.FileOutputStream r20, r21, r29;
        android.util.proto.ProtoOutputStream r26, r30;
        java.io.IOException r32, r33;

        r0 := @this: com.android.server.DiskStatsService;

        r17 := @parameter0: java.io.FileDescriptor;

        r18 := @parameter1: java.io.PrintWriter;

        r19 := @parameter2: java.lang.String[];

        $r3 = r0.<com.android.server.DiskStatsService: android.content.Context mContext>;

        $z2 = staticinvoke <com.android.internal.util.DumpUtils: boolean checkDumpAndUsageStatsPermission(android.content.Context,java.lang.String,java.io.PrintWriter)>($r3, "DiskStatsService", r18);

        if $z2 != 0 goto label01;

        return;

     label01:
        r1 = newarray (byte)[512];

        i7 = 0;

     label02:
        $i2 = lengthof r1;

        if i7 >= $i2 goto label03;

        $b5 = (byte) i7;

        $b6 = (byte) $b5;

        r1[i7] = $b6;

        i7 = i7 + 1;

        goto label02;

     label03:
        r28 = new java.io.File;

        $r5 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        specialinvoke r28.<java.io.File: void <init>(java.io.File,java.lang.String)>($r5, "system/perftest.tmp");

        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r20 = null;

        r21 = null;

     label04:
        r29 = new java.io.FileOutputStream;

     label05:
        r20 = null;

        r21 = null;

     label06:
        specialinvoke r29.<java.io.FileOutputStream: void <init>(java.io.File)>(r28);

     label07:
        r20 = r29;

        r21 = r29;

     label08:
        virtualinvoke r29.<java.io.FileOutputStream: void write(byte[])>(r1);

     label09:
        virtualinvoke r29.<java.io.FileOutputStream: void close()>();

     label10:
        r23 = null;

        goto label21;

     label11:
        $r13 := @caughtexception;

        r23 = null;

        goto label21;

     label12:
        $r15 := @caughtexception;

        if r20 == null goto label16;

     label13:
        virtualinvoke r20.<java.io.FileOutputStream: void close()>();

     label14:
        goto label16;

     label15:
        $r14 := @caughtexception;

     label16:
        throw $r15;

     label17:
        $r12 := @caughtexception;

        r23 = $r12;

        if r21 == null goto label21;

     label18:
        virtualinvoke r21.<java.io.FileOutputStream: void close()>();

     label19:
        r23 = $r12;

        goto label21;

     label20:
        $r16 := @caughtexception;

        r23 = $r12;

     label21:
        l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $z3 = virtualinvoke r28.<java.io.File: boolean exists()>();

        if $z3 == 0 goto label22;

        virtualinvoke r28.<java.io.File: boolean delete()>();

     label22:
        z0 = specialinvoke r0.<com.android.server.DiskStatsService: boolean hasOption(java.lang.String[],java.lang.String)>(r19, "--proto");

        if z0 == 0 goto label27;

        r30 = new android.util.proto.ProtoOutputStream;

        specialinvoke r30.<android.util.proto.ProtoOutputStream: void <init>(java.io.FileDescriptor)>(r17);

        r26 = r30;

        if r23 == null goto label23;

        z4 = 1;

        goto label24;

     label23:
        z4 = 0;

     label24:
        virtualinvoke r30.<android.util.proto.ProtoOutputStream: void write(long,boolean)>(1133871366145L, z4);

        if r23 == null goto label25;

        r32 = (java.io.IOException) r23;

        $r11 = virtualinvoke r32.<java.io.IOException: java.lang.String toString()>();

        virtualinvoke r30.<android.util.proto.ProtoOutputStream: void write(long,java.lang.String)>(1138166333442L, $r11);

        goto label26;

     label25:
        $l4 = l1 - l0;

        virtualinvoke r30.<android.util.proto.ProtoOutputStream: void write(long,long)>(1120986464259L, $l4);

     label26:
        r18 = null;

        goto label30;

     label27:
        if r23 == null goto label28;

        virtualinvoke r18.<java.io.PrintWriter: void print(java.lang.String)>("Test-Error: ");

        r33 = (java.io.IOException) r23;

        $r9 = virtualinvoke r33.<java.io.IOException: java.lang.String toString()>();

        virtualinvoke r18.<java.io.PrintWriter: void println(java.lang.String)>($r9);

        goto label29;

     label28:
        virtualinvoke r18.<java.io.PrintWriter: void print(java.lang.String)>("Latency: ");

        $l3 = l1 - l0;

        virtualinvoke r18.<java.io.PrintWriter: void print(long)>($l3);

        virtualinvoke r18.<java.io.PrintWriter: void println(java.lang.String)>("ms [512B Data Write]");

     label29:
        r26 = null;

     label30:
        if z0 == 0 goto label31;

        specialinvoke r0.<com.android.server.DiskStatsService: void reportDiskWriteSpeedProto(android.util.proto.ProtoOutputStream)>(r26);

        goto label32;

     label31:
        specialinvoke r0.<com.android.server.DiskStatsService: void reportDiskWriteSpeed(java.io.PrintWriter)>(r18);

     label32:
        $r6 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        specialinvoke r0.<com.android.server.DiskStatsService: void reportFreeSpace(java.io.File,java.lang.String,java.io.PrintWriter,android.util.proto.ProtoOutputStream,int)>($r6, "Data", r18, r26, 0);

        $r7 = staticinvoke <android.os.Environment: java.io.File getDownloadCacheDirectory()>();

        specialinvoke r0.<com.android.server.DiskStatsService: void reportFreeSpace(java.io.File,java.lang.String,java.io.PrintWriter,android.util.proto.ProtoOutputStream,int)>($r7, "Cache", r18, r26, 1);

        r31 = new java.io.File;

        specialinvoke r31.<java.io.File: void <init>(java.lang.String)>("/system");

        specialinvoke r0.<com.android.server.DiskStatsService: void reportFreeSpace(java.io.File,java.lang.String,java.io.PrintWriter,android.util.proto.ProtoOutputStream,int)>(r31, "System", r18, r26, 2);

        z1 = staticinvoke <android.os.storage.StorageManager: boolean isFileEncryptedNativeOnly()>();

        if z1 == 0 goto label33;

        z5 = 0;

        goto label34;

     label33:
        z5 = staticinvoke <android.os.storage.StorageManager: boolean isBlockEncrypted()>();

     label34:
        if z0 == 0 goto label37;

        if z1 == 0 goto label35;

        virtualinvoke r26.<android.util.proto.ProtoOutputStream: void write(long,int)>(1159641169925L, 3);

        goto label38;

     label35:
        if z5 == 0 goto label36;

        virtualinvoke r26.<android.util.proto.ProtoOutputStream: void write(long,int)>(1159641169925L, 2);

        goto label38;

     label36:
        virtualinvoke r26.<android.util.proto.ProtoOutputStream: void write(long,int)>(1159641169925L, 1);

        goto label38;

     label37:
        if z1 == 0 goto label38;

        virtualinvoke r18.<java.io.PrintWriter: void println(java.lang.String)>("File-based Encryption: true");

     label38:
        if z0 == 0 goto label39;

        specialinvoke r0.<com.android.server.DiskStatsService: void reportCachedValuesProto(android.util.proto.ProtoOutputStream)>(r26);

        goto label40;

     label39:
        specialinvoke r0.<com.android.server.DiskStatsService: void reportCachedValues(java.io.PrintWriter)>(r18);

     label40:
        if z0 == 0 goto label41;

        virtualinvoke r26.<android.util.proto.ProtoOutputStream: void flush()>();

     label41:
        return;

        catch java.io.IOException from label04 to label05 with label17;
        catch java.lang.Throwable from label04 to label05 with label12;
        catch java.io.IOException from label06 to label07 with label17;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.io.IOException from label08 to label09 with label17;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.io.IOException from label09 to label10 with label11;
        catch java.io.IOException from label13 to label14 with label15;
        catch java.io.IOException from label18 to label19 with label20;
    }

    public static void <clinit>()
    {
        <com.android.server.DiskStatsService: java.lang.String TAG> = "DiskStatsService";

        <com.android.server.DiskStatsService: java.lang.String DISKSTATS_DUMP_FILE> = "/data/system/diskstats_cache.json";

        return;
    }
}
