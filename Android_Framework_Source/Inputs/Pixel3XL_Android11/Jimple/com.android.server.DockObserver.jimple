final class com.android.server.DockObserver extends com.android.server.SystemService
{
    private static final java.lang.String DOCK_STATE_PATH;
    private static final java.lang.String DOCK_UEVENT_MATCH;
    private static final int MSG_DOCK_STATE_CHANGED;
    private static final java.lang.String TAG;
    private int mActualDockState;
    private final boolean mAllowTheaterModeWakeFromDock;
    private final android.os.Handler mHandler;
    private final java.lang.Object mLock;
    private final android.os.UEventObserver mObserver;
    private final android.os.PowerManager mPowerManager;
    private int mPreviousDockState;
    private int mReportedDockState;
    private boolean mSystemReady;
    private boolean mUpdatesStopped;
    private final android.os.PowerManager$WakeLock mWakeLock;

    public void <init>(android.content.Context)
    {
        com.android.server.DockObserver r0;
        android.content.Context r1;
        android.os.PowerManager r2;
        java.lang.Object $r3, $r6;
        com.android.server.DockObserver$1 $r4;
        com.android.server.DockObserver$2 $r5;
        android.os.PowerManager$WakeLock $r7;
        android.content.res.Resources $r8;
        boolean $z0;
        android.os.UEventObserver $r9;

        r0 := @this: com.android.server.DockObserver;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.android.server.SystemService: void <init>(android.content.Context)>(r1);

        $r3 = new java.lang.Object;

        specialinvoke $r3.<java.lang.Object: void <init>()>();

        r0.<com.android.server.DockObserver: java.lang.Object mLock> = $r3;

        r0.<com.android.server.DockObserver: int mActualDockState> = 0;

        r0.<com.android.server.DockObserver: int mReportedDockState> = 0;

        r0.<com.android.server.DockObserver: int mPreviousDockState> = 0;

        $r4 = new com.android.server.DockObserver$1;

        specialinvoke $r4.<com.android.server.DockObserver$1: void <init>(com.android.server.DockObserver,boolean)>(r0, 1);

        r0.<com.android.server.DockObserver: android.os.Handler mHandler> = $r4;

        $r5 = new com.android.server.DockObserver$2;

        specialinvoke $r5.<com.android.server.DockObserver$2: void <init>(com.android.server.DockObserver)>(r0);

        r0.<com.android.server.DockObserver: android.os.UEventObserver mObserver> = $r5;

        $r6 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("power");

        r2 = (android.os.PowerManager) $r6;

        r0.<com.android.server.DockObserver: android.os.PowerManager mPowerManager> = r2;

        $r7 = virtualinvoke r2.<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>(1, "DockObserver");

        r0.<com.android.server.DockObserver: android.os.PowerManager$WakeLock mWakeLock> = $r7;

        $r8 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $z0 = virtualinvoke $r8.<android.content.res.Resources: boolean getBoolean(int)>(17891350);

        r0.<com.android.server.DockObserver: boolean mAllowTheaterModeWakeFromDock> = $z0;

        specialinvoke r0.<com.android.server.DockObserver: void init()>();

        $r9 = r0.<com.android.server.DockObserver: android.os.UEventObserver mObserver>;

        virtualinvoke $r9.<android.os.UEventObserver: void startObserving(java.lang.String)>("DEVPATH=/devices/virtual/switch/dock");

        return;
    }

    static void access$100(com.android.server.DockObserver)
    {
        com.android.server.DockObserver r0;

        r0 := @parameter0: com.android.server.DockObserver;

        specialinvoke r0.<com.android.server.DockObserver: void handleDockStateChange()>();

        return;
    }

    static android.os.PowerManager$WakeLock access$200(com.android.server.DockObserver)
    {
        com.android.server.DockObserver r0;
        android.os.PowerManager$WakeLock $r1;

        r0 := @parameter0: com.android.server.DockObserver;

        $r1 = r0.<com.android.server.DockObserver: android.os.PowerManager$WakeLock mWakeLock>;

        return $r1;
    }

    static java.lang.Object access$300(com.android.server.DockObserver)
    {
        com.android.server.DockObserver r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.server.DockObserver;

        $r1 = r0.<com.android.server.DockObserver: java.lang.Object mLock>;

        return $r1;
    }

    static void access$400(com.android.server.DockObserver, int)
    {
        com.android.server.DockObserver r0;
        int i0;

        r0 := @parameter0: com.android.server.DockObserver;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.DockObserver: void setActualDockStateLocked(int)>(i0);

        return;
    }

    static boolean access$500(com.android.server.DockObserver)
    {
        com.android.server.DockObserver r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.DockObserver;

        $z0 = r0.<com.android.server.DockObserver: boolean mUpdatesStopped>;

        return $z0;
    }

    static boolean access$502(com.android.server.DockObserver, boolean)
    {
        com.android.server.DockObserver r0;
        boolean z0;

        r0 := @parameter0: com.android.server.DockObserver;

        z0 := @parameter1: boolean;

        r0.<com.android.server.DockObserver: boolean mUpdatesStopped> = z0;

        return z0;
    }

    static int access$600(com.android.server.DockObserver)
    {
        com.android.server.DockObserver r0;
        int $i0;

        r0 := @parameter0: com.android.server.DockObserver;

        $i0 = r0.<com.android.server.DockObserver: int mReportedDockState>;

        return $i0;
    }

    static int access$700(com.android.server.DockObserver)
    {
        com.android.server.DockObserver r0;
        int $i0;

        r0 := @parameter0: com.android.server.DockObserver;

        $i0 = r0.<com.android.server.DockObserver: int mPreviousDockState>;

        return $i0;
    }

    static int access$800(com.android.server.DockObserver)
    {
        com.android.server.DockObserver r0;
        int $i0;

        r0 := @parameter0: com.android.server.DockObserver;

        $i0 = r0.<com.android.server.DockObserver: int mActualDockState>;

        return $i0;
    }

    static void access$900(com.android.server.DockObserver, int)
    {
        com.android.server.DockObserver r0;
        int i0;

        r0 := @parameter0: com.android.server.DockObserver;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.DockObserver: void setDockStateLocked(int)>(i0);

        return;
    }

    private void handleDockStateChange()
    {
        com.android.server.DockObserver r0;
        java.lang.Object r1;
        int i0, $i1, $i2, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        android.content.Intent r2;
        java.lang.String $r7, $r13, r18, r19;
        android.content.Context $r8, $r14, $r23;
        java.lang.Throwable $r15;
        java.lang.StringBuilder r16, r20;
        android.content.ContentResolver r17;
        boolean z0, z1, z2;
        android.net.Uri r21;
        android.media.Ringtone r22;
        android.os.UserHandle $r24;

        r0 := @this: com.android.server.DockObserver;

        r1 = r0.<com.android.server.DockObserver: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        r16 = new java.lang.StringBuilder;

        specialinvoke r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Dock state changed from ");

        $i1 = r0.<com.android.server.DockObserver: int mPreviousDockState>;

        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $i2 = r0.<com.android.server.DockObserver: int mReportedDockState>;

        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r7 = virtualinvoke r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("DockObserver", $r7);

        i0 = r0.<com.android.server.DockObserver: int mPreviousDockState>;

        $i4 = r0.<com.android.server.DockObserver: int mReportedDockState>;

        r0.<com.android.server.DockObserver: int mPreviousDockState> = $i4;

        $r8 = virtualinvoke r0.<com.android.server.DockObserver: android.content.Context getContext()>();

        r17 = virtualinvoke $r8.<android.content.Context: android.content.ContentResolver getContentResolver()>();

     label02:
        z0 = 0;

     label03:
        $i5 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>(r17, "device_provisioned", 0);

        if $i5 != 0 goto label05;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("DockObserver", "Device not provisioned, skipping dock broadcast");

        exitmonitor r1;

     label04:
        return;

     label05:
        r2 = new android.content.Intent;

        specialinvoke r2.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.DOCK_EVENT");

        virtualinvoke r2.<android.content.Intent: android.content.Intent addFlags(int)>(536870912);

        $i6 = r0.<com.android.server.DockObserver: int mReportedDockState>;

        virtualinvoke r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.intent.extra.DOCK_STATE", $i6);

        $i7 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>(r17, "dock_sounds_enabled", 1);

        if $i7 != 1 goto label07;

     label06:
        z1 = 1;

        goto label08;

     label07:
        z1 = 0;

     label08:
        $i8 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>(r17, "dock_sounds_enabled_when_accessbility", 1);

        if $i8 != 1 goto label10;

     label09:
        z2 = 1;

        goto label11;

     label10:
        z2 = 0;

     label11:
        $i9 = staticinvoke <android.provider.Settings$Secure: int getInt(android.content.ContentResolver,java.lang.String,int)>(r17, "accessibility_enabled", 0);

        if $i9 != 1 goto label13;

     label12:
        z0 = 1;

     label13:
        if z1 != 0 goto label14;

        if z0 == 0 goto label32;

        if z2 == 0 goto label32;

     label14:
        r18 = null;

     label15:
        $i10 = r0.<com.android.server.DockObserver: int mReportedDockState>;

        if $i10 != 0 goto label19;

     label16:
        if i0 == 1 goto label18;

        if i0 == 3 goto label18;

        if i0 != 4 goto label17;

        goto label18;

     label17:
        if i0 != 2 goto label24;

        r18 = "car_undock_sound";

        goto label24;

     label18:
        r18 = "desk_undock_sound";

        goto label24;

     label19:
        $i11 = r0.<com.android.server.DockObserver: int mReportedDockState>;

        if $i11 == 1 goto label23;

        $i12 = r0.<com.android.server.DockObserver: int mReportedDockState>;

        if $i12 == 3 goto label23;

        $i13 = r0.<com.android.server.DockObserver: int mReportedDockState>;

        if $i13 != 4 goto label21;

     label20:
        goto label23;

     label21:
        $i14 = r0.<com.android.server.DockObserver: int mReportedDockState>;

        if $i14 != 2 goto label24;

     label22:
        r18 = "car_dock_sound";

        goto label24;

     label23:
        r18 = "desk_dock_sound";

     label24:
        if r18 == null goto label32;

     label25:
        r19 = staticinvoke <android.provider.Settings$Global: java.lang.String getString(android.content.ContentResolver,java.lang.String)>(r17, r18);

     label26:
        if r19 == null goto label32;

     label27:
        r20 = new java.lang.StringBuilder;

        specialinvoke r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("file://");

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r19);

        $r13 = virtualinvoke r20.<java.lang.StringBuilder: java.lang.String toString()>();

        r21 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r13);

     label28:
        if r21 == null goto label32;

     label29:
        $r14 = virtualinvoke r0.<com.android.server.DockObserver: android.content.Context getContext()>();

        r22 = staticinvoke <android.media.RingtoneManager: android.media.Ringtone getRingtone(android.content.Context,android.net.Uri)>($r14, r21);

     label30:
        if r22 == null goto label32;

     label31:
        virtualinvoke r22.<android.media.Ringtone: void setStreamType(int)>(1);

        virtualinvoke r22.<android.media.Ringtone: void play()>();

     label32:
        $r23 = virtualinvoke r0.<com.android.server.DockObserver: android.content.Context getContext()>();

        $r24 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r23.<android.content.Context: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>(r2, $r24);

        exitmonitor r1;

     label33:
        return;

     label34:
        $r15 := @caughtexception;

     label35:
        exitmonitor r1;

     label36:
        throw $r15;

        catch java.lang.Throwable from label01 to label02 with label34;
        catch java.lang.Throwable from label03 to label04 with label34;
        catch java.lang.Throwable from label05 to label06 with label34;
        catch java.lang.Throwable from label08 to label09 with label34;
        catch java.lang.Throwable from label11 to label12 with label34;
        catch java.lang.Throwable from label15 to label16 with label34;
        catch java.lang.Throwable from label19 to label20 with label34;
        catch java.lang.Throwable from label21 to label22 with label34;
        catch java.lang.Throwable from label25 to label26 with label34;
        catch java.lang.Throwable from label27 to label28 with label34;
        catch java.lang.Throwable from label29 to label30 with label34;
        catch java.lang.Throwable from label31 to label32 with label34;
        catch java.lang.Throwable from label32 to label33 with label34;
        catch java.lang.Throwable from label35 to label36 with label34;
    }

    private void init()
    {
        com.android.server.DockObserver r0;
        java.lang.Object r1;
        char[] r2;
        int i0, $i1, $i2;
        java.lang.String $r3, r9;
        java.lang.Throwable $r4, $r5, $r7;
        java.lang.Exception $r6;
        java.io.FileReader r8;

        r0 := @this: com.android.server.DockObserver;

        r1 = r0.<com.android.server.DockObserver: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        r2 = newarray (char)[1024];

        r8 = new java.io.FileReader;

        specialinvoke r8.<java.io.FileReader: void <init>(java.lang.String)>("/sys/class/switch/dock/state");

     label02:
        i0 = virtualinvoke r8.<java.io.FileReader: int read(char[],int,int)>(r2, 0, 1024);

        r9 = new java.lang.String;

        specialinvoke r9.<java.lang.String: void <init>(char[],int,int)>(r2, 0, i0);

        $r3 = virtualinvoke r9.<java.lang.String: java.lang.String trim()>();

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3);

        specialinvoke r0.<com.android.server.DockObserver: void setActualDockStateLocked(int)>($i1);

        $i2 = r0.<com.android.server.DockObserver: int mActualDockState>;

        r0.<com.android.server.DockObserver: int mPreviousDockState> = $i2;

     label03:
        virtualinvoke r8.<java.io.FileReader: void close()>();

     label04:
        goto label14;

     label05:
        $r7 := @caughtexception;

     label06:
        virtualinvoke r8.<java.io.FileReader: void close()>();

     label07:
        throw $r7;

     label08:
        $r5 := @caughtexception;

        goto label16;

     label09:
        $r6 := @caughtexception;

     label10:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("DockObserver", "", $r6);

     label11:
        goto label14;

     label12:
        $r4 := @caughtexception;

     label13:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("DockObserver", "This kernel does not have dock station support");

     label14:
        exitmonitor r1;

     label15:
        return;

     label16:
        exitmonitor r1;

     label17:
        throw $r5;

        catch java.io.FileNotFoundException from label01 to label02 with label12;
        catch java.lang.Exception from label01 to label02 with label09;
        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label02 to label03 with label05;
        catch java.io.FileNotFoundException from label03 to label04 with label12;
        catch java.lang.Exception from label03 to label04 with label09;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.io.FileNotFoundException from label06 to label07 with label12;
        catch java.lang.Exception from label06 to label07 with label09;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.io.FileNotFoundException from label07 to label08 with label12;
        catch java.lang.Exception from label07 to label08 with label09;
        catch java.lang.Throwable from label07 to label08 with label08;
        catch java.lang.Throwable from label10 to label11 with label08;
        catch java.lang.Throwable from label13 to label14 with label08;
        catch java.lang.Throwable from label14 to label15 with label08;
        catch java.lang.Throwable from label16 to label17 with label08;
    }

    private void setActualDockStateLocked(int)
    {
        com.android.server.DockObserver r0;
        int i0;
        boolean $z0;

        r0 := @this: com.android.server.DockObserver;

        i0 := @parameter0: int;

        r0.<com.android.server.DockObserver: int mActualDockState> = i0;

        $z0 = r0.<com.android.server.DockObserver: boolean mUpdatesStopped>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<com.android.server.DockObserver: void setDockStateLocked(int)>(i0);

     label1:
        return;
    }

    private void setDockStateLocked(int)
    {
        com.android.server.DockObserver r0;
        int i0, $i1, $i3;
        boolean $z0, $z1;
        android.os.PowerManager $r1;
        long $l2;
        android.content.Context $r2;
        android.content.ContentResolver $r3;

        r0 := @this: com.android.server.DockObserver;

        i0 := @parameter0: int;

        $i1 = r0.<com.android.server.DockObserver: int mReportedDockState>;

        if i0 == $i1 goto label3;

        r0.<com.android.server.DockObserver: int mReportedDockState> = i0;

        $z0 = r0.<com.android.server.DockObserver: boolean mSystemReady>;

        if $z0 == 0 goto label3;

        $z1 = r0.<com.android.server.DockObserver: boolean mAllowTheaterModeWakeFromDock>;

        if $z1 != 0 goto label1;

        $r2 = virtualinvoke r0.<com.android.server.DockObserver: android.content.Context getContext()>();

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i3 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>($r3, "theater_mode_on", 0);

        if $i3 != 0 goto label2;

     label1:
        $r1 = r0.<com.android.server.DockObserver: android.os.PowerManager mPowerManager>;

        $l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        virtualinvoke $r1.<android.os.PowerManager: void wakeUp(long,java.lang.String)>($l2, "android.server:DOCK");

     label2:
        specialinvoke r0.<com.android.server.DockObserver: void updateLocked()>();

     label3:
        return;
    }

    private void updateLocked()
    {
        com.android.server.DockObserver r0;
        android.os.PowerManager$WakeLock $r1;
        android.os.Handler $r2;

        r0 := @this: com.android.server.DockObserver;

        $r1 = r0.<com.android.server.DockObserver: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r1.<android.os.PowerManager$WakeLock: void acquire()>();

        $r2 = r0.<com.android.server.DockObserver: android.os.Handler mHandler>;

        virtualinvoke $r2.<android.os.Handler: boolean sendEmptyMessage(int)>(0);

        return;
    }

    public void onBootPhase(int)
    {
        com.android.server.DockObserver r0;
        int i0, $i1;
        java.lang.Object r1;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.DockObserver;

        i0 := @parameter0: int;

        if i0 != 550 goto label7;

        r1 = r0.<com.android.server.DockObserver: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r0.<com.android.server.DockObserver: boolean mSystemReady> = 1;

        $i1 = r0.<com.android.server.DockObserver: int mReportedDockState>;

        if $i1 == 0 goto label2;

        specialinvoke r0.<com.android.server.DockObserver: void updateLocked()>();

     label2:
        exitmonitor r1;

     label3:
        goto label7;

     label4:
        $r3 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r3;

     label7:
        return;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void onStart()
    {
        com.android.server.DockObserver r0;
        com.android.server.DockObserver$BinderService $r1;

        r0 := @this: com.android.server.DockObserver;

        $r1 = new com.android.server.DockObserver$BinderService;

        specialinvoke $r1.<com.android.server.DockObserver$BinderService: void <init>(com.android.server.DockObserver,com.android.server.DockObserver$1)>(r0, null);

        virtualinvoke r0.<com.android.server.DockObserver: void publishBinderService(java.lang.String,android.os.IBinder)>("DockObserver", $r1);

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.DockObserver: java.lang.String TAG> = "DockObserver";

        <com.android.server.DockObserver: int MSG_DOCK_STATE_CHANGED> = 0;

        <com.android.server.DockObserver: java.lang.String DOCK_UEVENT_MATCH> = "DEVPATH=/devices/virtual/switch/dock";

        <com.android.server.DockObserver: java.lang.String DOCK_STATE_PATH> = "/sys/class/switch/dock/state";

        return;
    }
}
