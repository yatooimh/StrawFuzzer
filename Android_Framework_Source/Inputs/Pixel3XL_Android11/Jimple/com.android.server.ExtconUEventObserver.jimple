public abstract class com.android.server.ExtconUEventObserver extends android.os.UEventObserver
{
    private static final boolean LOG;
    private static final java.lang.String SELINUX_POLICIES_NEED_TO_BE_CHANGED;
    private static final java.lang.String TAG;
    private final java.util.Map mExtconInfos;

    public void <init>()
    {
        com.android.server.ExtconUEventObserver r0;
        android.util.ArrayMap $r1;

        r0 := @this: com.android.server.ExtconUEventObserver;

        specialinvoke r0.<android.os.UEventObserver: void <init>()>();

        $r1 = new android.util.ArrayMap;

        specialinvoke $r1.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.ExtconUEventObserver: java.util.Map mExtconInfos> = $r1;

        return;
    }

    public static boolean extconExists()
    {
        java.io.File $r1;
        boolean $z0, $z1, z2;

        $r1 = new java.io.File;

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>("/sys/class/extcon");

        $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke $r1.<java.io.File: boolean isDirectory()>();

        if $z1 == 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;
    }

    public static boolean namedExtconDirExists(java.lang.String)
    {
        java.lang.StringBuilder $r1;
        java.io.File $r4;
        java.lang.String $r5, r6;
        boolean $z0, $z1, z2;

        r6 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/sys/class/extcon/");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r4 = new java.io.File;

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.io.File: void <init>(java.lang.String)>($r5);

        $z0 = virtualinvoke $r4.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke $r4.<java.io.File: boolean isDirectory()>();

        if $z1 == 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;
    }

    public final void onUEvent(android.os.UEventObserver$UEvent)
    {
        com.android.server.ExtconUEventObserver r0;
        android.os.UEventObserver$UEvent r1;
        java.util.Map $r2, $r8;
        java.lang.Object $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r10, r11;
        com.android.server.ExtconUEventObserver$ExtconInfo r12;

        r0 := @this: com.android.server.ExtconUEventObserver;

        r1 := @parameter0: android.os.UEventObserver$UEvent;

        r11 = virtualinvoke r1.<android.os.UEventObserver$UEvent: java.lang.String get(java.lang.String)>("DEVPATH");

        $r2 = r0.<com.android.server.ExtconUEventObserver: java.util.Map mExtconInfos>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r11);

        r12 = (com.android.server.ExtconUEventObserver$ExtconInfo) $r3;

        if r12 == null goto label1;

        virtualinvoke r0.<com.android.server.ExtconUEventObserver: void onUEvent(com.android.server.ExtconUEventObserver$ExtconInfo,android.os.UEventObserver$UEvent)>(r12, r1);

        goto label2;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No match found for DEVPATH of ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        $r8 = r0.<com.android.server.ExtconUEventObserver: java.util.Map mExtconInfos>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ExtconUEventObserver", $r10);

     label2:
        return;
    }

    protected abstract void onUEvent(com.android.server.ExtconUEventObserver$ExtconInfo, android.os.UEventObserver$UEvent);

    public void startObserving(com.android.server.ExtconUEventObserver$ExtconInfo)
    {
        com.android.server.ExtconUEventObserver r0;
        java.util.Map $r1;
        java.lang.StringBuilder $r3, $r7;
        java.lang.String $r6, $r9, $r13, r15;
        com.android.server.ExtconUEventObserver$ExtconInfo r14;

        r0 := @this: com.android.server.ExtconUEventObserver;

        r14 := @parameter0: com.android.server.ExtconUEventObserver$ExtconInfo;

        r15 = virtualinvoke r14.<com.android.server.ExtconUEventObserver$ExtconInfo: java.lang.String getDevicePath()>();

        if r15 != null goto label1;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to start observing  ");

        $r9 = virtualinvoke r14.<com.android.server.ExtconUEventObserver$ExtconInfo: java.lang.String getName()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" because the device path is null. ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("This probably means the selinux policies need to be changed.");

        $r13 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("ExtconUEventObserver", $r13);

        goto label2;

     label1:
        $r1 = r0.<com.android.server.ExtconUEventObserver: java.util.Map mExtconInfos>;

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r15, r14);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DEVPATH=");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.ExtconUEventObserver: void startObserving(java.lang.String)>($r6);

     label2:
        return;
    }

    public static void <clinit>()
    {
        <com.android.server.ExtconUEventObserver: java.lang.String TAG> = "ExtconUEventObserver";

        <com.android.server.ExtconUEventObserver: java.lang.String SELINUX_POLICIES_NEED_TO_BE_CHANGED> = "This probably means the selinux policies need to be changed.";

        <com.android.server.ExtconUEventObserver: boolean LOG> = 0;

        return;
    }
}
