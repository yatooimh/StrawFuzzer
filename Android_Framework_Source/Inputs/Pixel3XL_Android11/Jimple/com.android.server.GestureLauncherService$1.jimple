class com.android.server.GestureLauncherService$1 extends android.content.BroadcastReceiver
{
    final com.android.server.GestureLauncherService this$0;

    void <init>(com.android.server.GestureLauncherService)
    {
        com.android.server.GestureLauncherService$1 r0;
        com.android.server.GestureLauncherService r1;

        r0 := @this: com.android.server.GestureLauncherService$1;

        r1 := @parameter0: com.android.server.GestureLauncherService;

        r0.<com.android.server.GestureLauncherService$1: com.android.server.GestureLauncherService this$0> = r1;

        specialinvoke r0.<android.content.BroadcastReceiver: void <init>()>();

        return;
    }

    public void onReceive(android.content.Context, android.content.Intent)
    {
        com.android.server.GestureLauncherService$1 r0;
        android.content.Context r1, $r7;
        android.content.Intent r2;
        java.lang.String $r3, $r4;
        boolean $z0;
        com.android.server.GestureLauncherService $r5, $r6, $r9, $r11, $r12, $r13;
        int $i0;
        android.content.ContentResolver $r8;
        android.database.ContentObserver $r10;

        r0 := @this: com.android.server.GestureLauncherService$1;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.Intent;

        $r3 = "android.intent.action.USER_SWITCHED";

        $r4 = virtualinvoke r2.<android.content.Intent: java.lang.String getAction()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label1;

        $r5 = r0.<com.android.server.GestureLauncherService$1: com.android.server.GestureLauncherService this$0>;

        $i0 = virtualinvoke r2.<android.content.Intent: int getIntExtra(java.lang.String,int)>("android.intent.extra.user_handle", 0);

        staticinvoke <com.android.server.GestureLauncherService: int access$202(com.android.server.GestureLauncherService,int)>($r5, $i0);

        $r6 = r0.<com.android.server.GestureLauncherService$1: com.android.server.GestureLauncherService this$0>;

        $r7 = staticinvoke <com.android.server.GestureLauncherService: android.content.Context access$400(com.android.server.GestureLauncherService)>($r6);

        $r8 = virtualinvoke $r7.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r9 = r0.<com.android.server.GestureLauncherService$1: com.android.server.GestureLauncherService this$0>;

        $r10 = staticinvoke <com.android.server.GestureLauncherService: android.database.ContentObserver access$300(com.android.server.GestureLauncherService)>($r9);

        virtualinvoke $r8.<android.content.ContentResolver: void unregisterContentObserver(android.database.ContentObserver)>($r10);

        $r11 = r0.<com.android.server.GestureLauncherService$1: com.android.server.GestureLauncherService this$0>;

        staticinvoke <com.android.server.GestureLauncherService: void access$500(com.android.server.GestureLauncherService)>($r11);

        $r12 = r0.<com.android.server.GestureLauncherService$1: com.android.server.GestureLauncherService this$0>;

        staticinvoke <com.android.server.GestureLauncherService: void access$600(com.android.server.GestureLauncherService)>($r12);

        $r13 = r0.<com.android.server.GestureLauncherService$1: com.android.server.GestureLauncherService this$0>;

        virtualinvoke $r13.<com.android.server.GestureLauncherService: void updateCameraDoubleTapPowerEnabled()>();

     label1:
        return;
    }
}
