final class com.android.server.GestureLauncherService$CameraLiftTriggerEventListener extends android.hardware.TriggerEventListener
{
    final com.android.server.GestureLauncherService this$0;

    private void <init>(com.android.server.GestureLauncherService)
    {
        com.android.server.GestureLauncherService$CameraLiftTriggerEventListener r0;
        com.android.server.GestureLauncherService r1;

        r0 := @this: com.android.server.GestureLauncherService$CameraLiftTriggerEventListener;

        r1 := @parameter0: com.android.server.GestureLauncherService;

        r0.<com.android.server.GestureLauncherService$CameraLiftTriggerEventListener: com.android.server.GestureLauncherService this$0> = r1;

        specialinvoke r0.<android.hardware.TriggerEventListener: void <init>()>();

        return;
    }

    void <init>(com.android.server.GestureLauncherService, com.android.server.GestureLauncherService$1)
    {
        com.android.server.GestureLauncherService$CameraLiftTriggerEventListener r0;
        com.android.server.GestureLauncherService r1;
        com.android.server.GestureLauncherService$1 r2;

        r0 := @this: com.android.server.GestureLauncherService$CameraLiftTriggerEventListener;

        r1 := @parameter0: com.android.server.GestureLauncherService;

        r2 := @parameter1: com.android.server.GestureLauncherService$1;

        specialinvoke r0.<com.android.server.GestureLauncherService$CameraLiftTriggerEventListener: void <init>(com.android.server.GestureLauncherService)>(r1);

        return;
    }

    public void onTrigger(android.hardware.TriggerEvent)
    {
        com.android.server.GestureLauncherService$CameraLiftTriggerEventListener r0, $r21;
        boolean z0, z1, $z2, $z3, $z5;
        com.android.server.GestureLauncherService r1, $r2, $r3, $r6, $r9, $r12, $r14, $r16, $r17, $r22;
        android.hardware.Sensor $r4, $r5, $r23;
        android.content.Context $r7, $r10, $r18;
        java.lang.Object $r11;
        com.android.server.wm.WindowManagerInternal $r13;
        android.os.PowerManager $r15;
        android.hardware.TriggerEvent r19;
        android.hardware.SensorManager r20;

        r0 := @this: com.android.server.GestureLauncherService$CameraLiftTriggerEventListener;

        r19 := @parameter0: android.hardware.TriggerEvent;

        $r2 = r0.<com.android.server.GestureLauncherService$CameraLiftTriggerEventListener: com.android.server.GestureLauncherService this$0>;

        $z2 = staticinvoke <com.android.server.GestureLauncherService: boolean access$1500(com.android.server.GestureLauncherService)>($r2);

        if $z2 != 0 goto label1;

        return;

     label1:
        $r4 = r19.<android.hardware.TriggerEvent: android.hardware.Sensor sensor>;

        $r3 = r0.<com.android.server.GestureLauncherService$CameraLiftTriggerEventListener: com.android.server.GestureLauncherService this$0>;

        $r5 = staticinvoke <com.android.server.GestureLauncherService: android.hardware.Sensor access$1600(com.android.server.GestureLauncherService)>($r3);

        if $r4 != $r5 goto label4;

        $r6 = r0.<com.android.server.GestureLauncherService$CameraLiftTriggerEventListener: com.android.server.GestureLauncherService this$0>;

        $r7 = staticinvoke <com.android.server.GestureLauncherService: android.content.Context access$400(com.android.server.GestureLauncherService)>($r6);

        virtualinvoke $r7.<android.content.Context: android.content.res.Resources getResources()>();

        $r9 = r0.<com.android.server.GestureLauncherService$CameraLiftTriggerEventListener: com.android.server.GestureLauncherService this$0>;

        $r10 = staticinvoke <com.android.server.GestureLauncherService: android.content.Context access$400(com.android.server.GestureLauncherService)>($r9);

        $r11 = virtualinvoke $r10.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("sensor");

        r20 = (android.hardware.SensorManager) $r11;

        $r12 = r0.<com.android.server.GestureLauncherService$CameraLiftTriggerEventListener: com.android.server.GestureLauncherService this$0>;

        $r13 = staticinvoke <com.android.server.GestureLauncherService: com.android.server.wm.WindowManagerInternal access$1700(com.android.server.GestureLauncherService)>($r12);

        z0 = virtualinvoke $r13.<com.android.server.wm.WindowManagerInternal: boolean isKeyguardShowingAndNotOccluded()>();

        $r14 = r0.<com.android.server.GestureLauncherService$CameraLiftTriggerEventListener: com.android.server.GestureLauncherService this$0>;

        $r15 = staticinvoke <com.android.server.GestureLauncherService: android.os.PowerManager access$1800(com.android.server.GestureLauncherService)>($r14);

        z1 = virtualinvoke $r15.<android.os.PowerManager: boolean isInteractive()>();

        if z0 != 0 goto label2;

        if z1 != 0 goto label3;

     label2:
        $r16 = r0.<com.android.server.GestureLauncherService$CameraLiftTriggerEventListener: com.android.server.GestureLauncherService this$0>;

        $z3 = virtualinvoke $r16.<com.android.server.GestureLauncherService: boolean handleCameraGesture(boolean,int)>(1, 2);

        if $z3 == 0 goto label3;

        $r17 = r0.<com.android.server.GestureLauncherService$CameraLiftTriggerEventListener: com.android.server.GestureLauncherService this$0>;

        $r18 = staticinvoke <com.android.server.GestureLauncherService: android.content.Context access$400(com.android.server.GestureLauncherService)>($r17);

        staticinvoke <com.android.internal.logging.MetricsLogger: void action(android.content.Context,int)>($r18, 989);

     label3:
        r1 = r0.<com.android.server.GestureLauncherService$CameraLiftTriggerEventListener: com.android.server.GestureLauncherService this$0>;

        $r21 = staticinvoke <com.android.server.GestureLauncherService: com.android.server.GestureLauncherService$CameraLiftTriggerEventListener access$1900(com.android.server.GestureLauncherService)>(r1);

        $r22 = r0.<com.android.server.GestureLauncherService$CameraLiftTriggerEventListener: com.android.server.GestureLauncherService this$0>;

        $r23 = staticinvoke <com.android.server.GestureLauncherService: android.hardware.Sensor access$1600(com.android.server.GestureLauncherService)>($r22);

        $z5 = virtualinvoke r20.<android.hardware.SensorManager: boolean requestTriggerSensor(android.hardware.TriggerEventListener,android.hardware.Sensor)>($r21, $r23);

        staticinvoke <com.android.server.GestureLauncherService: boolean access$1502(com.android.server.GestureLauncherService,boolean)>(r1, $z5);

        return;

     label4:
        return;
    }
}
