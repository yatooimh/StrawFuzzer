final class com.android.server.GestureLauncherService$GestureEventListener extends java.lang.Object implements android.hardware.SensorEventListener
{
    final com.android.server.GestureLauncherService this$0;

    private void <init>(com.android.server.GestureLauncherService)
    {
        com.android.server.GestureLauncherService$GestureEventListener r0;
        com.android.server.GestureLauncherService r1;

        r0 := @this: com.android.server.GestureLauncherService$GestureEventListener;

        r1 := @parameter0: com.android.server.GestureLauncherService;

        r0.<com.android.server.GestureLauncherService$GestureEventListener: com.android.server.GestureLauncherService this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    void <init>(com.android.server.GestureLauncherService, com.android.server.GestureLauncherService$1)
    {
        com.android.server.GestureLauncherService$GestureEventListener r0;
        com.android.server.GestureLauncherService r1;
        com.android.server.GestureLauncherService$1 r2;

        r0 := @this: com.android.server.GestureLauncherService$GestureEventListener;

        r1 := @parameter0: com.android.server.GestureLauncherService;

        r2 := @parameter1: com.android.server.GestureLauncherService$1;

        specialinvoke r0.<com.android.server.GestureLauncherService$GestureEventListener: void <init>(com.android.server.GestureLauncherService)>(r1);

        return;
    }

    private void trackCameraLaunchEvent(android.hardware.SensorEvent)
    {
        com.android.server.GestureLauncherService$GestureEventListener r0;
        long l0, l1, l2, l4, l5, $l7, $l8, $l9, $l10, l19, l20;
        int i3, i6, $i14;
        com.android.server.GestureLauncherService $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        float $f0, $f1, $f2;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        byte $b11, $b12, $b13;
        android.hardware.SensorEvent r10;
        float[] r11;

        r0 := @this: com.android.server.GestureLauncherService$GestureEventListener;

        r10 := @parameter0: android.hardware.SensorEvent;

        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r1 = r0.<com.android.server.GestureLauncherService$GestureEventListener: com.android.server.GestureLauncherService this$0>;

        $l7 = staticinvoke <com.android.server.GestureLauncherService: long access$1000(com.android.server.GestureLauncherService)>($r1);

        l19 = l0 - $l7;

        r11 = r10.<android.hardware.SensorEvent: float[] values>;

        $d1 = (double) l19;

        $f0 = r11[0];

        $d0 = (double) $f0;

        $d2 = $d1 * $d0;

        l1 = (long) $d2;

        $d4 = (double) l19;

        $f1 = r11[1];

        $d3 = (double) $f1;

        $d5 = $d4 * $d3;

        l2 = (long) $d5;

        $f2 = r11[2];

        i3 = (int) $f2;

        $r2 = r0.<com.android.server.GestureLauncherService$GestureEventListener: com.android.server.GestureLauncherService this$0>;

        $l8 = staticinvoke <com.android.server.GestureLauncherService: long access$1100(com.android.server.GestureLauncherService)>($r2);

        l4 = l0 - $l8;

        $r3 = r0.<com.android.server.GestureLauncherService$GestureEventListener: com.android.server.GestureLauncherService this$0>;

        $l9 = staticinvoke <com.android.server.GestureLauncherService: long access$1200(com.android.server.GestureLauncherService)>($r3);

        l20 = l1 - $l9;

        $r4 = r0.<com.android.server.GestureLauncherService$GestureEventListener: com.android.server.GestureLauncherService this$0>;

        $l10 = staticinvoke <com.android.server.GestureLauncherService: long access$1300(com.android.server.GestureLauncherService)>($r4);

        l5 = l2 - $l10;

        $r5 = r0.<com.android.server.GestureLauncherService$GestureEventListener: com.android.server.GestureLauncherService this$0>;

        i6 = staticinvoke <com.android.server.GestureLauncherService: int access$1400(com.android.server.GestureLauncherService)>($r5);

        $b11 = l4 cmp 0L;

        if $b11 < 0 goto label2;

        $b12 = l20 cmp 0L;

        if $b12 < 0 goto label2;

        $b13 = l5 cmp 0L;

        if $b13 >= 0 goto label1;

        goto label2;

     label1:
        $i14 = i3 - i6;

        staticinvoke <com.android.server.EventLogTags: void writeCameraGestureTriggered(long,long,long,int)>(l4, l20, l5, $i14);

        $r6 = r0.<com.android.server.GestureLauncherService$GestureEventListener: com.android.server.GestureLauncherService this$0>;

        staticinvoke <com.android.server.GestureLauncherService: long access$1102(com.android.server.GestureLauncherService,long)>($r6, l0);

        $r7 = r0.<com.android.server.GestureLauncherService$GestureEventListener: com.android.server.GestureLauncherService this$0>;

        staticinvoke <com.android.server.GestureLauncherService: long access$1202(com.android.server.GestureLauncherService,long)>($r7, l1);

        $r8 = r0.<com.android.server.GestureLauncherService$GestureEventListener: com.android.server.GestureLauncherService this$0>;

        staticinvoke <com.android.server.GestureLauncherService: long access$1302(com.android.server.GestureLauncherService,long)>($r8, l2);

        $r9 = r0.<com.android.server.GestureLauncherService$GestureEventListener: com.android.server.GestureLauncherService this$0>;

        staticinvoke <com.android.server.GestureLauncherService: int access$1402(com.android.server.GestureLauncherService,int)>($r9, i3);

        return;

     label2:
        return;
    }

    public void onAccuracyChanged(android.hardware.Sensor, int)
    {
        com.android.server.GestureLauncherService$GestureEventListener r0;
        android.hardware.Sensor r1;
        int i0;

        r0 := @this: com.android.server.GestureLauncherService$GestureEventListener;

        r1 := @parameter0: android.hardware.Sensor;

        i0 := @parameter1: int;

        return;
    }

    public void onSensorChanged(android.hardware.SensorEvent)
    {
        com.android.server.GestureLauncherService$GestureEventListener r0;
        android.hardware.SensorEvent r1;
        com.android.server.GestureLauncherService $r2, $r3, $r6, $r7;
        boolean $z0, $z1;
        android.hardware.Sensor $r4, $r5;
        com.android.internal.logging.MetricsLogger $r8;

        r0 := @this: com.android.server.GestureLauncherService$GestureEventListener;

        r1 := @parameter0: android.hardware.SensorEvent;

        $r2 = r0.<com.android.server.GestureLauncherService$GestureEventListener: com.android.server.GestureLauncherService this$0>;

        $z0 = staticinvoke <com.android.server.GestureLauncherService: boolean access$700(com.android.server.GestureLauncherService)>($r2);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r4 = r1.<android.hardware.SensorEvent: android.hardware.Sensor sensor>;

        $r3 = r0.<com.android.server.GestureLauncherService$GestureEventListener: com.android.server.GestureLauncherService this$0>;

        $r5 = staticinvoke <com.android.server.GestureLauncherService: android.hardware.Sensor access$800(com.android.server.GestureLauncherService)>($r3);

        if $r4 != $r5 goto label3;

        $r6 = r0.<com.android.server.GestureLauncherService$GestureEventListener: com.android.server.GestureLauncherService this$0>;

        $z1 = virtualinvoke $r6.<com.android.server.GestureLauncherService: boolean handleCameraGesture(boolean,int)>(1, 0);

        if $z1 == 0 goto label2;

        $r7 = r0.<com.android.server.GestureLauncherService$GestureEventListener: com.android.server.GestureLauncherService this$0>;

        $r8 = staticinvoke <com.android.server.GestureLauncherService: com.android.internal.logging.MetricsLogger access$900(com.android.server.GestureLauncherService)>($r7);

        virtualinvoke $r8.<com.android.internal.logging.MetricsLogger: void action(int)>(256);

        specialinvoke r0.<com.android.server.GestureLauncherService$GestureEventListener: void trackCameraLaunchEvent(android.hardware.SensorEvent)>(r1);

     label2:
        return;

     label3:
        return;
    }
}
