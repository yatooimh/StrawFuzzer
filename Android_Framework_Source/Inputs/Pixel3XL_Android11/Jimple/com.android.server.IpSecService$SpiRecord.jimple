final class com.android.server.IpSecService$SpiRecord extends com.android.server.IpSecService$OwnedResourceRecord
{
    private final java.lang.String mDestinationAddress;
    private boolean mOwnedByTransform;
    private final java.lang.String mSourceAddress;
    private int mSpi;
    final com.android.server.IpSecService this$0;

    void <init>(com.android.server.IpSecService, int, java.lang.String, java.lang.String, int)
    {
        com.android.server.IpSecService$SpiRecord r0;
        com.android.server.IpSecService r1;
        int i0, i1;
        java.lang.String r2, r3;

        r0 := @this: com.android.server.IpSecService$SpiRecord;

        r1 := @parameter0: com.android.server.IpSecService;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        i1 := @parameter4: int;

        r0.<com.android.server.IpSecService$SpiRecord: com.android.server.IpSecService this$0> = r1;

        specialinvoke r0.<com.android.server.IpSecService$OwnedResourceRecord: void <init>(com.android.server.IpSecService,int)>(r1, i0);

        r0.<com.android.server.IpSecService$SpiRecord: boolean mOwnedByTransform> = 0;

        r0.<com.android.server.IpSecService$SpiRecord: java.lang.String mSourceAddress> = r2;

        r0.<com.android.server.IpSecService$SpiRecord: java.lang.String mDestinationAddress> = r3;

        r0.<com.android.server.IpSecService$SpiRecord: int mSpi> = i1;

        return;
    }

    public void freeUnderlyingResources()
    {
        com.android.server.IpSecService$SpiRecord r0;
        boolean $z0;
        com.android.server.IpSecService$ResourceTracker $r3;
        com.android.server.IpSecService $r4;
        com.android.server.IpSecService$IpSecServiceConfiguration $r5;
        android.net.INetd $r6;
        int $i0, $i1, $i2;
        java.lang.String $r7, $r8, $r13;
        java.lang.Exception $r9;
        java.lang.StringBuilder $r10;

        r0 := @this: com.android.server.IpSecService$SpiRecord;

     label1:
        $z0 = r0.<com.android.server.IpSecService$SpiRecord: boolean mOwnedByTransform>;

        if $z0 != 0 goto label2;

        $r4 = r0.<com.android.server.IpSecService$SpiRecord: com.android.server.IpSecService this$0>;

        $r5 = staticinvoke <com.android.server.IpSecService: com.android.server.IpSecService$IpSecServiceConfiguration access$000(com.android.server.IpSecService)>($r4);

        $r6 = interfaceinvoke $r5.<com.android.server.IpSecService$IpSecServiceConfiguration: android.net.INetd getNetdInstance()>();

        $i1 = r0.<com.android.server.IpSecService$SpiRecord: int uid>;

        $r8 = r0.<com.android.server.IpSecService$SpiRecord: java.lang.String mSourceAddress>;

        $r7 = r0.<com.android.server.IpSecService$SpiRecord: java.lang.String mDestinationAddress>;

        $i0 = r0.<com.android.server.IpSecService$SpiRecord: int mSpi>;

        interfaceinvoke $r6.<android.net.INetd: void ipSecDeleteSecurityAssociation(int,java.lang.String,java.lang.String,int,int,int,int)>($i1, $r8, $r7, $i0, 0, 0, 0);

     label2:
        goto label4;

     label3:
        $r9 := @caughtexception;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to delete SPI reservation with ID: ");

        $i2 = r0.<com.android.server.IpSecService$SpiRecord: int mResourceId>;

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("IpSecService", $r13, $r9);

     label4:
        r0.<com.android.server.IpSecService$SpiRecord: int mSpi> = 0;

        $r3 = virtualinvoke r0.<com.android.server.IpSecService$SpiRecord: com.android.server.IpSecService$ResourceTracker getResourceTracker()>();

        virtualinvoke $r3.<com.android.server.IpSecService$ResourceTracker: void give()>();

        return;

        catch android.os.ServiceSpecificException from label1 to label2 with label3;
        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.lang.String getDestinationAddress()
    {
        com.android.server.IpSecService$SpiRecord r0;
        java.lang.String $r1;

        r0 := @this: com.android.server.IpSecService$SpiRecord;

        $r1 = r0.<com.android.server.IpSecService$SpiRecord: java.lang.String mDestinationAddress>;

        return $r1;
    }

    public boolean getOwnedByTransform()
    {
        com.android.server.IpSecService$SpiRecord r0;
        boolean $z0;

        r0 := @this: com.android.server.IpSecService$SpiRecord;

        $z0 = r0.<com.android.server.IpSecService$SpiRecord: boolean mOwnedByTransform>;

        return $z0;
    }

    protected com.android.server.IpSecService$ResourceTracker getResourceTracker()
    {
        com.android.server.IpSecService$SpiRecord r0;
        com.android.server.IpSecService$UserRecord $r1;
        com.android.server.IpSecService$ResourceTracker $r2;

        r0 := @this: com.android.server.IpSecService$SpiRecord;

        $r1 = virtualinvoke r0.<com.android.server.IpSecService$SpiRecord: com.android.server.IpSecService$UserRecord getUserRecord()>();

        $r2 = $r1.<com.android.server.IpSecService$UserRecord: com.android.server.IpSecService$ResourceTracker mSpiQuotaTracker>;

        return $r2;
    }

    public int getSpi()
    {
        com.android.server.IpSecService$SpiRecord r0;
        int $i0;

        r0 := @this: com.android.server.IpSecService$SpiRecord;

        $i0 = r0.<com.android.server.IpSecService$SpiRecord: int mSpi>;

        return $i0;
    }

    public void invalidate() throws android.os.RemoteException
    {
        com.android.server.IpSecService$SpiRecord r0;
        com.android.server.IpSecService$UserRecord $r1;
        int $i0;

        r0 := @this: com.android.server.IpSecService$SpiRecord;

        $r1 = virtualinvoke r0.<com.android.server.IpSecService$SpiRecord: com.android.server.IpSecService$UserRecord getUserRecord()>();

        $i0 = r0.<com.android.server.IpSecService$SpiRecord: int mResourceId>;

        virtualinvoke $r1.<com.android.server.IpSecService$UserRecord: void removeSpiRecord(int)>($i0);

        return;
    }

    public void setOwnedByTransform()
    {
        com.android.server.IpSecService$SpiRecord r0;
        boolean $z0;
        java.lang.IllegalStateException $r1;

        r0 := @this: com.android.server.IpSecService$SpiRecord;

        $z0 = r0.<com.android.server.IpSecService$SpiRecord: boolean mOwnedByTransform>;

        if $z0 != 0 goto label1;

        r0.<com.android.server.IpSecService$SpiRecord: boolean mOwnedByTransform> = 1;

        return;

     label1:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot own an SPI twice!");

        throw $r1;
    }

    public java.lang.String toString()
    {
        com.android.server.IpSecService$SpiRecord r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r4, $r9, $r12, $r17;
        int $i0;
        boolean $z0;

        r0 := @this: com.android.server.IpSecService$SpiRecord;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{super=");

        $r4 = specialinvoke r0.<com.android.server.IpSecService$OwnedResourceRecord: java.lang.String toString()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mSpi=");

        $i0 = r0.<com.android.server.IpSecService$SpiRecord: int mSpi>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mSourceAddress=");

        $r9 = r0.<com.android.server.IpSecService$SpiRecord: java.lang.String mSourceAddress>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mDestinationAddress=");

        $r12 = r0.<com.android.server.IpSecService$SpiRecord: java.lang.String mDestinationAddress>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mOwnedByTransform=");

        $z0 = r0.<com.android.server.IpSecService$SpiRecord: boolean mOwnedByTransform>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r17 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r17;
    }
}
