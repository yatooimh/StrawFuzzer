final class com.android.server.IpSecService$TunnelInterfaceRecord extends com.android.server.IpSecService$OwnedResourceRecord
{
    private final int mIfId;
    private final int mIkey;
    private final java.lang.String mInterfaceName;
    private final java.lang.String mLocalAddress;
    private final int mOkey;
    private final java.lang.String mRemoteAddress;
    private final android.net.Network mUnderlyingNetwork;
    final com.android.server.IpSecService this$0;

    void <init>(com.android.server.IpSecService, int, java.lang.String, android.net.Network, java.lang.String, java.lang.String, int, int, int)
    {
        com.android.server.IpSecService$TunnelInterfaceRecord r0;
        com.android.server.IpSecService r1;
        int i0, i1, i2, i3;
        java.lang.String r2, r4, r5;
        android.net.Network r3;

        r0 := @this: com.android.server.IpSecService$TunnelInterfaceRecord;

        r1 := @parameter0: com.android.server.IpSecService;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: android.net.Network;

        r4 := @parameter4: java.lang.String;

        r5 := @parameter5: java.lang.String;

        i1 := @parameter6: int;

        i2 := @parameter7: int;

        i3 := @parameter8: int;

        r0.<com.android.server.IpSecService$TunnelInterfaceRecord: com.android.server.IpSecService this$0> = r1;

        specialinvoke r0.<com.android.server.IpSecService$OwnedResourceRecord: void <init>(com.android.server.IpSecService,int)>(r1, i0);

        r0.<com.android.server.IpSecService$TunnelInterfaceRecord: java.lang.String mInterfaceName> = r2;

        r0.<com.android.server.IpSecService$TunnelInterfaceRecord: android.net.Network mUnderlyingNetwork> = r3;

        r0.<com.android.server.IpSecService$TunnelInterfaceRecord: java.lang.String mLocalAddress> = r4;

        r0.<com.android.server.IpSecService$TunnelInterfaceRecord: java.lang.String mRemoteAddress> = r5;

        r0.<com.android.server.IpSecService$TunnelInterfaceRecord: int mIkey> = i1;

        r0.<com.android.server.IpSecService$TunnelInterfaceRecord: int mOkey> = i2;

        r0.<com.android.server.IpSecService$TunnelInterfaceRecord: int mIfId> = i3;

        return;
    }

    static java.lang.String access$200(com.android.server.IpSecService$TunnelInterfaceRecord)
    {
        com.android.server.IpSecService$TunnelInterfaceRecord r0;
        java.lang.String $r1;

        r0 := @parameter0: com.android.server.IpSecService$TunnelInterfaceRecord;

        $r1 = r0.<com.android.server.IpSecService$TunnelInterfaceRecord: java.lang.String mInterfaceName>;

        return $r1;
    }

    public void freeUnderlyingResources()
    {
        com.android.server.IpSecService$TunnelInterfaceRecord r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i12;
        com.android.server.IpSecService $r1, $r5, $r6;
        com.android.server.IpSecService$IpSecServiceConfiguration $r2;
        java.lang.String $r3, $r10, $r14;
        com.android.server.IpSecService$ResourceTracker $r4;
        java.lang.Exception $r7;
        java.lang.StringBuilder $r8;
        android.net.INetd r15;
        int[] r16;

        r0 := @this: com.android.server.IpSecService$TunnelInterfaceRecord;

     label1:
        $r1 = r0.<com.android.server.IpSecService$TunnelInterfaceRecord: com.android.server.IpSecService this$0>;

        $r2 = staticinvoke <com.android.server.IpSecService: com.android.server.IpSecService$IpSecServiceConfiguration access$000(com.android.server.IpSecService)>($r1);

        r15 = interfaceinvoke $r2.<com.android.server.IpSecService$IpSecServiceConfiguration: android.net.INetd getNetdInstance()>();

        $r3 = r0.<com.android.server.IpSecService$TunnelInterfaceRecord: java.lang.String mInterfaceName>;

        interfaceinvoke r15.<android.net.INetd: void ipSecRemoveTunnelInterface(java.lang.String)>($r3);

        r16 = staticinvoke <com.android.server.IpSecService: int[] access$100()>();

        i0 = lengthof r16;

     label2:
        i12 = 0;

     label3:
        if i12 >= i0 goto label6;

        i1 = r16[i12];

     label4:
        $i6 = r0.<com.android.server.IpSecService$TunnelInterfaceRecord: int uid>;

        $i5 = r0.<com.android.server.IpSecService$TunnelInterfaceRecord: int mOkey>;

        $i4 = r0.<com.android.server.IpSecService$TunnelInterfaceRecord: int mIfId>;

        interfaceinvoke r15.<android.net.INetd: void ipSecDeleteSecurityPolicy(int,int,int,int,int,int)>($i6, i1, 1, $i5, -1, $i4);

        $i9 = r0.<com.android.server.IpSecService$TunnelInterfaceRecord: int uid>;

        $i8 = r0.<com.android.server.IpSecService$TunnelInterfaceRecord: int mIkey>;

        $i7 = r0.<com.android.server.IpSecService$TunnelInterfaceRecord: int mIfId>;

        interfaceinvoke r15.<android.net.INetd: void ipSecDeleteSecurityPolicy(int,int,int,int,int,int)>($i9, i1, 0, $i8, -1, $i7);

     label5:
        i12 = i12 + 1;

        goto label3;

     label6:
        goto label8;

     label7:
        $r7 := @caughtexception;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to delete VTI with interface name: ");

        $r10 = r0.<com.android.server.IpSecService$TunnelInterfaceRecord: java.lang.String mInterfaceName>;

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and id: ");

        $i10 = r0.<com.android.server.IpSecService$TunnelInterfaceRecord: int mResourceId>;

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        $r14 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("IpSecService", $r14, $r7);

     label8:
        $r4 = virtualinvoke r0.<com.android.server.IpSecService$TunnelInterfaceRecord: com.android.server.IpSecService$ResourceTracker getResourceTracker()>();

        virtualinvoke $r4.<com.android.server.IpSecService$ResourceTracker: void give()>();

        $r5 = r0.<com.android.server.IpSecService$TunnelInterfaceRecord: com.android.server.IpSecService this$0>;

        $i2 = r0.<com.android.server.IpSecService$TunnelInterfaceRecord: int mIkey>;

        virtualinvoke $r5.<com.android.server.IpSecService: void releaseNetId(int)>($i2);

        $r6 = r0.<com.android.server.IpSecService$TunnelInterfaceRecord: com.android.server.IpSecService this$0>;

        $i3 = r0.<com.android.server.IpSecService$TunnelInterfaceRecord: int mOkey>;

        virtualinvoke $r6.<com.android.server.IpSecService: void releaseNetId(int)>($i3);

        return;

        catch android.os.ServiceSpecificException from label1 to label2 with label7;
        catch android.os.RemoteException from label1 to label2 with label7;
        catch android.os.ServiceSpecificException from label4 to label5 with label7;
        catch android.os.RemoteException from label4 to label5 with label7;
    }

    public int getIfId()
    {
        com.android.server.IpSecService$TunnelInterfaceRecord r0;
        int $i0;

        r0 := @this: com.android.server.IpSecService$TunnelInterfaceRecord;

        $i0 = r0.<com.android.server.IpSecService$TunnelInterfaceRecord: int mIfId>;

        return $i0;
    }

    public int getIkey()
    {
        com.android.server.IpSecService$TunnelInterfaceRecord r0;
        int $i0;

        r0 := @this: com.android.server.IpSecService$TunnelInterfaceRecord;

        $i0 = r0.<com.android.server.IpSecService$TunnelInterfaceRecord: int mIkey>;

        return $i0;
    }

    public java.lang.String getInterfaceName()
    {
        com.android.server.IpSecService$TunnelInterfaceRecord r0;
        java.lang.String $r1;

        r0 := @this: com.android.server.IpSecService$TunnelInterfaceRecord;

        $r1 = r0.<com.android.server.IpSecService$TunnelInterfaceRecord: java.lang.String mInterfaceName>;

        return $r1;
    }

    public java.lang.String getLocalAddress()
    {
        com.android.server.IpSecService$TunnelInterfaceRecord r0;
        java.lang.String $r1;

        r0 := @this: com.android.server.IpSecService$TunnelInterfaceRecord;

        $r1 = r0.<com.android.server.IpSecService$TunnelInterfaceRecord: java.lang.String mLocalAddress>;

        return $r1;
    }

    public int getOkey()
    {
        com.android.server.IpSecService$TunnelInterfaceRecord r0;
        int $i0;

        r0 := @this: com.android.server.IpSecService$TunnelInterfaceRecord;

        $i0 = r0.<com.android.server.IpSecService$TunnelInterfaceRecord: int mOkey>;

        return $i0;
    }

    public java.lang.String getRemoteAddress()
    {
        com.android.server.IpSecService$TunnelInterfaceRecord r0;
        java.lang.String $r1;

        r0 := @this: com.android.server.IpSecService$TunnelInterfaceRecord;

        $r1 = r0.<com.android.server.IpSecService$TunnelInterfaceRecord: java.lang.String mRemoteAddress>;

        return $r1;
    }

    protected com.android.server.IpSecService$ResourceTracker getResourceTracker()
    {
        com.android.server.IpSecService$TunnelInterfaceRecord r0;
        com.android.server.IpSecService$UserRecord $r1;
        com.android.server.IpSecService$ResourceTracker $r2;

        r0 := @this: com.android.server.IpSecService$TunnelInterfaceRecord;

        $r1 = virtualinvoke r0.<com.android.server.IpSecService$TunnelInterfaceRecord: com.android.server.IpSecService$UserRecord getUserRecord()>();

        $r2 = $r1.<com.android.server.IpSecService$UserRecord: com.android.server.IpSecService$ResourceTracker mTunnelQuotaTracker>;

        return $r2;
    }

    public android.net.Network getUnderlyingNetwork()
    {
        com.android.server.IpSecService$TunnelInterfaceRecord r0;
        android.net.Network $r1;

        r0 := @this: com.android.server.IpSecService$TunnelInterfaceRecord;

        $r1 = r0.<com.android.server.IpSecService$TunnelInterfaceRecord: android.net.Network mUnderlyingNetwork>;

        return $r1;
    }

    public void invalidate()
    {
        com.android.server.IpSecService$TunnelInterfaceRecord r0;
        com.android.server.IpSecService$UserRecord $r1;
        int $i0;

        r0 := @this: com.android.server.IpSecService$TunnelInterfaceRecord;

        $r1 = virtualinvoke r0.<com.android.server.IpSecService$TunnelInterfaceRecord: com.android.server.IpSecService$UserRecord getUserRecord()>();

        $i0 = r0.<com.android.server.IpSecService$TunnelInterfaceRecord: int mResourceId>;

        virtualinvoke $r1.<com.android.server.IpSecService$UserRecord: void removeTunnelInterfaceRecord(int)>($i0);

        return;
    }

    public java.lang.String toString()
    {
        com.android.server.IpSecService$TunnelInterfaceRecord r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r4, $r7, $r13, $r16, $r23;
        android.net.Network $r10;
        int $i0, $i1;

        r0 := @this: com.android.server.IpSecService$TunnelInterfaceRecord;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{super=");

        $r4 = specialinvoke r0.<com.android.server.IpSecService$OwnedResourceRecord: java.lang.String toString()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mInterfaceName=");

        $r7 = r0.<com.android.server.IpSecService$TunnelInterfaceRecord: java.lang.String mInterfaceName>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mUnderlyingNetwork=");

        $r10 = r0.<com.android.server.IpSecService$TunnelInterfaceRecord: android.net.Network mUnderlyingNetwork>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mLocalAddress=");

        $r13 = r0.<com.android.server.IpSecService$TunnelInterfaceRecord: java.lang.String mLocalAddress>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mRemoteAddress=");

        $r16 = r0.<com.android.server.IpSecService$TunnelInterfaceRecord: java.lang.String mRemoteAddress>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mIkey=");

        $i0 = r0.<com.android.server.IpSecService$TunnelInterfaceRecord: int mIkey>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mOkey=");

        $i1 = r0.<com.android.server.IpSecService$TunnelInterfaceRecord: int mOkey>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r23 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r23;
    }
}
