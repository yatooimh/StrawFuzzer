final class com.android.server.IpSecService$UserResourceTracker extends java.lang.Object
{
    private final android.util.SparseArray mUserRecords;

    void <init>()
    {
        com.android.server.IpSecService$UserResourceTracker r0;
        android.util.SparseArray $r1;

        r0 := @this: com.android.server.IpSecService$UserResourceTracker;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new android.util.SparseArray;

        specialinvoke $r1.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.IpSecService$UserResourceTracker: android.util.SparseArray mUserRecords> = $r1;

        return;
    }

    private void checkCallerUid(int)
    {
        com.android.server.IpSecService$UserResourceTracker r0;
        int i0, $i1, $i2;
        java.lang.SecurityException $r1;

        r0 := @this: com.android.server.IpSecService$UserResourceTracker;

        i0 := @parameter0: int;

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if i0 == $i1 goto label2;

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if 1000 != $i2 goto label1;

        goto label2;

     label1:
        $r1 = new java.lang.SecurityException;

        specialinvoke $r1.<java.lang.SecurityException: void <init>(java.lang.String)>("Attempted access of unowned resources");

        throw $r1;

     label2:
        return;
    }

    public com.android.server.IpSecService$UserRecord getUserRecord(int)
    {
        com.android.server.IpSecService$UserResourceTracker r0;
        int i0;
        com.android.server.IpSecService$UserRecord r1, $r4, r6;
        android.util.SparseArray $r2, $r5;
        java.lang.Object $r3;

        r0 := @this: com.android.server.IpSecService$UserResourceTracker;

        i0 := @parameter0: int;

        specialinvoke r0.<com.android.server.IpSecService$UserResourceTracker: void checkCallerUid(int)>(i0);

        $r2 = r0.<com.android.server.IpSecService$UserResourceTracker: android.util.SparseArray mUserRecords>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r1 = (com.android.server.IpSecService$UserRecord) $r3;

        r6 = r1;

        if r1 != null goto label1;

        $r4 = new com.android.server.IpSecService$UserRecord;

        specialinvoke $r4.<com.android.server.IpSecService$UserRecord: void <init>()>();

        r6 = $r4;

        $r5 = r0.<com.android.server.IpSecService$UserResourceTracker: android.util.SparseArray mUserRecords>;

        virtualinvoke $r5.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, $r4);

     label1:
        return r6;
    }

    public java.lang.String toString()
    {
        com.android.server.IpSecService$UserResourceTracker r0;
        android.util.SparseArray $r1;
        java.lang.String $r2;

        r0 := @this: com.android.server.IpSecService$UserResourceTracker;

        $r1 = r0.<com.android.server.IpSecService$UserResourceTracker: android.util.SparseArray mUserRecords>;

        $r2 = virtualinvoke $r1.<android.util.SparseArray: java.lang.String toString()>();

        return $r2;
    }
}
