public class com.android.server.LockGuard extends java.lang.Object
{
    public static final int INDEX_ACTIVITY;
    public static final int INDEX_APP_OPS;
    public static final int INDEX_DPMS;
    public static final int INDEX_PACKAGES;
    public static final int INDEX_POWER;
    public static final int INDEX_STORAGE;
    public static final int INDEX_USER;
    public static final int INDEX_WINDOW;
    private static final java.lang.String TAG;
    private static android.util.ArrayMap sKnown;
    private static java.lang.Object[] sKnownFixed;

    static void <clinit>()
    {
        java.lang.Object[] $r0;
        android.util.ArrayMap $r1;

        <com.android.server.LockGuard: java.lang.String TAG> = "LockGuard";

        <com.android.server.LockGuard: int INDEX_WINDOW> = 5;

        <com.android.server.LockGuard: int INDEX_USER> = 2;

        <com.android.server.LockGuard: int INDEX_STORAGE> = 4;

        <com.android.server.LockGuard: int INDEX_POWER> = 1;

        <com.android.server.LockGuard: int INDEX_PACKAGES> = 3;

        <com.android.server.LockGuard: int INDEX_DPMS> = 7;

        <com.android.server.LockGuard: int INDEX_APP_OPS> = 0;

        <com.android.server.LockGuard: int INDEX_ACTIVITY> = 6;

        $r0 = newarray (java.lang.Object)[8];

        <com.android.server.LockGuard: java.lang.Object[] sKnownFixed> = $r0;

        $r1 = new android.util.ArrayMap;

        specialinvoke $r1.<android.util.ArrayMap: void <init>(int,boolean)>(0, 1);

        <com.android.server.LockGuard: android.util.ArrayMap sKnown> = $r1;

        return;
    }

    public void <init>()
    {
        com.android.server.LockGuard r0;

        r0 := @this: com.android.server.LockGuard;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static void doLog(java.lang.Object, java.lang.String)
    {
        java.lang.Object r0;
        java.lang.String r1;
        java.lang.Throwable $r2;
        com.android.server.LockGuard$LockInfo $r3;
        boolean $z0;
        java.lang.Thread $r4;
        com.android.server._$$Lambda$LockGuard$C107ImDhsfBAwlfWxZPBoVXIl_4 $r5;
        java.lang.RuntimeException $r6;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.String;

        if r0 == null goto label1;

        $r3 = staticinvoke <com.android.server.LockGuard: com.android.server.LockGuard$LockInfo findOrCreateLockInfo(java.lang.Object)>(r0);

        $z0 = $r3.<com.android.server.LockGuard$LockInfo: boolean doWtf>;

        if $z0 == 0 goto label1;

        $r4 = new java.lang.Thread;

        $r5 = new com.android.server._$$Lambda$LockGuard$C107ImDhsfBAwlfWxZPBoVXIl_4;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>(r1);

        specialinvoke $r5.<com.android.server._$$Lambda$LockGuard$C107ImDhsfBAwlfWxZPBoVXIl_4: void <init>(java.lang.Throwable)>($r6);

        specialinvoke $r4.<java.lang.Thread: void <init>(java.lang.Runnable)>($r5);

        virtualinvoke $r4.<java.lang.Thread: void start()>();

        return;

     label1:
        $r2 = new java.lang.Throwable;

        specialinvoke $r2.<java.lang.Throwable: void <init>()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("LockGuard", r1, $r2);

        return;
    }

    public static void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        java.io.PrintWriter r0;
        android.util.ArrayMap $r2, $r3, $r4;
        int $i0, $i1, i2, i3;
        java.lang.Object $r5, $r16, r22;
        java.lang.StringBuilder $r6, $r13;
        java.lang.String $r8, $r11, $r17, $r19;
        android.util.ArraySet $r12, $r15;
        java.io.FileDescriptor r20;
        java.lang.String[] r21;
        com.android.server.LockGuard$LockInfo r23;

        r20 := @parameter0: java.io.FileDescriptor;

        r0 := @parameter1: java.io.PrintWriter;

        r21 := @parameter2: java.lang.String[];

        i2 = 0;

     label1:
        $r2 = <com.android.server.LockGuard: android.util.ArrayMap sKnown>;

        $i0 = virtualinvoke $r2.<android.util.ArrayMap: int size()>();

        if i2 >= $i0 goto label4;

        $r3 = <com.android.server.LockGuard: android.util.ArrayMap sKnown>;

        r22 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i2);

        $r4 = <com.android.server.LockGuard: android.util.ArrayMap sKnown>;

        $r5 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i2);

        r23 = (com.android.server.LockGuard$LockInfo) $r5;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Lock ");

        $r8 = staticinvoke <com.android.server.LockGuard: java.lang.String lockToString(java.lang.Object)>(r22);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r11 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r11);

        i3 = 0;

     label2:
        $r12 = r23.<com.android.server.LockGuard$LockInfo: android.util.ArraySet children>;

        $i1 = virtualinvoke $r12.<android.util.ArraySet: int size()>();

        if i3 >= $i1 goto label3;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Child ");

        $r15 = r23.<com.android.server.LockGuard$LockInfo: android.util.ArraySet children>;

        $r16 = virtualinvoke $r15.<android.util.ArraySet: java.lang.Object valueAt(int)>(i3);

        $r17 = staticinvoke <com.android.server.LockGuard: java.lang.String lockToString(java.lang.Object)>($r16);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r19);

        i3 = i3 + 1;

        goto label2;

     label3:
        virtualinvoke r0.<java.io.PrintWriter: void println()>();

        i2 = i2 + 1;

        goto label1;

     label4:
        return;
    }

    private static com.android.server.LockGuard$LockInfo findOrCreateLockInfo(java.lang.Object)
    {
        java.lang.Object r0, $r2;
        android.util.ArrayMap $r1, $r16;
        com.android.server.LockGuard$LockInfo $r3, r18, r19;
        java.lang.StringBuilder $r4;
        int $i0;
        java.lang.String $r6, $r12, $r15;
        java.lang.Throwable $r9;
        java.lang.StackTraceElement[] $r10;
        java.lang.StackTraceElement $r11;

        r0 := @parameter0: java.lang.Object;

        $r1 = <com.android.server.LockGuard: android.util.ArrayMap sKnown>;

        $r2 = virtualinvoke $r1.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r0);

        r18 = (com.android.server.LockGuard$LockInfo) $r2;

        r19 = r18;

        if r18 != null goto label1;

        $r3 = new com.android.server.LockGuard$LockInfo;

        specialinvoke $r3.<com.android.server.LockGuard$LockInfo: void <init>(com.android.server.LockGuard$1)>(null);

        r19 = $r3;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0x");

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [");

        $r9 = new java.lang.Throwable;

        specialinvoke $r9.<java.lang.Throwable: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>();

        $r11 = $r10[2];

        $r12 = virtualinvoke $r11.<java.lang.StackTraceElement: java.lang.String toString()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r15 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3.<com.android.server.LockGuard$LockInfo: java.lang.String label> = $r15;

        $r16 = <com.android.server.LockGuard: android.util.ArrayMap sKnown>;

        virtualinvoke $r16.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, $r3);

     label1:
        return r19;
    }

    public static java.lang.Object guard(java.lang.Object)
    {
        java.lang.Object r0, r1, $r7, r24;
        boolean $z0, $z1, $z3, z4;
        android.util.ArraySet $r3, $r9, $r10;
        int $i0, $i1, i2, i3;
        android.util.ArrayMap $r4, $r5, $r6;
        com.android.server.LockGuard$LockInfo $r8, r23;
        java.lang.StringBuilder $r11;
        java.lang.Thread $r13;
        java.lang.String $r14, $r17, $r20, $r22;

        r0 := @parameter0: java.lang.Object;

        if r0 == null goto label10;

        $z0 = staticinvoke <java.lang.Thread: boolean holdsLock(java.lang.Object)>(r0);

        if $z0 == 0 goto label01;

        goto label10;

     label01:
        z4 = 0;

        r23 = staticinvoke <com.android.server.LockGuard: com.android.server.LockGuard$LockInfo findOrCreateLockInfo(java.lang.Object)>(r0);

        i2 = 0;

     label02:
        $r3 = r23.<com.android.server.LockGuard$LockInfo: android.util.ArraySet children>;

        $i0 = virtualinvoke $r3.<android.util.ArraySet: int size()>();

        if i2 >= $i0 goto label05;

        $r10 = r23.<com.android.server.LockGuard$LockInfo: android.util.ArraySet children>;

        r1 = virtualinvoke $r10.<android.util.ArraySet: java.lang.Object valueAt(int)>(i2);

        if r1 != null goto label03;

        goto label04;

     label03:
        $z3 = staticinvoke <java.lang.Thread: boolean holdsLock(java.lang.Object)>(r1);

        if $z3 == 0 goto label04;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Calling thread ");

        $r13 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r14 = virtualinvoke $r13.<java.lang.Thread: java.lang.String getName()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is holding ");

        $r17 = staticinvoke <com.android.server.LockGuard: java.lang.String lockToString(java.lang.Object)>(r1);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" while trying to acquire ");

        $r20 = staticinvoke <com.android.server.LockGuard: java.lang.String lockToString(java.lang.Object)>(r0);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.LockGuard: void doLog(java.lang.Object,java.lang.String)>(r0, $r22);

        z4 = 1;

     label04:
        i2 = i2 + 1;

        goto label02;

     label05:
        if z4 != 0 goto label09;

        i3 = 0;

     label06:
        $r4 = <com.android.server.LockGuard: android.util.ArrayMap sKnown>;

        $i1 = virtualinvoke $r4.<android.util.ArrayMap: int size()>();

        if i3 >= $i1 goto label09;

        $r5 = <com.android.server.LockGuard: android.util.ArrayMap sKnown>;

        r24 = virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i3);

        if r24 == null goto label08;

        if r24 != r0 goto label07;

        goto label08;

     label07:
        $z1 = staticinvoke <java.lang.Thread: boolean holdsLock(java.lang.Object)>(r24);

        if $z1 == 0 goto label08;

        $r6 = <com.android.server.LockGuard: android.util.ArrayMap sKnown>;

        $r7 = virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i3);

        $r8 = (com.android.server.LockGuard$LockInfo) $r7;

        $r9 = $r8.<com.android.server.LockGuard$LockInfo: android.util.ArraySet children>;

        virtualinvoke $r9.<android.util.ArraySet: boolean add(java.lang.Object)>(r0);

     label08:
        i3 = i3 + 1;

        goto label06;

     label09:
        return r0;

     label10:
        return r0;
    }

    public static void guard(int)
    {
        int i0, i1;
        java.lang.Object r0, r15;
        java.lang.Object[] $r1, $r2;
        boolean $z0;
        java.lang.StringBuilder $r3;
        java.lang.Thread $r5;
        java.lang.String $r6, $r9, $r12, $r14;

        i0 := @parameter0: int;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r1 = <com.android.server.LockGuard: java.lang.Object[] sKnownFixed>;

        r15 = $r1[i1];

        if r15 == null goto label2;

        $z0 = staticinvoke <java.lang.Thread: boolean holdsLock(java.lang.Object)>(r15);

        if $z0 == 0 goto label2;

        $r2 = <com.android.server.LockGuard: java.lang.Object[] sKnownFixed>;

        r0 = $r2[i0];

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Calling thread ");

        $r5 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r6 = virtualinvoke $r5.<java.lang.Thread: java.lang.String getName()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is holding ");

        $r9 = staticinvoke <com.android.server.LockGuard: java.lang.String lockToString(int)>(i1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" while trying to acquire ");

        $r12 = staticinvoke <com.android.server.LockGuard: java.lang.String lockToString(int)>(i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.LockGuard: void doLog(java.lang.Object,java.lang.String)>(r0, $r14);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    public static java.lang.Object installLock(java.lang.Object, int)
    {
        java.lang.Object r0, $r1;
        int i0;

        r0 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        $r1 = staticinvoke <com.android.server.LockGuard: java.lang.Object installLock(java.lang.Object,int,boolean)>(r0, i0, 0);

        return $r1;
    }

    public static java.lang.Object installLock(java.lang.Object, int, boolean)
    {
        java.lang.Object r0;
        int i0;
        boolean z0;
        com.android.server.LockGuard$LockInfo r1;
        java.lang.Object[] $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r6, $r8;

        r0 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        $r3 = <com.android.server.LockGuard: java.lang.Object[] sKnownFixed>;

        $r3[i0] = r0;

        r1 = staticinvoke <com.android.server.LockGuard: com.android.server.LockGuard$LockInfo findOrCreateLockInfo(java.lang.Object)>(r0);

        r1.<com.android.server.LockGuard$LockInfo: boolean doWtf> = z0;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Lock-");

        $r6 = staticinvoke <com.android.server.LockGuard: java.lang.String lockToString(int)>(i0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        r1.<com.android.server.LockGuard$LockInfo: java.lang.String label> = $r8;

        return r0;
    }

    public static java.lang.Object installLock(java.lang.Object, java.lang.String)
    {
        java.lang.Object r0;
        java.lang.String r1;
        com.android.server.LockGuard$LockInfo $r2;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <com.android.server.LockGuard: com.android.server.LockGuard$LockInfo findOrCreateLockInfo(java.lang.Object)>(r0);

        $r2.<com.android.server.LockGuard$LockInfo: java.lang.String label> = r1;

        return r0;
    }

    public static java.lang.Object installNewLock(int)
    {
        int i0;
        java.lang.Object $r0;

        i0 := @parameter0: int;

        $r0 = staticinvoke <com.android.server.LockGuard: java.lang.Object installNewLock(int,boolean)>(i0, 0);

        return $r0;
    }

    public static java.lang.Object installNewLock(int, boolean)
    {
        int i0;
        boolean z0;
        java.lang.Object $r1;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        staticinvoke <com.android.server.LockGuard: java.lang.Object installLock(java.lang.Object,int,boolean)>($r1, i0, z0);

        return $r1;
    }

    static void lambda$doLog$0(java.lang.Throwable)
    {
        java.lang.Throwable r0;

        r0 := @parameter0: java.lang.Throwable;

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.Throwable)>("LockGuard", r0);

        return;
    }

    private static java.lang.String lockToString(int)
    {
        int i0;
        java.lang.String $r0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label9;
            case 1: goto label8;
            case 2: goto label7;
            case 3: goto label6;
            case 4: goto label5;
            case 5: goto label4;
            case 6: goto label3;
            case 7: goto label2;
            default: goto label1;
        };

     label1:
        $r0 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        return $r0;

     label2:
        return "DPMS";

     label3:
        return "ACTIVITY";

     label4:
        return "WINDOW";

     label5:
        return "STORAGE";

     label6:
        return "PACKAGES";

     label7:
        return "USER";

     label8:
        return "POWER";

     label9:
        return "APP_OPS";
    }

    private static java.lang.String lockToString(java.lang.Object)
    {
        java.lang.Object r0, $r2;
        android.util.ArrayMap $r1;
        java.lang.StringBuilder $r3;
        int $i0;
        java.lang.String $r5, $r7, $r8, $r9;
        boolean $z0;
        com.android.server.LockGuard$LockInfo r10;

        r0 := @parameter0: java.lang.Object;

        $r1 = <com.android.server.LockGuard: android.util.ArrayMap sKnown>;

        $r2 = virtualinvoke $r1.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r0);

        r10 = (com.android.server.LockGuard$LockInfo) $r2;

        if r10 == null goto label1;

        $r8 = r10.<com.android.server.LockGuard$LockInfo: java.lang.String label>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r8);

        if $z0 != 0 goto label1;

        $r9 = r10.<com.android.server.LockGuard$LockInfo: java.lang.String label>;

        return $r9;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0x");

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }
}
