public final class com.android.server.MemoryPressureUtil extends java.lang.Object
{
    private static final java.lang.String FILE;
    private static final java.lang.String TAG;

    private void <init>()
    {
        com.android.server.MemoryPressureUtil r0;

        r0 := @this: com.android.server.MemoryPressureUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String currentPsiState()
    {
        android.os.StrictMode$ThreadPolicy r0;
        java.io.StringWriter $r1;
        boolean $z0;
        java.lang.String $r2, $r4;
        java.lang.Throwable $r7, $r8;
        java.io.File r10;

        r0 = staticinvoke <android.os.StrictMode: android.os.StrictMode$ThreadPolicy allowThreadDiskReads()>();

        $r1 = new java.io.StringWriter;

        specialinvoke $r1.<java.io.StringWriter: void <init>()>();

     label1:
        r10 = new java.io.File;

        specialinvoke r10.<java.io.File: void <init>(java.lang.String)>("/proc/pressure/memory");

        $z0 = virtualinvoke r10.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label2;

        virtualinvoke $r1.<java.io.StringWriter: java.io.StringWriter append(java.lang.CharSequence)>("----- Output from /proc/pressure/memory -----\n");

        $r4 = staticinvoke <libcore.io.IoUtils: java.lang.String readFileAsString(java.lang.String)>("/proc/pressure/memory");

        virtualinvoke $r1.<java.io.StringWriter: java.io.StringWriter append(java.lang.CharSequence)>($r4);

        virtualinvoke $r1.<java.io.StringWriter: java.io.StringWriter append(java.lang.CharSequence)>("----- End output from /proc/pressure/memory -----\n\n");

     label2:
        goto label6;

     label3:
        $r8 := @caughtexception;

        goto label7;

     label4:
        $r7 := @caughtexception;

     label5:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MemoryPressure", "Could not read /proc/pressure/memory", $r7);

     label6:
        staticinvoke <android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)>(r0);

        $r2 = virtualinvoke $r1.<java.io.StringWriter: java.lang.String toString()>();

        return $r2;

     label7:
        staticinvoke <android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)>(r0);

        throw $r8;

        catch java.io.IOException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label5 to label6 with label3;
    }

    public static void <clinit>()
    {
        <com.android.server.MemoryPressureUtil: java.lang.String TAG> = "MemoryPressure";

        <com.android.server.MemoryPressureUtil: java.lang.String FILE> = "/proc/pressure/memory";

        return;
    }
}
