public class com.android.server.MmsServiceBroker extends com.android.server.SystemService
{
    private static final android.net.Uri FAKE_MMS_DRAFT_URI;
    private static final android.net.Uri FAKE_MMS_SENT_URI;
    private static final android.net.Uri FAKE_SMS_DRAFT_URI;
    private static final android.net.Uri FAKE_SMS_SENT_URI;
    private static final android.content.ComponentName MMS_SERVICE_COMPONENT;
    private static final int MSG_TRY_CONNECTING;
    private static final long RETRY_DELAY_ON_DISCONNECTION_MS;
    private static final long SERVICE_CONNECTION_WAIT_TIME_MS;
    private static final java.lang.String TAG;
    private volatile android.app.AppOpsManager mAppOpsManager;
    private android.content.ServiceConnection mConnection;
    private final android.os.Handler mConnectionHandler;
    private android.content.Context mContext;
    private volatile android.content.pm.PackageManager mPackageManager;
    private volatile com.android.internal.telephony.IMms mService;
    private final com.android.internal.telephony.IMms mServiceStubForFailure;
    private volatile android.telephony.TelephonyManager mTelephonyManager;

    static void <clinit>()
    {
        android.content.ComponentName $r0;
        android.net.Uri $r1, $r2, $r3, $r4;

        <com.android.server.MmsServiceBroker: java.lang.String TAG> = "MmsServiceBroker";

        <com.android.server.MmsServiceBroker: long SERVICE_CONNECTION_WAIT_TIME_MS> = 4000L;

        <com.android.server.MmsServiceBroker: long RETRY_DELAY_ON_DISCONNECTION_MS> = 3000L;

        <com.android.server.MmsServiceBroker: int MSG_TRY_CONNECTING> = 1;

        $r0 = new android.content.ComponentName;

        specialinvoke $r0.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>("com.android.mms.service", "com.android.mms.service.MmsService");

        <com.android.server.MmsServiceBroker: android.content.ComponentName MMS_SERVICE_COMPONENT> = $r0;

        $r1 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>("content://sms/sent/0");

        <com.android.server.MmsServiceBroker: android.net.Uri FAKE_SMS_SENT_URI> = $r1;

        $r2 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>("content://mms/sent/0");

        <com.android.server.MmsServiceBroker: android.net.Uri FAKE_MMS_SENT_URI> = $r2;

        $r3 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>("content://sms/draft/0");

        <com.android.server.MmsServiceBroker: android.net.Uri FAKE_SMS_DRAFT_URI> = $r3;

        $r4 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>("content://mms/draft/0");

        <com.android.server.MmsServiceBroker: android.net.Uri FAKE_MMS_DRAFT_URI> = $r4;

        return;
    }

    public void <init>(android.content.Context)
    {
        com.android.server.MmsServiceBroker r0;
        android.content.Context r1;
        com.android.server.MmsServiceBroker$1 $r2;
        com.android.server.MmsServiceBroker$2 $r3;
        com.android.server.MmsServiceBroker$3 $r4;

        r0 := @this: com.android.server.MmsServiceBroker;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.android.server.SystemService: void <init>(android.content.Context)>(r1);

        r0.<com.android.server.MmsServiceBroker: android.app.AppOpsManager mAppOpsManager> = null;

        r0.<com.android.server.MmsServiceBroker: android.content.pm.PackageManager mPackageManager> = null;

        r0.<com.android.server.MmsServiceBroker: android.telephony.TelephonyManager mTelephonyManager> = null;

        $r2 = new com.android.server.MmsServiceBroker$1;

        specialinvoke $r2.<com.android.server.MmsServiceBroker$1: void <init>(com.android.server.MmsServiceBroker)>(r0);

        r0.<com.android.server.MmsServiceBroker: android.os.Handler mConnectionHandler> = $r2;

        $r3 = new com.android.server.MmsServiceBroker$2;

        specialinvoke $r3.<com.android.server.MmsServiceBroker$2: void <init>(com.android.server.MmsServiceBroker)>(r0);

        r0.<com.android.server.MmsServiceBroker: android.content.ServiceConnection mConnection> = $r3;

        $r4 = new com.android.server.MmsServiceBroker$3;

        specialinvoke $r4.<com.android.server.MmsServiceBroker$3: void <init>(com.android.server.MmsServiceBroker)>(r0);

        r0.<com.android.server.MmsServiceBroker: com.android.internal.telephony.IMms mServiceStubForFailure> = $r4;

        r0.<com.android.server.MmsServiceBroker: android.content.Context mContext> = r1;

        r0.<com.android.server.MmsServiceBroker: com.android.internal.telephony.IMms mService> = null;

        return;
    }

    static void access$000(com.android.server.MmsServiceBroker)
    {
        com.android.server.MmsServiceBroker r0;

        r0 := @parameter0: com.android.server.MmsServiceBroker;

        specialinvoke r0.<com.android.server.MmsServiceBroker: void tryConnecting()>();

        return;
    }

    static android.net.Uri access$1000()
    {
        android.net.Uri $r0;

        $r0 = <com.android.server.MmsServiceBroker: android.net.Uri FAKE_MMS_DRAFT_URI>;

        return $r0;
    }

    static com.android.internal.telephony.IMms access$102(com.android.server.MmsServiceBroker, com.android.internal.telephony.IMms)
    {
        com.android.server.MmsServiceBroker r0;
        com.android.internal.telephony.IMms r1;

        r0 := @parameter0: com.android.server.MmsServiceBroker;

        r1 := @parameter1: com.android.internal.telephony.IMms;

        r0.<com.android.server.MmsServiceBroker: com.android.internal.telephony.IMms mService> = r1;

        return r1;
    }

    static int access$1100(com.android.server.MmsServiceBroker, int)
    {
        com.android.server.MmsServiceBroker r0;
        int i0, $i1;

        r0 := @parameter0: com.android.server.MmsServiceBroker;

        i0 := @parameter1: int;

        $i1 = specialinvoke r0.<com.android.server.MmsServiceBroker: int getPhoneIdFromSubId(int)>(i0);

        return $i1;
    }

    static android.os.Handler access$200(com.android.server.MmsServiceBroker)
    {
        com.android.server.MmsServiceBroker r0;
        android.os.Handler $r1;

        r0 := @parameter0: com.android.server.MmsServiceBroker;

        $r1 = r0.<com.android.server.MmsServiceBroker: android.os.Handler mConnectionHandler>;

        return $r1;
    }

    static android.content.Context access$300(com.android.server.MmsServiceBroker)
    {
        com.android.server.MmsServiceBroker r0;
        android.content.Context $r1;

        r0 := @parameter0: com.android.server.MmsServiceBroker;

        $r1 = r0.<com.android.server.MmsServiceBroker: android.content.Context mContext>;

        return $r1;
    }

    static android.app.AppOpsManager access$500(com.android.server.MmsServiceBroker)
    {
        com.android.server.MmsServiceBroker r0;
        android.app.AppOpsManager $r1;

        r0 := @parameter0: com.android.server.MmsServiceBroker;

        $r1 = specialinvoke r0.<com.android.server.MmsServiceBroker: android.app.AppOpsManager getAppOpsManager()>();

        return $r1;
    }

    static com.android.internal.telephony.IMms access$600(com.android.server.MmsServiceBroker)
    {
        com.android.server.MmsServiceBroker r0;
        com.android.internal.telephony.IMms $r1;

        r0 := @parameter0: com.android.server.MmsServiceBroker;

        $r1 = specialinvoke r0.<com.android.server.MmsServiceBroker: com.android.internal.telephony.IMms getServiceGuarded()>();

        return $r1;
    }

    static android.net.Uri access$700()
    {
        android.net.Uri $r0;

        $r0 = <com.android.server.MmsServiceBroker: android.net.Uri FAKE_SMS_SENT_URI>;

        return $r0;
    }

    static android.net.Uri access$800()
    {
        android.net.Uri $r0;

        $r0 = <com.android.server.MmsServiceBroker: android.net.Uri FAKE_MMS_SENT_URI>;

        return $r0;
    }

    static android.net.Uri access$900()
    {
        android.net.Uri $r0;

        $r0 = <com.android.server.MmsServiceBroker: android.net.Uri FAKE_SMS_DRAFT_URI>;

        return $r0;
    }

    private android.app.AppOpsManager getAppOpsManager()
    {
        com.android.server.MmsServiceBroker r0;
        android.app.AppOpsManager $r1, $r2, $r5;
        android.content.Context $r3;
        java.lang.Object $r4;

        r0 := @this: com.android.server.MmsServiceBroker;

        $r1 = r0.<com.android.server.MmsServiceBroker: android.app.AppOpsManager mAppOpsManager>;

        if $r1 != null goto label1;

        $r3 = r0.<com.android.server.MmsServiceBroker: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("appops");

        $r5 = (android.app.AppOpsManager) $r4;

        r0.<com.android.server.MmsServiceBroker: android.app.AppOpsManager mAppOpsManager> = $r5;

     label1:
        $r2 = r0.<com.android.server.MmsServiceBroker: android.app.AppOpsManager mAppOpsManager>;

        return $r2;
    }

    private java.lang.String getCallingPackageName()
    {
        com.android.server.MmsServiceBroker r0;
        java.lang.String[] r1;
        android.content.pm.PackageManager $r2;
        int $i0, $i1;
        java.lang.String $r3;

        r0 := @this: com.android.server.MmsServiceBroker;

        $r2 = specialinvoke r0.<com.android.server.MmsServiceBroker: android.content.pm.PackageManager getPackageManager()>();

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        r1 = virtualinvoke $r2.<android.content.pm.PackageManager: java.lang.String[] getPackagesForUid(int)>($i0);

        if r1 == null goto label1;

        $i1 = lengthof r1;

        if $i1 <= 0 goto label1;

        $r3 = r1[0];

        return $r3;

     label1:
        return "unknown";
    }

    private com.android.internal.telephony.IMms getOrConnectService()
    {
        com.android.server.MmsServiceBroker r0;
        long l0, $l4, $l5, l7;
        com.android.internal.telephony.IMms $r1, $r5, r8, r10;
        android.os.Handler $r2, $r3;
        android.os.Message $r4;
        byte $b2;
        java.lang.Throwable $r6, $r7;

        r0 := @this: com.android.server.MmsServiceBroker;

        entermonitor r0;

     label01:
        $r1 = r0.<com.android.server.MmsServiceBroker: com.android.internal.telephony.IMms mService>;

        if $r1 == null goto label03;

        r8 = r0.<com.android.server.MmsServiceBroker: com.android.internal.telephony.IMms mService>;

        exitmonitor r0;

     label02:
        return r8;

     label03:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("MmsServiceBroker", "MmsService not connected. Try connecting...");

        $r3 = r0.<com.android.server.MmsServiceBroker: android.os.Handler mConnectionHandler>;

        $r2 = r0.<com.android.server.MmsServiceBroker: android.os.Handler mConnectionHandler>;

        $r4 = virtualinvoke $r2.<android.os.Handler: android.os.Message obtainMessage(int)>(1);

        virtualinvoke $r3.<android.os.Handler: boolean sendMessage(android.os.Message)>($r4);

        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

     label04:
        l7 = 4000L;

     label05:
        $b2 = l7 cmp 0L;

        if $b2 <= 0 goto label14;

     label06:
        virtualinvoke r0.<java.lang.Object: void wait(long)>(l7);

     label07:
        goto label10;

     label08:
        $r7 := @caughtexception;

     label09:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MmsServiceBroker", "Connection wait interrupted", $r7);

     label10:
        $r5 = r0.<com.android.server.MmsServiceBroker: com.android.internal.telephony.IMms mService>;

        if $r5 == null goto label12;

        r10 = r0.<com.android.server.MmsServiceBroker: com.android.internal.telephony.IMms mService>;

        exitmonitor r0;

     label11:
        return r10;

     label12:
        $l4 = l0 + 4000L;

        $l5 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l7 = $l4 - $l5;

     label13:
        goto label05;

     label14:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("MmsServiceBroker", "Can not connect to MmsService (timed out)");

        exitmonitor r0;

     label15:
        return null;

     label16:
        $r6 := @caughtexception;

     label17:
        exitmonitor r0;

     label18:
        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label16;
        catch java.lang.Throwable from label03 to label04 with label16;
        catch java.lang.InterruptedException from label06 to label07 with label08;
        catch java.lang.Throwable from label06 to label07 with label16;
        catch java.lang.Throwable from label09 to label10 with label16;
        catch java.lang.Throwable from label10 to label11 with label16;
        catch java.lang.Throwable from label12 to label13 with label16;
        catch java.lang.Throwable from label14 to label15 with label16;
        catch java.lang.Throwable from label17 to label18 with label16;
    }

    private android.content.pm.PackageManager getPackageManager()
    {
        com.android.server.MmsServiceBroker r0;
        android.content.pm.PackageManager $r1, $r2, $r4;
        android.content.Context $r3;

        r0 := @this: com.android.server.MmsServiceBroker;

        $r1 = r0.<com.android.server.MmsServiceBroker: android.content.pm.PackageManager mPackageManager>;

        if $r1 != null goto label1;

        $r3 = r0.<com.android.server.MmsServiceBroker: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r0.<com.android.server.MmsServiceBroker: android.content.pm.PackageManager mPackageManager> = $r4;

     label1:
        $r2 = r0.<com.android.server.MmsServiceBroker: android.content.pm.PackageManager mPackageManager>;

        return $r2;
    }

    private int getPhoneIdFromSubId(int)
    {
        com.android.server.MmsServiceBroker r0;
        int i0, $i1;
        android.content.Context $r1;
        java.lang.Object $r2;
        android.telephony.SubscriptionManager r3;
        android.telephony.SubscriptionInfo r4;

        r0 := @this: com.android.server.MmsServiceBroker;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.MmsServiceBroker: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("telephony_subscription_service");

        r3 = (android.telephony.SubscriptionManager) $r2;

        if r3 != null goto label1;

        return -1;

     label1:
        r4 = virtualinvoke r3.<android.telephony.SubscriptionManager: android.telephony.SubscriptionInfo getActiveSubscriptionInfo(int)>(i0);

        if r4 != null goto label2;

        return -1;

     label2:
        $i1 = virtualinvoke r4.<android.telephony.SubscriptionInfo: int getSimSlotIndex()>();

        return $i1;
    }

    private com.android.internal.telephony.IMms getServiceGuarded()
    {
        com.android.server.MmsServiceBroker r0;
        com.android.internal.telephony.IMms r1, $r2;

        r0 := @this: com.android.server.MmsServiceBroker;

        r1 = specialinvoke r0.<com.android.server.MmsServiceBroker: com.android.internal.telephony.IMms getOrConnectService()>();

        if r1 == null goto label1;

        return r1;

     label1:
        $r2 = r0.<com.android.server.MmsServiceBroker: com.android.internal.telephony.IMms mServiceStubForFailure>;

        return $r2;
    }

    private android.telephony.TelephonyManager getTelephonyManager()
    {
        com.android.server.MmsServiceBroker r0;
        android.telephony.TelephonyManager $r1, $r2, $r5;
        android.content.Context $r3;
        java.lang.Object $r4;

        r0 := @this: com.android.server.MmsServiceBroker;

        $r1 = r0.<com.android.server.MmsServiceBroker: android.telephony.TelephonyManager mTelephonyManager>;

        if $r1 != null goto label1;

        $r3 = r0.<com.android.server.MmsServiceBroker: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("phone");

        $r5 = (android.telephony.TelephonyManager) $r4;

        r0.<com.android.server.MmsServiceBroker: android.telephony.TelephonyManager mTelephonyManager> = $r5;

     label1:
        $r2 = r0.<com.android.server.MmsServiceBroker: android.telephony.TelephonyManager mTelephonyManager>;

        return $r2;
    }

    private void tryConnecting()
    {
        com.android.server.MmsServiceBroker r0;
        com.android.internal.telephony.IMms $r1;
        android.content.ComponentName $r2;
        android.content.ServiceConnection $r4;
        android.content.Context $r5;
        boolean $z0;
        java.lang.Throwable $r6, $r7;
        android.content.Intent r8;

        r0 := @this: com.android.server.MmsServiceBroker;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("MmsServiceBroker", "Connecting to MmsService");

        entermonitor r0;

     label01:
        $r1 = r0.<com.android.server.MmsServiceBroker: com.android.internal.telephony.IMms mService>;

        if $r1 == null goto label03;

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("MmsServiceBroker", "Already connected");

        exitmonitor r0;

     label02:
        return;

     label03:
        r8 = new android.content.Intent;

        specialinvoke r8.<android.content.Intent: void <init>()>();

        $r2 = <com.android.server.MmsServiceBroker: android.content.ComponentName MMS_SERVICE_COMPONENT>;

        virtualinvoke r8.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>($r2);

     label04:
        $r5 = r0.<com.android.server.MmsServiceBroker: android.content.Context mContext>;

        $r4 = r0.<com.android.server.MmsServiceBroker: android.content.ServiceConnection mConnection>;

        $z0 = virtualinvoke $r5.<android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)>(r8, $r4, 1);

        if $z0 != 0 goto label05;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("MmsServiceBroker", "Failed to bind to MmsService");

     label05:
        goto label08;

     label06:
        $r6 := @caughtexception;

     label07:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MmsServiceBroker", "Forbidden to bind to MmsService", $r6);

     label08:
        exitmonitor r0;

     label09:
        return;

     label10:
        $r7 := @caughtexception;

     label11:
        exitmonitor r0;

     label12:
        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.SecurityException from label04 to label05 with label06;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public void onStart()
    {
        com.android.server.MmsServiceBroker r0;
        com.android.server.MmsServiceBroker$BinderService $r1;

        r0 := @this: com.android.server.MmsServiceBroker;

        $r1 = new com.android.server.MmsServiceBroker$BinderService;

        specialinvoke $r1.<com.android.server.MmsServiceBroker$BinderService: void <init>(com.android.server.MmsServiceBroker,com.android.server.MmsServiceBroker$1)>(r0, null);

        virtualinvoke r0.<com.android.server.MmsServiceBroker: void publishBinderService(java.lang.String,android.os.IBinder)>("imms", $r1);

        return;
    }

    public void systemRunning()
    {
        com.android.server.MmsServiceBroker r0;

        r0 := @this: com.android.server.MmsServiceBroker;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("MmsServiceBroker", "Delay connecting to MmsService until an API is called");

        return;
    }
}
