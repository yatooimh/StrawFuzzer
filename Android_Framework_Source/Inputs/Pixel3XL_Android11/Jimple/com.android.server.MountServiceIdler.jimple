public class com.android.server.MountServiceIdler extends android.app.job.JobService
{
    private static int MOUNT_JOB_ID;
    private static final java.lang.String TAG;
    private static android.content.ComponentName sIdleService;
    private java.lang.Runnable mFinishCallback;
    private android.app.job.JobParameters mJobParams;
    private boolean mStarted;

    static void <clinit>()
    {
        android.content.ComponentName $r0;
        java.lang.Class $r1;
        java.lang.String $r2;

        <com.android.server.MountServiceIdler: java.lang.String TAG> = "MountServiceIdler";

        <com.android.server.MountServiceIdler: int MOUNT_JOB_ID> = 0;

        $r0 = new android.content.ComponentName;

        $r1 = class "Lcom/android/server/MountServiceIdler;";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        specialinvoke $r0.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>("android", $r2);

        <com.android.server.MountServiceIdler: android.content.ComponentName sIdleService> = $r0;

        <com.android.server.MountServiceIdler: int MOUNT_JOB_ID> = 808;

        return;
    }

    public void <init>()
    {
        com.android.server.MountServiceIdler r0;
        com.android.server.MountServiceIdler$1 $r1;

        r0 := @this: com.android.server.MountServiceIdler;

        specialinvoke r0.<android.app.job.JobService: void <init>()>();

        $r1 = new com.android.server.MountServiceIdler$1;

        specialinvoke $r1.<com.android.server.MountServiceIdler$1: void <init>(com.android.server.MountServiceIdler)>(r0);

        r0.<com.android.server.MountServiceIdler: java.lang.Runnable mFinishCallback> = $r1;

        return;
    }

    static java.lang.Runnable access$000(com.android.server.MountServiceIdler)
    {
        com.android.server.MountServiceIdler r0;
        java.lang.Runnable $r1;

        r0 := @parameter0: com.android.server.MountServiceIdler;

        $r1 = r0.<com.android.server.MountServiceIdler: java.lang.Runnable mFinishCallback>;

        return $r1;
    }

    static boolean access$100(com.android.server.MountServiceIdler)
    {
        com.android.server.MountServiceIdler r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.MountServiceIdler;

        $z0 = r0.<com.android.server.MountServiceIdler: boolean mStarted>;

        return $z0;
    }

    static boolean access$102(com.android.server.MountServiceIdler, boolean)
    {
        com.android.server.MountServiceIdler r0;
        boolean z0;

        r0 := @parameter0: com.android.server.MountServiceIdler;

        z0 := @parameter1: boolean;

        r0.<com.android.server.MountServiceIdler: boolean mStarted> = z0;

        return z0;
    }

    static android.app.job.JobParameters access$200(com.android.server.MountServiceIdler)
    {
        com.android.server.MountServiceIdler r0;
        android.app.job.JobParameters $r1;

        r0 := @parameter0: com.android.server.MountServiceIdler;

        $r1 = r0.<com.android.server.MountServiceIdler: android.app.job.JobParameters mJobParams>;

        return $r1;
    }

    private static java.util.Calendar offsetFromTodayMidnight(int, int)
    {
        int i0, i1;
        java.util.Calendar r0;
        long $l2;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        virtualinvoke r0.<java.util.Calendar: void setTimeInMillis(long)>($l2);

        virtualinvoke r0.<java.util.Calendar: void set(int,int)>(11, i1);

        virtualinvoke r0.<java.util.Calendar: void set(int,int)>(12, 0);

        virtualinvoke r0.<java.util.Calendar: void set(int,int)>(13, 0);

        virtualinvoke r0.<java.util.Calendar: void set(int,int)>(14, 0);

        virtualinvoke r0.<java.util.Calendar: void add(int,int)>(5, i0);

        return r0;
    }

    public static void scheduleIdlePass(android.content.Context)
    {
        android.app.job.JobScheduler r0;
        long l0, l1, $l2, $l4, $l6, l8, l9;
        java.lang.Object $r1;
        java.util.Calendar $r2, $r3, $r4;
        byte $b3, $b7;
        java.util.concurrent.TimeUnit $r8;
        android.content.Context r9;
        android.app.job.JobInfo$Builder $r10;
        int $i10;
        android.content.ComponentName $r11;
        android.app.job.JobInfo $r13;

        r9 := @parameter0: android.content.Context;

        $r1 = virtualinvoke r9.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("jobscheduler");

        r0 = (android.app.job.JobScheduler) $r1;

        $r2 = staticinvoke <com.android.server.MountServiceIdler: java.util.Calendar offsetFromTodayMidnight(int,int)>(0, 3);

        l8 = virtualinvoke $r2.<java.util.Calendar: long getTimeInMillis()>();

        $r3 = staticinvoke <com.android.server.MountServiceIdler: java.util.Calendar offsetFromTodayMidnight(int,int)>(0, 4);

        l0 = virtualinvoke $r3.<java.util.Calendar: long getTimeInMillis()>();

        $r4 = staticinvoke <com.android.server.MountServiceIdler: java.util.Calendar offsetFromTodayMidnight(int,int)>(1, 3);

        l1 = virtualinvoke $r4.<java.util.Calendar: long getTimeInMillis()>();

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $b3 = $l2 cmp l8;

        if $b3 <= 0 goto label1;

        $l6 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $b7 = $l6 cmp l0;

        if $b7 >= 0 goto label1;

        $r8 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        l9 = virtualinvoke $r8.<java.util.concurrent.TimeUnit: long toMillis(long)>(10L);

        goto label2;

     label1:
        $l4 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l9 = l1 - $l4;

     label2:
        $r10 = new android.app.job.JobInfo$Builder;

        $i10 = <com.android.server.MountServiceIdler: int MOUNT_JOB_ID>;

        $r11 = <com.android.server.MountServiceIdler: android.content.ComponentName sIdleService>;

        specialinvoke $r10.<android.app.job.JobInfo$Builder: void <init>(int,android.content.ComponentName)>($i10, $r11);

        virtualinvoke $r10.<android.app.job.JobInfo$Builder: android.app.job.JobInfo$Builder setRequiresDeviceIdle(boolean)>(1);

        virtualinvoke $r10.<android.app.job.JobInfo$Builder: android.app.job.JobInfo$Builder setRequiresBatteryNotLow(boolean)>(1);

        virtualinvoke $r10.<android.app.job.JobInfo$Builder: android.app.job.JobInfo$Builder setMinimumLatency(long)>(l9);

        $r13 = virtualinvoke $r10.<android.app.job.JobInfo$Builder: android.app.job.JobInfo build()>();

        virtualinvoke r0.<android.app.job.JobScheduler: int schedule(android.app.job.JobInfo)>($r13);

        return;
    }

    public boolean onStartJob(android.app.job.JobParameters)
    {
        com.android.server.MountServiceIdler r0;
        android.app.IActivityManager $r1;
        java.lang.Runnable $r2, r8;
        java.lang.Throwable $r3;
        android.os.RemoteException $r4;
        android.app.job.JobParameters r5;
        com.android.server.StorageManagerService r7;
        boolean z0;

        r0 := @this: com.android.server.MountServiceIdler;

        r5 := @parameter0: android.app.job.JobParameters;

     label01:
        $r1 = staticinvoke <android.app.ActivityManager: android.app.IActivityManager getService()>();

        interfaceinvoke $r1.<android.app.IActivityManager: void performIdleMaintenance()>();

     label02:
        goto label04;

     label03:
        $r4 := @caughtexception;

     label04:
        r0.<com.android.server.MountServiceIdler: android.app.job.JobParameters mJobParams> = r5;

        r7 = <com.android.server.StorageManagerService: com.android.server.StorageManagerService sSelf>;

        z0 = 1;

        if r7 == null goto label10;

        r8 = r0.<com.android.server.MountServiceIdler: java.lang.Runnable mFinishCallback>;

        entermonitor r8;

     label05:
        r0.<com.android.server.MountServiceIdler: boolean mStarted> = 1;

        exitmonitor r8;

     label06:
        $r2 = r0.<com.android.server.MountServiceIdler: java.lang.Runnable mFinishCallback>;

        virtualinvoke r7.<com.android.server.StorageManagerService: void runIdleMaint(java.lang.Runnable)>($r2);

        goto label10;

     label07:
        $r3 := @caughtexception;

     label08:
        exitmonitor r8;

     label09:
        throw $r3;

     label10:
        if r7 == null goto label11;

        goto label12;

     label11:
        z0 = 0;

     label12:
        return z0;

        catch android.os.RemoteException from label01 to label02 with label03;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label08 to label09 with label07;
    }

    public boolean onStopJob(android.app.job.JobParameters)
    {
        com.android.server.MountServiceIdler r0;
        java.lang.Runnable r1, $r2;
        java.lang.Throwable $r3;
        android.app.job.JobParameters r4;
        com.android.server.StorageManagerService r5;

        r0 := @this: com.android.server.MountServiceIdler;

        r4 := @parameter0: android.app.job.JobParameters;

        r5 = <com.android.server.StorageManagerService: com.android.server.StorageManagerService sSelf>;

        if r5 == null goto label6;

        $r2 = r0.<com.android.server.MountServiceIdler: java.lang.Runnable mFinishCallback>;

        virtualinvoke r5.<com.android.server.StorageManagerService: void abortIdleMaint(java.lang.Runnable)>($r2);

        r1 = r0.<com.android.server.MountServiceIdler: java.lang.Runnable mFinishCallback>;

        entermonitor r1;

     label1:
        r0.<com.android.server.MountServiceIdler: boolean mStarted> = 0;

        exitmonitor r1;

     label2:
        goto label6;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

     label6:
        return 0;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }
}
