final class com.android.server.NativeDaemonConnector extends java.lang.Object implements java.lang.Runnable, android.os.Handler$Callback, com.android.server.Watchdog$Monitor
{
    private static final long DEFAULT_TIMEOUT;
    private static final boolean VDBG;
    private static final long WARN_EXECUTE_DELAY_MS;
    private final int BUFFER_SIZE;
    private final java.lang.String TAG;
    private android.os.Handler mCallbackHandler;
    private com.android.server.INativeDaemonConnectorCallbacks mCallbacks;
    private final java.lang.Object mDaemonLock;
    private volatile boolean mDebug;
    private android.util.LocalLog mLocalLog;
    private final android.os.Looper mLooper;
    private java.io.OutputStream mOutputStream;
    private final com.android.server.NativeDaemonConnector$ResponseQueue mResponseQueue;
    private java.util.concurrent.atomic.AtomicInteger mSequenceNumber;
    private java.lang.String mSocket;
    private final android.os.PowerManager$WakeLock mWakeLock;
    private volatile java.lang.Object mWarnIfHeld;

    void <init>(com.android.server.INativeDaemonConnectorCallbacks, java.lang.String, int, java.lang.String, int, android.os.PowerManager$WakeLock)
    {
        com.android.server.NativeDaemonConnector r0;
        com.android.server.INativeDaemonConnectorCallbacks r1;
        java.lang.String r2, r3;
        int i0, i1;
        android.os.PowerManager$WakeLock r4;
        com.android.server.FgThread $r5;
        android.os.Looper $r6;

        r0 := @this: com.android.server.NativeDaemonConnector;

        r1 := @parameter0: com.android.server.INativeDaemonConnectorCallbacks;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 := @parameter3: java.lang.String;

        i1 := @parameter4: int;

        r4 := @parameter5: android.os.PowerManager$WakeLock;

        $r5 = staticinvoke <com.android.server.FgThread: com.android.server.FgThread get()>();

        $r6 = virtualinvoke $r5.<com.android.server.FgThread: android.os.Looper getLooper()>();

        specialinvoke r0.<com.android.server.NativeDaemonConnector: void <init>(com.android.server.INativeDaemonConnectorCallbacks,java.lang.String,int,java.lang.String,int,android.os.PowerManager$WakeLock,android.os.Looper)>(r1, r2, i0, r3, i1, r4, $r6);

        return;
    }

    void <init>(com.android.server.INativeDaemonConnectorCallbacks, java.lang.String, int, java.lang.String, int, android.os.PowerManager$WakeLock, android.os.Looper)
    {
        com.android.server.NativeDaemonConnector r0;
        com.android.server.INativeDaemonConnectorCallbacks r1;
        java.lang.String r2, r9;
        int i0, i1;
        android.os.PowerManager$WakeLock r3;
        android.os.Looper r4;
        java.lang.Object $r5;
        com.android.server.NativeDaemonConnector$ResponseQueue $r6;
        java.util.concurrent.atomic.AtomicInteger $r7;
        android.util.LocalLog $r8;

        r0 := @this: com.android.server.NativeDaemonConnector;

        r1 := @parameter0: com.android.server.INativeDaemonConnectorCallbacks;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r9 := @parameter3: java.lang.String;

        i1 := @parameter4: int;

        r3 := @parameter5: android.os.PowerManager$WakeLock;

        r4 := @parameter6: android.os.Looper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.NativeDaemonConnector: boolean mDebug> = 0;

        $r5 = new java.lang.Object;

        specialinvoke $r5.<java.lang.Object: void <init>()>();

        r0.<com.android.server.NativeDaemonConnector: java.lang.Object mDaemonLock> = $r5;

        r0.<com.android.server.NativeDaemonConnector: int BUFFER_SIZE> = 4096;

        r0.<com.android.server.NativeDaemonConnector: com.android.server.INativeDaemonConnectorCallbacks mCallbacks> = r1;

        r0.<com.android.server.NativeDaemonConnector: java.lang.String mSocket> = r2;

        $r6 = new com.android.server.NativeDaemonConnector$ResponseQueue;

        specialinvoke $r6.<com.android.server.NativeDaemonConnector$ResponseQueue: void <init>(int)>(i0);

        r0.<com.android.server.NativeDaemonConnector: com.android.server.NativeDaemonConnector$ResponseQueue mResponseQueue> = $r6;

        r0.<com.android.server.NativeDaemonConnector: android.os.PowerManager$WakeLock mWakeLock> = r3;

        if r3 == null goto label1;

        virtualinvoke r3.<android.os.PowerManager$WakeLock: void setReferenceCounted(boolean)>(1);

     label1:
        r0.<com.android.server.NativeDaemonConnector: android.os.Looper mLooper> = r4;

        $r7 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r7.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>(0);

        r0.<com.android.server.NativeDaemonConnector: java.util.concurrent.atomic.AtomicInteger mSequenceNumber> = $r7;

        if r9 == null goto label2;

        goto label3;

     label2:
        r9 = "NativeDaemonConnector";

     label3:
        r0.<com.android.server.NativeDaemonConnector: java.lang.String TAG> = r9;

        $r8 = new android.util.LocalLog;

        specialinvoke $r8.<android.util.LocalLog: void <init>(int)>(i1);

        r0.<com.android.server.NativeDaemonConnector: android.util.LocalLog mLocalLog> = $r8;

        return;
    }

    static void appendEscaped(java.lang.StringBuilder, java.lang.String)
    {
        java.lang.StringBuilder r0;
        java.lang.String r1;
        int i0, $i2, i3;
        char c1;
        boolean z0;

        r0 := @parameter0: java.lang.StringBuilder;

        r1 := @parameter1: java.lang.String;

        $i2 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(32);

        if $i2 < 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        if z0 == 0 goto label3;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

     label3:
        i0 = virtualinvoke r1.<java.lang.String: int length()>();

        i3 = 0;

     label4:
        if i3 >= i0 goto label8;

        c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i3);

        if c1 != 34 goto label5;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\\"");

        goto label7;

     label5:
        if c1 != 92 goto label6;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\\\");

        goto label7;

     label6:
        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c1);

     label7:
        i3 = i3 + 1;

        goto label4;

     label8:
        if z0 == 0 goto label9;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

     label9:
        return;
    }

    private android.net.LocalSocketAddress determineSocketAddress()
    {
        com.android.server.NativeDaemonConnector r0;
        java.lang.String $r1, $r4, $r6;
        boolean $z0, $z1;
        android.net.LocalSocketAddress $r2, $r5;
        android.net.LocalSocketAddress$Namespace $r3;

        r0 := @this: com.android.server.NativeDaemonConnector;

        $r1 = r0.<com.android.server.NativeDaemonConnector: java.lang.String mSocket>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("__test__");

        if $z0 == 0 goto label1;

        $z1 = <android.os.Build: boolean IS_DEBUGGABLE>;

        if $z1 == 0 goto label1;

        $r5 = new android.net.LocalSocketAddress;

        $r6 = r0.<com.android.server.NativeDaemonConnector: java.lang.String mSocket>;

        specialinvoke $r5.<android.net.LocalSocketAddress: void <init>(java.lang.String)>($r6);

        return $r5;

     label1:
        $r2 = new android.net.LocalSocketAddress;

        $r4 = r0.<com.android.server.NativeDaemonConnector: java.lang.String mSocket>;

        $r3 = <android.net.LocalSocketAddress$Namespace: android.net.LocalSocketAddress$Namespace RESERVED>;

        specialinvoke $r2.<android.net.LocalSocketAddress: void <init>(java.lang.String,android.net.LocalSocketAddress$Namespace)>($r4, $r3);

        return $r2;
    }

    private static boolean isShuttingDown()
    {
        java.lang.String r0;
        int $i0;
        boolean z0;

        r0 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String,java.lang.String)>("sys.shutdown.requested", "");

        if r0 == null goto label1;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private void listenToSocket() throws java.io.IOException
    {
        com.android.server.NativeDaemonConnector r0;
        java.io.FileDescriptor[] r1;
        int i0, $i1, $i3, $i4, $i5, i6, i7, i8, i9, i10, i11, i12;
        boolean z0, $z1, z2, z3, z4, z5, z6, z7, $z8;
        android.net.LocalSocketAddress $r2;
        java.io.OutputStream $r3, $r14, $r31, r55, r84;
        com.android.server.INativeDaemonConnectorCallbacks $r4, $r8;
        byte $b2;
        java.nio.charset.Charset $r5;
        java.lang.String $r6, $r11, $r12, $r13, $r18, $r23, $r25, $r29, $r30, $r44, r62, r68, $r74, $r82;
        com.android.server.NativeDaemonConnector$ResponseQueue $r7;
        android.os.PowerManager$WakeLock $r9, $r10, $r34, r72;
        java.lang.Throwable $r15, $r16, $r17, $r19, $r20, $r21, $r24, $r26, $r27, $r28, $r32, $r33, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, r65, r66, r75, r76, r79;
        java.lang.StringBuilder $r22, $r43, r53, r56, r58, r64, r73, r81, r85, r87;
        android.net.LocalSocket r45, r46, r47, r48, r49, r71, r78;
        java.io.InputStream r50;
        java.lang.Object r51, r54, r83;
        byte[] r52;
        com.android.server.NativeDaemonEvent r63;
        android.os.Handler r67, $r70;
        android.os.Message r69;

        r0 := @this: com.android.server.NativeDaemonConnector;

        r45 = null;

        r46 = null;

     label001:
        r47 = new android.net.LocalSocket;

     label002:
        r45 = null;

        r46 = null;

     label003:
        specialinvoke r47.<android.net.LocalSocket: void <init>()>();

     label004:
        r48 = r47;

        r49 = r47;

     label005:
        $r2 = specialinvoke r0.<com.android.server.NativeDaemonConnector: android.net.LocalSocketAddress determineSocketAddress()>();

        virtualinvoke r47.<android.net.LocalSocket: void connect(android.net.LocalSocketAddress)>($r2);

     label006:
        r48 = r47;

        r49 = r47;

     label007:
        r50 = virtualinvoke r47.<android.net.LocalSocket: java.io.InputStream getInputStream()>();

     label008:
        r48 = r47;

        r49 = r47;

     label009:
        r51 = r0.<com.android.server.NativeDaemonConnector: java.lang.Object mDaemonLock>;

     label010:
        r48 = r47;

        r49 = r47;

     label011:
        entermonitor r51;

     label012:
        $r3 = virtualinvoke r47.<android.net.LocalSocket: java.io.OutputStream getOutputStream()>();

        r0.<com.android.server.NativeDaemonConnector: java.io.OutputStream mOutputStream> = $r3;

        exitmonitor r51;

     label013:
        r48 = r47;

        r49 = r47;

     label014:
        $r4 = r0.<com.android.server.NativeDaemonConnector: com.android.server.INativeDaemonConnectorCallbacks mCallbacks>;

        interfaceinvoke $r4.<com.android.server.INativeDaemonConnectorCallbacks: void onDaemonConnected()>();

     label015:
        r48 = r47;

        r49 = r47;

     label016:
        r52 = newarray (byte)[4096];

     label017:
        i6 = 0;

     label018:
        r48 = r47;

        r49 = r47;

     label019:
        $i1 = 4096 - i6;

        i7 = virtualinvoke r50.<java.io.InputStream: int read(byte[],int,int)>(r52, i6, $i1);

     label020:
        if i7 >= 0 goto label050;

        r45 = r47;

        r46 = r47;

     label021:
        r53 = new java.lang.StringBuilder;

     label022:
        r45 = r47;

        r46 = r47;

     label023:
        specialinvoke r53.<java.lang.StringBuilder: void <init>()>();

     label024:
        r45 = r47;

        r46 = r47;

     label025:
        virtualinvoke r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("got ");

     label026:
        r45 = r47;

        r46 = r47;

     label027:
        virtualinvoke r53.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i7);

     label028:
        r45 = r47;

        r46 = r47;

     label029:
        virtualinvoke r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" reading with start = ");

     label030:
        r45 = r47;

        r46 = r47;

     label031:
        virtualinvoke r53.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6);

     label032:
        r45 = r47;

        r46 = r47;

     label033:
        $r11 = virtualinvoke r53.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.NativeDaemonConnector: void loge(java.lang.String)>($r11);

     label034:
        r54 = r0.<com.android.server.NativeDaemonConnector: java.lang.Object mDaemonLock>;

        entermonitor r54;

     label035:
        r55 = r0.<com.android.server.NativeDaemonConnector: java.io.OutputStream mOutputStream>;

     label036:
        if r55 == null goto label042;

     label037:
        r56 = new java.lang.StringBuilder;

        specialinvoke r56.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("closing stream for ");

        $r12 = r0.<com.android.server.NativeDaemonConnector: java.lang.String mSocket>;

        virtualinvoke r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r13 = virtualinvoke r56.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.NativeDaemonConnector: void loge(java.lang.String)>($r13);

        $r14 = r0.<com.android.server.NativeDaemonConnector: java.io.OutputStream mOutputStream>;

        virtualinvoke $r14.<java.io.OutputStream: void close()>();

     label038:
        goto label041;

     label039:
        $r17 := @caughtexception;

     label040:
        r58 = new java.lang.StringBuilder;

        specialinvoke r58.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed closing output stream: ");

        virtualinvoke r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);

        $r18 = virtualinvoke r58.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.NativeDaemonConnector: void loge(java.lang.String)>($r18);

     label041:
        r0.<com.android.server.NativeDaemonConnector: java.io.OutputStream mOutputStream> = null;

     label042:
        exitmonitor r54;

     label043:
        virtualinvoke r47.<android.net.LocalSocket: void close()>();

     label044:
        goto label046;

     label045:
        $r21 := @caughtexception;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed closing socket: ");

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.NativeDaemonConnector: void loge(java.lang.String)>($r23);

     label046:
        return;

     label047:
        $r32 := @caughtexception;

     label048:
        exitmonitor r54;

     label049:
        throw $r32;

     label050:
        r48 = r47;

        r49 = r47;

     label051:
        r1 = virtualinvoke r47.<android.net.LocalSocket: java.io.FileDescriptor[] getAncillaryFileDescriptors()>();

     label052:
        i0 = i7 + i6;

        i8 = 0;

        i9 = 0;

     label053:
        if i8 >= i0 goto label124;

        $b2 = r52[i8];

        if $b2 != 0 goto label123;

        r48 = r47;

        r49 = r47;

     label054:
        r62 = new java.lang.String;

     label055:
        r48 = r47;

        r49 = r47;

     label056:
        $i3 = i8 - i9;

        $r5 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        specialinvoke r62.<java.lang.String: void <init>(byte[],int,int,java.nio.charset.Charset)>(r52, i9, $i3, $r5);

     label057:
        z2 = 0;

        z3 = 0;

        z4 = 0;

     label058:
        r63 = staticinvoke <com.android.server.NativeDaemonEvent: com.android.server.NativeDaemonEvent parseRawEvent(java.lang.String,java.io.FileDescriptor[])>(r62, r1);

     label059:
        z3 = 0;

        z4 = 0;

     label060:
        r64 = new java.lang.StringBuilder;

     label061:
        z3 = 0;

        z4 = 0;

     label062:
        specialinvoke r64.<java.lang.StringBuilder: void <init>()>();

     label063:
        z3 = 0;

        z4 = 0;

     label064:
        virtualinvoke r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RCV <- {");

     label065:
        z3 = 0;

        z4 = 0;

     label066:
        virtualinvoke r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r63);

     label067:
        z3 = 0;

        z4 = 0;

     label068:
        virtualinvoke r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

     label069:
        z3 = 0;

        z4 = 0;

     label070:
        $r6 = virtualinvoke r64.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.NativeDaemonConnector: void log(java.lang.String)>($r6);

     label071:
        z3 = 0;

        z4 = 0;

     label072:
        $z1 = virtualinvoke r63.<com.android.server.NativeDaemonEvent: boolean isClassUnsolicited()>();

        if $z1 == 0 goto label094;

     label073:
        z3 = 0;

        z4 = 0;

     label074:
        $r8 = r0.<com.android.server.NativeDaemonConnector: com.android.server.INativeDaemonConnectorCallbacks mCallbacks>;

        $i5 = virtualinvoke r63.<com.android.server.NativeDaemonEvent: int getCode()>();

        z0 = interfaceinvoke $r8.<com.android.server.INativeDaemonConnectorCallbacks: boolean onCheckHoldWakeLock(int)>($i5);

     label075:
        z5 = 0;

        if z0 == 0 goto label080;

        z5 = 0;

     label076:
        $r9 = r0.<com.android.server.NativeDaemonConnector: android.os.PowerManager$WakeLock mWakeLock>;

        if $r9 == null goto label080;

        $r10 = r0.<com.android.server.NativeDaemonConnector: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r10.<android.os.PowerManager$WakeLock: void acquire()>();

     label077:
        z5 = 1;

        goto label080;

     label078:
        $r33 := @caughtexception;

        r65 = $r33;

        z3 = 0;

        goto label119;

     label079:
        $r16 := @caughtexception;

        r66 = $r16;

        z6 = 0;

        goto label104;

     label080:
        z3 = z5;

        z4 = z5;

     label081:
        r67 = r0.<com.android.server.NativeDaemonConnector: android.os.Handler mCallbackHandler>;

     label082:
        z3 = z5;

        z4 = z5;

     label083:
        i10 = virtualinvoke r63.<com.android.server.NativeDaemonEvent: int getCode()>();

     label084:
        z3 = z5;

        z4 = z5;

     label085:
        i11 = specialinvoke r0.<com.android.server.NativeDaemonConnector: int uptimeMillisInt()>();

     label086:
        z3 = z5;

        z4 = z5;

     label087:
        r68 = virtualinvoke r63.<com.android.server.NativeDaemonEvent: java.lang.String getRawEvent()>();

     label088:
        z7 = z5;

        z3 = z5;

     label089:
        r69 = virtualinvoke r67.<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(i10, i11, 0, r68);

     label090:
        z2 = z5;

        z7 = z5;

        z3 = z5;

     label091:
        $r70 = r0.<com.android.server.NativeDaemonConnector: android.os.Handler mCallbackHandler>;

        $z8 = virtualinvoke $r70.<android.os.Handler: boolean sendMessage(android.os.Message)>(r69);

        if $z8 == 0 goto label093;

     label092:
        z2 = 0;

     label093:
        goto label096;

     label094:
        z7 = 0;

        z3 = 0;

     label095:
        $r7 = r0.<com.android.server.NativeDaemonConnector: com.android.server.NativeDaemonConnector$ResponseQueue mResponseQueue>;

        $i4 = virtualinvoke r63.<com.android.server.NativeDaemonEvent: int getCmdNumber()>();

        virtualinvoke $r7.<com.android.server.NativeDaemonConnector$ResponseQueue: void add(int,com.android.server.NativeDaemonEvent)>($i4, r63);

     label096:
        r71 = r47;

        if z2 == 0 goto label117;

        r45 = r47;

     label097:
        r72 = r0.<com.android.server.NativeDaemonConnector: android.os.PowerManager$WakeLock mWakeLock>;

     label098:
        r71 = r47;

        r45 = r47;

     label099:
        virtualinvoke r72.<android.os.PowerManager$WakeLock: void release()>();

     label100:
        goto label117;

     label101:
        $r37 := @caughtexception;

        r66 = $r37;

        z6 = z7;

        goto label104;

     label102:
        $r38 := @caughtexception;

        r65 = $r38;

        goto label119;

     label103:
        $r15 := @caughtexception;

        r66 = $r15;

        z6 = z4;

     label104:
        r71 = r47;

        z3 = z6;

     label105:
        r73 = new java.lang.StringBuilder;

     label106:
        z3 = z6;

     label107:
        specialinvoke r73.<java.lang.StringBuilder: void <init>()>();

     label108:
        z3 = z6;

     label109:
        virtualinvoke r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Problem parsing message ");

     label110:
        z3 = z6;

     label111:
        virtualinvoke r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r66);

     label112:
        z3 = z6;

     label113:
        $r74 = virtualinvoke r73.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.NativeDaemonConnector: void log(java.lang.String)>($r74);

     label114:
        if z6 == 0 goto label117;

        r45 = r47;

     label115:
        r72 = r0.<com.android.server.NativeDaemonConnector: android.os.PowerManager$WakeLock mWakeLock>;

     label116:
        goto label098;

     label117:
        i9 = i8 + 1;

        goto label123;

     label118:
        $r36 := @caughtexception;

        r65 = $r36;

     label119:
        if z3 == 0 goto label121;

        r45 = r47;

        r71 = r47;

     label120:
        $r34 = r0.<com.android.server.NativeDaemonConnector: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r34.<android.os.PowerManager$WakeLock: void release()>();

     label121:
        r45 = r47;

        r71 = r47;

     label122:
        throw r65;

     label123:
        i8 = i8 + 1;

        goto label053;

     label124:
        if i9 != 0 goto label126;

        r45 = r47;

        r71 = r47;

     label125:
        specialinvoke r0.<com.android.server.NativeDaemonConnector: void log(java.lang.String)>("RCV incomplete");

     label126:
        if i9 == i0 goto label129;

        i12 = 4096 - i9;

        r45 = r47;

        r71 = r47;

     label127:
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r52, i9, r52, 0, i12);

     label128:
        i6 = i12;

        goto label130;

     label129:
        i6 = 0;

     label130:
        goto label018;

     label131:
        $r39 := @caughtexception;

        r75 = $r39;

     label132:
        exitmonitor r51;

     label133:
        r45 = r47;

        r71 = r47;

     label134:
        throw r75;

     label135:
        $r28 := @caughtexception;

        r76 = $r28;

        goto label154;

     label136:
        $r27 := @caughtexception;

        r78 = r71;

        r79 = $r27;

        goto label142;

     label137:
        $r26 := @caughtexception;

        r75 = $r26;

        goto label132;

     label138:
        $r35 := @caughtexception;

        r76 = $r35;

        r45 = r48;

        goto label154;

     label139:
        $r20 := @caughtexception;

        r79 = $r20;

        r78 = r49;

        goto label142;

     label140:
        $r41 := @caughtexception;

        r76 = $r41;

        goto label154;

     label141:
        $r40 := @caughtexception;

        r78 = r46;

        r79 = $r40;

     label142:
        r45 = r78;

     label143:
        r81 = new java.lang.StringBuilder;

     label144:
        r45 = r78;

     label145:
        specialinvoke r81.<java.lang.StringBuilder: void <init>()>();

     label146:
        r45 = r78;

     label147:
        virtualinvoke r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Communications error: ");

     label148:
        r45 = r78;

     label149:
        virtualinvoke r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r79);

     label150:
        r45 = r78;

     label151:
        $r82 = virtualinvoke r81.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.NativeDaemonConnector: void loge(java.lang.String)>($r82);

     label152:
        r45 = r78;

     label153:
        throw r79;

     label154:
        r83 = r0.<com.android.server.NativeDaemonConnector: java.lang.Object mDaemonLock>;

        entermonitor r83;

     label155:
        r84 = r0.<com.android.server.NativeDaemonConnector: java.io.OutputStream mOutputStream>;

     label156:
        if r84 == null goto label162;

     label157:
        r85 = new java.lang.StringBuilder;

        specialinvoke r85.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("closing stream for ");

        $r29 = r0.<com.android.server.NativeDaemonConnector: java.lang.String mSocket>;

        virtualinvoke r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r30 = virtualinvoke r85.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.NativeDaemonConnector: void loge(java.lang.String)>($r30);

        $r31 = r0.<com.android.server.NativeDaemonConnector: java.io.OutputStream mOutputStream>;

        virtualinvoke $r31.<java.io.OutputStream: void close()>();

     label158:
        goto label161;

     label159:
        $r24 := @caughtexception;

     label160:
        r87 = new java.lang.StringBuilder;

        specialinvoke r87.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed closing output stream: ");

        virtualinvoke r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r24);

        $r25 = virtualinvoke r87.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.NativeDaemonConnector: void loge(java.lang.String)>($r25);

     label161:
        r0.<com.android.server.NativeDaemonConnector: java.io.OutputStream mOutputStream> = null;

     label162:
        exitmonitor r83;

     label163:
        if r45 == null goto label167;

     label164:
        virtualinvoke r45.<android.net.LocalSocket: void close()>();

     label165:
        goto label167;

     label166:
        $r42 := @caughtexception;

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed closing socket: ");

        virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r42);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.NativeDaemonConnector: void loge(java.lang.String)>($r44);

        goto label167;

     label167:
        throw r76;

     label168:
        $r19 := @caughtexception;

     label169:
        exitmonitor r83;

     label170:
        throw $r19;

        catch java.io.IOException from label001 to label002 with label141;
        catch java.lang.Throwable from label001 to label002 with label140;
        catch java.io.IOException from label003 to label004 with label141;
        catch java.lang.Throwable from label003 to label004 with label140;
        catch java.io.IOException from label005 to label006 with label139;
        catch java.lang.Throwable from label005 to label006 with label138;
        catch java.io.IOException from label007 to label008 with label139;
        catch java.lang.Throwable from label007 to label008 with label138;
        catch java.io.IOException from label009 to label010 with label139;
        catch java.lang.Throwable from label009 to label010 with label138;
        catch java.io.IOException from label011 to label012 with label139;
        catch java.lang.Throwable from label011 to label012 with label138;
        catch java.lang.Throwable from label012 to label013 with label131;
        catch java.io.IOException from label014 to label015 with label139;
        catch java.lang.Throwable from label014 to label015 with label138;
        catch java.io.IOException from label016 to label017 with label139;
        catch java.lang.Throwable from label016 to label017 with label138;
        catch java.io.IOException from label019 to label020 with label139;
        catch java.lang.Throwable from label019 to label020 with label138;
        catch java.io.IOException from label021 to label022 with label141;
        catch java.lang.Throwable from label021 to label022 with label140;
        catch java.io.IOException from label023 to label024 with label141;
        catch java.lang.Throwable from label023 to label024 with label140;
        catch java.io.IOException from label025 to label026 with label141;
        catch java.lang.Throwable from label025 to label026 with label140;
        catch java.io.IOException from label027 to label028 with label141;
        catch java.lang.Throwable from label027 to label028 with label140;
        catch java.io.IOException from label029 to label030 with label141;
        catch java.lang.Throwable from label029 to label030 with label140;
        catch java.io.IOException from label031 to label032 with label141;
        catch java.lang.Throwable from label031 to label032 with label140;
        catch java.io.IOException from label033 to label034 with label141;
        catch java.lang.Throwable from label033 to label034 with label140;
        catch java.lang.Throwable from label035 to label036 with label047;
        catch java.io.IOException from label037 to label038 with label039;
        catch java.lang.Throwable from label037 to label038 with label047;
        catch java.lang.Throwable from label040 to label041 with label047;
        catch java.lang.Throwable from label041 to label042 with label047;
        catch java.lang.Throwable from label042 to label043 with label047;
        catch java.io.IOException from label043 to label044 with label045;
        catch java.lang.Throwable from label048 to label049 with label047;
        catch java.io.IOException from label051 to label052 with label139;
        catch java.lang.Throwable from label051 to label052 with label138;
        catch java.io.IOException from label054 to label055 with label139;
        catch java.lang.Throwable from label054 to label055 with label138;
        catch java.io.IOException from label056 to label057 with label139;
        catch java.lang.Throwable from label056 to label057 with label138;
        catch java.lang.IllegalArgumentException from label058 to label059 with label103;
        catch java.lang.Throwable from label058 to label059 with label102;
        catch java.lang.IllegalArgumentException from label060 to label061 with label103;
        catch java.lang.Throwable from label060 to label061 with label102;
        catch java.lang.IllegalArgumentException from label062 to label063 with label103;
        catch java.lang.Throwable from label062 to label063 with label102;
        catch java.lang.IllegalArgumentException from label064 to label065 with label103;
        catch java.lang.Throwable from label064 to label065 with label102;
        catch java.lang.IllegalArgumentException from label066 to label067 with label103;
        catch java.lang.Throwable from label066 to label067 with label102;
        catch java.lang.IllegalArgumentException from label068 to label069 with label103;
        catch java.lang.Throwable from label068 to label069 with label102;
        catch java.lang.IllegalArgumentException from label070 to label071 with label103;
        catch java.lang.Throwable from label070 to label071 with label102;
        catch java.lang.IllegalArgumentException from label072 to label073 with label103;
        catch java.lang.Throwable from label072 to label073 with label102;
        catch java.lang.IllegalArgumentException from label074 to label075 with label103;
        catch java.lang.Throwable from label074 to label075 with label102;
        catch java.lang.IllegalArgumentException from label076 to label077 with label079;
        catch java.lang.Throwable from label076 to label077 with label078;
        catch java.lang.IllegalArgumentException from label081 to label082 with label103;
        catch java.lang.Throwable from label081 to label082 with label102;
        catch java.lang.IllegalArgumentException from label083 to label084 with label103;
        catch java.lang.Throwable from label083 to label084 with label102;
        catch java.lang.IllegalArgumentException from label085 to label086 with label103;
        catch java.lang.Throwable from label085 to label086 with label102;
        catch java.lang.IllegalArgumentException from label087 to label088 with label103;
        catch java.lang.Throwable from label087 to label088 with label102;
        catch java.lang.IllegalArgumentException from label089 to label090 with label101;
        catch java.lang.Throwable from label089 to label090 with label118;
        catch java.lang.IllegalArgumentException from label091 to label092 with label101;
        catch java.lang.Throwable from label091 to label092 with label118;
        catch java.lang.IllegalArgumentException from label095 to label096 with label101;
        catch java.lang.Throwable from label095 to label096 with label118;
        catch java.io.IOException from label097 to label098 with label136;
        catch java.lang.Throwable from label097 to label098 with label135;
        catch java.io.IOException from label099 to label100 with label136;
        catch java.lang.Throwable from label099 to label100 with label135;
        catch java.lang.Throwable from label105 to label106 with label118;
        catch java.lang.Throwable from label107 to label108 with label118;
        catch java.lang.Throwable from label109 to label110 with label118;
        catch java.lang.Throwable from label111 to label112 with label118;
        catch java.lang.Throwable from label113 to label114 with label118;
        catch java.io.IOException from label115 to label116 with label136;
        catch java.lang.Throwable from label115 to label116 with label135;
        catch java.io.IOException from label120 to label121 with label136;
        catch java.lang.Throwable from label120 to label121 with label135;
        catch java.io.IOException from label122 to label123 with label136;
        catch java.lang.Throwable from label122 to label123 with label135;
        catch java.io.IOException from label125 to label126 with label136;
        catch java.lang.Throwable from label125 to label126 with label135;
        catch java.io.IOException from label127 to label128 with label136;
        catch java.lang.Throwable from label127 to label128 with label135;
        catch java.lang.Throwable from label132 to label133 with label137;
        catch java.io.IOException from label134 to label135 with label136;
        catch java.lang.Throwable from label134 to label135 with label135;
        catch java.lang.Throwable from label143 to label144 with label140;
        catch java.lang.Throwable from label145 to label146 with label140;
        catch java.lang.Throwable from label147 to label148 with label140;
        catch java.lang.Throwable from label149 to label150 with label140;
        catch java.lang.Throwable from label151 to label152 with label140;
        catch java.lang.Throwable from label153 to label154 with label140;
        catch java.lang.Throwable from label155 to label156 with label168;
        catch java.io.IOException from label157 to label158 with label159;
        catch java.lang.Throwable from label157 to label158 with label168;
        catch java.lang.Throwable from label160 to label161 with label168;
        catch java.lang.Throwable from label161 to label162 with label168;
        catch java.lang.Throwable from label162 to label163 with label168;
        catch java.io.IOException from label164 to label165 with label166;
        catch java.lang.Throwable from label169 to label170 with label168;
    }

    private void log(java.lang.String)
    {
        com.android.server.NativeDaemonConnector r0;
        java.lang.String r1, $r3;
        boolean $z0;
        android.util.LocalLog $r2;

        r0 := @this: com.android.server.NativeDaemonConnector;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<com.android.server.NativeDaemonConnector: boolean mDebug>;

        if $z0 == 0 goto label1;

        $r3 = r0.<com.android.server.NativeDaemonConnector: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>($r3, r1);

     label1:
        $r2 = r0.<com.android.server.NativeDaemonConnector: android.util.LocalLog mLocalLog>;

        virtualinvoke $r2.<android.util.LocalLog: void log(java.lang.String)>(r1);

        return;
    }

    private void loge(java.lang.String)
    {
        com.android.server.NativeDaemonConnector r0;
        java.lang.String r1, $r2;
        android.util.LocalLog $r3;

        r0 := @this: com.android.server.NativeDaemonConnector;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.NativeDaemonConnector: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>($r2, r1);

        $r3 = r0.<com.android.server.NativeDaemonConnector: android.util.LocalLog mLocalLog>;

        virtualinvoke $r3.<android.util.LocalLog: void log(java.lang.String)>(r1);

        return;
    }

    static transient void makeCommand(java.lang.StringBuilder, java.lang.StringBuilder, int, java.lang.String, java.lang.Object[])
    {
        java.lang.StringBuilder r0, $r3, $r16, r24;
        java.lang.Object[] r1;
        int i0, $i1, $i2, $i3, i4, i5;
        java.lang.String r2, $r7, $r20, r25;
        java.lang.IllegalArgumentException $r6, $r8, $r19;
        boolean $z0;
        java.lang.Object r26;

        r24 := @parameter0: java.lang.StringBuilder;

        r0 := @parameter1: java.lang.StringBuilder;

        i4 := @parameter2: int;

        r25 := @parameter3: java.lang.String;

        r1 := @parameter4: java.lang.Object[];

        $i1 = virtualinvoke r25.<java.lang.String: int indexOf(int)>(0);

        if $i1 >= 0 goto label7;

        $i2 = virtualinvoke r25.<java.lang.String: int indexOf(int)>(32);

        if $i2 >= 0 goto label6;

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r25);

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r25);

        i0 = lengthof r1;

        i5 = 0;

     label1:
        if i5 >= i0 goto label5;

        r26 = r1[i5];

        r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r26);

        $i3 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(0);

        if $i3 >= 0 goto label4;

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        staticinvoke <com.android.server.NativeDaemonConnector: void appendEscaped(java.lang.StringBuilder,java.lang.String)>(r24, r2);

        $z0 = r26 instanceof com.android.server.NativeDaemonConnector$SensitiveArg;

        if $z0 == 0 goto label2;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[scrubbed]");

        goto label3;

     label2:
        staticinvoke <com.android.server.NativeDaemonConnector: void appendEscaped(java.lang.StringBuilder,java.lang.String)>(r0, r2);

     label3:
        i5 = i5 + 1;

        goto label1;

     label4:
        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected argument: ");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r26);

        $r19 = new java.lang.IllegalArgumentException;

        $r20 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r20);

        throw $r19;

     label5:
        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(0);

        return;

     label6:
        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Arguments must be separate from command");

        throw $r8;

     label7:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected command: ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r25);

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r6;
    }

    private int uptimeMillisInt()
    {
        com.android.server.NativeDaemonConnector r0;
        long $l0;
        int $i1, $i2;

        r0 := @this: com.android.server.NativeDaemonConnector;

        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $i1 = (int) $l0;

        $i2 = $i1 & 2147483647;

        return $i2;
    }

    public void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.NativeDaemonConnector r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        android.util.LocalLog $r4;
        com.android.server.NativeDaemonConnector$ResponseQueue $r5;

        r0 := @this: com.android.server.NativeDaemonConnector;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        $r4 = r0.<com.android.server.NativeDaemonConnector: android.util.LocalLog mLocalLog>;

        virtualinvoke $r4.<android.util.LocalLog: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r1, r2, r3);

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

        $r5 = r0.<com.android.server.NativeDaemonConnector: com.android.server.NativeDaemonConnector$ResponseQueue mResponseQueue>;

        virtualinvoke $r5.<com.android.server.NativeDaemonConnector$ResponseQueue: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r1, r2, r3);

        return;
    }

    public transient com.android.server.NativeDaemonEvent execute(long, java.lang.String, java.lang.Object[]) throws com.android.server.NativeDaemonConnectorException
    {
        com.android.server.NativeDaemonConnector r0;
        long l0;
        int $i1, $i2;
        java.lang.StringBuilder $r1;
        com.android.server.NativeDaemonConnectorException $r4;
        java.lang.String $r5, r7;
        com.android.server.NativeDaemonEvent $r6;
        java.lang.Object[] r8;
        com.android.server.NativeDaemonEvent[] r9;

        r0 := @this: com.android.server.NativeDaemonConnector;

        l0 := @parameter0: long;

        r7 := @parameter1: java.lang.String;

        r8 := @parameter2: java.lang.Object[];

        r9 = virtualinvoke r0.<com.android.server.NativeDaemonConnector: com.android.server.NativeDaemonEvent[] executeForList(long,java.lang.String,java.lang.Object[])>(l0, r7, r8);

        $i1 = lengthof r9;

        if $i1 != 1 goto label1;

        $r6 = r9[0];

        return $r6;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected exactly one response, but received ");

        $i2 = lengthof r9;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r4 = new com.android.server.NativeDaemonConnectorException;

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<com.android.server.NativeDaemonConnectorException: void <init>(java.lang.String)>($r5);

        throw $r4;
    }

    public com.android.server.NativeDaemonEvent execute(com.android.server.NativeDaemonConnector$Command) throws com.android.server.NativeDaemonConnectorException
    {
        com.android.server.NativeDaemonConnector r0;
        com.android.server.NativeDaemonConnector$Command r1;
        java.lang.String $r2;
        java.util.ArrayList $r3;
        java.lang.Object[] $r4;
        com.android.server.NativeDaemonEvent $r5;

        r0 := @this: com.android.server.NativeDaemonConnector;

        r1 := @parameter0: com.android.server.NativeDaemonConnector$Command;

        $r2 = staticinvoke <com.android.server.NativeDaemonConnector$Command: java.lang.String access$000(com.android.server.NativeDaemonConnector$Command)>(r1);

        $r3 = staticinvoke <com.android.server.NativeDaemonConnector$Command: java.util.ArrayList access$100(com.android.server.NativeDaemonConnector$Command)>(r1);

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object[] toArray()>();

        $r5 = virtualinvoke r0.<com.android.server.NativeDaemonConnector: com.android.server.NativeDaemonEvent execute(java.lang.String,java.lang.Object[])>($r2, $r4);

        return $r5;
    }

    public transient com.android.server.NativeDaemonEvent execute(java.lang.String, java.lang.Object[]) throws com.android.server.NativeDaemonConnectorException
    {
        com.android.server.NativeDaemonConnector r0;
        java.lang.String r1;
        java.lang.Object[] r2;
        com.android.server.NativeDaemonEvent $r3;

        r0 := @this: com.android.server.NativeDaemonConnector;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object[];

        $r3 = virtualinvoke r0.<com.android.server.NativeDaemonConnector: com.android.server.NativeDaemonEvent execute(long,java.lang.String,java.lang.Object[])>(60000L, r1, r2);

        return $r3;
    }

    public transient com.android.server.NativeDaemonEvent[] executeForList(long, java.lang.String, java.lang.Object[]) throws com.android.server.NativeDaemonConnectorException
    {
        com.android.server.NativeDaemonConnector r0;
        long l0, $l2, $l5, l8, l9;
        int i1, $i4, $i6;
        java.lang.Object $r1, $r26, $r33, r56;
        java.nio.charset.Charset $r5;
        java.io.OutputStream $r6, r57;
        byte[] $r7;
        com.android.server.NativeDaemonConnector$ResponseQueue $r8;
        java.lang.StringBuilder $r9, $r19, $r27, $r46, $r48, $r53;
        java.lang.String $r12, $r25, $r30, $r34, $r36, r41, r43, r51, r52, $r55;
        com.android.server.NativeDaemonTimeoutException $r13;
        boolean $z1, $z2, $z3, $z4;
        byte $b3;
        com.android.server.NativeDaemonConnector$NativeDaemonArgumentException $r14;
        com.android.server.NativeDaemonConnector$NativeDaemonFailureException $r15;
        com.android.server.NativeDaemonEvent[] $r16, $r18;
        java.lang.Object[] $r17, r42;
        java.lang.Thread $r29;
        java.lang.Throwable $r37, $r38, $r39, $r40, r64;
        java.util.ArrayList r45;
        java.util.concurrent.atomic.AtomicInteger $r50;
        com.android.server.NativeDaemonEvent r58;
        com.android.server.NativeDaemonConnectorException r62, r63;

        r0 := @this: com.android.server.NativeDaemonConnector;

        l8 := @parameter0: long;

        r41 := @parameter1: java.lang.String;

        r42 := @parameter2: java.lang.Object[];

        $r1 = r0.<com.android.server.NativeDaemonConnector: java.lang.Object mWarnIfHeld>;

        if $r1 == null goto label01;

        $r26 = r0.<com.android.server.NativeDaemonConnector: java.lang.Object mWarnIfHeld>;

        $z4 = staticinvoke <java.lang.Thread: boolean holdsLock(java.lang.Object)>($r26);

        if $z4 == 0 goto label01;

        r43 = r0.<com.android.server.NativeDaemonConnector: java.lang.String TAG>;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Calling thread ");

        $r29 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r30 = virtualinvoke $r29.<java.lang.Thread: java.lang.String getName()>();

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is holding 0x");

        $r33 = r0.<com.android.server.NativeDaemonConnector: java.lang.Object mWarnIfHeld>;

        $i6 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>($r33);

        $r34 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i6);

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        $r36 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        $r37 = new java.lang.Throwable;

        specialinvoke $r37.<java.lang.Throwable: void <init>()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>(r43, $r36, $r37);

     label01:
        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        r45 = staticinvoke <com.google.android.collect.Lists: java.util.ArrayList newArrayList()>();

        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        $r48 = new java.lang.StringBuilder;

        specialinvoke $r48.<java.lang.StringBuilder: void <init>()>();

        $r50 = r0.<com.android.server.NativeDaemonConnector: java.util.concurrent.atomic.AtomicInteger mSequenceNumber>;

        i1 = virtualinvoke $r50.<java.util.concurrent.atomic.AtomicInteger: int incrementAndGet()>();

        staticinvoke <com.android.server.NativeDaemonConnector: void makeCommand(java.lang.StringBuilder,java.lang.StringBuilder,int,java.lang.String,java.lang.Object[])>($r46, $r48, i1, r41, r42);

        r51 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        r52 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        $r53 = new java.lang.StringBuilder;

        specialinvoke $r53.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SND -> {");

        virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r52);

        virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r55 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.NativeDaemonConnector: void log(java.lang.String)>($r55);

        r56 = r0.<com.android.server.NativeDaemonConnector: java.lang.Object mDaemonLock>;

        entermonitor r56;

     label02:
        r57 = r0.<com.android.server.NativeDaemonConnector: java.io.OutputStream mOutputStream>;

     label03:
        if r57 == null goto label14;

     label04:
        $r6 = r0.<com.android.server.NativeDaemonConnector: java.io.OutputStream mOutputStream>;

        $r5 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r7 = virtualinvoke r51.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r5);

        virtualinvoke $r6.<java.io.OutputStream: void write(byte[])>($r7);

     label05:
        exitmonitor r56;

     label06:
        $r8 = r0.<com.android.server.NativeDaemonConnector: com.android.server.NativeDaemonConnector$ResponseQueue mResponseQueue>;

        r58 = virtualinvoke $r8.<com.android.server.NativeDaemonConnector$ResponseQueue: com.android.server.NativeDaemonEvent remove(int,long,java.lang.String)>(i1, l8, r52);

        if r58 == null goto label11;

        virtualinvoke r45.<java.util.ArrayList: boolean add(java.lang.Object)>(r58);

        $z1 = virtualinvoke r58.<com.android.server.NativeDaemonEvent: boolean isClassContinue()>();

        if $z1 != 0 goto label10;

        l9 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l2 = l9 - l0;

        $b3 = $l2 cmp 500L;

        if $b3 <= 0 goto label07;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NDC Command {");

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r52);

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("} took too long (");

        $l5 = l9 - l0;

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l5);

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms)");

        $r25 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.NativeDaemonConnector: void loge(java.lang.String)>($r25);

        goto label07;

     label07:
        $z2 = virtualinvoke r58.<com.android.server.NativeDaemonEvent: boolean isClassClientError()>();

        if $z2 != 0 goto label09;

        $z3 = virtualinvoke r58.<com.android.server.NativeDaemonEvent: boolean isClassServerError()>();

        if $z3 != 0 goto label08;

        $i4 = virtualinvoke r45.<java.util.ArrayList: int size()>();

        $r16 = newarray (com.android.server.NativeDaemonEvent)[$i4];

        $r17 = virtualinvoke r45.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r16);

        $r18 = (com.android.server.NativeDaemonEvent[]) $r17;

        return $r18;

     label08:
        $r15 = new com.android.server.NativeDaemonConnector$NativeDaemonFailureException;

        specialinvoke $r15.<com.android.server.NativeDaemonConnector$NativeDaemonFailureException: void <init>(java.lang.String,com.android.server.NativeDaemonEvent)>(r52, r58);

        throw $r15;

     label09:
        $r14 = new com.android.server.NativeDaemonConnector$NativeDaemonArgumentException;

        specialinvoke $r14.<com.android.server.NativeDaemonConnector$NativeDaemonArgumentException: void <init>(java.lang.String,com.android.server.NativeDaemonEvent)>(r52, r58);

        throw $r14;

     label10:
        goto label06;

     label11:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("timed-out waiting for response to ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r52);

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.NativeDaemonConnector: void loge(java.lang.String)>($r12);

        $r13 = new com.android.server.NativeDaemonTimeoutException;

        specialinvoke $r13.<com.android.server.NativeDaemonTimeoutException: void <init>(java.lang.String,com.android.server.NativeDaemonEvent)>(r52, r58);

        throw $r13;

     label12:
        $r40 := @caughtexception;

     label13:
        r62 = new com.android.server.NativeDaemonConnectorException;

        specialinvoke r62.<com.android.server.NativeDaemonConnectorException: void <init>(java.lang.String,java.lang.Throwable)>("problem sending command", $r40);

        throw r62;

     label14:
        r63 = new com.android.server.NativeDaemonConnectorException;

        specialinvoke r63.<com.android.server.NativeDaemonConnectorException: void <init>(java.lang.String)>("missing output stream");

        throw r63;

     label15:
        $r38 := @caughtexception;

        r64 = $r38;

     label16:
        exitmonitor r56;

     label17:
        throw r64;

     label18:
        $r39 := @caughtexception;

        r64 = $r39;

        goto label16;

        catch java.lang.Throwable from label02 to label03 with label15;
        catch java.io.IOException from label04 to label05 with label12;
        catch java.lang.Throwable from label04 to label05 with label15;
        catch java.lang.Throwable from label05 to label06 with label15;
        catch java.lang.Throwable from label13 to label14 with label18;
        catch java.lang.Throwable from label14 to label15 with label18;
        catch java.lang.Throwable from label16 to label17 with label18;
    }

    public com.android.server.NativeDaemonEvent[] executeForList(com.android.server.NativeDaemonConnector$Command) throws com.android.server.NativeDaemonConnectorException
    {
        com.android.server.NativeDaemonConnector r0;
        com.android.server.NativeDaemonConnector$Command r1;
        java.lang.String $r2;
        java.util.ArrayList $r3;
        java.lang.Object[] $r4;
        com.android.server.NativeDaemonEvent[] $r5;

        r0 := @this: com.android.server.NativeDaemonConnector;

        r1 := @parameter0: com.android.server.NativeDaemonConnector$Command;

        $r2 = staticinvoke <com.android.server.NativeDaemonConnector$Command: java.lang.String access$000(com.android.server.NativeDaemonConnector$Command)>(r1);

        $r3 = staticinvoke <com.android.server.NativeDaemonConnector$Command: java.util.ArrayList access$100(com.android.server.NativeDaemonConnector$Command)>(r1);

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object[] toArray()>();

        $r5 = virtualinvoke r0.<com.android.server.NativeDaemonConnector: com.android.server.NativeDaemonEvent[] executeForList(java.lang.String,java.lang.Object[])>($r2, $r4);

        return $r5;
    }

    public transient com.android.server.NativeDaemonEvent[] executeForList(java.lang.String, java.lang.Object[]) throws com.android.server.NativeDaemonConnectorException
    {
        com.android.server.NativeDaemonConnector r0;
        java.lang.String r1;
        java.lang.Object[] r2;
        com.android.server.NativeDaemonEvent[] $r3;

        r0 := @this: com.android.server.NativeDaemonConnector;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object[];

        $r3 = virtualinvoke r0.<com.android.server.NativeDaemonConnector: com.android.server.NativeDaemonEvent[] executeForList(long,java.lang.String,java.lang.Object[])>(60000L, r1, r2);

        return $r3;
    }

    public boolean handleMessage(android.os.Message)
    {
        com.android.server.NativeDaemonConnector r0;
        java.lang.String r1, $r11, $r13, $r19, $r25, $r30, $r33, r36;
        int i0, i1, $i2, $i3, $i4, $i7, $i8, $i11, $i12, $i13, $i16, $i17, $i20, $i21, $i22, $i25, $i26, $i29, i30, i31, i32;
        java.lang.Object $r3;
        com.android.server.INativeDaemonConnectorCallbacks $r4, $r6, $r20, $r27;
        java.lang.String[] $r5;
        boolean $z0, $z1, $z2, $z3;
        long $l5, $l9, $l14, $l18, $l23, $l27;
        byte $b6, $b10, $b15, $b19, $b24, $b28;
        java.lang.Object[] $r7, $r9, $r12, $r21, $r23, $r28, $r31;
        java.lang.Integer $r8, $r10, $r22, $r24, $r29, $r32;
        java.lang.Exception $r14;
        java.lang.Throwable $r26;
        android.os.Message r34;
        android.os.PowerManager$WakeLock r35, r39, r40;
        java.lang.StringBuilder r38;

        r0 := @this: com.android.server.NativeDaemonConnector;

        r34 := @parameter0: android.os.Message;

        $r3 = r34.<android.os.Message: java.lang.Object obj>;

        r1 = (java.lang.String) $r3;

        i0 = specialinvoke r0.<com.android.server.NativeDaemonConnector: int uptimeMillisInt()>();

        i1 = r34.<android.os.Message: int arg1>;

     label01:
        $r4 = r0.<com.android.server.NativeDaemonConnector: com.android.server.INativeDaemonConnectorCallbacks mCallbacks>;

        $i2 = r34.<android.os.Message: int what>;

        $r5 = staticinvoke <com.android.server.NativeDaemonEvent: java.lang.String[] unescapeArgs(java.lang.String)>(r1);

        $z0 = interfaceinvoke $r4.<com.android.server.INativeDaemonConnectorCallbacks: boolean onEvent(int,java.lang.String,java.lang.String[])>($i2, r1, $r5);

        if $z0 != 0 goto label02;

        $r12 = newarray (java.lang.Object)[1];

        $r12[0] = r1;

        $r13 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unhandled event \'%s\'", $r12);

        specialinvoke r0.<com.android.server.NativeDaemonConnector: void log(java.lang.String)>($r13);

     label02:
        $r6 = r0.<com.android.server.NativeDaemonConnector: com.android.server.INativeDaemonConnectorCallbacks mCallbacks>;

        $i3 = r34.<android.os.Message: int what>;

        $z1 = interfaceinvoke $r6.<com.android.server.INativeDaemonConnectorCallbacks: boolean onCheckHoldWakeLock(int)>($i3);

        if $z1 == 0 goto label03;

        r35 = r0.<com.android.server.NativeDaemonConnector: android.os.PowerManager$WakeLock mWakeLock>;

        if r35 == null goto label03;

        virtualinvoke r35.<android.os.PowerManager$WakeLock: void release()>();

     label03:
        i30 = specialinvoke r0.<com.android.server.NativeDaemonConnector: int uptimeMillisInt()>();

        if i0 <= i1 goto label04;

        $i8 = i0 - i1;

        $l9 = (long) $i8;

        $b10 = $l9 cmp 500L;

        if $b10 <= 0 goto label04;

        $r9 = newarray (java.lang.Object)[2];

        $r9[0] = r1;

        $i11 = i0 - i1;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i11);

        $r9[1] = $r10;

        $r11 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("NDC event {%s} processed too late: %dms", $r9);

        specialinvoke r0.<com.android.server.NativeDaemonConnector: void loge(java.lang.String)>($r11);

     label04:
        if i30 <= i0 goto label06;

        $i4 = i30 - i0;

        $l5 = (long) $i4;

        $b6 = $l5 cmp 500L;

        if $b6 <= 0 goto label06;

        $r7 = newarray (java.lang.Object)[2];

        $r7[0] = r1;

        $i7 = i30 - i0;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);

        $r7[1] = $r8;

        r36 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("NDC event {%s} took too long: %dms", $r7);

     label05:
        specialinvoke r0.<com.android.server.NativeDaemonConnector: void loge(java.lang.String)>(r36);

     label06:
        goto label13;

     label07:
        $r26 := @caughtexception;

        goto label14;

     label08:
        $r14 := @caughtexception;

     label09:
        r38 = new java.lang.StringBuilder;

        specialinvoke r38.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error handling \'");

        virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\': ");

        virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        $r19 = virtualinvoke r38.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.NativeDaemonConnector: void loge(java.lang.String)>($r19);

     label10:
        $r20 = r0.<com.android.server.NativeDaemonConnector: com.android.server.INativeDaemonConnectorCallbacks mCallbacks>;

        $i12 = r34.<android.os.Message: int what>;

        $z2 = interfaceinvoke $r20.<com.android.server.INativeDaemonConnectorCallbacks: boolean onCheckHoldWakeLock(int)>($i12);

        if $z2 == 0 goto label11;

        r39 = r0.<com.android.server.NativeDaemonConnector: android.os.PowerManager$WakeLock mWakeLock>;

        if r39 == null goto label11;

        virtualinvoke r39.<android.os.PowerManager$WakeLock: void release()>();

     label11:
        i31 = specialinvoke r0.<com.android.server.NativeDaemonConnector: int uptimeMillisInt()>();

        if i0 <= i1 goto label12;

        $i17 = i0 - i1;

        $l18 = (long) $i17;

        $b19 = $l18 cmp 500L;

        if $b19 <= 0 goto label12;

        $r23 = newarray (java.lang.Object)[2];

        $r23[0] = r1;

        $i20 = i0 - i1;

        $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i20);

        $r23[1] = $r24;

        $r25 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("NDC event {%s} processed too late: %dms", $r23);

        specialinvoke r0.<com.android.server.NativeDaemonConnector: void loge(java.lang.String)>($r25);

     label12:
        if i31 <= i0 goto label06;

        $i13 = i31 - i0;

        $l14 = (long) $i13;

        $b15 = $l14 cmp 500L;

        if $b15 <= 0 goto label06;

        $r21 = newarray (java.lang.Object)[2];

        $r21[0] = r1;

        $i16 = i31 - i0;

        $r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i16);

        $r21[1] = $r22;

        r36 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("NDC event {%s} took too long: %dms", $r21);

        goto label05;

     label13:
        return 1;

     label14:
        $r27 = r0.<com.android.server.NativeDaemonConnector: com.android.server.INativeDaemonConnectorCallbacks mCallbacks>;

        $i21 = r34.<android.os.Message: int what>;

        $z3 = interfaceinvoke $r27.<com.android.server.INativeDaemonConnectorCallbacks: boolean onCheckHoldWakeLock(int)>($i21);

        if $z3 == 0 goto label15;

        r40 = r0.<com.android.server.NativeDaemonConnector: android.os.PowerManager$WakeLock mWakeLock>;

        if r40 == null goto label15;

        virtualinvoke r40.<android.os.PowerManager$WakeLock: void release()>();

     label15:
        i32 = specialinvoke r0.<com.android.server.NativeDaemonConnector: int uptimeMillisInt()>();

        if i0 <= i1 goto label16;

        $i26 = i0 - i1;

        $l27 = (long) $i26;

        $b28 = $l27 cmp 500L;

        if $b28 <= 0 goto label16;

        $r31 = newarray (java.lang.Object)[2];

        $r31[0] = r1;

        $i29 = i0 - i1;

        $r32 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i29);

        $r31[1] = $r32;

        $r33 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("NDC event {%s} processed too late: %dms", $r31);

        specialinvoke r0.<com.android.server.NativeDaemonConnector: void loge(java.lang.String)>($r33);

     label16:
        if i32 <= i0 goto label17;

        $i22 = i32 - i0;

        $l23 = (long) $i22;

        $b24 = $l23 cmp 500L;

        if $b24 <= 0 goto label17;

        $r28 = newarray (java.lang.Object)[2];

        $r28[0] = r1;

        $i25 = i32 - i0;

        $r29 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i25);

        $r28[1] = $r29;

        $r30 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("NDC event {%s} took too long: %dms", $r28);

        specialinvoke r0.<com.android.server.NativeDaemonConnector: void loge(java.lang.String)>($r30);

     label17:
        throw $r26;

        catch java.lang.Exception from label01 to label02 with label08;
        catch java.lang.Throwable from label01 to label02 with label07;
        catch java.lang.Throwable from label09 to label10 with label07;
    }

    public void monitor()
    {
        com.android.server.NativeDaemonConnector r0;
        java.lang.Object r1;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.NativeDaemonConnector;

        r1 = r0.<com.android.server.NativeDaemonConnector: java.lang.Object mDaemonLock>;

        entermonitor r1;

     label1:
        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void run()
    {
        com.android.server.NativeDaemonConnector r0;
        android.os.Handler $r3;
        android.os.Looper $r4;
        boolean $z0, $z1;
        java.lang.Exception $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r9;

        r0 := @this: com.android.server.NativeDaemonConnector;

        $r3 = new android.os.Handler;

        $r4 = r0.<com.android.server.NativeDaemonConnector: android.os.Looper mLooper>;

        specialinvoke $r3.<android.os.Handler: void <init>(android.os.Looper,android.os.Handler$Callback)>($r4, r0);

        r0.<com.android.server.NativeDaemonConnector: android.os.Handler mCallbackHandler> = $r3;

     label1:
        $z0 = staticinvoke <com.android.server.NativeDaemonConnector: boolean isShuttingDown()>();

        if $z0 == 0 goto label2;

        goto label5;

     label2:
        specialinvoke r0.<com.android.server.NativeDaemonConnector: void listenToSocket()>();

     label3:
        goto label1;

     label4:
        $r5 := @caughtexception;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in NativeDaemonConnector: ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.NativeDaemonConnector: void loge(java.lang.String)>($r9);

        $z1 = staticinvoke <com.android.server.NativeDaemonConnector: boolean isShuttingDown()>();

        if $z1 == 0 goto label6;

     label5:
        return;

     label6:
        staticinvoke <android.os.SystemClock: void sleep(long)>(5000L);

        goto label3;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    public void setDebug(boolean)
    {
        com.android.server.NativeDaemonConnector r0;
        boolean z0;

        r0 := @this: com.android.server.NativeDaemonConnector;

        z0 := @parameter0: boolean;

        r0.<com.android.server.NativeDaemonConnector: boolean mDebug> = z0;

        return;
    }

    public void setWarnIfHeld(java.lang.Object)
    {
        com.android.server.NativeDaemonConnector r0;
        java.lang.Object r1, $r2;
        boolean z0;

        r0 := @this: com.android.server.NativeDaemonConnector;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.android.server.NativeDaemonConnector: java.lang.Object mWarnIfHeld>;

        if $r2 != null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        staticinvoke <com.android.internal.util.Preconditions: void checkState(boolean)>(z0);

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        r0.<com.android.server.NativeDaemonConnector: java.lang.Object mWarnIfHeld> = r1;

        return;
    }

    public void waitForCallbacks()
    {
        com.android.server.NativeDaemonConnector r0;
        java.lang.Thread $r1, $r3;
        android.os.Looper $r2;
        java.lang.IllegalStateException $r4;
        java.util.concurrent.CountDownLatch $r5;
        com.android.server.NativeDaemonConnector$1 $r6;
        android.os.Handler $r7;
        java.lang.Throwable $r8;
        java.lang.String $r9;

        r0 := @this: com.android.server.NativeDaemonConnector;

        $r1 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r2 = r0.<com.android.server.NativeDaemonConnector: android.os.Looper mLooper>;

        $r3 = virtualinvoke $r2.<android.os.Looper: java.lang.Thread getThread()>();

        if $r1 == $r3 goto label5;

        $r5 = new java.util.concurrent.CountDownLatch;

        specialinvoke $r5.<java.util.concurrent.CountDownLatch: void <init>(int)>(1);

        $r7 = r0.<com.android.server.NativeDaemonConnector: android.os.Handler mCallbackHandler>;

        $r6 = new com.android.server.NativeDaemonConnector$1;

        specialinvoke $r6.<com.android.server.NativeDaemonConnector$1: void <init>(com.android.server.NativeDaemonConnector,java.util.concurrent.CountDownLatch)>(r0, $r5);

        virtualinvoke $r7.<android.os.Handler: boolean post(java.lang.Runnable)>($r6);

     label1:
        virtualinvoke $r5.<java.util.concurrent.CountDownLatch: void await()>();

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        $r9 = r0.<com.android.server.NativeDaemonConnector: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>($r9, "Interrupted while waiting for unsolicited response handling", $r8);

     label4:
        return;

     label5:
        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Must not call this method on callback thread");

        throw $r4;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <com.android.server.NativeDaemonConnector: long WARN_EXECUTE_DELAY_MS> = 500L;

        <com.android.server.NativeDaemonConnector: boolean VDBG> = 0;

        <com.android.server.NativeDaemonConnector: long DEFAULT_TIMEOUT> = 60000L;

        return;
    }
}
