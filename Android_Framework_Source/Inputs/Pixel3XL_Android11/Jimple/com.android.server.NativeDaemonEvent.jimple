public class com.android.server.NativeDaemonEvent extends java.lang.Object
{
    public static final java.lang.String SENSITIVE_MARKER;
    private final int mCmdNumber;
    private final int mCode;
    private java.io.FileDescriptor[] mFdList;
    private final java.lang.String mLogMessage;
    private final java.lang.String mMessage;
    private java.lang.String[] mParsed;
    private final java.lang.String mRawEvent;

    private void <init>(int, int, java.lang.String, java.lang.String, java.lang.String, java.io.FileDescriptor[])
    {
        com.android.server.NativeDaemonEvent r0;
        int i0, i1;
        java.lang.String r1, r2, r3;
        java.io.FileDescriptor[] r4;

        r0 := @this: com.android.server.NativeDaemonEvent;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: java.lang.String;

        r4 := @parameter5: java.io.FileDescriptor[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.NativeDaemonEvent: int mCmdNumber> = i0;

        r0.<com.android.server.NativeDaemonEvent: int mCode> = i1;

        r0.<com.android.server.NativeDaemonEvent: java.lang.String mMessage> = r1;

        r0.<com.android.server.NativeDaemonEvent: java.lang.String mRawEvent> = r2;

        r0.<com.android.server.NativeDaemonEvent: java.lang.String mLogMessage> = r3;

        r0.<com.android.server.NativeDaemonEvent: java.lang.String[] mParsed> = null;

        r0.<com.android.server.NativeDaemonEvent: java.io.FileDescriptor[] mFdList> = r4;

        return;
    }

    public static java.lang.String[] filterMessageList(com.android.server.NativeDaemonEvent[], int)
    {
        com.android.server.NativeDaemonEvent[] r0;
        int i0, i1, $i2, $i3, i4;
        java.util.ArrayList r1;
        com.android.server.NativeDaemonEvent r2;
        java.lang.String[] $r3, $r5;
        java.lang.Object[] $r4;
        java.lang.String $r6;

        r0 := @parameter0: com.android.server.NativeDaemonEvent[];

        i0 := @parameter1: int;

        r1 = staticinvoke <com.google.android.collect.Lists: java.util.ArrayList newArrayList()>();

        i1 = lengthof r0;

        i4 = 0;

     label1:
        if i4 >= i1 goto label3;

        r2 = r0[i4];

        $i3 = virtualinvoke r2.<com.android.server.NativeDaemonEvent: int getCode()>();

        if $i3 != i0 goto label2;

        $r6 = virtualinvoke r2.<com.android.server.NativeDaemonEvent: java.lang.String getMessage()>();

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        $i2 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        $r3 = newarray (java.lang.String)[$i2];

        $r4 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r3);

        $r5 = (java.lang.String[]) $r4;

        return $r5;
    }

    private static boolean isClassUnsolicited(int)
    {
        int i0;
        boolean z0;

        i0 := @parameter0: int;

        if i0 < 600 goto label1;

        if i0 >= 700 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public static com.android.server.NativeDaemonEvent parseRawEvent(java.lang.String, java.io.FileDescriptor[])
    {
        java.io.FileDescriptor[] r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9, i10, i11;
        java.lang.IllegalArgumentException $r2, $r14, $r18, $r20;
        java.lang.String $r3, $r4, $r5, $r6, $r8, $r11, $r15, $r16, r21, r24, $r26;
        boolean $z0, $z1;
        java.lang.StringBuilder $r7;
        java.lang.Throwable $r17, $r19;
        java.lang.String[] r22;
        com.android.server.NativeDaemonEvent $r25;

        r21 := @parameter0: java.lang.String;

        r0 := @parameter1: java.io.FileDescriptor[];

        r22 = virtualinvoke r21.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        $i2 = lengthof r22;

        if $i2 < 2 goto label11;

     label01:
        $r3 = r22[0];

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3);

        $r4 = r22[0];

        i8 = virtualinvoke $r4.<java.lang.String: int length()>();

     label02:
        i1 = i8 + 1;

        i9 = -1;

        i10 = i1;

        $z0 = staticinvoke <com.android.server.NativeDaemonEvent: boolean isClassUnsolicited(int)>(i0);

        if $z0 != 0 goto label07;

        $i6 = lengthof r22;

        if $i6 < 3 goto label06;

     label03:
        $r15 = r22[1];

        i9 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r15);

        $r16 = r22[1];

        i11 = virtualinvoke $r16.<java.lang.String: int length()>();

     label04:
        $i7 = i11 + 1;

        i10 = i1 + $i7;

        goto label07;

     label05:
        $r19 := @caughtexception;

        $r20 = new java.lang.IllegalArgumentException;

        specialinvoke $r20.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>("problem parsing cmdNumber", $r19);

        throw $r20;

     label06:
        $r14 = new java.lang.IllegalArgumentException;

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Insufficient arguemnts");

        throw $r14;

     label07:
        $i3 = lengthof r22;

        if $i3 <= 2 goto label08;

        $r5 = r22[2];

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("{{sensitive}}");

        if $z1 == 0 goto label08;

        $r6 = r22[2];

        $i4 = virtualinvoke $r6.<java.lang.String: int length()>();

        $i5 = $i4 + 1;

        i10 = i10 + $i5;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = r22[0];

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r11 = r22[1];

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" {}");

        r24 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label09;

     label08:
        r24 = r21;

     label09:
        $r25 = new com.android.server.NativeDaemonEvent;

        $r26 = virtualinvoke r21.<java.lang.String: java.lang.String substring(int)>(i10);

        specialinvoke $r25.<com.android.server.NativeDaemonEvent: void <init>(int,int,java.lang.String,java.lang.String,java.lang.String,java.io.FileDescriptor[])>(i9, i0, $r26, r21, r24, r0);

        return $r25;

     label10:
        $r17 := @caughtexception;

        $r18 = new java.lang.IllegalArgumentException;

        specialinvoke $r18.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>("problem parsing code", $r17);

        throw $r18;

     label11:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Insufficient arguments");

        throw $r2;

        catch java.lang.NumberFormatException from label01 to label02 with label10;
        catch java.lang.NumberFormatException from label03 to label04 with label05;
    }

    public static java.lang.String[] unescapeArgs(java.lang.String)
    {
        java.lang.String r0, $r6, $r7, r8;
        int i0, $i2, $i3, i6, i8, i9, i10, i11, i12;
        java.util.ArrayList $r2;
        char $c1, $c4, $c5;
        java.lang.String[] $r3, $r5;
        java.lang.Object[] $r4;
        boolean z1;
        byte b7;

        r0 := @parameter0: java.lang.String;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        i0 = virtualinvoke r0.<java.lang.String: int length()>();

        i6 = 0;

        z1 = 0;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        if $c1 != 34 goto label01;

        z1 = 1;

        i6 = 0 + 1;

     label01:
        if i6 >= i0 goto label12;

        if z1 == 0 goto label02;

        b7 = 34;

        goto label03;

     label02:
        b7 = 32;

     label03:
        i8 = i6;

     label04:
        if i8 >= i0 goto label06;

        $c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i8);

        if $c4 == b7 goto label06;

        i9 = i8;

        $c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i8);

        if $c5 != 92 goto label05;

        i9 = i8 + 1;

     label05:
        i8 = i9 + 1;

        goto label04;

     label06:
        i10 = i8;

        if i8 <= i0 goto label07;

        i10 = i0;

     label07:
        r8 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i6, i10);

        $i3 = virtualinvoke r8.<java.lang.String: int length()>();

        i6 = i6 + $i3;

        if z1 != 0 goto label08;

        r8 = virtualinvoke r8.<java.lang.String: java.lang.String trim()>();

        goto label09;

     label08:
        i6 = i6 + 1;

     label09:
        $r6 = virtualinvoke r8.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\\\", "\\");

        $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\\"", "\"");

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

        i11 = virtualinvoke r0.<java.lang.String: int indexOf(int,int)>(32, i6);

        i12 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String,int)>(" \"", i6);

        if i12 <= -1 goto label10;

        if i12 > i11 goto label10;

        z1 = 1;

        i6 = i12 + 2;

        goto label11;

     label10:
        z1 = 0;

        if i11 <= -1 goto label11;

        i6 = i11 + 1;

        z1 = 0;

     label11:
        goto label01;

     label12:
        $i2 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        $r3 = newarray (java.lang.String)[$i2];

        $r4 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r3);

        $r5 = (java.lang.String[]) $r4;

        return $r5;
    }

    public void checkCode(int)
    {
        com.android.server.NativeDaemonEvent r0;
        int i0, $i1;
        java.lang.StringBuilder $r2;
        java.lang.IllegalStateException $r7;
        java.lang.String $r8;

        r0 := @this: com.android.server.NativeDaemonEvent;

        i0 := @parameter0: int;

        $i1 = r0.<com.android.server.NativeDaemonEvent: int mCode>;

        if $i1 != i0 goto label1;

        return;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but was: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r7 = new java.lang.IllegalStateException;

        $r8 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r8);

        throw $r7;
    }

    public int getCmdNumber()
    {
        com.android.server.NativeDaemonEvent r0;
        int $i0;

        r0 := @this: com.android.server.NativeDaemonEvent;

        $i0 = r0.<com.android.server.NativeDaemonEvent: int mCmdNumber>;

        return $i0;
    }

    public int getCode()
    {
        com.android.server.NativeDaemonEvent r0;
        int $i0;

        r0 := @this: com.android.server.NativeDaemonEvent;

        $i0 = r0.<com.android.server.NativeDaemonEvent: int mCode>;

        return $i0;
    }

    public java.lang.String getField(int)
    {
        com.android.server.NativeDaemonEvent r0;
        java.lang.String[] r1, $r2, $r5;
        int $i0, i1, i2;
        java.lang.String $r3, $r4;

        r0 := @this: com.android.server.NativeDaemonEvent;

        i1 := @parameter0: int;

        $r2 = r0.<com.android.server.NativeDaemonEvent: java.lang.String[] mParsed>;

        if $r2 != null goto label1;

        $r4 = r0.<com.android.server.NativeDaemonEvent: java.lang.String mRawEvent>;

        $r5 = staticinvoke <com.android.server.NativeDaemonEvent: java.lang.String[] unescapeArgs(java.lang.String)>($r4);

        r0.<com.android.server.NativeDaemonEvent: java.lang.String[] mParsed> = $r5;

     label1:
        i2 = i1 + 2;

        r1 = r0.<com.android.server.NativeDaemonEvent: java.lang.String[] mParsed>;

        $i0 = lengthof r1;

        if i2 <= $i0 goto label2;

        return null;

     label2:
        $r3 = r1[i2];

        return $r3;
    }

    public java.io.FileDescriptor[] getFileDescriptors()
    {
        com.android.server.NativeDaemonEvent r0;
        java.io.FileDescriptor[] $r1;

        r0 := @this: com.android.server.NativeDaemonEvent;

        $r1 = r0.<com.android.server.NativeDaemonEvent: java.io.FileDescriptor[] mFdList>;

        return $r1;
    }

    public java.lang.String getMessage()
    {
        com.android.server.NativeDaemonEvent r0;
        java.lang.String $r1;

        r0 := @this: com.android.server.NativeDaemonEvent;

        $r1 = r0.<com.android.server.NativeDaemonEvent: java.lang.String mMessage>;

        return $r1;
    }

    public java.lang.String getRawEvent()
    {
        com.android.server.NativeDaemonEvent r0;
        java.lang.String $r1;

        r0 := @this: com.android.server.NativeDaemonEvent;

        $r1 = r0.<com.android.server.NativeDaemonEvent: java.lang.String mRawEvent>;

        return $r1;
    }

    public boolean isClassClientError()
    {
        com.android.server.NativeDaemonEvent r0;
        int i0;
        boolean z0;

        r0 := @this: com.android.server.NativeDaemonEvent;

        i0 = r0.<com.android.server.NativeDaemonEvent: int mCode>;

        if i0 < 500 goto label1;

        if i0 >= 600 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isClassContinue()
    {
        com.android.server.NativeDaemonEvent r0;
        int i0;
        boolean z0;

        r0 := @this: com.android.server.NativeDaemonEvent;

        i0 = r0.<com.android.server.NativeDaemonEvent: int mCode>;

        if i0 < 100 goto label1;

        if i0 >= 200 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isClassOk()
    {
        com.android.server.NativeDaemonEvent r0;
        int i0;
        boolean z0;

        r0 := @this: com.android.server.NativeDaemonEvent;

        i0 = r0.<com.android.server.NativeDaemonEvent: int mCode>;

        if i0 < 200 goto label1;

        if i0 >= 300 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isClassServerError()
    {
        com.android.server.NativeDaemonEvent r0;
        int i0;
        boolean z0;

        r0 := @this: com.android.server.NativeDaemonEvent;

        i0 = r0.<com.android.server.NativeDaemonEvent: int mCode>;

        if i0 < 400 goto label1;

        if i0 >= 500 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isClassUnsolicited()
    {
        com.android.server.NativeDaemonEvent r0;
        int $i0;
        boolean $z0;

        r0 := @this: com.android.server.NativeDaemonEvent;

        $i0 = r0.<com.android.server.NativeDaemonEvent: int mCode>;

        $z0 = staticinvoke <com.android.server.NativeDaemonEvent: boolean isClassUnsolicited(int)>($i0);

        return $z0;
    }

    public java.lang.String toString()
    {
        com.android.server.NativeDaemonEvent r0;
        java.lang.String $r1;

        r0 := @this: com.android.server.NativeDaemonEvent;

        $r1 = r0.<com.android.server.NativeDaemonEvent: java.lang.String mLogMessage>;

        return $r1;
    }

    public static void <clinit>()
    {
        <com.android.server.NativeDaemonEvent: java.lang.String SENSITIVE_MARKER> = "{{sensitive}}";

        return;
    }
}
