class com.android.server.NetworkManagementService$Injector extends java.lang.Object
{
    final com.android.server.NetworkManagementService this$0;

    void <init>(com.android.server.NetworkManagementService)
    {
        com.android.server.NetworkManagementService$Injector r0;
        com.android.server.NetworkManagementService r1;

        r0 := @this: com.android.server.NetworkManagementService$Injector;

        r1 := @parameter0: com.android.server.NetworkManagementService;

        r0.<com.android.server.NetworkManagementService$Injector: com.android.server.NetworkManagementService this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    void reset()
    {
        com.android.server.NetworkManagementService$Injector r0;
        java.lang.Object r1;
        int i0, i1, i2;
        com.android.server.NetworkManagementService $r2, $r3, $r5, $r7;
        android.util.SparseBooleanArray $r4, $r6;
        android.util.SparseIntArray $r8;
        java.lang.Throwable $r9;
        int[] r10;

        r0 := @this: com.android.server.NetworkManagementService$Injector;

        $r2 = r0.<com.android.server.NetworkManagementService$Injector: com.android.server.NetworkManagementService this$0>;

        r1 = staticinvoke <com.android.server.NetworkManagementService: java.lang.Object access$1700(com.android.server.NetworkManagementService)>($r2);

        entermonitor r1;

     label01:
        virtualinvoke r0.<com.android.server.NetworkManagementService$Injector: void setDataSaverMode(boolean)>(0);

        r10 = newarray (int)[3];

     label02:
        r10[0] = 1;

        r10[1] = 2;

        r10[2] = 3;

     label03:
        i0 = lengthof r10;

     label04:
        i2 = 0;

     label05:
        if i2 >= i0 goto label08;

        i1 = r10[i2];

     label06:
        virtualinvoke r0.<com.android.server.NetworkManagementService$Injector: void setFirewallChainState(int,boolean)>(i1, 0);

        $r7 = r0.<com.android.server.NetworkManagementService$Injector: com.android.server.NetworkManagementService this$0>;

        $r8 = staticinvoke <com.android.server.NetworkManagementService: android.util.SparseIntArray access$1800(com.android.server.NetworkManagementService,int)>($r7, i1);

        virtualinvoke $r8.<android.util.SparseIntArray: void clear()>();

     label07:
        i2 = i2 + 1;

        goto label05;

     label08:
        $r3 = r0.<com.android.server.NetworkManagementService$Injector: com.android.server.NetworkManagementService this$0>;

        $r4 = staticinvoke <com.android.server.NetworkManagementService: android.util.SparseBooleanArray access$2000(com.android.server.NetworkManagementService)>($r3);

        virtualinvoke $r4.<android.util.SparseBooleanArray: void clear()>();

        $r5 = r0.<com.android.server.NetworkManagementService$Injector: com.android.server.NetworkManagementService this$0>;

        $r6 = staticinvoke <com.android.server.NetworkManagementService: android.util.SparseBooleanArray access$1900(com.android.server.NetworkManagementService)>($r5);

        virtualinvoke $r6.<android.util.SparseBooleanArray: void clear()>();

        exitmonitor r1;

     label09:
        return;

     label10:
        $r9 := @caughtexception;

     label11:
        exitmonitor r1;

     label12:
        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    void setDataSaverMode(boolean)
    {
        com.android.server.NetworkManagementService$Injector r0;
        boolean z0;
        com.android.server.NetworkManagementService $r1;

        r0 := @this: com.android.server.NetworkManagementService$Injector;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.server.NetworkManagementService$Injector: com.android.server.NetworkManagementService this$0>;

        staticinvoke <com.android.server.NetworkManagementService: boolean access$1502(com.android.server.NetworkManagementService,boolean)>($r1, z0);

        return;
    }

    void setFirewallChainState(int, boolean)
    {
        com.android.server.NetworkManagementService$Injector r0;
        int i0;
        boolean z0;
        com.android.server.NetworkManagementService $r1;

        r0 := @this: com.android.server.NetworkManagementService$Injector;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r1 = r0.<com.android.server.NetworkManagementService$Injector: com.android.server.NetworkManagementService this$0>;

        staticinvoke <com.android.server.NetworkManagementService: void access$1600(com.android.server.NetworkManagementService,int,boolean)>($r1, i0, z0);

        return;
    }

    void setFirewallRule(int, int, int)
    {
        com.android.server.NetworkManagementService$Injector r0;
        int i0, i1, i2;
        java.lang.Object r1;
        com.android.server.NetworkManagementService $r3, $r4;
        android.util.SparseIntArray $r5;
        java.lang.Throwable $r6;

        r0 := @this: com.android.server.NetworkManagementService$Injector;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r3 = r0.<com.android.server.NetworkManagementService$Injector: com.android.server.NetworkManagementService this$0>;

        r1 = staticinvoke <com.android.server.NetworkManagementService: java.lang.Object access$1700(com.android.server.NetworkManagementService)>($r3);

        entermonitor r1;

     label1:
        $r4 = r0.<com.android.server.NetworkManagementService$Injector: com.android.server.NetworkManagementService this$0>;

        $r5 = staticinvoke <com.android.server.NetworkManagementService: android.util.SparseIntArray access$1800(com.android.server.NetworkManagementService,int)>($r4, i0);

        virtualinvoke $r5.<android.util.SparseIntArray: void put(int,int)>(i1, i2);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r6 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    void setUidOnMeteredNetworkList(boolean, int, boolean)
    {
        com.android.server.NetworkManagementService$Injector r0;
        boolean z0, z1;
        int i0;
        java.lang.Object r1;
        com.android.server.NetworkManagementService $r3, $r4, $r6;
        android.util.SparseBooleanArray $r5, $r7;
        java.lang.Throwable $r8;

        r0 := @this: com.android.server.NetworkManagementService$Injector;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        z1 := @parameter2: boolean;

        $r3 = r0.<com.android.server.NetworkManagementService$Injector: com.android.server.NetworkManagementService this$0>;

        r1 = staticinvoke <com.android.server.NetworkManagementService: java.lang.Object access$1700(com.android.server.NetworkManagementService)>($r3);

        entermonitor r1;

        if z0 == 0 goto label3;

     label1:
        $r6 = r0.<com.android.server.NetworkManagementService$Injector: com.android.server.NetworkManagementService this$0>;

        $r7 = staticinvoke <com.android.server.NetworkManagementService: android.util.SparseBooleanArray access$1900(com.android.server.NetworkManagementService)>($r6);

        virtualinvoke $r7.<android.util.SparseBooleanArray: void put(int,boolean)>(i0, z1);

     label2:
        goto label4;

     label3:
        $r4 = r0.<com.android.server.NetworkManagementService$Injector: com.android.server.NetworkManagementService this$0>;

        $r5 = staticinvoke <com.android.server.NetworkManagementService: android.util.SparseBooleanArray access$2000(com.android.server.NetworkManagementService)>($r4);

        virtualinvoke $r5.<android.util.SparseBooleanArray: void put(int,boolean)>(i0, z1);

     label4:
        exitmonitor r1;

     label5:
        return;

     label6:
        $r8 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }
}
