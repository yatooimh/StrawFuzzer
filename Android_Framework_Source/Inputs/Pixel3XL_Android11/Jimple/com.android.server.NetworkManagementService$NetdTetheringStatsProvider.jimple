class com.android.server.NetworkManagementService$NetdTetheringStatsProvider extends android.net.ITetheringStatsProvider$Stub
{
    final com.android.server.NetworkManagementService this$0;

    private void <init>(com.android.server.NetworkManagementService)
    {
        com.android.server.NetworkManagementService$NetdTetheringStatsProvider r0;
        com.android.server.NetworkManagementService r1;

        r0 := @this: com.android.server.NetworkManagementService$NetdTetheringStatsProvider;

        r1 := @parameter0: com.android.server.NetworkManagementService;

        r0.<com.android.server.NetworkManagementService$NetdTetheringStatsProvider: com.android.server.NetworkManagementService this$0> = r1;

        specialinvoke r0.<android.net.ITetheringStatsProvider$Stub: void <init>()>();

        return;
    }

    void <init>(com.android.server.NetworkManagementService, com.android.server.NetworkManagementService$1)
    {
        com.android.server.NetworkManagementService$NetdTetheringStatsProvider r0;
        com.android.server.NetworkManagementService r1;
        com.android.server.NetworkManagementService$1 r2;

        r0 := @this: com.android.server.NetworkManagementService$NetdTetheringStatsProvider;

        r1 := @parameter0: com.android.server.NetworkManagementService;

        r2 := @parameter1: com.android.server.NetworkManagementService$1;

        specialinvoke r0.<com.android.server.NetworkManagementService$NetdTetheringStatsProvider: void <init>(com.android.server.NetworkManagementService)>(r1);

        return;
    }

    public android.net.NetworkStats getTetherStats(int)
    {
        com.android.server.NetworkManagementService$NetdTetheringStatsProvider r0;
        android.net.TetherStatsParcel[] r1;
        int i0, $i2, i8, i9;
        com.android.server.NetworkManagementService $r3;
        android.net.INetd $r4;
        android.net.NetworkStats $r5, $r9;
        long $l1, $l3, $l4, $l5, $l6, $l7;
        android.net.NetworkStats$Entry $r6;
        java.lang.String $r7, $r17;
        java.lang.Exception $r10;
        java.lang.IllegalStateException $r11, $r16;
        java.lang.ArrayIndexOutOfBoundsException $r12;
        java.lang.StringBuilder $r13;
        android.net.TetherStatsParcel r19;

        r0 := @this: com.android.server.NetworkManagementService$NetdTetheringStatsProvider;

        i8 := @parameter0: int;

        if i8 == 1 goto label1;

        $r9 = new android.net.NetworkStats;

        $l7 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        specialinvoke $r9.<android.net.NetworkStats: void <init>(long,int)>($l7, 0);

        return $r9;

     label1:
        $r3 = r0.<com.android.server.NetworkManagementService$NetdTetheringStatsProvider: com.android.server.NetworkManagementService this$0>;

        $r4 = staticinvoke <com.android.server.NetworkManagementService: android.net.INetd access$1300(com.android.server.NetworkManagementService)>($r3);

        r1 = interfaceinvoke $r4.<android.net.INetd: android.net.TetherStatsParcel[] tetherGetStats()>();

     label2:
        $r5 = new android.net.NetworkStats;

        $l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $i2 = lengthof r1;

        specialinvoke $r5.<android.net.NetworkStats: void <init>(long,int)>($l1, $i2);

        $r6 = new android.net.NetworkStats$Entry;

        specialinvoke $r6.<android.net.NetworkStats$Entry: void <init>()>();

        i0 = lengthof r1;

        i9 = 0;

     label3:
        if i9 >= i0 goto label7;

        r19 = r1[i9];

     label4:
        $r7 = r19.<android.net.TetherStatsParcel: java.lang.String iface>;

        $r6.<android.net.NetworkStats$Entry: java.lang.String iface> = $r7;

        $r6.<android.net.NetworkStats$Entry: int uid> = -5;

        $r6.<android.net.NetworkStats$Entry: int set> = 0;

        $r6.<android.net.NetworkStats$Entry: int tag> = 0;

        $l3 = r19.<android.net.TetherStatsParcel: long rxBytes>;

        $r6.<android.net.NetworkStats$Entry: long rxBytes> = $l3;

        $l4 = r19.<android.net.TetherStatsParcel: long rxPackets>;

        $r6.<android.net.NetworkStats$Entry: long rxPackets> = $l4;

        $l5 = r19.<android.net.TetherStatsParcel: long txBytes>;

        $r6.<android.net.NetworkStats$Entry: long txBytes> = $l5;

        $l6 = r19.<android.net.TetherStatsParcel: long txPackets>;

        $r6.<android.net.NetworkStats$Entry: long txPackets> = $l6;

        virtualinvoke $r5.<android.net.NetworkStats: android.net.NetworkStats combineValues(android.net.NetworkStats$Entry)>($r6);

     label5:
        i9 = i9 + 1;

        goto label3;

     label6:
        $r12 := @caughtexception;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid tethering stats ");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r16 = new java.lang.IllegalStateException;

        $r17 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r17);

        throw $r16;

     label7:
        return $r5;

     label8:
        $r10 := @caughtexception;

        $r11 = new java.lang.IllegalStateException;

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>("problem parsing tethering stats: ", $r10);

        throw $r11;

        catch android.os.RemoteException from label1 to label2 with label8;
        catch android.os.ServiceSpecificException from label1 to label2 with label8;
        catch java.lang.ArrayIndexOutOfBoundsException from label4 to label5 with label6;
    }

    public void setInterfaceQuota(java.lang.String, long)
    {
        com.android.server.NetworkManagementService$NetdTetheringStatsProvider r0;
        java.lang.String r1;
        long l0;

        r0 := @this: com.android.server.NetworkManagementService$NetdTetheringStatsProvider;

        r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        return;
    }
}
