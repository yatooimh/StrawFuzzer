class com.android.server.NetworkScoreService$3 extends android.database.ContentObserver
{
    final com.android.server.NetworkScoreService this$0;

    void <init>(com.android.server.NetworkScoreService, android.os.Handler)
    {
        com.android.server.NetworkScoreService$3 r0;
        com.android.server.NetworkScoreService r1;
        android.os.Handler r2;

        r0 := @this: com.android.server.NetworkScoreService$3;

        r1 := @parameter0: com.android.server.NetworkScoreService;

        r2 := @parameter1: android.os.Handler;

        r0.<com.android.server.NetworkScoreService$3: com.android.server.NetworkScoreService this$0> = r1;

        specialinvoke r0.<android.database.ContentObserver: void <init>(android.os.Handler)>(r2);

        return;
    }

    public void onChange(boolean, android.net.Uri, int)
    {
        com.android.server.NetworkScoreService$3 r0;
        boolean z0, $z1, $z2;
        int i0;
        android.net.Uri $r1, r7;
        com.android.server.NetworkScoreService $r2;
        android.content.Context $r3;
        android.content.ContentResolver $r4;
        java.lang.Object $r5;
        com.android.server.pm.permission.PermissionManagerServiceInternal $r6;
        java.lang.String r8;

        r0 := @this: com.android.server.NetworkScoreService$3;

        z0 := @parameter0: boolean;

        r7 := @parameter1: android.net.Uri;

        i0 := @parameter2: int;

        $r1 = staticinvoke <android.provider.Settings$Global: android.net.Uri getUriFor(java.lang.String)>("use_open_wifi_package");

        $z1 = virtualinvoke $r1.<android.net.Uri: boolean equals(java.lang.Object)>(r7);

        if $z1 == 0 goto label1;

        $r2 = r0.<com.android.server.NetworkScoreService$3: com.android.server.NetworkScoreService this$0>;

        $r3 = staticinvoke <com.android.server.NetworkScoreService: android.content.Context access$500(com.android.server.NetworkScoreService)>($r2);

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r8 = staticinvoke <android.provider.Settings$Global: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r4, "use_open_wifi_package");

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r8);

        if $z2 != 0 goto label1;

        $r5 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Lcom/android/server/pm/permission/PermissionManagerServiceInternal;");

        $r6 = (com.android.server.pm.permission.PermissionManagerServiceInternal) $r5;

        virtualinvoke $r6.<com.android.server.pm.permission.PermissionManagerServiceInternal: void grantDefaultPermissionsToDefaultUseOpenWifiApp(java.lang.String,int)>(r8, i0);

     label1:
        return;
    }
}
