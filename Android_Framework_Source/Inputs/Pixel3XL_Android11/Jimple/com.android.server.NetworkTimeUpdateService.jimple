public class com.android.server.NetworkTimeUpdateService extends android.os.Binder
{
    private static final java.lang.String ACTION_POLL;
    private static final boolean DBG;
    private static final int EVENT_AUTO_TIME_ENABLED;
    private static final int EVENT_NETWORK_CHANGED;
    private static final int EVENT_POLL_NETWORK_TIME;
    private static final int POLL_REQUEST;
    private static final java.lang.String TAG;
    private final android.app.AlarmManager mAlarmManager;
    private com.android.server.NetworkTimeUpdateService$AutoTimeSettingObserver mAutoTimeSettingObserver;
    private final android.net.ConnectivityManager mCM;
    private final android.content.Context mContext;
    private android.net.Network mDefaultNetwork;
    private android.os.Handler mHandler;
    private com.android.server.NetworkTimeUpdateService$NetworkTimeUpdateCallback mNetworkTimeUpdateCallback;
    private final android.app.PendingIntent mPendingPollIntent;
    private final long mPollingIntervalMs;
    private final long mPollingIntervalShorterMs;
    private final android.util.NtpTrustedTime mTime;
    private final android.app.timedetector.TimeDetector mTimeDetector;
    private int mTryAgainCounter;
    private final int mTryAgainTimesMax;
    private final android.os.PowerManager$WakeLock mWakeLock;

    public void <init>(android.content.Context)
    {
        com.android.server.NetworkTimeUpdateService r0;
        android.content.Context r1, $r4, $r7, $r10, $r14, $r16, $r18, $r20;
        android.util.NtpTrustedTime $r3;
        java.lang.Object $r5, $r8, $r11, $r22;
        android.app.AlarmManager $r6;
        android.app.timedetector.TimeDetector $r9;
        android.net.ConnectivityManager $r12;
        android.content.Intent $r13;
        android.app.PendingIntent $r15;
        android.content.res.Resources $r17, $r19, $r21;
        int $i0, $i2, $i4;
        long $l1, $l3;
        android.os.PowerManager $r23;
        android.os.PowerManager$WakeLock $r24;

        r0 := @this: com.android.server.NetworkTimeUpdateService;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.os.Binder: void <init>()>();

        r0.<com.android.server.NetworkTimeUpdateService: android.net.Network mDefaultNetwork> = null;

        r0.<com.android.server.NetworkTimeUpdateService: android.content.Context mContext> = r1;

        $r3 = staticinvoke <android.util.NtpTrustedTime: android.util.NtpTrustedTime getInstance(android.content.Context)>(r1);

        r0.<com.android.server.NetworkTimeUpdateService: android.util.NtpTrustedTime mTime> = $r3;

        $r4 = r0.<com.android.server.NetworkTimeUpdateService: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/app/AlarmManager;");

        $r6 = (android.app.AlarmManager) $r5;

        r0.<com.android.server.NetworkTimeUpdateService: android.app.AlarmManager mAlarmManager> = $r6;

        $r7 = r0.<com.android.server.NetworkTimeUpdateService: android.content.Context mContext>;

        $r8 = virtualinvoke $r7.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/app/timedetector/TimeDetector;");

        $r9 = (android.app.timedetector.TimeDetector) $r8;

        r0.<com.android.server.NetworkTimeUpdateService: android.app.timedetector.TimeDetector mTimeDetector> = $r9;

        $r10 = r0.<com.android.server.NetworkTimeUpdateService: android.content.Context mContext>;

        $r11 = virtualinvoke $r10.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/net/ConnectivityManager;");

        $r12 = (android.net.ConnectivityManager) $r11;

        r0.<com.android.server.NetworkTimeUpdateService: android.net.ConnectivityManager mCM> = $r12;

        $r13 = new android.content.Intent;

        specialinvoke $r13.<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>("com.android.server.NetworkTimeUpdateService.action.POLL", null);

        $r14 = r0.<com.android.server.NetworkTimeUpdateService: android.content.Context mContext>;

        $r15 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>($r14, 0, $r13, 0);

        r0.<com.android.server.NetworkTimeUpdateService: android.app.PendingIntent mPendingPollIntent> = $r15;

        $r16 = r0.<com.android.server.NetworkTimeUpdateService: android.content.Context mContext>;

        $r17 = virtualinvoke $r16.<android.content.Context: android.content.res.Resources getResources()>();

        $i0 = virtualinvoke $r17.<android.content.res.Resources: int getInteger(int)>(17694871);

        $l1 = (long) $i0;

        r0.<com.android.server.NetworkTimeUpdateService: long mPollingIntervalMs> = $l1;

        $r18 = r0.<com.android.server.NetworkTimeUpdateService: android.content.Context mContext>;

        $r19 = virtualinvoke $r18.<android.content.Context: android.content.res.Resources getResources()>();

        $i2 = virtualinvoke $r19.<android.content.res.Resources: int getInteger(int)>(17694872);

        $l3 = (long) $i2;

        r0.<com.android.server.NetworkTimeUpdateService: long mPollingIntervalShorterMs> = $l3;

        $r20 = r0.<com.android.server.NetworkTimeUpdateService: android.content.Context mContext>;

        $r21 = virtualinvoke $r20.<android.content.Context: android.content.res.Resources getResources()>();

        $i4 = virtualinvoke $r21.<android.content.res.Resources: int getInteger(int)>(17694873);

        r0.<com.android.server.NetworkTimeUpdateService: int mTryAgainTimesMax> = $i4;

        $r22 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/os/PowerManager;");

        $r23 = (android.os.PowerManager) $r22;

        $r24 = virtualinvoke $r23.<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>(1, "NetworkTimeUpdateService");

        r0.<com.android.server.NetworkTimeUpdateService: android.os.PowerManager$WakeLock mWakeLock> = $r24;

        return;
    }

    static android.os.Handler access$100(com.android.server.NetworkTimeUpdateService)
    {
        com.android.server.NetworkTimeUpdateService r0;
        android.os.Handler $r1;

        r0 := @parameter0: com.android.server.NetworkTimeUpdateService;

        $r1 = r0.<com.android.server.NetworkTimeUpdateService: android.os.Handler mHandler>;

        return $r1;
    }

    static void access$200(com.android.server.NetworkTimeUpdateService, int)
    {
        com.android.server.NetworkTimeUpdateService r0;
        int i0;

        r0 := @parameter0: com.android.server.NetworkTimeUpdateService;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.NetworkTimeUpdateService: void onPollNetworkTime(int)>(i0);

        return;
    }

    static android.net.Network access$300(com.android.server.NetworkTimeUpdateService)
    {
        com.android.server.NetworkTimeUpdateService r0;
        android.net.Network $r1;

        r0 := @parameter0: com.android.server.NetworkTimeUpdateService;

        $r1 = r0.<com.android.server.NetworkTimeUpdateService: android.net.Network mDefaultNetwork>;

        return $r1;
    }

    static android.net.Network access$302(com.android.server.NetworkTimeUpdateService, android.net.Network)
    {
        com.android.server.NetworkTimeUpdateService r0;
        android.net.Network r1;

        r0 := @parameter0: com.android.server.NetworkTimeUpdateService;

        r1 := @parameter1: android.net.Network;

        r0.<com.android.server.NetworkTimeUpdateService: android.net.Network mDefaultNetwork> = r1;

        return r1;
    }

    private void onPollNetworkTime(int)
    {
        com.android.server.NetworkTimeUpdateService r0;
        int i0;
        android.net.Network $r2;
        android.os.PowerManager$WakeLock $r3, $r4, $r6;
        java.lang.Throwable $r5;

        r0 := @this: com.android.server.NetworkTimeUpdateService;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.NetworkTimeUpdateService: android.net.Network mDefaultNetwork>;

        if $r2 != null goto label1;

        return;

     label1:
        $r3 = r0.<com.android.server.NetworkTimeUpdateService: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r3.<android.os.PowerManager$WakeLock: void acquire()>();

     label2:
        specialinvoke r0.<com.android.server.NetworkTimeUpdateService: void onPollNetworkTimeUnderWakeLock(int)>(i0);

     label3:
        $r4 = r0.<com.android.server.NetworkTimeUpdateService: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r4.<android.os.PowerManager$WakeLock: void release()>();

        return;

     label4:
        $r5 := @caughtexception;

        $r6 = r0.<com.android.server.NetworkTimeUpdateService: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r6.<android.os.PowerManager$WakeLock: void release()>();

        throw $r5;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    private void onPollNetworkTimeUnderWakeLock(int)
    {
        com.android.server.NetworkTimeUpdateService r0;
        long l0, l1, $l4, $l5, $l7, $l8, $l9, $l10;
        int i2, $i3, i12, i13;
        android.util.NtpTrustedTime $r1, $r2, $r3;
        byte $b6, $b11;
        android.app.timedetector.NetworkTimeSuggestion $r4;
        android.os.TimestampedValue $r5;
        java.lang.Long $r6;
        java.lang.StringBuilder $r7;
        java.lang.String[] $r10;
        java.lang.String $r11;
        android.app.timedetector.TimeDetector $r12;
        android.util.NtpTrustedTime$TimeResult r13, r14;

        r0 := @this: com.android.server.NetworkTimeUpdateService;

        i12 := @parameter0: int;

        $r1 = r0.<com.android.server.NetworkTimeUpdateService: android.util.NtpTrustedTime mTime>;

        r13 = virtualinvoke $r1.<android.util.NtpTrustedTime: android.util.NtpTrustedTime$TimeResult getCachedTimeResult()>();

        if r13 == null goto label1;

        r14 = r13;

        $l9 = virtualinvoke r13.<android.util.NtpTrustedTime$TimeResult: long getAgeMillis()>();

        $l10 = r0.<com.android.server.NetworkTimeUpdateService: long mPollingIntervalMs>;

        $b11 = $l9 cmp $l10;

        if $b11 < 0 goto label2;

     label1:
        $r2 = r0.<com.android.server.NetworkTimeUpdateService: android.util.NtpTrustedTime mTime>;

        virtualinvoke $r2.<android.util.NtpTrustedTime: boolean forceRefresh()>();

        $r3 = r0.<com.android.server.NetworkTimeUpdateService: android.util.NtpTrustedTime mTime>;

        r14 = virtualinvoke $r3.<android.util.NtpTrustedTime: android.util.NtpTrustedTime$TimeResult getCachedTimeResult()>();

     label2:
        if r14 == null goto label3;

        l0 = virtualinvoke r14.<android.util.NtpTrustedTime$TimeResult: long getAgeMillis()>();

        l1 = r0.<com.android.server.NetworkTimeUpdateService: long mPollingIntervalMs>;

        $b6 = l0 cmp l1;

        if $b6 >= 0 goto label3;

        specialinvoke r0.<com.android.server.NetworkTimeUpdateService: void resetAlarm(long)>(l1);

        $r4 = new android.app.timedetector.NetworkTimeSuggestion;

        $r5 = new android.os.TimestampedValue;

        $l7 = virtualinvoke r14.<android.util.NtpTrustedTime$TimeResult: long getElapsedRealtimeMillis()>();

        $l8 = virtualinvoke r14.<android.util.NtpTrustedTime$TimeResult: long getTimeMillis()>();

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l8);

        specialinvoke $r5.<android.os.TimestampedValue: void <init>(long,java.lang.Object)>($l7, $r6);

        specialinvoke $r4.<android.app.timedetector.NetworkTimeSuggestion: void <init>(android.os.TimestampedValue)>($r5);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Origin: NetworkTimeUpdateService. event=");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i12);

        $r10 = newarray (java.lang.String)[1];

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10[0] = $r11;

        virtualinvoke $r4.<android.app.timedetector.NetworkTimeSuggestion: void addDebugInfo(java.lang.String[])>($r10);

        $r12 = r0.<com.android.server.NetworkTimeUpdateService: android.app.timedetector.TimeDetector mTimeDetector>;

        interfaceinvoke $r12.<android.app.timedetector.TimeDetector: void suggestNetworkTime(android.app.timedetector.NetworkTimeSuggestion)>($r4);

        goto label6;

     label3:
        $i3 = r0.<com.android.server.NetworkTimeUpdateService: int mTryAgainCounter>;

        i2 = $i3 + 1;

        r0.<com.android.server.NetworkTimeUpdateService: int mTryAgainCounter> = i2;

        i13 = r0.<com.android.server.NetworkTimeUpdateService: int mTryAgainTimesMax>;

        if i13 < 0 goto label5;

        if i2 > i13 goto label4;

        goto label5;

     label4:
        r0.<com.android.server.NetworkTimeUpdateService: int mTryAgainCounter> = 0;

        $l5 = r0.<com.android.server.NetworkTimeUpdateService: long mPollingIntervalMs>;

        specialinvoke r0.<com.android.server.NetworkTimeUpdateService: void resetAlarm(long)>($l5);

        goto label6;

     label5:
        $l4 = r0.<com.android.server.NetworkTimeUpdateService: long mPollingIntervalShorterMs>;

        specialinvoke r0.<com.android.server.NetworkTimeUpdateService: void resetAlarm(long)>($l4);

     label6:
        return;
    }

    private void registerForAlarms()
    {
        com.android.server.NetworkTimeUpdateService r0;
        com.android.server.NetworkTimeUpdateService$1 $r1;
        android.content.Context $r2;
        android.content.IntentFilter $r3;

        r0 := @this: com.android.server.NetworkTimeUpdateService;

        $r2 = r0.<com.android.server.NetworkTimeUpdateService: android.content.Context mContext>;

        $r1 = new com.android.server.NetworkTimeUpdateService$1;

        specialinvoke $r1.<com.android.server.NetworkTimeUpdateService$1: void <init>(com.android.server.NetworkTimeUpdateService)>(r0);

        $r3 = new android.content.IntentFilter;

        specialinvoke $r3.<android.content.IntentFilter: void <init>(java.lang.String)>("com.android.server.NetworkTimeUpdateService.action.POLL");

        virtualinvoke $r2.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r1, $r3);

        return;
    }

    private void resetAlarm(long)
    {
        com.android.server.NetworkTimeUpdateService r0;
        long l0, l1, $l2;
        android.app.PendingIntent $r1, $r3;
        android.app.AlarmManager $r2, $r4;

        r0 := @this: com.android.server.NetworkTimeUpdateService;

        l0 := @parameter0: long;

        $r2 = r0.<com.android.server.NetworkTimeUpdateService: android.app.AlarmManager mAlarmManager>;

        $r1 = r0.<com.android.server.NetworkTimeUpdateService: android.app.PendingIntent mPendingPollIntent>;

        virtualinvoke $r2.<android.app.AlarmManager: void cancel(android.app.PendingIntent)>($r1);

        l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r4 = r0.<com.android.server.NetworkTimeUpdateService: android.app.AlarmManager mAlarmManager>;

        $l2 = l1 + l0;

        $r3 = r0.<com.android.server.NetworkTimeUpdateService: android.app.PendingIntent mPendingPollIntent>;

        virtualinvoke $r4.<android.app.AlarmManager: void set(int,long,android.app.PendingIntent)>(3, $l2, $r3);

        return;
    }

    protected void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.NetworkTimeUpdateService r0;
        java.io.PrintWriter r1;
        android.content.Context $r2;
        boolean $z0;
        long $l0, $l1, $l4;
        java.lang.StringBuilder $r3, $r7, $r12, $r16;
        int $i2, $i3;
        java.lang.String $r6, $r10, $r15, $r19;
        android.util.NtpTrustedTime $r11;
        java.io.FileDescriptor r20;
        java.lang.String[] r21;
        android.util.NtpTrustedTime$TimeResult r24;

        r0 := @this: com.android.server.NetworkTimeUpdateService;

        r20 := @parameter0: java.io.FileDescriptor;

        r1 := @parameter1: java.io.PrintWriter;

        r21 := @parameter2: java.lang.String[];

        $r2 = r0.<com.android.server.NetworkTimeUpdateService: android.content.Context mContext>;

        $z0 = staticinvoke <com.android.internal.util.DumpUtils: boolean checkDumpPermission(android.content.Context,java.lang.String,java.io.PrintWriter)>($r2, "NetworkTimeUpdateService", r1);

        if $z0 != 0 goto label1;

        return;

     label1:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("PollingIntervalMs: ");

        $l0 = r0.<com.android.server.NetworkTimeUpdateService: long mPollingIntervalMs>;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>($l0, r1);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("\nPollingIntervalShorterMs: ");

        $l1 = r0.<com.android.server.NetworkTimeUpdateService: long mPollingIntervalShorterMs>;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>($l1, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nTryAgainTimesMax: ");

        $i2 = r0.<com.android.server.NetworkTimeUpdateService: int mTryAgainTimesMax>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r6);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nTryAgainCounter: ");

        $i3 = r0.<com.android.server.NetworkTimeUpdateService: int mTryAgainCounter>;

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r10);

        $r11 = r0.<com.android.server.NetworkTimeUpdateService: android.util.NtpTrustedTime mTime>;

        r24 = virtualinvoke $r11.<android.util.NtpTrustedTime: android.util.NtpTrustedTime$TimeResult getCachedTimeResult()>();

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NTP cache result: ");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r24);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r15);

        if r24 == null goto label2;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NTP result age: ");

        $l4 = virtualinvoke r24.<android.util.NtpTrustedTime$TimeResult: long getAgeMillis()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l4);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r19);

     label2:
        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        return;
    }

    public void systemRunning()
    {
        com.android.server.NetworkTimeUpdateService r0;
        android.os.HandlerThread $r1;
        com.android.server.NetworkTimeUpdateService$MyHandler $r2;
        android.os.Looper $r3;
        com.android.server.NetworkTimeUpdateService$NetworkTimeUpdateCallback $r4;
        android.os.Handler $r5, $r8;
        android.net.ConnectivityManager $r6;
        com.android.server.NetworkTimeUpdateService$AutoTimeSettingObserver $r7;
        android.content.Context $r9;

        r0 := @this: com.android.server.NetworkTimeUpdateService;

        specialinvoke r0.<com.android.server.NetworkTimeUpdateService: void registerForAlarms()>();

        $r1 = new android.os.HandlerThread;

        specialinvoke $r1.<android.os.HandlerThread: void <init>(java.lang.String)>("NetworkTimeUpdateService");

        virtualinvoke $r1.<android.os.HandlerThread: void start()>();

        $r2 = new com.android.server.NetworkTimeUpdateService$MyHandler;

        $r3 = virtualinvoke $r1.<android.os.HandlerThread: android.os.Looper getLooper()>();

        specialinvoke $r2.<com.android.server.NetworkTimeUpdateService$MyHandler: void <init>(com.android.server.NetworkTimeUpdateService,android.os.Looper)>(r0, $r3);

        r0.<com.android.server.NetworkTimeUpdateService: android.os.Handler mHandler> = $r2;

        $r4 = new com.android.server.NetworkTimeUpdateService$NetworkTimeUpdateCallback;

        specialinvoke $r4.<com.android.server.NetworkTimeUpdateService$NetworkTimeUpdateCallback: void <init>(com.android.server.NetworkTimeUpdateService,com.android.server.NetworkTimeUpdateService$1)>(r0, null);

        r0.<com.android.server.NetworkTimeUpdateService: com.android.server.NetworkTimeUpdateService$NetworkTimeUpdateCallback mNetworkTimeUpdateCallback> = $r4;

        $r6 = r0.<com.android.server.NetworkTimeUpdateService: android.net.ConnectivityManager mCM>;

        $r5 = r0.<com.android.server.NetworkTimeUpdateService: android.os.Handler mHandler>;

        virtualinvoke $r6.<android.net.ConnectivityManager: void registerDefaultNetworkCallback(android.net.ConnectivityManager$NetworkCallback,android.os.Handler)>($r4, $r5);

        $r7 = new com.android.server.NetworkTimeUpdateService$AutoTimeSettingObserver;

        $r9 = r0.<com.android.server.NetworkTimeUpdateService: android.content.Context mContext>;

        $r8 = r0.<com.android.server.NetworkTimeUpdateService: android.os.Handler mHandler>;

        specialinvoke $r7.<com.android.server.NetworkTimeUpdateService$AutoTimeSettingObserver: void <init>(android.content.Context,android.os.Handler,int)>($r9, $r8, 1);

        r0.<com.android.server.NetworkTimeUpdateService: com.android.server.NetworkTimeUpdateService$AutoTimeSettingObserver mAutoTimeSettingObserver> = $r7;

        virtualinvoke $r7.<com.android.server.NetworkTimeUpdateService$AutoTimeSettingObserver: void observe()>();

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.NetworkTimeUpdateService: java.lang.String TAG> = "NetworkTimeUpdateService";

        <com.android.server.NetworkTimeUpdateService: int POLL_REQUEST> = 0;

        <com.android.server.NetworkTimeUpdateService: int EVENT_POLL_NETWORK_TIME> = 2;

        <com.android.server.NetworkTimeUpdateService: int EVENT_NETWORK_CHANGED> = 3;

        <com.android.server.NetworkTimeUpdateService: int EVENT_AUTO_TIME_ENABLED> = 1;

        <com.android.server.NetworkTimeUpdateService: boolean DBG> = 0;

        <com.android.server.NetworkTimeUpdateService: java.lang.String ACTION_POLL> = "com.android.server.NetworkTimeUpdateService.action.POLL";

        return;
    }
}
