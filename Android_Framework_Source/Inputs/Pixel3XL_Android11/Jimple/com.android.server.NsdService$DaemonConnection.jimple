public class com.android.server.NsdService$DaemonConnection extends java.lang.Object
{
    final com.android.server.NativeDaemonConnector mNativeConnector;

    void <init>(com.android.server.NsdService$NativeCallbackReceiver)
    {
        com.android.server.NsdService$DaemonConnection r0;
        com.android.server.NsdService$NativeCallbackReceiver r1;
        com.android.server.NativeDaemonConnector $r2, $r4;
        java.lang.Thread $r3;

        r0 := @this: com.android.server.NsdService$DaemonConnection;

        r1 := @parameter0: com.android.server.NsdService$NativeCallbackReceiver;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new com.android.server.NativeDaemonConnector;

        specialinvoke $r2.<com.android.server.NativeDaemonConnector: void <init>(com.android.server.INativeDaemonConnectorCallbacks,java.lang.String,int,java.lang.String,int,android.os.PowerManager$WakeLock)>(r1, "mdns", 10, "mDnsConnector", 25, null);

        r0.<com.android.server.NsdService$DaemonConnection: com.android.server.NativeDaemonConnector mNativeConnector> = $r2;

        $r3 = new java.lang.Thread;

        $r4 = r0.<com.android.server.NsdService$DaemonConnection: com.android.server.NativeDaemonConnector mNativeConnector>;

        specialinvoke $r3.<java.lang.Thread: void <init>(java.lang.Runnable,java.lang.String)>($r4, "mDnsConnector");

        virtualinvoke $r3.<java.lang.Thread: void start()>();

        return;
    }

    public transient boolean execute(java.lang.Object[])
    {
        com.android.server.NsdService$DaemonConnection r0;
        java.lang.Object[] r1;
        java.lang.StringBuilder $r3, $r11;
        java.lang.String $r5, $r7, $r13, $r15;
        com.android.server.NativeDaemonConnector $r8;
        com.android.server.NativeDaemonConnectorException $r10;

        r0 := @this: com.android.server.NsdService$DaemonConnection;

        r1 := @parameter0: java.lang.Object[];

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mdnssd ");

        $r5 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("NsdService", $r7);

     label1:
        $r8 = r0.<com.android.server.NsdService$DaemonConnection: com.android.server.NativeDaemonConnector mNativeConnector>;

        virtualinvoke $r8.<com.android.server.NativeDaemonConnector: com.android.server.NativeDaemonEvent execute(java.lang.String,java.lang.Object[])>("mdnssd", r1);

     label2:
        return 1;

     label3:
        $r10 := @caughtexception;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to execute mdnssd ");

        $r13 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(r1);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("NsdService", $r15, $r10);

        return 0;

        catch com.android.server.NativeDaemonConnectorException from label1 to label2 with label3;
    }

    public void start()
    {
        com.android.server.NsdService$DaemonConnection r0;
        java.lang.Object[] $r1;

        r0 := @this: com.android.server.NsdService$DaemonConnection;

        $r1 = newarray (java.lang.Object)[1];

        $r1[0] = "start-service";

        virtualinvoke r0.<com.android.server.NsdService$DaemonConnection: boolean execute(java.lang.Object[])>($r1);

        return;
    }

    public void stop()
    {
        com.android.server.NsdService$DaemonConnection r0;
        java.lang.Object[] $r1;

        r0 := @this: com.android.server.NsdService$DaemonConnection;

        $r1 = newarray (java.lang.Object)[1];

        $r1[0] = "stop-service";

        virtualinvoke r0.<com.android.server.NsdService$DaemonConnection: boolean execute(java.lang.Object[])>($r1);

        return;
    }
}
