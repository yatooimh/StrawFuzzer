public class com.android.server.NsdService extends android.net.nsd.INsdManager$Stub
{
    private static final boolean DBG;
    private static final int INVALID_ID;
    private static final java.lang.String MDNS_TAG;
    private static final java.lang.String TAG;
    private final java.util.HashMap mClients;
    private final android.content.Context mContext;
    private final com.android.server.NsdService$DaemonConnection mDaemon;
    private final com.android.server.NsdService$NativeCallbackReceiver mDaemonCallback;
    private final android.util.SparseArray mIdToClientInfoMap;
    private final com.android.server.NsdService$NsdSettings mNsdSettings;
    private final com.android.server.NsdService$NsdStateMachine mNsdStateMachine;
    private final com.android.internal.util.AsyncChannel mReplyChannel;
    private int mUniqueId;

    void <init>(android.content.Context, com.android.server.NsdService$NsdSettings, android.os.Handler, com.android.server.NsdService$DaemonConnectionSupplier)
    {
        com.android.server.NsdService r0;
        com.android.server.NsdService$NsdSettings r1;
        android.os.Handler r2;
        com.android.server.NsdService$DaemonConnectionSupplier r3;
        java.util.HashMap $r4;
        android.util.SparseArray $r5;
        com.android.internal.util.AsyncChannel $r6;
        com.android.server.NsdService$NsdStateMachine $r7;
        com.android.server.NsdService$NativeCallbackReceiver $r8;
        com.android.server.NsdService$DaemonConnection $r9;
        android.content.Context r10;

        r0 := @this: com.android.server.NsdService;

        r10 := @parameter0: android.content.Context;

        r1 := @parameter1: com.android.server.NsdService$NsdSettings;

        r2 := @parameter2: android.os.Handler;

        r3 := @parameter3: com.android.server.NsdService$DaemonConnectionSupplier;

        specialinvoke r0.<android.net.nsd.INsdManager$Stub: void <init>()>();

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.NsdService: java.util.HashMap mClients> = $r4;

        $r5 = new android.util.SparseArray;

        specialinvoke $r5.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.NsdService: android.util.SparseArray mIdToClientInfoMap> = $r5;

        $r6 = new com.android.internal.util.AsyncChannel;

        specialinvoke $r6.<com.android.internal.util.AsyncChannel: void <init>()>();

        r0.<com.android.server.NsdService: com.android.internal.util.AsyncChannel mReplyChannel> = $r6;

        r0.<com.android.server.NsdService: int mUniqueId> = 1;

        r0.<com.android.server.NsdService: android.content.Context mContext> = r10;

        r0.<com.android.server.NsdService: com.android.server.NsdService$NsdSettings mNsdSettings> = r1;

        $r7 = new com.android.server.NsdService$NsdStateMachine;

        specialinvoke $r7.<com.android.server.NsdService$NsdStateMachine: void <init>(com.android.server.NsdService,java.lang.String,android.os.Handler)>(r0, "NsdService", r2);

        r0.<com.android.server.NsdService: com.android.server.NsdService$NsdStateMachine mNsdStateMachine> = $r7;

        virtualinvoke $r7.<com.android.server.NsdService$NsdStateMachine: void start()>();

        $r8 = new com.android.server.NsdService$NativeCallbackReceiver;

        specialinvoke $r8.<com.android.server.NsdService$NativeCallbackReceiver: void <init>(com.android.server.NsdService)>(r0);

        r0.<com.android.server.NsdService: com.android.server.NsdService$NativeCallbackReceiver mDaemonCallback> = $r8;

        $r9 = interfaceinvoke r3.<com.android.server.NsdService$DaemonConnectionSupplier: com.android.server.NsdService$DaemonConnection get(com.android.server.NsdService$NativeCallbackReceiver)>($r8);

        r0.<com.android.server.NsdService: com.android.server.NsdService$DaemonConnection mDaemon> = $r9;

        return;
    }

    static boolean access$000(com.android.server.NsdService)
    {
        com.android.server.NsdService r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.NsdService;

        $z0 = specialinvoke r0.<com.android.server.NsdService: boolean isNsdEnabled()>();

        return $z0;
    }

    static void access$100(com.android.server.NsdService, boolean)
    {
        com.android.server.NsdService r0;
        boolean z0;

        r0 := @parameter0: com.android.server.NsdService;

        z0 := @parameter1: boolean;

        specialinvoke r0.<com.android.server.NsdService: void notifyEnabled(boolean)>(z0);

        return;
    }

    static android.util.SparseArray access$1300(com.android.server.NsdService)
    {
        com.android.server.NsdService r0;
        android.util.SparseArray $r1;

        r0 := @parameter0: com.android.server.NsdService;

        $r1 = r0.<com.android.server.NsdService: android.util.SparseArray mIdToClientInfoMap>;

        return $r1;
    }

    static int access$1500(com.android.server.NsdService)
    {
        com.android.server.NsdService r0;
        int $i0;

        r0 := @parameter0: com.android.server.NsdService;

        $i0 = specialinvoke r0.<com.android.server.NsdService: int getUniqueId()>();

        return $i0;
    }

    static boolean access$1600(com.android.server.NsdService, int, java.lang.String)
    {
        com.android.server.NsdService r0;
        int i0;
        java.lang.String r1;
        boolean $z0;

        r0 := @parameter0: com.android.server.NsdService;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        $z0 = specialinvoke r0.<com.android.server.NsdService: boolean discoverServices(int,java.lang.String)>(i0, r1);

        return $z0;
    }

    static void access$1700(com.android.server.NsdService, android.os.Message, int, java.lang.Object)
    {
        com.android.server.NsdService r0;
        android.os.Message r1;
        int i0;
        java.lang.Object r2;

        r0 := @parameter0: com.android.server.NsdService;

        r1 := @parameter1: android.os.Message;

        i0 := @parameter2: int;

        r2 := @parameter3: java.lang.Object;

        specialinvoke r0.<com.android.server.NsdService: void replyToMessage(android.os.Message,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    static boolean access$1800(com.android.server.NsdService, int)
    {
        com.android.server.NsdService r0;
        int i0;
        boolean $z0;

        r0 := @parameter0: com.android.server.NsdService;

        i0 := @parameter1: int;

        $z0 = specialinvoke r0.<com.android.server.NsdService: boolean stopServiceDiscovery(int)>(i0);

        return $z0;
    }

    static void access$1900(com.android.server.NsdService, android.os.Message, int)
    {
        com.android.server.NsdService r0;
        android.os.Message r1;
        int i0;

        r0 := @parameter0: com.android.server.NsdService;

        r1 := @parameter1: android.os.Message;

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.server.NsdService: void replyToMessage(android.os.Message,int)>(r1, i0);

        return;
    }

    static com.android.server.NsdService$NsdSettings access$200(com.android.server.NsdService)
    {
        com.android.server.NsdService r0;
        com.android.server.NsdService$NsdSettings $r1;

        r0 := @parameter0: com.android.server.NsdService;

        $r1 = r0.<com.android.server.NsdService: com.android.server.NsdService$NsdSettings mNsdSettings>;

        return $r1;
    }

    static boolean access$2000(com.android.server.NsdService, int, android.net.nsd.NsdServiceInfo)
    {
        com.android.server.NsdService r0;
        int i0;
        android.net.nsd.NsdServiceInfo r1;
        boolean $z0;

        r0 := @parameter0: com.android.server.NsdService;

        i0 := @parameter1: int;

        r1 := @parameter2: android.net.nsd.NsdServiceInfo;

        $z0 = specialinvoke r0.<com.android.server.NsdService: boolean registerService(int,android.net.nsd.NsdServiceInfo)>(i0, r1);

        return $z0;
    }

    static boolean access$2100(com.android.server.NsdService, int)
    {
        com.android.server.NsdService r0;
        int i0;
        boolean $z0;

        r0 := @parameter0: com.android.server.NsdService;

        i0 := @parameter1: int;

        $z0 = specialinvoke r0.<com.android.server.NsdService: boolean unregisterService(int)>(i0);

        return $z0;
    }

    static boolean access$2300(com.android.server.NsdService, int, android.net.nsd.NsdServiceInfo)
    {
        com.android.server.NsdService r0;
        int i0;
        android.net.nsd.NsdServiceInfo r1;
        boolean $z0;

        r0 := @parameter0: com.android.server.NsdService;

        i0 := @parameter1: int;

        r1 := @parameter2: android.net.nsd.NsdServiceInfo;

        $z0 = specialinvoke r0.<com.android.server.NsdService: boolean resolveService(int,android.net.nsd.NsdServiceInfo)>(i0, r1);

        return $z0;
    }

    static java.lang.String access$2600(com.android.server.NsdService, java.lang.String)
    {
        com.android.server.NsdService r0;
        java.lang.String r1, $r2;

        r0 := @parameter0: com.android.server.NsdService;

        r1 := @parameter1: java.lang.String;

        $r2 = specialinvoke r0.<com.android.server.NsdService: java.lang.String unescape(java.lang.String)>(r1);

        return $r2;
    }

    static boolean access$2700(com.android.server.NsdService, int)
    {
        com.android.server.NsdService r0;
        int i0;
        boolean $z0;

        r0 := @parameter0: com.android.server.NsdService;

        i0 := @parameter1: int;

        $z0 = specialinvoke r0.<com.android.server.NsdService: boolean stopResolveService(int)>(i0);

        return $z0;
    }

    static boolean access$2800(com.android.server.NsdService, int, java.lang.String)
    {
        com.android.server.NsdService r0;
        int i0;
        java.lang.String r1;
        boolean $z0;

        r0 := @parameter0: com.android.server.NsdService;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        $z0 = specialinvoke r0.<com.android.server.NsdService: boolean getAddrInfo(int,java.lang.String)>(i0, r1);

        return $z0;
    }

    static boolean access$2900(com.android.server.NsdService, int)
    {
        com.android.server.NsdService r0;
        int i0;
        boolean $z0;

        r0 := @parameter0: com.android.server.NsdService;

        i0 := @parameter1: int;

        $z0 = specialinvoke r0.<com.android.server.NsdService: boolean stopGetAddrInfo(int)>(i0);

        return $z0;
    }

    static com.android.server.NsdService$NsdStateMachine access$3000(com.android.server.NsdService)
    {
        com.android.server.NsdService r0;
        com.android.server.NsdService$NsdStateMachine $r1;

        r0 := @parameter0: com.android.server.NsdService;

        $r1 = r0.<com.android.server.NsdService: com.android.server.NsdService$NsdStateMachine mNsdStateMachine>;

        return $r1;
    }

    static java.util.HashMap access$400(com.android.server.NsdService)
    {
        com.android.server.NsdService r0;
        java.util.HashMap $r1;

        r0 := @parameter0: com.android.server.NsdService;

        $r1 = r0.<com.android.server.NsdService: java.util.HashMap mClients>;

        return $r1;
    }

    static com.android.server.NsdService$DaemonConnection access$600(com.android.server.NsdService)
    {
        com.android.server.NsdService r0;
        com.android.server.NsdService$DaemonConnection $r1;

        r0 := @parameter0: com.android.server.NsdService;

        $r1 = r0.<com.android.server.NsdService: com.android.server.NsdService$DaemonConnection mDaemon>;

        return $r1;
    }

    static android.content.Context access$700(com.android.server.NsdService)
    {
        com.android.server.NsdService r0;
        android.content.Context $r1;

        r0 := @parameter0: com.android.server.NsdService;

        $r1 = r0.<com.android.server.NsdService: android.content.Context mContext>;

        return $r1;
    }

    static void access$800(com.android.server.NsdService, android.os.Message, int, int)
    {
        com.android.server.NsdService r0;
        android.os.Message r1;
        int i0, i1;

        r0 := @parameter0: com.android.server.NsdService;

        r1 := @parameter1: android.os.Message;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<com.android.server.NsdService: void replyToMessage(android.os.Message,int,int)>(r1, i0, i1);

        return;
    }

    static void access$900(com.android.server.NsdService, boolean)
    {
        com.android.server.NsdService r0;
        boolean z0;

        r0 := @parameter0: com.android.server.NsdService;

        z0 := @parameter1: boolean;

        specialinvoke r0.<com.android.server.NsdService: void sendNsdStateChangeBroadcast(boolean)>(z0);

        return;
    }

    public static com.android.server.NsdService create(android.content.Context) throws java.lang.InterruptedException
    {
        com.android.server.NsdService$NsdSettings r0;
        android.os.Looper $r5;
        com.android.server.'-$$Lambda$1xUIIN0BU8izGcnYWT-VzczLBFU' $r6;
        com.android.server.NsdService$NativeCallbackReceiver $r7;
        android.content.Context r8;
        android.os.HandlerThread r10;
        android.os.Handler r11;
        com.android.server.NsdService r12;
        com.android.server.NsdService$DaemonConnectionSupplier r13;

        r8 := @parameter0: android.content.Context;

        r0 = staticinvoke <com.android.server.NsdService$NsdSettings: com.android.server.NsdService$NsdSettings makeDefault(android.content.Context)>(r8);

        r10 = new android.os.HandlerThread;

        specialinvoke r10.<android.os.HandlerThread: void <init>(java.lang.String)>("NsdService");

        virtualinvoke r10.<android.os.HandlerThread: void start()>();

        r12 = new com.android.server.NsdService;

        r11 = new android.os.Handler;

        $r5 = virtualinvoke r10.<android.os.HandlerThread: android.os.Looper getLooper()>();

        specialinvoke r11.<android.os.Handler: void <init>(android.os.Looper)>($r5);

        $r6 = <com.android.server._$$Lambda$1xUIIN0BU8izGcnYWT_VzczLBFU: com.android.server.'-$$Lambda$1xUIIN0BU8izGcnYWT-VzczLBFU' INSTANCE>;

        r13 = (com.android.server.NsdService$DaemonConnectionSupplier) $r6;

        specialinvoke r12.<com.android.server.NsdService: void <init>(android.content.Context,com.android.server.NsdService$NsdSettings,android.os.Handler,com.android.server.NsdService$DaemonConnectionSupplier)>(r8, r0, r11, r13);

        $r7 = r12.<com.android.server.NsdService: com.android.server.NsdService$NativeCallbackReceiver mDaemonCallback>;

        virtualinvoke $r7.<com.android.server.NsdService$NativeCallbackReceiver: void awaitConnection()>();

        return r12;
    }

    private boolean discoverServices(int, java.lang.String)
    {
        com.android.server.NsdService r0;
        int i0;
        java.lang.String r1;
        java.lang.Object[] $r2;
        com.android.server.NsdService$DaemonConnection $r3;
        java.lang.Integer $r4;
        boolean $z0;

        r0 := @this: com.android.server.NsdService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r3 = r0.<com.android.server.NsdService: com.android.server.NsdService$DaemonConnection mDaemon>;

        $r2 = newarray (java.lang.Object)[3];

        $r2[0] = "discover";

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r2[1] = $r4;

        $r2[2] = r1;

        $z0 = virtualinvoke $r3.<com.android.server.NsdService$DaemonConnection: boolean execute(java.lang.Object[])>($r2);

        return $z0;
    }

    private boolean getAddrInfo(int, java.lang.String)
    {
        com.android.server.NsdService r0;
        int i0;
        java.lang.String r1;
        java.lang.Object[] $r2;
        com.android.server.NsdService$DaemonConnection $r3;
        java.lang.Integer $r4;
        boolean $z0;

        r0 := @this: com.android.server.NsdService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r3 = r0.<com.android.server.NsdService: com.android.server.NsdService$DaemonConnection mDaemon>;

        $r2 = newarray (java.lang.Object)[3];

        $r2[0] = "getaddrinfo";

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r2[1] = $r4;

        $r2[2] = r1;

        $z0 = virtualinvoke $r3.<com.android.server.NsdService$DaemonConnection: boolean execute(java.lang.Object[])>($r2);

        return $z0;
    }

    private int getUniqueId()
    {
        com.android.server.NsdService r0;
        int $i0, i1, i2;

        r0 := @this: com.android.server.NsdService;

        $i0 = r0.<com.android.server.NsdService: int mUniqueId>;

        i1 = $i0 + 1;

        r0.<com.android.server.NsdService: int mUniqueId> = i1;

        if i1 != 0 goto label1;

        i2 = i1 + 1;

        r0.<com.android.server.NsdService: int mUniqueId> = i2;

        return i2;

     label1:
        return i1;
    }

    private boolean isNsdEnabled()
    {
        com.android.server.NsdService r0;
        boolean z0;
        com.android.server.NsdService$NsdSettings $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r6, r7;

        r0 := @this: com.android.server.NsdService;

        $r2 = r0.<com.android.server.NsdService: com.android.server.NsdService$NsdSettings mNsdSettings>;

        z0 = interfaceinvoke $r2.<com.android.server.NsdService$NsdSettings: boolean isEnabled()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Network service discovery is ");

        if z0 == 0 goto label1;

        r7 = "enabled";

        goto label2;

     label1:
        r7 = "disabled";

     label2:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("NsdService", $r6);

        return z0;
    }

    private void notifyEnabled(boolean)
    {
        com.android.server.NsdService r0;
        boolean z0;
        com.android.server.NsdService$NsdStateMachine r1;
        int i0;

        r0 := @this: com.android.server.NsdService;

        z0 := @parameter0: boolean;

        r1 = r0.<com.android.server.NsdService: com.android.server.NsdService$NsdStateMachine mNsdStateMachine>;

        if z0 == 0 goto label1;

        i0 = 393240;

        goto label2;

     label1:
        i0 = 393241;

     label2:
        virtualinvoke r1.<com.android.server.NsdService$NsdStateMachine: void sendMessage(int)>(i0);

        return;
    }

    private android.os.Message obtainMessage(android.os.Message)
    {
        com.android.server.NsdService r0;
        android.os.Message r1, r2;
        int $i0;

        r0 := @this: com.android.server.NsdService;

        r1 := @parameter0: android.os.Message;

        r2 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        $i0 = r1.<android.os.Message: int arg2>;

        r2.<android.os.Message: int arg2> = $i0;

        return r2;
    }

    private boolean registerService(int, android.net.nsd.NsdServiceInfo)
    {
        com.android.server.NsdService r0;
        int i0, i1;
        java.lang.String r1, $r7, $r9, r16, r17;
        java.lang.StringBuilder $r2;
        byte[] $r8;
        java.lang.Object[] $r10;
        com.android.server.NsdService$DaemonConnection $r11;
        java.lang.Integer $r12, $r13;
        boolean $z0;
        android.net.nsd.NsdServiceInfo r14;

        r0 := @this: com.android.server.NsdService;

        i0 := @parameter0: int;

        r14 := @parameter1: android.net.nsd.NsdServiceInfo;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("registerService: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r14);

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("NsdService", $r7);

        r16 = virtualinvoke r14.<android.net.nsd.NsdServiceInfo: java.lang.String getServiceName()>();

        r1 = virtualinvoke r14.<android.net.nsd.NsdServiceInfo: java.lang.String getServiceType()>();

        i1 = virtualinvoke r14.<android.net.nsd.NsdServiceInfo: int getPort()>();

        $r8 = virtualinvoke r14.<android.net.nsd.NsdServiceInfo: byte[] getTxtRecord()>();

        $r9 = staticinvoke <android.util.Base64: java.lang.String encodeToString(byte[],int)>($r8, 0);

        r17 = virtualinvoke $r9.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\n", "");

        $r11 = r0.<com.android.server.NsdService: com.android.server.NsdService$DaemonConnection mDaemon>;

        $r10 = newarray (java.lang.Object)[6];

        $r10[0] = "register";

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r10[1] = $r12;

        $r10[2] = r16;

        $r10[3] = r1;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r10[4] = $r13;

        $r10[5] = r17;

        $z0 = virtualinvoke $r11.<com.android.server.NsdService$DaemonConnection: boolean execute(java.lang.Object[])>($r10);

        return $z0;
    }

    private void replyToMessage(android.os.Message, int)
    {
        com.android.server.NsdService r0;
        android.os.Message r1, r2;
        int i0;
        android.os.Messenger $r3;
        com.android.internal.util.AsyncChannel $r4;

        r0 := @this: com.android.server.NsdService;

        r1 := @parameter0: android.os.Message;

        i0 := @parameter1: int;

        $r3 = r1.<android.os.Message: android.os.Messenger replyTo>;

        if $r3 != null goto label1;

        return;

     label1:
        r2 = specialinvoke r0.<com.android.server.NsdService: android.os.Message obtainMessage(android.os.Message)>(r1);

        r2.<android.os.Message: int what> = i0;

        $r4 = r0.<com.android.server.NsdService: com.android.internal.util.AsyncChannel mReplyChannel>;

        virtualinvoke $r4.<com.android.internal.util.AsyncChannel: void replyToMessage(android.os.Message,android.os.Message)>(r1, r2);

        return;
    }

    private void replyToMessage(android.os.Message, int, int)
    {
        com.android.server.NsdService r0;
        android.os.Message r1, r2;
        int i0, i1;
        android.os.Messenger $r3;
        com.android.internal.util.AsyncChannel $r4;

        r0 := @this: com.android.server.NsdService;

        r1 := @parameter0: android.os.Message;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r3 = r1.<android.os.Message: android.os.Messenger replyTo>;

        if $r3 != null goto label1;

        return;

     label1:
        r2 = specialinvoke r0.<com.android.server.NsdService: android.os.Message obtainMessage(android.os.Message)>(r1);

        r2.<android.os.Message: int what> = i0;

        r2.<android.os.Message: int arg1> = i1;

        $r4 = r0.<com.android.server.NsdService: com.android.internal.util.AsyncChannel mReplyChannel>;

        virtualinvoke $r4.<com.android.internal.util.AsyncChannel: void replyToMessage(android.os.Message,android.os.Message)>(r1, r2);

        return;
    }

    private void replyToMessage(android.os.Message, int, java.lang.Object)
    {
        com.android.server.NsdService r0;
        android.os.Message r1, r3;
        int i0;
        java.lang.Object r2;
        android.os.Messenger $r4;
        com.android.internal.util.AsyncChannel $r5;

        r0 := @this: com.android.server.NsdService;

        r1 := @parameter0: android.os.Message;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r4 = r1.<android.os.Message: android.os.Messenger replyTo>;

        if $r4 != null goto label1;

        return;

     label1:
        r3 = specialinvoke r0.<com.android.server.NsdService: android.os.Message obtainMessage(android.os.Message)>(r1);

        r3.<android.os.Message: int what> = i0;

        r3.<android.os.Message: java.lang.Object obj> = r2;

        $r5 = r0.<com.android.server.NsdService: com.android.internal.util.AsyncChannel mReplyChannel>;

        virtualinvoke $r5.<com.android.internal.util.AsyncChannel: void replyToMessage(android.os.Message,android.os.Message)>(r1, r3);

        return;
    }

    private boolean resolveService(int, android.net.nsd.NsdServiceInfo)
    {
        com.android.server.NsdService r0;
        int i0;
        java.lang.String r1, r6;
        java.lang.Object[] $r2;
        com.android.server.NsdService$DaemonConnection $r3;
        java.lang.Integer $r4;
        boolean $z0;
        android.net.nsd.NsdServiceInfo r5;

        r0 := @this: com.android.server.NsdService;

        i0 := @parameter0: int;

        r5 := @parameter1: android.net.nsd.NsdServiceInfo;

        r1 = virtualinvoke r5.<android.net.nsd.NsdServiceInfo: java.lang.String getServiceName()>();

        r6 = virtualinvoke r5.<android.net.nsd.NsdServiceInfo: java.lang.String getServiceType()>();

        $r3 = r0.<com.android.server.NsdService: com.android.server.NsdService$DaemonConnection mDaemon>;

        $r2 = newarray (java.lang.Object)[5];

        $r2[0] = "resolve";

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r2[1] = $r4;

        $r2[2] = r1;

        $r2[3] = r6;

        $r2[4] = "local.";

        $z0 = virtualinvoke $r3.<com.android.server.NsdService$DaemonConnection: boolean execute(java.lang.Object[])>($r2);

        return $z0;
    }

    private void sendNsdStateChangeBroadcast(boolean)
    {
        com.android.server.NsdService r0;
        boolean z0;
        android.content.Intent $r2;
        android.os.UserHandle $r5;
        android.content.Context $r6;
        byte b0;

        r0 := @this: com.android.server.NsdService;

        z0 := @parameter0: boolean;

        $r2 = new android.content.Intent;

        specialinvoke $r2.<android.content.Intent: void <init>(java.lang.String)>("android.net.nsd.STATE_CHANGED");

        virtualinvoke $r2.<android.content.Intent: android.content.Intent addFlags(int)>(67108864);

        if z0 == 0 goto label1;

        b0 = 2;

        goto label2;

     label1:
        b0 = 1;

     label2:
        virtualinvoke $r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("nsd_state", b0);

        $r6 = r0.<com.android.server.NsdService: android.content.Context mContext>;

        $r5 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r6.<android.content.Context: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>($r2, $r5);

        return;
    }

    private boolean stopGetAddrInfo(int)
    {
        com.android.server.NsdService r0;
        int i0;
        java.lang.Object[] $r1;
        com.android.server.NsdService$DaemonConnection $r2;
        java.lang.Integer $r3;
        boolean $z0;

        r0 := @this: com.android.server.NsdService;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.NsdService: com.android.server.NsdService$DaemonConnection mDaemon>;

        $r1 = newarray (java.lang.Object)[2];

        $r1[0] = "stop-getaddrinfo";

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r1[1] = $r3;

        $z0 = virtualinvoke $r2.<com.android.server.NsdService$DaemonConnection: boolean execute(java.lang.Object[])>($r1);

        return $z0;
    }

    private boolean stopResolveService(int)
    {
        com.android.server.NsdService r0;
        int i0;
        java.lang.Object[] $r1;
        com.android.server.NsdService$DaemonConnection $r2;
        java.lang.Integer $r3;
        boolean $z0;

        r0 := @this: com.android.server.NsdService;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.NsdService: com.android.server.NsdService$DaemonConnection mDaemon>;

        $r1 = newarray (java.lang.Object)[2];

        $r1[0] = "stop-resolve";

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r1[1] = $r3;

        $z0 = virtualinvoke $r2.<com.android.server.NsdService$DaemonConnection: boolean execute(java.lang.Object[])>($r1);

        return $z0;
    }

    private boolean stopServiceDiscovery(int)
    {
        com.android.server.NsdService r0;
        int i0;
        java.lang.Object[] $r1;
        com.android.server.NsdService$DaemonConnection $r2;
        java.lang.Integer $r3;
        boolean $z0;

        r0 := @this: com.android.server.NsdService;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.NsdService: com.android.server.NsdService$DaemonConnection mDaemon>;

        $r1 = newarray (java.lang.Object)[2];

        $r1[0] = "stop-discover";

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r1[1] = $r3;

        $z0 = virtualinvoke $r2.<com.android.server.NsdService$DaemonConnection: boolean execute(java.lang.Object[])>($r1);

        return $z0;
    }

    private java.lang.String unescape(java.lang.String)
    {
        com.android.server.NsdService r0;
        java.lang.String r1, $r8, $r12, $r15;
        java.lang.StringBuilder $r3, $r5, $r9;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i9, $i10, $i11, $i12, $i14, $i15, i18, i20, i22;
        char $c8, $c13, c19, c21, c23, c24;

        r0 := @this: com.android.server.NsdService;

        r1 := @parameter0: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(int)>($i0);

        i18 = 0;

     label1:
        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        if i18 >= $i1 goto label5;

        c19 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i18);

        i20 = i18;

        c21 = c19;

        if c19 != 92 goto label4;

        i22 = i18 + 1;

        $i2 = virtualinvoke r1.<java.lang.String: int length()>();

        if i22 < $i2 goto label2;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected end of escape sequence in: ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("NsdService", $r12);

        goto label5;

     label2:
        c23 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i22);

        i20 = i22;

        c21 = c23;

        if c23 == 46 goto label4;

        i20 = i22;

        c21 = c23;

        if c23 == 92 goto label4;

        $i3 = i22 + 2;

        $i4 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i3 < $i4 goto label3;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected end of escape sequence in: ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("NsdService", $r8);

        goto label5;

     label3:
        $i5 = c23 - 48;

        $i7 = $i5 * 100;

        $i6 = i22 + 1;

        $c8 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i6);

        $i9 = $c8 - 48;

        $i10 = $i9 * 10;

        $i12 = $i7 + $i10;

        $i11 = i22 + 2;

        $c13 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i11);

        $i14 = $c13 - 48;

        $i15 = $i12 + $i14;

        c24 = (char) $i15;

        i20 = i22 + 2;

        c21 = c24;

     label4:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c21);

        i18 = i20 + 1;

        goto label1;

     label5:
        $r15 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r15;
    }

    private boolean unregisterService(int)
    {
        com.android.server.NsdService r0;
        int i0;
        java.lang.Object[] $r1;
        com.android.server.NsdService$DaemonConnection $r2;
        java.lang.Integer $r3;
        boolean $z0;

        r0 := @this: com.android.server.NsdService;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.NsdService: com.android.server.NsdService$DaemonConnection mDaemon>;

        $r1 = newarray (java.lang.Object)[2];

        $r1[0] = "stop-register";

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r1[1] = $r3;

        $z0 = virtualinvoke $r2.<com.android.server.NsdService$DaemonConnection: boolean execute(java.lang.Object[])>($r1);

        return $z0;
    }

    private boolean updateService(int, android.net.util.nsd.DnsSdTxtRecord)
    {
        com.android.server.NsdService r0;
        int i0, $i1;
        android.net.util.nsd.DnsSdTxtRecord r1;
        java.lang.Object[] $r2;
        com.android.server.NsdService$DaemonConnection $r3;
        java.lang.Integer $r4, $r5;
        byte[] $r6;
        boolean $z0;

        r0 := @this: com.android.server.NsdService;

        i0 := @parameter0: int;

        r1 := @parameter1: android.net.util.nsd.DnsSdTxtRecord;

        if r1 != null goto label1;

        return 0;

     label1:
        $r3 = r0.<com.android.server.NsdService: com.android.server.NsdService$DaemonConnection mDaemon>;

        $r2 = newarray (java.lang.Object)[4];

        $r2[0] = "update";

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r2[1] = $r4;

        $i1 = virtualinvoke r1.<android.net.util.nsd.DnsSdTxtRecord: int size()>();

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r2[2] = $r5;

        $r6 = virtualinvoke r1.<android.net.util.nsd.DnsSdTxtRecord: byte[] getRawData()>();

        $r2[3] = $r6;

        $z0 = virtualinvoke $r3.<com.android.server.NsdService$DaemonConnection: boolean execute(java.lang.Object[])>($r2);

        return $z0;
    }

    public void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.NsdService r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        java.util.Iterator r4;
        com.android.server.NsdService$ClientInfo r5;
        android.content.Context $r6;
        boolean $z0, $z1;
        java.util.HashMap $r7;
        java.util.Collection $r8;
        com.android.server.NsdService$NsdStateMachine $r9;
        java.lang.Object $r10;

        r0 := @this: com.android.server.NsdService;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        $r6 = r0.<com.android.server.NsdService: android.content.Context mContext>;

        $z0 = staticinvoke <com.android.internal.util.DumpUtils: boolean checkDumpPermission(android.content.Context,java.lang.String,java.io.PrintWriter)>($r6, "NsdService", r2);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r7 = r0.<com.android.server.NsdService: java.util.HashMap mClients>;

        $r8 = virtualinvoke $r7.<java.util.HashMap: java.util.Collection values()>();

        r4 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r10 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.android.server.NsdService$ClientInfo) $r10;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("Client Info");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.Object)>(r5);

        goto label2;

     label3:
        $r9 = r0.<com.android.server.NsdService: com.android.server.NsdService$NsdStateMachine mNsdStateMachine>;

        virtualinvoke $r9.<com.android.server.NsdService$NsdStateMachine: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r1, r2, r3);

        return;
    }

    public android.os.Messenger getMessenger()
    {
        com.android.server.NsdService r0;
        android.content.Context $r1;
        android.os.Messenger $r2;
        com.android.server.NsdService$NsdStateMachine $r3;
        android.os.Handler $r4;

        r0 := @this: com.android.server.NsdService;

        $r1 = r0.<com.android.server.NsdService: android.content.Context mContext>;

        virtualinvoke $r1.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.INTERNET", "NsdService");

        $r2 = new android.os.Messenger;

        $r3 = r0.<com.android.server.NsdService: com.android.server.NsdService$NsdStateMachine mNsdStateMachine>;

        $r4 = virtualinvoke $r3.<com.android.server.NsdService$NsdStateMachine: android.os.Handler getHandler()>();

        specialinvoke $r2.<android.os.Messenger: void <init>(android.os.Handler)>($r4);

        return $r2;
    }

    public void setEnabled(boolean)
    {
        com.android.server.NsdService r0;
        boolean z0;
        android.content.Context $r1;
        com.android.server.NsdService$NsdSettings $r2;

        r0 := @this: com.android.server.NsdService;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.server.NsdService: android.content.Context mContext>;

        staticinvoke <android.net.NetworkStack: void checkNetworkStackPermission(android.content.Context)>($r1);

        $r2 = r0.<com.android.server.NsdService: com.android.server.NsdService$NsdSettings mNsdSettings>;

        interfaceinvoke $r2.<com.android.server.NsdService$NsdSettings: void putEnabledStatus(boolean)>(z0);

        specialinvoke r0.<com.android.server.NsdService: void notifyEnabled(boolean)>(z0);

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.NsdService: java.lang.String TAG> = "NsdService";

        <com.android.server.NsdService: java.lang.String MDNS_TAG> = "mDnsConnector";

        <com.android.server.NsdService: int INVALID_ID> = 0;

        <com.android.server.NsdService: boolean DBG> = 1;

        return;
    }
}
