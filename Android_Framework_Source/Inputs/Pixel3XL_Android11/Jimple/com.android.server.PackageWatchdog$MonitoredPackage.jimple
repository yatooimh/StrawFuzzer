class com.android.server.PackageWatchdog$MonitoredPackage extends java.lang.Object
{
    private long mDurationMs;
    private final android.util.LongArrayQueue mFailureHistory;
    private boolean mHasPassedHealthCheck;
    private long mHealthCheckDurationMs;
    private int mHealthCheckState;
    private final android.content.pm.VersionedPackage mPackage;
    final com.android.server.PackageWatchdog this$0;

    private void <init>(com.android.server.PackageWatchdog, android.content.pm.VersionedPackage, long, long, boolean)
    {
        com.android.server.PackageWatchdog$MonitoredPackage r0;
        com.android.server.PackageWatchdog r1;
        android.content.pm.VersionedPackage r2;
        long l0, l1;
        boolean z0;
        android.util.LongArrayQueue $r3;

        r0 := @this: com.android.server.PackageWatchdog$MonitoredPackage;

        r1 := @parameter0: com.android.server.PackageWatchdog;

        r2 := @parameter1: android.content.pm.VersionedPackage;

        l0 := @parameter2: long;

        l1 := @parameter3: long;

        z0 := @parameter4: boolean;

        r0.<com.android.server.PackageWatchdog$MonitoredPackage: com.android.server.PackageWatchdog this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new android.util.LongArrayQueue;

        specialinvoke $r3.<android.util.LongArrayQueue: void <init>()>();

        r0.<com.android.server.PackageWatchdog$MonitoredPackage: android.util.LongArrayQueue mFailureHistory> = $r3;

        r0.<com.android.server.PackageWatchdog$MonitoredPackage: int mHealthCheckState> = 1;

        r0.<com.android.server.PackageWatchdog$MonitoredPackage: long mHealthCheckDurationMs> = 9223372036854775807L;

        r0.<com.android.server.PackageWatchdog$MonitoredPackage: android.content.pm.VersionedPackage mPackage> = r2;

        r0.<com.android.server.PackageWatchdog$MonitoredPackage: long mDurationMs> = l0;

        r0.<com.android.server.PackageWatchdog$MonitoredPackage: long mHealthCheckDurationMs> = l1;

        r0.<com.android.server.PackageWatchdog$MonitoredPackage: boolean mHasPassedHealthCheck> = z0;

        specialinvoke r0.<com.android.server.PackageWatchdog$MonitoredPackage: int updateHealthCheckStateLocked()>();

        return;
    }

    void <init>(com.android.server.PackageWatchdog, android.content.pm.VersionedPackage, long, long, boolean, com.android.server.PackageWatchdog$1)
    {
        com.android.server.PackageWatchdog$MonitoredPackage r0;
        com.android.server.PackageWatchdog r1;
        android.content.pm.VersionedPackage r2;
        long l0, l1;
        boolean z0;
        com.android.server.PackageWatchdog$1 r3;

        r0 := @this: com.android.server.PackageWatchdog$MonitoredPackage;

        r1 := @parameter0: com.android.server.PackageWatchdog;

        r2 := @parameter1: android.content.pm.VersionedPackage;

        l0 := @parameter2: long;

        l1 := @parameter3: long;

        z0 := @parameter4: boolean;

        r3 := @parameter5: com.android.server.PackageWatchdog$1;

        specialinvoke r0.<com.android.server.PackageWatchdog$MonitoredPackage: void <init>(com.android.server.PackageWatchdog,android.content.pm.VersionedPackage,long,long,boolean)>(r1, r2, l0, l1, z0);

        return;
    }

    static java.lang.String access$000(com.android.server.PackageWatchdog$MonitoredPackage)
    {
        com.android.server.PackageWatchdog$MonitoredPackage r0;
        java.lang.String $r1;

        r0 := @parameter0: com.android.server.PackageWatchdog$MonitoredPackage;

        $r1 = specialinvoke r0.<com.android.server.PackageWatchdog$MonitoredPackage: java.lang.String getName()>();

        return $r1;
    }

    static android.content.pm.VersionedPackage access$1200(com.android.server.PackageWatchdog$MonitoredPackage)
    {
        com.android.server.PackageWatchdog$MonitoredPackage r0;
        android.content.pm.VersionedPackage $r1;

        r0 := @parameter0: com.android.server.PackageWatchdog$MonitoredPackage;

        $r1 = r0.<com.android.server.PackageWatchdog$MonitoredPackage: android.content.pm.VersionedPackage mPackage>;

        return $r1;
    }

    static long access$200(com.android.server.PackageWatchdog$MonitoredPackage)
    {
        com.android.server.PackageWatchdog$MonitoredPackage r0;
        long $l0;

        r0 := @parameter0: com.android.server.PackageWatchdog$MonitoredPackage;

        $l0 = r0.<com.android.server.PackageWatchdog$MonitoredPackage: long mDurationMs>;

        return $l0;
    }

    static android.util.LongArrayQueue access$400(com.android.server.PackageWatchdog$MonitoredPackage)
    {
        com.android.server.PackageWatchdog$MonitoredPackage r0;
        android.util.LongArrayQueue $r1;

        r0 := @parameter0: com.android.server.PackageWatchdog$MonitoredPackage;

        $r1 = r0.<com.android.server.PackageWatchdog$MonitoredPackage: android.util.LongArrayQueue mFailureHistory>;

        return $r1;
    }

    static long access$500(com.android.server.PackageWatchdog$MonitoredPackage)
    {
        com.android.server.PackageWatchdog$MonitoredPackage r0;
        long $l0;

        r0 := @parameter0: com.android.server.PackageWatchdog$MonitoredPackage;

        $l0 = r0.<com.android.server.PackageWatchdog$MonitoredPackage: long mHealthCheckDurationMs>;

        return $l0;
    }

    static int access$600(com.android.server.PackageWatchdog$MonitoredPackage)
    {
        com.android.server.PackageWatchdog$MonitoredPackage r0;
        int $i0;

        r0 := @parameter0: com.android.server.PackageWatchdog$MonitoredPackage;

        $i0 = r0.<com.android.server.PackageWatchdog$MonitoredPackage: int mHealthCheckState>;

        return $i0;
    }

    static java.lang.String access$700(com.android.server.PackageWatchdog$MonitoredPackage, int)
    {
        com.android.server.PackageWatchdog$MonitoredPackage r0;
        int i0;
        java.lang.String $r1;

        r0 := @parameter0: com.android.server.PackageWatchdog$MonitoredPackage;

        i0 := @parameter1: int;

        $r1 = specialinvoke r0.<com.android.server.PackageWatchdog$MonitoredPackage: java.lang.String toString(int)>(i0);

        return $r1;
    }

    private java.lang.String getName()
    {
        com.android.server.PackageWatchdog$MonitoredPackage r0;
        android.content.pm.VersionedPackage $r1;
        java.lang.String $r2;

        r0 := @this: com.android.server.PackageWatchdog$MonitoredPackage;

        $r1 = r0.<com.android.server.PackageWatchdog$MonitoredPackage: android.content.pm.VersionedPackage mPackage>;

        $r2 = virtualinvoke $r1.<android.content.pm.VersionedPackage: java.lang.String getPackageName()>();

        return $r2;
    }

    private long toPositive(long)
    {
        com.android.server.PackageWatchdog$MonitoredPackage r0;
        byte $b0;
        long l1;

        r0 := @this: com.android.server.PackageWatchdog$MonitoredPackage;

        l1 := @parameter0: long;

        $b0 = l1 cmp 0L;

        if $b0 <= 0 goto label1;

        goto label2;

     label1:
        l1 = 9223372036854775807L;

     label2:
        return l1;
    }

    private java.lang.String toString(int)
    {
        com.android.server.PackageWatchdog$MonitoredPackage r0;
        int i0;

        r0 := @this: com.android.server.PackageWatchdog$MonitoredPackage;

        i0 := @parameter0: int;

        if i0 == 0 goto label4;

        if i0 == 1 goto label3;

        if i0 == 2 goto label2;

        if i0 == 3 goto label1;

        return "UNKNOWN";

     label1:
        return "FAILED";

     label2:
        return "PASSED";

     label3:
        return "INACTIVE";

     label4:
        return "ACTIVE";
    }

    private int updateHealthCheckStateLocked()
    {
        com.android.server.PackageWatchdog$MonitoredPackage r0;
        int i0, $i7, $i8;
        long l1, $l4;
        boolean $z0;
        byte $b2, $b5, $b6;
        java.lang.StringBuilder $r8;
        java.lang.String $r9, $r10, $r11, $r12;

        r0 := @this: com.android.server.PackageWatchdog$MonitoredPackage;

        i0 = r0.<com.android.server.PackageWatchdog$MonitoredPackage: int mHealthCheckState>;

        $z0 = r0.<com.android.server.PackageWatchdog$MonitoredPackage: boolean mHasPassedHealthCheck>;

        if $z0 == 0 goto label1;

        r0.<com.android.server.PackageWatchdog$MonitoredPackage: int mHealthCheckState> = 2;

        goto label5;

     label1:
        l1 = r0.<com.android.server.PackageWatchdog$MonitoredPackage: long mHealthCheckDurationMs>;

        $b2 = l1 cmp 0L;

        if $b2 <= 0 goto label4;

        $l4 = r0.<com.android.server.PackageWatchdog$MonitoredPackage: long mDurationMs>;

        $b5 = $l4 cmp 0L;

        if $b5 > 0 goto label2;

        goto label4;

     label2:
        $b6 = l1 cmp 9223372036854775807L;

        if $b6 != 0 goto label3;

        r0.<com.android.server.PackageWatchdog$MonitoredPackage: int mHealthCheckState> = 1;

        goto label5;

     label3:
        r0.<com.android.server.PackageWatchdog$MonitoredPackage: int mHealthCheckState> = 0;

        goto label5;

     label4:
        r0.<com.android.server.PackageWatchdog$MonitoredPackage: int mHealthCheckState> = 3;

     label5:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Updated health check state for package ");

        $r9 = specialinvoke r0.<com.android.server.PackageWatchdog$MonitoredPackage: java.lang.String getName()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r10 = specialinvoke r0.<com.android.server.PackageWatchdog$MonitoredPackage: java.lang.String toString(int)>(i0);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> ");

        $i7 = r0.<com.android.server.PackageWatchdog$MonitoredPackage: int mHealthCheckState>;

        $r11 = specialinvoke r0.<com.android.server.PackageWatchdog$MonitoredPackage: java.lang.String toString(int)>($i7);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("PackageWatchdog", $r12);

        $i8 = r0.<com.android.server.PackageWatchdog$MonitoredPackage: int mHealthCheckState>;

        return $i8;
    }

    public int getHealthCheckStateLocked()
    {
        com.android.server.PackageWatchdog$MonitoredPackage r0;
        int $i0;

        r0 := @this: com.android.server.PackageWatchdog$MonitoredPackage;

        $i0 = r0.<com.android.server.PackageWatchdog$MonitoredPackage: int mHealthCheckState>;

        return $i0;
    }

    public long getShortestScheduleDurationMsLocked()
    {
        com.android.server.PackageWatchdog$MonitoredPackage r0;
        long l0, $l1, $l2, $l3, l4;
        boolean $z0;

        r0 := @this: com.android.server.PackageWatchdog$MonitoredPackage;

        $l1 = r0.<com.android.server.PackageWatchdog$MonitoredPackage: long mDurationMs>;

        l0 = specialinvoke r0.<com.android.server.PackageWatchdog$MonitoredPackage: long toPositive(long)>($l1);

        $z0 = virtualinvoke r0.<com.android.server.PackageWatchdog$MonitoredPackage: boolean isPendingHealthChecksLocked()>();

        if $z0 == 0 goto label1;

        $l3 = r0.<com.android.server.PackageWatchdog$MonitoredPackage: long mHealthCheckDurationMs>;

        l4 = specialinvoke r0.<com.android.server.PackageWatchdog$MonitoredPackage: long toPositive(long)>($l3);

        goto label2;

     label1:
        l4 = 9223372036854775807L;

     label2:
        $l2 = staticinvoke <java.lang.Math: long min(long,long)>(l0, l4);

        return $l2;
    }

    public int handleElapsedTimeLocked(long)
    {
        com.android.server.PackageWatchdog$MonitoredPackage r0;
        long l0, $l2, $l3, $l6, $l7;
        byte $b1;
        int $i4, $i5, $i9;
        java.lang.StringBuilder $r2;
        java.lang.String $r4, $r6;

        r0 := @this: com.android.server.PackageWatchdog$MonitoredPackage;

        l0 := @parameter0: long;

        $b1 = l0 cmp 0L;

        if $b1 > 0 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot handle non-positive elapsed time for package ");

        $r4 = specialinvoke r0.<com.android.server.PackageWatchdog$MonitoredPackage: java.lang.String getName()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PackageWatchdog", $r6);

        $i9 = r0.<com.android.server.PackageWatchdog$MonitoredPackage: int mHealthCheckState>;

        return $i9;

     label1:
        $l2 = r0.<com.android.server.PackageWatchdog$MonitoredPackage: long mDurationMs>;

        $l3 = $l2 - l0;

        r0.<com.android.server.PackageWatchdog$MonitoredPackage: long mDurationMs> = $l3;

        $i4 = r0.<com.android.server.PackageWatchdog$MonitoredPackage: int mHealthCheckState>;

        if $i4 != 0 goto label2;

        $l6 = r0.<com.android.server.PackageWatchdog$MonitoredPackage: long mHealthCheckDurationMs>;

        $l7 = $l6 - l0;

        r0.<com.android.server.PackageWatchdog$MonitoredPackage: long mHealthCheckDurationMs> = $l7;

     label2:
        $i5 = specialinvoke r0.<com.android.server.PackageWatchdog$MonitoredPackage: int updateHealthCheckStateLocked()>();

        return $i5;
    }

    public boolean isExpiredLocked()
    {
        com.android.server.PackageWatchdog$MonitoredPackage r0;
        long $l0;
        byte $b1;
        boolean z0;

        r0 := @this: com.android.server.PackageWatchdog$MonitoredPackage;

        $l0 = r0.<com.android.server.PackageWatchdog$MonitoredPackage: long mDurationMs>;

        $b1 = $l0 cmp 0L;

        if $b1 > 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isPendingHealthChecksLocked()
    {
        com.android.server.PackageWatchdog$MonitoredPackage r0;
        int i0;
        boolean z1;

        r0 := @this: com.android.server.PackageWatchdog$MonitoredPackage;

        i0 = r0.<com.android.server.PackageWatchdog$MonitoredPackage: int mHealthCheckState>;

        z1 = 1;

        if i0 == 0 goto label2;

        if i0 != 1 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public boolean onFailureLocked()
    {
        com.android.server.PackageWatchdog$MonitoredPackage r0;
        long l0, $l1, $l2, $l4;
        com.android.server.PackageWatchdog $r1, $r5, $r7;
        com.android.server.PackageWatchdog$SystemClock $r2;
        android.util.LongArrayQueue $r3, $r4, $r6, $r8, $r9;
        int $i3, $i6, $i7;
        byte $b5;
        boolean z0;

        r0 := @this: com.android.server.PackageWatchdog$MonitoredPackage;

        $r1 = r0.<com.android.server.PackageWatchdog$MonitoredPackage: com.android.server.PackageWatchdog this$0>;

        $r2 = staticinvoke <com.android.server.PackageWatchdog: com.android.server.PackageWatchdog$SystemClock access$900(com.android.server.PackageWatchdog)>($r1);

        l0 = interfaceinvoke $r2.<com.android.server.PackageWatchdog$SystemClock: long uptimeMillis()>();

        $r3 = r0.<com.android.server.PackageWatchdog$MonitoredPackage: android.util.LongArrayQueue mFailureHistory>;

        virtualinvoke $r3.<android.util.LongArrayQueue: void addLast(long)>(l0);

     label1:
        $r4 = r0.<com.android.server.PackageWatchdog$MonitoredPackage: android.util.LongArrayQueue mFailureHistory>;

        $l1 = virtualinvoke $r4.<android.util.LongArrayQueue: long peekFirst()>();

        $l2 = l0 - $l1;

        $r5 = r0.<com.android.server.PackageWatchdog$MonitoredPackage: com.android.server.PackageWatchdog this$0>;

        $i3 = staticinvoke <com.android.server.PackageWatchdog: int access$1000(com.android.server.PackageWatchdog)>($r5);

        $l4 = (long) $i3;

        $b5 = $l2 cmp $l4;

        if $b5 <= 0 goto label2;

        $r9 = r0.<com.android.server.PackageWatchdog$MonitoredPackage: android.util.LongArrayQueue mFailureHistory>;

        virtualinvoke $r9.<android.util.LongArrayQueue: long removeFirst()>();

        goto label1;

     label2:
        $r6 = r0.<com.android.server.PackageWatchdog$MonitoredPackage: android.util.LongArrayQueue mFailureHistory>;

        $i6 = virtualinvoke $r6.<android.util.LongArrayQueue: int size()>();

        $r7 = r0.<com.android.server.PackageWatchdog$MonitoredPackage: com.android.server.PackageWatchdog this$0>;

        $i7 = staticinvoke <com.android.server.PackageWatchdog: int access$1100(com.android.server.PackageWatchdog)>($r7);

        if $i6 < $i7 goto label3;

        z0 = 1;

        goto label4;

     label3:
        z0 = 0;

     label4:
        if z0 == 0 goto label5;

        $r8 = r0.<com.android.server.PackageWatchdog$MonitoredPackage: android.util.LongArrayQueue mFailureHistory>;

        virtualinvoke $r8.<android.util.LongArrayQueue: void clear()>();

     label5:
        return z0;
    }

    public int setHealthCheckActiveLocked(long)
    {
        com.android.server.PackageWatchdog$MonitoredPackage r0;
        long l0, $l4, l6;
        byte $b1;
        int $i2, $i3;
        java.lang.StringBuilder $r2;
        java.lang.String $r6, $r11;

        r0 := @this: com.android.server.PackageWatchdog$MonitoredPackage;

        l0 := @parameter0: long;

        l6 = l0;

        $b1 = l0 cmp 0L;

        if $b1 > 0 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot set non-positive health check duration ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms for package ");

        $r6 = specialinvoke r0.<com.android.server.PackageWatchdog$MonitoredPackage: java.lang.String getName()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Using total duration ");

        $l4 = r0.<com.android.server.PackageWatchdog$MonitoredPackage: long mDurationMs>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms instead");

        $r11 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("PackageWatchdog", $r11);

        l6 = r0.<com.android.server.PackageWatchdog$MonitoredPackage: long mDurationMs>;

     label1:
        $i2 = r0.<com.android.server.PackageWatchdog$MonitoredPackage: int mHealthCheckState>;

        if $i2 != 1 goto label2;

        r0.<com.android.server.PackageWatchdog$MonitoredPackage: long mHealthCheckDurationMs> = l6;

     label2:
        $i3 = specialinvoke r0.<com.android.server.PackageWatchdog$MonitoredPackage: int updateHealthCheckStateLocked()>();

        return $i3;
    }

    public int tryPassHealthCheckLocked()
    {
        com.android.server.PackageWatchdog$MonitoredPackage r0;
        int $i0, $i1;

        r0 := @this: com.android.server.PackageWatchdog$MonitoredPackage;

        $i0 = r0.<com.android.server.PackageWatchdog$MonitoredPackage: int mHealthCheckState>;

        if $i0 == 3 goto label1;

        r0.<com.android.server.PackageWatchdog$MonitoredPackage: boolean mHasPassedHealthCheck> = 1;

     label1:
        $i1 = specialinvoke r0.<com.android.server.PackageWatchdog$MonitoredPackage: int updateHealthCheckStateLocked()>();

        return $i1;
    }

    public void updateHealthCheckDuration(long)
    {
        com.android.server.PackageWatchdog$MonitoredPackage r0;
        long l0;

        r0 := @this: com.android.server.PackageWatchdog$MonitoredPackage;

        l0 := @parameter0: long;

        r0.<com.android.server.PackageWatchdog$MonitoredPackage: long mDurationMs> = l0;

        return;
    }

    public void writeLocked(org.xmlpull.v1.XmlSerializer) throws java.io.IOException
    {
        com.android.server.PackageWatchdog$MonitoredPackage r0;
        org.xmlpull.v1.XmlSerializer r1;
        java.lang.String $r3, $r5, $r7, $r9;
        long $l0, $l1;
        boolean $z0;

        r0 := @this: com.android.server.PackageWatchdog$MonitoredPackage;

        r1 := @parameter0: org.xmlpull.v1.XmlSerializer;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "package");

        $r3 = specialinvoke r0.<com.android.server.PackageWatchdog$MonitoredPackage: java.lang.String getName()>();

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", $r3);

        $l0 = r0.<com.android.server.PackageWatchdog$MonitoredPackage: long mDurationMs>;

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($l0);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "duration", $r5);

        $l1 = r0.<com.android.server.PackageWatchdog$MonitoredPackage: long mHealthCheckDurationMs>;

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($l1);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "health-check-duration", $r7);

        $z0 = r0.<com.android.server.PackageWatchdog$MonitoredPackage: boolean mHasPassedHealthCheck>;

        $r9 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>($z0);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "passed-health-check", $r9);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "package");

        return;
    }
}
