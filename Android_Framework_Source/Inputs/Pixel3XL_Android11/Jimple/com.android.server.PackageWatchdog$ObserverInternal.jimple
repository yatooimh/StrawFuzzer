class com.android.server.PackageWatchdog$ObserverInternal extends java.lang.Object
{
    public final java.lang.String name;
    public final android.util.ArrayMap packages;
    public com.android.server.PackageWatchdog$PackageHealthObserver registeredObserver;

    void <init>(java.lang.String, java.util.List)
    {
        com.android.server.PackageWatchdog$ObserverInternal r0;
        java.lang.String r1;
        java.util.List r2;
        android.util.ArrayMap $r3;

        r0 := @this: com.android.server.PackageWatchdog$ObserverInternal;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.List;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new android.util.ArrayMap;

        specialinvoke $r3.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.PackageWatchdog$ObserverInternal: android.util.ArrayMap packages> = $r3;

        r0.<com.android.server.PackageWatchdog$ObserverInternal: java.lang.String name> = r1;

        virtualinvoke r0.<com.android.server.PackageWatchdog$ObserverInternal: void updatePackagesLocked(java.util.List)>(r2);

        return;
    }

    static java.util.Set access$100(com.android.server.PackageWatchdog$ObserverInternal, long)
    {
        com.android.server.PackageWatchdog$ObserverInternal r0;
        long l0;
        java.util.Set $r1;

        r0 := @parameter0: com.android.server.PackageWatchdog$ObserverInternal;

        l0 := @parameter1: long;

        $r1 = specialinvoke r0.<com.android.server.PackageWatchdog$ObserverInternal: java.util.Set prunePackagesLocked(long)>(l0);

        return $r1;
    }

    private java.util.Set prunePackagesLocked(long)
    {
        com.android.server.PackageWatchdog$ObserverInternal r0;
        long l0;
        java.util.Iterator r2;
        com.android.server.PackageWatchdog$MonitoredPackage r3;
        int i1, i2;
        android.util.ArraySet $r5;
        android.util.ArrayMap $r6;
        java.util.Collection $r7;
        boolean $z0, $z2;
        java.lang.Object $r8;
        java.lang.StringBuilder $r9;
        java.lang.String $r11, $r14;

        r0 := @this: com.android.server.PackageWatchdog$ObserverInternal;

        l0 := @parameter0: long;

        $r5 = new android.util.ArraySet;

        specialinvoke $r5.<android.util.ArraySet: void <init>()>();

        $r6 = r0.<com.android.server.PackageWatchdog$ObserverInternal: android.util.ArrayMap packages>;

        $r7 = virtualinvoke $r6.<android.util.ArrayMap: java.util.Collection values()>();

        r2 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r8 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.server.PackageWatchdog$MonitoredPackage) $r8;

        i1 = virtualinvoke r3.<com.android.server.PackageWatchdog$MonitoredPackage: int getHealthCheckStateLocked()>();

        i2 = virtualinvoke r3.<com.android.server.PackageWatchdog$MonitoredPackage: int handleElapsedTimeLocked(long)>(l0);

        if i1 == 3 goto label2;

        if i2 != 3 goto label2;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        $r11 = staticinvoke <com.android.server.PackageWatchdog$MonitoredPackage: java.lang.String access$000(com.android.server.PackageWatchdog$MonitoredPackage)>(r3);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" failed health check");

        $r14 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("PackageWatchdog", $r14);

        interfaceinvoke $r5.<java.util.Set: boolean add(java.lang.Object)>(r3);

     label2:
        $z2 = virtualinvoke r3.<com.android.server.PackageWatchdog$MonitoredPackage: boolean isExpiredLocked()>();

        if $z2 == 0 goto label3;

        interfaceinvoke r2.<java.util.Iterator: void remove()>();

     label3:
        goto label1;

     label4:
        return $r5;
    }

    public static com.android.server.PackageWatchdog$ObserverInternal read(org.xmlpull.v1.XmlPullParser, com.android.server.PackageWatchdog)
    {
        int i0;
        boolean z0, $z1, $z2, $z3, $z5, $z6;
        java.lang.String $r1, $r2, $r5, $r6, $r7, $r8, $r9, $r10, $r15, $r19, r22, r23;
        java.util.ArrayList $r3;
        com.android.server.PackageWatchdog$ObserverInternal $r4;
        long $l1, $l2;
        java.lang.Throwable $r11, $r16;
        java.lang.StringBuilder $r12, r26;
        org.xmlpull.v1.XmlPullParser r20;
        com.android.server.PackageWatchdog r21;
        com.android.server.PackageWatchdog$MonitoredPackage r25;

        r20 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r21 := @parameter1: com.android.server.PackageWatchdog;

        r22 = null;

        $r1 = "observer";

        $r2 = interfaceinvoke r20.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z1 == 0 goto label01;

        r23 = interfaceinvoke r20.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

        r22 = r23;

        $z5 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r23);

        if $z5 == 0 goto label01;

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("PackageWatchdog", "Unable to read observer name");

        return null;

     label01:
        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        i0 = interfaceinvoke r20.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label02:
        $z6 = staticinvoke <com.android.internal.util.XmlUtils: boolean nextElementWithin(org.xmlpull.v1.XmlPullParser,int)>(r20, i0);

        if $z6 == 0 goto label11;

        $r5 = "package";

        $r6 = interfaceinvoke r20.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);

     label03:
        if z0 == 0 goto label02;

     label04:
        $r7 = interfaceinvoke r20.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

        $r8 = interfaceinvoke r20.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "duration");

        $l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r8);

        $r9 = interfaceinvoke r20.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "health-check-duration");

        $l2 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r9);

        $r10 = interfaceinvoke r20.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "passed-health-check");

        $z3 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r10);

        r25 = virtualinvoke r21.<com.android.server.PackageWatchdog: com.android.server.PackageWatchdog$MonitoredPackage newMonitoredPackage(java.lang.String,long,long,boolean)>($r7, $l1, $l2, $z3);

     label05:
        if r25 == null goto label07;

     label06:
        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r25);

     label07:
        goto label02;

     label08:
        $r16 := @caughtexception;

     label09:
        r26 = new java.lang.StringBuilder;

        specialinvoke r26.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skipping package for observer ");

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r22);

        $r19 = virtualinvoke r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageWatchdog", $r19, $r16);

     label10:
        goto label02;

     label11:
        $z2 = interfaceinvoke $r3.<java.util.List: boolean isEmpty()>();

        if $z2 == 0 goto label12;

        return null;

     label12:
        $r4 = new com.android.server.PackageWatchdog$ObserverInternal;

        specialinvoke $r4.<com.android.server.PackageWatchdog$ObserverInternal: void <init>(java.lang.String,java.util.List)>(r22, $r3);

        return $r4;

     label13:
        $r11 := @caughtexception;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to read observer ");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r22);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageWatchdog", $r15, $r11);

        return null;

        catch org.xmlpull.v1.XmlPullParserException from label02 to label03 with label13;
        catch java.io.IOException from label02 to label03 with label13;
        catch java.lang.NumberFormatException from label04 to label05 with label08;
        catch org.xmlpull.v1.XmlPullParserException from label04 to label05 with label13;
        catch java.io.IOException from label04 to label05 with label13;
        catch java.lang.NumberFormatException from label06 to label07 with label08;
        catch org.xmlpull.v1.XmlPullParserException from label06 to label07 with label13;
        catch java.io.IOException from label06 to label07 with label13;
        catch org.xmlpull.v1.XmlPullParserException from label09 to label10 with label13;
        catch java.io.IOException from label09 to label10 with label13;
    }

    public void dump(com.android.internal.util.IndentingPrintWriter)
    {
        com.android.server.PackageWatchdog$ObserverInternal r0;
        com.android.internal.util.IndentingPrintWriter r1;
        java.util.Iterator r2;
        java.lang.Object $r6, $r8;
        android.util.ArrayMap $r7, $r39;
        java.lang.StringBuilder $r9, $r14, $r19, $r24, $r29, $r36;
        java.lang.String $r12, $r18, $r23, $r28, $r31, $r33, $r38, r41;
        android.util.LongArrayQueue $r16;
        int $i0, $i3;
        long $l1, $l2;
        boolean $z0, z1, $z2;
        com.android.server.PackageWatchdog$PackageHealthObserver r35;
        java.util.Set $r40;
        com.android.server.PackageWatchdog$MonitoredPackage r42;

        r0 := @this: com.android.server.PackageWatchdog$ObserverInternal;

        r1 := @parameter0: com.android.internal.util.IndentingPrintWriter;

        r35 = r0.<com.android.server.PackageWatchdog$ObserverInternal: com.android.server.PackageWatchdog$PackageHealthObserver registeredObserver>;

        if r35 == null goto label1;

        $z0 = interfaceinvoke r35.<com.android.server.PackageWatchdog$PackageHealthObserver: boolean isPersistent()>();

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Persistent: ");

        virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z1);

        $r38 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r38);

        $r39 = r0.<com.android.server.PackageWatchdog$ObserverInternal: android.util.ArrayMap packages>;

        $r40 = virtualinvoke $r39.<android.util.ArrayMap: java.util.Set keySet()>();

        r2 = interfaceinvoke $r40.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label4;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r41 = (java.lang.String) $r6;

        $r7 = r0.<com.android.server.PackageWatchdog$ObserverInternal: android.util.ArrayMap packages>;

        $r8 = virtualinvoke $r7.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r41);

        r42 = (com.android.server.PackageWatchdog$MonitoredPackage) $r8;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r41);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r12);

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("# Failures: ");

        $r16 = staticinvoke <com.android.server.PackageWatchdog$MonitoredPackage: android.util.LongArrayQueue access$400(com.android.server.PackageWatchdog$MonitoredPackage)>(r42);

        $i0 = virtualinvoke $r16.<android.util.LongArrayQueue: int size()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r18 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r18);

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Monitoring duration remaining: ");

        $l1 = staticinvoke <com.android.server.PackageWatchdog$MonitoredPackage: long access$200(com.android.server.PackageWatchdog$MonitoredPackage)>(r42);

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms");

        $r23 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r23);

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Explicit health check duration: ");

        $l2 = staticinvoke <com.android.server.PackageWatchdog$MonitoredPackage: long access$500(com.android.server.PackageWatchdog$MonitoredPackage)>(r42);

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms");

        $r28 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r28);

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Health check state: ");

        $i3 = staticinvoke <com.android.server.PackageWatchdog$MonitoredPackage: int access$600(com.android.server.PackageWatchdog$MonitoredPackage)>(r42);

        $r31 = staticinvoke <com.android.server.PackageWatchdog$MonitoredPackage: java.lang.String access$700(com.android.server.PackageWatchdog$MonitoredPackage,int)>(r42, $i3);

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        $r33 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r33);

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

        goto label3;

     label4:
        return;
    }

    public boolean onPackageFailureLocked(java.lang.String)
    {
        com.android.server.PackageWatchdog$ObserverInternal r0;
        android.util.ArrayMap $r1, $r5, $r10;
        java.lang.Object $r2, $r11;
        boolean $z0, $z1, $z2;
        com.android.server.PackageWatchdog$PackageHealthObserver $r3, $r4;
        com.android.server.PackageWatchdog $r6;
        long $l0;
        com.android.server.PackageWatchdog$MonitoredPackage $r7, r12;
        java.lang.String r9;

        r0 := @this: com.android.server.PackageWatchdog$ObserverInternal;

        r9 := @parameter0: java.lang.String;

        $r1 = r0.<com.android.server.PackageWatchdog$ObserverInternal: android.util.ArrayMap packages>;

        $r2 = virtualinvoke $r1.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r9);

        if $r2 != null goto label1;

        $r3 = r0.<com.android.server.PackageWatchdog$ObserverInternal: com.android.server.PackageWatchdog$PackageHealthObserver registeredObserver>;

        $z1 = interfaceinvoke $r3.<com.android.server.PackageWatchdog$PackageHealthObserver: boolean isPersistent()>();

        if $z1 == 0 goto label1;

        $r4 = r0.<com.android.server.PackageWatchdog$ObserverInternal: com.android.server.PackageWatchdog$PackageHealthObserver registeredObserver>;

        $z2 = interfaceinvoke $r4.<com.android.server.PackageWatchdog$PackageHealthObserver: boolean mayObservePackage(java.lang.String)>(r9);

        if $z2 == 0 goto label1;

        $r5 = r0.<com.android.server.PackageWatchdog$ObserverInternal: android.util.ArrayMap packages>;

        $r6 = staticinvoke <com.android.server.PackageWatchdog: com.android.server.PackageWatchdog access$300()>();

        $l0 = <com.android.server.PackageWatchdog: long DEFAULT_OBSERVING_DURATION_MS>;

        $r7 = virtualinvoke $r6.<com.android.server.PackageWatchdog: com.android.server.PackageWatchdog$MonitoredPackage newMonitoredPackage(java.lang.String,long,boolean)>(r9, $l0, 0);

        virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r9, $r7);

     label1:
        $r10 = r0.<com.android.server.PackageWatchdog$ObserverInternal: android.util.ArrayMap packages>;

        $r11 = virtualinvoke $r10.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r9);

        r12 = (com.android.server.PackageWatchdog$MonitoredPackage) $r11;

        if r12 == null goto label2;

        $z0 = virtualinvoke r12.<com.android.server.PackageWatchdog$MonitoredPackage: boolean onFailureLocked()>();

        return $z0;

     label2:
        return 0;
    }

    public void updatePackagesLocked(java.util.List)
    {
        com.android.server.PackageWatchdog$ObserverInternal r0;
        java.util.List r1;
        com.android.server.PackageWatchdog$MonitoredPackage r2, r3;
        int $i0, i2;
        java.lang.Object $r4, $r7;
        android.util.ArrayMap $r5, $r8;
        java.lang.String $r6, $r9;
        long $l1;

        r0 := @this: com.android.server.PackageWatchdog$ObserverInternal;

        r1 := @parameter0: java.util.List;

        i2 = 0;

     label1:
        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        if i2 >= $i0 goto label4;

        $r4 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i2);

        r2 = (com.android.server.PackageWatchdog$MonitoredPackage) $r4;

        $r5 = r0.<com.android.server.PackageWatchdog$ObserverInternal: android.util.ArrayMap packages>;

        $r6 = staticinvoke <com.android.server.PackageWatchdog$MonitoredPackage: java.lang.String access$000(com.android.server.PackageWatchdog$MonitoredPackage)>(r2);

        $r7 = virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r6);

        r3 = (com.android.server.PackageWatchdog$MonitoredPackage) $r7;

        if r3 == null goto label2;

        $l1 = staticinvoke <com.android.server.PackageWatchdog$MonitoredPackage: long access$200(com.android.server.PackageWatchdog$MonitoredPackage)>(r2);

        virtualinvoke r3.<com.android.server.PackageWatchdog$MonitoredPackage: void updateHealthCheckDuration(long)>($l1);

        goto label3;

     label2:
        $r8 = r0.<com.android.server.PackageWatchdog$ObserverInternal: android.util.ArrayMap packages>;

        $r9 = staticinvoke <com.android.server.PackageWatchdog$MonitoredPackage: java.lang.String access$000(com.android.server.PackageWatchdog$MonitoredPackage)>(r2);

        virtualinvoke $r8.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, r2);

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        return;
    }

    public boolean writeLocked(org.xmlpull.v1.XmlSerializer)
    {
        com.android.server.PackageWatchdog$ObserverInternal r0;
        java.lang.String $r2;
        android.util.ArrayMap $r4, $r6;
        int $i0, i2;
        java.lang.Object $r7;
        com.android.server.PackageWatchdog$MonitoredPackage $r8;
        java.lang.Throwable $r9;
        org.xmlpull.v1.XmlSerializer r10;

        r0 := @this: com.android.server.PackageWatchdog$ObserverInternal;

        r10 := @parameter0: org.xmlpull.v1.XmlSerializer;

     label1:
        interfaceinvoke r10.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "observer");

        $r2 = r0.<com.android.server.PackageWatchdog$ObserverInternal: java.lang.String name>;

        interfaceinvoke r10.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", $r2);

     label2:
        i2 = 0;

     label3:
        $r4 = r0.<com.android.server.PackageWatchdog$ObserverInternal: android.util.ArrayMap packages>;

        $i0 = virtualinvoke $r4.<android.util.ArrayMap: int size()>();

        if i2 >= $i0 goto label5;

        $r6 = r0.<com.android.server.PackageWatchdog$ObserverInternal: android.util.ArrayMap packages>;

        $r7 = virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i2);

        $r8 = (com.android.server.PackageWatchdog$MonitoredPackage) $r7;

        virtualinvoke $r8.<com.android.server.PackageWatchdog$MonitoredPackage: void writeLocked(org.xmlpull.v1.XmlSerializer)>(r10);

     label4:
        i2 = i2 + 1;

        goto label3;

     label5:
        interfaceinvoke r10.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "observer");

     label6:
        return 1;

     label7:
        $r9 := @caughtexception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageWatchdog", "Cannot save observer", $r9);

        return 0;

        catch java.io.IOException from label1 to label2 with label7;
        catch java.io.IOException from label3 to label4 with label7;
        catch java.io.IOException from label5 to label6 with label7;
    }
}
