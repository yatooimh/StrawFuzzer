class com.android.server.PersistentDataBlockService$1 extends android.service.persistentdata.IPersistentDataBlockService$Stub
{
    final com.android.server.PersistentDataBlockService this$0;

    void <init>(com.android.server.PersistentDataBlockService)
    {
        com.android.server.PersistentDataBlockService$1 r0;
        com.android.server.PersistentDataBlockService r1;

        r0 := @this: com.android.server.PersistentDataBlockService$1;

        r1 := @parameter0: com.android.server.PersistentDataBlockService;

        r0.<com.android.server.PersistentDataBlockService$1: com.android.server.PersistentDataBlockService this$0> = r1;

        specialinvoke r0.<android.service.persistentdata.IPersistentDataBlockService$Stub: void <init>()>();

        return;
    }

    private void enforcePersistentDataBlockAccess()
    {
        com.android.server.PersistentDataBlockService$1 r0;
        com.android.server.PersistentDataBlockService $r1, $r3;
        android.content.Context $r2;
        int $i0, $i1;

        r0 := @this: com.android.server.PersistentDataBlockService$1;

        $r1 = r0.<com.android.server.PersistentDataBlockService$1: com.android.server.PersistentDataBlockService this$0>;

        $r2 = staticinvoke <com.android.server.PersistentDataBlockService: android.content.Context access$1600(com.android.server.PersistentDataBlockService)>($r1);

        $i0 = virtualinvoke $r2.<android.content.Context: int checkCallingPermission(java.lang.String)>("android.permission.ACCESS_PDB_STATE");

        if $i0 == 0 goto label1;

        $r3 = r0.<com.android.server.PersistentDataBlockService$1: com.android.server.PersistentDataBlockService this$0>;

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        staticinvoke <com.android.server.PersistentDataBlockService: void access$000(com.android.server.PersistentDataBlockService,int)>($r3, $i1);

     label1:
        return;
    }

    public int getDataBlockSize()
    {
        com.android.server.PersistentDataBlockService$1 r0;
        int i0;
        com.android.server.PersistentDataBlockService $r2, $r5, $r6;
        java.lang.String $r3, $r8, $r12;
        java.io.DataInputStream $r4;
        java.lang.Throwable $r7, $r9, $r10, $r11;
        java.io.FileInputStream r13;
        java.io.File r14;
        java.lang.Object r16;

        r0 := @this: com.android.server.PersistentDataBlockService$1;

        specialinvoke r0.<com.android.server.PersistentDataBlockService$1: void enforcePersistentDataBlockAccess()>();

     label01:
        r13 = new java.io.FileInputStream;

        r14 = new java.io.File;

        $r2 = r0.<com.android.server.PersistentDataBlockService$1: com.android.server.PersistentDataBlockService this$0>;

        $r3 = staticinvoke <com.android.server.PersistentDataBlockService: java.lang.String access$200(com.android.server.PersistentDataBlockService)>($r2);

        specialinvoke r14.<java.io.File: void <init>(java.lang.String)>($r3);

        specialinvoke r13.<java.io.FileInputStream: void <init>(java.io.File)>(r14);

        $r4 = new java.io.DataInputStream;

        specialinvoke $r4.<java.io.DataInputStream: void <init>(java.io.InputStream)>(r13);

     label02:
        $r5 = r0.<com.android.server.PersistentDataBlockService$1: com.android.server.PersistentDataBlockService this$0>;

        r16 = staticinvoke <com.android.server.PersistentDataBlockService: java.lang.Object access$400(com.android.server.PersistentDataBlockService)>($r5);

        entermonitor r16;

     label03:
        $r6 = r0.<com.android.server.PersistentDataBlockService$1: com.android.server.PersistentDataBlockService this$0>;

        i0 = staticinvoke <com.android.server.PersistentDataBlockService: int access$800(com.android.server.PersistentDataBlockService,java.io.DataInputStream)>($r6, $r4);

        exitmonitor r16;

     label04:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>($r4);

        return i0;

     label05:
        $r9 := @caughtexception;

     label06:
        exitmonitor r16;

     label07:
        throw $r9;

     label08:
        $r10 := @caughtexception;

        goto label12;

     label09:
        $r7 := @caughtexception;

     label10:
        $r8 = staticinvoke <com.android.server.PersistentDataBlockService: java.lang.String access$300()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>($r8, "error reading data block size");

     label11:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>($r4);

        return 0;

     label12:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>($r4);

        throw $r10;

     label13:
        $r11 := @caughtexception;

        $r12 = staticinvoke <com.android.server.PersistentDataBlockService: java.lang.String access$300()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>($r12, "partition not available");

        return 0;

        catch java.io.FileNotFoundException from label01 to label02 with label13;
        catch java.io.IOException from label02 to label03 with label09;
        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label06 to label07 with label05;
        catch java.io.IOException from label07 to label08 with label09;
        catch java.lang.Throwable from label07 to label08 with label08;
        catch java.lang.Throwable from label10 to label11 with label08;
    }

    public int getFlashLockState()
    {
        com.android.server.PersistentDataBlockService$1 r0;
        java.lang.String r1;
        com.android.server.PersistentDataBlockService $r2;
        boolean $z0, $z1;
        int i0;
        byte b1;

        r0 := @this: com.android.server.PersistentDataBlockService$1;

        $r2 = r0.<com.android.server.PersistentDataBlockService$1: com.android.server.PersistentDataBlockService this$0>;

        staticinvoke <com.android.server.PersistentDataBlockService: void access$1400(com.android.server.PersistentDataBlockService)>($r2);

        r1 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("ro.boot.flash.locked");

        i0 = virtualinvoke r1.<java.lang.String: int hashCode()>();

        if i0 == 48 goto label3;

        if i0 == 49 goto label2;

     label1:
        goto label4;

     label2:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("1");

        if $z1 == 0 goto label1;

        b1 = 0;

        goto label5;

     label3:
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("0");

        if $z0 == 0 goto label1;

        b1 = 1;

        goto label5;

     label4:
        b1 = -1;

     label5:
        if b1 == 0 goto label7;

        if b1 == 1 goto label6;

        return -1;

     label6:
        return 0;

     label7:
        return 1;
    }

    public long getMaximumDataBlockSize()
    {
        com.android.server.PersistentDataBlockService$1 r0;
        com.android.server.PersistentDataBlockService $r1, $r2;
        int $i0;
        long $l1;

        r0 := @this: com.android.server.PersistentDataBlockService$1;

        $r1 = r0.<com.android.server.PersistentDataBlockService$1: com.android.server.PersistentDataBlockService this$0>;

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        staticinvoke <com.android.server.PersistentDataBlockService: void access$000(com.android.server.PersistentDataBlockService,int)>($r1, $i0);

        $r2 = r0.<com.android.server.PersistentDataBlockService$1: com.android.server.PersistentDataBlockService this$0>;

        $l1 = staticinvoke <com.android.server.PersistentDataBlockService: long access$100(com.android.server.PersistentDataBlockService)>($r2);

        return $l1;
    }

    public boolean getOemUnlockEnabled()
    {
        com.android.server.PersistentDataBlockService$1 r0;
        com.android.server.PersistentDataBlockService $r1, $r2;
        boolean $z0;

        r0 := @this: com.android.server.PersistentDataBlockService$1;

        $r1 = r0.<com.android.server.PersistentDataBlockService$1: com.android.server.PersistentDataBlockService this$0>;

        staticinvoke <com.android.server.PersistentDataBlockService: void access$1400(com.android.server.PersistentDataBlockService)>($r1);

        $r2 = r0.<com.android.server.PersistentDataBlockService$1: com.android.server.PersistentDataBlockService this$0>;

        $z0 = staticinvoke <com.android.server.PersistentDataBlockService: boolean access$1500(com.android.server.PersistentDataBlockService)>($r2);

        return $z0;
    }

    public boolean hasFrpCredentialHandle()
    {
        com.android.server.PersistentDataBlockService$1 r0;
        com.android.server.PersistentDataBlockService $r1;
        com.android.server.PersistentDataBlockManagerInternal $r2;
        java.lang.Throwable $r3;
        java.lang.String $r4;
        java.lang.UnsupportedOperationException $r5;
        byte[] r6;
        boolean z0;

        r0 := @this: com.android.server.PersistentDataBlockService$1;

        specialinvoke r0.<com.android.server.PersistentDataBlockService$1: void enforcePersistentDataBlockAccess()>();

     label1:
        $r1 = r0.<com.android.server.PersistentDataBlockService$1: com.android.server.PersistentDataBlockService this$0>;

        $r2 = staticinvoke <com.android.server.PersistentDataBlockService: com.android.server.PersistentDataBlockManagerInternal access$1700(com.android.server.PersistentDataBlockService)>($r1);

        r6 = interfaceinvoke $r2.<com.android.server.PersistentDataBlockManagerInternal: byte[] getFrpCredentialHandle()>();

     label2:
        if r6 == null goto label3;

        z0 = 1;

        goto label4;

     label3:
        z0 = 0;

     label4:
        return z0;

     label5:
        $r3 := @caughtexception;

        $r4 = staticinvoke <com.android.server.PersistentDataBlockService: java.lang.String access$300()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r4, "error reading frp handle", $r3);

        $r5 = new java.lang.UnsupportedOperationException;

        specialinvoke $r5.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("cannot read frp credential");

        throw $r5;

        catch java.lang.IllegalStateException from label1 to label2 with label5;
    }

    public byte[] read()
    {
        com.android.server.PersistentDataBlockService$1 r0;
        int i0, i1, $i2;
        java.lang.StringBuilder r1;
        com.android.server.PersistentDataBlockService $r2, $r3, $r4, $r7, $r8;
        boolean $z0;
        java.lang.String $r5, $r13, $r17, $r19, $r21, $r24, $r26, $r29, $r31, r38;
        java.io.DataInputStream $r6;
        byte[] $r14, $r15, r37;
        java.lang.Throwable $r16, $r18, $r20, $r22, $r23, $r25, $r27, $r28, $r30;
        java.io.FileInputStream r32;
        java.io.File r33;
        java.lang.Object r35;

        r0 := @this: com.android.server.PersistentDataBlockService$1;

        $r2 = r0.<com.android.server.PersistentDataBlockService$1: com.android.server.PersistentDataBlockService this$0>;

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        staticinvoke <com.android.server.PersistentDataBlockService: void access$000(com.android.server.PersistentDataBlockService,int)>($r2, $i2);

        $r3 = r0.<com.android.server.PersistentDataBlockService$1: com.android.server.PersistentDataBlockService this$0>;

        $z0 = staticinvoke <com.android.server.PersistentDataBlockService: boolean access$700(com.android.server.PersistentDataBlockService)>($r3);

        if $z0 != 0 goto label01;

        $r15 = newarray (byte)[0];

        return $r15;

     label01:
        r32 = new java.io.FileInputStream;

        r33 = new java.io.File;

        $r4 = r0.<com.android.server.PersistentDataBlockService$1: com.android.server.PersistentDataBlockService this$0>;

        $r5 = staticinvoke <com.android.server.PersistentDataBlockService: java.lang.String access$200(com.android.server.PersistentDataBlockService)>($r4);

        specialinvoke r33.<java.io.File: void <init>(java.lang.String)>($r5);

        specialinvoke r32.<java.io.FileInputStream: void <init>(java.io.File)>(r33);

        $r6 = new java.io.DataInputStream;

        specialinvoke $r6.<java.io.DataInputStream: void <init>(java.io.InputStream)>(r32);

     label02:
        $r7 = r0.<com.android.server.PersistentDataBlockService$1: com.android.server.PersistentDataBlockService this$0>;

        r35 = staticinvoke <com.android.server.PersistentDataBlockService: java.lang.Object access$400(com.android.server.PersistentDataBlockService)>($r7);

        entermonitor r35;

     label03:
        $r8 = r0.<com.android.server.PersistentDataBlockService$1: com.android.server.PersistentDataBlockService this$0>;

        i0 = staticinvoke <com.android.server.PersistentDataBlockService: int access$800(com.android.server.PersistentDataBlockService,java.io.DataInputStream)>($r8, $r6);

     label04:
        if i0 != 0 goto label10;

     label05:
        exitmonitor r35;

     label06:
        virtualinvoke $r6.<java.io.DataInputStream: void close()>();

     label07:
        goto label09;

     label08:
        $r25 := @caughtexception;

        $r26 = staticinvoke <com.android.server.PersistentDataBlockService: java.lang.String access$300()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>($r26, "failed to close OutputStream");

     label09:
        $r14 = newarray (byte)[0];

        return $r14;

     label10:
        r37 = newarray (byte)[i0];

        i1 = virtualinvoke $r6.<java.io.DataInputStream: int read(byte[],int,int)>(r37, 0, i0);

     label11:
        if i1 >= i0 goto label17;

     label12:
        r38 = staticinvoke <com.android.server.PersistentDataBlockService: java.lang.String access$300()>();

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("failed to read entire data block. bytes read: ");

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r13 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>(r38, $r13);

        exitmonitor r35;

     label13:
        virtualinvoke $r6.<java.io.DataInputStream: void close()>();

     label14:
        goto label16;

     label15:
        $r28 := @caughtexception;

        $r29 = staticinvoke <com.android.server.PersistentDataBlockService: java.lang.String access$300()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>($r29, "failed to close OutputStream");

     label16:
        return null;

     label17:
        exitmonitor r35;

     label18:
        virtualinvoke $r6.<java.io.DataInputStream: void close()>();

     label19:
        goto label21;

     label20:
        $r16 := @caughtexception;

        $r17 = staticinvoke <com.android.server.PersistentDataBlockService: java.lang.String access$300()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>($r17, "failed to close OutputStream");

     label21:
        return r37;

     label22:
        $r27 := @caughtexception;

     label23:
        exitmonitor r35;

     label24:
        throw $r27;

     label25:
        $r22 := @caughtexception;

        goto label32;

     label26:
        $r18 := @caughtexception;

     label27:
        $r19 = staticinvoke <com.android.server.PersistentDataBlockService: java.lang.String access$300()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r19, "failed to read data", $r18);

     label28:
        virtualinvoke $r6.<java.io.DataInputStream: void close()>();

     label29:
        goto label31;

     label30:
        $r20 := @caughtexception;

        $r21 = staticinvoke <com.android.server.PersistentDataBlockService: java.lang.String access$300()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>($r21, "failed to close OutputStream");

     label31:
        return null;

     label32:
        virtualinvoke $r6.<java.io.DataInputStream: void close()>();

     label33:
        goto label35;

     label34:
        $r23 := @caughtexception;

        $r24 = staticinvoke <com.android.server.PersistentDataBlockService: java.lang.String access$300()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>($r24, "failed to close OutputStream");

     label35:
        throw $r22;

     label36:
        $r30 := @caughtexception;

        $r31 = staticinvoke <com.android.server.PersistentDataBlockService: java.lang.String access$300()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r31, "partition not available?", $r30);

        return null;

        catch java.io.FileNotFoundException from label01 to label02 with label36;
        catch java.io.IOException from label02 to label03 with label26;
        catch java.lang.Throwable from label02 to label03 with label25;
        catch java.lang.Throwable from label03 to label04 with label22;
        catch java.lang.Throwable from label05 to label06 with label22;
        catch java.io.IOException from label06 to label07 with label08;
        catch java.lang.Throwable from label10 to label11 with label22;
        catch java.lang.Throwable from label12 to label13 with label22;
        catch java.io.IOException from label13 to label14 with label15;
        catch java.lang.Throwable from label17 to label18 with label22;
        catch java.io.IOException from label18 to label19 with label20;
        catch java.lang.Throwable from label23 to label24 with label22;
        catch java.io.IOException from label24 to label25 with label26;
        catch java.lang.Throwable from label24 to label25 with label25;
        catch java.lang.Throwable from label27 to label28 with label25;
        catch java.io.IOException from label28 to label29 with label30;
        catch java.io.IOException from label32 to label33 with label34;
    }

    public void setOemUnlockEnabled(boolean) throws java.lang.SecurityException
    {
        com.android.server.PersistentDataBlockService$1 r0;
        boolean z0, $z1;
        java.lang.Object r1;
        com.android.server.PersistentDataBlockService $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        java.lang.Throwable $r10;

        r0 := @this: com.android.server.PersistentDataBlockService$1;

        z0 := @parameter0: boolean;

        $z1 = staticinvoke <android.app.ActivityManager: boolean isUserAMonkey()>();

        if $z1 == 0 goto label1;

        return;

     label1:
        $r3 = r0.<com.android.server.PersistentDataBlockService$1: com.android.server.PersistentDataBlockService this$0>;

        staticinvoke <com.android.server.PersistentDataBlockService: void access$900(com.android.server.PersistentDataBlockService)>($r3);

        $r4 = r0.<com.android.server.PersistentDataBlockService$1: com.android.server.PersistentDataBlockService this$0>;

        staticinvoke <com.android.server.PersistentDataBlockService: void access$1100(com.android.server.PersistentDataBlockService)>($r4);

        if z0 == 0 goto label2;

        $r8 = r0.<com.android.server.PersistentDataBlockService$1: com.android.server.PersistentDataBlockService this$0>;

        staticinvoke <com.android.server.PersistentDataBlockService: void access$1200(com.android.server.PersistentDataBlockService,java.lang.String)>($r8, "no_oem_unlock");

        $r9 = r0.<com.android.server.PersistentDataBlockService$1: com.android.server.PersistentDataBlockService this$0>;

        staticinvoke <com.android.server.PersistentDataBlockService: void access$1200(com.android.server.PersistentDataBlockService,java.lang.String)>($r9, "no_factory_reset");

     label2:
        $r5 = r0.<com.android.server.PersistentDataBlockService$1: com.android.server.PersistentDataBlockService this$0>;

        r1 = staticinvoke <com.android.server.PersistentDataBlockService: java.lang.Object access$400(com.android.server.PersistentDataBlockService)>($r5);

        entermonitor r1;

     label3:
        $r6 = r0.<com.android.server.PersistentDataBlockService$1: com.android.server.PersistentDataBlockService this$0>;

        staticinvoke <com.android.server.PersistentDataBlockService: void access$1300(com.android.server.PersistentDataBlockService,boolean)>($r6, z0);

        $r7 = r0.<com.android.server.PersistentDataBlockService$1: com.android.server.PersistentDataBlockService this$0>;

        staticinvoke <com.android.server.PersistentDataBlockService: boolean access$600(com.android.server.PersistentDataBlockService)>($r7);

        exitmonitor r1;

     label4:
        return;

     label5:
        $r10 := @caughtexception;

     label6:
        exitmonitor r1;

     label7:
        throw $r10;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public void wipe()
    {
        com.android.server.PersistentDataBlockService$1 r0;
        java.lang.Object r1;
        com.android.server.PersistentDataBlockService $r3, $r4, $r5, $r6, $r8;
        java.lang.String $r7, $r9, $r10;
        int $i0;
        java.lang.Throwable $r11;

        r0 := @this: com.android.server.PersistentDataBlockService$1;

        $r3 = r0.<com.android.server.PersistentDataBlockService$1: com.android.server.PersistentDataBlockService this$0>;

        staticinvoke <com.android.server.PersistentDataBlockService: void access$900(com.android.server.PersistentDataBlockService)>($r3);

        $r4 = r0.<com.android.server.PersistentDataBlockService$1: com.android.server.PersistentDataBlockService this$0>;

        r1 = staticinvoke <com.android.server.PersistentDataBlockService: java.lang.Object access$400(com.android.server.PersistentDataBlockService)>($r4);

        entermonitor r1;

     label1:
        $r6 = r0.<com.android.server.PersistentDataBlockService$1: com.android.server.PersistentDataBlockService this$0>;

        $r5 = r0.<com.android.server.PersistentDataBlockService$1: com.android.server.PersistentDataBlockService this$0>;

        $r7 = staticinvoke <com.android.server.PersistentDataBlockService: java.lang.String access$200(com.android.server.PersistentDataBlockService)>($r5);

        $i0 = staticinvoke <com.android.server.PersistentDataBlockService: int access$1000(com.android.server.PersistentDataBlockService,java.lang.String)>($r6, $r7);

        if $i0 >= 0 goto label3;

        $r10 = staticinvoke <com.android.server.PersistentDataBlockService: java.lang.String access$300()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>($r10, "failed to wipe persistent partition");

     label2:
        goto label4;

     label3:
        $r8 = r0.<com.android.server.PersistentDataBlockService$1: com.android.server.PersistentDataBlockService this$0>;

        staticinvoke <com.android.server.PersistentDataBlockService: boolean access$502(com.android.server.PersistentDataBlockService,boolean)>($r8, 0);

        $r9 = staticinvoke <com.android.server.PersistentDataBlockService: java.lang.String access$300()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>($r9, "persistent partition now wiped and unwritable");

     label4:
        exitmonitor r1;

     label5:
        return;

     label6:
        $r11 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r11;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public int write(byte[]) throws android.os.RemoteException
    {
        com.android.server.PersistentDataBlockService$1 r0;
        long l0, $l4, $l9;
        java.nio.ByteBuffer r1;
        int i1, $i2, $i3, $i6, $i7, $i8, $i10;
        com.android.server.PersistentDataBlockService $r2, $r3, $r4, $r10, $r11, $r14;
        byte $b5;
        java.lang.String $r5, $r17, $r19;
        java.io.DataOutputStream $r6;
        boolean $z0, $z1;
        byte[] $r12, $r13, r21;
        java.lang.Throwable $r15, $r16, $r18, $r20;
        java.io.FileOutputStream r22;
        java.io.File r23;
        java.lang.Object r25;

        r0 := @this: com.android.server.PersistentDataBlockService$1;

        r21 := @parameter0: byte[];

        $r2 = r0.<com.android.server.PersistentDataBlockService$1: com.android.server.PersistentDataBlockService this$0>;

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        staticinvoke <com.android.server.PersistentDataBlockService: void access$000(com.android.server.PersistentDataBlockService,int)>($r2, $i2);

        $r3 = r0.<com.android.server.PersistentDataBlockService$1: com.android.server.PersistentDataBlockService this$0>;

        l0 = staticinvoke <com.android.server.PersistentDataBlockService: long access$100(com.android.server.PersistentDataBlockService)>($r3);

        $i3 = lengthof r21;

        $l4 = (long) $i3;

        $b5 = $l4 cmp l0;

        if $b5 <= 0 goto label01;

        $l9 = neg l0;

        $i10 = (int) $l9;

        return $i10;

     label01:
        r22 = new java.io.FileOutputStream;

        r23 = new java.io.File;

        $r4 = r0.<com.android.server.PersistentDataBlockService$1: com.android.server.PersistentDataBlockService this$0>;

        $r5 = staticinvoke <com.android.server.PersistentDataBlockService: java.lang.String access$200(com.android.server.PersistentDataBlockService)>($r4);

        specialinvoke r23.<java.io.File: void <init>(java.lang.String)>($r5);

        specialinvoke r22.<java.io.FileOutputStream: void <init>(java.io.File)>(r23);

        $r6 = new java.io.DataOutputStream;

        specialinvoke $r6.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>(r22);

     label02:
        $i6 = lengthof r21;

        $i7 = $i6 + 8;

        r1 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>($i7);

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>(428873843);

        $i8 = lengthof r21;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>($i8);

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>(r21);

        $r10 = r0.<com.android.server.PersistentDataBlockService$1: com.android.server.PersistentDataBlockService this$0>;

        r25 = staticinvoke <com.android.server.PersistentDataBlockService: java.lang.Object access$400(com.android.server.PersistentDataBlockService)>($r10);

        entermonitor r25;

     label03:
        $r11 = r0.<com.android.server.PersistentDataBlockService$1: com.android.server.PersistentDataBlockService this$0>;

        $z0 = staticinvoke <com.android.server.PersistentDataBlockService: boolean access$500(com.android.server.PersistentDataBlockService)>($r11);

        if $z0 != 0 goto label05;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>($r6);

        exitmonitor r25;

     label04:
        return -1;

     label05:
        $r12 = newarray (byte)[32];

        virtualinvoke $r6.<java.io.DataOutputStream: void write(byte[],int,int)>($r12, 0, 32);

        $r13 = virtualinvoke r1.<java.nio.ByteBuffer: byte[] array()>();

        virtualinvoke $r6.<java.io.DataOutputStream: void write(byte[])>($r13);

        virtualinvoke $r6.<java.io.DataOutputStream: void flush()>();

     label06:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>($r6);

     label07:
        $r14 = r0.<com.android.server.PersistentDataBlockService$1: com.android.server.PersistentDataBlockService this$0>;

        $z1 = staticinvoke <com.android.server.PersistentDataBlockService: boolean access$600(com.android.server.PersistentDataBlockService)>($r14);

        if $z1 == 0 goto label09;

        i1 = lengthof r21;

        exitmonitor r25;

     label08:
        return i1;

     label09:
        exitmonitor r25;

     label10:
        return -1;

     label11:
        $r20 := @caughtexception;

        goto label16;

     label12:
        $r16 := @caughtexception;

     label13:
        $r17 = staticinvoke <com.android.server.PersistentDataBlockService: java.lang.String access$300()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r17, "failed writing to the persistent data block", $r16);

     label14:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>($r6);

        exitmonitor r25;

     label15:
        return -1;

     label16:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>($r6);

     label17:
        throw $r20;

     label18:
        $r15 := @caughtexception;

     label19:
        exitmonitor r25;

     label20:
        throw $r15;

     label21:
        $r18 := @caughtexception;

        $r19 = staticinvoke <com.android.server.PersistentDataBlockService: java.lang.String access$300()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r19, "partition not available?", $r18);

        return -1;

        catch java.io.FileNotFoundException from label01 to label02 with label21;
        catch java.lang.Throwable from label03 to label04 with label18;
        catch java.io.IOException from label05 to label06 with label12;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label06 to label07 with label18;
        catch java.lang.Throwable from label07 to label08 with label18;
        catch java.lang.Throwable from label09 to label10 with label18;
        catch java.lang.Throwable from label13 to label14 with label11;
        catch java.lang.Throwable from label14 to label15 with label18;
        catch java.lang.Throwable from label16 to label17 with label18;
        catch java.lang.Throwable from label17 to label18 with label18;
        catch java.lang.Throwable from label19 to label20 with label18;
    }
}
