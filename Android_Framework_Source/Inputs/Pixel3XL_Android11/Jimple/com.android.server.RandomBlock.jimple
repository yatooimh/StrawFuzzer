class com.android.server.RandomBlock extends java.lang.Object
{
    private static final int BLOCK_SIZE;
    private static final boolean DEBUG;
    private static final java.lang.String TAG;
    private byte[] block;

    private void <init>()
    {
        com.android.server.RandomBlock r0;
        byte[] $r1;

        r0 := @this: com.android.server.RandomBlock;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (byte)[512];

        r0.<com.android.server.RandomBlock: byte[] block> = $r1;

        return;
    }

    private static void close(java.io.Closeable)
    {
        java.lang.Throwable $r0;
        java.io.Closeable r1;

        r1 := @parameter0: java.io.Closeable;

        if r1 != null goto label1;

        return;

     label1:
        interfaceinvoke r1.<java.io.Closeable: void close()>();

     label2:
        goto label4;

     label3:
        $r0 := @caughtexception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("RandomBlock", "IOException thrown while closing Closeable", $r0);

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    static com.android.server.RandomBlock fromFile(java.lang.String) throws java.io.IOException
    {
        java.io.FileInputStream r0, r3;
        java.lang.Throwable $r1;
        java.lang.String r2;
        com.android.server.RandomBlock r5;

        r2 := @parameter0: java.lang.String;

        r3 = null;

     label1:
        r0 = new java.io.FileInputStream;

     label2:
        r3 = null;

     label3:
        specialinvoke r0.<java.io.FileInputStream: void <init>(java.lang.String)>(r2);

     label4:
        r3 = r0;

     label5:
        r5 = staticinvoke <com.android.server.RandomBlock: com.android.server.RandomBlock fromStream(java.io.InputStream)>(r0);

     label6:
        staticinvoke <com.android.server.RandomBlock: void close(java.io.Closeable)>(r0);

        return r5;

     label7:
        $r1 := @caughtexception;

        staticinvoke <com.android.server.RandomBlock: void close(java.io.Closeable)>(r3);

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
    }

    private static com.android.server.RandomBlock fromStream(java.io.InputStream) throws java.io.IOException
    {
        java.io.InputStream r0;
        int i0, $i1, i2;
        com.android.server.RandomBlock $r2;
        byte[] $r3;
        java.io.EOFException $r4;

        r0 := @parameter0: java.io.InputStream;

        $r2 = new com.android.server.RandomBlock;

        specialinvoke $r2.<com.android.server.RandomBlock: void <init>()>();

        i2 = 0;

     label1:
        if i2 >= 512 goto label3;

        $r3 = $r2.<com.android.server.RandomBlock: byte[] block>;

        $i1 = 512 - i2;

        i0 = virtualinvoke r0.<java.io.InputStream: int read(byte[],int,int)>($r3, i2, $i1);

        if i0 == -1 goto label2;

        i2 = i2 + i0;

        goto label1;

     label2:
        $r4 = new java.io.EOFException;

        specialinvoke $r4.<java.io.EOFException: void <init>()>();

        throw $r4;

     label3:
        return $r2;
    }

    private void toDataOut(java.io.DataOutput) throws java.io.IOException
    {
        com.android.server.RandomBlock r0;
        java.io.DataOutput r1;
        byte[] $r2;

        r0 := @this: com.android.server.RandomBlock;

        r1 := @parameter0: java.io.DataOutput;

        $r2 = r0.<com.android.server.RandomBlock: byte[] block>;

        interfaceinvoke r1.<java.io.DataOutput: void write(byte[])>($r2);

        return;
    }

    private static void truncateIfPossible(java.io.RandomAccessFile)
    {
        java.lang.Throwable $r0;
        java.io.RandomAccessFile r1;

        r1 := @parameter0: java.io.RandomAccessFile;

     label1:
        virtualinvoke r1.<java.io.RandomAccessFile: void setLength(long)>(512L);

     label2:
        goto label4;

     label3:
        $r0 := @caughtexception;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    void toFile(java.lang.String, boolean) throws java.io.IOException
    {
        com.android.server.RandomBlock r0;
        boolean z0;
        java.io.RandomAccessFile r1, r4;
        java.lang.Throwable $r2;
        java.lang.String r3, r5;

        r0 := @this: com.android.server.RandomBlock;

        r3 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r4 = null;

     label01:
        r1 = new java.io.RandomAccessFile;

     label02:
        if z0 == 0 goto label03;

        r5 = "rws";

        goto label04;

     label03:
        r5 = "rw";

     label04:
        r4 = null;

     label05:
        specialinvoke r1.<java.io.RandomAccessFile: void <init>(java.lang.String,java.lang.String)>(r3, r5);

     label06:
        r4 = r1;

     label07:
        specialinvoke r0.<com.android.server.RandomBlock: void toDataOut(java.io.DataOutput)>(r1);

     label08:
        r4 = r1;

     label09:
        staticinvoke <com.android.server.RandomBlock: void truncateIfPossible(java.io.RandomAccessFile)>(r1);

     label10:
        staticinvoke <com.android.server.RandomBlock: void close(java.io.Closeable)>(r1);

        return;

     label11:
        $r2 := @caughtexception;

        staticinvoke <com.android.server.RandomBlock: void close(java.io.Closeable)>(r4);

        throw $r2;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
    }

    public static void <clinit>()
    {
        <com.android.server.RandomBlock: java.lang.String TAG> = "RandomBlock";

        <com.android.server.RandomBlock: boolean DEBUG> = 0;

        <com.android.server.RandomBlock: int BLOCK_SIZE> = 512;

        return;
    }
}
