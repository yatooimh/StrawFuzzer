public class com.android.server.RuntimeService extends android.os.Binder
{
    private static final java.lang.String TAG;
    private final android.content.Context mContext;

    public void <init>(android.content.Context)
    {
        com.android.server.RuntimeService r0;
        android.content.Context r1;

        r0 := @this: com.android.server.RuntimeService;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.os.Binder: void <init>()>();

        r0.<com.android.server.RuntimeService: android.content.Context mContext> = r1;

        return;
    }

    private static void addDistroVersionDebugInfo(java.lang.String, java.lang.String, libcore.util.DebugInfo)
    {
        libcore.util.DebugInfo r0, r1, r50, r52;
        boolean $z0;
        int $i0, $i1, $i2, $i3;
        byte[] $r7;
        java.lang.String $r13, $r16, $r17, $r20, $r27, $r29, $r34, $r35, $r40, r41, r42, r45, r48;
        java.lang.Throwable $r22;
        java.lang.Class $r28;
        com.android.timezone.distro.DistroVersion r46;
        java.io.File r58;
        java.lang.StringBuilder r59, r60, r61, r62, r63, r64, r65, r66;
        java.lang.Exception r67;

        r41 := @parameter0: java.lang.String;

        r42 := @parameter1: java.lang.String;

        r0 := @parameter2: libcore.util.DebugInfo;

        r58 = new java.io.File;

        specialinvoke r58.<java.io.File: void <init>(java.lang.String)>(r41);

        r59 = new java.lang.StringBuilder;

        specialinvoke r59.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r42);

        virtualinvoke r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("status");

        r45 = virtualinvoke r59.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = virtualinvoke r58.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label4;

     label1:
        $i0 = <com.android.timezone.distro.DistroVersion: int DISTRO_VERSION_FILE_LENGTH>;

        $r7 = staticinvoke <com.android.timezone.distro.FileUtils: byte[] readBytes(java.io.File,int)>(r58, $i0);

        r46 = staticinvoke <com.android.timezone.distro.DistroVersion: com.android.timezone.distro.DistroVersion fromBytes(byte[])>($r7);

        r60 = new java.lang.StringBuilder;

        specialinvoke r60.<java.lang.StringBuilder: void <init>()>();

        $i1 = r46.<com.android.timezone.distro.DistroVersion: int formatMajorVersion>;

        virtualinvoke r60.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $i2 = r46.<com.android.timezone.distro.DistroVersion: int formatMinorVersion>;

        virtualinvoke r60.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        r48 = virtualinvoke r60.<java.lang.StringBuilder: java.lang.String toString()>();

        r1 = virtualinvoke r0.<libcore.util.DebugInfo: libcore.util.DebugInfo addStringEntry(java.lang.String,java.lang.String)>(r45, "OK");

        r61 = new java.lang.StringBuilder;

        specialinvoke r61.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r42);

        virtualinvoke r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("formatVersion");

        $r13 = virtualinvoke r61.<java.lang.StringBuilder: java.lang.String toString()>();

        r50 = virtualinvoke r1.<libcore.util.DebugInfo: libcore.util.DebugInfo addStringEntry(java.lang.String,java.lang.String)>($r13, r48);

        r62 = new java.lang.StringBuilder;

        specialinvoke r62.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r42);

        virtualinvoke r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("rulesVersion");

        $r16 = virtualinvoke r62.<java.lang.StringBuilder: java.lang.String toString()>();

        $r17 = r46.<com.android.timezone.distro.DistroVersion: java.lang.String rulesVersion>;

        r52 = virtualinvoke r50.<libcore.util.DebugInfo: libcore.util.DebugInfo addStringEntry(java.lang.String,java.lang.String)>($r16, $r17);

        r63 = new java.lang.StringBuilder;

        specialinvoke r63.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r42);

        virtualinvoke r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("revision");

        $r20 = virtualinvoke r63.<java.lang.StringBuilder: java.lang.String toString()>();

        $i3 = r46.<com.android.timezone.distro.DistroVersion: int revision>;

        virtualinvoke r52.<libcore.util.DebugInfo: libcore.util.DebugInfo addStringEntry(java.lang.String,int)>($r20, $i3);

     label2:
        goto label5;

     label3:
        $r22 := @caughtexception;

        virtualinvoke r0.<libcore.util.DebugInfo: libcore.util.DebugInfo addStringEntry(java.lang.String,java.lang.String)>(r45, "ERROR");

        r64 = new java.lang.StringBuilder;

        specialinvoke r64.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r42);

        virtualinvoke r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("exception_class");

        $r27 = virtualinvoke r64.<java.lang.StringBuilder: java.lang.String toString()>();

        $r28 = virtualinvoke $r22.<java.lang.Object: java.lang.Class getClass()>();

        $r29 = virtualinvoke $r28.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r0.<libcore.util.DebugInfo: libcore.util.DebugInfo addStringEntry(java.lang.String,java.lang.String)>($r27, $r29);

        r65 = new java.lang.StringBuilder;

        specialinvoke r65.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r42);

        virtualinvoke r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("exception_msg");

        $r34 = virtualinvoke r65.<java.lang.StringBuilder: java.lang.String toString()>();

        r67 = (java.lang.Exception) $r22;

        $r35 = virtualinvoke r67.<java.lang.Exception: java.lang.String getMessage()>();

        virtualinvoke r0.<libcore.util.DebugInfo: libcore.util.DebugInfo addStringEntry(java.lang.String,java.lang.String)>($r34, $r35);

        r66 = new java.lang.StringBuilder;

        specialinvoke r66.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error reading ");

        virtualinvoke r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r58);

        $r40 = virtualinvoke r66.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.RuntimeService: void logMessage(java.lang.String,java.lang.Throwable)>($r40, $r22);

        goto label5;

     label4:
        virtualinvoke r0.<libcore.util.DebugInfo: libcore.util.DebugInfo addStringEntry(java.lang.String,java.lang.String)>(r45, "NOT_FOUND");

     label5:
        return;

        catch java.io.IOException from label1 to label2 with label3;
        catch com.android.timezone.distro.DistroException from label1 to label2 with label3;
    }

    private static void addTimeZoneApkDebugInfo(libcore.util.DebugInfo)
    {
        libcore.util.DebugInfo r0;
        java.lang.String $r1;

        r0 := @parameter0: libcore.util.DebugInfo;

        $r1 = staticinvoke <libcore.timezone.TimeZoneDataFiles: java.lang.String getDataTimeZoneFile(java.lang.String)>("distro_version");

        staticinvoke <com.android.server.RuntimeService: void addDistroVersionDebugInfo(java.lang.String,java.lang.String,libcore.util.DebugInfo)>($r1, "core_library.timezone.source.data_", r0);

        return;
    }

    private static boolean hasOption(java.lang.String[], java.lang.String)
    {
        java.lang.String[] r0;
        java.lang.String r1, $r2;
        int i0, i1;
        boolean $z0;

        r0 := @parameter0: java.lang.String[];

        r1 := @parameter1: java.lang.String;

        i0 = lengthof r0;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r2 = r0[i1];

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    private static void logMessage(java.lang.String, java.lang.Throwable)
    {
        java.lang.String r0;
        java.lang.Throwable r1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Throwable;

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String,java.lang.Throwable)>("RuntimeService", r0, r1);

        return;
    }

    private static void reportTimeZoneInfo(libcore.util.DebugInfo, java.io.PrintWriter)
    {
        java.io.PrintWriter r0;
        libcore.util.DebugInfo$DebugEntry r1;
        java.util.List $r2;
        boolean $z0;
        java.lang.Object $r3;
        java.lang.String $r4, $r5;
        libcore.util.DebugInfo r6;
        java.util.Iterator r7;

        r6 := @parameter0: libcore.util.DebugInfo;

        r0 := @parameter1: java.io.PrintWriter;

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("Core Library Debug Info: ");

        $r2 = virtualinvoke r6.<libcore.util.DebugInfo: java.util.List getDebugEntries()>();

        r7 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        r1 = (libcore.util.DebugInfo$DebugEntry) $r3;

        $r4 = virtualinvoke r1.<libcore.util.DebugInfo$DebugEntry: java.lang.String getKey()>();

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>($r4);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(": \"");

        $r5 = virtualinvoke r1.<libcore.util.DebugInfo$DebugEntry: java.lang.String getStringValue()>();

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>($r5);

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("\"");

        goto label1;

     label2:
        return;
    }

    private static void reportTimeZoneInfoProto(libcore.util.DebugInfo, android.util.proto.ProtoOutputStream)
    {
        android.util.proto.ProtoOutputStream r0;
        java.util.Iterator r1;
        long l0;
        java.util.List $r2;
        boolean $z0;
        java.lang.Object $r3;
        java.lang.String $r4, $r5;
        libcore.util.DebugInfo r6;
        libcore.util.DebugInfo$DebugEntry r7;

        r6 := @parameter0: libcore.util.DebugInfo;

        r0 := @parameter1: android.util.proto.ProtoOutputStream;

        $r2 = virtualinvoke r6.<libcore.util.DebugInfo: java.util.List getDebugEntries()>();

        r1 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r7 = (libcore.util.DebugInfo$DebugEntry) $r3;

        l0 = virtualinvoke r0.<android.util.proto.ProtoOutputStream: long start(long)>(2246267895809L);

        $r4 = virtualinvoke r7.<libcore.util.DebugInfo$DebugEntry: java.lang.String getKey()>();

        virtualinvoke r0.<android.util.proto.ProtoOutputStream: void write(long,java.lang.String)>(1138166333441L, $r4);

        $r5 = virtualinvoke r7.<libcore.util.DebugInfo$DebugEntry: java.lang.String getStringValue()>();

        virtualinvoke r0.<android.util.proto.ProtoOutputStream: void write(long,java.lang.String)>(1138166333442L, $r5);

        virtualinvoke r0.<android.util.proto.ProtoOutputStream: void end(long)>(l0);

        goto label1;

     label2:
        return;
    }

    protected void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.RuntimeService r0;
        java.io.PrintWriter r1;
        boolean z0, $z1;
        libcore.util.DebugInfo r2;
        android.content.Context $r3;
        android.util.proto.ProtoOutputStream $r4, r7;
        java.io.FileDescriptor r5;
        java.lang.String[] r6;

        r0 := @this: com.android.server.RuntimeService;

        r5 := @parameter0: java.io.FileDescriptor;

        r1 := @parameter1: java.io.PrintWriter;

        r6 := @parameter2: java.lang.String[];

        $r3 = r0.<com.android.server.RuntimeService: android.content.Context mContext>;

        $z1 = staticinvoke <com.android.internal.util.DumpUtils: boolean checkDumpAndUsageStatsPermission(android.content.Context,java.lang.String,java.io.PrintWriter)>($r3, "RuntimeService", r1);

        if $z1 != 0 goto label1;

        return;

     label1:
        z0 = staticinvoke <com.android.server.RuntimeService: boolean hasOption(java.lang.String[],java.lang.String)>(r6, "--proto");

        r2 = staticinvoke <libcore.util.CoreLibraryDebug: libcore.util.DebugInfo getDebugInfo()>();

        staticinvoke <com.android.server.RuntimeService: void addTimeZoneApkDebugInfo(libcore.util.DebugInfo)>(r2);

        if z0 == 0 goto label2;

        $r4 = new android.util.proto.ProtoOutputStream;

        specialinvoke $r4.<android.util.proto.ProtoOutputStream: void <init>(java.io.FileDescriptor)>(r5);

        r7 = $r4;

        staticinvoke <com.android.server.RuntimeService: void reportTimeZoneInfoProto(libcore.util.DebugInfo,android.util.proto.ProtoOutputStream)>(r2, $r4);

        goto label3;

     label2:
        staticinvoke <com.android.server.RuntimeService: void reportTimeZoneInfo(libcore.util.DebugInfo,java.io.PrintWriter)>(r2, r1);

        r7 = null;

     label3:
        if z0 == 0 goto label4;

        virtualinvoke r7.<android.util.proto.ProtoOutputStream: void flush()>();

     label4:
        return;
    }

    public static void <clinit>()
    {
        <com.android.server.RuntimeService: java.lang.String TAG> = "RuntimeService";

        return;
    }
}
