final class com.android.server.SensorPrivacyService$DeathRecipient extends java.lang.Object implements android.os.IBinder$DeathRecipient
{
    private android.hardware.ISensorPrivacyListener mListener;
    final com.android.server.SensorPrivacyService this$0;

    void <init>(com.android.server.SensorPrivacyService, android.hardware.ISensorPrivacyListener)
    {
        com.android.server.SensorPrivacyService$DeathRecipient r0;
        android.hardware.ISensorPrivacyListener r1;
        android.os.IBinder $r2;
        android.os.RemoteException $r3;
        com.android.server.SensorPrivacyService r4;

        r0 := @this: com.android.server.SensorPrivacyService$DeathRecipient;

        r4 := @parameter0: com.android.server.SensorPrivacyService;

        r1 := @parameter1: android.hardware.ISensorPrivacyListener;

        r0.<com.android.server.SensorPrivacyService$DeathRecipient: com.android.server.SensorPrivacyService this$0> = r4;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.SensorPrivacyService$DeathRecipient: android.hardware.ISensorPrivacyListener mListener> = r1;

     label1:
        $r2 = interfaceinvoke r1.<android.hardware.ISensorPrivacyListener: android.os.IBinder asBinder()>();

        interfaceinvoke $r2.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>(r0, 0);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void binderDied()
    {
        com.android.server.SensorPrivacyService$DeathRecipient r0;
        com.android.server.SensorPrivacyService $r1;
        com.android.server.SensorPrivacyService$SensorPrivacyServiceImpl $r2;
        android.hardware.ISensorPrivacyListener $r3;

        r0 := @this: com.android.server.SensorPrivacyService$DeathRecipient;

        $r1 = r0.<com.android.server.SensorPrivacyService$DeathRecipient: com.android.server.SensorPrivacyService this$0>;

        $r2 = staticinvoke <com.android.server.SensorPrivacyService: com.android.server.SensorPrivacyService$SensorPrivacyServiceImpl access$000(com.android.server.SensorPrivacyService)>($r1);

        $r3 = r0.<com.android.server.SensorPrivacyService$DeathRecipient: android.hardware.ISensorPrivacyListener mListener>;

        virtualinvoke $r2.<com.android.server.SensorPrivacyService$SensorPrivacyServiceImpl: void removeSensorPrivacyListener(android.hardware.ISensorPrivacyListener)>($r3);

        return;
    }

    public void destroy()
    {
        com.android.server.SensorPrivacyService$DeathRecipient r0;
        android.hardware.ISensorPrivacyListener $r2;
        android.os.IBinder $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.SensorPrivacyService$DeathRecipient;

     label1:
        $r2 = r0.<com.android.server.SensorPrivacyService$DeathRecipient: android.hardware.ISensorPrivacyListener mListener>;

        $r3 = interfaceinvoke $r2.<android.hardware.ISensorPrivacyListener: android.os.IBinder asBinder()>();

        interfaceinvoke $r3.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>(r0, 0);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        return;

        catch java.util.NoSuchElementException from label1 to label2 with label3;
    }
}
