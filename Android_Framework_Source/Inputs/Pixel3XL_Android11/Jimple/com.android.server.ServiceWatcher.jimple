public class com.android.server.ServiceWatcher extends java.lang.Object implements android.content.ServiceConnection
{
    private static final long BLOCKING_BINDER_TIMEOUT_MS;
    private static final boolean D;
    private static final java.lang.String EXTRA_SERVICE_IS_MULTIUSER;
    private static final java.lang.String EXTRA_SERVICE_VERSION;
    private static final java.lang.String TAG;
    private volatile android.os.IBinder mBinder;
    private final android.content.Context mContext;
    private int mCurrentUserId;
    private final android.os.Handler mHandler;
    private final android.content.Intent mIntent;
    private final com.android.server.ServiceWatcher$BinderRunner mOnBind;
    private final java.lang.Runnable mOnUnbind;
    private volatile com.android.server.ServiceWatcher$ServiceInfo mServiceInfo;

    static void <clinit>()
    {
        boolean $z0;

        <com.android.server.ServiceWatcher: java.lang.String TAG> = "ServiceWatcher";

        <com.android.server.ServiceWatcher: java.lang.String EXTRA_SERVICE_VERSION> = "serviceVersion";

        <com.android.server.ServiceWatcher: java.lang.String EXTRA_SERVICE_IS_MULTIUSER> = "serviceIsMultiuser";

        <com.android.server.ServiceWatcher: long BLOCKING_BINDER_TIMEOUT_MS> = 30000L;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("ServiceWatcher", 3);

        <com.android.server.ServiceWatcher: boolean D> = $z0;

        return;
    }

    public void <init>(android.content.Context, android.os.Handler, java.lang.String, com.android.server.ServiceWatcher$BinderRunner, java.lang.Runnable, int, int)
    {
        com.android.server.ServiceWatcher r0;
        android.os.Handler r1, $r5;
        java.lang.String r2, $r8, $r11;
        com.android.server.ServiceWatcher$BinderRunner r3;
        java.lang.Runnable r4;
        int i0, i1;
        android.content.Intent $r7, $r10;
        boolean $z0;
        com.android.server.ServiceWatcher$ServiceInfo $r9;
        android.content.Context r13;
        android.content.res.Resources r14;

        r0 := @this: com.android.server.ServiceWatcher;

        r13 := @parameter0: android.content.Context;

        r1 := @parameter1: android.os.Handler;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: com.android.server.ServiceWatcher$BinderRunner;

        r4 := @parameter4: java.lang.Runnable;

        i0 := @parameter5: int;

        i1 := @parameter6: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.ServiceWatcher: android.content.Context mContext> = r13;

        $r5 = staticinvoke <com.android.server.FgThread: android.os.Handler getHandler()>();

        r0.<com.android.server.ServiceWatcher: android.os.Handler mHandler> = $r5;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r2);

        $r7 = new android.content.Intent;

        $r8 = (java.lang.String) r2;

        specialinvoke $r7.<android.content.Intent: void <init>(java.lang.String)>($r8);

        r0.<com.android.server.ServiceWatcher: android.content.Intent mIntent> = $r7;

        r14 = virtualinvoke r13.<android.content.Context: android.content.res.Resources getResources()>();

        $z0 = virtualinvoke r14.<android.content.res.Resources: boolean getBoolean(int)>(i0);

        if $z0 != 0 goto label1;

        $r10 = r0.<com.android.server.ServiceWatcher: android.content.Intent mIntent>;

        $r11 = virtualinvoke r14.<android.content.res.Resources: java.lang.String getString(int)>(i1);

        virtualinvoke $r10.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>($r11);

     label1:
        r0.<com.android.server.ServiceWatcher: com.android.server.ServiceWatcher$BinderRunner mOnBind> = r3;

        r0.<com.android.server.ServiceWatcher: java.lang.Runnable mOnUnbind> = r4;

        r0.<com.android.server.ServiceWatcher: int mCurrentUserId> = -10000;

        $r9 = <com.android.server.ServiceWatcher$ServiceInfo: com.android.server.ServiceWatcher$ServiceInfo NONE>;

        r0.<com.android.server.ServiceWatcher: com.android.server.ServiceWatcher$ServiceInfo mServiceInfo> = $r9;

        r0.<com.android.server.ServiceWatcher: android.os.IBinder mBinder> = null;

        return;
    }

    private java.lang.String getLogPrefix()
    {
        com.android.server.ServiceWatcher r0;
        java.lang.StringBuilder $r2;
        android.content.Intent $r4;
        java.lang.String $r5, $r8;

        r0 := @this: com.android.server.ServiceWatcher;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r4 = r0.<com.android.server.ServiceWatcher: android.content.Intent mIntent>;

        $r5 = virtualinvoke $r4.<android.content.Intent: java.lang.String getAction()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r8 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    private void onBestServiceChanged(boolean)
    {
        com.android.server.ServiceWatcher r0;
        boolean z0, $z1, z2, $z3;
        java.util.Iterator r1;
        android.os.Looper $r3, $r5;
        android.os.Handler $r4;
        android.content.Context $r6;
        android.content.pm.PackageManager $r7;
        int $i0, $i1, $i2;
        android.content.Intent $r8;
        com.android.server.ServiceWatcher$ServiceInfo $r9, $r10, r14, r15;
        java.lang.Object $r11;
        android.content.pm.ResolveInfo $r12;
        java.util.List r13;

        r0 := @this: com.android.server.ServiceWatcher;

        z0 := @parameter0: boolean;

        $r3 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        $r4 = r0.<com.android.server.ServiceWatcher: android.os.Handler mHandler>;

        $r5 = virtualinvoke $r4.<android.os.Handler: android.os.Looper getLooper()>();

        if $r3 != $r5 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        staticinvoke <com.android.internal.util.Preconditions: void checkState(boolean)>(z2);

        $r6 = r0.<com.android.server.ServiceWatcher: android.content.Context mContext>;

        $r7 = virtualinvoke $r6.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r8 = r0.<com.android.server.ServiceWatcher: android.content.Intent mIntent>;

        $i0 = r0.<com.android.server.ServiceWatcher: int mCurrentUserId>;

        r13 = virtualinvoke $r7.<android.content.pm.PackageManager: java.util.List queryIntentServicesAsUser(android.content.Intent,int,int)>($r8, 269484160, $i0);

        r14 = <com.android.server.ServiceWatcher$ServiceInfo: com.android.server.ServiceWatcher$ServiceInfo NONE>;

        r1 = interfaceinvoke r13.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z3 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label5;

        $r10 = new com.android.server.ServiceWatcher$ServiceInfo;

        $r11 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r12 = (android.content.pm.ResolveInfo) $r11;

        $i1 = r0.<com.android.server.ServiceWatcher: int mCurrentUserId>;

        specialinvoke $r10.<com.android.server.ServiceWatcher$ServiceInfo: void <init>(android.content.pm.ResolveInfo,int)>($r12, $i1);

        r15 = r14;

        $i2 = virtualinvoke $r10.<com.android.server.ServiceWatcher$ServiceInfo: int compareTo(com.android.server.ServiceWatcher$ServiceInfo)>(r14);

        if $i2 <= 0 goto label4;

        r15 = $r10;

     label4:
        r14 = r15;

        goto label3;

     label5:
        if z0 != 0 goto label6;

        $r9 = r0.<com.android.server.ServiceWatcher: com.android.server.ServiceWatcher$ServiceInfo mServiceInfo>;

        $z1 = virtualinvoke r14.<com.android.server.ServiceWatcher$ServiceInfo: boolean equals(java.lang.Object)>($r9);

        if $z1 != 0 goto label7;

     label6:
        specialinvoke r0.<com.android.server.ServiceWatcher: void rebind(com.android.server.ServiceWatcher$ServiceInfo)>(r14);

     label7:
        return;
    }

    private void rebind(com.android.server.ServiceWatcher$ServiceInfo)
    {
        com.android.server.ServiceWatcher r0;
        android.os.Looper r1, r36;
        android.os.Handler $r2, $r13;
        com.android.server.ServiceWatcher$ServiceInfo $r3, $r4, $r5, $r9, $r11, $r19, $r23, $r25, $r32, r35, $r38, $r39;
        boolean $z1, $z2, $z4, z5, $z6, z7;
        android.content.ComponentName $r6, $r10, $r24;
        android.content.Intent $r7, $r8, $r28, r41;
        int $i0;
        android.content.Context $r12, $r22;
        android.os.UserHandle $r14;
        java.lang.StringBuilder $r15, $r26;
        java.lang.String $r16, $r21, $r29, $r34;

        r0 := @this: com.android.server.ServiceWatcher;

        r35 := @parameter0: com.android.server.ServiceWatcher$ServiceInfo;

        r36 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        $r2 = r0.<com.android.server.ServiceWatcher: android.os.Handler mHandler>;

        r1 = virtualinvoke $r2.<android.os.Handler: android.os.Looper getLooper()>();

        if r36 != r1 goto label1;

        z5 = 1;

        goto label2;

     label1:
        z5 = 0;

     label2:
        staticinvoke <com.android.internal.util.Preconditions: void checkState(boolean)>(z5);

        $r4 = r0.<com.android.server.ServiceWatcher: com.android.server.ServiceWatcher$ServiceInfo mServiceInfo>;

        $r3 = <com.android.server.ServiceWatcher$ServiceInfo: com.android.server.ServiceWatcher$ServiceInfo NONE>;

        $z1 = virtualinvoke $r4.<com.android.server.ServiceWatcher$ServiceInfo: boolean equals(java.lang.Object)>($r3);

        if $z1 != 0 goto label4;

        $z4 = <com.android.server.ServiceWatcher: boolean D>;

        if $z4 == 0 goto label3;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r28 = r0.<com.android.server.ServiceWatcher: android.content.Intent mIntent>;

        $r29 = virtualinvoke $r28.<android.content.Intent: java.lang.String getAction()>();

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] unbinding from ");

        $r32 = r0.<com.android.server.ServiceWatcher: com.android.server.ServiceWatcher$ServiceInfo mServiceInfo>;

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r32);

        $r34 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ServiceWatcher", $r34);

     label3:
        $r22 = r0.<com.android.server.ServiceWatcher: android.content.Context mContext>;

        virtualinvoke $r22.<android.content.Context: void unbindService(android.content.ServiceConnection)>(r0);

        $r23 = r0.<com.android.server.ServiceWatcher: com.android.server.ServiceWatcher$ServiceInfo mServiceInfo>;

        $r24 = $r23.<com.android.server.ServiceWatcher$ServiceInfo: android.content.ComponentName component>;

        virtualinvoke r0.<com.android.server.ServiceWatcher: void onServiceDisconnected(android.content.ComponentName)>($r24);

        $r25 = <com.android.server.ServiceWatcher$ServiceInfo: com.android.server.ServiceWatcher$ServiceInfo NONE>;

        r0.<com.android.server.ServiceWatcher: com.android.server.ServiceWatcher$ServiceInfo mServiceInfo> = $r25;

     label4:
        r0.<com.android.server.ServiceWatcher: com.android.server.ServiceWatcher$ServiceInfo mServiceInfo> = r35;

        $r38 = r0.<com.android.server.ServiceWatcher: com.android.server.ServiceWatcher$ServiceInfo mServiceInfo>;

        $r39 = <com.android.server.ServiceWatcher$ServiceInfo: com.android.server.ServiceWatcher$ServiceInfo NONE>;

        $z6 = virtualinvoke $r38.<com.android.server.ServiceWatcher$ServiceInfo: boolean equals(java.lang.Object)>($r39);

        if $z6 == 0 goto label5;

        return;

     label5:
        $r5 = r0.<com.android.server.ServiceWatcher: com.android.server.ServiceWatcher$ServiceInfo mServiceInfo>;

        $r6 = $r5.<com.android.server.ServiceWatcher$ServiceInfo: android.content.ComponentName component>;

        if $r6 == null goto label6;

        z7 = 1;

        goto label7;

     label6:
        z7 = 0;

     label7:
        staticinvoke <com.android.internal.util.Preconditions: void checkState(boolean)>(z7);

        $z2 = <com.android.server.ServiceWatcher: boolean D>;

        if $z2 == 0 goto label8;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = specialinvoke r0.<com.android.server.ServiceWatcher: java.lang.String getLogPrefix()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" binding to ");

        $r19 = r0.<com.android.server.ServiceWatcher: com.android.server.ServiceWatcher$ServiceInfo mServiceInfo>;

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19);

        $r21 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ServiceWatcher", $r21);

     label8:
        $r7 = new android.content.Intent;

        $r8 = r0.<com.android.server.ServiceWatcher: android.content.Intent mIntent>;

        specialinvoke $r7.<android.content.Intent: void <init>(android.content.Intent)>($r8);

        $r9 = r0.<com.android.server.ServiceWatcher: com.android.server.ServiceWatcher$ServiceInfo mServiceInfo>;

        $r10 = $r9.<com.android.server.ServiceWatcher$ServiceInfo: android.content.ComponentName component>;

        r41 = virtualinvoke $r7.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>($r10);

        $r12 = r0.<com.android.server.ServiceWatcher: android.content.Context mContext>;

        $r13 = r0.<com.android.server.ServiceWatcher: android.os.Handler mHandler>;

        $r11 = r0.<com.android.server.ServiceWatcher: com.android.server.ServiceWatcher$ServiceInfo mServiceInfo>;

        $i0 = $r11.<com.android.server.ServiceWatcher$ServiceInfo: int userId>;

        $r14 = staticinvoke <android.os.UserHandle: android.os.UserHandle of(int)>($i0);

        virtualinvoke $r12.<android.content.Context: boolean bindServiceAsUser(android.content.Intent,android.content.ServiceConnection,int,android.os.Handler,android.os.UserHandle)>(r41, r0, 1073741829, $r13, $r14);

        return;
    }

    private java.lang.Object runOnHandlerBlocking(java.util.concurrent.Callable) throws java.lang.InterruptedException, java.util.concurrent.TimeoutException
    {
        com.android.server.ServiceWatcher r0;
        android.os.Looper $r1, $r3;
        android.os.Handler $r2, $r5;
        java.util.concurrent.FutureTask $r4;
        java.util.concurrent.TimeUnit $r6;
        java.lang.Exception $r7;
        java.lang.IllegalStateException $r8, $r10;
        java.lang.Throwable $r9;
        java.util.concurrent.Callable r11;
        java.lang.Object r12, r15;

        r0 := @this: com.android.server.ServiceWatcher;

        r11 := @parameter0: java.util.concurrent.Callable;

        $r1 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        $r2 = r0.<com.android.server.ServiceWatcher: android.os.Handler mHandler>;

        $r3 = virtualinvoke $r2.<android.os.Handler: android.os.Looper getLooper()>();

        if $r1 != $r3 goto label4;

     label1:
        r12 = interfaceinvoke r11.<java.util.concurrent.Callable: java.lang.Object call()>();

     label2:
        return r12;

     label3:
        $r7 := @caughtexception;

        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>($r7);

        throw $r8;

     label4:
        $r4 = new java.util.concurrent.FutureTask;

        specialinvoke $r4.<java.util.concurrent.FutureTask: void <init>(java.util.concurrent.Callable)>(r11);

        $r5 = r0.<com.android.server.ServiceWatcher: android.os.Handler mHandler>;

        virtualinvoke $r5.<android.os.Handler: boolean post(java.lang.Runnable)>($r4);

     label5:
        $r6 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        r15 = virtualinvoke $r4.<java.util.concurrent.FutureTask: java.lang.Object get(long,java.util.concurrent.TimeUnit)>(30000L, $r6);

     label6:
        return r15;

     label7:
        $r9 := @caughtexception;

        $r10 = new java.lang.IllegalStateException;

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>($r9);

        throw $r10;

        catch java.lang.Exception from label1 to label2 with label3;
        catch java.util.concurrent.ExecutionException from label5 to label6 with label7;
    }

    public void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.ServiceWatcher r0;
        java.io.PrintWriter r1;
        java.lang.String[] r2;
        java.lang.StringBuilder $r3, $r8;
        com.android.server.ServiceWatcher$ServiceInfo $r5;
        java.lang.String $r7, $r12;
        android.os.IBinder $r10;
        java.io.FileDescriptor r13;
        boolean z0;

        r0 := @this: com.android.server.ServiceWatcher;

        r13 := @parameter0: java.io.FileDescriptor;

        r1 := @parameter1: java.io.PrintWriter;

        r2 := @parameter2: java.lang.String[];

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("service=");

        $r5 = r0.<com.android.server.ServiceWatcher: com.android.server.ServiceWatcher$ServiceInfo mServiceInfo>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r7);

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("connected=");

        $r10 = r0.<com.android.server.ServiceWatcher: android.os.IBinder mBinder>;

        if $r10 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r12);

        return;
    }

    public com.android.server.ServiceWatcher$ServiceInfo getBoundService()
    {
        com.android.server.ServiceWatcher r0;
        com.android.server.ServiceWatcher$ServiceInfo $r1;

        r0 := @this: com.android.server.ServiceWatcher;

        $r1 = r0.<com.android.server.ServiceWatcher: com.android.server.ServiceWatcher$ServiceInfo mServiceInfo>;

        return $r1;
    }

    public void lambda$register$0$ServiceWatcher()
    {
        com.android.server.ServiceWatcher r0;

        r0 := @this: com.android.server.ServiceWatcher;

        specialinvoke r0.<com.android.server.ServiceWatcher: void onBestServiceChanged(boolean)>(0);

        return;
    }

    public void lambda$runOnBinder$1$ServiceWatcher(com.android.server.ServiceWatcher$BinderRunner)
    {
        com.android.server.ServiceWatcher r0;
        android.os.IBinder $r2, $r3;
        java.lang.Exception $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6, $r11;
        com.android.server.ServiceWatcher$ServiceInfo $r9;
        com.android.server.ServiceWatcher$BinderRunner r12;

        r0 := @this: com.android.server.ServiceWatcher;

        r12 := @parameter0: com.android.server.ServiceWatcher$BinderRunner;

        $r2 = r0.<com.android.server.ServiceWatcher: android.os.IBinder mBinder>;

        if $r2 != null goto label1;

        return;

     label1:
        $r3 = r0.<com.android.server.ServiceWatcher: android.os.IBinder mBinder>;

        interfaceinvoke r12.<com.android.server.ServiceWatcher$BinderRunner: void run(android.os.IBinder)>($r3);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = specialinvoke r0.<com.android.server.ServiceWatcher: java.lang.String getLogPrefix()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" exception running on ");

        $r9 = r0.<com.android.server.ServiceWatcher: com.android.server.ServiceWatcher$ServiceInfo mServiceInfo>;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ServiceWatcher", $r11, $r4);

     label4:
        return;

        catch java.lang.RuntimeException from label1 to label2 with label3;
        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.lang.Object lambda$runOnBinderBlocking$2$ServiceWatcher(java.lang.Object, com.android.server.ServiceWatcher$BlockingBinderRunner) throws java.lang.Exception
    {
        com.android.server.ServiceWatcher r0;
        java.lang.Object r1, r14;
        android.os.IBinder $r3, $r4;
        java.lang.Exception $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r7, $r12;
        com.android.server.ServiceWatcher$ServiceInfo $r10;
        com.android.server.ServiceWatcher$BlockingBinderRunner r13;

        r0 := @this: com.android.server.ServiceWatcher;

        r1 := @parameter0: java.lang.Object;

        r13 := @parameter1: com.android.server.ServiceWatcher$BlockingBinderRunner;

        $r3 = r0.<com.android.server.ServiceWatcher: android.os.IBinder mBinder>;

        if $r3 != null goto label1;

        return r1;

     label1:
        $r4 = r0.<com.android.server.ServiceWatcher: android.os.IBinder mBinder>;

        r14 = interfaceinvoke r13.<com.android.server.ServiceWatcher$BlockingBinderRunner: java.lang.Object run(android.os.IBinder)>($r4);

     label2:
        return r14;

     label3:
        $r5 := @caughtexception;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = specialinvoke r0.<com.android.server.ServiceWatcher: java.lang.String getLogPrefix()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" exception running on ");

        $r10 = r0.<com.android.server.ServiceWatcher: com.android.server.ServiceWatcher$ServiceInfo mServiceInfo>;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r12 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ServiceWatcher", $r12, $r5);

        return r1;

        catch java.lang.RuntimeException from label1 to label2 with label3;
        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void onBindingDied(android.content.ComponentName)
    {
        com.android.server.ServiceWatcher r0;
        android.content.ComponentName r1;
        android.os.Looper $r3, $r5;
        android.os.Handler $r4;
        boolean $z0, z1;
        java.lang.StringBuilder $r6;
        java.lang.String $r7, $r10, $r13;

        r0 := @this: com.android.server.ServiceWatcher;

        r1 := @parameter0: android.content.ComponentName;

        $r3 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        $r4 = r0.<com.android.server.ServiceWatcher: android.os.Handler mHandler>;

        $r5 = virtualinvoke $r4.<android.os.Handler: android.os.Looper getLooper()>();

        if $r3 != $r5 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        staticinvoke <com.android.internal.util.Preconditions: void checkState(boolean)>(z1);

        $z0 = <com.android.server.ServiceWatcher: boolean D>;

        if $z0 == 0 goto label3;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = specialinvoke r0.<com.android.server.ServiceWatcher: java.lang.String getLogPrefix()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r10 = virtualinvoke r1.<android.content.ComponentName: java.lang.String toShortString()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" died");

        $r13 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ServiceWatcher", $r13);

     label3:
        specialinvoke r0.<com.android.server.ServiceWatcher: void onBestServiceChanged(boolean)>(1);

        return;
    }

    void onPackageChanged(java.lang.String)
    {
        com.android.server.ServiceWatcher r0;
        java.lang.String r1, r6;
        com.android.server.ServiceWatcher$ServiceInfo $r2, $r4;
        android.content.ComponentName $r3, $r5;
        boolean $z0;

        r0 := @this: com.android.server.ServiceWatcher;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.ServiceWatcher: com.android.server.ServiceWatcher$ServiceInfo mServiceInfo>;

        $r3 = $r2.<com.android.server.ServiceWatcher$ServiceInfo: android.content.ComponentName component>;

        if $r3 == null goto label1;

        $r4 = r0.<com.android.server.ServiceWatcher: com.android.server.ServiceWatcher$ServiceInfo mServiceInfo>;

        $r5 = $r4.<com.android.server.ServiceWatcher$ServiceInfo: android.content.ComponentName component>;

        r6 = virtualinvoke $r5.<android.content.ComponentName: java.lang.String getPackageName()>();

        goto label2;

     label1:
        r6 = null;

     label2:
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        specialinvoke r0.<com.android.server.ServiceWatcher: void onBestServiceChanged(boolean)>($z0);

        return;
    }

    public final void onServiceConnected(android.content.ComponentName, android.os.IBinder)
    {
        com.android.server.ServiceWatcher r0;
        android.os.Looper r1, r21;
        android.os.Handler $r2;
        android.os.IBinder $r3, r20;
        boolean $z1, z2, z3;
        java.lang.StringBuilder $r4, $r12;
        java.lang.String $r5, $r8, $r10, $r13, $r18;
        java.lang.Exception $r11;
        com.android.server.ServiceWatcher$ServiceInfo $r16;
        android.content.ComponentName r19;
        com.android.server.ServiceWatcher$BinderRunner r23;

        r0 := @this: com.android.server.ServiceWatcher;

        r19 := @parameter0: android.content.ComponentName;

        r20 := @parameter1: android.os.IBinder;

        r21 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        $r2 = r0.<com.android.server.ServiceWatcher: android.os.Handler mHandler>;

        r1 = virtualinvoke $r2.<android.os.Handler: android.os.Looper getLooper()>();

        if r21 != r1 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        staticinvoke <com.android.internal.util.Preconditions: void checkState(boolean)>(z2);

        $r3 = r0.<com.android.server.ServiceWatcher: android.os.IBinder mBinder>;

        if $r3 != null goto label3;

        z3 = 1;

        goto label4;

     label3:
        z3 = 0;

     label4:
        staticinvoke <com.android.internal.util.Preconditions: void checkState(boolean)>(z3);

        $z1 = <com.android.server.ServiceWatcher: boolean D>;

        if $z1 == 0 goto label5;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = specialinvoke r0.<com.android.server.ServiceWatcher: java.lang.String getLogPrefix()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" connected to ");

        $r8 = virtualinvoke r19.<android.content.ComponentName: java.lang.String toShortString()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ServiceWatcher", $r10);

     label5:
        r0.<com.android.server.ServiceWatcher: android.os.IBinder mBinder> = r20;

        r23 = r0.<com.android.server.ServiceWatcher: com.android.server.ServiceWatcher$BinderRunner mOnBind>;

        if r23 == null goto label9;

     label6:
        interfaceinvoke r23.<com.android.server.ServiceWatcher$BinderRunner: void run(android.os.IBinder)>(r20);

     label7:
        goto label9;

     label8:
        $r11 := @caughtexception;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = specialinvoke r0.<com.android.server.ServiceWatcher: java.lang.String getLogPrefix()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" exception running on ");

        $r16 = r0.<com.android.server.ServiceWatcher: com.android.server.ServiceWatcher$ServiceInfo mServiceInfo>;

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        $r18 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ServiceWatcher", $r18, $r11);

     label9:
        return;

        catch java.lang.RuntimeException from label6 to label7 with label8;
        catch android.os.RemoteException from label6 to label7 with label8;
    }

    public final void onServiceDisconnected(android.content.ComponentName)
    {
        com.android.server.ServiceWatcher r0;
        android.os.Looper $r2, $r4;
        android.os.Handler $r3;
        android.os.IBinder $r5;
        boolean $z0, z1;
        java.lang.StringBuilder $r6;
        java.lang.String $r7, $r10, $r12;
        android.content.ComponentName r13;
        java.lang.Runnable r14;

        r0 := @this: com.android.server.ServiceWatcher;

        r13 := @parameter0: android.content.ComponentName;

        $r2 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        $r3 = r0.<com.android.server.ServiceWatcher: android.os.Handler mHandler>;

        $r4 = virtualinvoke $r3.<android.os.Handler: android.os.Looper getLooper()>();

        if $r2 != $r4 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        staticinvoke <com.android.internal.util.Preconditions: void checkState(boolean)>(z1);

        $r5 = r0.<com.android.server.ServiceWatcher: android.os.IBinder mBinder>;

        if $r5 != null goto label3;

        return;

     label3:
        $z0 = <com.android.server.ServiceWatcher: boolean D>;

        if $z0 == 0 goto label4;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = specialinvoke r0.<com.android.server.ServiceWatcher: java.lang.String getLogPrefix()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" disconnected from ");

        $r10 = virtualinvoke r13.<android.content.ComponentName: java.lang.String toShortString()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ServiceWatcher", $r12);

     label4:
        r0.<com.android.server.ServiceWatcher: android.os.IBinder mBinder> = null;

        r14 = r0.<com.android.server.ServiceWatcher: java.lang.Runnable mOnUnbind>;

        if r14 == null goto label5;

        interfaceinvoke r14.<java.lang.Runnable: void run()>();

     label5:
        return;
    }

    void onUserSwitched(int)
    {
        com.android.server.ServiceWatcher r0;
        int i0;

        r0 := @this: com.android.server.ServiceWatcher;

        i0 := @parameter0: int;

        r0.<com.android.server.ServiceWatcher: int mCurrentUserId> = i0;

        specialinvoke r0.<com.android.server.ServiceWatcher: void onBestServiceChanged(boolean)>(0);

        return;
    }

    void onUserUnlocked(int)
    {
        com.android.server.ServiceWatcher r0;
        int i0, $i1;

        r0 := @this: com.android.server.ServiceWatcher;

        i0 := @parameter0: int;

        $i1 = r0.<com.android.server.ServiceWatcher: int mCurrentUserId>;

        if i0 != $i1 goto label1;

        specialinvoke r0.<com.android.server.ServiceWatcher: void onBestServiceChanged(boolean)>(0);

     label1:
        return;
    }

    public boolean register()
    {
        com.android.server.ServiceWatcher r0;
        android.content.Context $r2, $r9, $r12;
        android.content.pm.PackageManager $r3;
        android.content.Intent $r4;
        java.util.List $r5;
        boolean $z0;
        com.android.server.ServiceWatcher$1 $r6;
        android.os.Handler $r7, $r13, $r17;
        android.os.UserHandle $r8, $r14;
        android.content.IntentFilter $r10;
        com.android.server.ServiceWatcher$2 $r11;
        int $i0;
        com.android.server._$$Lambda$ServiceWatcher$K66HPJls7ga1t3t859fKACfAgZc $r16;

        r0 := @this: com.android.server.ServiceWatcher;

        $r2 = r0.<com.android.server.ServiceWatcher: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r4 = r0.<com.android.server.ServiceWatcher: android.content.Intent mIntent>;

        $r5 = virtualinvoke $r3.<android.content.pm.PackageManager: java.util.List queryIntentServicesAsUser(android.content.Intent,int,int)>($r4, 1835008, 0);

        $z0 = interfaceinvoke $r5.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r6 = new com.android.server.ServiceWatcher$1;

        specialinvoke $r6.<com.android.server.ServiceWatcher$1: void <init>(com.android.server.ServiceWatcher)>(r0);

        $r9 = r0.<com.android.server.ServiceWatcher: android.content.Context mContext>;

        $r8 = <android.os.UserHandle: android.os.UserHandle ALL>;

        $r7 = r0.<com.android.server.ServiceWatcher: android.os.Handler mHandler>;

        virtualinvoke $r6.<com.android.server.ServiceWatcher$1: void register(android.content.Context,android.os.UserHandle,boolean,android.os.Handler)>($r9, $r8, 1, $r7);

        $r10 = new android.content.IntentFilter;

        specialinvoke $r10.<android.content.IntentFilter: void <init>()>();

        virtualinvoke $r10.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.USER_SWITCHED");

        virtualinvoke $r10.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.USER_UNLOCKED");

        $r12 = r0.<com.android.server.ServiceWatcher: android.content.Context mContext>;

        $r11 = new com.android.server.ServiceWatcher$2;

        specialinvoke $r11.<com.android.server.ServiceWatcher$2: void <init>(com.android.server.ServiceWatcher)>(r0);

        $r14 = <android.os.UserHandle: android.os.UserHandle ALL>;

        $r13 = r0.<com.android.server.ServiceWatcher: android.os.Handler mHandler>;

        virtualinvoke $r12.<android.content.Context: android.content.Intent registerReceiverAsUser(android.content.BroadcastReceiver,android.os.UserHandle,android.content.IntentFilter,java.lang.String,android.os.Handler)>($r11, $r14, $r10, null, $r13);

        $i0 = staticinvoke <android.app.ActivityManager: int getCurrentUser()>();

        r0.<com.android.server.ServiceWatcher: int mCurrentUserId> = $i0;

        $r17 = r0.<com.android.server.ServiceWatcher: android.os.Handler mHandler>;

        $r16 = new com.android.server._$$Lambda$ServiceWatcher$K66HPJls7ga1t3t859fKACfAgZc;

        specialinvoke $r16.<com.android.server._$$Lambda$ServiceWatcher$K66HPJls7ga1t3t859fKACfAgZc: void <init>(com.android.server.ServiceWatcher)>(r0);

        virtualinvoke $r17.<android.os.Handler: boolean post(java.lang.Runnable)>($r16);

        return 1;
    }

    public final void runOnBinder(com.android.server.ServiceWatcher$BinderRunner)
    {
        com.android.server.ServiceWatcher r0;
        com.android.server.ServiceWatcher$BinderRunner r1;
        com.android.server._$$Lambda$ServiceWatcher$gVk2fFkq2_aamIua2kIpukAFtf8 $r2;
        android.os.Handler $r3;

        r0 := @this: com.android.server.ServiceWatcher;

        r1 := @parameter0: com.android.server.ServiceWatcher$BinderRunner;

        $r3 = r0.<com.android.server.ServiceWatcher: android.os.Handler mHandler>;

        $r2 = new com.android.server._$$Lambda$ServiceWatcher$gVk2fFkq2_aamIua2kIpukAFtf8;

        specialinvoke $r2.<com.android.server._$$Lambda$ServiceWatcher$gVk2fFkq2_aamIua2kIpukAFtf8: void <init>(com.android.server.ServiceWatcher,com.android.server.ServiceWatcher$BinderRunner)>(r0, r1);

        virtualinvoke $r3.<android.os.Handler: boolean post(java.lang.Runnable)>($r2);

        return;
    }

    public final java.lang.Object runOnBinderBlocking(com.android.server.ServiceWatcher$BlockingBinderRunner, java.lang.Object)
    {
        com.android.server.ServiceWatcher r0;
        java.lang.Object r1, r5;
        com.android.server._$$Lambda$ServiceWatcher$b1z9OeL_1VpQ_8p47qz7nMNUpsE r2;
        java.lang.Throwable $r3;
        com.android.server.ServiceWatcher$BlockingBinderRunner r4;

        r0 := @this: com.android.server.ServiceWatcher;

        r4 := @parameter0: com.android.server.ServiceWatcher$BlockingBinderRunner;

        r1 := @parameter1: java.lang.Object;

     label1:
        r2 = new com.android.server._$$Lambda$ServiceWatcher$b1z9OeL_1VpQ_8p47qz7nMNUpsE;

        specialinvoke r2.<com.android.server._$$Lambda$ServiceWatcher$b1z9OeL_1VpQ_8p47qz7nMNUpsE: void <init>(com.android.server.ServiceWatcher,java.lang.Object,com.android.server.ServiceWatcher$BlockingBinderRunner)>(r0, r1, r4);

        r5 = specialinvoke r0.<com.android.server.ServiceWatcher: java.lang.Object runOnHandlerBlocking(java.util.concurrent.Callable)>(r2);

     label2:
        return r5;

     label3:
        $r3 := @caughtexception;

        return r1;

        catch java.lang.InterruptedException from label1 to label2 with label3;
        catch java.util.concurrent.TimeoutException from label1 to label2 with label3;
    }

    public java.lang.String toString()
    {
        com.android.server.ServiceWatcher r0;
        com.android.server.ServiceWatcher$ServiceInfo $r1;
        java.lang.String $r2;

        r0 := @this: com.android.server.ServiceWatcher;

        $r1 = r0.<com.android.server.ServiceWatcher: com.android.server.ServiceWatcher$ServiceInfo mServiceInfo>;

        $r2 = virtualinvoke $r1.<com.android.server.ServiceWatcher$ServiceInfo: java.lang.String toString()>();

        return $r2;
    }
}
