class com.android.server.StorageManagerService$AppFuseMountScope extends com.android.server.storage.AppFuseBridge$MountScope
{
    private boolean mMounted;
    final com.android.server.StorageManagerService this$0;

    public void <init>(com.android.server.StorageManagerService, int, int)
    {
        com.android.server.StorageManagerService$AppFuseMountScope r0;
        com.android.server.StorageManagerService r1;
        int i0, i1;

        r0 := @this: com.android.server.StorageManagerService$AppFuseMountScope;

        r1 := @parameter0: com.android.server.StorageManagerService;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r0.<com.android.server.StorageManagerService$AppFuseMountScope: com.android.server.StorageManagerService this$0> = r1;

        specialinvoke r0.<com.android.server.storage.AppFuseBridge$MountScope: void <init>(int,int)>(i0, i1);

        r0.<com.android.server.StorageManagerService$AppFuseMountScope: boolean mMounted> = 0;

        return;
    }

    public void close() throws java.lang.Exception
    {
        com.android.server.StorageManagerService$AppFuseMountScope r0;
        boolean $z0;
        com.android.server.StorageManagerService $r1;
        android.os.IVold $r2;
        int $i0, $i1;

        r0 := @this: com.android.server.StorageManagerService$AppFuseMountScope;

        $z0 = r0.<com.android.server.StorageManagerService$AppFuseMountScope: boolean mMounted>;

        if $z0 == 0 goto label1;

        $r1 = r0.<com.android.server.StorageManagerService$AppFuseMountScope: com.android.server.StorageManagerService this$0>;

        $r2 = staticinvoke <com.android.server.StorageManagerService: android.os.IVold access$1600(com.android.server.StorageManagerService)>($r1);

        $i1 = r0.<com.android.server.StorageManagerService$AppFuseMountScope: int uid>;

        $i0 = r0.<com.android.server.StorageManagerService$AppFuseMountScope: int mountId>;

        interfaceinvoke $r2.<android.os.IVold: void unmountAppFuse(int,int)>($i1, $i0);

        r0.<com.android.server.StorageManagerService$AppFuseMountScope: boolean mMounted> = 0;

     label1:
        return;
    }

    public android.os.ParcelFileDescriptor open() throws com.android.server.NativeDaemonConnectorException
    {
        com.android.server.StorageManagerService$AppFuseMountScope r0;
        com.android.server.StorageManagerService $r1;
        android.os.IVold $r2;
        int $i0, $i1;
        android.os.ParcelFileDescriptor $r3;
        java.lang.Exception $r4;
        com.android.server.NativeDaemonConnectorException $r5;
        java.io.FileDescriptor r6;

        r0 := @this: com.android.server.StorageManagerService$AppFuseMountScope;

     label1:
        $r1 = r0.<com.android.server.StorageManagerService$AppFuseMountScope: com.android.server.StorageManagerService this$0>;

        $r2 = staticinvoke <com.android.server.StorageManagerService: android.os.IVold access$1600(com.android.server.StorageManagerService)>($r1);

        $i1 = r0.<com.android.server.StorageManagerService$AppFuseMountScope: int uid>;

        $i0 = r0.<com.android.server.StorageManagerService$AppFuseMountScope: int mountId>;

        r6 = interfaceinvoke $r2.<android.os.IVold: java.io.FileDescriptor mountAppFuse(int,int)>($i1, $i0);

        r0.<com.android.server.StorageManagerService$AppFuseMountScope: boolean mMounted> = 1;

        $r3 = new android.os.ParcelFileDescriptor;

        specialinvoke $r3.<android.os.ParcelFileDescriptor: void <init>(java.io.FileDescriptor)>(r6);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        $r5 = new com.android.server.NativeDaemonConnectorException;

        specialinvoke $r5.<com.android.server.NativeDaemonConnectorException: void <init>(java.lang.String,java.lang.Throwable)>("Failed to mount", $r4);

        throw $r5;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public android.os.ParcelFileDescriptor openFile(int, int, int) throws com.android.server.NativeDaemonConnectorException
    {
        com.android.server.StorageManagerService$AppFuseMountScope r0;
        int i0, i1, i2, $i3;
        android.os.ParcelFileDescriptor $r1;
        com.android.server.StorageManagerService $r2;
        android.os.IVold $r3;
        java.io.FileDescriptor $r4;
        java.lang.Exception $r5;
        com.android.server.NativeDaemonConnectorException $r6;

        r0 := @this: com.android.server.StorageManagerService$AppFuseMountScope;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

     label1:
        $r1 = new android.os.ParcelFileDescriptor;

        $r2 = r0.<com.android.server.StorageManagerService$AppFuseMountScope: com.android.server.StorageManagerService this$0>;

        $r3 = staticinvoke <com.android.server.StorageManagerService: android.os.IVold access$1600(com.android.server.StorageManagerService)>($r2);

        $i3 = r0.<com.android.server.StorageManagerService$AppFuseMountScope: int uid>;

        $r4 = interfaceinvoke $r3.<android.os.IVold: java.io.FileDescriptor openAppFuseFile(int,int,int,int)>($i3, i0, i1, i2);

        specialinvoke $r1.<android.os.ParcelFileDescriptor: void <init>(java.io.FileDescriptor)>($r4);

     label2:
        return $r1;

     label3:
        $r5 := @caughtexception;

        $r6 = new com.android.server.NativeDaemonConnectorException;

        specialinvoke $r6.<com.android.server.NativeDaemonConnectorException: void <init>(java.lang.String,java.lang.Throwable)>("Failed to open", $r5);

        throw $r6;

        catch java.lang.Exception from label1 to label2 with label3;
    }
}
