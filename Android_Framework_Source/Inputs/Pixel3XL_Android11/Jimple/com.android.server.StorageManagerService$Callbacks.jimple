class com.android.server.StorageManagerService$Callbacks extends android.os.Handler
{
    private static final int MSG_DISK_DESTROYED;
    private static final int MSG_DISK_SCANNED;
    private static final int MSG_STORAGE_STATE_CHANGED;
    private static final int MSG_VOLUME_FORGOTTEN;
    private static final int MSG_VOLUME_RECORD_CHANGED;
    private static final int MSG_VOLUME_STATE_CHANGED;
    private final android.os.RemoteCallbackList mCallbacks;

    public void <init>(android.os.Looper)
    {
        com.android.server.StorageManagerService$Callbacks r0;
        android.os.Looper r1;
        android.os.RemoteCallbackList $r2;

        r0 := @this: com.android.server.StorageManagerService$Callbacks;

        r1 := @parameter0: android.os.Looper;

        specialinvoke r0.<android.os.Handler: void <init>(android.os.Looper)>(r1);

        $r2 = new android.os.RemoteCallbackList;

        specialinvoke $r2.<android.os.RemoteCallbackList: void <init>()>();

        r0.<com.android.server.StorageManagerService$Callbacks: android.os.RemoteCallbackList mCallbacks> = $r2;

        return;
    }

    static void access$2900(com.android.server.StorageManagerService$Callbacks, java.lang.String, java.lang.String, java.lang.String)
    {
        com.android.server.StorageManagerService$Callbacks r0;
        java.lang.String r1, r2, r3;

        r0 := @parameter0: com.android.server.StorageManagerService$Callbacks;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        specialinvoke r0.<com.android.server.StorageManagerService$Callbacks: void notifyStorageStateChanged(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3);

        return;
    }

    static void access$3400(com.android.server.StorageManagerService$Callbacks, android.os.storage.DiskInfo)
    {
        com.android.server.StorageManagerService$Callbacks r0;
        android.os.storage.DiskInfo r1;

        r0 := @parameter0: com.android.server.StorageManagerService$Callbacks;

        r1 := @parameter1: android.os.storage.DiskInfo;

        specialinvoke r0.<com.android.server.StorageManagerService$Callbacks: void notifyDiskDestroyed(android.os.storage.DiskInfo)>(r1);

        return;
    }

    static void access$3900(com.android.server.StorageManagerService$Callbacks, android.os.storage.DiskInfo, int)
    {
        com.android.server.StorageManagerService$Callbacks r0;
        android.os.storage.DiskInfo r1;
        int i0;

        r0 := @parameter0: com.android.server.StorageManagerService$Callbacks;

        r1 := @parameter1: android.os.storage.DiskInfo;

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.server.StorageManagerService$Callbacks: void notifyDiskScanned(android.os.storage.DiskInfo,int)>(r1, i0);

        return;
    }

    static void access$4000(com.android.server.StorageManagerService$Callbacks, android.os.storage.VolumeInfo, int, int)
    {
        com.android.server.StorageManagerService$Callbacks r0;
        android.os.storage.VolumeInfo r1;
        int i0, i1;

        r0 := @parameter0: com.android.server.StorageManagerService$Callbacks;

        r1 := @parameter1: android.os.storage.VolumeInfo;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<com.android.server.StorageManagerService$Callbacks: void notifyVolumeStateChanged(android.os.storage.VolumeInfo,int,int)>(r1, i0, i1);

        return;
    }

    static void access$5000(com.android.server.StorageManagerService$Callbacks, android.os.storage.VolumeRecord)
    {
        com.android.server.StorageManagerService$Callbacks r0;
        android.os.storage.VolumeRecord r1;

        r0 := @parameter0: com.android.server.StorageManagerService$Callbacks;

        r1 := @parameter1: android.os.storage.VolumeRecord;

        specialinvoke r0.<com.android.server.StorageManagerService$Callbacks: void notifyVolumeRecordChanged(android.os.storage.VolumeRecord)>(r1);

        return;
    }

    static void access$5100(com.android.server.StorageManagerService$Callbacks, java.lang.String)
    {
        com.android.server.StorageManagerService$Callbacks r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.server.StorageManagerService$Callbacks;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<com.android.server.StorageManagerService$Callbacks: void notifyVolumeForgotten(java.lang.String)>(r1);

        return;
    }

    private void invokeCallback(android.os.storage.IStorageEventListener, int, com.android.internal.os.SomeArgs) throws android.os.RemoteException
    {
        com.android.server.StorageManagerService$Callbacks r0;
        android.os.storage.IStorageEventListener r1;
        int i0, $i1, $i2, $i3;
        com.android.internal.os.SomeArgs r2;
        java.lang.Object $r3, $r5, $r7, $r9, $r11, $r13, $r14, $r15;
        android.os.storage.DiskInfo $r4, $r6;
        java.lang.String $r8, $r16, $r17, $r18;
        android.os.storage.VolumeRecord $r10;
        android.os.storage.VolumeInfo $r12;

        r0 := @this: com.android.server.StorageManagerService$Callbacks;

        r1 := @parameter0: android.os.storage.IStorageEventListener;

        i0 := @parameter1: int;

        r2 := @parameter2: com.android.internal.os.SomeArgs;

        tableswitch(i0)
        {
            case 1: goto label7;
            case 2: goto label6;
            case 3: goto label5;
            case 4: goto label4;
            case 5: goto label3;
            case 6: goto label2;
            default: goto label1;
        };

     label1:
        goto label8;

     label2:
        $r3 = r2.<com.android.internal.os.SomeArgs: java.lang.Object arg1>;

        $r4 = (android.os.storage.DiskInfo) $r3;

        interfaceinvoke r1.<android.os.storage.IStorageEventListener: void onDiskDestroyed(android.os.storage.DiskInfo)>($r4);

        goto label8;

     label3:
        $r5 = r2.<com.android.internal.os.SomeArgs: java.lang.Object arg1>;

        $r6 = (android.os.storage.DiskInfo) $r5;

        $i1 = r2.<com.android.internal.os.SomeArgs: int argi2>;

        interfaceinvoke r1.<android.os.storage.IStorageEventListener: void onDiskScanned(android.os.storage.DiskInfo,int)>($r6, $i1);

        goto label8;

     label4:
        $r7 = r2.<com.android.internal.os.SomeArgs: java.lang.Object arg1>;

        $r8 = (java.lang.String) $r7;

        interfaceinvoke r1.<android.os.storage.IStorageEventListener: void onVolumeForgotten(java.lang.String)>($r8);

        goto label8;

     label5:
        $r9 = r2.<com.android.internal.os.SomeArgs: java.lang.Object arg1>;

        $r10 = (android.os.storage.VolumeRecord) $r9;

        interfaceinvoke r1.<android.os.storage.IStorageEventListener: void onVolumeRecordChanged(android.os.storage.VolumeRecord)>($r10);

        goto label8;

     label6:
        $r11 = r2.<com.android.internal.os.SomeArgs: java.lang.Object arg1>;

        $r12 = (android.os.storage.VolumeInfo) $r11;

        $i3 = r2.<com.android.internal.os.SomeArgs: int argi2>;

        $i2 = r2.<com.android.internal.os.SomeArgs: int argi3>;

        interfaceinvoke r1.<android.os.storage.IStorageEventListener: void onVolumeStateChanged(android.os.storage.VolumeInfo,int,int)>($r12, $i3, $i2);

        goto label8;

     label7:
        $r13 = r2.<com.android.internal.os.SomeArgs: java.lang.Object arg1>;

        $r18 = (java.lang.String) $r13;

        $r14 = r2.<com.android.internal.os.SomeArgs: java.lang.Object arg2>;

        $r17 = (java.lang.String) $r14;

        $r15 = r2.<com.android.internal.os.SomeArgs: java.lang.Object arg3>;

        $r16 = (java.lang.String) $r15;

        interfaceinvoke r1.<android.os.storage.IStorageEventListener: void onStorageStateChanged(java.lang.String,java.lang.String,java.lang.String)>($r18, $r17, $r16);

     label8:
        return;
    }

    private void notifyDiskDestroyed(android.os.storage.DiskInfo)
    {
        com.android.server.StorageManagerService$Callbacks r0;
        android.os.storage.DiskInfo r1, $r3;
        com.android.internal.os.SomeArgs r2;
        android.os.Message $r4;

        r0 := @this: com.android.server.StorageManagerService$Callbacks;

        r1 := @parameter0: android.os.storage.DiskInfo;

        r2 = staticinvoke <com.android.internal.os.SomeArgs: com.android.internal.os.SomeArgs obtain()>();

        $r3 = virtualinvoke r1.<android.os.storage.DiskInfo: android.os.storage.DiskInfo clone()>();

        r2.<com.android.internal.os.SomeArgs: java.lang.Object arg1> = $r3;

        $r4 = virtualinvoke r0.<com.android.server.StorageManagerService$Callbacks: android.os.Message obtainMessage(int,java.lang.Object)>(6, r2);

        virtualinvoke $r4.<android.os.Message: void sendToTarget()>();

        return;
    }

    private void notifyDiskScanned(android.os.storage.DiskInfo, int)
    {
        com.android.server.StorageManagerService$Callbacks r0;
        android.os.storage.DiskInfo r1, $r3;
        int i0;
        com.android.internal.os.SomeArgs r2;
        android.os.Message $r4;

        r0 := @this: com.android.server.StorageManagerService$Callbacks;

        r1 := @parameter0: android.os.storage.DiskInfo;

        i0 := @parameter1: int;

        r2 = staticinvoke <com.android.internal.os.SomeArgs: com.android.internal.os.SomeArgs obtain()>();

        $r3 = virtualinvoke r1.<android.os.storage.DiskInfo: android.os.storage.DiskInfo clone()>();

        r2.<com.android.internal.os.SomeArgs: java.lang.Object arg1> = $r3;

        r2.<com.android.internal.os.SomeArgs: int argi2> = i0;

        $r4 = virtualinvoke r0.<com.android.server.StorageManagerService$Callbacks: android.os.Message obtainMessage(int,java.lang.Object)>(5, r2);

        virtualinvoke $r4.<android.os.Message: void sendToTarget()>();

        return;
    }

    private void notifyStorageStateChanged(java.lang.String, java.lang.String, java.lang.String)
    {
        com.android.server.StorageManagerService$Callbacks r0;
        java.lang.String r1, r2, r3;
        com.android.internal.os.SomeArgs r4;
        android.os.Message $r5;

        r0 := @this: com.android.server.StorageManagerService$Callbacks;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 = staticinvoke <com.android.internal.os.SomeArgs: com.android.internal.os.SomeArgs obtain()>();

        r4.<com.android.internal.os.SomeArgs: java.lang.Object arg1> = r1;

        r4.<com.android.internal.os.SomeArgs: java.lang.Object arg2> = r2;

        r4.<com.android.internal.os.SomeArgs: java.lang.Object arg3> = r3;

        $r5 = virtualinvoke r0.<com.android.server.StorageManagerService$Callbacks: android.os.Message obtainMessage(int,java.lang.Object)>(1, r4);

        virtualinvoke $r5.<android.os.Message: void sendToTarget()>();

        return;
    }

    private void notifyVolumeForgotten(java.lang.String)
    {
        com.android.server.StorageManagerService$Callbacks r0;
        java.lang.String r1;
        com.android.internal.os.SomeArgs r2;
        android.os.Message $r3;

        r0 := @this: com.android.server.StorageManagerService$Callbacks;

        r1 := @parameter0: java.lang.String;

        r2 = staticinvoke <com.android.internal.os.SomeArgs: com.android.internal.os.SomeArgs obtain()>();

        r2.<com.android.internal.os.SomeArgs: java.lang.Object arg1> = r1;

        $r3 = virtualinvoke r0.<com.android.server.StorageManagerService$Callbacks: android.os.Message obtainMessage(int,java.lang.Object)>(4, r2);

        virtualinvoke $r3.<android.os.Message: void sendToTarget()>();

        return;
    }

    private void notifyVolumeRecordChanged(android.os.storage.VolumeRecord)
    {
        com.android.server.StorageManagerService$Callbacks r0;
        android.os.storage.VolumeRecord r1, $r3;
        com.android.internal.os.SomeArgs r2;
        android.os.Message $r4;

        r0 := @this: com.android.server.StorageManagerService$Callbacks;

        r1 := @parameter0: android.os.storage.VolumeRecord;

        r2 = staticinvoke <com.android.internal.os.SomeArgs: com.android.internal.os.SomeArgs obtain()>();

        $r3 = virtualinvoke r1.<android.os.storage.VolumeRecord: android.os.storage.VolumeRecord clone()>();

        r2.<com.android.internal.os.SomeArgs: java.lang.Object arg1> = $r3;

        $r4 = virtualinvoke r0.<com.android.server.StorageManagerService$Callbacks: android.os.Message obtainMessage(int,java.lang.Object)>(3, r2);

        virtualinvoke $r4.<android.os.Message: void sendToTarget()>();

        return;
    }

    private void notifyVolumeStateChanged(android.os.storage.VolumeInfo, int, int)
    {
        com.android.server.StorageManagerService$Callbacks r0;
        android.os.storage.VolumeInfo r1, $r3;
        int i0, i1;
        com.android.internal.os.SomeArgs r2;
        android.os.Message $r4;

        r0 := @this: com.android.server.StorageManagerService$Callbacks;

        r1 := @parameter0: android.os.storage.VolumeInfo;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 = staticinvoke <com.android.internal.os.SomeArgs: com.android.internal.os.SomeArgs obtain()>();

        $r3 = virtualinvoke r1.<android.os.storage.VolumeInfo: android.os.storage.VolumeInfo clone()>();

        r2.<com.android.internal.os.SomeArgs: java.lang.Object arg1> = $r3;

        r2.<com.android.internal.os.SomeArgs: int argi2> = i0;

        r2.<com.android.internal.os.SomeArgs: int argi3> = i1;

        $r4 = virtualinvoke r0.<com.android.server.StorageManagerService$Callbacks: android.os.Message obtainMessage(int,java.lang.Object)>(2, r2);

        virtualinvoke $r4.<android.os.Message: void sendToTarget()>();

        return;
    }

    public void handleMessage(android.os.Message)
    {
        com.android.server.StorageManagerService$Callbacks r0;
        android.os.Message r1;
        com.android.internal.os.SomeArgs r2;
        int i0, $i1, i2;
        java.lang.Object $r3;
        android.os.RemoteCallbackList $r4, $r5, $r6;
        android.os.IInterface $r7;
        android.os.RemoteException $r8;
        android.os.storage.IStorageEventListener r9;

        r0 := @this: com.android.server.StorageManagerService$Callbacks;

        r1 := @parameter0: android.os.Message;

        $r3 = r1.<android.os.Message: java.lang.Object obj>;

        r2 = (com.android.internal.os.SomeArgs) $r3;

        $r4 = r0.<com.android.server.StorageManagerService$Callbacks: android.os.RemoteCallbackList mCallbacks>;

        i0 = virtualinvoke $r4.<android.os.RemoteCallbackList: int beginBroadcast()>();

        i2 = 0;

     label1:
        if i2 >= i0 goto label6;

        $r6 = r0.<com.android.server.StorageManagerService$Callbacks: android.os.RemoteCallbackList mCallbacks>;

        $r7 = virtualinvoke $r6.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>(i2);

        r9 = (android.os.storage.IStorageEventListener) $r7;

     label2:
        $i1 = r1.<android.os.Message: int what>;

        specialinvoke r0.<com.android.server.StorageManagerService$Callbacks: void invokeCallback(android.os.storage.IStorageEventListener,int,com.android.internal.os.SomeArgs)>(r9, $i1, r2);

     label3:
        goto label5;

     label4:
        $r8 := @caughtexception;

     label5:
        i2 = i2 + 1;

        goto label1;

     label6:
        $r5 = r0.<com.android.server.StorageManagerService$Callbacks: android.os.RemoteCallbackList mCallbacks>;

        virtualinvoke $r5.<android.os.RemoteCallbackList: void finishBroadcast()>();

        virtualinvoke r2.<com.android.internal.os.SomeArgs: void recycle()>();

        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    public void register(android.os.storage.IStorageEventListener)
    {
        com.android.server.StorageManagerService$Callbacks r0;
        android.os.storage.IStorageEventListener r1;
        android.os.RemoteCallbackList $r2;

        r0 := @this: com.android.server.StorageManagerService$Callbacks;

        r1 := @parameter0: android.os.storage.IStorageEventListener;

        $r2 = r0.<com.android.server.StorageManagerService$Callbacks: android.os.RemoteCallbackList mCallbacks>;

        virtualinvoke $r2.<android.os.RemoteCallbackList: boolean register(android.os.IInterface)>(r1);

        return;
    }

    public void unregister(android.os.storage.IStorageEventListener)
    {
        com.android.server.StorageManagerService$Callbacks r0;
        android.os.storage.IStorageEventListener r1;
        android.os.RemoteCallbackList $r2;

        r0 := @this: com.android.server.StorageManagerService$Callbacks;

        r1 := @parameter0: android.os.storage.IStorageEventListener;

        $r2 = r0.<com.android.server.StorageManagerService$Callbacks: android.os.RemoteCallbackList mCallbacks>;

        virtualinvoke $r2.<android.os.RemoteCallbackList: boolean unregister(android.os.IInterface)>(r1);

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.StorageManagerService$Callbacks: int MSG_VOLUME_STATE_CHANGED> = 2;

        <com.android.server.StorageManagerService$Callbacks: int MSG_VOLUME_RECORD_CHANGED> = 3;

        <com.android.server.StorageManagerService$Callbacks: int MSG_VOLUME_FORGOTTEN> = 4;

        <com.android.server.StorageManagerService$Callbacks: int MSG_STORAGE_STATE_CHANGED> = 1;

        <com.android.server.StorageManagerService$Callbacks: int MSG_DISK_SCANNED> = 5;

        <com.android.server.StorageManagerService$Callbacks: int MSG_DISK_DESTROYED> = 6;

        return;
    }
}
