public class com.android.server.StorageManagerService$Lifecycle extends com.android.server.SystemService
{
    private com.android.server.StorageManagerService mStorageManagerService;

    public void <init>(android.content.Context)
    {
        com.android.server.StorageManagerService$Lifecycle r0;
        android.content.Context r1;

        r0 := @this: com.android.server.StorageManagerService$Lifecycle;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.android.server.SystemService: void <init>(android.content.Context)>(r1);

        return;
    }

    public void onBootPhase(int)
    {
        com.android.server.StorageManagerService$Lifecycle r0;
        int i0;
        com.android.server.StorageManagerService $r1, $r2, $r3;

        r0 := @this: com.android.server.StorageManagerService$Lifecycle;

        i0 := @parameter0: int;

        if i0 != 500 goto label1;

        $r3 = r0.<com.android.server.StorageManagerService$Lifecycle: com.android.server.StorageManagerService mStorageManagerService>;

        staticinvoke <com.android.server.StorageManagerService: void access$100(com.android.server.StorageManagerService)>($r3);

        goto label3;

     label1:
        if i0 != 550 goto label2;

        $r2 = r0.<com.android.server.StorageManagerService$Lifecycle: com.android.server.StorageManagerService mStorageManagerService>;

        staticinvoke <com.android.server.StorageManagerService: void access$200(com.android.server.StorageManagerService)>($r2);

        goto label3;

     label2:
        if i0 != 1000 goto label3;

        $r1 = r0.<com.android.server.StorageManagerService$Lifecycle: com.android.server.StorageManagerService mStorageManagerService>;

        staticinvoke <com.android.server.StorageManagerService: void access$300(com.android.server.StorageManagerService)>($r1);

     label3:
        return;
    }

    public void onCleanupUser(int)
    {
        com.android.server.StorageManagerService$Lifecycle r0;
        int i0;
        com.android.server.StorageManagerService $r1;

        r0 := @this: com.android.server.StorageManagerService$Lifecycle;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.StorageManagerService$Lifecycle: com.android.server.StorageManagerService mStorageManagerService>;

        staticinvoke <com.android.server.StorageManagerService: void access$600(com.android.server.StorageManagerService,int)>($r1, i0);

        return;
    }

    public void onStart()
    {
        com.android.server.StorageManagerService$Lifecycle r0;
        com.android.server.StorageManagerService $r2, $r4;
        android.content.Context $r3;

        r0 := @this: com.android.server.StorageManagerService$Lifecycle;

        $r2 = new com.android.server.StorageManagerService;

        $r3 = virtualinvoke r0.<com.android.server.StorageManagerService$Lifecycle: android.content.Context getContext()>();

        specialinvoke $r2.<com.android.server.StorageManagerService: void <init>(android.content.Context)>($r3);

        r0.<com.android.server.StorageManagerService$Lifecycle: com.android.server.StorageManagerService mStorageManagerService> = $r2;

        virtualinvoke r0.<com.android.server.StorageManagerService$Lifecycle: void publishBinderService(java.lang.String,android.os.IBinder)>("mount", $r2);

        $r4 = r0.<com.android.server.StorageManagerService$Lifecycle: com.android.server.StorageManagerService mStorageManagerService>;

        staticinvoke <com.android.server.StorageManagerService: void access$000(com.android.server.StorageManagerService)>($r4);

        return;
    }

    public void onStopUser(int)
    {
        com.android.server.StorageManagerService$Lifecycle r0;
        int i0;
        com.android.server.StorageManagerService $r1;

        r0 := @this: com.android.server.StorageManagerService$Lifecycle;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.StorageManagerService$Lifecycle: com.android.server.StorageManagerService mStorageManagerService>;

        staticinvoke <com.android.server.StorageManagerService: void access$700(com.android.server.StorageManagerService,int)>($r1, i0);

        return;
    }

    public void onSwitchUser(int)
    {
        com.android.server.StorageManagerService$Lifecycle r0;
        int i0;
        com.android.server.StorageManagerService $r1;

        r0 := @this: com.android.server.StorageManagerService$Lifecycle;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.StorageManagerService$Lifecycle: com.android.server.StorageManagerService mStorageManagerService>;

        staticinvoke <com.android.server.StorageManagerService: int access$402(com.android.server.StorageManagerService,int)>($r1, i0);

        return;
    }

    public void onUnlockUser(int)
    {
        com.android.server.StorageManagerService$Lifecycle r0;
        int i0;
        com.android.server.StorageManagerService $r1;

        r0 := @this: com.android.server.StorageManagerService$Lifecycle;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.StorageManagerService$Lifecycle: com.android.server.StorageManagerService mStorageManagerService>;

        staticinvoke <com.android.server.StorageManagerService: void access$500(com.android.server.StorageManagerService,int)>($r1, i0);

        return;
    }

    public void onUserStarting(com.android.server.SystemService$TargetUser)
    {
        com.android.server.StorageManagerService$Lifecycle r0;
        com.android.server.SystemService$TargetUser r1;
        com.android.server.StorageManagerService $r2;
        android.os.UserHandle $r3;

        r0 := @this: com.android.server.StorageManagerService$Lifecycle;

        r1 := @parameter0: com.android.server.SystemService$TargetUser;

        $r2 = r0.<com.android.server.StorageManagerService$Lifecycle: com.android.server.StorageManagerService mStorageManagerService>;

        $r3 = virtualinvoke r1.<com.android.server.SystemService$TargetUser: android.os.UserHandle getUserHandle()>();

        staticinvoke <com.android.server.StorageManagerService: void access$800(com.android.server.StorageManagerService,android.os.UserHandle)>($r2, $r3);

        return;
    }
}
