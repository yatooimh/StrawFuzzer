class com.android.server.StorageManagerService$WatchedLockedUsers extends java.lang.Object
{
    final com.android.server.StorageManagerService this$0;
    private int[] users;

    public void <init>(com.android.server.StorageManagerService)
    {
        com.android.server.StorageManagerService$WatchedLockedUsers r0;
        com.android.server.StorageManagerService r1;
        int[] $r2;

        r0 := @this: com.android.server.StorageManagerService$WatchedLockedUsers;

        r1 := @parameter0: com.android.server.StorageManagerService;

        r0.<com.android.server.StorageManagerService$WatchedLockedUsers: com.android.server.StorageManagerService this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = <libcore.util.EmptyArray: int[] INT>;

        r0.<com.android.server.StorageManagerService$WatchedLockedUsers: int[] users> = $r2;

        specialinvoke r0.<com.android.server.StorageManagerService$WatchedLockedUsers: void invalidateIsUserUnlockedCache()>();

        return;
    }

    private void invalidateIsUserUnlockedCache()
    {
        com.android.server.StorageManagerService$WatchedLockedUsers r0;

        r0 := @this: com.android.server.StorageManagerService$WatchedLockedUsers;

        staticinvoke <android.os.UserManager: void invalidateIsUserUnlockedCache()>();

        return;
    }

    public int[] all()
    {
        com.android.server.StorageManagerService$WatchedLockedUsers r0;
        int[] $r1;

        r0 := @this: com.android.server.StorageManagerService$WatchedLockedUsers;

        $r1 = r0.<com.android.server.StorageManagerService$WatchedLockedUsers: int[] users>;

        return $r1;
    }

    public void append(int)
    {
        com.android.server.StorageManagerService$WatchedLockedUsers r0;
        int i0;
        int[] $r1, $r2;

        r0 := @this: com.android.server.StorageManagerService$WatchedLockedUsers;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.StorageManagerService$WatchedLockedUsers: int[] users>;

        $r2 = staticinvoke <com.android.internal.util.ArrayUtils: int[] appendInt(int[],int)>($r1, i0);

        r0.<com.android.server.StorageManagerService$WatchedLockedUsers: int[] users> = $r2;

        specialinvoke r0.<com.android.server.StorageManagerService$WatchedLockedUsers: void invalidateIsUserUnlockedCache()>();

        return;
    }

    public boolean contains(int)
    {
        com.android.server.StorageManagerService$WatchedLockedUsers r0;
        int i0;
        int[] $r1;
        boolean $z0;

        r0 := @this: com.android.server.StorageManagerService$WatchedLockedUsers;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.StorageManagerService$WatchedLockedUsers: int[] users>;

        $z0 = staticinvoke <com.android.internal.util.ArrayUtils: boolean contains(int[],int)>($r1, i0);

        return $z0;
    }

    public void remove(int)
    {
        com.android.server.StorageManagerService$WatchedLockedUsers r0;
        int i0;
        int[] $r1, $r2;

        r0 := @this: com.android.server.StorageManagerService$WatchedLockedUsers;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.StorageManagerService$WatchedLockedUsers: int[] users>;

        $r2 = staticinvoke <com.android.internal.util.ArrayUtils: int[] removeInt(int[],int)>($r1, i0);

        r0.<com.android.server.StorageManagerService$WatchedLockedUsers: int[] users> = $r2;

        specialinvoke r0.<com.android.server.StorageManagerService$WatchedLockedUsers: void invalidateIsUserUnlockedCache()>();

        return;
    }

    public java.lang.String toString()
    {
        com.android.server.StorageManagerService$WatchedLockedUsers r0;
        int[] $r1;
        java.lang.String $r2;

        r0 := @this: com.android.server.StorageManagerService$WatchedLockedUsers;

        $r1 = r0.<com.android.server.StorageManagerService$WatchedLockedUsers: int[] users>;

        $r2 = staticinvoke <java.util.Arrays: java.lang.String toString(int[])>($r1);

        return $r2;
    }
}
