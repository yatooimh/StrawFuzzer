class com.android.server.SystemServer$1 extends java.lang.Object implements java.lang.Runnable
{
    final com.android.server.SystemServer this$0;
    final java.lang.String val$reason;
    final boolean val$reboot;

    void <init>(com.android.server.SystemServer, boolean, java.lang.String)
    {
        com.android.server.SystemServer$1 r0;
        com.android.server.SystemServer r1;
        boolean z0;
        java.lang.String r2;

        r0 := @this: com.android.server.SystemServer$1;

        r1 := @parameter0: com.android.server.SystemServer;

        z0 := @parameter1: boolean;

        r2 := @parameter2: java.lang.String;

        r0.<com.android.server.SystemServer$1: com.android.server.SystemServer this$0> = r1;

        r0.<com.android.server.SystemServer$1: boolean val$reboot> = z0;

        r0.<com.android.server.SystemServer$1: java.lang.String val$reason> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        com.android.server.SystemServer$1 r0;
        java.lang.String $r2;
        boolean $z0;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.SystemServer$1;

        entermonitor r0;

     label1:
        $z0 = r0.<com.android.server.SystemServer$1: boolean val$reboot>;

        $r2 = r0.<com.android.server.SystemServer$1: java.lang.String val$reason>;

        staticinvoke <com.android.server.power.ShutdownThread: void rebootOrShutdown(android.content.Context,boolean,java.lang.String)>(null, $z0, $r2);

        exitmonitor r0;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }
}
