public abstract class com.android.server.SystemService extends java.lang.Object
{
    protected static final boolean DEBUG_USER;
    public static final int PHASE_ACTIVITY_MANAGER_READY;
    public static final int PHASE_BOOT_COMPLETED;
    public static final int PHASE_DEVICE_SPECIFIC_SERVICES_READY;
    public static final int PHASE_LOCK_SETTINGS_READY;
    public static final int PHASE_SYSTEM_SERVICES_READY;
    public static final int PHASE_THIRD_PARTY_APPS_CAN_START;
    public static final int PHASE_WAIT_FOR_DEFAULT_DISPLAY;
    private final android.content.Context mContext;

    public void <init>(android.content.Context)
    {
        com.android.server.SystemService r0;
        android.content.Context r1;

        r0 := @this: com.android.server.SystemService;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.SystemService: android.content.Context mContext> = r1;

        return;
    }

    private com.android.server.SystemServiceManager getManager()
    {
        com.android.server.SystemService r0;
        java.lang.Object $r1;
        com.android.server.SystemServiceManager $r2;

        r0 := @this: com.android.server.SystemService;

        $r1 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Lcom/android/server/SystemServiceManager;");

        $r2 = (com.android.server.SystemServiceManager) $r1;

        return $r2;
    }

    protected void dumpSupportedUsers(java.io.PrintWriter, java.lang.String)
    {
        com.android.server.SystemService r0;
        java.io.PrintWriter r1;
        java.lang.String r2;
        java.util.List r3;
        java.util.Iterator r5;
        int i0, $i1, $i2;
        android.content.Context $r6;
        android.os.UserManager $r7;
        java.util.ArrayList $r8;
        boolean $z0, $z1;
        java.lang.Object $r9;
        android.content.pm.UserInfo $r10;
        java.lang.Integer $r11;

        r0 := @this: com.android.server.SystemService;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: java.lang.String;

        $r6 = r0.<com.android.server.SystemService: android.content.Context mContext>;

        $r7 = staticinvoke <android.os.UserManager: android.os.UserManager get(android.content.Context)>($r6);

        r3 = virtualinvoke $r7.<android.os.UserManager: java.util.List getUsers()>();

        $r8 = new java.util.ArrayList;

        $i1 = interfaceinvoke r3.<java.util.List: int size()>();

        specialinvoke $r8.<java.util.ArrayList: void <init>(int)>($i1);

        r5 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r9 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        $r10 = (android.content.pm.UserInfo) $r9;

        $i2 = $r10.<android.content.pm.UserInfo: int id>;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r11);

        goto label1;

     label2:
        $z1 = interfaceinvoke r3.<java.util.List: boolean isEmpty()>();

        if $z1 == 0 goto label3;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("No supported users");

        goto label5;

     label3:
        i0 = interfaceinvoke $r8.<java.util.List: int size()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>(i0);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" supported user");

        if i0 <= 1 goto label4;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("s");

     label4:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>($r8);

     label5:
        return;
    }

    protected final android.os.IBinder getBinderService(java.lang.String)
    {
        com.android.server.SystemService r0;
        java.lang.String r1;
        android.os.IBinder $r2;

        r0 := @this: com.android.server.SystemService;

        r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>(r1);

        return $r2;
    }

    public final android.content.Context getContext()
    {
        com.android.server.SystemService r0;
        android.content.Context $r1;

        r0 := @this: com.android.server.SystemService;

        $r1 = r0.<com.android.server.SystemService: android.content.Context mContext>;

        return $r1;
    }

    protected final java.lang.Object getLocalService(java.lang.Class)
    {
        com.android.server.SystemService r0;
        java.lang.Class r1;
        java.lang.Object $r2;

        r0 := @this: com.android.server.SystemService;

        r1 := @parameter0: java.lang.Class;

        $r2 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(r1);

        return $r2;
    }

    public final android.content.Context getUiContext()
    {
        com.android.server.SystemService r0;
        android.app.ActivityThread $r1;
        android.app.ContextImpl $r2;

        r0 := @this: com.android.server.SystemService;

        $r1 = staticinvoke <android.app.ActivityThread: android.app.ActivityThread currentActivityThread()>();

        $r2 = virtualinvoke $r1.<android.app.ActivityThread: android.app.ContextImpl getSystemUiContext()>();

        return $r2;
    }

    public final boolean isSafeMode()
    {
        com.android.server.SystemService r0;
        com.android.server.SystemServiceManager $r1;
        boolean $z0;

        r0 := @this: com.android.server.SystemService;

        $r1 = specialinvoke r0.<com.android.server.SystemService: com.android.server.SystemServiceManager getManager()>();

        $z0 = virtualinvoke $r1.<com.android.server.SystemServiceManager: boolean isSafeMode()>();

        return $z0;
    }

    public boolean isUserSupported(com.android.server.SystemService$TargetUser)
    {
        com.android.server.SystemService r0;
        com.android.server.SystemService$TargetUser r1;

        r0 := @this: com.android.server.SystemService;

        r1 := @parameter0: com.android.server.SystemService$TargetUser;

        return 1;
    }

    public void onBootPhase(int)
    {
        com.android.server.SystemService r0;
        int i0;

        r0 := @this: com.android.server.SystemService;

        i0 := @parameter0: int;

        return;
    }

    public void onCleanupUser(int)
    {
        com.android.server.SystemService r0;
        int i0;

        r0 := @this: com.android.server.SystemService;

        i0 := @parameter0: int;

        return;
    }

    public void onCleanupUser(android.content.pm.UserInfo)
    {
        com.android.server.SystemService r0;
        android.content.pm.UserInfo r1;
        int $i0;

        r0 := @this: com.android.server.SystemService;

        r1 := @parameter0: android.content.pm.UserInfo;

        $i0 = r1.<android.content.pm.UserInfo: int id>;

        virtualinvoke r0.<com.android.server.SystemService: void onCleanupUser(int)>($i0);

        return;
    }

    public abstract void onStart();

    public void onStartUser(int)
    {
        com.android.server.SystemService r0;
        int i0;

        r0 := @this: com.android.server.SystemService;

        i0 := @parameter0: int;

        return;
    }

    public void onStartUser(android.content.pm.UserInfo)
    {
        com.android.server.SystemService r0;
        android.content.pm.UserInfo r1;
        int $i0;

        r0 := @this: com.android.server.SystemService;

        r1 := @parameter0: android.content.pm.UserInfo;

        $i0 = r1.<android.content.pm.UserInfo: int id>;

        virtualinvoke r0.<com.android.server.SystemService: void onStartUser(int)>($i0);

        return;
    }

    public void onStopUser(int)
    {
        com.android.server.SystemService r0;
        int i0;

        r0 := @this: com.android.server.SystemService;

        i0 := @parameter0: int;

        return;
    }

    public void onStopUser(android.content.pm.UserInfo)
    {
        com.android.server.SystemService r0;
        android.content.pm.UserInfo r1;
        int $i0;

        r0 := @this: com.android.server.SystemService;

        r1 := @parameter0: android.content.pm.UserInfo;

        $i0 = r1.<android.content.pm.UserInfo: int id>;

        virtualinvoke r0.<com.android.server.SystemService: void onStopUser(int)>($i0);

        return;
    }

    public void onSwitchUser(int)
    {
        com.android.server.SystemService r0;
        int i0;

        r0 := @this: com.android.server.SystemService;

        i0 := @parameter0: int;

        return;
    }

    public void onSwitchUser(android.content.pm.UserInfo, android.content.pm.UserInfo)
    {
        com.android.server.SystemService r0;
        android.content.pm.UserInfo r1, r2;
        int $i0;

        r0 := @this: com.android.server.SystemService;

        r1 := @parameter0: android.content.pm.UserInfo;

        r2 := @parameter1: android.content.pm.UserInfo;

        $i0 = r2.<android.content.pm.UserInfo: int id>;

        virtualinvoke r0.<com.android.server.SystemService: void onSwitchUser(int)>($i0);

        return;
    }

    public void onUnlockUser(int)
    {
        com.android.server.SystemService r0;
        int i0;

        r0 := @this: com.android.server.SystemService;

        i0 := @parameter0: int;

        return;
    }

    public void onUnlockUser(android.content.pm.UserInfo)
    {
        com.android.server.SystemService r0;
        android.content.pm.UserInfo r1;
        int $i0;

        r0 := @this: com.android.server.SystemService;

        r1 := @parameter0: android.content.pm.UserInfo;

        $i0 = r1.<android.content.pm.UserInfo: int id>;

        virtualinvoke r0.<com.android.server.SystemService: void onUnlockUser(int)>($i0);

        return;
    }

    public void onUserStarting(com.android.server.SystemService$TargetUser)
    {
        com.android.server.SystemService r0;
        com.android.server.SystemService$TargetUser r1;
        android.content.pm.UserInfo $r2;

        r0 := @this: com.android.server.SystemService;

        r1 := @parameter0: com.android.server.SystemService$TargetUser;

        $r2 = virtualinvoke r1.<com.android.server.SystemService$TargetUser: android.content.pm.UserInfo getUserInfo()>();

        virtualinvoke r0.<com.android.server.SystemService: void onStartUser(android.content.pm.UserInfo)>($r2);

        return;
    }

    public void onUserStopped(com.android.server.SystemService$TargetUser)
    {
        com.android.server.SystemService r0;
        com.android.server.SystemService$TargetUser r1;
        android.content.pm.UserInfo $r2;

        r0 := @this: com.android.server.SystemService;

        r1 := @parameter0: com.android.server.SystemService$TargetUser;

        $r2 = virtualinvoke r1.<com.android.server.SystemService$TargetUser: android.content.pm.UserInfo getUserInfo()>();

        virtualinvoke r0.<com.android.server.SystemService: void onCleanupUser(android.content.pm.UserInfo)>($r2);

        return;
    }

    public void onUserStopping(com.android.server.SystemService$TargetUser)
    {
        com.android.server.SystemService r0;
        com.android.server.SystemService$TargetUser r1;
        android.content.pm.UserInfo $r2;

        r0 := @this: com.android.server.SystemService;

        r1 := @parameter0: com.android.server.SystemService$TargetUser;

        $r2 = virtualinvoke r1.<com.android.server.SystemService$TargetUser: android.content.pm.UserInfo getUserInfo()>();

        virtualinvoke r0.<com.android.server.SystemService: void onStopUser(android.content.pm.UserInfo)>($r2);

        return;
    }

    public void onUserSwitching(com.android.server.SystemService$TargetUser, com.android.server.SystemService$TargetUser)
    {
        com.android.server.SystemService r0;
        com.android.server.SystemService$TargetUser r1, r3;
        android.content.pm.UserInfo $r2, r4;

        r0 := @this: com.android.server.SystemService;

        r3 := @parameter0: com.android.server.SystemService$TargetUser;

        r1 := @parameter1: com.android.server.SystemService$TargetUser;

        if r3 != null goto label1;

        r4 = null;

        goto label2;

     label1:
        r4 = virtualinvoke r3.<com.android.server.SystemService$TargetUser: android.content.pm.UserInfo getUserInfo()>();

     label2:
        $r2 = virtualinvoke r1.<com.android.server.SystemService$TargetUser: android.content.pm.UserInfo getUserInfo()>();

        virtualinvoke r0.<com.android.server.SystemService: void onSwitchUser(android.content.pm.UserInfo,android.content.pm.UserInfo)>(r4, $r2);

        return;
    }

    public void onUserUnlocked(com.android.server.SystemService$TargetUser)
    {
        com.android.server.SystemService r0;
        com.android.server.SystemService$TargetUser r1;

        r0 := @this: com.android.server.SystemService;

        r1 := @parameter0: com.android.server.SystemService$TargetUser;

        return;
    }

    public void onUserUnlocking(com.android.server.SystemService$TargetUser)
    {
        com.android.server.SystemService r0;
        com.android.server.SystemService$TargetUser r1;
        android.content.pm.UserInfo $r2;

        r0 := @this: com.android.server.SystemService;

        r1 := @parameter0: com.android.server.SystemService$TargetUser;

        $r2 = virtualinvoke r1.<com.android.server.SystemService$TargetUser: android.content.pm.UserInfo getUserInfo()>();

        virtualinvoke r0.<com.android.server.SystemService: void onUnlockUser(android.content.pm.UserInfo)>($r2);

        return;
    }

    protected final void publishBinderService(java.lang.String, android.os.IBinder)
    {
        com.android.server.SystemService r0;
        java.lang.String r1;
        android.os.IBinder r2;

        r0 := @this: com.android.server.SystemService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.IBinder;

        virtualinvoke r0.<com.android.server.SystemService: void publishBinderService(java.lang.String,android.os.IBinder,boolean)>(r1, r2, 0);

        return;
    }

    protected final void publishBinderService(java.lang.String, android.os.IBinder, boolean)
    {
        com.android.server.SystemService r0;
        java.lang.String r1;
        android.os.IBinder r2;
        boolean z0;

        r0 := @this: com.android.server.SystemService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.IBinder;

        z0 := @parameter2: boolean;

        virtualinvoke r0.<com.android.server.SystemService: void publishBinderService(java.lang.String,android.os.IBinder,boolean,int)>(r1, r2, z0, 8);

        return;
    }

    protected final void publishBinderService(java.lang.String, android.os.IBinder, boolean, int)
    {
        com.android.server.SystemService r0;
        java.lang.String r1;
        android.os.IBinder r2;
        boolean z0;
        int i0;

        r0 := @this: com.android.server.SystemService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.IBinder;

        z0 := @parameter2: boolean;

        i0 := @parameter3: int;

        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder,boolean,int)>(r1, r2, z0, i0);

        return;
    }

    protected final void publishLocalService(java.lang.Class, java.lang.Object)
    {
        com.android.server.SystemService r0;
        java.lang.Class r1;
        java.lang.Object r2;

        r0 := @this: com.android.server.SystemService;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.Object;

        staticinvoke <com.android.server.LocalServices: void addService(java.lang.Class,java.lang.Object)>(r1, r2);

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.SystemService: int PHASE_WAIT_FOR_DEFAULT_DISPLAY> = 100;

        <com.android.server.SystemService: int PHASE_THIRD_PARTY_APPS_CAN_START> = 600;

        <com.android.server.SystemService: int PHASE_SYSTEM_SERVICES_READY> = 500;

        <com.android.server.SystemService: int PHASE_LOCK_SETTINGS_READY> = 480;

        <com.android.server.SystemService: int PHASE_DEVICE_SPECIFIC_SERVICES_READY> = 520;

        <com.android.server.SystemService: int PHASE_BOOT_COMPLETED> = 1000;

        <com.android.server.SystemService: int PHASE_ACTIVITY_MANAGER_READY> = 550;

        <com.android.server.SystemService: boolean DEBUG_USER> = 0;

        return;
    }
}
