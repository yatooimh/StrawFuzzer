public class com.android.server.SystemServiceManager extends java.lang.Object
{
    private static final java.lang.String CLEANUP;
    private static final boolean DEBUG;
    private static final int SERVICE_CALL_WARN_TIME_MS;
    private static final java.lang.String START;
    private static final java.lang.String STOP;
    private static final java.lang.String SWITCH;
    private static final java.lang.String TAG;
    private static final java.lang.String UNLOCKED;
    private static final java.lang.String UNLOCKING;
    private static java.io.File sSystemDir;
    private final android.content.Context mContext;
    private int mCurrentPhase;
    private final android.util.ArrayMap mLoadedPaths;
    private boolean mRuntimeRestarted;
    private long mRuntimeStartElapsedTime;
    private long mRuntimeStartUptime;
    private boolean mSafeMode;
    private final java.util.ArrayList mServices;
    private android.os.UserManagerInternal mUserManagerInternal;

    void <init>(android.content.Context)
    {
        com.android.server.SystemServiceManager r0;
        android.content.Context r1;
        java.util.ArrayList $r2;
        android.util.ArrayMap $r3;

        r0 := @this: com.android.server.SystemServiceManager;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.SystemServiceManager: java.util.ArrayList mServices> = $r2;

        $r3 = new android.util.ArrayMap;

        specialinvoke $r3.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.SystemServiceManager: android.util.ArrayMap mLoadedPaths> = $r3;

        r0.<com.android.server.SystemServiceManager: int mCurrentPhase> = -1;

        r0.<com.android.server.SystemServiceManager: android.content.Context mContext> = r1;

        return;
    }

    public static java.io.File ensureSystemDir()
    {
        java.io.File $r1, $r2, $r3, $r4;

        $r1 = <com.android.server.SystemServiceManager: java.io.File sSystemDir>;

        if $r1 != null goto label1;

        $r3 = new java.io.File;

        $r4 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        specialinvoke $r3.<java.io.File: void <init>(java.io.File,java.lang.String)>($r4, "system");

        <com.android.server.SystemServiceManager: java.io.File sSystemDir> = $r3;

        virtualinvoke $r3.<java.io.File: boolean mkdirs()>();

     label1:
        $r2 = <com.android.server.SystemServiceManager: java.io.File sSystemDir>;

        return $r2;
    }

    private android.content.pm.UserInfo getUserInfo(int)
    {
        com.android.server.SystemServiceManager r0;
        int i0;
        java.lang.IllegalStateException $r1, $r5;
        java.lang.StringBuilder $r2;
        java.lang.String $r6;
        android.os.UserManagerInternal r7;
        android.content.pm.UserInfo r8;

        r0 := @this: com.android.server.SystemServiceManager;

        i0 := @parameter0: int;

        r7 = r0.<com.android.server.SystemServiceManager: android.os.UserManagerInternal mUserManagerInternal>;

        if r7 == null goto label2;

        r8 = virtualinvoke r7.<android.os.UserManagerInternal: android.content.pm.UserInfo getUserInfo(int)>(i0);

        if r8 == null goto label1;

        return r8;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No UserInfo for ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = new java.lang.IllegalStateException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label2:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("mUserManagerInternal not set yet");

        throw $r1;
    }

    private static java.lang.Class loadClassFromLoader(java.lang.String, java.lang.ClassLoader)
    {
        java.lang.String r0, $r8, $r12;
        java.lang.ClassLoader r1;
        java.lang.ClassNotFoundException $r3;
        java.lang.StringBuilder $r4;
        java.lang.RuntimeException $r11;
        java.lang.Class r13;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.ClassLoader;

     label1:
        r13 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>(r0, 1, r1);

     label2:
        return r13;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to create service ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from class loader ");

        $r8 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": service class not found, usually indicates that the caller should have called PackageManager.hasSystemFeature() to check whether the feature is available on this device before trying to start the services that implement it. Also ensure that the correct path for the classloader is supplied, if applicable.");

        $r11 = new java.lang.RuntimeException;

        $r12 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r12, $r3);

        throw $r11;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    private void onUser(com.android.server.utils.TimingsTraceAndSlog, java.lang.String, int)
    {
        com.android.server.SystemServiceManager r0;
        com.android.server.utils.TimingsTraceAndSlog r1;
        java.lang.String r2;
        int i0;

        r0 := @this: com.android.server.SystemServiceManager;

        r1 := @parameter0: com.android.server.utils.TimingsTraceAndSlog;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.server.SystemServiceManager: void onUser(com.android.server.utils.TimingsTraceAndSlog,java.lang.String,int,int)>(r1, r2, i0, -10000);

        return;
    }

    private void onUser(com.android.server.utils.TimingsTraceAndSlog, java.lang.String, int, int)
    {
        com.android.server.SystemServiceManager r0;
        com.android.server.utils.TimingsTraceAndSlog r1;
        java.lang.String r2, $r10, $r31, $r37, $r40, $r48, $r57, r60, r63;
        int i0, i1, $i5, i9, i10;
        long l2, l3, $l6;
        java.lang.StringBuilder $r5, $r11, $r24, $r32, $r41, $r50, r67;
        com.android.server.SystemService$TargetUser $r16, $r18, r61;
        android.content.pm.UserInfo $r17, $r19;
        java.util.ArrayList $r20, $r21;
        java.lang.Object $r22;
        java.lang.Class $r23;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, z6;
        java.lang.Exception $r49;
        com.android.server.SystemService r62;
        byte b11;
        java.lang.IllegalArgumentException r66;

        r0 := @this: com.android.server.SystemServiceManager;

        r1 := @parameter0: com.android.server.utils.TimingsTraceAndSlog;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i9 := @parameter3: int;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ssm.");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("User-");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r10 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.server.utils.TimingsTraceAndSlog: void traceBegin(java.lang.String)>($r10);

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Calling on");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("User ");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        r60 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SystemServiceManager", r60);

        $r16 = new com.android.server.SystemService$TargetUser;

        $r17 = specialinvoke r0.<com.android.server.SystemServiceManager: android.content.pm.UserInfo getUserInfo(int)>(i0);

        specialinvoke $r16.<com.android.server.SystemService$TargetUser: void <init>(android.content.pm.UserInfo)>($r17);

        if i9 != -10000 goto label01;

        r61 = null;

        goto label02;

     label01:
        $r18 = new com.android.server.SystemService$TargetUser;

        $r19 = specialinvoke r0.<com.android.server.SystemServiceManager: android.content.pm.UserInfo getUserInfo(int)>(i9);

        specialinvoke $r18.<com.android.server.SystemService$TargetUser: void <init>(android.content.pm.UserInfo)>($r19);

        r61 = $r18;

     label02:
        $r20 = r0.<com.android.server.SystemServiceManager: java.util.ArrayList mServices>;

        i1 = virtualinvoke $r20.<java.util.ArrayList: int size()>();

        i10 = 0;

     label03:
        if i10 >= i1 goto label38;

        $r21 = r0.<com.android.server.SystemServiceManager: java.util.ArrayList mServices>;

        $r22 = virtualinvoke $r21.<java.util.ArrayList: java.lang.Object get(int)>(i10);

        r62 = (com.android.server.SystemService) $r22;

        $r23 = virtualinvoke r62.<java.lang.Object: java.lang.Class getClass()>();

        r63 = virtualinvoke $r23.<java.lang.Class: java.lang.String getName()>();

        z6 = virtualinvoke r62.<com.android.server.SystemService: boolean isUserSupported(com.android.server.SystemService$TargetUser)>($r16);

        if z6 != 0 goto label04;

        if r61 == null goto label04;

        z6 = virtualinvoke r62.<com.android.server.SystemService: boolean isUserSupported(com.android.server.SystemService$TargetUser)>(r61);

        goto label04;

     label04:
        if z6 != 0 goto label05;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skipping ");

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("User-");

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" on ");

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r63);

        $r48 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SystemServiceManager", $r48);

        goto label37;

     label05:
        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ssm.on");

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("User-");

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_");

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r63);

        $r31 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.server.utils.TimingsTraceAndSlog: void traceBegin(java.lang.String)>($r31);

        l2 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

     label06:
        $i5 = virtualinvoke r2.<java.lang.String: int hashCode()>();

        lookupswitch($i5)
        {
            case -1805606060: goto label18;
            case -1773539708: goto label16;
            case -240492034: goto label14;
            case -146305277: goto label12;
            case 2587682: goto label10;
            case 80204866: goto label08;
            default: goto label07;
        };

     label07:
        goto label20;

     label08:
        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("Start");

        if $z0 == 0 goto label07;

     label09:
        b11 = 1;

        goto label21;

     label10:
        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("Stop");

        if $z1 == 0 goto label07;

     label11:
        b11 = 4;

        goto label21;

     label12:
        $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("Unlocked");

        if $z2 == 0 goto label07;

     label13:
        b11 = 3;

        goto label21;

     label14:
        $z3 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("Unlocking");

        if $z3 == 0 goto label07;

     label15:
        b11 = 2;

        goto label21;

     label16:
        $z4 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("Cleanup");

        if $z4 == 0 goto label07;

     label17:
        b11 = 5;

        goto label21;

     label18:
        $z5 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("Switch");

        if $z5 == 0 goto label07;

     label19:
        b11 = 0;

        goto label21;

     label20:
        b11 = -1;

     label21:
        if b11 == 0 goto label33;

        if b11 == 1 goto label31;

        if b11 == 2 goto label29;

        if b11 == 3 goto label27;

        if b11 == 4 goto label25;

        if b11 != 5 goto label24;

     label22:
        virtualinvoke r62.<com.android.server.SystemService: void onUserStopped(com.android.server.SystemService$TargetUser)>($r16);

     label23:
        goto label34;

     label24:
        r66 = new java.lang.IllegalArgumentException;

        r67 = new java.lang.StringBuilder;

        specialinvoke r67.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" what?");

        $r40 = virtualinvoke r67.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r66.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r40);

        throw r66;

     label25:
        virtualinvoke r62.<com.android.server.SystemService: void onUserStopping(com.android.server.SystemService$TargetUser)>($r16);

     label26:
        goto label34;

     label27:
        virtualinvoke r62.<com.android.server.SystemService: void onUserUnlocked(com.android.server.SystemService$TargetUser)>($r16);

     label28:
        goto label34;

     label29:
        virtualinvoke r62.<com.android.server.SystemService: void onUserUnlocking(com.android.server.SystemService$TargetUser)>($r16);

     label30:
        goto label34;

     label31:
        virtualinvoke r62.<com.android.server.SystemService: void onUserStarting(com.android.server.SystemService$TargetUser)>($r16);

     label32:
        goto label34;

     label33:
        virtualinvoke r62.<com.android.server.SystemService: void onUserSwitching(com.android.server.SystemService$TargetUser,com.android.server.SystemService$TargetUser)>(r61, $r16);

     label34:
        goto label36;

     label35:
        $r49 := @caughtexception;

        $r50 = new java.lang.StringBuilder;

        specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure reporting ");

        virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" of user ");

        virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to service ");

        virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r63);

        $r57 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("SystemServiceManager", $r57, $r49);

     label36:
        l3 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("on");

        virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("User-");

        virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $l6 = l3 - l2;

        $r37 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.SystemServiceManager: void warnIfTooLong(long,com.android.server.SystemService,java.lang.String)>($l6, r62, $r37);

        virtualinvoke r1.<com.android.server.utils.TimingsTraceAndSlog: void traceEnd()>();

     label37:
        i10 = i10 + 1;

        goto label03;

     label38:
        virtualinvoke r1.<com.android.server.utils.TimingsTraceAndSlog: void traceEnd()>();

        return;

        catch java.lang.Exception from label06 to label07 with label35;
        catch java.lang.Exception from label08 to label09 with label35;
        catch java.lang.Exception from label10 to label11 with label35;
        catch java.lang.Exception from label12 to label13 with label35;
        catch java.lang.Exception from label14 to label15 with label35;
        catch java.lang.Exception from label16 to label17 with label35;
        catch java.lang.Exception from label18 to label19 with label35;
        catch java.lang.Exception from label22 to label23 with label35;
        catch java.lang.Exception from label24 to label25 with label35;
        catch java.lang.Exception from label25 to label26 with label35;
        catch java.lang.Exception from label27 to label28 with label35;
        catch java.lang.Exception from label29 to label30 with label35;
        catch java.lang.Exception from label31 to label32 with label35;
        catch java.lang.Exception from label33 to label34 with label35;
    }

    private void onUser(java.lang.String, int)
    {
        com.android.server.SystemServiceManager r0;
        java.lang.String r1;
        int i0;
        com.android.server.utils.TimingsTraceAndSlog $r2;

        r0 := @this: com.android.server.SystemServiceManager;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = staticinvoke <com.android.server.utils.TimingsTraceAndSlog: com.android.server.utils.TimingsTraceAndSlog newAsyncLog()>();

        specialinvoke r0.<com.android.server.SystemServiceManager: void onUser(com.android.server.utils.TimingsTraceAndSlog,java.lang.String,int)>($r2, r1, i0);

        return;
    }

    private void warnIfTooLong(long, com.android.server.SystemService, java.lang.String)
    {
        com.android.server.SystemServiceManager r0;
        long l0;
        com.android.server.SystemService r1;
        java.lang.String r2, $r7, $r13;
        byte $b1;
        java.lang.StringBuilder $r4;
        java.lang.Class $r6;

        r0 := @this: com.android.server.SystemServiceManager;

        l0 := @parameter0: long;

        r1 := @parameter1: com.android.server.SystemService;

        r2 := @parameter2: java.lang.String;

        $b1 = l0 cmp 50L;

        if $b1 <= 0 goto label1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Service ");

        $r6 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" took ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ms in ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r13 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("SystemServiceManager", $r13);

     label1:
        return;
    }

    public void cleanupUser(int)
    {
        com.android.server.SystemServiceManager r0;
        int i0;

        r0 := @this: com.android.server.SystemServiceManager;

        i0 := @parameter0: int;

        specialinvoke r0.<com.android.server.SystemServiceManager: void onUser(java.lang.String,int)>("Cleanup", i0);

        return;
    }

    public void dump()
    {
        com.android.server.SystemServiceManager r0;
        int i0, $i1, i3;
        com.android.server.SystemService r2;
        java.lang.StringBuilder $r3;
        java.util.ArrayList $r8, $r10;
        java.lang.String $r9, $r14;
        java.lang.Object $r11;
        java.lang.Class $r13;

        r0 := @this: com.android.server.SystemServiceManager;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Current phase: ");

        $i1 = r0.<com.android.server.SystemServiceManager: int mCurrentPhase>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Services:\n");

        $r8 = r0.<com.android.server.SystemServiceManager: java.util.ArrayList mServices>;

        i0 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

        i3 = 0;

     label1:
        if i3 >= i0 goto label2;

        $r10 = r0.<com.android.server.SystemServiceManager: java.util.ArrayList mServices>;

        $r11 = virtualinvoke $r10.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r2 = (com.android.server.SystemService) $r11;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t");

        $r13 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $r14 = virtualinvoke $r13.<java.lang.Class: java.lang.String getSimpleName()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        i3 = i3 + 1;

        goto label1;

     label2:
        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("SystemServiceManager", $r9);

        return;
    }

    public long getRuntimeStartElapsedTime()
    {
        com.android.server.SystemServiceManager r0;
        long $l0;

        r0 := @this: com.android.server.SystemServiceManager;

        $l0 = r0.<com.android.server.SystemServiceManager: long mRuntimeStartElapsedTime>;

        return $l0;
    }

    public long getRuntimeStartUptime()
    {
        com.android.server.SystemServiceManager r0;
        long $l0;

        r0 := @this: com.android.server.SystemServiceManager;

        $l0 = r0.<com.android.server.SystemServiceManager: long mRuntimeStartUptime>;

        return $l0;
    }

    public boolean isBootCompleted()
    {
        com.android.server.SystemServiceManager r0;
        int $i0;
        boolean z0;

        r0 := @this: com.android.server.SystemServiceManager;

        $i0 = r0.<com.android.server.SystemServiceManager: int mCurrentPhase>;

        if $i0 < 1000 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isRuntimeRestarted()
    {
        com.android.server.SystemServiceManager r0;
        boolean $z0;

        r0 := @this: com.android.server.SystemServiceManager;

        $z0 = r0.<com.android.server.SystemServiceManager: boolean mRuntimeRestarted>;

        return $z0;
    }

    public boolean isSafeMode()
    {
        com.android.server.SystemServiceManager r0;
        boolean $z0;

        r0 := @this: com.android.server.SystemServiceManager;

        $z0 = r0.<com.android.server.SystemServiceManager: boolean mSafeMode>;

        return $z0;
    }

    public void onUserUnlocked(int)
    {
        com.android.server.SystemServiceManager r0;
        int i0;

        r0 := @this: com.android.server.SystemServiceManager;

        i0 := @parameter0: int;

        specialinvoke r0.<com.android.server.SystemServiceManager: void onUser(java.lang.String,int)>("Unlocked", i0);

        return;
    }

    public void preSystemReady()
    {
        com.android.server.SystemServiceManager r0;
        java.lang.Object $r1;
        android.os.UserManagerInternal $r2;

        r0 := @this: com.android.server.SystemServiceManager;

        $r1 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/os/UserManagerInternal;");

        $r2 = (android.os.UserManagerInternal) $r1;

        r0.<com.android.server.SystemServiceManager: android.os.UserManagerInternal mUserManagerInternal> = $r2;

        return;
    }

    void setSafeMode(boolean)
    {
        com.android.server.SystemServiceManager r0;
        boolean z0;

        r0 := @this: com.android.server.SystemServiceManager;

        z0 := @parameter0: boolean;

        r0.<com.android.server.SystemServiceManager: boolean mSafeMode> = z0;

        return;
    }

    void setStartInfo(boolean, long, long)
    {
        com.android.server.SystemServiceManager r0;
        boolean z0;
        long l0, l1;

        r0 := @this: com.android.server.SystemServiceManager;

        z0 := @parameter0: boolean;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        r0.<com.android.server.SystemServiceManager: boolean mRuntimeRestarted> = z0;

        r0.<com.android.server.SystemServiceManager: long mRuntimeStartElapsedTime> = l0;

        r0.<com.android.server.SystemServiceManager: long mRuntimeStartUptime> = l1;

        return;
    }

    public void startBootPhase(com.android.server.utils.TimingsTraceAndSlog, int)
    {
        com.android.server.SystemServiceManager r0;
        com.android.server.utils.TimingsTraceAndSlog r1;
        int i0, i1, $i3, $i4, $i9, $i12, i13;
        long l2, $l6, $l7, $l8, $l10, $l11;
        java.lang.RuntimeException r3;
        java.lang.IllegalArgumentException $r4;
        java.lang.StringBuilder $r5, r32, r34, r35;
        java.lang.String $r8, $r11, $r19, $r21, $r25, $r29;
        java.util.ArrayList $r12, $r13;
        java.lang.Object $r14;
        java.lang.Class $r18, $r24;
        java.lang.Exception $r22;
        java.lang.Throwable $r30;
        com.android.server.SystemService r33;

        r0 := @this: com.android.server.SystemServiceManager;

        r1 := @parameter0: com.android.server.utils.TimingsTraceAndSlog;

        i0 := @parameter1: int;

        $i3 = r0.<com.android.server.SystemServiceManager: int mCurrentPhase>;

        if i0 <= $i3 goto label13;

        r0.<com.android.server.SystemServiceManager: int mCurrentPhase> = i0;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Starting phase ");

        $i4 = r0.<com.android.server.SystemServiceManager: int mCurrentPhase>;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SystemServiceManager", $r8);

     label01:
        r32 = new java.lang.StringBuilder;

        specialinvoke r32.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("OnBootPhase_");

        virtualinvoke r32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r11 = virtualinvoke r32.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.server.utils.TimingsTraceAndSlog: void traceBegin(java.lang.String)>($r11);

        $r12 = r0.<com.android.server.SystemServiceManager: java.util.ArrayList mServices>;

        i1 = virtualinvoke $r12.<java.util.ArrayList: int size()>();

     label02:
        i13 = 0;

     label03:
        if i13 >= i1 goto label10;

     label04:
        $r13 = r0.<com.android.server.SystemServiceManager: java.util.ArrayList mServices>;

        $r14 = virtualinvoke $r13.<java.util.ArrayList: java.lang.Object get(int)>(i13);

        r33 = (com.android.server.SystemService) $r14;

        l2 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        r34 = new java.lang.StringBuilder;

        specialinvoke r34.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("OnBootPhase_");

        virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_");

        $r18 = virtualinvoke r33.<java.lang.Object: java.lang.Class getClass()>();

        $r19 = virtualinvoke $r18.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke r34.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.server.utils.TimingsTraceAndSlog: void traceBegin(java.lang.String)>($r21);

     label05:
        $i9 = r0.<com.android.server.SystemServiceManager: int mCurrentPhase>;

        virtualinvoke r33.<com.android.server.SystemService: void onBootPhase(int)>($i9);

     label06:
        $l10 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l11 = $l10 - l2;

        specialinvoke r0.<com.android.server.SystemServiceManager: void warnIfTooLong(long,com.android.server.SystemService,java.lang.String)>($l11, r33, "onBootPhase");

        virtualinvoke r1.<com.android.server.utils.TimingsTraceAndSlog: void traceEnd()>();

     label07:
        i13 = i13 + 1;

        goto label03;

     label08:
        $r22 := @caughtexception;

     label09:
        r3 = new java.lang.RuntimeException;

        r35 = new java.lang.StringBuilder;

        specialinvoke r35.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to boot service ");

        $r24 = virtualinvoke r33.<java.lang.Object: java.lang.Class getClass()>();

        $r25 = virtualinvoke $r24.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        virtualinvoke r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": onBootPhase threw an exception during phase ");

        $i12 = r0.<com.android.server.SystemServiceManager: int mCurrentPhase>;

        virtualinvoke r35.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12);

        $r29 = virtualinvoke r35.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r3.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r29, $r22);

        throw r3;

     label10:
        virtualinvoke r1.<com.android.server.utils.TimingsTraceAndSlog: void traceEnd()>();

        if i0 != 1000 goto label11;

        $l6 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l7 = r0.<com.android.server.SystemServiceManager: long mRuntimeStartUptime>;

        $l8 = $l6 - $l7;

        virtualinvoke r1.<com.android.server.utils.TimingsTraceAndSlog: void logDuration(java.lang.String,long)>("TotalBootTime", $l8);

        staticinvoke <com.android.server.SystemServerInitThreadPool: void shutdown()>();

     label11:
        return;

     label12:
        $r30 := @caughtexception;

        virtualinvoke r1.<com.android.server.utils.TimingsTraceAndSlog: void traceEnd()>();

        throw $r30;

     label13:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Next phase must be larger than previous");

        throw $r4;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label04 to label05 with label12;
        catch java.lang.Exception from label05 to label06 with label08;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label09 to label10 with label12;
    }

    public com.android.server.SystemService startService(java.lang.Class)
    {
        com.android.server.SystemServiceManager r0;
        java.lang.String r1, $r4, $r7, $r13, $r15, $r26, $r31, $r36, $r41;
        boolean z0;
        java.lang.Class $r8, $r12, r42;
        java.lang.Class[] $r16;
        java.lang.reflect.Constructor $r17;
        java.lang.Object[] $r18;
        android.content.Context $r19;
        java.lang.Object $r20;
        java.lang.Throwable $r21, $r22, $r27, $r32, $r37;
        java.lang.StringBuilder r43, r44, r48, r51, r54, r57, r59;
        com.android.server.SystemService r45;
        java.lang.RuntimeException r47, r50, r53, r56, r58;

        r0 := @this: com.android.server.SystemServiceManager;

        r42 := @parameter0: java.lang.Class;

     label01:
        r1 = virtualinvoke r42.<java.lang.Class: java.lang.String getName()>();

        r43 = new java.lang.StringBuilder;

        specialinvoke r43.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Starting ");

        virtualinvoke r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r4 = virtualinvoke r43.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SystemServiceManager", $r4);

        r44 = new java.lang.StringBuilder;

        specialinvoke r44.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("StartService ");

        virtualinvoke r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke r44.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.os.Trace: void traceBegin(long,java.lang.String)>(524288L, $r7);

        $r8 = class "Lcom/android/server/SystemService;";

        z0 = virtualinvoke $r8.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r42);

     label02:
        if z0 == 0 goto label14;

     label03:
        $r16 = newarray (java.lang.Class)[1];

        $r16[0] = class "Landroid/content/Context;";

        $r17 = virtualinvoke r42.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r16);

        $r18 = newarray (java.lang.Object)[1];

        $r19 = r0.<com.android.server.SystemServiceManager: android.content.Context mContext>;

        $r18[0] = $r19;

        $r20 = virtualinvoke $r17.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r18);

        r45 = (com.android.server.SystemService) $r20;

     label04:
        virtualinvoke r0.<com.android.server.SystemServiceManager: void startService(com.android.server.SystemService)>(r45);

     label05:
        staticinvoke <android.os.Trace: void traceEnd(long)>(524288L);

        return r45;

     label06:
        $r22 := @caughtexception;

     label07:
        r47 = new java.lang.RuntimeException;

        r48 = new java.lang.StringBuilder;

        specialinvoke r48.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to create service ");

        virtualinvoke r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": service constructor threw an exception");

        $r26 = virtualinvoke r48.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r47.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r26, $r22);

        throw r47;

     label08:
        $r32 := @caughtexception;

     label09:
        r50 = new java.lang.RuntimeException;

        r51 = new java.lang.StringBuilder;

        specialinvoke r51.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to create service ");

        virtualinvoke r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": service must have a public constructor with a Context argument");

        $r36 = virtualinvoke r51.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r50.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r36, $r32);

        throw r50;

     label10:
        $r27 := @caughtexception;

     label11:
        r53 = new java.lang.RuntimeException;

        r54 = new java.lang.StringBuilder;

        specialinvoke r54.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to create service ");

        virtualinvoke r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": service must have a public constructor with a Context argument");

        $r31 = virtualinvoke r54.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r53.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r31, $r27);

        throw r53;

     label12:
        $r37 := @caughtexception;

     label13:
        r56 = new java.lang.RuntimeException;

        r57 = new java.lang.StringBuilder;

        specialinvoke r57.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to create service ");

        virtualinvoke r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": service could not be instantiated");

        $r41 = virtualinvoke r57.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r56.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r41, $r37);

        throw r56;

     label14:
        r58 = new java.lang.RuntimeException;

        r59 = new java.lang.StringBuilder;

        specialinvoke r59.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to create ");

        virtualinvoke r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": service must extend ");

        $r12 = class "Lcom/android/server/SystemService;";

        $r13 = virtualinvoke $r12.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke r59.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r58.<java.lang.RuntimeException: void <init>(java.lang.String)>($r15);

        throw r58;

     label15:
        $r21 := @caughtexception;

        staticinvoke <android.os.Trace: void traceEnd(long)>(524288L);

        throw $r21;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.InstantiationException from label03 to label04 with label12;
        catch java.lang.IllegalAccessException from label03 to label04 with label10;
        catch java.lang.NoSuchMethodException from label03 to label04 with label08;
        catch java.lang.reflect.InvocationTargetException from label03 to label04 with label06;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Throwable from label04 to label05 with label15;
        catch java.lang.Throwable from label07 to label08 with label15;
        catch java.lang.Throwable from label09 to label10 with label15;
        catch java.lang.Throwable from label11 to label12 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label14 to label15 with label15;
    }

    public com.android.server.SystemService startService(java.lang.String)
    {
        com.android.server.SystemServiceManager r0;
        java.lang.String r1;
        java.lang.Class $r2, $r4;
        java.lang.ClassLoader $r3;
        com.android.server.SystemService $r5;

        r0 := @this: com.android.server.SystemServiceManager;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r4 = staticinvoke <com.android.server.SystemServiceManager: java.lang.Class loadClassFromLoader(java.lang.String,java.lang.ClassLoader)>(r1, $r3);

        $r5 = virtualinvoke r0.<com.android.server.SystemServiceManager: com.android.server.SystemService startService(java.lang.Class)>($r4);

        return $r5;
    }

    public void startService(com.android.server.SystemService)
    {
        com.android.server.SystemServiceManager r0;
        com.android.server.SystemService r1;
        long l0, $l1, $l2;
        java.util.ArrayList $r4;
        java.lang.RuntimeException $r5, $r12;
        java.lang.StringBuilder $r6;
        java.lang.Class $r8;
        java.lang.String $r9, $r13;

        r0 := @this: com.android.server.SystemServiceManager;

        r1 := @parameter0: com.android.server.SystemService;

        $r4 = r0.<com.android.server.SystemServiceManager: java.util.ArrayList mServices>;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

     label1:
        virtualinvoke r1.<com.android.server.SystemService: void onStart()>();

     label2:
        $l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l2 = $l1 - l0;

        specialinvoke r0.<com.android.server.SystemServiceManager: void warnIfTooLong(long,com.android.server.SystemService,java.lang.String)>($l2, r1, "onStart");

        return;

     label3:
        $r5 := @caughtexception;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to start service ");

        $r8 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": onStart threw an exception");

        $r12 = new java.lang.RuntimeException;

        $r13 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r13, $r5);

        throw $r12;

        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public com.android.server.SystemService startServiceFromJar(java.lang.String, java.lang.String)
    {
        com.android.server.SystemServiceManager r0;
        java.lang.String r1, r2;
        dalvik.system.PathClassLoader r3, r13, r14;
        android.util.ArrayMap $r4, $r11;
        java.lang.Object $r5;
        java.lang.Class $r6, $r9;
        com.android.server.SystemService $r7;
        java.lang.ClassLoader $r10, r15;

        r0 := @this: com.android.server.SystemServiceManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r4 = r0.<com.android.server.SystemServiceManager: android.util.ArrayMap mLoadedPaths>;

        $r5 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r2);

        r3 = (dalvik.system.PathClassLoader) $r5;

        r13 = r3;

        if r3 != null goto label1;

        r14 = new dalvik.system.PathClassLoader;

        $r9 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        specialinvoke r14.<dalvik.system.PathClassLoader: void <init>(java.lang.String,java.lang.ClassLoader)>(r2, $r10);

        r13 = r14;

        $r11 = r0.<com.android.server.SystemServiceManager: android.util.ArrayMap mLoadedPaths>;

        virtualinvoke $r11.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r14);

     label1:
        r15 = (java.lang.ClassLoader) r13;

        $r6 = staticinvoke <com.android.server.SystemServiceManager: java.lang.Class loadClassFromLoader(java.lang.String,java.lang.ClassLoader)>(r1, r15);

        $r7 = virtualinvoke r0.<com.android.server.SystemServiceManager: com.android.server.SystemService startService(java.lang.Class)>($r6);

        return $r7;
    }

    public void startUser(com.android.server.utils.TimingsTraceAndSlog, int)
    {
        com.android.server.SystemServiceManager r0;
        com.android.server.utils.TimingsTraceAndSlog r1;
        int i0;

        r0 := @this: com.android.server.SystemServiceManager;

        r1 := @parameter0: com.android.server.utils.TimingsTraceAndSlog;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.SystemServiceManager: void onUser(com.android.server.utils.TimingsTraceAndSlog,java.lang.String,int)>(r1, "Start", i0);

        return;
    }

    public void stopUser(int)
    {
        com.android.server.SystemServiceManager r0;
        int i0;

        r0 := @this: com.android.server.SystemServiceManager;

        i0 := @parameter0: int;

        specialinvoke r0.<com.android.server.SystemServiceManager: void onUser(java.lang.String,int)>("Stop", i0);

        return;
    }

    public void switchUser(int, int)
    {
        com.android.server.SystemServiceManager r0;
        int i0, i1;
        com.android.server.utils.TimingsTraceAndSlog $r1;

        r0 := @this: com.android.server.SystemServiceManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = staticinvoke <com.android.server.utils.TimingsTraceAndSlog: com.android.server.utils.TimingsTraceAndSlog newAsyncLog()>();

        specialinvoke r0.<com.android.server.SystemServiceManager: void onUser(com.android.server.utils.TimingsTraceAndSlog,java.lang.String,int,int)>($r1, "Switch", i1, i0);

        return;
    }

    public void unlockUser(int)
    {
        com.android.server.SystemServiceManager r0;
        int i0;

        r0 := @this: com.android.server.SystemServiceManager;

        i0 := @parameter0: int;

        specialinvoke r0.<com.android.server.SystemServiceManager: void onUser(java.lang.String,int)>("Unlocking", i0);

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.SystemServiceManager: java.lang.String UNLOCKING> = "Unlocking";

        <com.android.server.SystemServiceManager: java.lang.String UNLOCKED> = "Unlocked";

        <com.android.server.SystemServiceManager: java.lang.String TAG> = "SystemServiceManager";

        <com.android.server.SystemServiceManager: java.lang.String SWITCH> = "Switch";

        <com.android.server.SystemServiceManager: java.lang.String STOP> = "Stop";

        <com.android.server.SystemServiceManager: java.lang.String START> = "Start";

        <com.android.server.SystemServiceManager: int SERVICE_CALL_WARN_TIME_MS> = 50;

        <com.android.server.SystemServiceManager: boolean DEBUG> = 0;

        <com.android.server.SystemServiceManager: java.lang.String CLEANUP> = "Cleanup";

        return;
    }
}
