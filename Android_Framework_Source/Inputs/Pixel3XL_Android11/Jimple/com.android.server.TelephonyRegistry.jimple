public class com.android.server.TelephonyRegistry extends com.android.internal.telephony.ITelephonyRegistry$Stub
{
    private static final java.lang.String ACTION_ANY_DATA_CONNECTION_STATE_CHANGED;
    public static final java.lang.String ACTION_SIGNAL_STRENGTH_CHANGED;
    private static final java.lang.String ACTION_SUBSCRIPTION_PHONE_STATE_CHANGED;
    private static final boolean DBG;
    private static final boolean DBG_LOC;
    static final int ENFORCE_COARSE_LOCATION_PERMISSION_MASK;
    static final int ENFORCE_FINE_LOCATION_PERMISSION_MASK;
    static final int ENFORCE_PHONE_STATE_PERMISSION_MASK;
    static final int ENFORCE_PRECISE_PHONE_STATE_PERMISSION_MASK;
    private static final int MSG_UPDATE_DEFAULT_SUB;
    private static final int MSG_USER_SWITCHED;
    private static final java.lang.String PHONE_CONSTANTS_DATA_APN_KEY;
    private static final java.lang.String PHONE_CONSTANTS_DATA_APN_TYPE_KEY;
    private static final java.lang.String PHONE_CONSTANTS_SLOT_KEY;
    private static final java.lang.String PHONE_CONSTANTS_STATE_KEY;
    private static final java.lang.String PHONE_CONSTANTS_SUBSCRIPTION_KEY;
    static final int READ_ACTIVE_EMERGENCY_SESSION_PERMISSION_MASK;
    static final int READ_PRIVILEGED_PHONE_STATE_PERMISSION_MASK;
    private static final java.lang.String TAG;
    private static final boolean VDBG;
    private int mActiveDataSubId;
    private final android.app.AppOpsManager mAppOps;
    private int[] mBackgroundCallState;
    private java.util.List mBarringInfo;
    private final com.android.internal.app.IBatteryStats mBatteryStats;
    private final android.content.BroadcastReceiver mBroadcastReceiver;
    private android.telephony.CallAttributes[] mCallAttributes;
    private int[] mCallDisconnectCause;
    private boolean[] mCallForwarding;
    private java.lang.String[] mCallIncomingNumber;
    private int[] mCallNetworkType;
    private int[] mCallPreciseDisconnectCause;
    private android.telephony.CallQuality[] mCallQuality;
    private int[] mCallState;
    private boolean mCarrierNetworkChangeState;
    private android.telephony.CellIdentity[] mCellIdentity;
    private java.util.ArrayList mCellInfo;
    private com.android.server.TelephonyRegistry$ConfigurationProvider mConfigurationProvider;
    private final android.content.Context mContext;
    private int[] mDataActivationState;
    private int[] mDataActivity;
    private int[] mDataConnectionNetworkType;
    private int[] mDataConnectionState;
    private int mDefaultPhoneId;
    private int mDefaultSubId;
    private java.util.Map mEmergencyNumberList;
    private int[] mForegroundCallState;
    private final android.os.Handler mHandler;
    private boolean mHasNotifyOpportunisticSubscriptionInfoChangedOccurred;
    private boolean mHasNotifySubscriptionInfoChangedOccurred;
    private java.util.List mImsReasonInfo;
    private final android.util.LocalLog mListenLog;
    private final android.util.LocalLog mLocalLog;
    private boolean[] mMessageWaiting;
    private int mNumPhones;
    private android.telephony.emergency.EmergencyNumber[] mOutgoingCallEmergencyNumber;
    private android.telephony.emergency.EmergencyNumber[] mOutgoingSmsEmergencyNumber;
    private android.telephony.PhoneCapability mPhoneCapability;
    private android.telephony.PreciseCallState[] mPreciseCallState;
    private java.util.List mPreciseDataConnectionStates;
    private int mRadioPowerState;
    private final java.util.ArrayList mRecords;
    private final java.util.ArrayList mRemoveList;
    private int[] mRingingCallState;
    private android.telephony.ServiceState[] mServiceState;
    private android.telephony.SignalStrength[] mSignalStrength;
    private int[] mSrvccState;
    private android.telephony.TelephonyDisplayInfo[] mTelephonyDisplayInfos;
    private boolean[] mUserMobileDataState;
    private int[] mVoiceActivationState;

    public void <init>(android.content.Context, com.android.server.TelephonyRegistry$ConfigurationProvider)
    {
        com.android.server.TelephonyRegistry r0;
        android.content.Context r1, $r44;
        com.android.server.TelephonyRegistry$ConfigurationProvider r2;
        int i0, i1;
        java.util.ArrayList $r3, $r4, $r7, $r36, $r37, $r38, $r42, $r60;
        android.util.LocalLog $r5, $r6;
        com.android.server.TelephonyRegistry$1 $r8;
        com.android.server.TelephonyRegistry$2 $r9;
        com.android.internal.app.IBatteryStats $r11;
        android.telephony.TelephonyManager $r12;
        int[] $r13, $r14, $r15, $r16, $r19, $r20, $r26, $r28, $r29, $r30, $r31, $r32, $r34, $r47, $r48, $r49, $r50, $r51, $r62, $r63, $r64, $r71, $r74, $r75, $r76;
        java.lang.String[] $r17, $r52;
        android.telephony.ServiceState[] $r18, $r54;
        boolean[] $r21, $r23, $r24, $r56, $r57, $r58;
        android.telephony.SignalStrength[] $r22, $r55;
        android.telephony.CellIdentity[] $r25, $r59;
        android.telephony.PreciseCallState[] $r27, $r72;
        android.telephony.CallQuality[] $r33, $r65;
        android.telephony.CallAttributes[] $r35, $r68;
        java.util.HashMap $r39, $r77;
        android.telephony.emergency.EmergencyNumber[] $r40, $r41;
        android.telephony.TelephonyDisplayInfo[] $r43, $r81;
        java.lang.Object $r45;
        android.app.AppOpsManager $r46;
        android.telephony.ServiceState $r53;
        java.util.List $r61, $r78, $r80;
        android.telephony.CallQuality $r66, $r70;
        android.telephony.CallAttributes $r67;
        android.telephony.PreciseCallState $r69, $r73;
        android.telephony.BarringInfo $r79;

        r0 := @this: com.android.server.TelephonyRegistry;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.server.TelephonyRegistry$ConfigurationProvider;

        specialinvoke r0.<com.android.internal.telephony.ITelephonyRegistry$Stub: void <init>()>();

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRemoveList> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords> = $r4;

        r0.<com.android.server.TelephonyRegistry: boolean mHasNotifySubscriptionInfoChangedOccurred> = 0;

        r0.<com.android.server.TelephonyRegistry: boolean mHasNotifyOpportunisticSubscriptionInfoChangedOccurred> = 0;

        r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mCellInfo> = null;

        r0.<com.android.server.TelephonyRegistry: int mDefaultSubId> = -1;

        r0.<com.android.server.TelephonyRegistry: int mDefaultPhoneId> = -1;

        r0.<com.android.server.TelephonyRegistry: java.util.List mImsReasonInfo> = null;

        r0.<com.android.server.TelephonyRegistry: java.util.List mBarringInfo> = null;

        r0.<com.android.server.TelephonyRegistry: boolean mCarrierNetworkChangeState> = 0;

        r0.<com.android.server.TelephonyRegistry: android.telephony.PhoneCapability mPhoneCapability> = null;

        r0.<com.android.server.TelephonyRegistry: int mActiveDataSubId> = -1;

        r0.<com.android.server.TelephonyRegistry: int mRadioPowerState> = 2;

        $r5 = new android.util.LocalLog;

        specialinvoke $r5.<android.util.LocalLog: void <init>(int)>(100);

        r0.<com.android.server.TelephonyRegistry: android.util.LocalLog mLocalLog> = $r5;

        $r6 = new android.util.LocalLog;

        specialinvoke $r6.<android.util.LocalLog: void <init>(int)>(100);

        r0.<com.android.server.TelephonyRegistry: android.util.LocalLog mListenLog> = $r6;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.TelephonyRegistry: java.util.List mPreciseDataConnectionStates> = $r7;

        $r8 = new com.android.server.TelephonyRegistry$1;

        specialinvoke $r8.<com.android.server.TelephonyRegistry$1: void <init>(com.android.server.TelephonyRegistry)>(r0);

        r0.<com.android.server.TelephonyRegistry: android.os.Handler mHandler> = $r8;

        $r9 = new com.android.server.TelephonyRegistry$2;

        specialinvoke $r9.<com.android.server.TelephonyRegistry$2: void <init>(com.android.server.TelephonyRegistry)>(r0);

        r0.<com.android.server.TelephonyRegistry: android.content.BroadcastReceiver mBroadcastReceiver> = $r9;

        staticinvoke <android.telephony.CellLocation: android.telephony.CellLocation getEmpty()>();

        r0.<com.android.server.TelephonyRegistry: android.content.Context mContext> = r1;

        r0.<com.android.server.TelephonyRegistry: com.android.server.TelephonyRegistry$ConfigurationProvider mConfigurationProvider> = r2;

        $r11 = staticinvoke <com.android.server.am.BatteryStatsService: com.android.internal.app.IBatteryStats getService()>();

        r0.<com.android.server.TelephonyRegistry: com.android.internal.app.IBatteryStats mBatteryStats> = $r11;

        $r12 = specialinvoke r0.<com.android.server.TelephonyRegistry: android.telephony.TelephonyManager getTelephonyManager()>();

        i0 = virtualinvoke $r12.<android.telephony.TelephonyManager: int getActiveModemCount()>();

        r0.<com.android.server.TelephonyRegistry: int mNumPhones> = i0;

        $r13 = newarray (int)[i0];

        r0.<com.android.server.TelephonyRegistry: int[] mCallState> = $r13;

        $r14 = newarray (int)[i0];

        r0.<com.android.server.TelephonyRegistry: int[] mDataActivity> = $r14;

        $r15 = newarray (int)[i0];

        r0.<com.android.server.TelephonyRegistry: int[] mDataConnectionState> = $r15;

        $r16 = newarray (int)[i0];

        r0.<com.android.server.TelephonyRegistry: int[] mDataConnectionNetworkType> = $r16;

        $r17 = newarray (java.lang.String)[i0];

        r0.<com.android.server.TelephonyRegistry: java.lang.String[] mCallIncomingNumber> = $r17;

        $r18 = newarray (android.telephony.ServiceState)[i0];

        r0.<com.android.server.TelephonyRegistry: android.telephony.ServiceState[] mServiceState> = $r18;

        $r19 = newarray (int)[i0];

        r0.<com.android.server.TelephonyRegistry: int[] mVoiceActivationState> = $r19;

        $r20 = newarray (int)[i0];

        r0.<com.android.server.TelephonyRegistry: int[] mDataActivationState> = $r20;

        $r21 = newarray (boolean)[i0];

        r0.<com.android.server.TelephonyRegistry: boolean[] mUserMobileDataState> = $r21;

        $r22 = newarray (android.telephony.SignalStrength)[i0];

        r0.<com.android.server.TelephonyRegistry: android.telephony.SignalStrength[] mSignalStrength> = $r22;

        $r23 = newarray (boolean)[i0];

        r0.<com.android.server.TelephonyRegistry: boolean[] mMessageWaiting> = $r23;

        $r24 = newarray (boolean)[i0];

        r0.<com.android.server.TelephonyRegistry: boolean[] mCallForwarding> = $r24;

        $r25 = newarray (android.telephony.CellIdentity)[i0];

        r0.<com.android.server.TelephonyRegistry: android.telephony.CellIdentity[] mCellIdentity> = $r25;

        $r26 = newarray (int)[i0];

        r0.<com.android.server.TelephonyRegistry: int[] mSrvccState> = $r26;

        $r27 = newarray (android.telephony.PreciseCallState)[i0];

        r0.<com.android.server.TelephonyRegistry: android.telephony.PreciseCallState[] mPreciseCallState> = $r27;

        $r28 = newarray (int)[i0];

        r0.<com.android.server.TelephonyRegistry: int[] mForegroundCallState> = $r28;

        $r29 = newarray (int)[i0];

        r0.<com.android.server.TelephonyRegistry: int[] mBackgroundCallState> = $r29;

        $r30 = newarray (int)[i0];

        r0.<com.android.server.TelephonyRegistry: int[] mRingingCallState> = $r30;

        $r31 = newarray (int)[i0];

        r0.<com.android.server.TelephonyRegistry: int[] mCallDisconnectCause> = $r31;

        $r32 = newarray (int)[i0];

        r0.<com.android.server.TelephonyRegistry: int[] mCallPreciseDisconnectCause> = $r32;

        $r33 = newarray (android.telephony.CallQuality)[i0];

        r0.<com.android.server.TelephonyRegistry: android.telephony.CallQuality[] mCallQuality> = $r33;

        $r34 = newarray (int)[i0];

        r0.<com.android.server.TelephonyRegistry: int[] mCallNetworkType> = $r34;

        $r35 = newarray (android.telephony.CallAttributes)[i0];

        r0.<com.android.server.TelephonyRegistry: android.telephony.CallAttributes[] mCallAttributes> = $r35;

        $r36 = new java.util.ArrayList;

        specialinvoke $r36.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.TelephonyRegistry: java.util.List mPreciseDataConnectionStates> = $r36;

        $r37 = new java.util.ArrayList;

        specialinvoke $r37.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mCellInfo> = $r37;

        $r38 = new java.util.ArrayList;

        specialinvoke $r38.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.TelephonyRegistry: java.util.List mImsReasonInfo> = $r38;

        $r39 = new java.util.HashMap;

        specialinvoke $r39.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.TelephonyRegistry: java.util.Map mEmergencyNumberList> = $r39;

        $r40 = newarray (android.telephony.emergency.EmergencyNumber)[i0];

        r0.<com.android.server.TelephonyRegistry: android.telephony.emergency.EmergencyNumber[] mOutgoingCallEmergencyNumber> = $r40;

        $r41 = newarray (android.telephony.emergency.EmergencyNumber)[i0];

        r0.<com.android.server.TelephonyRegistry: android.telephony.emergency.EmergencyNumber[] mOutgoingSmsEmergencyNumber> = $r41;

        $r42 = new java.util.ArrayList;

        specialinvoke $r42.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.TelephonyRegistry: java.util.List mBarringInfo> = $r42;

        $r43 = newarray (android.telephony.TelephonyDisplayInfo)[i0];

        r0.<com.android.server.TelephonyRegistry: android.telephony.TelephonyDisplayInfo[] mTelephonyDisplayInfos> = $r43;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r47 = r0.<com.android.server.TelephonyRegistry: int[] mCallState>;

        $r47[i1] = 0;

        $r48 = r0.<com.android.server.TelephonyRegistry: int[] mDataActivity>;

        $r48[i1] = 0;

        $r49 = r0.<com.android.server.TelephonyRegistry: int[] mDataConnectionState>;

        $r49[i1] = -1;

        $r50 = r0.<com.android.server.TelephonyRegistry: int[] mVoiceActivationState>;

        $r50[i1] = 0;

        $r51 = r0.<com.android.server.TelephonyRegistry: int[] mDataActivationState>;

        $r51[i1] = 0;

        $r52 = r0.<com.android.server.TelephonyRegistry: java.lang.String[] mCallIncomingNumber>;

        $r52[i1] = "";

        $r54 = r0.<com.android.server.TelephonyRegistry: android.telephony.ServiceState[] mServiceState>;

        $r53 = new android.telephony.ServiceState;

        specialinvoke $r53.<android.telephony.ServiceState: void <init>()>();

        $r54[i1] = $r53;

        $r55 = r0.<com.android.server.TelephonyRegistry: android.telephony.SignalStrength[] mSignalStrength>;

        $r55[i1] = null;

        $r56 = r0.<com.android.server.TelephonyRegistry: boolean[] mUserMobileDataState>;

        $r56[i1] = 0;

        $r57 = r0.<com.android.server.TelephonyRegistry: boolean[] mMessageWaiting>;

        $r57[i1] = 0;

        $r58 = r0.<com.android.server.TelephonyRegistry: boolean[] mCallForwarding>;

        $r58[i1] = 0;

        $r59 = r0.<com.android.server.TelephonyRegistry: android.telephony.CellIdentity[] mCellIdentity>;

        $r59[i1] = null;

        $r60 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mCellInfo>;

        virtualinvoke $r60.<java.util.ArrayList: void add(int,java.lang.Object)>(i1, null);

        $r61 = r0.<com.android.server.TelephonyRegistry: java.util.List mImsReasonInfo>;

        interfaceinvoke $r61.<java.util.List: void add(int,java.lang.Object)>(i1, null);

        $r62 = r0.<com.android.server.TelephonyRegistry: int[] mSrvccState>;

        $r62[i1] = -1;

        $r63 = r0.<com.android.server.TelephonyRegistry: int[] mCallDisconnectCause>;

        $r63[i1] = -1;

        $r64 = r0.<com.android.server.TelephonyRegistry: int[] mCallPreciseDisconnectCause>;

        $r64[i1] = -1;

        $r65 = r0.<com.android.server.TelephonyRegistry: android.telephony.CallQuality[] mCallQuality>;

        $r66 = staticinvoke <com.android.server.TelephonyRegistry: android.telephony.CallQuality createCallQuality()>();

        $r65[i1] = $r66;

        $r68 = r0.<com.android.server.TelephonyRegistry: android.telephony.CallAttributes[] mCallAttributes>;

        $r67 = new android.telephony.CallAttributes;

        $r69 = staticinvoke <com.android.server.TelephonyRegistry: android.telephony.PreciseCallState createPreciseCallState()>();

        $r70 = staticinvoke <com.android.server.TelephonyRegistry: android.telephony.CallQuality createCallQuality()>();

        specialinvoke $r67.<android.telephony.CallAttributes: void <init>(android.telephony.PreciseCallState,int,android.telephony.CallQuality)>($r69, 0, $r70);

        $r68[i1] = $r67;

        $r71 = r0.<com.android.server.TelephonyRegistry: int[] mCallNetworkType>;

        $r71[i1] = 0;

        $r72 = r0.<com.android.server.TelephonyRegistry: android.telephony.PreciseCallState[] mPreciseCallState>;

        $r73 = staticinvoke <com.android.server.TelephonyRegistry: android.telephony.PreciseCallState createPreciseCallState()>();

        $r72[i1] = $r73;

        $r74 = r0.<com.android.server.TelephonyRegistry: int[] mRingingCallState>;

        $r74[i1] = 0;

        $r75 = r0.<com.android.server.TelephonyRegistry: int[] mForegroundCallState>;

        $r75[i1] = 0;

        $r76 = r0.<com.android.server.TelephonyRegistry: int[] mBackgroundCallState>;

        $r76[i1] = 0;

        $r78 = r0.<com.android.server.TelephonyRegistry: java.util.List mPreciseDataConnectionStates>;

        $r77 = new java.util.HashMap;

        specialinvoke $r77.<java.util.HashMap: void <init>()>();

        interfaceinvoke $r78.<java.util.List: boolean add(java.lang.Object)>($r77);

        $r80 = r0.<com.android.server.TelephonyRegistry: java.util.List mBarringInfo>;

        $r79 = new android.telephony.BarringInfo;

        specialinvoke $r79.<android.telephony.BarringInfo: void <init>()>();

        interfaceinvoke $r80.<java.util.List: void add(int,java.lang.Object)>(i1, $r79);

        $r81 = r0.<com.android.server.TelephonyRegistry: android.telephony.TelephonyDisplayInfo[] mTelephonyDisplayInfos>;

        $r81[i1] = null;

        i1 = i1 + 1;

        goto label1;

     label2:
        $r44 = r0.<com.android.server.TelephonyRegistry: android.content.Context mContext>;

        $r45 = virtualinvoke $r44.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/app/AppOpsManager;");

        $r46 = (android.app.AppOpsManager) $r45;

        r0.<com.android.server.TelephonyRegistry: android.app.AppOpsManager mAppOps> = $r46;

        return;
    }

    static java.lang.String access$000(java.lang.String)
    {
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.android.server.TelephonyRegistry: java.lang.String pii(java.lang.String)>(r0);

        return $r1;
    }

    static android.telephony.TelephonyManager access$100(com.android.server.TelephonyRegistry)
    {
        com.android.server.TelephonyRegistry r0;
        android.telephony.TelephonyManager $r1;

        r0 := @parameter0: com.android.server.TelephonyRegistry;

        $r1 = specialinvoke r0.<com.android.server.TelephonyRegistry: android.telephony.TelephonyManager getTelephonyManager()>();

        return $r1;
    }

    static android.os.Handler access$1000(com.android.server.TelephonyRegistry)
    {
        com.android.server.TelephonyRegistry r0;
        android.os.Handler $r1;

        r0 := @parameter0: com.android.server.TelephonyRegistry;

        $r1 = r0.<com.android.server.TelephonyRegistry: android.os.Handler mHandler>;

        return $r1;
    }

    static int access$1100(com.android.server.TelephonyRegistry, int)
    {
        com.android.server.TelephonyRegistry r0;
        int i0, $i1;

        r0 := @parameter0: com.android.server.TelephonyRegistry;

        i0 := @parameter1: int;

        $i1 = specialinvoke r0.<com.android.server.TelephonyRegistry: int getPhoneIdFromSubId(int)>(i0);

        return $i1;
    }

    static boolean access$1200(com.android.server.TelephonyRegistry, int)
    {
        com.android.server.TelephonyRegistry r0;
        int i0;
        boolean $z0;

        r0 := @parameter0: com.android.server.TelephonyRegistry;

        i0 := @parameter1: int;

        $z0 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean validatePhoneId(int)>(i0);

        return $z0;
    }

    static void access$1300(com.android.server.TelephonyRegistry)
    {
        com.android.server.TelephonyRegistry r0;

        r0 := @parameter0: com.android.server.TelephonyRegistry;

        specialinvoke r0.<com.android.server.TelephonyRegistry: void onMultiSimConfigChanged()>();

        return;
    }

    static android.telephony.CellIdentity[] access$200(com.android.server.TelephonyRegistry)
    {
        com.android.server.TelephonyRegistry r0;
        android.telephony.CellIdentity[] $r1;

        r0 := @parameter0: com.android.server.TelephonyRegistry;

        $r1 = r0.<com.android.server.TelephonyRegistry: android.telephony.CellIdentity[] mCellIdentity>;

        return $r1;
    }

    static java.util.ArrayList access$300(com.android.server.TelephonyRegistry)
    {
        com.android.server.TelephonyRegistry r0;
        java.util.ArrayList $r1;

        r0 := @parameter0: com.android.server.TelephonyRegistry;

        $r1 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        return $r1;
    }

    static void access$400(com.android.server.TelephonyRegistry, com.android.server.TelephonyRegistry$Record, int)
    {
        com.android.server.TelephonyRegistry r0;
        com.android.server.TelephonyRegistry$Record r1;
        int i0;

        r0 := @parameter0: com.android.server.TelephonyRegistry;

        r1 := @parameter1: com.android.server.TelephonyRegistry$Record;

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.server.TelephonyRegistry: void checkPossibleMissNotify(com.android.server.TelephonyRegistry$Record,int)>(r1, i0);

        return;
    }

    static void access$500(com.android.server.TelephonyRegistry)
    {
        com.android.server.TelephonyRegistry r0;

        r0 := @parameter0: com.android.server.TelephonyRegistry;

        specialinvoke r0.<com.android.server.TelephonyRegistry: void handleRemoveListLocked()>();

        return;
    }

    static int access$600(com.android.server.TelephonyRegistry)
    {
        com.android.server.TelephonyRegistry r0;
        int $i0;

        r0 := @parameter0: com.android.server.TelephonyRegistry;

        $i0 = r0.<com.android.server.TelephonyRegistry: int mDefaultSubId>;

        return $i0;
    }

    static int access$602(com.android.server.TelephonyRegistry, int)
    {
        com.android.server.TelephonyRegistry r0;
        int i0;

        r0 := @parameter0: com.android.server.TelephonyRegistry;

        i0 := @parameter1: int;

        r0.<com.android.server.TelephonyRegistry: int mDefaultSubId> = i0;

        return i0;
    }

    static int access$700(com.android.server.TelephonyRegistry)
    {
        com.android.server.TelephonyRegistry r0;
        int $i0;

        r0 := @parameter0: com.android.server.TelephonyRegistry;

        $i0 = r0.<com.android.server.TelephonyRegistry: int mDefaultPhoneId>;

        return $i0;
    }

    static int access$702(com.android.server.TelephonyRegistry, int)
    {
        com.android.server.TelephonyRegistry r0;
        int i0;

        r0 := @parameter0: com.android.server.TelephonyRegistry;

        i0 := @parameter1: int;

        r0.<com.android.server.TelephonyRegistry: int mDefaultPhoneId> = i0;

        return i0;
    }

    static android.util.LocalLog access$800(com.android.server.TelephonyRegistry)
    {
        com.android.server.TelephonyRegistry r0;
        android.util.LocalLog $r1;

        r0 := @parameter0: com.android.server.TelephonyRegistry;

        $r1 = r0.<com.android.server.TelephonyRegistry: android.util.LocalLog mLocalLog>;

        return $r1;
    }

    static void access$900(com.android.server.TelephonyRegistry, android.os.IBinder)
    {
        com.android.server.TelephonyRegistry r0;
        android.os.IBinder r1;

        r0 := @parameter0: com.android.server.TelephonyRegistry;

        r1 := @parameter1: android.os.IBinder;

        specialinvoke r0.<com.android.server.TelephonyRegistry: void remove(android.os.IBinder)>(r1);

        return;
    }

    private com.android.server.TelephonyRegistry$Record add(android.os.IBinder, int, int, boolean)
    {
        com.android.server.TelephonyRegistry r0;
        int i0, i1, i2, $i4, i5, i6, i7, i8;
        boolean z0, $z2;
        java.util.ArrayList r1, $r3, $r14, $r27;
        com.android.server.TelephonyRegistry$TelephonyRegistryDeathRecipient r2, $r26;
        com.android.server.TelephonyRegistry$ConfigurationProvider $r4, $r13;
        java.lang.String $r9, r22;
        java.lang.Object $r15;
        android.os.IBinder $r16, r19;
        android.os.RemoteException $r17;
        java.lang.Throwable $r18;
        com.android.server.TelephonyRegistry$Record r20, r25;
        java.lang.StringBuilder r21, r24;
        java.lang.IllegalStateException r23;

        r0 := @this: com.android.server.TelephonyRegistry;

        r19 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        r1 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        entermonitor r1;

     label01:
        $r3 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        i2 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

     label02:
        i5 = 0;

        i6 = 0;

     label03:
        if i6 >= i2 goto label10;

     label04:
        $r14 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        $r15 = virtualinvoke $r14.<java.util.ArrayList: java.lang.Object get(int)>(i6);

        r20 = (com.android.server.TelephonyRegistry$Record) $r15;

        $r16 = r20.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        if r19 != $r16 goto label06;

        exitmonitor r1;

     label05:
        return r20;

     label06:
        i7 = i5;

     label07:
        $i4 = r20.<com.android.server.TelephonyRegistry$Record: int callerPid>;

        if $i4 != i1 goto label09;

     label08:
        i7 = i5 + 1;

     label09:
        i6 = i6 + 1;

        i5 = i7;

        goto label03;

     label10:
        $r4 = r0.<com.android.server.TelephonyRegistry: com.android.server.TelephonyRegistry$ConfigurationProvider mConfigurationProvider>;

        i8 = virtualinvoke $r4.<com.android.server.TelephonyRegistry$ConfigurationProvider: int getRegistrationLimit()>();

     label11:
        if z0 == 0 goto label15;

        if i8 < 1 goto label15;

        if i5 < i8 goto label15;

     label12:
        r21 = new java.lang.StringBuilder;

        specialinvoke r21.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Pid ");

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has exceeded the number of permissible registered listeners. Ignoring request to add.");

        r22 = virtualinvoke r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.TelephonyRegistry: void loge(java.lang.String)>(r22);

        $r13 = r0.<com.android.server.TelephonyRegistry: com.android.server.TelephonyRegistry$ConfigurationProvider mConfigurationProvider>;

        $z2 = virtualinvoke $r13.<com.android.server.TelephonyRegistry$ConfigurationProvider: boolean isRegistrationLimitEnabledInPlatformCompat(int)>(i0);

        if $z2 != 0 goto label14;

     label13:
        goto label18;

     label14:
        r23 = new java.lang.IllegalStateException;

        specialinvoke r23.<java.lang.IllegalStateException: void <init>(java.lang.String)>(r22);

        throw r23;

     label15:
        if z0 == 0 goto label18;

        if i5 < 25 goto label18;

     label16:
        r24 = new java.lang.StringBuilder;

        specialinvoke r24.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Pid ");

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has exceeded half the number of permissible registered listeners. Now at ");

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        $r9 = virtualinvoke r24.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int w(java.lang.String,java.lang.String)>("TelephonyRegistry", $r9);

     label17:
        goto label18;

     label18:
        r25 = new com.android.server.TelephonyRegistry$Record;

        specialinvoke r25.<com.android.server.TelephonyRegistry$Record: void <init>(com.android.server.TelephonyRegistry$1)>(null);

        r25.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder> = r19;

        r2 = new com.android.server.TelephonyRegistry$TelephonyRegistryDeathRecipient;

        specialinvoke r2.<com.android.server.TelephonyRegistry$TelephonyRegistryDeathRecipient: void <init>(com.android.server.TelephonyRegistry,android.os.IBinder)>(r0, r19);

        r25.<com.android.server.TelephonyRegistry$Record: com.android.server.TelephonyRegistry$TelephonyRegistryDeathRecipient deathRecipient> = r2;

     label19:
        $r26 = r25.<com.android.server.TelephonyRegistry$Record: com.android.server.TelephonyRegistry$TelephonyRegistryDeathRecipient deathRecipient>;

        interfaceinvoke r19.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>($r26, 0);

     label20:
        $r27 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        virtualinvoke $r27.<java.util.ArrayList: boolean add(java.lang.Object)>(r25);

     label21:
        exitmonitor r1;

     label22:
        return r25;

     label23:
        $r17 := @caughtexception;

     label24:
        exitmonitor r1;

     label25:
        return null;

     label26:
        $r18 := @caughtexception;

     label27:
        exitmonitor r1;

     label28:
        throw $r18;

        catch java.lang.Throwable from label01 to label02 with label26;
        catch java.lang.Throwable from label04 to label05 with label26;
        catch java.lang.Throwable from label07 to label08 with label26;
        catch java.lang.Throwable from label10 to label11 with label26;
        catch java.lang.Throwable from label12 to label13 with label26;
        catch java.lang.Throwable from label14 to label15 with label26;
        catch java.lang.Throwable from label16 to label17 with label26;
        catch java.lang.Throwable from label18 to label19 with label26;
        catch android.os.RemoteException from label19 to label20 with label23;
        catch java.lang.Throwable from label19 to label20 with label26;
        catch java.lang.Throwable from label20 to label21 with label26;
        catch java.lang.Throwable from label21 to label22 with label26;
        catch java.lang.Throwable from label24 to label25 with label26;
        catch java.lang.Throwable from label27 to label28 with label26;
    }

    private void broadcastCallStateChanged(int, java.lang.String, int, int)
    {
        com.android.server.TelephonyRegistry r0;
        int i0, i1, i2;
        long l3;
        com.android.internal.app.IBatteryStats $r2, $r19;
        android.content.Intent $r5, $r25;
        android.os.UserHandle $r7, $r9, $r12;
        android.content.Context $r8, $r10, $r13;
        java.lang.String[] $r11;
        java.lang.Throwable $r20;
        android.os.RemoteException $r21;
        java.lang.String r22, $r26;

        r0 := @this: com.android.server.TelephonyRegistry;

        i0 := @parameter0: int;

        r22 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        l3 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        if i0 != 0 goto label3;

     label1:
        $r19 = r0.<com.android.server.TelephonyRegistry: com.android.internal.app.IBatteryStats mBatteryStats>;

        interfaceinvoke $r19.<com.android.internal.app.IBatteryStats: void notePhoneOff()>();

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int)>(95, 0);

     label2:
        goto label7;

     label3:
        $r2 = r0.<com.android.server.TelephonyRegistry: com.android.internal.app.IBatteryStats mBatteryStats>;

        interfaceinvoke $r2.<com.android.internal.app.IBatteryStats: void notePhoneOn()>();

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int)>(95, 1);

     label4:
        goto label7;

     label5:
        $r20 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

        throw $r20;

     label6:
        $r21 := @caughtexception;

     label7:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

        $r25 = new android.content.Intent;

        specialinvoke $r25.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.PHONE_STATE");

        $r26 = staticinvoke <com.android.server.TelephonyRegistry: java.lang.String callStateToString(int)>(i0);

        virtualinvoke $r25.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("state", $r26);

        if i2 == -1 goto label8;

        virtualinvoke $r25.<android.content.Intent: android.content.Intent setAction(java.lang.String)>("android.intent.action.SUBSCRIPTION_PHONE_STATE");

        virtualinvoke $r25.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("subscription", i2);

        virtualinvoke $r25.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.telephony.extra.SUBSCRIPTION_INDEX", i2);

     label8:
        if i1 == -1 goto label9;

        virtualinvoke $r25.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("slot", i1);

        virtualinvoke $r25.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.telephony.extra.SLOT_INDEX", i1);

     label9:
        virtualinvoke $r25.<android.content.Intent: android.content.Intent addFlags(int)>(16777216);

        $r5 = new android.content.Intent;

        specialinvoke $r5.<android.content.Intent: void <init>(android.content.Intent)>($r25);

        virtualinvoke $r5.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("incoming_number", r22);

        $r8 = r0.<com.android.server.TelephonyRegistry: android.content.Context mContext>;

        $r7 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r8.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String)>($r5, $r7, "android.permission.READ_PRIVILEGED_PHONE_STATE");

        $r10 = r0.<com.android.server.TelephonyRegistry: android.content.Context mContext>;

        $r9 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r10.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String,int)>($r25, $r9, "android.permission.READ_PHONE_STATE", 51);

        $r13 = r0.<com.android.server.TelephonyRegistry: android.content.Context mContext>;

        $r12 = <android.os.UserHandle: android.os.UserHandle ALL>;

        $r11 = newarray (java.lang.String)[2];

        $r11[0] = "android.permission.READ_PHONE_STATE";

        $r11[1] = "android.permission.READ_CALL_LOG";

        virtualinvoke $r13.<android.content.Context: void sendBroadcastAsUserMultiplePermissions(android.content.Intent,android.os.UserHandle,java.lang.String[])>($r5, $r12, $r11);

        return;

        catch android.os.RemoteException from label1 to label2 with label6;
        catch java.lang.Throwable from label1 to label2 with label5;
        catch android.os.RemoteException from label3 to label4 with label6;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    private void broadcastDataConnectionStateChanged(int, java.lang.String, int, int)
    {
        com.android.server.TelephonyRegistry r0;
        int i0, i1, i2;
        java.lang.String r1, $r4, $r7;
        android.content.Intent $r3;
        android.os.UserHandle $r10;
        android.content.Context $r11;

        r0 := @this: com.android.server.TelephonyRegistry;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.ANY_DATA_STATE");

        $r4 = staticinvoke <com.android.server.TelephonyRegistry: java.lang.String dataStateToString(int)>(i0);

        virtualinvoke $r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("state", $r4);

        virtualinvoke $r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("apn", r1);

        $r7 = staticinvoke <android.telephony.data.ApnSetting: java.lang.String getApnTypesStringFromBitmask(int)>(i1);

        virtualinvoke $r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("apnType", $r7);

        virtualinvoke $r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("subscription", i2);

        $r11 = r0.<com.android.server.TelephonyRegistry: android.content.Context mContext>;

        $r10 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r11.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String)>($r3, $r10, "android.permission.READ_PHONE_STATE");

        return;
    }

    private void broadcastServiceStateChanged(android.telephony.ServiceState, int, int)
    {
        com.android.server.TelephonyRegistry r0;
        int i0, i1, $i3;
        long l2;
        com.android.internal.app.IBatteryStats $r2;
        android.content.Intent $r3;
        android.os.Bundle $r5;
        android.os.UserHandle $r11;
        android.content.Context $r12;
        android.os.RemoteException $r13;
        java.lang.Throwable $r14;
        android.telephony.ServiceState r15;

        r0 := @this: com.android.server.TelephonyRegistry;

        r15 := @parameter0: android.telephony.ServiceState;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r2 = r0.<com.android.server.TelephonyRegistry: com.android.internal.app.IBatteryStats mBatteryStats>;

        $i3 = virtualinvoke r15.<android.telephony.ServiceState: int getState()>();

        interfaceinvoke $r2.<com.android.internal.app.IBatteryStats: void notePhoneState(int)>($i3);

     label2:
        goto label5;

     label3:
        $r14 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw $r14;

     label4:
        $r13 := @caughtexception;

     label5:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.SERVICE_STATE");

        virtualinvoke $r3.<android.content.Intent: android.content.Intent addFlags(int)>(16777216);

        $r5 = new android.os.Bundle;

        specialinvoke $r5.<android.os.Bundle: void <init>()>();

        virtualinvoke r15.<android.telephony.ServiceState: void fillInNotifierBundle(android.os.Bundle)>($r5);

        virtualinvoke $r3.<android.content.Intent: android.content.Intent putExtras(android.os.Bundle)>($r5);

        virtualinvoke $r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("subscription", i1);

        virtualinvoke $r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.telephony.extra.SUBSCRIPTION_INDEX", i1);

        virtualinvoke $r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("slot", i0);

        virtualinvoke $r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.telephony.extra.SLOT_INDEX", i0);

        $r12 = r0.<com.android.server.TelephonyRegistry: android.content.Context mContext>;

        $r11 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r12.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String)>($r3, $r11, "android.permission.READ_PHONE_STATE");

        return;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private void broadcastSignalStrengthChanged(android.telephony.SignalStrength, int, int)
    {
        com.android.server.TelephonyRegistry r0;
        int i0, i1;
        long l2;
        com.android.internal.app.IBatteryStats $r2;
        android.content.Intent $r3;
        android.os.Bundle $r4;
        android.os.UserHandle $r8;
        android.content.Context $r9;
        java.lang.Throwable $r10;
        android.os.RemoteException $r11;
        android.telephony.SignalStrength r12;

        r0 := @this: com.android.server.TelephonyRegistry;

        r12 := @parameter0: android.telephony.SignalStrength;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r2 = r0.<com.android.server.TelephonyRegistry: com.android.internal.app.IBatteryStats mBatteryStats>;

        interfaceinvoke $r2.<com.android.internal.app.IBatteryStats: void notePhoneSignalStrength(android.telephony.SignalStrength)>(r12);

     label2:
        goto label5;

     label3:
        $r10 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw $r10;

     label4:
        $r11 := @caughtexception;

     label5:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.SIG_STR");

        $r4 = new android.os.Bundle;

        specialinvoke $r4.<android.os.Bundle: void <init>()>();

        specialinvoke r0.<com.android.server.TelephonyRegistry: void fillInSignalStrengthNotifierBundle(android.telephony.SignalStrength,android.os.Bundle)>(r12, $r4);

        virtualinvoke $r3.<android.content.Intent: android.content.Intent putExtras(android.os.Bundle)>($r4);

        virtualinvoke $r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("subscription", i1);

        virtualinvoke $r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("slot", i0);

        $r9 = r0.<com.android.server.TelephonyRegistry: android.content.Context mContext>;

        $r8 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r9.<android.content.Context: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>($r3, $r8);

        return;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private static java.lang.String callStateToString(int)
    {
        int i0;
        java.lang.String $r0, $r1, $r2;

        i0 := @parameter0: int;

        if i0 == 1 goto label2;

        if i0 == 2 goto label1;

        $r2 = <android.telephony.TelephonyManager: java.lang.String EXTRA_STATE_IDLE>;

        return $r2;

     label1:
        $r1 = <android.telephony.TelephonyManager: java.lang.String EXTRA_STATE_OFFHOOK>;

        return $r1;

     label2:
        $r0 = <android.telephony.TelephonyManager: java.lang.String EXTRA_STATE_RINGING>;

        return $r0;
    }

    private boolean checkCoarseLocationAccess(com.android.server.TelephonyRegistry$Record, int)
    {
        com.android.server.TelephonyRegistry r0;
        com.android.server.TelephonyRegistry$Record r1;
        int i0, $i1, $i2;
        com.android.server._$$Lambda$TelephonyRegistry$KwKYEFoKdijV5jZbDqX1IUV4CzY $r2;
        android.telephony.LocationAccessPolicy$LocationPermissionQuery$Builder $r3, $r5, $r6, $r7, $r8, $r9, $r10;
        java.lang.String $r4;
        android.telephony.LocationAccessPolicy$LocationPermissionQuery $r11;
        java.lang.Object $r12;
        java.lang.Boolean $r13;
        boolean $z0;

        r0 := @this: com.android.server.TelephonyRegistry;

        r1 := @parameter0: com.android.server.TelephonyRegistry$Record;

        i0 := @parameter1: int;

        $r2 = new com.android.server._$$Lambda$TelephonyRegistry$KwKYEFoKdijV5jZbDqX1IUV4CzY;

        $r3 = new android.telephony.LocationAccessPolicy$LocationPermissionQuery$Builder;

        specialinvoke $r3.<android.telephony.LocationAccessPolicy$LocationPermissionQuery$Builder: void <init>()>();

        $r4 = r1.<com.android.server.TelephonyRegistry$Record: java.lang.String callingPackage>;

        $r5 = virtualinvoke $r3.<android.telephony.LocationAccessPolicy$LocationPermissionQuery$Builder: android.telephony.LocationAccessPolicy$LocationPermissionQuery$Builder setCallingPackage(java.lang.String)>($r4);

        $i1 = r1.<com.android.server.TelephonyRegistry$Record: int callerPid>;

        $r6 = virtualinvoke $r5.<android.telephony.LocationAccessPolicy$LocationPermissionQuery$Builder: android.telephony.LocationAccessPolicy$LocationPermissionQuery$Builder setCallingPid(int)>($i1);

        $i2 = r1.<com.android.server.TelephonyRegistry$Record: int callerUid>;

        $r7 = virtualinvoke $r6.<android.telephony.LocationAccessPolicy$LocationPermissionQuery$Builder: android.telephony.LocationAccessPolicy$LocationPermissionQuery$Builder setCallingUid(int)>($i2);

        $r8 = virtualinvoke $r7.<android.telephony.LocationAccessPolicy$LocationPermissionQuery$Builder: android.telephony.LocationAccessPolicy$LocationPermissionQuery$Builder setMethod(java.lang.String)>("TelephonyRegistry push");

        $r9 = virtualinvoke $r8.<android.telephony.LocationAccessPolicy$LocationPermissionQuery$Builder: android.telephony.LocationAccessPolicy$LocationPermissionQuery$Builder setLogAsInfo(boolean)>(1);

        $r10 = virtualinvoke $r9.<android.telephony.LocationAccessPolicy$LocationPermissionQuery$Builder: android.telephony.LocationAccessPolicy$LocationPermissionQuery$Builder setMinSdkVersionForCoarse(int)>(i0);

        $r11 = virtualinvoke $r10.<android.telephony.LocationAccessPolicy$LocationPermissionQuery$Builder: android.telephony.LocationAccessPolicy$LocationPermissionQuery build()>();

        specialinvoke $r2.<com.android.server._$$Lambda$TelephonyRegistry$KwKYEFoKdijV5jZbDqX1IUV4CzY: void <init>(com.android.server.TelephonyRegistry,android.telephony.LocationAccessPolicy$LocationPermissionQuery)>(r0, $r11);

        $r12 = staticinvoke <android.os.Binder: java.lang.Object withCleanCallingIdentity(com.android.internal.util.FunctionalUtils$ThrowingSupplier)>($r2);

        $r13 = (java.lang.Boolean) $r12;

        $z0 = virtualinvoke $r13.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    private boolean checkFineLocationAccess(com.android.server.TelephonyRegistry$Record, int)
    {
        com.android.server.TelephonyRegistry r0;
        com.android.server.TelephonyRegistry$Record r1;
        int i0, $i1, $i2;
        com.android.server._$$Lambda$TelephonyRegistry$ANYH01Imb6dMua6cgKvMEl4kD3I $r2;
        android.telephony.LocationAccessPolicy$LocationPermissionQuery$Builder $r3, $r5, $r6, $r7, $r8, $r9, $r10;
        java.lang.String $r4;
        android.telephony.LocationAccessPolicy$LocationPermissionQuery $r11;
        java.lang.Object $r12;
        java.lang.Boolean $r13;
        boolean $z0;

        r0 := @this: com.android.server.TelephonyRegistry;

        r1 := @parameter0: com.android.server.TelephonyRegistry$Record;

        i0 := @parameter1: int;

        $r2 = new com.android.server._$$Lambda$TelephonyRegistry$ANYH01Imb6dMua6cgKvMEl4kD3I;

        $r3 = new android.telephony.LocationAccessPolicy$LocationPermissionQuery$Builder;

        specialinvoke $r3.<android.telephony.LocationAccessPolicy$LocationPermissionQuery$Builder: void <init>()>();

        $r4 = r1.<com.android.server.TelephonyRegistry$Record: java.lang.String callingPackage>;

        $r5 = virtualinvoke $r3.<android.telephony.LocationAccessPolicy$LocationPermissionQuery$Builder: android.telephony.LocationAccessPolicy$LocationPermissionQuery$Builder setCallingPackage(java.lang.String)>($r4);

        $i1 = r1.<com.android.server.TelephonyRegistry$Record: int callerPid>;

        $r6 = virtualinvoke $r5.<android.telephony.LocationAccessPolicy$LocationPermissionQuery$Builder: android.telephony.LocationAccessPolicy$LocationPermissionQuery$Builder setCallingPid(int)>($i1);

        $i2 = r1.<com.android.server.TelephonyRegistry$Record: int callerUid>;

        $r7 = virtualinvoke $r6.<android.telephony.LocationAccessPolicy$LocationPermissionQuery$Builder: android.telephony.LocationAccessPolicy$LocationPermissionQuery$Builder setCallingUid(int)>($i2);

        $r8 = virtualinvoke $r7.<android.telephony.LocationAccessPolicy$LocationPermissionQuery$Builder: android.telephony.LocationAccessPolicy$LocationPermissionQuery$Builder setMethod(java.lang.String)>("TelephonyRegistry push");

        $r9 = virtualinvoke $r8.<android.telephony.LocationAccessPolicy$LocationPermissionQuery$Builder: android.telephony.LocationAccessPolicy$LocationPermissionQuery$Builder setLogAsInfo(boolean)>(1);

        $r10 = virtualinvoke $r9.<android.telephony.LocationAccessPolicy$LocationPermissionQuery$Builder: android.telephony.LocationAccessPolicy$LocationPermissionQuery$Builder setMinSdkVersionForFine(int)>(i0);

        $r11 = virtualinvoke $r10.<android.telephony.LocationAccessPolicy$LocationPermissionQuery$Builder: android.telephony.LocationAccessPolicy$LocationPermissionQuery build()>();

        specialinvoke $r2.<com.android.server._$$Lambda$TelephonyRegistry$ANYH01Imb6dMua6cgKvMEl4kD3I: void <init>(com.android.server.TelephonyRegistry,android.telephony.LocationAccessPolicy$LocationPermissionQuery)>(r0, $r11);

        $r12 = staticinvoke <android.os.Binder: java.lang.Object withCleanCallingIdentity(com.android.internal.util.FunctionalUtils$ThrowingSupplier)>($r2);

        $r13 = (java.lang.Boolean) $r12;

        $z0 = virtualinvoke $r13.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    private boolean checkListenerPermission(int, int, java.lang.String, java.lang.String, java.lang.String)
    {
        com.android.server.TelephonyRegistry r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, $i12;
        java.lang.String r1, r2, $r9, $r25, r30;
        android.telephony.LocationAccessPolicy$LocationPermissionQuery$Builder $r4, $r10, $r11, r31, r32;
        java.lang.StringBuilder $r5, $r20;
        android.content.Context $r12, $r13, $r14, $r15, $r16, $r17, $r29;
        boolean $z0, z1;
        android.telephony.LocationAccessPolicy$LocationPermissionQuery $r18;
        int[] $r19;
        java.lang.SecurityException $r24;
        java.lang.Throwable $r28;
        android.telephony.LocationAccessPolicy$LocationPermissionResult r33;

        r0 := @this: com.android.server.TelephonyRegistry;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r30 := @parameter2: java.lang.String;

        r1 := @parameter3: java.lang.String;

        r2 := @parameter4: java.lang.String;

        $r4 = new android.telephony.LocationAccessPolicy$LocationPermissionQuery$Builder;

        specialinvoke $r4.<android.telephony.LocationAccessPolicy$LocationPermissionQuery$Builder: void <init>()>();

        r31 = virtualinvoke $r4.<android.telephony.LocationAccessPolicy$LocationPermissionQuery$Builder: android.telephony.LocationAccessPolicy$LocationPermissionQuery$Builder setCallingPackage(java.lang.String)>(r30);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" events: ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = virtualinvoke r31.<android.telephony.LocationAccessPolicy$LocationPermissionQuery$Builder: android.telephony.LocationAccessPolicy$LocationPermissionQuery$Builder setMethod(java.lang.String)>($r9);

        $i2 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r11 = virtualinvoke $r10.<android.telephony.LocationAccessPolicy$LocationPermissionQuery$Builder: android.telephony.LocationAccessPolicy$LocationPermissionQuery$Builder setCallingPid(int)>($i2);

        $i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        r32 = virtualinvoke $r11.<android.telephony.LocationAccessPolicy$LocationPermissionQuery$Builder: android.telephony.LocationAccessPolicy$LocationPermissionQuery$Builder setCallingUid(int)>($i3);

        z1 = 0;

        $i4 = -1073741824 & i0;

        if $i4 == 0 goto label01;

        virtualinvoke r32.<android.telephony.LocationAccessPolicy$LocationPermissionQuery$Builder: android.telephony.LocationAccessPolicy$LocationPermissionQuery$Builder setMinSdkVersionForCoarse(int)>(0);

        z1 = 1;

     label01:
        $i5 = -1073740784 & i0;

        if $i5 == 0 goto label02;

        virtualinvoke r32.<android.telephony.LocationAccessPolicy$LocationPermissionQuery$Builder: android.telephony.LocationAccessPolicy$LocationPermissionQuery$Builder setMinSdkVersionForFine(int)>(29);

        z1 = 1;

     label02:
        if z1 == 0 goto label05;

        $r17 = r0.<com.android.server.TelephonyRegistry: android.content.Context mContext>;

        $r18 = virtualinvoke r32.<android.telephony.LocationAccessPolicy$LocationPermissionQuery$Builder: android.telephony.LocationAccessPolicy$LocationPermissionQuery build()>();

        r33 = staticinvoke <android.telephony.LocationAccessPolicy: android.telephony.LocationAccessPolicy$LocationPermissionResult checkLocationPermission(android.content.Context,android.telephony.LocationAccessPolicy$LocationPermissionQuery)>($r17, $r18);

        $r19 = <com.android.server.TelephonyRegistry$3: int[] $SwitchMap$android$telephony$LocationAccessPolicy$LocationPermissionResult>;

        $i10 = virtualinvoke r33.<android.telephony.LocationAccessPolicy$LocationPermissionResult: int ordinal()>();

        i11 = $r19[$i10];

        if i11 == 1 goto label04;

        if i11 == 2 goto label03;

        goto label05;

     label03:
        return 0;

     label04:
        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to listen for events ");

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" due to insufficient location permissions.");

        $r24 = new java.lang.SecurityException;

        $r25 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r24.<java.lang.SecurityException: void <init>(java.lang.String)>($r25);

        throw $r24;

     label05:
        $i6 = 17825804 & i0;

        if $i6 == 0 goto label06;

        $r16 = r0.<com.android.server.TelephonyRegistry: android.content.Context mContext>;

        $z0 = staticinvoke <com.android.internal.telephony.TelephonyPermissions: boolean checkCallingOrSelfReadPhoneState(android.content.Context,int,java.lang.String,java.lang.String,java.lang.String)>($r16, i1, r30, r1, r2);

        if $z0 != 0 goto label06;

        return 0;

     label06:
        $i7 = -838854656 & i0;

        if $i7 == 0 goto label10;

     label07:
        $r15 = r0.<com.android.server.TelephonyRegistry: android.content.Context mContext>;

        virtualinvoke $r15.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.READ_PRECISE_PHONE_STATE", null);

     label08:
        goto label10;

     label09:
        $r28 := @caughtexception;

        $r29 = r0.<com.android.server.TelephonyRegistry: android.content.Context mContext>;

        staticinvoke <com.android.internal.telephony.TelephonyPermissions: void enforceCallingOrSelfCarrierPrivilege(android.content.Context,int,java.lang.String)>($r29, i1, r2);

     label10:
        $i12 = 805306368 & i0;

        if $i12 == 0 goto label11;

        $r14 = r0.<com.android.server.TelephonyRegistry: android.content.Context mContext>;

        virtualinvoke $r14.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.READ_ACTIVE_EMERGENCY_SESSION", null);

     label11:
        $i8 = i0 & 512;

        if $i8 == 0 goto label12;

        $r13 = r0.<com.android.server.TelephonyRegistry: android.content.Context mContext>;

        virtualinvoke $r13.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.LISTEN_ALWAYS_REPORTED_SIGNAL_STRENGTH", null);

     label12:
        $i9 = 8568832 & i0;

        if $i9 == 0 goto label13;

        $r12 = r0.<com.android.server.TelephonyRegistry: android.content.Context mContext>;

        virtualinvoke $r12.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.READ_PRIVILEGED_PHONE_STATE", null);

     label13:
        return 1;

        catch java.lang.SecurityException from label07 to label08 with label09;
    }

    private boolean checkNotifyPermission()
    {
        com.android.server.TelephonyRegistry r0;
        android.content.Context $r1;
        int $i0;
        boolean z0;

        r0 := @this: com.android.server.TelephonyRegistry;

        $r1 = r0.<com.android.server.TelephonyRegistry: android.content.Context mContext>;

        $i0 = virtualinvoke $r1.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.MODIFY_PHONE_STATE");

        if $i0 != 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private boolean checkNotifyPermission(java.lang.String)
    {
        com.android.server.TelephonyRegistry r0;
        java.lang.String r1;
        boolean $z0;
        java.lang.StringBuilder $r3;
        int $i0, $i1;

        r0 := @this: com.android.server.TelephonyRegistry;

        r1 := @parameter0: java.lang.String;

        $z0 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean checkNotifyPermission()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Modify Phone State Permission Denial: ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from pid=");

        $i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return 0;
    }

    private void checkPossibleMissNotify(com.android.server.TelephonyRegistry$Record, int)
    {
        com.android.server.TelephonyRegistry r0;
        com.android.server.TelephonyRegistry$Record r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, $i9, $i10, $i11, $i12, $i13;
        com.android.internal.telephony.IPhoneStateListener r2, $r7, $r10, $r12, $r14, $r19, $r21, $r23, r63, r69;
        android.telephony.SignalStrength[] $r3, $r26, $r28, $r30;
        android.telephony.SignalStrength $r4, $r27, $r29, r66, r67;
        int[] $r5, $r6;
        boolean $z0, $z1, $z2, $z3, $z4, $z15, $z16;
        android.telephony.CellIdentity[] $r8;
        android.telephony.CellIdentity $r9;
        boolean[] $r11, $r13, $r20;
        android.telephony.TelephonyDisplayInfo[] $r15, $r17;
        android.telephony.TelephonyDisplayInfo $r16, $r18;
        java.util.ArrayList $r22, $r35, $r38, $r41, $r44, $r47, $r50, $r53, $r56, $r59, $r62;
        java.lang.Object $r24;
        java.util.List $r25;
        android.telephony.ServiceState[] $r31;
        android.telephony.ServiceState $r32, r64;
        android.os.RemoteException $r33, $r36, $r39, $r42, $r45, $r48, $r51, $r54, $r57, $r60;
        android.os.IBinder $r34, $r37, $r40, $r43, $r46, $r49, $r52, $r55, $r58, $r61;

        r0 := @this: com.android.server.TelephonyRegistry;

        r1 := @parameter0: com.android.server.TelephonyRegistry$Record;

        i0 := @parameter1: int;

        i1 = r1.<com.android.server.TelephonyRegistry$Record: int events>;

        $i2 = i1 & 1;

        if $i2 == 0 goto label04;

     label01:
        r63 = r1.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        r64 = new android.telephony.ServiceState;

        $r31 = r0.<com.android.server.TelephonyRegistry: android.telephony.ServiceState[] mServiceState>;

        $r32 = $r31[i0];

        specialinvoke r64.<android.telephony.ServiceState: void <init>(android.telephony.ServiceState)>($r32);

        interfaceinvoke r63.<com.android.internal.telephony.IPhoneStateListener: void onServiceStateChanged(android.telephony.ServiceState)>(r64);

     label02:
        goto label04;

     label03:
        $r60 := @caughtexception;

        $r62 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRemoveList>;

        $r61 = r1.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        virtualinvoke $r62.<java.util.ArrayList: boolean add(java.lang.Object)>($r61);

     label04:
        $i6 = i1 & 256;

        if $i6 != 0 goto label05;

        $i5 = i1 & 512;

        if $i5 == 0 goto label08;

     label05:
        $r3 = r0.<com.android.server.TelephonyRegistry: android.telephony.SignalStrength[] mSignalStrength>;

        $r4 = $r3[i0];

        if $r4 == null goto label06;

        $r30 = r0.<com.android.server.TelephonyRegistry: android.telephony.SignalStrength[] mSignalStrength>;

        r66 = $r30[i0];

        r2 = r1.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        r67 = new android.telephony.SignalStrength;

        specialinvoke r67.<android.telephony.SignalStrength: void <init>(android.telephony.SignalStrength)>(r66);

        interfaceinvoke r2.<com.android.internal.telephony.IPhoneStateListener: void onSignalStrengthsChanged(android.telephony.SignalStrength)>(r67);

     label06:
        goto label08;

     label07:
        $r36 := @caughtexception;

        $r38 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRemoveList>;

        $r37 = r1.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        virtualinvoke $r38.<java.util.ArrayList: boolean add(java.lang.Object)>($r37);

     label08:
        $i7 = i1 & 2;

        if $i7 == 0 goto label14;

     label09:
        $r26 = r0.<com.android.server.TelephonyRegistry: android.telephony.SignalStrength[] mSignalStrength>;

        $r27 = $r26[i0];

        if $r27 == null goto label12;

        $r28 = r0.<com.android.server.TelephonyRegistry: android.telephony.SignalStrength[] mSignalStrength>;

        $r29 = $r28[i0];

        i8 = virtualinvoke $r29.<android.telephony.SignalStrength: int getGsmSignalStrength()>();

        r69 = r1.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

     label10:
        if i8 != 99 goto label11;

        i8 = -1;

        goto label11;

     label11:
        interfaceinvoke r69.<com.android.internal.telephony.IPhoneStateListener: void onSignalStrengthChanged(int)>(i8);

     label12:
        goto label14;

     label13:
        $r51 := @caughtexception;

        $r53 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRemoveList>;

        $r52 = r1.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        virtualinvoke $r53.<java.util.ArrayList: boolean add(java.lang.Object)>($r52);

     label14:
        $z15 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean validateEventsAndUserLocked(com.android.server.TelephonyRegistry$Record,int)>(r1, 1024);

        if $z15 == 0 goto label18;

     label15:
        $z4 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean checkFineLocationAccess(com.android.server.TelephonyRegistry$Record,int)>(r1, 29);

        if $z4 == 0 goto label16;

        $r23 = r1.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        $r22 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mCellInfo>;

        $r24 = virtualinvoke $r22.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r25 = (java.util.List) $r24;

        interfaceinvoke $r23.<com.android.internal.telephony.IPhoneStateListener: void onCellInfoChanged(java.util.List)>($r25);

     label16:
        goto label18;

     label17:
        $r45 := @caughtexception;

        $r47 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRemoveList>;

        $r46 = r1.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        virtualinvoke $r47.<java.util.ArrayList: boolean add(java.lang.Object)>($r46);

     label18:
        $i9 = 524288 & i1;

        if $i9 == 0 goto label22;

     label19:
        $r21 = r1.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        $r20 = r0.<com.android.server.TelephonyRegistry: boolean[] mUserMobileDataState>;

        $z3 = $r20[i0];

        interfaceinvoke $r21.<com.android.internal.telephony.IPhoneStateListener: void onUserMobileDataStateChanged(boolean)>($z3);

     label20:
        goto label22;

     label21:
        $r42 := @caughtexception;

        $r44 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRemoveList>;

        $r43 = r1.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        virtualinvoke $r44.<java.util.ArrayList: boolean add(java.lang.Object)>($r43);

     label22:
        $i10 = 1048576 & i1;

        if $i10 == 0 goto label26;

     label23:
        $r15 = r0.<com.android.server.TelephonyRegistry: android.telephony.TelephonyDisplayInfo[] mTelephonyDisplayInfos>;

        $r16 = $r15[i0];

        if $r16 == null goto label24;

        $r19 = r1.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        $r17 = r0.<com.android.server.TelephonyRegistry: android.telephony.TelephonyDisplayInfo[] mTelephonyDisplayInfos>;

        $r18 = $r17[i0];

        interfaceinvoke $r19.<com.android.internal.telephony.IPhoneStateListener: void onDisplayInfoChanged(android.telephony.TelephonyDisplayInfo)>($r18);

     label24:
        goto label26;

     label25:
        $r57 := @caughtexception;

        $r59 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRemoveList>;

        $r58 = r1.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        virtualinvoke $r59.<java.util.ArrayList: boolean add(java.lang.Object)>($r58);

     label26:
        $i11 = i1 & 4;

        if $i11 == 0 goto label30;

     label27:
        $r14 = r1.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        $r13 = r0.<com.android.server.TelephonyRegistry: boolean[] mMessageWaiting>;

        $z2 = $r13[i0];

        interfaceinvoke $r14.<com.android.internal.telephony.IPhoneStateListener: void onMessageWaitingIndicatorChanged(boolean)>($z2);

     label28:
        goto label30;

     label29:
        $r39 := @caughtexception;

        $r41 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRemoveList>;

        $r40 = r1.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        virtualinvoke $r41.<java.util.ArrayList: boolean add(java.lang.Object)>($r40);

     label30:
        $i12 = i1 & 8;

        if $i12 == 0 goto label34;

     label31:
        $r12 = r1.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        $r11 = r0.<com.android.server.TelephonyRegistry: boolean[] mCallForwarding>;

        $z1 = $r11[i0];

        interfaceinvoke $r12.<com.android.internal.telephony.IPhoneStateListener: void onCallForwardingIndicatorChanged(boolean)>($z1);

     label32:
        goto label34;

     label33:
        $r48 := @caughtexception;

        $r50 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRemoveList>;

        $r49 = r1.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        virtualinvoke $r50.<java.util.ArrayList: boolean add(java.lang.Object)>($r49);

     label34:
        $z16 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean validateEventsAndUserLocked(com.android.server.TelephonyRegistry$Record,int)>(r1, 16);

        if $z16 == 0 goto label38;

     label35:
        $z0 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean checkFineLocationAccess(com.android.server.TelephonyRegistry$Record,int)>(r1, 29);

        if $z0 == 0 goto label36;

        $r10 = r1.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        $r8 = r0.<com.android.server.TelephonyRegistry: android.telephony.CellIdentity[] mCellIdentity>;

        $r9 = $r8[i0];

        interfaceinvoke $r10.<com.android.internal.telephony.IPhoneStateListener: void onCellLocationChanged(android.telephony.CellIdentity)>($r9);

     label36:
        goto label38;

     label37:
        $r54 := @caughtexception;

        $r56 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRemoveList>;

        $r55 = r1.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        virtualinvoke $r56.<java.util.ArrayList: boolean add(java.lang.Object)>($r55);

     label38:
        $i13 = i1 & 64;

        if $i13 == 0 goto label42;

     label39:
        $r7 = r1.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        $r5 = r0.<com.android.server.TelephonyRegistry: int[] mDataConnectionState>;

        $i4 = $r5[i0];

        $r6 = r0.<com.android.server.TelephonyRegistry: int[] mDataConnectionNetworkType>;

        $i3 = $r6[i0];

        interfaceinvoke $r7.<com.android.internal.telephony.IPhoneStateListener: void onDataConnectionStateChanged(int,int)>($i4, $i3);

     label40:
        goto label42;

     label41:
        $r33 := @caughtexception;

        $r35 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRemoveList>;

        $r34 = r1.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        virtualinvoke $r35.<java.util.ArrayList: boolean add(java.lang.Object)>($r34);

     label42:
        return;

        catch android.os.RemoteException from label01 to label02 with label03;
        catch android.os.RemoteException from label05 to label06 with label07;
        catch android.os.RemoteException from label09 to label10 with label13;
        catch android.os.RemoteException from label11 to label12 with label13;
        catch android.os.RemoteException from label15 to label16 with label17;
        catch android.os.RemoteException from label19 to label20 with label21;
        catch android.os.RemoteException from label23 to label24 with label25;
        catch android.os.RemoteException from label27 to label28 with label29;
        catch android.os.RemoteException from label31 to label32 with label33;
        catch android.os.RemoteException from label35 to label36 with label37;
        catch android.os.RemoteException from label39 to label40 with label41;
    }

    private static android.telephony.CallQuality createCallQuality()
    {
        android.telephony.CallQuality $r0;

        $r0 = new android.telephony.CallQuality;

        specialinvoke $r0.<android.telephony.CallQuality: void <init>(int,int,int,int,int,int,int,int,int,int,int)>(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);

        return $r0;
    }

    private static android.telephony.PreciseCallState createPreciseCallState()
    {
        android.telephony.PreciseCallState $r0;

        $r0 = new android.telephony.PreciseCallState;

        specialinvoke $r0.<android.telephony.PreciseCallState: void <init>(int,int,int,int,int)>(-1, -1, -1, -1, -1);

        return $r0;
    }

    private void cutListToSize(java.util.List, int)
    {
        com.android.server.TelephonyRegistry r0;
        java.util.List r1;
        int i0, $i1, $i2, $i3;

        r0 := @this: com.android.server.TelephonyRegistry;

        r1 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        if r1 != null goto label1;

        return;

     label1:
        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i1 <= i0 goto label2;

        $i2 = interfaceinvoke r1.<java.util.List: int size()>();

        $i3 = $i2 - 1;

        interfaceinvoke r1.<java.util.List: java.lang.Object remove(int)>($i3);

        goto label1;

     label2:
        return;
    }

    private static java.lang.String dataStateToString(int)
    {
        int i0;
        java.lang.StringBuilder $r1;
        java.lang.String $r5;

        i0 := @parameter0: int;

        if i0 == 0 goto label4;

        if i0 == 1 goto label3;

        if i0 == 2 goto label2;

        if i0 == 3 goto label1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("UNKNOWN(");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;

     label1:
        return "SUSPENDED";

     label2:
        return "CONNECTED";

     label3:
        return "CONNECTING";

     label4:
        return "DISCONNECTED";
    }

    private void enforceNotifyPermissionOrCarrierPrivilege(java.lang.String)
    {
        com.android.server.TelephonyRegistry r0;
        java.lang.String r1;
        boolean $z0;
        android.content.Context $r2;
        int $i0;

        r0 := @this: com.android.server.TelephonyRegistry;

        r1 := @parameter0: java.lang.String;

        $z0 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean checkNotifyPermission()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = r0.<com.android.server.TelephonyRegistry: android.content.Context mContext>;

        $i0 = staticinvoke <android.telephony.SubscriptionManager: int getDefaultSubscriptionId()>();

        staticinvoke <com.android.internal.telephony.TelephonyPermissions: void enforceCallingOrSelfCarrierPrivilege(android.content.Context,int,java.lang.String)>($r2, $i0, r1);

        return;
    }

    private void fillInSignalStrengthNotifierBundle(android.telephony.SignalStrength, android.os.Bundle)
    {
        com.android.server.TelephonyRegistry r0;
        android.os.Bundle r1;
        android.telephony.CellSignalStrength r2;
        java.util.List $r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.Object $r4;
        android.telephony.CellSignalStrengthNr $r5;
        android.telephony.CellSignalStrengthTdscdma $r6;
        android.telephony.CellSignalStrengthWcdma $r7;
        android.telephony.CellSignalStrengthGsm $r8;
        android.telephony.CellSignalStrengthCdma $r9;
        android.telephony.CellSignalStrengthLte $r10;
        android.telephony.SignalStrength r11;
        java.util.Iterator r12;

        r0 := @this: com.android.server.TelephonyRegistry;

        r11 := @parameter0: android.telephony.SignalStrength;

        r1 := @parameter1: android.os.Bundle;

        $r3 = virtualinvoke r11.<android.telephony.SignalStrength: java.util.List getCellSignalStrengths()>();

        r12 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label8;

        $r4 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.telephony.CellSignalStrength) $r4;

        $z1 = r2 instanceof android.telephony.CellSignalStrengthLte;

        if $z1 == 0 goto label2;

        $r10 = (android.telephony.CellSignalStrengthLte) r2;

        virtualinvoke r1.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("Lte", $r10);

        goto label7;

     label2:
        $z2 = r2 instanceof android.telephony.CellSignalStrengthCdma;

        if $z2 == 0 goto label3;

        $r9 = (android.telephony.CellSignalStrengthCdma) r2;

        virtualinvoke r1.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("Cdma", $r9);

        goto label7;

     label3:
        $z3 = r2 instanceof android.telephony.CellSignalStrengthGsm;

        if $z3 == 0 goto label4;

        $r8 = (android.telephony.CellSignalStrengthGsm) r2;

        virtualinvoke r1.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("Gsm", $r8);

        goto label7;

     label4:
        $z4 = r2 instanceof android.telephony.CellSignalStrengthWcdma;

        if $z4 == 0 goto label5;

        $r7 = (android.telephony.CellSignalStrengthWcdma) r2;

        virtualinvoke r1.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("Wcdma", $r7);

        goto label7;

     label5:
        $z5 = r2 instanceof android.telephony.CellSignalStrengthTdscdma;

        if $z5 == 0 goto label6;

        $r6 = (android.telephony.CellSignalStrengthTdscdma) r2;

        virtualinvoke r1.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("Tdscdma", $r6);

        goto label7;

     label6:
        $z6 = r2 instanceof android.telephony.CellSignalStrengthNr;

        if $z6 == 0 goto label7;

        $r5 = (android.telephony.CellSignalStrengthNr) r2;

        virtualinvoke r1.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("Nr", $r5);

     label7:
        goto label1;

     label8:
        return;
    }

    private java.lang.String getCallIncomingNumber(com.android.server.TelephonyRegistry$Record, int)
    {
        com.android.server.TelephonyRegistry r0;
        int i0;
        boolean $z0;
        java.lang.String[] $r1;
        com.android.server.TelephonyRegistry$Record r2;
        java.lang.String r3;

        r0 := @this: com.android.server.TelephonyRegistry;

        r2 := @parameter0: com.android.server.TelephonyRegistry$Record;

        i0 := @parameter1: int;

        $z0 = virtualinvoke r2.<com.android.server.TelephonyRegistry$Record: boolean canReadCallLog()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<com.android.server.TelephonyRegistry: java.lang.String[] mCallIncomingNumber>;

        r3 = $r1[i0];

        goto label2;

     label1:
        r3 = "";

     label2:
        return r3;
    }

    private java.lang.String getNetworkTypeName(int)
    {
        com.android.server.TelephonyRegistry r0;
        int i0;

        r0 := @this: com.android.server.TelephonyRegistry;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label20;
            case 2: goto label19;
            case 3: goto label18;
            case 4: goto label17;
            case 5: goto label16;
            case 6: goto label15;
            case 7: goto label14;
            case 8: goto label13;
            case 9: goto label12;
            case 10: goto label11;
            case 11: goto label10;
            case 12: goto label09;
            case 13: goto label08;
            case 14: goto label07;
            case 15: goto label06;
            case 16: goto label05;
            case 17: goto label04;
            case 18: goto label03;
            case 19: goto label01;
            case 20: goto label02;
            default: goto label01;
        };

     label01:
        return "UNKNOWN";

     label02:
        return "NR";

     label03:
        return "IWLAN";

     label04:
        return "TD_SCDMA";

     label05:
        return "GSM";

     label06:
        return "HSPA+";

     label07:
        return "CDMA - eHRPD";

     label08:
        return "LTE";

     label09:
        return "CDMA - EvDo rev. B";

     label10:
        return "iDEN";

     label11:
        return "HSPA";

     label12:
        return "HSUPA";

     label13:
        return "HSDPA";

     label14:
        return "CDMA - 1xRTT";

     label15:
        return "CDMA - EvDo rev. A";

     label16:
        return "CDMA - EvDo rev. 0";

     label17:
        return "CDMA";

     label18:
        return "UMTS";

     label19:
        return "EDGE";

     label20:
        return "GPRS";
    }

    private int getPhoneIdFromSubId(int)
    {
        com.android.server.TelephonyRegistry r0;
        int i0, $i1, i2;
        android.content.Context $r1;
        java.lang.Object $r2;
        android.telephony.SubscriptionManager r3;
        android.telephony.SubscriptionInfo r4;

        r0 := @this: com.android.server.TelephonyRegistry;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.TelephonyRegistry: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("telephony_subscription_service");

        r3 = (android.telephony.SubscriptionManager) $r2;

        if r3 != null goto label1;

        return -1;

     label1:
        i2 = i0;

        if i0 != 2147483647 goto label2;

        i2 = staticinvoke <android.telephony.SubscriptionManager: int getDefaultSubscriptionId()>();

     label2:
        r4 = virtualinvoke r3.<android.telephony.SubscriptionManager: android.telephony.SubscriptionInfo getActiveSubscriptionInfo(int)>(i2);

        if r4 != null goto label3;

        return -1;

     label3:
        $i1 = virtualinvoke r4.<android.telephony.SubscriptionInfo: int getSimSlotIndex()>();

        return $i1;
    }

    private android.telephony.TelephonyManager getTelephonyManager()
    {
        com.android.server.TelephonyRegistry r0;
        android.content.Context $r1;
        java.lang.Object $r2;
        android.telephony.TelephonyManager $r3;

        r0 := @this: com.android.server.TelephonyRegistry;

        $r1 = r0.<com.android.server.TelephonyRegistry: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("phone");

        $r3 = (android.telephony.TelephonyManager) $r2;

        return $r3;
    }

    private void handleRemoveListLocked()
    {
        com.android.server.TelephonyRegistry r0;
        java.util.Iterator r1;
        java.util.ArrayList $r2, $r3, $r4;
        int $i0;
        boolean $z0;
        java.lang.Object $r5;
        android.os.IBinder $r6;

        r0 := @this: com.android.server.TelephonyRegistry;

        $r2 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRemoveList>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if $i0 <= 0 goto label3;

        $r3 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRemoveList>;

        r1 = virtualinvoke $r3.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (android.os.IBinder) $r5;

        specialinvoke r0.<com.android.server.TelephonyRegistry: void remove(android.os.IBinder)>($r6);

        goto label1;

     label2:
        $r4 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRemoveList>;

        virtualinvoke $r4.<java.util.ArrayList: void clear()>();

     label3:
        return;
    }

    private boolean idMatchWithoutDefaultPhoneCheck(int, int)
    {
        com.android.server.TelephonyRegistry r0;
        int i0, i1, $i2;
        boolean z1, z2;

        r0 := @this: com.android.server.TelephonyRegistry;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z1 = 1;

        if i0 != 2147483647 goto label3;

        $i2 = r0.<com.android.server.TelephonyRegistry: int mDefaultSubId>;

        if i1 != $i2 goto label1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;

     label3:
        if i0 != i1 goto label4;

        z2 = 1;

        goto label5;

     label4:
        z2 = 0;

     label5:
        return z2;
    }

    private void listen(java.lang.String, java.lang.String, com.android.internal.telephony.IPhoneStateListener, int, boolean, int)
    {
        com.android.server.TelephonyRegistry r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, i23, i24, i25, $i26, $i27, $i28, i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52;
        android.app.AppOpsManager $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r4, $r9, $r84, r162, r163, r166;
        android.util.LocalLog $r19;
        android.os.IBinder $r20, $r102, $r104, $r106, $r108, $r111, $r113, $r117, $r119, $r121, $r123, $r125, $r127, $r130, $r132, $r134, $r136, $r139, $r141, $r146, $r148, $r150, $r153, $r155, $r157, $r159, $r161, r168, $r179;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, z10, z11, z12, z13, z14, z15, z16;
        android.content.Context $r21;
        java.util.List $r22, $r47, $r53, $r66;
        java.lang.Object $r23, $r48, $r51, $r55, $r65;
        android.telephony.CallAttributes[] $r24;
        android.telephony.CallAttributes $r25;
        com.android.internal.telephony.IPhoneStateListener $r26, $r28, $r29, $r30, $r32, $r34, $r39, $r41, $r43, $r45, $r46, $r52, $r54, $r59, $r62, $r64, $r71, $r76, $r78, $r81, $r83, $r87, $r89, $r91, $r100, r164, r172, r175, r180, r210;
        int[] $r27, $r42, $r44, $r57, $r58, $r77, $r79, $r80, $r82;
        android.telephony.PhoneCapability $r31;
        java.util.Map $r33, $r49;
        android.telephony.TelephonyDisplayInfo[] $r35, $r37;
        android.telephony.TelephonyDisplayInfo $r36, $r38;
        boolean[] $r40, $r88, $r90;
        java.util.Collection $r50;
        android.telephony.ims.ImsReasonInfo $r56;
        android.telephony.PreciseCallState[] $r60;
        android.telephony.PreciseCallState $r61;
        java.util.ArrayList $r63, r167;
        android.telephony.SignalStrength[] $r67, $r69, $r72, $r74, $r92, $r94;
        android.telephony.SignalStrength $r68, $r70, $r73, $r75, $r93, $r95;
        android.telephony.CellIdentity[] $r85;
        android.telephony.CellIdentity $r86;
        android.telephony.ServiceState[] $r96;
        android.telephony.ServiceState $r97, $r98, $r99, r170;
        android.os.RemoteException $r101, $r103, $r105, $r107, $r109, $r110, $r112, $r114, $r115, $r116, $r118, $r120, $r122, $r124, $r126, $r129, $r131, $r133, $r135, $r137, $r138, $r140, $r142, $r145, $r147, $r149, $r151, $r152, $r154, $r156, $r158, $r160;
        java.lang.Throwable $r128, $r143, $r144, r212;
        com.android.server.TelephonyRegistry$Record r169;
        java.util.Iterator r194;
        android.telephony.PreciseDataConnectionState r195;
        android.telephony.BarringInfo r208, r209;

        r0 := @this: com.android.server.TelephonyRegistry;

        r162 := @parameter0: java.lang.String;

        r163 := @parameter1: java.lang.String;

        r164 := @parameter2: com.android.internal.telephony.IPhoneStateListener;

        i0 := @parameter3: int;

        z10 := @parameter4: boolean;

        i23 := @parameter5: int;

        i24 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        $r1 = r0.<com.android.server.TelephonyRegistry: android.app.AppOpsManager mAppOps>;

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke $r1.<android.app.AppOpsManager: void checkPackage(int,java.lang.String)>($i1, r162);

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("listen: E pkg=");

        $r4 = staticinvoke <com.android.server.TelephonyRegistry: java.lang.String pii(java.lang.String)>(r162);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" uid=");

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" events=0x");

        $r9 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" notifyNow=");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z10);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" subId=");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i23);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" myUserId=");

        $i3 = staticinvoke <android.os.UserHandle: int myUserId()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" callerUserId=");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i24);

        r166 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r19 = r0.<com.android.server.TelephonyRegistry: android.util.LocalLog mListenLog>;

        virtualinvoke $r19.<android.util.LocalLog: void log(java.lang.String)>(r166);

        if i0 == 0 goto label190;

        $z0 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean checkListenerPermission(int,int,java.lang.String,java.lang.String,java.lang.String)>(i0, i23, r162, r163, "listen");

        if $z0 != 0 goto label001;

        return;

     label001:
        i25 = specialinvoke r0.<com.android.server.TelephonyRegistry: int getPhoneIdFromSubId(int)>(i23);

        r167 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        entermonitor r167;

     label002:
        r168 = interfaceinvoke r164.<com.android.internal.telephony.IPhoneStateListener: android.os.IBinder asBinder()>();

        $i4 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if $i4 == 1000 goto label004;

        $i20 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if $i20 == 1001 goto label004;

        $i21 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i22 = staticinvoke <android.os.Process: int myUid()>();

        if $i21 == $i22 goto label004;

     label003:
        z11 = 1;

        goto label005;

     label004:
        z11 = 0;

     label005:
        $i26 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i27 = staticinvoke <android.os.Binder: int getCallingPid()>();

        r169 = specialinvoke r0.<com.android.server.TelephonyRegistry: com.android.server.TelephonyRegistry$Record add(android.os.IBinder,int,int,boolean)>(r168, $i26, $i27, z11);

     label006:
        if r169 != null goto label009;

     label007:
        exitmonitor r167;

     label008:
        return;

     label009:
        $r21 = r0.<com.android.server.TelephonyRegistry: android.content.Context mContext>;

        r169.<com.android.server.TelephonyRegistry$Record: android.content.Context context> = $r21;

     label010:
        r169.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback> = r164;

        r169.<com.android.server.TelephonyRegistry$Record: java.lang.String callingPackage> = r162;

     label011:
        r169.<com.android.server.TelephonyRegistry$Record: java.lang.String callingFeatureId> = r163;

        $i5 = staticinvoke <android.os.Binder: int getCallingUid()>();

        r169.<com.android.server.TelephonyRegistry$Record: int callerUid> = $i5;

        $i6 = staticinvoke <android.os.Binder: int getCallingPid()>();

        r169.<com.android.server.TelephonyRegistry$Record: int callerPid> = $i6;

        $z1 = staticinvoke <android.telephony.SubscriptionManager: boolean isValidSubscriptionId(int)>(i23);

        if $z1 != 0 goto label013;

        r169.<com.android.server.TelephonyRegistry$Record: int subId> = 2147483647;

     label012:
        goto label014;

     label013:
        r169.<com.android.server.TelephonyRegistry$Record: int subId> = i23;

     label014:
        r169.<com.android.server.TelephonyRegistry$Record: int phoneId> = i25;

        r169.<com.android.server.TelephonyRegistry$Record: int events> = i0;

     label015:
        if z10 == 0 goto label183;

     label016:
        z12 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean validatePhoneId(int)>(i25);

     label017:
        if z12 == 0 goto label183;

        $i7 = i0 & 1;

        if $i7 == 0 goto label038;

     label018:
        r170 = new android.telephony.ServiceState;

        $r96 = r0.<com.android.server.TelephonyRegistry: android.telephony.ServiceState[] mServiceState>;

        $r97 = $r96[i25];

        specialinvoke r170.<android.telephony.ServiceState: void <init>(android.telephony.ServiceState)>($r97);

        z13 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean checkFineLocationAccess(com.android.server.TelephonyRegistry$Record,int)>(r169, 29);

     label019:
        if z13 == 0 goto label023;

     label020:
        $r100 = r169.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        interfaceinvoke $r100.<com.android.internal.telephony.IPhoneStateListener: void onServiceStateChanged(android.telephony.ServiceState)>(r170);

     label021:
        goto label032;

     label022:
        $r114 := @caughtexception;

        goto label036;

     label023:
        z14 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean checkCoarseLocationAccess(com.android.server.TelephonyRegistry$Record,int)>(r169, 29);

     label024:
        if z14 == 0 goto label030;

     label025:
        r172 = r169.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

     label026:
        $r99 = virtualinvoke r170.<android.telephony.ServiceState: android.telephony.ServiceState createLocationInfoSanitizedCopy(boolean)>(0);

        interfaceinvoke r172.<com.android.internal.telephony.IPhoneStateListener: void onServiceStateChanged(android.telephony.ServiceState)>($r99);

     label027:
        goto label032;

     label028:
        $r151 := @caughtexception;

        goto label036;

     label029:
        $r109 := @caughtexception;

        goto label036;

     label030:
        r175 = r169.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

     label031:
        $r98 = virtualinvoke r170.<android.telephony.ServiceState: android.telephony.ServiceState createLocationInfoSanitizedCopy(boolean)>(1);

        interfaceinvoke r175.<com.android.internal.telephony.IPhoneStateListener: void onServiceStateChanged(android.telephony.ServiceState)>($r98);

     label032:
        goto label038;

     label033:
        $r115 := @caughtexception;

        goto label036;

     label034:
        $r137 := @caughtexception;

        goto label036;

     label035:
        $r142 := @caughtexception;

     label036:
        $r179 = r169.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        specialinvoke r0.<com.android.server.TelephonyRegistry: void remove(android.os.IBinder)>($r179);

     label037:
        goto label038;

     label038:
        $i28 = i0 & 2;

        if $i28 == 0 goto label045;

     label039:
        $r92 = r0.<com.android.server.TelephonyRegistry: android.telephony.SignalStrength[] mSignalStrength>;

        $r93 = $r92[i25];

        if $r93 == null goto label042;

        $r94 = r0.<com.android.server.TelephonyRegistry: android.telephony.SignalStrength[] mSignalStrength>;

        $r95 = $r94[i25];

        i29 = virtualinvoke $r95.<android.telephony.SignalStrength: int getGsmSignalStrength()>();

        r180 = r169.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

     label040:
        if i29 != 99 goto label041;

        i29 = -1;

        goto label041;

     label041:
        interfaceinvoke r180.<com.android.internal.telephony.IPhoneStateListener: void onSignalStrengthChanged(int)>(i29);

     label042:
        goto label045;

     label043:
        $r149 := @caughtexception;

     label044:
        $r150 = r169.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        specialinvoke r0.<com.android.server.TelephonyRegistry: void remove(android.os.IBinder)>($r150);

     label045:
        $i30 = i0 & 4;

        if $i30 == 0 goto label050;

     label046:
        $r91 = r169.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        $r90 = r0.<com.android.server.TelephonyRegistry: boolean[] mMessageWaiting>;

        $z9 = $r90[i25];

        interfaceinvoke $r91.<com.android.internal.telephony.IPhoneStateListener: void onMessageWaitingIndicatorChanged(boolean)>($z9);

     label047:
        goto label050;

     label048:
        $r122 := @caughtexception;

     label049:
        $r123 = r169.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        specialinvoke r0.<com.android.server.TelephonyRegistry: void remove(android.os.IBinder)>($r123);

     label050:
        $i31 = i0 & 8;

        if $i31 == 0 goto label055;

     label051:
        $r89 = r169.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        $r88 = r0.<com.android.server.TelephonyRegistry: boolean[] mCallForwarding>;

        $z8 = $r88[i25];

        interfaceinvoke $r89.<com.android.internal.telephony.IPhoneStateListener: void onCallForwardingIndicatorChanged(boolean)>($z8);

     label052:
        goto label055;

     label053:
        $r158 := @caughtexception;

     label054:
        $r159 = r169.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        specialinvoke r0.<com.android.server.TelephonyRegistry: void remove(android.os.IBinder)>($r159);

     label055:
        z15 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean validateEventsAndUserLocked(com.android.server.TelephonyRegistry$Record,int)>(r169, 16);

     label056:
        if z15 == 0 goto label061;

     label057:
        $z7 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean checkFineLocationAccess(com.android.server.TelephonyRegistry$Record,int)>(r169, 29);

        if $z7 == 0 goto label058;

        $r87 = r169.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        $r85 = r0.<com.android.server.TelephonyRegistry: android.telephony.CellIdentity[] mCellIdentity>;

        $r86 = $r85[i25];

        interfaceinvoke $r87.<com.android.internal.telephony.IPhoneStateListener: void onCellLocationChanged(android.telephony.CellIdentity)>($r86);

     label058:
        goto label061;

     label059:
        $r133 := @caughtexception;

     label060:
        $r134 = r169.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        specialinvoke r0.<com.android.server.TelephonyRegistry: void remove(android.os.IBinder)>($r134);

     label061:
        $i32 = i0 & 32;

        if $i32 == 0 goto label066;

     label062:
        $r83 = r169.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        $r82 = r0.<com.android.server.TelephonyRegistry: int[] mCallState>;

        $i19 = $r82[i25];

        $r84 = specialinvoke r0.<com.android.server.TelephonyRegistry: java.lang.String getCallIncomingNumber(com.android.server.TelephonyRegistry$Record,int)>(r169, i25);

        interfaceinvoke $r83.<com.android.internal.telephony.IPhoneStateListener: void onCallStateChanged(int,java.lang.String)>($i19, $r84);

     label063:
        goto label066;

     label064:
        $r124 := @caughtexception;

     label065:
        $r125 = r169.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        specialinvoke r0.<com.android.server.TelephonyRegistry: void remove(android.os.IBinder)>($r125);

     label066:
        $i33 = i0 & 64;

        if $i33 == 0 goto label071;

     label067:
        $r81 = r169.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        $r79 = r0.<com.android.server.TelephonyRegistry: int[] mDataConnectionState>;

        $i18 = $r79[i25];

        $r80 = r0.<com.android.server.TelephonyRegistry: int[] mDataConnectionNetworkType>;

        $i17 = $r80[i25];

        interfaceinvoke $r81.<com.android.internal.telephony.IPhoneStateListener: void onDataConnectionStateChanged(int,int)>($i18, $i17);

     label068:
        goto label071;

     label069:
        $r145 := @caughtexception;

     label070:
        $r146 = r169.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        specialinvoke r0.<com.android.server.TelephonyRegistry: void remove(android.os.IBinder)>($r146);

     label071:
        $i34 = i0 & 128;

        if $i34 == 0 goto label076;

     label072:
        $r78 = r169.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        $r77 = r0.<com.android.server.TelephonyRegistry: int[] mDataActivity>;

        $i16 = $r77[i25];

        interfaceinvoke $r78.<com.android.internal.telephony.IPhoneStateListener: void onDataActivity(int)>($i16);

     label073:
        goto label076;

     label074:
        $r101 := @caughtexception;

     label075:
        $r102 = r169.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        specialinvoke r0.<com.android.server.TelephonyRegistry: void remove(android.os.IBinder)>($r102);

     label076:
        $i35 = i0 & 256;

        if $i35 == 0 goto label081;

     label077:
        $r72 = r0.<com.android.server.TelephonyRegistry: android.telephony.SignalStrength[] mSignalStrength>;

        $r73 = $r72[i25];

        if $r73 == null goto label078;

        $r76 = r169.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        $r74 = r0.<com.android.server.TelephonyRegistry: android.telephony.SignalStrength[] mSignalStrength>;

        $r75 = $r74[i25];

        interfaceinvoke $r76.<com.android.internal.telephony.IPhoneStateListener: void onSignalStrengthsChanged(android.telephony.SignalStrength)>($r75);

     label078:
        goto label081;

     label079:
        $r126 := @caughtexception;

     label080:
        $r127 = r169.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        specialinvoke r0.<com.android.server.TelephonyRegistry: void remove(android.os.IBinder)>($r127);

     label081:
        $i36 = i0 & 512;

        if $i36 == 0 goto label087;

     label082:
        $i15 = r169.<com.android.server.TelephonyRegistry$Record: int subId>;

        specialinvoke r0.<com.android.server.TelephonyRegistry: void updateReportSignalStrengthDecision(int)>($i15);

     label083:
        $r67 = r0.<com.android.server.TelephonyRegistry: android.telephony.SignalStrength[] mSignalStrength>;

        $r68 = $r67[i25];

        if $r68 == null goto label084;

        $r71 = r169.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        $r69 = r0.<com.android.server.TelephonyRegistry: android.telephony.SignalStrength[] mSignalStrength>;

        $r70 = $r69[i25];

        interfaceinvoke $r71.<com.android.internal.telephony.IPhoneStateListener: void onSignalStrengthsChanged(android.telephony.SignalStrength)>($r70);

     label084:
        goto label087;

     label085:
        $r131 := @caughtexception;

     label086:
        $r132 = r169.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        specialinvoke r0.<com.android.server.TelephonyRegistry: void remove(android.os.IBinder)>($r132);

     label087:
        z16 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean validateEventsAndUserLocked(com.android.server.TelephonyRegistry$Record,int)>(r169, 1024);

     label088:
        if z16 == 0 goto label093;

     label089:
        $z6 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean checkFineLocationAccess(com.android.server.TelephonyRegistry$Record,int)>(r169, 29);

        if $z6 == 0 goto label090;

        $r64 = r169.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        $r63 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mCellInfo>;

        $r65 = virtualinvoke $r63.<java.util.ArrayList: java.lang.Object get(int)>(i25);

        $r66 = (java.util.List) $r65;

        interfaceinvoke $r64.<com.android.internal.telephony.IPhoneStateListener: void onCellInfoChanged(java.util.List)>($r66);

     label090:
        goto label093;

     label091:
        $r160 := @caughtexception;

     label092:
        $r161 = r169.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        specialinvoke r0.<com.android.server.TelephonyRegistry: void remove(android.os.IBinder)>($r161);

     label093:
        $i37 = i0 & 2048;

        if $i37 == 0 goto label098;

     label094:
        $r62 = r169.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        $r60 = r0.<com.android.server.TelephonyRegistry: android.telephony.PreciseCallState[] mPreciseCallState>;

        $r61 = $r60[i25];

        interfaceinvoke $r62.<com.android.internal.telephony.IPhoneStateListener: void onPreciseCallStateChanged(android.telephony.PreciseCallState)>($r61);

     label095:
        goto label098;

     label096:
        $r129 := @caughtexception;

     label097:
        $r130 = r169.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        specialinvoke r0.<com.android.server.TelephonyRegistry: void remove(android.os.IBinder)>($r130);

     label098:
        $i38 = 33554432 & i0;

        if $i38 == 0 goto label103;

     label099:
        $r59 = r169.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        $r57 = r0.<com.android.server.TelephonyRegistry: int[] mCallDisconnectCause>;

        $i14 = $r57[i25];

        $r58 = r0.<com.android.server.TelephonyRegistry: int[] mCallPreciseDisconnectCause>;

        $i13 = $r58[i25];

        interfaceinvoke $r59.<com.android.internal.telephony.IPhoneStateListener: void onCallDisconnectCauseChanged(int,int)>($i14, $i13);

     label100:
        goto label103;

     label101:
        $r152 := @caughtexception;

     label102:
        $r153 = r169.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        specialinvoke r0.<com.android.server.TelephonyRegistry: void remove(android.os.IBinder)>($r153);

     label103:
        $i39 = 134217728 & i0;

        if $i39 == 0 goto label108;

     label104:
        $r54 = r169.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        $r53 = r0.<com.android.server.TelephonyRegistry: java.util.List mImsReasonInfo>;

        $r55 = interfaceinvoke $r53.<java.util.List: java.lang.Object get(int)>(i25);

        $r56 = (android.telephony.ims.ImsReasonInfo) $r55;

        interfaceinvoke $r54.<com.android.internal.telephony.IPhoneStateListener: void onImsCallDisconnectCauseChanged(android.telephony.ims.ImsReasonInfo)>($r56);

     label105:
        goto label108;

     label106:
        $r105 := @caughtexception;

     label107:
        $r106 = r169.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        specialinvoke r0.<com.android.server.TelephonyRegistry: void remove(android.os.IBinder)>($r106);

     label108:
        $i40 = i0 & 4096;

        if $i40 == 0 goto label115;

     label109:
        $r47 = r0.<com.android.server.TelephonyRegistry: java.util.List mPreciseDataConnectionStates>;

        $r48 = interfaceinvoke $r47.<java.util.List: java.lang.Object get(int)>(i25);

        $r49 = (java.util.Map) $r48;

        $r50 = interfaceinvoke $r49.<java.util.Map: java.util.Collection values()>();

        r194 = interfaceinvoke $r50.<java.util.Collection: java.util.Iterator iterator()>();

     label110:
        $z5 = interfaceinvoke r194.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label112;

        $r51 = interfaceinvoke r194.<java.util.Iterator: java.lang.Object next()>();

        r195 = (android.telephony.PreciseDataConnectionState) $r51;

        $r52 = r169.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        interfaceinvoke $r52.<com.android.internal.telephony.IPhoneStateListener: void onPreciseDataConnectionStateChanged(android.telephony.PreciseDataConnectionState)>(r195);

     label111:
        goto label110;

     label112:
        goto label115;

     label113:
        $r118 := @caughtexception;

     label114:
        $r119 = r169.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        specialinvoke r0.<com.android.server.TelephonyRegistry: void remove(android.os.IBinder)>($r119);

     label115:
        $i41 = 65536 & i0;

        if $i41 == 0 goto label120;

     label116:
        $r46 = r169.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        $z4 = r0.<com.android.server.TelephonyRegistry: boolean mCarrierNetworkChangeState>;

        interfaceinvoke $r46.<com.android.internal.telephony.IPhoneStateListener: void onCarrierNetworkChange(boolean)>($z4);

     label117:
        goto label120;

     label118:
        $r107 := @caughtexception;

     label119:
        $r108 = r169.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        specialinvoke r0.<com.android.server.TelephonyRegistry: void remove(android.os.IBinder)>($r108);

     label120:
        $i42 = 131072 & i0;

        if $i42 == 0 goto label125;

     label121:
        $r45 = r169.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        $r44 = r0.<com.android.server.TelephonyRegistry: int[] mVoiceActivationState>;

        $i12 = $r44[i25];

        interfaceinvoke $r45.<com.android.internal.telephony.IPhoneStateListener: void onVoiceActivationStateChanged(int)>($i12);

     label122:
        goto label125;

     label123:
        $r156 := @caughtexception;

     label124:
        $r157 = r169.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        specialinvoke r0.<com.android.server.TelephonyRegistry: void remove(android.os.IBinder)>($r157);

     label125:
        $i43 = 262144 & i0;

        if $i43 == 0 goto label130;

     label126:
        $r43 = r169.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        $r42 = r0.<com.android.server.TelephonyRegistry: int[] mDataActivationState>;

        $i11 = $r42[i25];

        interfaceinvoke $r43.<com.android.internal.telephony.IPhoneStateListener: void onDataActivationStateChanged(int)>($i11);

     label127:
        goto label130;

     label128:
        $r154 := @caughtexception;

     label129:
        $r155 = r169.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        specialinvoke r0.<com.android.server.TelephonyRegistry: void remove(android.os.IBinder)>($r155);

     label130:
        $i44 = 524288 & i0;

        if $i44 == 0 goto label135;

     label131:
        $r41 = r169.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        $r40 = r0.<com.android.server.TelephonyRegistry: boolean[] mUserMobileDataState>;

        $z3 = $r40[i25];

        interfaceinvoke $r41.<com.android.internal.telephony.IPhoneStateListener: void onUserMobileDataStateChanged(boolean)>($z3);

     label132:
        goto label135;

     label133:
        $r103 := @caughtexception;

     label134:
        $r104 = r169.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        specialinvoke r0.<com.android.server.TelephonyRegistry: void remove(android.os.IBinder)>($r104);

     label135:
        $i45 = 1048576 & i0;

        if $i45 == 0 goto label140;

     label136:
        $r35 = r0.<com.android.server.TelephonyRegistry: android.telephony.TelephonyDisplayInfo[] mTelephonyDisplayInfos>;

        $r36 = $r35[i25];

        if $r36 == null goto label137;

        $r39 = r169.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        $r37 = r0.<com.android.server.TelephonyRegistry: android.telephony.TelephonyDisplayInfo[] mTelephonyDisplayInfos>;

        $r38 = $r37[i25];

        interfaceinvoke $r39.<com.android.internal.telephony.IPhoneStateListener: void onDisplayInfoChanged(android.telephony.TelephonyDisplayInfo)>($r38);

     label137:
        goto label140;

     label138:
        $r147 := @caughtexception;

     label139:
        $r148 = r169.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        specialinvoke r0.<com.android.server.TelephonyRegistry: void remove(android.os.IBinder)>($r148);

     label140:
        $i46 = 16777216 & i0;

        if $i46 == 0 goto label145;

     label141:
        $r34 = r169.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        $r33 = r0.<com.android.server.TelephonyRegistry: java.util.Map mEmergencyNumberList>;

        interfaceinvoke $r34.<com.android.internal.telephony.IPhoneStateListener: void onEmergencyNumberListChanged(java.util.Map)>($r33);

     label142:
        goto label145;

     label143:
        $r116 := @caughtexception;

     label144:
        $r117 = r169.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        specialinvoke r0.<com.android.server.TelephonyRegistry: void remove(android.os.IBinder)>($r117);

     label145:
        $i47 = 2097152 & i0;

        if $i47 == 0 goto label150;

     label146:
        $r32 = r169.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        $r31 = r0.<com.android.server.TelephonyRegistry: android.telephony.PhoneCapability mPhoneCapability>;

        interfaceinvoke $r32.<com.android.internal.telephony.IPhoneStateListener: void onPhoneCapabilityChanged(android.telephony.PhoneCapability)>($r31);

     label147:
        goto label150;

     label148:
        $r138 := @caughtexception;

     label149:
        $r139 = r169.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        specialinvoke r0.<com.android.server.TelephonyRegistry: void remove(android.os.IBinder)>($r139);

     label150:
        $i48 = 4194304 & i0;

        if $i48 == 0 goto label155;

     label151:
        $r30 = r169.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        $i10 = r0.<com.android.server.TelephonyRegistry: int mActiveDataSubId>;

        interfaceinvoke $r30.<com.android.internal.telephony.IPhoneStateListener: void onActiveDataSubIdChanged(int)>($i10);

     label152:
        goto label155;

     label153:
        $r140 := @caughtexception;

     label154:
        $r141 = r169.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        specialinvoke r0.<com.android.server.TelephonyRegistry: void remove(android.os.IBinder)>($r141);

     label155:
        $i49 = 8388608 & i0;

        if $i49 == 0 goto label160;

     label156:
        $r29 = r169.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        $i9 = r0.<com.android.server.TelephonyRegistry: int mRadioPowerState>;

        interfaceinvoke $r29.<com.android.internal.telephony.IPhoneStateListener: void onRadioPowerStateChanged(int)>($i9);

     label157:
        goto label160;

     label158:
        $r110 := @caughtexception;

     label159:
        $r111 = r169.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        specialinvoke r0.<com.android.server.TelephonyRegistry: void remove(android.os.IBinder)>($r111);

     label160:
        $i50 = i0 & 16384;

        if $i50 == 0 goto label165;

     label161:
        $r28 = r169.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        $r27 = r0.<com.android.server.TelephonyRegistry: int[] mSrvccState>;

        $i8 = $r27[i25];

        interfaceinvoke $r28.<com.android.internal.telephony.IPhoneStateListener: void onSrvccStateChanged(int)>($i8);

     label162:
        goto label165;

     label163:
        $r112 := @caughtexception;

     label164:
        $r113 = r169.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        specialinvoke r0.<com.android.server.TelephonyRegistry: void remove(android.os.IBinder)>($r113);

     label165:
        $i51 = 67108864 & i0;

        if $i51 == 0 goto label170;

     label166:
        $r26 = r169.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        $r24 = r0.<com.android.server.TelephonyRegistry: android.telephony.CallAttributes[] mCallAttributes>;

        $r25 = $r24[i25];

        interfaceinvoke $r26.<com.android.internal.telephony.IPhoneStateListener: void onCallAttributesChanged(android.telephony.CallAttributes)>($r25);

     label167:
        goto label170;

     label168:
        $r120 := @caughtexception;

     label169:
        $r121 = r169.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        specialinvoke r0.<com.android.server.TelephonyRegistry: void remove(android.os.IBinder)>($r121);

     label170:
        $i52 = -2147483648 & i0;

        if $i52 == 0 goto label183;

     label171:
        $r22 = r0.<com.android.server.TelephonyRegistry: java.util.List mBarringInfo>;

        $r23 = interfaceinvoke $r22.<java.util.List: java.lang.Object get(int)>(i25);

        r208 = (android.telephony.BarringInfo) $r23;

     label172:
        if r208 == null goto label175;

     label173:
        r209 = virtualinvoke r208.<android.telephony.BarringInfo: android.telephony.BarringInfo createLocationInfoSanitizedCopy()>();

     label174:
        goto label176;

     label175:
        r209 = null;

     label176:
        r210 = r169.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        $z2 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean checkFineLocationAccess(com.android.server.TelephonyRegistry$Record,int)>(r169, 1);

        if $z2 == 0 goto label178;

     label177:
        r209 = r208;

        goto label178;

     label178:
        interfaceinvoke r210.<com.android.internal.telephony.IPhoneStateListener: void onBarringInfoChanged(android.telephony.BarringInfo)>(r209);

     label179:
        goto label183;

     label180:
        $r135 := @caughtexception;

     label181:
        $r136 = r169.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        specialinvoke r0.<com.android.server.TelephonyRegistry: void remove(android.os.IBinder)>($r136);

     label182:
        goto label183;

     label183:
        exitmonitor r167;

     label184:
        goto label191;

     label185:
        $r144 := @caughtexception;

        r212 = $r144;

        goto label187;

     label186:
        $r143 := @caughtexception;

        r212 = $r143;

     label187:
        exitmonitor r167;

     label188:
        throw r212;

     label189:
        $r128 := @caughtexception;

        r212 = $r128;

        goto label187;

     label190:
        $r20 = interfaceinvoke r164.<com.android.internal.telephony.IPhoneStateListener: android.os.IBinder asBinder()>();

        specialinvoke r0.<com.android.server.TelephonyRegistry: void remove(android.os.IBinder)>($r20);

     label191:
        return;

        catch java.lang.Throwable from label002 to label003 with label186;
        catch java.lang.Throwable from label005 to label006 with label186;
        catch java.lang.Throwable from label007 to label008 with label186;
        catch java.lang.Throwable from label009 to label010 with label186;
        catch java.lang.Throwable from label010 to label011 with label185;
        catch java.lang.Throwable from label011 to label012 with label189;
        catch java.lang.Throwable from label013 to label014 with label189;
        catch java.lang.Throwable from label014 to label015 with label189;
        catch java.lang.Throwable from label016 to label017 with label189;
        catch android.os.RemoteException from label018 to label019 with label035;
        catch java.lang.Throwable from label018 to label019 with label189;
        catch android.os.RemoteException from label020 to label021 with label022;
        catch java.lang.Throwable from label020 to label021 with label189;
        catch android.os.RemoteException from label023 to label024 with label035;
        catch java.lang.Throwable from label023 to label024 with label189;
        catch android.os.RemoteException from label025 to label026 with label029;
        catch java.lang.Throwable from label025 to label026 with label189;
        catch android.os.RemoteException from label026 to label027 with label028;
        catch java.lang.Throwable from label026 to label027 with label189;
        catch android.os.RemoteException from label030 to label031 with label034;
        catch java.lang.Throwable from label030 to label031 with label189;
        catch android.os.RemoteException from label031 to label032 with label033;
        catch java.lang.Throwable from label031 to label032 with label189;
        catch java.lang.Throwable from label036 to label037 with label189;
        catch android.os.RemoteException from label039 to label040 with label043;
        catch java.lang.Throwable from label039 to label040 with label189;
        catch android.os.RemoteException from label041 to label042 with label043;
        catch java.lang.Throwable from label041 to label042 with label189;
        catch java.lang.Throwable from label044 to label045 with label189;
        catch android.os.RemoteException from label046 to label047 with label048;
        catch java.lang.Throwable from label046 to label047 with label189;
        catch java.lang.Throwable from label049 to label050 with label189;
        catch android.os.RemoteException from label051 to label052 with label053;
        catch java.lang.Throwable from label051 to label052 with label189;
        catch java.lang.Throwable from label054 to label055 with label189;
        catch java.lang.Throwable from label055 to label056 with label189;
        catch android.os.RemoteException from label057 to label058 with label059;
        catch java.lang.Throwable from label057 to label058 with label189;
        catch java.lang.Throwable from label060 to label061 with label189;
        catch android.os.RemoteException from label062 to label063 with label064;
        catch java.lang.Throwable from label062 to label063 with label189;
        catch java.lang.Throwable from label065 to label066 with label189;
        catch android.os.RemoteException from label067 to label068 with label069;
        catch java.lang.Throwable from label067 to label068 with label189;
        catch java.lang.Throwable from label070 to label071 with label189;
        catch android.os.RemoteException from label072 to label073 with label074;
        catch java.lang.Throwable from label072 to label073 with label189;
        catch java.lang.Throwable from label075 to label076 with label189;
        catch android.os.RemoteException from label077 to label078 with label079;
        catch java.lang.Throwable from label077 to label078 with label189;
        catch java.lang.Throwable from label080 to label081 with label189;
        catch java.lang.Throwable from label082 to label083 with label189;
        catch android.os.RemoteException from label083 to label084 with label085;
        catch java.lang.Throwable from label083 to label084 with label189;
        catch java.lang.Throwable from label086 to label087 with label189;
        catch java.lang.Throwable from label087 to label088 with label189;
        catch android.os.RemoteException from label089 to label090 with label091;
        catch java.lang.Throwable from label089 to label090 with label189;
        catch java.lang.Throwable from label092 to label093 with label189;
        catch android.os.RemoteException from label094 to label095 with label096;
        catch java.lang.Throwable from label094 to label095 with label189;
        catch java.lang.Throwable from label097 to label098 with label189;
        catch android.os.RemoteException from label099 to label100 with label101;
        catch java.lang.Throwable from label099 to label100 with label189;
        catch java.lang.Throwable from label102 to label103 with label189;
        catch android.os.RemoteException from label104 to label105 with label106;
        catch java.lang.Throwable from label104 to label105 with label189;
        catch java.lang.Throwable from label107 to label108 with label189;
        catch android.os.RemoteException from label109 to label110 with label113;
        catch java.lang.Throwable from label109 to label110 with label189;
        catch android.os.RemoteException from label110 to label111 with label113;
        catch java.lang.Throwable from label110 to label111 with label189;
        catch java.lang.Throwable from label114 to label115 with label189;
        catch android.os.RemoteException from label116 to label117 with label118;
        catch java.lang.Throwable from label116 to label117 with label189;
        catch java.lang.Throwable from label119 to label120 with label189;
        catch android.os.RemoteException from label121 to label122 with label123;
        catch java.lang.Throwable from label121 to label122 with label189;
        catch java.lang.Throwable from label124 to label125 with label189;
        catch android.os.RemoteException from label126 to label127 with label128;
        catch java.lang.Throwable from label126 to label127 with label189;
        catch java.lang.Throwable from label129 to label130 with label189;
        catch android.os.RemoteException from label131 to label132 with label133;
        catch java.lang.Throwable from label131 to label132 with label189;
        catch java.lang.Throwable from label134 to label135 with label189;
        catch android.os.RemoteException from label136 to label137 with label138;
        catch java.lang.Throwable from label136 to label137 with label189;
        catch java.lang.Throwable from label139 to label140 with label189;
        catch android.os.RemoteException from label141 to label142 with label143;
        catch java.lang.Throwable from label141 to label142 with label189;
        catch java.lang.Throwable from label144 to label145 with label189;
        catch android.os.RemoteException from label146 to label147 with label148;
        catch java.lang.Throwable from label146 to label147 with label189;
        catch java.lang.Throwable from label149 to label150 with label189;
        catch android.os.RemoteException from label151 to label152 with label153;
        catch java.lang.Throwable from label151 to label152 with label189;
        catch java.lang.Throwable from label154 to label155 with label189;
        catch android.os.RemoteException from label156 to label157 with label158;
        catch java.lang.Throwable from label156 to label157 with label189;
        catch java.lang.Throwable from label159 to label160 with label189;
        catch android.os.RemoteException from label161 to label162 with label163;
        catch java.lang.Throwable from label161 to label162 with label189;
        catch java.lang.Throwable from label164 to label165 with label189;
        catch android.os.RemoteException from label166 to label167 with label168;
        catch java.lang.Throwable from label166 to label167 with label189;
        catch java.lang.Throwable from label169 to label170 with label189;
        catch java.lang.Throwable from label171 to label172 with label189;
        catch java.lang.Throwable from label173 to label174 with label189;
        catch android.os.RemoteException from label176 to label177 with label180;
        catch java.lang.Throwable from label176 to label177 with label189;
        catch android.os.RemoteException from label178 to label179 with label180;
        catch java.lang.Throwable from label178 to label179 with label189;
        catch java.lang.Throwable from label181 to label182 with label189;
        catch java.lang.Throwable from label183 to label184 with label189;
        catch java.lang.Throwable from label187 to label188 with label189;
    }

    private static void log(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("TelephonyRegistry", r0);

        return;
    }

    private static void loge(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("TelephonyRegistry", r0);

        return;
    }

    private void notifyDataConnectionFailedForSubscriber(int, int, int)
    {
        com.android.server.TelephonyRegistry r0;
        int i0, i1, i2, $i3;
        java.util.ArrayList r1, $r7, $r18;
        java.util.Iterator r2;
        boolean z0, $z1, $z2, $z3, $z4;
        java.util.List $r3, $r9;
        java.lang.Object $r4, $r8, $r11, $r14;
        java.lang.Integer $r5, $r13;
        com.android.internal.telephony.IPhoneStateListener $r10;
        java.util.Map $r12, r20;
        android.telephony.PreciseDataConnectionState $r15, r21;
        android.os.RemoteException $r16;
        android.os.IBinder $r17;
        java.lang.Throwable $r19;
        com.android.server.TelephonyRegistry$Record r22;

        r0 := @this: com.android.server.TelephonyRegistry;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $z1 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean checkNotifyPermission(java.lang.String)>("notifyDataConnectionFailed()");

        if $z1 != 0 goto label01;

        return;

     label01:
        r1 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        entermonitor r1;

     label02:
        $z2 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean validatePhoneId(int)>(i0);

        if $z2 == 0 goto label10;

        $r3 = r0.<com.android.server.TelephonyRegistry: java.util.List mPreciseDataConnectionStates>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i0);

        r20 = (java.util.Map) $r4;

        r21 = new android.telephony.PreciseDataConnectionState;

        specialinvoke r21.<android.telephony.PreciseDataConnectionState: void <init>(int,int,int,java.lang.String,android.net.LinkProperties,int,android.telephony.data.ApnSetting)>(-1, 0, i2, null, null, 0, null);

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        interfaceinvoke r20.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, r21);

        $r7 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        r2 = virtualinvoke $r7.<java.util.ArrayList: java.util.Iterator iterator()>();

     label03:
        $z3 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label10;

        $r8 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r22 = (com.android.server.TelephonyRegistry$Record) $r8;

        $z4 = virtualinvoke r22.<com.android.server.TelephonyRegistry$Record: boolean matchPhoneStateListenerEvent(int)>(4096);

        if $z4 == 0 goto label09;

        $i3 = r22.<com.android.server.TelephonyRegistry$Record: int subId>;

        z0 = virtualinvoke r0.<com.android.server.TelephonyRegistry: boolean idMatch(int,int,int)>($i3, i1, i0);

     label04:
        if z0 == 0 goto label09;

     label05:
        $r10 = r22.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        $r9 = r0.<com.android.server.TelephonyRegistry: java.util.List mPreciseDataConnectionStates>;

        $r11 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(i0);

        $r12 = (java.util.Map) $r11;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r14 = interfaceinvoke $r12.<java.util.Map: java.lang.Object get(java.lang.Object)>($r13);

        $r15 = (android.telephony.PreciseDataConnectionState) $r14;

        interfaceinvoke $r10.<com.android.internal.telephony.IPhoneStateListener: void onPreciseDataConnectionStateChanged(android.telephony.PreciseDataConnectionState)>($r15);

     label06:
        goto label09;

     label07:
        $r16 := @caughtexception;

     label08:
        $r18 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRemoveList>;

        $r17 = r22.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        virtualinvoke $r18.<java.util.ArrayList: boolean add(java.lang.Object)>($r17);

     label09:
        goto label03;

     label10:
        specialinvoke r0.<com.android.server.TelephonyRegistry: void handleRemoveListLocked()>();

        exitmonitor r1;

     label11:
        return;

     label12:
        $r19 := @caughtexception;

     label13:
        exitmonitor r1;

     label14:
        throw $r19;

        catch java.lang.Throwable from label02 to label03 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch android.os.RemoteException from label05 to label06 with label07;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    private void onMultiSimConfigChanged()
    {
        com.android.server.TelephonyRegistry r0;
        android.telephony.TelephonyManager $r1;
        int[] $r2, $r3, $r4, $r5, $r6, $r7, $r14, $r15, $r16, $r17, $r28, $r29, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r46, $r47, $r60, $r61, $r62, $r63, $r64, $r75, $r76, $r77, $r84, $r87, $r88, $r89, r101;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, i30, i31, i32;
        java.lang.String[] $r8, $r10, $r65;
        java.lang.Object[] $r9, $r12, $r26, $r31, $r44, $r49, $r52, $r55, $r58, $r99;
        android.telephony.ServiceState[] $r11, $r13, $r67;
        boolean[] $r18, $r19, $r21, $r22, $r23, $r24, $r69, $r70, $r71;
        android.telephony.SignalStrength[] $r20, $r68, $r100, r102;
        android.telephony.CellIdentity[] $r25, $r27, $r72;
        android.telephony.PreciseCallState[] $r30, $r32, $r85;
        android.telephony.CallQuality[] $r43, $r45, $r78;
        android.telephony.CallAttributes[] $r48, $r50, $r81;
        android.telephony.emergency.EmergencyNumber[] $r51, $r53, $r54, $r56;
        android.telephony.TelephonyDisplayInfo[] $r57, $r59, $r94;
        android.telephony.ServiceState $r66;
        java.util.ArrayList $r73, $r95;
        java.util.List $r74, $r91, $r93, $r96, $r97, $r98;
        android.telephony.CallQuality $r79, $r83;
        android.telephony.CallAttributes $r80;
        android.telephony.PreciseCallState $r82, $r86;
        java.util.HashMap $r90;
        android.telephony.BarringInfo $r92;

        r0 := @this: com.android.server.TelephonyRegistry;

        i30 = r0.<com.android.server.TelephonyRegistry: int mNumPhones>;

        $r1 = specialinvoke r0.<com.android.server.TelephonyRegistry: android.telephony.TelephonyManager getTelephonyManager()>();

        i31 = virtualinvoke $r1.<android.telephony.TelephonyManager: int getActiveModemCount()>();

        r0.<com.android.server.TelephonyRegistry: int mNumPhones> = i31;

        if i30 != i31 goto label1;

        return;

     label1:
        $r2 = r0.<com.android.server.TelephonyRegistry: int[] mCallState>;

        r101 = staticinvoke <java.util.Arrays: int[] copyOf(int[],int)>($r2, i31);

        r0.<com.android.server.TelephonyRegistry: int[] mCallState> = r101;

        $i0 = r0.<com.android.server.TelephonyRegistry: int mNumPhones>;

        $r3 = staticinvoke <java.util.Arrays: int[] copyOf(int[],int)>(r101, $i0);

        r0.<com.android.server.TelephonyRegistry: int[] mDataActivity> = $r3;

        $r4 = r0.<com.android.server.TelephonyRegistry: int[] mCallState>;

        $i1 = r0.<com.android.server.TelephonyRegistry: int mNumPhones>;

        $r5 = staticinvoke <java.util.Arrays: int[] copyOf(int[],int)>($r4, $i1);

        r0.<com.android.server.TelephonyRegistry: int[] mDataConnectionState> = $r5;

        $r6 = r0.<com.android.server.TelephonyRegistry: int[] mCallState>;

        $i2 = r0.<com.android.server.TelephonyRegistry: int mNumPhones>;

        $r7 = staticinvoke <java.util.Arrays: int[] copyOf(int[],int)>($r6, $i2);

        r0.<com.android.server.TelephonyRegistry: int[] mDataConnectionNetworkType> = $r7;

        $r8 = r0.<com.android.server.TelephonyRegistry: java.lang.String[] mCallIncomingNumber>;

        $i3 = r0.<com.android.server.TelephonyRegistry: int mNumPhones>;

        $r9 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>($r8, $i3);

        $r10 = (java.lang.String[]) $r9;

        r0.<com.android.server.TelephonyRegistry: java.lang.String[] mCallIncomingNumber> = $r10;

        $r11 = r0.<com.android.server.TelephonyRegistry: android.telephony.ServiceState[] mServiceState>;

        $i4 = r0.<com.android.server.TelephonyRegistry: int mNumPhones>;

        $r12 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>($r11, $i4);

        $r13 = (android.telephony.ServiceState[]) $r12;

        r0.<com.android.server.TelephonyRegistry: android.telephony.ServiceState[] mServiceState> = $r13;

        $r14 = r0.<com.android.server.TelephonyRegistry: int[] mVoiceActivationState>;

        $i5 = r0.<com.android.server.TelephonyRegistry: int mNumPhones>;

        $r15 = staticinvoke <java.util.Arrays: int[] copyOf(int[],int)>($r14, $i5);

        r0.<com.android.server.TelephonyRegistry: int[] mVoiceActivationState> = $r15;

        $r16 = r0.<com.android.server.TelephonyRegistry: int[] mDataActivationState>;

        $i6 = r0.<com.android.server.TelephonyRegistry: int mNumPhones>;

        $r17 = staticinvoke <java.util.Arrays: int[] copyOf(int[],int)>($r16, $i6);

        r0.<com.android.server.TelephonyRegistry: int[] mDataActivationState> = $r17;

        $r18 = r0.<com.android.server.TelephonyRegistry: boolean[] mUserMobileDataState>;

        $i7 = r0.<com.android.server.TelephonyRegistry: int mNumPhones>;

        $r19 = staticinvoke <java.util.Arrays: boolean[] copyOf(boolean[],int)>($r18, $i7);

        r0.<com.android.server.TelephonyRegistry: boolean[] mUserMobileDataState> = $r19;

        r102 = r0.<com.android.server.TelephonyRegistry: android.telephony.SignalStrength[] mSignalStrength>;

        if r102 == null goto label2;

        $i29 = r0.<com.android.server.TelephonyRegistry: int mNumPhones>;

        $r99 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>(r102, $i29);

        $r100 = (android.telephony.SignalStrength[]) $r99;

        r0.<com.android.server.TelephonyRegistry: android.telephony.SignalStrength[] mSignalStrength> = $r100;

        goto label3;

     label2:
        $i8 = r0.<com.android.server.TelephonyRegistry: int mNumPhones>;

        $r20 = newarray (android.telephony.SignalStrength)[$i8];

        r0.<com.android.server.TelephonyRegistry: android.telephony.SignalStrength[] mSignalStrength> = $r20;

     label3:
        $r21 = r0.<com.android.server.TelephonyRegistry: boolean[] mMessageWaiting>;

        $i9 = r0.<com.android.server.TelephonyRegistry: int mNumPhones>;

        $r22 = staticinvoke <java.util.Arrays: boolean[] copyOf(boolean[],int)>($r21, $i9);

        r0.<com.android.server.TelephonyRegistry: boolean[] mMessageWaiting> = $r22;

        $r23 = r0.<com.android.server.TelephonyRegistry: boolean[] mCallForwarding>;

        $i10 = r0.<com.android.server.TelephonyRegistry: int mNumPhones>;

        $r24 = staticinvoke <java.util.Arrays: boolean[] copyOf(boolean[],int)>($r23, $i10);

        r0.<com.android.server.TelephonyRegistry: boolean[] mCallForwarding> = $r24;

        $r25 = r0.<com.android.server.TelephonyRegistry: android.telephony.CellIdentity[] mCellIdentity>;

        $i11 = r0.<com.android.server.TelephonyRegistry: int mNumPhones>;

        $r26 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>($r25, $i11);

        $r27 = (android.telephony.CellIdentity[]) $r26;

        r0.<com.android.server.TelephonyRegistry: android.telephony.CellIdentity[] mCellIdentity> = $r27;

        $r28 = r0.<com.android.server.TelephonyRegistry: int[] mSrvccState>;

        $i12 = r0.<com.android.server.TelephonyRegistry: int mNumPhones>;

        $r29 = staticinvoke <java.util.Arrays: int[] copyOf(int[],int)>($r28, $i12);

        r0.<com.android.server.TelephonyRegistry: int[] mSrvccState> = $r29;

        $r30 = r0.<com.android.server.TelephonyRegistry: android.telephony.PreciseCallState[] mPreciseCallState>;

        $i13 = r0.<com.android.server.TelephonyRegistry: int mNumPhones>;

        $r31 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>($r30, $i13);

        $r32 = (android.telephony.PreciseCallState[]) $r31;

        r0.<com.android.server.TelephonyRegistry: android.telephony.PreciseCallState[] mPreciseCallState> = $r32;

        $r33 = r0.<com.android.server.TelephonyRegistry: int[] mForegroundCallState>;

        $i14 = r0.<com.android.server.TelephonyRegistry: int mNumPhones>;

        $r34 = staticinvoke <java.util.Arrays: int[] copyOf(int[],int)>($r33, $i14);

        r0.<com.android.server.TelephonyRegistry: int[] mForegroundCallState> = $r34;

        $r35 = r0.<com.android.server.TelephonyRegistry: int[] mBackgroundCallState>;

        $i15 = r0.<com.android.server.TelephonyRegistry: int mNumPhones>;

        $r36 = staticinvoke <java.util.Arrays: int[] copyOf(int[],int)>($r35, $i15);

        r0.<com.android.server.TelephonyRegistry: int[] mBackgroundCallState> = $r36;

        $r37 = r0.<com.android.server.TelephonyRegistry: int[] mRingingCallState>;

        $i16 = r0.<com.android.server.TelephonyRegistry: int mNumPhones>;

        $r38 = staticinvoke <java.util.Arrays: int[] copyOf(int[],int)>($r37, $i16);

        r0.<com.android.server.TelephonyRegistry: int[] mRingingCallState> = $r38;

        $r39 = r0.<com.android.server.TelephonyRegistry: int[] mCallDisconnectCause>;

        $i17 = r0.<com.android.server.TelephonyRegistry: int mNumPhones>;

        $r40 = staticinvoke <java.util.Arrays: int[] copyOf(int[],int)>($r39, $i17);

        r0.<com.android.server.TelephonyRegistry: int[] mCallDisconnectCause> = $r40;

        $r41 = r0.<com.android.server.TelephonyRegistry: int[] mCallPreciseDisconnectCause>;

        $i18 = r0.<com.android.server.TelephonyRegistry: int mNumPhones>;

        $r42 = staticinvoke <java.util.Arrays: int[] copyOf(int[],int)>($r41, $i18);

        r0.<com.android.server.TelephonyRegistry: int[] mCallPreciseDisconnectCause> = $r42;

        $r43 = r0.<com.android.server.TelephonyRegistry: android.telephony.CallQuality[] mCallQuality>;

        $i19 = r0.<com.android.server.TelephonyRegistry: int mNumPhones>;

        $r44 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>($r43, $i19);

        $r45 = (android.telephony.CallQuality[]) $r44;

        r0.<com.android.server.TelephonyRegistry: android.telephony.CallQuality[] mCallQuality> = $r45;

        $r46 = r0.<com.android.server.TelephonyRegistry: int[] mCallNetworkType>;

        $i20 = r0.<com.android.server.TelephonyRegistry: int mNumPhones>;

        $r47 = staticinvoke <java.util.Arrays: int[] copyOf(int[],int)>($r46, $i20);

        r0.<com.android.server.TelephonyRegistry: int[] mCallNetworkType> = $r47;

        $r48 = r0.<com.android.server.TelephonyRegistry: android.telephony.CallAttributes[] mCallAttributes>;

        $i21 = r0.<com.android.server.TelephonyRegistry: int mNumPhones>;

        $r49 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>($r48, $i21);

        $r50 = (android.telephony.CallAttributes[]) $r49;

        r0.<com.android.server.TelephonyRegistry: android.telephony.CallAttributes[] mCallAttributes> = $r50;

        $r51 = r0.<com.android.server.TelephonyRegistry: android.telephony.emergency.EmergencyNumber[] mOutgoingCallEmergencyNumber>;

        $i22 = r0.<com.android.server.TelephonyRegistry: int mNumPhones>;

        $r52 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>($r51, $i22);

        $r53 = (android.telephony.emergency.EmergencyNumber[]) $r52;

        r0.<com.android.server.TelephonyRegistry: android.telephony.emergency.EmergencyNumber[] mOutgoingCallEmergencyNumber> = $r53;

        $r54 = r0.<com.android.server.TelephonyRegistry: android.telephony.emergency.EmergencyNumber[] mOutgoingSmsEmergencyNumber>;

        $i23 = r0.<com.android.server.TelephonyRegistry: int mNumPhones>;

        $r55 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>($r54, $i23);

        $r56 = (android.telephony.emergency.EmergencyNumber[]) $r55;

        r0.<com.android.server.TelephonyRegistry: android.telephony.emergency.EmergencyNumber[] mOutgoingSmsEmergencyNumber> = $r56;

        $r57 = r0.<com.android.server.TelephonyRegistry: android.telephony.TelephonyDisplayInfo[] mTelephonyDisplayInfos>;

        $i24 = r0.<com.android.server.TelephonyRegistry: int mNumPhones>;

        $r58 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>($r57, $i24);

        $r59 = (android.telephony.TelephonyDisplayInfo[]) $r58;

        r0.<com.android.server.TelephonyRegistry: android.telephony.TelephonyDisplayInfo[] mTelephonyDisplayInfos> = $r59;

        i32 = r0.<com.android.server.TelephonyRegistry: int mNumPhones>;

        if i32 >= i30 goto label4;

        $r95 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mCellInfo>;

        specialinvoke r0.<com.android.server.TelephonyRegistry: void cutListToSize(java.util.List,int)>($r95, i32);

        $r96 = r0.<com.android.server.TelephonyRegistry: java.util.List mImsReasonInfo>;

        $i26 = r0.<com.android.server.TelephonyRegistry: int mNumPhones>;

        specialinvoke r0.<com.android.server.TelephonyRegistry: void cutListToSize(java.util.List,int)>($r96, $i26);

        $r97 = r0.<com.android.server.TelephonyRegistry: java.util.List mPreciseDataConnectionStates>;

        $i27 = r0.<com.android.server.TelephonyRegistry: int mNumPhones>;

        specialinvoke r0.<com.android.server.TelephonyRegistry: void cutListToSize(java.util.List,int)>($r97, $i27);

        $r98 = r0.<com.android.server.TelephonyRegistry: java.util.List mBarringInfo>;

        $i28 = r0.<com.android.server.TelephonyRegistry: int mNumPhones>;

        specialinvoke r0.<com.android.server.TelephonyRegistry: void cutListToSize(java.util.List,int)>($r98, $i28);

        return;

     label4:
        $i25 = r0.<com.android.server.TelephonyRegistry: int mNumPhones>;

        if i30 >= $i25 goto label5;

        $r60 = r0.<com.android.server.TelephonyRegistry: int[] mCallState>;

        $r60[i30] = 0;

        $r61 = r0.<com.android.server.TelephonyRegistry: int[] mDataActivity>;

        $r61[i30] = 0;

        $r62 = r0.<com.android.server.TelephonyRegistry: int[] mDataConnectionState>;

        $r62[i30] = -1;

        $r63 = r0.<com.android.server.TelephonyRegistry: int[] mVoiceActivationState>;

        $r63[i30] = 0;

        $r64 = r0.<com.android.server.TelephonyRegistry: int[] mDataActivationState>;

        $r64[i30] = 0;

        $r65 = r0.<com.android.server.TelephonyRegistry: java.lang.String[] mCallIncomingNumber>;

        $r65[i30] = "";

        $r67 = r0.<com.android.server.TelephonyRegistry: android.telephony.ServiceState[] mServiceState>;

        $r66 = new android.telephony.ServiceState;

        specialinvoke $r66.<android.telephony.ServiceState: void <init>()>();

        $r67[i30] = $r66;

        $r68 = r0.<com.android.server.TelephonyRegistry: android.telephony.SignalStrength[] mSignalStrength>;

        $r68[i30] = null;

        $r69 = r0.<com.android.server.TelephonyRegistry: boolean[] mUserMobileDataState>;

        $r69[i30] = 0;

        $r70 = r0.<com.android.server.TelephonyRegistry: boolean[] mMessageWaiting>;

        $r70[i30] = 0;

        $r71 = r0.<com.android.server.TelephonyRegistry: boolean[] mCallForwarding>;

        $r71[i30] = 0;

        $r72 = r0.<com.android.server.TelephonyRegistry: android.telephony.CellIdentity[] mCellIdentity>;

        $r72[i30] = null;

        $r73 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mCellInfo>;

        virtualinvoke $r73.<java.util.ArrayList: void add(int,java.lang.Object)>(i30, null);

        $r74 = r0.<com.android.server.TelephonyRegistry: java.util.List mImsReasonInfo>;

        interfaceinvoke $r74.<java.util.List: void add(int,java.lang.Object)>(i30, null);

        $r75 = r0.<com.android.server.TelephonyRegistry: int[] mSrvccState>;

        $r75[i30] = -1;

        $r76 = r0.<com.android.server.TelephonyRegistry: int[] mCallDisconnectCause>;

        $r76[i30] = -1;

        $r77 = r0.<com.android.server.TelephonyRegistry: int[] mCallPreciseDisconnectCause>;

        $r77[i30] = -1;

        $r78 = r0.<com.android.server.TelephonyRegistry: android.telephony.CallQuality[] mCallQuality>;

        $r79 = staticinvoke <com.android.server.TelephonyRegistry: android.telephony.CallQuality createCallQuality()>();

        $r78[i30] = $r79;

        $r81 = r0.<com.android.server.TelephonyRegistry: android.telephony.CallAttributes[] mCallAttributes>;

        $r80 = new android.telephony.CallAttributes;

        $r82 = staticinvoke <com.android.server.TelephonyRegistry: android.telephony.PreciseCallState createPreciseCallState()>();

        $r83 = staticinvoke <com.android.server.TelephonyRegistry: android.telephony.CallQuality createCallQuality()>();

        specialinvoke $r80.<android.telephony.CallAttributes: void <init>(android.telephony.PreciseCallState,int,android.telephony.CallQuality)>($r82, 0, $r83);

        $r81[i30] = $r80;

        $r84 = r0.<com.android.server.TelephonyRegistry: int[] mCallNetworkType>;

        $r84[i30] = 0;

        $r85 = r0.<com.android.server.TelephonyRegistry: android.telephony.PreciseCallState[] mPreciseCallState>;

        $r86 = staticinvoke <com.android.server.TelephonyRegistry: android.telephony.PreciseCallState createPreciseCallState()>();

        $r85[i30] = $r86;

        $r87 = r0.<com.android.server.TelephonyRegistry: int[] mRingingCallState>;

        $r87[i30] = 0;

        $r88 = r0.<com.android.server.TelephonyRegistry: int[] mForegroundCallState>;

        $r88[i30] = 0;

        $r89 = r0.<com.android.server.TelephonyRegistry: int[] mBackgroundCallState>;

        $r89[i30] = 0;

        $r91 = r0.<com.android.server.TelephonyRegistry: java.util.List mPreciseDataConnectionStates>;

        $r90 = new java.util.HashMap;

        specialinvoke $r90.<java.util.HashMap: void <init>()>();

        interfaceinvoke $r91.<java.util.List: boolean add(java.lang.Object)>($r90);

        $r93 = r0.<com.android.server.TelephonyRegistry: java.util.List mBarringInfo>;

        $r92 = new android.telephony.BarringInfo;

        specialinvoke $r92.<android.telephony.BarringInfo: void <init>()>();

        interfaceinvoke $r93.<java.util.List: void add(int,java.lang.Object)>(i30, $r92);

        $r94 = r0.<com.android.server.TelephonyRegistry: android.telephony.TelephonyDisplayInfo[] mTelephonyDisplayInfos>;

        $r94[i30] = null;

        i30 = i30 + 1;

        goto label4;

     label5:
        return;
    }

    private static java.lang.String pii(java.lang.String)
    {
        boolean $z0;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        $z0 = <android.os.Build: boolean IS_DEBUGGABLE>;

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        r0 = "***";

     label2:
        return r0;
    }

    private void remove(android.os.IBinder)
    {
        com.android.server.TelephonyRegistry r0;
        java.util.ArrayList r1, $r4, $r5, $r14;
        int i0, $i1, i2;
        com.android.server.TelephonyRegistry$Record r2;
        com.android.server.TelephonyRegistry$TelephonyRegistryDeathRecipient r3, $r9;
        java.lang.Object $r6;
        android.os.IBinder $r7, r12;
        java.lang.Throwable $r10, $r11;
        boolean $z1;

        r0 := @this: com.android.server.TelephonyRegistry;

        r12 := @parameter0: android.os.IBinder;

        r1 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        entermonitor r1;

     label01:
        $r4 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        i0 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

     label02:
        i2 = 0;

     label03:
        if i2 >= i0 goto label13;

     label04:
        $r5 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r2 = (com.android.server.TelephonyRegistry$Record) $r6;

        $r7 = r2.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        if $r7 != r12 goto label12;

        r3 = r2.<com.android.server.TelephonyRegistry$Record: com.android.server.TelephonyRegistry$TelephonyRegistryDeathRecipient deathRecipient>;

     label05:
        if r3 == null goto label09;

     label06:
        $r9 = r2.<com.android.server.TelephonyRegistry$Record: com.android.server.TelephonyRegistry$TelephonyRegistryDeathRecipient deathRecipient>;

        interfaceinvoke r12.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r9, 0);

     label07:
        goto label09;

     label08:
        $r10 := @caughtexception;

     label09:
        $r14 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        virtualinvoke $r14.<java.util.ArrayList: java.lang.Object remove(int)>(i2);

        $z1 = virtualinvoke r2.<com.android.server.TelephonyRegistry$Record: boolean matchPhoneStateListenerEvent(int)>(512);

        if $z1 == 0 goto label10;

        $i1 = r2.<com.android.server.TelephonyRegistry$Record: int subId>;

        specialinvoke r0.<com.android.server.TelephonyRegistry: void updateReportSignalStrengthDecision(int)>($i1);

     label10:
        exitmonitor r1;

     label11:
        return;

     label12:
        i2 = i2 + 1;

        goto label03;

     label13:
        exitmonitor r1;

     label14:
        return;

     label15:
        $r11 := @caughtexception;

     label16:
        exitmonitor r1;

     label17:
        throw $r11;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label04 to label05 with label15;
        catch java.util.NoSuchElementException from label06 to label07 with label08;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch java.lang.Throwable from label09 to label10 with label15;
        catch java.lang.Throwable from label10 to label11 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label16 to label17 with label15;
    }

    private void updateReportSignalStrengthDecision(int)
    {
        com.android.server.TelephonyRegistry r0;
        int i0;
        java.util.ArrayList r1, $r5;
        android.telephony.TelephonyManager r2, $r6, $r9;
        android.content.Context $r3;
        java.lang.Object $r4, $r7;
        boolean $z0, $z1;
        com.android.server.TelephonyRegistry$Record $r8;
        java.lang.Throwable $r10;
        java.util.Iterator r11;

        r0 := @this: com.android.server.TelephonyRegistry;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.TelephonyRegistry: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("phone");

        r2 = (android.telephony.TelephonyManager) $r4;

        $r5 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        r11 = virtualinvoke $r5.<java.util.ArrayList: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r7 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (com.android.server.TelephonyRegistry$Record) $r7;

        $z1 = virtualinvoke $r8.<com.android.server.TelephonyRegistry$Record: boolean matchPhoneStateListenerEvent(int)>(512);

        if $z1 == 0 goto label4;

        $r9 = virtualinvoke r2.<android.telephony.TelephonyManager: android.telephony.TelephonyManager createForSubscriptionId(int)>(i0);

        virtualinvoke $r9.<android.telephony.TelephonyManager: void setAlwaysReportSignalStrength(boolean)>(1);

        exitmonitor r1;

     label3:
        return;

     label4:
        goto label2;

     label5:
        $r6 = virtualinvoke r2.<android.telephony.TelephonyManager: android.telephony.TelephonyManager createForSubscriptionId(int)>(i0);

        virtualinvoke $r6.<android.telephony.TelephonyManager: void setAlwaysReportSignalStrength(boolean)>(0);

        exitmonitor r1;

     label6:
        return;

     label7:
        $r10 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r10;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    private boolean validateEventsAndUserLocked(com.android.server.TelephonyRegistry$Record, int)
    {
        com.android.server.TelephonyRegistry r0;
        int i0, i2, $i3, $i4;
        long l1;
        java.lang.Throwable $r1;
        com.android.server.TelephonyRegistry$Record r2;
        boolean z0, z1;

        r0 := @this: com.android.server.TelephonyRegistry;

        r2 := @parameter0: com.android.server.TelephonyRegistry$Record;

        i0 := @parameter1: int;

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        i2 = staticinvoke <android.app.ActivityManager: int getCurrentUser()>();

        $i3 = r2.<com.android.server.TelephonyRegistry$Record: int callerUid>;

        $i4 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i3);

        if $i4 != i2 goto label3;

        z0 = virtualinvoke r2.<com.android.server.TelephonyRegistry$Record: boolean matchPhoneStateListenerEvent(int)>(i0);

     label2:
        if z0 == 0 goto label3;

        z1 = 1;

        goto label4;

     label3:
        z1 = 0;

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return z1;

     label5:
        $r1 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label5;
    }

    private boolean validatePhoneId(int)
    {
        com.android.server.TelephonyRegistry r0;
        int i0, $i1;
        boolean z0;

        r0 := @this: com.android.server.TelephonyRegistry;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $i1 = r0.<com.android.server.TelephonyRegistry: int mNumPhones>;

        if i0 >= $i1 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public void addOnOpportunisticSubscriptionsChangedListener(java.lang.String, java.lang.String, com.android.internal.telephony.IOnSubscriptionsChangedListener)
    {
        com.android.server.TelephonyRegistry r0;
        java.lang.String r1, r12;
        com.android.internal.telephony.IOnSubscriptionsChangedListener r2, $r8;
        java.util.ArrayList r3;
        com.android.server.TelephonyRegistry$Record r4;
        boolean z0;
        android.app.AppOpsManager $r5;
        int $i1, $i2, $i3, $i4, $i5;
        android.os.IBinder $r6, $r11;
        android.content.Context $r7;
        java.lang.Throwable $r9;
        android.os.RemoteException $r10;

        r0 := @this: com.android.server.TelephonyRegistry;

        r12 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: com.android.internal.telephony.IOnSubscriptionsChangedListener;

        staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        $r5 = r0.<com.android.server.TelephonyRegistry: android.app.AppOpsManager mAppOps>;

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke $r5.<android.app.AppOpsManager: void checkPackage(int,java.lang.String)>($i1, r12);

        r3 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        entermonitor r3;

     label01:
        $r6 = interfaceinvoke r2.<com.android.internal.telephony.IOnSubscriptionsChangedListener: android.os.IBinder asBinder()>();

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i3 = staticinvoke <android.os.Binder: int getCallingPid()>();

        r4 = specialinvoke r0.<com.android.server.TelephonyRegistry: com.android.server.TelephonyRegistry$Record add(android.os.IBinder,int,int,boolean)>($r6, $i2, $i3, 0);

     label02:
        if r4 != null goto label05;

     label03:
        exitmonitor r3;

     label04:
        return;

     label05:
        $r7 = r0.<com.android.server.TelephonyRegistry: android.content.Context mContext>;

        r4.<com.android.server.TelephonyRegistry$Record: android.content.Context context> = $r7;

        r4.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IOnSubscriptionsChangedListener onOpportunisticSubscriptionsChangedListenerCallback> = r2;

        r4.<com.android.server.TelephonyRegistry$Record: java.lang.String callingPackage> = r12;

        r4.<com.android.server.TelephonyRegistry$Record: java.lang.String callingFeatureId> = r1;

        $i4 = staticinvoke <android.os.Binder: int getCallingUid()>();

        r4.<com.android.server.TelephonyRegistry$Record: int callerUid> = $i4;

        $i5 = staticinvoke <android.os.Binder: int getCallingPid()>();

        r4.<com.android.server.TelephonyRegistry$Record: int callerPid> = $i5;

        r4.<com.android.server.TelephonyRegistry$Record: int events> = 0;

        z0 = r0.<com.android.server.TelephonyRegistry: boolean mHasNotifyOpportunisticSubscriptionInfoChangedOccurred>;

     label06:
        if z0 == 0 goto label12;

     label07:
        $r8 = r4.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IOnSubscriptionsChangedListener onOpportunisticSubscriptionsChangedListenerCallback>;

        interfaceinvoke $r8.<com.android.internal.telephony.IOnSubscriptionsChangedListener: void onSubscriptionsChanged()>();

     label08:
        goto label13;

     label09:
        $r10 := @caughtexception;

     label10:
        $r11 = r4.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        specialinvoke r0.<com.android.server.TelephonyRegistry: void remove(android.os.IBinder)>($r11);

     label11:
        goto label08;

     label12:
        staticinvoke <com.android.server.TelephonyRegistry: void log(java.lang.String)>("listen ooscl: hasNotifyOpptSubInfoChangedOccurred==false no callback");

     label13:
        exitmonitor r3;

     label14:
        return;

     label15:
        $r9 := @caughtexception;

     label16:
        exitmonitor r3;

     label17:
        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Throwable from label05 to label06 with label15;
        catch android.os.RemoteException from label07 to label08 with label09;
        catch java.lang.Throwable from label07 to label08 with label15;
        catch java.lang.Throwable from label10 to label11 with label15;
        catch java.lang.Throwable from label12 to label13 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label16 to label17 with label15;
    }

    public void addOnSubscriptionsChangedListener(java.lang.String, java.lang.String, com.android.internal.telephony.IOnSubscriptionsChangedListener)
    {
        com.android.server.TelephonyRegistry r0;
        java.lang.String r1, r12;
        com.android.internal.telephony.IOnSubscriptionsChangedListener r2, $r8;
        java.util.ArrayList r3;
        com.android.server.TelephonyRegistry$Record r4;
        boolean z0;
        android.app.AppOpsManager $r5;
        int $i1, $i2, $i3, $i4, $i5;
        android.os.IBinder $r6, $r11;
        android.content.Context $r7;
        java.lang.Throwable $r9;
        android.os.RemoteException $r10;

        r0 := @this: com.android.server.TelephonyRegistry;

        r12 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: com.android.internal.telephony.IOnSubscriptionsChangedListener;

        staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        $r5 = r0.<com.android.server.TelephonyRegistry: android.app.AppOpsManager mAppOps>;

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke $r5.<android.app.AppOpsManager: void checkPackage(int,java.lang.String)>($i1, r12);

        r3 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        entermonitor r3;

     label01:
        $r6 = interfaceinvoke r2.<com.android.internal.telephony.IOnSubscriptionsChangedListener: android.os.IBinder asBinder()>();

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i3 = staticinvoke <android.os.Binder: int getCallingPid()>();

        r4 = specialinvoke r0.<com.android.server.TelephonyRegistry: com.android.server.TelephonyRegistry$Record add(android.os.IBinder,int,int,boolean)>($r6, $i2, $i3, 0);

     label02:
        if r4 != null goto label05;

     label03:
        exitmonitor r3;

     label04:
        return;

     label05:
        $r7 = r0.<com.android.server.TelephonyRegistry: android.content.Context mContext>;

        r4.<com.android.server.TelephonyRegistry$Record: android.content.Context context> = $r7;

        r4.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IOnSubscriptionsChangedListener onSubscriptionsChangedListenerCallback> = r2;

        r4.<com.android.server.TelephonyRegistry$Record: java.lang.String callingPackage> = r12;

        r4.<com.android.server.TelephonyRegistry$Record: java.lang.String callingFeatureId> = r1;

        $i4 = staticinvoke <android.os.Binder: int getCallingUid()>();

        r4.<com.android.server.TelephonyRegistry$Record: int callerUid> = $i4;

        $i5 = staticinvoke <android.os.Binder: int getCallingPid()>();

        r4.<com.android.server.TelephonyRegistry$Record: int callerPid> = $i5;

        r4.<com.android.server.TelephonyRegistry$Record: int events> = 0;

        z0 = r0.<com.android.server.TelephonyRegistry: boolean mHasNotifySubscriptionInfoChangedOccurred>;

     label06:
        if z0 == 0 goto label12;

     label07:
        $r8 = r4.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IOnSubscriptionsChangedListener onSubscriptionsChangedListenerCallback>;

        interfaceinvoke $r8.<com.android.internal.telephony.IOnSubscriptionsChangedListener: void onSubscriptionsChanged()>();

     label08:
        goto label13;

     label09:
        $r10 := @caughtexception;

     label10:
        $r11 = r4.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        specialinvoke r0.<com.android.server.TelephonyRegistry: void remove(android.os.IBinder)>($r11);

     label11:
        goto label08;

     label12:
        staticinvoke <com.android.server.TelephonyRegistry: void log(java.lang.String)>("listen oscl: mHasNotifySubscriptionInfoChangedOccurred==false no callback");

     label13:
        exitmonitor r3;

     label14:
        return;

     label15:
        $r9 := @caughtexception;

     label16:
        exitmonitor r3;

     label17:
        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Throwable from label05 to label06 with label15;
        catch android.os.RemoteException from label07 to label08 with label09;
        catch java.lang.Throwable from label07 to label08 with label15;
        catch java.lang.Throwable from label10 to label11 with label15;
        catch java.lang.Throwable from label12 to label13 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label16 to label17 with label15;
    }

    public void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.TelephonyRegistry r0;
        java.lang.String[] r1, $r74;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, i18;
        com.android.internal.util.IndentingPrintWriter $r3;
        android.content.Context $r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.util.ArrayList $r5, $r40, $r122, r177;
        android.telephony.TelephonyManager $r7;
        java.lang.String $r10, $r14, $r17, $r20, $r24, $r27, $r30, $r38, $r46, $r51, $r55, $r59, $r63, $r68, $r72, $r75, $r77, $r82, $r86, $r90, $r94, $r99, $r103, $r107, $r111, $r115, $r120, $r125, $r130, $r134, $r138, $r143, $r148, $r152, $r157, $r162, $r167, $r172;
        android.telephony.PhoneCapability $r12;
        java.util.Map $r22;
        android.util.LocalLog $r33, $r34;
        java.lang.Object $r42, $r123, $r128, $r155, $r170;
        com.android.server.TelephonyRegistry$Record $r43;
        int[] $r49, $r53, $r57, $r61, $r70, $r84, $r88, $r109, $r113, $r132, $r136, $r150;
        android.telephony.PreciseCallState[] $r65;
        android.telephony.PreciseCallState $r66;
        android.telephony.ServiceState[] $r79;
        android.telephony.ServiceState $r80;
        boolean[] $r92, $r101, $r105;
        android.telephony.SignalStrength[] $r96;
        android.telephony.SignalStrength $r97;
        android.telephony.CellIdentity[] $r117;
        android.telephony.CellIdentity $r118;
        java.util.List $r127, $r154, $r169;
        android.telephony.CallQuality[] $r140;
        android.telephony.CallQuality $r141;
        android.telephony.CallAttributes[] $r145;
        android.telephony.CallAttributes $r146;
        android.telephony.emergency.EmergencyNumber[] $r159, $r164;
        android.telephony.emergency.EmergencyNumber $r160, $r165;
        java.lang.Throwable $r174;
        java.io.FileDescriptor r175;
        java.io.PrintWriter r176;
        java.lang.StringBuilder r178, r179, r180, r181, r182, r183, r184, r185, r186, r187, r188, r189, r190, r191, r192, r193, r194, r195, r196, r197, r198, r199, r200, r201, r202, r203, r204, r205, r206, r207, r208, r209, r210, r211, r212, r213, r214;
        java.util.Iterator r215;

        r0 := @this: com.android.server.TelephonyRegistry;

        r175 := @parameter0: java.io.FileDescriptor;

        r176 := @parameter1: java.io.PrintWriter;

        r1 := @parameter2: java.lang.String[];

        $r3 = new com.android.internal.util.IndentingPrintWriter;

        specialinvoke $r3.<com.android.internal.util.IndentingPrintWriter: void <init>(java.io.Writer,java.lang.String)>(r176, "  ");

        $r4 = r0.<com.android.server.TelephonyRegistry: android.content.Context mContext>;

        $z0 = staticinvoke <com.android.internal.util.DumpUtils: boolean checkDumpPermission(android.content.Context,java.lang.String,java.io.PrintWriter)>($r4, "TelephonyRegistry", $r3);

        if $z0 != 0 goto label01;

        return;

     label01:
        r177 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        entermonitor r177;

     label02:
        $r5 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        i0 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        virtualinvoke $r3.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("last known state:");

        virtualinvoke $r3.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

     label03:
        i18 = 0;

     label04:
        $r7 = specialinvoke r0.<com.android.server.TelephonyRegistry: android.telephony.TelephonyManager getTelephonyManager()>();

        $i1 = virtualinvoke $r7.<android.telephony.TelephonyManager: int getPhoneCount()>();

        if i18 >= $i1 goto label06;

        r178 = new java.lang.StringBuilder;

        specialinvoke r178.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r178.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Phone Id=");

        virtualinvoke r178.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i18);

        $r46 = virtualinvoke r178.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r46);

        virtualinvoke $r3.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

        r179 = new java.lang.StringBuilder;

        specialinvoke r179.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r179.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mCallState=");

        $r49 = r0.<com.android.server.TelephonyRegistry: int[] mCallState>;

        $i6 = $r49[i18];

        virtualinvoke r179.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r51 = virtualinvoke r179.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r51);

        r180 = new java.lang.StringBuilder;

        specialinvoke r180.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r180.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mRingingCallState=");

        $r53 = r0.<com.android.server.TelephonyRegistry: int[] mRingingCallState>;

        $i7 = $r53[i18];

        virtualinvoke r180.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r55 = virtualinvoke r180.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r55);

        r181 = new java.lang.StringBuilder;

        specialinvoke r181.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r181.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mForegroundCallState=");

        $r57 = r0.<com.android.server.TelephonyRegistry: int[] mForegroundCallState>;

        $i8 = $r57[i18];

        virtualinvoke r181.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r59 = virtualinvoke r181.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r59);

        r182 = new java.lang.StringBuilder;

        specialinvoke r182.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r182.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mBackgroundCallState=");

        $r61 = r0.<com.android.server.TelephonyRegistry: int[] mBackgroundCallState>;

        $i9 = $r61[i18];

        virtualinvoke r182.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r63 = virtualinvoke r182.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r63);

        r183 = new java.lang.StringBuilder;

        specialinvoke r183.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r183.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mPreciseCallState=");

        $r65 = r0.<com.android.server.TelephonyRegistry: android.telephony.PreciseCallState[] mPreciseCallState>;

        $r66 = $r65[i18];

        virtualinvoke r183.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r66);

        $r68 = virtualinvoke r183.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r68);

        r184 = new java.lang.StringBuilder;

        specialinvoke r184.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r184.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mCallDisconnectCause=");

        $r70 = r0.<com.android.server.TelephonyRegistry: int[] mCallDisconnectCause>;

        $i10 = $r70[i18];

        virtualinvoke r184.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        $r72 = virtualinvoke r184.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r72);

        r185 = new java.lang.StringBuilder;

        specialinvoke r185.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r185.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mCallIncomingNumber=");

        $r74 = r0.<com.android.server.TelephonyRegistry: java.lang.String[] mCallIncomingNumber>;

        $r75 = $r74[i18];

        virtualinvoke r185.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r75);

        $r77 = virtualinvoke r185.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r77);

        r186 = new java.lang.StringBuilder;

        specialinvoke r186.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r186.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mServiceState=");

        $r79 = r0.<com.android.server.TelephonyRegistry: android.telephony.ServiceState[] mServiceState>;

        $r80 = $r79[i18];

        virtualinvoke r186.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r80);

        $r82 = virtualinvoke r186.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r82);

        r187 = new java.lang.StringBuilder;

        specialinvoke r187.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r187.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mVoiceActivationState= ");

        $r84 = r0.<com.android.server.TelephonyRegistry: int[] mVoiceActivationState>;

        $i11 = $r84[i18];

        virtualinvoke r187.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        $r86 = virtualinvoke r187.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r86);

        r188 = new java.lang.StringBuilder;

        specialinvoke r188.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r188.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mDataActivationState= ");

        $r88 = r0.<com.android.server.TelephonyRegistry: int[] mDataActivationState>;

        $i12 = $r88[i18];

        virtualinvoke r188.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12);

        $r90 = virtualinvoke r188.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r90);

        r189 = new java.lang.StringBuilder;

        specialinvoke r189.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r189.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mUserMobileDataState= ");

        $r92 = r0.<com.android.server.TelephonyRegistry: boolean[] mUserMobileDataState>;

        $z3 = $r92[i18];

        virtualinvoke r189.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z3);

        $r94 = virtualinvoke r189.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r94);

        r190 = new java.lang.StringBuilder;

        specialinvoke r190.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r190.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mSignalStrength=");

        $r96 = r0.<com.android.server.TelephonyRegistry: android.telephony.SignalStrength[] mSignalStrength>;

        $r97 = $r96[i18];

        virtualinvoke r190.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r97);

        $r99 = virtualinvoke r190.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r99);

        r191 = new java.lang.StringBuilder;

        specialinvoke r191.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r191.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mMessageWaiting=");

        $r101 = r0.<com.android.server.TelephonyRegistry: boolean[] mMessageWaiting>;

        $z4 = $r101[i18];

        virtualinvoke r191.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z4);

        $r103 = virtualinvoke r191.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r103);

        r192 = new java.lang.StringBuilder;

        specialinvoke r192.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r192.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mCallForwarding=");

        $r105 = r0.<com.android.server.TelephonyRegistry: boolean[] mCallForwarding>;

        $z5 = $r105[i18];

        virtualinvoke r192.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z5);

        $r107 = virtualinvoke r192.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r107);

        r193 = new java.lang.StringBuilder;

        specialinvoke r193.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r193.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mDataActivity=");

        $r109 = r0.<com.android.server.TelephonyRegistry: int[] mDataActivity>;

        $i13 = $r109[i18];

        virtualinvoke r193.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i13);

        $r111 = virtualinvoke r193.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r111);

        r194 = new java.lang.StringBuilder;

        specialinvoke r194.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r194.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mDataConnectionState=");

        $r113 = r0.<com.android.server.TelephonyRegistry: int[] mDataConnectionState>;

        $i14 = $r113[i18];

        virtualinvoke r194.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i14);

        $r115 = virtualinvoke r194.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r115);

        r195 = new java.lang.StringBuilder;

        specialinvoke r195.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r195.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mCellIdentity=");

        $r117 = r0.<com.android.server.TelephonyRegistry: android.telephony.CellIdentity[] mCellIdentity>;

        $r118 = $r117[i18];

        virtualinvoke r195.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r118);

        $r120 = virtualinvoke r195.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r120);

        r196 = new java.lang.StringBuilder;

        specialinvoke r196.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r196.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mCellInfo=");

        $r122 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mCellInfo>;

        $r123 = virtualinvoke $r122.<java.util.ArrayList: java.lang.Object get(int)>(i18);

        virtualinvoke r196.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r123);

        $r125 = virtualinvoke r196.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r125);

        r197 = new java.lang.StringBuilder;

        specialinvoke r197.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r197.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mImsCallDisconnectCause=");

        $r127 = r0.<com.android.server.TelephonyRegistry: java.util.List mImsReasonInfo>;

        $r128 = interfaceinvoke $r127.<java.util.List: java.lang.Object get(int)>(i18);

        virtualinvoke r197.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r128);

        $r130 = virtualinvoke r197.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r130);

        r198 = new java.lang.StringBuilder;

        specialinvoke r198.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r198.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mSrvccState=");

        $r132 = r0.<com.android.server.TelephonyRegistry: int[] mSrvccState>;

        $i15 = $r132[i18];

        virtualinvoke r198.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i15);

        $r134 = virtualinvoke r198.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r134);

        r199 = new java.lang.StringBuilder;

        specialinvoke r199.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r199.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mCallPreciseDisconnectCause=");

        $r136 = r0.<com.android.server.TelephonyRegistry: int[] mCallPreciseDisconnectCause>;

        $i16 = $r136[i18];

        virtualinvoke r199.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i16);

        $r138 = virtualinvoke r199.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r138);

        r200 = new java.lang.StringBuilder;

        specialinvoke r200.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r200.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mCallQuality=");

        $r140 = r0.<com.android.server.TelephonyRegistry: android.telephony.CallQuality[] mCallQuality>;

        $r141 = $r140[i18];

        virtualinvoke r200.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r141);

        $r143 = virtualinvoke r200.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r143);

        r201 = new java.lang.StringBuilder;

        specialinvoke r201.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r201.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mCallAttributes=");

        $r145 = r0.<com.android.server.TelephonyRegistry: android.telephony.CallAttributes[] mCallAttributes>;

        $r146 = $r145[i18];

        virtualinvoke r201.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r146);

        $r148 = virtualinvoke r201.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r148);

        r202 = new java.lang.StringBuilder;

        specialinvoke r202.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r202.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mCallNetworkType=");

        $r150 = r0.<com.android.server.TelephonyRegistry: int[] mCallNetworkType>;

        $i17 = $r150[i18];

        virtualinvoke r202.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i17);

        $r152 = virtualinvoke r202.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r152);

        r203 = new java.lang.StringBuilder;

        specialinvoke r203.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r203.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mPreciseDataConnectionStates=");

        $r154 = r0.<com.android.server.TelephonyRegistry: java.util.List mPreciseDataConnectionStates>;

        $r155 = interfaceinvoke $r154.<java.util.List: java.lang.Object get(int)>(i18);

        virtualinvoke r203.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r155);

        $r157 = virtualinvoke r203.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r157);

        r204 = new java.lang.StringBuilder;

        specialinvoke r204.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r204.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mOutgoingCallEmergencyNumber=");

        $r159 = r0.<com.android.server.TelephonyRegistry: android.telephony.emergency.EmergencyNumber[] mOutgoingCallEmergencyNumber>;

        $r160 = $r159[i18];

        virtualinvoke r204.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r160);

        $r162 = virtualinvoke r204.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r162);

        r205 = new java.lang.StringBuilder;

        specialinvoke r205.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r205.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mOutgoingSmsEmergencyNumber=");

        $r164 = r0.<com.android.server.TelephonyRegistry: android.telephony.emergency.EmergencyNumber[] mOutgoingSmsEmergencyNumber>;

        $r165 = $r164[i18];

        virtualinvoke r205.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r165);

        $r167 = virtualinvoke r205.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r167);

        r206 = new java.lang.StringBuilder;

        specialinvoke r206.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r206.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mBarringInfo=");

        $r169 = r0.<com.android.server.TelephonyRegistry: java.util.List mBarringInfo>;

        $r170 = interfaceinvoke $r169.<java.util.List: java.lang.Object get(int)>(i18);

        virtualinvoke r206.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r170);

        $r172 = virtualinvoke r206.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r172);

        virtualinvoke $r3.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

     label05:
        i18 = i18 + 1;

        goto label04;

     label06:
        r207 = new java.lang.StringBuilder;

        specialinvoke r207.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r207.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mCarrierNetworkChangeState=");

        $z1 = r0.<com.android.server.TelephonyRegistry: boolean mCarrierNetworkChangeState>;

        virtualinvoke r207.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r10 = virtualinvoke r207.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r10);

        r208 = new java.lang.StringBuilder;

        specialinvoke r208.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r208.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mPhoneCapability=");

        $r12 = r0.<com.android.server.TelephonyRegistry: android.telephony.PhoneCapability mPhoneCapability>;

        virtualinvoke r208.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r14 = virtualinvoke r208.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r14);

        r209 = new java.lang.StringBuilder;

        specialinvoke r209.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r209.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mActiveDataSubId=");

        $i2 = r0.<com.android.server.TelephonyRegistry: int mActiveDataSubId>;

        virtualinvoke r209.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r17 = virtualinvoke r209.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r17);

        r210 = new java.lang.StringBuilder;

        specialinvoke r210.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r210.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mRadioPowerState=");

        $i3 = r0.<com.android.server.TelephonyRegistry: int mRadioPowerState>;

        virtualinvoke r210.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r20 = virtualinvoke r210.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r20);

        r211 = new java.lang.StringBuilder;

        specialinvoke r211.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r211.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mEmergencyNumberList=");

        $r22 = r0.<com.android.server.TelephonyRegistry: java.util.Map mEmergencyNumberList>;

        virtualinvoke r211.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r22);

        $r24 = virtualinvoke r211.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r24);

        r212 = new java.lang.StringBuilder;

        specialinvoke r212.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r212.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mDefaultPhoneId=");

        $i4 = r0.<com.android.server.TelephonyRegistry: int mDefaultPhoneId>;

        virtualinvoke r212.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r27 = virtualinvoke r212.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r27);

        r213 = new java.lang.StringBuilder;

        specialinvoke r213.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r213.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mDefaultSubId=");

        $i5 = r0.<com.android.server.TelephonyRegistry: int mDefaultSubId>;

        virtualinvoke r213.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r30 = virtualinvoke r213.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r30);

        virtualinvoke $r3.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

        virtualinvoke $r3.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("local logs:");

        virtualinvoke $r3.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

        $r33 = r0.<com.android.server.TelephonyRegistry: android.util.LocalLog mLocalLog>;

        virtualinvoke $r33.<android.util.LocalLog: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r175, $r3, r1);

        virtualinvoke $r3.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("listen logs:");

        $r34 = r0.<com.android.server.TelephonyRegistry: android.util.LocalLog mListenLog>;

        virtualinvoke $r34.<android.util.LocalLog: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r175, $r3, r1);

        virtualinvoke $r3.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

        r214 = new java.lang.StringBuilder;

        specialinvoke r214.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r214.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("registrations: count=");

        virtualinvoke r214.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r38 = virtualinvoke r214.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r38);

        virtualinvoke $r3.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter increaseIndent()>();

        $r40 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        r215 = virtualinvoke $r40.<java.util.ArrayList: java.util.Iterator iterator()>();

     label07:
        $z2 = interfaceinvoke r215.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label09;

        $r42 = interfaceinvoke r215.<java.util.Iterator: java.lang.Object next()>();

        $r43 = (com.android.server.TelephonyRegistry$Record) $r42;

        virtualinvoke $r3.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.Object)>($r43);

     label08:
        goto label07;

     label09:
        virtualinvoke $r3.<com.android.internal.util.IndentingPrintWriter: com.android.internal.util.IndentingPrintWriter decreaseIndent()>();

     label10:
        exitmonitor r177;

     label11:
        return;

     label12:
        $r174 := @caughtexception;

     label13:
        exitmonitor r177;

     label14:
        throw $r174;

        catch java.lang.Throwable from label02 to label03 with label12;
        catch java.lang.Throwable from label04 to label05 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label07 to label08 with label12;
        catch java.lang.Throwable from label09 to label10 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    boolean idMatch(int, int, int)
    {
        com.android.server.TelephonyRegistry r0;
        int i0, i1, i2, $i3, $i4;
        boolean z2, z3, z4;

        r0 := @this: com.android.server.TelephonyRegistry;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        z2 = 1;

        if i1 >= 0 goto label3;

        $i4 = r0.<com.android.server.TelephonyRegistry: int mDefaultPhoneId>;

        if $i4 != i2 goto label1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;

     label3:
        if i0 != 2147483647 goto label6;

        $i3 = r0.<com.android.server.TelephonyRegistry: int mDefaultSubId>;

        if i1 != $i3 goto label4;

        z3 = 1;

        goto label5;

     label4:
        z3 = 0;

     label5:
        return z3;

     label6:
        if i0 != i1 goto label7;

        z4 = 1;

        goto label8;

     label7:
        z4 = 0;

     label8:
        return z4;
    }

    public java.lang.Boolean lambda$checkCoarseLocationAccess$2$TelephonyRegistry(android.telephony.LocationAccessPolicy$LocationPermissionQuery) throws java.lang.Exception
    {
        com.android.server.TelephonyRegistry r0;
        android.telephony.LocationAccessPolicy$LocationPermissionQuery r1;
        android.content.Context $r2;
        android.telephony.LocationAccessPolicy$LocationPermissionResult $r3, $r4;
        java.lang.Boolean $r5;
        boolean z0;

        r0 := @this: com.android.server.TelephonyRegistry;

        r1 := @parameter0: android.telephony.LocationAccessPolicy$LocationPermissionQuery;

        $r2 = r0.<com.android.server.TelephonyRegistry: android.content.Context mContext>;

        $r3 = staticinvoke <android.telephony.LocationAccessPolicy: android.telephony.LocationAccessPolicy$LocationPermissionResult checkLocationPermission(android.content.Context,android.telephony.LocationAccessPolicy$LocationPermissionQuery)>($r2, r1);

        $r4 = <android.telephony.LocationAccessPolicy$LocationPermissionResult: android.telephony.LocationAccessPolicy$LocationPermissionResult ALLOWED>;

        if $r3 != $r4 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        return $r5;
    }

    public java.lang.Boolean lambda$checkFineLocationAccess$1$TelephonyRegistry(android.telephony.LocationAccessPolicy$LocationPermissionQuery) throws java.lang.Exception
    {
        com.android.server.TelephonyRegistry r0;
        android.telephony.LocationAccessPolicy$LocationPermissionQuery r1;
        android.content.Context $r2;
        android.telephony.LocationAccessPolicy$LocationPermissionResult $r3, $r4;
        java.lang.Boolean $r5;
        boolean z0;

        r0 := @this: com.android.server.TelephonyRegistry;

        r1 := @parameter0: android.telephony.LocationAccessPolicy$LocationPermissionQuery;

        $r2 = r0.<com.android.server.TelephonyRegistry: android.content.Context mContext>;

        $r3 = staticinvoke <android.telephony.LocationAccessPolicy: android.telephony.LocationAccessPolicy$LocationPermissionResult checkLocationPermission(android.content.Context,android.telephony.LocationAccessPolicy$LocationPermissionQuery)>($r2, r1);

        $r4 = <android.telephony.LocationAccessPolicy$LocationPermissionResult: android.telephony.LocationAccessPolicy$LocationPermissionResult ALLOWED>;

        if $r3 != $r4 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        return $r5;
    }

    public boolean lambda$notifyCarrierNetworkChange$0$TelephonyRegistry(int)
    {
        com.android.server.TelephonyRegistry r0;
        int i0;
        android.content.Context $r1;
        boolean $z0;

        r0 := @this: com.android.server.TelephonyRegistry;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.TelephonyRegistry: android.content.Context mContext>;

        $z0 = staticinvoke <com.android.internal.telephony.TelephonyPermissions: boolean checkCarrierPrivilegeForSubId(android.content.Context,int)>($r1, i0);

        return $z0;
    }

    public void listen(java.lang.String, com.android.internal.telephony.IPhoneStateListener, int, boolean)
    {
        com.android.server.TelephonyRegistry r0;
        java.lang.String r1;
        com.android.internal.telephony.IPhoneStateListener r2;
        int i0;
        boolean z0;

        r0 := @this: com.android.server.TelephonyRegistry;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.android.internal.telephony.IPhoneStateListener;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        virtualinvoke r0.<com.android.server.TelephonyRegistry: void listenWithFeature(java.lang.String,java.lang.String,com.android.internal.telephony.IPhoneStateListener,int,boolean)>(r1, null, r2, i0, z0);

        return;
    }

    public void listenForSubscriber(int, java.lang.String, java.lang.String, com.android.internal.telephony.IPhoneStateListener, int, boolean)
    {
        com.android.server.TelephonyRegistry r0;
        int i0, i1;
        java.lang.String r1, r2;
        com.android.internal.telephony.IPhoneStateListener r3;
        boolean z0;

        r0 := @this: com.android.server.TelephonyRegistry;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: com.android.internal.telephony.IPhoneStateListener;

        i1 := @parameter4: int;

        z0 := @parameter5: boolean;

        specialinvoke r0.<com.android.server.TelephonyRegistry: void listen(java.lang.String,java.lang.String,com.android.internal.telephony.IPhoneStateListener,int,boolean,int)>(r1, r2, r3, i1, z0, i0);

        return;
    }

    public void listenWithFeature(java.lang.String, java.lang.String, com.android.internal.telephony.IPhoneStateListener, int, boolean)
    {
        com.android.server.TelephonyRegistry r0;
        java.lang.String r1, r2;
        com.android.internal.telephony.IPhoneStateListener r3;
        int i0;
        boolean z0;

        r0 := @this: com.android.server.TelephonyRegistry;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: com.android.internal.telephony.IPhoneStateListener;

        i0 := @parameter3: int;

        z0 := @parameter4: boolean;

        virtualinvoke r0.<com.android.server.TelephonyRegistry: void listenForSubscriber(int,java.lang.String,java.lang.String,com.android.internal.telephony.IPhoneStateListener,int,boolean)>(2147483647, r1, r2, r3, i0, z0);

        return;
    }

    public void notifyActiveDataSubIdChanged(int)
    {
        com.android.server.TelephonyRegistry r0;
        int i0;
        java.util.ArrayList r1, $r4, $r10;
        java.util.Iterator r2;
        boolean z0, $z1, $z2;
        java.lang.Object $r5;
        com.android.internal.telephony.IPhoneStateListener $r6;
        java.lang.Throwable $r7;
        android.os.RemoteException $r8;
        android.os.IBinder $r9;
        com.android.server.TelephonyRegistry$Record r11;

        r0 := @this: com.android.server.TelephonyRegistry;

        i0 := @parameter0: int;

        $z1 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean checkNotifyPermission(java.lang.String)>("notifyActiveDataSubIdChanged()");

        if $z1 != 0 goto label01;

        return;

     label01:
        r0.<com.android.server.TelephonyRegistry: int mActiveDataSubId> = i0;

        r1 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        entermonitor r1;

     label02:
        $r4 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        r2 = virtualinvoke $r4.<java.util.ArrayList: java.util.Iterator iterator()>();

     label03:
        $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label10;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r11 = (com.android.server.TelephonyRegistry$Record) $r5;

        z0 = virtualinvoke r11.<com.android.server.TelephonyRegistry$Record: boolean matchPhoneStateListenerEvent(int)>(4194304);

     label04:
        if z0 == 0 goto label09;

     label05:
        $r6 = r11.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        interfaceinvoke $r6.<com.android.internal.telephony.IPhoneStateListener: void onActiveDataSubIdChanged(int)>(i0);

     label06:
        goto label09;

     label07:
        $r8 := @caughtexception;

     label08:
        $r10 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRemoveList>;

        $r9 = r11.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        virtualinvoke $r10.<java.util.ArrayList: boolean add(java.lang.Object)>($r9);

     label09:
        goto label03;

     label10:
        specialinvoke r0.<com.android.server.TelephonyRegistry: void handleRemoveListLocked()>();

        exitmonitor r1;

     label11:
        return;

     label12:
        $r7 := @caughtexception;

     label13:
        exitmonitor r1;

     label14:
        throw $r7;

        catch java.lang.Throwable from label02 to label03 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch android.os.RemoteException from label05 to label06 with label07;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public void notifyBarringInfoChanged(int, int, android.telephony.BarringInfo)
    {
        com.android.server.TelephonyRegistry r0;
        int i0, i1, $i2;
        java.util.ArrayList r1, $r8, $r22;
        android.telephony.BarringInfo r2, $r16, r23, r25;
        java.util.Iterator r3;
        com.android.server.TelephonyRegistry$Record r4;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        com.android.internal.telephony.IPhoneStateListener r5;
        java.util.List $r6, $r17;
        java.lang.Object $r9;
        java.lang.StringBuilder $r10;
        java.lang.String $r15;
        java.lang.Throwable $r19;
        android.os.RemoteException $r20;
        android.os.IBinder $r21;

        r0 := @this: com.android.server.TelephonyRegistry;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r23 := @parameter2: android.telephony.BarringInfo;

        $z1 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean checkNotifyPermission(java.lang.String)>("notifyBarringInfo()");

        if $z1 != 0 goto label01;

        return;

     label01:
        if r23 != null goto label02;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Received null BarringInfo for subId=");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", phoneId=");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r15 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.TelephonyRegistry: void log(java.lang.String)>($r15);

        $r17 = r0.<com.android.server.TelephonyRegistry: java.util.List mBarringInfo>;

        $r16 = new android.telephony.BarringInfo;

        specialinvoke $r16.<android.telephony.BarringInfo: void <init>()>();

        interfaceinvoke $r17.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i0, $r16);

        return;

     label02:
        r1 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        entermonitor r1;

     label03:
        $z2 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean validatePhoneId(int)>(i0);

        if $z2 == 0 goto label14;

        $r6 = r0.<com.android.server.TelephonyRegistry: java.util.List mBarringInfo>;

        interfaceinvoke $r6.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i0, r23);

        r2 = virtualinvoke r23.<android.telephony.BarringInfo: android.telephony.BarringInfo createLocationInfoSanitizedCopy()>();

        $r8 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        r3 = virtualinvoke $r8.<java.util.ArrayList: java.util.Iterator iterator()>();

     label04:
        $z3 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label14;

        $r9 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.android.server.TelephonyRegistry$Record) $r9;

        $z4 = virtualinvoke r4.<com.android.server.TelephonyRegistry$Record: boolean matchPhoneStateListenerEvent(int)>(-2147483648);

        if $z4 == 0 goto label13;

        $i2 = r4.<com.android.server.TelephonyRegistry$Record: int subId>;

        z0 = virtualinvoke r0.<com.android.server.TelephonyRegistry: boolean idMatch(int,int,int)>($i2, i1, i0);

     label05:
        if z0 == 0 goto label13;

     label06:
        r5 = r4.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        $z5 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean checkFineLocationAccess(com.android.server.TelephonyRegistry$Record,int)>(r4, 1);

        if $z5 == 0 goto label08;

     label07:
        r25 = r23;

        goto label09;

     label08:
        r25 = r2;

     label09:
        interfaceinvoke r5.<com.android.internal.telephony.IPhoneStateListener: void onBarringInfoChanged(android.telephony.BarringInfo)>(r25);

     label10:
        goto label13;

     label11:
        $r20 := @caughtexception;

     label12:
        $r22 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRemoveList>;

        $r21 = r4.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        virtualinvoke $r22.<java.util.ArrayList: boolean add(java.lang.Object)>($r21);

     label13:
        goto label04;

     label14:
        specialinvoke r0.<com.android.server.TelephonyRegistry: void handleRemoveListLocked()>();

        exitmonitor r1;

     label15:
        return;

     label16:
        $r19 := @caughtexception;

     label17:
        exitmonitor r1;

     label18:
        throw $r19;

        catch java.lang.Throwable from label03 to label04 with label16;
        catch java.lang.Throwable from label04 to label05 with label16;
        catch android.os.RemoteException from label06 to label07 with label11;
        catch java.lang.Throwable from label06 to label07 with label16;
        catch android.os.RemoteException from label09 to label10 with label11;
        catch java.lang.Throwable from label09 to label10 with label16;
        catch java.lang.Throwable from label12 to label13 with label16;
        catch java.lang.Throwable from label14 to label15 with label16;
        catch java.lang.Throwable from label17 to label18 with label16;
    }

    public void notifyCallForwardingChanged(boolean)
    {
        com.android.server.TelephonyRegistry r0;
        boolean z0;

        r0 := @this: com.android.server.TelephonyRegistry;

        z0 := @parameter0: boolean;

        virtualinvoke r0.<com.android.server.TelephonyRegistry: void notifyCallForwardingChangedForSubscriber(int,boolean)>(2147483647, z0);

        return;
    }

    public void notifyCallForwardingChangedForSubscriber(int, boolean)
    {
        com.android.server.TelephonyRegistry r0;
        int i0, i1, $i2;
        boolean z0, z1, $z2, $z3, $z4, $z5;
        java.util.ArrayList r1, $r5, $r10;
        java.util.Iterator r2;
        boolean[] $r4;
        java.lang.Object $r6;
        com.android.internal.telephony.IPhoneStateListener $r7;
        android.os.RemoteException $r8;
        android.os.IBinder $r9;
        java.lang.Throwable $r11;
        com.android.server.TelephonyRegistry$Record r12;

        r0 := @this: com.android.server.TelephonyRegistry;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $z2 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean checkNotifyPermission(java.lang.String)>("notifyCallForwardingChanged()");

        if $z2 != 0 goto label01;

        return;

     label01:
        i1 = specialinvoke r0.<com.android.server.TelephonyRegistry: int getPhoneIdFromSubId(int)>(i0);

        r1 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        entermonitor r1;

     label02:
        $z3 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean validatePhoneId(int)>(i1);

        if $z3 == 0 goto label10;

        $r4 = r0.<com.android.server.TelephonyRegistry: boolean[] mCallForwarding>;

        $r4[i1] = z0;

        $r5 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        r2 = virtualinvoke $r5.<java.util.ArrayList: java.util.Iterator iterator()>();

     label03:
        $z4 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label10;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r12 = (com.android.server.TelephonyRegistry$Record) $r6;

        $z5 = virtualinvoke r12.<com.android.server.TelephonyRegistry$Record: boolean matchPhoneStateListenerEvent(int)>(8);

        if $z5 == 0 goto label09;

        $i2 = r12.<com.android.server.TelephonyRegistry$Record: int subId>;

        z1 = virtualinvoke r0.<com.android.server.TelephonyRegistry: boolean idMatch(int,int,int)>($i2, i0, i1);

     label04:
        if z1 == 0 goto label09;

     label05:
        $r7 = r12.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        interfaceinvoke $r7.<com.android.internal.telephony.IPhoneStateListener: void onCallForwardingIndicatorChanged(boolean)>(z0);

     label06:
        goto label09;

     label07:
        $r8 := @caughtexception;

     label08:
        $r10 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRemoveList>;

        $r9 = r12.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        virtualinvoke $r10.<java.util.ArrayList: boolean add(java.lang.Object)>($r9);

     label09:
        goto label03;

     label10:
        specialinvoke r0.<com.android.server.TelephonyRegistry: void handleRemoveListLocked()>();

        exitmonitor r1;

     label11:
        return;

     label12:
        $r11 := @caughtexception;

     label13:
        exitmonitor r1;

     label14:
        throw $r11;

        catch java.lang.Throwable from label02 to label03 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch android.os.RemoteException from label05 to label06 with label07;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public void notifyCallQualityChanged(android.telephony.CallQuality, int, int, int)
    {
        com.android.server.TelephonyRegistry r0;
        int i0, i1, i2, $i3;
        java.util.ArrayList r1, $r6, $r14;
        boolean z0, $z1, $z2, $z3, $z4;
        android.telephony.CallQuality[] $r2;
        int[] $r3;
        android.telephony.PreciseCallState[] $r4;
        android.telephony.PreciseCallState $r5;
        java.lang.Object $r7;
        android.telephony.CallAttributes[] $r8, r16;
        android.telephony.CallAttributes $r9, r17;
        com.android.internal.telephony.IPhoneStateListener $r10;
        java.lang.Throwable $r11;
        android.os.RemoteException $r12;
        android.os.IBinder $r13;
        android.telephony.CallQuality r15;
        java.util.Iterator r18;
        com.android.server.TelephonyRegistry$Record r19;

        r0 := @this: com.android.server.TelephonyRegistry;

        r15 := @parameter0: android.telephony.CallQuality;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $z1 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean checkNotifyPermission(java.lang.String)>("notifyCallQualityChanged()");

        if $z1 != 0 goto label01;

        return;

     label01:
        r1 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        entermonitor r1;

     label02:
        $z2 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean validatePhoneId(int)>(i0);

        if $z2 == 0 goto label12;

        $r2 = r0.<com.android.server.TelephonyRegistry: android.telephony.CallQuality[] mCallQuality>;

        $r2[i0] = r15;

        $r3 = r0.<com.android.server.TelephonyRegistry: int[] mCallNetworkType>;

        $r3[i0] = i2;

        r16 = r0.<com.android.server.TelephonyRegistry: android.telephony.CallAttributes[] mCallAttributes>;

        r17 = new android.telephony.CallAttributes;

        $r4 = r0.<com.android.server.TelephonyRegistry: android.telephony.PreciseCallState[] mPreciseCallState>;

        $r5 = $r4[i0];

        specialinvoke r17.<android.telephony.CallAttributes: void <init>(android.telephony.PreciseCallState,int,android.telephony.CallQuality)>($r5, i2, r15);

     label03:
        r16[i0] = r17;

     label04:
        $r6 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        r18 = virtualinvoke $r6.<java.util.ArrayList: java.util.Iterator iterator()>();

     label05:
        $z3 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label12;

        $r7 = interfaceinvoke r18.<java.util.Iterator: java.lang.Object next()>();

        r19 = (com.android.server.TelephonyRegistry$Record) $r7;

        $z4 = virtualinvoke r19.<com.android.server.TelephonyRegistry$Record: boolean matchPhoneStateListenerEvent(int)>(67108864);

        if $z4 == 0 goto label11;

        $i3 = r19.<com.android.server.TelephonyRegistry$Record: int subId>;

        z0 = virtualinvoke r0.<com.android.server.TelephonyRegistry: boolean idMatch(int,int,int)>($i3, i1, i0);

     label06:
        if z0 == 0 goto label11;

     label07:
        $r10 = r19.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        $r8 = r0.<com.android.server.TelephonyRegistry: android.telephony.CallAttributes[] mCallAttributes>;

        $r9 = $r8[i0];

        interfaceinvoke $r10.<com.android.internal.telephony.IPhoneStateListener: void onCallAttributesChanged(android.telephony.CallAttributes)>($r9);

     label08:
        goto label11;

     label09:
        $r12 := @caughtexception;

     label10:
        $r14 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRemoveList>;

        $r13 = r19.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        virtualinvoke $r14.<java.util.ArrayList: boolean add(java.lang.Object)>($r13);

     label11:
        goto label05;

     label12:
        specialinvoke r0.<com.android.server.TelephonyRegistry: void handleRemoveListLocked()>();

        exitmonitor r1;

     label13:
        return;

     label14:
        $r11 := @caughtexception;

     label15:
        exitmonitor r1;

     label16:
        throw $r11;

        catch java.lang.Throwable from label02 to label03 with label14;
        catch java.lang.Throwable from label04 to label05 with label14;
        catch java.lang.Throwable from label05 to label06 with label14;
        catch android.os.RemoteException from label07 to label08 with label09;
        catch java.lang.Throwable from label07 to label08 with label14;
        catch java.lang.Throwable from label10 to label11 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label15 to label16 with label14;
    }

    public void notifyCallState(int, int, int, java.lang.String)
    {
        com.android.server.TelephonyRegistry r0;
        int i0, i1, i2, i3, $i4;
        java.util.ArrayList r1, $r6, $r12;
        java.util.Iterator r2;
        com.android.server.TelephonyRegistry$Record r3;
        boolean $z0, $z1, $z2, $z3;
        int[] $r4;
        java.lang.String[] $r5;
        java.lang.Object $r7;
        com.android.internal.telephony.IPhoneStateListener $r8;
        java.lang.Throwable $r9;
        android.os.RemoteException $r10;
        android.os.IBinder $r11;
        java.lang.String r13, r14;

        r0 := @this: com.android.server.TelephonyRegistry;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r13 := @parameter3: java.lang.String;

        $z0 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean checkNotifyPermission(java.lang.String)>("notifyCallState()");

        if $z0 != 0 goto label01;

        return;

     label01:
        r1 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        entermonitor r1;

     label02:
        $z1 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean validatePhoneId(int)>(i0);

        if $z1 == 0 goto label10;

        $r4 = r0.<com.android.server.TelephonyRegistry: int[] mCallState>;

        $r4[i0] = i2;

        $r5 = r0.<com.android.server.TelephonyRegistry: java.lang.String[] mCallIncomingNumber>;

        $r5[i0] = r13;

        $r6 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        r2 = virtualinvoke $r6.<java.util.ArrayList: java.util.Iterator iterator()>();

     label03:
        $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label10;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.server.TelephonyRegistry$Record) $r7;

        $z3 = virtualinvoke r3.<com.android.server.TelephonyRegistry$Record: boolean matchPhoneStateListenerEvent(int)>(32);

        if $z3 == 0 goto label09;

        $i4 = r3.<com.android.server.TelephonyRegistry$Record: int subId>;

        if $i4 != i1 goto label09;

        i3 = r3.<com.android.server.TelephonyRegistry$Record: int subId>;

     label04:
        if i3 == 2147483647 goto label09;

     label05:
        r14 = specialinvoke r0.<com.android.server.TelephonyRegistry: java.lang.String getCallIncomingNumber(com.android.server.TelephonyRegistry$Record,int)>(r3, i0);

        $r8 = r3.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        interfaceinvoke $r8.<com.android.internal.telephony.IPhoneStateListener: void onCallStateChanged(int,java.lang.String)>(i2, r14);

     label06:
        goto label09;

     label07:
        $r10 := @caughtexception;

     label08:
        $r12 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRemoveList>;

        $r11 = r3.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        virtualinvoke $r12.<java.util.ArrayList: boolean add(java.lang.Object)>($r11);

     label09:
        goto label03;

     label10:
        specialinvoke r0.<com.android.server.TelephonyRegistry: void handleRemoveListLocked()>();

        exitmonitor r1;

     label11:
        specialinvoke r0.<com.android.server.TelephonyRegistry: void broadcastCallStateChanged(int,java.lang.String,int,int)>(i2, r13, i0, i1);

        return;

     label12:
        $r9 := @caughtexception;

     label13:
        exitmonitor r1;

     label14:
        throw $r9;

        catch java.lang.Throwable from label02 to label03 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch android.os.RemoteException from label05 to label06 with label07;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public void notifyCallStateForAllSubs(int, java.lang.String)
    {
        com.android.server.TelephonyRegistry r0;
        int i0, i1;
        java.util.ArrayList r1, $r4, $r9;
        java.util.Iterator r2;
        com.android.server.TelephonyRegistry$Record r3;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Object $r5;
        com.android.internal.telephony.IPhoneStateListener $r6;
        android.os.RemoteException $r7;
        android.os.IBinder $r8;
        java.lang.Throwable $r10;
        java.lang.String r11, r12;

        r0 := @this: com.android.server.TelephonyRegistry;

        i0 := @parameter0: int;

        r11 := @parameter1: java.lang.String;

        $z0 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean checkNotifyPermission(java.lang.String)>("notifyCallState()");

        if $z0 != 0 goto label01;

        return;

     label01:
        r1 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        entermonitor r1;

     label02:
        $r4 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        r2 = virtualinvoke $r4.<java.util.ArrayList: java.util.Iterator iterator()>();

     label03:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label13;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.server.TelephonyRegistry$Record) $r5;

        $z2 = virtualinvoke r3.<com.android.server.TelephonyRegistry$Record: boolean matchPhoneStateListenerEvent(int)>(32);

        if $z2 == 0 goto label12;

        i1 = r3.<com.android.server.TelephonyRegistry$Record: int subId>;

     label04:
        if i1 != 2147483647 goto label12;

     label05:
        $z3 = virtualinvoke r3.<com.android.server.TelephonyRegistry$Record: boolean canReadCallLog()>();

        if $z3 == 0 goto label07;

     label06:
        r12 = r11;

        goto label08;

     label07:
        r12 = "";

     label08:
        $r6 = r3.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        interfaceinvoke $r6.<com.android.internal.telephony.IPhoneStateListener: void onCallStateChanged(int,java.lang.String)>(i0, r12);

     label09:
        goto label12;

     label10:
        $r7 := @caughtexception;

     label11:
        $r9 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRemoveList>;

        $r8 = r3.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        virtualinvoke $r9.<java.util.ArrayList: boolean add(java.lang.Object)>($r8);

     label12:
        goto label03;

     label13:
        specialinvoke r0.<com.android.server.TelephonyRegistry: void handleRemoveListLocked()>();

        exitmonitor r1;

     label14:
        specialinvoke r0.<com.android.server.TelephonyRegistry: void broadcastCallStateChanged(int,java.lang.String,int,int)>(i0, r11, -1, -1);

        return;

     label15:
        $r10 := @caughtexception;

     label16:
        exitmonitor r1;

     label17:
        throw $r10;

        catch java.lang.Throwable from label02 to label03 with label15;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch android.os.RemoteException from label05 to label06 with label10;
        catch java.lang.Throwable from label05 to label06 with label15;
        catch android.os.RemoteException from label08 to label09 with label10;
        catch java.lang.Throwable from label08 to label09 with label15;
        catch java.lang.Throwable from label11 to label12 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label16 to label17 with label15;
    }

    public void notifyCarrierNetworkChange(boolean)
    {
        com.android.server.TelephonyRegistry r0;
        boolean z0, z1, $z2, $z3, $z4;
        int[] r1, $r7;
        java.util.ArrayList r2, $r12, $r17;
        int i0, i1, i2, $i3, i4;
        java.util.Iterator r3;
        android.content.Context $r5;
        android.telephony.SubscriptionManager $r6;
        java.util.stream.IntStream $r8, $r10;
        com.android.server._$$Lambda$TelephonyRegistry$1bce8MzlZGgWfCoSiX5udUvFDQ0 $r9;
        java.lang.SecurityException $r11;
        java.lang.Object $r13;
        com.android.internal.telephony.IPhoneStateListener $r14;
        android.os.RemoteException $r15;
        android.os.IBinder $r16;
        java.lang.Throwable $r18;
        com.android.server.TelephonyRegistry$Record r19;

        r0 := @this: com.android.server.TelephonyRegistry;

        z0 := @parameter0: boolean;

        $r5 = r0.<com.android.server.TelephonyRegistry: android.content.Context mContext>;

        $r6 = staticinvoke <android.telephony.SubscriptionManager: android.telephony.SubscriptionManager 'from'(android.content.Context)>($r5);

        $r7 = virtualinvoke $r6.<android.telephony.SubscriptionManager: int[] getCompleteActiveSubscriptionIdList()>();

        $r8 = staticinvoke <java.util.Arrays: java.util.stream.IntStream stream(int[])>($r7);

        $r9 = new com.android.server._$$Lambda$TelephonyRegistry$1bce8MzlZGgWfCoSiX5udUvFDQ0;

        specialinvoke $r9.<com.android.server._$$Lambda$TelephonyRegistry$1bce8MzlZGgWfCoSiX5udUvFDQ0: void <init>(com.android.server.TelephonyRegistry)>(r0);

        $r10 = interfaceinvoke $r8.<java.util.stream.IntStream: java.util.stream.IntStream filter(java.util.function.IntPredicate)>($r9);

        r1 = interfaceinvoke $r10.<java.util.stream.IntStream: int[] toArray()>();

        $z2 = staticinvoke <com.android.internal.util.ArrayUtils: boolean isEmpty(int[])>(r1);

        if $z2 != 0 goto label18;

        r2 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        entermonitor r2;

     label01:
        r0.<com.android.server.TelephonyRegistry: boolean mCarrierNetworkChangeState> = z0;

        i0 = lengthof r1;

     label02:
        i4 = 0;

     label03:
        if i4 >= i0 goto label13;

        i1 = r1[i4];

     label04:
        i2 = specialinvoke r0.<com.android.server.TelephonyRegistry: int getPhoneIdFromSubId(int)>(i1);

        $r12 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        r3 = virtualinvoke $r12.<java.util.ArrayList: java.util.Iterator iterator()>();

     label05:
        $z3 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label12;

        $r13 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r19 = (com.android.server.TelephonyRegistry$Record) $r13;

        $z4 = virtualinvoke r19.<com.android.server.TelephonyRegistry$Record: boolean matchPhoneStateListenerEvent(int)>(65536);

        if $z4 == 0 goto label11;

        $i3 = r19.<com.android.server.TelephonyRegistry$Record: int subId>;

        z1 = virtualinvoke r0.<com.android.server.TelephonyRegistry: boolean idMatch(int,int,int)>($i3, i1, i2);

     label06:
        if z1 == 0 goto label11;

     label07:
        $r14 = r19.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        interfaceinvoke $r14.<com.android.internal.telephony.IPhoneStateListener: void onCarrierNetworkChange(boolean)>(z0);

     label08:
        goto label11;

     label09:
        $r15 := @caughtexception;

     label10:
        $r17 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRemoveList>;

        $r16 = r19.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        virtualinvoke $r17.<java.util.ArrayList: boolean add(java.lang.Object)>($r16);

     label11:
        goto label05;

     label12:
        i4 = i4 + 1;

        goto label03;

     label13:
        specialinvoke r0.<com.android.server.TelephonyRegistry: void handleRemoveListLocked()>();

        exitmonitor r2;

     label14:
        return;

     label15:
        $r18 := @caughtexception;

     label16:
        exitmonitor r2;

     label17:
        throw $r18;

     label18:
        staticinvoke <com.android.server.TelephonyRegistry: void loge(java.lang.String)>("notifyCarrierNetworkChange without carrier privilege");

        $r11 = new java.lang.SecurityException;

        specialinvoke $r11.<java.lang.SecurityException: void <init>(java.lang.String)>("notifyCarrierNetworkChange without carrier privilege");

        throw $r11;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label04 to label05 with label15;
        catch java.lang.Throwable from label05 to label06 with label15;
        catch android.os.RemoteException from label07 to label08 with label09;
        catch java.lang.Throwable from label07 to label08 with label15;
        catch java.lang.Throwable from label10 to label11 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label16 to label17 with label15;
    }

    public void notifyCellInfo(java.util.List)
    {
        com.android.server.TelephonyRegistry r0;
        java.util.List r1;

        r0 := @this: com.android.server.TelephonyRegistry;

        r1 := @parameter0: java.util.List;

        virtualinvoke r0.<com.android.server.TelephonyRegistry: void notifyCellInfoForSubscriber(int,java.util.List)>(2147483647, r1);

        return;
    }

    public void notifyCellInfoForSubscriber(int, java.util.List)
    {
        com.android.server.TelephonyRegistry r0;
        int i0, i1, $i2;
        java.util.ArrayList r1, $r5, $r7, $r12;
        java.util.Iterator r2;
        com.android.server.TelephonyRegistry$Record r3;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.Object $r8;
        com.android.internal.telephony.IPhoneStateListener $r9;
        android.os.RemoteException $r10;
        android.os.IBinder $r11;
        java.lang.Throwable $r13;
        java.util.List r14;

        r0 := @this: com.android.server.TelephonyRegistry;

        i0 := @parameter0: int;

        r14 := @parameter1: java.util.List;

        $z1 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean checkNotifyPermission(java.lang.String)>("notifyCellInfoForSubscriber()");

        if $z1 != 0 goto label01;

        return;

     label01:
        i1 = specialinvoke r0.<com.android.server.TelephonyRegistry: int getPhoneIdFromSubId(int)>(i0);

        r1 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        entermonitor r1;

     label02:
        $z2 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean validatePhoneId(int)>(i1);

        if $z2 == 0 goto label10;

        $r5 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mCellInfo>;

        virtualinvoke $r5.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>(i1, r14);

        $r7 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        r2 = virtualinvoke $r7.<java.util.ArrayList: java.util.Iterator iterator()>();

     label03:
        $z3 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label10;

        $r8 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.server.TelephonyRegistry$Record) $r8;

        $z4 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean validateEventsAndUserLocked(com.android.server.TelephonyRegistry$Record,int)>(r3, 1024);

        if $z4 == 0 goto label09;

        $i2 = r3.<com.android.server.TelephonyRegistry$Record: int subId>;

        $z5 = virtualinvoke r0.<com.android.server.TelephonyRegistry: boolean idMatch(int,int,int)>($i2, i0, i1);

        if $z5 == 0 goto label09;

        z0 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean checkFineLocationAccess(com.android.server.TelephonyRegistry$Record,int)>(r3, 29);

     label04:
        if z0 == 0 goto label09;

     label05:
        $r9 = r3.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        interfaceinvoke $r9.<com.android.internal.telephony.IPhoneStateListener: void onCellInfoChanged(java.util.List)>(r14);

     label06:
        goto label09;

     label07:
        $r10 := @caughtexception;

     label08:
        $r12 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRemoveList>;

        $r11 = r3.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        virtualinvoke $r12.<java.util.ArrayList: boolean add(java.lang.Object)>($r11);

     label09:
        goto label03;

     label10:
        specialinvoke r0.<com.android.server.TelephonyRegistry: void handleRemoveListLocked()>();

        exitmonitor r1;

     label11:
        return;

     label12:
        $r13 := @caughtexception;

     label13:
        exitmonitor r1;

     label14:
        throw $r13;

        catch java.lang.Throwable from label02 to label03 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch android.os.RemoteException from label05 to label06 with label07;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public void notifyCellLocation(android.telephony.CellIdentity)
    {
        com.android.server.TelephonyRegistry r0;
        android.telephony.CellIdentity r1;

        r0 := @this: com.android.server.TelephonyRegistry;

        r1 := @parameter0: android.telephony.CellIdentity;

        virtualinvoke r0.<com.android.server.TelephonyRegistry: void notifyCellLocationForSubscriber(int,android.telephony.CellIdentity)>(2147483647, r1);

        return;
    }

    public void notifyCellLocationForSubscriber(int, android.telephony.CellIdentity)
    {
        com.android.server.TelephonyRegistry r0;
        int i0, i1, $i2;
        java.util.Iterator r1;
        com.android.server.TelephonyRegistry$Record r2;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.StringBuilder $r4;
        java.lang.String $r9;
        android.telephony.CellIdentity[] $r10;
        java.util.ArrayList $r11, $r17, r20;
        java.lang.Object $r12;
        com.android.internal.telephony.IPhoneStateListener $r13;
        java.lang.Throwable $r14;
        android.os.RemoteException $r15;
        android.os.IBinder $r16;
        android.telephony.CellIdentity r18;

        r0 := @this: com.android.server.TelephonyRegistry;

        i0 := @parameter0: int;

        r18 := @parameter1: android.telephony.CellIdentity;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("notifyCellLocationForSubscriber: subId=");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cellLocation=");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r18);

        $r9 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.TelephonyRegistry: void log(java.lang.String)>($r9);

        $z1 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean checkNotifyPermission(java.lang.String)>("notifyCellLocation()");

        if $z1 != 0 goto label01;

        return;

     label01:
        i1 = specialinvoke r0.<com.android.server.TelephonyRegistry: int getPhoneIdFromSubId(int)>(i0);

        r20 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        entermonitor r20;

     label02:
        $z2 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean validatePhoneId(int)>(i1);

        if $z2 == 0 goto label10;

        $r10 = r0.<com.android.server.TelephonyRegistry: android.telephony.CellIdentity[] mCellIdentity>;

        $r10[i1] = r18;

        $r11 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        r1 = virtualinvoke $r11.<java.util.ArrayList: java.util.Iterator iterator()>();

     label03:
        $z3 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label10;

        $r12 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.android.server.TelephonyRegistry$Record) $r12;

        $z4 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean validateEventsAndUserLocked(com.android.server.TelephonyRegistry$Record,int)>(r2, 16);

        if $z4 == 0 goto label09;

        $i2 = r2.<com.android.server.TelephonyRegistry$Record: int subId>;

        $z5 = virtualinvoke r0.<com.android.server.TelephonyRegistry: boolean idMatch(int,int,int)>($i2, i0, i1);

        if $z5 == 0 goto label09;

        z0 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean checkFineLocationAccess(com.android.server.TelephonyRegistry$Record,int)>(r2, 29);

     label04:
        if z0 == 0 goto label09;

     label05:
        $r13 = r2.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        interfaceinvoke $r13.<com.android.internal.telephony.IPhoneStateListener: void onCellLocationChanged(android.telephony.CellIdentity)>(r18);

     label06:
        goto label09;

     label07:
        $r15 := @caughtexception;

     label08:
        $r17 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRemoveList>;

        $r16 = r2.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        virtualinvoke $r17.<java.util.ArrayList: boolean add(java.lang.Object)>($r16);

     label09:
        goto label03;

     label10:
        specialinvoke r0.<com.android.server.TelephonyRegistry: void handleRemoveListLocked()>();

        exitmonitor r20;

     label11:
        return;

     label12:
        $r14 := @caughtexception;

     label13:
        exitmonitor r20;

     label14:
        throw $r14;

        catch java.lang.Throwable from label02 to label03 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch android.os.RemoteException from label05 to label06 with label07;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public void notifyDataActivity(int)
    {
        com.android.server.TelephonyRegistry r0;
        int i0;

        r0 := @this: com.android.server.TelephonyRegistry;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.server.TelephonyRegistry: void notifyDataActivityForSubscriber(int,int)>(2147483647, i0);

        return;
    }

    public void notifyDataActivityForSubscriber(int, int)
    {
        com.android.server.TelephonyRegistry r0;
        int i0, i1, i2, $i3;
        java.util.ArrayList r1, $r5, $r11;
        java.util.Iterator r2;
        com.android.server.TelephonyRegistry$Record r3;
        boolean z0, $z1, $z2, $z3, $z4;
        int[] $r4;
        java.lang.Object $r6;
        com.android.internal.telephony.IPhoneStateListener $r7;
        java.lang.Throwable $r8;
        android.os.RemoteException $r9;
        android.os.IBinder $r10;

        r0 := @this: com.android.server.TelephonyRegistry;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z1 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean checkNotifyPermission(java.lang.String)>("notifyDataActivity()");

        if $z1 != 0 goto label01;

        return;

     label01:
        i2 = specialinvoke r0.<com.android.server.TelephonyRegistry: int getPhoneIdFromSubId(int)>(i0);

        r1 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        entermonitor r1;

     label02:
        $z2 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean validatePhoneId(int)>(i2);

        if $z2 == 0 goto label10;

        $r4 = r0.<com.android.server.TelephonyRegistry: int[] mDataActivity>;

        $r4[i2] = i1;

        $r5 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        r2 = virtualinvoke $r5.<java.util.ArrayList: java.util.Iterator iterator()>();

     label03:
        $z3 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label10;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.server.TelephonyRegistry$Record) $r6;

        $z4 = virtualinvoke r3.<com.android.server.TelephonyRegistry$Record: boolean matchPhoneStateListenerEvent(int)>(128);

        if $z4 == 0 goto label09;

        $i3 = r3.<com.android.server.TelephonyRegistry$Record: int subId>;

        z0 = virtualinvoke r0.<com.android.server.TelephonyRegistry: boolean idMatch(int,int,int)>($i3, i0, i2);

     label04:
        if z0 == 0 goto label09;

     label05:
        $r7 = r3.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        interfaceinvoke $r7.<com.android.internal.telephony.IPhoneStateListener: void onDataActivity(int)>(i1);

     label06:
        goto label09;

     label07:
        $r9 := @caughtexception;

     label08:
        $r11 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRemoveList>;

        $r10 = r3.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        virtualinvoke $r11.<java.util.ArrayList: boolean add(java.lang.Object)>($r10);

     label09:
        goto label03;

     label10:
        specialinvoke r0.<com.android.server.TelephonyRegistry: void handleRemoveListLocked()>();

        exitmonitor r1;

     label11:
        return;

     label12:
        $r8 := @caughtexception;

     label13:
        exitmonitor r1;

     label14:
        throw $r8;

        catch java.lang.Throwable from label02 to label03 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch android.os.RemoteException from label05 to label06 with label07;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public void notifyDataConnectionFailed(java.lang.String)
    {
        com.android.server.TelephonyRegistry r0;
        java.lang.String r1;

        r0 := @this: com.android.server.TelephonyRegistry;

        r1 := @parameter0: java.lang.String;

        staticinvoke <com.android.server.TelephonyRegistry: void loge(java.lang.String)>("This function should not be invoked");

        return;
    }

    public void notifyDataConnectionForSubscriber(int, int, int, android.telephony.PreciseDataConnectionState)
    {
        com.android.server.TelephonyRegistry r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, i8, i9;
        java.util.ArrayList r1, $r8, $r28, $r38, $r41;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z8, z9, z10, z11;
        java.util.List $r2, $r11;
        java.lang.Object $r3, $r6, $r9, $r12, $r15, $r31;
        java.util.Map $r4, $r13;
        java.lang.Integer $r5, $r14;
        android.telephony.PreciseDataConnectionState $r7, r42;
        com.android.internal.telephony.IPhoneStateListener $r10, $r32;
        int[] $r16, $r29, $r30, $r33;
        java.lang.String $r18, $r21, r43, r45;
        android.util.LocalLog $r27;
        java.lang.Throwable $r35;
        android.os.RemoteException $r36, $r39;
        android.os.IBinder $r37, $r40;
        java.lang.StringBuilder r44;
        java.util.Iterator r46, r49;
        com.android.server.TelephonyRegistry$Record r47, r50;

        r0 := @this: com.android.server.TelephonyRegistry;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r42 := @parameter3: android.telephony.PreciseDataConnectionState;

        $z0 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean checkNotifyPermission(java.lang.String)>("notifyDataConnection()");

        if $z0 != 0 goto label01;

        return;

     label01:
        r43 = "";

        i8 = -1;

        i9 = 0;

        if r42 == null goto label02;

        r43 = virtualinvoke r42.<android.telephony.PreciseDataConnectionState: java.lang.String getDataConnectionApn()>();

        i8 = virtualinvoke r42.<android.telephony.PreciseDataConnectionState: int getState()>();

        i9 = virtualinvoke r42.<android.telephony.PreciseDataConnectionState: int getNetworkType()>();

        virtualinvoke r42.<android.telephony.PreciseDataConnectionState: android.net.LinkProperties getDataConnectionLinkProperties()>();

     label02:
        r1 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        entermonitor r1;

     label03:
        $z1 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean validatePhoneId(int)>(i0);

        if $z1 == 0 goto label30;

     label04:
        $i3 = i2 & 17;

        if $i3 == 0 goto label15;

     label05:
        $r16 = r0.<com.android.server.TelephonyRegistry: int[] mDataConnectionState>;

        $i5 = $r16[i0];

        if $i5 != i8 goto label06;

        $r33 = r0.<com.android.server.TelephonyRegistry: int[] mDataConnectionNetworkType>;

        $i7 = $r33[i0];

        if $i7 == i9 goto label15;

     label06:
        r44 = new java.lang.StringBuilder;

        specialinvoke r44.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onDataConnectionStateChanged(");

        $r18 = staticinvoke <com.android.server.TelephonyRegistry: java.lang.String dataStateToString(int)>(i8);

        virtualinvoke r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        virtualinvoke r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r21 = specialinvoke r0.<com.android.server.TelephonyRegistry: java.lang.String getNetworkTypeName(int)>(i9);

        virtualinvoke r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        virtualinvoke r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") subId=");

        virtualinvoke r44.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", phoneId=");

        virtualinvoke r44.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        r45 = virtualinvoke r44.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.TelephonyRegistry: void log(java.lang.String)>(r45);

        $r27 = r0.<com.android.server.TelephonyRegistry: android.util.LocalLog mLocalLog>;

        virtualinvoke $r27.<android.util.LocalLog: void log(java.lang.String)>(r45);

        $r28 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        r46 = virtualinvoke $r28.<java.util.ArrayList: java.util.Iterator iterator()>();

     label07:
        $z8 = interfaceinvoke r46.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label14;

        $r31 = interfaceinvoke r46.<java.util.Iterator: java.lang.Object next()>();

        r47 = (com.android.server.TelephonyRegistry$Record) $r31;

        $z5 = virtualinvoke r47.<com.android.server.TelephonyRegistry$Record: boolean matchPhoneStateListenerEvent(int)>(64);

        if $z5 == 0 goto label13;

        $i6 = r47.<com.android.server.TelephonyRegistry$Record: int subId>;

        z9 = virtualinvoke r0.<com.android.server.TelephonyRegistry: boolean idMatch(int,int,int)>($i6, i1, i0);

     label08:
        if z9 == 0 goto label13;

     label09:
        $r32 = r47.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        interfaceinvoke $r32.<com.android.internal.telephony.IPhoneStateListener: void onDataConnectionStateChanged(int,int)>(i8, i9);

     label10:
        goto label13;

     label11:
        $r36 := @caughtexception;

     label12:
        $r38 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRemoveList>;

        $r37 = r47.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        virtualinvoke $r38.<java.util.ArrayList: boolean add(java.lang.Object)>($r37);

     label13:
        goto label07;

     label14:
        specialinvoke r0.<com.android.server.TelephonyRegistry: void handleRemoveListLocked()>();

        $r29 = r0.<com.android.server.TelephonyRegistry: int[] mDataConnectionState>;

        $r29[i0] = i8;

        $r30 = r0.<com.android.server.TelephonyRegistry: int[] mDataConnectionNetworkType>;

        $r30[i0] = i9;

     label15:
        z10 = 1;

        if r42 != null goto label20;

     label16:
        $r11 = r0.<com.android.server.TelephonyRegistry: java.util.List mPreciseDataConnectionStates>;

        $r12 = interfaceinvoke $r11.<java.util.List: java.lang.Object get(int)>(i0);

        $r13 = (java.util.Map) $r12;

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r15 = interfaceinvoke $r13.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r14);

        if $r15 == null goto label18;

     label17:
        goto label19;

     label18:
        z10 = 0;

     label19:
        goto label21;

     label20:
        $r2 = r0.<com.android.server.TelephonyRegistry: java.util.List mPreciseDataConnectionStates>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i0);

        $r4 = (java.util.Map) $r3;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r6 = interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, r42);

        $r7 = (android.telephony.PreciseDataConnectionState) $r6;

        $z2 = virtualinvoke r42.<android.telephony.PreciseDataConnectionState: boolean equals(java.lang.Object)>($r7);

        z10 = 1 ^ $z2;

     label21:
        if z10 == 0 goto label30;

     label22:
        $r8 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        r49 = virtualinvoke $r8.<java.util.ArrayList: java.util.Iterator iterator()>();

     label23:
        $z3 = interfaceinvoke r49.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label30;

        $r9 = interfaceinvoke r49.<java.util.Iterator: java.lang.Object next()>();

        r50 = (com.android.server.TelephonyRegistry$Record) $r9;

        $z4 = virtualinvoke r50.<com.android.server.TelephonyRegistry$Record: boolean matchPhoneStateListenerEvent(int)>(4096);

        if $z4 == 0 goto label29;

        $i4 = r50.<com.android.server.TelephonyRegistry$Record: int subId>;

        z11 = virtualinvoke r0.<com.android.server.TelephonyRegistry: boolean idMatch(int,int,int)>($i4, i1, i0);

     label24:
        if z11 == 0 goto label29;

     label25:
        $r10 = r50.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        interfaceinvoke $r10.<com.android.internal.telephony.IPhoneStateListener: void onPreciseDataConnectionStateChanged(android.telephony.PreciseDataConnectionState)>(r42);

     label26:
        goto label29;

     label27:
        $r39 := @caughtexception;

     label28:
        $r41 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRemoveList>;

        $r40 = r50.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        virtualinvoke $r41.<java.util.ArrayList: boolean add(java.lang.Object)>($r40);

     label29:
        goto label23;

     label30:
        specialinvoke r0.<com.android.server.TelephonyRegistry: void handleRemoveListLocked()>();

        exitmonitor r1;

     label31:
        specialinvoke r0.<com.android.server.TelephonyRegistry: void broadcastDataConnectionStateChanged(int,java.lang.String,int,int)>(i8, r43, i2, i1);

        return;

     label32:
        $r35 := @caughtexception;

     label33:
        exitmonitor r1;

     label34:
        throw $r35;

        catch java.lang.Throwable from label03 to label04 with label32;
        catch java.lang.Throwable from label05 to label06 with label32;
        catch java.lang.Throwable from label06 to label07 with label32;
        catch java.lang.Throwable from label07 to label08 with label32;
        catch android.os.RemoteException from label09 to label10 with label11;
        catch java.lang.Throwable from label09 to label10 with label32;
        catch java.lang.Throwable from label12 to label13 with label32;
        catch java.lang.Throwable from label14 to label15 with label32;
        catch java.lang.Throwable from label16 to label17 with label32;
        catch java.lang.Throwable from label20 to label21 with label32;
        catch java.lang.Throwable from label22 to label23 with label32;
        catch java.lang.Throwable from label23 to label24 with label32;
        catch android.os.RemoteException from label25 to label26 with label27;
        catch java.lang.Throwable from label25 to label26 with label32;
        catch java.lang.Throwable from label28 to label29 with label32;
        catch java.lang.Throwable from label30 to label31 with label32;
        catch java.lang.Throwable from label33 to label34 with label32;
    }

    public void notifyDisconnectCause(int, int, int, int)
    {
        com.android.server.TelephonyRegistry r0;
        int i0, i1, i2, i3, $i4, $i5, $i6;
        java.util.ArrayList r1, $r6, $r13;
        com.android.server.TelephonyRegistry$Record r2;
        boolean z0, $z1, $z2, $z3, $z4;
        int[] $r4, $r5, $r8, $r9;
        java.lang.Object $r7;
        com.android.internal.telephony.IPhoneStateListener $r10;
        android.os.RemoteException $r11;
        android.os.IBinder $r12;
        java.lang.Throwable $r14;
        java.util.Iterator r15;

        r0 := @this: com.android.server.TelephonyRegistry;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $z1 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean checkNotifyPermission(java.lang.String)>("notifyDisconnectCause()");

        if $z1 != 0 goto label01;

        return;

     label01:
        r1 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        entermonitor r1;

     label02:
        $z2 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean validatePhoneId(int)>(i0);

        if $z2 == 0 goto label10;

        $r4 = r0.<com.android.server.TelephonyRegistry: int[] mCallDisconnectCause>;

        $r4[i0] = i2;

        $r5 = r0.<com.android.server.TelephonyRegistry: int[] mCallPreciseDisconnectCause>;

        $r5[i0] = i3;

        $r6 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        r15 = virtualinvoke $r6.<java.util.ArrayList: java.util.Iterator iterator()>();

     label03:
        $z3 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label10;

        $r7 = interfaceinvoke r15.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.android.server.TelephonyRegistry$Record) $r7;

        $z4 = virtualinvoke r2.<com.android.server.TelephonyRegistry$Record: boolean matchPhoneStateListenerEvent(int)>(33554432);

        if $z4 == 0 goto label09;

        $i4 = r2.<com.android.server.TelephonyRegistry$Record: int subId>;

        z0 = virtualinvoke r0.<com.android.server.TelephonyRegistry: boolean idMatch(int,int,int)>($i4, i1, i0);

     label04:
        if z0 == 0 goto label09;

     label05:
        $r10 = r2.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        $r8 = r0.<com.android.server.TelephonyRegistry: int[] mCallDisconnectCause>;

        $i6 = $r8[i0];

        $r9 = r0.<com.android.server.TelephonyRegistry: int[] mCallPreciseDisconnectCause>;

        $i5 = $r9[i0];

        interfaceinvoke $r10.<com.android.internal.telephony.IPhoneStateListener: void onCallDisconnectCauseChanged(int,int)>($i6, $i5);

     label06:
        goto label09;

     label07:
        $r11 := @caughtexception;

     label08:
        $r13 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRemoveList>;

        $r12 = r2.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        virtualinvoke $r13.<java.util.ArrayList: boolean add(java.lang.Object)>($r12);

     label09:
        goto label03;

     label10:
        specialinvoke r0.<com.android.server.TelephonyRegistry: void handleRemoveListLocked()>();

        exitmonitor r1;

     label11:
        return;

     label12:
        $r14 := @caughtexception;

     label13:
        exitmonitor r1;

     label14:
        throw $r14;

        catch java.lang.Throwable from label02 to label03 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch android.os.RemoteException from label05 to label06 with label07;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public void notifyDisplayInfoChanged(int, int, android.telephony.TelephonyDisplayInfo)
    {
        com.android.server.TelephonyRegistry r0;
        int i0, i1, $i2;
        java.util.ArrayList r1, $r6, $r12;
        java.util.Iterator r2;
        com.android.server.TelephonyRegistry$Record r3;
        boolean z0, $z1, $z2, $z3, $z4;
        android.telephony.TelephonyDisplayInfo[] $r5;
        java.lang.Object $r7;
        com.android.internal.telephony.IPhoneStateListener $r8;
        java.lang.Throwable $r9;
        android.os.RemoteException $r10;
        android.os.IBinder $r11;
        android.telephony.TelephonyDisplayInfo r13;

        r0 := @this: com.android.server.TelephonyRegistry;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r13 := @parameter2: android.telephony.TelephonyDisplayInfo;

        $z1 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean checkNotifyPermission(java.lang.String)>("notifyDisplayInfoChanged()");

        if $z1 != 0 goto label01;

        return;

     label01:
        r1 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        entermonitor r1;

     label02:
        $z2 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean validatePhoneId(int)>(i0);

        if $z2 == 0 goto label10;

        $r5 = r0.<com.android.server.TelephonyRegistry: android.telephony.TelephonyDisplayInfo[] mTelephonyDisplayInfos>;

        $r5[i0] = r13;

        $r6 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        r2 = virtualinvoke $r6.<java.util.ArrayList: java.util.Iterator iterator()>();

     label03:
        $z3 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label10;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.server.TelephonyRegistry$Record) $r7;

        $z4 = virtualinvoke r3.<com.android.server.TelephonyRegistry$Record: boolean matchPhoneStateListenerEvent(int)>(1048576);

        if $z4 == 0 goto label09;

        $i2 = r3.<com.android.server.TelephonyRegistry$Record: int subId>;

        z0 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean idMatchWithoutDefaultPhoneCheck(int,int)>($i2, i1);

     label04:
        if z0 == 0 goto label09;

     label05:
        $r8 = r3.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        interfaceinvoke $r8.<com.android.internal.telephony.IPhoneStateListener: void onDisplayInfoChanged(android.telephony.TelephonyDisplayInfo)>(r13);

     label06:
        goto label09;

     label07:
        $r10 := @caughtexception;

     label08:
        $r12 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRemoveList>;

        $r11 = r3.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        virtualinvoke $r12.<java.util.ArrayList: boolean add(java.lang.Object)>($r11);

     label09:
        goto label03;

     label10:
        specialinvoke r0.<com.android.server.TelephonyRegistry: void handleRemoveListLocked()>();

        exitmonitor r1;

     label11:
        return;

     label12:
        $r9 := @caughtexception;

     label13:
        exitmonitor r1;

     label14:
        throw $r9;

        catch java.lang.Throwable from label02 to label03 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch android.os.RemoteException from label05 to label06 with label07;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public void notifyEmergencyNumberList(int, int)
    {
        com.android.server.TelephonyRegistry r0;
        int i0, i1, $i2;
        java.util.ArrayList r1, $r8, $r14;
        com.android.server.TelephonyRegistry$Record r2;
        boolean z0, $z1, $z2, $z3, $z4;
        android.content.Context $r4;
        java.lang.Object $r5, $r9;
        android.telephony.TelephonyManager $r6;
        java.util.Map $r7, $r10;
        com.android.internal.telephony.IPhoneStateListener $r11;
        android.os.RemoteException $r12;
        android.os.IBinder $r13;
        java.lang.Throwable $r15;
        java.util.Iterator r16;

        r0 := @this: com.android.server.TelephonyRegistry;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z1 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean checkNotifyPermission(java.lang.String)>("notifyEmergencyNumberList()");

        if $z1 != 0 goto label01;

        return;

     label01:
        r1 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        entermonitor r1;

     label02:
        $z2 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean validatePhoneId(int)>(i0);

        if $z2 == 0 goto label10;

        $r4 = r0.<com.android.server.TelephonyRegistry: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("phone");

        $r6 = (android.telephony.TelephonyManager) $r5;

        $r7 = virtualinvoke $r6.<android.telephony.TelephonyManager: java.util.Map getEmergencyNumberList()>();

        r0.<com.android.server.TelephonyRegistry: java.util.Map mEmergencyNumberList> = $r7;

        $r8 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        r16 = virtualinvoke $r8.<java.util.ArrayList: java.util.Iterator iterator()>();

     label03:
        $z3 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label10;

        $r9 = interfaceinvoke r16.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.android.server.TelephonyRegistry$Record) $r9;

        $z4 = virtualinvoke r2.<com.android.server.TelephonyRegistry$Record: boolean matchPhoneStateListenerEvent(int)>(16777216);

        if $z4 == 0 goto label09;

        $i2 = r2.<com.android.server.TelephonyRegistry$Record: int subId>;

        z0 = virtualinvoke r0.<com.android.server.TelephonyRegistry: boolean idMatch(int,int,int)>($i2, i1, i0);

     label04:
        if z0 == 0 goto label09;

     label05:
        $r11 = r2.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        $r10 = r0.<com.android.server.TelephonyRegistry: java.util.Map mEmergencyNumberList>;

        interfaceinvoke $r11.<com.android.internal.telephony.IPhoneStateListener: void onEmergencyNumberListChanged(java.util.Map)>($r10);

     label06:
        goto label09;

     label07:
        $r12 := @caughtexception;

     label08:
        $r14 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRemoveList>;

        $r13 = r2.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        virtualinvoke $r14.<java.util.ArrayList: boolean add(java.lang.Object)>($r13);

     label09:
        goto label03;

     label10:
        specialinvoke r0.<com.android.server.TelephonyRegistry: void handleRemoveListLocked()>();

        exitmonitor r1;

     label11:
        return;

     label12:
        $r15 := @caughtexception;

     label13:
        exitmonitor r1;

     label14:
        throw $r15;

        catch java.lang.Throwable from label02 to label03 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch android.os.RemoteException from label05 to label06 with label07;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public void notifyImsDisconnectCause(int, android.telephony.ims.ImsReasonInfo)
    {
        com.android.server.TelephonyRegistry r0;
        int i0, i1, $i2;
        java.util.ArrayList r1, $r6, $r14;
        com.android.server.TelephonyRegistry$Record r2;
        boolean z0, $z1, $z2, $z3, $z4;
        java.util.List $r4, $r8;
        java.lang.Object $r7, $r10;
        com.android.internal.telephony.IPhoneStateListener $r9;
        android.telephony.ims.ImsReasonInfo $r11, r16;
        android.os.RemoteException $r12;
        android.os.IBinder $r13;
        java.lang.Throwable $r15;
        java.util.Iterator r17;

        r0 := @this: com.android.server.TelephonyRegistry;

        i0 := @parameter0: int;

        r16 := @parameter1: android.telephony.ims.ImsReasonInfo;

        $z1 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean checkNotifyPermission(java.lang.String)>("notifyImsCallDisconnectCause()");

        if $z1 != 0 goto label01;

        return;

     label01:
        i1 = specialinvoke r0.<com.android.server.TelephonyRegistry: int getPhoneIdFromSubId(int)>(i0);

        r1 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        entermonitor r1;

     label02:
        $z2 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean validatePhoneId(int)>(i1);

        if $z2 == 0 goto label10;

        $r4 = r0.<com.android.server.TelephonyRegistry: java.util.List mImsReasonInfo>;

        interfaceinvoke $r4.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i1, r16);

        $r6 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        r17 = virtualinvoke $r6.<java.util.ArrayList: java.util.Iterator iterator()>();

     label03:
        $z3 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label10;

        $r7 = interfaceinvoke r17.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.android.server.TelephonyRegistry$Record) $r7;

        $z4 = virtualinvoke r2.<com.android.server.TelephonyRegistry$Record: boolean matchPhoneStateListenerEvent(int)>(134217728);

        if $z4 == 0 goto label09;

        $i2 = r2.<com.android.server.TelephonyRegistry$Record: int subId>;

        z0 = virtualinvoke r0.<com.android.server.TelephonyRegistry: boolean idMatch(int,int,int)>($i2, i0, i1);

     label04:
        if z0 == 0 goto label09;

     label05:
        $r9 = r2.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        $r8 = r0.<com.android.server.TelephonyRegistry: java.util.List mImsReasonInfo>;

        $r10 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>(i1);

        $r11 = (android.telephony.ims.ImsReasonInfo) $r10;

        interfaceinvoke $r9.<com.android.internal.telephony.IPhoneStateListener: void onImsCallDisconnectCauseChanged(android.telephony.ims.ImsReasonInfo)>($r11);

     label06:
        goto label09;

     label07:
        $r12 := @caughtexception;

     label08:
        $r14 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRemoveList>;

        $r13 = r2.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        virtualinvoke $r14.<java.util.ArrayList: boolean add(java.lang.Object)>($r13);

     label09:
        goto label03;

     label10:
        specialinvoke r0.<com.android.server.TelephonyRegistry: void handleRemoveListLocked()>();

        exitmonitor r1;

     label11:
        return;

     label12:
        $r15 := @caughtexception;

     label13:
        exitmonitor r1;

     label14:
        throw $r15;

        catch java.lang.Throwable from label02 to label03 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch android.os.RemoteException from label05 to label06 with label07;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public void notifyMessageWaitingChangedForPhoneId(int, int, boolean)
    {
        com.android.server.TelephonyRegistry r0;
        int i0, i1, $i2;
        boolean z0, z1, $z2, $z3, $z4, $z5;
        java.util.ArrayList r1, $r5, $r10;
        com.android.server.TelephonyRegistry$Record r2;
        boolean[] $r4;
        java.lang.Object $r6;
        com.android.internal.telephony.IPhoneStateListener $r7;
        android.os.RemoteException $r8;
        android.os.IBinder $r9;
        java.lang.Throwable $r11;
        java.util.Iterator r12;

        r0 := @this: com.android.server.TelephonyRegistry;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        $z2 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean checkNotifyPermission(java.lang.String)>("notifyMessageWaitingChanged()");

        if $z2 != 0 goto label01;

        return;

     label01:
        r1 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        entermonitor r1;

     label02:
        $z3 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean validatePhoneId(int)>(i0);

        if $z3 == 0 goto label10;

        $r4 = r0.<com.android.server.TelephonyRegistry: boolean[] mMessageWaiting>;

        $r4[i0] = z0;

        $r5 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        r12 = virtualinvoke $r5.<java.util.ArrayList: java.util.Iterator iterator()>();

     label03:
        $z4 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label10;

        $r6 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.android.server.TelephonyRegistry$Record) $r6;

        $z5 = virtualinvoke r2.<com.android.server.TelephonyRegistry$Record: boolean matchPhoneStateListenerEvent(int)>(4);

        if $z5 == 0 goto label09;

        $i2 = r2.<com.android.server.TelephonyRegistry$Record: int subId>;

        z1 = virtualinvoke r0.<com.android.server.TelephonyRegistry: boolean idMatch(int,int,int)>($i2, i1, i0);

     label04:
        if z1 == 0 goto label09;

     label05:
        $r7 = r2.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        interfaceinvoke $r7.<com.android.internal.telephony.IPhoneStateListener: void onMessageWaitingIndicatorChanged(boolean)>(z0);

     label06:
        goto label09;

     label07:
        $r8 := @caughtexception;

     label08:
        $r10 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRemoveList>;

        $r9 = r2.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        virtualinvoke $r10.<java.util.ArrayList: boolean add(java.lang.Object)>($r9);

     label09:
        goto label03;

     label10:
        specialinvoke r0.<com.android.server.TelephonyRegistry: void handleRemoveListLocked()>();

        exitmonitor r1;

     label11:
        return;

     label12:
        $r11 := @caughtexception;

     label13:
        exitmonitor r1;

     label14:
        throw $r11;

        catch java.lang.Throwable from label02 to label03 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch android.os.RemoteException from label05 to label06 with label07;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public void notifyOemHookRawEventForSubscriber(int, int, byte[])
    {
        com.android.server.TelephonyRegistry r0;
        int i0, i1, $i2;
        java.util.ArrayList r1, $r5, $r11;
        java.util.Iterator r2;
        com.android.server.TelephonyRegistry$Record r3;
        boolean z0, $z1, $z2, $z3, $z4;
        java.lang.Object $r6;
        com.android.internal.telephony.IPhoneStateListener $r7;
        java.lang.Throwable $r8;
        android.os.RemoteException $r9;
        android.os.IBinder $r10;
        byte[] r12;

        r0 := @this: com.android.server.TelephonyRegistry;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r12 := @parameter2: byte[];

        $z1 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean checkNotifyPermission(java.lang.String)>("notifyOemHookRawEventForSubscriber");

        if $z1 != 0 goto label01;

        return;

     label01:
        r1 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        entermonitor r1;

     label02:
        $z2 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean validatePhoneId(int)>(i0);

        if $z2 == 0 goto label10;

        $r5 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        r2 = virtualinvoke $r5.<java.util.ArrayList: java.util.Iterator iterator()>();

     label03:
        $z3 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label10;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.server.TelephonyRegistry$Record) $r6;

        $z4 = virtualinvoke r3.<com.android.server.TelephonyRegistry$Record: boolean matchPhoneStateListenerEvent(int)>(32768);

        if $z4 == 0 goto label09;

        $i2 = r3.<com.android.server.TelephonyRegistry$Record: int subId>;

        z0 = virtualinvoke r0.<com.android.server.TelephonyRegistry: boolean idMatch(int,int,int)>($i2, i1, i0);

     label04:
        if z0 == 0 goto label09;

     label05:
        $r7 = r3.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        interfaceinvoke $r7.<com.android.internal.telephony.IPhoneStateListener: void onOemHookRawEvent(byte[])>(r12);

     label06:
        goto label09;

     label07:
        $r9 := @caughtexception;

     label08:
        $r11 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRemoveList>;

        $r10 = r3.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        virtualinvoke $r11.<java.util.ArrayList: boolean add(java.lang.Object)>($r10);

     label09:
        goto label03;

     label10:
        specialinvoke r0.<com.android.server.TelephonyRegistry: void handleRemoveListLocked()>();

        exitmonitor r1;

     label11:
        return;

     label12:
        $r8 := @caughtexception;

     label13:
        exitmonitor r1;

     label14:
        throw $r8;

        catch java.lang.Throwable from label02 to label03 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch android.os.RemoteException from label05 to label06 with label07;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public void notifyOpportunisticSubscriptionInfoChanged()
    {
        com.android.server.TelephonyRegistry r0;
        java.util.ArrayList r1, $r4, $r5, $r9, $r14;
        java.util.Iterator r2;
        boolean z0, $z1, $z3;
        java.lang.Object $r6;
        com.android.internal.telephony.IOnSubscriptionsChangedListener $r7;
        int $i0;
        java.lang.String $r11;
        android.os.RemoteException $r12;
        android.os.IBinder $r13;
        java.lang.Throwable $r15;
        java.lang.StringBuilder r16;
        com.android.server.TelephonyRegistry$Record r17;

        r0 := @this: com.android.server.TelephonyRegistry;

        r1 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        entermonitor r1;

     label01:
        $z1 = r0.<com.android.server.TelephonyRegistry: boolean mHasNotifyOpportunisticSubscriptionInfoChangedOccurred>;

        if $z1 != 0 goto label02;

        r16 = new java.lang.StringBuilder;

        specialinvoke r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("notifyOpptSubscriptionInfoChanged: first invocation mRecords.size=");

        $r9 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        $i0 = virtualinvoke $r9.<java.util.ArrayList: int size()>();

        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r11 = virtualinvoke r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.TelephonyRegistry: void log(java.lang.String)>($r11);

     label02:
        r0.<com.android.server.TelephonyRegistry: boolean mHasNotifyOpportunisticSubscriptionInfoChangedOccurred> = 1;

        $r4 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRemoveList>;

        virtualinvoke $r4.<java.util.ArrayList: void clear()>();

        $r5 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        r2 = virtualinvoke $r5.<java.util.ArrayList: java.util.Iterator iterator()>();

     label03:
        $z3 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label10;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r17 = (com.android.server.TelephonyRegistry$Record) $r6;

        z0 = virtualinvoke r17.<com.android.server.TelephonyRegistry$Record: boolean matchOnOpportunisticSubscriptionsChangedListener()>();

     label04:
        if z0 == 0 goto label09;

     label05:
        $r7 = r17.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IOnSubscriptionsChangedListener onOpportunisticSubscriptionsChangedListenerCallback>;

        interfaceinvoke $r7.<com.android.internal.telephony.IOnSubscriptionsChangedListener: void onSubscriptionsChanged()>();

     label06:
        goto label09;

     label07:
        $r12 := @caughtexception;

     label08:
        $r14 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRemoveList>;

        $r13 = r17.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        virtualinvoke $r14.<java.util.ArrayList: boolean add(java.lang.Object)>($r13);

     label09:
        goto label03;

     label10:
        specialinvoke r0.<com.android.server.TelephonyRegistry: void handleRemoveListLocked()>();

        exitmonitor r1;

     label11:
        return;

     label12:
        $r15 := @caughtexception;

     label13:
        exitmonitor r1;

     label14:
        throw $r15;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label02 to label03 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch android.os.RemoteException from label05 to label06 with label07;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public void notifyOutgoingEmergencyCall(int, int, android.telephony.emergency.EmergencyNumber)
    {
        com.android.server.TelephonyRegistry r0;
        int i0, i1, $i2;
        java.util.ArrayList r1, $r6, $r12;
        java.util.Iterator r2;
        com.android.server.TelephonyRegistry$Record r3;
        boolean z0, $z1, $z2, $z3, $z4;
        android.telephony.emergency.EmergencyNumber[] $r5;
        java.lang.Object $r7;
        com.android.internal.telephony.IPhoneStateListener $r8;
        java.lang.Throwable $r9;
        android.os.RemoteException $r10;
        android.os.IBinder $r11;
        android.telephony.emergency.EmergencyNumber r13;

        r0 := @this: com.android.server.TelephonyRegistry;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r13 := @parameter2: android.telephony.emergency.EmergencyNumber;

        $z1 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean checkNotifyPermission(java.lang.String)>("notifyOutgoingEmergencyCall()");

        if $z1 != 0 goto label01;

        return;

     label01:
        r1 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        entermonitor r1;

     label02:
        $z2 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean validatePhoneId(int)>(i0);

        if $z2 == 0 goto label10;

        $r5 = r0.<com.android.server.TelephonyRegistry: android.telephony.emergency.EmergencyNumber[] mOutgoingCallEmergencyNumber>;

        $r5[i0] = r13;

        $r6 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        r2 = virtualinvoke $r6.<java.util.ArrayList: java.util.Iterator iterator()>();

     label03:
        $z3 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label10;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.server.TelephonyRegistry$Record) $r7;

        $z4 = virtualinvoke r3.<com.android.server.TelephonyRegistry$Record: boolean matchPhoneStateListenerEvent(int)>(268435456);

        if $z4 == 0 goto label09;

        $i2 = r3.<com.android.server.TelephonyRegistry$Record: int subId>;

        z0 = virtualinvoke r0.<com.android.server.TelephonyRegistry: boolean idMatch(int,int,int)>($i2, i1, i0);

     label04:
        if z0 == 0 goto label09;

     label05:
        $r8 = r3.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        interfaceinvoke $r8.<com.android.internal.telephony.IPhoneStateListener: void onOutgoingEmergencyCall(android.telephony.emergency.EmergencyNumber)>(r13);

     label06:
        goto label09;

     label07:
        $r10 := @caughtexception;

     label08:
        $r12 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRemoveList>;

        $r11 = r3.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        virtualinvoke $r12.<java.util.ArrayList: boolean add(java.lang.Object)>($r11);

     label09:
        goto label03;

     label10:
        specialinvoke r0.<com.android.server.TelephonyRegistry: void handleRemoveListLocked()>();

        exitmonitor r1;

     label11:
        return;

     label12:
        $r9 := @caughtexception;

     label13:
        exitmonitor r1;

     label14:
        throw $r9;

        catch java.lang.Throwable from label02 to label03 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch android.os.RemoteException from label05 to label06 with label07;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public void notifyOutgoingEmergencySms(int, int, android.telephony.emergency.EmergencyNumber)
    {
        com.android.server.TelephonyRegistry r0;
        int i0, i1, $i2;
        java.util.ArrayList r1, $r6, $r11;
        java.util.Iterator r2;
        com.android.server.TelephonyRegistry$Record r3;
        boolean z0, $z1, $z2, $z3, $z4;
        android.telephony.emergency.EmergencyNumber[] $r5;
        java.lang.Object $r7;
        com.android.internal.telephony.IPhoneStateListener $r8;
        android.os.RemoteException $r9;
        android.os.IBinder $r10;
        java.lang.Throwable $r12;
        android.telephony.emergency.EmergencyNumber r13;

        r0 := @this: com.android.server.TelephonyRegistry;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r13 := @parameter2: android.telephony.emergency.EmergencyNumber;

        $z1 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean checkNotifyPermission(java.lang.String)>("notifyOutgoingEmergencySms()");

        if $z1 != 0 goto label01;

        return;

     label01:
        r1 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        entermonitor r1;

     label02:
        $z2 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean validatePhoneId(int)>(i0);

        if $z2 == 0 goto label10;

        $r5 = r0.<com.android.server.TelephonyRegistry: android.telephony.emergency.EmergencyNumber[] mOutgoingSmsEmergencyNumber>;

        $r5[i0] = r13;

        $r6 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        r2 = virtualinvoke $r6.<java.util.ArrayList: java.util.Iterator iterator()>();

     label03:
        $z3 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label10;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.server.TelephonyRegistry$Record) $r7;

        $z4 = virtualinvoke r3.<com.android.server.TelephonyRegistry$Record: boolean matchPhoneStateListenerEvent(int)>(536870912);

        if $z4 == 0 goto label09;

        $i2 = r3.<com.android.server.TelephonyRegistry$Record: int subId>;

        z0 = virtualinvoke r0.<com.android.server.TelephonyRegistry: boolean idMatch(int,int,int)>($i2, i1, i0);

     label04:
        if z0 == 0 goto label09;

     label05:
        $r8 = r3.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        interfaceinvoke $r8.<com.android.internal.telephony.IPhoneStateListener: void onOutgoingEmergencySms(android.telephony.emergency.EmergencyNumber)>(r13);

     label06:
        goto label09;

     label07:
        $r9 := @caughtexception;

     label08:
        $r11 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRemoveList>;

        $r10 = r3.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        virtualinvoke $r11.<java.util.ArrayList: boolean add(java.lang.Object)>($r10);

     label09:
        goto label03;

     label10:
        specialinvoke r0.<com.android.server.TelephonyRegistry: void handleRemoveListLocked()>();

        exitmonitor r1;

     label11:
        return;

     label12:
        $r12 := @caughtexception;

     label13:
        exitmonitor r1;

     label14:
        throw $r12;

        catch java.lang.Throwable from label02 to label03 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch android.os.RemoteException from label05 to label06 with label07;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public void notifyPhoneCapabilityChanged(android.telephony.PhoneCapability)
    {
        com.android.server.TelephonyRegistry r0;
        java.util.ArrayList r1, $r5, $r10;
        java.util.Iterator r2;
        com.android.server.TelephonyRegistry$Record r3;
        boolean z0, $z1, $z2;
        java.lang.Object $r6;
        com.android.internal.telephony.IPhoneStateListener $r7;
        android.os.RemoteException $r8;
        android.os.IBinder $r9;
        java.lang.Throwable $r11;
        android.telephony.PhoneCapability r12;

        r0 := @this: com.android.server.TelephonyRegistry;

        r12 := @parameter0: android.telephony.PhoneCapability;

        $z1 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean checkNotifyPermission(java.lang.String)>("notifyPhoneCapabilityChanged()");

        if $z1 != 0 goto label01;

        return;

     label01:
        r1 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        entermonitor r1;

     label02:
        r0.<com.android.server.TelephonyRegistry: android.telephony.PhoneCapability mPhoneCapability> = r12;

        $r5 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        r2 = virtualinvoke $r5.<java.util.ArrayList: java.util.Iterator iterator()>();

     label03:
        $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label10;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.server.TelephonyRegistry$Record) $r6;

        z0 = virtualinvoke r3.<com.android.server.TelephonyRegistry$Record: boolean matchPhoneStateListenerEvent(int)>(2097152);

     label04:
        if z0 == 0 goto label09;

     label05:
        $r7 = r3.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        interfaceinvoke $r7.<com.android.internal.telephony.IPhoneStateListener: void onPhoneCapabilityChanged(android.telephony.PhoneCapability)>(r12);

     label06:
        goto label09;

     label07:
        $r8 := @caughtexception;

     label08:
        $r10 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRemoveList>;

        $r9 = r3.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        virtualinvoke $r10.<java.util.ArrayList: boolean add(java.lang.Object)>($r9);

     label09:
        goto label03;

     label10:
        specialinvoke r0.<com.android.server.TelephonyRegistry: void handleRemoveListLocked()>();

        exitmonitor r1;

     label11:
        return;

     label12:
        $r11 := @caughtexception;

     label13:
        exitmonitor r1;

     label14:
        throw $r11;

        catch java.lang.Throwable from label02 to label03 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch android.os.RemoteException from label05 to label06 with label07;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public void notifyPreciseCallState(int, int, int, int, int)
    {
        com.android.server.TelephonyRegistry r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, i8;
        java.util.ArrayList r1, $r27, $r30, $r34;
        boolean $z0, $z1, $z2, $z3, z6, $z7, z8, z9;
        int[] $r2, $r3, $r4, $r10, $r22;
        android.telephony.CallQuality[] $r5, $r11, $r23;
        android.telephony.PreciseCallState[] $r6, $r9, $r19, r32;
        android.telephony.PreciseCallState $r7, $r13, $r20, r33;
        android.telephony.CallAttributes $r8, $r17;
        android.telephony.CallQuality $r12, $r24;
        android.telephony.CallAttributes[] $r14, $r16;
        java.lang.Object $r15;
        com.android.internal.telephony.IPhoneStateListener $r18, $r21;
        android.os.RemoteException $r25, $r28;
        android.os.IBinder $r26, $r29;
        java.lang.Throwable $r31;
        java.util.Iterator r35;
        com.android.server.TelephonyRegistry$Record r36;

        r0 := @this: com.android.server.TelephonyRegistry;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i8 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        $z0 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean checkNotifyPermission(java.lang.String)>("notifyPreciseCallState()");

        if $z0 != 0 goto label01;

        return;

     label01:
        r1 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        entermonitor r1;

     label02:
        $z1 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean validatePhoneId(int)>(i0);

        if $z1 == 0 goto label23;

        $r2 = r0.<com.android.server.TelephonyRegistry: int[] mRingingCallState>;

        $r2[i0] = i8;

        $r3 = r0.<com.android.server.TelephonyRegistry: int[] mForegroundCallState>;

        $r3[i0] = i2;

        $r4 = r0.<com.android.server.TelephonyRegistry: int[] mBackgroundCallState>;

        $r4[i0] = i3;

        r32 = r0.<com.android.server.TelephonyRegistry: android.telephony.PreciseCallState[] mPreciseCallState>;

        r33 = new android.telephony.PreciseCallState;

        specialinvoke r33.<android.telephony.PreciseCallState: void <init>(int,int,int,int,int)>(i8, i2, i3, -1, -1);

     label03:
        r32[i0] = r33;

        z6 = 1;

     label04:
        $r5 = r0.<com.android.server.TelephonyRegistry: android.telephony.CallQuality[] mCallQuality>;

        if $r5 != null goto label06;

        staticinvoke <com.android.server.TelephonyRegistry: void log(java.lang.String)>("notifyPreciseCallState: mCallQuality is null, skipping call attributes");

     label05:
        z6 = 0;

        goto label08;

     label06:
        $r6 = r0.<com.android.server.TelephonyRegistry: android.telephony.PreciseCallState[] mPreciseCallState>;

        $r7 = $r6[i0];

        $i4 = virtualinvoke $r7.<android.telephony.PreciseCallState: int getForegroundCallState()>();

        if $i4 == 1 goto label07;

        $r22 = r0.<com.android.server.TelephonyRegistry: int[] mCallNetworkType>;

        $r22[i0] = 0;

        $r23 = r0.<com.android.server.TelephonyRegistry: android.telephony.CallQuality[] mCallQuality>;

        $r24 = staticinvoke <com.android.server.TelephonyRegistry: android.telephony.CallQuality createCallQuality()>();

        $r23[i0] = $r24;

     label07:
        $r14 = r0.<com.android.server.TelephonyRegistry: android.telephony.CallAttributes[] mCallAttributes>;

        $r8 = new android.telephony.CallAttributes;

        $r9 = r0.<com.android.server.TelephonyRegistry: android.telephony.PreciseCallState[] mPreciseCallState>;

        $r13 = $r9[i0];

        $r10 = r0.<com.android.server.TelephonyRegistry: int[] mCallNetworkType>;

        $i5 = $r10[i0];

        $r11 = r0.<com.android.server.TelephonyRegistry: android.telephony.CallQuality[] mCallQuality>;

        $r12 = $r11[i0];

        specialinvoke $r8.<android.telephony.CallAttributes: void <init>(android.telephony.PreciseCallState,int,android.telephony.CallQuality)>($r13, $i5, $r12);

        $r14[i0] = $r8;

     label08:
        $r34 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        r35 = virtualinvoke $r34.<java.util.ArrayList: java.util.Iterator iterator()>();

     label09:
        $z7 = interfaceinvoke r35.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label23;

        $r15 = interfaceinvoke r35.<java.util.Iterator: java.lang.Object next()>();

        r36 = (com.android.server.TelephonyRegistry$Record) $r15;

        $z2 = virtualinvoke r36.<com.android.server.TelephonyRegistry$Record: boolean matchPhoneStateListenerEvent(int)>(2048);

        if $z2 == 0 goto label15;

        $i7 = r36.<com.android.server.TelephonyRegistry$Record: int subId>;

        z8 = virtualinvoke r0.<com.android.server.TelephonyRegistry: boolean idMatch(int,int,int)>($i7, i1, i0);

     label10:
        if z8 == 0 goto label15;

     label11:
        $r21 = r36.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        $r19 = r0.<com.android.server.TelephonyRegistry: android.telephony.PreciseCallState[] mPreciseCallState>;

        $r20 = $r19[i0];

        interfaceinvoke $r21.<com.android.internal.telephony.IPhoneStateListener: void onPreciseCallStateChanged(android.telephony.PreciseCallState)>($r20);

     label12:
        goto label15;

     label13:
        $r28 := @caughtexception;

     label14:
        $r30 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRemoveList>;

        $r29 = r36.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        virtualinvoke $r30.<java.util.ArrayList: boolean add(java.lang.Object)>($r29);

     label15:
        if z6 == 0 goto label22;

     label16:
        $z3 = virtualinvoke r36.<com.android.server.TelephonyRegistry$Record: boolean matchPhoneStateListenerEvent(int)>(67108864);

        if $z3 == 0 goto label22;

        $i6 = r36.<com.android.server.TelephonyRegistry$Record: int subId>;

        z9 = virtualinvoke r0.<com.android.server.TelephonyRegistry: boolean idMatch(int,int,int)>($i6, i1, i0);

     label17:
        if z9 == 0 goto label22;

     label18:
        $r18 = r36.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        $r16 = r0.<com.android.server.TelephonyRegistry: android.telephony.CallAttributes[] mCallAttributes>;

        $r17 = $r16[i0];

        interfaceinvoke $r18.<com.android.internal.telephony.IPhoneStateListener: void onCallAttributesChanged(android.telephony.CallAttributes)>($r17);

     label19:
        goto label22;

     label20:
        $r25 := @caughtexception;

     label21:
        $r27 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRemoveList>;

        $r26 = r36.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        virtualinvoke $r27.<java.util.ArrayList: boolean add(java.lang.Object)>($r26);

     label22:
        goto label09;

     label23:
        specialinvoke r0.<com.android.server.TelephonyRegistry: void handleRemoveListLocked()>();

        exitmonitor r1;

     label24:
        return;

     label25:
        $r31 := @caughtexception;

     label26:
        exitmonitor r1;

     label27:
        throw $r31;

        catch java.lang.Throwable from label02 to label03 with label25;
        catch java.lang.Throwable from label04 to label05 with label25;
        catch java.lang.Throwable from label06 to label07 with label25;
        catch java.lang.Throwable from label07 to label08 with label25;
        catch java.lang.Throwable from label08 to label09 with label25;
        catch java.lang.Throwable from label09 to label10 with label25;
        catch android.os.RemoteException from label11 to label12 with label13;
        catch java.lang.Throwable from label11 to label12 with label25;
        catch java.lang.Throwable from label14 to label15 with label25;
        catch java.lang.Throwable from label16 to label17 with label25;
        catch android.os.RemoteException from label18 to label19 with label20;
        catch java.lang.Throwable from label18 to label19 with label25;
        catch java.lang.Throwable from label21 to label22 with label25;
        catch java.lang.Throwable from label23 to label24 with label25;
        catch java.lang.Throwable from label26 to label27 with label25;
    }

    public void notifyPreciseDataConnectionFailed(int, int, int, java.lang.String, int)
    {
        com.android.server.TelephonyRegistry r0;
        int i0, i1, i2, i3, i4;
        java.util.ArrayList r1, $r7, $r18;
        boolean z0, $z1, $z2, $z3, $z4;
        java.util.List $r3, $r9;
        java.lang.Object $r4, $r8, $r11, $r14;
        java.lang.Integer $r5, $r13;
        com.android.internal.telephony.IPhoneStateListener $r10;
        java.util.Map $r12, r22;
        android.telephony.PreciseDataConnectionState $r15, r23;
        android.os.RemoteException $r16;
        android.os.IBinder $r17;
        java.lang.Throwable $r19, $r20, r26;
        java.lang.String r21;
        java.util.Iterator r24;
        com.android.server.TelephonyRegistry$Record r25;

        r0 := @this: com.android.server.TelephonyRegistry;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r21 := @parameter3: java.lang.String;

        i3 := @parameter4: int;

        $z1 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean checkNotifyPermission(java.lang.String)>("notifyPreciseDataConnectionFailed()");

        if $z1 != 0 goto label01;

        return;

     label01:
        specialinvoke r0.<com.android.server.TelephonyRegistry: void notifyDataConnectionFailedForSubscriber(int,int,int)>(i0, i1, i2);

        r1 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        entermonitor r1;

     label02:
        $z2 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean validatePhoneId(int)>(i0);

        if $z2 == 0 goto label13;

        $r3 = r0.<com.android.server.TelephonyRegistry: java.util.List mPreciseDataConnectionStates>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i0);

        r22 = (java.util.Map) $r4;

        r23 = new android.telephony.PreciseDataConnectionState;

        specialinvoke r23.<android.telephony.PreciseDataConnectionState: void <init>(int,int,int,java.lang.String,android.net.LinkProperties,int,android.telephony.data.ApnSetting)>(-1, 0, i2, null, null, i3, null);

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        interfaceinvoke r22.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, r23);

        $r7 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        r24 = virtualinvoke $r7.<java.util.ArrayList: java.util.Iterator iterator()>();

     label03:
        $z3 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label12;

        $r8 = interfaceinvoke r24.<java.util.Iterator: java.lang.Object next()>();

        r25 = (com.android.server.TelephonyRegistry$Record) $r8;

        $z4 = virtualinvoke r25.<com.android.server.TelephonyRegistry$Record: boolean matchPhoneStateListenerEvent(int)>(4096);

        if $z4 == 0 goto label11;

        i4 = r25.<com.android.server.TelephonyRegistry$Record: int subId>;

     label04:
        z0 = virtualinvoke r0.<com.android.server.TelephonyRegistry: boolean idMatch(int,int,int)>(i4, i1, i0);

     label05:
        if z0 == 0 goto label11;

     label06:
        $r10 = r25.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        $r9 = r0.<com.android.server.TelephonyRegistry: java.util.List mPreciseDataConnectionStates>;

        $r11 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(i0);

        $r12 = (java.util.Map) $r11;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r14 = interfaceinvoke $r12.<java.util.Map: java.lang.Object get(java.lang.Object)>($r13);

        $r15 = (android.telephony.PreciseDataConnectionState) $r14;

        interfaceinvoke $r10.<com.android.internal.telephony.IPhoneStateListener: void onPreciseDataConnectionStateChanged(android.telephony.PreciseDataConnectionState)>($r15);

     label07:
        goto label11;

     label08:
        $r16 := @caughtexception;

     label09:
        $r18 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRemoveList>;

        $r17 = r25.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        virtualinvoke $r18.<java.util.ArrayList: boolean add(java.lang.Object)>($r17);

     label10:
        goto label11;

     label11:
        goto label03;

     label12:
        goto label13;

     label13:
        specialinvoke r0.<com.android.server.TelephonyRegistry: void handleRemoveListLocked()>();

        exitmonitor r1;

     label14:
        return;

     label15:
        $r20 := @caughtexception;

        r26 = $r20;

     label16:
        exitmonitor r1;

     label17:
        throw r26;

     label18:
        $r19 := @caughtexception;

        r26 = $r19;

        goto label16;

        catch java.lang.Throwable from label02 to label03 with label15;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Throwable from label04 to label05 with label18;
        catch android.os.RemoteException from label06 to label07 with label08;
        catch java.lang.Throwable from label06 to label07 with label18;
        catch java.lang.Throwable from label09 to label10 with label18;
        catch java.lang.Throwable from label13 to label14 with label18;
        catch java.lang.Throwable from label16 to label17 with label18;
    }

    public void notifyRadioPowerStateChanged(int, int, int)
    {
        com.android.server.TelephonyRegistry r0;
        int i0, i1, i2, $i3;
        java.util.ArrayList r1, $r4, $r9;
        java.util.Iterator r2;
        boolean z0, $z1, $z2, $z3, $z4;
        java.lang.Object $r5;
        com.android.internal.telephony.IPhoneStateListener $r6;
        android.os.RemoteException $r7;
        android.os.IBinder $r8;
        java.lang.Throwable $r10;
        com.android.server.TelephonyRegistry$Record r11;

        r0 := @this: com.android.server.TelephonyRegistry;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $z1 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean checkNotifyPermission(java.lang.String)>("notifyRadioPowerStateChanged()");

        if $z1 != 0 goto label01;

        return;

     label01:
        r1 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        entermonitor r1;

     label02:
        $z2 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean validatePhoneId(int)>(i0);

        if $z2 == 0 goto label10;

        r0.<com.android.server.TelephonyRegistry: int mRadioPowerState> = i2;

        $r4 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        r2 = virtualinvoke $r4.<java.util.ArrayList: java.util.Iterator iterator()>();

     label03:
        $z3 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label10;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r11 = (com.android.server.TelephonyRegistry$Record) $r5;

        $z4 = virtualinvoke r11.<com.android.server.TelephonyRegistry$Record: boolean matchPhoneStateListenerEvent(int)>(8388608);

        if $z4 == 0 goto label09;

        $i3 = r11.<com.android.server.TelephonyRegistry$Record: int subId>;

        z0 = virtualinvoke r0.<com.android.server.TelephonyRegistry: boolean idMatch(int,int,int)>($i3, i1, i0);

     label04:
        if z0 == 0 goto label09;

     label05:
        $r6 = r11.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        interfaceinvoke $r6.<com.android.internal.telephony.IPhoneStateListener: void onRadioPowerStateChanged(int)>(i2);

     label06:
        goto label09;

     label07:
        $r7 := @caughtexception;

     label08:
        $r9 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRemoveList>;

        $r8 = r11.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        virtualinvoke $r9.<java.util.ArrayList: boolean add(java.lang.Object)>($r8);

     label09:
        goto label03;

     label10:
        specialinvoke r0.<com.android.server.TelephonyRegistry: void handleRemoveListLocked()>();

        exitmonitor r1;

     label11:
        return;

     label12:
        $r10 := @caughtexception;

     label13:
        exitmonitor r1;

     label14:
        throw $r10;

        catch java.lang.Throwable from label02 to label03 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch android.os.RemoteException from label05 to label06 with label07;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public void notifyRegistrationFailed(int, int, android.telephony.CellIdentity, java.lang.String, int, int, int)
    {
        com.android.server.TelephonyRegistry r0;
        int i0, i1, i2, i3, i4, i5;
        java.lang.String r1;
        android.telephony.CellIdentity r2, r14, r15;
        java.util.ArrayList r3, $r7, $r13;
        java.util.Iterator r4;
        com.android.server.TelephonyRegistry$Record r5;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        com.android.internal.telephony.IPhoneStateListener r6;
        java.lang.Object $r8;
        java.lang.Throwable $r9, $r10, r17;
        android.os.RemoteException $r11;
        android.os.IBinder $r12;

        r0 := @this: com.android.server.TelephonyRegistry;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r14 := @parameter2: android.telephony.CellIdentity;

        r1 := @parameter3: java.lang.String;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        i4 := @parameter6: int;

        $z1 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean checkNotifyPermission(java.lang.String)>("notifyRegistrationFailed()");

        if $z1 != 0 goto label01;

        return;

     label01:
        r2 = virtualinvoke r14.<android.telephony.CellIdentity: android.telephony.CellIdentity sanitizeLocationInfo()>();

        r3 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        entermonitor r3;

     label02:
        $z2 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean validatePhoneId(int)>(i0);

        if $z2 == 0 goto label16;

        $r7 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        r4 = virtualinvoke $r7.<java.util.ArrayList: java.util.Iterator iterator()>();

     label03:
        $z3 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label15;

        $r8 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.android.server.TelephonyRegistry$Record) $r8;

        $z4 = virtualinvoke r5.<com.android.server.TelephonyRegistry$Record: boolean matchPhoneStateListenerEvent(int)>(1073741824);

        if $z4 == 0 goto label14;

        i5 = r5.<com.android.server.TelephonyRegistry$Record: int subId>;

     label04:
        z0 = virtualinvoke r0.<com.android.server.TelephonyRegistry: boolean idMatch(int,int,int)>(i5, i1, i0);

     label05:
        if z0 == 0 goto label14;

     label06:
        r6 = r5.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        $z5 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean checkFineLocationAccess(com.android.server.TelephonyRegistry$Record,int)>(r5, 1);

        if $z5 == 0 goto label08;

     label07:
        r15 = r14;

        goto label09;

     label08:
        r15 = r2;

     label09:
        interfaceinvoke r6.<com.android.internal.telephony.IPhoneStateListener: void onRegistrationFailed(android.telephony.CellIdentity,java.lang.String,int,int,int)>(r15, r1, i2, i3, i4);

     label10:
        goto label14;

     label11:
        $r11 := @caughtexception;

     label12:
        $r13 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRemoveList>;

        $r12 = r5.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        virtualinvoke $r13.<java.util.ArrayList: boolean add(java.lang.Object)>($r12);

     label13:
        goto label14;

     label14:
        goto label03;

     label15:
        goto label16;

     label16:
        specialinvoke r0.<com.android.server.TelephonyRegistry: void handleRemoveListLocked()>();

        exitmonitor r3;

     label17:
        return;

     label18:
        $r10 := @caughtexception;

        r17 = $r10;

     label19:
        exitmonitor r3;

     label20:
        throw r17;

     label21:
        $r9 := @caughtexception;

        r17 = $r9;

        goto label19;

        catch java.lang.Throwable from label02 to label03 with label18;
        catch java.lang.Throwable from label03 to label04 with label18;
        catch java.lang.Throwable from label04 to label05 with label21;
        catch android.os.RemoteException from label06 to label07 with label11;
        catch java.lang.Throwable from label06 to label07 with label21;
        catch android.os.RemoteException from label09 to label10 with label11;
        catch java.lang.Throwable from label09 to label10 with label21;
        catch java.lang.Throwable from label12 to label13 with label21;
        catch java.lang.Throwable from label16 to label17 with label21;
        catch java.lang.Throwable from label19 to label20 with label21;
    }

    public void notifyServiceStateForPhoneId(int, int, android.telephony.ServiceState)
    {
        com.android.server.TelephonyRegistry r0;
        int i0, i1, $i2;
        java.util.ArrayList r1, $r17, $r22;
        java.util.Iterator r2;
        com.android.server.TelephonyRegistry$Record r3;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        android.util.LocalLog $r10;
        java.lang.String $r15, r25;
        android.telephony.ServiceState[] $r16;
        java.lang.Object $r18;
        java.lang.Throwable $r19;
        android.os.RemoteException $r20;
        android.os.IBinder $r21;
        android.telephony.ServiceState r23, r26;
        java.lang.StringBuilder r24, r29;
        com.android.internal.telephony.IPhoneStateListener $r27;

        r0 := @this: com.android.server.TelephonyRegistry;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r23 := @parameter2: android.telephony.ServiceState;

        $z1 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean checkNotifyPermission(java.lang.String)>("notifyServiceState()");

        if $z1 != 0 goto label01;

        return;

     label01:
        r1 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        entermonitor r1;

     label02:
        r24 = new java.lang.StringBuilder;

        specialinvoke r24.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("notifyServiceStateForSubscriber: subId=");

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" phoneId=");

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" state=");

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r23);

        r25 = virtualinvoke r24.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = r0.<com.android.server.TelephonyRegistry: android.util.LocalLog mLocalLog>;

        virtualinvoke $r10.<android.util.LocalLog: void log(java.lang.String)>(r25);

        $z2 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean validatePhoneId(int)>(i0);

        if $z2 == 0 goto label16;

        $z3 = staticinvoke <android.telephony.SubscriptionManager: boolean isValidSubscriptionId(int)>(i1);

        if $z3 == 0 goto label16;

        $r16 = r0.<com.android.server.TelephonyRegistry: android.telephony.ServiceState[] mServiceState>;

        $r16[i0] = r23;

        $r17 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        r2 = virtualinvoke $r17.<java.util.ArrayList: java.util.Iterator iterator()>();

     label03:
        $z4 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label15;

        $r18 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.server.TelephonyRegistry$Record) $r18;

        $z5 = virtualinvoke r3.<com.android.server.TelephonyRegistry$Record: boolean matchPhoneStateListenerEvent(int)>(1);

        if $z5 == 0 goto label14;

        $i2 = r3.<com.android.server.TelephonyRegistry$Record: int subId>;

        z0 = virtualinvoke r0.<com.android.server.TelephonyRegistry: boolean idMatch(int,int,int)>($i2, i1, i0);

     label04:
        if z0 == 0 goto label14;

     label05:
        $z6 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean checkFineLocationAccess(com.android.server.TelephonyRegistry$Record,int)>(r3, 29);

        if $z6 == 0 goto label07;

        r26 = new android.telephony.ServiceState;

        specialinvoke r26.<android.telephony.ServiceState: void <init>(android.telephony.ServiceState)>(r23);

     label06:
        goto label10;

     label07:
        $z7 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean checkCoarseLocationAccess(com.android.server.TelephonyRegistry$Record,int)>(r3, 29);

        if $z7 == 0 goto label09;

        r26 = virtualinvoke r23.<android.telephony.ServiceState: android.telephony.ServiceState createLocationInfoSanitizedCopy(boolean)>(0);

     label08:
        goto label10;

     label09:
        r26 = virtualinvoke r23.<android.telephony.ServiceState: android.telephony.ServiceState createLocationInfoSanitizedCopy(boolean)>(1);

     label10:
        $r27 = r3.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        interfaceinvoke $r27.<com.android.internal.telephony.IPhoneStateListener: void onServiceStateChanged(android.telephony.ServiceState)>(r26);

     label11:
        goto label14;

     label12:
        $r20 := @caughtexception;

     label13:
        $r22 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRemoveList>;

        $r21 = r3.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        virtualinvoke $r22.<java.util.ArrayList: boolean add(java.lang.Object)>($r21);

     label14:
        goto label03;

     label15:
        goto label17;

     label16:
        r29 = new java.lang.StringBuilder;

        specialinvoke r29.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("notifyServiceStateForSubscriber: INVALID phoneId=");

        virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" or subId=");

        virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r15 = virtualinvoke r29.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.TelephonyRegistry: void log(java.lang.String)>($r15);

     label17:
        specialinvoke r0.<com.android.server.TelephonyRegistry: void handleRemoveListLocked()>();

        exitmonitor r1;

     label18:
        specialinvoke r0.<com.android.server.TelephonyRegistry: void broadcastServiceStateChanged(android.telephony.ServiceState,int,int)>(r23, i0, i1);

        return;

     label19:
        $r19 := @caughtexception;

     label20:
        exitmonitor r1;

     label21:
        throw $r19;

        catch java.lang.Throwable from label02 to label03 with label19;
        catch java.lang.Throwable from label03 to label04 with label19;
        catch android.os.RemoteException from label05 to label06 with label12;
        catch java.lang.Throwable from label05 to label06 with label19;
        catch android.os.RemoteException from label07 to label08 with label12;
        catch java.lang.Throwable from label07 to label08 with label19;
        catch android.os.RemoteException from label09 to label10 with label12;
        catch java.lang.Throwable from label09 to label10 with label19;
        catch android.os.RemoteException from label10 to label11 with label12;
        catch java.lang.Throwable from label10 to label11 with label19;
        catch java.lang.Throwable from label13 to label14 with label19;
        catch java.lang.Throwable from label16 to label17 with label19;
        catch java.lang.Throwable from label17 to label18 with label19;
        catch java.lang.Throwable from label20 to label21 with label19;
    }

    public void notifySignalStrengthForPhoneId(int, int, android.telephony.SignalStrength)
    {
        com.android.server.TelephonyRegistry r0;
        int i0, i1, $i2, $i3, i4;
        java.util.ArrayList r1, $r8, $r13, $r17;
        com.android.server.TelephonyRegistry$Record r2;
        com.android.internal.telephony.IPhoneStateListener r3, $r10;
        boolean $z0, $z1, $z2, $z3, $z4, z7, $z8, z9;
        java.lang.String $r6;
        android.telephony.SignalStrength[] $r7;
        java.lang.Object $r9;
        android.os.RemoteException $r11, $r15;
        android.os.IBinder $r12, $r16;
        java.lang.Throwable $r14;
        android.telephony.SignalStrength r18, r20;
        java.util.Iterator r19;
        java.lang.StringBuilder r23;

        r0 := @this: com.android.server.TelephonyRegistry;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r18 := @parameter2: android.telephony.SignalStrength;

        $z0 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean checkNotifyPermission(java.lang.String)>("notifySignalStrength()");

        if $z0 != 0 goto label01;

        return;

     label01:
        r1 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        entermonitor r1;

     label02:
        $z1 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean validatePhoneId(int)>(i0);

        if $z1 == 0 goto label20;

        $r7 = r0.<com.android.server.TelephonyRegistry: android.telephony.SignalStrength[] mSignalStrength>;

        $r7[i0] = r18;

        $r8 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        r19 = virtualinvoke $r8.<java.util.ArrayList: java.util.Iterator iterator()>();

     label03:
        $z2 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label19;

        $r9 = interfaceinvoke r19.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.android.server.TelephonyRegistry$Record) $r9;

        $z3 = virtualinvoke r2.<com.android.server.TelephonyRegistry$Record: boolean matchPhoneStateListenerEvent(int)>(256);

        if $z3 != 0 goto label04;

        $z4 = virtualinvoke r2.<com.android.server.TelephonyRegistry$Record: boolean matchPhoneStateListenerEvent(int)>(512);

        if $z4 == 0 goto label10;

     label04:
        $i2 = r2.<com.android.server.TelephonyRegistry$Record: int subId>;

        z7 = virtualinvoke r0.<com.android.server.TelephonyRegistry: boolean idMatch(int,int,int)>($i2, i1, i0);

     label05:
        if z7 == 0 goto label10;

     label06:
        r3 = r2.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        r20 = new android.telephony.SignalStrength;

        specialinvoke r20.<android.telephony.SignalStrength: void <init>(android.telephony.SignalStrength)>(r18);

        interfaceinvoke r3.<com.android.internal.telephony.IPhoneStateListener: void onSignalStrengthsChanged(android.telephony.SignalStrength)>(r20);

     label07:
        goto label10;

     label08:
        $r11 := @caughtexception;

     label09:
        $r13 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRemoveList>;

        $r12 = r2.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        virtualinvoke $r13.<java.util.ArrayList: boolean add(java.lang.Object)>($r12);

     label10:
        $z8 = virtualinvoke r2.<com.android.server.TelephonyRegistry$Record: boolean matchPhoneStateListenerEvent(int)>(2);

        if $z8 == 0 goto label18;

        $i3 = r2.<com.android.server.TelephonyRegistry$Record: int subId>;

        z9 = virtualinvoke r0.<com.android.server.TelephonyRegistry: boolean idMatch(int,int,int)>($i3, i1, i0);

     label11:
        if z9 == 0 goto label18;

     label12:
        i4 = virtualinvoke r18.<android.telephony.SignalStrength: int getGsmSignalStrength()>();

     label13:
        if i4 != 99 goto label14;

        i4 = -1;

        goto label14;

     label14:
        $r10 = r2.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        interfaceinvoke $r10.<com.android.internal.telephony.IPhoneStateListener: void onSignalStrengthChanged(int)>(i4);

     label15:
        goto label18;

     label16:
        $r15 := @caughtexception;

     label17:
        $r17 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRemoveList>;

        $r16 = r2.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        virtualinvoke $r17.<java.util.ArrayList: boolean add(java.lang.Object)>($r16);

     label18:
        goto label03;

     label19:
        goto label21;

     label20:
        r23 = new java.lang.StringBuilder;

        specialinvoke r23.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("notifySignalStrengthForPhoneId: invalid phoneId=");

        virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.TelephonyRegistry: void log(java.lang.String)>($r6);

     label21:
        specialinvoke r0.<com.android.server.TelephonyRegistry: void handleRemoveListLocked()>();

        exitmonitor r1;

     label22:
        specialinvoke r0.<com.android.server.TelephonyRegistry: void broadcastSignalStrengthChanged(android.telephony.SignalStrength,int,int)>(r18, i0, i1);

        return;

     label23:
        $r14 := @caughtexception;

     label24:
        exitmonitor r1;

     label25:
        throw $r14;

        catch java.lang.Throwable from label02 to label03 with label23;
        catch java.lang.Throwable from label03 to label04 with label23;
        catch java.lang.Throwable from label04 to label05 with label23;
        catch android.os.RemoteException from label06 to label07 with label08;
        catch java.lang.Throwable from label06 to label07 with label23;
        catch java.lang.Throwable from label09 to label10 with label23;
        catch java.lang.Throwable from label10 to label11 with label23;
        catch android.os.RemoteException from label12 to label13 with label16;
        catch java.lang.Throwable from label12 to label13 with label23;
        catch android.os.RemoteException from label14 to label15 with label16;
        catch java.lang.Throwable from label14 to label15 with label23;
        catch java.lang.Throwable from label17 to label18 with label23;
        catch java.lang.Throwable from label20 to label21 with label23;
        catch java.lang.Throwable from label21 to label22 with label23;
        catch java.lang.Throwable from label24 to label25 with label23;
    }

    public void notifySimActivationStateChangedForPhoneId(int, int, int, int)
    {
        com.android.server.TelephonyRegistry r0;
        int i0, i1, i2, i3, $i4, $i5;
        java.util.ArrayList r1, $r8, $r15;
        java.util.Iterator r2;
        com.android.server.TelephonyRegistry$Record r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z7;
        java.lang.String $r6;
        int[] $r7, $r12;
        java.lang.Object $r9;
        com.android.internal.telephony.IPhoneStateListener $r10, $r11;
        android.os.RemoteException $r13;
        android.os.IBinder $r14;
        java.lang.Throwable $r16;
        java.lang.StringBuilder r18;

        r0 := @this: com.android.server.TelephonyRegistry;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $z0 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean checkNotifyPermission(java.lang.String)>("notifySimActivationState()");

        if $z0 != 0 goto label01;

        return;

     label01:
        r1 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        entermonitor r1;

     label02:
        $z1 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean validatePhoneId(int)>(i0);

        if $z1 == 0 goto label22;

     label03:
        if i2 == 0 goto label08;

        if i2 == 1 goto label06;

     label04:
        exitmonitor r1;

     label05:
        return;

     label06:
        $r12 = r0.<com.android.server.TelephonyRegistry: int[] mDataActivationState>;

        $r12[i0] = i3;

     label07:
        goto label09;

     label08:
        $r7 = r0.<com.android.server.TelephonyRegistry: int[] mVoiceActivationState>;

        $r7[i0] = i3;

     label09:
        $r8 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        r2 = virtualinvoke $r8.<java.util.ArrayList: java.util.Iterator iterator()>();

     label10:
        $z7 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label21;

        $r9 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.server.TelephonyRegistry$Record) $r9;

     label11:
        if i2 != 0 goto label15;

     label12:
        $z4 = virtualinvoke r3.<com.android.server.TelephonyRegistry$Record: boolean matchPhoneStateListenerEvent(int)>(131072);

        if $z4 == 0 goto label15;

        $i5 = r3.<com.android.server.TelephonyRegistry$Record: int subId>;

        $z5 = virtualinvoke r0.<com.android.server.TelephonyRegistry: boolean idMatch(int,int,int)>($i5, i1, i0);

        if $z5 == 0 goto label15;

        $r11 = r3.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        interfaceinvoke $r11.<com.android.internal.telephony.IPhoneStateListener: void onVoiceActivationStateChanged(int)>(i3);

     label13:
        goto label15;

     label14:
        $r13 := @caughtexception;

        goto label18;

     label15:
        if i2 != 1 goto label20;

     label16:
        $z2 = virtualinvoke r3.<com.android.server.TelephonyRegistry$Record: boolean matchPhoneStateListenerEvent(int)>(262144);

        if $z2 == 0 goto label20;

        $i4 = r3.<com.android.server.TelephonyRegistry$Record: int subId>;

        $z3 = virtualinvoke r0.<com.android.server.TelephonyRegistry: boolean idMatch(int,int,int)>($i4, i1, i0);

        if $z3 == 0 goto label20;

        $r10 = r3.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        interfaceinvoke $r10.<com.android.internal.telephony.IPhoneStateListener: void onDataActivationStateChanged(int)>(i3);

     label17:
        goto label20;

     label18:
        $r15 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRemoveList>;

        $r14 = r3.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        virtualinvoke $r15.<java.util.ArrayList: boolean add(java.lang.Object)>($r14);

     label19:
        goto label20;

     label20:
        goto label10;

     label21:
        goto label23;

     label22:
        r18 = new java.lang.StringBuilder;

        specialinvoke r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("notifySimActivationStateForPhoneId: INVALID phoneId=");

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.TelephonyRegistry: void log(java.lang.String)>($r6);

     label23:
        specialinvoke r0.<com.android.server.TelephonyRegistry: void handleRemoveListLocked()>();

        exitmonitor r1;

     label24:
        return;

     label25:
        $r16 := @caughtexception;

     label26:
        exitmonitor r1;

     label27:
        throw $r16;

        catch java.lang.Throwable from label02 to label03 with label25;
        catch java.lang.Throwable from label04 to label05 with label25;
        catch java.lang.Throwable from label06 to label07 with label25;
        catch java.lang.Throwable from label08 to label09 with label25;
        catch java.lang.Throwable from label09 to label10 with label25;
        catch java.lang.Throwable from label10 to label11 with label25;
        catch android.os.RemoteException from label12 to label13 with label14;
        catch java.lang.Throwable from label12 to label13 with label25;
        catch android.os.RemoteException from label16 to label17 with label14;
        catch java.lang.Throwable from label16 to label17 with label25;
        catch java.lang.Throwable from label18 to label19 with label25;
        catch java.lang.Throwable from label22 to label23 with label25;
        catch java.lang.Throwable from label23 to label24 with label25;
        catch java.lang.Throwable from label26 to label27 with label25;
    }

    public void notifySrvccStateChanged(int, int)
    {
        com.android.server.TelephonyRegistry r0;
        int i0, i1, i2, $i3;
        java.util.ArrayList r1, $r5, $r10;
        java.util.Iterator r2;
        boolean z0, $z1, $z2, $z3, $z4;
        int[] $r4;
        java.lang.Object $r6;
        com.android.internal.telephony.IPhoneStateListener $r7;
        android.os.RemoteException $r8;
        android.os.IBinder $r9;
        java.lang.Throwable $r11;
        com.android.server.TelephonyRegistry$Record r12;

        r0 := @this: com.android.server.TelephonyRegistry;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z1 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean checkNotifyPermission(java.lang.String)>("notifySrvccStateChanged()");

        if $z1 != 0 goto label01;

        return;

     label01:
        i2 = specialinvoke r0.<com.android.server.TelephonyRegistry: int getPhoneIdFromSubId(int)>(i0);

        r1 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        entermonitor r1;

     label02:
        $z2 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean validatePhoneId(int)>(i2);

        if $z2 == 0 goto label10;

        $r4 = r0.<com.android.server.TelephonyRegistry: int[] mSrvccState>;

        $r4[i2] = i1;

        $r5 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        r2 = virtualinvoke $r5.<java.util.ArrayList: java.util.Iterator iterator()>();

     label03:
        $z3 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label10;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r12 = (com.android.server.TelephonyRegistry$Record) $r6;

        $z4 = virtualinvoke r12.<com.android.server.TelephonyRegistry$Record: boolean matchPhoneStateListenerEvent(int)>(16384);

        if $z4 == 0 goto label09;

        $i3 = r12.<com.android.server.TelephonyRegistry$Record: int subId>;

        z0 = virtualinvoke r0.<com.android.server.TelephonyRegistry: boolean idMatch(int,int,int)>($i3, i0, i2);

     label04:
        if z0 == 0 goto label09;

     label05:
        $r7 = r12.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        interfaceinvoke $r7.<com.android.internal.telephony.IPhoneStateListener: void onSrvccStateChanged(int)>(i1);

     label06:
        goto label09;

     label07:
        $r8 := @caughtexception;

     label08:
        $r10 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRemoveList>;

        $r9 = r12.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        virtualinvoke $r10.<java.util.ArrayList: boolean add(java.lang.Object)>($r9);

     label09:
        goto label03;

     label10:
        specialinvoke r0.<com.android.server.TelephonyRegistry: void handleRemoveListLocked()>();

        exitmonitor r1;

     label11:
        return;

     label12:
        $r11 := @caughtexception;

     label13:
        exitmonitor r1;

     label14:
        throw $r11;

        catch java.lang.Throwable from label02 to label03 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch android.os.RemoteException from label05 to label06 with label07;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public void notifySubscriptionInfoChanged()
    {
        com.android.server.TelephonyRegistry r0;
        java.util.ArrayList r1, $r4, $r5, $r9, $r14;
        java.util.Iterator r2;
        com.android.server.TelephonyRegistry$Record r3;
        boolean z0, $z1, $z3;
        java.lang.Object $r6;
        com.android.internal.telephony.IOnSubscriptionsChangedListener $r7;
        int $i0;
        java.lang.String $r11;
        android.os.RemoteException $r12;
        android.os.IBinder $r13;
        java.lang.Throwable $r15;
        java.lang.StringBuilder r16;

        r0 := @this: com.android.server.TelephonyRegistry;

        r1 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        entermonitor r1;

     label01:
        $z1 = r0.<com.android.server.TelephonyRegistry: boolean mHasNotifySubscriptionInfoChangedOccurred>;

        if $z1 != 0 goto label02;

        r16 = new java.lang.StringBuilder;

        specialinvoke r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("notifySubscriptionInfoChanged: first invocation mRecords.size=");

        $r9 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        $i0 = virtualinvoke $r9.<java.util.ArrayList: int size()>();

        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r11 = virtualinvoke r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.TelephonyRegistry: void log(java.lang.String)>($r11);

     label02:
        r0.<com.android.server.TelephonyRegistry: boolean mHasNotifySubscriptionInfoChangedOccurred> = 1;

        $r4 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRemoveList>;

        virtualinvoke $r4.<java.util.ArrayList: void clear()>();

        $r5 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        r2 = virtualinvoke $r5.<java.util.ArrayList: java.util.Iterator iterator()>();

     label03:
        $z3 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label10;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.server.TelephonyRegistry$Record) $r6;

        z0 = virtualinvoke r3.<com.android.server.TelephonyRegistry$Record: boolean matchOnSubscriptionsChangedListener()>();

     label04:
        if z0 == 0 goto label09;

     label05:
        $r7 = r3.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IOnSubscriptionsChangedListener onSubscriptionsChangedListenerCallback>;

        interfaceinvoke $r7.<com.android.internal.telephony.IOnSubscriptionsChangedListener: void onSubscriptionsChanged()>();

     label06:
        goto label09;

     label07:
        $r12 := @caughtexception;

     label08:
        $r14 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRemoveList>;

        $r13 = r3.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        virtualinvoke $r14.<java.util.ArrayList: boolean add(java.lang.Object)>($r13);

     label09:
        goto label03;

     label10:
        specialinvoke r0.<com.android.server.TelephonyRegistry: void handleRemoveListLocked()>();

        exitmonitor r1;

     label11:
        return;

     label12:
        $r15 := @caughtexception;

     label13:
        exitmonitor r1;

     label14:
        throw $r15;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label02 to label03 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch android.os.RemoteException from label05 to label06 with label07;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public void notifyUserMobileDataStateChangedForPhoneId(int, int, boolean)
    {
        com.android.server.TelephonyRegistry r0;
        int i0, i1, $i2;
        boolean z0, z1, $z2, $z3, $z4, $z5;
        java.util.ArrayList r1, $r5, $r11;
        java.util.Iterator r2;
        boolean[] $r4;
        java.lang.Object $r6;
        com.android.internal.telephony.IPhoneStateListener $r7;
        java.lang.Throwable $r8;
        android.os.RemoteException $r9;
        android.os.IBinder $r10;
        com.android.server.TelephonyRegistry$Record r12;

        r0 := @this: com.android.server.TelephonyRegistry;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        $z2 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean checkNotifyPermission(java.lang.String)>("notifyUserMobileDataStateChanged()");

        if $z2 != 0 goto label01;

        return;

     label01:
        r1 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        entermonitor r1;

     label02:
        $z3 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean validatePhoneId(int)>(i0);

        if $z3 == 0 goto label10;

        $r4 = r0.<com.android.server.TelephonyRegistry: boolean[] mUserMobileDataState>;

        $r4[i0] = z0;

        $r5 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        r2 = virtualinvoke $r5.<java.util.ArrayList: java.util.Iterator iterator()>();

     label03:
        $z4 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label10;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r12 = (com.android.server.TelephonyRegistry$Record) $r6;

        $z5 = virtualinvoke r12.<com.android.server.TelephonyRegistry$Record: boolean matchPhoneStateListenerEvent(int)>(524288);

        if $z5 == 0 goto label09;

        $i2 = r12.<com.android.server.TelephonyRegistry$Record: int subId>;

        z1 = virtualinvoke r0.<com.android.server.TelephonyRegistry: boolean idMatch(int,int,int)>($i2, i1, i0);

     label04:
        if z1 == 0 goto label09;

     label05:
        $r7 = r12.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        interfaceinvoke $r7.<com.android.internal.telephony.IPhoneStateListener: void onUserMobileDataStateChanged(boolean)>(z0);

     label06:
        goto label09;

     label07:
        $r9 := @caughtexception;

     label08:
        $r11 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRemoveList>;

        $r10 = r12.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        virtualinvoke $r11.<java.util.ArrayList: boolean add(java.lang.Object)>($r10);

     label09:
        goto label03;

     label10:
        specialinvoke r0.<com.android.server.TelephonyRegistry: void handleRemoveListLocked()>();

        exitmonitor r1;

     label11:
        return;

     label12:
        $r8 := @caughtexception;

     label13:
        exitmonitor r1;

     label14:
        throw $r8;

        catch java.lang.Throwable from label02 to label03 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch android.os.RemoteException from label05 to label06 with label07;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public void removeOnSubscriptionsChangedListener(java.lang.String, com.android.internal.telephony.IOnSubscriptionsChangedListener)
    {
        com.android.server.TelephonyRegistry r0;
        java.lang.String r1;
        com.android.internal.telephony.IOnSubscriptionsChangedListener r2;
        android.os.IBinder $r3;

        r0 := @this: com.android.server.TelephonyRegistry;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.android.internal.telephony.IOnSubscriptionsChangedListener;

        $r3 = interfaceinvoke r2.<com.android.internal.telephony.IOnSubscriptionsChangedListener: android.os.IBinder asBinder()>();

        specialinvoke r0.<com.android.server.TelephonyRegistry: void remove(android.os.IBinder)>($r3);

        return;
    }

    public void systemRunning()
    {
        com.android.server.TelephonyRegistry r0;
        android.content.IntentFilter $r2;
        android.content.BroadcastReceiver $r3;
        android.content.Context $r4;

        r0 := @this: com.android.server.TelephonyRegistry;

        $r2 = new android.content.IntentFilter;

        specialinvoke $r2.<android.content.IntentFilter: void <init>()>();

        virtualinvoke $r2.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.USER_SWITCHED");

        virtualinvoke $r2.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.USER_REMOVED");

        virtualinvoke $r2.<android.content.IntentFilter: void addAction(java.lang.String)>("android.telephony.action.DEFAULT_SUBSCRIPTION_CHANGED");

        virtualinvoke $r2.<android.content.IntentFilter: void addAction(java.lang.String)>("android.telephony.action.MULTI_SIM_CONFIG_CHANGED");

        staticinvoke <com.android.server.TelephonyRegistry: void log(java.lang.String)>("systemRunning register for intents");

        $r4 = r0.<com.android.server.TelephonyRegistry: android.content.Context mContext>;

        $r3 = r0.<com.android.server.TelephonyRegistry: android.content.BroadcastReceiver mBroadcastReceiver>;

        virtualinvoke $r4.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r3, $r2);

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.TelephonyRegistry: boolean VDBG> = 0;

        <com.android.server.TelephonyRegistry: java.lang.String TAG> = "TelephonyRegistry";

        <com.android.server.TelephonyRegistry: int READ_PRIVILEGED_PHONE_STATE_PERMISSION_MASK> = 8568832;

        <com.android.server.TelephonyRegistry: int READ_ACTIVE_EMERGENCY_SESSION_PERMISSION_MASK> = 805306368;

        <com.android.server.TelephonyRegistry: java.lang.String PHONE_CONSTANTS_SUBSCRIPTION_KEY> = "subscription";

        <com.android.server.TelephonyRegistry: java.lang.String PHONE_CONSTANTS_STATE_KEY> = "state";

        <com.android.server.TelephonyRegistry: java.lang.String PHONE_CONSTANTS_SLOT_KEY> = "slot";

        <com.android.server.TelephonyRegistry: java.lang.String PHONE_CONSTANTS_DATA_APN_TYPE_KEY> = "apnType";

        <com.android.server.TelephonyRegistry: java.lang.String PHONE_CONSTANTS_DATA_APN_KEY> = "apn";

        <com.android.server.TelephonyRegistry: int MSG_USER_SWITCHED> = 1;

        <com.android.server.TelephonyRegistry: int MSG_UPDATE_DEFAULT_SUB> = 2;

        <com.android.server.TelephonyRegistry: int ENFORCE_PRECISE_PHONE_STATE_PERMISSION_MASK> = -838854656;

        <com.android.server.TelephonyRegistry: int ENFORCE_PHONE_STATE_PERMISSION_MASK> = 17825804;

        <com.android.server.TelephonyRegistry: int ENFORCE_FINE_LOCATION_PERMISSION_MASK> = -1073740784;

        <com.android.server.TelephonyRegistry: int ENFORCE_COARSE_LOCATION_PERMISSION_MASK> = -1073741824;

        <com.android.server.TelephonyRegistry: boolean DBG_LOC> = 0;

        <com.android.server.TelephonyRegistry: boolean DBG> = 0;

        <com.android.server.TelephonyRegistry: java.lang.String ACTION_SUBSCRIPTION_PHONE_STATE_CHANGED> = "android.intent.action.SUBSCRIPTION_PHONE_STATE";

        <com.android.server.TelephonyRegistry: java.lang.String ACTION_SIGNAL_STRENGTH_CHANGED> = "android.intent.action.SIG_STR";

        <com.android.server.TelephonyRegistry: java.lang.String ACTION_ANY_DATA_CONNECTION_STATE_CHANGED> = "android.intent.action.ANY_DATA_STATE";

        return;
    }
}
