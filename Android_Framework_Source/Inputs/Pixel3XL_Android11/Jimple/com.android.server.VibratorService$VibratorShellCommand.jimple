final class com.android.server.VibratorService$VibratorShellCommand extends android.os.ShellCommand
{
    private final android.os.IBinder mToken;
    final com.android.server.VibratorService this$0;

    private void <init>(com.android.server.VibratorService, android.os.IBinder)
    {
        com.android.server.VibratorService$VibratorShellCommand r0;
        com.android.server.VibratorService r1;
        android.os.IBinder r2;

        r0 := @this: com.android.server.VibratorService$VibratorShellCommand;

        r1 := @parameter0: com.android.server.VibratorService;

        r2 := @parameter1: android.os.IBinder;

        r0.<com.android.server.VibratorService$VibratorShellCommand: com.android.server.VibratorService this$0> = r1;

        specialinvoke r0.<android.os.ShellCommand: void <init>()>();

        r0.<com.android.server.VibratorService$VibratorShellCommand: android.os.IBinder mToken> = r2;

        return;
    }

    void <init>(com.android.server.VibratorService, android.os.IBinder, com.android.server.VibratorService$1)
    {
        com.android.server.VibratorService$VibratorShellCommand r0;
        com.android.server.VibratorService r1;
        android.os.IBinder r2;
        com.android.server.VibratorService$1 r3;

        r0 := @this: com.android.server.VibratorService$VibratorShellCommand;

        r1 := @parameter0: com.android.server.VibratorService;

        r2 := @parameter1: android.os.IBinder;

        r3 := @parameter2: com.android.server.VibratorService$1;

        specialinvoke r0.<com.android.server.VibratorService$VibratorShellCommand: void <init>(com.android.server.VibratorService,android.os.IBinder)>(r1, r2);

        return;
    }

    private boolean checkDoNotDisturb(com.android.server.VibratorService$VibratorShellCommand$CommonOptions)
    {
        com.android.server.VibratorService$VibratorShellCommand r0;
        int i0;
        com.android.server.VibratorService $r1;
        android.content.Context $r2;
        android.content.ContentResolver $r3;
        boolean $z0;
        java.lang.String $r4;
        java.lang.Throwable $r5, $r6;
        android.provider.Settings$SettingNotFoundException $r7;
        com.android.server.VibratorService$VibratorShellCommand$CommonOptions r8;
        java.io.PrintWriter r9;

        r0 := @this: com.android.server.VibratorService$VibratorShellCommand;

        r8 := @parameter0: com.android.server.VibratorService$VibratorShellCommand$CommonOptions;

     label01:
        $r1 = r0.<com.android.server.VibratorService$VibratorShellCommand: com.android.server.VibratorService this$0>;

        $r2 = staticinvoke <com.android.server.VibratorService: android.content.Context access$2700(com.android.server.VibratorService)>($r1);

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        i0 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String)>($r3, "zen_mode");

     label02:
        if i0 == 0 goto label14;

     label03:
        $z0 = r8.<com.android.server.VibratorService$VibratorShellCommand$CommonOptions: boolean force>;

        if $z0 != 0 goto label14;

        r9 = virtualinvoke r0.<com.android.server.VibratorService$VibratorShellCommand: java.io.PrintWriter getOutPrintWriter()>();

     label04:
        virtualinvoke r9.<java.io.PrintWriter: void print(java.lang.String)>("Ignoring because device is on DND mode ");

        $r4 = staticinvoke <android.util.DebugUtils: java.lang.String flagsToString(java.lang.Class,java.lang.String,int)>(class "Landroid/provider/Settings$Global;", "ZEN_MODE_", i0);

        virtualinvoke r9.<java.io.PrintWriter: void println(java.lang.String)>($r4);

     label05:
        if r9 == null goto label07;

     label06:
        virtualinvoke r9.<java.io.PrintWriter: void close()>();

     label07:
        return 1;

     label08:
        $r5 := @caughtexception;

        if r9 == null goto label13;

     label09:
        virtualinvoke r9.<java.io.PrintWriter: void close()>();

     label10:
        goto label13;

     label11:
        $r6 := @caughtexception;

     label12:
        virtualinvoke $r5.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r6);

     label13:
        throw $r5;

     label14:
        goto label16;

     label15:
        $r7 := @caughtexception;

     label16:
        return 0;

        catch android.provider.Settings$SettingNotFoundException from label01 to label02 with label15;
        catch android.provider.Settings$SettingNotFoundException from label03 to label04 with label15;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch android.provider.Settings$SettingNotFoundException from label06 to label07 with label15;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch android.provider.Settings$SettingNotFoundException from label12 to label13 with label15;
        catch android.provider.Settings$SettingNotFoundException from label13 to label14 with label15;
    }

    private android.os.VibrationAttributes createVibrationAttributes(com.android.server.VibratorService$VibratorShellCommand$CommonOptions)
    {
        com.android.server.VibratorService$VibratorShellCommand r0;
        com.android.server.VibratorService$VibratorShellCommand$CommonOptions r1;
        boolean $z0;
        android.os.VibrationAttributes$Builder $r2, $r3, $r4;
        android.os.VibrationAttributes $r5;
        byte b0;

        r0 := @this: com.android.server.VibratorService$VibratorShellCommand;

        r1 := @parameter0: com.android.server.VibratorService$VibratorShellCommand$CommonOptions;

        $z0 = r1.<com.android.server.VibratorService$VibratorShellCommand$CommonOptions: boolean force>;

        if $z0 == 0 goto label1;

        b0 = 1;

        goto label2;

     label1:
        b0 = 0;

     label2:
        $r2 = new android.os.VibrationAttributes$Builder;

        specialinvoke $r2.<android.os.VibrationAttributes$Builder: void <init>()>();

        $r3 = virtualinvoke $r2.<android.os.VibrationAttributes$Builder: android.os.VibrationAttributes$Builder setUsage(int)>(18);

        $r4 = virtualinvoke $r3.<android.os.VibrationAttributes$Builder: android.os.VibrationAttributes$Builder replaceFlags(int)>(b0);

        $r5 = virtualinvoke $r4.<android.os.VibrationAttributes$Builder: android.os.VibrationAttributes build()>();

        return $r5;
    }

    private int runCapabilities()
    {
        com.android.server.VibratorService$VibratorShellCommand r0;
        com.android.server.VibratorService $r1, $r2, $r3, $r4, $r5, $r10, $r11;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.Throwable $r6, $r7, $r8;
        java.io.PrintWriter r9;

        r0 := @this: com.android.server.VibratorService$VibratorShellCommand;

        staticinvoke <android.os.Trace: void traceBegin(long,java.lang.String)>(8388608L, "runCapabilities");

     label01:
        r9 = virtualinvoke r0.<com.android.server.VibratorService$VibratorShellCommand: java.io.PrintWriter getOutPrintWriter()>();

     label02:
        virtualinvoke r9.<java.io.PrintWriter: void println(java.lang.String)>("Vibrator capabilities:");

        $r1 = r0.<com.android.server.VibratorService$VibratorShellCommand: com.android.server.VibratorService this$0>;

        $z0 = staticinvoke <com.android.server.VibratorService: boolean access$2900(com.android.server.VibratorService,long)>($r1, 64L);

        if $z0 == 0 goto label03;

        virtualinvoke r9.<java.io.PrintWriter: void println(java.lang.String)>("  Always on effects");

     label03:
        $r2 = r0.<com.android.server.VibratorService$VibratorShellCommand: com.android.server.VibratorService this$0>;

        $z1 = staticinvoke <com.android.server.VibratorService: boolean access$2900(com.android.server.VibratorService,long)>($r2, 32L);

        if $z1 == 0 goto label04;

        virtualinvoke r9.<java.io.PrintWriter: void println(java.lang.String)>("  Compose effects");

     label04:
        $r3 = r0.<com.android.server.VibratorService$VibratorShellCommand: com.android.server.VibratorService this$0>;

        $z2 = staticinvoke <com.android.server.VibratorService: boolean access$3000(com.android.server.VibratorService)>($r3);

        if $z2 != 0 goto label05;

        $r5 = r0.<com.android.server.VibratorService$VibratorShellCommand: com.android.server.VibratorService this$0>;

        $z4 = staticinvoke <com.android.server.VibratorService: boolean access$2900(com.android.server.VibratorService,long)>($r5, 4L);

        if $z4 == 0 goto label06;

     label05:
        virtualinvoke r9.<java.io.PrintWriter: void println(java.lang.String)>("  Amplitude control");

     label06:
        $r10 = r0.<com.android.server.VibratorService$VibratorShellCommand: com.android.server.VibratorService this$0>;

        $z5 = staticinvoke <com.android.server.VibratorService: boolean access$1700(com.android.server.VibratorService)>($r10);

        if $z5 != 0 goto label07;

        $r4 = r0.<com.android.server.VibratorService$VibratorShellCommand: com.android.server.VibratorService this$0>;

        $z3 = staticinvoke <com.android.server.VibratorService: boolean access$2900(com.android.server.VibratorService,long)>($r4, 8L);

        if $z3 == 0 goto label08;

     label07:
        virtualinvoke r9.<java.io.PrintWriter: void println(java.lang.String)>("  External control");

     label08:
        $r11 = r0.<com.android.server.VibratorService$VibratorShellCommand: com.android.server.VibratorService this$0>;

        $z6 = staticinvoke <com.android.server.VibratorService: boolean access$2900(com.android.server.VibratorService,long)>($r11, 16L);

        if $z6 == 0 goto label09;

        virtualinvoke r9.<java.io.PrintWriter: void println(java.lang.String)>("  External amplitude control");

     label09:
        virtualinvoke r9.<java.io.PrintWriter: void println(java.lang.String)>("");

     label10:
        if r9 == null goto label12;

     label11:
        virtualinvoke r9.<java.io.PrintWriter: void close()>();

     label12:
        staticinvoke <android.os.Trace: void traceEnd(long)>(8388608L);

        return 0;

     label13:
        $r7 := @caughtexception;

        if r9 == null goto label18;

     label14:
        virtualinvoke r9.<java.io.PrintWriter: void close()>();

     label15:
        goto label18;

     label16:
        $r6 := @caughtexception;

     label17:
        virtualinvoke $r7.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r6);

     label18:
        throw $r7;

     label19:
        $r8 := @caughtexception;

        staticinvoke <android.os.Trace: void traceEnd(long)>(8388608L);

        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label19;
        catch java.lang.Throwable from label02 to label03 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label04 to label05 with label13;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label11 to label12 with label19;
        catch java.lang.Throwable from label14 to label15 with label16;
        catch java.lang.Throwable from label17 to label18 with label19;
        catch java.lang.Throwable from label18 to label19 with label19;
    }

    private int runPrebaked()
    {
        com.android.server.VibratorService$VibratorShellCommand r0;
        boolean z0, $z1, z2;
        int i0, $i1;
        android.os.VibrationEffect r1;
        java.lang.String $r2, $r5, r8, r9;
        com.android.server.VibratorService $r3;
        android.os.IBinder $r4;
        java.lang.Throwable $r6;
        com.android.server.VibratorService$VibratorShellCommand$CommonOptions r7;
        android.os.VibrationAttributes r10;

        r0 := @this: com.android.server.VibratorService$VibratorShellCommand;

        staticinvoke <android.os.Trace: void traceBegin(long,java.lang.String)>(8388608L, "runPrebaked");

     label01:
        r7 = new com.android.server.VibratorService$VibratorShellCommand$CommonOptions;

        specialinvoke r7.<com.android.server.VibratorService$VibratorShellCommand$CommonOptions: void <init>(com.android.server.VibratorService$VibratorShellCommand,com.android.server.VibratorService$1)>(r0, null);

     label02:
        z2 = 0;

     label03:
        r8 = virtualinvoke r0.<com.android.server.VibratorService$VibratorShellCommand: java.lang.String getNextOption()>();

     label04:
        if r8 == null goto label09;

     label05:
        $r5 = "-b";

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r8);

        if $z1 == 0 goto label07;

     label06:
        z2 = 1;

        goto label03;

     label07:
        virtualinvoke r7.<com.android.server.VibratorService$VibratorShellCommand$CommonOptions: void check(java.lang.String)>(r8);

     label08:
        goto label03;

     label09:
        z0 = specialinvoke r0.<com.android.server.VibratorService$VibratorShellCommand: boolean checkDoNotDisturb(com.android.server.VibratorService$VibratorShellCommand$CommonOptions)>(r7);

     label10:
        if z0 == 0 goto label11;

        staticinvoke <android.os.Trace: void traceEnd(long)>(8388608L);

        return 0;

     label11:
        $r2 = virtualinvoke r0.<com.android.server.VibratorService$VibratorShellCommand: java.lang.String getNextArgRequired()>();

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);

        r9 = virtualinvoke r0.<com.android.server.VibratorService$VibratorShellCommand: java.lang.String getNextArg()>();

     label12:
        if r9 != null goto label13;

        r9 = "Shell command";

        goto label13;

     label13:
        r1 = staticinvoke <android.os.VibrationEffect: android.os.VibrationEffect get(int,boolean)>(i0, z2);

        r10 = specialinvoke r0.<com.android.server.VibratorService$VibratorShellCommand: android.os.VibrationAttributes createVibrationAttributes(com.android.server.VibratorService$VibratorShellCommand$CommonOptions)>(r7);

        $r3 = r0.<com.android.server.VibratorService$VibratorShellCommand: com.android.server.VibratorService this$0>;

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r4 = r0.<com.android.server.VibratorService$VibratorShellCommand: android.os.IBinder mToken>;

        virtualinvoke $r3.<com.android.server.VibratorService: void vibrate(int,java.lang.String,android.os.VibrationEffect,android.os.VibrationAttributes,java.lang.String,android.os.IBinder)>($i1, r9, r1, r10, "Shell Command", $r4);

     label14:
        staticinvoke <android.os.Trace: void traceEnd(long)>(8388608L);

        return 0;

     label15:
        $r6 := @caughtexception;

        staticinvoke <android.os.Trace: void traceEnd(long)>(8388608L);

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Throwable from label05 to label06 with label15;
        catch java.lang.Throwable from label07 to label08 with label15;
        catch java.lang.Throwable from label09 to label10 with label15;
        catch java.lang.Throwable from label11 to label12 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
    }

    private int runVibrate()
    {
        com.android.server.VibratorService$VibratorShellCommand r0;
        boolean z0;
        long l0;
        java.lang.String $r1, r6, r7, r8;
        com.android.server.VibratorService $r2;
        int $i1;
        android.os.IBinder $r3;
        java.lang.Throwable $r4;
        com.android.server.VibratorService$VibratorShellCommand$CommonOptions r5;
        android.os.VibrationEffect r9;
        android.os.VibrationAttributes r10;

        r0 := @this: com.android.server.VibratorService$VibratorShellCommand;

        staticinvoke <android.os.Trace: void traceBegin(long,java.lang.String)>(8388608L, "runVibrate");

     label01:
        r5 = new com.android.server.VibratorService$VibratorShellCommand$CommonOptions;

        specialinvoke r5.<com.android.server.VibratorService$VibratorShellCommand$CommonOptions: void <init>(com.android.server.VibratorService$VibratorShellCommand,com.android.server.VibratorService$1)>(r0, null);

     label02:
        r6 = virtualinvoke r0.<com.android.server.VibratorService$VibratorShellCommand: java.lang.String getNextOption()>();

     label03:
        if r6 == null goto label06;

     label04:
        virtualinvoke r5.<com.android.server.VibratorService$VibratorShellCommand$CommonOptions: void check(java.lang.String)>(r6);

     label05:
        goto label02;

     label06:
        z0 = specialinvoke r0.<com.android.server.VibratorService$VibratorShellCommand: boolean checkDoNotDisturb(com.android.server.VibratorService$VibratorShellCommand$CommonOptions)>(r5);

     label07:
        if z0 == 0 goto label08;

        staticinvoke <android.os.Trace: void traceEnd(long)>(8388608L);

        return 0;

     label08:
        $r1 = virtualinvoke r0.<com.android.server.VibratorService$VibratorShellCommand: java.lang.String getNextArgRequired()>();

        l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r1);

        r7 = virtualinvoke r0.<com.android.server.VibratorService$VibratorShellCommand: java.lang.String getNextArg()>();

     label09:
        r8 = r7;

        if r7 != null goto label10;

        r8 = "Shell command";

     label10:
        r9 = staticinvoke <android.os.VibrationEffect: android.os.VibrationEffect createOneShot(long,int)>(l0, -1);

        r10 = specialinvoke r0.<com.android.server.VibratorService$VibratorShellCommand: android.os.VibrationAttributes createVibrationAttributes(com.android.server.VibratorService$VibratorShellCommand$CommonOptions)>(r5);

        $r2 = r0.<com.android.server.VibratorService$VibratorShellCommand: com.android.server.VibratorService this$0>;

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r3 = r0.<com.android.server.VibratorService$VibratorShellCommand: android.os.IBinder mToken>;

        virtualinvoke $r2.<com.android.server.VibratorService: void vibrate(int,java.lang.String,android.os.VibrationEffect,android.os.VibrationAttributes,java.lang.String,android.os.IBinder)>($i1, r8, r9, r10, "Shell Command", $r3);

     label11:
        staticinvoke <android.os.Trace: void traceEnd(long)>(8388608L);

        return 0;

     label12:
        $r4 := @caughtexception;

        staticinvoke <android.os.Trace: void traceEnd(long)>(8388608L);

        throw $r4;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label02 to label03 with label12;
        catch java.lang.Throwable from label04 to label05 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
    }

    private int runWaveform()
    {
        com.android.server.VibratorService$VibratorShellCommand r0;
        int i0, $i1, $i3, $i4, $i5, i6, i8;
        boolean z0, $z3, $z4, $z5;
        java.util.stream.Stream $r2, $r5;
        com.android.server.'-$$Lambda$ELHKvd8JMVRD8rbALqYPKbDX2mM' $r3;
        java.util.stream.LongStream $r4;
        com.android.server.'-$$Lambda$UV1wDVoVlbcxpr8zevj_aMFtUGw' $r6;
        java.util.stream.IntStream $r7;
        int[] $r8;
        com.android.server.VibratorService $r9;
        android.os.IBinder $r10;
        long $l2;
        java.lang.Long $r11;
        java.lang.Integer $r12;
        java.lang.String $r13, r16, r18, r19, r22;
        java.lang.Throwable $r15;
        java.util.ArrayList r17, r20, r28, r29;
        byte b7;
        long[] r23;
        android.os.VibrationEffect r24;
        android.os.VibrationAttributes r25;
        com.android.server.VibratorService$VibratorShellCommand$CommonOptions r27;
        java.util.function.ToLongFunction r30;
        java.util.function.ToIntFunction r31;

        r0 := @this: com.android.server.VibratorService$VibratorShellCommand;

        staticinvoke <android.os.Trace: void traceBegin(long,java.lang.String)>(8388608L, "runWaveform");

        r16 = "Shell command";

        i6 = -1;

        r17 = null;

     label01:
        r27 = new com.android.server.VibratorService$VibratorShellCommand$CommonOptions;

        specialinvoke r27.<com.android.server.VibratorService$VibratorShellCommand$CommonOptions: void <init>(com.android.server.VibratorService$VibratorShellCommand,com.android.server.VibratorService$1)>(r0, null);

     label02:
        r18 = virtualinvoke r0.<com.android.server.VibratorService$VibratorShellCommand: java.lang.String getNextOption()>();

     label03:
        b7 = 0;

        if r18 == null goto label25;

     label04:
        i0 = virtualinvoke r18.<java.lang.String: int hashCode()>();

     label05:
        if i0 == 1492 goto label11;

        if i0 == 1495 goto label09;

        if i0 == 1509 goto label07;

     label06:
        goto label13;

     label07:
        $z5 = virtualinvoke r18.<java.lang.String: boolean equals(java.lang.Object)>("-r");

        if $z5 == 0 goto label06;

     label08:
        b7 = 1;

        goto label14;

     label09:
        $z4 = virtualinvoke r18.<java.lang.String: boolean equals(java.lang.Object)>("-d");

        if $z4 == 0 goto label06;

     label10:
        goto label14;

     label11:
        $z3 = virtualinvoke r18.<java.lang.String: boolean equals(java.lang.Object)>("-a");

        if $z3 == 0 goto label06;

     label12:
        b7 = 2;

        goto label14;

     label13:
        b7 = -1;

     label14:
        if b7 == 0 goto label22;

        if b7 == 1 goto label20;

        if b7 == 2 goto label17;

     label15:
        virtualinvoke r27.<com.android.server.VibratorService$VibratorShellCommand$CommonOptions: void check(java.lang.String)>(r18);

     label16:
        r19 = r16;

        i8 = i6;

        r20 = r17;

        goto label24;

     label17:
        r19 = r16;

        i8 = i6;

        r20 = r17;

        if r17 != null goto label24;

     label18:
        r28 = new java.util.ArrayList;

        specialinvoke r28.<java.util.ArrayList: void <init>()>();

        r20 = r28;

     label19:
        r19 = r16;

        i8 = i6;

        goto label24;

     label20:
        $r13 = virtualinvoke r0.<com.android.server.VibratorService$VibratorShellCommand: java.lang.String getNextArgRequired()>();

        i8 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r13);

     label21:
        r19 = r16;

        r20 = r17;

        goto label24;

     label22:
        r19 = virtualinvoke r0.<com.android.server.VibratorService$VibratorShellCommand: java.lang.String getNextArgRequired()>();

     label23:
        r20 = r17;

        i8 = i6;

     label24:
        r16 = r19;

        i6 = i8;

        r17 = r20;

        goto label02;

     label25:
        z0 = specialinvoke r0.<com.android.server.VibratorService$VibratorShellCommand: boolean checkDoNotDisturb(com.android.server.VibratorService$VibratorShellCommand$CommonOptions)>(r27);

     label26:
        if z0 == 0 goto label27;

        staticinvoke <android.os.Trace: void traceEnd(long)>(8388608L);

        return 0;

     label27:
        r29 = new java.util.ArrayList;

        specialinvoke r29.<java.util.ArrayList: void <init>()>();

     label28:
        r22 = virtualinvoke r0.<com.android.server.VibratorService$VibratorShellCommand: java.lang.String getNextArg()>();

     label29:
        if r22 == null goto label34;

        if r17 == null goto label32;

     label30:
        $i3 = virtualinvoke r17.<java.util.ArrayList: int size()>();

        $i4 = virtualinvoke r29.<java.util.ArrayList: int size()>();

        if $i3 >= $i4 goto label32;

        $i5 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r22);

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        virtualinvoke r17.<java.util.ArrayList: boolean add(java.lang.Object)>($r12);

     label31:
        goto label28;

     label32:
        $l2 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r22);

        $r11 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        virtualinvoke r29.<java.util.ArrayList: boolean add(java.lang.Object)>($r11);

     label33:
        goto label28;

     label34:
        $r2 = virtualinvoke r29.<java.util.ArrayList: java.util.stream.Stream stream()>();

        $r3 = <com.android.server._$$Lambda$ELHKvd8JMVRD8rbALqYPKbDX2mM: com.android.server.'-$$Lambda$ELHKvd8JMVRD8rbALqYPKbDX2mM' INSTANCE>;

        r30 = (java.util.function.ToLongFunction) $r3;

        $r4 = interfaceinvoke $r2.<java.util.stream.Stream: java.util.stream.LongStream mapToLong(java.util.function.ToLongFunction)>(r30);

        r23 = interfaceinvoke $r4.<java.util.stream.LongStream: long[] toArray()>();

     label35:
        if r17 != null goto label38;

     label36:
        r24 = staticinvoke <android.os.VibrationEffect: android.os.VibrationEffect createWaveform(long[],int)>(r23, i6);

     label37:
        goto label39;

     label38:
        $r5 = virtualinvoke r17.<java.util.ArrayList: java.util.stream.Stream stream()>();

        $r6 = <com.android.server._$$Lambda$UV1wDVoVlbcxpr8zevj_aMFtUGw: com.android.server.'-$$Lambda$UV1wDVoVlbcxpr8zevj_aMFtUGw' INSTANCE>;

        r31 = (java.util.function.ToIntFunction) $r6;

        $r7 = interfaceinvoke $r5.<java.util.stream.Stream: java.util.stream.IntStream mapToInt(java.util.function.ToIntFunction)>(r31);

        $r8 = interfaceinvoke $r7.<java.util.stream.IntStream: int[] toArray()>();

        r24 = staticinvoke <android.os.VibrationEffect: android.os.VibrationEffect createWaveform(long[],int[],int)>(r23, $r8, i6);

     label39:
        r25 = specialinvoke r0.<com.android.server.VibratorService$VibratorShellCommand: android.os.VibrationAttributes createVibrationAttributes(com.android.server.VibratorService$VibratorShellCommand$CommonOptions)>(r27);

        $r9 = r0.<com.android.server.VibratorService$VibratorShellCommand: com.android.server.VibratorService this$0>;

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r10 = r0.<com.android.server.VibratorService$VibratorShellCommand: android.os.IBinder mToken>;

        virtualinvoke $r9.<com.android.server.VibratorService: void vibrate(int,java.lang.String,android.os.VibrationEffect,android.os.VibrationAttributes,java.lang.String,android.os.IBinder)>($i1, r16, r24, r25, "Shell Command", $r10);

     label40:
        staticinvoke <android.os.Trace: void traceEnd(long)>(8388608L);

        return 0;

     label41:
        $r15 := @caughtexception;

        staticinvoke <android.os.Trace: void traceEnd(long)>(8388608L);

        throw $r15;

        catch java.lang.Throwable from label01 to label02 with label41;
        catch java.lang.Throwable from label02 to label03 with label41;
        catch java.lang.Throwable from label04 to label05 with label41;
        catch java.lang.Throwable from label07 to label08 with label41;
        catch java.lang.Throwable from label09 to label10 with label41;
        catch java.lang.Throwable from label11 to label12 with label41;
        catch java.lang.Throwable from label15 to label16 with label41;
        catch java.lang.Throwable from label18 to label19 with label41;
        catch java.lang.Throwable from label20 to label21 with label41;
        catch java.lang.Throwable from label22 to label23 with label41;
        catch java.lang.Throwable from label25 to label26 with label41;
        catch java.lang.Throwable from label27 to label28 with label41;
        catch java.lang.Throwable from label28 to label29 with label41;
        catch java.lang.Throwable from label30 to label31 with label41;
        catch java.lang.Throwable from label32 to label33 with label41;
        catch java.lang.Throwable from label34 to label35 with label41;
        catch java.lang.Throwable from label36 to label37 with label41;
        catch java.lang.Throwable from label38 to label39 with label41;
        catch java.lang.Throwable from label39 to label40 with label41;
    }

    public int onCommand(java.lang.String)
    {
        com.android.server.VibratorService$VibratorShellCommand r0;
        java.lang.String r1, $r2, $r3, $r4, $r5, $r6;
        boolean $z0, $z1, $z2, $z3, $z4;
        int $i0, $i1, $i2, $i3, $i4;
        android.os.IBinder $r7;
        com.android.server.VibratorService $r8;

        r0 := @this: com.android.server.VibratorService$VibratorShellCommand;

        r1 := @parameter0: java.lang.String;

        $r2 = "vibrate";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $i4 = specialinvoke r0.<com.android.server.VibratorService$VibratorShellCommand: int runVibrate()>();

        return $i4;

     label1:
        $r3 = "waveform";

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label2;

        $i3 = specialinvoke r0.<com.android.server.VibratorService$VibratorShellCommand: int runWaveform()>();

        return $i3;

     label2:
        $r4 = "prebaked";

        $z2 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z2 == 0 goto label3;

        $i2 = specialinvoke r0.<com.android.server.VibratorService$VibratorShellCommand: int runPrebaked()>();

        return $i2;

     label3:
        $r5 = "capabilities";

        $z3 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z3 == 0 goto label4;

        $i1 = specialinvoke r0.<com.android.server.VibratorService$VibratorShellCommand: int runCapabilities()>();

        return $i1;

     label4:
        $r6 = "cancel";

        $z4 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z4 == 0 goto label5;

        $r8 = r0.<com.android.server.VibratorService$VibratorShellCommand: com.android.server.VibratorService this$0>;

        $r7 = r0.<com.android.server.VibratorService$VibratorShellCommand: android.os.IBinder mToken>;

        virtualinvoke $r8.<com.android.server.VibratorService: void cancelVibrate(android.os.IBinder)>($r7);

        return 0;

     label5:
        $i0 = virtualinvoke r0.<com.android.server.VibratorService$VibratorShellCommand: int handleDefaultCommands(java.lang.String)>(r1);

        return $i0;
    }

    public void onHelp()
    {
        com.android.server.VibratorService$VibratorShellCommand r0;
        java.lang.Throwable $r2, $r3;
        java.io.PrintWriter r4;

        r0 := @this: com.android.server.VibratorService$VibratorShellCommand;

        r4 = virtualinvoke r0.<com.android.server.VibratorService$VibratorShellCommand: java.io.PrintWriter getOutPrintWriter()>();

     label1:
        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("Vibrator commands:");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("  help");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("    Prints this help text.");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("  vibrate duration [description]");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("    Vibrates for duration milliseconds; ignored when device is on ");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("    DND (Do Not Disturb) mode; touch feedback strength user setting ");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("    will be used to scale amplitude.");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("  waveform [-d description] [-r index] [-a] duration [amplitude] ...");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("    Vibrates for durations and amplitudes in list; ignored when ");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("    device is on DND (Do Not Disturb) mode; touch feedback strength ");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("    user setting will be used to scale amplitude.");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("    If -r is provided, the waveform loops back to the specified");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("    index (e.g. 0 loops from the beginning)");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("    If -a is provided, the command accepts duration-amplitude pairs;");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("    otherwise, it accepts durations only and alternates off/on");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("    Duration is in milliseconds; amplitude is a scale of 1-255.");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("  prebaked [-b] effect-id [description]");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("    Vibrates with prebaked effect; ignored when device is on DND ");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("    (Do Not Disturb) mode; touch feedback strength user setting ");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("    will be used to scale amplitude.");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("    If -b is provided, the prebaked fallback effect will be played if");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("    the device doesn\'t support the given effect-id.");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("  capabilities");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("    Prints capabilities of this device.");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("  cancel");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("    Cancels any active vibration");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("Common Options:");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("  -f - Force. Ignore Do Not Disturb setting.");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("");

     label2:
        if r4 == null goto label3;

        virtualinvoke r4.<java.io.PrintWriter: void close()>();

     label3:
        return;

     label4:
        $r2 := @caughtexception;

        if r4 == null goto label8;

     label5:
        virtualinvoke r4.<java.io.PrintWriter: void close()>();

     label6:
        goto label8;

     label7:
        $r3 := @caughtexception;

        virtualinvoke $r2.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r3);

     label8:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label5 to label6 with label7;
    }
}
