class com.android.server.WatchdogDiagnostics extends java.lang.Object
{

    void <init>()
    {
        com.android.server.WatchdogDiagnostics r0;

        r0 := @this: com.android.server.WatchdogDiagnostics;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void diagnoseCheckers(java.util.List)
    {
        java.util.List r0;
        int i0, $i1, i4, i5;
        java.io.PrintWriter $r3;
        android.util.LogWriter $r4;
        java.lang.Object $r5;
        com.android.server.Watchdog$HandlerChecker $r6;
        boolean $z0;
        java.lang.StringBuilder $r7, $r12;
        java.lang.String $r8, $r11, $r15;
        java.lang.Thread r16;
        java.lang.StackTraceElement[] r18;
        java.lang.StackTraceElement r19;

        r0 := @parameter0: java.util.List;

        $r3 = new java.io.PrintWriter;

        $r4 = new android.util.LogWriter;

        specialinvoke $r4.<android.util.LogWriter: void <init>(int,java.lang.String,int)>(5, "Watchdog", 3);

        specialinvoke $r3.<java.io.PrintWriter: void <init>(java.io.Writer,boolean)>($r4, 1);

        i4 = 0;

     label1:
        $i1 = interfaceinvoke r0.<java.util.List: int size()>();

        if i4 >= $i1 goto label5;

        $r5 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i4);

        $r6 = (com.android.server.Watchdog$HandlerChecker) $r5;

        r16 = virtualinvoke $r6.<com.android.server.Watchdog$HandlerChecker: java.lang.Thread getThread()>();

        $z0 = staticinvoke <com.android.server.WatchdogDiagnostics: boolean printAnnotatedStack(java.lang.Thread,java.io.PrintWriter)>(r16, $r3);

        if $z0 == 0 goto label2;

        goto label4;

     label2:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke r16.<java.lang.Thread: java.lang.String getName()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" stack trace:");

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("Watchdog", $r11);

        r18 = virtualinvoke r16.<java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()>();

        i0 = lengthof r18;

        i5 = 0;

     label3:
        if i5 >= i0 goto label4;

        r19 = r18[i5];

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    at ");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r19);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("Watchdog", $r15);

        i5 = i5 + 1;

        goto label3;

     label4:
        i4 = i4 + 1;

        goto label1;

     label5:
        return;
    }

    private static java.lang.String getBlockedOnString(java.lang.Object)
    {
        java.lang.Object r0;
        java.lang.Object[] $r1;
        int $i0;
        java.lang.Integer $r2;
        java.lang.Class $r3;
        java.lang.String $r4, $r5;

        r0 := @parameter0: java.lang.Object;

        $r1 = newarray (java.lang.Object)[2];

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r1[0] = $r2;

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        $r1[1] = $r4;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("- waiting to lock <0x%08x> (a %s)", $r1);

        return $r5;
    }

    private static java.lang.String getLockedString(java.lang.Object)
    {
        java.lang.Object r0;
        java.lang.Object[] $r1;
        int $i0;
        java.lang.Integer $r2;
        java.lang.Class $r3;
        java.lang.String $r4, $r5;

        r0 := @parameter0: java.lang.Object;

        $r1 = newarray (java.lang.Object)[2];

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r1[0] = $r2;

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        $r1[1] = $r4;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("- locked <0x%08x> (a %s)", $r1);

        return $r5;
    }

    public static boolean printAnnotatedStack(java.lang.Thread, java.io.PrintWriter)
    {
        java.io.PrintWriter r0;
        dalvik.system.AnnotatedStackTraceElement[] r1;
        int i0, i1, i2, i3;
        java.lang.Object[] r2, $r14;
        java.lang.StringBuilder $r3, $r8, $r15, $r20;
        java.lang.String $r4, $r7, $r12, $r17, $r19, $r23, $r25;
        java.lang.StackTraceElement $r10;
        java.lang.Object $r13, $r22, r31;
        java.lang.Thread r26;
        dalvik.system.AnnotatedStackTraceElement r28;

        r26 := @parameter0: java.lang.Thread;

        r0 := @parameter1: java.io.PrintWriter;

        r1 = staticinvoke <dalvik.system.VMStack: dalvik.system.AnnotatedStackTraceElement[] getAnnotatedThreadStackTrace(java.lang.Thread)>(r26);

        if r1 != null goto label1;

        return 0;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r26.<java.lang.Thread: java.lang.String getName()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" annotated stack trace:");

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r7);

        i0 = lengthof r1;

        i2 = 0;

     label2:
        if i2 >= i0 goto label6;

        r28 = r1[i2];

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    at ");

        $r10 = virtualinvoke r28.<dalvik.system.AnnotatedStackTraceElement: java.lang.StackTraceElement getStackTraceElement()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r12);

        $r13 = virtualinvoke r28.<dalvik.system.AnnotatedStackTraceElement: java.lang.Object getBlockedOn()>();

        if $r13 == null goto label3;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");

        $r22 = virtualinvoke r28.<dalvik.system.AnnotatedStackTraceElement: java.lang.Object getBlockedOn()>();

        $r23 = staticinvoke <com.android.server.WatchdogDiagnostics: java.lang.String getBlockedOnString(java.lang.Object)>($r22);

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r25);

     label3:
        $r14 = virtualinvoke r28.<dalvik.system.AnnotatedStackTraceElement: java.lang.Object[] getHeldLocks()>();

        if $r14 == null goto label5;

        r2 = virtualinvoke r28.<dalvik.system.AnnotatedStackTraceElement: java.lang.Object[] getHeldLocks()>();

        i1 = lengthof r2;

        i3 = 0;

     label4:
        if i3 >= i1 goto label5;

        r31 = r2[i3];

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");

        $r17 = staticinvoke <com.android.server.WatchdogDiagnostics: java.lang.String getLockedString(java.lang.Object)>(r31);

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r19);

        i3 = i3 + 1;

        goto label4;

     label5:
        i2 = i2 + 1;

        goto label2;

     label6:
        return 1;
    }
}
