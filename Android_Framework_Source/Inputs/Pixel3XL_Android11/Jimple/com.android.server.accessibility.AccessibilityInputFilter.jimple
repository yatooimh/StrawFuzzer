class com.android.server.accessibility.AccessibilityInputFilter extends android.view.InputFilter implements com.android.server.accessibility.EventStreamTransformation
{
    private static final boolean DEBUG;
    static final int FEATURES_AFFECTING_MOTION_EVENTS;
    static final int FLAG_FEATURE_AUTOCLICK;
    static final int FLAG_FEATURE_CONTROL_SCREEN_MAGNIFIER;
    static final int FLAG_FEATURE_FILTER_KEY_EVENTS;
    static final int FLAG_FEATURE_INJECT_MOTION_EVENTS;
    static final int FLAG_FEATURE_SCREEN_MAGNIFIER;
    static final int FLAG_FEATURE_TOUCH_EXPLORATION;
    static final int FLAG_FEATURE_TRIGGERED_SCREEN_MAGNIFIER;
    static final int FLAG_REQUEST_MULTI_FINGER_GESTURES;
    static final int FLAG_SERVICE_HANDLES_DOUBLE_TAP;
    private static final java.lang.String TAG;
    private final com.android.server.accessibility.AccessibilityManagerService mAms;
    private com.android.server.accessibility.AutoclickController mAutoclickController;
    private final android.content.Context mContext;
    private int mEnabledFeatures;
    private final android.util.SparseArray mEventHandler;
    private boolean mInstalled;
    private com.android.server.accessibility.KeyboardInterceptor mKeyboardInterceptor;
    private com.android.server.accessibility.AccessibilityInputFilter$EventStreamState mKeyboardStreamState;
    private final android.util.SparseArray mMagnificationGestureHandler;
    private final android.util.SparseArray mMotionEventInjectors;
    private com.android.server.accessibility.AccessibilityInputFilter$EventStreamState mMouseStreamState;
    private final android.os.PowerManager mPm;
    private final android.util.SparseArray mTouchExplorer;
    private com.android.server.accessibility.AccessibilityInputFilter$EventStreamState mTouchScreenStreamState;
    private int mUserId;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        <com.android.server.accessibility.AccessibilityInputFilter: int FLAG_SERVICE_HANDLES_DOUBLE_TAP> = 128;

        <com.android.server.accessibility.AccessibilityInputFilter: int FLAG_REQUEST_MULTI_FINGER_GESTURES> = 256;

        <com.android.server.accessibility.AccessibilityInputFilter: int FLAG_FEATURE_TRIGGERED_SCREEN_MAGNIFIER> = 64;

        <com.android.server.accessibility.AccessibilityInputFilter: int FLAG_FEATURE_TOUCH_EXPLORATION> = 2;

        <com.android.server.accessibility.AccessibilityInputFilter: int FLAG_FEATURE_SCREEN_MAGNIFIER> = 1;

        <com.android.server.accessibility.AccessibilityInputFilter: int FLAG_FEATURE_INJECT_MOTION_EVENTS> = 16;

        <com.android.server.accessibility.AccessibilityInputFilter: int FLAG_FEATURE_FILTER_KEY_EVENTS> = 4;

        <com.android.server.accessibility.AccessibilityInputFilter: int FLAG_FEATURE_CONTROL_SCREEN_MAGNIFIER> = 32;

        <com.android.server.accessibility.AccessibilityInputFilter: int FLAG_FEATURE_AUTOCLICK> = 8;

        <com.android.server.accessibility.AccessibilityInputFilter: int FEATURES_AFFECTING_MOTION_EVENTS> = 475;

        <com.android.server.accessibility.AccessibilityInputFilter: boolean DEBUG> = 0;

        $r0 = class "Lcom/android/server/accessibility/AccessibilityInputFilter;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.android.server.accessibility.AccessibilityInputFilter: java.lang.String TAG> = $r1;

        return;
    }

    void <init>(android.content.Context, com.android.server.accessibility.AccessibilityManagerService)
    {
        com.android.server.accessibility.AccessibilityInputFilter r0;
        android.content.Context r1;
        com.android.server.accessibility.AccessibilityManagerService r2;
        android.util.SparseArray $r3;

        r0 := @this: com.android.server.accessibility.AccessibilityInputFilter;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.server.accessibility.AccessibilityManagerService;

        $r3 = new android.util.SparseArray;

        specialinvoke $r3.<android.util.SparseArray: void <init>(int)>(0);

        specialinvoke r0.<com.android.server.accessibility.AccessibilityInputFilter: void <init>(android.content.Context,com.android.server.accessibility.AccessibilityManagerService,android.util.SparseArray)>(r1, r2, $r3);

        return;
    }

    void <init>(android.content.Context, com.android.server.accessibility.AccessibilityManagerService, android.util.SparseArray)
    {
        com.android.server.accessibility.AccessibilityInputFilter r0;
        android.content.Context r1;
        com.android.server.accessibility.AccessibilityManagerService r2;
        android.util.SparseArray r3, $r5, $r6, $r7;
        android.os.Looper $r4;
        java.lang.Object $r8;
        android.os.PowerManager $r9;

        r0 := @this: com.android.server.accessibility.AccessibilityInputFilter;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.server.accessibility.AccessibilityManagerService;

        r3 := @parameter2: android.util.SparseArray;

        $r4 = virtualinvoke r1.<android.content.Context: android.os.Looper getMainLooper()>();

        specialinvoke r0.<android.view.InputFilter: void <init>(android.os.Looper)>($r4);

        $r5 = new android.util.SparseArray;

        specialinvoke $r5.<android.util.SparseArray: void <init>(int)>(0);

        r0.<com.android.server.accessibility.AccessibilityInputFilter: android.util.SparseArray mTouchExplorer> = $r5;

        $r6 = new android.util.SparseArray;

        specialinvoke $r6.<android.util.SparseArray: void <init>(int)>(0);

        r0.<com.android.server.accessibility.AccessibilityInputFilter: android.util.SparseArray mMagnificationGestureHandler> = $r6;

        $r7 = new android.util.SparseArray;

        specialinvoke $r7.<android.util.SparseArray: void <init>(int)>(0);

        r0.<com.android.server.accessibility.AccessibilityInputFilter: android.util.SparseArray mMotionEventInjectors> = $r7;

        r0.<com.android.server.accessibility.AccessibilityInputFilter: android.content.Context mContext> = r1;

        r0.<com.android.server.accessibility.AccessibilityInputFilter: com.android.server.accessibility.AccessibilityManagerService mAms> = r2;

        $r8 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("power");

        $r9 = (android.os.PowerManager) $r8;

        r0.<com.android.server.accessibility.AccessibilityInputFilter: android.os.PowerManager mPm> = $r9;

        r0.<com.android.server.accessibility.AccessibilityInputFilter: android.util.SparseArray mEventHandler> = r3;

        return;
    }

    private void addFirstEventHandler(int, com.android.server.accessibility.EventStreamTransformation)
    {
        com.android.server.accessibility.AccessibilityInputFilter r0;
        int i0;
        com.android.server.accessibility.EventStreamTransformation r1, r2;
        android.util.SparseArray $r3, $r5;
        java.lang.Object $r4;

        r0 := @this: com.android.server.accessibility.AccessibilityInputFilter;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.server.accessibility.EventStreamTransformation;

        $r3 = r0.<com.android.server.accessibility.AccessibilityInputFilter: android.util.SparseArray mEventHandler>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r2 = (com.android.server.accessibility.EventStreamTransformation) $r4;

        if r2 == null goto label1;

        interfaceinvoke r1.<com.android.server.accessibility.EventStreamTransformation: void setNext(com.android.server.accessibility.EventStreamTransformation)>(r2);

        goto label2;

     label1:
        interfaceinvoke r1.<com.android.server.accessibility.EventStreamTransformation: void setNext(com.android.server.accessibility.EventStreamTransformation)>(r0);

     label2:
        $r5 = r0.<com.android.server.accessibility.AccessibilityInputFilter: android.util.SparseArray mEventHandler>;

        virtualinvoke $r5.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r1);

        return;
    }

    private void addFirstEventHandlerForAllDisplays(java.util.ArrayList, com.android.server.accessibility.EventStreamTransformation)
    {
        com.android.server.accessibility.AccessibilityInputFilter r0;
        java.util.ArrayList r1;
        com.android.server.accessibility.EventStreamTransformation r2;
        int $i0, $i1, i2;
        java.lang.Object $r3;
        android.view.Display $r4;

        r0 := @this: com.android.server.accessibility.AccessibilityInputFilter;

        r1 := @parameter0: java.util.ArrayList;

        r2 := @parameter1: com.android.server.accessibility.EventStreamTransformation;

        i2 = 0;

     label1:
        $i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if i2 >= $i0 goto label2;

        $r3 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r4 = (android.view.Display) $r3;

        $i1 = virtualinvoke $r4.<android.view.Display: int getDisplayId()>();

        specialinvoke r0.<com.android.server.accessibility.AccessibilityInputFilter: void addFirstEventHandler(int,com.android.server.accessibility.EventStreamTransformation)>($i1, r2);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    private void clearEventsForAllEventHandlers(int)
    {
        com.android.server.accessibility.AccessibilityInputFilter r0;
        int i0, $i1, i2;
        com.android.server.accessibility.EventStreamTransformation r1;
        android.util.SparseArray $r2, $r3;
        java.lang.Object $r4;

        r0 := @this: com.android.server.accessibility.AccessibilityInputFilter;

        i0 := @parameter0: int;

        i2 = 0;

     label1:
        $r2 = r0.<com.android.server.accessibility.AccessibilityInputFilter: android.util.SparseArray mEventHandler>;

        $i1 = virtualinvoke $r2.<android.util.SparseArray: int size()>();

        if i2 >= $i1 goto label3;

        $r3 = r0.<com.android.server.accessibility.AccessibilityInputFilter: android.util.SparseArray mEventHandler>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        r1 = (com.android.server.accessibility.EventStreamTransformation) $r4;

        if r1 == null goto label2;

        interfaceinvoke r1.<com.android.server.accessibility.EventStreamTransformation: void clearEvents(int)>(i0);

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return;
    }

    private void disableFeatures()
    {
        com.android.server.accessibility.AccessibilityInputFilter r0;
        android.util.SparseArray $r1, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r11, $r13;
        int $i0, $i1, $i2, i3, i4, i5;
        com.android.server.accessibility.AccessibilityManagerService $r2;
        java.lang.Object $r10, $r12, $r14;
        com.android.server.accessibility.MotionEventInjector r15;
        com.android.server.accessibility.AutoclickController r16;
        com.android.server.accessibility.gestures.TouchExplorer r17;
        com.android.server.accessibility.magnification.MagnificationGestureHandler r18;
        com.android.server.accessibility.KeyboardInterceptor r19;

        r0 := @this: com.android.server.accessibility.AccessibilityInputFilter;

        $r1 = r0.<com.android.server.accessibility.AccessibilityInputFilter: android.util.SparseArray mMotionEventInjectors>;

        $i0 = virtualinvoke $r1.<android.util.SparseArray: int size()>();

        i3 = $i0 - 1;

     label01:
        if i3 < 0 goto label03;

        $r13 = r0.<com.android.server.accessibility.AccessibilityInputFilter: android.util.SparseArray mMotionEventInjectors>;

        $r14 = virtualinvoke $r13.<android.util.SparseArray: java.lang.Object valueAt(int)>(i3);

        r15 = (com.android.server.accessibility.MotionEventInjector) $r14;

        if r15 == null goto label02;

        virtualinvoke r15.<com.android.server.accessibility.MotionEventInjector: void onDestroy()>();

     label02:
        i3 = i3 + -1;

        goto label01;

     label03:
        $r2 = r0.<com.android.server.accessibility.AccessibilityInputFilter: com.android.server.accessibility.AccessibilityManagerService mAms>;

        virtualinvoke $r2.<com.android.server.accessibility.AccessibilityManagerService: void setMotionEventInjectors(android.util.SparseArray)>(null);

        $r3 = r0.<com.android.server.accessibility.AccessibilityInputFilter: android.util.SparseArray mMotionEventInjectors>;

        virtualinvoke $r3.<android.util.SparseArray: void clear()>();

        r16 = r0.<com.android.server.accessibility.AccessibilityInputFilter: com.android.server.accessibility.AutoclickController mAutoclickController>;

        if r16 == null goto label04;

        virtualinvoke r16.<com.android.server.accessibility.AutoclickController: void onDestroy()>();

        r0.<com.android.server.accessibility.AccessibilityInputFilter: com.android.server.accessibility.AutoclickController mAutoclickController> = null;

     label04:
        $r4 = r0.<com.android.server.accessibility.AccessibilityInputFilter: android.util.SparseArray mTouchExplorer>;

        $i1 = virtualinvoke $r4.<android.util.SparseArray: int size()>();

        i4 = $i1 - 1;

     label05:
        if i4 < 0 goto label07;

        $r11 = r0.<com.android.server.accessibility.AccessibilityInputFilter: android.util.SparseArray mTouchExplorer>;

        $r12 = virtualinvoke $r11.<android.util.SparseArray: java.lang.Object valueAt(int)>(i4);

        r17 = (com.android.server.accessibility.gestures.TouchExplorer) $r12;

        if r17 == null goto label06;

        virtualinvoke r17.<com.android.server.accessibility.gestures.TouchExplorer: void onDestroy()>();

     label06:
        i4 = i4 + -1;

        goto label05;

     label07:
        $r5 = r0.<com.android.server.accessibility.AccessibilityInputFilter: android.util.SparseArray mTouchExplorer>;

        virtualinvoke $r5.<android.util.SparseArray: void clear()>();

        $r6 = r0.<com.android.server.accessibility.AccessibilityInputFilter: android.util.SparseArray mMagnificationGestureHandler>;

        $i2 = virtualinvoke $r6.<android.util.SparseArray: int size()>();

        i5 = $i2 - 1;

     label08:
        if i5 < 0 goto label10;

        $r9 = r0.<com.android.server.accessibility.AccessibilityInputFilter: android.util.SparseArray mMagnificationGestureHandler>;

        $r10 = virtualinvoke $r9.<android.util.SparseArray: java.lang.Object valueAt(int)>(i5);

        r18 = (com.android.server.accessibility.magnification.MagnificationGestureHandler) $r10;

        if r18 == null goto label09;

        virtualinvoke r18.<com.android.server.accessibility.magnification.MagnificationGestureHandler: void onDestroy()>();

     label09:
        i5 = i5 + -1;

        goto label08;

     label10:
        $r7 = r0.<com.android.server.accessibility.AccessibilityInputFilter: android.util.SparseArray mMagnificationGestureHandler>;

        virtualinvoke $r7.<android.util.SparseArray: void clear()>();

        r19 = r0.<com.android.server.accessibility.AccessibilityInputFilter: com.android.server.accessibility.KeyboardInterceptor mKeyboardInterceptor>;

        if r19 == null goto label11;

        virtualinvoke r19.<com.android.server.accessibility.KeyboardInterceptor: void onDestroy()>();

        r0.<com.android.server.accessibility.AccessibilityInputFilter: com.android.server.accessibility.KeyboardInterceptor mKeyboardInterceptor> = null;

     label11:
        $r8 = r0.<com.android.server.accessibility.AccessibilityInputFilter: android.util.SparseArray mEventHandler>;

        virtualinvoke $r8.<android.util.SparseArray: void clear()>();

        virtualinvoke r0.<com.android.server.accessibility.AccessibilityInputFilter: void resetStreamState()>();

        return;
    }

    private void enableFeatures()
    {
        com.android.server.accessibility.AccessibilityInputFilter r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, i20, $i21, $i22, $i23, $i24, $i25;
        android.content.Context r1, $r11, $r19, $r26;
        com.android.server.accessibility.AccessibilityManagerService $r2, $r4, $r8, $r15, $r23;
        com.android.server.accessibility.KeyboardInterceptor $r3;
        java.lang.Object $r5, $r9, $r12;
        com.android.server.policy.WindowManagerPolicy $r6;
        android.util.SparseArray $r7, $r17, $r21, $r24;
        android.view.Display $r10, $r13;
        com.android.server.accessibility.FullScreenMagnificationGestureHandler $r14;
        com.android.server.accessibility.MagnificationController $r16;
        com.android.server.accessibility.MotionEventInjector $r18;
        android.os.Looper $r20;
        com.android.server.accessibility.gestures.TouchExplorer $r22;
        com.android.server.accessibility.AutoclickController $r25;
        java.util.ArrayList r27;
        boolean z0, z1;

        r0 := @this: com.android.server.accessibility.AccessibilityInputFilter;

        virtualinvoke r0.<com.android.server.accessibility.AccessibilityInputFilter: void resetStreamState()>();

        $r2 = r0.<com.android.server.accessibility.AccessibilityInputFilter: com.android.server.accessibility.AccessibilityManagerService mAms>;

        r27 = virtualinvoke $r2.<com.android.server.accessibility.AccessibilityManagerService: java.util.ArrayList getValidDisplayList()>();

        $i2 = r0.<com.android.server.accessibility.AccessibilityInputFilter: int mEnabledFeatures>;

        $i3 = $i2 & 8;

        if $i3 == 0 goto label01;

        $r25 = new com.android.server.accessibility.AutoclickController;

        $r26 = r0.<com.android.server.accessibility.AccessibilityInputFilter: android.content.Context mContext>;

        $i19 = r0.<com.android.server.accessibility.AccessibilityInputFilter: int mUserId>;

        specialinvoke $r25.<com.android.server.accessibility.AutoclickController: void <init>(android.content.Context,int)>($r26, $i19);

        r0.<com.android.server.accessibility.AccessibilityInputFilter: com.android.server.accessibility.AutoclickController mAutoclickController> = $r25;

        specialinvoke r0.<com.android.server.accessibility.AccessibilityInputFilter: void addFirstEventHandlerForAllDisplays(java.util.ArrayList,com.android.server.accessibility.EventStreamTransformation)>(r27, $r25);

     label01:
        $i4 = virtualinvoke r27.<java.util.ArrayList: int size()>();

        i20 = $i4 - 1;

     label02:
        if i20 < 0 goto label13;

        $r9 = virtualinvoke r27.<java.util.ArrayList: java.lang.Object get(int)>(i20);

        $r10 = (android.view.Display) $r9;

        i0 = virtualinvoke $r10.<android.view.Display: int getDisplayId()>();

        $r11 = r0.<com.android.server.accessibility.AccessibilityInputFilter: android.content.Context mContext>;

        $r12 = virtualinvoke r27.<java.util.ArrayList: java.lang.Object get(int)>(i20);

        $r13 = (android.view.Display) $r12;

        r1 = virtualinvoke $r11.<android.content.Context: android.content.Context createDisplayContext(android.view.Display)>($r13);

        $i9 = r0.<com.android.server.accessibility.AccessibilityInputFilter: int mEnabledFeatures>;

        $i10 = $i9 & 2;

        if $i10 == 0 goto label05;

        $r22 = new com.android.server.accessibility.gestures.TouchExplorer;

        $r23 = r0.<com.android.server.accessibility.AccessibilityInputFilter: com.android.server.accessibility.AccessibilityManagerService mAms>;

        specialinvoke $r22.<com.android.server.accessibility.gestures.TouchExplorer: void <init>(android.content.Context,com.android.server.accessibility.AccessibilityManagerService)>(r1, $r23);

        $i15 = r0.<com.android.server.accessibility.AccessibilityInputFilter: int mEnabledFeatures>;

        $i16 = $i15 & 128;

        if $i16 == 0 goto label03;

        virtualinvoke $r22.<com.android.server.accessibility.gestures.TouchExplorer: void setServiceHandlesDoubleTap(boolean)>(1);

     label03:
        $i17 = r0.<com.android.server.accessibility.AccessibilityInputFilter: int mEnabledFeatures>;

        $i18 = $i17 & 256;

        if $i18 == 0 goto label04;

        virtualinvoke $r22.<com.android.server.accessibility.gestures.TouchExplorer: void setMultiFingerGesturesEnabled(boolean)>(1);

     label04:
        specialinvoke r0.<com.android.server.accessibility.AccessibilityInputFilter: void addFirstEventHandler(int,com.android.server.accessibility.EventStreamTransformation)>(i0, $r22);

        $r24 = r0.<com.android.server.accessibility.AccessibilityInputFilter: android.util.SparseArray mTouchExplorer>;

        virtualinvoke $r24.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, $r22);

     label05:
        i1 = r0.<com.android.server.accessibility.AccessibilityInputFilter: int mEnabledFeatures>;

        $i21 = i1 & 32;

        if $i21 != 0 goto label06;

        $i13 = i1 & 1;

        if $i13 != 0 goto label06;

        $i14 = i1 & 64;

        if $i14 == 0 goto label11;

     label06:
        $i22 = r0.<com.android.server.accessibility.AccessibilityInputFilter: int mEnabledFeatures>;

        $i23 = $i22 & 1;

        if $i23 == 0 goto label07;

        z0 = 1;

        goto label08;

     label07:
        z0 = 0;

     label08:
        $i11 = r0.<com.android.server.accessibility.AccessibilityInputFilter: int mEnabledFeatures>;

        $i12 = $i11 & 64;

        if $i12 == 0 goto label09;

        z1 = 1;

        goto label10;

     label09:
        z1 = 0;

     label10:
        $r14 = new com.android.server.accessibility.FullScreenMagnificationGestureHandler;

        $r15 = r0.<com.android.server.accessibility.AccessibilityInputFilter: com.android.server.accessibility.AccessibilityManagerService mAms>;

        $r16 = virtualinvoke $r15.<com.android.server.accessibility.AccessibilityManagerService: com.android.server.accessibility.MagnificationController getMagnificationController()>();

        specialinvoke $r14.<com.android.server.accessibility.FullScreenMagnificationGestureHandler: void <init>(android.content.Context,com.android.server.accessibility.MagnificationController,boolean,boolean,int)>(r1, $r16, z0, z1, i0);

        specialinvoke r0.<com.android.server.accessibility.AccessibilityInputFilter: void addFirstEventHandler(int,com.android.server.accessibility.EventStreamTransformation)>(i0, $r14);

        $r17 = r0.<com.android.server.accessibility.AccessibilityInputFilter: android.util.SparseArray mMagnificationGestureHandler>;

        virtualinvoke $r17.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, $r14);

     label11:
        $i24 = r0.<com.android.server.accessibility.AccessibilityInputFilter: int mEnabledFeatures>;

        $i25 = $i24 & 16;

        if $i25 == 0 goto label12;

        $r18 = new com.android.server.accessibility.MotionEventInjector;

        $r19 = r0.<com.android.server.accessibility.AccessibilityInputFilter: android.content.Context mContext>;

        $r20 = virtualinvoke $r19.<android.content.Context: android.os.Looper getMainLooper()>();

        specialinvoke $r18.<com.android.server.accessibility.MotionEventInjector: void <init>(android.os.Looper)>($r20);

        specialinvoke r0.<com.android.server.accessibility.AccessibilityInputFilter: void addFirstEventHandler(int,com.android.server.accessibility.EventStreamTransformation)>(i0, $r18);

        $r21 = r0.<com.android.server.accessibility.AccessibilityInputFilter: android.util.SparseArray mMotionEventInjectors>;

        virtualinvoke $r21.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, $r18);

     label12:
        i20 = i20 + -1;

        goto label02;

     label13:
        $i5 = r0.<com.android.server.accessibility.AccessibilityInputFilter: int mEnabledFeatures>;

        $i6 = $i5 & 16;

        if $i6 == 0 goto label14;

        $r8 = r0.<com.android.server.accessibility.AccessibilityInputFilter: com.android.server.accessibility.AccessibilityManagerService mAms>;

        $r7 = r0.<com.android.server.accessibility.AccessibilityInputFilter: android.util.SparseArray mMotionEventInjectors>;

        virtualinvoke $r8.<com.android.server.accessibility.AccessibilityManagerService: void setMotionEventInjectors(android.util.SparseArray)>($r7);

     label14:
        $i7 = r0.<com.android.server.accessibility.AccessibilityInputFilter: int mEnabledFeatures>;

        $i8 = $i7 & 4;

        if $i8 == 0 goto label15;

        $r3 = new com.android.server.accessibility.KeyboardInterceptor;

        $r4 = r0.<com.android.server.accessibility.AccessibilityInputFilter: com.android.server.accessibility.AccessibilityManagerService mAms>;

        $r5 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Lcom/android/server/policy/WindowManagerPolicy;");

        $r6 = (com.android.server.policy.WindowManagerPolicy) $r5;

        specialinvoke $r3.<com.android.server.accessibility.KeyboardInterceptor: void <init>(com.android.server.accessibility.AccessibilityManagerService,com.android.server.policy.WindowManagerPolicy)>($r4, $r6);

        r0.<com.android.server.accessibility.AccessibilityInputFilter: com.android.server.accessibility.KeyboardInterceptor mKeyboardInterceptor> = $r3;

        specialinvoke r0.<com.android.server.accessibility.AccessibilityInputFilter: void addFirstEventHandler(int,com.android.server.accessibility.EventStreamTransformation)>(0, $r3);

     label15:
        return;
    }

    private com.android.server.accessibility.AccessibilityInputFilter$EventStreamState getEventStreamState(android.view.InputEvent)
    {
        com.android.server.accessibility.AccessibilityInputFilter r0;
        android.view.InputEvent r1;
        boolean $z0, $z1, $z2, $z3, $z4;
        com.android.server.accessibility.AccessibilityInputFilter$EventStreamState $r2, $r3, $r5, $r6, $r8, $r9;
        com.android.server.accessibility.AccessibilityInputFilter$KeyboardEventStreamState $r4;
        com.android.server.accessibility.AccessibilityInputFilter$MouseEventStreamState $r7;
        com.android.server.accessibility.AccessibilityInputFilter$TouchScreenEventStreamState $r10;

        r0 := @this: com.android.server.accessibility.AccessibilityInputFilter;

        r1 := @parameter0: android.view.InputEvent;

        $z0 = r1 instanceof android.view.MotionEvent;

        if $z0 == 0 goto label4;

        $z3 = virtualinvoke r1.<android.view.InputEvent: boolean isFromSource(int)>(4098);

        if $z3 == 0 goto label2;

        $r8 = r0.<com.android.server.accessibility.AccessibilityInputFilter: com.android.server.accessibility.AccessibilityInputFilter$EventStreamState mTouchScreenStreamState>;

        if $r8 != null goto label1;

        $r10 = new com.android.server.accessibility.AccessibilityInputFilter$TouchScreenEventStreamState;

        specialinvoke $r10.<com.android.server.accessibility.AccessibilityInputFilter$TouchScreenEventStreamState: void <init>()>();

        r0.<com.android.server.accessibility.AccessibilityInputFilter: com.android.server.accessibility.AccessibilityInputFilter$EventStreamState mTouchScreenStreamState> = $r10;

     label1:
        $r9 = r0.<com.android.server.accessibility.AccessibilityInputFilter: com.android.server.accessibility.AccessibilityInputFilter$EventStreamState mTouchScreenStreamState>;

        return $r9;

     label2:
        $z4 = virtualinvoke r1.<android.view.InputEvent: boolean isFromSource(int)>(8194);

        if $z4 == 0 goto label6;

        $r5 = r0.<com.android.server.accessibility.AccessibilityInputFilter: com.android.server.accessibility.AccessibilityInputFilter$EventStreamState mMouseStreamState>;

        if $r5 != null goto label3;

        $r7 = new com.android.server.accessibility.AccessibilityInputFilter$MouseEventStreamState;

        specialinvoke $r7.<com.android.server.accessibility.AccessibilityInputFilter$MouseEventStreamState: void <init>()>();

        r0.<com.android.server.accessibility.AccessibilityInputFilter: com.android.server.accessibility.AccessibilityInputFilter$EventStreamState mMouseStreamState> = $r7;

     label3:
        $r6 = r0.<com.android.server.accessibility.AccessibilityInputFilter: com.android.server.accessibility.AccessibilityInputFilter$EventStreamState mMouseStreamState>;

        return $r6;

     label4:
        $z1 = r1 instanceof android.view.KeyEvent;

        if $z1 == 0 goto label6;

        $z2 = virtualinvoke r1.<android.view.InputEvent: boolean isFromSource(int)>(257);

        if $z2 == 0 goto label6;

        $r2 = r0.<com.android.server.accessibility.AccessibilityInputFilter: com.android.server.accessibility.AccessibilityInputFilter$EventStreamState mKeyboardStreamState>;

        if $r2 != null goto label5;

        $r4 = new com.android.server.accessibility.AccessibilityInputFilter$KeyboardEventStreamState;

        specialinvoke $r4.<com.android.server.accessibility.AccessibilityInputFilter$KeyboardEventStreamState: void <init>()>();

        r0.<com.android.server.accessibility.AccessibilityInputFilter: com.android.server.accessibility.AccessibilityInputFilter$EventStreamState mKeyboardStreamState> = $r4;

     label5:
        $r3 = r0.<com.android.server.accessibility.AccessibilityInputFilter: com.android.server.accessibility.AccessibilityInputFilter$EventStreamState mKeyboardStreamState>;

        return $r3;

     label6:
        return null;
    }

    private void handleMotionEvent(android.view.MotionEvent, int)
    {
        com.android.server.accessibility.AccessibilityInputFilter r0;
        android.view.MotionEvent r1, r2;
        int i0, i2, i3;
        long l1;
        boolean $z0;
        java.lang.Object $r3;
        com.android.server.accessibility.EventStreamTransformation $r4;
        android.os.PowerManager r5;
        android.util.SparseArray r6;

        r0 := @this: com.android.server.accessibility.AccessibilityInputFilter;

        r1 := @parameter0: android.view.MotionEvent;

        i0 := @parameter1: int;

        r5 = r0.<com.android.server.accessibility.AccessibilityInputFilter: android.os.PowerManager mPm>;

        l1 = virtualinvoke r1.<android.view.MotionEvent: long getEventTime()>();

        i3 = 0;

        virtualinvoke r5.<android.os.PowerManager: void userActivity(long,boolean)>(l1, 0);

        r2 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(android.view.MotionEvent)>(r1);

        i2 = virtualinvoke r1.<android.view.MotionEvent: int getDisplayId()>();

        r6 = r0.<com.android.server.accessibility.AccessibilityInputFilter: android.util.SparseArray mEventHandler>;

        $z0 = specialinvoke r0.<com.android.server.accessibility.AccessibilityInputFilter: boolean isDisplayIdValid(int)>(i2);

        if $z0 == 0 goto label1;

        i3 = i2;

     label1:
        $r3 = virtualinvoke r6.<android.util.SparseArray: java.lang.Object get(int)>(i3);

        $r4 = (com.android.server.accessibility.EventStreamTransformation) $r3;

        interfaceinvoke $r4.<com.android.server.accessibility.EventStreamTransformation: void onMotionEvent(android.view.MotionEvent,android.view.MotionEvent,int)>(r2, r1, i0);

        virtualinvoke r2.<android.view.MotionEvent: void recycle()>();

        return;
    }

    private boolean isDisplayIdValid(int)
    {
        com.android.server.accessibility.AccessibilityInputFilter r0;
        int i0;
        android.util.SparseArray $r1;
        java.lang.Object $r2;
        boolean z0;

        r0 := @this: com.android.server.accessibility.AccessibilityInputFilter;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.accessibility.AccessibilityInputFilter: android.util.SparseArray mEventHandler>;

        $r2 = virtualinvoke $r1.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        if $r2 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private void processKeyEvent(com.android.server.accessibility.AccessibilityInputFilter$EventStreamState, android.view.KeyEvent, int)
    {
        com.android.server.accessibility.AccessibilityInputFilter r0;
        com.android.server.accessibility.AccessibilityInputFilter$EventStreamState r1;
        android.view.KeyEvent r2;
        int i0;
        boolean $z0;
        android.util.SparseArray $r3;
        java.lang.Object $r4;
        com.android.server.accessibility.EventStreamTransformation $r5;

        r0 := @this: com.android.server.accessibility.AccessibilityInputFilter;

        r1 := @parameter0: com.android.server.accessibility.AccessibilityInputFilter$EventStreamState;

        r2 := @parameter1: android.view.KeyEvent;

        i0 := @parameter2: int;

        $z0 = virtualinvoke r1.<com.android.server.accessibility.AccessibilityInputFilter$EventStreamState: boolean shouldProcessKeyEvent(android.view.KeyEvent)>(r2);

        if $z0 != 0 goto label1;

        specialinvoke r0.<android.view.InputFilter: void onInputEvent(android.view.InputEvent,int)>(r2, i0);

        return;

     label1:
        $r3 = r0.<com.android.server.accessibility.AccessibilityInputFilter: android.util.SparseArray mEventHandler>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(0);

        $r5 = (com.android.server.accessibility.EventStreamTransformation) $r4;

        interfaceinvoke $r5.<com.android.server.accessibility.EventStreamTransformation: void onKeyEvent(android.view.KeyEvent,int)>(r2, i0);

        return;
    }

    private void processMotionEvent(com.android.server.accessibility.AccessibilityInputFilter$EventStreamState, android.view.MotionEvent, int)
    {
        com.android.server.accessibility.AccessibilityInputFilter r0;
        com.android.server.accessibility.AccessibilityInputFilter$EventStreamState r1;
        android.view.MotionEvent r2;
        int i0, $i1;
        boolean $z0, $z1;

        r0 := @this: com.android.server.accessibility.AccessibilityInputFilter;

        r1 := @parameter0: com.android.server.accessibility.AccessibilityInputFilter$EventStreamState;

        r2 := @parameter1: android.view.MotionEvent;

        i0 := @parameter2: int;

        $z0 = virtualinvoke r1.<com.android.server.accessibility.AccessibilityInputFilter$EventStreamState: boolean shouldProcessScroll()>();

        if $z0 != 0 goto label1;

        $i1 = virtualinvoke r2.<android.view.MotionEvent: int getActionMasked()>();

        if $i1 != 8 goto label1;

        specialinvoke r0.<android.view.InputFilter: void onInputEvent(android.view.InputEvent,int)>(r2, i0);

        return;

     label1:
        $z1 = virtualinvoke r1.<com.android.server.accessibility.AccessibilityInputFilter$EventStreamState: boolean shouldProcessMotionEvent(android.view.MotionEvent)>(r2);

        if $z1 != 0 goto label2;

        return;

     label2:
        specialinvoke r0.<com.android.server.accessibility.AccessibilityInputFilter: void handleMotionEvent(android.view.MotionEvent,int)>(r2, i0);

        return;
    }

    public void clearEvents(int)
    {
        com.android.server.accessibility.AccessibilityInputFilter r0;
        int i0;

        r0 := @this: com.android.server.accessibility.AccessibilityInputFilter;

        i0 := @parameter0: int;

        return;
    }

    public com.android.server.accessibility.EventStreamTransformation getNext()
    {
        com.android.server.accessibility.AccessibilityInputFilter r0;

        r0 := @this: com.android.server.accessibility.AccessibilityInputFilter;

        return null;
    }

    void notifyAccessibilityButtonClicked(int)
    {
        com.android.server.accessibility.AccessibilityInputFilter r0;
        int i0, $i1;
        com.android.server.accessibility.magnification.MagnificationGestureHandler r1;
        android.util.SparseArray $r2, $r3;
        java.lang.Object $r4;

        r0 := @this: com.android.server.accessibility.AccessibilityInputFilter;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.accessibility.AccessibilityInputFilter: android.util.SparseArray mMagnificationGestureHandler>;

        $i1 = virtualinvoke $r2.<android.util.SparseArray: int size()>();

        if $i1 == 0 goto label1;

        $r3 = r0.<com.android.server.accessibility.AccessibilityInputFilter: android.util.SparseArray mMagnificationGestureHandler>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r1 = (com.android.server.accessibility.magnification.MagnificationGestureHandler) $r4;

        if r1 == null goto label1;

        virtualinvoke r1.<com.android.server.accessibility.magnification.MagnificationGestureHandler: void notifyShortcutTriggered()>();

     label1:
        return;
    }

    void notifyAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        com.android.server.accessibility.AccessibilityInputFilter r0;
        android.view.accessibility.AccessibilityEvent r1;
        com.android.server.accessibility.EventStreamTransformation r2;
        android.util.SparseArray $r3, $r4;
        int $i0, i1;
        java.lang.Object $r5;

        r0 := @this: com.android.server.accessibility.AccessibilityInputFilter;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        i1 = 0;

     label1:
        $r3 = r0.<com.android.server.accessibility.AccessibilityInputFilter: android.util.SparseArray mEventHandler>;

        $i0 = virtualinvoke $r3.<android.util.SparseArray: int size()>();

        if i1 >= $i0 goto label3;

        $r4 = r0.<com.android.server.accessibility.AccessibilityInputFilter: android.util.SparseArray mEventHandler>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        r2 = (com.android.server.accessibility.EventStreamTransformation) $r5;

        if r2 == null goto label2;

        interfaceinvoke r2.<com.android.server.accessibility.EventStreamTransformation: void onAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>(r1);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    public void onAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        com.android.server.accessibility.AccessibilityInputFilter r0;
        android.view.accessibility.AccessibilityEvent r1;

        r0 := @this: com.android.server.accessibility.AccessibilityInputFilter;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        return;
    }

    public void onDestroy()
    {
        com.android.server.accessibility.AccessibilityInputFilter r0;

        r0 := @this: com.android.server.accessibility.AccessibilityInputFilter;

        return;
    }

    void onDisplayChanged()
    {
        com.android.server.accessibility.AccessibilityInputFilter r0;
        boolean $z0;

        r0 := @this: com.android.server.accessibility.AccessibilityInputFilter;

        $z0 = r0.<com.android.server.accessibility.AccessibilityInputFilter: boolean mInstalled>;

        if $z0 == 0 goto label1;

        specialinvoke r0.<com.android.server.accessibility.AccessibilityInputFilter: void disableFeatures()>();

        specialinvoke r0.<com.android.server.accessibility.AccessibilityInputFilter: void enableFeatures()>();

     label1:
        return;
    }

    public void onInputEvent(android.view.InputEvent, int)
    {
        com.android.server.accessibility.AccessibilityInputFilter r0;
        android.view.InputEvent r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        com.android.server.accessibility.AccessibilityInputFilter$EventStreamState r2;
        android.util.SparseArray $r3;
        boolean $z0, $z1, $z2, $z3;
        android.view.KeyEvent $r4;
        android.view.MotionEvent $r5;

        r0 := @this: com.android.server.accessibility.AccessibilityInputFilter;

        r1 := @parameter0: android.view.InputEvent;

        i0 := @parameter1: int;

        $r3 = r0.<com.android.server.accessibility.AccessibilityInputFilter: android.util.SparseArray mEventHandler>;

        $i2 = virtualinvoke $r3.<android.util.SparseArray: int size()>();

        if $i2 != 0 goto label1;

        specialinvoke r0.<android.view.InputFilter: void onInputEvent(android.view.InputEvent,int)>(r1, i0);

        return;

     label1:
        r2 = specialinvoke r0.<com.android.server.accessibility.AccessibilityInputFilter: com.android.server.accessibility.AccessibilityInputFilter$EventStreamState getEventStreamState(android.view.InputEvent)>(r1);

        if r2 != null goto label2;

        specialinvoke r0.<android.view.InputFilter: void onInputEvent(android.view.InputEvent,int)>(r1, i0);

        return;

     label2:
        i1 = virtualinvoke r1.<android.view.InputEvent: int getSource()>();

        $i3 = 1073741824 & i0;

        if $i3 != 0 goto label3;

        virtualinvoke r2.<com.android.server.accessibility.AccessibilityInputFilter$EventStreamState: void reset()>();

        specialinvoke r0.<com.android.server.accessibility.AccessibilityInputFilter: void clearEventsForAllEventHandlers(int)>(i1);

        specialinvoke r0.<android.view.InputFilter: void onInputEvent(android.view.InputEvent,int)>(r1, i0);

        return;

     label3:
        $i4 = virtualinvoke r1.<android.view.InputEvent: int getSource()>();

        $z0 = virtualinvoke r2.<com.android.server.accessibility.AccessibilityInputFilter$EventStreamState: boolean updateInputSource(int)>($i4);

        if $z0 == 0 goto label4;

        specialinvoke r0.<com.android.server.accessibility.AccessibilityInputFilter: void clearEventsForAllEventHandlers(int)>(i1);

     label4:
        $z1 = virtualinvoke r2.<com.android.server.accessibility.AccessibilityInputFilter$EventStreamState: boolean inputSourceValid()>();

        if $z1 != 0 goto label5;

        specialinvoke r0.<android.view.InputFilter: void onInputEvent(android.view.InputEvent,int)>(r1, i0);

        return;

     label5:
        $z2 = r1 instanceof android.view.MotionEvent;

        if $z2 == 0 goto label7;

        $i5 = r0.<com.android.server.accessibility.AccessibilityInputFilter: int mEnabledFeatures>;

        $i6 = $i5 & 475;

        if $i6 == 0 goto label6;

        $r5 = (android.view.MotionEvent) r1;

        specialinvoke r0.<com.android.server.accessibility.AccessibilityInputFilter: void processMotionEvent(com.android.server.accessibility.AccessibilityInputFilter$EventStreamState,android.view.MotionEvent,int)>(r2, $r5, i0);

        return;

     label6:
        specialinvoke r0.<android.view.InputFilter: void onInputEvent(android.view.InputEvent,int)>(r1, i0);

        goto label8;

     label7:
        $z3 = r1 instanceof android.view.KeyEvent;

        if $z3 == 0 goto label8;

        $r4 = (android.view.KeyEvent) r1;

        specialinvoke r0.<com.android.server.accessibility.AccessibilityInputFilter: void processKeyEvent(com.android.server.accessibility.AccessibilityInputFilter$EventStreamState,android.view.KeyEvent,int)>(r2, $r4, i0);

     label8:
        return;
    }

    public void onInstalled()
    {
        com.android.server.accessibility.AccessibilityInputFilter r0;

        r0 := @this: com.android.server.accessibility.AccessibilityInputFilter;

        r0.<com.android.server.accessibility.AccessibilityInputFilter: boolean mInstalled> = 1;

        specialinvoke r0.<com.android.server.accessibility.AccessibilityInputFilter: void disableFeatures()>();

        specialinvoke r0.<com.android.server.accessibility.AccessibilityInputFilter: void enableFeatures()>();

        specialinvoke r0.<android.view.InputFilter: void onInstalled()>();

        return;
    }

    public void onKeyEvent(android.view.KeyEvent, int)
    {
        com.android.server.accessibility.AccessibilityInputFilter r0;
        android.view.KeyEvent r1;
        int i0;

        r0 := @this: com.android.server.accessibility.AccessibilityInputFilter;

        r1 := @parameter0: android.view.KeyEvent;

        i0 := @parameter1: int;

        virtualinvoke r0.<com.android.server.accessibility.AccessibilityInputFilter: void sendInputEvent(android.view.InputEvent,int)>(r1, i0);

        return;
    }

    public void onMotionEvent(android.view.MotionEvent, android.view.MotionEvent, int)
    {
        com.android.server.accessibility.AccessibilityInputFilter r0;
        android.view.MotionEvent r1, r2;
        int i0;

        r0 := @this: com.android.server.accessibility.AccessibilityInputFilter;

        r1 := @parameter0: android.view.MotionEvent;

        r2 := @parameter1: android.view.MotionEvent;

        i0 := @parameter2: int;

        virtualinvoke r0.<com.android.server.accessibility.AccessibilityInputFilter: void sendInputEvent(android.view.InputEvent,int)>(r1, i0);

        return;
    }

    public void onUninstalled()
    {
        com.android.server.accessibility.AccessibilityInputFilter r0;

        r0 := @this: com.android.server.accessibility.AccessibilityInputFilter;

        r0.<com.android.server.accessibility.AccessibilityInputFilter: boolean mInstalled> = 0;

        specialinvoke r0.<com.android.server.accessibility.AccessibilityInputFilter: void disableFeatures()>();

        specialinvoke r0.<android.view.InputFilter: void onUninstalled()>();

        return;
    }

    void resetStreamState()
    {
        com.android.server.accessibility.AccessibilityInputFilter r0;
        com.android.server.accessibility.AccessibilityInputFilter$EventStreamState r1, r2, r3;

        r0 := @this: com.android.server.accessibility.AccessibilityInputFilter;

        r1 = r0.<com.android.server.accessibility.AccessibilityInputFilter: com.android.server.accessibility.AccessibilityInputFilter$EventStreamState mTouchScreenStreamState>;

        if r1 == null goto label1;

        virtualinvoke r1.<com.android.server.accessibility.AccessibilityInputFilter$EventStreamState: void reset()>();

     label1:
        r2 = r0.<com.android.server.accessibility.AccessibilityInputFilter: com.android.server.accessibility.AccessibilityInputFilter$EventStreamState mMouseStreamState>;

        if r2 == null goto label2;

        virtualinvoke r2.<com.android.server.accessibility.AccessibilityInputFilter$EventStreamState: void reset()>();

     label2:
        r3 = r0.<com.android.server.accessibility.AccessibilityInputFilter: com.android.server.accessibility.AccessibilityInputFilter$EventStreamState mKeyboardStreamState>;

        if r3 == null goto label3;

        virtualinvoke r3.<com.android.server.accessibility.AccessibilityInputFilter$EventStreamState: void reset()>();

     label3:
        return;
    }

    public void setGestureDetectionPassthroughRegion(int, android.graphics.Region)
    {
        com.android.server.accessibility.AccessibilityInputFilter r0;
        int i0;
        android.graphics.Region r1;
        android.util.SparseArray $r2, $r3;
        boolean $z0;
        java.lang.Object $r4;
        com.android.server.accessibility.gestures.TouchExplorer $r5;

        r0 := @this: com.android.server.accessibility.AccessibilityInputFilter;

        i0 := @parameter0: int;

        r1 := @parameter1: android.graphics.Region;

        if r1 == null goto label1;

        $r2 = r0.<com.android.server.accessibility.AccessibilityInputFilter: android.util.SparseArray mTouchExplorer>;

        $z0 = virtualinvoke $r2.<android.util.SparseArray: boolean contains(int)>(i0);

        if $z0 == 0 goto label1;

        $r3 = r0.<com.android.server.accessibility.AccessibilityInputFilter: android.util.SparseArray mTouchExplorer>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        $r5 = (com.android.server.accessibility.gestures.TouchExplorer) $r4;

        virtualinvoke $r5.<com.android.server.accessibility.gestures.TouchExplorer: void setGestureDetectionPassthroughRegion(android.graphics.Region)>(r1);

     label1:
        return;
    }

    public void setNext(com.android.server.accessibility.EventStreamTransformation)
    {
        com.android.server.accessibility.AccessibilityInputFilter r0;
        com.android.server.accessibility.EventStreamTransformation r1;

        r0 := @this: com.android.server.accessibility.AccessibilityInputFilter;

        r1 := @parameter0: com.android.server.accessibility.EventStreamTransformation;

        return;
    }

    public void setTouchExplorationPassthroughRegion(int, android.graphics.Region)
    {
        com.android.server.accessibility.AccessibilityInputFilter r0;
        int i0;
        android.graphics.Region r1;
        android.util.SparseArray $r2, $r3;
        boolean $z0;
        java.lang.Object $r4;
        com.android.server.accessibility.gestures.TouchExplorer $r5;

        r0 := @this: com.android.server.accessibility.AccessibilityInputFilter;

        i0 := @parameter0: int;

        r1 := @parameter1: android.graphics.Region;

        if r1 == null goto label1;

        $r2 = r0.<com.android.server.accessibility.AccessibilityInputFilter: android.util.SparseArray mTouchExplorer>;

        $z0 = virtualinvoke $r2.<android.util.SparseArray: boolean contains(int)>(i0);

        if $z0 == 0 goto label1;

        $r3 = r0.<com.android.server.accessibility.AccessibilityInputFilter: android.util.SparseArray mTouchExplorer>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        $r5 = (com.android.server.accessibility.gestures.TouchExplorer) $r4;

        virtualinvoke $r5.<com.android.server.accessibility.gestures.TouchExplorer: void setTouchExplorationPassthroughRegion(android.graphics.Region)>(r1);

     label1:
        return;
    }

    void setUserAndEnabledFeatures(int, int)
    {
        com.android.server.accessibility.AccessibilityInputFilter r0;
        int i0, i1, $i2, $i3;
        boolean $z0, $z1;

        r0 := @this: com.android.server.accessibility.AccessibilityInputFilter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = r0.<com.android.server.accessibility.AccessibilityInputFilter: int mEnabledFeatures>;

        if $i2 != i1 goto label1;

        $i3 = r0.<com.android.server.accessibility.AccessibilityInputFilter: int mUserId>;

        if $i3 != i0 goto label1;

        return;

     label1:
        $z0 = r0.<com.android.server.accessibility.AccessibilityInputFilter: boolean mInstalled>;

        if $z0 == 0 goto label2;

        specialinvoke r0.<com.android.server.accessibility.AccessibilityInputFilter: void disableFeatures()>();

     label2:
        r0.<com.android.server.accessibility.AccessibilityInputFilter: int mUserId> = i0;

        r0.<com.android.server.accessibility.AccessibilityInputFilter: int mEnabledFeatures> = i1;

        $z1 = r0.<com.android.server.accessibility.AccessibilityInputFilter: boolean mInstalled>;

        if $z1 == 0 goto label3;

        specialinvoke r0.<com.android.server.accessibility.AccessibilityInputFilter: void enableFeatures()>();

     label3:
        return;
    }
}
