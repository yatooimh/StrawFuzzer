final class com.android.server.accessibility.AccessibilityManagerService$InteractionBridge extends java.lang.Object
{
    private final android.content.ComponentName COMPONENT_NAME;
    private final android.view.accessibility.AccessibilityInteractionClient mClient;
    private final int mConnectionId;
    private final android.view.Display mDefaultDisplay;
    final com.android.server.accessibility.AccessibilityManagerService this$0;

    public void <init>(com.android.server.accessibility.AccessibilityManagerService)
    {
        com.android.server.accessibility.AccessibilityManagerService$InteractionBridge r0;
        com.android.server.accessibility.AccessibilityUserState r2;
        android.content.ComponentName $r3, $r7;
        android.accessibilityservice.AccessibilityServiceInfo $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        com.android.server.accessibility.AccessibilityManagerService$InteractionBridge$1 $r5;
        android.content.Context $r6, $r16;
        com.android.server.accessibility.AccessibilityManagerService$MainHandler $r8;
        java.lang.Object $r9, $r17, r23;
        com.android.server.accessibility.AccessibilitySecurityPolicy $r10;
        com.android.server.wm.WindowManagerInternal $r11;
        com.android.server.accessibility.SystemActionPerformer $r12;
        com.android.server.accessibility.AccessibilityWindowManager $r13;
        com.android.server.wm.ActivityTaskManagerInternal $r14;
        android.view.accessibility.AccessibilityInteractionClient $r15;
        android.hardware.display.DisplayManager $r18;
        android.view.Display $r19;
        java.lang.Throwable $r20, $r21, r25;
        com.android.server.accessibility.AccessibilityManagerService r22;

        r0 := @this: com.android.server.accessibility.AccessibilityManagerService$InteractionBridge;

        r22 := @parameter0: com.android.server.accessibility.AccessibilityManagerService;

        r0.<com.android.server.accessibility.AccessibilityManagerService$InteractionBridge: com.android.server.accessibility.AccessibilityManagerService this$0> = r22;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new android.content.ComponentName;

        specialinvoke $r3.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>("com.android.server.accessibility", "InteractionBridge");

        r0.<com.android.server.accessibility.AccessibilityManagerService$InteractionBridge: android.content.ComponentName COMPONENT_NAME> = $r3;

        $r4 = new android.accessibilityservice.AccessibilityServiceInfo;

        specialinvoke $r4.<android.accessibilityservice.AccessibilityServiceInfo: void <init>()>();

        virtualinvoke $r4.<android.accessibilityservice.AccessibilityServiceInfo: void setCapabilities(int)>(1);

        $i0 = $r4.<android.accessibilityservice.AccessibilityServiceInfo: int flags>;

        $i1 = $i0 | 64;

        $r4.<android.accessibilityservice.AccessibilityServiceInfo: int flags> = $i1;

        $i2 = $r4.<android.accessibilityservice.AccessibilityServiceInfo: int flags>;

        $i3 = $i2 | 2;

        $r4.<android.accessibilityservice.AccessibilityServiceInfo: int flags> = $i3;

        r23 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: java.lang.Object access$100(com.android.server.accessibility.AccessibilityManagerService)>(r22);

        entermonitor r23;

     label1:
        r2 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: com.android.server.accessibility.AccessibilityUserState access$300(com.android.server.accessibility.AccessibilityManagerService)>(r22);

        exitmonitor r23;

     label2:
        $r5 = new com.android.server.accessibility.AccessibilityManagerService$InteractionBridge$1;

        $r6 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: android.content.Context access$1300(com.android.server.accessibility.AccessibilityManagerService)>(r22);

        $r7 = r0.<com.android.server.accessibility.AccessibilityManagerService$InteractionBridge: android.content.ComponentName COMPONENT_NAME>;

        $i4 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: int access$1608()>();

        $r8 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: com.android.server.accessibility.AccessibilityManagerService$MainHandler access$1700(com.android.server.accessibility.AccessibilityManagerService)>(r22);

        $r9 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: java.lang.Object access$100(com.android.server.accessibility.AccessibilityManagerService)>(r22);

        $r10 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: com.android.server.accessibility.AccessibilitySecurityPolicy access$1800(com.android.server.accessibility.AccessibilityManagerService)>(r22);

        $r11 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: com.android.server.wm.WindowManagerInternal access$1900(com.android.server.accessibility.AccessibilityManagerService)>(r22);

        $r12 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: com.android.server.accessibility.SystemActionPerformer access$2000(com.android.server.accessibility.AccessibilityManagerService)>(r22);

        $r13 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: com.android.server.accessibility.AccessibilityWindowManager access$2100(com.android.server.accessibility.AccessibilityManagerService)>(r22);

        $r14 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: com.android.server.wm.ActivityTaskManagerInternal access$2200(com.android.server.accessibility.AccessibilityManagerService)>(r22);

        specialinvoke $r5.<com.android.server.accessibility.AccessibilityManagerService$InteractionBridge$1: void <init>(com.android.server.accessibility.AccessibilityManagerService$InteractionBridge,com.android.server.accessibility.AccessibilityUserState,android.content.Context,android.content.ComponentName,android.accessibilityservice.AccessibilityServiceInfo,int,android.os.Handler,java.lang.Object,com.android.server.accessibility.AccessibilitySecurityPolicy,com.android.server.accessibility.AbstractAccessibilityServiceConnection$SystemSupport,com.android.server.wm.WindowManagerInternal,com.android.server.accessibility.SystemActionPerformer,com.android.server.accessibility.AccessibilityWindowManager,com.android.server.wm.ActivityTaskManagerInternal,com.android.server.accessibility.AccessibilityManagerService)>(r0, r2, $r6, $r7, $r4, $i4, $r8, $r9, $r10, r22, $r11, $r12, $r13, $r14, r22);

        $i5 = $r5.<com.android.server.accessibility.AccessibilityServiceConnection: int mId>;

        r0.<com.android.server.accessibility.AccessibilityManagerService$InteractionBridge: int mConnectionId> = $i5;

        $r15 = staticinvoke <android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityInteractionClient getInstance()>();

        r0.<com.android.server.accessibility.AccessibilityManagerService$InteractionBridge: android.view.accessibility.AccessibilityInteractionClient mClient> = $r15;

        $i6 = r0.<com.android.server.accessibility.AccessibilityManagerService$InteractionBridge: int mConnectionId>;

        staticinvoke <android.view.accessibility.AccessibilityInteractionClient: void addConnection(int,android.accessibilityservice.IAccessibilityServiceConnection)>($i6, $r5);

        $r16 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: android.content.Context access$1300(com.android.server.accessibility.AccessibilityManagerService)>(r22);

        $r17 = virtualinvoke $r16.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("display");

        $r18 = (android.hardware.display.DisplayManager) $r17;

        $r19 = virtualinvoke $r18.<android.hardware.display.DisplayManager: android.view.Display getDisplay(int)>(0);

        r0.<com.android.server.accessibility.AccessibilityManagerService$InteractionBridge: android.view.Display mDefaultDisplay> = $r19;

        return;

     label3:
        $r21 := @caughtexception;

        r25 = $r21;

     label4:
        exitmonitor r23;

     label5:
        throw r25;

     label6:
        $r20 := @caughtexception;

        r25 = $r20;

        goto label4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    private android.view.accessibility.AccessibilityNodeInfo getAccessibilityFocusNotLocked()
    {
        com.android.server.accessibility.AccessibilityManagerService$InteractionBridge r0;
        java.lang.Object r1;
        int i0;
        com.android.server.accessibility.AccessibilityManagerService $r3, $r4;
        com.android.server.accessibility.AccessibilityWindowManager $r5;
        android.view.accessibility.AccessibilityNodeInfo $r6;
        java.lang.Throwable $r7;

        r0 := @this: com.android.server.accessibility.AccessibilityManagerService$InteractionBridge;

        $r3 = r0.<com.android.server.accessibility.AccessibilityManagerService$InteractionBridge: com.android.server.accessibility.AccessibilityManagerService this$0>;

        r1 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: java.lang.Object access$100(com.android.server.accessibility.AccessibilityManagerService)>($r3);

        entermonitor r1;

     label1:
        $r4 = r0.<com.android.server.accessibility.AccessibilityManagerService$InteractionBridge: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $r5 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: com.android.server.accessibility.AccessibilityWindowManager access$2100(com.android.server.accessibility.AccessibilityManagerService)>($r4);

        i0 = virtualinvoke $r5.<com.android.server.accessibility.AccessibilityWindowManager: int getFocusedWindowId(int)>(2);

     label2:
        if i0 != -1 goto label5;

     label3:
        exitmonitor r1;

     label4:
        return null;

     label5:
        exitmonitor r1;

     label6:
        $r6 = specialinvoke r0.<com.android.server.accessibility.AccessibilityManagerService$InteractionBridge: android.view.accessibility.AccessibilityNodeInfo getAccessibilityFocusNotLocked(int)>(i0);

        return $r6;

     label7:
        $r7 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    private android.view.accessibility.AccessibilityNodeInfo getAccessibilityFocusNotLocked(int)
    {
        com.android.server.accessibility.AccessibilityManagerService$InteractionBridge r0;
        int i0, $i2;
        long $l1;
        android.view.accessibility.AccessibilityInteractionClient $r1;
        android.view.accessibility.AccessibilityNodeInfo $r2;

        r0 := @this: com.android.server.accessibility.AccessibilityManagerService$InteractionBridge;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.accessibility.AccessibilityManagerService$InteractionBridge: android.view.accessibility.AccessibilityInteractionClient mClient>;

        $i2 = r0.<com.android.server.accessibility.AccessibilityManagerService$InteractionBridge: int mConnectionId>;

        $l1 = <android.view.accessibility.AccessibilityNodeInfo: long ROOT_NODE_ID>;

        $r2 = virtualinvoke $r1.<android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityNodeInfo findFocus(int,int,long,int)>($i2, i0, $l1, 2);

        return $r2;
    }

    boolean getAccessibilityFocusClickPointInScreen(android.graphics.Point)
    {
        com.android.server.accessibility.AccessibilityManagerService$InteractionBridge r0, $r3;
        android.graphics.Point r1;
        com.android.server.accessibility.AccessibilityManagerService $r2;
        boolean $z0;

        r0 := @this: com.android.server.accessibility.AccessibilityManagerService$InteractionBridge;

        r1 := @parameter0: android.graphics.Point;

        $r2 = r0.<com.android.server.accessibility.AccessibilityManagerService$InteractionBridge: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $r3 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: com.android.server.accessibility.AccessibilityManagerService$InteractionBridge access$2300(com.android.server.accessibility.AccessibilityManagerService)>($r2);

        $z0 = virtualinvoke $r3.<com.android.server.accessibility.AccessibilityManagerService$InteractionBridge: boolean getAccessibilityFocusClickPointInScreenNotLocked(android.graphics.Point)>(r1);

        return $z0;
    }

    public boolean getAccessibilityFocusClickPointInScreenNotLocked(android.graphics.Point)
    {
        com.android.server.accessibility.AccessibilityManagerService$InteractionBridge r0;
        java.lang.Object r1;
        android.graphics.Rect r2, r13;
        com.android.server.accessibility.AccessibilityManagerService $r3, $r4, $r5, $r6, $r12, $r14;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        android.view.Display $r7;
        boolean $z1, $z2, $z3;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        java.lang.Throwable $r8;
        android.graphics.Point r9, r15;
        android.view.accessibility.AccessibilityNodeInfo r10;
        android.view.MagnificationSpec r11;

        r0 := @this: com.android.server.accessibility.AccessibilityManagerService$InteractionBridge;

        r9 := @parameter0: android.graphics.Point;

        r10 = specialinvoke r0.<com.android.server.accessibility.AccessibilityManagerService$InteractionBridge: android.view.accessibility.AccessibilityNodeInfo getAccessibilityFocusNotLocked()>();

        if r10 != null goto label01;

        return 0;

     label01:
        $r3 = r0.<com.android.server.accessibility.AccessibilityManagerService$InteractionBridge: com.android.server.accessibility.AccessibilityManagerService this$0>;

        r1 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: java.lang.Object access$100(com.android.server.accessibility.AccessibilityManagerService)>($r3);

        entermonitor r1;

     label02:
        $r4 = r0.<com.android.server.accessibility.AccessibilityManagerService$InteractionBridge: com.android.server.accessibility.AccessibilityManagerService this$0>;

        r2 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: android.graphics.Rect access$2400(com.android.server.accessibility.AccessibilityManagerService)>($r4);

        virtualinvoke r10.<android.view.accessibility.AccessibilityNodeInfo: void getBoundsInScreen(android.graphics.Rect)>(r2);

        $r5 = r0.<com.android.server.accessibility.AccessibilityManagerService$InteractionBridge: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $i0 = virtualinvoke r10.<android.view.accessibility.AccessibilityNodeInfo: int getWindowId()>();

        r11 = virtualinvoke $r5.<com.android.server.accessibility.AccessibilityManagerService: android.view.MagnificationSpec getCompatibleMagnificationSpecLocked(int)>($i0);

     label03:
        if r11 == null goto label05;

     label04:
        $z2 = virtualinvoke r11.<android.view.MagnificationSpec: boolean isNop()>();

        if $z2 != 0 goto label05;

        $f0 = r11.<android.view.MagnificationSpec: float offsetX>;

        $f1 = neg $f0;

        $i6 = (int) $f1;

        $f2 = r11.<android.view.MagnificationSpec: float offsetY>;

        $f3 = neg $f2;

        $i5 = (int) $f3;

        virtualinvoke r2.<android.graphics.Rect: void offset(int,int)>($i6, $i5);

        $f4 = r11.<android.view.MagnificationSpec: float scale>;

        $f5 = 1.0F / $f4;

        virtualinvoke r2.<android.graphics.Rect: void scale(float)>($f5);

     label05:
        $r12 = r0.<com.android.server.accessibility.AccessibilityManagerService$InteractionBridge: com.android.server.accessibility.AccessibilityManagerService this$0>;

        r13 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: android.graphics.Rect access$2500(com.android.server.accessibility.AccessibilityManagerService)>($r12);

        $r14 = r0.<com.android.server.accessibility.AccessibilityManagerService$InteractionBridge: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $i7 = virtualinvoke r10.<android.view.accessibility.AccessibilityNodeInfo: int getWindowId()>();

        virtualinvoke $r14.<com.android.server.accessibility.AccessibilityManagerService: boolean getWindowBounds(int,android.graphics.Rect)>($i7, r13);

        $z3 = virtualinvoke r2.<android.graphics.Rect: boolean intersect(android.graphics.Rect)>(r13);

        if $z3 != 0 goto label07;

        exitmonitor r1;

     label06:
        return 0;

     label07:
        $r6 = r0.<com.android.server.accessibility.AccessibilityManagerService$InteractionBridge: com.android.server.accessibility.AccessibilityManagerService this$0>;

        r15 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: android.graphics.Point access$2600(com.android.server.accessibility.AccessibilityManagerService)>($r6);

        $r7 = r0.<com.android.server.accessibility.AccessibilityManagerService$InteractionBridge: android.view.Display mDefaultDisplay>;

        virtualinvoke $r7.<android.view.Display: void getRealSize(android.graphics.Point)>(r15);

        $i2 = r15.<android.graphics.Point: int x>;

        $i1 = r15.<android.graphics.Point: int y>;

        $z1 = virtualinvoke r2.<android.graphics.Rect: boolean intersect(int,int,int,int)>(0, 0, $i2, $i1);

        if $z1 != 0 goto label09;

        exitmonitor r1;

     label08:
        return 0;

     label09:
        $i3 = virtualinvoke r2.<android.graphics.Rect: int centerX()>();

        $i4 = virtualinvoke r2.<android.graphics.Rect: int centerY()>();

        virtualinvoke r9.<android.graphics.Point: void set(int,int)>($i3, $i4);

        exitmonitor r1;

     label10:
        return 1;

     label11:
        $r8 := @caughtexception;

     label12:
        exitmonitor r1;

     label13:
        throw $r8;

        catch java.lang.Throwable from label02 to label03 with label11;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    public boolean performActionOnAccessibilityFocusedItemNotLocked(android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction)
    {
        com.android.server.accessibility.AccessibilityManagerService$InteractionBridge r0;
        android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction r1;
        android.view.accessibility.AccessibilityNodeInfo r2;
        java.util.List $r3;
        boolean $z0, $z1;
        int $i0;

        r0 := @this: com.android.server.accessibility.AccessibilityManagerService$InteractionBridge;

        r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction;

        r2 = specialinvoke r0.<com.android.server.accessibility.AccessibilityManagerService$InteractionBridge: android.view.accessibility.AccessibilityNodeInfo getAccessibilityFocusNotLocked()>();

        if r2 == null goto label2;

        $r3 = virtualinvoke r2.<android.view.accessibility.AccessibilityNodeInfo: java.util.List getActionList()>();

        $z0 = interfaceinvoke $r3.<java.util.List: boolean contains(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        goto label2;

     label1:
        $i0 = virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction: int getId()>();

        $z1 = virtualinvoke r2.<android.view.accessibility.AccessibilityNodeInfo: boolean performAction(int)>($i0);

        return $z1;

     label2:
        return 0;
    }
}
