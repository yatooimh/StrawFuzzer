class com.android.server.accessibility.AccessibilityServiceConnection extends com.android.server.accessibility.AbstractAccessibilityServiceConnection
{
    private static final java.lang.String LOG_TAG;
    final com.android.server.wm.ActivityTaskManagerInternal mActivityTaskManagerService;
    final android.content.Intent mIntent;
    private final android.os.Handler mMainHandler;
    final java.lang.ref.WeakReference mUserStateWeakReference;

    void <init>(com.android.server.accessibility.AccessibilityUserState, android.content.Context, android.content.ComponentName, android.accessibilityservice.AccessibilityServiceInfo, int, android.os.Handler, java.lang.Object, com.android.server.accessibility.AccessibilitySecurityPolicy, com.android.server.accessibility.AbstractAccessibilityServiceConnection$SystemSupport, com.android.server.wm.WindowManagerInternal, com.android.server.accessibility.SystemActionPerformer, com.android.server.accessibility.AccessibilityWindowManager, com.android.server.wm.ActivityTaskManagerInternal)
    {
        com.android.server.accessibility.AccessibilityServiceConnection r0;
        int i0;
        android.os.Handler r1;
        java.lang.Object r2;
        com.android.server.accessibility.AccessibilitySecurityPolicy r3;
        com.android.server.accessibility.AbstractAccessibilityServiceConnection$SystemSupport r4, r22;
        com.android.server.wm.WindowManagerInternal r5;
        com.android.server.accessibility.SystemActionPerformer r6;
        com.android.server.accessibility.AccessibilityWindowManager r7;
        com.android.server.wm.ActivityTaskManagerInternal r8;
        long l1;
        java.lang.ref.WeakReference $r9;
        android.content.Intent $r10, r20, r21, r24;
        android.content.ComponentName $r11, r18;
        android.app.PendingIntent $r13;
        java.lang.Throwable $r15;
        com.android.server.accessibility.AccessibilityUserState r16;
        android.content.Context r17, r23;
        android.accessibilityservice.AccessibilityServiceInfo r19;

        r0 := @this: com.android.server.accessibility.AccessibilityServiceConnection;

        r16 := @parameter0: com.android.server.accessibility.AccessibilityUserState;

        r17 := @parameter1: android.content.Context;

        r18 := @parameter2: android.content.ComponentName;

        r19 := @parameter3: android.accessibilityservice.AccessibilityServiceInfo;

        i0 := @parameter4: int;

        r1 := @parameter5: android.os.Handler;

        r2 := @parameter6: java.lang.Object;

        r3 := @parameter7: com.android.server.accessibility.AccessibilitySecurityPolicy;

        r4 := @parameter8: com.android.server.accessibility.AbstractAccessibilityServiceConnection$SystemSupport;

        r5 := @parameter9: com.android.server.wm.WindowManagerInternal;

        r6 := @parameter10: com.android.server.accessibility.SystemActionPerformer;

        r7 := @parameter11: com.android.server.accessibility.AccessibilityWindowManager;

        r8 := @parameter12: com.android.server.wm.ActivityTaskManagerInternal;

        specialinvoke r0.<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void <init>(android.content.Context,android.content.ComponentName,android.accessibilityservice.AccessibilityServiceInfo,int,android.os.Handler,java.lang.Object,com.android.server.accessibility.AccessibilitySecurityPolicy,com.android.server.accessibility.AbstractAccessibilityServiceConnection$SystemSupport,com.android.server.wm.WindowManagerInternal,com.android.server.accessibility.SystemActionPerformer,com.android.server.accessibility.AccessibilityWindowManager)>(r17, r18, r19, i0, r1, r2, r3, r4, r5, r6, r7);

        $r9 = new java.lang.ref.WeakReference;

        specialinvoke $r9.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r16);

        r0.<com.android.server.accessibility.AccessibilityServiceConnection: java.lang.ref.WeakReference mUserStateWeakReference> = $r9;

        $r10 = new android.content.Intent;

        specialinvoke $r10.<android.content.Intent: void <init>()>();

        $r11 = r0.<com.android.server.accessibility.AccessibilityServiceConnection: android.content.ComponentName mComponentName>;

        r20 = virtualinvoke $r10.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>($r11);

        r0.<com.android.server.accessibility.AccessibilityServiceConnection: android.content.Intent mIntent> = r20;

        r0.<com.android.server.accessibility.AccessibilityServiceConnection: android.os.Handler mMainHandler> = r1;

        virtualinvoke r20.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.intent.extra.client_label", 17039542);

        r0.<com.android.server.accessibility.AccessibilityServiceConnection: com.android.server.wm.ActivityTaskManagerInternal mActivityTaskManagerService> = r8;

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        r21 = r0.<com.android.server.accessibility.AccessibilityServiceConnection: android.content.Intent mIntent>;

        r22 = r0.<com.android.server.accessibility.AccessibilityServiceConnection: com.android.server.accessibility.AbstractAccessibilityServiceConnection$SystemSupport mSystemSupport>;

        r23 = r0.<com.android.server.accessibility.AccessibilityServiceConnection: android.content.Context mContext>;

        r24 = new android.content.Intent;

        specialinvoke r24.<android.content.Intent: void <init>(java.lang.String)>("android.settings.ACCESSIBILITY_SETTINGS");

        $r13 = interfaceinvoke r22.<com.android.server.accessibility.AbstractAccessibilityServiceConnection$SystemSupport: android.app.PendingIntent getPendingIntentActivity(android.content.Context,int,android.content.Intent,int)>(r23, 0, r24, 67108864);

        virtualinvoke r21.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("android.intent.extra.client_intent", $r13);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return;

     label3:
        $r15 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r15;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private void initializeService()
    {
        com.android.server.accessibility.AccessibilityServiceConnection r0;
        java.util.Set r1, r2, $r12;
        java.lang.ref.WeakReference $r3;
        java.lang.Object $r4, $r10, r23;
        android.content.ComponentName $r5, $r6, $r7, $r13, $r15;
        boolean $z0, $z3, $z4;
        android.accessibilityservice.AccessibilityServiceInfo $r8;
        android.util.SparseArray $r9;
        int $i0;
        android.os.IBinder $r11;
        com.android.server.accessibility.AbstractAccessibilityServiceConnection$SystemSupport $r14;
        java.lang.Throwable $r16;
        android.os.RemoteException $r17;
        java.lang.StringBuilder $r18;
        java.lang.String $r21;
        android.accessibilityservice.IAccessibilityServiceClient r22;
        com.android.server.accessibility.AccessibilityUserState r24;

        r0 := @this: com.android.server.accessibility.AccessibilityServiceConnection;

        r22 = null;

        r23 = r0.<com.android.server.accessibility.AccessibilityServiceConnection: java.lang.Object mLock>;

        entermonitor r23;

     label01:
        $r3 = r0.<com.android.server.accessibility.AccessibilityServiceConnection: java.lang.ref.WeakReference mUserStateWeakReference>;

        $r4 = virtualinvoke $r3.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r24 = (com.android.server.accessibility.AccessibilityUserState) $r4;

     label02:
        if r24 != null goto label05;

     label03:
        exitmonitor r23;

     label04:
        return;

     label05:
        r1 = virtualinvoke r24.<com.android.server.accessibility.AccessibilityUserState: java.util.Set getBindingServicesLocked()>();

        r2 = virtualinvoke r24.<com.android.server.accessibility.AccessibilityUserState: java.util.Set getCrashedServicesLocked()>();

        $r5 = r0.<com.android.server.accessibility.AccessibilityServiceConnection: android.content.ComponentName mComponentName>;

        $z0 = interfaceinvoke r1.<java.util.Set: boolean contains(java.lang.Object)>($r5);

        if $z0 != 0 goto label07;

     label06:
        $r15 = r0.<com.android.server.accessibility.AccessibilityServiceConnection: android.content.ComponentName mComponentName>;

        $z4 = interfaceinvoke r2.<java.util.Set: boolean contains(java.lang.Object)>($r15);

        if $z4 == 0 goto label08;

     label07:
        $r6 = r0.<com.android.server.accessibility.AccessibilityServiceConnection: android.content.ComponentName mComponentName>;

        interfaceinvoke r1.<java.util.Set: boolean remove(java.lang.Object)>($r6);

        $r7 = r0.<com.android.server.accessibility.AccessibilityServiceConnection: android.content.ComponentName mComponentName>;

        interfaceinvoke r2.<java.util.Set: boolean remove(java.lang.Object)>($r7);

        $r8 = r0.<com.android.server.accessibility.AccessibilityServiceConnection: android.accessibilityservice.AccessibilityServiceInfo mAccessibilityServiceInfo>;

        $r8.<android.accessibilityservice.AccessibilityServiceInfo: boolean crashed> = 0;

        r22 = r0.<com.android.server.accessibility.AccessibilityServiceConnection: android.accessibilityservice.IAccessibilityServiceClient mServiceInterface>;

     label08:
        if r22 == null goto label11;

     label09:
        $r12 = virtualinvoke r24.<com.android.server.accessibility.AccessibilityUserState: java.util.Set getEnabledServicesLocked()>();

        $r13 = r0.<com.android.server.accessibility.AccessibilityServiceConnection: android.content.ComponentName mComponentName>;

        $z3 = interfaceinvoke $r12.<java.util.Set: boolean contains(java.lang.Object)>($r13);

        if $z3 != 0 goto label11;

        $r14 = r0.<com.android.server.accessibility.AccessibilityServiceConnection: com.android.server.accessibility.AbstractAccessibilityServiceConnection$SystemSupport mSystemSupport>;

        interfaceinvoke $r14.<com.android.server.accessibility.AbstractAccessibilityServiceConnection$SystemSupport: void onClientChangeLocked(boolean)>(0);

        exitmonitor r23;

     label10:
        return;

     label11:
        exitmonitor r23;

     label12:
        if r22 != null goto label13;

        virtualinvoke r0.<com.android.server.accessibility.AccessibilityServiceConnection: void binderDied()>();

        return;

     label13:
        $i0 = r0.<com.android.server.accessibility.AccessibilityServiceConnection: int mId>;

        $r9 = r0.<com.android.server.accessibility.AccessibilityServiceConnection: android.util.SparseArray mOverlayWindowTokens>;

        $r10 = virtualinvoke $r9.<android.util.SparseArray: java.lang.Object get(int)>(0);

        $r11 = (android.os.IBinder) $r10;

        interfaceinvoke r22.<android.accessibilityservice.IAccessibilityServiceClient: void init(android.accessibilityservice.IAccessibilityServiceConnection,int,android.os.IBinder)>(r0, $i0, $r11);

     label14:
        goto label16;

     label15:
        $r17 := @caughtexception;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error while setting connection for service: ");

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r22);

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("AccessibilityServiceConnection", $r21, $r17);

        virtualinvoke r0.<com.android.server.accessibility.AccessibilityServiceConnection: void binderDied()>();

     label16:
        return;

     label17:
        $r16 := @caughtexception;

     label18:
        exitmonitor r23;

     label19:
        throw $r16;

        catch java.lang.Throwable from label01 to label02 with label17;
        catch java.lang.Throwable from label03 to label04 with label17;
        catch java.lang.Throwable from label05 to label06 with label17;
        catch java.lang.Throwable from label06 to label07 with label17;
        catch java.lang.Throwable from label07 to label08 with label17;
        catch java.lang.Throwable from label09 to label10 with label17;
        catch java.lang.Throwable from label11 to label12 with label17;
        catch android.os.RemoteException from label13 to label14 with label15;
        catch java.lang.Throwable from label18 to label19 with label17;
    }

    public static void lambda$ASP9bmSvpeD7ZE_uJ8sm-9hCwiU(com.android.server.accessibility.AccessibilityServiceConnection)
    {
        com.android.server.accessibility.AccessibilityServiceConnection r0;

        r0 := @parameter0: com.android.server.accessibility.AccessibilityServiceConnection;

        specialinvoke r0.<com.android.server.accessibility.AccessibilityServiceConnection: void initializeService()>();

        return;
    }

    public void bindLocked()
    {
        com.android.server.accessibility.AccessibilityServiceConnection r0;
        long l0;
        android.content.Context r1;
        android.content.Intent r2;
        android.os.UserHandle r3;
        java.lang.ref.WeakReference $r4;
        java.lang.Object $r5;
        boolean $z0, $z1;
        android.os.IBinder $r6;
        int $i1, i2, $i3, $i4;
        java.util.Set $r7;
        android.content.ComponentName $r8, $r12;
        java.lang.Throwable $r9;
        com.android.server.accessibility.AccessibilityUserState r10;
        com.android.server.wm.ActivityTaskManagerInternal $r11;
        java.lang.String $r13;
        android.accessibilityservice.AccessibilityServiceInfo $r14;
        android.content.pm.ResolveInfo $r15;
        android.content.pm.ServiceInfo $r16;
        android.content.pm.ApplicationInfo $r17;

        r0 := @this: com.android.server.accessibility.AccessibilityServiceConnection;

        $r4 = r0.<com.android.server.accessibility.AccessibilityServiceConnection: java.lang.ref.WeakReference mUserStateWeakReference>;

        $r5 = virtualinvoke $r4.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r10 = (com.android.server.accessibility.AccessibilityUserState) $r5;

        if r10 != null goto label1;

        return;

     label1:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        i2 = 34607105;

     label2:
        $z0 = virtualinvoke r10.<com.android.server.accessibility.AccessibilityUserState: boolean getBindInstantServiceAllowedLocked()>();

        if $z0 == 0 goto label4;

     label3:
        i2 = 34607105 | 4194304;

     label4:
        $r6 = r0.<com.android.server.accessibility.AccessibilityServiceConnection: android.os.IBinder mService>;

        if $r6 != null goto label5;

        r1 = r0.<com.android.server.accessibility.AccessibilityServiceConnection: android.content.Context mContext>;

        r2 = r0.<com.android.server.accessibility.AccessibilityServiceConnection: android.content.Intent mIntent>;

        r3 = new android.os.UserHandle;

        $i1 = r10.<com.android.server.accessibility.AccessibilityUserState: int mUserId>;

        specialinvoke r3.<android.os.UserHandle: void <init>(int)>($i1);

        $z1 = virtualinvoke r1.<android.content.Context: boolean bindServiceAsUser(android.content.Intent,android.content.ServiceConnection,int,android.os.UserHandle)>(r2, r0, i2, r3);

        if $z1 == 0 goto label5;

        $r7 = virtualinvoke r10.<com.android.server.accessibility.AccessibilityUserState: java.util.Set getBindingServicesLocked()>();

        $r8 = r0.<com.android.server.accessibility.AccessibilityServiceConnection: android.content.ComponentName mComponentName>;

        interfaceinvoke $r7.<java.util.Set: boolean add(java.lang.Object)>($r8);

     label5:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        $r11 = r0.<com.android.server.accessibility.AccessibilityServiceConnection: com.android.server.wm.ActivityTaskManagerInternal mActivityTaskManagerService>;

        $r12 = r0.<com.android.server.accessibility.AccessibilityServiceConnection: android.content.ComponentName mComponentName>;

        $r13 = virtualinvoke $r12.<android.content.ComponentName: java.lang.String flattenToString()>();

        $r14 = r0.<com.android.server.accessibility.AccessibilityServiceConnection: android.accessibilityservice.AccessibilityServiceInfo mAccessibilityServiceInfo>;

        $r15 = virtualinvoke $r14.<android.accessibilityservice.AccessibilityServiceInfo: android.content.pm.ResolveInfo getResolveInfo()>();

        $r16 = $r15.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $r17 = $r16.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i3 = $r17.<android.content.pm.ApplicationInfo: int uid>;

        $i4 = r10.<com.android.server.accessibility.AccessibilityUserState: int mUserId>;

        virtualinvoke $r11.<com.android.server.wm.ActivityTaskManagerInternal: void setAllowAppSwitches(java.lang.String,int,int)>($r13, $i3, $i4);

        return;

     label6:
        $r9 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r9;

        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public void binderDied()
    {
        com.android.server.accessibility.AccessibilityServiceConnection r0;
        java.lang.Object r1, $r4;
        boolean $z0;
        android.accessibilityservice.AccessibilityServiceInfo $r2;
        java.lang.ref.WeakReference $r3;
        com.android.server.accessibility.AbstractAccessibilityServiceConnection$SystemSupport $r5, $r7;
        com.android.server.accessibility.MagnificationController $r6;
        int $i0;
        java.lang.Throwable $r8;
        com.android.server.accessibility.AccessibilityUserState r9;

        r0 := @this: com.android.server.accessibility.AccessibilityServiceConnection;

        r1 = r0.<com.android.server.accessibility.AccessibilityServiceConnection: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $z0 = virtualinvoke r0.<com.android.server.accessibility.AccessibilityServiceConnection: boolean isConnectedLocked()>();

        if $z0 != 0 goto label03;

        exitmonitor r1;

     label02:
        return;

     label03:
        $r2 = r0.<com.android.server.accessibility.AccessibilityServiceConnection: android.accessibilityservice.AccessibilityServiceInfo mAccessibilityServiceInfo>;

        $r2.<android.accessibilityservice.AccessibilityServiceInfo: boolean crashed> = 1;

        $r3 = r0.<com.android.server.accessibility.AccessibilityServiceConnection: java.lang.ref.WeakReference mUserStateWeakReference>;

        $r4 = virtualinvoke $r3.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r9 = (com.android.server.accessibility.AccessibilityUserState) $r4;

     label04:
        if r9 == null goto label06;

     label05:
        virtualinvoke r9.<com.android.server.accessibility.AccessibilityUserState: void serviceDisconnectedLocked(com.android.server.accessibility.AccessibilityServiceConnection)>(r0);

     label06:
        virtualinvoke r0.<com.android.server.accessibility.AccessibilityServiceConnection: void resetLocked()>();

        $r5 = r0.<com.android.server.accessibility.AccessibilityServiceConnection: com.android.server.accessibility.AbstractAccessibilityServiceConnection$SystemSupport mSystemSupport>;

        $r6 = interfaceinvoke $r5.<com.android.server.accessibility.AbstractAccessibilityServiceConnection$SystemSupport: com.android.server.accessibility.MagnificationController getMagnificationController()>();

        $i0 = r0.<com.android.server.accessibility.AccessibilityServiceConnection: int mId>;

        virtualinvoke $r6.<com.android.server.accessibility.MagnificationController: void resetAllIfNeeded(int)>($i0);

        $r7 = r0.<com.android.server.accessibility.AccessibilityServiceConnection: com.android.server.accessibility.AbstractAccessibilityServiceConnection$SystemSupport mSystemSupport>;

        interfaceinvoke $r7.<com.android.server.accessibility.AbstractAccessibilityServiceConnection$SystemSupport: void onClientChangeLocked(boolean)>(0);

        exitmonitor r1;

     label07:
        return;

     label08:
        $r8 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public boolean canRetrieveInteractiveWindowsLocked()
    {
        com.android.server.accessibility.AccessibilityServiceConnection r0;
        com.android.server.accessibility.AccessibilitySecurityPolicy $r1;
        boolean $z0, $z1, z2;

        r0 := @this: com.android.server.accessibility.AccessibilityServiceConnection;

        $r1 = r0.<com.android.server.accessibility.AccessibilityServiceConnection: com.android.server.accessibility.AccessibilitySecurityPolicy mSecurityPolicy>;

        $z0 = virtualinvoke $r1.<com.android.server.accessibility.AccessibilitySecurityPolicy: boolean canRetrieveWindowContentLocked(com.android.server.accessibility.AbstractAccessibilityServiceConnection)>(r0);

        if $z0 == 0 goto label1;

        $z1 = r0.<com.android.server.accessibility.AccessibilityServiceConnection: boolean mRetrieveInteractiveWindows>;

        if $z1 == 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;
    }

    public void disableSelf()
    {
        com.android.server.accessibility.AccessibilityServiceConnection r0;
        java.lang.Object r1, $r3;
        long l0;
        java.lang.ref.WeakReference $r2;
        java.util.Set $r4, $r7;
        android.content.ComponentName $r5;
        boolean $z0;
        com.android.server.accessibility.AbstractAccessibilityServiceConnection$SystemSupport $r6, $r8;
        int $i1;
        java.lang.Throwable $r9, $r10;
        com.android.server.accessibility.AccessibilityUserState r11;

        r0 := @this: com.android.server.accessibility.AccessibilityServiceConnection;

        r1 = r0.<com.android.server.accessibility.AccessibilityServiceConnection: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r2 = r0.<com.android.server.accessibility.AccessibilityServiceConnection: java.lang.ref.WeakReference mUserStateWeakReference>;

        $r3 = virtualinvoke $r2.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r11 = (com.android.server.accessibility.AccessibilityUserState) $r3;

     label02:
        if r11 != null goto label05;

     label03:
        exitmonitor r1;

     label04:
        return;

     label05:
        $r4 = virtualinvoke r11.<com.android.server.accessibility.AccessibilityUserState: java.util.Set getEnabledServicesLocked()>();

        $r5 = r0.<com.android.server.accessibility.AccessibilityServiceConnection: android.content.ComponentName mComponentName>;

        $z0 = interfaceinvoke $r4.<java.util.Set: boolean remove(java.lang.Object)>($r5);

        if $z0 == 0 goto label13;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label06:
        $r6 = r0.<com.android.server.accessibility.AccessibilityServiceConnection: com.android.server.accessibility.AbstractAccessibilityServiceConnection$SystemSupport mSystemSupport>;

        $r7 = virtualinvoke r11.<com.android.server.accessibility.AccessibilityUserState: java.util.Set getEnabledServicesLocked()>();

        $i1 = r11.<com.android.server.accessibility.AccessibilityUserState: int mUserId>;

        interfaceinvoke $r6.<com.android.server.accessibility.AbstractAccessibilityServiceConnection$SystemSupport: void persistComponentNamesToSettingLocked(java.lang.String,java.util.Set,int)>("enabled_accessibility_services", $r7, $i1);

     label07:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

     label08:
        $r8 = r0.<com.android.server.accessibility.AccessibilityServiceConnection: com.android.server.accessibility.AbstractAccessibilityServiceConnection$SystemSupport mSystemSupport>;

        interfaceinvoke $r8.<com.android.server.accessibility.AbstractAccessibilityServiceConnection$SystemSupport: void onClientChangeLocked(boolean)>(0);

     label09:
        goto label13;

     label10:
        $r9 := @caughtexception;

     label11:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

     label12:
        throw $r9;

     label13:
        exitmonitor r1;

     label14:
        return;

     label15:
        $r10 := @caughtexception;

     label16:
        exitmonitor r1;

     label17:
        throw $r10;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Throwable from label05 to label06 with label15;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label07 to label08 with label15;
        catch java.lang.Throwable from label08 to label09 with label15;
        catch java.lang.Throwable from label11 to label12 with label15;
        catch java.lang.Throwable from label12 to label13 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label16 to label17 with label15;
    }

    public void dispatchGesture(int, android.content.pm.ParceledListSlice, int)
    {
        com.android.server.accessibility.AccessibilityServiceConnection r0;
        int i0, i1;
        boolean z0, $z1;
        java.lang.Object r1;
        com.android.server.wm.WindowManagerInternal $r2;
        com.android.server.accessibility.AccessibilitySecurityPolicy $r3;
        com.android.server.accessibility.AbstractAccessibilityServiceConnection$SystemSupport $r4;
        android.accessibilityservice.IAccessibilityServiceClient $r5, $r7, $r10;
        java.util.List $r6;
        android.os.RemoteException $r8;
        java.lang.String $r12;
        java.lang.Throwable $r13;
        android.content.pm.ParceledListSlice r14;
        com.android.server.accessibility.MotionEventInjector r15;
        java.lang.StringBuilder r17;

        r0 := @this: com.android.server.accessibility.AccessibilityServiceConnection;

        i0 := @parameter0: int;

        r14 := @parameter1: android.content.pm.ParceledListSlice;

        i1 := @parameter2: int;

        $r2 = r0.<com.android.server.accessibility.AccessibilityServiceConnection: com.android.server.wm.WindowManagerInternal mWindowManagerService>;

        z0 = virtualinvoke $r2.<com.android.server.wm.WindowManagerInternal: boolean isTouchableDisplay(int)>(i1);

        r1 = r0.<com.android.server.accessibility.AccessibilityServiceConnection: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r3 = r0.<com.android.server.accessibility.AccessibilityServiceConnection: com.android.server.accessibility.AccessibilitySecurityPolicy mSecurityPolicy>;

        $z1 = virtualinvoke $r3.<com.android.server.accessibility.AccessibilitySecurityPolicy: boolean canPerformGestures(com.android.server.accessibility.AccessibilityServiceConnection)>(r0);

        if $z1 == 0 goto label09;

        $r4 = r0.<com.android.server.accessibility.AccessibilityServiceConnection: com.android.server.accessibility.AbstractAccessibilityServiceConnection$SystemSupport mSystemSupport>;

        r15 = interfaceinvoke $r4.<com.android.server.accessibility.AbstractAccessibilityServiceConnection$SystemSupport: com.android.server.accessibility.MotionEventInjector getMotionEventInjectorForDisplayLocked(int)>(i1);

     label02:
        if r15 == null goto label05;

        if z0 == 0 goto label05;

     label03:
        $r6 = virtualinvoke r14.<android.content.pm.ParceledListSlice: java.util.List getList()>();

        $r7 = r0.<com.android.server.accessibility.AccessibilityServiceConnection: android.accessibilityservice.IAccessibilityServiceClient mServiceInterface>;

        virtualinvoke r15.<com.android.server.accessibility.MotionEventInjector: void injectEvents(java.util.List,android.accessibilityservice.IAccessibilityServiceClient,int,int)>($r6, $r7, i0, i1);

     label04:
        goto label09;

     label05:
        $r5 = r0.<com.android.server.accessibility.AccessibilityServiceConnection: android.accessibilityservice.IAccessibilityServiceClient mServiceInterface>;

        interfaceinvoke $r5.<android.accessibilityservice.IAccessibilityServiceClient: void onPerformGestureResult(int,boolean)>(i0, 0);

     label06:
        goto label09;

     label07:
        $r8 := @caughtexception;

     label08:
        r17 = new java.lang.StringBuilder;

        specialinvoke r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error sending motion event injection failure to ");

        $r10 = r0.<com.android.server.accessibility.AccessibilityServiceConnection: android.accessibilityservice.IAccessibilityServiceClient mServiceInterface>;

        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r12 = virtualinvoke r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("AccessibilityServiceConnection", $r12, $r8);

     label09:
        exitmonitor r1;

     label10:
        return;

     label11:
        $r13 := @caughtexception;

     label12:
        exitmonitor r1;

     label13:
        throw $r13;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch android.os.RemoteException from label05 to label06 with label07;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label08 to label09 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    public android.accessibilityservice.AccessibilityServiceInfo getServiceInfo()
    {
        com.android.server.accessibility.AccessibilityServiceConnection r0;
        android.accessibilityservice.AccessibilityServiceInfo $r1;

        r0 := @this: com.android.server.accessibility.AccessibilityServiceConnection;

        $r1 = r0.<com.android.server.accessibility.AccessibilityServiceConnection: android.accessibilityservice.AccessibilityServiceInfo mAccessibilityServiceInfo>;

        return $r1;
    }

    public int getSoftKeyboardShowMode()
    {
        com.android.server.accessibility.AccessibilityServiceConnection r0;
        com.android.server.accessibility.AccessibilityUserState r1;
        java.lang.ref.WeakReference $r2;
        java.lang.Object $r3;
        int i0;

        r0 := @this: com.android.server.accessibility.AccessibilityServiceConnection;

        $r2 = r0.<com.android.server.accessibility.AccessibilityServiceConnection: java.lang.ref.WeakReference mUserStateWeakReference>;

        $r3 = virtualinvoke $r2.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r1 = (com.android.server.accessibility.AccessibilityUserState) $r3;

        if r1 == null goto label1;

        i0 = virtualinvoke r1.<com.android.server.accessibility.AccessibilityUserState: int getSoftKeyboardShowModeLocked()>();

        goto label2;

     label1:
        i0 = 0;

     label2:
        return i0;
    }

    protected boolean hasRightsToCurrentUserLocked()
    {
        com.android.server.accessibility.AccessibilityServiceConnection r0;
        int i0, $i1, $i2, $i3;
        com.android.server.accessibility.AccessibilitySecurityPolicy $r1, $r3, $r4;
        com.android.server.accessibility.AbstractAccessibilityServiceConnection$SystemSupport $r2;
        boolean $z0, $z1;

        r0 := @this: com.android.server.accessibility.AccessibilityServiceConnection;

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if i0 == 0 goto label5;

        if i0 == 1000 goto label5;

        if i0 != 2000 goto label1;

        goto label5;

     label1:
        $r1 = r0.<com.android.server.accessibility.AccessibilityServiceConnection: com.android.server.accessibility.AccessibilitySecurityPolicy mSecurityPolicy>;

        $i1 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        $i2 = virtualinvoke $r1.<com.android.server.accessibility.AccessibilitySecurityPolicy: int resolveProfileParentLocked(int)>($i1);

        $r2 = r0.<com.android.server.accessibility.AccessibilityServiceConnection: com.android.server.accessibility.AbstractAccessibilityServiceConnection$SystemSupport mSystemSupport>;

        $i3 = interfaceinvoke $r2.<com.android.server.accessibility.AbstractAccessibilityServiceConnection$SystemSupport: int getCurrentUserIdLocked()>();

        if $i2 != $i3 goto label2;

        return 1;

     label2:
        $r3 = r0.<com.android.server.accessibility.AccessibilityServiceConnection: com.android.server.accessibility.AccessibilitySecurityPolicy mSecurityPolicy>;

        $z0 = virtualinvoke $r3.<com.android.server.accessibility.AccessibilitySecurityPolicy: boolean hasPermission(java.lang.String)>("android.permission.INTERACT_ACROSS_USERS");

        if $z0 != 0 goto label4;

        $r4 = r0.<com.android.server.accessibility.AccessibilityServiceConnection: com.android.server.accessibility.AccessibilitySecurityPolicy mSecurityPolicy>;

        $z1 = virtualinvoke $r4.<com.android.server.accessibility.AccessibilitySecurityPolicy: boolean hasPermission(java.lang.String)>("android.permission.INTERACT_ACROSS_USERS_FULL");

        if $z1 == 0 goto label3;

        goto label4;

     label3:
        return 0;

     label4:
        return 1;

     label5:
        return 1;
    }

    public boolean isAccessibilityButtonAvailable()
    {
        com.android.server.accessibility.AccessibilityServiceConnection r0;
        java.lang.Object r1, $r3;
        java.lang.ref.WeakReference $r2;
        boolean $z1, z2, z3;
        java.lang.Throwable $r4;
        com.android.server.accessibility.AccessibilityUserState r5;

        r0 := @this: com.android.server.accessibility.AccessibilityServiceConnection;

        r1 = r0.<com.android.server.accessibility.AccessibilityServiceConnection: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        z2 = virtualinvoke r0.<com.android.server.accessibility.AccessibilityServiceConnection: boolean hasRightsToCurrentUserLocked()>();

     label02:
        if z2 != 0 goto label05;

     label03:
        exitmonitor r1;

     label04:
        return 0;

     label05:
        $r2 = r0.<com.android.server.accessibility.AccessibilityServiceConnection: java.lang.ref.WeakReference mUserStateWeakReference>;

        $r3 = virtualinvoke $r2.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r5 = (com.android.server.accessibility.AccessibilityUserState) $r3;

     label06:
        z3 = 0;

        if r5 == null goto label09;

        z3 = 0;

     label07:
        $z1 = virtualinvoke r0.<com.android.server.accessibility.AccessibilityServiceConnection: boolean isAccessibilityButtonAvailableLocked(com.android.server.accessibility.AccessibilityUserState)>(r5);

        if $z1 == 0 goto label09;

     label08:
        z3 = 1;

     label09:
        exitmonitor r1;

     label10:
        return z3;

     label11:
        $r4 := @caughtexception;

     label12:
        exitmonitor r1;

     label13:
        throw $r4;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    public boolean isAccessibilityButtonAvailableLocked(com.android.server.accessibility.AccessibilityUserState)
    {
        com.android.server.accessibility.AccessibilityServiceConnection r0;
        com.android.server.accessibility.AccessibilityUserState r1;
        boolean $z0, $z1;
        com.android.server.accessibility.AbstractAccessibilityServiceConnection$SystemSupport $r2;

        r0 := @this: com.android.server.accessibility.AccessibilityServiceConnection;

        r1 := @parameter0: com.android.server.accessibility.AccessibilityUserState;

        $z0 = r0.<com.android.server.accessibility.AccessibilityServiceConnection: boolean mRequestAccessibilityButton>;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r2 = r0.<com.android.server.accessibility.AccessibilityServiceConnection: com.android.server.accessibility.AbstractAccessibilityServiceConnection$SystemSupport mSystemSupport>;

        $z1 = interfaceinvoke $r2.<com.android.server.accessibility.AbstractAccessibilityServiceConnection$SystemSupport: boolean isAccessibilityButtonShown()>();

        if $z1 != 0 goto label2;

        return 0;

     label2:
        return 1;
    }

    public boolean isCapturingFingerprintGestures()
    {
        com.android.server.accessibility.AccessibilityServiceConnection r0;
        android.accessibilityservice.IAccessibilityServiceClient $r1;
        com.android.server.accessibility.AccessibilitySecurityPolicy $r2;
        boolean $z0, $z1, z2;

        r0 := @this: com.android.server.accessibility.AccessibilityServiceConnection;

        $r1 = r0.<com.android.server.accessibility.AccessibilityServiceConnection: android.accessibilityservice.IAccessibilityServiceClient mServiceInterface>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.server.accessibility.AccessibilityServiceConnection: com.android.server.accessibility.AccessibilitySecurityPolicy mSecurityPolicy>;

        $z0 = virtualinvoke $r2.<com.android.server.accessibility.AccessibilitySecurityPolicy: boolean canCaptureFingerprintGestures(com.android.server.accessibility.AccessibilityServiceConnection)>(r0);

        if $z0 == 0 goto label1;

        $z1 = r0.<com.android.server.accessibility.AccessibilityServiceConnection: boolean mCaptureFingerprintGestures>;

        if $z1 == 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;
    }

    public void onFingerprintGesture(int)
    {
        com.android.server.accessibility.AccessibilityServiceConnection r0;
        int i0;
        boolean $z0;
        android.accessibilityservice.IAccessibilityServiceClient $r1, r5;
        android.os.RemoteException $r2;
        java.lang.Throwable $r3;
        java.lang.Object r4;

        r0 := @this: com.android.server.accessibility.AccessibilityServiceConnection;

        i0 := @parameter0: int;

        $z0 = virtualinvoke r0.<com.android.server.accessibility.AccessibilityServiceConnection: boolean isCapturingFingerprintGestures()>();

        if $z0 != 0 goto label01;

        return;

     label01:
        r4 = r0.<com.android.server.accessibility.AccessibilityServiceConnection: java.lang.Object mLock>;

        entermonitor r4;

     label02:
        r5 = r0.<com.android.server.accessibility.AccessibilityServiceConnection: android.accessibilityservice.IAccessibilityServiceClient mServiceInterface>;

        exitmonitor r4;

     label03:
        if r5 == null goto label07;

     label04:
        $r1 = r0.<com.android.server.accessibility.AccessibilityServiceConnection: android.accessibilityservice.IAccessibilityServiceClient mServiceInterface>;

        interfaceinvoke $r1.<android.accessibilityservice.IAccessibilityServiceClient: void onFingerprintGesture(int)>(i0);

     label05:
        goto label07;

     label06:
        $r2 := @caughtexception;

     label07:
        return;

     label08:
        $r3 := @caughtexception;

     label09:
        exitmonitor r4;

     label10:
        throw $r3;

        catch java.lang.Throwable from label02 to label03 with label08;
        catch android.os.RemoteException from label04 to label05 with label06;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public void onFingerprintGestureDetectionActiveChanged(boolean)
    {
        com.android.server.accessibility.AccessibilityServiceConnection r0;
        boolean z0, $z1;
        android.accessibilityservice.IAccessibilityServiceClient $r1, r5;
        java.lang.Throwable $r2;
        android.os.RemoteException $r3;
        java.lang.Object r4;

        r0 := @this: com.android.server.accessibility.AccessibilityServiceConnection;

        z0 := @parameter0: boolean;

        $z1 = virtualinvoke r0.<com.android.server.accessibility.AccessibilityServiceConnection: boolean isCapturingFingerprintGestures()>();

        if $z1 != 0 goto label01;

        return;

     label01:
        r4 = r0.<com.android.server.accessibility.AccessibilityServiceConnection: java.lang.Object mLock>;

        entermonitor r4;

     label02:
        r5 = r0.<com.android.server.accessibility.AccessibilityServiceConnection: android.accessibilityservice.IAccessibilityServiceClient mServiceInterface>;

        exitmonitor r4;

     label03:
        if r5 == null goto label07;

     label04:
        $r1 = r0.<com.android.server.accessibility.AccessibilityServiceConnection: android.accessibilityservice.IAccessibilityServiceClient mServiceInterface>;

        interfaceinvoke $r1.<android.accessibilityservice.IAccessibilityServiceClient: void onFingerprintCapturingGesturesChanged(boolean)>(z0);

     label05:
        goto label07;

     label06:
        $r3 := @caughtexception;

     label07:
        return;

     label08:
        $r2 := @caughtexception;

     label09:
        exitmonitor r4;

     label10:
        throw $r2;

        catch java.lang.Throwable from label02 to label03 with label08;
        catch android.os.RemoteException from label04 to label05 with label06;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public void onServiceConnected(android.content.ComponentName, android.os.IBinder)
    {
        com.android.server.accessibility.AccessibilityServiceConnection r0;
        android.os.IBinder $r1, $r9, $r10, $r11, r15;
        android.accessibilityservice.IAccessibilityServiceClient $r2;
        java.lang.ref.WeakReference $r3;
        java.lang.Object $r4, r16;
        com.android.server.accessibility.AbstractAccessibilityServiceConnection$SystemSupport $r5;
        com.android.server.accessibility.'-$$Lambda$AccessibilityServiceConnection$ASP9bmSvpeD7ZE_uJ8sm-9hCwiU' $r6;
        android.os.Handler $r7;
        android.os.Message $r8;
        java.lang.Throwable $r12;
        android.os.RemoteException $r13;
        android.content.ComponentName r14;
        com.android.server.accessibility.AccessibilityUserState r18;
        java.util.function.Consumer r20;

        r0 := @this: com.android.server.accessibility.AccessibilityServiceConnection;

        r14 := @parameter0: android.content.ComponentName;

        r15 := @parameter1: android.os.IBinder;

        r16 = r0.<com.android.server.accessibility.AccessibilityServiceConnection: java.lang.Object mLock>;

        entermonitor r16;

     label01:
        $r1 = r0.<com.android.server.accessibility.AccessibilityServiceConnection: android.os.IBinder mService>;

        if $r1 == r15 goto label08;

        $r9 = r0.<com.android.server.accessibility.AccessibilityServiceConnection: android.os.IBinder mService>;

        if $r9 == null goto label02;

        $r11 = r0.<com.android.server.accessibility.AccessibilityServiceConnection: android.os.IBinder mService>;

        interfaceinvoke $r11.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>(r0, 0);

     label02:
        r0.<com.android.server.accessibility.AccessibilityServiceConnection: android.os.IBinder mService> = r15;

     label03:
        $r10 = r0.<com.android.server.accessibility.AccessibilityServiceConnection: android.os.IBinder mService>;

        interfaceinvoke $r10.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>(r0, 0);

     label04:
        goto label08;

     label05:
        $r13 := @caughtexception;

     label06:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("AccessibilityServiceConnection", "Failed registering death link");

        virtualinvoke r0.<com.android.server.accessibility.AccessibilityServiceConnection: void binderDied()>();

        exitmonitor r16;

     label07:
        return;

     label08:
        $r2 = staticinvoke <android.accessibilityservice.IAccessibilityServiceClient$Stub: android.accessibilityservice.IAccessibilityServiceClient asInterface(android.os.IBinder)>(r15);

        r0.<com.android.server.accessibility.AccessibilityServiceConnection: android.accessibilityservice.IAccessibilityServiceClient mServiceInterface> = $r2;

        $r3 = r0.<com.android.server.accessibility.AccessibilityServiceConnection: java.lang.ref.WeakReference mUserStateWeakReference>;

        $r4 = virtualinvoke $r3.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r18 = (com.android.server.accessibility.AccessibilityUserState) $r4;

     label09:
        if r18 != null goto label12;

     label10:
        exitmonitor r16;

     label11:
        return;

     label12:
        virtualinvoke r18.<com.android.server.accessibility.AccessibilityUserState: void addServiceLocked(com.android.server.accessibility.AccessibilityServiceConnection)>(r0);

        $r5 = r0.<com.android.server.accessibility.AccessibilityServiceConnection: com.android.server.accessibility.AbstractAccessibilityServiceConnection$SystemSupport mSystemSupport>;

        interfaceinvoke $r5.<com.android.server.accessibility.AbstractAccessibilityServiceConnection$SystemSupport: void onClientChangeLocked(boolean)>(0);

        $r7 = r0.<com.android.server.accessibility.AccessibilityServiceConnection: android.os.Handler mMainHandler>;

        $r6 = <com.android.server.accessibility._$$Lambda$AccessibilityServiceConnection$ASP9bmSvpeD7ZE_uJ8sm_9hCwiU: com.android.server.accessibility.'-$$Lambda$AccessibilityServiceConnection$ASP9bmSvpeD7ZE_uJ8sm-9hCwiU' INSTANCE>;

        r20 = (java.util.function.Consumer) $r6;

        $r8 = staticinvoke <com.android.internal.util.function.pooled.PooledLambda: android.os.Message obtainMessage(java.util.function.Consumer,java.lang.Object)>(r20, r0);

        virtualinvoke $r7.<android.os.Handler: boolean sendMessage(android.os.Message)>($r8);

     label13:
        exitmonitor r16;

     label14:
        return;

     label15:
        $r12 := @caughtexception;

     label16:
        exitmonitor r16;

     label17:
        throw $r12;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label02 to label03 with label15;
        catch android.os.RemoteException from label03 to label04 with label05;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch java.lang.Throwable from label08 to label09 with label15;
        catch java.lang.Throwable from label10 to label11 with label15;
        catch java.lang.Throwable from label12 to label13 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label16 to label17 with label15;
    }

    public void onServiceDisconnected(android.content.ComponentName)
    {
        com.android.server.accessibility.AccessibilityServiceConnection r0;
        java.lang.ref.WeakReference $r1;
        java.lang.Object $r2;
        android.content.ComponentName $r3, r6;
        com.android.server.wm.ActivityTaskManagerInternal $r4;
        java.lang.String $r5;
        int $i0;
        com.android.server.accessibility.AccessibilityUserState r7;

        r0 := @this: com.android.server.accessibility.AccessibilityServiceConnection;

        r6 := @parameter0: android.content.ComponentName;

        virtualinvoke r0.<com.android.server.accessibility.AccessibilityServiceConnection: void binderDied()>();

        $r1 = r0.<com.android.server.accessibility.AccessibilityServiceConnection: java.lang.ref.WeakReference mUserStateWeakReference>;

        $r2 = virtualinvoke $r1.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r7 = (com.android.server.accessibility.AccessibilityUserState) $r2;

        if r7 == null goto label1;

        $r4 = r0.<com.android.server.accessibility.AccessibilityServiceConnection: com.android.server.wm.ActivityTaskManagerInternal mActivityTaskManagerService>;

        $r3 = r0.<com.android.server.accessibility.AccessibilityServiceConnection: android.content.ComponentName mComponentName>;

        $r5 = virtualinvoke $r3.<android.content.ComponentName: java.lang.String flattenToString()>();

        $i0 = r7.<com.android.server.accessibility.AccessibilityUserState: int mUserId>;

        virtualinvoke $r4.<com.android.server.wm.ActivityTaskManagerInternal: void setAllowAppSwitches(java.lang.String,int,int)>($r5, -1, $i0);

     label1:
        return;
    }

    public boolean setSoftKeyboardShowMode(int)
    {
        com.android.server.accessibility.AccessibilityServiceConnection r0;
        int i0;
        java.lang.Object r1, $r3;
        boolean z0, $z1;
        java.lang.ref.WeakReference $r2;
        android.content.ComponentName $r4;
        java.lang.Throwable $r5;
        com.android.server.accessibility.AccessibilityUserState r6;

        r0 := @this: com.android.server.accessibility.AccessibilityServiceConnection;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.accessibility.AccessibilityServiceConnection: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $z1 = virtualinvoke r0.<com.android.server.accessibility.AccessibilityServiceConnection: boolean hasRightsToCurrentUserLocked()>();

        if $z1 != 0 goto label03;

        exitmonitor r1;

     label02:
        return 0;

     label03:
        $r2 = r0.<com.android.server.accessibility.AccessibilityServiceConnection: java.lang.ref.WeakReference mUserStateWeakReference>;

        $r3 = virtualinvoke $r2.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r6 = (com.android.server.accessibility.AccessibilityUserState) $r3;

     label04:
        if r6 != null goto label07;

     label05:
        exitmonitor r1;

     label06:
        return 0;

     label07:
        $r4 = r0.<com.android.server.accessibility.AccessibilityServiceConnection: android.content.ComponentName mComponentName>;

        z0 = virtualinvoke r6.<com.android.server.accessibility.AccessibilityUserState: boolean setSoftKeyboardModeLocked(int,android.content.ComponentName)>(i0, $r4);

        exitmonitor r1;

     label08:
        return z0;

     label09:
        $r5 := @caughtexception;

     label10:
        exitmonitor r1;

     label11:
        throw $r5;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public boolean switchToInputMethod(java.lang.String)
    {
        com.android.server.accessibility.AccessibilityServiceConnection r0;
        java.lang.Object r1;
        int i0;
        long l1;
        boolean z0, $z1;
        com.android.server.inputmethod.InputMethodManagerInternal $r2;
        java.lang.Throwable $r3, $r4;
        java.lang.String r5;

        r0 := @this: com.android.server.accessibility.AccessibilityServiceConnection;

        r5 := @parameter0: java.lang.String;

        r1 = r0.<com.android.server.accessibility.AccessibilityServiceConnection: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $z1 = virtualinvoke r0.<com.android.server.accessibility.AccessibilityServiceConnection: boolean hasRightsToCurrentUserLocked()>();

        if $z1 != 0 goto label03;

        exitmonitor r1;

     label02:
        return 0;

     label03:
        exitmonitor r1;

     label04:
        i0 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label05:
        $r2 = staticinvoke <com.android.server.inputmethod.InputMethodManagerInternal: com.android.server.inputmethod.InputMethodManagerInternal get()>();

        z0 = virtualinvoke $r2.<com.android.server.inputmethod.InputMethodManagerInternal: boolean switchToInputMethod(java.lang.String,int)>(r5, i0);

     label06:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return z0;

     label07:
        $r3 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r3;

     label08:
        $r4 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r4;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public void unbindLocked()
    {
        com.android.server.accessibility.AccessibilityServiceConnection r0;
        com.android.server.accessibility.AccessibilityUserState r1;
        android.content.Context $r2;
        java.lang.ref.WeakReference $r3;
        java.lang.Object $r4;
        com.android.server.accessibility.AbstractAccessibilityServiceConnection$SystemSupport $r5;
        com.android.server.accessibility.MagnificationController $r6;
        int $i0, $i1;
        android.content.ComponentName $r7;
        com.android.server.wm.ActivityTaskManagerInternal $r8;
        java.lang.String $r9;

        r0 := @this: com.android.server.accessibility.AccessibilityServiceConnection;

        $r2 = r0.<com.android.server.accessibility.AccessibilityServiceConnection: android.content.Context mContext>;

        virtualinvoke $r2.<android.content.Context: void unbindService(android.content.ServiceConnection)>(r0);

        $r3 = r0.<com.android.server.accessibility.AccessibilityServiceConnection: java.lang.ref.WeakReference mUserStateWeakReference>;

        $r4 = virtualinvoke $r3.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r1 = (com.android.server.accessibility.AccessibilityUserState) $r4;

        if r1 != null goto label1;

        return;

     label1:
        virtualinvoke r1.<com.android.server.accessibility.AccessibilityUserState: void removeServiceLocked(com.android.server.accessibility.AccessibilityServiceConnection)>(r0);

        $r5 = r0.<com.android.server.accessibility.AccessibilityServiceConnection: com.android.server.accessibility.AbstractAccessibilityServiceConnection$SystemSupport mSystemSupport>;

        $r6 = interfaceinvoke $r5.<com.android.server.accessibility.AbstractAccessibilityServiceConnection$SystemSupport: com.android.server.accessibility.MagnificationController getMagnificationController()>();

        $i0 = r0.<com.android.server.accessibility.AccessibilityServiceConnection: int mId>;

        virtualinvoke $r6.<com.android.server.accessibility.MagnificationController: void resetAllIfNeeded(int)>($i0);

        $r8 = r0.<com.android.server.accessibility.AccessibilityServiceConnection: com.android.server.wm.ActivityTaskManagerInternal mActivityTaskManagerService>;

        $r7 = r0.<com.android.server.accessibility.AccessibilityServiceConnection: android.content.ComponentName mComponentName>;

        $r9 = virtualinvoke $r7.<android.content.ComponentName: java.lang.String flattenToString()>();

        $i1 = r1.<com.android.server.accessibility.AccessibilityUserState: int mUserId>;

        virtualinvoke $r8.<com.android.server.wm.ActivityTaskManagerInternal: void setAllowAppSwitches(java.lang.String,int,int)>($r9, -1, $i1);

        virtualinvoke r0.<com.android.server.accessibility.AccessibilityServiceConnection: void resetLocked()>();

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.accessibility.AccessibilityServiceConnection: java.lang.String LOG_TAG> = "AccessibilityServiceConnection";

        return;
    }
}
