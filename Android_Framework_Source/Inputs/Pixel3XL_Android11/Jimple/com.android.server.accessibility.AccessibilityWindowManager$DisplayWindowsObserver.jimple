final class com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver extends java.lang.Object implements com.android.server.wm.WindowManagerInternal$WindowsForAccessibilityCallback
{
    private final android.util.SparseArray mA11yWindowInfoById;
    private final java.util.List mCachedWindowInfos;
    private final int mDisplayId;
    private boolean mHasWatchOutsideTouchWindow;
    private boolean mTrackingWindows;
    private final android.util.SparseArray mWindowInfoById;
    private java.util.List mWindows;
    final com.android.server.accessibility.AccessibilityWindowManager this$0;

    void <init>(com.android.server.accessibility.AccessibilityWindowManager, int)
    {
        com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver r0;
        com.android.server.accessibility.AccessibilityWindowManager r1;
        int i0;
        android.util.SparseArray $r2, $r3;
        java.util.ArrayList $r4;

        r0 := @this: com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver;

        r1 := @parameter0: com.android.server.accessibility.AccessibilityWindowManager;

        i0 := @parameter1: int;

        r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: com.android.server.accessibility.AccessibilityWindowManager this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new android.util.SparseArray;

        specialinvoke $r2.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: android.util.SparseArray mA11yWindowInfoById> = $r2;

        $r3 = new android.util.SparseArray;

        specialinvoke $r3.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: android.util.SparseArray mWindowInfoById> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: java.util.List mCachedWindowInfos> = $r4;

        r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: boolean mTrackingWindows> = 0;

        r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: int mDisplayId> = i0;

        return;
    }

    static int access$1300(com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver)
    {
        com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver r0;
        int $i0;

        r0 := @parameter0: com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver;

        $i0 = r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: int mDisplayId>;

        return $i0;
    }

    private void cacheWindows(java.util.List)
    {
        com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver r0;
        java.util.List r1, $r3, $r5, $r7;
        int i0, $i1, i2, i3;
        android.view.WindowInfo r2, $r6, $r9;
        java.lang.Object $r4, $r8;

        r0 := @this: com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver;

        r1 := @parameter0: java.util.List;

        $r3 = r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: java.util.List mCachedWindowInfos>;

        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();

        i2 = $i1 - 1;

     label1:
        if i2 < 0 goto label2;

        $r7 = r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: java.util.List mCachedWindowInfos>;

        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object remove(int)>(i2);

        $r9 = (android.view.WindowInfo) $r8;

        virtualinvoke $r9.<android.view.WindowInfo: void recycle()>();

        i2 = i2 + -1;

        goto label1;

     label2:
        i0 = interfaceinvoke r1.<java.util.List: int size()>();

        i3 = 0;

     label3:
        if i3 >= i0 goto label4;

        $r4 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i3);

        r2 = (android.view.WindowInfo) $r4;

        $r5 = r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: java.util.List mCachedWindowInfos>;

        $r6 = staticinvoke <android.view.WindowInfo: android.view.WindowInfo obtain(android.view.WindowInfo)>(r2);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r6);

        i3 = i3 + 1;

        goto label3;

     label4:
        return;
    }

    private void clearWindowsLocked()
    {
        com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver r0;
        java.util.List r1;
        int i0, $i1;
        com.android.server.accessibility.AccessibilityWindowManager $r2, $r3, $r5;
        com.android.server.accessibility.AccessibilitySecurityPolicy$AccessibilityUserManager $r4;

        r0 := @this: com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver;

        r1 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        $r2 = r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: com.android.server.accessibility.AccessibilityWindowManager this$0>;

        i0 = staticinvoke <com.android.server.accessibility.AccessibilityWindowManager: int access$700(com.android.server.accessibility.AccessibilityWindowManager)>($r2);

        $r3 = r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: com.android.server.accessibility.AccessibilityWindowManager this$0>;

        $r4 = staticinvoke <com.android.server.accessibility.AccessibilityWindowManager: com.android.server.accessibility.AccessibilitySecurityPolicy$AccessibilityUserManager access$600(com.android.server.accessibility.AccessibilityWindowManager)>($r3);

        $i1 = interfaceinvoke $r4.<com.android.server.accessibility.AccessibilitySecurityPolicy$AccessibilityUserManager: int getCurrentUserIdLocked()>();

        specialinvoke r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: void updateWindowsLocked(int,java.util.List)>($i1, r1);

        $r5 = r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: com.android.server.accessibility.AccessibilityWindowManager this$0>;

        staticinvoke <com.android.server.accessibility.AccessibilityWindowManager: int access$702(com.android.server.accessibility.AccessibilityWindowManager,int)>($r5, i0);

        r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: java.util.List mWindows> = null;

        return;
    }

    private int getTypeForWindowManagerWindowType(int)
    {
        com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver r0;
        int i0;

        r0 := @this: com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver;

        i0 := @parameter0: int;

        if i0 == 1 goto label9;

        if i0 == 2 goto label9;

        if i0 == 3 goto label9;

        if i0 == 4 goto label9;

        if i0 == 1005 goto label9;

        if i0 == 2017 goto label8;

        if i0 == 2024 goto label8;

        if i0 == 2032 goto label7;

        if i0 == 2034 goto label6;

        if i0 == 2036 goto label8;

        if i0 == 2038 goto label8;

        if i0 == 2019 goto label8;

        if i0 == 2020 goto label8;

        tableswitch(i0)
        {
            case 1000: goto label9;
            case 1001: goto label9;
            case 1002: goto label9;
            case 1003: goto label9;
            default: goto label1;
        };

     label1:
        tableswitch(i0)
        {
            case 2000: goto label8;
            case 2001: goto label8;
            case 2002: goto label9;
            case 2003: goto label8;
            default: goto label2;
        };

     label2:
        tableswitch(i0)
        {
            case 2005: goto label9;
            case 2006: goto label8;
            case 2007: goto label9;
            case 2008: goto label8;
            case 2009: goto label8;
            case 2010: goto label8;
            case 2011: goto label5;
            case 2012: goto label5;
            default: goto label3;
        };

     label3:
        tableswitch(i0)
        {
            case 2040: goto label8;
            case 2041: goto label8;
            case 2042: goto label8;
            default: goto label4;
        };

     label4:
        return -1;

     label5:
        return 2;

     label6:
        return 5;

     label7:
        return 4;

     label8:
        return 3;

     label9:
        return 1;
    }

    private android.view.accessibility.AccessibilityWindowInfo populateReportedWindowLocked(int, android.view.WindowInfo)
    {
        com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver r0;
        int i0, i1, i2, $i3, $i4, $i5, $i7, i8, i9, i10;
        android.view.WindowInfo r1;
        android.view.accessibility.AccessibilityWindowInfo r2;
        android.os.IBinder r3, $r4, $r8;
        com.android.server.accessibility.AccessibilityWindowManager $r5, $r9, $r14;
        boolean $z0, $z1;
        android.graphics.Region $r6;
        java.lang.CharSequence $r7;
        long $l6;
        java.util.List $r10, $r11, $r12;
        java.lang.Object $r13;

        r0 := @this: com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.WindowInfo;

        $r5 = r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: com.android.server.accessibility.AccessibilityWindowManager this$0>;

        $r4 = r1.<android.view.WindowInfo: android.os.IBinder token>;

        i8 = virtualinvoke $r5.<com.android.server.accessibility.AccessibilityWindowManager: int findWindowIdLocked(int,android.os.IBinder)>(i0, $r4);

        if i8 >= 0 goto label1;

        return null;

     label1:
        r2 = staticinvoke <android.view.accessibility.AccessibilityWindowInfo: android.view.accessibility.AccessibilityWindowInfo obtain()>();

        virtualinvoke r2.<android.view.accessibility.AccessibilityWindowInfo: void setId(int)>(i8);

        $i3 = r1.<android.view.WindowInfo: int type>;

        $i4 = specialinvoke r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: int getTypeForWindowManagerWindowType(int)>($i3);

        virtualinvoke r2.<android.view.accessibility.AccessibilityWindowInfo: void setType(int)>($i4);

        $i5 = r1.<android.view.WindowInfo: int layer>;

        virtualinvoke r2.<android.view.accessibility.AccessibilityWindowInfo: void setLayer(int)>($i5);

        $z0 = r1.<android.view.WindowInfo: boolean focused>;

        virtualinvoke r2.<android.view.accessibility.AccessibilityWindowInfo: void setFocused(boolean)>($z0);

        $r6 = r1.<android.view.WindowInfo: android.graphics.Region regionInScreen>;

        virtualinvoke r2.<android.view.accessibility.AccessibilityWindowInfo: void setRegionInScreen(android.graphics.Region)>($r6);

        $r7 = r1.<android.view.WindowInfo: java.lang.CharSequence title>;

        virtualinvoke r2.<android.view.accessibility.AccessibilityWindowInfo: void setTitle(java.lang.CharSequence)>($r7);

        $l6 = r1.<android.view.WindowInfo: long accessibilityIdOfAnchor>;

        virtualinvoke r2.<android.view.accessibility.AccessibilityWindowInfo: void setAnchorId(long)>($l6);

        $z1 = r1.<android.view.WindowInfo: boolean inPictureInPicture>;

        virtualinvoke r2.<android.view.accessibility.AccessibilityWindowInfo: void setPictureInPicture(boolean)>($z1);

        $i7 = r1.<android.view.WindowInfo: int displayId>;

        virtualinvoke r2.<android.view.accessibility.AccessibilityWindowInfo: void setDisplayId(int)>($i7);

        $r9 = r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: com.android.server.accessibility.AccessibilityWindowManager this$0>;

        $r8 = r1.<android.view.WindowInfo: android.os.IBinder parentToken>;

        i9 = virtualinvoke $r9.<com.android.server.accessibility.AccessibilityWindowManager: int findWindowIdLocked(int,android.os.IBinder)>(i0, $r8);

        if i9 < 0 goto label2;

        virtualinvoke r2.<android.view.accessibility.AccessibilityWindowInfo: void setParentId(int)>(i9);

     label2:
        $r10 = r1.<android.view.WindowInfo: java.util.List childTokens>;

        if $r10 == null goto label5;

        $r11 = r1.<android.view.WindowInfo: java.util.List childTokens>;

        i1 = interfaceinvoke $r11.<java.util.List: int size()>();

        i10 = 0;

     label3:
        if i10 >= i1 goto label5;

        $r12 = r1.<android.view.WindowInfo: java.util.List childTokens>;

        $r13 = interfaceinvoke $r12.<java.util.List: java.lang.Object get(int)>(i10);

        r3 = (android.os.IBinder) $r13;

        $r14 = r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: com.android.server.accessibility.AccessibilityWindowManager this$0>;

        i2 = virtualinvoke $r14.<com.android.server.accessibility.AccessibilityWindowManager: int findWindowIdLocked(int,android.os.IBinder)>(i0, r3);

        if i2 < 0 goto label4;

        virtualinvoke r2.<android.view.accessibility.AccessibilityWindowInfo: void addChild(int)>(i2);

     label4:
        i10 = i10 + 1;

        goto label3;

     label5:
        return r2;
    }

    private void sendEventsForChangedWindowsLocked(java.util.List, android.util.SparseArray)
    {
        com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver r0;
        android.util.SparseArray r1, $r15;
        int i0, $i1, $i2, $i3, $i4, $i5, i6, i7, i8, i9, i10, i11;
        java.util.ArrayList $r3;
        java.util.List $r4, $r9, r18;
        com.android.server.accessibility.AccessibilityWindowManager $r5;
        com.android.server.accessibility.AccessibilityWindowManager$AccessibilityEventSender $r6;
        java.lang.Object $r7, $r10, $r11, $r14, $r16;
        android.view.accessibility.AccessibilityEvent $r8, $r12, $r13, $r17;
        android.view.accessibility.AccessibilityWindowInfo r19, r20, r21;

        r0 := @this: com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver;

        r18 := @parameter0: java.util.List;

        r1 := @parameter1: android.util.SparseArray;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        i6 = interfaceinvoke r18.<java.util.List: int size()>();

        i7 = 0;

     label1:
        if i7 >= i6 goto label3;

        $r14 = interfaceinvoke r18.<java.util.List: java.lang.Object get(int)>(i7);

        r19 = (android.view.accessibility.AccessibilityWindowInfo) $r14;

        $r15 = r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: android.util.SparseArray mA11yWindowInfoById>;

        $i4 = virtualinvoke r19.<android.view.accessibility.AccessibilityWindowInfo: int getId()>();

        $r16 = virtualinvoke $r15.<android.util.SparseArray: java.lang.Object get(int)>($i4);

        if $r16 != null goto label2;

        $i5 = virtualinvoke r19.<android.view.accessibility.AccessibilityWindowInfo: int getId()>();

        $r17 = staticinvoke <android.view.accessibility.AccessibilityEvent: android.view.accessibility.AccessibilityEvent obtainWindowsChangedEvent(int,int)>($i5, 2);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r17);

     label2:
        i7 = i7 + 1;

        goto label1;

     label3:
        $r4 = r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: java.util.List mWindows>;

        i8 = interfaceinvoke $r4.<java.util.List: int size()>();

        i9 = 0;

     label4:
        if i9 >= i8 goto label7;

        $r9 = r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: java.util.List mWindows>;

        $r10 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(i9);

        r20 = (android.view.accessibility.AccessibilityWindowInfo) $r10;

        $i1 = virtualinvoke r20.<android.view.accessibility.AccessibilityWindowInfo: int getId()>();

        $r11 = virtualinvoke r1.<android.util.SparseArray: java.lang.Object get(int)>($i1);

        r21 = (android.view.accessibility.AccessibilityWindowInfo) $r11;

        if r21 != null goto label5;

        $i3 = virtualinvoke r20.<android.view.accessibility.AccessibilityWindowInfo: int getId()>();

        $r13 = staticinvoke <android.view.accessibility.AccessibilityEvent: android.view.accessibility.AccessibilityEvent obtainWindowsChangedEvent(int,int)>($i3, 1);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r13);

        goto label6;

     label5:
        i0 = virtualinvoke r20.<android.view.accessibility.AccessibilityWindowInfo: int differenceFrom(android.view.accessibility.AccessibilityWindowInfo)>(r21);

        if i0 == 0 goto label6;

        $i2 = virtualinvoke r20.<android.view.accessibility.AccessibilityWindowInfo: int getId()>();

        $r12 = staticinvoke <android.view.accessibility.AccessibilityEvent: android.view.accessibility.AccessibilityEvent obtainWindowsChangedEvent(int,int)>($i2, i0);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r12);

     label6:
        i9 = i9 + 1;

        goto label4;

     label7:
        i10 = interfaceinvoke $r3.<java.util.List: int size()>();

        i11 = 0;

     label8:
        if i11 >= i10 goto label9;

        $r5 = r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: com.android.server.accessibility.AccessibilityWindowManager this$0>;

        $r6 = staticinvoke <com.android.server.accessibility.AccessibilityWindowManager: com.android.server.accessibility.AccessibilityWindowManager$AccessibilityEventSender access$100(com.android.server.accessibility.AccessibilityWindowManager)>($r5);

        $r7 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i11);

        $r8 = (android.view.accessibility.AccessibilityEvent) $r7;

        interfaceinvoke $r6.<com.android.server.accessibility.AccessibilityWindowManager$AccessibilityEventSender: void sendAccessibilityEventForCurrentUserLocked(android.view.accessibility.AccessibilityEvent)>($r8);

        i11 = i11 + 1;

        goto label8;

     label9:
        return;
    }

    private boolean shouldUpdateWindowsLocked(boolean, java.util.List)
    {
        com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver r0;
        boolean z0, $z1, $z2, $z3;
        java.util.List r1, $r2, $r3, $r4;
        int i0, $i1, i2;
        java.lang.Object $r5, $r7;
        android.view.WindowInfo $r6, $r8;

        r0 := @this: com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver;

        z0 := @parameter0: boolean;

        r1 := @parameter1: java.util.List;

        if z0 == 0 goto label1;

        return 1;

     label1:
        i0 = interfaceinvoke r1.<java.util.List: int size()>();

        $r2 = r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: java.util.List mCachedWindowInfos>;

        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i1 == i0 goto label2;

        return 1;

     label2:
        $r3 = r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: java.util.List mCachedWindowInfos>;

        $z1 = interfaceinvoke $r3.<java.util.List: boolean isEmpty()>();

        if $z1 == 0 goto label3;

        $z3 = interfaceinvoke r1.<java.util.List: boolean isEmpty()>();

        if $z3 != 0 goto label6;

     label3:
        i2 = 0;

     label4:
        if i2 >= i0 goto label6;

        $r4 = r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: java.util.List mCachedWindowInfos>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i2);

        $r6 = (android.view.WindowInfo) $r5;

        $r7 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i2);

        $r8 = (android.view.WindowInfo) $r7;

        $z2 = specialinvoke r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: boolean windowChangedNoLayer(android.view.WindowInfo,android.view.WindowInfo)>($r6, $r8);

        if $z2 == 0 goto label5;

        return 1;

     label5:
        i2 = i2 + 1;

        goto label4;

     label6:
        return 0;
    }

    private void updateWindowsLocked(int, java.util.List)
    {
        com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver r0;
        android.util.SparseArray r2, $r7, $r9, $r10, $r32, $r37, $r41, $r42;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i13, $i14, $i15, $i16, $i18, $i21, i23, i24, $i25, i27, i28, i29, i30, $i31, i32;
        android.view.WindowInfo r3, $r34, $r43;
        java.util.List $r4, $r6, $r8, $r15, $r16, $r20, r36, $r40;
        java.util.ArrayList $r5, $r35;
        com.android.server.accessibility.AccessibilityWindowManager $r11, $r12, $r18, $r19, $r22, $r24, $r25, $r26, $r27, $r28, $r29, $r30, r38, r44, r47;
        java.lang.Object $r13, $r17, $r21, $r23, $r33;
        android.view.accessibility.AccessibilityWindowInfo $r14, r39, r45, r46;
        boolean $z0, $z1, $z2, $z4, $z5, $z6, z9, z10, z12, z13, z14, $z15, z16;
        android.os.IBinder $r31;

        r0 := @this: com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver;

        i23 := @parameter0: int;

        r36 := @parameter1: java.util.List;

        $r4 = r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: java.util.List mWindows>;

        if $r4 != null goto label01;

        $r35 = new java.util.ArrayList;

        specialinvoke $r35.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: java.util.List mWindows> = $r35;

     label01:
        $r5 = new java.util.ArrayList;

        $r6 = r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: java.util.List mWindows>;

        specialinvoke $r5.<java.util.ArrayList: void <init>(java.util.Collection)>($r6);

        $r7 = r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: android.util.SparseArray mA11yWindowInfoById>;

        r2 = virtualinvoke $r7.<android.util.SparseArray: android.util.SparseArray clone()>();

        $r8 = r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: java.util.List mWindows>;

        interfaceinvoke $r8.<java.util.List: void clear()>();

        $r9 = r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: android.util.SparseArray mA11yWindowInfoById>;

        virtualinvoke $r9.<android.util.SparseArray: void clear()>();

        i24 = 0;

     label02:
        $r37 = r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: android.util.SparseArray mWindowInfoById>;

        $i25 = virtualinvoke $r37.<android.util.SparseArray: int size()>();

        if i24 >= $i25 goto label03;

        $r32 = r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: android.util.SparseArray mWindowInfoById>;

        $r33 = virtualinvoke $r32.<android.util.SparseArray: java.lang.Object valueAt(int)>(i24);

        $r34 = (android.view.WindowInfo) $r33;

        virtualinvoke $r34.<android.view.WindowInfo: void recycle()>();

        i24 = i24 + 1;

        goto label02;

     label03:
        $r10 = r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: android.util.SparseArray mWindowInfoById>;

        virtualinvoke $r10.<android.util.SparseArray: void clear()>();

        r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: boolean mHasWatchOutsideTouchWindow> = 0;

        i0 = interfaceinvoke r36.<java.util.List: int size()>();

        $i2 = r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: int mDisplayId>;

        $r11 = r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: com.android.server.accessibility.AccessibilityWindowManager this$0>;

        $i3 = staticinvoke <com.android.server.accessibility.AccessibilityWindowManager: int access$400(com.android.server.accessibility.AccessibilityWindowManager)>($r11);

        if $i2 != $i3 goto label04;

        z9 = 1;

        goto label05;

     label04:
        z9 = 0;

     label05:
        $i4 = r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: int mDisplayId>;

        $r12 = r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: com.android.server.accessibility.AccessibilityWindowManager this$0>;

        $i5 = staticinvoke <com.android.server.accessibility.AccessibilityWindowManager: int access$200(com.android.server.accessibility.AccessibilityWindowManager)>($r12);

        if $i4 != $i5 goto label06;

        z10 = 1;

        goto label07;

     label06:
        z10 = 0;

     label07:
        if z9 == 0 goto label10;

        if i0 <= 0 goto label08;

        r38 = r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: com.android.server.accessibility.AccessibilityWindowManager this$0>;

        $r31 = staticinvoke <com.android.server.accessibility.AccessibilityWindowManager: android.os.IBinder access$500(com.android.server.accessibility.AccessibilityWindowManager)>(r38);

        $i21 = virtualinvoke r38.<com.android.server.accessibility.AccessibilityWindowManager: int findWindowIdLocked(int,android.os.IBinder)>(i23, $r31);

        staticinvoke <com.android.server.accessibility.AccessibilityWindowManager: int access$802(com.android.server.accessibility.AccessibilityWindowManager,int)>(r38, $i21);

        goto label09;

     label08:
        $r28 = r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: com.android.server.accessibility.AccessibilityWindowManager this$0>;

        staticinvoke <com.android.server.accessibility.AccessibilityWindowManager: int access$802(com.android.server.accessibility.AccessibilityWindowManager,int)>($r28, -1);

     label09:
        $r29 = r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: com.android.server.accessibility.AccessibilityWindowManager this$0>;

        $z6 = staticinvoke <com.android.server.accessibility.AccessibilityWindowManager: boolean access$900(com.android.server.accessibility.AccessibilityWindowManager)>($r29);

        if $z6 != 0 goto label10;

        $r30 = r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: com.android.server.accessibility.AccessibilityWindowManager this$0>;

        staticinvoke <com.android.server.accessibility.AccessibilityWindowManager: int access$702(com.android.server.accessibility.AccessibilityWindowManager,int)>($r30, -1);

     label10:
        z12 = 0;

        if z10 == 0 goto label11;

        z12 = 0;

        $r27 = r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: com.android.server.accessibility.AccessibilityWindowManager this$0>;

        $i18 = staticinvoke <com.android.server.accessibility.AccessibilityWindowManager: int access$1000(com.android.server.accessibility.AccessibilityWindowManager)>($r27);

        if $i18 == -1 goto label11;

        z12 = 1;

     label11:
        if i0 <= 0 goto label26;

        z13 = 1;

        i27 = 0;

     label12:
        if i27 >= i0 goto label19;

        $r23 = interfaceinvoke r36.<java.util.List: java.lang.Object get(int)>(i27);

        r3 = (android.view.WindowInfo) $r23;

        $z1 = r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: boolean mTrackingWindows>;

        if $z1 == 0 goto label13;

        r39 = specialinvoke r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: android.view.accessibility.AccessibilityWindowInfo populateReportedWindowLocked(int,android.view.WindowInfo)>(i23, r3);

        goto label14;

     label13:
        r39 = null;

     label14:
        z14 = z13;

        if r39 == null goto label18;

        $i13 = i0 - 1;

        $i14 = virtualinvoke r39.<android.view.accessibility.AccessibilityWindowInfo: int getLayer()>();

        $i15 = $i13 - $i14;

        virtualinvoke r39.<android.view.accessibility.AccessibilityWindowInfo: void setLayer(int)>($i15);

        i1 = virtualinvoke r39.<android.view.accessibility.AccessibilityWindowInfo: int getId()>();

        z14 = z13;

        $z2 = virtualinvoke r39.<android.view.accessibility.AccessibilityWindowInfo: boolean isFocused()>();

        if $z2 == 0 goto label16;

        z14 = z13;

        if z9 == 0 goto label16;

        $r24 = r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: com.android.server.accessibility.AccessibilityWindowManager this$0>;

        $z5 = staticinvoke <com.android.server.accessibility.AccessibilityWindowManager: boolean access$900(com.android.server.accessibility.AccessibilityWindowManager)>($r24);

        if $z5 != 0 goto label15;

        $r26 = r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: com.android.server.accessibility.AccessibilityWindowManager this$0>;

        staticinvoke <com.android.server.accessibility.AccessibilityWindowManager: int access$702(com.android.server.accessibility.AccessibilityWindowManager,int)>($r26, i1);

        virtualinvoke r39.<android.view.accessibility.AccessibilityWindowInfo: void setActive(boolean)>(1);

        z14 = z13;

        goto label16;

     label15:
        z14 = z13;

        $r25 = r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: com.android.server.accessibility.AccessibilityWindowManager this$0>;

        $i16 = staticinvoke <com.android.server.accessibility.AccessibilityWindowManager: int access$700(com.android.server.accessibility.AccessibilityWindowManager)>($r25);

        if i1 != $i16 goto label16;

        z14 = 0;

     label16:
        $z15 = r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: boolean mHasWatchOutsideTouchWindow>;

        if $z15 != 0 goto label17;

        $z4 = r3.<android.view.WindowInfo: boolean hasFlagWatchOutsideTouch>;

        if $z4 == 0 goto label17;

        r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: boolean mHasWatchOutsideTouchWindow> = 1;

     label17:
        $r40 = r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: java.util.List mWindows>;

        interfaceinvoke $r40.<java.util.List: boolean add(java.lang.Object)>(r39);

        $r41 = r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: android.util.SparseArray mA11yWindowInfoById>;

        virtualinvoke $r41.<android.util.SparseArray: void put(int,java.lang.Object)>(i1, r39);

        $r42 = r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: android.util.SparseArray mWindowInfoById>;

        $r43 = staticinvoke <android.view.WindowInfo: android.view.WindowInfo obtain(android.view.WindowInfo)>(r3);

        virtualinvoke $r42.<android.util.SparseArray: void put(int,java.lang.Object)>(i1, $r43);

     label18:
        i27 = i27 + 1;

        z13 = z14;

        goto label12;

     label19:
        $r15 = r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: java.util.List mWindows>;

        i28 = interfaceinvoke $r15.<java.util.List: int size()>();

        if z9 == 0 goto label23;

        $r19 = r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: com.android.server.accessibility.AccessibilityWindowManager this$0>;

        $z0 = staticinvoke <com.android.server.accessibility.AccessibilityWindowManager: boolean access$900(com.android.server.accessibility.AccessibilityWindowManager)>($r19);

        if $z0 == 0 goto label20;

        if z13 == 0 goto label20;

        r44 = r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: com.android.server.accessibility.AccessibilityWindowManager this$0>;

        $i11 = staticinvoke <com.android.server.accessibility.AccessibilityWindowManager: int access$800(com.android.server.accessibility.AccessibilityWindowManager)>(r44);

        staticinvoke <com.android.server.accessibility.AccessibilityWindowManager: int access$702(com.android.server.accessibility.AccessibilityWindowManager,int)>(r44, $i11);

     label20:
        i29 = 0;

     label21:
        if i29 >= i28 goto label23;

        $r20 = r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: java.util.List mWindows>;

        $r21 = interfaceinvoke $r20.<java.util.List: java.lang.Object get(int)>(i29);

        r45 = (android.view.accessibility.AccessibilityWindowInfo) $r21;

        $i9 = virtualinvoke r45.<android.view.accessibility.AccessibilityWindowInfo: int getId()>();

        $r22 = r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: com.android.server.accessibility.AccessibilityWindowManager this$0>;

        $i10 = staticinvoke <com.android.server.accessibility.AccessibilityWindowManager: int access$700(com.android.server.accessibility.AccessibilityWindowManager)>($r22);

        if $i9 != $i10 goto label22;

        virtualinvoke r45.<android.view.accessibility.AccessibilityWindowInfo: void setActive(boolean)>(1);

     label22:
        i29 = i29 + 1;

        goto label21;

     label23:
        z16 = z12;

        if z10 == 0 goto label27;

        i30 = 0;

     label24:
        z16 = z12;

        if i30 >= i28 goto label27;

        $r16 = r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: java.util.List mWindows>;

        $r17 = interfaceinvoke $r16.<java.util.List: java.lang.Object get(int)>(i30);

        r46 = (android.view.accessibility.AccessibilityWindowInfo) $r17;

        $i7 = virtualinvoke r46.<android.view.accessibility.AccessibilityWindowInfo: int getId()>();

        $r18 = r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: com.android.server.accessibility.AccessibilityWindowManager this$0>;

        $i8 = staticinvoke <com.android.server.accessibility.AccessibilityWindowManager: int access$1000(com.android.server.accessibility.AccessibilityWindowManager)>($r18);

        if $i7 != $i8 goto label25;

        virtualinvoke r46.<android.view.accessibility.AccessibilityWindowInfo: void setAccessibilityFocused(boolean)>(1);

        z16 = 0;

        goto label27;

     label25:
        i30 = i30 + 1;

        goto label24;

     label26:
        z16 = z12;

     label27:
        specialinvoke r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: void sendEventsForChangedWindowsLocked(java.util.List,android.util.SparseArray)>($r5, r2);

        $i31 = interfaceinvoke $r5.<java.util.List: int size()>();

        i32 = $i31 - 1;

     label28:
        if i32 < 0 goto label29;

        $r13 = interfaceinvoke $r5.<java.util.List: java.lang.Object remove(int)>(i32);

        $r14 = (android.view.accessibility.AccessibilityWindowInfo) $r13;

        virtualinvoke $r14.<android.view.accessibility.AccessibilityWindowInfo: void recycle()>();

        i32 = i32 + -1;

        goto label28;

     label29:
        if z16 == 0 goto label30;

        r47 = r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: com.android.server.accessibility.AccessibilityWindowManager this$0>;

        $i6 = staticinvoke <com.android.server.accessibility.AccessibilityWindowManager: int access$1000(com.android.server.accessibility.AccessibilityWindowManager)>(r47);

        staticinvoke <com.android.server.accessibility.AccessibilityWindowManager: void access$1100(com.android.server.accessibility.AccessibilityWindowManager,int)>(r47, $i6);

     label30:
        return;
    }

    private boolean windowChangedNoLayer(android.view.WindowInfo, android.view.WindowInfo)
    {
        com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver r0;
        android.view.WindowInfo r1, r2;
        int $i0, $i1, $i5, $i6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        android.os.IBinder $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r18, $r19, $r20;
        android.graphics.Region $r12, $r13;
        java.util.List $r14, $r15, $r16, $r17;
        long $l2, $l3;
        byte $b4;
        java.lang.CharSequence $r21, $r22;

        r0 := @this: com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver;

        r1 := @parameter0: android.view.WindowInfo;

        r2 := @parameter1: android.view.WindowInfo;

        if r1 != r2 goto label01;

        return 0;

     label01:
        if r1 != null goto label02;

        return 1;

     label02:
        if r2 != null goto label03;

        return 1;

     label03:
        $i1 = r1.<android.view.WindowInfo: int type>;

        $i0 = r2.<android.view.WindowInfo: int type>;

        if $i1 == $i0 goto label04;

        return 1;

     label04:
        $z1 = r1.<android.view.WindowInfo: boolean focused>;

        $z0 = r2.<android.view.WindowInfo: boolean focused>;

        if $z1 == $z0 goto label05;

        return 1;

     label05:
        $r3 = r1.<android.view.WindowInfo: android.os.IBinder token>;

        if $r3 != null goto label06;

        $r20 = r2.<android.view.WindowInfo: android.os.IBinder token>;

        if $r20 == null goto label07;

        return 1;

     label06:
        $r5 = r1.<android.view.WindowInfo: android.os.IBinder token>;

        $r4 = r2.<android.view.WindowInfo: android.os.IBinder token>;

        $z2 = virtualinvoke $r5.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        if $z2 != 0 goto label07;

        return 1;

     label07:
        $r6 = r1.<android.view.WindowInfo: android.os.IBinder parentToken>;

        if $r6 != null goto label08;

        $r19 = r2.<android.view.WindowInfo: android.os.IBinder parentToken>;

        if $r19 == null goto label09;

        return 1;

     label08:
        $r8 = r1.<android.view.WindowInfo: android.os.IBinder parentToken>;

        $r7 = r2.<android.view.WindowInfo: android.os.IBinder parentToken>;

        $z3 = virtualinvoke $r8.<java.lang.Object: boolean equals(java.lang.Object)>($r7);

        if $z3 != 0 goto label09;

        return 1;

     label09:
        $r9 = r1.<android.view.WindowInfo: android.os.IBinder activityToken>;

        if $r9 != null goto label10;

        $r18 = r2.<android.view.WindowInfo: android.os.IBinder activityToken>;

        if $r18 == null goto label11;

        return 1;

     label10:
        $r11 = r1.<android.view.WindowInfo: android.os.IBinder activityToken>;

        $r10 = r2.<android.view.WindowInfo: android.os.IBinder activityToken>;

        $z4 = virtualinvoke $r11.<java.lang.Object: boolean equals(java.lang.Object)>($r10);

        if $z4 != 0 goto label11;

        return 1;

     label11:
        $r13 = r1.<android.view.WindowInfo: android.graphics.Region regionInScreen>;

        $r12 = r2.<android.view.WindowInfo: android.graphics.Region regionInScreen>;

        $z5 = virtualinvoke $r13.<android.graphics.Region: boolean equals(java.lang.Object)>($r12);

        if $z5 != 0 goto label12;

        return 1;

     label12:
        $r14 = r1.<android.view.WindowInfo: java.util.List childTokens>;

        if $r14 == null goto label13;

        $r15 = r2.<android.view.WindowInfo: java.util.List childTokens>;

        if $r15 == null goto label13;

        $r17 = r1.<android.view.WindowInfo: java.util.List childTokens>;

        $r16 = r2.<android.view.WindowInfo: java.util.List childTokens>;

        $z10 = interfaceinvoke $r17.<java.util.List: boolean equals(java.lang.Object)>($r16);

        if $z10 != 0 goto label13;

        return 1;

     label13:
        $r21 = r1.<android.view.WindowInfo: java.lang.CharSequence title>;

        $r22 = r2.<android.view.WindowInfo: java.lang.CharSequence title>;

        $z11 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>($r21, $r22);

        if $z11 != 0 goto label14;

        return 1;

     label14:
        $l3 = r1.<android.view.WindowInfo: long accessibilityIdOfAnchor>;

        $l2 = r2.<android.view.WindowInfo: long accessibilityIdOfAnchor>;

        $b4 = $l3 cmp $l2;

        if $b4 == 0 goto label15;

        return 1;

     label15:
        $z7 = r1.<android.view.WindowInfo: boolean inPictureInPicture>;

        $z6 = r2.<android.view.WindowInfo: boolean inPictureInPicture>;

        if $z7 == $z6 goto label16;

        return 1;

     label16:
        $z9 = r1.<android.view.WindowInfo: boolean hasFlagWatchOutsideTouch>;

        $z8 = r2.<android.view.WindowInfo: boolean hasFlagWatchOutsideTouch>;

        if $z9 == $z8 goto label17;

        return 1;

     label17:
        $i6 = r1.<android.view.WindowInfo: int displayId>;

        $i5 = r2.<android.view.WindowInfo: int displayId>;

        if $i6 == $i5 goto label18;

        return 1;

     label18:
        return 0;
    }

    boolean computePartialInteractiveRegionForWindowLocked(int, android.graphics.Region)
    {
        com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver r0;
        int i0, $i1, $i2, i3, i4;
        android.graphics.Region r1, $r4, r9, r10;
        android.view.accessibility.AccessibilityWindowInfo r3;
        java.util.List $r5, r8;
        java.lang.Object $r6;
        android.graphics.Region$Op $r7;
        boolean $z0, z2, z3;

        r0 := @this: com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver;

        i0 := @parameter0: int;

        r1 := @parameter1: android.graphics.Region;

        r8 = r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: java.util.List mWindows>;

        if r8 != null goto label1;

        return 0;

     label1:
        r9 = null;

        z2 = 0;

        i3 = interfaceinvoke r8.<java.util.List: int size()>();

        $r4 = new android.graphics.Region;

        specialinvoke $r4.<android.graphics.Region: void <init>()>();

        i4 = i3 + -1;

     label2:
        if i4 < 0 goto label5;

        $r5 = r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: java.util.List mWindows>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i4);

        r3 = (android.view.accessibility.AccessibilityWindowInfo) $r6;

        if r9 != null goto label3;

        r10 = r9;

        z3 = z2;

        $i2 = virtualinvoke r3.<android.view.accessibility.AccessibilityWindowInfo: int getId()>();

        if $i2 != i0 goto label4;

        virtualinvoke r3.<android.view.accessibility.AccessibilityWindowInfo: void getRegionInScreen(android.graphics.Region)>($r4);

        virtualinvoke r1.<android.graphics.Region: boolean set(android.graphics.Region)>($r4);

        r10 = r1;

        z3 = z2;

        goto label4;

     label3:
        r10 = r9;

        z3 = z2;

        $i1 = virtualinvoke r3.<android.view.accessibility.AccessibilityWindowInfo: int getType()>();

        if $i1 == 4 goto label4;

        virtualinvoke r3.<android.view.accessibility.AccessibilityWindowInfo: void getRegionInScreen(android.graphics.Region)>($r4);

        r10 = r9;

        z3 = z2;

        $r7 = <android.graphics.Region$Op: android.graphics.Region$Op DIFFERENCE>;

        $z0 = virtualinvoke r9.<android.graphics.Region: boolean op(android.graphics.Region,android.graphics.Region$Op)>($r4, $r7);

        if $z0 == 0 goto label4;

        z3 = 1;

        r10 = r9;

     label4:
        i4 = i4 + -1;

        r9 = r10;

        z2 = z3;

        goto label2;

     label5:
        return z2;
    }

    void dumpLocked(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver r0;
        java.io.PrintWriter r1;
        java.lang.String[] r2;
        int i0, $i1, i2;
        java.util.List $r4, r16;
        java.lang.Object $r5;
        android.view.accessibility.AccessibilityWindowInfo $r6;
        java.lang.String $r7, $r12;
        java.io.FileDescriptor r15;

        r0 := @this: com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver;

        r15 := @parameter0: java.io.FileDescriptor;

        r1 := @parameter1: java.io.PrintWriter;

        r2 := @parameter2: java.lang.String[];

        r16 = r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: java.util.List mWindows>;

        if r16 == null goto label5;

        i0 = interfaceinvoke r16.<java.util.List: int size()>();

        i2 = 0;

     label1:
        if i2 >= i0 goto label4;

        if i2 != 0 goto label2;

        virtualinvoke r1.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("Display[");

        $i1 = r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: int mDisplayId>;

        $r12 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i1);

        virtualinvoke r1.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>($r12);

        virtualinvoke r1.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("] : ");

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label2:
        if i2 <= 0 goto label3;

        virtualinvoke r1.<java.io.PrintWriter: java.io.PrintWriter append(char)>(44);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label3:
        virtualinvoke r1.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("Window[");

        $r4 = r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: java.util.List mWindows>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i2);

        $r6 = (android.view.accessibility.AccessibilityWindowInfo) $r5;

        $r7 = virtualinvoke $r6.<android.view.accessibility.AccessibilityWindowInfo: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>($r7);

        virtualinvoke r1.<java.io.PrintWriter: java.io.PrintWriter append(char)>(93);

        i2 = i2 + 1;

        goto label1;

     label4:
        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label5:
        return;
    }

    android.view.accessibility.AccessibilityWindowInfo findA11yWindowInfoByIdLocked(int)
    {
        com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver r0;
        int i0;
        android.util.SparseArray $r1;
        java.lang.Object $r2;
        android.view.accessibility.AccessibilityWindowInfo $r3;

        r0 := @this: com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: android.util.SparseArray mA11yWindowInfoById>;

        $r2 = virtualinvoke $r1.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        $r3 = (android.view.accessibility.AccessibilityWindowInfo) $r2;

        return $r3;
    }

    android.view.WindowInfo findWindowInfoByIdLocked(int)
    {
        com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver r0;
        int i0;
        android.util.SparseArray $r1;
        java.lang.Object $r2;
        android.view.WindowInfo $r3;

        r0 := @this: com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: android.util.SparseArray mWindowInfoById>;

        $r2 = virtualinvoke $r1.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        $r3 = (android.view.WindowInfo) $r2;

        return $r3;
    }

    android.view.accessibility.AccessibilityWindowInfo getPictureInPictureWindowLocked()
    {
        com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver r0;
        int i0, i1;
        java.util.List $r1, r3;
        java.lang.Object $r2;
        boolean $z0;
        android.view.accessibility.AccessibilityWindowInfo r4;

        r0 := @this: com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver;

        r3 = r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: java.util.List mWindows>;

        if r3 == null goto label3;

        i0 = interfaceinvoke r3.<java.util.List: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r1 = r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: java.util.List mWindows>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i1);

        r4 = (android.view.accessibility.AccessibilityWindowInfo) $r2;

        $z0 = virtualinvoke r4.<android.view.accessibility.AccessibilityWindowInfo: boolean isInPictureInPictureMode()>();

        if $z0 == 0 goto label2;

        return r4;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return null;
    }

    java.util.List getWatchOutsideTouchWindowIdLocked(int)
    {
        com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver r0;
        android.view.WindowInfo r1, r3;
        android.util.SparseArray $r4, $r8, $r9, $r11;
        java.lang.Object $r5, $r10;
        java.util.List $r6;
        boolean $z0, $z1;
        java.util.ArrayList $r7;
        int $i0, $i1, $i2, $i3, i4, i5;
        java.lang.Integer $r12;

        r0 := @this: com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver;

        i4 := @parameter0: int;

        $r4 = r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: android.util.SparseArray mWindowInfoById>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object get(int)>(i4);

        r1 = (android.view.WindowInfo) $r5;

        if r1 == null goto label4;

        $z0 = r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: boolean mHasWatchOutsideTouchWindow>;

        if $z0 == 0 goto label4;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        i5 = 0;

     label1:
        $r8 = r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: android.util.SparseArray mWindowInfoById>;

        $i0 = virtualinvoke $r8.<android.util.SparseArray: int size()>();

        if i5 >= $i0 goto label3;

        $r9 = r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: android.util.SparseArray mWindowInfoById>;

        $r10 = virtualinvoke $r9.<android.util.SparseArray: java.lang.Object valueAt(int)>(i5);

        r3 = (android.view.WindowInfo) $r10;

        if r3 == null goto label2;

        $i2 = r3.<android.view.WindowInfo: int layer>;

        $i1 = r1.<android.view.WindowInfo: int layer>;

        if $i2 >= $i1 goto label2;

        $z1 = r3.<android.view.WindowInfo: boolean hasFlagWatchOutsideTouch>;

        if $z1 == 0 goto label2;

        $r11 = r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: android.util.SparseArray mWindowInfoById>;

        $i3 = virtualinvoke $r11.<android.util.SparseArray: int keyAt(int)>(i5);

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r12);

     label2:
        i5 = i5 + 1;

        goto label1;

     label3:
        return $r7;

     label4:
        $r6 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r6;
    }

    java.util.List getWindowListLocked()
    {
        com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver r0;
        java.util.List $r1;

        r0 := @this: com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver;

        $r1 = r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: java.util.List mWindows>;

        return $r1;
    }

    boolean isTrackingWindowsLocked()
    {
        com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver r0;
        boolean $z0;

        r0 := @this: com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver;

        $z0 = r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: boolean mTrackingWindows>;

        return $z0;
    }

    public void onWindowsForAccessibilityChanged(boolean, int, android.os.IBinder, java.util.List)
    {
        com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver r0;
        boolean z0, $z1;
        int i0, $i2;
        java.util.List r1;
        java.lang.Object r2, $r10;
        com.android.server.accessibility.AccessibilityWindowManager $r3, $r4, $r5, $r7, $r9;
        com.android.server.accessibility.AccessibilitySecurityPolicy$AccessibilityUserManager $r8;
        java.lang.Throwable $r11;
        android.os.IBinder r12;

        r0 := @this: com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        r12 := @parameter2: android.os.IBinder;

        r1 := @parameter3: java.util.List;

        $r3 = r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: com.android.server.accessibility.AccessibilityWindowManager this$0>;

        r2 = staticinvoke <com.android.server.accessibility.AccessibilityWindowManager: java.lang.Object access$300(com.android.server.accessibility.AccessibilityWindowManager)>($r3);

        entermonitor r2;

     label1:
        $z1 = specialinvoke r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: boolean shouldUpdateWindowsLocked(boolean,java.util.List)>(z0, r1);

        if $z1 == 0 goto label2;

        $r4 = r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: com.android.server.accessibility.AccessibilityWindowManager this$0>;

        staticinvoke <com.android.server.accessibility.AccessibilityWindowManager: int access$402(com.android.server.accessibility.AccessibilityWindowManager,int)>($r4, i0);

        $r5 = r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: com.android.server.accessibility.AccessibilityWindowManager this$0>;

        staticinvoke <com.android.server.accessibility.AccessibilityWindowManager: android.os.IBinder access$502(com.android.server.accessibility.AccessibilityWindowManager,android.os.IBinder)>($r5, r12);

        specialinvoke r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: void cacheWindows(java.util.List)>(r1);

        $r7 = r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: com.android.server.accessibility.AccessibilityWindowManager this$0>;

        $r8 = staticinvoke <com.android.server.accessibility.AccessibilityWindowManager: com.android.server.accessibility.AccessibilitySecurityPolicy$AccessibilityUserManager access$600(com.android.server.accessibility.AccessibilityWindowManager)>($r7);

        $i2 = interfaceinvoke $r8.<com.android.server.accessibility.AccessibilitySecurityPolicy$AccessibilityUserManager: int getCurrentUserIdLocked()>();

        specialinvoke r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: void updateWindowsLocked(int,java.util.List)>($i2, r1);

        $r9 = r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: com.android.server.accessibility.AccessibilityWindowManager this$0>;

        $r10 = staticinvoke <com.android.server.accessibility.AccessibilityWindowManager: java.lang.Object access$300(com.android.server.accessibility.AccessibilityWindowManager)>($r9);

        virtualinvoke $r10.<java.lang.Object: void notifyAll()>();

     label2:
        exitmonitor r2;

     label3:
        return;

     label4:
        $r11 := @caughtexception;

     label5:
        exitmonitor r2;

     label6:
        throw $r11;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    void setAccessibilityFocusedWindowLocked(int)
    {
        com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver r0;
        int i0, i1, $i2, $i3, i5;
        java.util.List $r1, r7;
        java.lang.Object $r2;
        com.android.server.accessibility.AccessibilityWindowManager $r3, $r4;
        com.android.server.accessibility.AccessibilityWindowManager$AccessibilityEventSender $r5;
        android.view.accessibility.AccessibilityEvent $r6;
        android.view.accessibility.AccessibilityWindowInfo r8;

        r0 := @this: com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver;

        i0 := @parameter0: int;

        r7 = r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: java.util.List mWindows>;

        if r7 == null goto label4;

        i1 = interfaceinvoke r7.<java.util.List: int size()>();

        i5 = 0;

     label1:
        if i5 >= i1 goto label4;

        $r1 = r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: java.util.List mWindows>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i5);

        r8 = (android.view.accessibility.AccessibilityWindowInfo) $r2;

        $i2 = virtualinvoke r8.<android.view.accessibility.AccessibilityWindowInfo: int getId()>();

        if $i2 != i0 goto label2;

        $r3 = r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: com.android.server.accessibility.AccessibilityWindowManager this$0>;

        $i3 = r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: int mDisplayId>;

        staticinvoke <com.android.server.accessibility.AccessibilityWindowManager: int access$202(com.android.server.accessibility.AccessibilityWindowManager,int)>($r3, $i3);

        virtualinvoke r8.<android.view.accessibility.AccessibilityWindowInfo: void setAccessibilityFocused(boolean)>(1);

        $r4 = r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: com.android.server.accessibility.AccessibilityWindowManager this$0>;

        $r5 = staticinvoke <com.android.server.accessibility.AccessibilityWindowManager: com.android.server.accessibility.AccessibilityWindowManager$AccessibilityEventSender access$100(com.android.server.accessibility.AccessibilityWindowManager)>($r4);

        $r6 = staticinvoke <android.view.accessibility.AccessibilityEvent: android.view.accessibility.AccessibilityEvent obtainWindowsChangedEvent(int,int)>(i0, 128);

        interfaceinvoke $r5.<com.android.server.accessibility.AccessibilityWindowManager$AccessibilityEventSender: void sendAccessibilityEventForCurrentUserLocked(android.view.accessibility.AccessibilityEvent)>($r6);

        goto label3;

     label2:
        virtualinvoke r8.<android.view.accessibility.AccessibilityWindowInfo: void setAccessibilityFocused(boolean)>(0);

     label3:
        i5 = i5 + 1;

        goto label1;

     label4:
        return;
    }

    void setActiveWindowLocked(int)
    {
        com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver r0;
        int i0, i1, $i2, i3;
        java.util.List $r1, r6;
        java.lang.Object $r2;
        com.android.server.accessibility.AccessibilityWindowManager $r3;
        com.android.server.accessibility.AccessibilityWindowManager$AccessibilityEventSender $r4;
        android.view.accessibility.AccessibilityEvent $r5;
        android.view.accessibility.AccessibilityWindowInfo r7;

        r0 := @this: com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver;

        i0 := @parameter0: int;

        r6 = r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: java.util.List mWindows>;

        if r6 == null goto label4;

        i1 = interfaceinvoke r6.<java.util.List: int size()>();

        i3 = 0;

     label1:
        if i3 >= i1 goto label4;

        $r1 = r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: java.util.List mWindows>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i3);

        r7 = (android.view.accessibility.AccessibilityWindowInfo) $r2;

        $i2 = virtualinvoke r7.<android.view.accessibility.AccessibilityWindowInfo: int getId()>();

        if $i2 != i0 goto label2;

        virtualinvoke r7.<android.view.accessibility.AccessibilityWindowInfo: void setActive(boolean)>(1);

        $r3 = r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: com.android.server.accessibility.AccessibilityWindowManager this$0>;

        $r4 = staticinvoke <com.android.server.accessibility.AccessibilityWindowManager: com.android.server.accessibility.AccessibilityWindowManager$AccessibilityEventSender access$100(com.android.server.accessibility.AccessibilityWindowManager)>($r3);

        $r5 = staticinvoke <android.view.accessibility.AccessibilityEvent: android.view.accessibility.AccessibilityEvent obtainWindowsChangedEvent(int,int)>(i0, 32);

        interfaceinvoke $r4.<com.android.server.accessibility.AccessibilityWindowManager$AccessibilityEventSender: void sendAccessibilityEventForCurrentUserLocked(android.view.accessibility.AccessibilityEvent)>($r5);

        goto label3;

     label2:
        virtualinvoke r7.<android.view.accessibility.AccessibilityWindowInfo: void setActive(boolean)>(0);

     label3:
        i3 = i3 + 1;

        goto label1;

     label4:
        return;
    }

    boolean startTrackingWindowsLocked()
    {
        com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver r0;
        boolean z0, $z1, z2;
        com.android.server.accessibility.AccessibilityWindowManager $r2;
        com.android.server.wm.WindowManagerInternal $r3;
        int $i0, $i1;
        java.lang.StringBuilder $r4;
        java.lang.String $r7;

        r0 := @this: com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver;

        z2 = 1;

        $z1 = r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: boolean mTrackingWindows>;

        if $z1 != 0 goto label1;

        r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: boolean mTrackingWindows> = 1;

        $r2 = r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: com.android.server.accessibility.AccessibilityWindowManager this$0>;

        $r3 = staticinvoke <com.android.server.accessibility.AccessibilityWindowManager: com.android.server.wm.WindowManagerInternal access$000(com.android.server.accessibility.AccessibilityWindowManager)>($r2);

        $i0 = r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: int mDisplayId>;

        z0 = virtualinvoke $r3.<com.android.server.wm.WindowManagerInternal: boolean setWindowsForAccessibilityCallback(int,com.android.server.wm.WindowManagerInternal$WindowsForAccessibilityCallback)>($i0, r0);

        z2 = z0;

        if z0 != 0 goto label1;

        r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: boolean mTrackingWindows> = 0;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("set windowsObserver callbacks fail, displayId:");

        $i1 = r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: int mDisplayId>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AccessibilityWindowManager", $r7);

        z2 = z0;

     label1:
        return z2;
    }

    void stopTrackingWindowsLocked()
    {
        com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver r0;
        boolean $z0;
        com.android.server.accessibility.AccessibilityWindowManager $r1;
        com.android.server.wm.WindowManagerInternal $r2;
        int $i0;

        r0 := @this: com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver;

        $z0 = r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: boolean mTrackingWindows>;

        if $z0 == 0 goto label1;

        $r1 = r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: com.android.server.accessibility.AccessibilityWindowManager this$0>;

        $r2 = staticinvoke <com.android.server.accessibility.AccessibilityWindowManager: com.android.server.wm.WindowManagerInternal access$000(com.android.server.accessibility.AccessibilityWindowManager)>($r1);

        $i0 = r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: int mDisplayId>;

        virtualinvoke $r2.<com.android.server.wm.WindowManagerInternal: boolean setWindowsForAccessibilityCallback(int,com.android.server.wm.WindowManagerInternal$WindowsForAccessibilityCallback)>($i0, null);

        r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: boolean mTrackingWindows> = 0;

        specialinvoke r0.<com.android.server.accessibility.AccessibilityWindowManager$DisplayWindowsObserver: void clearWindowsLocked()>();

     label1:
        return;
    }
}
