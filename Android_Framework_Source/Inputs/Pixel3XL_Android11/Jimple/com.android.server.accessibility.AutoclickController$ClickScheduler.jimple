final class com.android.server.accessibility.AutoclickController$ClickScheduler extends java.lang.Object implements java.lang.Runnable
{
    private static final double MOVEMENT_SLOPE;
    private boolean mActive;
    private android.view.MotionEvent$PointerCoords mAnchorCoords;
    private int mDelay;
    private int mEventPolicyFlags;
    private android.os.Handler mHandler;
    private android.view.MotionEvent mLastMotionEvent;
    private int mMetaState;
    private long mScheduledClickTime;
    private android.view.MotionEvent$PointerCoords[] mTempPointerCoords;
    private android.view.MotionEvent$PointerProperties[] mTempPointerProperties;
    final com.android.server.accessibility.AutoclickController this$0;

    public void <init>(com.android.server.accessibility.AutoclickController, android.os.Handler, int)
    {
        com.android.server.accessibility.AutoclickController$ClickScheduler r0;
        com.android.server.accessibility.AutoclickController r1;
        android.os.Handler r2;
        int i0;
        android.view.MotionEvent$PointerCoords $r3;

        r0 := @this: com.android.server.accessibility.AutoclickController$ClickScheduler;

        r1 := @parameter0: com.android.server.accessibility.AutoclickController;

        r2 := @parameter1: android.os.Handler;

        i0 := @parameter2: int;

        r0.<com.android.server.accessibility.AutoclickController$ClickScheduler: com.android.server.accessibility.AutoclickController this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.accessibility.AutoclickController$ClickScheduler: android.os.Handler mHandler> = r2;

        r0.<com.android.server.accessibility.AutoclickController$ClickScheduler: android.view.MotionEvent mLastMotionEvent> = null;

        specialinvoke r0.<com.android.server.accessibility.AutoclickController$ClickScheduler: void resetInternalState()>();

        r0.<com.android.server.accessibility.AutoclickController$ClickScheduler: int mDelay> = i0;

        $r3 = new android.view.MotionEvent$PointerCoords;

        specialinvoke $r3.<android.view.MotionEvent$PointerCoords: void <init>()>();

        r0.<com.android.server.accessibility.AutoclickController$ClickScheduler: android.view.MotionEvent$PointerCoords mAnchorCoords> = $r3;

        return;
    }

    private void cacheLastEvent(android.view.MotionEvent, int, boolean)
    {
        com.android.server.accessibility.AutoclickController$ClickScheduler r0;
        boolean z0;
        android.view.MotionEvent r1, $r3, r4, r5;
        android.view.MotionEvent$PointerCoords $r2;
        int i0, i1;

        r0 := @this: com.android.server.accessibility.AutoclickController$ClickScheduler;

        r4 := @parameter0: android.view.MotionEvent;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        r1 = r0.<com.android.server.accessibility.AutoclickController$ClickScheduler: android.view.MotionEvent mLastMotionEvent>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.view.MotionEvent: void recycle()>();

     label1:
        r5 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(android.view.MotionEvent)>(r4);

        r0.<com.android.server.accessibility.AutoclickController$ClickScheduler: android.view.MotionEvent mLastMotionEvent> = r5;

        r0.<com.android.server.accessibility.AutoclickController$ClickScheduler: int mEventPolicyFlags> = i0;

        if z0 == 0 goto label2;

        i1 = virtualinvoke r5.<android.view.MotionEvent: int getActionIndex()>();

        $r3 = r0.<com.android.server.accessibility.AutoclickController$ClickScheduler: android.view.MotionEvent mLastMotionEvent>;

        $r2 = r0.<com.android.server.accessibility.AutoclickController$ClickScheduler: android.view.MotionEvent$PointerCoords mAnchorCoords>;

        virtualinvoke $r3.<android.view.MotionEvent: void getPointerCoords(int,android.view.MotionEvent$PointerCoords)>(i1, $r2);

     label2:
        return;
    }

    private boolean detectMovement(android.view.MotionEvent)
    {
        com.android.server.accessibility.AutoclickController$ClickScheduler r0;
        android.view.MotionEvent r1, r2;
        int i0;
        float f0, f1, f2, f3, $f4, $f5;
        android.view.MotionEvent$PointerCoords $r3, $r4;
        double $d0, $d1, $d2;
        byte $b1;
        boolean z0;

        r0 := @this: com.android.server.accessibility.AutoclickController$ClickScheduler;

        r1 := @parameter0: android.view.MotionEvent;

        r2 = r0.<com.android.server.accessibility.AutoclickController$ClickScheduler: android.view.MotionEvent mLastMotionEvent>;

        z0 = 0;

        if r2 != null goto label1;

        return 0;

     label1:
        i0 = virtualinvoke r1.<android.view.MotionEvent: int getActionIndex()>();

        $r3 = r0.<com.android.server.accessibility.AutoclickController$ClickScheduler: android.view.MotionEvent$PointerCoords mAnchorCoords>;

        f0 = $r3.<android.view.MotionEvent$PointerCoords: float x>;

        f1 = virtualinvoke r1.<android.view.MotionEvent: float getX(int)>(i0);

        $r4 = r0.<com.android.server.accessibility.AutoclickController$ClickScheduler: android.view.MotionEvent$PointerCoords mAnchorCoords>;

        f2 = $r4.<android.view.MotionEvent$PointerCoords: float y>;

        f3 = virtualinvoke r1.<android.view.MotionEvent: float getY(int)>(i0);

        $f4 = f0 - f1;

        $d1 = (double) $f4;

        $f5 = f2 - f3;

        $d0 = (double) $f5;

        $d2 = staticinvoke <java.lang.Math: double hypot(double,double)>($d1, $d0);

        $b1 = $d2 cmpl 20.0;

        if $b1 <= 0 goto label2;

        z0 = 1;

     label2:
        return z0;
    }

    private void rescheduleClick(int)
    {
        com.android.server.accessibility.AutoclickController$ClickScheduler r0;
        int i0;
        long l1, $l2, $l3, $l4, $l5;
        boolean $z0, $z1;
        android.os.Handler $r1, $r2;
        byte $b6;

        r0 := @this: com.android.server.accessibility.AutoclickController$ClickScheduler;

        i0 := @parameter0: int;

        $l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l3 = (long) i0;

        l1 = $l2 + $l3;

        $z0 = r0.<com.android.server.accessibility.AutoclickController$ClickScheduler: boolean mActive>;

        if $z0 == 0 goto label1;

        $l5 = r0.<com.android.server.accessibility.AutoclickController$ClickScheduler: long mScheduledClickTime>;

        $b6 = l1 cmp $l5;

        if $b6 <= 0 goto label1;

        r0.<com.android.server.accessibility.AutoclickController$ClickScheduler: long mScheduledClickTime> = l1;

        return;

     label1:
        $z1 = r0.<com.android.server.accessibility.AutoclickController$ClickScheduler: boolean mActive>;

        if $z1 == 0 goto label2;

        $r2 = r0.<com.android.server.accessibility.AutoclickController$ClickScheduler: android.os.Handler mHandler>;

        virtualinvoke $r2.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>(r0);

     label2:
        r0.<com.android.server.accessibility.AutoclickController$ClickScheduler: boolean mActive> = 1;

        r0.<com.android.server.accessibility.AutoclickController$ClickScheduler: long mScheduledClickTime> = l1;

        $r1 = r0.<com.android.server.accessibility.AutoclickController$ClickScheduler: android.os.Handler mHandler>;

        $l4 = (long) i0;

        virtualinvoke $r1.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>(r0, $l4);

        return;
    }

    private void resetInternalState()
    {
        com.android.server.accessibility.AutoclickController$ClickScheduler r0;
        android.view.MotionEvent r1;

        r0 := @this: com.android.server.accessibility.AutoclickController$ClickScheduler;

        r0.<com.android.server.accessibility.AutoclickController$ClickScheduler: boolean mActive> = 0;

        r1 = r0.<com.android.server.accessibility.AutoclickController$ClickScheduler: android.view.MotionEvent mLastMotionEvent>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.view.MotionEvent: void recycle()>();

        r0.<com.android.server.accessibility.AutoclickController$ClickScheduler: android.view.MotionEvent mLastMotionEvent> = null;

     label1:
        r0.<com.android.server.accessibility.AutoclickController$ClickScheduler: long mScheduledClickTime> = -1L;

        return;
    }

    private void sendClick()
    {
        com.android.server.accessibility.AutoclickController$ClickScheduler r0;
        int i0, $i2, $i3, $i4, $i5, $i6, $i7;
        long l1;
        android.view.MotionEvent r1, $r2, $r5, $r9, $r13, $r14, $r17, $r18, r25;
        com.android.server.accessibility.AutoclickController $r3, $r19, $r20;
        com.android.server.accessibility.EventStreamTransformation $r4;
        android.view.MotionEvent$PointerProperties[] $r6, $r7, $r15, r23;
        android.view.MotionEvent$PointerProperties $r8, $r22;
        android.view.MotionEvent$PointerCoords[] $r10, $r11, $r16, r24;
        android.view.MotionEvent$PointerCoords $r12, $r21;

        r0 := @this: com.android.server.accessibility.AutoclickController$ClickScheduler;

        $r2 = r0.<com.android.server.accessibility.AutoclickController$ClickScheduler: android.view.MotionEvent mLastMotionEvent>;

        if $r2 == null goto label4;

        $r3 = r0.<com.android.server.accessibility.AutoclickController$ClickScheduler: com.android.server.accessibility.AutoclickController this$0>;

        $r4 = virtualinvoke $r3.<com.android.server.accessibility.AutoclickController: com.android.server.accessibility.EventStreamTransformation getNext()>();

        if $r4 != null goto label1;

        goto label4;

     label1:
        $r5 = r0.<com.android.server.accessibility.AutoclickController$ClickScheduler: android.view.MotionEvent mLastMotionEvent>;

        i0 = virtualinvoke $r5.<android.view.MotionEvent: int getActionIndex()>();

        $r6 = r0.<com.android.server.accessibility.AutoclickController$ClickScheduler: android.view.MotionEvent$PointerProperties[] mTempPointerProperties>;

        if $r6 != null goto label2;

        r23 = newarray (android.view.MotionEvent$PointerProperties)[1];

        r0.<com.android.server.accessibility.AutoclickController$ClickScheduler: android.view.MotionEvent$PointerProperties[] mTempPointerProperties> = r23;

        $r22 = new android.view.MotionEvent$PointerProperties;

        specialinvoke $r22.<android.view.MotionEvent$PointerProperties: void <init>()>();

        r23[0] = $r22;

     label2:
        $r9 = r0.<com.android.server.accessibility.AutoclickController$ClickScheduler: android.view.MotionEvent mLastMotionEvent>;

        $r7 = r0.<com.android.server.accessibility.AutoclickController$ClickScheduler: android.view.MotionEvent$PointerProperties[] mTempPointerProperties>;

        $r8 = $r7[0];

        virtualinvoke $r9.<android.view.MotionEvent: void getPointerProperties(int,android.view.MotionEvent$PointerProperties)>(i0, $r8);

        $r10 = r0.<com.android.server.accessibility.AutoclickController$ClickScheduler: android.view.MotionEvent$PointerCoords[] mTempPointerCoords>;

        if $r10 != null goto label3;

        r24 = newarray (android.view.MotionEvent$PointerCoords)[1];

        r0.<com.android.server.accessibility.AutoclickController$ClickScheduler: android.view.MotionEvent$PointerCoords[] mTempPointerCoords> = r24;

        $r21 = new android.view.MotionEvent$PointerCoords;

        specialinvoke $r21.<android.view.MotionEvent$PointerCoords: void <init>()>();

        r24[0] = $r21;

     label3:
        $r13 = r0.<com.android.server.accessibility.AutoclickController$ClickScheduler: android.view.MotionEvent mLastMotionEvent>;

        $r11 = r0.<com.android.server.accessibility.AutoclickController$ClickScheduler: android.view.MotionEvent$PointerCoords[] mTempPointerCoords>;

        $r12 = $r11[0];

        virtualinvoke $r13.<android.view.MotionEvent: void getPointerCoords(int,android.view.MotionEvent$PointerCoords)>(i0, $r12);

        l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r15 = r0.<com.android.server.accessibility.AutoclickController$ClickScheduler: android.view.MotionEvent$PointerProperties[] mTempPointerProperties>;

        $r16 = r0.<com.android.server.accessibility.AutoclickController$ClickScheduler: android.view.MotionEvent$PointerCoords[] mTempPointerCoords>;

        $i2 = r0.<com.android.server.accessibility.AutoclickController$ClickScheduler: int mMetaState>;

        $r14 = r0.<com.android.server.accessibility.AutoclickController$ClickScheduler: android.view.MotionEvent mLastMotionEvent>;

        $i3 = virtualinvoke $r14.<android.view.MotionEvent: int getDeviceId()>();

        $r17 = r0.<com.android.server.accessibility.AutoclickController$ClickScheduler: android.view.MotionEvent mLastMotionEvent>;

        $i4 = virtualinvoke $r17.<android.view.MotionEvent: int getSource()>();

        $r18 = r0.<com.android.server.accessibility.AutoclickController$ClickScheduler: android.view.MotionEvent mLastMotionEvent>;

        $i5 = virtualinvoke $r18.<android.view.MotionEvent: int getFlags()>();

        r25 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,int,android.view.MotionEvent$PointerProperties[],android.view.MotionEvent$PointerCoords[],int,int,float,float,int,int,int,int)>(l1, l1, 0, 1, $r15, $r16, $i2, 1, 1.0F, 1.0F, $i3, 0, $i4, $i5);

        r1 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(android.view.MotionEvent)>(r25);

        virtualinvoke r1.<android.view.MotionEvent: void setAction(int)>(1);

        $r19 = r0.<com.android.server.accessibility.AutoclickController$ClickScheduler: com.android.server.accessibility.AutoclickController this$0>;

        $i6 = r0.<com.android.server.accessibility.AutoclickController$ClickScheduler: int mEventPolicyFlags>;

        staticinvoke <com.android.server.accessibility.AutoclickController: void access$001(com.android.server.accessibility.AutoclickController,android.view.MotionEvent,android.view.MotionEvent,int)>($r19, r25, r25, $i6);

        virtualinvoke r25.<android.view.MotionEvent: void recycle()>();

        $r20 = r0.<com.android.server.accessibility.AutoclickController$ClickScheduler: com.android.server.accessibility.AutoclickController this$0>;

        $i7 = r0.<com.android.server.accessibility.AutoclickController$ClickScheduler: int mEventPolicyFlags>;

        staticinvoke <com.android.server.accessibility.AutoclickController: void access$101(com.android.server.accessibility.AutoclickController,android.view.MotionEvent,android.view.MotionEvent,int)>($r20, r1, r1, $i7);

        virtualinvoke r1.<android.view.MotionEvent: void recycle()>();

        return;

     label4:
        return;
    }

    public void cancel()
    {
        com.android.server.accessibility.AutoclickController$ClickScheduler r0;
        boolean $z0;
        android.os.Handler $r1;

        r0 := @this: com.android.server.accessibility.AutoclickController$ClickScheduler;

        $z0 = r0.<com.android.server.accessibility.AutoclickController$ClickScheduler: boolean mActive>;

        if $z0 != 0 goto label1;

        return;

     label1:
        specialinvoke r0.<com.android.server.accessibility.AutoclickController$ClickScheduler: void resetInternalState()>();

        $r1 = r0.<com.android.server.accessibility.AutoclickController$ClickScheduler: android.os.Handler mHandler>;

        virtualinvoke $r1.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>(r0);

        return;
    }

    public void run()
    {
        com.android.server.accessibility.AutoclickController$ClickScheduler r0;
        long l0, l1, $l3;
        byte $b2;
        android.os.Handler $r1;

        r0 := @this: com.android.server.accessibility.AutoclickController$ClickScheduler;

        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        l1 = r0.<com.android.server.accessibility.AutoclickController$ClickScheduler: long mScheduledClickTime>;

        $b2 = l0 cmp l1;

        if $b2 >= 0 goto label1;

        $r1 = r0.<com.android.server.accessibility.AutoclickController$ClickScheduler: android.os.Handler mHandler>;

        $l3 = l1 - l0;

        virtualinvoke $r1.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>(r0, $l3);

        return;

     label1:
        specialinvoke r0.<com.android.server.accessibility.AutoclickController$ClickScheduler: void sendClick()>();

        specialinvoke r0.<com.android.server.accessibility.AutoclickController$ClickScheduler: void resetInternalState()>();

        return;
    }

    public java.lang.String toString()
    {
        com.android.server.accessibility.AutoclickController$ClickScheduler r0;
        java.lang.StringBuilder $r2;
        boolean $z0;
        int $i0, $i2, $i3;
        long $l1;
        android.view.MotionEvent$PointerCoords $r10, $r13;
        float $f0, $f1;
        android.view.MotionEvent $r21;
        java.lang.String $r24;

        r0 := @this: com.android.server.accessibility.AutoclickController$ClickScheduler;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ClickScheduler: { active=");

        $z0 = r0.<com.android.server.accessibility.AutoclickController$ClickScheduler: boolean mActive>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", delay=");

        $i0 = r0.<com.android.server.accessibility.AutoclickController$ClickScheduler: int mDelay>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", scheduledClickTime=");

        $l1 = r0.<com.android.server.accessibility.AutoclickController$ClickScheduler: long mScheduledClickTime>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", anchor={x:");

        $r10 = r0.<com.android.server.accessibility.AutoclickController$ClickScheduler: android.view.MotionEvent$PointerCoords mAnchorCoords>;

        $f0 = $r10.<android.view.MotionEvent$PointerCoords: float x>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", y:");

        $r13 = r0.<com.android.server.accessibility.AutoclickController$ClickScheduler: android.view.MotionEvent$PointerCoords mAnchorCoords>;

        $f1 = $r13.<android.view.MotionEvent$PointerCoords: float y>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", metastate=");

        $i2 = r0.<com.android.server.accessibility.AutoclickController$ClickScheduler: int mMetaState>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", policyFlags=");

        $i3 = r0.<com.android.server.accessibility.AutoclickController$ClickScheduler: int mEventPolicyFlags>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", lastMotionEvent=");

        $r21 = r0.<com.android.server.accessibility.AutoclickController$ClickScheduler: android.view.MotionEvent mLastMotionEvent>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r21);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" }");

        $r24 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r24;
    }

    public void update(android.view.MotionEvent, int)
    {
        com.android.server.accessibility.AutoclickController$ClickScheduler r0;
        android.view.MotionEvent r1, $r2;
        int i0, $i1, $i2;
        boolean z0, z1;

        r0 := @this: com.android.server.accessibility.AutoclickController$ClickScheduler;

        r1 := @parameter0: android.view.MotionEvent;

        i0 := @parameter1: int;

        $i1 = virtualinvoke r1.<android.view.MotionEvent: int getMetaState()>();

        r0.<com.android.server.accessibility.AutoclickController$ClickScheduler: int mMetaState> = $i1;

        z0 = specialinvoke r0.<com.android.server.accessibility.AutoclickController$ClickScheduler: boolean detectMovement(android.view.MotionEvent)>(r1);

        $r2 = r0.<com.android.server.accessibility.AutoclickController$ClickScheduler: android.view.MotionEvent mLastMotionEvent>;

        if $r2 == null goto label2;

        if z0 == 0 goto label1;

        goto label2;

     label1:
        z1 = 0;

        goto label3;

     label2:
        z1 = 1;

     label3:
        specialinvoke r0.<com.android.server.accessibility.AutoclickController$ClickScheduler: void cacheLastEvent(android.view.MotionEvent,int,boolean)>(r1, i0, z1);

        if z0 == 0 goto label4;

        $i2 = r0.<com.android.server.accessibility.AutoclickController$ClickScheduler: int mDelay>;

        specialinvoke r0.<com.android.server.accessibility.AutoclickController$ClickScheduler: void rescheduleClick(int)>($i2);

     label4:
        return;
    }

    public void updateDelay(int)
    {
        com.android.server.accessibility.AutoclickController$ClickScheduler r0;
        int i0;

        r0 := @this: com.android.server.accessibility.AutoclickController$ClickScheduler;

        i0 := @parameter0: int;

        r0.<com.android.server.accessibility.AutoclickController$ClickScheduler: int mDelay> = i0;

        return;
    }

    public void updateMetaState(int)
    {
        com.android.server.accessibility.AutoclickController$ClickScheduler r0;
        int i0;

        r0 := @this: com.android.server.accessibility.AutoclickController$ClickScheduler;

        i0 := @parameter0: int;

        r0.<com.android.server.accessibility.AutoclickController$ClickScheduler: int mMetaState> = i0;

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.accessibility.AutoclickController$ClickScheduler: double MOVEMENT_SLOPE> = 20.0;

        return;
    }
}
