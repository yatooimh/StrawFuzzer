public class com.android.server.accessibility.AutoclickController extends com.android.server.accessibility.BaseEventStreamTransformation
{
    private static final java.lang.String LOG_TAG;
    private com.android.server.accessibility.AutoclickController$ClickDelayObserver mClickDelayObserver;
    private com.android.server.accessibility.AutoclickController$ClickScheduler mClickScheduler;
    private final android.content.Context mContext;
    private final int mUserId;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        $r0 = class "Lcom/android/server/accessibility/AutoclickController;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.android.server.accessibility.AutoclickController: java.lang.String LOG_TAG> = $r1;

        return;
    }

    public void <init>(android.content.Context, int)
    {
        com.android.server.accessibility.AutoclickController r0;
        android.content.Context r1;
        int i0;

        r0 := @this: com.android.server.accessibility.AutoclickController;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.accessibility.BaseEventStreamTransformation: void <init>()>();

        r0.<com.android.server.accessibility.AutoclickController: android.content.Context mContext> = r1;

        r0.<com.android.server.accessibility.AutoclickController: int mUserId> = i0;

        return;
    }

    static void access$001(com.android.server.accessibility.AutoclickController, android.view.MotionEvent, android.view.MotionEvent, int)
    {
        com.android.server.accessibility.AutoclickController r0;
        android.view.MotionEvent r1, r2;
        int i0;

        r0 := @parameter0: com.android.server.accessibility.AutoclickController;

        r1 := @parameter1: android.view.MotionEvent;

        r2 := @parameter2: android.view.MotionEvent;

        i0 := @parameter3: int;

        specialinvoke r0.<com.android.server.accessibility.BaseEventStreamTransformation: void onMotionEvent(android.view.MotionEvent,android.view.MotionEvent,int)>(r1, r2, i0);

        return;
    }

    static void access$101(com.android.server.accessibility.AutoclickController, android.view.MotionEvent, android.view.MotionEvent, int)
    {
        com.android.server.accessibility.AutoclickController r0;
        android.view.MotionEvent r1, r2;
        int i0;

        r0 := @parameter0: com.android.server.accessibility.AutoclickController;

        r1 := @parameter1: android.view.MotionEvent;

        r2 := @parameter2: android.view.MotionEvent;

        i0 := @parameter3: int;

        specialinvoke r0.<com.android.server.accessibility.BaseEventStreamTransformation: void onMotionEvent(android.view.MotionEvent,android.view.MotionEvent,int)>(r1, r2, i0);

        return;
    }

    private void handleMouseMotion(android.view.MotionEvent, int)
    {
        com.android.server.accessibility.AutoclickController r0;
        android.view.MotionEvent r1;
        int i0, i1, $i2;
        com.android.server.accessibility.AutoclickController$ClickScheduler $r2, $r3, $r4;

        r0 := @this: com.android.server.accessibility.AutoclickController;

        r1 := @parameter0: android.view.MotionEvent;

        i0 := @parameter1: int;

        i1 = virtualinvoke r1.<android.view.MotionEvent: int getActionMasked()>();

        if i1 == 7 goto label2;

        if i1 == 9 goto label1;

        if i1 == 10 goto label1;

        $r4 = r0.<com.android.server.accessibility.AutoclickController: com.android.server.accessibility.AutoclickController$ClickScheduler mClickScheduler>;

        virtualinvoke $r4.<com.android.server.accessibility.AutoclickController$ClickScheduler: void cancel()>();

        goto label4;

     label1:
        goto label4;

     label2:
        $i2 = virtualinvoke r1.<android.view.MotionEvent: int getPointerCount()>();

        if $i2 != 1 goto label3;

        $r3 = r0.<com.android.server.accessibility.AutoclickController: com.android.server.accessibility.AutoclickController$ClickScheduler mClickScheduler>;

        virtualinvoke $r3.<com.android.server.accessibility.AutoclickController$ClickScheduler: void update(android.view.MotionEvent,int)>(r1, i0);

        goto label4;

     label3:
        $r2 = r0.<com.android.server.accessibility.AutoclickController: com.android.server.accessibility.AutoclickController$ClickScheduler mClickScheduler>;

        virtualinvoke $r2.<com.android.server.accessibility.AutoclickController$ClickScheduler: void cancel()>();

     label4:
        return;
    }

    public void clearEvents(int)
    {
        com.android.server.accessibility.AutoclickController r0;
        int i0;
        com.android.server.accessibility.AutoclickController$ClickScheduler r1;

        r0 := @this: com.android.server.accessibility.AutoclickController;

        i0 := @parameter0: int;

        if i0 != 8194 goto label1;

        r1 = r0.<com.android.server.accessibility.AutoclickController: com.android.server.accessibility.AutoclickController$ClickScheduler mClickScheduler>;

        if r1 == null goto label1;

        virtualinvoke r1.<com.android.server.accessibility.AutoclickController$ClickScheduler: void cancel()>();

     label1:
        specialinvoke r0.<com.android.server.accessibility.BaseEventStreamTransformation: void clearEvents(int)>(i0);

        return;
    }

    public void onDestroy()
    {
        com.android.server.accessibility.AutoclickController r0;
        com.android.server.accessibility.AutoclickController$ClickDelayObserver r1;
        com.android.server.accessibility.AutoclickController$ClickScheduler r2;

        r0 := @this: com.android.server.accessibility.AutoclickController;

        r1 = r0.<com.android.server.accessibility.AutoclickController: com.android.server.accessibility.AutoclickController$ClickDelayObserver mClickDelayObserver>;

        if r1 == null goto label1;

        virtualinvoke r1.<com.android.server.accessibility.AutoclickController$ClickDelayObserver: void stop()>();

        r0.<com.android.server.accessibility.AutoclickController: com.android.server.accessibility.AutoclickController$ClickDelayObserver mClickDelayObserver> = null;

     label1:
        r2 = r0.<com.android.server.accessibility.AutoclickController: com.android.server.accessibility.AutoclickController$ClickScheduler mClickScheduler>;

        if r2 == null goto label2;

        virtualinvoke r2.<com.android.server.accessibility.AutoclickController$ClickScheduler: void cancel()>();

        r0.<com.android.server.accessibility.AutoclickController: com.android.server.accessibility.AutoclickController$ClickScheduler mClickScheduler> = null;

     label2:
        return;
    }

    public void onKeyEvent(android.view.KeyEvent, int)
    {
        com.android.server.accessibility.AutoclickController r0;
        android.view.KeyEvent r1;
        int i0, $i1, $i2;
        com.android.server.accessibility.AutoclickController$ClickScheduler $r2, $r3, $r4;
        boolean $z0;

        r0 := @this: com.android.server.accessibility.AutoclickController;

        r1 := @parameter0: android.view.KeyEvent;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.accessibility.AutoclickController: com.android.server.accessibility.AutoclickController$ClickScheduler mClickScheduler>;

        if $r2 == null goto label2;

        $i1 = virtualinvoke r1.<android.view.KeyEvent: int getKeyCode()>();

        $z0 = staticinvoke <android.view.KeyEvent: boolean isModifierKey(int)>($i1);

        if $z0 == 0 goto label1;

        $r4 = r0.<com.android.server.accessibility.AutoclickController: com.android.server.accessibility.AutoclickController$ClickScheduler mClickScheduler>;

        $i2 = virtualinvoke r1.<android.view.KeyEvent: int getMetaState()>();

        virtualinvoke $r4.<com.android.server.accessibility.AutoclickController$ClickScheduler: void updateMetaState(int)>($i2);

        goto label2;

     label1:
        $r3 = r0.<com.android.server.accessibility.AutoclickController: com.android.server.accessibility.AutoclickController$ClickScheduler mClickScheduler>;

        virtualinvoke $r3.<com.android.server.accessibility.AutoclickController$ClickScheduler: void cancel()>();

     label2:
        specialinvoke r0.<com.android.server.accessibility.BaseEventStreamTransformation: void onKeyEvent(android.view.KeyEvent,int)>(r1, i0);

        return;
    }

    public void onMotionEvent(android.view.MotionEvent, android.view.MotionEvent, int)
    {
        com.android.server.accessibility.AutoclickController r0;
        android.view.MotionEvent r1, r2;
        int i0, $i1;
        boolean $z0;
        com.android.server.accessibility.AutoclickController$ClickScheduler $r3, $r7, $r11, r14;
        android.os.Handler $r4;
        android.content.Context $r5, $r9;
        android.os.Looper $r6;
        com.android.server.accessibility.AutoclickController$ClickDelayObserver $r8;
        android.content.ContentResolver $r10;

        r0 := @this: com.android.server.accessibility.AutoclickController;

        r1 := @parameter0: android.view.MotionEvent;

        r2 := @parameter1: android.view.MotionEvent;

        i0 := @parameter2: int;

        $z0 = virtualinvoke r1.<android.view.MotionEvent: boolean isFromSource(int)>(8194);

        if $z0 == 0 goto label2;

        $r3 = r0.<com.android.server.accessibility.AutoclickController: com.android.server.accessibility.AutoclickController$ClickScheduler mClickScheduler>;

        if $r3 != null goto label1;

        $r4 = new android.os.Handler;

        $r5 = r0.<com.android.server.accessibility.AutoclickController: android.content.Context mContext>;

        $r6 = virtualinvoke $r5.<android.content.Context: android.os.Looper getMainLooper()>();

        specialinvoke $r4.<android.os.Handler: void <init>(android.os.Looper)>($r6);

        $r7 = new com.android.server.accessibility.AutoclickController$ClickScheduler;

        specialinvoke $r7.<com.android.server.accessibility.AutoclickController$ClickScheduler: void <init>(com.android.server.accessibility.AutoclickController,android.os.Handler,int)>(r0, $r4, 600);

        r0.<com.android.server.accessibility.AutoclickController: com.android.server.accessibility.AutoclickController$ClickScheduler mClickScheduler> = $r7;

        $r8 = new com.android.server.accessibility.AutoclickController$ClickDelayObserver;

        $i1 = r0.<com.android.server.accessibility.AutoclickController: int mUserId>;

        specialinvoke $r8.<com.android.server.accessibility.AutoclickController$ClickDelayObserver: void <init>(int,android.os.Handler)>($i1, $r4);

        r0.<com.android.server.accessibility.AutoclickController: com.android.server.accessibility.AutoclickController$ClickDelayObserver mClickDelayObserver> = $r8;

        $r9 = r0.<com.android.server.accessibility.AutoclickController: android.content.Context mContext>;

        $r10 = virtualinvoke $r9.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r11 = r0.<com.android.server.accessibility.AutoclickController: com.android.server.accessibility.AutoclickController$ClickScheduler mClickScheduler>;

        virtualinvoke $r8.<com.android.server.accessibility.AutoclickController$ClickDelayObserver: void start(android.content.ContentResolver,com.android.server.accessibility.AutoclickController$ClickScheduler)>($r10, $r11);

     label1:
        specialinvoke r0.<com.android.server.accessibility.AutoclickController: void handleMouseMotion(android.view.MotionEvent,int)>(r1, i0);

        goto label3;

     label2:
        r14 = r0.<com.android.server.accessibility.AutoclickController: com.android.server.accessibility.AutoclickController$ClickScheduler mClickScheduler>;

        if r14 == null goto label3;

        virtualinvoke r14.<com.android.server.accessibility.AutoclickController$ClickScheduler: void cancel()>();

     label3:
        specialinvoke r0.<com.android.server.accessibility.BaseEventStreamTransformation: void onMotionEvent(android.view.MotionEvent,android.view.MotionEvent,int)>(r1, r2, i0);

        return;
    }
}
