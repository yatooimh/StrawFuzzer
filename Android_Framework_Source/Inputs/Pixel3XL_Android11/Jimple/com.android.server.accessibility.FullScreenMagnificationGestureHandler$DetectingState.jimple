final class com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState extends java.lang.Object implements com.android.server.accessibility.FullScreenMagnificationGestureHandler$State, android.os.Handler$Callback
{
    private static final int MESSAGE_ON_TRIPLE_TAP_AND_HOLD;
    private static final int MESSAGE_TRANSITION_TO_DELEGATING_STATE;
    private static final int MESSAGE_TRANSITION_TO_PANNINGSCALING_STATE;
    private com.android.server.accessibility.FullScreenMagnificationGestureHandler$MotionEventInfo mDelayedEventQueue;
    android.os.Handler mHandler;
    private long mLastDetectingDownEventTime;
    android.view.MotionEvent mLastDown;
    private android.view.MotionEvent mLastUp;
    final int mLongTapMinDelay;
    final int mMultiTapMaxDelay;
    final int mMultiTapMaxDistance;
    private android.view.MotionEvent mPreLastDown;
    private android.view.MotionEvent mPreLastUp;
    private android.graphics.PointF mSecondPointerDownLocation;
    boolean mShortcutTriggered;
    final int mSwipeMinDistance;
    final com.android.server.accessibility.FullScreenMagnificationGestureHandler this$0;

    void <init>(com.android.server.accessibility.FullScreenMagnificationGestureHandler, android.content.Context)
    {
        com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState r0;
        com.android.server.accessibility.FullScreenMagnificationGestureHandler r1;
        android.content.Context r2;
        android.graphics.PointF $r3;
        android.os.Handler $r4;
        android.os.Looper $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.content.res.Resources $r6;
        android.view.ViewConfiguration $r7, $r8;

        r0 := @this: com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState;

        r1 := @parameter0: com.android.server.accessibility.FullScreenMagnificationGestureHandler;

        r2 := @parameter1: android.content.Context;

        r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: com.android.server.accessibility.FullScreenMagnificationGestureHandler this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new android.graphics.PointF;

        specialinvoke $r3.<android.graphics.PointF: void <init>(float,float)>(#NaNF, #NaNF);

        r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: android.graphics.PointF mSecondPointerDownLocation> = $r3;

        $r4 = new android.os.Handler;

        $r5 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        specialinvoke $r4.<android.os.Handler: void <init>(android.os.Looper,android.os.Handler$Callback)>($r5, r0);

        r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: android.os.Handler mHandler> = $r4;

        $i0 = staticinvoke <android.view.ViewConfiguration: int getLongPressTimeout()>();

        r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: int mLongTapMinDelay> = $i0;

        $i1 = staticinvoke <android.view.ViewConfiguration: int getDoubleTapTimeout()>();

        $r6 = virtualinvoke r2.<android.content.Context: android.content.res.Resources getResources()>();

        $i2 = virtualinvoke $r6.<android.content.res.Resources: int getInteger(int)>(17694893);

        $i3 = $i1 + $i2;

        r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: int mMultiTapMaxDelay> = $i3;

        $r7 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>(r2);

        $i4 = virtualinvoke $r7.<android.view.ViewConfiguration: int getScaledTouchSlop()>();

        r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: int mSwipeMinDistance> = $i4;

        $r8 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>(r2);

        $i5 = virtualinvoke $r8.<android.view.ViewConfiguration: int getScaledDoubleTapSlop()>();

        r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: int mMultiTapMaxDistance> = $i5;

        return;
    }

    private void cacheDelayedMotionEvent(android.view.MotionEvent, android.view.MotionEvent, int)
    {
        com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState r0;
        int i0, $i1, $i2;
        com.android.server.accessibility.FullScreenMagnificationGestureHandler$MotionEventInfo $r1, r9, $r10, r11;
        android.view.MotionEvent $r3, $r4, $r5, $r6, r7, r8;

        r0 := @this: com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState;

        r7 := @parameter0: android.view.MotionEvent;

        r8 := @parameter1: android.view.MotionEvent;

        i0 := @parameter2: int;

        $i1 = virtualinvoke r7.<android.view.MotionEvent: int getActionMasked()>();

        if $i1 != 0 goto label1;

        $r5 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: android.view.MotionEvent mLastDown>;

        r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: android.view.MotionEvent mPreLastDown> = $r5;

        $r6 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(android.view.MotionEvent)>(r7);

        r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: android.view.MotionEvent mLastDown> = $r6;

        goto label2;

     label1:
        $i2 = virtualinvoke r7.<android.view.MotionEvent: int getActionMasked()>();

        if $i2 != 1 goto label2;

        $r3 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: android.view.MotionEvent mLastUp>;

        r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: android.view.MotionEvent mPreLastUp> = $r3;

        $r4 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(android.view.MotionEvent)>(r7);

        r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: android.view.MotionEvent mLastUp> = $r4;

     label2:
        r9 = staticinvoke <com.android.server.accessibility.FullScreenMagnificationGestureHandler$MotionEventInfo: com.android.server.accessibility.FullScreenMagnificationGestureHandler$MotionEventInfo obtain(android.view.MotionEvent,android.view.MotionEvent,int)>(r7, r8, i0);

        $r10 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: com.android.server.accessibility.FullScreenMagnificationGestureHandler$MotionEventInfo mDelayedEventQueue>;

        if $r10 != null goto label3;

        r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: com.android.server.accessibility.FullScreenMagnificationGestureHandler$MotionEventInfo mDelayedEventQueue> = r9;

        goto label6;

     label3:
        r11 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: com.android.server.accessibility.FullScreenMagnificationGestureHandler$MotionEventInfo mDelayedEventQueue>;

     label4:
        $r1 = staticinvoke <com.android.server.accessibility.FullScreenMagnificationGestureHandler$MotionEventInfo: com.android.server.accessibility.FullScreenMagnificationGestureHandler$MotionEventInfo access$600(com.android.server.accessibility.FullScreenMagnificationGestureHandler$MotionEventInfo)>(r11);

        if $r1 == null goto label5;

        r11 = staticinvoke <com.android.server.accessibility.FullScreenMagnificationGestureHandler$MotionEventInfo: com.android.server.accessibility.FullScreenMagnificationGestureHandler$MotionEventInfo access$600(com.android.server.accessibility.FullScreenMagnificationGestureHandler$MotionEventInfo)>(r11);

        goto label4;

     label5:
        staticinvoke <com.android.server.accessibility.FullScreenMagnificationGestureHandler$MotionEventInfo: com.android.server.accessibility.FullScreenMagnificationGestureHandler$MotionEventInfo access$602(com.android.server.accessibility.FullScreenMagnificationGestureHandler$MotionEventInfo,com.android.server.accessibility.FullScreenMagnificationGestureHandler$MotionEventInfo)>(r11, r9);

     label6:
        return;
    }

    private void clearDelayedMotionEvents()
    {
        com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState r0;
        com.android.server.accessibility.FullScreenMagnificationGestureHandler$MotionEventInfo r1, $r2, $r3;

        r0 := @this: com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState;

     label1:
        $r2 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: com.android.server.accessibility.FullScreenMagnificationGestureHandler$MotionEventInfo mDelayedEventQueue>;

        if $r2 == null goto label2;

        r1 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: com.android.server.accessibility.FullScreenMagnificationGestureHandler$MotionEventInfo mDelayedEventQueue>;

        $r3 = staticinvoke <com.android.server.accessibility.FullScreenMagnificationGestureHandler$MotionEventInfo: com.android.server.accessibility.FullScreenMagnificationGestureHandler$MotionEventInfo access$600(com.android.server.accessibility.FullScreenMagnificationGestureHandler$MotionEventInfo)>(r1);

        r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: com.android.server.accessibility.FullScreenMagnificationGestureHandler$MotionEventInfo mDelayedEventQueue> = $r3;

        virtualinvoke r1.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$MotionEventInfo: void recycle()>();

        goto label1;

     label2:
        r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: android.view.MotionEvent mPreLastDown> = null;

        r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: android.view.MotionEvent mPreLastUp> = null;

        r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: android.view.MotionEvent mLastDown> = null;

        r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: android.view.MotionEvent mLastUp> = null;

        return;
    }

    private boolean isMagnifying()
    {
        com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState r0;
        com.android.server.accessibility.FullScreenMagnificationGestureHandler $r1, $r2;
        com.android.server.accessibility.MagnificationController $r3;
        int $i0;
        boolean $z0;

        r0 := @this: com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState;

        $r1 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: com.android.server.accessibility.FullScreenMagnificationGestureHandler this$0>;

        $r3 = $r1.<com.android.server.accessibility.FullScreenMagnificationGestureHandler: com.android.server.accessibility.MagnificationController mMagnificationController>;

        $r2 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: com.android.server.accessibility.FullScreenMagnificationGestureHandler this$0>;

        $i0 = staticinvoke <com.android.server.accessibility.FullScreenMagnificationGestureHandler: int access$300(com.android.server.accessibility.FullScreenMagnificationGestureHandler)>($r2);

        $z0 = virtualinvoke $r3.<com.android.server.accessibility.MagnificationController: boolean isMagnifying(int)>($i0);

        return $z0;
    }

    private boolean isMultiTap(android.view.MotionEvent, android.view.MotionEvent)
    {
        com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState r0;
        android.view.MotionEvent r1, r2;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState;

        r1 := @parameter0: android.view.MotionEvent;

        r2 := @parameter1: android.view.MotionEvent;

        $i1 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: int mMultiTapMaxDelay>;

        $i0 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: int mMultiTapMaxDistance>;

        $z0 = staticinvoke <com.android.server.accessibility.gestures.GestureUtils: boolean isMultiTap(android.view.MotionEvent,android.view.MotionEvent,int,int)>(r1, r2, $i1, $i0);

        return $z0;
    }

    private void onTripleTap(android.view.MotionEvent)
    {
        com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState r0;
        android.view.MotionEvent r1;
        com.android.server.accessibility.FullScreenMagnificationGestureHandler $r2, $r3, $r5, $r6;
        com.android.server.accessibility.MagnificationController $r4;
        int $i0;
        boolean $z0;
        float $f0, $f1;

        r0 := @this: com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState;

        r1 := @parameter0: android.view.MotionEvent;

        virtualinvoke r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: void clear()>();

        $r2 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: com.android.server.accessibility.FullScreenMagnificationGestureHandler this$0>;

        $r4 = $r2.<com.android.server.accessibility.FullScreenMagnificationGestureHandler: com.android.server.accessibility.MagnificationController mMagnificationController>;

        $r3 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: com.android.server.accessibility.FullScreenMagnificationGestureHandler this$0>;

        $i0 = staticinvoke <com.android.server.accessibility.FullScreenMagnificationGestureHandler: int access$300(com.android.server.accessibility.FullScreenMagnificationGestureHandler)>($r3);

        $z0 = virtualinvoke $r4.<com.android.server.accessibility.MagnificationController: boolean isMagnifying(int)>($i0);

        if $z0 == 0 goto label1;

        $r6 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: com.android.server.accessibility.FullScreenMagnificationGestureHandler this$0>;

        staticinvoke <com.android.server.accessibility.FullScreenMagnificationGestureHandler: void access$400(com.android.server.accessibility.FullScreenMagnificationGestureHandler)>($r6);

        goto label2;

     label1:
        $r5 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: com.android.server.accessibility.FullScreenMagnificationGestureHandler this$0>;

        $f0 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        $f1 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        staticinvoke <com.android.server.accessibility.FullScreenMagnificationGestureHandler: void access$800(com.android.server.accessibility.FullScreenMagnificationGestureHandler,float,float)>($r5, $f0, $f1);

     label2:
        return;
    }

    private void removePendingDelayedMessages()
    {
        com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState r0;
        android.os.Handler $r1, $r2, $r3;

        r0 := @this: com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState;

        $r1 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: android.os.Handler mHandler>;

        virtualinvoke $r1.<android.os.Handler: void removeMessages(int)>(1);

        $r2 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: android.os.Handler mHandler>;

        virtualinvoke $r2.<android.os.Handler: void removeMessages(int)>(2);

        $r3 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: android.os.Handler mHandler>;

        virtualinvoke $r3.<android.os.Handler: void removeMessages(int)>(3);

        return;
    }

    private boolean secondPointerDownValid()
    {
        com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState r0;
        android.graphics.PointF $r1, $r2;
        float $f0, $f1;
        boolean $z0, $z1, z2;

        r0 := @this: com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState;

        $r1 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: android.graphics.PointF mSecondPointerDownLocation>;

        $f0 = $r1.<android.graphics.PointF: float x>;

        $z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f0);

        if $z0 == 0 goto label2;

        $r2 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: android.graphics.PointF mSecondPointerDownLocation>;

        $f1 = $r2.<android.graphics.PointF: float y>;

        $z1 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f1);

        if $z1 != 0 goto label1;

        goto label2;

     label1:
        z2 = 0;

        goto label3;

     label2:
        z2 = 1;

     label3:
        return z2;
    }

    private void sendDelayedMotionEvents()
    {
        com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState r0;
        long l0, $l1, $l2, $l4, $l5, $l6, $l7;
        com.android.server.accessibility.FullScreenMagnificationGestureHandler$MotionEventInfo r1, $r3, $r4, $r10;
        com.android.server.accessibility.FullScreenMagnificationGestureHandler r2;
        int $i3, $i8;
        android.view.MotionEvent $r5, $r6, $r7, $r8;
        com.android.server.accessibility.FullScreenMagnificationGestureHandler$DelegatingState $r9;

        r0 := @this: com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState;

        $r3 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: com.android.server.accessibility.FullScreenMagnificationGestureHandler$MotionEventInfo mDelayedEventQueue>;

        if $r3 != null goto label1;

        return;

     label1:
        $l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l2 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: long mLastDetectingDownEventTime>;

        $l5 = $l1 - $l2;

        $i3 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: int mMultiTapMaxDelay>;

        $l4 = (long) $i3;

        l0 = staticinvoke <java.lang.Math: long min(long,long)>($l5, $l4);

     label2:
        r1 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: com.android.server.accessibility.FullScreenMagnificationGestureHandler$MotionEventInfo mDelayedEventQueue>;

        $r4 = staticinvoke <com.android.server.accessibility.FullScreenMagnificationGestureHandler$MotionEventInfo: com.android.server.accessibility.FullScreenMagnificationGestureHandler$MotionEventInfo access$600(com.android.server.accessibility.FullScreenMagnificationGestureHandler$MotionEventInfo)>(r1);

        r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: com.android.server.accessibility.FullScreenMagnificationGestureHandler$MotionEventInfo mDelayedEventQueue> = $r4;

        $r6 = r1.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$MotionEventInfo: android.view.MotionEvent event>;

        $r5 = r1.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$MotionEventInfo: android.view.MotionEvent event>;

        $l6 = virtualinvoke $r5.<android.view.MotionEvent: long getDownTime()>();

        $l7 = $l6 + l0;

        virtualinvoke $r6.<android.view.MotionEvent: void setDownTime(long)>($l7);

        r2 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: com.android.server.accessibility.FullScreenMagnificationGestureHandler this$0>;

        $r9 = r2.<com.android.server.accessibility.FullScreenMagnificationGestureHandler: com.android.server.accessibility.FullScreenMagnificationGestureHandler$DelegatingState mDelegatingState>;

        $r8 = r1.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$MotionEventInfo: android.view.MotionEvent event>;

        $r7 = r1.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$MotionEventInfo: android.view.MotionEvent rawEvent>;

        $i8 = r1.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$MotionEventInfo: int policyFlags>;

        staticinvoke <com.android.server.accessibility.FullScreenMagnificationGestureHandler: void access$700(com.android.server.accessibility.FullScreenMagnificationGestureHandler,com.android.server.accessibility.FullScreenMagnificationGestureHandler$State,android.view.MotionEvent,android.view.MotionEvent,int)>(r2, $r9, $r8, $r7, $i8);

        virtualinvoke r1.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$MotionEventInfo: void recycle()>();

        $r10 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: com.android.server.accessibility.FullScreenMagnificationGestureHandler$MotionEventInfo mDelayedEventQueue>;

        if $r10 != null goto label3;

        return;

     label3:
        goto label2;
    }

    private void storeSecondPointerDownLocation(android.view.MotionEvent)
    {
        com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState r0;
        android.view.MotionEvent r1;
        int i0;
        android.graphics.PointF $r2;
        float $f0, $f1;

        r0 := @this: com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState;

        r1 := @parameter0: android.view.MotionEvent;

        i0 = virtualinvoke r1.<android.view.MotionEvent: int getActionIndex()>();

        $r2 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: android.graphics.PointF mSecondPointerDownLocation>;

        $f0 = virtualinvoke r1.<android.view.MotionEvent: float getX(int)>(i0);

        $f1 = virtualinvoke r1.<android.view.MotionEvent: float getY(int)>(i0);

        virtualinvoke $r2.<android.graphics.PointF: void set(float,float)>($f0, $f1);

        return;
    }

    private long timeBetween(android.view.MotionEvent, android.view.MotionEvent)
    {
        com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState r0;
        android.view.MotionEvent r1, r2;
        long $l0, $l1, $l2, $l3;

        r0 := @this: com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState;

        r1 := @parameter0: android.view.MotionEvent;

        r2 := @parameter1: android.view.MotionEvent;

        if r1 != null goto label1;

        if r2 != null goto label1;

        return 0L;

     label1:
        $l0 = specialinvoke r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: long timeOf(android.view.MotionEvent)>(r1);

        $l1 = specialinvoke r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: long timeOf(android.view.MotionEvent)>(r2);

        $l2 = $l0 - $l1;

        $l3 = staticinvoke <java.lang.Math: long abs(long)>($l2);

        return $l3;
    }

    private long timeOf(android.view.MotionEvent)
    {
        com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState r0;
        android.view.MotionEvent r1;
        long l0;

        r0 := @this: com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState;

        r1 := @parameter0: android.view.MotionEvent;

        if r1 == null goto label1;

        l0 = virtualinvoke r1.<android.view.MotionEvent: long getEventTime()>();

        goto label2;

     label1:
        l0 = -9223372036854775808L;

     label2:
        return l0;
    }

    private void transitToPanningScalingStateAndClear()
    {
        com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState r0;
        com.android.server.accessibility.FullScreenMagnificationGestureHandler r1;
        com.android.server.accessibility.FullScreenMagnificationGestureHandler$PanningScalingState $r2;

        r0 := @this: com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState;

        r1 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: com.android.server.accessibility.FullScreenMagnificationGestureHandler this$0>;

        $r2 = r1.<com.android.server.accessibility.FullScreenMagnificationGestureHandler: com.android.server.accessibility.FullScreenMagnificationGestureHandler$PanningScalingState mPanningScalingState>;

        staticinvoke <com.android.server.accessibility.FullScreenMagnificationGestureHandler: void access$200(com.android.server.accessibility.FullScreenMagnificationGestureHandler,com.android.server.accessibility.FullScreenMagnificationGestureHandler$State)>(r1, $r2);

        virtualinvoke r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: void clear()>();

        return;
    }

    public void afterLongTapTimeoutTransitionToDraggingState(android.view.MotionEvent)
    {
        com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState r0;
        android.view.MotionEvent r1, $r3;
        android.os.Handler r2;
        android.os.Message $r4;
        int $i0;
        long $l1;

        r0 := @this: com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState;

        r1 := @parameter0: android.view.MotionEvent;

        r2 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: android.os.Handler mHandler>;

        $r3 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(android.view.MotionEvent)>(r1);

        $r4 = virtualinvoke r2.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(1, $r3);

        $i0 = staticinvoke <android.view.ViewConfiguration: int getLongPressTimeout()>();

        $l1 = (long) $i0;

        virtualinvoke r2.<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>($r4, $l1);

        return;
    }

    public void afterMultiTapTimeoutTransitionToDelegatingState()
    {
        com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState r0;
        int $i0;
        long $l1;
        android.os.Handler $r1;

        r0 := @this: com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState;

        $r1 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: android.os.Handler mHandler>;

        $i0 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: int mMultiTapMaxDelay>;

        $l1 = (long) $i0;

        virtualinvoke $r1.<android.os.Handler: boolean sendEmptyMessageDelayed(int,long)>(2, $l1);

        return;
    }

    public void clear()
    {
        com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState r0;
        android.graphics.PointF $r1;

        r0 := @this: com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState;

        virtualinvoke r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: void setShortcutTriggered(boolean)>(0);

        specialinvoke r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: void removePendingDelayedMessages()>();

        specialinvoke r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: void clearDelayedMotionEvents()>();

        $r1 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: android.graphics.PointF mSecondPointerDownLocation>;

        virtualinvoke $r1.<android.graphics.PointF: void set(float,float)>(#NaNF, #NaNF);

        return;
    }

    public boolean handleMessage(android.os.Message)
    {
        com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState r0;
        int i0;
        java.lang.Object $r1;
        java.lang.StringBuilder $r2;
        java.lang.IllegalArgumentException $r5;
        java.lang.String $r6;
        android.os.Message r7;
        android.view.MotionEvent r9;

        r0 := @this: com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState;

        r7 := @parameter0: android.os.Message;

        i0 = r7.<android.os.Message: int what>;

        if i0 == 1 goto label3;

        if i0 == 2 goto label2;

        if i0 != 3 goto label1;

        specialinvoke r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: void transitToPanningScalingStateAndClear()>();

        goto label4;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown message type: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label2:
        virtualinvoke r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: void transitionToDelegatingStateAndClear()>();

        goto label4;

     label3:
        $r1 = r7.<android.os.Message: java.lang.Object obj>;

        r9 = (android.view.MotionEvent) $r1;

        virtualinvoke r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: void transitionToViewportDraggingStateAndClear(android.view.MotionEvent)>(r9);

        virtualinvoke r9.<android.view.MotionEvent: void recycle()>();

     label4:
        return 1;
    }

    public boolean isFingerDown()
    {
        com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState r0;
        android.view.MotionEvent $r1;
        boolean z0;

        r0 := @this: com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState;

        $r1 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: android.view.MotionEvent mLastDown>;

        if $r1 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isMultiTapTriggered(int)
    {
        com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState r0;
        int i0, $i1, $i2, $i3, $i4;
        boolean z0, $z2, $z3, $z4, $z5, z6, z7;
        com.android.server.accessibility.FullScreenMagnificationGestureHandler $r1, $r2, $r3;
        com.android.server.accessibility.MagnificationController $r4;
        android.view.MotionEvent $r5, $r6, $r7, $r8;

        r0 := @this: com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState;

        i0 := @parameter0: int;

        z0 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: boolean mShortcutTriggered>;

        z6 = 1;

        if z0 == 0 goto label3;

        $i3 = virtualinvoke r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: int tapCount()>();

        $i4 = $i3 + 2;

        if $i4 < i0 goto label1;

        goto label2;

     label1:
        z6 = 0;

     label2:
        return z6;

     label3:
        $r1 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: com.android.server.accessibility.FullScreenMagnificationGestureHandler this$0>;

        $z2 = $r1.<com.android.server.accessibility.FullScreenMagnificationGestureHandler: boolean mDetectTripleTap>;

        if $z2 == 0 goto label4;

        $i2 = virtualinvoke r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: int tapCount()>();

        if $i2 < i0 goto label4;

        $r6 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: android.view.MotionEvent mPreLastDown>;

        $r5 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: android.view.MotionEvent mLastDown>;

        $z4 = specialinvoke r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: boolean isMultiTap(android.view.MotionEvent,android.view.MotionEvent)>($r6, $r5);

        if $z4 == 0 goto label4;

        $r8 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: android.view.MotionEvent mPreLastUp>;

        $r7 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: android.view.MotionEvent mLastUp>;

        $z5 = specialinvoke r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: boolean isMultiTap(android.view.MotionEvent,android.view.MotionEvent)>($r8, $r7);

        if $z5 == 0 goto label4;

        z7 = 1;

        goto label5;

     label4:
        z7 = 0;

     label5:
        if z7 == 0 goto label6;

        if i0 <= 2 goto label6;

        $r2 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: com.android.server.accessibility.FullScreenMagnificationGestureHandler this$0>;

        $r4 = $r2.<com.android.server.accessibility.FullScreenMagnificationGestureHandler: com.android.server.accessibility.MagnificationController mMagnificationController>;

        $r3 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: com.android.server.accessibility.FullScreenMagnificationGestureHandler this$0>;

        $i1 = staticinvoke <com.android.server.accessibility.FullScreenMagnificationGestureHandler: int access$300(com.android.server.accessibility.FullScreenMagnificationGestureHandler)>($r3);

        $z3 = virtualinvoke $r4.<com.android.server.accessibility.MagnificationController: boolean isMagnifying(int)>($i1);

        staticinvoke <com.android.internal.accessibility.util.AccessibilityStatsLogUtils: void logMagnificationTripleTap(boolean)>($z3);

     label6:
        return z7;
    }

    boolean isTapOutOfDistanceSlop()
    {
        com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState r0;
        android.view.MotionEvent r1, r2, $r4, $r5;
        com.android.server.accessibility.FullScreenMagnificationGestureHandler $r3;
        boolean $z0, $z1, z2;
        double $d0, $d1;
        int $i0, $i2, $i3;
        byte $b1;

        r0 := @this: com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState;

        $r3 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: com.android.server.accessibility.FullScreenMagnificationGestureHandler this$0>;

        $z0 = $r3.<com.android.server.accessibility.FullScreenMagnificationGestureHandler: boolean mDetectTripleTap>;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r1 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: android.view.MotionEvent mPreLastDown>;

        if r1 == null goto label7;

        r2 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: android.view.MotionEvent mLastDown>;

        if r2 != null goto label2;

        goto label7;

     label2:
        $d0 = staticinvoke <com.android.server.accessibility.gestures.GestureUtils: double distance(android.view.MotionEvent,android.view.MotionEvent)>(r1, r2);

        $i0 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: int mMultiTapMaxDistance>;

        $d1 = (double) $i0;

        $b1 = $d0 cmpl $d1;

        if $b1 <= 0 goto label3;

        z2 = 1;

        goto label4;

     label3:
        z2 = 0;

     label4:
        $i2 = virtualinvoke r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: int tapCount()>();

        if $i2 <= 0 goto label5;

        return z2;

     label5:
        if z2 == 0 goto label6;

        $r5 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: android.view.MotionEvent mPreLastDown>;

        $r4 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: android.view.MotionEvent mLastDown>;

        $i3 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: int mMultiTapMaxDelay>;

        $z1 = staticinvoke <com.android.server.accessibility.gestures.GestureUtils: boolean isTimedOut(android.view.MotionEvent,android.view.MotionEvent,int)>($r5, $r4, $i3);

        if $z1 != 0 goto label6;

        return 1;

     label6:
        return 0;

     label7:
        return 0;
    }

    public void onMotionEvent(android.view.MotionEvent, android.view.MotionEvent, int)
    {
        com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState r0;
        android.view.MotionEvent r1, r2, $r15, $r16, $r17, $r18, $r20;
        long $l0, $l4, $l6, $l19;
        android.os.Handler $r3, $r11, $r24;
        com.android.server.accessibility.FullScreenMagnificationGestureHandler $r4, $r5, $r7, $r8, $r9, $r12, $r13, $r21, $r22;
        com.android.server.accessibility.MagnificationController $r6, $r10, $r14, $r23;
        int $i1, $i2, $i3, $i5, $i8, $i10, $i12, $i14, $i15, $i16, $i17, $i18, i20, i21;
        float $f0, $f1, $f2, $f3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13;
        byte $b7, $b9, $b11, $b13;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        android.graphics.PointF $r19;

        r0 := @this: com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState;

        r1 := @parameter0: android.view.MotionEvent;

        r2 := @parameter1: android.view.MotionEvent;

        i20 := @parameter2: int;

        specialinvoke r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: void cacheDelayedMotionEvent(android.view.MotionEvent,android.view.MotionEvent,int)>(r1, r2, i20);

        i21 = virtualinvoke r1.<android.view.MotionEvent: int getActionMasked()>();

        if i21 == 0 goto label12;

        if i21 == 1 goto label08;

        if i21 == 2 goto label04;

        if i21 == 5 goto label02;

        if i21 == 6 goto label01;

        goto label18;

     label01:
        virtualinvoke r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: void transitionToDelegatingStateAndClear()>();

        goto label18;

     label02:
        $r21 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: com.android.server.accessibility.FullScreenMagnificationGestureHandler this$0>;

        $r23 = $r21.<com.android.server.accessibility.FullScreenMagnificationGestureHandler: com.android.server.accessibility.MagnificationController mMagnificationController>;

        $r22 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: com.android.server.accessibility.FullScreenMagnificationGestureHandler this$0>;

        $i16 = staticinvoke <com.android.server.accessibility.FullScreenMagnificationGestureHandler: int access$300(com.android.server.accessibility.FullScreenMagnificationGestureHandler)>($r22);

        $z13 = virtualinvoke $r23.<com.android.server.accessibility.MagnificationController: boolean isMagnifying(int)>($i16);

        if $z13 == 0 goto label03;

        $i17 = virtualinvoke r1.<android.view.MotionEvent: int getPointerCount()>();

        if $i17 != 2 goto label03;

        specialinvoke r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: void storeSecondPointerDownLocation(android.view.MotionEvent)>(r1);

        $r24 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: android.os.Handler mHandler>;

        $i18 = staticinvoke <android.view.ViewConfiguration: int getTapTimeout()>();

        $l19 = (long) $i18;

        virtualinvoke $r24.<android.os.Handler: boolean sendEmptyMessageDelayed(int,long)>(3, $l19);

        goto label18;

     label03:
        virtualinvoke r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: void transitionToDelegatingStateAndClear()>();

        goto label18;

     label04:
        $z8 = virtualinvoke r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: boolean isFingerDown()>();

        if $z8 == 0 goto label07;

        $r20 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: android.view.MotionEvent mLastDown>;

        $d4 = staticinvoke <com.android.server.accessibility.gestures.GestureUtils: double distance(android.view.MotionEvent,android.view.MotionEvent)>($r20, r1);

        $i12 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: int mSwipeMinDistance>;

        $d5 = (double) $i12;

        $b13 = $d4 cmpl $d5;

        if $b13 <= 0 goto label07;

        $z11 = virtualinvoke r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: boolean isMultiTapTriggered(int)>(2);

        if $z11 == 0 goto label05;

        $i15 = virtualinvoke r1.<android.view.MotionEvent: int getPointerCount()>();

        if $i15 != 1 goto label05;

        virtualinvoke r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: void transitionToViewportDraggingStateAndClear(android.view.MotionEvent)>(r1);

        goto label18;

     label05:
        $z12 = specialinvoke r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: boolean isMagnifying()>();

        if $z12 == 0 goto label06;

        $i14 = virtualinvoke r1.<android.view.MotionEvent: int getPointerCount()>();

        if $i14 != 2 goto label06;

        specialinvoke r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: void transitToPanningScalingStateAndClear()>();

        goto label18;

     label06:
        virtualinvoke r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: void transitionToDelegatingStateAndClear()>();

        goto label18;

     label07:
        $z9 = specialinvoke r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: boolean isMagnifying()>();

        if $z9 == 0 goto label18;

        $z10 = specialinvoke r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: boolean secondPointerDownValid()>();

        if $z10 == 0 goto label18;

        $r19 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: android.graphics.PointF mSecondPointerDownLocation>;

        $d2 = staticinvoke <com.android.server.accessibility.gestures.GestureUtils: double distanceClosestPointerToPoint(android.graphics.PointF,android.view.MotionEvent)>($r19, r1);

        $i10 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: int mSwipeMinDistance>;

        $d3 = (double) $i10;

        $b11 = $d2 cmpl $d3;

        if $b11 <= 0 goto label18;

        specialinvoke r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: void transitToPanningScalingStateAndClear()>();

        goto label18;

     label08:
        $r11 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: android.os.Handler mHandler>;

        virtualinvoke $r11.<android.os.Handler: void removeMessages(int)>(1);

        $r12 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: com.android.server.accessibility.FullScreenMagnificationGestureHandler this$0>;

        $r14 = $r12.<com.android.server.accessibility.FullScreenMagnificationGestureHandler: com.android.server.accessibility.MagnificationController mMagnificationController>;

        $r13 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: com.android.server.accessibility.FullScreenMagnificationGestureHandler this$0>;

        $i3 = staticinvoke <com.android.server.accessibility.FullScreenMagnificationGestureHandler: int access$300(com.android.server.accessibility.FullScreenMagnificationGestureHandler)>($r13);

        $f2 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        $f3 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        $z5 = virtualinvoke $r14.<com.android.server.accessibility.MagnificationController: boolean magnificationRegionContains(int,float,float)>($i3, $f2, $f3);

        if $z5 != 0 goto label09;

        virtualinvoke r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: void transitionToDelegatingStateAndClear()>();

        goto label18;

     label09:
        $z6 = virtualinvoke r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: boolean isMultiTapTriggered(int)>(3);

        if $z6 == 0 goto label10;

        specialinvoke r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: void onTripleTap(android.view.MotionEvent)>(r1);

        goto label18;

     label10:
        $z7 = virtualinvoke r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: boolean isFingerDown()>();

        if $z7 == 0 goto label18;

        $r16 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: android.view.MotionEvent mLastDown>;

        $r15 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: android.view.MotionEvent mLastUp>;

        $l4 = specialinvoke r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: long timeBetween(android.view.MotionEvent,android.view.MotionEvent)>($r16, $r15);

        $i5 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: int mLongTapMinDelay>;

        $l6 = (long) $i5;

        $b7 = $l4 cmp $l6;

        if $b7 >= 0 goto label11;

        $r18 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: android.view.MotionEvent mLastDown>;

        $r17 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: android.view.MotionEvent mLastUp>;

        $d0 = staticinvoke <com.android.server.accessibility.gestures.GestureUtils: double distance(android.view.MotionEvent,android.view.MotionEvent)>($r18, $r17);

        $i8 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: int mSwipeMinDistance>;

        $d1 = (double) $i8;

        $b9 = $d0 cmpl $d1;

        if $b9 < 0 goto label18;

     label11:
        virtualinvoke r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: void transitionToDelegatingStateAndClear()>();

        goto label18;

     label12:
        $l0 = virtualinvoke r1.<android.view.MotionEvent: long getDownTime()>();

        r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: long mLastDetectingDownEventTime> = $l0;

        $r3 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: android.os.Handler mHandler>;

        virtualinvoke $r3.<android.os.Handler: void removeMessages(int)>(2);

        $r4 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: com.android.server.accessibility.FullScreenMagnificationGestureHandler this$0>;

        $r6 = $r4.<com.android.server.accessibility.FullScreenMagnificationGestureHandler: com.android.server.accessibility.MagnificationController mMagnificationController>;

        $r5 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: com.android.server.accessibility.FullScreenMagnificationGestureHandler this$0>;

        $i1 = staticinvoke <com.android.server.accessibility.FullScreenMagnificationGestureHandler: int access$300(com.android.server.accessibility.FullScreenMagnificationGestureHandler)>($r5);

        $f0 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        $f1 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        $z0 = virtualinvoke $r6.<com.android.server.accessibility.MagnificationController: boolean magnificationRegionContains(int,float,float)>($i1, $f0, $f1);

        if $z0 != 0 goto label13;

        virtualinvoke r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: void transitionToDelegatingStateAndClear()>();

        goto label18;

     label13:
        $z1 = virtualinvoke r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: boolean isMultiTapTriggered(int)>(2);

        if $z1 == 0 goto label14;

        virtualinvoke r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: void afterLongTapTimeoutTransitionToDraggingState(android.view.MotionEvent)>(r1);

        goto label18;

     label14:
        $z2 = virtualinvoke r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: boolean isTapOutOfDistanceSlop()>();

        if $z2 == 0 goto label15;

        virtualinvoke r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: void transitionToDelegatingStateAndClear()>();

        goto label18;

     label15:
        $r7 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: com.android.server.accessibility.FullScreenMagnificationGestureHandler this$0>;

        $z3 = $r7.<com.android.server.accessibility.FullScreenMagnificationGestureHandler: boolean mDetectTripleTap>;

        if $z3 != 0 goto label17;

        $r8 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: com.android.server.accessibility.FullScreenMagnificationGestureHandler this$0>;

        $r10 = $r8.<com.android.server.accessibility.FullScreenMagnificationGestureHandler: com.android.server.accessibility.MagnificationController mMagnificationController>;

        $r9 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: com.android.server.accessibility.FullScreenMagnificationGestureHandler this$0>;

        $i2 = staticinvoke <com.android.server.accessibility.FullScreenMagnificationGestureHandler: int access$300(com.android.server.accessibility.FullScreenMagnificationGestureHandler)>($r9);

        $z4 = virtualinvoke $r10.<com.android.server.accessibility.MagnificationController: boolean isMagnifying(int)>($i2);

        if $z4 == 0 goto label16;

        goto label17;

     label16:
        virtualinvoke r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: void transitionToDelegatingStateAndClear()>();

        goto label18;

     label17:
        virtualinvoke r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: void afterMultiTapTimeoutTransitionToDelegatingState()>();

     label18:
        return;
    }

    void setShortcutTriggered(boolean)
    {
        com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState r0;
        boolean z0, $z1;
        com.android.server.accessibility.FullScreenMagnificationGestureHandler $r1, $r2;
        com.android.server.accessibility.MagnificationController $r3;
        int $i0;

        r0 := @this: com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState;

        z0 := @parameter0: boolean;

        $z1 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: boolean mShortcutTriggered>;

        if $z1 != z0 goto label1;

        return;

     label1:
        r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: boolean mShortcutTriggered> = z0;

        $r1 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: com.android.server.accessibility.FullScreenMagnificationGestureHandler this$0>;

        $r3 = $r1.<com.android.server.accessibility.FullScreenMagnificationGestureHandler: com.android.server.accessibility.MagnificationController mMagnificationController>;

        $r2 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: com.android.server.accessibility.FullScreenMagnificationGestureHandler this$0>;

        $i0 = staticinvoke <com.android.server.accessibility.FullScreenMagnificationGestureHandler: int access$300(com.android.server.accessibility.FullScreenMagnificationGestureHandler)>($r2);

        virtualinvoke $r3.<com.android.server.accessibility.MagnificationController: void setForceShowMagnifiableBounds(int,boolean)>($i0, z0);

        return;
    }

    public int tapCount()
    {
        com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState r0;
        com.android.server.accessibility.FullScreenMagnificationGestureHandler$MotionEventInfo $r1;
        int $i0;

        r0 := @this: com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState;

        $r1 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: com.android.server.accessibility.FullScreenMagnificationGestureHandler$MotionEventInfo mDelayedEventQueue>;

        $i0 = staticinvoke <com.android.server.accessibility.FullScreenMagnificationGestureHandler$MotionEventInfo: int countOf(com.android.server.accessibility.FullScreenMagnificationGestureHandler$MotionEventInfo,int)>($r1, 1);

        return $i0;
    }

    public java.lang.String toString()
    {
        com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState r0;
        java.lang.StringBuilder $r2;
        int $i0;
        boolean $z0;
        com.android.server.accessibility.FullScreenMagnificationGestureHandler$MotionEventInfo $r8;
        java.lang.String $r9, $r12;

        r0 := @this: com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DetectingState{tapCount()=");

        $i0 = virtualinvoke r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: int tapCount()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mShortcutTriggered=");

        $z0 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: boolean mShortcutTriggered>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mDelayedEventQueue=");

        $r8 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: com.android.server.accessibility.FullScreenMagnificationGestureHandler$MotionEventInfo mDelayedEventQueue>;

        $r9 = staticinvoke <com.android.server.accessibility.FullScreenMagnificationGestureHandler$MotionEventInfo: java.lang.String toString(com.android.server.accessibility.FullScreenMagnificationGestureHandler$MotionEventInfo)>($r8);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r12 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r12;
    }

    void toggleShortcutTriggered()
    {
        com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState r0;
        boolean $z0, $z1;

        r0 := @this: com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState;

        $z0 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: boolean mShortcutTriggered>;

        $z1 = $z0 ^ 1;

        virtualinvoke r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: void setShortcutTriggered(boolean)>($z1);

        return;
    }

    void transitionToDelegatingStateAndClear()
    {
        com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState r0;
        com.android.server.accessibility.FullScreenMagnificationGestureHandler r1;
        com.android.server.accessibility.FullScreenMagnificationGestureHandler$DelegatingState $r2;
        android.graphics.PointF $r3;

        r0 := @this: com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState;

        r1 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: com.android.server.accessibility.FullScreenMagnificationGestureHandler this$0>;

        $r2 = r1.<com.android.server.accessibility.FullScreenMagnificationGestureHandler: com.android.server.accessibility.FullScreenMagnificationGestureHandler$DelegatingState mDelegatingState>;

        staticinvoke <com.android.server.accessibility.FullScreenMagnificationGestureHandler: void access$200(com.android.server.accessibility.FullScreenMagnificationGestureHandler,com.android.server.accessibility.FullScreenMagnificationGestureHandler$State)>(r1, $r2);

        specialinvoke r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: void sendDelayedMotionEvents()>();

        specialinvoke r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: void removePendingDelayedMessages()>();

        $r3 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: android.graphics.PointF mSecondPointerDownLocation>;

        virtualinvoke $r3.<android.graphics.PointF: void set(float,float)>(#NaNF, #NaNF);

        return;
    }

    void transitionToViewportDraggingStateAndClear(android.view.MotionEvent)
    {
        com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState r0;
        com.android.server.accessibility.FullScreenMagnificationGestureHandler $r1, $r2, $r3, $r6, $r8, r11;
        com.android.server.accessibility.FullScreenMagnificationGestureHandler$ViewportDraggingState $r4, $r7, $r9;
        com.android.server.accessibility.MagnificationController $r5;
        int $i0;
        boolean $z0, $z1, $z2;
        float $f0, $f1;
        android.view.MotionEvent r10;

        r0 := @this: com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState;

        r10 := @parameter0: android.view.MotionEvent;

        virtualinvoke r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: void clear()>();

        $r1 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: com.android.server.accessibility.FullScreenMagnificationGestureHandler this$0>;

        $r4 = $r1.<com.android.server.accessibility.FullScreenMagnificationGestureHandler: com.android.server.accessibility.FullScreenMagnificationGestureHandler$ViewportDraggingState mViewportDraggingState>;

        $r2 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: com.android.server.accessibility.FullScreenMagnificationGestureHandler this$0>;

        $r5 = $r2.<com.android.server.accessibility.FullScreenMagnificationGestureHandler: com.android.server.accessibility.MagnificationController mMagnificationController>;

        $r3 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: com.android.server.accessibility.FullScreenMagnificationGestureHandler this$0>;

        $i0 = staticinvoke <com.android.server.accessibility.FullScreenMagnificationGestureHandler: int access$300(com.android.server.accessibility.FullScreenMagnificationGestureHandler)>($r3);

        $z0 = virtualinvoke $r5.<com.android.server.accessibility.MagnificationController: boolean isMagnifying(int)>($i0);

        $r4.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$ViewportDraggingState: boolean mZoomedInBeforeDrag> = $z0;

        $r6 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: com.android.server.accessibility.FullScreenMagnificationGestureHandler this$0>;

        $r7 = $r6.<com.android.server.accessibility.FullScreenMagnificationGestureHandler: com.android.server.accessibility.FullScreenMagnificationGestureHandler$ViewportDraggingState mViewportDraggingState>;

        $z1 = $r7.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$ViewportDraggingState: boolean mZoomedInBeforeDrag>;

        $z2 = $z1 ^ 1;

        staticinvoke <com.android.internal.accessibility.util.AccessibilityStatsLogUtils: void logMagnificationTripleTap(boolean)>($z2);

        $r8 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: com.android.server.accessibility.FullScreenMagnificationGestureHandler this$0>;

        $f0 = virtualinvoke r10.<android.view.MotionEvent: float getX()>();

        $f1 = virtualinvoke r10.<android.view.MotionEvent: float getY()>();

        staticinvoke <com.android.server.accessibility.FullScreenMagnificationGestureHandler: void access$800(com.android.server.accessibility.FullScreenMagnificationGestureHandler,float,float)>($r8, $f0, $f1);

        r11 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: com.android.server.accessibility.FullScreenMagnificationGestureHandler this$0>;

        $r9 = r11.<com.android.server.accessibility.FullScreenMagnificationGestureHandler: com.android.server.accessibility.FullScreenMagnificationGestureHandler$ViewportDraggingState mViewportDraggingState>;

        staticinvoke <com.android.server.accessibility.FullScreenMagnificationGestureHandler: void access$200(com.android.server.accessibility.FullScreenMagnificationGestureHandler,com.android.server.accessibility.FullScreenMagnificationGestureHandler$State)>(r11, $r9);

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: int MESSAGE_TRANSITION_TO_PANNINGSCALING_STATE> = 3;

        <com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: int MESSAGE_TRANSITION_TO_DELEGATING_STATE> = 2;

        <com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: int MESSAGE_ON_TRIPLE_TAP_AND_HOLD> = 1;

        return;
    }
}
