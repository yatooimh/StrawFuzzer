final class com.android.server.accessibility.FullScreenMagnificationGestureHandler$ViewportDraggingState extends java.lang.Object implements com.android.server.accessibility.FullScreenMagnificationGestureHandler$State
{
    private boolean mLastMoveOutsideMagnifiedRegion;
    boolean mZoomedInBeforeDrag;
    final com.android.server.accessibility.FullScreenMagnificationGestureHandler this$0;

    void <init>(com.android.server.accessibility.FullScreenMagnificationGestureHandler)
    {
        com.android.server.accessibility.FullScreenMagnificationGestureHandler$ViewportDraggingState r0;
        com.android.server.accessibility.FullScreenMagnificationGestureHandler r1;

        r0 := @this: com.android.server.accessibility.FullScreenMagnificationGestureHandler$ViewportDraggingState;

        r1 := @parameter0: com.android.server.accessibility.FullScreenMagnificationGestureHandler;

        r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$ViewportDraggingState: com.android.server.accessibility.FullScreenMagnificationGestureHandler this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void clear()
    {
        com.android.server.accessibility.FullScreenMagnificationGestureHandler$ViewportDraggingState r0;

        r0 := @this: com.android.server.accessibility.FullScreenMagnificationGestureHandler$ViewportDraggingState;

        r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$ViewportDraggingState: boolean mLastMoveOutsideMagnifiedRegion> = 0;

        return;
    }

    public void onMotionEvent(android.view.MotionEvent, android.view.MotionEvent, int)
    {
        com.android.server.accessibility.FullScreenMagnificationGestureHandler$ViewportDraggingState r0;
        android.view.MotionEvent r1, r18;
        float f0, f1;
        java.lang.StringBuilder $r2;
        java.lang.String $r4, $r7;
        java.lang.IllegalArgumentException $r6;
        boolean $z0, $z1, $z2;
        com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState $r8;
        com.android.server.accessibility.FullScreenMagnificationGestureHandler $r9, $r11, $r12, $r14, $r15, r19, r20;
        int $i0, $i1, $i2, i3, i4;
        java.lang.IllegalStateException $r10;
        com.android.server.accessibility.MagnificationController $r13, $r16;
        com.android.server.accessibility.FullScreenMagnificationGestureHandler$PanningScalingState $r17;

        r0 := @this: com.android.server.accessibility.FullScreenMagnificationGestureHandler$ViewportDraggingState;

        r18 := @parameter0: android.view.MotionEvent;

        r1 := @parameter1: android.view.MotionEvent;

        i3 := @parameter2: int;

        i4 = virtualinvoke r18.<android.view.MotionEvent: int getActionMasked()>();

        if i4 == 0 goto label9;

        if i4 == 1 goto label6;

        if i4 == 2 goto label2;

        if i4 == 3 goto label6;

        if i4 == 5 goto label1;

        if i4 == 6 goto label9;

        goto label8;

     label1:
        virtualinvoke r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$ViewportDraggingState: void clear()>();

        r19 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$ViewportDraggingState: com.android.server.accessibility.FullScreenMagnificationGestureHandler this$0>;

        $r17 = r19.<com.android.server.accessibility.FullScreenMagnificationGestureHandler: com.android.server.accessibility.FullScreenMagnificationGestureHandler$PanningScalingState mPanningScalingState>;

        staticinvoke <com.android.server.accessibility.FullScreenMagnificationGestureHandler: void access$200(com.android.server.accessibility.FullScreenMagnificationGestureHandler,com.android.server.accessibility.FullScreenMagnificationGestureHandler$State)>(r19, $r17);

        goto label8;

     label2:
        $i0 = virtualinvoke r18.<android.view.MotionEvent: int getPointerCount()>();

        if $i0 != 1 goto label5;

        f0 = virtualinvoke r18.<android.view.MotionEvent: float getX()>();

        f1 = virtualinvoke r18.<android.view.MotionEvent: float getY()>();

        $r11 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$ViewportDraggingState: com.android.server.accessibility.FullScreenMagnificationGestureHandler this$0>;

        $r13 = $r11.<com.android.server.accessibility.FullScreenMagnificationGestureHandler: com.android.server.accessibility.MagnificationController mMagnificationController>;

        $r12 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$ViewportDraggingState: com.android.server.accessibility.FullScreenMagnificationGestureHandler this$0>;

        $i1 = staticinvoke <com.android.server.accessibility.FullScreenMagnificationGestureHandler: int access$300(com.android.server.accessibility.FullScreenMagnificationGestureHandler)>($r12);

        $z1 = virtualinvoke $r13.<com.android.server.accessibility.MagnificationController: boolean magnificationRegionContains(int,float,float)>($i1, f0, f1);

        if $z1 == 0 goto label3;

        $r14 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$ViewportDraggingState: com.android.server.accessibility.FullScreenMagnificationGestureHandler this$0>;

        $r16 = $r14.<com.android.server.accessibility.FullScreenMagnificationGestureHandler: com.android.server.accessibility.MagnificationController mMagnificationController>;

        $r15 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$ViewportDraggingState: com.android.server.accessibility.FullScreenMagnificationGestureHandler this$0>;

        $i2 = staticinvoke <com.android.server.accessibility.FullScreenMagnificationGestureHandler: int access$300(com.android.server.accessibility.FullScreenMagnificationGestureHandler)>($r15);

        $z2 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$ViewportDraggingState: boolean mLastMoveOutsideMagnifiedRegion>;

        virtualinvoke $r16.<com.android.server.accessibility.MagnificationController: boolean setCenter(int,float,float,boolean,int)>($i2, f0, f1, $z2, 0);

        r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$ViewportDraggingState: boolean mLastMoveOutsideMagnifiedRegion> = 0;

        goto label4;

     label3:
        r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$ViewportDraggingState: boolean mLastMoveOutsideMagnifiedRegion> = 1;

     label4:
        goto label8;

     label5:
        $r10 = new java.lang.IllegalStateException;

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Should have one pointer down.");

        throw $r10;

     label6:
        $z0 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$ViewportDraggingState: boolean mZoomedInBeforeDrag>;

        if $z0 != 0 goto label7;

        $r9 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$ViewportDraggingState: com.android.server.accessibility.FullScreenMagnificationGestureHandler this$0>;

        staticinvoke <com.android.server.accessibility.FullScreenMagnificationGestureHandler: void access$400(com.android.server.accessibility.FullScreenMagnificationGestureHandler)>($r9);

     label7:
        virtualinvoke r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$ViewportDraggingState: void clear()>();

        r20 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$ViewportDraggingState: com.android.server.accessibility.FullScreenMagnificationGestureHandler this$0>;

        $r8 = r20.<com.android.server.accessibility.FullScreenMagnificationGestureHandler: com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState mDetectingState>;

        staticinvoke <com.android.server.accessibility.FullScreenMagnificationGestureHandler: void access$200(com.android.server.accessibility.FullScreenMagnificationGestureHandler,com.android.server.accessibility.FullScreenMagnificationGestureHandler$State)>(r20, $r8);

     label8:
        return;

     label9:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected event type: ");

        $r4 = staticinvoke <android.view.MotionEvent: java.lang.String actionToString(int)>(i4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r6;
    }

    public java.lang.String toString()
    {
        com.android.server.accessibility.FullScreenMagnificationGestureHandler$ViewportDraggingState r0;
        java.lang.StringBuilder $r2;
        boolean $z0, $z1;
        java.lang.String $r8;

        r0 := @this: com.android.server.accessibility.FullScreenMagnificationGestureHandler$ViewportDraggingState;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ViewportDraggingState{mZoomedInBeforeDrag=");

        $z0 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$ViewportDraggingState: boolean mZoomedInBeforeDrag>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mLastMoveOutsideMagnifiedRegion=");

        $z1 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$ViewportDraggingState: boolean mLastMoveOutsideMagnifiedRegion>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r8 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }
}
