class com.android.server.accessibility.FullScreenMagnificationGestureHandler extends com.android.server.accessibility.magnification.MagnificationGestureHandler
{
    private static final boolean DEBUG_ALL;
    private static final boolean DEBUG_DETECTING;
    private static final boolean DEBUG_EVENT_STREAM;
    private static final boolean DEBUG_PANNING_SCALING;
    private static final boolean DEBUG_STATE_TRANSITIONS;
    private static final java.lang.String LOG_TAG;
    private static final float MAX_SCALE;
    private static final float MIN_SCALE;
    com.android.server.accessibility.FullScreenMagnificationGestureHandler$State mCurrentState;
    private final java.util.Queue mDebugInputEventHistory;
    private final java.util.Queue mDebugOutputEventHistory;
    final com.android.server.accessibility.FullScreenMagnificationGestureHandler$DelegatingState mDelegatingState;
    final boolean mDetectShortcutTrigger;
    final boolean mDetectTripleTap;
    final com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState mDetectingState;
    private final int mDisplayId;
    final com.android.server.accessibility.MagnificationController mMagnificationController;
    final com.android.server.accessibility.FullScreenMagnificationGestureHandler$PanningScalingState mPanningScalingState;
    com.android.server.accessibility.FullScreenMagnificationGestureHandler$State mPreviousState;
    private final com.android.server.accessibility.FullScreenMagnificationGestureHandler$ScreenStateReceiver mScreenStateReceiver;
    private android.view.MotionEvent$PointerCoords[] mTempPointerCoords;
    private android.view.MotionEvent$PointerProperties[] mTempPointerProperties;
    final com.android.server.accessibility.FullScreenMagnificationGestureHandler$ViewportDraggingState mViewportDraggingState;

    void <init>(android.content.Context, com.android.server.accessibility.MagnificationController, boolean, boolean, int)
    {
        com.android.server.accessibility.FullScreenMagnificationGestureHandler r0;
        com.android.server.accessibility.MagnificationController r1;
        boolean z0, z1;
        int i0;
        com.android.server.accessibility.FullScreenMagnificationGestureHandler$DelegatingState $r2;
        com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState $r3, $r6;
        com.android.server.accessibility.FullScreenMagnificationGestureHandler$ViewportDraggingState $r4;
        com.android.server.accessibility.FullScreenMagnificationGestureHandler$PanningScalingState $r5;
        com.android.server.accessibility.FullScreenMagnificationGestureHandler$ScreenStateReceiver $r7;
        android.content.Context r8;

        r0 := @this: com.android.server.accessibility.FullScreenMagnificationGestureHandler;

        r8 := @parameter0: android.content.Context;

        r1 := @parameter1: com.android.server.accessibility.MagnificationController;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        i0 := @parameter4: int;

        specialinvoke r0.<com.android.server.accessibility.magnification.MagnificationGestureHandler: void <init>()>();

        r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler: com.android.server.accessibility.MagnificationController mMagnificationController> = r1;

        r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler: int mDisplayId> = i0;

        $r2 = new com.android.server.accessibility.FullScreenMagnificationGestureHandler$DelegatingState;

        specialinvoke $r2.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DelegatingState: void <init>(com.android.server.accessibility.FullScreenMagnificationGestureHandler)>(r0);

        r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler: com.android.server.accessibility.FullScreenMagnificationGestureHandler$DelegatingState mDelegatingState> = $r2;

        $r3 = new com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState;

        specialinvoke $r3.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: void <init>(com.android.server.accessibility.FullScreenMagnificationGestureHandler,android.content.Context)>(r0, r8);

        r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler: com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState mDetectingState> = $r3;

        $r4 = new com.android.server.accessibility.FullScreenMagnificationGestureHandler$ViewportDraggingState;

        specialinvoke $r4.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$ViewportDraggingState: void <init>(com.android.server.accessibility.FullScreenMagnificationGestureHandler)>(r0);

        r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler: com.android.server.accessibility.FullScreenMagnificationGestureHandler$ViewportDraggingState mViewportDraggingState> = $r4;

        $r5 = new com.android.server.accessibility.FullScreenMagnificationGestureHandler$PanningScalingState;

        specialinvoke $r5.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$PanningScalingState: void <init>(com.android.server.accessibility.FullScreenMagnificationGestureHandler,android.content.Context)>(r0, r8);

        r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler: com.android.server.accessibility.FullScreenMagnificationGestureHandler$PanningScalingState mPanningScalingState> = $r5;

        r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler: boolean mDetectTripleTap> = z0;

        r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler: boolean mDetectShortcutTrigger> = z1;

        if z1 == 0 goto label1;

        $r7 = new com.android.server.accessibility.FullScreenMagnificationGestureHandler$ScreenStateReceiver;

        specialinvoke $r7.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$ScreenStateReceiver: void <init>(android.content.Context,com.android.server.accessibility.FullScreenMagnificationGestureHandler)>(r8, r0);

        r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler: com.android.server.accessibility.FullScreenMagnificationGestureHandler$ScreenStateReceiver mScreenStateReceiver> = $r7;

        virtualinvoke $r7.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$ScreenStateReceiver: void register()>();

        goto label2;

     label1:
        r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler: com.android.server.accessibility.FullScreenMagnificationGestureHandler$ScreenStateReceiver mScreenStateReceiver> = null;

     label2:
        r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler: java.util.Queue mDebugInputEventHistory> = null;

        r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler: java.util.Queue mDebugOutputEventHistory> = null;

        $r6 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler: com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState mDetectingState>;

        specialinvoke r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler: void transitionTo(com.android.server.accessibility.FullScreenMagnificationGestureHandler$State)>($r6);

        return;
    }

    static void access$200(com.android.server.accessibility.FullScreenMagnificationGestureHandler, com.android.server.accessibility.FullScreenMagnificationGestureHandler$State)
    {
        com.android.server.accessibility.FullScreenMagnificationGestureHandler r0;
        com.android.server.accessibility.FullScreenMagnificationGestureHandler$State r1;

        r0 := @parameter0: com.android.server.accessibility.FullScreenMagnificationGestureHandler;

        r1 := @parameter1: com.android.server.accessibility.FullScreenMagnificationGestureHandler$State;

        specialinvoke r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler: void transitionTo(com.android.server.accessibility.FullScreenMagnificationGestureHandler$State)>(r1);

        return;
    }

    static int access$300(com.android.server.accessibility.FullScreenMagnificationGestureHandler)
    {
        com.android.server.accessibility.FullScreenMagnificationGestureHandler r0;
        int $i0;

        r0 := @parameter0: com.android.server.accessibility.FullScreenMagnificationGestureHandler;

        $i0 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler: int mDisplayId>;

        return $i0;
    }

    static void access$400(com.android.server.accessibility.FullScreenMagnificationGestureHandler)
    {
        com.android.server.accessibility.FullScreenMagnificationGestureHandler r0;

        r0 := @parameter0: com.android.server.accessibility.FullScreenMagnificationGestureHandler;

        specialinvoke r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler: void zoomOff()>();

        return;
    }

    static void access$500(com.android.server.accessibility.FullScreenMagnificationGestureHandler, android.view.MotionEvent, android.view.MotionEvent, int)
    {
        com.android.server.accessibility.FullScreenMagnificationGestureHandler r0;
        android.view.MotionEvent r1, r2;
        int i0;

        r0 := @parameter0: com.android.server.accessibility.FullScreenMagnificationGestureHandler;

        r1 := @parameter1: android.view.MotionEvent;

        r2 := @parameter2: android.view.MotionEvent;

        i0 := @parameter3: int;

        specialinvoke r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler: void dispatchTransformedEvent(android.view.MotionEvent,android.view.MotionEvent,int)>(r1, r2, i0);

        return;
    }

    static void access$700(com.android.server.accessibility.FullScreenMagnificationGestureHandler, com.android.server.accessibility.FullScreenMagnificationGestureHandler$State, android.view.MotionEvent, android.view.MotionEvent, int)
    {
        com.android.server.accessibility.FullScreenMagnificationGestureHandler r0;
        com.android.server.accessibility.FullScreenMagnificationGestureHandler$State r1;
        android.view.MotionEvent r2, r3;
        int i0;

        r0 := @parameter0: com.android.server.accessibility.FullScreenMagnificationGestureHandler;

        r1 := @parameter1: com.android.server.accessibility.FullScreenMagnificationGestureHandler$State;

        r2 := @parameter2: android.view.MotionEvent;

        r3 := @parameter3: android.view.MotionEvent;

        i0 := @parameter4: int;

        specialinvoke r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler: void handleEventWith(com.android.server.accessibility.FullScreenMagnificationGestureHandler$State,android.view.MotionEvent,android.view.MotionEvent,int)>(r1, r2, r3, i0);

        return;
    }

    static void access$800(com.android.server.accessibility.FullScreenMagnificationGestureHandler, float, float)
    {
        com.android.server.accessibility.FullScreenMagnificationGestureHandler r0;
        float f0, f1;

        r0 := @parameter0: com.android.server.accessibility.FullScreenMagnificationGestureHandler;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        specialinvoke r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler: void zoomOn(float,float)>(f0, f1);

        return;
    }

    static android.view.MotionEvent access$900(android.view.MotionEvent)
    {
        android.view.MotionEvent r0, $r1;

        r0 := @parameter0: android.view.MotionEvent;

        $r1 = staticinvoke <com.android.server.accessibility.FullScreenMagnificationGestureHandler: android.view.MotionEvent recycleAndNullify(android.view.MotionEvent)>(r0);

        return $r1;
    }

    private void dispatchTransformedEvent(android.view.MotionEvent, android.view.MotionEvent, int)
    {
        com.android.server.accessibility.FullScreenMagnificationGestureHandler r0;
        android.view.MotionEvent r1, r2;
        int i0;

        r0 := @this: com.android.server.accessibility.FullScreenMagnificationGestureHandler;

        r1 := @parameter0: android.view.MotionEvent;

        r2 := @parameter1: android.view.MotionEvent;

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.server.accessibility.magnification.MagnificationGestureHandler: void onMotionEvent(android.view.MotionEvent,android.view.MotionEvent,int)>(r1, r2, i0);

        return;
    }

    private android.view.MotionEvent$PointerCoords[] getTempPointerCoordsWithMinSize(int)
    {
        com.android.server.accessibility.FullScreenMagnificationGestureHandler r0;
        int i0, i1;
        android.view.MotionEvent$PointerCoords[] r1, $r2, $r4, r5, r6;
        android.view.MotionEvent$PointerCoords $r3;

        r0 := @this: com.android.server.accessibility.FullScreenMagnificationGestureHandler;

        i0 := @parameter0: int;

        r5 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler: android.view.MotionEvent$PointerCoords[] mTempPointerCoords>;

        if r5 == null goto label1;

        i1 = lengthof r5;

        goto label2;

     label1:
        i1 = 0;

     label2:
        if i1 >= i0 goto label3;

        r1 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler: android.view.MotionEvent$PointerCoords[] mTempPointerCoords>;

        r6 = newarray (android.view.MotionEvent$PointerCoords)[i0];

        r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler: android.view.MotionEvent$PointerCoords[] mTempPointerCoords> = r6;

        if r1 == null goto label3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r6, 0, i1);

     label3:
        if i1 >= i0 goto label4;

        $r4 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler: android.view.MotionEvent$PointerCoords[] mTempPointerCoords>;

        $r3 = new android.view.MotionEvent$PointerCoords;

        specialinvoke $r3.<android.view.MotionEvent$PointerCoords: void <init>()>();

        $r4[i1] = $r3;

        i1 = i1 + 1;

        goto label3;

     label4:
        $r2 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler: android.view.MotionEvent$PointerCoords[] mTempPointerCoords>;

        return $r2;
    }

    private android.view.MotionEvent$PointerProperties[] getTempPointerPropertiesWithMinSize(int)
    {
        com.android.server.accessibility.FullScreenMagnificationGestureHandler r0;
        int i0, i1;
        android.view.MotionEvent$PointerProperties[] r1, $r2, $r4, r5, r6;
        android.view.MotionEvent$PointerProperties $r3;

        r0 := @this: com.android.server.accessibility.FullScreenMagnificationGestureHandler;

        i0 := @parameter0: int;

        r5 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler: android.view.MotionEvent$PointerProperties[] mTempPointerProperties>;

        if r5 == null goto label1;

        i1 = lengthof r5;

        goto label2;

     label1:
        i1 = 0;

     label2:
        if i1 >= i0 goto label3;

        r6 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler: android.view.MotionEvent$PointerProperties[] mTempPointerProperties>;

        r1 = newarray (android.view.MotionEvent$PointerProperties)[i0];

        r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler: android.view.MotionEvent$PointerProperties[] mTempPointerProperties> = r1;

        if r6 == null goto label3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r6, 0, r1, 0, i1);

     label3:
        if i1 >= i0 goto label4;

        $r4 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler: android.view.MotionEvent$PointerProperties[] mTempPointerProperties>;

        $r3 = new android.view.MotionEvent$PointerProperties;

        specialinvoke $r3.<android.view.MotionEvent$PointerProperties: void <init>()>();

        $r4[i1] = $r3;

        i1 = i1 + 1;

        goto label3;

     label4:
        $r2 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler: android.view.MotionEvent$PointerProperties[] mTempPointerProperties>;

        return $r2;
    }

    private void handleEventWith(com.android.server.accessibility.FullScreenMagnificationGestureHandler$State, android.view.MotionEvent, android.view.MotionEvent, int)
    {
        com.android.server.accessibility.FullScreenMagnificationGestureHandler r0;
        com.android.server.accessibility.FullScreenMagnificationGestureHandler$State r1;
        android.view.MotionEvent r2, r3;
        int i0;
        com.android.server.accessibility.FullScreenMagnificationGestureHandler$PanningScalingState $r4, $r6;
        android.view.GestureDetector $r5;
        android.view.ScaleGestureDetector $r7;

        r0 := @this: com.android.server.accessibility.FullScreenMagnificationGestureHandler;

        r1 := @parameter0: com.android.server.accessibility.FullScreenMagnificationGestureHandler$State;

        r2 := @parameter1: android.view.MotionEvent;

        r3 := @parameter2: android.view.MotionEvent;

        i0 := @parameter3: int;

        $r4 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler: com.android.server.accessibility.FullScreenMagnificationGestureHandler$PanningScalingState mPanningScalingState>;

        $r5 = staticinvoke <com.android.server.accessibility.FullScreenMagnificationGestureHandler$PanningScalingState: android.view.GestureDetector access$000(com.android.server.accessibility.FullScreenMagnificationGestureHandler$PanningScalingState)>($r4);

        virtualinvoke $r5.<android.view.GestureDetector: boolean onTouchEvent(android.view.MotionEvent)>(r2);

        $r6 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler: com.android.server.accessibility.FullScreenMagnificationGestureHandler$PanningScalingState mPanningScalingState>;

        $r7 = staticinvoke <com.android.server.accessibility.FullScreenMagnificationGestureHandler$PanningScalingState: android.view.ScaleGestureDetector access$100(com.android.server.accessibility.FullScreenMagnificationGestureHandler$PanningScalingState)>($r6);

        virtualinvoke $r7.<android.view.ScaleGestureDetector: boolean onTouchEvent(android.view.MotionEvent)>(r2);

        interfaceinvoke r1.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$State: void onMotionEvent(android.view.MotionEvent,android.view.MotionEvent,int)>(r2, r3, i0);

        return;
    }

    private void onMotionEventInternal(android.view.MotionEvent, android.view.MotionEvent, int)
    {
        com.android.server.accessibility.FullScreenMagnificationGestureHandler r0;
        android.view.MotionEvent r1, r2;
        int i0;
        boolean $z0, $z1, $z2;
        com.android.server.accessibility.FullScreenMagnificationGestureHandler$State $r3;

        r0 := @this: com.android.server.accessibility.FullScreenMagnificationGestureHandler;

        r1 := @parameter0: android.view.MotionEvent;

        r2 := @parameter1: android.view.MotionEvent;

        i0 := @parameter2: int;

        $z0 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler: boolean mDetectTripleTap>;

        if $z0 != 0 goto label1;

        $z2 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler: boolean mDetectShortcutTrigger>;

        if $z2 == 0 goto label2;

     label1:
        $z1 = virtualinvoke r1.<android.view.MotionEvent: boolean isFromSource(int)>(4098);

        if $z1 != 0 goto label3;

     label2:
        specialinvoke r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler: void dispatchTransformedEvent(android.view.MotionEvent,android.view.MotionEvent,int)>(r1, r2, i0);

        return;

     label3:
        $r3 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler: com.android.server.accessibility.FullScreenMagnificationGestureHandler$State mCurrentState>;

        specialinvoke r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler: void handleEventWith(com.android.server.accessibility.FullScreenMagnificationGestureHandler$State,android.view.MotionEvent,android.view.MotionEvent,int)>($r3, r1, r2, i0);

        return;
    }

    private static android.view.MotionEvent recycleAndNullify(android.view.MotionEvent)
    {
        android.view.MotionEvent r0;

        r0 := @parameter0: android.view.MotionEvent;

        if r0 == null goto label1;

        virtualinvoke r0.<android.view.MotionEvent: void recycle()>();

     label1:
        return null;
    }

    private static void storeEventInto(java.util.Queue, android.view.MotionEvent)
    {
        java.util.Queue r0;
        android.view.MotionEvent r1, $r2, $r4, $r6;
        boolean $z1;
        long $l0, $l1, $l2;
        java.lang.Object $r3, $r5;
        byte $b3;

        r0 := @parameter0: java.util.Queue;

        r1 := @parameter1: android.view.MotionEvent;

        $r2 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(android.view.MotionEvent)>(r1);

        interfaceinvoke r0.<java.util.Queue: boolean add(java.lang.Object)>($r2);

     label1:
        $z1 = interfaceinvoke r0.<java.util.Queue: boolean isEmpty()>();

        if $z1 != 0 goto label2;

        $l0 = virtualinvoke r1.<android.view.MotionEvent: long getEventTime()>();

        $r3 = interfaceinvoke r0.<java.util.Queue: java.lang.Object peek()>();

        $r4 = (android.view.MotionEvent) $r3;

        $l1 = virtualinvoke $r4.<android.view.MotionEvent: long getEventTime()>();

        $l2 = $l0 - $l1;

        $b3 = $l2 cmp 5000L;

        if $b3 <= 0 goto label2;

        $r5 = interfaceinvoke r0.<java.util.Queue: java.lang.Object remove()>();

        $r6 = (android.view.MotionEvent) $r5;

        virtualinvoke $r6.<android.view.MotionEvent: void recycle()>();

        goto label1;

     label2:
        return;
    }

    private void transitionTo(com.android.server.accessibility.FullScreenMagnificationGestureHandler$State)
    {
        com.android.server.accessibility.FullScreenMagnificationGestureHandler r0;
        com.android.server.accessibility.FullScreenMagnificationGestureHandler$State r1, $r2;

        r0 := @this: com.android.server.accessibility.FullScreenMagnificationGestureHandler;

        r1 := @parameter0: com.android.server.accessibility.FullScreenMagnificationGestureHandler$State;

        $r2 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler: com.android.server.accessibility.FullScreenMagnificationGestureHandler$State mCurrentState>;

        r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler: com.android.server.accessibility.FullScreenMagnificationGestureHandler$State mPreviousState> = $r2;

        r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler: com.android.server.accessibility.FullScreenMagnificationGestureHandler$State mCurrentState> = r1;

        return;
    }

    private void zoomOff()
    {
        com.android.server.accessibility.FullScreenMagnificationGestureHandler r0;
        int $i0;
        com.android.server.accessibility.MagnificationController $r1;

        r0 := @this: com.android.server.accessibility.FullScreenMagnificationGestureHandler;

        $r1 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler: com.android.server.accessibility.MagnificationController mMagnificationController>;

        $i0 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler: int mDisplayId>;

        virtualinvoke $r1.<com.android.server.accessibility.MagnificationController: boolean reset(int,boolean)>($i0, 1);

        return;
    }

    private void zoomOn(float, float)
    {
        com.android.server.accessibility.FullScreenMagnificationGestureHandler r0;
        float f0, f1, f2, $f3;
        com.android.server.accessibility.MagnificationController $r1, $r2;
        int $i0;

        r0 := @this: com.android.server.accessibility.FullScreenMagnificationGestureHandler;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $r1 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler: com.android.server.accessibility.MagnificationController mMagnificationController>;

        $f3 = virtualinvoke $r1.<com.android.server.accessibility.MagnificationController: float getPersistedScale()>();

        f2 = staticinvoke <android.util.MathUtils: float constrain(float,float,float)>($f3, 2.0F, 8.0F);

        $r2 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler: com.android.server.accessibility.MagnificationController mMagnificationController>;

        $i0 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler: int mDisplayId>;

        virtualinvoke $r2.<com.android.server.accessibility.MagnificationController: boolean setScaleAndCenter(int,float,float,float,boolean,int)>($i0, f2, f0, f1, 1, 0);

        return;
    }

    void clearAndTransitionToStateDetecting()
    {
        com.android.server.accessibility.FullScreenMagnificationGestureHandler r0;
        com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState r1;
        com.android.server.accessibility.FullScreenMagnificationGestureHandler$ViewportDraggingState $r2;
        com.android.server.accessibility.FullScreenMagnificationGestureHandler$PanningScalingState $r3;

        r0 := @this: com.android.server.accessibility.FullScreenMagnificationGestureHandler;

        r1 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler: com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState mDetectingState>;

        r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler: com.android.server.accessibility.FullScreenMagnificationGestureHandler$State mCurrentState> = r1;

        virtualinvoke r1.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: void clear()>();

        $r2 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler: com.android.server.accessibility.FullScreenMagnificationGestureHandler$ViewportDraggingState mViewportDraggingState>;

        virtualinvoke $r2.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$ViewportDraggingState: void clear()>();

        $r3 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler: com.android.server.accessibility.FullScreenMagnificationGestureHandler$PanningScalingState mPanningScalingState>;

        virtualinvoke $r3.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$PanningScalingState: void clear()>();

        return;
    }

    public void clearEvents(int)
    {
        com.android.server.accessibility.FullScreenMagnificationGestureHandler r0;
        int i0;

        r0 := @this: com.android.server.accessibility.FullScreenMagnificationGestureHandler;

        i0 := @parameter0: int;

        if i0 != 4098 goto label1;

        virtualinvoke r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler: void clearAndTransitionToStateDetecting()>();

     label1:
        specialinvoke r0.<com.android.server.accessibility.magnification.MagnificationGestureHandler: void clearEvents(int)>(i0);

        return;
    }

    public void notifyShortcutTriggered()
    {
        com.android.server.accessibility.FullScreenMagnificationGestureHandler r0;
        boolean $z0, $z1;
        int $i0;
        com.android.server.accessibility.MagnificationController $r1;
        com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState $r2;

        r0 := @this: com.android.server.accessibility.FullScreenMagnificationGestureHandler;

        $z0 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler: boolean mDetectShortcutTrigger>;

        if $z0 == 0 goto label2;

        $r1 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler: com.android.server.accessibility.MagnificationController mMagnificationController>;

        $i0 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler: int mDisplayId>;

        $z1 = virtualinvoke $r1.<com.android.server.accessibility.MagnificationController: boolean resetIfNeeded(int,boolean)>($i0, 1);

        if $z1 == 0 goto label1;

        virtualinvoke r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler: void clearAndTransitionToStateDetecting()>();

        goto label2;

     label1:
        $r2 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler: com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState mDetectingState>;

        virtualinvoke $r2.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState: void toggleShortcutTriggered()>();

     label2:
        return;
    }

    public void onDestroy()
    {
        com.android.server.accessibility.FullScreenMagnificationGestureHandler r0;
        com.android.server.accessibility.FullScreenMagnificationGestureHandler$ScreenStateReceiver r1;
        com.android.server.accessibility.MagnificationController $r2;

        r0 := @this: com.android.server.accessibility.FullScreenMagnificationGestureHandler;

        r1 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler: com.android.server.accessibility.FullScreenMagnificationGestureHandler$ScreenStateReceiver mScreenStateReceiver>;

        if r1 == null goto label1;

        virtualinvoke r1.<com.android.server.accessibility.FullScreenMagnificationGestureHandler$ScreenStateReceiver: void unregister()>();

     label1:
        $r2 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler: com.android.server.accessibility.MagnificationController mMagnificationController>;

        virtualinvoke $r2.<com.android.server.accessibility.MagnificationController: void resetAllIfNeeded(int)>(0);

        virtualinvoke r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler: void clearAndTransitionToStateDetecting()>();

        return;
    }

    public void onMotionEvent(android.view.MotionEvent, android.view.MotionEvent, int)
    {
        com.android.server.accessibility.FullScreenMagnificationGestureHandler r0;
        android.view.MotionEvent r1, r2;
        int i0;

        r0 := @this: com.android.server.accessibility.FullScreenMagnificationGestureHandler;

        r1 := @parameter0: android.view.MotionEvent;

        r2 := @parameter1: android.view.MotionEvent;

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler: void onMotionEventInternal(android.view.MotionEvent,android.view.MotionEvent,int)>(r1, r2, i0);

        return;
    }

    public java.lang.String toString()
    {
        com.android.server.accessibility.FullScreenMagnificationGestureHandler r0;
        java.lang.StringBuilder $r2;
        com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState $r4;
        com.android.server.accessibility.FullScreenMagnificationGestureHandler$DelegatingState $r7;
        com.android.server.accessibility.FullScreenMagnificationGestureHandler$PanningScalingState $r10;
        com.android.server.accessibility.FullScreenMagnificationGestureHandler$ViewportDraggingState $r13;
        boolean $z0, $z1;
        com.android.server.accessibility.FullScreenMagnificationGestureHandler$State $r20, $r24;
        java.lang.String $r21, $r25, $r33;
        com.android.server.accessibility.MagnificationController $r28;
        int $i0;

        r0 := @this: com.android.server.accessibility.FullScreenMagnificationGestureHandler;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MagnificationGesture{mDetectingState=");

        $r4 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler: com.android.server.accessibility.FullScreenMagnificationGestureHandler$DetectingState mDetectingState>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mDelegatingState=");

        $r7 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler: com.android.server.accessibility.FullScreenMagnificationGestureHandler$DelegatingState mDelegatingState>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mMagnifiedInteractionState=");

        $r10 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler: com.android.server.accessibility.FullScreenMagnificationGestureHandler$PanningScalingState mPanningScalingState>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mViewportDraggingState=");

        $r13 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler: com.android.server.accessibility.FullScreenMagnificationGestureHandler$ViewportDraggingState mViewportDraggingState>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mDetectTripleTap=");

        $z0 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler: boolean mDetectTripleTap>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mDetectShortcutTrigger=");

        $z1 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler: boolean mDetectShortcutTrigger>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mCurrentState=");

        $r20 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler: com.android.server.accessibility.FullScreenMagnificationGestureHandler$State mCurrentState>;

        $r21 = staticinvoke <com.android.server.accessibility.FullScreenMagnificationGestureHandler$State: java.lang.String nameOf(com.android.server.accessibility.FullScreenMagnificationGestureHandler$State)>($r20);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mPreviousState=");

        $r24 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler: com.android.server.accessibility.FullScreenMagnificationGestureHandler$State mPreviousState>;

        $r25 = staticinvoke <com.android.server.accessibility.FullScreenMagnificationGestureHandler$State: java.lang.String nameOf(com.android.server.accessibility.FullScreenMagnificationGestureHandler$State)>($r24);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mMagnificationController=");

        $r28 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler: com.android.server.accessibility.MagnificationController mMagnificationController>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r28);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mDisplayId=");

        $i0 = r0.<com.android.server.accessibility.FullScreenMagnificationGestureHandler: int mDisplayId>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r33 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r33;
    }

    public static void <clinit>()
    {
        <com.android.server.accessibility.FullScreenMagnificationGestureHandler: float MIN_SCALE> = 2.0F;

        <com.android.server.accessibility.FullScreenMagnificationGestureHandler: float MAX_SCALE> = 8.0F;

        <com.android.server.accessibility.FullScreenMagnificationGestureHandler: java.lang.String LOG_TAG> = "FullScreenMagnificationGestureHandler";

        <com.android.server.accessibility.FullScreenMagnificationGestureHandler: boolean DEBUG_STATE_TRANSITIONS> = 0;

        <com.android.server.accessibility.FullScreenMagnificationGestureHandler: boolean DEBUG_PANNING_SCALING> = 0;

        <com.android.server.accessibility.FullScreenMagnificationGestureHandler: boolean DEBUG_EVENT_STREAM> = 0;

        <com.android.server.accessibility.FullScreenMagnificationGestureHandler: boolean DEBUG_DETECTING> = 0;

        <com.android.server.accessibility.FullScreenMagnificationGestureHandler: boolean DEBUG_ALL> = 0;

        return;
    }
}
