public class com.android.server.accessibility.KeyEventDispatcher extends java.lang.Object implements android.os.Handler$Callback
{
    private static final boolean DEBUG;
    private static final java.lang.String LOG_TAG;
    private static final int MAX_POOL_SIZE;
    public static final int MSG_ON_KEY_EVENT_TIMEOUT;
    private static final long ON_KEY_EVENT_TIMEOUT_MILLIS;
    private final android.os.Handler mHandlerToSendKeyEventsToInputFilter;
    private android.os.Handler mKeyEventTimeoutHandler;
    private final java.lang.Object mLock;
    private final int mMessageTypeForSendKeyEvent;
    private final android.util.Pools$Pool mPendingEventPool;
    private final java.util.Map mPendingEventsMap;
    private final android.os.PowerManager mPowerManager;
    private final android.view.InputEventConsistencyVerifier mSentEventsVerifier;

    public void <init>(android.os.Handler, int, java.lang.Object, android.os.PowerManager)
    {
        com.android.server.accessibility.KeyEventDispatcher r0;
        android.os.Handler r1, $r6;
        int i0;
        java.lang.Object r2;
        android.os.PowerManager r3;
        android.util.Pools$SimplePool $r4;
        android.util.ArrayMap $r5;
        boolean $z0;
        android.os.Looper $r7;
        android.view.InputEventConsistencyVerifier $r8;
        java.lang.Class $r9;
        java.lang.String $r10;

        r0 := @this: com.android.server.accessibility.KeyEventDispatcher;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: android.os.PowerManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new android.util.Pools$SimplePool;

        specialinvoke $r4.<android.util.Pools$SimplePool: void <init>(int)>(10);

        r0.<com.android.server.accessibility.KeyEventDispatcher: android.util.Pools$Pool mPendingEventPool> = $r4;

        $r5 = new android.util.ArrayMap;

        specialinvoke $r5.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.accessibility.KeyEventDispatcher: java.util.Map mPendingEventsMap> = $r5;

        $z0 = staticinvoke <android.view.InputEventConsistencyVerifier: boolean isInstrumentationEnabled()>();

        if $z0 == 0 goto label1;

        $r8 = new android.view.InputEventConsistencyVerifier;

        $r9 = class "Lcom/android/server/accessibility/KeyEventDispatcher;";

        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.String getSimpleName()>();

        specialinvoke $r8.<android.view.InputEventConsistencyVerifier: void <init>(java.lang.Object,int,java.lang.String)>(r0, 0, $r10);

        r0.<com.android.server.accessibility.KeyEventDispatcher: android.view.InputEventConsistencyVerifier mSentEventsVerifier> = $r8;

        goto label2;

     label1:
        r0.<com.android.server.accessibility.KeyEventDispatcher: android.view.InputEventConsistencyVerifier mSentEventsVerifier> = null;

     label2:
        r0.<com.android.server.accessibility.KeyEventDispatcher: android.os.Handler mHandlerToSendKeyEventsToInputFilter> = r1;

        r0.<com.android.server.accessibility.KeyEventDispatcher: int mMessageTypeForSendKeyEvent> = i0;

        $r6 = new android.os.Handler;

        $r7 = virtualinvoke r1.<android.os.Handler: android.os.Looper getLooper()>();

        specialinvoke $r6.<android.os.Handler: void <init>(android.os.Looper,android.os.Handler$Callback)>($r7, r0);

        r0.<com.android.server.accessibility.KeyEventDispatcher: android.os.Handler mKeyEventTimeoutHandler> = $r6;

        r0.<com.android.server.accessibility.KeyEventDispatcher: java.lang.Object mLock> = r2;

        r0.<com.android.server.accessibility.KeyEventDispatcher: android.os.PowerManager mPowerManager> = r3;

        return;
    }

    public void <init>(android.os.Handler, int, java.lang.Object, android.os.PowerManager, android.os.Handler)
    {
        com.android.server.accessibility.KeyEventDispatcher r0;
        android.os.Handler r1, r4;
        int i0;
        java.lang.Object r2;
        android.os.PowerManager r3;

        r0 := @this: com.android.server.accessibility.KeyEventDispatcher;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: android.os.PowerManager;

        r4 := @parameter4: android.os.Handler;

        specialinvoke r0.<com.android.server.accessibility.KeyEventDispatcher: void <init>(android.os.Handler,int,java.lang.Object,android.os.PowerManager)>(r1, i0, r2, r3);

        r0.<com.android.server.accessibility.KeyEventDispatcher: android.os.Handler mKeyEventTimeoutHandler> = r4;

        return;
    }

    private com.android.server.accessibility.KeyEventDispatcher$PendingKeyEvent obtainPendingEventLocked(android.view.KeyEvent, int)
    {
        com.android.server.accessibility.KeyEventDispatcher r0;
        android.view.KeyEvent r1;
        int i0;
        com.android.server.accessibility.KeyEventDispatcher$PendingKeyEvent r2, $r5, r6;
        android.util.Pools$Pool $r3;
        java.lang.Object $r4;

        r0 := @this: com.android.server.accessibility.KeyEventDispatcher;

        r1 := @parameter0: android.view.KeyEvent;

        i0 := @parameter1: int;

        $r3 = r0.<com.android.server.accessibility.KeyEventDispatcher: android.util.Pools$Pool mPendingEventPool>;

        $r4 = interfaceinvoke $r3.<android.util.Pools$Pool: java.lang.Object acquire()>();

        r2 = (com.android.server.accessibility.KeyEventDispatcher$PendingKeyEvent) $r4;

        r6 = r2;

        if r2 != null goto label1;

        $r5 = new com.android.server.accessibility.KeyEventDispatcher$PendingKeyEvent;

        specialinvoke $r5.<com.android.server.accessibility.KeyEventDispatcher$PendingKeyEvent: void <init>(com.android.server.accessibility.KeyEventDispatcher$1)>(null);

        r6 = $r5;

     label1:
        r6.<com.android.server.accessibility.KeyEventDispatcher$PendingKeyEvent: android.view.KeyEvent event> = r1;

        r6.<com.android.server.accessibility.KeyEventDispatcher$PendingKeyEvent: int policyFlags> = i0;

        r6.<com.android.server.accessibility.KeyEventDispatcher$PendingKeyEvent: int referenceCount> = 0;

        r6.<com.android.server.accessibility.KeyEventDispatcher$PendingKeyEvent: boolean handled> = 0;

        return r6;
    }

    private static com.android.server.accessibility.KeyEventDispatcher$PendingKeyEvent removeEventFromListLocked(java.util.List, int)
    {
        java.util.List r0;
        int i0, $i1, $i2, i3;
        com.android.server.accessibility.KeyEventDispatcher$PendingKeyEvent r1;
        java.lang.Object $r2;
        android.view.KeyEvent $r3;

        r0 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        i3 = 0;

     label1:
        $i1 = interfaceinvoke r0.<java.util.List: int size()>();

        if i3 >= $i1 goto label3;

        $r2 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i3);

        r1 = (com.android.server.accessibility.KeyEventDispatcher$PendingKeyEvent) $r2;

        $r3 = r1.<com.android.server.accessibility.KeyEventDispatcher$PendingKeyEvent: android.view.KeyEvent event>;

        $i2 = virtualinvoke $r3.<android.view.KeyEvent: int getSequenceNumber()>();

        if $i2 != i0 goto label2;

        interfaceinvoke r0.<java.util.List: boolean remove(java.lang.Object)>(r1);

        return r1;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return null;
    }

    private boolean removeReferenceToPendingEventLocked(com.android.server.accessibility.KeyEventDispatcher$PendingKeyEvent)
    {
        com.android.server.accessibility.KeyEventDispatcher r0;
        com.android.server.accessibility.KeyEventDispatcher$PendingKeyEvent r1;
        android.view.InputEventConsistencyVerifier r2;
        int $i0, $i1, $i2, i3, i4;
        android.os.Handler $r3, $r7;
        boolean $z0;
        android.view.KeyEvent $r4, $r6, $r9;
        android.util.Pools$Pool $r5;
        android.os.Message $r8;

        r0 := @this: com.android.server.accessibility.KeyEventDispatcher;

        r1 := @parameter0: com.android.server.accessibility.KeyEventDispatcher$PendingKeyEvent;

        $i0 = r1.<com.android.server.accessibility.KeyEventDispatcher$PendingKeyEvent: int referenceCount>;

        i3 = $i0 - 1;

        r1.<com.android.server.accessibility.KeyEventDispatcher$PendingKeyEvent: int referenceCount> = i3;

        if i3 <= 0 goto label1;

        return 0;

     label1:
        $r3 = r0.<com.android.server.accessibility.KeyEventDispatcher: android.os.Handler mKeyEventTimeoutHandler>;

        virtualinvoke $r3.<android.os.Handler: void removeMessages(int,java.lang.Object)>(1, r1);

        $z0 = r1.<com.android.server.accessibility.KeyEventDispatcher$PendingKeyEvent: boolean handled>;

        if $z0 != 0 goto label3;

        r2 = r0.<com.android.server.accessibility.KeyEventDispatcher: android.view.InputEventConsistencyVerifier mSentEventsVerifier>;

        if r2 == null goto label2;

        $r9 = r1.<com.android.server.accessibility.KeyEventDispatcher$PendingKeyEvent: android.view.KeyEvent event>;

        virtualinvoke r2.<android.view.InputEventConsistencyVerifier: void onKeyEvent(android.view.KeyEvent,int)>($r9, 0);

     label2:
        i4 = r1.<com.android.server.accessibility.KeyEventDispatcher$PendingKeyEvent: int policyFlags>;

        $r7 = r0.<com.android.server.accessibility.KeyEventDispatcher: android.os.Handler mHandlerToSendKeyEventsToInputFilter>;

        $i2 = r0.<com.android.server.accessibility.KeyEventDispatcher: int mMessageTypeForSendKeyEvent>;

        $i1 = i4 | 1073741824;

        $r6 = r1.<com.android.server.accessibility.KeyEventDispatcher$PendingKeyEvent: android.view.KeyEvent event>;

        $r8 = virtualinvoke $r7.<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>($i2, $i1, 0, $r6);

        virtualinvoke $r8.<android.os.Message: void sendToTarget()>();

        goto label4;

     label3:
        $r4 = r1.<com.android.server.accessibility.KeyEventDispatcher$PendingKeyEvent: android.view.KeyEvent event>;

        virtualinvoke $r4.<android.view.KeyEvent: void recycle()>();

     label4:
        $r5 = r0.<com.android.server.accessibility.KeyEventDispatcher: android.util.Pools$Pool mPendingEventPool>;

        interfaceinvoke $r5.<android.util.Pools$Pool: boolean release(java.lang.Object)>(r1);

        return 1;
    }

    public void flush(com.android.server.accessibility.KeyEventDispatcher$KeyEventFilter)
    {
        com.android.server.accessibility.KeyEventDispatcher r0;
        java.lang.Object r1, $r4, $r7;
        java.util.List r2;
        java.util.Map $r3, $r5;
        int $i0, i1;
        com.android.server.accessibility.KeyEventDispatcher$PendingKeyEvent $r8;
        java.lang.Throwable $r9;
        com.android.server.accessibility.KeyEventDispatcher$KeyEventFilter r10;

        r0 := @this: com.android.server.accessibility.KeyEventDispatcher;

        r10 := @parameter0: com.android.server.accessibility.KeyEventDispatcher$KeyEventFilter;

        r1 = r0.<com.android.server.accessibility.KeyEventDispatcher: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r3 = r0.<com.android.server.accessibility.KeyEventDispatcher: java.util.Map mPendingEventsMap>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r10);

        r2 = (java.util.List) $r4;

     label02:
        if r2 == null goto label06;

        i1 = 0;

     label03:
        $i0 = interfaceinvoke r2.<java.util.List: int size()>();

        if i1 >= $i0 goto label05;

        $r7 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i1);

        $r8 = (com.android.server.accessibility.KeyEventDispatcher$PendingKeyEvent) $r7;

        specialinvoke r0.<com.android.server.accessibility.KeyEventDispatcher: boolean removeReferenceToPendingEventLocked(com.android.server.accessibility.KeyEventDispatcher$PendingKeyEvent)>($r8);

     label04:
        i1 = i1 + 1;

        goto label03;

     label05:
        $r5 = r0.<com.android.server.accessibility.KeyEventDispatcher: java.util.Map mPendingEventsMap>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r10);

     label06:
        exitmonitor r1;

     label07:
        return;

     label08:
        $r9 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public boolean handleMessage(android.os.Message)
    {
        com.android.server.accessibility.KeyEventDispatcher r0;
        com.android.server.accessibility.KeyEventDispatcher$PendingKeyEvent r1;
        int $i0, $i1;
        java.lang.Object $r2, $r5, r14;
        java.util.Map $r3;
        java.util.Collection $r4;
        boolean $z0, $z1, $z2;
        java.util.ArrayList $r6;
        java.lang.StringBuilder $r7;
        java.lang.String $r10;
        java.lang.Throwable $r11;
        android.os.Message r12;
        java.util.Iterator r15;

        r0 := @this: com.android.server.accessibility.KeyEventDispatcher;

        r12 := @parameter0: android.os.Message;

        $i0 = r12.<android.os.Message: int what>;

        if $i0 == 1 goto label01;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown message: ");

        $i1 = r12.<android.os.Message: int what>;

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("KeyEventDispatcher", $r10);

        return 0;

     label01:
        $r2 = r12.<android.os.Message: java.lang.Object obj>;

        r1 = (com.android.server.accessibility.KeyEventDispatcher$PendingKeyEvent) $r2;

        r14 = r0.<com.android.server.accessibility.KeyEventDispatcher: java.lang.Object mLock>;

        entermonitor r14;

     label02:
        $r3 = r0.<com.android.server.accessibility.KeyEventDispatcher: java.util.Map mPendingEventsMap>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Collection values()>();

        r15 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

     label03:
        $z0 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label06;

        $r5 = interfaceinvoke r15.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (java.util.ArrayList) $r5;

        $z1 = virtualinvoke $r6.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        if $z1 == 0 goto label05;

        $z2 = specialinvoke r0.<com.android.server.accessibility.KeyEventDispatcher: boolean removeReferenceToPendingEventLocked(com.android.server.accessibility.KeyEventDispatcher$PendingKeyEvent)>(r1);

        if $z2 == 0 goto label05;

     label04:
        goto label06;

     label05:
        goto label03;

     label06:
        exitmonitor r14;

     label07:
        return 1;

     label08:
        $r11 := @caughtexception;

     label09:
        exitmonitor r14;

     label10:
        throw $r11;

        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public boolean notifyKeyEventLocked(android.view.KeyEvent, int, java.util.List)
    {
        com.android.server.accessibility.KeyEventDispatcher r0;
        int i0, $i1, $i2, $i3, $i4, i5;
        java.util.List r1;
        android.view.KeyEvent r2, r13;
        com.android.server.accessibility.KeyEventDispatcher$KeyEventFilter r3;
        java.util.ArrayList r4, $r10, r16;
        android.os.Handler $r5, $r6;
        java.lang.Object $r7, $r9;
        boolean $z1;
        java.util.Map $r8, $r11;
        com.android.server.accessibility.KeyEventDispatcher$PendingKeyEvent r14, r15;
        android.os.Message r17;

        r0 := @this: com.android.server.accessibility.KeyEventDispatcher;

        r13 := @parameter0: android.view.KeyEvent;

        i0 := @parameter1: int;

        r1 := @parameter2: java.util.List;

        r14 = null;

        r2 = staticinvoke <android.view.KeyEvent: android.view.KeyEvent obtain(android.view.KeyEvent)>(r13);

        i5 = 0;

     label1:
        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        if i5 >= $i1 goto label5;

        $r7 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i5);

        r3 = (com.android.server.accessibility.KeyEventDispatcher$KeyEventFilter) $r7;

        r15 = r14;

        $i2 = virtualinvoke r2.<android.view.KeyEvent: int getSequenceNumber()>();

        $z1 = interfaceinvoke r3.<com.android.server.accessibility.KeyEventDispatcher$KeyEventFilter: boolean onKeyEvent(android.view.KeyEvent,int)>(r2, $i2);

        if $z1 == 0 goto label4;

        r15 = r14;

        if r14 != null goto label2;

        r15 = specialinvoke r0.<com.android.server.accessibility.KeyEventDispatcher: com.android.server.accessibility.KeyEventDispatcher$PendingKeyEvent obtainPendingEventLocked(android.view.KeyEvent,int)>(r2, i0);

     label2:
        $r8 = r0.<com.android.server.accessibility.KeyEventDispatcher: java.util.Map mPendingEventsMap>;

        $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3);

        r4 = (java.util.ArrayList) $r9;

        r16 = r4;

        if r4 != null goto label3;

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        r16 = $r10;

        $r11 = r0.<com.android.server.accessibility.KeyEventDispatcher: java.util.Map mPendingEventsMap>;

        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, $r10);

     label3:
        virtualinvoke r16.<java.util.ArrayList: boolean add(java.lang.Object)>(r15);

        $i3 = r15.<com.android.server.accessibility.KeyEventDispatcher$PendingKeyEvent: int referenceCount>;

        $i4 = $i3 + 1;

        r15.<com.android.server.accessibility.KeyEventDispatcher$PendingKeyEvent: int referenceCount> = $i4;

     label4:
        i5 = i5 + 1;

        r14 = r15;

        goto label1;

     label5:
        if r14 != null goto label6;

        virtualinvoke r2.<android.view.KeyEvent: void recycle()>();

        return 0;

     label6:
        $r5 = r0.<com.android.server.accessibility.KeyEventDispatcher: android.os.Handler mKeyEventTimeoutHandler>;

        r17 = virtualinvoke $r5.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(1, r14);

        $r6 = r0.<com.android.server.accessibility.KeyEventDispatcher: android.os.Handler mKeyEventTimeoutHandler>;

        virtualinvoke $r6.<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>(r17, 500L);

        return 1;
    }

    public void setOnKeyEventResult(com.android.server.accessibility.KeyEventDispatcher$KeyEventFilter, boolean, int)
    {
        com.android.server.accessibility.KeyEventDispatcher r0;
        boolean z0, $z2;
        int i0;
        java.lang.Object r1, $r3;
        long l1, $l2;
        java.util.Map $r2;
        java.util.List $r4;
        android.view.KeyEvent $r5;
        android.os.PowerManager $r6;
        java.lang.Throwable $r7, $r8;
        com.android.server.accessibility.KeyEventDispatcher$KeyEventFilter r9;
        com.android.server.accessibility.KeyEventDispatcher$PendingKeyEvent r10;

        r0 := @this: com.android.server.accessibility.KeyEventDispatcher;

        r9 := @parameter0: com.android.server.accessibility.KeyEventDispatcher$KeyEventFilter;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        r1 = r0.<com.android.server.accessibility.KeyEventDispatcher: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r2 = r0.<com.android.server.accessibility.KeyEventDispatcher: java.util.Map mPendingEventsMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r9);

        $r4 = (java.util.List) $r3;

        r10 = staticinvoke <com.android.server.accessibility.KeyEventDispatcher: com.android.server.accessibility.KeyEventDispatcher$PendingKeyEvent removeEventFromListLocked(java.util.List,int)>($r4, i0);

     label02:
        if r10 == null goto label11;

        if z0 == 0 goto label10;

     label03:
        $z2 = r10.<com.android.server.accessibility.KeyEventDispatcher$PendingKeyEvent: boolean handled>;

        if $z2 != 0 goto label10;

        r10.<com.android.server.accessibility.KeyEventDispatcher$PendingKeyEvent: boolean handled> = z0;

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label04:
        $r6 = r0.<com.android.server.accessibility.KeyEventDispatcher: android.os.PowerManager mPowerManager>;

        $r5 = r10.<com.android.server.accessibility.KeyEventDispatcher$PendingKeyEvent: android.view.KeyEvent event>;

        $l2 = virtualinvoke $r5.<android.view.KeyEvent: long getEventTime()>();

        virtualinvoke $r6.<android.os.PowerManager: void userActivity(long,int,int)>($l2, 3, 0);

     label05:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

     label06:
        goto label10;

     label07:
        $r7 := @caughtexception;

     label08:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

     label09:
        throw $r7;

     label10:
        specialinvoke r0.<com.android.server.accessibility.KeyEventDispatcher: boolean removeReferenceToPendingEventLocked(com.android.server.accessibility.KeyEventDispatcher$PendingKeyEvent)>(r10);

     label11:
        exitmonitor r1;

     label12:
        return;

     label13:
        $r8 := @caughtexception;

     label14:
        exitmonitor r1;

     label15:
        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label04 to label05 with label07;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label10 to label11 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
    }

    public static void <clinit>()
    {
        <com.android.server.accessibility.KeyEventDispatcher: long ON_KEY_EVENT_TIMEOUT_MILLIS> = 500L;

        <com.android.server.accessibility.KeyEventDispatcher: int MSG_ON_KEY_EVENT_TIMEOUT> = 1;

        <com.android.server.accessibility.KeyEventDispatcher: int MAX_POOL_SIZE> = 10;

        <com.android.server.accessibility.KeyEventDispatcher: java.lang.String LOG_TAG> = "KeyEventDispatcher";

        <com.android.server.accessibility.KeyEventDispatcher: boolean DEBUG> = 0;

        return;
    }
}
