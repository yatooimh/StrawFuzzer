public class com.android.server.accessibility.KeyboardInterceptor extends com.android.server.accessibility.BaseEventStreamTransformation implements android.os.Handler$Callback
{
    private static final java.lang.String LOG_TAG;
    private static final int MESSAGE_PROCESS_QUEUED_EVENTS;
    private final com.android.server.accessibility.AccessibilityManagerService mAms;
    private com.android.server.accessibility.KeyboardInterceptor$KeyEventHolder mEventQueueEnd;
    private com.android.server.accessibility.KeyboardInterceptor$KeyEventHolder mEventQueueStart;
    private final android.os.Handler mHandler;
    private final com.android.server.policy.WindowManagerPolicy mPolicy;

    public void <init>(com.android.server.accessibility.AccessibilityManagerService, com.android.server.policy.WindowManagerPolicy)
    {
        com.android.server.accessibility.KeyboardInterceptor r0;
        com.android.server.accessibility.AccessibilityManagerService r1;
        com.android.server.policy.WindowManagerPolicy r2;
        android.os.Handler $r3;

        r0 := @this: com.android.server.accessibility.KeyboardInterceptor;

        r1 := @parameter0: com.android.server.accessibility.AccessibilityManagerService;

        r2 := @parameter1: com.android.server.policy.WindowManagerPolicy;

        specialinvoke r0.<com.android.server.accessibility.BaseEventStreamTransformation: void <init>()>();

        r0.<com.android.server.accessibility.KeyboardInterceptor: com.android.server.accessibility.AccessibilityManagerService mAms> = r1;

        r0.<com.android.server.accessibility.KeyboardInterceptor: com.android.server.policy.WindowManagerPolicy mPolicy> = r2;

        $r3 = new android.os.Handler;

        specialinvoke $r3.<android.os.Handler: void <init>(android.os.Handler$Callback)>(r0);

        r0.<com.android.server.accessibility.KeyboardInterceptor: android.os.Handler mHandler> = $r3;

        return;
    }

    public void <init>(com.android.server.accessibility.AccessibilityManagerService, com.android.server.policy.WindowManagerPolicy, android.os.Handler)
    {
        com.android.server.accessibility.KeyboardInterceptor r0;
        com.android.server.accessibility.AccessibilityManagerService r1;
        com.android.server.policy.WindowManagerPolicy r2;
        android.os.Handler r3;

        r0 := @this: com.android.server.accessibility.KeyboardInterceptor;

        r1 := @parameter0: com.android.server.accessibility.AccessibilityManagerService;

        r2 := @parameter1: com.android.server.policy.WindowManagerPolicy;

        r3 := @parameter2: android.os.Handler;

        specialinvoke r0.<com.android.server.accessibility.BaseEventStreamTransformation: void <init>()>();

        r0.<com.android.server.accessibility.KeyboardInterceptor: com.android.server.accessibility.AccessibilityManagerService mAms> = r1;

        r0.<com.android.server.accessibility.KeyboardInterceptor: com.android.server.policy.WindowManagerPolicy mPolicy> = r2;

        r0.<com.android.server.accessibility.KeyboardInterceptor: android.os.Handler mHandler> = r3;

        return;
    }

    private void addEventToQueue(android.view.KeyEvent, int, long)
    {
        com.android.server.accessibility.KeyboardInterceptor r0;
        int i0;
        long $l1, l2, l3;
        com.android.server.accessibility.KeyboardInterceptor$KeyEventHolder $r1, $r2, $r3, r5, r6;
        android.view.KeyEvent r4;

        r0 := @this: com.android.server.accessibility.KeyboardInterceptor;

        r4 := @parameter0: android.view.KeyEvent;

        i0 := @parameter1: int;

        l2 := @parameter2: long;

        $l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        l3 = $l1 + l2;

        $r1 = r0.<com.android.server.accessibility.KeyboardInterceptor: com.android.server.accessibility.KeyboardInterceptor$KeyEventHolder mEventQueueStart>;

        if $r1 != null goto label1;

        r5 = staticinvoke <com.android.server.accessibility.KeyboardInterceptor$KeyEventHolder: com.android.server.accessibility.KeyboardInterceptor$KeyEventHolder obtain(android.view.KeyEvent,int,long)>(r4, i0, l3);

        r0.<com.android.server.accessibility.KeyboardInterceptor: com.android.server.accessibility.KeyboardInterceptor$KeyEventHolder mEventQueueStart> = r5;

        r0.<com.android.server.accessibility.KeyboardInterceptor: com.android.server.accessibility.KeyboardInterceptor$KeyEventHolder mEventQueueEnd> = r5;

        specialinvoke r0.<com.android.server.accessibility.KeyboardInterceptor: void scheduleProcessQueuedEvents()>();

        return;

     label1:
        r6 = staticinvoke <com.android.server.accessibility.KeyboardInterceptor$KeyEventHolder: com.android.server.accessibility.KeyboardInterceptor$KeyEventHolder obtain(android.view.KeyEvent,int,long)>(r4, i0, l3);

        $r2 = r0.<com.android.server.accessibility.KeyboardInterceptor: com.android.server.accessibility.KeyboardInterceptor$KeyEventHolder mEventQueueStart>;

        r6.<com.android.server.accessibility.KeyboardInterceptor$KeyEventHolder: com.android.server.accessibility.KeyboardInterceptor$KeyEventHolder next> = $r2;

        $r3 = r0.<com.android.server.accessibility.KeyboardInterceptor: com.android.server.accessibility.KeyboardInterceptor$KeyEventHolder mEventQueueStart>;

        $r3.<com.android.server.accessibility.KeyboardInterceptor$KeyEventHolder: com.android.server.accessibility.KeyboardInterceptor$KeyEventHolder previous> = r6;

        r0.<com.android.server.accessibility.KeyboardInterceptor: com.android.server.accessibility.KeyboardInterceptor$KeyEventHolder mEventQueueStart> = r6;

        return;
    }

    private long getEventDelay(android.view.KeyEvent, int)
    {
        com.android.server.accessibility.KeyboardInterceptor r0;
        android.view.KeyEvent r1;
        int i0, i1;
        com.android.server.policy.WindowManagerPolicy $r2;
        long $l2;

        r0 := @this: com.android.server.accessibility.KeyboardInterceptor;

        r1 := @parameter0: android.view.KeyEvent;

        i0 := @parameter1: int;

        i1 = virtualinvoke r1.<android.view.KeyEvent: int getKeyCode()>();

        if i1 == 25 goto label2;

        if i1 != 24 goto label1;

        goto label2;

     label1:
        return 0L;

     label2:
        $r2 = r0.<com.android.server.accessibility.KeyboardInterceptor: com.android.server.policy.WindowManagerPolicy mPolicy>;

        $l2 = interfaceinvoke $r2.<com.android.server.policy.WindowManagerPolicy: long interceptKeyBeforeDispatching(android.os.IBinder,android.view.KeyEvent,int)>(null, r1, i0);

        return $l2;
    }

    private void processQueuedEvents()
    {
        com.android.server.accessibility.KeyboardInterceptor r0;
        long l0, l1, $l2, $l8;
        com.android.server.accessibility.KeyboardInterceptor$KeyEventHolder r1, $r2, $r3, $r5, $r6, $r7, $r8, $r11, r12, r13;
        byte $b3, $b5, $b6;
        int $i4, $i7;
        android.view.KeyEvent $r4, $r9;
        com.android.server.accessibility.AccessibilityManagerService $r10;

        r0 := @this: com.android.server.accessibility.KeyboardInterceptor;

        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

     label1:
        r12 = r0.<com.android.server.accessibility.KeyboardInterceptor: com.android.server.accessibility.KeyboardInterceptor$KeyEventHolder mEventQueueEnd>;

        if r12 == null goto label6;

        $l2 = r12.<com.android.server.accessibility.KeyboardInterceptor$KeyEventHolder: long dispatchTime>;

        $b3 = $l2 cmp l0;

        if $b3 > 0 goto label6;

        $r2 = r0.<com.android.server.accessibility.KeyboardInterceptor: com.android.server.accessibility.KeyboardInterceptor$KeyEventHolder mEventQueueEnd>;

        $r4 = $r2.<com.android.server.accessibility.KeyboardInterceptor$KeyEventHolder: android.view.KeyEvent event>;

        $r3 = r0.<com.android.server.accessibility.KeyboardInterceptor: com.android.server.accessibility.KeyboardInterceptor$KeyEventHolder mEventQueueEnd>;

        $i4 = $r3.<com.android.server.accessibility.KeyboardInterceptor$KeyEventHolder: int policyFlags>;

        l1 = specialinvoke r0.<com.android.server.accessibility.KeyboardInterceptor: long getEventDelay(android.view.KeyEvent,int)>($r4, $i4);

        $b5 = l1 cmp 0L;

        if $b5 <= 0 goto label2;

        $r11 = r0.<com.android.server.accessibility.KeyboardInterceptor: com.android.server.accessibility.KeyboardInterceptor$KeyEventHolder mEventQueueEnd>;

        $l8 = l0 + l1;

        $r11.<com.android.server.accessibility.KeyboardInterceptor$KeyEventHolder: long dispatchTime> = $l8;

        return;

     label2:
        $b6 = l1 cmp 0L;

        if $b6 != 0 goto label3;

        $r10 = r0.<com.android.server.accessibility.KeyboardInterceptor: com.android.server.accessibility.AccessibilityManagerService mAms>;

        $r7 = r0.<com.android.server.accessibility.KeyboardInterceptor: com.android.server.accessibility.KeyboardInterceptor$KeyEventHolder mEventQueueEnd>;

        $r9 = $r7.<com.android.server.accessibility.KeyboardInterceptor$KeyEventHolder: android.view.KeyEvent event>;

        $r8 = r0.<com.android.server.accessibility.KeyboardInterceptor: com.android.server.accessibility.KeyboardInterceptor$KeyEventHolder mEventQueueEnd>;

        $i7 = $r8.<com.android.server.accessibility.KeyboardInterceptor$KeyEventHolder: int policyFlags>;

        virtualinvoke $r10.<com.android.server.accessibility.AccessibilityManagerService: boolean notifyKeyEvent(android.view.KeyEvent,int)>($r9, $i7);

     label3:
        r13 = r0.<com.android.server.accessibility.KeyboardInterceptor: com.android.server.accessibility.KeyboardInterceptor$KeyEventHolder mEventQueueEnd>;

        $r5 = r0.<com.android.server.accessibility.KeyboardInterceptor: com.android.server.accessibility.KeyboardInterceptor$KeyEventHolder mEventQueueEnd>;

        r1 = $r5.<com.android.server.accessibility.KeyboardInterceptor$KeyEventHolder: com.android.server.accessibility.KeyboardInterceptor$KeyEventHolder previous>;

        r0.<com.android.server.accessibility.KeyboardInterceptor: com.android.server.accessibility.KeyboardInterceptor$KeyEventHolder mEventQueueEnd> = r1;

        if r1 == null goto label4;

        r1.<com.android.server.accessibility.KeyboardInterceptor$KeyEventHolder: com.android.server.accessibility.KeyboardInterceptor$KeyEventHolder next> = null;

     label4:
        virtualinvoke r13.<com.android.server.accessibility.KeyboardInterceptor$KeyEventHolder: void recycle()>();

        $r6 = r0.<com.android.server.accessibility.KeyboardInterceptor: com.android.server.accessibility.KeyboardInterceptor$KeyEventHolder mEventQueueEnd>;

        if $r6 != null goto label5;

        r0.<com.android.server.accessibility.KeyboardInterceptor: com.android.server.accessibility.KeyboardInterceptor$KeyEventHolder mEventQueueStart> = null;

     label5:
        goto label1;

     label6:
        return;
    }

    private void scheduleProcessQueuedEvents()
    {
        com.android.server.accessibility.KeyboardInterceptor r0;
        com.android.server.accessibility.KeyboardInterceptor$KeyEventHolder $r1;
        long $l0;
        android.os.Handler $r2;
        boolean $z0;

        r0 := @this: com.android.server.accessibility.KeyboardInterceptor;

        $r2 = r0.<com.android.server.accessibility.KeyboardInterceptor: android.os.Handler mHandler>;

        $r1 = r0.<com.android.server.accessibility.KeyboardInterceptor: com.android.server.accessibility.KeyboardInterceptor$KeyEventHolder mEventQueueEnd>;

        $l0 = $r1.<com.android.server.accessibility.KeyboardInterceptor$KeyEventHolder: long dispatchTime>;

        $z0 = virtualinvoke $r2.<android.os.Handler: boolean sendEmptyMessageAtTime(int,long)>(1, $l0);

        if $z0 != 0 goto label1;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("KeyboardInterceptor", "Failed to schedule key event");

     label1:
        return;
    }

    public boolean handleMessage(android.os.Message)
    {
        com.android.server.accessibility.KeyboardInterceptor r0;
        android.os.Message r1;
        int $i0;
        com.android.server.accessibility.KeyboardInterceptor$KeyEventHolder $r2;

        r0 := @this: com.android.server.accessibility.KeyboardInterceptor;

        r1 := @parameter0: android.os.Message;

        $i0 = r1.<android.os.Message: int what>;

        if $i0 == 1 goto label1;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("KeyboardInterceptor", "Unexpected message type");

        return 0;

     label1:
        specialinvoke r0.<com.android.server.accessibility.KeyboardInterceptor: void processQueuedEvents()>();

        $r2 = r0.<com.android.server.accessibility.KeyboardInterceptor: com.android.server.accessibility.KeyboardInterceptor$KeyEventHolder mEventQueueStart>;

        if $r2 == null goto label2;

        specialinvoke r0.<com.android.server.accessibility.KeyboardInterceptor: void scheduleProcessQueuedEvents()>();

     label2:
        return 1;
    }

    public void onKeyEvent(android.view.KeyEvent, int)
    {
        com.android.server.accessibility.KeyboardInterceptor r0;
        android.view.KeyEvent r1;
        int i0;
        long l1;
        byte $b2, $b3;
        com.android.server.accessibility.KeyboardInterceptor$KeyEventHolder $r2;
        com.android.server.accessibility.AccessibilityManagerService $r3;

        r0 := @this: com.android.server.accessibility.KeyboardInterceptor;

        r1 := @parameter0: android.view.KeyEvent;

        i0 := @parameter1: int;

        l1 = specialinvoke r0.<com.android.server.accessibility.KeyboardInterceptor: long getEventDelay(android.view.KeyEvent,int)>(r1, i0);

        $b2 = l1 cmp 0L;

        if $b2 >= 0 goto label1;

        return;

     label1:
        $b3 = l1 cmp 0L;

        if $b3 > 0 goto label3;

        $r2 = r0.<com.android.server.accessibility.KeyboardInterceptor: com.android.server.accessibility.KeyboardInterceptor$KeyEventHolder mEventQueueStart>;

        if $r2 == null goto label2;

        goto label3;

     label2:
        $r3 = r0.<com.android.server.accessibility.KeyboardInterceptor: com.android.server.accessibility.AccessibilityManagerService mAms>;

        virtualinvoke $r3.<com.android.server.accessibility.AccessibilityManagerService: boolean notifyKeyEvent(android.view.KeyEvent,int)>(r1, i0);

        return;

     label3:
        specialinvoke r0.<com.android.server.accessibility.KeyboardInterceptor: void addEventToQueue(android.view.KeyEvent,int,long)>(r1, i0, l1);

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.accessibility.KeyboardInterceptor: int MESSAGE_PROCESS_QUEUED_EVENTS> = 1;

        <com.android.server.accessibility.KeyboardInterceptor: java.lang.String LOG_TAG> = "KeyboardInterceptor";

        return;
    }
}
