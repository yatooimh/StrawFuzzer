final class com.android.server.accessibility.MagnificationController$DisplayMagnification extends java.lang.Object implements com.android.server.wm.WindowManagerInternal$MagnificationCallbacks
{
    private static final int INVALID_ID;
    private final android.view.MagnificationSpec mCurrentMagnificationSpec;
    private boolean mDeleteAfterUnregister;
    private final int mDisplayId;
    private int mIdOfLastServiceToMagnify;
    private final android.graphics.Rect mMagnificationBounds;
    private final android.graphics.Region mMagnificationRegion;
    private boolean mRegistered;
    private final com.android.server.accessibility.MagnificationController$SpecAnimationBridge mSpecAnimationBridge;
    private final android.graphics.Rect mTempRect;
    private final android.graphics.Rect mTempRect1;
    private boolean mUnregisterPending;
    final com.android.server.accessibility.MagnificationController this$0;

    void <init>(com.android.server.accessibility.MagnificationController, int)
    {
        com.android.server.accessibility.MagnificationController$DisplayMagnification r0;
        com.android.server.accessibility.MagnificationController r1;
        int i0, $i1;
        android.view.MagnificationSpec $r2;
        android.graphics.Region $r3;
        android.graphics.Rect $r4, $r5, $r6;
        com.android.server.accessibility.MagnificationController$SpecAnimationBridge $r7;
        com.android.server.accessibility.MagnificationController$ControllerContext $r8;
        java.lang.Object $r9;

        r0 := @this: com.android.server.accessibility.MagnificationController$DisplayMagnification;

        r1 := @parameter0: com.android.server.accessibility.MagnificationController;

        i0 := @parameter1: int;

        r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: com.android.server.accessibility.MagnificationController this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <android.view.MagnificationSpec: android.view.MagnificationSpec obtain()>();

        r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: android.view.MagnificationSpec mCurrentMagnificationSpec> = $r2;

        $r3 = staticinvoke <android.graphics.Region: android.graphics.Region obtain()>();

        r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: android.graphics.Region mMagnificationRegion> = $r3;

        $r4 = new android.graphics.Rect;

        specialinvoke $r4.<android.graphics.Rect: void <init>()>();

        r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: android.graphics.Rect mMagnificationBounds> = $r4;

        $r5 = new android.graphics.Rect;

        specialinvoke $r5.<android.graphics.Rect: void <init>()>();

        r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: android.graphics.Rect mTempRect> = $r5;

        $r6 = new android.graphics.Rect;

        specialinvoke $r6.<android.graphics.Rect: void <init>()>();

        r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: android.graphics.Rect mTempRect1> = $r6;

        r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: int mIdOfLastServiceToMagnify> = -1;

        r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: int mDisplayId> = i0;

        $r7 = new com.android.server.accessibility.MagnificationController$SpecAnimationBridge;

        $r8 = staticinvoke <com.android.server.accessibility.MagnificationController: com.android.server.accessibility.MagnificationController$ControllerContext access$000(com.android.server.accessibility.MagnificationController)>(r1);

        $r9 = staticinvoke <com.android.server.accessibility.MagnificationController: java.lang.Object access$100(com.android.server.accessibility.MagnificationController)>(r1);

        $i1 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: int mDisplayId>;

        specialinvoke $r7.<com.android.server.accessibility.MagnificationController$SpecAnimationBridge: void <init>(com.android.server.accessibility.MagnificationController$ControllerContext,java.lang.Object,int,com.android.server.accessibility.MagnificationController$1)>($r8, $r9, $i1, null);

        r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: com.android.server.accessibility.MagnificationController$SpecAnimationBridge mSpecAnimationBridge> = $r7;

        return;
    }

    float getCenterX()
    {
        com.android.server.accessibility.MagnificationController$DisplayMagnification r0;
        android.graphics.Rect $r1, $r2;
        int $i0, $i1;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;

        r0 := @this: com.android.server.accessibility.MagnificationController$DisplayMagnification;

        $r1 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: android.graphics.Rect mMagnificationBounds>;

        $i0 = virtualinvoke $r1.<android.graphics.Rect: int width()>();

        $f0 = (float) $i0;

        $f2 = $f0 / 2.0F;

        $r2 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: android.graphics.Rect mMagnificationBounds>;

        $i1 = $r2.<android.graphics.Rect: int left>;

        $f1 = (float) $i1;

        $f3 = $f2 + $f1;

        $f4 = virtualinvoke r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: float getOffsetX()>();

        $f5 = $f3 - $f4;

        $f6 = virtualinvoke r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: float getScale()>();

        $f7 = $f5 / $f6;

        return $f7;
    }

    float getCenterY()
    {
        com.android.server.accessibility.MagnificationController$DisplayMagnification r0;
        android.graphics.Rect $r1, $r2;
        int $i0, $i1;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;

        r0 := @this: com.android.server.accessibility.MagnificationController$DisplayMagnification;

        $r1 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: android.graphics.Rect mMagnificationBounds>;

        $i0 = virtualinvoke $r1.<android.graphics.Rect: int height()>();

        $f0 = (float) $i0;

        $f2 = $f0 / 2.0F;

        $r2 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: android.graphics.Rect mMagnificationBounds>;

        $i1 = $r2.<android.graphics.Rect: int top>;

        $f1 = (float) $i1;

        $f3 = $f2 + $f1;

        $f4 = virtualinvoke r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: float getOffsetY()>();

        $f5 = $f3 - $f4;

        $f6 = virtualinvoke r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: float getScale()>();

        $f7 = $f5 / $f6;

        return $f7;
    }

    int getIdOfLastServiceToMagnify()
    {
        com.android.server.accessibility.MagnificationController$DisplayMagnification r0;
        int $i0;

        r0 := @this: com.android.server.accessibility.MagnificationController$DisplayMagnification;

        $i0 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: int mIdOfLastServiceToMagnify>;

        return $i0;
    }

    void getMagnificationBounds(android.graphics.Rect)
    {
        com.android.server.accessibility.MagnificationController$DisplayMagnification r0;
        android.graphics.Rect r1, $r2;

        r0 := @this: com.android.server.accessibility.MagnificationController$DisplayMagnification;

        r1 := @parameter0: android.graphics.Rect;

        $r2 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: android.graphics.Rect mMagnificationBounds>;

        virtualinvoke r1.<android.graphics.Rect: void set(android.graphics.Rect)>($r2);

        return;
    }

    void getMagnificationRegion(android.graphics.Region)
    {
        com.android.server.accessibility.MagnificationController$DisplayMagnification r0;
        android.graphics.Region r1, $r2;

        r0 := @this: com.android.server.accessibility.MagnificationController$DisplayMagnification;

        r1 := @parameter0: android.graphics.Region;

        $r2 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: android.graphics.Region mMagnificationRegion>;

        virtualinvoke r1.<android.graphics.Region: boolean set(android.graphics.Region)>($r2);

        return;
    }

    void getMagnifiedFrameInContentCoordsLocked(android.graphics.Rect)
    {
        com.android.server.accessibility.MagnificationController$DisplayMagnification r0;
        android.graphics.Rect r1;
        float f0, f1, f2, $f3, $f4, $f5;
        int $i0, $i1;

        r0 := @this: com.android.server.accessibility.MagnificationController$DisplayMagnification;

        r1 := @parameter0: android.graphics.Rect;

        f0 = virtualinvoke r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: float getSentScale()>();

        f1 = virtualinvoke r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: float getSentOffsetX()>();

        f2 = virtualinvoke r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: float getSentOffsetY()>();

        virtualinvoke r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: void getMagnificationBounds(android.graphics.Rect)>(r1);

        $f3 = neg f1;

        $i1 = (int) $f3;

        $f4 = neg f2;

        $i0 = (int) $f4;

        virtualinvoke r1.<android.graphics.Rect: void offset(int,int)>($i1, $i0);

        $f5 = 1.0F / f0;

        virtualinvoke r1.<android.graphics.Rect: void scale(float)>($f5);

        return;
    }

    float getMaxOffsetXLocked()
    {
        com.android.server.accessibility.MagnificationController$DisplayMagnification r0;
        android.graphics.Rect $r1, $r2;
        int $i0, $i1;
        android.view.MagnificationSpec $r3;
        float $f0, $f1, $f2, $f3, $f4;

        r0 := @this: com.android.server.accessibility.MagnificationController$DisplayMagnification;

        $r1 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: android.graphics.Rect mMagnificationBounds>;

        $i0 = $r1.<android.graphics.Rect: int left>;

        $f3 = (float) $i0;

        $r2 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: android.graphics.Rect mMagnificationBounds>;

        $i1 = $r2.<android.graphics.Rect: int left>;

        $f1 = (float) $i1;

        $r3 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: android.view.MagnificationSpec mCurrentMagnificationSpec>;

        $f0 = $r3.<android.view.MagnificationSpec: float scale>;

        $f2 = $f1 * $f0;

        $f4 = $f3 - $f2;

        return $f4;
    }

    float getMaxOffsetYLocked()
    {
        com.android.server.accessibility.MagnificationController$DisplayMagnification r0;
        android.graphics.Rect $r1, $r2;
        int $i0, $i1;
        android.view.MagnificationSpec $r3;
        float $f0, $f1, $f2, $f3, $f4;

        r0 := @this: com.android.server.accessibility.MagnificationController$DisplayMagnification;

        $r1 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: android.graphics.Rect mMagnificationBounds>;

        $i0 = $r1.<android.graphics.Rect: int top>;

        $f3 = (float) $i0;

        $r2 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: android.graphics.Rect mMagnificationBounds>;

        $i1 = $r2.<android.graphics.Rect: int top>;

        $f1 = (float) $i1;

        $r3 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: android.view.MagnificationSpec mCurrentMagnificationSpec>;

        $f0 = $r3.<android.view.MagnificationSpec: float scale>;

        $f2 = $f1 * $f0;

        $f4 = $f3 - $f2;

        return $f4;
    }

    float getMinOffsetXLocked()
    {
        com.android.server.accessibility.MagnificationController$DisplayMagnification r0;
        float f0, f1, $f2, $f3, $f4, $f5, $f6;
        android.graphics.Rect $r1, $r2;
        int $i0, $i1;
        android.view.MagnificationSpec $r3;

        r0 := @this: com.android.server.accessibility.MagnificationController$DisplayMagnification;

        $r1 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: android.graphics.Rect mMagnificationBounds>;

        $i0 = virtualinvoke $r1.<android.graphics.Rect: int width()>();

        f0 = (float) $i0;

        $r2 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: android.graphics.Rect mMagnificationBounds>;

        $i1 = $r2.<android.graphics.Rect: int left>;

        f1 = (float) $i1;

        $f5 = f1 + f0;

        $f3 = f1 + f0;

        $r3 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: android.view.MagnificationSpec mCurrentMagnificationSpec>;

        $f2 = $r3.<android.view.MagnificationSpec: float scale>;

        $f4 = $f3 * $f2;

        $f6 = $f5 - $f4;

        return $f6;
    }

    float getMinOffsetYLocked()
    {
        com.android.server.accessibility.MagnificationController$DisplayMagnification r0;
        float f0, f1, $f2, $f3, $f4, $f5, $f6;
        android.graphics.Rect $r1, $r2;
        int $i0, $i1;
        android.view.MagnificationSpec $r3;

        r0 := @this: com.android.server.accessibility.MagnificationController$DisplayMagnification;

        $r1 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: android.graphics.Rect mMagnificationBounds>;

        $i0 = virtualinvoke $r1.<android.graphics.Rect: int height()>();

        f0 = (float) $i0;

        $r2 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: android.graphics.Rect mMagnificationBounds>;

        $i1 = $r2.<android.graphics.Rect: int top>;

        f1 = (float) $i1;

        $f5 = f1 + f0;

        $f3 = f1 + f0;

        $r3 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: android.view.MagnificationSpec mCurrentMagnificationSpec>;

        $f2 = $r3.<android.view.MagnificationSpec: float scale>;

        $f4 = $f3 * $f2;

        $f6 = $f5 - $f4;

        return $f6;
    }

    float getOffsetX()
    {
        com.android.server.accessibility.MagnificationController$DisplayMagnification r0;
        android.view.MagnificationSpec $r1;
        float $f0;

        r0 := @this: com.android.server.accessibility.MagnificationController$DisplayMagnification;

        $r1 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: android.view.MagnificationSpec mCurrentMagnificationSpec>;

        $f0 = $r1.<android.view.MagnificationSpec: float offsetX>;

        return $f0;
    }

    float getOffsetY()
    {
        com.android.server.accessibility.MagnificationController$DisplayMagnification r0;
        android.view.MagnificationSpec $r1;
        float $f0;

        r0 := @this: com.android.server.accessibility.MagnificationController$DisplayMagnification;

        $r1 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: android.view.MagnificationSpec mCurrentMagnificationSpec>;

        $f0 = $r1.<android.view.MagnificationSpec: float offsetY>;

        return $f0;
    }

    float getScale()
    {
        com.android.server.accessibility.MagnificationController$DisplayMagnification r0;
        android.view.MagnificationSpec $r1;
        float $f0;

        r0 := @this: com.android.server.accessibility.MagnificationController$DisplayMagnification;

        $r1 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: android.view.MagnificationSpec mCurrentMagnificationSpec>;

        $f0 = $r1.<android.view.MagnificationSpec: float scale>;

        return $f0;
    }

    float getSentOffsetX()
    {
        com.android.server.accessibility.MagnificationController$DisplayMagnification r0;
        com.android.server.accessibility.MagnificationController$SpecAnimationBridge $r1;
        android.view.MagnificationSpec $r2;
        float $f0;

        r0 := @this: com.android.server.accessibility.MagnificationController$DisplayMagnification;

        $r1 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: com.android.server.accessibility.MagnificationController$SpecAnimationBridge mSpecAnimationBridge>;

        $r2 = staticinvoke <com.android.server.accessibility.MagnificationController$SpecAnimationBridge: android.view.MagnificationSpec access$400(com.android.server.accessibility.MagnificationController$SpecAnimationBridge)>($r1);

        $f0 = $r2.<android.view.MagnificationSpec: float offsetX>;

        return $f0;
    }

    float getSentOffsetY()
    {
        com.android.server.accessibility.MagnificationController$DisplayMagnification r0;
        com.android.server.accessibility.MagnificationController$SpecAnimationBridge $r1;
        android.view.MagnificationSpec $r2;
        float $f0;

        r0 := @this: com.android.server.accessibility.MagnificationController$DisplayMagnification;

        $r1 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: com.android.server.accessibility.MagnificationController$SpecAnimationBridge mSpecAnimationBridge>;

        $r2 = staticinvoke <com.android.server.accessibility.MagnificationController$SpecAnimationBridge: android.view.MagnificationSpec access$400(com.android.server.accessibility.MagnificationController$SpecAnimationBridge)>($r1);

        $f0 = $r2.<android.view.MagnificationSpec: float offsetY>;

        return $f0;
    }

    float getSentScale()
    {
        com.android.server.accessibility.MagnificationController$DisplayMagnification r0;
        com.android.server.accessibility.MagnificationController$SpecAnimationBridge $r1;
        android.view.MagnificationSpec $r2;
        float $f0;

        r0 := @this: com.android.server.accessibility.MagnificationController$DisplayMagnification;

        $r1 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: com.android.server.accessibility.MagnificationController$SpecAnimationBridge mSpecAnimationBridge>;

        $r2 = staticinvoke <com.android.server.accessibility.MagnificationController$SpecAnimationBridge: android.view.MagnificationSpec access$400(com.android.server.accessibility.MagnificationController$SpecAnimationBridge)>($r1);

        $f0 = $r2.<android.view.MagnificationSpec: float scale>;

        return $f0;
    }

    boolean isMagnifying()
    {
        com.android.server.accessibility.MagnificationController$DisplayMagnification r0;
        android.view.MagnificationSpec $r1;
        float $f0;
        byte $b0;
        boolean z0;

        r0 := @this: com.android.server.accessibility.MagnificationController$DisplayMagnification;

        $r1 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: android.view.MagnificationSpec mCurrentMagnificationSpec>;

        $f0 = $r1.<android.view.MagnificationSpec: float scale>;

        $b0 = $f0 cmpl 1.0F;

        if $b0 <= 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    boolean isRegistered()
    {
        com.android.server.accessibility.MagnificationController$DisplayMagnification r0;
        boolean $z0;

        r0 := @this: com.android.server.accessibility.MagnificationController$DisplayMagnification;

        $z0 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: boolean mRegistered>;

        return $z0;
    }

    boolean magnificationRegionContains(float, float)
    {
        com.android.server.accessibility.MagnificationController$DisplayMagnification r0;
        float f0, f1;
        int $i0, $i1;
        android.graphics.Region $r1;
        boolean $z0;

        r0 := @this: com.android.server.accessibility.MagnificationController$DisplayMagnification;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $r1 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: android.graphics.Region mMagnificationRegion>;

        $i1 = (int) f0;

        $i0 = (int) f1;

        $z0 = virtualinvoke $r1.<android.graphics.Region: boolean contains(int,int)>($i1, $i0);

        return $z0;
    }

    void offsetMagnifiedRegion(float, float, int)
    {
        com.android.server.accessibility.MagnificationController$DisplayMagnification r0;
        float f0, f1, $f2, $f3, $f4, $f5;
        int i0;
        boolean $z0, $z1;
        android.view.MagnificationSpec $r1, $r2, $r3;

        r0 := @this: com.android.server.accessibility.MagnificationController$DisplayMagnification;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        i0 := @parameter2: int;

        $z0 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: boolean mRegistered>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: android.view.MagnificationSpec mCurrentMagnificationSpec>;

        $f2 = $r1.<android.view.MagnificationSpec: float offsetX>;

        $f5 = $f2 - f0;

        $r2 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: android.view.MagnificationSpec mCurrentMagnificationSpec>;

        $f3 = $r2.<android.view.MagnificationSpec: float offsetY>;

        $f4 = $f3 - f1;

        $z1 = virtualinvoke r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: boolean updateCurrentSpecWithOffsetsLocked(float,float)>($f5, $f4);

        if $z1 == 0 goto label2;

        virtualinvoke r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: void onMagnificationChangedLocked()>();

     label2:
        if i0 == -1 goto label3;

        r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: int mIdOfLastServiceToMagnify> = i0;

     label3:
        $r3 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: android.view.MagnificationSpec mCurrentMagnificationSpec>;

        virtualinvoke r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: void sendSpecToAnimation(android.view.MagnificationSpec,boolean)>($r3, 0);

        return;
    }

    void onMagnificationChangedLocked()
    {
        com.android.server.accessibility.MagnificationController$DisplayMagnification r0;
        com.android.server.accessibility.MagnificationController $r1;
        com.android.server.accessibility.MagnificationController$ControllerContext $r2;
        com.android.server.accessibility.AccessibilityManagerService $r3;
        int $i0;
        android.graphics.Region $r4;
        float $f0, $f1, $f2;
        boolean $z0, $z1, $z2;

        r0 := @this: com.android.server.accessibility.MagnificationController$DisplayMagnification;

        $r1 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: com.android.server.accessibility.MagnificationController this$0>;

        $r2 = staticinvoke <com.android.server.accessibility.MagnificationController: com.android.server.accessibility.MagnificationController$ControllerContext access$000(com.android.server.accessibility.MagnificationController)>($r1);

        $r3 = virtualinvoke $r2.<com.android.server.accessibility.MagnificationController$ControllerContext: com.android.server.accessibility.AccessibilityManagerService getAms()>();

        $i0 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: int mDisplayId>;

        $r4 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: android.graphics.Region mMagnificationRegion>;

        $f0 = virtualinvoke r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: float getScale()>();

        $f1 = virtualinvoke r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: float getCenterX()>();

        $f2 = virtualinvoke r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: float getCenterY()>();

        virtualinvoke $r3.<com.android.server.accessibility.AccessibilityManagerService: void notifyMagnificationChanged(int,android.graphics.Region,float,float,float)>($i0, $r4, $f0, $f1, $f2);

        $z0 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: boolean mUnregisterPending>;

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: boolean isMagnifying()>();

        if $z1 != 0 goto label1;

        $z2 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: boolean mDeleteAfterUnregister>;

        virtualinvoke r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: void unregister(boolean)>($z2);

     label1:
        return;
    }

    public void onMagnificationRegionChanged(android.graphics.Region)
    {
        com.android.server.accessibility.MagnificationController$DisplayMagnification r0;
        com.android.server.accessibility.'-$$Lambda$SP6uGJNthzczgi990Xl2SJhDOMs' $r1;
        android.graphics.Region $r2, r6;
        com.android.server.accessibility.MagnificationController $r3;
        com.android.server.accessibility.MagnificationController$ControllerContext $r4;
        android.os.Handler $r5;
        android.os.Message r7;
        java.util.function.BiConsumer r8;

        r0 := @this: com.android.server.accessibility.MagnificationController$DisplayMagnification;

        r6 := @parameter0: android.graphics.Region;

        $r1 = <com.android.server.accessibility._$$Lambda$SP6uGJNthzczgi990Xl2SJhDOMs: com.android.server.accessibility.'-$$Lambda$SP6uGJNthzczgi990Xl2SJhDOMs' INSTANCE>;

        $r2 = staticinvoke <android.graphics.Region: android.graphics.Region obtain(android.graphics.Region)>(r6);

        r8 = (java.util.function.BiConsumer) $r1;

        r7 = staticinvoke <com.android.internal.util.function.pooled.PooledLambda: android.os.Message obtainMessage(java.util.function.BiConsumer,java.lang.Object,java.lang.Object)>(r8, r0, $r2);

        $r3 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: com.android.server.accessibility.MagnificationController this$0>;

        $r4 = staticinvoke <com.android.server.accessibility.MagnificationController: com.android.server.accessibility.MagnificationController$ControllerContext access$000(com.android.server.accessibility.MagnificationController)>($r3);

        $r5 = virtualinvoke $r4.<com.android.server.accessibility.MagnificationController$ControllerContext: android.os.Handler getHandler()>();

        virtualinvoke $r5.<android.os.Handler: boolean sendMessage(android.os.Message)>(r7);

        return;
    }

    public void onRectangleOnScreenRequested(int, int, int, int)
    {
        com.android.server.accessibility.MagnificationController$DisplayMagnification r0;
        int i0, i1, i2, i3;
        android.os.Message r1;
        com.android.server.accessibility.'-$$Lambda$iE9JplYHP8mrOjjadf_Oh8XKSE4' $r2;
        java.lang.Integer $r3, $r4, $r5, $r6;
        com.android.server.accessibility.MagnificationController $r7;
        com.android.server.accessibility.MagnificationController$ControllerContext $r8;
        android.os.Handler $r9;
        com.android.internal.util.function.QuintConsumer r10;

        r0 := @this: com.android.server.accessibility.MagnificationController$DisplayMagnification;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $r2 = <com.android.server.accessibility._$$Lambda$iE9JplYHP8mrOjjadf_Oh8XKSE4: com.android.server.accessibility.'-$$Lambda$iE9JplYHP8mrOjjadf_Oh8XKSE4' INSTANCE>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);

        r10 = (com.android.internal.util.function.QuintConsumer) $r2;

        r1 = staticinvoke <com.android.internal.util.function.pooled.PooledLambda: android.os.Message obtainMessage(com.android.internal.util.function.QuintConsumer,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(r10, r0, $r3, $r4, $r5, $r6);

        $r7 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: com.android.server.accessibility.MagnificationController this$0>;

        $r8 = staticinvoke <com.android.server.accessibility.MagnificationController: com.android.server.accessibility.MagnificationController$ControllerContext access$000(com.android.server.accessibility.MagnificationController)>($r7);

        $r9 = virtualinvoke $r8.<com.android.server.accessibility.MagnificationController$ControllerContext: android.os.Handler getHandler()>();

        virtualinvoke $r9.<android.os.Handler: boolean sendMessage(android.os.Message)>(r1);

        return;
    }

    public void onRotationChanged(int)
    {
        com.android.server.accessibility.MagnificationController$DisplayMagnification r0;
        int i0, $i1;
        android.os.Message r1;
        com.android.server.accessibility.'-$$Lambda$AbiCM6mjSOPpIPMT9CFGL4UAcKY' $r2;
        com.android.server.accessibility.MagnificationController $r3, $r6;
        java.lang.Integer $r4;
        java.lang.Boolean $r5;
        com.android.server.accessibility.MagnificationController$ControllerContext $r7;
        android.os.Handler $r8;
        com.android.internal.util.function.TriConsumer r9;

        r0 := @this: com.android.server.accessibility.MagnificationController$DisplayMagnification;

        i0 := @parameter0: int;

        $r2 = <com.android.server.accessibility._$$Lambda$AbiCM6mjSOPpIPMT9CFGL4UAcKY: com.android.server.accessibility.'-$$Lambda$AbiCM6mjSOPpIPMT9CFGL4UAcKY' INSTANCE>;

        $r3 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: com.android.server.accessibility.MagnificationController this$0>;

        $i1 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: int mDisplayId>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        r9 = (com.android.internal.util.function.TriConsumer) $r2;

        r1 = staticinvoke <com.android.internal.util.function.pooled.PooledLambda: android.os.Message obtainMessage(com.android.internal.util.function.TriConsumer,java.lang.Object,java.lang.Object,java.lang.Object)>(r9, $r3, $r4, $r5);

        $r6 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: com.android.server.accessibility.MagnificationController this$0>;

        $r7 = staticinvoke <com.android.server.accessibility.MagnificationController: com.android.server.accessibility.MagnificationController$ControllerContext access$000(com.android.server.accessibility.MagnificationController)>($r6);

        $r8 = virtualinvoke $r7.<com.android.server.accessibility.MagnificationController$ControllerContext: android.os.Handler getHandler()>();

        virtualinvoke $r8.<android.os.Handler: boolean sendMessage(android.os.Message)>(r1);

        return;
    }

    public void onUserContextChanged()
    {
        com.android.server.accessibility.MagnificationController$DisplayMagnification r0;
        android.os.Message r1;
        int $i0;
        com.android.server.accessibility.'-$$Lambda$AbiCM6mjSOPpIPMT9CFGL4UAcKY' $r2;
        com.android.server.accessibility.MagnificationController $r3, $r6;
        java.lang.Integer $r4;
        java.lang.Boolean $r5;
        com.android.server.accessibility.MagnificationController$ControllerContext $r7;
        android.os.Handler $r8;
        com.android.internal.util.function.TriConsumer r9;

        r0 := @this: com.android.server.accessibility.MagnificationController$DisplayMagnification;

        $r2 = <com.android.server.accessibility._$$Lambda$AbiCM6mjSOPpIPMT9CFGL4UAcKY: com.android.server.accessibility.'-$$Lambda$AbiCM6mjSOPpIPMT9CFGL4UAcKY' INSTANCE>;

        $r3 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: com.android.server.accessibility.MagnificationController this$0>;

        $i0 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: int mDisplayId>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        r9 = (com.android.internal.util.function.TriConsumer) $r2;

        r1 = staticinvoke <com.android.internal.util.function.pooled.PooledLambda: android.os.Message obtainMessage(com.android.internal.util.function.TriConsumer,java.lang.Object,java.lang.Object,java.lang.Object)>(r9, $r3, $r4, $r5);

        $r6 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: com.android.server.accessibility.MagnificationController this$0>;

        $r7 = staticinvoke <com.android.server.accessibility.MagnificationController: com.android.server.accessibility.MagnificationController$ControllerContext access$000(com.android.server.accessibility.MagnificationController)>($r6);

        $r8 = virtualinvoke $r7.<com.android.server.accessibility.MagnificationController$ControllerContext: android.os.Handler getHandler()>();

        virtualinvoke $r8.<android.os.Handler: boolean sendMessage(android.os.Message)>(r1);

        return;
    }

    boolean register()
    {
        com.android.server.accessibility.MagnificationController$DisplayMagnification r0;
        boolean z0;
        com.android.server.accessibility.MagnificationController $r2, $r6;
        com.android.server.accessibility.MagnificationController$ControllerContext $r3, $r7;
        com.android.server.wm.WindowManagerInternal $r4, $r8;
        int $i0, $i1, $i2;
        com.android.server.accessibility.MagnificationController$SpecAnimationBridge $r5;
        android.graphics.Region $r9, $r11;
        android.graphics.Rect $r10;
        java.lang.StringBuilder $r12;
        java.lang.String $r15;

        r0 := @this: com.android.server.accessibility.MagnificationController$DisplayMagnification;

        $r2 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: com.android.server.accessibility.MagnificationController this$0>;

        $r3 = staticinvoke <com.android.server.accessibility.MagnificationController: com.android.server.accessibility.MagnificationController$ControllerContext access$000(com.android.server.accessibility.MagnificationController)>($r2);

        $r4 = virtualinvoke $r3.<com.android.server.accessibility.MagnificationController$ControllerContext: com.android.server.wm.WindowManagerInternal getWindowManager()>();

        $i0 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: int mDisplayId>;

        z0 = virtualinvoke $r4.<com.android.server.wm.WindowManagerInternal: boolean setMagnificationCallbacks(int,com.android.server.wm.WindowManagerInternal$MagnificationCallbacks)>($i0, r0);

        r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: boolean mRegistered> = z0;

        if z0 != 0 goto label1;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("set magnification callbacks fail, displayId:");

        $i2 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: int mDisplayId>;

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("MagnificationController", $r15);

        return 0;

     label1:
        $r5 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: com.android.server.accessibility.MagnificationController$SpecAnimationBridge mSpecAnimationBridge>;

        virtualinvoke $r5.<com.android.server.accessibility.MagnificationController$SpecAnimationBridge: void setEnabled(boolean)>(1);

        $r6 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: com.android.server.accessibility.MagnificationController this$0>;

        $r7 = staticinvoke <com.android.server.accessibility.MagnificationController: com.android.server.accessibility.MagnificationController$ControllerContext access$000(com.android.server.accessibility.MagnificationController)>($r6);

        $r8 = virtualinvoke $r7.<com.android.server.accessibility.MagnificationController$ControllerContext: com.android.server.wm.WindowManagerInternal getWindowManager()>();

        $i1 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: int mDisplayId>;

        $r9 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: android.graphics.Region mMagnificationRegion>;

        virtualinvoke $r8.<com.android.server.wm.WindowManagerInternal: void getMagnificationRegion(int,android.graphics.Region)>($i1, $r9);

        $r11 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: android.graphics.Region mMagnificationRegion>;

        $r10 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: android.graphics.Rect mMagnificationBounds>;

        virtualinvoke $r11.<android.graphics.Region: boolean getBounds(android.graphics.Rect)>($r10);

        return 1;
    }

    void requestRectangleOnScreen(int, int, int, int)
    {
        com.android.server.accessibility.MagnificationController$DisplayMagnification r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26;
        java.lang.Object r1;
        float f0, f1, f2, $f3, $f4;
        com.android.server.accessibility.MagnificationController $r2;
        boolean $z0;
        java.util.Locale $r3;
        java.lang.Throwable $r4;
        android.graphics.Rect r5, r6;

        r0 := @this: com.android.server.accessibility.MagnificationController$DisplayMagnification;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $r2 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: com.android.server.accessibility.MagnificationController this$0>;

        r1 = staticinvoke <com.android.server.accessibility.MagnificationController: java.lang.Object access$100(com.android.server.accessibility.MagnificationController)>($r2);

        entermonitor r1;

     label01:
        r5 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: android.graphics.Rect mTempRect>;

        virtualinvoke r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: void getMagnificationBounds(android.graphics.Rect)>(r5);

        $z0 = virtualinvoke r5.<android.graphics.Rect: boolean intersects(int,int,int,int)>(i0, i1, i2, i3);

        if $z0 != 0 goto label03;

        exitmonitor r1;

     label02:
        return;

     label03:
        r6 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: android.graphics.Rect mTempRect1>;

        virtualinvoke r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: void getMagnifiedFrameInContentCoordsLocked(android.graphics.Rect)>(r6);

        $i4 = i2 - i0;

        $i5 = virtualinvoke r6.<android.graphics.Rect: int width()>();

        if $i4 <= $i5 goto label07;

        $r3 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $i20 = staticinvoke <android.text.TextUtils: int getLayoutDirectionFromLocale(java.util.Locale)>($r3);

        if $i20 != 0 goto label05;

        $i23 = r6.<android.graphics.Rect: int left>;

        $i24 = i0 - $i23;

        f1 = (float) $i24;

     label04:
        goto label06;

     label05:
        $i21 = r6.<android.graphics.Rect: int right>;

        $i22 = i2 - $i21;

        f1 = (float) $i22;

     label06:
        goto label12;

     label07:
        $i6 = r6.<android.graphics.Rect: int left>;

        if i0 >= $i6 goto label09;

        $i18 = r6.<android.graphics.Rect: int left>;

        $i19 = i0 - $i18;

        f1 = (float) $i19;

     label08:
        goto label12;

     label09:
        $i7 = r6.<android.graphics.Rect: int right>;

        if i2 <= $i7 goto label11;

        $i16 = r6.<android.graphics.Rect: int right>;

        $i17 = i2 - $i16;

        f1 = (float) $i17;

     label10:
        goto label12;

     label11:
        f1 = 0.0F;

     label12:
        $i25 = i3 - i1;

        $i26 = virtualinvoke r6.<android.graphics.Rect: int height()>();

        if $i25 <= $i26 goto label14;

        $i14 = r6.<android.graphics.Rect: int top>;

        $i15 = i1 - $i14;

        f2 = (float) $i15;

     label13:
        goto label19;

     label14:
        $i8 = r6.<android.graphics.Rect: int top>;

        if i1 >= $i8 goto label16;

        $i12 = r6.<android.graphics.Rect: int top>;

        $i13 = i1 - $i12;

        f2 = (float) $i13;

     label15:
        goto label19;

     label16:
        $i9 = r6.<android.graphics.Rect: int bottom>;

        if i3 <= $i9 goto label18;

        $i10 = r6.<android.graphics.Rect: int bottom>;

        $i11 = i3 - $i10;

        f2 = (float) $i11;

     label17:
        goto label19;

     label18:
        f2 = 0.0F;

     label19:
        f0 = virtualinvoke r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: float getScale()>();

        $f3 = f1 * f0;

        $f4 = f2 * f0;

        virtualinvoke r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: void offsetMagnifiedRegion(float,float,int)>($f3, $f4, -1);

        exitmonitor r1;

     label20:
        return;

     label21:
        $r4 := @caughtexception;

     label22:
        exitmonitor r1;

     label23:
        throw $r4;

        catch java.lang.Throwable from label01 to label02 with label21;
        catch java.lang.Throwable from label03 to label04 with label21;
        catch java.lang.Throwable from label05 to label06 with label21;
        catch java.lang.Throwable from label07 to label08 with label21;
        catch java.lang.Throwable from label09 to label10 with label21;
        catch java.lang.Throwable from label12 to label13 with label21;
        catch java.lang.Throwable from label14 to label15 with label21;
        catch java.lang.Throwable from label16 to label17 with label21;
        catch java.lang.Throwable from label19 to label20 with label21;
        catch java.lang.Throwable from label22 to label23 with label21;
    }

    boolean reset(boolean)
    {
        com.android.server.accessibility.MagnificationController$DisplayMagnification r0;
        boolean z0, z1, $z2, $z3;
        android.view.MagnificationSpec r1;

        r0 := @this: com.android.server.accessibility.MagnificationController$DisplayMagnification;

        z0 := @parameter0: boolean;

        $z2 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: boolean mRegistered>;

        if $z2 != 0 goto label1;

        return 0;

     label1:
        r1 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: android.view.MagnificationSpec mCurrentMagnificationSpec>;

        $z3 = virtualinvoke r1.<android.view.MagnificationSpec: boolean isNop()>();

        z1 = $z3 ^ 1;

        if z1 == 0 goto label2;

        virtualinvoke r1.<android.view.MagnificationSpec: void clear()>();

        virtualinvoke r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: void onMagnificationChangedLocked()>();

     label2:
        r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: int mIdOfLastServiceToMagnify> = -1;

        virtualinvoke r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: void sendSpecToAnimation(android.view.MagnificationSpec,boolean)>(r1, z0);

        return z1;
    }

    void sendSpecToAnimation(android.view.MagnificationSpec, boolean)
    {
        com.android.server.accessibility.MagnificationController$DisplayMagnification r0;
        boolean z0;
        java.lang.Thread $r1;
        long $l0, $l1;
        com.android.server.accessibility.MagnificationController $r2, $r6;
        byte $b2;
        com.android.server.accessibility.'-$$Lambda$CXn5BYHEDMuDgWNKCgknaVOAyJ8' $r3;
        com.android.server.accessibility.MagnificationController$SpecAnimationBridge $r4, $r9;
        java.lang.Boolean $r5;
        com.android.server.accessibility.MagnificationController$ControllerContext $r7;
        android.os.Handler $r8;
        android.view.MagnificationSpec r10;
        android.os.Message r11;
        com.android.internal.util.function.TriConsumer r12;

        r0 := @this: com.android.server.accessibility.MagnificationController$DisplayMagnification;

        r10 := @parameter0: android.view.MagnificationSpec;

        z0 := @parameter1: boolean;

        $r1 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $l0 = virtualinvoke $r1.<java.lang.Thread: long getId()>();

        $r2 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: com.android.server.accessibility.MagnificationController this$0>;

        $l1 = staticinvoke <com.android.server.accessibility.MagnificationController: long access$500(com.android.server.accessibility.MagnificationController)>($r2);

        $b2 = $l0 cmp $l1;

        if $b2 != 0 goto label1;

        $r9 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: com.android.server.accessibility.MagnificationController$SpecAnimationBridge mSpecAnimationBridge>;

        virtualinvoke $r9.<com.android.server.accessibility.MagnificationController$SpecAnimationBridge: void updateSentSpecMainThread(android.view.MagnificationSpec,boolean)>(r10, z0);

        goto label2;

     label1:
        $r3 = <com.android.server.accessibility._$$Lambda$CXn5BYHEDMuDgWNKCgknaVOAyJ8: com.android.server.accessibility.'-$$Lambda$CXn5BYHEDMuDgWNKCgknaVOAyJ8' INSTANCE>;

        $r4 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: com.android.server.accessibility.MagnificationController$SpecAnimationBridge mSpecAnimationBridge>;

        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        r12 = (com.android.internal.util.function.TriConsumer) $r3;

        r11 = staticinvoke <com.android.internal.util.function.pooled.PooledLambda: android.os.Message obtainMessage(com.android.internal.util.function.TriConsumer,java.lang.Object,java.lang.Object,java.lang.Object)>(r12, $r4, r10, $r5);

        $r6 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: com.android.server.accessibility.MagnificationController this$0>;

        $r7 = staticinvoke <com.android.server.accessibility.MagnificationController: com.android.server.accessibility.MagnificationController$ControllerContext access$000(com.android.server.accessibility.MagnificationController)>($r6);

        $r8 = virtualinvoke $r7.<com.android.server.accessibility.MagnificationController$ControllerContext: android.os.Handler getHandler()>();

        virtualinvoke $r8.<android.os.Handler: boolean sendMessage(android.os.Message)>(r11);

     label2:
        return;
    }

    void setForceShowMagnifiableBounds(boolean)
    {
        com.android.server.accessibility.MagnificationController$DisplayMagnification r0;
        boolean z0, $z1;
        com.android.server.accessibility.MagnificationController $r1;
        com.android.server.accessibility.MagnificationController$ControllerContext $r2;
        com.android.server.wm.WindowManagerInternal $r3;
        int $i0;

        r0 := @this: com.android.server.accessibility.MagnificationController$DisplayMagnification;

        z0 := @parameter0: boolean;

        $z1 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: boolean mRegistered>;

        if $z1 == 0 goto label1;

        $r1 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: com.android.server.accessibility.MagnificationController this$0>;

        $r2 = staticinvoke <com.android.server.accessibility.MagnificationController: com.android.server.accessibility.MagnificationController$ControllerContext access$000(com.android.server.accessibility.MagnificationController)>($r1);

        $r3 = virtualinvoke $r2.<com.android.server.accessibility.MagnificationController$ControllerContext: com.android.server.wm.WindowManagerInternal getWindowManager()>();

        $i0 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: int mDisplayId>;

        virtualinvoke $r3.<com.android.server.wm.WindowManagerInternal: void setForceShowMagnifiableBounds(int,boolean)>($i0, z0);

     label1:
        return;
    }

    boolean setScale(float, float, float, boolean, int)
    {
        com.android.server.accessibility.MagnificationController$DisplayMagnification r0;
        boolean z0, $z1, $z3;
        int i0, $i1, $i2, $i3, $i4;
        float f0, f1, f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, f25, f26, f27, f28, f29, f30, f31, f32;
        android.graphics.Rect r1;
        android.view.MagnificationSpec r2;
        android.graphics.Region $r3;

        r0 := @this: com.android.server.accessibility.MagnificationController$DisplayMagnification;

        f25 := @parameter0: float;

        f26 := @parameter1: float;

        f27 := @parameter2: float;

        z0 := @parameter3: boolean;

        i0 := @parameter4: int;

        $z1 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: boolean mRegistered>;

        if $z1 != 0 goto label1;

        return 0;

     label1:
        f0 = staticinvoke <android.util.MathUtils: float constrain(float,float,float)>(f25, 1.0F, 8.0F);

        r1 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: android.graphics.Rect mTempRect>;

        $r3 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: android.graphics.Region mMagnificationRegion>;

        virtualinvoke $r3.<android.graphics.Region: boolean getBounds(android.graphics.Rect)>(r1);

        r2 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: android.view.MagnificationSpec mCurrentMagnificationSpec>;

        f28 = r2.<android.view.MagnificationSpec: float scale>;

        $i1 = virtualinvoke r1.<android.graphics.Rect: int width()>();

        $f3 = (float) $i1;

        $f5 = $f3 / 2.0F;

        $f4 = r2.<android.view.MagnificationSpec: float offsetX>;

        $f7 = $f5 - $f4;

        $i2 = r1.<android.graphics.Rect: int left>;

        $f6 = (float) $i2;

        $f8 = $f7 + $f6;

        f1 = $f8 / f28;

        $i3 = virtualinvoke r1.<android.graphics.Rect: int height()>();

        $f9 = (float) $i3;

        $f11 = $f9 / 2.0F;

        $f10 = r2.<android.view.MagnificationSpec: float offsetY>;

        $f13 = $f11 - $f10;

        $i4 = r1.<android.graphics.Rect: int top>;

        $f12 = (float) $i4;

        $f14 = $f13 + $f12;

        f29 = $f14 / f28;

        $f15 = r2.<android.view.MagnificationSpec: float offsetX>;

        $f16 = f26 - $f15;

        f30 = $f16 / f28;

        $f17 = r2.<android.view.MagnificationSpec: float offsetY>;

        $f18 = f27 - $f17;

        f31 = $f18 / f28;

        f2 = f28 / f0;

        f32 = f28 / f0;

        r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: int mIdOfLastServiceToMagnify> = i0;

        $f19 = f1 - f30;

        $f20 = $f19 * f2;

        $f24 = f30 + $f20;

        $f21 = f29 - f31;

        $f22 = $f21 * f32;

        $f23 = f31 + $f22;

        $z3 = virtualinvoke r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: boolean setScaleAndCenter(float,float,float,boolean,int)>(f0, $f24, $f23, z0, i0);

        return $z3;
    }

    boolean setScaleAndCenter(float, float, float, boolean, int)
    {
        com.android.server.accessibility.MagnificationController$DisplayMagnification r0;
        float f0, f1, f2;
        boolean z0, z1, $z2, $z3;
        int i0;
        android.view.MagnificationSpec $r1;

        r0 := @this: com.android.server.accessibility.MagnificationController$DisplayMagnification;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        z0 := @parameter3: boolean;

        i0 := @parameter4: int;

        $z2 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: boolean mRegistered>;

        if $z2 != 0 goto label1;

        return 0;

     label1:
        z1 = virtualinvoke r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: boolean updateMagnificationSpecLocked(float,float,float)>(f0, f1, f2);

        $r1 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: android.view.MagnificationSpec mCurrentMagnificationSpec>;

        virtualinvoke r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: void sendSpecToAnimation(android.view.MagnificationSpec,boolean)>($r1, z0);

        $z3 = virtualinvoke r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: boolean isMagnifying()>();

        if $z3 == 0 goto label2;

        if i0 == -1 goto label2;

        r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: int mIdOfLastServiceToMagnify> = i0;

     label2:
        return z1;
    }

    public java.lang.String toString()
    {
        com.android.server.accessibility.MagnificationController$DisplayMagnification r0;
        java.lang.StringBuilder $r2;
        android.view.MagnificationSpec $r4;
        android.graphics.Region $r7;
        android.graphics.Rect $r10;
        int $i0, $i1;
        boolean $z0, $z1;
        java.lang.String $r21;

        r0 := @this: com.android.server.accessibility.MagnificationController$DisplayMagnification;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DisplayMagnification[mCurrentMagnificationSpec=");

        $r4 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: android.view.MagnificationSpec mCurrentMagnificationSpec>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mMagnificationRegion=");

        $r7 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: android.graphics.Region mMagnificationRegion>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mMagnificationBounds=");

        $r10 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: android.graphics.Rect mMagnificationBounds>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mDisplayId=");

        $i0 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: int mDisplayId>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mIdOfLastServiceToMagnify=");

        $i1 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: int mIdOfLastServiceToMagnify>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mRegistered=");

        $z0 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: boolean mRegistered>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mUnregisterPending=");

        $z1 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: boolean mUnregisterPending>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        $r21 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r21;
    }

    void unregister(boolean)
    {
        com.android.server.accessibility.MagnificationController$DisplayMagnification r0;
        boolean z0, $z1;
        com.android.server.accessibility.MagnificationController$SpecAnimationBridge $r1;
        com.android.server.accessibility.MagnificationController $r2, $r6;
        com.android.server.accessibility.MagnificationController$ControllerContext $r3;
        com.android.server.wm.WindowManagerInternal $r4;
        int $i0, $i1;
        android.graphics.Region $r5;

        r0 := @this: com.android.server.accessibility.MagnificationController$DisplayMagnification;

        z0 := @parameter0: boolean;

        $z1 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: boolean mRegistered>;

        if $z1 == 0 goto label1;

        $r1 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: com.android.server.accessibility.MagnificationController$SpecAnimationBridge mSpecAnimationBridge>;

        virtualinvoke $r1.<com.android.server.accessibility.MagnificationController$SpecAnimationBridge: void setEnabled(boolean)>(0);

        $r2 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: com.android.server.accessibility.MagnificationController this$0>;

        $r3 = staticinvoke <com.android.server.accessibility.MagnificationController: com.android.server.accessibility.MagnificationController$ControllerContext access$000(com.android.server.accessibility.MagnificationController)>($r2);

        $r4 = virtualinvoke $r3.<com.android.server.accessibility.MagnificationController$ControllerContext: com.android.server.wm.WindowManagerInternal getWindowManager()>();

        $i0 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: int mDisplayId>;

        virtualinvoke $r4.<com.android.server.wm.WindowManagerInternal: boolean setMagnificationCallbacks(int,com.android.server.wm.WindowManagerInternal$MagnificationCallbacks)>($i0, null);

        $r5 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: android.graphics.Region mMagnificationRegion>;

        virtualinvoke $r5.<android.graphics.Region: void setEmpty()>();

        r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: boolean mRegistered> = 0;

        $r6 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: com.android.server.accessibility.MagnificationController this$0>;

        $i1 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: int mDisplayId>;

        staticinvoke <com.android.server.accessibility.MagnificationController: void access$300(com.android.server.accessibility.MagnificationController,int,boolean)>($r6, $i1, z0);

     label1:
        r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: boolean mUnregisterPending> = 0;

        return;
    }

    void unregisterPending(boolean)
    {
        com.android.server.accessibility.MagnificationController$DisplayMagnification r0;
        boolean z0;

        r0 := @this: com.android.server.accessibility.MagnificationController$DisplayMagnification;

        z0 := @parameter0: boolean;

        r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: boolean mDeleteAfterUnregister> = z0;

        r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: boolean mUnregisterPending> = 1;

        virtualinvoke r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: boolean reset(boolean)>(1);

        return;
    }

    boolean updateCurrentSpecWithOffsetsLocked(float, float)
    {
        com.android.server.accessibility.MagnificationController$DisplayMagnification r0;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, f7, f8, f9;
        android.view.MagnificationSpec $r1, $r2, $r3, $r4;
        int $i0, $i1;
        boolean z0;

        r0 := @this: com.android.server.accessibility.MagnificationController$DisplayMagnification;

        f7 := @parameter0: float;

        f0 := @parameter1: float;

        z0 = 0;

        $f1 = virtualinvoke r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: float getMinOffsetXLocked()>();

        $f2 = virtualinvoke r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: float getMaxOffsetXLocked()>();

        f8 = staticinvoke <android.util.MathUtils: float constrain(float,float,float)>(f7, $f1, $f2);

        $r1 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: android.view.MagnificationSpec mCurrentMagnificationSpec>;

        $f3 = $r1.<android.view.MagnificationSpec: float offsetX>;

        $i0 = staticinvoke <java.lang.Float: int compare(float,float)>($f3, f8);

        if $i0 == 0 goto label1;

        $r4 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: android.view.MagnificationSpec mCurrentMagnificationSpec>;

        $r4.<android.view.MagnificationSpec: float offsetX> = f8;

        z0 = 1;

     label1:
        $f4 = virtualinvoke r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: float getMinOffsetYLocked()>();

        $f5 = virtualinvoke r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: float getMaxOffsetYLocked()>();

        f9 = staticinvoke <android.util.MathUtils: float constrain(float,float,float)>(f0, $f4, $f5);

        $r2 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: android.view.MagnificationSpec mCurrentMagnificationSpec>;

        $f6 = $r2.<android.view.MagnificationSpec: float offsetY>;

        $i1 = staticinvoke <java.lang.Float: int compare(float,float)>($f6, f9);

        if $i1 == 0 goto label2;

        $r3 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: android.view.MagnificationSpec mCurrentMagnificationSpec>;

        $r3.<android.view.MagnificationSpec: float offsetY> = f9;

        z0 = 1;

     label2:
        return z0;
    }

    void updateMagnificationRegion(android.graphics.Region)
    {
        com.android.server.accessibility.MagnificationController$DisplayMagnification r0;
        java.lang.Object r1;
        com.android.server.accessibility.MagnificationController $r2;
        boolean $z0, $z1, $z4;
        android.graphics.Region $r3, $r4, $r6, r11;
        android.graphics.Rect $r5;
        android.view.MagnificationSpec $r7, $r8, $r9;
        float $f0, $f1;
        java.lang.Throwable $r10;

        r0 := @this: com.android.server.accessibility.MagnificationController$DisplayMagnification;

        r11 := @parameter0: android.graphics.Region;

        $r2 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: com.android.server.accessibility.MagnificationController this$0>;

        r1 = staticinvoke <com.android.server.accessibility.MagnificationController: java.lang.Object access$100(com.android.server.accessibility.MagnificationController)>($r2);

        entermonitor r1;

     label1:
        $z0 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: boolean mRegistered>;

        if $z0 != 0 goto label3;

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: android.graphics.Region mMagnificationRegion>;

        $z1 = virtualinvoke $r3.<android.graphics.Region: boolean equals(java.lang.Object)>(r11);

        if $z1 != 0 goto label5;

        $r4 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: android.graphics.Region mMagnificationRegion>;

        virtualinvoke $r4.<android.graphics.Region: boolean set(android.graphics.Region)>(r11);

        $r6 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: android.graphics.Region mMagnificationRegion>;

        $r5 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: android.graphics.Rect mMagnificationBounds>;

        virtualinvoke $r6.<android.graphics.Region: boolean getBounds(android.graphics.Rect)>($r5);

        $r7 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: android.view.MagnificationSpec mCurrentMagnificationSpec>;

        $f1 = $r7.<android.view.MagnificationSpec: float offsetX>;

        $r8 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: android.view.MagnificationSpec mCurrentMagnificationSpec>;

        $f0 = $r8.<android.view.MagnificationSpec: float offsetY>;

        $z4 = virtualinvoke r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: boolean updateCurrentSpecWithOffsetsLocked(float,float)>($f1, $f0);

        if $z4 == 0 goto label4;

        $r9 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: android.view.MagnificationSpec mCurrentMagnificationSpec>;

        virtualinvoke r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: void sendSpecToAnimation(android.view.MagnificationSpec,boolean)>($r9, 0);

     label4:
        virtualinvoke r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: void onMagnificationChangedLocked()>();

     label5:
        virtualinvoke r11.<android.graphics.Region: void recycle()>();

        exitmonitor r1;

     label6:
        return;

     label7:
        $r10 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r10;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    boolean updateMagnificationSpecLocked(float, float, float)
    {
        com.android.server.accessibility.MagnificationController$DisplayMagnification r0;
        boolean z0, $z1, $z2, $z3, $z4, z5;
        android.view.MagnificationSpec $r1, $r6;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, f13, f14, f15, f16, f17, f18, f19;
        int $i0, $i1, $i2, $i3, $i4;
        android.graphics.Rect $r2, $r3, $r4, $r5;

        r0 := @this: com.android.server.accessibility.MagnificationController$DisplayMagnification;

        f13 := @parameter0: float;

        f14 := @parameter1: float;

        f15 := @parameter2: float;

        f16 = f14;

        $z1 = staticinvoke <java.lang.Float: boolean isNaN(float)>(f14);

        if $z1 == 0 goto label1;

        f16 = virtualinvoke r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: float getCenterX()>();

     label1:
        f17 = f15;

        $z2 = staticinvoke <java.lang.Float: boolean isNaN(float)>(f15);

        if $z2 == 0 goto label2;

        f17 = virtualinvoke r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: float getCenterY()>();

     label2:
        f18 = f13;

        $z3 = staticinvoke <java.lang.Float: boolean isNaN(float)>(f13);

        if $z3 == 0 goto label3;

        f18 = virtualinvoke r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: float getScale()>();

     label3:
        z5 = 0;

        f19 = staticinvoke <android.util.MathUtils: float constrain(float,float,float)>(f18, 1.0F, 8.0F);

        $r1 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: android.view.MagnificationSpec mCurrentMagnificationSpec>;

        $f0 = $r1.<android.view.MagnificationSpec: float scale>;

        $i0 = staticinvoke <java.lang.Float: int compare(float,float)>($f0, f19);

        if $i0 == 0 goto label4;

        $r6 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: android.view.MagnificationSpec mCurrentMagnificationSpec>;

        $r6.<android.view.MagnificationSpec: float scale> = f19;

        z5 = 1;

     label4:
        $r2 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: android.graphics.Rect mMagnificationBounds>;

        $i1 = virtualinvoke $r2.<android.graphics.Rect: int width()>();

        $f1 = (float) $i1;

        $f3 = $f1 / 2.0F;

        $r3 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: android.graphics.Rect mMagnificationBounds>;

        $i2 = $r3.<android.graphics.Rect: int left>;

        $f2 = (float) $i2;

        $f5 = $f3 + $f2;

        $f4 = f16 * f19;

        $f6 = $f5 - $f4;

        $r4 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: android.graphics.Rect mMagnificationBounds>;

        $i3 = virtualinvoke $r4.<android.graphics.Rect: int height()>();

        $f7 = (float) $i3;

        $f9 = $f7 / 2.0F;

        $r5 = r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: android.graphics.Rect mMagnificationBounds>;

        $i4 = $r5.<android.graphics.Rect: int top>;

        $f8 = (float) $i4;

        $f11 = $f9 + $f8;

        $f10 = f17 * f19;

        $f12 = $f11 - $f10;

        $z4 = virtualinvoke r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: boolean updateCurrentSpecWithOffsetsLocked(float,float)>($f6, $f12);

        z0 = z5 | $z4;

        if z0 == 0 goto label5;

        virtualinvoke r0.<com.android.server.accessibility.MagnificationController$DisplayMagnification: void onMagnificationChangedLocked()>();

     label5:
        return z0;
    }

    public static void <clinit>()
    {
        <com.android.server.accessibility.MagnificationController$DisplayMagnification: int INVALID_ID> = -1;

        return;
    }
}
