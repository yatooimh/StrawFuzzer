public class com.android.server.accessibility.MagnificationController extends java.lang.Object
{
    private static final boolean DEBUG;
    private static final boolean DEBUG_SET_MAGNIFICATION_SPEC;
    private static final float DEFAULT_MAGNIFICATION_SCALE;
    private static final java.lang.String LOG_TAG;
    public static final float MAX_SCALE;
    public static final float MIN_SCALE;
    private final com.android.server.accessibility.MagnificationController$ControllerContext mControllerCtx;
    private final android.util.SparseArray mDisplays;
    private final java.lang.Object mLock;
    private final long mMainThreadId;
    private final com.android.server.accessibility.MagnificationController$ScreenStateObserver mScreenStateObserver;
    private int mUserId;

    public void <init>(android.content.Context, com.android.server.accessibility.AccessibilityManagerService, java.lang.Object)
    {
        com.android.server.accessibility.MagnificationController r0;
        android.content.Context r1;
        com.android.server.accessibility.AccessibilityManagerService r2;
        java.lang.Object r3, $r5;
        com.android.server.accessibility.MagnificationController$ControllerContext $r4;
        android.os.Handler $r6;
        com.android.server.wm.WindowManagerInternal $r7;
        android.os.Looper $r8;
        android.content.res.Resources $r9;
        int $i0;
        long $l1;

        r0 := @this: com.android.server.accessibility.MagnificationController;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.server.accessibility.AccessibilityManagerService;

        r3 := @parameter2: java.lang.Object;

        $r4 = new com.android.server.accessibility.MagnificationController$ControllerContext;

        $r5 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Lcom/android/server/wm/WindowManagerInternal;");

        $r7 = (com.android.server.wm.WindowManagerInternal) $r5;

        $r6 = new android.os.Handler;

        $r8 = virtualinvoke r1.<android.content.Context: android.os.Looper getMainLooper()>();

        specialinvoke $r6.<android.os.Handler: void <init>(android.os.Looper)>($r8);

        $r9 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $i0 = virtualinvoke $r9.<android.content.res.Resources: int getInteger(int)>(17694722);

        $l1 = (long) $i0;

        specialinvoke $r4.<com.android.server.accessibility.MagnificationController$ControllerContext: void <init>(android.content.Context,com.android.server.accessibility.AccessibilityManagerService,com.android.server.wm.WindowManagerInternal,android.os.Handler,long)>(r1, r2, $r7, $r6, $l1);

        specialinvoke r0.<com.android.server.accessibility.MagnificationController: void <init>(com.android.server.accessibility.MagnificationController$ControllerContext,java.lang.Object)>($r4, r3);

        return;
    }

    public void <init>(com.android.server.accessibility.MagnificationController$ControllerContext, java.lang.Object)
    {
        com.android.server.accessibility.MagnificationController r0;
        com.android.server.accessibility.MagnificationController$ControllerContext r1, $r8;
        java.lang.Object r2;
        android.util.SparseArray $r3;
        android.content.Context $r4, $r9;
        android.os.Looper $r5;
        java.lang.Thread $r6;
        long $l0;
        com.android.server.accessibility.MagnificationController$ScreenStateObserver $r7;

        r0 := @this: com.android.server.accessibility.MagnificationController;

        r1 := @parameter0: com.android.server.accessibility.MagnificationController$ControllerContext;

        r2 := @parameter1: java.lang.Object;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new android.util.SparseArray;

        specialinvoke $r3.<android.util.SparseArray: void <init>(int)>(0);

        r0.<com.android.server.accessibility.MagnificationController: android.util.SparseArray mDisplays> = $r3;

        r0.<com.android.server.accessibility.MagnificationController: com.android.server.accessibility.MagnificationController$ControllerContext mControllerCtx> = r1;

        r0.<com.android.server.accessibility.MagnificationController: java.lang.Object mLock> = r2;

        $r4 = virtualinvoke r1.<com.android.server.accessibility.MagnificationController$ControllerContext: android.content.Context getContext()>();

        $r5 = virtualinvoke $r4.<android.content.Context: android.os.Looper getMainLooper()>();

        $r6 = virtualinvoke $r5.<android.os.Looper: java.lang.Thread getThread()>();

        $l0 = virtualinvoke $r6.<java.lang.Thread: long getId()>();

        r0.<com.android.server.accessibility.MagnificationController: long mMainThreadId> = $l0;

        $r7 = new com.android.server.accessibility.MagnificationController$ScreenStateObserver;

        $r8 = r0.<com.android.server.accessibility.MagnificationController: com.android.server.accessibility.MagnificationController$ControllerContext mControllerCtx>;

        $r9 = virtualinvoke $r8.<com.android.server.accessibility.MagnificationController$ControllerContext: android.content.Context getContext()>();

        specialinvoke $r7.<com.android.server.accessibility.MagnificationController$ScreenStateObserver: void <init>(android.content.Context,com.android.server.accessibility.MagnificationController)>($r9, r0);

        r0.<com.android.server.accessibility.MagnificationController: com.android.server.accessibility.MagnificationController$ScreenStateObserver mScreenStateObserver> = $r7;

        return;
    }

    static com.android.server.accessibility.MagnificationController$ControllerContext access$000(com.android.server.accessibility.MagnificationController)
    {
        com.android.server.accessibility.MagnificationController r0;
        com.android.server.accessibility.MagnificationController$ControllerContext $r1;

        r0 := @parameter0: com.android.server.accessibility.MagnificationController;

        $r1 = r0.<com.android.server.accessibility.MagnificationController: com.android.server.accessibility.MagnificationController$ControllerContext mControllerCtx>;

        return $r1;
    }

    static java.lang.Object access$100(com.android.server.accessibility.MagnificationController)
    {
        com.android.server.accessibility.MagnificationController r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.server.accessibility.MagnificationController;

        $r1 = r0.<com.android.server.accessibility.MagnificationController: java.lang.Object mLock>;

        return $r1;
    }

    static void access$300(com.android.server.accessibility.MagnificationController, int, boolean)
    {
        com.android.server.accessibility.MagnificationController r0;
        int i0;
        boolean z0;

        r0 := @parameter0: com.android.server.accessibility.MagnificationController;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        specialinvoke r0.<com.android.server.accessibility.MagnificationController: void unregisterCallbackLocked(int,boolean)>(i0, z0);

        return;
    }

    static long access$500(com.android.server.accessibility.MagnificationController)
    {
        com.android.server.accessibility.MagnificationController r0;
        long $l0;

        r0 := @parameter0: com.android.server.accessibility.MagnificationController;

        $l0 = r0.<com.android.server.accessibility.MagnificationController: long mMainThreadId>;

        return $l0;
    }

    static void access$600(com.android.server.accessibility.MagnificationController)
    {
        com.android.server.accessibility.MagnificationController r0;

        r0 := @parameter0: com.android.server.accessibility.MagnificationController;

        specialinvoke r0.<com.android.server.accessibility.MagnificationController: void onScreenTurnedOff()>();

        return;
    }

    public static void lambda$UxSkaR2uzdX0ekJv4Wtodc8tuMY(com.android.server.accessibility.MagnificationController, boolean)
    {
        com.android.server.accessibility.MagnificationController r0;
        boolean z0;

        r0 := @parameter0: com.android.server.accessibility.MagnificationController;

        z0 := @parameter1: boolean;

        specialinvoke r0.<com.android.server.accessibility.MagnificationController: void resetAllIfNeeded(boolean)>(z0);

        return;
    }

    private void onScreenTurnedOff()
    {
        com.android.server.accessibility.MagnificationController r0;
        android.os.Message r1;
        com.android.server.accessibility.'-$$Lambda$MagnificationController$UxSkaR2uzdX0ekJv4Wtodc8tuMY' $r2;
        java.lang.Boolean $r3;
        com.android.server.accessibility.MagnificationController$ControllerContext $r4;
        android.os.Handler $r5;
        java.util.function.BiConsumer r6;

        r0 := @this: com.android.server.accessibility.MagnificationController;

        $r2 = <com.android.server.accessibility._$$Lambda$MagnificationController$UxSkaR2uzdX0ekJv4Wtodc8tuMY: com.android.server.accessibility.'-$$Lambda$MagnificationController$UxSkaR2uzdX0ekJv4Wtodc8tuMY' INSTANCE>;

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        r6 = (java.util.function.BiConsumer) $r2;

        r1 = staticinvoke <com.android.internal.util.function.pooled.PooledLambda: android.os.Message obtainMessage(java.util.function.BiConsumer,java.lang.Object,java.lang.Object)>(r6, r0, $r3);

        $r4 = r0.<com.android.server.accessibility.MagnificationController: com.android.server.accessibility.MagnificationController$ControllerContext mControllerCtx>;

        $r5 = virtualinvoke $r4.<com.android.server.accessibility.MagnificationController$ControllerContext: android.os.Handler getHandler()>();

        virtualinvoke $r5.<android.os.Handler: boolean sendMessage(android.os.Message)>(r1);

        return;
    }

    private void resetAllIfNeeded(boolean)
    {
        com.android.server.accessibility.MagnificationController r0;
        boolean z0;
        java.lang.Object r1;
        android.util.SparseArray $r3, $r4;
        int $i0, $i1, i2;
        java.lang.Throwable $r5;

        r0 := @this: com.android.server.accessibility.MagnificationController;

        z0 := @parameter0: boolean;

        r1 = r0.<com.android.server.accessibility.MagnificationController: java.lang.Object mLock>;

        entermonitor r1;

        i2 = 0;

     label1:
        $r3 = r0.<com.android.server.accessibility.MagnificationController: android.util.SparseArray mDisplays>;

        $i0 = virtualinvoke $r3.<android.util.SparseArray: int size()>();

        if i2 >= $i0 goto label3;

        $r4 = r0.<com.android.server.accessibility.MagnificationController: android.util.SparseArray mDisplays>;

        $i1 = virtualinvoke $r4.<android.util.SparseArray: int keyAt(int)>(i2);

        virtualinvoke r0.<com.android.server.accessibility.MagnificationController: boolean resetIfNeeded(int,boolean)>($i1, z0);

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        exitmonitor r1;

     label4:
        return;

     label5:
        $r5 := @caughtexception;

     label6:
        exitmonitor r1;

     label7:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    private void unregisterCallbackLocked(int, boolean)
    {
        com.android.server.accessibility.MagnificationController r0;
        com.android.server.accessibility.MagnificationController$ScreenStateObserver $r1;
        android.util.SparseArray $r2, $r5, $r6;
        java.lang.Object $r3;
        com.android.server.accessibility.MagnificationController$DisplayMagnification $r4;
        int i0, i1, $i2;
        boolean z0, z1;

        r0 := @this: com.android.server.accessibility.MagnificationController;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $r5 = r0.<com.android.server.accessibility.MagnificationController: android.util.SparseArray mDisplays>;

        virtualinvoke $r5.<android.util.SparseArray: void remove(int)>(i0);

     label1:
        z1 = 0;

        i1 = 0;

     label2:
        $r6 = r0.<com.android.server.accessibility.MagnificationController: android.util.SparseArray mDisplays>;

        $i2 = virtualinvoke $r6.<android.util.SparseArray: int size()>();

        if i1 >= $i2 goto label4;

        $r2 = r0.<com.android.server.accessibility.MagnificationController: android.util.SparseArray mDisplays>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        $r4 = (com.android.server.accessibility.MagnificationController$DisplayMagnification) $r3;

        z1 = virtualinvoke $r4.<com.android.server.accessibility.MagnificationController$DisplayMagnification: boolean isRegistered()>();

        if z1 == 0 goto label3;

        goto label4;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        if z1 != 0 goto label5;

        $r1 = r0.<com.android.server.accessibility.MagnificationController: com.android.server.accessibility.MagnificationController$ScreenStateObserver mScreenStateObserver>;

        virtualinvoke $r1.<com.android.server.accessibility.MagnificationController$ScreenStateObserver: void unregister()>();

     label5:
        return;
    }

    private void unregisterLocked(int, boolean)
    {
        com.android.server.accessibility.MagnificationController r0;
        int i0;
        boolean z0, $z1, $z2;
        com.android.server.accessibility.MagnificationController$DisplayMagnification r1;
        android.util.SparseArray $r2, $r4;
        java.lang.Object $r3;

        r0 := @this: com.android.server.accessibility.MagnificationController;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r2 = r0.<com.android.server.accessibility.MagnificationController: android.util.SparseArray mDisplays>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r1 = (com.android.server.accessibility.MagnificationController$DisplayMagnification) $r3;

        if r1 != null goto label1;

        return;

     label1:
        $z1 = virtualinvoke r1.<com.android.server.accessibility.MagnificationController$DisplayMagnification: boolean isRegistered()>();

        if $z1 != 0 goto label3;

        if z0 == 0 goto label2;

        $r4 = r0.<com.android.server.accessibility.MagnificationController: android.util.SparseArray mDisplays>;

        virtualinvoke $r4.<android.util.SparseArray: void remove(int)>(i0);

     label2:
        return;

     label3:
        $z2 = virtualinvoke r1.<com.android.server.accessibility.MagnificationController$DisplayMagnification: boolean isMagnifying()>();

        if $z2 != 0 goto label4;

        virtualinvoke r1.<com.android.server.accessibility.MagnificationController$DisplayMagnification: void unregister(boolean)>(z0);

        goto label5;

     label4:
        virtualinvoke r1.<com.android.server.accessibility.MagnificationController$DisplayMagnification: void unregisterPending(boolean)>(z0);

     label5:
        return;
    }

    public float getCenterX(int)
    {
        com.android.server.accessibility.MagnificationController r0;
        int i0;
        java.lang.Object r1, $r3;
        float f0;
        android.util.SparseArray $r2;
        java.lang.Throwable $r4;
        com.android.server.accessibility.MagnificationController$DisplayMagnification r5;

        r0 := @this: com.android.server.accessibility.MagnificationController;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.accessibility.MagnificationController: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.accessibility.MagnificationController: android.util.SparseArray mDisplays>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r5 = (com.android.server.accessibility.MagnificationController$DisplayMagnification) $r3;

     label2:
        if r5 != null goto label5;

     label3:
        exitmonitor r1;

     label4:
        return 0.0F;

     label5:
        f0 = virtualinvoke r5.<com.android.server.accessibility.MagnificationController$DisplayMagnification: float getCenterX()>();

        exitmonitor r1;

     label6:
        return f0;

     label7:
        $r4 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public float getCenterY(int)
    {
        com.android.server.accessibility.MagnificationController r0;
        int i0;
        java.lang.Object r1, $r3;
        float f0;
        android.util.SparseArray $r2;
        java.lang.Throwable $r4;
        com.android.server.accessibility.MagnificationController$DisplayMagnification r5;

        r0 := @this: com.android.server.accessibility.MagnificationController;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.accessibility.MagnificationController: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.accessibility.MagnificationController: android.util.SparseArray mDisplays>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r5 = (com.android.server.accessibility.MagnificationController$DisplayMagnification) $r3;

     label2:
        if r5 != null goto label5;

     label3:
        exitmonitor r1;

     label4:
        return 0.0F;

     label5:
        f0 = virtualinvoke r5.<com.android.server.accessibility.MagnificationController$DisplayMagnification: float getCenterY()>();

        exitmonitor r1;

     label6:
        return f0;

     label7:
        $r4 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public int getIdOfLastServiceToMagnify(int)
    {
        com.android.server.accessibility.MagnificationController r0;
        java.lang.Object r1, $r3;
        android.util.SparseArray $r2;
        java.lang.Throwable $r4;
        int i0, i1;
        com.android.server.accessibility.MagnificationController$DisplayMagnification r5;

        r0 := @this: com.android.server.accessibility.MagnificationController;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.accessibility.MagnificationController: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.accessibility.MagnificationController: android.util.SparseArray mDisplays>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r5 = (com.android.server.accessibility.MagnificationController$DisplayMagnification) $r3;

     label2:
        if r5 != null goto label5;

     label3:
        exitmonitor r1;

     label4:
        return -1;

     label5:
        i1 = virtualinvoke r5.<com.android.server.accessibility.MagnificationController$DisplayMagnification: int getIdOfLastServiceToMagnify()>();

        exitmonitor r1;

     label6:
        return i1;

     label7:
        $r4 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public void getMagnificationBounds(int, android.graphics.Rect)
    {
        com.android.server.accessibility.MagnificationController r0;
        int i0;
        java.lang.Object r1, $r4;
        com.android.server.accessibility.MagnificationController$DisplayMagnification r2;
        android.util.SparseArray $r3;
        java.lang.Throwable $r5;
        android.graphics.Rect r6;

        r0 := @this: com.android.server.accessibility.MagnificationController;

        i0 := @parameter0: int;

        r6 := @parameter1: android.graphics.Rect;

        r1 = r0.<com.android.server.accessibility.MagnificationController: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.accessibility.MagnificationController: android.util.SparseArray mDisplays>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r2 = (com.android.server.accessibility.MagnificationController$DisplayMagnification) $r4;

     label2:
        if r2 != null goto label5;

     label3:
        exitmonitor r1;

     label4:
        return;

     label5:
        virtualinvoke r2.<com.android.server.accessibility.MagnificationController$DisplayMagnification: void getMagnificationBounds(android.graphics.Rect)>(r6);

        exitmonitor r1;

     label6:
        return;

     label7:
        $r5 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public void getMagnificationRegion(int, android.graphics.Region)
    {
        com.android.server.accessibility.MagnificationController r0;
        int i0;
        java.lang.Object r1, $r4;
        com.android.server.accessibility.MagnificationController$DisplayMagnification r2;
        android.util.SparseArray $r3;
        java.lang.Throwable $r5;
        android.graphics.Region r6;

        r0 := @this: com.android.server.accessibility.MagnificationController;

        i0 := @parameter0: int;

        r6 := @parameter1: android.graphics.Region;

        r1 = r0.<com.android.server.accessibility.MagnificationController: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.accessibility.MagnificationController: android.util.SparseArray mDisplays>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r2 = (com.android.server.accessibility.MagnificationController$DisplayMagnification) $r4;

     label2:
        if r2 != null goto label5;

     label3:
        exitmonitor r1;

     label4:
        return;

     label5:
        virtualinvoke r2.<com.android.server.accessibility.MagnificationController$DisplayMagnification: void getMagnificationRegion(android.graphics.Region)>(r6);

        exitmonitor r1;

     label6:
        return;

     label7:
        $r5 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public float getOffsetX(int)
    {
        com.android.server.accessibility.MagnificationController r0;
        int i0;
        java.lang.Object r1, $r3;
        float f0;
        android.util.SparseArray $r2;
        java.lang.Throwable $r4;
        com.android.server.accessibility.MagnificationController$DisplayMagnification r5;

        r0 := @this: com.android.server.accessibility.MagnificationController;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.accessibility.MagnificationController: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.accessibility.MagnificationController: android.util.SparseArray mDisplays>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r5 = (com.android.server.accessibility.MagnificationController$DisplayMagnification) $r3;

     label2:
        if r5 != null goto label5;

     label3:
        exitmonitor r1;

     label4:
        return 0.0F;

     label5:
        f0 = virtualinvoke r5.<com.android.server.accessibility.MagnificationController$DisplayMagnification: float getOffsetX()>();

        exitmonitor r1;

     label6:
        return f0;

     label7:
        $r4 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public float getOffsetY(int)
    {
        com.android.server.accessibility.MagnificationController r0;
        int i0;
        java.lang.Object r1, $r3;
        float f0;
        android.util.SparseArray $r2;
        java.lang.Throwable $r4;
        com.android.server.accessibility.MagnificationController$DisplayMagnification r5;

        r0 := @this: com.android.server.accessibility.MagnificationController;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.accessibility.MagnificationController: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.accessibility.MagnificationController: android.util.SparseArray mDisplays>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r5 = (com.android.server.accessibility.MagnificationController$DisplayMagnification) $r3;

     label2:
        if r5 != null goto label5;

     label3:
        exitmonitor r1;

     label4:
        return 0.0F;

     label5:
        f0 = virtualinvoke r5.<com.android.server.accessibility.MagnificationController$DisplayMagnification: float getOffsetY()>();

        exitmonitor r1;

     label6:
        return f0;

     label7:
        $r4 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public float getPersistedScale()
    {
        com.android.server.accessibility.MagnificationController r0;
        int $i0;
        com.android.server.accessibility.MagnificationController$ControllerContext $r1;
        float $f0;

        r0 := @this: com.android.server.accessibility.MagnificationController;

        $r1 = r0.<com.android.server.accessibility.MagnificationController: com.android.server.accessibility.MagnificationController$ControllerContext mControllerCtx>;

        $i0 = r0.<com.android.server.accessibility.MagnificationController: int mUserId>;

        $f0 = virtualinvoke $r1.<com.android.server.accessibility.MagnificationController$ControllerContext: float getMagnificationScale(int)>($i0);

        return $f0;
    }

    public float getScale(int)
    {
        com.android.server.accessibility.MagnificationController r0;
        int i0;
        java.lang.Object r1, $r3;
        float f0;
        android.util.SparseArray $r2;
        java.lang.Throwable $r4;
        com.android.server.accessibility.MagnificationController$DisplayMagnification r5;

        r0 := @this: com.android.server.accessibility.MagnificationController;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.accessibility.MagnificationController: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.accessibility.MagnificationController: android.util.SparseArray mDisplays>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r5 = (com.android.server.accessibility.MagnificationController$DisplayMagnification) $r3;

     label2:
        if r5 != null goto label5;

     label3:
        exitmonitor r1;

     label4:
        return 1.0F;

     label5:
        f0 = virtualinvoke r5.<com.android.server.accessibility.MagnificationController$DisplayMagnification: float getScale()>();

        exitmonitor r1;

     label6:
        return f0;

     label7:
        $r4 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public boolean isMagnifying(int)
    {
        com.android.server.accessibility.MagnificationController r0;
        int i0;
        java.lang.Object r1, $r3;
        boolean z0;
        android.util.SparseArray $r2;
        java.lang.Throwable $r4;
        com.android.server.accessibility.MagnificationController$DisplayMagnification r5;

        r0 := @this: com.android.server.accessibility.MagnificationController;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.accessibility.MagnificationController: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.accessibility.MagnificationController: android.util.SparseArray mDisplays>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r5 = (com.android.server.accessibility.MagnificationController$DisplayMagnification) $r3;

     label2:
        if r5 != null goto label5;

     label3:
        exitmonitor r1;

     label4:
        return 0;

     label5:
        z0 = virtualinvoke r5.<com.android.server.accessibility.MagnificationController$DisplayMagnification: boolean isMagnifying()>();

        exitmonitor r1;

     label6:
        return z0;

     label7:
        $r4 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public boolean isRegistered(int)
    {
        com.android.server.accessibility.MagnificationController r0;
        int i0;
        java.lang.Object r1, $r3;
        boolean z0;
        android.util.SparseArray $r2;
        java.lang.Throwable $r4;
        com.android.server.accessibility.MagnificationController$DisplayMagnification r5;

        r0 := @this: com.android.server.accessibility.MagnificationController;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.accessibility.MagnificationController: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.accessibility.MagnificationController: android.util.SparseArray mDisplays>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r5 = (com.android.server.accessibility.MagnificationController$DisplayMagnification) $r3;

     label2:
        if r5 != null goto label5;

     label3:
        exitmonitor r1;

     label4:
        return 0;

     label5:
        z0 = virtualinvoke r5.<com.android.server.accessibility.MagnificationController$DisplayMagnification: boolean isRegistered()>();

        exitmonitor r1;

     label6:
        return z0;

     label7:
        $r4 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public boolean magnificationRegionContains(int, float, float)
    {
        com.android.server.accessibility.MagnificationController r0;
        int i0;
        float f0, f1;
        java.lang.Object r1, $r3;
        boolean z0;
        android.util.SparseArray $r2;
        java.lang.Throwable $r4;
        com.android.server.accessibility.MagnificationController$DisplayMagnification r5;

        r0 := @this: com.android.server.accessibility.MagnificationController;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        r1 = r0.<com.android.server.accessibility.MagnificationController: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.accessibility.MagnificationController: android.util.SparseArray mDisplays>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r5 = (com.android.server.accessibility.MagnificationController$DisplayMagnification) $r3;

     label2:
        if r5 != null goto label5;

     label3:
        exitmonitor r1;

     label4:
        return 0;

     label5:
        z0 = virtualinvoke r5.<com.android.server.accessibility.MagnificationController$DisplayMagnification: boolean magnificationRegionContains(float,float)>(f0, f1);

        exitmonitor r1;

     label6:
        return z0;

     label7:
        $r4 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public void offsetMagnifiedRegion(int, float, float, int)
    {
        com.android.server.accessibility.MagnificationController r0;
        int i0, i1;
        float f0, f1;
        java.lang.Object r1, $r3;
        android.util.SparseArray $r2;
        java.lang.Throwable $r4;
        com.android.server.accessibility.MagnificationController$DisplayMagnification r5;

        r0 := @this: com.android.server.accessibility.MagnificationController;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        i1 := @parameter3: int;

        r1 = r0.<com.android.server.accessibility.MagnificationController: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.accessibility.MagnificationController: android.util.SparseArray mDisplays>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r5 = (com.android.server.accessibility.MagnificationController$DisplayMagnification) $r3;

     label2:
        if r5 != null goto label5;

     label3:
        exitmonitor r1;

     label4:
        return;

     label5:
        virtualinvoke r5.<com.android.server.accessibility.MagnificationController$DisplayMagnification: void offsetMagnifiedRegion(float,float,int)>(f0, f1, i1);

        exitmonitor r1;

     label6:
        return;

     label7:
        $r4 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public void onDisplayRemoved(int)
    {
        com.android.server.accessibility.MagnificationController r0;
        int i0;
        java.lang.Object r1;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.accessibility.MagnificationController;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.accessibility.MagnificationController: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        specialinvoke r0.<com.android.server.accessibility.MagnificationController: void unregisterLocked(int,boolean)>(i0, 1);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void persistScale()
    {
        com.android.server.accessibility.MagnificationController r0;
        com.android.server.accessibility.MagnificationController$1 $r1;
        float $f0;
        int $i0;
        java.lang.Void[] $r2;

        r0 := @this: com.android.server.accessibility.MagnificationController;

        $r1 = new com.android.server.accessibility.MagnificationController$1;

        $f0 = virtualinvoke r0.<com.android.server.accessibility.MagnificationController: float getScale(int)>(0);

        $i0 = r0.<com.android.server.accessibility.MagnificationController: int mUserId>;

        specialinvoke $r1.<com.android.server.accessibility.MagnificationController$1: void <init>(com.android.server.accessibility.MagnificationController,float,int)>(r0, $f0, $i0);

        $r2 = newarray (java.lang.Void)[0];

        virtualinvoke $r1.<com.android.server.accessibility.MagnificationController$1: android.os.AsyncTask execute(java.lang.Object[])>($r2);

        return;
    }

    public void register(int)
    {
        com.android.server.accessibility.MagnificationController r0;
        int i0;
        java.lang.Object r1, $r4;
        com.android.server.accessibility.MagnificationController$DisplayMagnification r2, r8;
        android.util.SparseArray $r3, $r5;
        boolean $z0, $z1;
        com.android.server.accessibility.MagnificationController$ScreenStateObserver $r6;
        java.lang.Throwable $r7;

        r0 := @this: com.android.server.accessibility.MagnificationController;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.accessibility.MagnificationController: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r3 = r0.<com.android.server.accessibility.MagnificationController: android.util.SparseArray mDisplays>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r2 = (com.android.server.accessibility.MagnificationController$DisplayMagnification) $r4;

     label02:
        r8 = r2;

        if r2 != null goto label04;

     label03:
        r8 = new com.android.server.accessibility.MagnificationController$DisplayMagnification;

        specialinvoke r8.<com.android.server.accessibility.MagnificationController$DisplayMagnification: void <init>(com.android.server.accessibility.MagnificationController,int)>(r0, i0);

     label04:
        $z0 = virtualinvoke r8.<com.android.server.accessibility.MagnificationController$DisplayMagnification: boolean isRegistered()>();

        if $z0 == 0 goto label06;

        exitmonitor r1;

     label05:
        return;

     label06:
        $z1 = virtualinvoke r8.<com.android.server.accessibility.MagnificationController$DisplayMagnification: boolean register()>();

        if $z1 == 0 goto label07;

        $r5 = r0.<com.android.server.accessibility.MagnificationController: android.util.SparseArray mDisplays>;

        virtualinvoke $r5.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r8);

        $r6 = r0.<com.android.server.accessibility.MagnificationController: com.android.server.accessibility.MagnificationController$ScreenStateObserver mScreenStateObserver>;

        virtualinvoke $r6.<com.android.server.accessibility.MagnificationController$ScreenStateObserver: void registerIfNecessary()>();

     label07:
        exitmonitor r1;

     label08:
        return;

     label09:
        $r7 := @caughtexception;

     label10:
        exitmonitor r1;

     label11:
        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public boolean reset(int, boolean)
    {
        com.android.server.accessibility.MagnificationController r0;
        int i0;
        java.lang.Object r1, $r3;
        android.util.SparseArray $r2;
        java.lang.Throwable $r4;
        boolean z0, z1;
        com.android.server.accessibility.MagnificationController$DisplayMagnification r5;

        r0 := @this: com.android.server.accessibility.MagnificationController;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 = r0.<com.android.server.accessibility.MagnificationController: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.accessibility.MagnificationController: android.util.SparseArray mDisplays>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r5 = (com.android.server.accessibility.MagnificationController$DisplayMagnification) $r3;

     label2:
        if r5 != null goto label5;

     label3:
        exitmonitor r1;

     label4:
        return 0;

     label5:
        z1 = virtualinvoke r5.<com.android.server.accessibility.MagnificationController$DisplayMagnification: boolean reset(boolean)>(z0);

        exitmonitor r1;

     label6:
        return z1;

     label7:
        $r4 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public void resetAllIfNeeded(int)
    {
        com.android.server.accessibility.MagnificationController r0;
        int i0, $i1, $i2, i3;
        java.lang.Object r1;
        android.util.SparseArray $r3, $r4;
        java.lang.Throwable $r5;

        r0 := @this: com.android.server.accessibility.MagnificationController;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.accessibility.MagnificationController: java.lang.Object mLock>;

        entermonitor r1;

        i3 = 0;

     label1:
        $r3 = r0.<com.android.server.accessibility.MagnificationController: android.util.SparseArray mDisplays>;

        $i1 = virtualinvoke $r3.<android.util.SparseArray: int size()>();

        if i3 >= $i1 goto label3;

        $r4 = r0.<com.android.server.accessibility.MagnificationController: android.util.SparseArray mDisplays>;

        $i2 = virtualinvoke $r4.<android.util.SparseArray: int keyAt(int)>(i3);

        virtualinvoke r0.<com.android.server.accessibility.MagnificationController: boolean resetIfNeeded(int,int)>($i2, i0);

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        exitmonitor r1;

     label4:
        return;

     label5:
        $r5 := @caughtexception;

     label6:
        exitmonitor r1;

     label7:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    boolean resetIfNeeded(int, int)
    {
        com.android.server.accessibility.MagnificationController r0;
        int i0, i1, $i2;
        java.lang.Object r1, $r3;
        android.util.SparseArray $r2;
        boolean $z0;
        java.lang.Throwable $r4;
        com.android.server.accessibility.MagnificationController$DisplayMagnification r5;

        r0 := @this: com.android.server.accessibility.MagnificationController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = r0.<com.android.server.accessibility.MagnificationController: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r2 = r0.<com.android.server.accessibility.MagnificationController: android.util.SparseArray mDisplays>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r5 = (com.android.server.accessibility.MagnificationController$DisplayMagnification) $r3;

     label02:
        if r5 == null goto label07;

     label03:
        $z0 = virtualinvoke r5.<com.android.server.accessibility.MagnificationController$DisplayMagnification: boolean isMagnifying()>();

        if $z0 == 0 goto label07;

        $i2 = virtualinvoke r5.<com.android.server.accessibility.MagnificationController$DisplayMagnification: int getIdOfLastServiceToMagnify()>();

        if i1 == $i2 goto label05;

     label04:
        goto label07;

     label05:
        virtualinvoke r5.<com.android.server.accessibility.MagnificationController$DisplayMagnification: boolean reset(boolean)>(1);

        exitmonitor r1;

     label06:
        return 1;

     label07:
        exitmonitor r1;

     label08:
        return 0;

     label09:
        $r4 := @caughtexception;

     label10:
        exitmonitor r1;

     label11:
        throw $r4;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    boolean resetIfNeeded(int, boolean)
    {
        com.android.server.accessibility.MagnificationController r0;
        int i0;
        boolean z0, $z1;
        java.lang.Object r1, $r3;
        android.util.SparseArray $r2;
        java.lang.Throwable $r4;
        com.android.server.accessibility.MagnificationController$DisplayMagnification r5;

        r0 := @this: com.android.server.accessibility.MagnificationController;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 = r0.<com.android.server.accessibility.MagnificationController: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r2 = r0.<com.android.server.accessibility.MagnificationController: android.util.SparseArray mDisplays>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r5 = (com.android.server.accessibility.MagnificationController$DisplayMagnification) $r3;

     label02:
        if r5 == null goto label07;

     label03:
        $z1 = virtualinvoke r5.<com.android.server.accessibility.MagnificationController$DisplayMagnification: boolean isMagnifying()>();

        if $z1 != 0 goto label05;

     label04:
        goto label07;

     label05:
        virtualinvoke r5.<com.android.server.accessibility.MagnificationController$DisplayMagnification: boolean reset(boolean)>(z0);

        exitmonitor r1;

     label06:
        return 1;

     label07:
        exitmonitor r1;

     label08:
        return 0;

     label09:
        $r4 := @caughtexception;

     label10:
        exitmonitor r1;

     label11:
        throw $r4;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public boolean setCenter(int, float, float, boolean, int)
    {
        com.android.server.accessibility.MagnificationController r0;
        int i0, i1;
        float f0, f1;
        java.lang.Object r1, $r3;
        android.util.SparseArray $r2;
        java.lang.Throwable $r4;
        boolean z0, z1;
        com.android.server.accessibility.MagnificationController$DisplayMagnification r5;

        r0 := @this: com.android.server.accessibility.MagnificationController;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        z0 := @parameter3: boolean;

        i1 := @parameter4: int;

        r1 = r0.<com.android.server.accessibility.MagnificationController: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.accessibility.MagnificationController: android.util.SparseArray mDisplays>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r5 = (com.android.server.accessibility.MagnificationController$DisplayMagnification) $r3;

     label2:
        if r5 != null goto label5;

     label3:
        exitmonitor r1;

     label4:
        return 0;

     label5:
        z1 = virtualinvoke r5.<com.android.server.accessibility.MagnificationController$DisplayMagnification: boolean setScaleAndCenter(float,float,float,boolean,int)>(#NaNF, f0, f1, z0, i1);

        exitmonitor r1;

     label6:
        return z1;

     label7:
        $r4 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    void setForceShowMagnifiableBounds(int, boolean)
    {
        com.android.server.accessibility.MagnificationController r0;
        int i0;
        boolean z0;
        java.lang.Object r1, $r3;
        android.util.SparseArray $r2;
        java.lang.Throwable $r4;
        com.android.server.accessibility.MagnificationController$DisplayMagnification r5;

        r0 := @this: com.android.server.accessibility.MagnificationController;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 = r0.<com.android.server.accessibility.MagnificationController: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.accessibility.MagnificationController: android.util.SparseArray mDisplays>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r5 = (com.android.server.accessibility.MagnificationController$DisplayMagnification) $r3;

     label2:
        if r5 != null goto label5;

     label3:
        exitmonitor r1;

     label4:
        return;

     label5:
        virtualinvoke r5.<com.android.server.accessibility.MagnificationController$DisplayMagnification: void setForceShowMagnifiableBounds(boolean)>(z0);

        exitmonitor r1;

     label6:
        return;

     label7:
        $r4 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public boolean setScale(int, float, float, float, boolean, int)
    {
        com.android.server.accessibility.MagnificationController r0;
        int i0, i1;
        float f0, f1, f2;
        java.lang.Object r1, $r3;
        android.util.SparseArray $r2;
        java.lang.Throwable $r4;
        boolean z0, z1;
        com.android.server.accessibility.MagnificationController$DisplayMagnification r5;

        r0 := @this: com.android.server.accessibility.MagnificationController;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        f2 := @parameter3: float;

        z0 := @parameter4: boolean;

        i1 := @parameter5: int;

        r1 = r0.<com.android.server.accessibility.MagnificationController: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.accessibility.MagnificationController: android.util.SparseArray mDisplays>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r5 = (com.android.server.accessibility.MagnificationController$DisplayMagnification) $r3;

     label2:
        if r5 != null goto label5;

     label3:
        exitmonitor r1;

     label4:
        return 0;

     label5:
        z1 = virtualinvoke r5.<com.android.server.accessibility.MagnificationController$DisplayMagnification: boolean setScale(float,float,float,boolean,int)>(f0, f1, f2, z0, i1);

        exitmonitor r1;

     label6:
        return z1;

     label7:
        $r4 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public boolean setScaleAndCenter(int, float, float, float, boolean, int)
    {
        com.android.server.accessibility.MagnificationController r0;
        int i0, i1;
        float f0, f1, f2;
        java.lang.Object r1, $r3;
        android.util.SparseArray $r2;
        java.lang.Throwable $r4;
        boolean z0, z1;
        com.android.server.accessibility.MagnificationController$DisplayMagnification r5;

        r0 := @this: com.android.server.accessibility.MagnificationController;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        f2 := @parameter3: float;

        z0 := @parameter4: boolean;

        i1 := @parameter5: int;

        r1 = r0.<com.android.server.accessibility.MagnificationController: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.accessibility.MagnificationController: android.util.SparseArray mDisplays>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r5 = (com.android.server.accessibility.MagnificationController$DisplayMagnification) $r3;

     label2:
        if r5 != null goto label5;

     label3:
        exitmonitor r1;

     label4:
        return 0;

     label5:
        z1 = virtualinvoke r5.<com.android.server.accessibility.MagnificationController$DisplayMagnification: boolean setScaleAndCenter(float,float,float,boolean,int)>(f0, f1, f2, z0, i1);

        exitmonitor r1;

     label6:
        return z1;

     label7:
        $r4 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public void setUserId(int)
    {
        com.android.server.accessibility.MagnificationController r0;
        int i0, $i1;

        r0 := @this: com.android.server.accessibility.MagnificationController;

        i0 := @parameter0: int;

        $i1 = r0.<com.android.server.accessibility.MagnificationController: int mUserId>;

        if $i1 != i0 goto label1;

        return;

     label1:
        r0.<com.android.server.accessibility.MagnificationController: int mUserId> = i0;

        specialinvoke r0.<com.android.server.accessibility.MagnificationController: void resetAllIfNeeded(boolean)>(0);

        return;
    }

    public java.lang.String toString()
    {
        com.android.server.accessibility.MagnificationController r0;
        java.lang.StringBuilder $r2;
        int $i0;
        android.util.SparseArray $r7;
        java.lang.String $r10;

        r0 := @this: com.android.server.accessibility.MagnificationController;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MagnificationController[");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mUserId=");

        $i0 = r0.<com.android.server.accessibility.MagnificationController: int mUserId>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mDisplays=");

        $r7 = r0.<com.android.server.accessibility.MagnificationController: android.util.SparseArray mDisplays>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r10 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    public void unregister(int)
    {
        com.android.server.accessibility.MagnificationController r0;
        int i0;
        java.lang.Object r1;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.accessibility.MagnificationController;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.accessibility.MagnificationController: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        specialinvoke r0.<com.android.server.accessibility.MagnificationController: void unregisterLocked(int,boolean)>(i0, 0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void unregisterAll()
    {
        com.android.server.accessibility.MagnificationController r0;
        java.lang.Object r1;
        android.util.SparseArray $r2, r4;
        int $i0, $i1, i2;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.accessibility.MagnificationController;

        r1 = r0.<com.android.server.accessibility.MagnificationController: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.accessibility.MagnificationController: android.util.SparseArray mDisplays>;

        r4 = virtualinvoke $r2.<android.util.SparseArray: android.util.SparseArray clone()>();

     label2:
        i2 = 0;

     label3:
        $i0 = virtualinvoke r4.<android.util.SparseArray: int size()>();

        if i2 >= $i0 goto label5;

        $i1 = virtualinvoke r4.<android.util.SparseArray: int keyAt(int)>(i2);

        specialinvoke r0.<com.android.server.accessibility.MagnificationController: void unregisterLocked(int,boolean)>($i1, 0);

     label4:
        i2 = i2 + 1;

        goto label3;

     label5:
        exitmonitor r1;

     label6:
        return;

     label7:
        $r3 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public static void <clinit>()
    {
        <com.android.server.accessibility.MagnificationController: float MIN_SCALE> = 1.0F;

        <com.android.server.accessibility.MagnificationController: float MAX_SCALE> = 8.0F;

        <com.android.server.accessibility.MagnificationController: java.lang.String LOG_TAG> = "MagnificationController";

        <com.android.server.accessibility.MagnificationController: float DEFAULT_MAGNIFICATION_SCALE> = 2.0F;

        <com.android.server.accessibility.MagnificationController: boolean DEBUG_SET_MAGNIFICATION_SPEC> = 0;

        <com.android.server.accessibility.MagnificationController: boolean DEBUG> = 0;

        return;
    }
}
