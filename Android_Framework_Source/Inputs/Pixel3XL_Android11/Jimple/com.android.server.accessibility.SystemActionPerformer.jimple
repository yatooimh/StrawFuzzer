public class com.android.server.accessibility.SystemActionPerformer extends java.lang.Object
{
    private static final java.lang.String TAG;
    private final android.content.Context mContext;
    private final android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction mLegacyBackAction;
    private final android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction mLegacyHomeAction;
    private final android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction mLegacyLockScreenAction;
    private final android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction mLegacyNotificationsAction;
    private final android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction mLegacyPowerDialogAction;
    private final android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction mLegacyQuickSettingsAction;
    private final android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction mLegacyRecentsAction;
    private final android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction mLegacyTakeScreenshotAction;
    private final com.android.server.accessibility.SystemActionPerformer$SystemActionsChangedListener mListener;
    private final java.util.Map mRegisteredSystemActions;
    private java.util.function.Supplier mScreenshotHelperSupplier;
    private final java.lang.Object mSystemActionLock;
    private final com.android.server.wm.WindowManagerInternal mWindowManagerService;

    public void <init>(android.content.Context, com.android.server.wm.WindowManagerInternal)
    {
        com.android.server.accessibility.SystemActionPerformer r0;
        android.content.Context r1;
        com.android.server.wm.WindowManagerInternal r2;

        r0 := @this: com.android.server.accessibility.SystemActionPerformer;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.server.wm.WindowManagerInternal;

        specialinvoke r0.<com.android.server.accessibility.SystemActionPerformer: void <init>(android.content.Context,com.android.server.wm.WindowManagerInternal,java.util.function.Supplier,com.android.server.accessibility.SystemActionPerformer$SystemActionsChangedListener)>(r1, r2, null, null);

        return;
    }

    public void <init>(android.content.Context, com.android.server.wm.WindowManagerInternal, java.util.function.Supplier)
    {
        com.android.server.accessibility.SystemActionPerformer r0;
        android.content.Context r1;
        com.android.server.wm.WindowManagerInternal r2;
        java.util.function.Supplier r3;

        r0 := @this: com.android.server.accessibility.SystemActionPerformer;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.server.wm.WindowManagerInternal;

        r3 := @parameter2: java.util.function.Supplier;

        specialinvoke r0.<com.android.server.accessibility.SystemActionPerformer: void <init>(android.content.Context,com.android.server.wm.WindowManagerInternal,java.util.function.Supplier,com.android.server.accessibility.SystemActionPerformer$SystemActionsChangedListener)>(r1, r2, r3, null);

        return;
    }

    public void <init>(android.content.Context, com.android.server.wm.WindowManagerInternal, java.util.function.Supplier, com.android.server.accessibility.SystemActionPerformer$SystemActionsChangedListener)
    {
        com.android.server.accessibility.SystemActionPerformer r0;
        android.content.Context r1, $r8, $r12, $r16, $r20, $r24, $r28, $r32, $r36;
        com.android.server.wm.WindowManagerInternal r2;
        java.util.function.Supplier r3;
        com.android.server.accessibility.SystemActionPerformer$SystemActionsChangedListener r4;
        java.lang.Object $r5;
        android.util.ArrayMap $r6;
        android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction $r7, $r11, $r15, $r19, $r23, $r27, $r31, $r35;
        android.content.res.Resources $r9, $r13, $r17, $r21, $r25, $r29, $r33, $r37;
        java.lang.String $r10, $r14, $r18, $r22, $r26, $r30, $r34, $r38;

        r0 := @this: com.android.server.accessibility.SystemActionPerformer;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.server.wm.WindowManagerInternal;

        r3 := @parameter2: java.util.function.Supplier;

        r4 := @parameter3: com.android.server.accessibility.SystemActionPerformer$SystemActionsChangedListener;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r5 = new java.lang.Object;

        specialinvoke $r5.<java.lang.Object: void <init>()>();

        r0.<com.android.server.accessibility.SystemActionPerformer: java.lang.Object mSystemActionLock> = $r5;

        $r6 = new android.util.ArrayMap;

        specialinvoke $r6.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.accessibility.SystemActionPerformer: java.util.Map mRegisteredSystemActions> = $r6;

        r0.<com.android.server.accessibility.SystemActionPerformer: android.content.Context mContext> = r1;

        r0.<com.android.server.accessibility.SystemActionPerformer: com.android.server.wm.WindowManagerInternal mWindowManagerService> = r2;

        r0.<com.android.server.accessibility.SystemActionPerformer: com.android.server.accessibility.SystemActionPerformer$SystemActionsChangedListener mListener> = r4;

        r0.<com.android.server.accessibility.SystemActionPerformer: java.util.function.Supplier mScreenshotHelperSupplier> = r3;

        $r7 = new android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction;

        $r8 = r0.<com.android.server.accessibility.SystemActionPerformer: android.content.Context mContext>;

        $r9 = virtualinvoke $r8.<android.content.Context: android.content.res.Resources getResources()>();

        $r10 = virtualinvoke $r9.<android.content.res.Resources: java.lang.String getString(int)>(17039579);

        specialinvoke $r7.<android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction: void <init>(int,java.lang.CharSequence)>(2, $r10);

        r0.<com.android.server.accessibility.SystemActionPerformer: android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction mLegacyHomeAction> = $r7;

        $r11 = new android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction;

        $r12 = r0.<com.android.server.accessibility.SystemActionPerformer: android.content.Context mContext>;

        $r13 = virtualinvoke $r12.<android.content.Context: android.content.res.Resources getResources()>();

        $r14 = virtualinvoke $r13.<android.content.res.Resources: java.lang.String getString(int)>(17039577);

        specialinvoke $r11.<android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction: void <init>(int,java.lang.CharSequence)>(1, $r14);

        r0.<com.android.server.accessibility.SystemActionPerformer: android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction mLegacyBackAction> = $r11;

        $r15 = new android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction;

        $r16 = r0.<com.android.server.accessibility.SystemActionPerformer: android.content.Context mContext>;

        $r17 = virtualinvoke $r16.<android.content.Context: android.content.res.Resources getResources()>();

        $r18 = virtualinvoke $r17.<android.content.res.Resources: java.lang.String getString(int)>(17039586);

        specialinvoke $r15.<android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction: void <init>(int,java.lang.CharSequence)>(3, $r18);

        r0.<com.android.server.accessibility.SystemActionPerformer: android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction mLegacyRecentsAction> = $r15;

        $r19 = new android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction;

        $r20 = r0.<com.android.server.accessibility.SystemActionPerformer: android.content.Context mContext>;

        $r21 = virtualinvoke $r20.<android.content.Context: android.content.res.Resources getResources()>();

        $r22 = virtualinvoke $r21.<android.content.res.Resources: java.lang.String getString(int)>(17039581);

        specialinvoke $r19.<android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction: void <init>(int,java.lang.CharSequence)>(4, $r22);

        r0.<com.android.server.accessibility.SystemActionPerformer: android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction mLegacyNotificationsAction> = $r19;

        $r23 = new android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction;

        $r24 = r0.<com.android.server.accessibility.SystemActionPerformer: android.content.Context mContext>;

        $r25 = virtualinvoke $r24.<android.content.Context: android.content.res.Resources getResources()>();

        $r26 = virtualinvoke $r25.<android.content.res.Resources: java.lang.String getString(int)>(17039585);

        specialinvoke $r23.<android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction: void <init>(int,java.lang.CharSequence)>(5, $r26);

        r0.<com.android.server.accessibility.SystemActionPerformer: android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction mLegacyQuickSettingsAction> = $r23;

        $r27 = new android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction;

        $r28 = r0.<com.android.server.accessibility.SystemActionPerformer: android.content.Context mContext>;

        $r29 = virtualinvoke $r28.<android.content.Context: android.content.res.Resources getResources()>();

        $r30 = virtualinvoke $r29.<android.content.res.Resources: java.lang.String getString(int)>(17039584);

        specialinvoke $r27.<android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction: void <init>(int,java.lang.CharSequence)>(6, $r30);

        r0.<com.android.server.accessibility.SystemActionPerformer: android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction mLegacyPowerDialogAction> = $r27;

        $r31 = new android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction;

        $r32 = r0.<com.android.server.accessibility.SystemActionPerformer: android.content.Context mContext>;

        $r33 = virtualinvoke $r32.<android.content.Context: android.content.res.Resources getResources()>();

        $r34 = virtualinvoke $r33.<android.content.res.Resources: java.lang.String getString(int)>(17039580);

        specialinvoke $r31.<android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction: void <init>(int,java.lang.CharSequence)>(8, $r34);

        r0.<com.android.server.accessibility.SystemActionPerformer: android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction mLegacyLockScreenAction> = $r31;

        $r35 = new android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction;

        $r36 = r0.<com.android.server.accessibility.SystemActionPerformer: android.content.Context mContext>;

        $r37 = virtualinvoke $r36.<android.content.Context: android.content.res.Resources getResources()>();

        $r38 = virtualinvoke $r37.<android.content.res.Resources: java.lang.String getString(int)>(17039587);

        specialinvoke $r35.<android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction: void <init>(int,java.lang.CharSequence)>(9, $r38);

        r0.<com.android.server.accessibility.SystemActionPerformer: android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction mLegacyTakeScreenshotAction> = $r35;

        return;
    }

    private void addLegacySystemActions(java.util.List)
    {
        com.android.server.accessibility.SystemActionPerformer r0;
        java.util.List r1;
        java.util.Map $r2, $r4, $r6, $r8, $r10, $r12, $r14, $r16;
        java.lang.Integer $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25;

        r0 := @this: com.android.server.accessibility.SystemActionPerformer;

        r1 := @parameter0: java.util.List;

        $r2 = r0.<com.android.server.accessibility.SystemActionPerformer: java.util.Map mRegisteredSystemActions>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>($r3);

        if $z0 != 0 goto label1;

        $r25 = r0.<com.android.server.accessibility.SystemActionPerformer: android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction mLegacyBackAction>;

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r25);

     label1:
        $r4 = r0.<com.android.server.accessibility.SystemActionPerformer: java.util.Map mRegisteredSystemActions>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $z1 = interfaceinvoke $r4.<java.util.Map: boolean containsKey(java.lang.Object)>($r5);

        if $z1 != 0 goto label2;

        $r24 = r0.<com.android.server.accessibility.SystemActionPerformer: android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction mLegacyHomeAction>;

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r24);

     label2:
        $r6 = r0.<com.android.server.accessibility.SystemActionPerformer: java.util.Map mRegisteredSystemActions>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        $z2 = interfaceinvoke $r6.<java.util.Map: boolean containsKey(java.lang.Object)>($r7);

        if $z2 != 0 goto label3;

        $r23 = r0.<com.android.server.accessibility.SystemActionPerformer: android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction mLegacyRecentsAction>;

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r23);

     label3:
        $r8 = r0.<com.android.server.accessibility.SystemActionPerformer: java.util.Map mRegisteredSystemActions>;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        $z3 = interfaceinvoke $r8.<java.util.Map: boolean containsKey(java.lang.Object)>($r9);

        if $z3 != 0 goto label4;

        $r22 = r0.<com.android.server.accessibility.SystemActionPerformer: android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction mLegacyNotificationsAction>;

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r22);

     label4:
        $r10 = r0.<com.android.server.accessibility.SystemActionPerformer: java.util.Map mRegisteredSystemActions>;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        $z4 = interfaceinvoke $r10.<java.util.Map: boolean containsKey(java.lang.Object)>($r11);

        if $z4 != 0 goto label5;

        $r21 = r0.<com.android.server.accessibility.SystemActionPerformer: android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction mLegacyQuickSettingsAction>;

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r21);

     label5:
        $r12 = r0.<com.android.server.accessibility.SystemActionPerformer: java.util.Map mRegisteredSystemActions>;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6);

        $z5 = interfaceinvoke $r12.<java.util.Map: boolean containsKey(java.lang.Object)>($r13);

        if $z5 != 0 goto label6;

        $r20 = r0.<com.android.server.accessibility.SystemActionPerformer: android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction mLegacyPowerDialogAction>;

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r20);

     label6:
        $r14 = r0.<com.android.server.accessibility.SystemActionPerformer: java.util.Map mRegisteredSystemActions>;

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(8);

        $z6 = interfaceinvoke $r14.<java.util.Map: boolean containsKey(java.lang.Object)>($r15);

        if $z6 != 0 goto label7;

        $r19 = r0.<com.android.server.accessibility.SystemActionPerformer: android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction mLegacyLockScreenAction>;

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r19);

     label7:
        $r16 = r0.<com.android.server.accessibility.SystemActionPerformer: java.util.Map mRegisteredSystemActions>;

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(9);

        $z7 = interfaceinvoke $r16.<java.util.Map: boolean containsKey(java.lang.Object)>($r17);

        if $z7 != 0 goto label8;

        $r18 = r0.<com.android.server.accessibility.SystemActionPerformer: android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction mLegacyTakeScreenshotAction>;

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r18);

     label8:
        return;
    }

    private void expandNotifications()
    {
        com.android.server.accessibility.SystemActionPerformer r0;
        long l0;
        android.content.Context $r1;
        java.lang.Object $r2;
        android.app.StatusBarManager $r3;

        r0 := @this: com.android.server.accessibility.SystemActionPerformer;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        $r1 = r0.<com.android.server.accessibility.SystemActionPerformer: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("statusbar");

        $r3 = (android.app.StatusBarManager) $r2;

        virtualinvoke $r3.<android.app.StatusBarManager: void expandNotificationsPanel()>();

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;
    }

    private void expandQuickSettings()
    {
        com.android.server.accessibility.SystemActionPerformer r0;
        long l0;
        android.content.Context $r1;
        java.lang.Object $r2;
        android.app.StatusBarManager $r3;

        r0 := @this: com.android.server.accessibility.SystemActionPerformer;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        $r1 = r0.<com.android.server.accessibility.SystemActionPerformer: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("statusbar");

        $r3 = (android.app.StatusBarManager) $r2;

        virtualinvoke $r3.<android.app.StatusBarManager: void expandSettingsPanel()>();

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;
    }

    private boolean lockScreen()
    {
        com.android.server.accessibility.SystemActionPerformer r0;
        android.content.Context $r1;
        java.lang.Object $r2;
        android.os.PowerManager $r3;
        long $l0;
        com.android.server.wm.WindowManagerInternal $r4;

        r0 := @this: com.android.server.accessibility.SystemActionPerformer;

        $r1 = r0.<com.android.server.accessibility.SystemActionPerformer: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/os/PowerManager;");

        $r3 = (android.os.PowerManager) $r2;

        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        virtualinvoke $r3.<android.os.PowerManager: void goToSleep(long,int,int)>($l0, 7, 0);

        $r4 = r0.<com.android.server.accessibility.SystemActionPerformer: com.android.server.wm.WindowManagerInternal mWindowManagerService>;

        virtualinvoke $r4.<com.android.server.wm.WindowManagerInternal: void lockNow()>();

        return 1;
    }

    private boolean openRecents()
    {
        com.android.server.accessibility.SystemActionPerformer r0;
        long l0;
        java.lang.Object $r1;
        java.lang.Throwable $r2;
        com.android.server.statusbar.StatusBarManagerInternal r3;

        r0 := @this: com.android.server.accessibility.SystemActionPerformer;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r1 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Lcom/android/server/statusbar/StatusBarManagerInternal;");

        r3 = (com.android.server.statusbar.StatusBarManagerInternal) $r1;

     label2:
        if r3 != null goto label3;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return 0;

     label3:
        interfaceinvoke r3.<com.android.server.statusbar.StatusBarManagerInternal: void toggleRecentApps()>();

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return 1;

     label5:
        $r2 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    private void sendDownAndUpKeyEvents(int)
    {
        com.android.server.accessibility.SystemActionPerformer r0;
        int i0;
        long l1, l2, $l3;

        r0 := @this: com.android.server.accessibility.SystemActionPerformer;

        i0 := @parameter0: int;

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        specialinvoke r0.<com.android.server.accessibility.SystemActionPerformer: void sendKeyEventIdentityCleared(int,int,long,long)>(i0, 0, l2, l2);

        $l3 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        specialinvoke r0.<com.android.server.accessibility.SystemActionPerformer: void sendKeyEventIdentityCleared(int,int,long,long)>(i0, 1, l2, $l3);

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return;
    }

    private void sendKeyEventIdentityCleared(int, int, long, long)
    {
        com.android.server.accessibility.SystemActionPerformer r0;
        int i0, i1;
        long l2, l3;
        android.view.KeyEvent r1;
        android.hardware.input.InputManager $r2;

        r0 := @this: com.android.server.accessibility.SystemActionPerformer;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        l2 := @parameter2: long;

        l3 := @parameter3: long;

        r1 = staticinvoke <android.view.KeyEvent: android.view.KeyEvent obtain(long,long,int,int,int,int,int,int,int,int,java.lang.String)>(l2, l3, i1, i0, 0, 0, -1, 0, 8, 257, null);

        $r2 = staticinvoke <android.hardware.input.InputManager: android.hardware.input.InputManager getInstance()>();

        virtualinvoke $r2.<android.hardware.input.InputManager: boolean injectInputEvent(android.view.InputEvent,int)>(r1, 0);

        virtualinvoke r1.<android.view.KeyEvent: void recycle()>();

        return;
    }

    private void showGlobalActions()
    {
        com.android.server.accessibility.SystemActionPerformer r0;
        com.android.server.wm.WindowManagerInternal $r1;

        r0 := @this: com.android.server.accessibility.SystemActionPerformer;

        $r1 = r0.<com.android.server.accessibility.SystemActionPerformer: com.android.server.wm.WindowManagerInternal mWindowManagerService>;

        virtualinvoke $r1.<com.android.server.wm.WindowManagerInternal: void showGlobalActions()>();

        return;
    }

    private boolean takeScreenshot()
    {
        com.android.server.accessibility.SystemActionPerformer r0;
        com.android.internal.util.ScreenshotHelper $r1, r7;
        android.content.Context $r2;
        android.os.Handler $r3;
        android.os.Looper $r4;
        java.lang.Object $r5;
        java.util.function.Supplier r6;

        r0 := @this: com.android.server.accessibility.SystemActionPerformer;

        r6 = r0.<com.android.server.accessibility.SystemActionPerformer: java.util.function.Supplier mScreenshotHelperSupplier>;

        if r6 == null goto label1;

        $r5 = interfaceinvoke r6.<java.util.function.Supplier: java.lang.Object get()>();

        r7 = (com.android.internal.util.ScreenshotHelper) $r5;

        goto label2;

     label1:
        $r1 = new com.android.internal.util.ScreenshotHelper;

        $r2 = r0.<com.android.server.accessibility.SystemActionPerformer: android.content.Context mContext>;

        specialinvoke $r1.<com.android.internal.util.ScreenshotHelper: void <init>(android.content.Context)>($r2);

        r7 = $r1;

     label2:
        $r3 = new android.os.Handler;

        $r4 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        specialinvoke $r3.<android.os.Handler: void <init>(android.os.Looper)>($r4);

        virtualinvoke r7.<com.android.internal.util.ScreenshotHelper: void takeScreenshot(int,boolean,boolean,int,android.os.Handler,java.util.function.Consumer)>(1, 1, 1, 4, $r3, null);

        return 1;
    }

    private boolean toggleSplitScreen()
    {
        com.android.server.accessibility.SystemActionPerformer r0;
        long l0;
        java.lang.Object $r1;
        java.lang.Throwable $r2;
        com.android.server.statusbar.StatusBarManagerInternal r3;

        r0 := @this: com.android.server.accessibility.SystemActionPerformer;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r1 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Lcom/android/server/statusbar/StatusBarManagerInternal;");

        r3 = (com.android.server.statusbar.StatusBarManagerInternal) $r1;

     label2:
        if r3 != null goto label3;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return 0;

     label3:
        interfaceinvoke r3.<com.android.server.statusbar.StatusBarManagerInternal: void toggleSplitScreen()>();

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return 1;

     label5:
        $r2 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.util.List getSystemActions()
    {
        com.android.server.accessibility.SystemActionPerformer r0;
        java.lang.Object r1, $r8, $r9, $r11;
        java.util.Iterator r2;
        java.util.Map$Entry r3;
        android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction r4;
        java.util.ArrayList $r5;
        java.util.Map $r6;
        java.util.Set $r7;
        boolean $z0;
        java.lang.Integer $r10;
        int $i0;
        android.app.RemoteAction $r12;
        java.lang.CharSequence $r13;
        java.lang.Throwable $r14;

        r0 := @this: com.android.server.accessibility.SystemActionPerformer;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r1 = r0.<com.android.server.accessibility.SystemActionPerformer: java.lang.Object mSystemActionLock>;

        entermonitor r1;

     label1:
        $r6 = r0.<com.android.server.accessibility.SystemActionPerformer: java.util.Map mRegisteredSystemActions>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r8 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r8;

        r4 = new android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction;

        $r9 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r10 = (java.lang.Integer) $r9;

        $i0 = virtualinvoke $r10.<java.lang.Integer: int intValue()>();

        $r11 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r12 = (android.app.RemoteAction) $r11;

        $r13 = virtualinvoke $r12.<android.app.RemoteAction: java.lang.CharSequence getTitle()>();

        specialinvoke r4.<android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction: void <init>(int,java.lang.CharSequence)>($i0, $r13);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r4);

     label3:
        goto label2;

     label4:
        specialinvoke r0.<com.android.server.accessibility.SystemActionPerformer: void addLegacySystemActions(java.util.List)>($r5);

        exitmonitor r1;

     label5:
        return $r5;

     label6:
        $r14 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r14;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public boolean performSystemAction(int)
    {
        com.android.server.accessibility.SystemActionPerformer r0;
        int i0;
        long l1;
        android.app.RemoteAction r1;
        java.lang.StringBuilder r2, r19;
        java.util.Map $r3;
        java.lang.Integer $r4;
        java.lang.Object $r5, r17;
        java.lang.String $r8, $r14;
        android.app.PendingIntent $r9;
        android.app.PendingIntent$CanceledException $r10;
        java.lang.CharSequence $r12;
        java.lang.Throwable $r15, $r16;
        boolean z0, z1, z2, z3;

        r0 := @this: com.android.server.accessibility.SystemActionPerformer;

        i0 := @parameter0: int;

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label01:
        r17 = r0.<com.android.server.accessibility.SystemActionPerformer: java.lang.Object mSystemActionLock>;

        entermonitor r17;

     label02:
        $r3 = r0.<com.android.server.accessibility.SystemActionPerformer: java.util.Map mRegisteredSystemActions>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r5 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        r1 = (android.app.RemoteAction) $r5;

     label03:
        if r1 == null goto label11;

     label04:
        $r9 = virtualinvoke r1.<android.app.RemoteAction: android.app.PendingIntent getActionIntent()>();

        virtualinvoke $r9.<android.app.PendingIntent: void send()>();

     label05:
        exitmonitor r17;

     label06:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return 1;

     label07:
        $r10 := @caughtexception;

     label08:
        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("canceled PendingIntent for global action ");

        $r12 = virtualinvoke r1.<android.app.RemoteAction: java.lang.CharSequence getTitle()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r14 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("SystemActionPerformer", $r14, $r10);

     label09:
        exitmonitor r17;

     label10:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return 0;

     label11:
        exitmonitor r17;

     label12:
        tableswitch(i0)
        {
            case 1: goto label32;
            case 2: goto label30;
            case 3: goto label28;
            case 4: goto label26;
            case 5: goto label24;
            case 6: goto label22;
            case 7: goto label20;
            case 8: goto label18;
            case 9: goto label16;
            case 10: goto label14;
            default: goto label13;
        };

     label13:
        goto label34;

     label14:
        specialinvoke r0.<com.android.server.accessibility.SystemActionPerformer: void sendDownAndUpKeyEvents(int)>(79);

     label15:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return 1;

     label16:
        z0 = specialinvoke r0.<com.android.server.accessibility.SystemActionPerformer: boolean takeScreenshot()>();

     label17:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return z0;

     label18:
        z1 = specialinvoke r0.<com.android.server.accessibility.SystemActionPerformer: boolean lockScreen()>();

     label19:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return z1;

     label20:
        z2 = specialinvoke r0.<com.android.server.accessibility.SystemActionPerformer: boolean toggleSplitScreen()>();

     label21:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return z2;

     label22:
        specialinvoke r0.<com.android.server.accessibility.SystemActionPerformer: void showGlobalActions()>();

     label23:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return 1;

     label24:
        specialinvoke r0.<com.android.server.accessibility.SystemActionPerformer: void expandQuickSettings()>();

     label25:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return 1;

     label26:
        specialinvoke r0.<com.android.server.accessibility.SystemActionPerformer: void expandNotifications()>();

     label27:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return 1;

     label28:
        z3 = specialinvoke r0.<com.android.server.accessibility.SystemActionPerformer: boolean openRecents()>();

     label29:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return z3;

     label30:
        specialinvoke r0.<com.android.server.accessibility.SystemActionPerformer: void sendDownAndUpKeyEvents(int)>(3);

     label31:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return 1;

     label32:
        specialinvoke r0.<com.android.server.accessibility.SystemActionPerformer: void sendDownAndUpKeyEvents(int)>(4);

     label33:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return 1;

     label34:
        r19 = new java.lang.StringBuilder;

        specialinvoke r19.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid action id: ");

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("SystemActionPerformer", $r8);

     label35:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return 0;

     label36:
        $r16 := @caughtexception;

     label37:
        exitmonitor r17;

     label38:
        throw $r16;

     label39:
        $r15 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r15;

        catch java.lang.Throwable from label01 to label02 with label39;
        catch java.lang.Throwable from label02 to label03 with label36;
        catch android.app.PendingIntent$CanceledException from label04 to label05 with label07;
        catch java.lang.Throwable from label04 to label05 with label36;
        catch java.lang.Throwable from label05 to label06 with label36;
        catch java.lang.Throwable from label08 to label09 with label36;
        catch java.lang.Throwable from label09 to label10 with label36;
        catch java.lang.Throwable from label11 to label12 with label36;
        catch java.lang.Throwable from label14 to label15 with label39;
        catch java.lang.Throwable from label16 to label17 with label39;
        catch java.lang.Throwable from label18 to label19 with label39;
        catch java.lang.Throwable from label20 to label21 with label39;
        catch java.lang.Throwable from label22 to label23 with label39;
        catch java.lang.Throwable from label24 to label25 with label39;
        catch java.lang.Throwable from label26 to label27 with label39;
        catch java.lang.Throwable from label28 to label29 with label39;
        catch java.lang.Throwable from label30 to label31 with label39;
        catch java.lang.Throwable from label32 to label33 with label39;
        catch java.lang.Throwable from label34 to label35 with label39;
        catch java.lang.Throwable from label37 to label38 with label36;
        catch java.lang.Throwable from label38 to label39 with label39;
    }

    public void registerSystemAction(int, android.app.RemoteAction)
    {
        com.android.server.accessibility.SystemActionPerformer r0;
        int i0;
        java.lang.Object r1;
        java.util.Map $r2;
        java.lang.Integer $r3;
        java.lang.Throwable $r5;
        android.app.RemoteAction r6;
        com.android.server.accessibility.SystemActionPerformer$SystemActionsChangedListener r7;

        r0 := @this: com.android.server.accessibility.SystemActionPerformer;

        i0 := @parameter0: int;

        r6 := @parameter1: android.app.RemoteAction;

        r1 = r0.<com.android.server.accessibility.SystemActionPerformer: java.lang.Object mSystemActionLock>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.accessibility.SystemActionPerformer: java.util.Map mRegisteredSystemActions>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, r6);

        exitmonitor r1;

     label2:
        r7 = r0.<com.android.server.accessibility.SystemActionPerformer: com.android.server.accessibility.SystemActionPerformer$SystemActionsChangedListener mListener>;

        if r7 == null goto label3;

        interfaceinvoke r7.<com.android.server.accessibility.SystemActionPerformer$SystemActionsChangedListener: void onSystemActionsChanged()>();

     label3:
        return;

     label4:
        $r5 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void unregisterSystemAction(int)
    {
        com.android.server.accessibility.SystemActionPerformer r0;
        int i0;
        java.lang.Object r1;
        java.util.Map $r2;
        java.lang.Integer $r3;
        java.lang.Throwable $r5;
        com.android.server.accessibility.SystemActionPerformer$SystemActionsChangedListener r6;

        r0 := @this: com.android.server.accessibility.SystemActionPerformer;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.accessibility.SystemActionPerformer: java.lang.Object mSystemActionLock>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.accessibility.SystemActionPerformer: java.util.Map mRegisteredSystemActions>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r3);

        exitmonitor r1;

     label2:
        r6 = r0.<com.android.server.accessibility.SystemActionPerformer: com.android.server.accessibility.SystemActionPerformer$SystemActionsChangedListener mListener>;

        if r6 == null goto label3;

        interfaceinvoke r6.<com.android.server.accessibility.SystemActionPerformer$SystemActionsChangedListener: void onSystemActionsChanged()>();

     label3:
        return;

     label4:
        $r5 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public static void <clinit>()
    {
        <com.android.server.accessibility.SystemActionPerformer: java.lang.String TAG> = "SystemActionPerformer";

        return;
    }
}
