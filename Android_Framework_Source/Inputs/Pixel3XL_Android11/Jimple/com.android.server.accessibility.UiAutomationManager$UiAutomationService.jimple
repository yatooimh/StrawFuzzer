class com.android.server.accessibility.UiAutomationManager$UiAutomationService extends com.android.server.accessibility.AbstractAccessibilityServiceConnection
{
    private final android.os.Handler mMainHandler;
    final com.android.server.accessibility.UiAutomationManager this$0;

    void <init>(com.android.server.accessibility.UiAutomationManager, android.content.Context, android.accessibilityservice.AccessibilityServiceInfo, int, android.os.Handler, java.lang.Object, com.android.server.accessibility.AccessibilitySecurityPolicy, com.android.server.accessibility.AbstractAccessibilityServiceConnection$SystemSupport, com.android.server.wm.WindowManagerInternal, com.android.server.accessibility.SystemActionPerformer, com.android.server.accessibility.AccessibilityWindowManager)
    {
        com.android.server.accessibility.UiAutomationManager$UiAutomationService r0;
        com.android.server.accessibility.UiAutomationManager r1;
        android.content.Context r2;
        android.accessibilityservice.AccessibilityServiceInfo r3;
        int i0;
        android.os.Handler r4;
        java.lang.Object r5;
        com.android.server.accessibility.AccessibilitySecurityPolicy r6;
        com.android.server.accessibility.AbstractAccessibilityServiceConnection$SystemSupport r7;
        com.android.server.wm.WindowManagerInternal r8;
        com.android.server.accessibility.SystemActionPerformer r9;
        com.android.server.accessibility.AccessibilityWindowManager r10;
        android.content.ComponentName $r11;

        r0 := @this: com.android.server.accessibility.UiAutomationManager$UiAutomationService;

        r1 := @parameter0: com.android.server.accessibility.UiAutomationManager;

        r2 := @parameter1: android.content.Context;

        r3 := @parameter2: android.accessibilityservice.AccessibilityServiceInfo;

        i0 := @parameter3: int;

        r4 := @parameter4: android.os.Handler;

        r5 := @parameter5: java.lang.Object;

        r6 := @parameter6: com.android.server.accessibility.AccessibilitySecurityPolicy;

        r7 := @parameter7: com.android.server.accessibility.AbstractAccessibilityServiceConnection$SystemSupport;

        r8 := @parameter8: com.android.server.wm.WindowManagerInternal;

        r9 := @parameter9: com.android.server.accessibility.SystemActionPerformer;

        r10 := @parameter10: com.android.server.accessibility.AccessibilityWindowManager;

        r0.<com.android.server.accessibility.UiAutomationManager$UiAutomationService: com.android.server.accessibility.UiAutomationManager this$0> = r1;

        $r11 = staticinvoke <com.android.server.accessibility.UiAutomationManager: android.content.ComponentName access$200()>();

        specialinvoke r0.<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void <init>(android.content.Context,android.content.ComponentName,android.accessibilityservice.AccessibilityServiceInfo,int,android.os.Handler,java.lang.Object,com.android.server.accessibility.AccessibilitySecurityPolicy,com.android.server.accessibility.AbstractAccessibilityServiceConnection$SystemSupport,com.android.server.wm.WindowManagerInternal,com.android.server.accessibility.SystemActionPerformer,com.android.server.accessibility.AccessibilityWindowManager)>(r2, $r11, r3, i0, r4, r5, r6, r7, r8, r9, r10);

        r0.<com.android.server.accessibility.UiAutomationManager$UiAutomationService: android.os.Handler mMainHandler> = r4;

        return;
    }

    public void binderDied()
    {
        com.android.server.accessibility.UiAutomationManager$UiAutomationService r0;
        com.android.server.accessibility.UiAutomationManager $r1;

        r0 := @this: com.android.server.accessibility.UiAutomationManager$UiAutomationService;

        $r1 = r0.<com.android.server.accessibility.UiAutomationManager$UiAutomationService: com.android.server.accessibility.UiAutomationManager this$0>;

        staticinvoke <com.android.server.accessibility.UiAutomationManager: void access$100(com.android.server.accessibility.UiAutomationManager)>($r1);

        return;
    }

    void connectServiceUnknownThread()
    {
        com.android.server.accessibility.UiAutomationManager$UiAutomationService r0;
        com.android.server.accessibility._$$Lambda$UiAutomationManager$UiAutomationService$z2oxrodQt4ZxyzsfB6p_GYgwxqk $r1;
        android.os.Handler $r2;

        r0 := @this: com.android.server.accessibility.UiAutomationManager$UiAutomationService;

        $r2 = r0.<com.android.server.accessibility.UiAutomationManager$UiAutomationService: android.os.Handler mMainHandler>;

        $r1 = new com.android.server.accessibility._$$Lambda$UiAutomationManager$UiAutomationService$z2oxrodQt4ZxyzsfB6p_GYgwxqk;

        specialinvoke $r1.<com.android.server.accessibility._$$Lambda$UiAutomationManager$UiAutomationService$z2oxrodQt4ZxyzsfB6p_GYgwxqk: void <init>(com.android.server.accessibility.UiAutomationManager$UiAutomationService)>(r0);

        virtualinvoke $r2.<android.os.Handler: boolean post(java.lang.Runnable)>($r1);

        return;
    }

    public void disableSelf()
    {
        com.android.server.accessibility.UiAutomationManager$UiAutomationService r0;

        r0 := @this: com.android.server.accessibility.UiAutomationManager$UiAutomationService;

        return;
    }

    public void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.accessibility.UiAutomationManager$UiAutomationService r0;
        android.content.Context $r1;
        boolean $z0;
        int $i0;
        java.lang.String $r3, $r5, $r9;
        long $l1;
        java.lang.Throwable $r12;
        java.io.FileDescriptor r13;
        java.io.PrintWriter r14;
        java.lang.String[] r15;
        java.lang.Object r16;
        java.lang.StringBuilder r17, r18;

        r0 := @this: com.android.server.accessibility.UiAutomationManager$UiAutomationService;

        r13 := @parameter0: java.io.FileDescriptor;

        r14 := @parameter1: java.io.PrintWriter;

        r15 := @parameter2: java.lang.String[];

        $r1 = r0.<com.android.server.accessibility.UiAutomationManager$UiAutomationService: android.content.Context mContext>;

        $z0 = staticinvoke <com.android.internal.util.DumpUtils: boolean checkDumpPermission(android.content.Context,java.lang.String,java.io.PrintWriter)>($r1, "UiAutomationManager", r14);

        if $z0 != 0 goto label1;

        return;

     label1:
        r16 = r0.<com.android.server.accessibility.UiAutomationManager$UiAutomationService: java.lang.Object mLock>;

        entermonitor r16;

     label2:
        r17 = new java.lang.StringBuilder;

        specialinvoke r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ui Automation[eventTypes=");

        $i0 = r0.<com.android.server.accessibility.UiAutomationManager$UiAutomationService: int mEventTypes>;

        $r3 = staticinvoke <android.view.accessibility.AccessibilityEvent: java.lang.String eventTypeToString(int)>($i0);

        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r14.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>($r5);

        r18 = new java.lang.StringBuilder;

        specialinvoke r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", notificationTimeout=");

        $l1 = r0.<com.android.server.accessibility.UiAutomationManager$UiAutomationService: long mNotificationTimeout>;

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r9 = virtualinvoke r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r14.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>($r9);

        virtualinvoke r14.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("]");

        exitmonitor r16;

     label3:
        return;

     label4:
        $r12 := @caughtexception;

     label5:
        exitmonitor r16;

     label6:
        throw $r12;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public int getSoftKeyboardShowMode()
    {
        com.android.server.accessibility.UiAutomationManager$UiAutomationService r0;

        r0 := @this: com.android.server.accessibility.UiAutomationManager$UiAutomationService;

        return 0;
    }

    protected boolean hasRightsToCurrentUserLocked()
    {
        com.android.server.accessibility.UiAutomationManager$UiAutomationService r0;

        r0 := @this: com.android.server.accessibility.UiAutomationManager$UiAutomationService;

        return 1;
    }

    public boolean isAccessibilityButtonAvailable()
    {
        com.android.server.accessibility.UiAutomationManager$UiAutomationService r0;

        r0 := @this: com.android.server.accessibility.UiAutomationManager$UiAutomationService;

        return 0;
    }

    public boolean isCapturingFingerprintGestures()
    {
        com.android.server.accessibility.UiAutomationManager$UiAutomationService r0;

        r0 := @this: com.android.server.accessibility.UiAutomationManager$UiAutomationService;

        return 0;
    }

    public void lambda$connectServiceUnknownThread$0$UiAutomationManager$UiAutomationService()
    {
        com.android.server.accessibility.UiAutomationManager$UiAutomationService r0;
        java.lang.Object r1, $r5;
        android.accessibilityservice.IAccessibilityServiceClient r2, $r3;
        android.util.SparseArray $r4;
        int $i0;
        android.os.IBinder $r6, r10, r11;
        java.lang.Throwable $r7;
        android.os.RemoteException $r8;
        com.android.server.accessibility.UiAutomationManager $r9;

        r0 := @this: com.android.server.accessibility.UiAutomationManager$UiAutomationService;

     label01:
        r1 = r0.<com.android.server.accessibility.UiAutomationManager$UiAutomationService: java.lang.Object mLock>;

        entermonitor r1;

     label02:
        r2 = r0.<com.android.server.accessibility.UiAutomationManager$UiAutomationService: android.accessibilityservice.IAccessibilityServiceClient mServiceInterface>;

     label03:
        if r2 != null goto label04;

        r10 = null;

        goto label05;

     label04:
        $r3 = r0.<com.android.server.accessibility.UiAutomationManager$UiAutomationService: android.accessibilityservice.IAccessibilityServiceClient mServiceInterface>;

        r10 = interfaceinvoke $r3.<android.accessibilityservice.IAccessibilityServiceClient: android.os.IBinder asBinder()>();

     label05:
        r0.<com.android.server.accessibility.UiAutomationManager$UiAutomationService: android.os.IBinder mService> = r10;

        r11 = r0.<com.android.server.accessibility.UiAutomationManager$UiAutomationService: android.os.IBinder mService>;

        exitmonitor r1;

     label06:
        if r2 == null goto label08;

     label07:
        interfaceinvoke r11.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>(r0, 0);

        $i0 = r0.<com.android.server.accessibility.UiAutomationManager$UiAutomationService: int mId>;

        $r4 = r0.<com.android.server.accessibility.UiAutomationManager$UiAutomationService: android.util.SparseArray mOverlayWindowTokens>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object get(int)>(0);

        $r6 = (android.os.IBinder) $r5;

        interfaceinvoke r2.<android.accessibilityservice.IAccessibilityServiceClient: void init(android.accessibilityservice.IAccessibilityServiceConnection,int,android.os.IBinder)>(r0, $i0, $r6);

     label08:
        goto label13;

     label09:
        $r7 := @caughtexception;

     label10:
        exitmonitor r1;

     label11:
        throw $r7;

     label12:
        $r8 := @caughtexception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("UiAutomationManager", "Error initialized connection", $r8);

        $r9 = r0.<com.android.server.accessibility.UiAutomationManager$UiAutomationService: com.android.server.accessibility.UiAutomationManager this$0>;

        staticinvoke <com.android.server.accessibility.UiAutomationManager: void access$100(com.android.server.accessibility.UiAutomationManager)>($r9);

     label13:
        return;

        catch android.os.RemoteException from label01 to label02 with label12;
        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch android.os.RemoteException from label07 to label08 with label12;
        catch java.lang.Throwable from label10 to label11 with label09;
        catch android.os.RemoteException from label11 to label12 with label12;
    }

    public void onFingerprintGesture(int)
    {
        com.android.server.accessibility.UiAutomationManager$UiAutomationService r0;
        int i0;

        r0 := @this: com.android.server.accessibility.UiAutomationManager$UiAutomationService;

        i0 := @parameter0: int;

        return;
    }

    public void onFingerprintGestureDetectionActiveChanged(boolean)
    {
        com.android.server.accessibility.UiAutomationManager$UiAutomationService r0;
        boolean z0;

        r0 := @this: com.android.server.accessibility.UiAutomationManager$UiAutomationService;

        z0 := @parameter0: boolean;

        return;
    }

    public void onServiceConnected(android.content.ComponentName, android.os.IBinder)
    {
        com.android.server.accessibility.UiAutomationManager$UiAutomationService r0;
        android.content.ComponentName r1;
        android.os.IBinder r2;

        r0 := @this: com.android.server.accessibility.UiAutomationManager$UiAutomationService;

        r1 := @parameter0: android.content.ComponentName;

        r2 := @parameter1: android.os.IBinder;

        return;
    }

    public void onServiceDisconnected(android.content.ComponentName)
    {
        com.android.server.accessibility.UiAutomationManager$UiAutomationService r0;
        android.content.ComponentName r1;

        r0 := @this: com.android.server.accessibility.UiAutomationManager$UiAutomationService;

        r1 := @parameter0: android.content.ComponentName;

        return;
    }

    public boolean setSoftKeyboardShowMode(int)
    {
        com.android.server.accessibility.UiAutomationManager$UiAutomationService r0;
        int i0;

        r0 := @this: com.android.server.accessibility.UiAutomationManager$UiAutomationService;

        i0 := @parameter0: int;

        return 0;
    }

    protected boolean supportsFlagForNotImportantViews(android.accessibilityservice.AccessibilityServiceInfo)
    {
        com.android.server.accessibility.UiAutomationManager$UiAutomationService r0;
        android.accessibilityservice.AccessibilityServiceInfo r1;

        r0 := @this: com.android.server.accessibility.UiAutomationManager$UiAutomationService;

        r1 := @parameter0: android.accessibilityservice.AccessibilityServiceInfo;

        return 1;
    }

    public boolean switchToInputMethod(java.lang.String)
    {
        com.android.server.accessibility.UiAutomationManager$UiAutomationService r0;
        java.lang.String r1;

        r0 := @this: com.android.server.accessibility.UiAutomationManager$UiAutomationService;

        r1 := @parameter0: java.lang.String;

        return 0;
    }

    public void takeScreenshot(int, android.os.RemoteCallback)
    {
        com.android.server.accessibility.UiAutomationManager$UiAutomationService r0;
        int i0;
        android.os.RemoteCallback r1;

        r0 := @this: com.android.server.accessibility.UiAutomationManager$UiAutomationService;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.RemoteCallback;

        return;
    }
}
