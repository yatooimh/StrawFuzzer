class com.android.server.accessibility.UiAutomationManager extends java.lang.Object
{
    private static final android.content.ComponentName COMPONENT_NAME;
    private static final java.lang.String LOG_TAG;
    private final java.lang.Object mLock;
    private com.android.server.accessibility.AbstractAccessibilityServiceConnection$SystemSupport mSystemSupport;
    private int mUiAutomationFlags;
    private com.android.server.accessibility.UiAutomationManager$UiAutomationService mUiAutomationService;
    private android.accessibilityservice.AccessibilityServiceInfo mUiAutomationServiceInfo;
    private android.os.IBinder mUiAutomationServiceOwner;
    private final android.os.IBinder$DeathRecipient mUiAutomationServiceOwnerDeathRecipient;

    static void <clinit>()
    {
        android.content.ComponentName $r0;

        <com.android.server.accessibility.UiAutomationManager: java.lang.String LOG_TAG> = "UiAutomationManager";

        $r0 = new android.content.ComponentName;

        specialinvoke $r0.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>("com.android.server.accessibility", "UiAutomation");

        <com.android.server.accessibility.UiAutomationManager: android.content.ComponentName COMPONENT_NAME> = $r0;

        return;
    }

    void <init>(java.lang.Object)
    {
        com.android.server.accessibility.UiAutomationManager r0;
        java.lang.Object r1;
        com.android.server.accessibility.UiAutomationManager$1 $r2;

        r0 := @this: com.android.server.accessibility.UiAutomationManager;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new com.android.server.accessibility.UiAutomationManager$1;

        specialinvoke $r2.<com.android.server.accessibility.UiAutomationManager$1: void <init>(com.android.server.accessibility.UiAutomationManager)>(r0);

        r0.<com.android.server.accessibility.UiAutomationManager: android.os.IBinder$DeathRecipient mUiAutomationServiceOwnerDeathRecipient> = $r2;

        r0.<com.android.server.accessibility.UiAutomationManager: java.lang.Object mLock> = r1;

        return;
    }

    static android.os.IBinder access$000(com.android.server.accessibility.UiAutomationManager)
    {
        com.android.server.accessibility.UiAutomationManager r0;
        android.os.IBinder $r1;

        r0 := @parameter0: com.android.server.accessibility.UiAutomationManager;

        $r1 = r0.<com.android.server.accessibility.UiAutomationManager: android.os.IBinder mUiAutomationServiceOwner>;

        return $r1;
    }

    static android.os.IBinder access$002(com.android.server.accessibility.UiAutomationManager, android.os.IBinder)
    {
        com.android.server.accessibility.UiAutomationManager r0;
        android.os.IBinder r1;

        r0 := @parameter0: com.android.server.accessibility.UiAutomationManager;

        r1 := @parameter1: android.os.IBinder;

        r0.<com.android.server.accessibility.UiAutomationManager: android.os.IBinder mUiAutomationServiceOwner> = r1;

        return r1;
    }

    static void access$100(com.android.server.accessibility.UiAutomationManager)
    {
        com.android.server.accessibility.UiAutomationManager r0;

        r0 := @parameter0: com.android.server.accessibility.UiAutomationManager;

        specialinvoke r0.<com.android.server.accessibility.UiAutomationManager: void destroyUiAutomationService()>();

        return;
    }

    static android.content.ComponentName access$200()
    {
        android.content.ComponentName $r0;

        $r0 = <com.android.server.accessibility.UiAutomationManager: android.content.ComponentName COMPONENT_NAME>;

        return $r0;
    }

    private void destroyUiAutomationService()
    {
        com.android.server.accessibility.UiAutomationManager r0;
        java.lang.Object r1;
        com.android.server.accessibility.UiAutomationManager$UiAutomationService $r3, $r4, $r7, $r8, $r9;
        android.accessibilityservice.IAccessibilityServiceClient $r5;
        android.os.IBinder $r6, $r10, $r13;
        com.android.server.accessibility.AbstractAccessibilityServiceConnection$SystemSupport $r11;
        android.os.IBinder$DeathRecipient $r12;
        java.lang.Throwable $r14;

        r0 := @this: com.android.server.accessibility.UiAutomationManager;

        r1 = r0.<com.android.server.accessibility.UiAutomationManager: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.accessibility.UiAutomationManager: com.android.server.accessibility.UiAutomationManager$UiAutomationService mUiAutomationService>;

        if $r3 == null goto label3;

        $r4 = r0.<com.android.server.accessibility.UiAutomationManager: com.android.server.accessibility.UiAutomationManager$UiAutomationService mUiAutomationService>;

        $r5 = $r4.<com.android.server.accessibility.UiAutomationManager$UiAutomationService: android.accessibilityservice.IAccessibilityServiceClient mServiceInterface>;

        $r6 = interfaceinvoke $r5.<android.accessibilityservice.IAccessibilityServiceClient: android.os.IBinder asBinder()>();

        $r7 = r0.<com.android.server.accessibility.UiAutomationManager: com.android.server.accessibility.UiAutomationManager$UiAutomationService mUiAutomationService>;

        interfaceinvoke $r6.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r7, 0);

        $r8 = r0.<com.android.server.accessibility.UiAutomationManager: com.android.server.accessibility.UiAutomationManager$UiAutomationService mUiAutomationService>;

        virtualinvoke $r8.<com.android.server.accessibility.UiAutomationManager$UiAutomationService: void onRemoved()>();

        $r9 = r0.<com.android.server.accessibility.UiAutomationManager: com.android.server.accessibility.UiAutomationManager$UiAutomationService mUiAutomationService>;

        virtualinvoke $r9.<com.android.server.accessibility.UiAutomationManager$UiAutomationService: void resetLocked()>();

        r0.<com.android.server.accessibility.UiAutomationManager: com.android.server.accessibility.UiAutomationManager$UiAutomationService mUiAutomationService> = null;

        r0.<com.android.server.accessibility.UiAutomationManager: int mUiAutomationFlags> = 0;

        $r10 = r0.<com.android.server.accessibility.UiAutomationManager: android.os.IBinder mUiAutomationServiceOwner>;

        if $r10 == null goto label2;

        $r13 = r0.<com.android.server.accessibility.UiAutomationManager: android.os.IBinder mUiAutomationServiceOwner>;

        $r12 = r0.<com.android.server.accessibility.UiAutomationManager: android.os.IBinder$DeathRecipient mUiAutomationServiceOwnerDeathRecipient>;

        interfaceinvoke $r13.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r12, 0);

        r0.<com.android.server.accessibility.UiAutomationManager: android.os.IBinder mUiAutomationServiceOwner> = null;

     label2:
        $r11 = r0.<com.android.server.accessibility.UiAutomationManager: com.android.server.accessibility.AbstractAccessibilityServiceConnection$SystemSupport mSystemSupport>;

        interfaceinvoke $r11.<com.android.server.accessibility.AbstractAccessibilityServiceConnection$SystemSupport: void onClientChangeLocked(boolean)>(0);

     label3:
        exitmonitor r1;

     label4:
        return;

     label5:
        $r14 := @caughtexception;

     label6:
        exitmonitor r1;

     label7:
        throw $r14;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    boolean canRetrieveInteractiveWindowsLocked()
    {
        com.android.server.accessibility.UiAutomationManager r0;
        com.android.server.accessibility.UiAutomationManager$UiAutomationService r1;
        boolean $z0, z1;

        r0 := @this: com.android.server.accessibility.UiAutomationManager;

        r1 = r0.<com.android.server.accessibility.UiAutomationManager: com.android.server.accessibility.UiAutomationManager$UiAutomationService mUiAutomationService>;

        if r1 == null goto label1;

        $z0 = r1.<com.android.server.accessibility.UiAutomationManager$UiAutomationService: boolean mRetrieveInteractiveWindows>;

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    void dumpUiAutomationService(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.accessibility.UiAutomationManager r0;
        java.io.PrintWriter r1;
        java.lang.String[] r2;
        java.lang.Object r3;
        com.android.server.accessibility.UiAutomationManager$UiAutomationService r4;
        java.lang.Throwable $r5;
        java.io.FileDescriptor r6;

        r0 := @this: com.android.server.accessibility.UiAutomationManager;

        r6 := @parameter0: java.io.FileDescriptor;

        r1 := @parameter1: java.io.PrintWriter;

        r2 := @parameter2: java.lang.String[];

        r3 = r0.<com.android.server.accessibility.UiAutomationManager: java.lang.Object mLock>;

        entermonitor r3;

     label1:
        r4 = r0.<com.android.server.accessibility.UiAutomationManager: com.android.server.accessibility.UiAutomationManager$UiAutomationService mUiAutomationService>;

        exitmonitor r3;

     label2:
        if r4 == null goto label3;

        virtualinvoke r4.<com.android.server.accessibility.UiAutomationManager$UiAutomationService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r6, r1, r2);

     label3:
        return;

     label4:
        $r5 := @caughtexception;

     label5:
        exitmonitor r3;

     label6:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    int getRelevantEventTypes()
    {
        com.android.server.accessibility.UiAutomationManager r0;
        java.lang.Object r1;
        int $i0;
        java.lang.Throwable $r2;
        com.android.server.accessibility.UiAutomationManager$UiAutomationService r3;

        r0 := @this: com.android.server.accessibility.UiAutomationManager;

        r1 = r0.<com.android.server.accessibility.UiAutomationManager: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r3 = r0.<com.android.server.accessibility.UiAutomationManager: com.android.server.accessibility.UiAutomationManager$UiAutomationService mUiAutomationService>;

        exitmonitor r1;

     label2:
        if r3 != null goto label3;

        return 0;

     label3:
        $i0 = virtualinvoke r3.<com.android.server.accessibility.UiAutomationManager$UiAutomationService: int getRelevantEventTypes()>();

        return $i0;

     label4:
        $r2 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    int getRequestedEventMaskLocked()
    {
        com.android.server.accessibility.UiAutomationManager r0;
        com.android.server.accessibility.UiAutomationManager$UiAutomationService r1;
        int $i0;

        r0 := @this: com.android.server.accessibility.UiAutomationManager;

        r1 = r0.<com.android.server.accessibility.UiAutomationManager: com.android.server.accessibility.UiAutomationManager$UiAutomationService mUiAutomationService>;

        if r1 != null goto label1;

        return 0;

     label1:
        $i0 = r1.<com.android.server.accessibility.UiAutomationManager$UiAutomationService: int mEventTypes>;

        return $i0;
    }

    android.accessibilityservice.AccessibilityServiceInfo getServiceInfo()
    {
        com.android.server.accessibility.UiAutomationManager r0;
        java.lang.Object r1;
        android.accessibilityservice.AccessibilityServiceInfo $r2;
        java.lang.Throwable $r3;
        com.android.server.accessibility.UiAutomationManager$UiAutomationService r4;

        r0 := @this: com.android.server.accessibility.UiAutomationManager;

        r1 = r0.<com.android.server.accessibility.UiAutomationManager: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r4 = r0.<com.android.server.accessibility.UiAutomationManager: com.android.server.accessibility.UiAutomationManager$UiAutomationService mUiAutomationService>;

        exitmonitor r1;

     label2:
        if r4 != null goto label3;

        return null;

     label3:
        $r2 = virtualinvoke r4.<com.android.server.accessibility.UiAutomationManager$UiAutomationService: android.accessibilityservice.AccessibilityServiceInfo getServiceInfo()>();

        return $r2;

     label4:
        $r3 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    boolean isTouchExplorationEnabledLocked()
    {
        com.android.server.accessibility.UiAutomationManager r0;
        com.android.server.accessibility.UiAutomationManager$UiAutomationService r1;
        boolean $z0, z1;

        r0 := @this: com.android.server.accessibility.UiAutomationManager;

        r1 = r0.<com.android.server.accessibility.UiAutomationManager: com.android.server.accessibility.UiAutomationManager$UiAutomationService mUiAutomationService>;

        if r1 == null goto label1;

        $z0 = r1.<com.android.server.accessibility.UiAutomationManager$UiAutomationService: boolean mRequestTouchExplorationMode>;

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    boolean isUiAutomationRunningLocked()
    {
        com.android.server.accessibility.UiAutomationManager r0;
        com.android.server.accessibility.UiAutomationManager$UiAutomationService $r1;
        boolean z0;

        r0 := @this: com.android.server.accessibility.UiAutomationManager;

        $r1 = r0.<com.android.server.accessibility.UiAutomationManager: com.android.server.accessibility.UiAutomationManager$UiAutomationService mUiAutomationService>;

        if $r1 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    void registerUiTestAutomationServiceLocked(android.os.IBinder, android.accessibilityservice.IAccessibilityServiceClient, android.content.Context, android.accessibilityservice.AccessibilityServiceInfo, int, android.os.Handler, com.android.server.accessibility.AccessibilitySecurityPolicy, com.android.server.accessibility.AbstractAccessibilityServiceConnection$SystemSupport, com.android.server.wm.WindowManagerInternal, com.android.server.accessibility.SystemActionPerformer, com.android.server.accessibility.AccessibilityWindowManager, int)
    {
        com.android.server.accessibility.UiAutomationManager r0;
        int i0, i1;
        android.os.Handler r1;
        com.android.server.accessibility.AccessibilitySecurityPolicy r2;
        com.android.server.accessibility.AbstractAccessibilityServiceConnection$SystemSupport r3;
        com.android.server.wm.WindowManagerInternal r4;
        com.android.server.accessibility.SystemActionPerformer r5;
        com.android.server.accessibility.AccessibilityWindowManager r6;
        java.lang.Object r7, r33, r36;
        android.content.ComponentName $r8;
        java.lang.String $r12, $r27;
        android.os.IBinder$DeathRecipient $r13;
        com.android.server.accessibility.UiAutomationManager$UiAutomationService $r14, $r15, $r18, $r19, r34, r35;
        android.accessibilityservice.IAccessibilityServiceClient $r16, r30;
        android.os.IBinder $r17, r29;
        java.lang.Throwable $r20, $r21, $r22, $r23, r39;
        android.os.RemoteException $r24, $r28;
        android.content.Context r31;
        android.accessibilityservice.AccessibilityServiceInfo r32;
        java.lang.StringBuilder r38, r42;
        java.lang.IllegalStateException r41;

        r0 := @this: com.android.server.accessibility.UiAutomationManager;

        r29 := @parameter0: android.os.IBinder;

        r30 := @parameter1: android.accessibilityservice.IAccessibilityServiceClient;

        r31 := @parameter2: android.content.Context;

        r32 := @parameter3: android.accessibilityservice.AccessibilityServiceInfo;

        i0 := @parameter4: int;

        r1 := @parameter5: android.os.Handler;

        r2 := @parameter6: com.android.server.accessibility.AccessibilitySecurityPolicy;

        r3 := @parameter7: com.android.server.accessibility.AbstractAccessibilityServiceConnection$SystemSupport;

        r4 := @parameter8: com.android.server.wm.WindowManagerInternal;

        r5 := @parameter9: com.android.server.accessibility.SystemActionPerformer;

        r6 := @parameter10: com.android.server.accessibility.AccessibilityWindowManager;

        i1 := @parameter11: int;

        r33 = r0.<com.android.server.accessibility.UiAutomationManager: java.lang.Object mLock>;

        entermonitor r33;

     label01:
        $r8 = <com.android.server.accessibility.UiAutomationManager: android.content.ComponentName COMPONENT_NAME>;

        virtualinvoke r32.<android.accessibilityservice.AccessibilityServiceInfo: void setComponentName(android.content.ComponentName)>($r8);

        r34 = r0.<com.android.server.accessibility.UiAutomationManager: com.android.server.accessibility.UiAutomationManager$UiAutomationService mUiAutomationService>;

     label02:
        if r34 != null goto label40;

     label03:
        $r13 = r0.<com.android.server.accessibility.UiAutomationManager: android.os.IBinder$DeathRecipient mUiAutomationServiceOwnerDeathRecipient>;

        interfaceinvoke r29.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>($r13, 0);

     label04:
        r0.<com.android.server.accessibility.UiAutomationManager: com.android.server.accessibility.AbstractAccessibilityServiceConnection$SystemSupport mSystemSupport> = r3;

        r35 = new com.android.server.accessibility.UiAutomationManager$UiAutomationService;

        r7 = r0.<com.android.server.accessibility.UiAutomationManager: java.lang.Object mLock>;

     label05:
        specialinvoke r35.<com.android.server.accessibility.UiAutomationManager$UiAutomationService: void <init>(com.android.server.accessibility.UiAutomationManager,android.content.Context,android.accessibilityservice.AccessibilityServiceInfo,int,android.os.Handler,java.lang.Object,com.android.server.accessibility.AccessibilitySecurityPolicy,com.android.server.accessibility.AbstractAccessibilityServiceConnection$SystemSupport,com.android.server.wm.WindowManagerInternal,com.android.server.accessibility.SystemActionPerformer,com.android.server.accessibility.AccessibilityWindowManager)>(r0, r31, r32, i0, r1, r7, r2, r3, r4, r5, r6);

        r0.<com.android.server.accessibility.UiAutomationManager: com.android.server.accessibility.UiAutomationManager$UiAutomationService mUiAutomationService> = r35;

        r0.<com.android.server.accessibility.UiAutomationManager: android.os.IBinder mUiAutomationServiceOwner> = r29;

     label06:
        r0.<com.android.server.accessibility.UiAutomationManager: int mUiAutomationFlags> = i1;

        r0.<com.android.server.accessibility.UiAutomationManager: android.accessibilityservice.AccessibilityServiceInfo mUiAutomationServiceInfo> = r32;

     label07:
        r36 = r33;

     label08:
        r35.<com.android.server.accessibility.UiAutomationManager$UiAutomationService: android.accessibilityservice.IAccessibilityServiceClient mServiceInterface> = r30;

     label09:
        r36 = r33;

     label10:
        $r14 = r0.<com.android.server.accessibility.UiAutomationManager: com.android.server.accessibility.UiAutomationManager$UiAutomationService mUiAutomationService>;

        virtualinvoke $r14.<com.android.server.accessibility.UiAutomationManager$UiAutomationService: void onAdded()>();

     label11:
        r36 = r33;

     label12:
        $r15 = r0.<com.android.server.accessibility.UiAutomationManager: com.android.server.accessibility.UiAutomationManager$UiAutomationService mUiAutomationService>;

        $r16 = $r15.<com.android.server.accessibility.UiAutomationManager$UiAutomationService: android.accessibilityservice.IAccessibilityServiceClient mServiceInterface>;

        $r17 = interfaceinvoke $r16.<android.accessibilityservice.IAccessibilityServiceClient: android.os.IBinder asBinder()>();

        $r18 = r0.<com.android.server.accessibility.UiAutomationManager: com.android.server.accessibility.UiAutomationManager$UiAutomationService mUiAutomationService>;

        interfaceinvoke $r17.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>($r18, 0);

     label13:
        r36 = r33;

     label14:
        $r19 = r0.<com.android.server.accessibility.UiAutomationManager: com.android.server.accessibility.UiAutomationManager$UiAutomationService mUiAutomationService>;

        virtualinvoke $r19.<com.android.server.accessibility.UiAutomationManager$UiAutomationService: void connectServiceUnknownThread()>();

     label15:
        r36 = r33;

     label16:
        exitmonitor r33;

     label17:
        return;

     label18:
        $r24 := @caughtexception;

        r36 = r33;

     label19:
        r38 = new java.lang.StringBuilder;

     label20:
        r36 = r33;

     label21:
        specialinvoke r38.<java.lang.StringBuilder: void <init>()>();

     label22:
        r36 = r33;

     label23:
        virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed registering death link: ");

     label24:
        r36 = r33;

     label25:
        virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r24);

     label26:
        r36 = r33;

     label27:
        $r27 = virtualinvoke r38.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("UiAutomationManager", $r27);

     label28:
        r36 = r33;

     label29:
        specialinvoke r0.<com.android.server.accessibility.UiAutomationManager: void destroyUiAutomationService()>();

     label30:
        r36 = r33;

     label31:
        exitmonitor r33;

     label32:
        return;

     label33:
        $r23 := @caughtexception;

        r39 = $r23;

        goto label57;

     label34:
        $r22 := @caughtexception;

        r39 = $r22;

        goto label57;

     label35:
        $r28 := @caughtexception;

        r36 = r33;

     label36:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("UiAutomationManager", "Couldn\'t register for the death of a UiTestAutomationService!", $r28);

     label37:
        r36 = r33;

     label38:
        exitmonitor r33;

     label39:
        return;

     label40:
        r36 = r33;

     label41:
        r41 = new java.lang.IllegalStateException;

     label42:
        r36 = r33;

     label43:
        r42 = new java.lang.StringBuilder;

     label44:
        r36 = r33;

     label45:
        specialinvoke r42.<java.lang.StringBuilder: void <init>()>();

     label46:
        r36 = r33;

     label47:
        virtualinvoke r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("UiAutomationService ");

     label48:
        r36 = r33;

     label49:
        virtualinvoke r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r30);

     label50:
        r36 = r33;

     label51:
        virtualinvoke r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("already registered!");

     label52:
        r36 = r33;

     label53:
        $r12 = virtualinvoke r42.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r41.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r12);

     label54:
        r36 = r33;

     label55:
        throw r41;

     label56:
        $r20 := @caughtexception;

        r39 = $r20;

     label57:
        r36 = r33;

     label58:
        exitmonitor r33;

     label59:
        throw r39;

     label60:
        $r21 := @caughtexception;

        r39 = $r21;

        r33 = r36;

        goto label57;

        catch java.lang.Throwable from label01 to label02 with label56;
        catch android.os.RemoteException from label03 to label04 with label35;
        catch java.lang.Throwable from label03 to label04 with label56;
        catch java.lang.Throwable from label04 to label05 with label56;
        catch java.lang.Throwable from label05 to label06 with label34;
        catch java.lang.Throwable from label06 to label07 with label33;
        catch java.lang.Throwable from label08 to label09 with label60;
        catch java.lang.Throwable from label10 to label11 with label60;
        catch android.os.RemoteException from label12 to label13 with label18;
        catch java.lang.Throwable from label12 to label13 with label60;
        catch java.lang.Throwable from label14 to label15 with label60;
        catch java.lang.Throwable from label16 to label17 with label60;
        catch java.lang.Throwable from label19 to label20 with label60;
        catch java.lang.Throwable from label21 to label22 with label60;
        catch java.lang.Throwable from label23 to label24 with label60;
        catch java.lang.Throwable from label25 to label26 with label60;
        catch java.lang.Throwable from label27 to label28 with label60;
        catch java.lang.Throwable from label29 to label30 with label60;
        catch java.lang.Throwable from label31 to label32 with label60;
        catch java.lang.Throwable from label36 to label37 with label60;
        catch java.lang.Throwable from label38 to label39 with label60;
        catch java.lang.Throwable from label41 to label42 with label60;
        catch java.lang.Throwable from label43 to label44 with label60;
        catch java.lang.Throwable from label45 to label46 with label60;
        catch java.lang.Throwable from label47 to label48 with label60;
        catch java.lang.Throwable from label49 to label50 with label60;
        catch java.lang.Throwable from label51 to label52 with label60;
        catch java.lang.Throwable from label53 to label54 with label60;
        catch java.lang.Throwable from label55 to label56 with label60;
        catch java.lang.Throwable from label58 to label59 with label60;
    }

    void sendAccessibilityEventLocked(android.view.accessibility.AccessibilityEvent)
    {
        com.android.server.accessibility.UiAutomationManager r0;
        android.view.accessibility.AccessibilityEvent r1;
        com.android.server.accessibility.UiAutomationManager$UiAutomationService r2;

        r0 := @this: com.android.server.accessibility.UiAutomationManager;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        r2 = r0.<com.android.server.accessibility.UiAutomationManager: com.android.server.accessibility.UiAutomationManager$UiAutomationService mUiAutomationService>;

        if r2 == null goto label1;

        virtualinvoke r2.<com.android.server.accessibility.UiAutomationManager$UiAutomationService: void notifyAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>(r1);

     label1:
        return;
    }

    boolean suppressingAccessibilityServicesLocked()
    {
        com.android.server.accessibility.UiAutomationManager r0;
        com.android.server.accessibility.UiAutomationManager$UiAutomationService r1;
        int $i0, $i1;
        boolean z0;

        r0 := @this: com.android.server.accessibility.UiAutomationManager;

        r1 = r0.<com.android.server.accessibility.UiAutomationManager: com.android.server.accessibility.UiAutomationManager$UiAutomationService mUiAutomationService>;

        z0 = 1;

        if r1 == null goto label1;

        $i0 = r0.<com.android.server.accessibility.UiAutomationManager: int mUiAutomationFlags>;

        $i1 = $i0 & 1;

        if $i1 != 0 goto label1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    void unregisterUiTestAutomationServiceLocked(android.accessibilityservice.IAccessibilityServiceClient)
    {
        com.android.server.accessibility.UiAutomationManager r0;
        java.lang.Object r1;
        java.lang.IllegalStateException r2;
        java.lang.StringBuilder r3;
        com.android.server.accessibility.UiAutomationManager$UiAutomationService $r4, $r8, $r11;
        android.accessibilityservice.IAccessibilityServiceClient $r9, $r12, r15;
        android.os.IBinder $r10, $r13;
        java.lang.Throwable $r14;
        java.lang.String $r16;

        r0 := @this: com.android.server.accessibility.UiAutomationManager;

        r15 := @parameter0: android.accessibilityservice.IAccessibilityServiceClient;

        r1 = r0.<com.android.server.accessibility.UiAutomationManager: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r4 = r0.<com.android.server.accessibility.UiAutomationManager: com.android.server.accessibility.UiAutomationManager$UiAutomationService mUiAutomationService>;

        if $r4 == null goto label5;

     label2:
        if r15 == null goto label5;

     label3:
        $r8 = r0.<com.android.server.accessibility.UiAutomationManager: com.android.server.accessibility.UiAutomationManager$UiAutomationService mUiAutomationService>;

        $r9 = $r8.<com.android.server.accessibility.UiAutomationManager$UiAutomationService: android.accessibilityservice.IAccessibilityServiceClient mServiceInterface>;

        if $r9 == null goto label5;

        $r10 = interfaceinvoke r15.<android.accessibilityservice.IAccessibilityServiceClient: android.os.IBinder asBinder()>();

        $r11 = r0.<com.android.server.accessibility.UiAutomationManager: com.android.server.accessibility.UiAutomationManager$UiAutomationService mUiAutomationService>;

        $r12 = $r11.<com.android.server.accessibility.UiAutomationManager$UiAutomationService: android.accessibilityservice.IAccessibilityServiceClient mServiceInterface>;

        $r13 = interfaceinvoke $r12.<android.accessibilityservice.IAccessibilityServiceClient: android.os.IBinder asBinder()>();

        if $r10 != $r13 goto label5;

        specialinvoke r0.<com.android.server.accessibility.UiAutomationManager: void destroyUiAutomationService()>();

        exitmonitor r1;

     label4:
        return;

     label5:
        r2 = new java.lang.IllegalStateException;

        r3 = new java.lang.StringBuilder;

        specialinvoke r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("UiAutomationService ");

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r15);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not registered!");

        $r16 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r16);

        throw r2;

     label6:
        $r14 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r14;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label5 to label6 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }
}
