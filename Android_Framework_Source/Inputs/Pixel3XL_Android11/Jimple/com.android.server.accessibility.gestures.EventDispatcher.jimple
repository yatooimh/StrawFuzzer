class com.android.server.accessibility.gestures.EventDispatcher extends java.lang.Object
{
    private static final int CLICK_LOCATION_ACCESSIBILITY_FOCUS;
    private static final int CLICK_LOCATION_LAST_TOUCH_EXPLORED;
    private static final int CLICK_LOCATION_NONE;
    private static final java.lang.String LOG_TAG;
    private final com.android.server.accessibility.AccessibilityManagerService mAms;
    private android.content.Context mContext;
    private int mLongPressingPointerDeltaX;
    private int mLongPressingPointerDeltaY;
    private int mLongPressingPointerId;
    private com.android.server.accessibility.EventStreamTransformation mReceiver;
    private com.android.server.accessibility.gestures.TouchState mState;
    private final android.graphics.Point mTempPoint;

    void <init>(android.content.Context, com.android.server.accessibility.AccessibilityManagerService, com.android.server.accessibility.EventStreamTransformation, com.android.server.accessibility.gestures.TouchState)
    {
        com.android.server.accessibility.gestures.EventDispatcher r0;
        android.content.Context r1;
        com.android.server.accessibility.AccessibilityManagerService r2;
        com.android.server.accessibility.EventStreamTransformation r3;
        com.android.server.accessibility.gestures.TouchState r4;
        android.graphics.Point $r5;

        r0 := @this: com.android.server.accessibility.gestures.EventDispatcher;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.server.accessibility.AccessibilityManagerService;

        r3 := @parameter2: com.android.server.accessibility.EventStreamTransformation;

        r4 := @parameter3: com.android.server.accessibility.gestures.TouchState;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.accessibility.gestures.EventDispatcher: int mLongPressingPointerId> = -1;

        $r5 = new android.graphics.Point;

        specialinvoke $r5.<android.graphics.Point: void <init>()>();

        r0.<com.android.server.accessibility.gestures.EventDispatcher: android.graphics.Point mTempPoint> = $r5;

        r0.<com.android.server.accessibility.gestures.EventDispatcher: android.content.Context mContext> = r1;

        r0.<com.android.server.accessibility.gestures.EventDispatcher: com.android.server.accessibility.AccessibilityManagerService mAms> = r2;

        r0.<com.android.server.accessibility.gestures.EventDispatcher: com.android.server.accessibility.EventStreamTransformation mReceiver> = r3;

        r0.<com.android.server.accessibility.gestures.EventDispatcher: com.android.server.accessibility.gestures.TouchState mState> = r4;

        return;
    }

    private int computeClickLocation(android.graphics.Point)
    {
        com.android.server.accessibility.gestures.EventDispatcher r0;
        android.graphics.Point r1;
        int i0, $i1, $i2, $i3, $i4;
        com.android.server.accessibility.gestures.TouchState $r2, $r5, $r7, $r9, $r13;
        android.view.MotionEvent $r3, $r6, $r8, $r10;
        com.android.server.accessibility.AccessibilityManagerService $r4, $r11, $r12, $r14;
        boolean $z0, $z1, $z2;
        float $f0, $f1;

        r0 := @this: com.android.server.accessibility.gestures.EventDispatcher;

        r1 := @parameter0: android.graphics.Point;

        $r2 = r0.<com.android.server.accessibility.gestures.EventDispatcher: com.android.server.accessibility.gestures.TouchState mState>;

        $r3 = virtualinvoke $r2.<com.android.server.accessibility.gestures.TouchState: android.view.MotionEvent getLastInjectedHoverEventForClick()>();

        if $r3 == null goto label3;

        $r5 = r0.<com.android.server.accessibility.gestures.EventDispatcher: com.android.server.accessibility.gestures.TouchState mState>;

        $r6 = virtualinvoke $r5.<com.android.server.accessibility.gestures.TouchState: android.view.MotionEvent getLastInjectedHoverEventForClick()>();

        i0 = virtualinvoke $r6.<android.view.MotionEvent: int getActionIndex()>();

        $r7 = r0.<com.android.server.accessibility.gestures.EventDispatcher: com.android.server.accessibility.gestures.TouchState mState>;

        $r8 = virtualinvoke $r7.<com.android.server.accessibility.gestures.TouchState: android.view.MotionEvent getLastInjectedHoverEventForClick()>();

        $f0 = virtualinvoke $r8.<android.view.MotionEvent: float getX(int)>(i0);

        $i1 = (int) $f0;

        r1.<android.graphics.Point: int x> = $i1;

        $r9 = r0.<com.android.server.accessibility.gestures.EventDispatcher: com.android.server.accessibility.gestures.TouchState mState>;

        $r10 = virtualinvoke $r9.<com.android.server.accessibility.gestures.TouchState: android.view.MotionEvent getLastInjectedHoverEventForClick()>();

        $f1 = virtualinvoke $r10.<android.view.MotionEvent: float getY(int)>(i0);

        $i2 = (int) $f1;

        r1.<android.graphics.Point: int y> = $i2;

        $r11 = r0.<com.android.server.accessibility.gestures.EventDispatcher: com.android.server.accessibility.AccessibilityManagerService mAms>;

        $z1 = virtualinvoke $r11.<com.android.server.accessibility.AccessibilityManagerService: boolean accessibilityFocusOnlyInActiveWindow()>();

        if $z1 == 0 goto label1;

        $r13 = r0.<com.android.server.accessibility.gestures.EventDispatcher: com.android.server.accessibility.gestures.TouchState mState>;

        $i3 = virtualinvoke $r13.<com.android.server.accessibility.gestures.TouchState: int getLastTouchedWindowId()>();

        $r14 = r0.<com.android.server.accessibility.gestures.EventDispatcher: com.android.server.accessibility.AccessibilityManagerService mAms>;

        $i4 = virtualinvoke $r14.<com.android.server.accessibility.AccessibilityManagerService: int getActiveWindowId()>();

        if $i3 != $i4 goto label3;

     label1:
        $r12 = r0.<com.android.server.accessibility.gestures.EventDispatcher: com.android.server.accessibility.AccessibilityManagerService mAms>;

        $z2 = virtualinvoke $r12.<com.android.server.accessibility.AccessibilityManagerService: boolean getAccessibilityFocusClickPointInScreen(android.graphics.Point)>(r1);

        if $z2 == 0 goto label2;

        return 1;

     label2:
        return 2;

     label3:
        $r4 = r0.<com.android.server.accessibility.gestures.EventDispatcher: com.android.server.accessibility.AccessibilityManagerService mAms>;

        $z0 = virtualinvoke $r4.<com.android.server.accessibility.AccessibilityManagerService: boolean getAccessibilityFocusClickPointInScreen(android.graphics.Point)>(r1);

        if $z0 == 0 goto label4;

        return 1;

     label4:
        return 0;
    }

    private int computeInjectionAction(int, int)
    {
        com.android.server.accessibility.gestures.EventDispatcher r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;
        com.android.server.accessibility.gestures.TouchState $r1, $r2;

        r0 := @this: com.android.server.accessibility.gestures.EventDispatcher;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 == 0 goto label3;

        if i0 == 5 goto label3;

        if i0 == 6 goto label1;

        return i0;

     label1:
        $r2 = r0.<com.android.server.accessibility.gestures.EventDispatcher: com.android.server.accessibility.gestures.TouchState mState>;

        $i5 = virtualinvoke $r2.<com.android.server.accessibility.gestures.TouchState: int getInjectedPointerDownCount()>();

        if $i5 != 1 goto label2;

        return 1;

     label2:
        $i6 = i1 << 8;

        $i7 = 6 | $i6;

        return $i7;

     label3:
        $r1 = r0.<com.android.server.accessibility.gestures.EventDispatcher: com.android.server.accessibility.gestures.TouchState mState>;

        $i2 = virtualinvoke $r1.<com.android.server.accessibility.gestures.TouchState: int getInjectedPointerDownCount()>();

        if $i2 != 0 goto label4;

        return 0;

     label4:
        $i3 = i1 << 8;

        $i4 = 5 | $i3;

        return $i4;
    }

    private android.view.MotionEvent offsetEvent(android.view.MotionEvent, int, int)
    {
        com.android.server.accessibility.gestures.EventDispatcher r0;
        android.view.MotionEvent r1, $r4;
        int i0, i1, i2, i3, $i4, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16;
        android.view.MotionEvent$PointerProperties[] r2;
        android.view.MotionEvent$PointerCoords[] r3;
        long $l5, $l6;
        android.view.MotionEvent$PointerProperties $r5;
        android.view.MotionEvent$PointerCoords $r6, r7, r8;
        float $f0, $f1, $f2, $f3, $f4, $f5;

        r0 := @this: com.android.server.accessibility.gestures.EventDispatcher;

        r1 := @parameter0: android.view.MotionEvent;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if i0 != 0 goto label1;

        if i1 != 0 goto label1;

        return r1;

     label1:
        $i4 = r0.<com.android.server.accessibility.gestures.EventDispatcher: int mLongPressingPointerId>;

        i2 = virtualinvoke r1.<android.view.MotionEvent: int findPointerIndex(int)>($i4);

        i3 = virtualinvoke r1.<android.view.MotionEvent: int getPointerCount()>();

        r2 = staticinvoke <android.view.MotionEvent$PointerProperties: android.view.MotionEvent$PointerProperties[] createArray(int)>(i3);

        r3 = staticinvoke <android.view.MotionEvent$PointerCoords: android.view.MotionEvent$PointerCoords[] createArray(int)>(i3);

        i16 = 0;

     label2:
        if i16 >= i3 goto label4;

        $r5 = r2[i16];

        virtualinvoke r1.<android.view.MotionEvent: void getPointerProperties(int,android.view.MotionEvent$PointerProperties)>(i16, $r5);

        $r6 = r3[i16];

        virtualinvoke r1.<android.view.MotionEvent: void getPointerCoords(int,android.view.MotionEvent$PointerCoords)>(i16, $r6);

        if i16 != i2 goto label3;

        r7 = r3[i16];

        $f1 = r7.<android.view.MotionEvent$PointerCoords: float x>;

        $f0 = (float) i0;

        $f2 = $f1 + $f0;

        r7.<android.view.MotionEvent$PointerCoords: float x> = $f2;

        r8 = r3[i16];

        $f4 = r8.<android.view.MotionEvent$PointerCoords: float y>;

        $f3 = (float) i1;

        $f5 = $f4 + $f3;

        r8.<android.view.MotionEvent$PointerCoords: float y> = $f5;

     label3:
        i16 = i16 + 1;

        goto label2;

     label4:
        $l5 = virtualinvoke r1.<android.view.MotionEvent: long getDownTime()>();

        $l6 = virtualinvoke r1.<android.view.MotionEvent: long getEventTime()>();

        $i7 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();

        $i8 = virtualinvoke r1.<android.view.MotionEvent: int getPointerCount()>();

        $i9 = virtualinvoke r1.<android.view.MotionEvent: int getMetaState()>();

        $i10 = virtualinvoke r1.<android.view.MotionEvent: int getButtonState()>();

        $i11 = virtualinvoke r1.<android.view.MotionEvent: int getDeviceId()>();

        $i12 = virtualinvoke r1.<android.view.MotionEvent: int getEdgeFlags()>();

        $i13 = virtualinvoke r1.<android.view.MotionEvent: int getSource()>();

        $i14 = virtualinvoke r1.<android.view.MotionEvent: int getDisplayId()>();

        $i15 = virtualinvoke r1.<android.view.MotionEvent: int getFlags()>();

        $r4 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,int,android.view.MotionEvent$PointerProperties[],android.view.MotionEvent$PointerCoords[],int,int,float,float,int,int,int,int,int)>($l5, $l6, $i7, $i8, r2, r3, $i9, $i10, 1.0F, 1.0F, $i11, $i12, $i13, $i14, $i15);

        return $r4;
    }

    private void sendActionDownAndUp(android.view.MotionEvent, android.view.MotionEvent, int, boolean)
    {
        com.android.server.accessibility.gestures.EventDispatcher r0;
        android.view.MotionEvent r1, r2;
        int i0, i1, $i2, $i3;
        boolean z0;

        r0 := @this: com.android.server.accessibility.gestures.EventDispatcher;

        r1 := @parameter0: android.view.MotionEvent;

        r2 := @parameter1: android.view.MotionEvent;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        $i2 = virtualinvoke r1.<android.view.MotionEvent: int getActionIndex()>();

        $i3 = virtualinvoke r1.<android.view.MotionEvent: int getPointerId(int)>($i2);

        i1 = 1 << $i3;

        virtualinvoke r1.<android.view.MotionEvent: void setTargetAccessibilityFocus(boolean)>(z0);

        virtualinvoke r0.<com.android.server.accessibility.gestures.EventDispatcher: void sendMotionEvent(android.view.MotionEvent,int,android.view.MotionEvent,int,int)>(r1, 0, r2, i1, i0);

        virtualinvoke r1.<android.view.MotionEvent: void setTargetAccessibilityFocus(boolean)>(z0);

        virtualinvoke r0.<com.android.server.accessibility.gestures.EventDispatcher: void sendMotionEvent(android.view.MotionEvent,int,android.view.MotionEvent,int,int)>(r1, 1, r2, i1, i0);

        return;
    }

    void clear()
    {
        com.android.server.accessibility.gestures.EventDispatcher r0;

        r0 := @this: com.android.server.accessibility.gestures.EventDispatcher;

        r0.<com.android.server.accessibility.gestures.EventDispatcher: int mLongPressingPointerId> = -1;

        r0.<com.android.server.accessibility.gestures.EventDispatcher: int mLongPressingPointerDeltaX> = 0;

        r0.<com.android.server.accessibility.gestures.EventDispatcher: int mLongPressingPointerDeltaY> = 0;

        return;
    }

    public void clickWithTouchEvents(android.view.MotionEvent, android.view.MotionEvent, int)
    {
        com.android.server.accessibility.gestures.EventDispatcher r0;
        android.view.MotionEvent r1, r10, r11;
        int i0, i1, i2, $i4, $i5, $i8, $i9, $i10, $i11;
        android.graphics.Point r2;
        android.view.MotionEvent$PointerProperties[] r3;
        android.view.MotionEvent$PointerCoords[] r4;
        android.view.MotionEvent$PointerProperties $r5, $r6;
        android.view.MotionEvent$PointerCoords $r7, $r8, $r9;
        float $f0, $f1;
        long $l6, $l7;
        boolean z0;

        r0 := @this: com.android.server.accessibility.gestures.EventDispatcher;

        r10 := @parameter0: android.view.MotionEvent;

        r1 := @parameter1: android.view.MotionEvent;

        i0 := @parameter2: int;

        i1 = virtualinvoke r10.<android.view.MotionEvent: int getActionIndex()>();

        virtualinvoke r10.<android.view.MotionEvent: int getPointerId(int)>(i1);

        r2 = r0.<com.android.server.accessibility.gestures.EventDispatcher: android.graphics.Point mTempPoint>;

        i2 = specialinvoke r0.<com.android.server.accessibility.gestures.EventDispatcher: int computeClickLocation(android.graphics.Point)>(r2);

        if i2 != 0 goto label1;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("EventDispatcher", "Unable to compute click location.");

        return;

     label1:
        z0 = 1;

        r3 = newarray (android.view.MotionEvent$PointerProperties)[1];

        $r5 = new android.view.MotionEvent$PointerProperties;

        specialinvoke $r5.<android.view.MotionEvent$PointerProperties: void <init>()>();

        r3[0] = $r5;

        $r6 = r3[0];

        virtualinvoke r10.<android.view.MotionEvent: void getPointerProperties(int,android.view.MotionEvent$PointerProperties)>(i1, $r6);

        r4 = newarray (android.view.MotionEvent$PointerCoords)[1];

        $r7 = new android.view.MotionEvent$PointerCoords;

        specialinvoke $r7.<android.view.MotionEvent$PointerCoords: void <init>()>();

        r4[0] = $r7;

        $r8 = r4[0];

        $i4 = r2.<android.graphics.Point: int x>;

        $f0 = (float) $i4;

        $r8.<android.view.MotionEvent$PointerCoords: float x> = $f0;

        $r9 = r4[0];

        $i5 = r2.<android.graphics.Point: int y>;

        $f1 = (float) $i5;

        $r9.<android.view.MotionEvent$PointerCoords: float y> = $f1;

        $l6 = virtualinvoke r10.<android.view.MotionEvent: long getDownTime()>();

        $l7 = virtualinvoke r10.<android.view.MotionEvent: long getEventTime()>();

        $i8 = virtualinvoke r10.<android.view.MotionEvent: int getDeviceId()>();

        $i9 = virtualinvoke r10.<android.view.MotionEvent: int getSource()>();

        $i10 = virtualinvoke r10.<android.view.MotionEvent: int getDisplayId()>();

        $i11 = virtualinvoke r10.<android.view.MotionEvent: int getFlags()>();

        r11 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,int,android.view.MotionEvent$PointerProperties[],android.view.MotionEvent$PointerCoords[],int,int,float,float,int,int,int,int,int)>($l6, $l7, 0, 1, r3, r4, 0, 0, 1.0F, 1.0F, $i8, 0, $i9, $i10, $i11);

        if i2 != 1 goto label2;

        goto label3;

     label2:
        z0 = 0;

     label3:
        specialinvoke r0.<com.android.server.accessibility.gestures.EventDispatcher: void sendActionDownAndUp(android.view.MotionEvent,android.view.MotionEvent,int,boolean)>(r11, r1, i0, z0);

        virtualinvoke r11.<android.view.MotionEvent: void recycle()>();

        return;
    }

    public boolean longPressWithTouchEvents(android.view.MotionEvent, int)
    {
        com.android.server.accessibility.gestures.EventDispatcher r0;
        android.view.MotionEvent r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        android.graphics.Point r2;
        float $f0, $f1;

        r0 := @this: com.android.server.accessibility.gestures.EventDispatcher;

        r1 := @parameter0: android.view.MotionEvent;

        i0 := @parameter1: int;

        i1 = virtualinvoke r1.<android.view.MotionEvent: int getActionIndex()>();

        i2 = virtualinvoke r1.<android.view.MotionEvent: int getPointerId(int)>(i1);

        r2 = r0.<com.android.server.accessibility.gestures.EventDispatcher: android.graphics.Point mTempPoint>;

        $i3 = specialinvoke r0.<com.android.server.accessibility.gestures.EventDispatcher: int computeClickLocation(android.graphics.Point)>(r2);

        if $i3 != 0 goto label1;

        return 0;

     label1:
        r0.<com.android.server.accessibility.gestures.EventDispatcher: int mLongPressingPointerId> = i2;

        $f0 = virtualinvoke r1.<android.view.MotionEvent: float getX(int)>(i1);

        $i5 = (int) $f0;

        $i4 = r2.<android.graphics.Point: int x>;

        $i6 = $i5 - $i4;

        r0.<com.android.server.accessibility.gestures.EventDispatcher: int mLongPressingPointerDeltaX> = $i6;

        $f1 = virtualinvoke r1.<android.view.MotionEvent: float getY(int)>(i1);

        $i8 = (int) $f1;

        $i7 = r2.<android.graphics.Point: int y>;

        $i9 = $i8 - $i7;

        r0.<com.android.server.accessibility.gestures.EventDispatcher: int mLongPressingPointerDeltaY> = $i9;

        virtualinvoke r0.<com.android.server.accessibility.gestures.EventDispatcher: void sendDownForAllNotInjectedPointers(android.view.MotionEvent,int)>(r1, i0);

        return 1;
    }

    void sendAccessibilityEvent(int)
    {
        com.android.server.accessibility.gestures.EventDispatcher r0;
        int i0, $i1;
        android.view.accessibility.AccessibilityManager r1;
        android.view.accessibility.AccessibilityEvent r2;
        android.content.Context $r3;
        boolean $z0;
        com.android.server.accessibility.gestures.TouchState $r4;
        com.android.server.accessibility.AccessibilityManagerService $r5;

        r0 := @this: com.android.server.accessibility.gestures.EventDispatcher;

        i0 := @parameter0: int;

        $r3 = r0.<com.android.server.accessibility.gestures.EventDispatcher: android.content.Context mContext>;

        r1 = staticinvoke <android.view.accessibility.AccessibilityManager: android.view.accessibility.AccessibilityManager getInstance(android.content.Context)>($r3);

        $z0 = virtualinvoke r1.<android.view.accessibility.AccessibilityManager: boolean isEnabled()>();

        if $z0 == 0 goto label1;

        r2 = staticinvoke <android.view.accessibility.AccessibilityEvent: android.view.accessibility.AccessibilityEvent obtain(int)>(i0);

        $r5 = r0.<com.android.server.accessibility.gestures.EventDispatcher: com.android.server.accessibility.AccessibilityManagerService mAms>;

        $i1 = virtualinvoke $r5.<com.android.server.accessibility.AccessibilityManagerService: int getActiveWindowId()>();

        virtualinvoke r2.<android.view.accessibility.AccessibilityEvent: void setWindowId(int)>($i1);

        virtualinvoke r1.<android.view.accessibility.AccessibilityManager: void sendAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>(r2);

     label1:
        $r4 = r0.<com.android.server.accessibility.gestures.EventDispatcher: com.android.server.accessibility.gestures.TouchState mState>;

        virtualinvoke $r4.<com.android.server.accessibility.gestures.TouchState: void onInjectedAccessibilityEvent(int)>(i0);

        return;
    }

    void sendDownForAllNotInjectedPointers(android.view.MotionEvent, int)
    {
        com.android.server.accessibility.gestures.EventDispatcher r0;
        android.view.MotionEvent r1, $r4;
        int i0, i1, i2, $i3, $i4, i5, i6, i7;
        com.android.server.accessibility.gestures.TouchState $r2, $r3;
        boolean $z0;

        r0 := @this: com.android.server.accessibility.gestures.EventDispatcher;

        r1 := @parameter0: android.view.MotionEvent;

        i0 := @parameter1: int;

        i5 = 0;

        i1 = virtualinvoke r1.<android.view.MotionEvent: int getPointerCount()>();

        i6 = 0;

     label1:
        if i6 >= i1 goto label3;

        i2 = virtualinvoke r1.<android.view.MotionEvent: int getPointerId(int)>(i6);

        i7 = i5;

        $r2 = r0.<com.android.server.accessibility.gestures.EventDispatcher: com.android.server.accessibility.gestures.TouchState mState>;

        $z0 = virtualinvoke $r2.<com.android.server.accessibility.gestures.TouchState: boolean isInjectedPointerDown(int)>(i2);

        if $z0 != 0 goto label2;

        $i3 = 1 << i2;

        i7 = i5 | $i3;

        $i4 = specialinvoke r0.<com.android.server.accessibility.gestures.EventDispatcher: int computeInjectionAction(int,int)>(0, i6);

        $r3 = r0.<com.android.server.accessibility.gestures.EventDispatcher: com.android.server.accessibility.gestures.TouchState mState>;

        $r4 = virtualinvoke $r3.<com.android.server.accessibility.gestures.TouchState: android.view.MotionEvent getLastReceivedEvent()>();

        virtualinvoke r0.<com.android.server.accessibility.gestures.EventDispatcher: void sendMotionEvent(android.view.MotionEvent,int,android.view.MotionEvent,int,int)>(r1, $i4, $r4, i7, i0);

     label2:
        i6 = i6 + 1;

        i5 = i7;

        goto label1;

     label3:
        return;
    }

    void sendMotionEvent(android.view.MotionEvent, int, android.view.MotionEvent, int, int)
    {
        com.android.server.accessibility.gestures.EventDispatcher r0;
        int i0, i1, i2, $i4, $i6, $i7, $i8, $i9, $i10;
        com.android.server.accessibility.gestures.TouchState $r1, $r2;
        long $l3, $l11;
        java.lang.Throwable $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r7;
        android.view.MotionEvent r8, r9, r10, r11;
        com.android.server.accessibility.EventStreamTransformation r12;

        r0 := @this: com.android.server.accessibility.gestures.EventDispatcher;

        r8 := @parameter0: android.view.MotionEvent;

        i0 := @parameter1: int;

        r9 := @parameter2: android.view.MotionEvent;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        virtualinvoke r8.<android.view.MotionEvent: void setAction(int)>(i0);

        if i1 != -1 goto label1;

        r10 = r8;

        goto label2;

     label1:
        r10 = virtualinvoke r8.<android.view.MotionEvent: android.view.MotionEvent split(int)>(i1);

     label2:
        if i0 != 0 goto label3;

        $l11 = virtualinvoke r10.<android.view.MotionEvent: long getEventTime()>();

        virtualinvoke r10.<android.view.MotionEvent: void setDownTime(long)>($l11);

        goto label4;

     label3:
        $r1 = r0.<com.android.server.accessibility.gestures.EventDispatcher: com.android.server.accessibility.gestures.TouchState mState>;

        $l3 = virtualinvoke $r1.<com.android.server.accessibility.gestures.TouchState: long getLastInjectedDownEventTime()>();

        virtualinvoke r10.<android.view.MotionEvent: void setDownTime(long)>($l3);

     label4:
        r11 = r10;

        $i4 = r0.<com.android.server.accessibility.gestures.EventDispatcher: int mLongPressingPointerId>;

        if $i4 < 0 goto label5;

        $i7 = r0.<com.android.server.accessibility.gestures.EventDispatcher: int mLongPressingPointerDeltaX>;

        $i10 = neg $i7;

        $i8 = r0.<com.android.server.accessibility.gestures.EventDispatcher: int mLongPressingPointerDeltaY>;

        $i9 = neg $i8;

        r11 = specialinvoke r0.<com.android.server.accessibility.gestures.EventDispatcher: android.view.MotionEvent offsetEvent(android.view.MotionEvent,int,int)>(r10, $i10, $i9);

     label5:
        r12 = r0.<com.android.server.accessibility.gestures.EventDispatcher: com.android.server.accessibility.EventStreamTransformation mReceiver>;

        if r12 == null goto label6;

        $i6 = i2 | 1073741824;

        interfaceinvoke r12.<com.android.server.accessibility.EventStreamTransformation: void onMotionEvent(android.view.MotionEvent,android.view.MotionEvent,int)>(r11, r9, $i6);

        goto label7;

     label6:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("EventDispatcher", "Error sending event: no receiver specified.");

     label7:
        $r2 = r0.<com.android.server.accessibility.gestures.EventDispatcher: com.android.server.accessibility.gestures.TouchState mState>;

        virtualinvoke $r2.<com.android.server.accessibility.gestures.TouchState: void onInjectedMotionEvent(android.view.MotionEvent)>(r11);

        if r11 == r8 goto label8;

        virtualinvoke r11.<android.view.MotionEvent: void recycle()>();

     label8:
        return;

     label9:
        $r3 := @caughtexception;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sendMotionEvent: Failed to split motion event: ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("EventDispatcher", $r7);

        return;

        catch java.lang.IllegalArgumentException from label1 to label2 with label9;
    }

    void sendUpForInjectedDownPointers(android.view.MotionEvent, int)
    {
        com.android.server.accessibility.gestures.EventDispatcher r0;
        android.view.MotionEvent r1, $r4;
        int i0, i1, i2, $i3, $i4, i5, i6;
        com.android.server.accessibility.gestures.TouchState $r2, $r3;
        boolean $z0;

        r0 := @this: com.android.server.accessibility.gestures.EventDispatcher;

        r1 := @parameter0: android.view.MotionEvent;

        i0 := @parameter1: int;

        i5 = virtualinvoke r1.<android.view.MotionEvent: int getPointerIdBits()>();

        i1 = virtualinvoke r1.<android.view.MotionEvent: int getPointerCount()>();

        i6 = 0;

     label1:
        if i6 >= i1 goto label4;

        i2 = virtualinvoke r1.<android.view.MotionEvent: int getPointerId(int)>(i6);

        $r2 = r0.<com.android.server.accessibility.gestures.EventDispatcher: com.android.server.accessibility.gestures.TouchState mState>;

        $z0 = virtualinvoke $r2.<com.android.server.accessibility.gestures.TouchState: boolean isInjectedPointerDown(int)>(i2);

        if $z0 != 0 goto label2;

        goto label3;

     label2:
        $i3 = specialinvoke r0.<com.android.server.accessibility.gestures.EventDispatcher: int computeInjectionAction(int,int)>(6, i6);

        $r3 = r0.<com.android.server.accessibility.gestures.EventDispatcher: com.android.server.accessibility.gestures.TouchState mState>;

        $r4 = virtualinvoke $r3.<com.android.server.accessibility.gestures.TouchState: android.view.MotionEvent getLastReceivedEvent()>();

        virtualinvoke r0.<com.android.server.accessibility.gestures.EventDispatcher: void sendMotionEvent(android.view.MotionEvent,int,android.view.MotionEvent,int,int)>(r1, $i3, $r4, i5, i0);

        $i4 = 1 << i2;

        i5 = i5 & $i4;

     label3:
        i6 = i6 + 1;

        goto label1;

     label4:
        return;
    }

    public void setReceiver(com.android.server.accessibility.EventStreamTransformation)
    {
        com.android.server.accessibility.gestures.EventDispatcher r0;
        com.android.server.accessibility.EventStreamTransformation r1;

        r0 := @this: com.android.server.accessibility.gestures.EventDispatcher;

        r1 := @parameter0: com.android.server.accessibility.EventStreamTransformation;

        r0.<com.android.server.accessibility.gestures.EventDispatcher: com.android.server.accessibility.EventStreamTransformation mReceiver> = r1;

        return;
    }

    public java.lang.String toString()
    {
        com.android.server.accessibility.gestures.EventDispatcher r0;
        java.lang.StringBuilder $r2;
        com.android.server.accessibility.gestures.TouchState $r5, $r11;
        int $i0, $i1, i2;
        java.lang.String $r10;
        boolean $z0;

        r0 := @this: com.android.server.accessibility.gestures.EventDispatcher;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=========================");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nDown pointers #");

        $r5 = r0.<com.android.server.accessibility.gestures.EventDispatcher: com.android.server.accessibility.gestures.TouchState mState>;

        $i0 = virtualinvoke $r5.<com.android.server.accessibility.gestures.TouchState: int getInjectedPointersDown()>();

        $i1 = staticinvoke <java.lang.Integer: int bitCount(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [ ");

        i2 = 0;

     label1:
        if i2 >= 32 goto label3;

        $r11 = r0.<com.android.server.accessibility.gestures.EventDispatcher: com.android.server.accessibility.gestures.TouchState mState>;

        $z0 = virtualinvoke $r11.<com.android.server.accessibility.gestures.TouchState: boolean isInjectedPointerDown(int)>(i2);

        if $z0 == 0 goto label2;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n=========================");

        $r10 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    public static void <clinit>()
    {
        <com.android.server.accessibility.gestures.EventDispatcher: java.lang.String LOG_TAG> = "EventDispatcher";

        <com.android.server.accessibility.gestures.EventDispatcher: int CLICK_LOCATION_NONE> = 0;

        <com.android.server.accessibility.gestures.EventDispatcher: int CLICK_LOCATION_LAST_TOUCH_EXPLORED> = 2;

        <com.android.server.accessibility.gestures.EventDispatcher: int CLICK_LOCATION_ACCESSIBILITY_FOCUS> = 1;

        return;
    }
}
