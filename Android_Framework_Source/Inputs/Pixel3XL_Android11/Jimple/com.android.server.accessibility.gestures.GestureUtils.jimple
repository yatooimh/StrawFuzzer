public final class com.android.server.accessibility.gestures.GestureUtils extends java.lang.Object
{
    public static float CM_PER_INCH;
    public static int MM_PER_CM;

    static void <clinit>()
    {
        <com.android.server.accessibility.gestures.GestureUtils: int MM_PER_CM> = 10;

        <com.android.server.accessibility.gestures.GestureUtils: float CM_PER_INCH> = 2.54F;

        return;
    }

    private void <init>()
    {
        com.android.server.accessibility.gestures.GestureUtils r0;

        r0 := @this: com.android.server.accessibility.gestures.GestureUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static double distance(android.view.MotionEvent, android.view.MotionEvent)
    {
        android.view.MotionEvent r0, r1;
        float $f0, $f1, $f2, $f3, $f4;
        double $d0;

        r0 := @parameter0: android.view.MotionEvent;

        r1 := @parameter1: android.view.MotionEvent;

        $f0 = virtualinvoke r0.<android.view.MotionEvent: float getX()>();

        $f1 = virtualinvoke r0.<android.view.MotionEvent: float getY()>();

        $f2 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        $f3 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        $f4 = staticinvoke <android.util.MathUtils: float dist(float,float,float,float)>($f0, $f1, $f2, $f3);

        $d0 = (double) $f4;

        return $d0;
    }

    public static double distanceClosestPointerToPoint(android.graphics.PointF, android.view.MotionEvent)
    {
        android.graphics.PointF r0;
        android.view.MotionEvent r1;
        float f0, $f1, $f2, $f3, $f4, f5, f6;
        int $i0, i2;
        double $d0;
        byte $b1;

        r0 := @parameter0: android.graphics.PointF;

        r1 := @parameter1: android.view.MotionEvent;

        f5 = 3.4028235E38F;

        i2 = 0;

     label1:
        $i0 = virtualinvoke r1.<android.view.MotionEvent: int getPointerCount()>();

        if i2 >= $i0 goto label3;

        $f1 = r0.<android.graphics.PointF: float x>;

        $f2 = r0.<android.graphics.PointF: float y>;

        $f3 = virtualinvoke r1.<android.view.MotionEvent: float getX(int)>(i2);

        $f4 = virtualinvoke r1.<android.view.MotionEvent: float getY(int)>(i2);

        f0 = staticinvoke <android.util.MathUtils: float dist(float,float,float,float)>($f1, $f2, $f3, $f4);

        f6 = f5;

        $b1 = f5 cmpl f0;

        if $b1 <= 0 goto label2;

        f6 = f0;

     label2:
        i2 = i2 + 1;

        f5 = f6;

        goto label1;

     label3:
        $d0 = (double) f5;

        return $d0;
    }

    private static boolean eventsWithinTimeAndDistanceSlop(android.view.MotionEvent, android.view.MotionEvent, int, int)
    {
        android.view.MotionEvent r0, r1;
        int i0, i1;
        boolean $z0;
        double $d0, $d1;
        byte $b2;

        r0 := @parameter0: android.view.MotionEvent;

        r1 := @parameter1: android.view.MotionEvent;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $z0 = staticinvoke <com.android.server.accessibility.gestures.GestureUtils: boolean isTimedOut(android.view.MotionEvent,android.view.MotionEvent,int)>(r0, r1, i0);

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $d0 = staticinvoke <com.android.server.accessibility.gestures.GestureUtils: double distance(android.view.MotionEvent,android.view.MotionEvent)>(r0, r1);

        $d1 = (double) i1;

        $b2 = $d0 cmpl $d1;

        if $b2 < 0 goto label2;

        return 0;

     label2:
        return 1;
    }

    public static int getActionIndex(android.view.MotionEvent)
    {
        android.view.MotionEvent r0;
        int $i0, $i1, $i2;

        r0 := @parameter0: android.view.MotionEvent;

        $i0 = virtualinvoke r0.<android.view.MotionEvent: int getAction()>();

        $i1 = $i0 & 65280;

        $i2 = $i1 >> 8;

        return $i2;
    }

    public static boolean isDraggingGesture(float, float, float, float, float, float, float, float, float)
    {
        float f0, f1, f2, f3, $f4, $f5, $f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17;
        byte $b0, $b1, $b2, $b3, $b4, $b5, $b6, $b7, $b8;
        double $d0, $d1, $d2, $d3, $d4, $d5;

        f7 := @parameter0: float;

        f8 := @parameter1: float;

        f9 := @parameter2: float;

        f10 := @parameter3: float;

        f11 := @parameter4: float;

        f0 := @parameter5: float;

        f1 := @parameter6: float;

        f2 := @parameter7: float;

        f3 := @parameter8: float;

        f12 = f11 - f7;

        f13 = f0 - f8;

        $b0 = f12 cmpl 0.0F;

        if $b0 != 0 goto label1;

        $b8 = f13 cmpl 0.0F;

        if $b8 != 0 goto label1;

        return 1;

     label1:
        $d1 = (double) f12;

        $d0 = (double) f13;

        $d2 = staticinvoke <java.lang.Math: double hypot(double,double)>($d1, $d0);

        f14 = (float) $d2;

        $b1 = f14 cmpl 0.0F;

        if $b1 <= 0 goto label2;

        f12 = f12 / f14;

        goto label2;

     label2:
        $b2 = f14 cmpl 0.0F;

        if $b2 <= 0 goto label3;

        f13 = f13 / f14;

        goto label3;

     label3:
        f15 = f1 - f9;

        f16 = f2 - f10;

        $b3 = f15 cmpl 0.0F;

        if $b3 != 0 goto label4;

        $b7 = f16 cmpl 0.0F;

        if $b7 != 0 goto label4;

        return 1;

     label4:
        $d4 = (double) f15;

        $d3 = (double) f16;

        $d5 = staticinvoke <java.lang.Math: double hypot(double,double)>($d4, $d3);

        f17 = (float) $d5;

        $b4 = f17 cmpl 0.0F;

        if $b4 <= 0 goto label5;

        f15 = f15 / f17;

        goto label5;

     label5:
        $b5 = f17 cmpl 0.0F;

        if $b5 <= 0 goto label6;

        f16 = f16 / f17;

        goto label6;

     label6:
        $f5 = f12 * f15;

        $f4 = f13 * f16;

        $f6 = $f5 + $f4;

        $b6 = $f6 cmpg f3;

        if $b6 >= 0 goto label7;

        return 0;

     label7:
        return 1;
    }

    public static boolean isMultiTap(android.view.MotionEvent, android.view.MotionEvent, int, int)
    {
        android.view.MotionEvent r0, r1;
        int i0, i1;
        boolean $z0;

        r0 := @parameter0: android.view.MotionEvent;

        r1 := @parameter1: android.view.MotionEvent;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        if r0 == null goto label2;

        if r1 != null goto label1;

        goto label2;

     label1:
        $z0 = staticinvoke <com.android.server.accessibility.gestures.GestureUtils: boolean eventsWithinTimeAndDistanceSlop(android.view.MotionEvent,android.view.MotionEvent,int,int)>(r0, r1, i0, i1);

        return $z0;

     label2:
        return 0;
    }

    public static boolean isTimedOut(android.view.MotionEvent, android.view.MotionEvent, int)
    {
        android.view.MotionEvent r0, r1;
        int i0;
        long $l1, $l2, $l3, $l4;
        byte $b5;
        boolean z0;

        r0 := @parameter0: android.view.MotionEvent;

        r1 := @parameter1: android.view.MotionEvent;

        i0 := @parameter2: int;

        $l1 = virtualinvoke r1.<android.view.MotionEvent: long getEventTime()>();

        $l2 = virtualinvoke r0.<android.view.MotionEvent: long getEventTime()>();

        $l4 = $l1 - $l2;

        $l3 = (long) i0;

        $b5 = $l4 cmp $l3;

        if $b5 < 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }
}
