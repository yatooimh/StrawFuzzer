class com.android.server.accessibility.gestures.MultiFingerMultiTapAndHold extends com.android.server.accessibility.gestures.MultiFingerMultiTap
{

    void <init>(android.content.Context, int, int, int, com.android.server.accessibility.gestures.GestureMatcher$StateChangeListener)
    {
        com.android.server.accessibility.gestures.MultiFingerMultiTapAndHold r0;
        android.content.Context r1;
        int i0, i1, i2;
        com.android.server.accessibility.gestures.GestureMatcher$StateChangeListener r2;

        r0 := @this: com.android.server.accessibility.gestures.MultiFingerMultiTapAndHold;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r2 := @parameter4: com.android.server.accessibility.gestures.GestureMatcher$StateChangeListener;

        specialinvoke r0.<com.android.server.accessibility.gestures.MultiFingerMultiTap: void <init>(android.content.Context,int,int,int,com.android.server.accessibility.gestures.GestureMatcher$StateChangeListener)>(r1, i0, i1, i2, r2);

        return;
    }

    public java.lang.String getGestureName()
    {
        com.android.server.accessibility.gestures.MultiFingerMultiTapAndHold r0;
        java.lang.StringBuilder $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.String $r10;

        r0 := @this: com.android.server.accessibility.gestures.MultiFingerMultiTapAndHold;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $i0 = r0.<com.android.server.accessibility.gestures.MultiFingerMultiTapAndHold: int mTargetFingerCount>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-Finger ");

        $i1 = r0.<com.android.server.accessibility.gestures.MultiFingerMultiTapAndHold: int mTargetTapCount>;

        if $i1 != 1 goto label1;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Single");

        goto label4;

     label1:
        $i2 = r0.<com.android.server.accessibility.gestures.MultiFingerMultiTapAndHold: int mTargetTapCount>;

        if $i2 != 2 goto label2;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Double");

        goto label4;

     label2:
        $i3 = r0.<com.android.server.accessibility.gestures.MultiFingerMultiTapAndHold: int mTargetTapCount>;

        if $i3 != 3 goto label3;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Triple");

        goto label4;

     label3:
        $i4 = r0.<com.android.server.accessibility.gestures.MultiFingerMultiTapAndHold: int mTargetTapCount>;

        if $i4 <= 3 goto label4;

        $i5 = r0.<com.android.server.accessibility.gestures.MultiFingerMultiTapAndHold: int mTargetTapCount>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

     label4:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Tap and hold");

        $r10 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    protected void onPointerDown(android.view.MotionEvent, android.view.MotionEvent, int)
    {
        com.android.server.accessibility.gestures.MultiFingerMultiTapAndHold r0;
        android.view.MotionEvent r1, r2;
        int i0, $i1, $i2, $i3;
        boolean $z0;

        r0 := @this: com.android.server.accessibility.gestures.MultiFingerMultiTapAndHold;

        r1 := @parameter0: android.view.MotionEvent;

        r2 := @parameter1: android.view.MotionEvent;

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.server.accessibility.gestures.MultiFingerMultiTap: void onPointerDown(android.view.MotionEvent,android.view.MotionEvent,int)>(r1, r2, i0);

        $z0 = r0.<com.android.server.accessibility.gestures.MultiFingerMultiTapAndHold: boolean mIsTargetFingerCountReached>;

        if $z0 == 0 goto label1;

        $i1 = r0.<com.android.server.accessibility.gestures.MultiFingerMultiTapAndHold: int mCompletedTapCount>;

        $i3 = $i1 + 1;

        $i2 = r0.<com.android.server.accessibility.gestures.MultiFingerMultiTapAndHold: int mTargetTapCount>;

        if $i3 != $i2 goto label1;

        virtualinvoke r0.<com.android.server.accessibility.gestures.MultiFingerMultiTapAndHold: void completeAfterLongPressTimeout(android.view.MotionEvent,android.view.MotionEvent,int)>(r1, r2, i0);

     label1:
        return;
    }

    protected void onUp(android.view.MotionEvent, android.view.MotionEvent, int)
    {
        com.android.server.accessibility.gestures.MultiFingerMultiTapAndHold r0;
        android.view.MotionEvent r1, r2;
        int i0, $i1, $i2, $i3;

        r0 := @this: com.android.server.accessibility.gestures.MultiFingerMultiTapAndHold;

        r1 := @parameter0: android.view.MotionEvent;

        r2 := @parameter1: android.view.MotionEvent;

        i0 := @parameter2: int;

        $i1 = r0.<com.android.server.accessibility.gestures.MultiFingerMultiTapAndHold: int mCompletedTapCount>;

        $i3 = $i1 + 1;

        $i2 = r0.<com.android.server.accessibility.gestures.MultiFingerMultiTapAndHold: int mTargetFingerCount>;

        if $i3 != $i2 goto label1;

        virtualinvoke r0.<com.android.server.accessibility.gestures.MultiFingerMultiTapAndHold: void cancelGesture(android.view.MotionEvent,android.view.MotionEvent,int)>(r1, r2, i0);

        goto label2;

     label1:
        specialinvoke r0.<com.android.server.accessibility.gestures.MultiFingerMultiTap: void onUp(android.view.MotionEvent,android.view.MotionEvent,int)>(r1, r2, i0);

        virtualinvoke r0.<com.android.server.accessibility.gestures.MultiFingerMultiTapAndHold: void cancelAfterDoubleTapTimeout(android.view.MotionEvent,android.view.MotionEvent,int)>(r1, r2, i0);

     label2:
        return;
    }
}
