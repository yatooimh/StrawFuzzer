class com.android.server.accessibility.gestures.Swipe extends com.android.server.accessibility.gestures.GestureMatcher
{
    private static final float ANGLE_THRESHOLD;
    public static final int DOWN;
    public static final int GESTURE_CONFIRM_CM;
    public static final int LEFT;
    public static final long MAX_TIME_TO_CONTINUE_SWIPE_MS;
    public static final long MAX_TIME_TO_START_SWIPE_MS;
    private static final float MIN_CM_BETWEEN_SAMPLES;
    public static final int RIGHT;
    public static final int UP;
    private long mBaseTime;
    private float mBaseX;
    private float mBaseY;
    private int[] mDirections;
    private final float mGestureDetectionThresholdPixels;
    private final float mMinPixelsBetweenSamplesX;
    private final float mMinPixelsBetweenSamplesY;
    private float mPreviousGestureX;
    private float mPreviousGestureY;
    private final java.util.ArrayList mStrokeBuffer;
    private int mTouchSlop;

    void <init>(android.content.Context, int, int, int, com.android.server.accessibility.gestures.GestureMatcher$StateChangeListener)
    {
        com.android.server.accessibility.gestures.Swipe r0;
        android.content.Context r1;
        int i0, i1, i2;
        com.android.server.accessibility.gestures.GestureMatcher$StateChangeListener r2;
        int[] $r3;

        r0 := @this: com.android.server.accessibility.gestures.Swipe;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r2 := @parameter4: com.android.server.accessibility.gestures.GestureMatcher$StateChangeListener;

        $r3 = newarray (int)[2];

        $r3[0] = i0;

        $r3[1] = i1;

        specialinvoke r0.<com.android.server.accessibility.gestures.Swipe: void <init>(android.content.Context,int[],int,com.android.server.accessibility.gestures.GestureMatcher$StateChangeListener)>(r1, $r3, i2, r2);

        return;
    }

    void <init>(android.content.Context, int, int, com.android.server.accessibility.gestures.GestureMatcher$StateChangeListener)
    {
        com.android.server.accessibility.gestures.Swipe r0;
        android.content.Context r1;
        int i0, i1;
        com.android.server.accessibility.gestures.GestureMatcher$StateChangeListener r2;
        int[] $r3;

        r0 := @this: com.android.server.accessibility.gestures.Swipe;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: com.android.server.accessibility.gestures.GestureMatcher$StateChangeListener;

        $r3 = newarray (int)[1];

        $r3[0] = i0;

        specialinvoke r0.<com.android.server.accessibility.gestures.Swipe: void <init>(android.content.Context,int[],int,com.android.server.accessibility.gestures.GestureMatcher$StateChangeListener)>(r1, $r3, i1, r2);

        return;
    }

    private void <init>(android.content.Context, int[], int, com.android.server.accessibility.gestures.GestureMatcher$StateChangeListener)
    {
        com.android.server.accessibility.gestures.Swipe r0;
        android.content.Context r1;
        int i0, $i1, $i2;
        com.android.server.accessibility.gestures.GestureMatcher$StateChangeListener r2;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8;
        android.os.Handler $r3;
        android.os.Looper $r4;
        java.util.ArrayList $r5;
        android.content.res.Resources $r6;
        android.view.ViewConfiguration $r7;
        int[] r8;
        android.util.DisplayMetrics r9;

        r0 := @this: com.android.server.accessibility.gestures.Swipe;

        r1 := @parameter0: android.content.Context;

        r8 := @parameter1: int[];

        i0 := @parameter2: int;

        r2 := @parameter3: com.android.server.accessibility.gestures.GestureMatcher$StateChangeListener;

        $r3 = new android.os.Handler;

        $r4 = virtualinvoke r1.<android.content.Context: android.os.Looper getMainLooper()>();

        specialinvoke $r3.<android.os.Handler: void <init>(android.os.Looper)>($r4);

        specialinvoke r0.<com.android.server.accessibility.gestures.GestureMatcher: void <init>(int,android.os.Handler,com.android.server.accessibility.gestures.GestureMatcher$StateChangeListener)>(i0, $r3, r2);

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>(int)>(100);

        r0.<com.android.server.accessibility.gestures.Swipe: java.util.ArrayList mStrokeBuffer> = $r5;

        r0.<com.android.server.accessibility.gestures.Swipe: int[] mDirections> = r8;

        $r6 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        r9 = virtualinvoke $r6.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $i1 = <com.android.server.accessibility.gestures.GestureUtils: int MM_PER_CM>;

        $f2 = (float) $i1;

        $f3 = staticinvoke <android.util.TypedValue: float applyDimension(int,float,android.util.DisplayMetrics)>(5, $f2, r9);

        $f4 = $f3 * 1.0F;

        r0.<com.android.server.accessibility.gestures.Swipe: float mGestureDetectionThresholdPixels> = $f4;

        $f5 = r9.<android.util.DisplayMetrics: float xdpi>;

        f0 = $f5 / 2.54F;

        $f6 = r9.<android.util.DisplayMetrics: float ydpi>;

        f1 = $f6 / 2.54F;

        $f7 = f0 * 0.25F;

        r0.<com.android.server.accessibility.gestures.Swipe: float mMinPixelsBetweenSamplesX> = $f7;

        $f8 = 0.25F * f1;

        r0.<com.android.server.accessibility.gestures.Swipe: float mMinPixelsBetweenSamplesY> = $f8;

        $r7 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>(r1);

        $i2 = virtualinvoke $r7.<android.view.ViewConfiguration: int getScaledTouchSlop()>();

        r0.<com.android.server.accessibility.gestures.Swipe: int mTouchSlop> = $i2;

        virtualinvoke r0.<com.android.server.accessibility.gestures.Swipe: void clear()>();

        return;
    }

    public static java.lang.String directionToString(int)
    {
        int i0;

        i0 := @parameter0: int;

        if i0 == 0 goto label4;

        if i0 == 1 goto label3;

        if i0 == 2 goto label2;

        if i0 == 3 goto label1;

        return "Unknown Direction";

     label1:
        return "down";

     label2:
        return "up";

     label3:
        return "right";

     label4:
        return "left";
    }

    private void recognizeGesture(android.view.MotionEvent, android.view.MotionEvent, int)
    {
        com.android.server.accessibility.gestures.Swipe r0;
        android.view.MotionEvent r1, r2;
        int i0, $i1, $i2, i4, i5, i6;
        android.graphics.PointF r4, $r13, r14, r15, r16;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, f24, f25, f26, f27, f28, f29, $f30, $f31, f32, $f33, $f34, f35, $f36, $f37, $f38, $f39, $f40;
        java.util.ArrayList $r6, $r7, $r8, $r10, $r11;
        java.lang.Object $r9, $r12;
        double $d0, $d1, $d2, $d3;
        byte $b3;

        r0 := @this: com.android.server.accessibility.gestures.Swipe;

        r1 := @parameter0: android.view.MotionEvent;

        r2 := @parameter1: android.view.MotionEvent;

        i0 := @parameter2: int;

        $r6 = r0.<com.android.server.accessibility.gestures.Swipe: java.util.ArrayList mStrokeBuffer>;

        $i1 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        if $i1 >= 2 goto label1;

        virtualinvoke r0.<com.android.server.accessibility.gestures.Swipe: void cancelGesture(android.view.MotionEvent,android.view.MotionEvent,int)>(r1, r2, i0);

        return;

     label1:
        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        $r8 = r0.<com.android.server.accessibility.gestures.Swipe: java.util.ArrayList mStrokeBuffer>;

        $r9 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object get(int)>(0);

        r14 = (android.graphics.PointF) $r9;

        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>(r14);

        f24 = 0.0F;

        f25 = 0.0F;

        i4 = 0;

        f26 = 0.0F;

        r15 = null;

        i5 = 1;

     label2:
        $r10 = r0.<com.android.server.accessibility.gestures.Swipe: java.util.ArrayList mStrokeBuffer>;

        $i2 = virtualinvoke $r10.<java.util.ArrayList: int size()>();

        if i5 >= $i2 goto label4;

        $r11 = r0.<com.android.server.accessibility.gestures.Swipe: java.util.ArrayList mStrokeBuffer>;

        $r12 = virtualinvoke $r11.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        r4 = (android.graphics.PointF) $r12;

        r16 = r14;

        f27 = f24;

        f28 = f25;

        i6 = i4;

        if i4 <= 0 goto label3;

        $f4 = (float) i4;

        f0 = f24 / $f4;

        $f5 = (float) i4;

        f1 = f25 / $f5;

        $r13 = new android.graphics.PointF;

        $f7 = f26 * f0;

        $f6 = r14.<android.graphics.PointF: float x>;

        $f11 = $f7 + $f6;

        $f9 = f26 * f1;

        $f8 = r14.<android.graphics.PointF: float y>;

        $f10 = $f9 + $f8;

        specialinvoke $r13.<android.graphics.PointF: void <init>(float,float)>($f11, $f10);

        $f13 = r4.<android.graphics.PointF: float x>;

        $f12 = $r13.<android.graphics.PointF: float x>;

        f29 = $f13 - $f12;

        $f15 = r4.<android.graphics.PointF: float y>;

        $f14 = $r13.<android.graphics.PointF: float y>;

        f2 = $f15 - $f14;

        $f17 = f29 * f29;

        $f16 = f2 * f2;

        $f18 = $f17 + $f16;

        $d0 = (double) $f18;

        $d1 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        f3 = (float) $d1;

        r16 = r14;

        f27 = f24;

        f28 = f25;

        i6 = i4;

        $f19 = f29 / f3;

        $f22 = f0 * $f19;

        $f20 = f2 / f3;

        $f21 = f1 * $f20;

        $f23 = $f22 + $f21;

        $b3 = $f23 cmpg 0.0F;

        if $b3 >= 0 goto label3;

        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>($r13);

        r16 = $r13;

        f27 = 0.0F;

        f28 = 0.0F;

        i6 = 0;

     label3:
        $f30 = r4.<android.graphics.PointF: float x>;

        $f31 = r16.<android.graphics.PointF: float x>;

        f32 = $f30 - $f31;

        $f33 = r4.<android.graphics.PointF: float y>;

        $f34 = r16.<android.graphics.PointF: float y>;

        f35 = $f33 - $f34;

        $f36 = f32 * f32;

        $f37 = f35 * f35;

        $f38 = $f36 + $f37;

        $d2 = (double) $f38;

        $d3 = staticinvoke <java.lang.Math: double sqrt(double)>($d2);

        f26 = (float) $d3;

        i4 = i6 + 1;

        $f39 = f32 / f26;

        f24 = f27 + $f39;

        $f40 = f35 / f26;

        f25 = f28 + $f40;

        i5 = i5 + 1;

        r14 = r16;

        r15 = r4;

        goto label2;

     label4:
        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>(r15);

        specialinvoke r0.<com.android.server.accessibility.gestures.Swipe: void recognizeGesturePath(android.view.MotionEvent,android.view.MotionEvent,int,java.util.ArrayList)>(r1, r2, i0, $r7);

        return;
    }

    private void recognizeGesturePath(android.view.MotionEvent, android.view.MotionEvent, int, java.util.ArrayList)
    {
        com.android.server.accessibility.gestures.Swipe r0;
        android.view.MotionEvent r1, r2;
        int i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10;
        java.util.ArrayList r3;
        android.graphics.PointF r4, r5;
        int[] $r6, $r9;
        java.lang.Object $r7, $r8;
        float $f0, $f1, $f2, $f3, $f4, $f5;

        r0 := @this: com.android.server.accessibility.gestures.Swipe;

        r1 := @parameter0: android.view.MotionEvent;

        r2 := @parameter1: android.view.MotionEvent;

        i0 := @parameter2: int;

        r3 := @parameter3: java.util.ArrayList;

        virtualinvoke r1.<android.view.MotionEvent: int getDisplayId()>();

        $i2 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        $r6 = r0.<com.android.server.accessibility.gestures.Swipe: int[] mDirections>;

        $i3 = lengthof $r6;

        $i4 = $i3 + 1;

        if $i2 == $i4 goto label1;

        virtualinvoke r0.<com.android.server.accessibility.gestures.Swipe: void cancelGesture(android.view.MotionEvent,android.view.MotionEvent,int)>(r1, r2, i0);

        return;

     label1:
        i10 = 0;

     label2:
        $i5 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        $i6 = $i5 - 1;

        if i10 >= $i6 goto label4;

        $r7 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i10);

        r4 = (android.graphics.PointF) $r7;

        $i7 = i10 + 1;

        $r8 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>($i7);

        r5 = (android.graphics.PointF) $r8;

        $f1 = r5.<android.graphics.PointF: float x>;

        $f0 = r4.<android.graphics.PointF: float x>;

        $f5 = $f1 - $f0;

        $f3 = r5.<android.graphics.PointF: float y>;

        $f2 = r4.<android.graphics.PointF: float y>;

        $f4 = $f3 - $f2;

        $i8 = staticinvoke <com.android.server.accessibility.gestures.Swipe: int toDirection(float,float)>($f5, $f4);

        $r9 = r0.<com.android.server.accessibility.gestures.Swipe: int[] mDirections>;

        $i9 = $r9[i10];

        if $i8 == $i9 goto label3;

        virtualinvoke r0.<com.android.server.accessibility.gestures.Swipe: void cancelGesture(android.view.MotionEvent,android.view.MotionEvent,int)>(r1, r2, i0);

        return;

     label3:
        i10 = i10 + 1;

        goto label2;

     label4:
        virtualinvoke r0.<com.android.server.accessibility.gestures.Swipe: void completeGesture(android.view.MotionEvent,android.view.MotionEvent,int)>(r1, r2, i0);

        return;
    }

    private static int toDirection(float, float)
    {
        float f0, f1, $f2, $f3;
        byte $b0, $b1, $b2, b3, b4;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $f2 = staticinvoke <java.lang.Math: float abs(float)>(f0);

        $f3 = staticinvoke <java.lang.Math: float abs(float)>(f1);

        $b0 = $f2 cmpl $f3;

        if $b0 <= 0 goto label3;

        $b2 = f0 cmpg 0.0F;

        if $b2 >= 0 goto label1;

        b3 = 0;

        goto label2;

     label1:
        b3 = 1;

     label2:
        return b3;

     label3:
        $b1 = f1 cmpg 0.0F;

        if $b1 >= 0 goto label4;

        b4 = 2;

        goto label5;

     label4:
        b4 = 3;

     label5:
        return b4;
    }

    protected void clear()
    {
        com.android.server.accessibility.gestures.Swipe r0;
        java.util.ArrayList $r1;

        r0 := @this: com.android.server.accessibility.gestures.Swipe;

        r0.<com.android.server.accessibility.gestures.Swipe: float mBaseX> = #NaNF;

        r0.<com.android.server.accessibility.gestures.Swipe: float mBaseY> = #NaNF;

        r0.<com.android.server.accessibility.gestures.Swipe: long mBaseTime> = 0L;

        r0.<com.android.server.accessibility.gestures.Swipe: float mPreviousGestureX> = #NaNF;

        r0.<com.android.server.accessibility.gestures.Swipe: float mPreviousGestureY> = #NaNF;

        $r1 = r0.<com.android.server.accessibility.gestures.Swipe: java.util.ArrayList mStrokeBuffer>;

        virtualinvoke $r1.<java.util.ArrayList: void clear()>();

        specialinvoke r0.<com.android.server.accessibility.gestures.GestureMatcher: void clear()>();

        return;
    }

    java.lang.String getGestureName()
    {
        com.android.server.accessibility.gestures.Swipe r0;
        java.lang.StringBuilder $r2;
        int[] $r4, $r7, $r10;
        int $i0, $i1, $i2, i3;
        java.lang.String $r5, $r8, $r11;

        r0 := @this: com.android.server.accessibility.gestures.Swipe;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Swipe ");

        $r4 = r0.<com.android.server.accessibility.gestures.Swipe: int[] mDirections>;

        $i0 = $r4[0];

        $r5 = staticinvoke <com.android.server.accessibility.gestures.Swipe: java.lang.String directionToString(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        i3 = 1;

     label1:
        $r7 = r0.<com.android.server.accessibility.gestures.Swipe: int[] mDirections>;

        $i1 = lengthof $r7;

        if i3 >= $i1 goto label2;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and ");

        $r10 = r0.<com.android.server.accessibility.gestures.Swipe: int[] mDirections>;

        $i2 = $r10[i3];

        $r11 = staticinvoke <com.android.server.accessibility.gestures.Swipe: java.lang.String directionToString(int)>($i2);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        i3 = i3 + 1;

        goto label1;

     label2:
        $r8 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    protected void onDown(android.view.MotionEvent, android.view.MotionEvent, int)
    {
        com.android.server.accessibility.gestures.Swipe r0;
        android.view.MotionEvent r1, r2;
        int i0;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        boolean $z0, $z1;
        long $l1;

        r0 := @this: com.android.server.accessibility.gestures.Swipe;

        r1 := @parameter0: android.view.MotionEvent;

        r2 := @parameter1: android.view.MotionEvent;

        i0 := @parameter2: int;

        $f0 = r0.<com.android.server.accessibility.gestures.Swipe: float mBaseX>;

        $z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f0);

        if $z0 == 0 goto label1;

        $f1 = r0.<com.android.server.accessibility.gestures.Swipe: float mBaseY>;

        $z1 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f1);

        if $z1 == 0 goto label1;

        $f2 = virtualinvoke r2.<android.view.MotionEvent: float getX()>();

        r0.<com.android.server.accessibility.gestures.Swipe: float mBaseX> = $f2;

        $f3 = virtualinvoke r2.<android.view.MotionEvent: float getY()>();

        r0.<com.android.server.accessibility.gestures.Swipe: float mBaseY> = $f3;

        $l1 = virtualinvoke r2.<android.view.MotionEvent: long getEventTime()>();

        r0.<com.android.server.accessibility.gestures.Swipe: long mBaseTime> = $l1;

        $f4 = r0.<com.android.server.accessibility.gestures.Swipe: float mBaseX>;

        r0.<com.android.server.accessibility.gestures.Swipe: float mPreviousGestureX> = $f4;

        $f5 = r0.<com.android.server.accessibility.gestures.Swipe: float mBaseY>;

        r0.<com.android.server.accessibility.gestures.Swipe: float mPreviousGestureY> = $f5;

     label1:
        return;
    }

    protected void onMove(android.view.MotionEvent, android.view.MotionEvent, int)
    {
        com.android.server.accessibility.gestures.Swipe r0;
        android.view.MotionEvent r1, r2;
        int i0, $i4, $i5, $i6, $i10, $i12, $i13, $i14;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22;
        long l1, l2, $l3;
        double d0, $d1, $d2, $d3, $d4;
        android.graphics.PointF $r3, $r7;
        java.util.ArrayList $r4, $r5, $r8;
        byte $b7, $b8, $b9, $b11, $b15, $b16;
        int[] $r6;

        r0 := @this: com.android.server.accessibility.gestures.Swipe;

        r1 := @parameter0: android.view.MotionEvent;

        r2 := @parameter1: android.view.MotionEvent;

        i0 := @parameter2: int;

        f0 = virtualinvoke r2.<android.view.MotionEvent: float getX()>();

        f1 = virtualinvoke r2.<android.view.MotionEvent: float getY()>();

        l1 = virtualinvoke r2.<android.view.MotionEvent: long getEventTime()>();

        $f4 = r0.<com.android.server.accessibility.gestures.Swipe: float mPreviousGestureX>;

        $f5 = f0 - $f4;

        f2 = staticinvoke <java.lang.Math: float abs(float)>($f5);

        $f6 = r0.<com.android.server.accessibility.gestures.Swipe: float mPreviousGestureY>;

        $f7 = f1 - $f6;

        f3 = staticinvoke <java.lang.Math: float abs(float)>($f7);

        $f8 = r0.<com.android.server.accessibility.gestures.Swipe: float mBaseX>;

        $f9 = f0 - $f8;

        $f10 = staticinvoke <java.lang.Math: float abs(float)>($f9);

        $d1 = (double) $f10;

        $f11 = r0.<com.android.server.accessibility.gestures.Swipe: float mBaseY>;

        $f12 = f1 - $f11;

        $f13 = staticinvoke <java.lang.Math: float abs(float)>($f12);

        $d2 = (double) $f13;

        d0 = staticinvoke <java.lang.Math: double hypot(double,double)>($d1, $d2);

        $l3 = r0.<com.android.server.accessibility.gestures.Swipe: long mBaseTime>;

        l2 = l1 - $l3;

        $i4 = virtualinvoke r0.<com.android.server.accessibility.gestures.Swipe: int getState()>();

        if $i4 != 0 goto label3;

        $i10 = r0.<com.android.server.accessibility.gestures.Swipe: int mTouchSlop>;

        $d3 = (double) $i10;

        $b11 = d0 cmpg $d3;

        if $b11 >= 0 goto label1;

        return;

     label1:
        $r5 = r0.<com.android.server.accessibility.gestures.Swipe: java.util.ArrayList mStrokeBuffer>;

        $i12 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        if $i12 != 0 goto label3;

        $f15 = r0.<com.android.server.accessibility.gestures.Swipe: float mBaseX>;

        $f18 = f0 - $f15;

        $f16 = r0.<com.android.server.accessibility.gestures.Swipe: float mBaseY>;

        $f17 = f1 - $f16;

        $i13 = staticinvoke <com.android.server.accessibility.gestures.Swipe: int toDirection(float,float)>($f18, $f17);

        $r6 = r0.<com.android.server.accessibility.gestures.Swipe: int[] mDirections>;

        $i14 = $r6[0];

        if $i13 == $i14 goto label2;

        virtualinvoke r0.<com.android.server.accessibility.gestures.Swipe: void cancelGesture(android.view.MotionEvent,android.view.MotionEvent,int)>(r1, r2, i0);

        return;

     label2:
        $r8 = r0.<com.android.server.accessibility.gestures.Swipe: java.util.ArrayList mStrokeBuffer>;

        $r7 = new android.graphics.PointF;

        $f20 = r0.<com.android.server.accessibility.gestures.Swipe: float mBaseX>;

        $f19 = r0.<com.android.server.accessibility.gestures.Swipe: float mBaseY>;

        specialinvoke $r7.<android.graphics.PointF: void <init>(float,float)>($f20, $f19);

        virtualinvoke $r8.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

     label3:
        $f21 = r0.<com.android.server.accessibility.gestures.Swipe: float mGestureDetectionThresholdPixels>;

        $d4 = (double) $f21;

        $b15 = d0 cmpl $d4;

        if $b15 <= 0 goto label4;

        r0.<com.android.server.accessibility.gestures.Swipe: float mBaseX> = f0;

        r0.<com.android.server.accessibility.gestures.Swipe: float mBaseY> = f1;

        r0.<com.android.server.accessibility.gestures.Swipe: long mBaseTime> = l1;

        virtualinvoke r0.<com.android.server.accessibility.gestures.Swipe: void startGesture(android.view.MotionEvent,android.view.MotionEvent,int)>(r1, r2, i0);

        goto label6;

     label4:
        $i5 = virtualinvoke r0.<com.android.server.accessibility.gestures.Swipe: int getState()>();

        if $i5 != 0 goto label5;

        $b9 = l2 cmp 150L;

        if $b9 <= 0 goto label6;

        virtualinvoke r0.<com.android.server.accessibility.gestures.Swipe: void cancelGesture(android.view.MotionEvent,android.view.MotionEvent,int)>(r1, r2, i0);

        return;

     label5:
        $i6 = virtualinvoke r0.<com.android.server.accessibility.gestures.Swipe: int getState()>();

        if $i6 != 1 goto label6;

        $b8 = l2 cmp 350L;

        if $b8 <= 0 goto label6;

        virtualinvoke r0.<com.android.server.accessibility.gestures.Swipe: void cancelGesture(android.view.MotionEvent,android.view.MotionEvent,int)>(r1, r2, i0);

        return;

     label6:
        $f22 = r0.<com.android.server.accessibility.gestures.Swipe: float mMinPixelsBetweenSamplesX>;

        $b16 = f2 cmpl $f22;

        if $b16 >= 0 goto label7;

        $f14 = r0.<com.android.server.accessibility.gestures.Swipe: float mMinPixelsBetweenSamplesY>;

        $b7 = f3 cmpl $f14;

        if $b7 < 0 goto label8;

     label7:
        r0.<com.android.server.accessibility.gestures.Swipe: float mPreviousGestureX> = f0;

        r0.<com.android.server.accessibility.gestures.Swipe: float mPreviousGestureY> = f1;

        $r4 = r0.<com.android.server.accessibility.gestures.Swipe: java.util.ArrayList mStrokeBuffer>;

        $r3 = new android.graphics.PointF;

        specialinvoke $r3.<android.graphics.PointF: void <init>(float,float)>(f0, f1);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

     label8:
        return;
    }

    protected void onPointerDown(android.view.MotionEvent, android.view.MotionEvent, int)
    {
        com.android.server.accessibility.gestures.Swipe r0;
        android.view.MotionEvent r1, r2;
        int i0;

        r0 := @this: com.android.server.accessibility.gestures.Swipe;

        r1 := @parameter0: android.view.MotionEvent;

        r2 := @parameter1: android.view.MotionEvent;

        i0 := @parameter2: int;

        virtualinvoke r0.<com.android.server.accessibility.gestures.Swipe: void cancelGesture(android.view.MotionEvent,android.view.MotionEvent,int)>(r1, r2, i0);

        return;
    }

    protected void onPointerUp(android.view.MotionEvent, android.view.MotionEvent, int)
    {
        com.android.server.accessibility.gestures.Swipe r0;
        android.view.MotionEvent r1, r2;
        int i0;

        r0 := @this: com.android.server.accessibility.gestures.Swipe;

        r1 := @parameter0: android.view.MotionEvent;

        r2 := @parameter1: android.view.MotionEvent;

        i0 := @parameter2: int;

        virtualinvoke r0.<com.android.server.accessibility.gestures.Swipe: void cancelGesture(android.view.MotionEvent,android.view.MotionEvent,int)>(r1, r2, i0);

        return;
    }

    protected void onUp(android.view.MotionEvent, android.view.MotionEvent, int)
    {
        com.android.server.accessibility.gestures.Swipe r0;
        android.view.MotionEvent r1, r2;
        int i0, $i1;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7, $f8, $f9;
        byte $b2, $b3;
        android.graphics.PointF $r3;
        java.util.ArrayList $r4;

        r0 := @this: com.android.server.accessibility.gestures.Swipe;

        r1 := @parameter0: android.view.MotionEvent;

        r2 := @parameter1: android.view.MotionEvent;

        i0 := @parameter2: int;

        $i1 = virtualinvoke r0.<com.android.server.accessibility.gestures.Swipe: int getState()>();

        if $i1 == 1 goto label1;

        virtualinvoke r0.<com.android.server.accessibility.gestures.Swipe: void cancelGesture(android.view.MotionEvent,android.view.MotionEvent,int)>(r1, r2, i0);

        return;

     label1:
        f0 = virtualinvoke r2.<android.view.MotionEvent: float getX()>();

        f1 = virtualinvoke r2.<android.view.MotionEvent: float getY()>();

        $f4 = r0.<com.android.server.accessibility.gestures.Swipe: float mPreviousGestureX>;

        $f5 = f0 - $f4;

        f2 = staticinvoke <java.lang.Math: float abs(float)>($f5);

        $f6 = r0.<com.android.server.accessibility.gestures.Swipe: float mPreviousGestureY>;

        $f7 = f1 - $f6;

        f3 = staticinvoke <java.lang.Math: float abs(float)>($f7);

        $f8 = r0.<com.android.server.accessibility.gestures.Swipe: float mMinPixelsBetweenSamplesX>;

        $b2 = f2 cmpl $f8;

        if $b2 >= 0 goto label2;

        $f9 = r0.<com.android.server.accessibility.gestures.Swipe: float mMinPixelsBetweenSamplesY>;

        $b3 = f3 cmpl $f9;

        if $b3 < 0 goto label3;

     label2:
        $r4 = r0.<com.android.server.accessibility.gestures.Swipe: java.util.ArrayList mStrokeBuffer>;

        $r3 = new android.graphics.PointF;

        specialinvoke $r3.<android.graphics.PointF: void <init>(float,float)>(f0, f1);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

     label3:
        specialinvoke r0.<com.android.server.accessibility.gestures.Swipe: void recognizeGesture(android.view.MotionEvent,android.view.MotionEvent,int)>(r1, r2, i0);

        return;
    }

    public java.lang.String toString()
    {
        com.android.server.accessibility.gestures.Swipe r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r3, $r4;
        int $i0;
        float $f0, $f1, $f2, $f3, $f4;

        r0 := @this: com.android.server.accessibility.gestures.Swipe;

        $r2 = new java.lang.StringBuilder;

        $r3 = specialinvoke r0.<com.android.server.accessibility.gestures.GestureMatcher: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3);

        $i0 = virtualinvoke r0.<com.android.server.accessibility.gestures.Swipe: int getState()>();

        if $i0 == 3 goto label1;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mBaseX: ");

        $f0 = r0.<com.android.server.accessibility.gestures.Swipe: float mBaseX>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mBaseY: ");

        $f1 = r0.<com.android.server.accessibility.gestures.Swipe: float mBaseY>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mGestureDetectionThreshold:");

        $f2 = r0.<com.android.server.accessibility.gestures.Swipe: float mGestureDetectionThresholdPixels>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f2);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mMinPixelsBetweenSamplesX:");

        $f3 = r0.<com.android.server.accessibility.gestures.Swipe: float mMinPixelsBetweenSamplesX>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mMinPixelsBetweenSamplesY:");

        $f4 = r0.<com.android.server.accessibility.gestures.Swipe: float mMinPixelsBetweenSamplesY>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f4);

     label1:
        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    public static void <clinit>()
    {
        <com.android.server.accessibility.gestures.Swipe: int UP> = 2;

        <com.android.server.accessibility.gestures.Swipe: int RIGHT> = 1;

        <com.android.server.accessibility.gestures.Swipe: float MIN_CM_BETWEEN_SAMPLES> = 0.25F;

        <com.android.server.accessibility.gestures.Swipe: long MAX_TIME_TO_START_SWIPE_MS> = 150L;

        <com.android.server.accessibility.gestures.Swipe: long MAX_TIME_TO_CONTINUE_SWIPE_MS> = 350L;

        <com.android.server.accessibility.gestures.Swipe: int LEFT> = 0;

        <com.android.server.accessibility.gestures.Swipe: int GESTURE_CONFIRM_CM> = 1;

        <com.android.server.accessibility.gestures.Swipe: int DOWN> = 3;

        <com.android.server.accessibility.gestures.Swipe: float ANGLE_THRESHOLD> = 0.0F;

        return;
    }
}
