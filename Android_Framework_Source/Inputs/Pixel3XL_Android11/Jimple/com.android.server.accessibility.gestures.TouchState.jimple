public class com.android.server.accessibility.gestures.TouchState extends java.lang.Object
{
    public static final int ALL_POINTER_ID_BITS;
    private static final java.lang.String LOG_TAG;
    static final int MAX_POINTER_COUNT;
    public static final int STATE_CLEAR;
    public static final int STATE_DELEGATING;
    public static final int STATE_DRAGGING;
    public static final int STATE_GESTURE_DETECTING;
    public static final int STATE_TOUCH_EXPLORING;
    public static final int STATE_TOUCH_INTERACTING;
    private int mInjectedPointersDown;
    private long mLastInjectedDownEventTime;
    private android.view.MotionEvent mLastInjectedHoverEvent;
    private android.view.MotionEvent mLastInjectedHoverEventForClick;
    private android.view.MotionEvent mLastReceivedEvent;
    private android.view.MotionEvent mLastReceivedRawEvent;
    private int mLastTouchedWindowId;
    private final com.android.server.accessibility.gestures.TouchState$ReceivedPointerTracker mReceivedPointerTracker;
    private int mState;

    public void <init>()
    {
        com.android.server.accessibility.gestures.TouchState r0;
        com.android.server.accessibility.gestures.TouchState$ReceivedPointerTracker $r1;

        r0 := @this: com.android.server.accessibility.gestures.TouchState;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.accessibility.gestures.TouchState: int mState> = 0;

        $r1 = new com.android.server.accessibility.gestures.TouchState$ReceivedPointerTracker;

        specialinvoke $r1.<com.android.server.accessibility.gestures.TouchState$ReceivedPointerTracker: void <init>(com.android.server.accessibility.gestures.TouchState)>(r0);

        r0.<com.android.server.accessibility.gestures.TouchState: com.android.server.accessibility.gestures.TouchState$ReceivedPointerTracker mReceivedPointerTracker> = $r1;

        return;
    }

    public static java.lang.String getStateSymbolicName(int)
    {
        int i0;
        java.lang.StringBuilder $r1;
        java.lang.String $r4;

        i0 := @parameter0: int;

        if i0 == 0 goto label6;

        if i0 == 1 goto label5;

        if i0 == 2 goto label4;

        if i0 == 3 goto label3;

        if i0 == 4 goto label2;

        if i0 == 5 goto label1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown state: ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;

     label1:
        return "STATE_GESTURE_DETECTING";

     label2:
        return "STATE_DELEGATING";

     label3:
        return "STATE_DRAGGING";

     label4:
        return "STATE_TOUCH_EXPLORING";

     label5:
        return "STATE_TOUCH_INTERACTING";

     label6:
        return "STATE_CLEAR";
    }

    public void clear()
    {
        com.android.server.accessibility.gestures.TouchState r0;
        android.view.MotionEvent r1;
        com.android.server.accessibility.gestures.TouchState$ReceivedPointerTracker $r2;

        r0 := @this: com.android.server.accessibility.gestures.TouchState;

        virtualinvoke r0.<com.android.server.accessibility.gestures.TouchState: void setState(int)>(0);

        r1 = r0.<com.android.server.accessibility.gestures.TouchState: android.view.MotionEvent mLastReceivedEvent>;

        if r1 == null goto label1;

        virtualinvoke r1.<android.view.MotionEvent: void recycle()>();

        r0.<com.android.server.accessibility.gestures.TouchState: android.view.MotionEvent mLastReceivedEvent> = null;

     label1:
        r0.<com.android.server.accessibility.gestures.TouchState: int mLastTouchedWindowId> = -1;

        $r2 = r0.<com.android.server.accessibility.gestures.TouchState: com.android.server.accessibility.gestures.TouchState$ReceivedPointerTracker mReceivedPointerTracker>;

        virtualinvoke $r2.<com.android.server.accessibility.gestures.TouchState$ReceivedPointerTracker: void clear()>();

        r0.<com.android.server.accessibility.gestures.TouchState: int mInjectedPointersDown> = 0;

        return;
    }

    public int getInjectedPointerDownCount()
    {
        com.android.server.accessibility.gestures.TouchState r0;
        int $i0, $i1;

        r0 := @this: com.android.server.accessibility.gestures.TouchState;

        $i0 = r0.<com.android.server.accessibility.gestures.TouchState: int mInjectedPointersDown>;

        $i1 = staticinvoke <java.lang.Integer: int bitCount(int)>($i0);

        return $i1;
    }

    public int getInjectedPointersDown()
    {
        com.android.server.accessibility.gestures.TouchState r0;
        int $i0;

        r0 := @this: com.android.server.accessibility.gestures.TouchState;

        $i0 = r0.<com.android.server.accessibility.gestures.TouchState: int mInjectedPointersDown>;

        return $i0;
    }

    public long getLastInjectedDownEventTime()
    {
        com.android.server.accessibility.gestures.TouchState r0;
        long $l0;

        r0 := @this: com.android.server.accessibility.gestures.TouchState;

        $l0 = r0.<com.android.server.accessibility.gestures.TouchState: long mLastInjectedDownEventTime>;

        return $l0;
    }

    public android.view.MotionEvent getLastInjectedHoverEvent()
    {
        com.android.server.accessibility.gestures.TouchState r0;
        android.view.MotionEvent $r1;

        r0 := @this: com.android.server.accessibility.gestures.TouchState;

        $r1 = r0.<com.android.server.accessibility.gestures.TouchState: android.view.MotionEvent mLastInjectedHoverEvent>;

        return $r1;
    }

    public android.view.MotionEvent getLastInjectedHoverEventForClick()
    {
        com.android.server.accessibility.gestures.TouchState r0;
        android.view.MotionEvent $r1;

        r0 := @this: com.android.server.accessibility.gestures.TouchState;

        $r1 = r0.<com.android.server.accessibility.gestures.TouchState: android.view.MotionEvent mLastInjectedHoverEventForClick>;

        return $r1;
    }

    public android.view.MotionEvent getLastReceivedEvent()
    {
        com.android.server.accessibility.gestures.TouchState r0;
        android.view.MotionEvent $r1;

        r0 := @this: com.android.server.accessibility.gestures.TouchState;

        $r1 = r0.<com.android.server.accessibility.gestures.TouchState: android.view.MotionEvent mLastReceivedEvent>;

        return $r1;
    }

    public int getLastTouchedWindowId()
    {
        com.android.server.accessibility.gestures.TouchState r0;
        int $i0;

        r0 := @this: com.android.server.accessibility.gestures.TouchState;

        $i0 = r0.<com.android.server.accessibility.gestures.TouchState: int mLastTouchedWindowId>;

        return $i0;
    }

    public com.android.server.accessibility.gestures.TouchState$ReceivedPointerTracker getReceivedPointerTracker()
    {
        com.android.server.accessibility.gestures.TouchState r0;
        com.android.server.accessibility.gestures.TouchState$ReceivedPointerTracker $r1;

        r0 := @this: com.android.server.accessibility.gestures.TouchState;

        $r1 = r0.<com.android.server.accessibility.gestures.TouchState: com.android.server.accessibility.gestures.TouchState$ReceivedPointerTracker mReceivedPointerTracker>;

        return $r1;
    }

    public int getState()
    {
        com.android.server.accessibility.gestures.TouchState r0;
        int $i0;

        r0 := @this: com.android.server.accessibility.gestures.TouchState;

        $i0 = r0.<com.android.server.accessibility.gestures.TouchState: int mState>;

        return $i0;
    }

    public boolean isClear()
    {
        com.android.server.accessibility.gestures.TouchState r0;
        int $i0;
        boolean z0;

        r0 := @this: com.android.server.accessibility.gestures.TouchState;

        $i0 = r0.<com.android.server.accessibility.gestures.TouchState: int mState>;

        if $i0 != 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isDelegating()
    {
        com.android.server.accessibility.gestures.TouchState r0;
        int $i0;
        boolean z0;

        r0 := @this: com.android.server.accessibility.gestures.TouchState;

        $i0 = r0.<com.android.server.accessibility.gestures.TouchState: int mState>;

        if $i0 != 4 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isDragging()
    {
        com.android.server.accessibility.gestures.TouchState r0;
        int $i0;
        boolean z0;

        r0 := @this: com.android.server.accessibility.gestures.TouchState;

        $i0 = r0.<com.android.server.accessibility.gestures.TouchState: int mState>;

        if $i0 != 3 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isGestureDetecting()
    {
        com.android.server.accessibility.gestures.TouchState r0;
        int $i0;
        boolean z0;

        r0 := @this: com.android.server.accessibility.gestures.TouchState;

        $i0 = r0.<com.android.server.accessibility.gestures.TouchState: int mState>;

        if $i0 != 5 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isInjectedPointerDown(int)
    {
        com.android.server.accessibility.gestures.TouchState r0;
        int i0, $i1, $i2, $i3;
        boolean z0;

        r0 := @this: com.android.server.accessibility.gestures.TouchState;

        i0 := @parameter0: int;

        z0 = 1;

        $i2 = r0.<com.android.server.accessibility.gestures.TouchState: int mInjectedPointersDown>;

        $i1 = 1 << i0;

        $i3 = $i2 & $i1;

        if $i3 == 0 goto label1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isTouchExploring()
    {
        com.android.server.accessibility.gestures.TouchState r0;
        int $i0;
        boolean z0;

        r0 := @this: com.android.server.accessibility.gestures.TouchState;

        $i0 = r0.<com.android.server.accessibility.gestures.TouchState: int mState>;

        if $i0 != 2 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isTouchInteracting()
    {
        com.android.server.accessibility.gestures.TouchState r0;
        int i0;
        boolean z0;

        r0 := @this: com.android.server.accessibility.gestures.TouchState;

        i0 = r0.<com.android.server.accessibility.gestures.TouchState: int mState>;

        z0 = 1;

        if i0 != 1 goto label1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public void onInjectedAccessibilityEvent(int)
    {
        com.android.server.accessibility.gestures.TouchState r0;
        int i0;

        r0 := @this: com.android.server.accessibility.gestures.TouchState;

        i0 := @parameter0: int;

        if i0 == 512 goto label6;

        if i0 == 1024 goto label5;

        if i0 == 262144 goto label4;

        if i0 == 524288 goto label3;

        if i0 == 1048576 goto label2;

        if i0 == 2097152 goto label1;

        goto label7;

     label1:
        virtualinvoke r0.<com.android.server.accessibility.gestures.TouchState: void clear()>();

        goto label7;

     label2:
        virtualinvoke r0.<com.android.server.accessibility.gestures.TouchState: void startTouchInteracting()>();

        goto label7;

     label3:
        virtualinvoke r0.<com.android.server.accessibility.gestures.TouchState: void startTouchInteracting()>();

        goto label7;

     label4:
        virtualinvoke r0.<com.android.server.accessibility.gestures.TouchState: void startGestureDetecting()>();

        goto label7;

     label5:
        virtualinvoke r0.<com.android.server.accessibility.gestures.TouchState: void startTouchInteracting()>();

        goto label7;

     label6:
        virtualinvoke r0.<com.android.server.accessibility.gestures.TouchState: void startTouchExploring()>();

     label7:
        return;
    }

    void onInjectedMotionEvent(android.view.MotionEvent)
    {
        com.android.server.accessibility.gestures.TouchState r0;
        android.view.MotionEvent r1, $r2, $r3, $r4, r5, r6, r7;
        int i0, $i1, $i2, $i3, $i4, $i6, i7, i8;
        long $l5;

        r0 := @this: com.android.server.accessibility.gestures.TouchState;

        r1 := @parameter0: android.view.MotionEvent;

        i0 = virtualinvoke r1.<android.view.MotionEvent: int getActionMasked()>();

        $i1 = virtualinvoke r1.<android.view.MotionEvent: int getActionIndex()>();

        $i2 = virtualinvoke r1.<android.view.MotionEvent: int getPointerId(int)>($i1);

        i7 = 1 << $i2;

        if i0 == 0 goto label7;

        if i0 == 1 goto label6;

        if i0 == 5 goto label7;

        if i0 == 6 goto label6;

        if i0 == 7 goto label4;

        if i0 == 9 goto label4;

        if i0 == 10 goto label1;

        goto label8;

     label1:
        r5 = r0.<com.android.server.accessibility.gestures.TouchState: android.view.MotionEvent mLastInjectedHoverEvent>;

        if r5 == null goto label2;

        virtualinvoke r5.<android.view.MotionEvent: void recycle()>();

     label2:
        $r3 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(android.view.MotionEvent)>(r1);

        r0.<com.android.server.accessibility.gestures.TouchState: android.view.MotionEvent mLastInjectedHoverEvent> = $r3;

        r6 = r0.<com.android.server.accessibility.gestures.TouchState: android.view.MotionEvent mLastInjectedHoverEventForClick>;

        if r6 == null goto label3;

        virtualinvoke r6.<android.view.MotionEvent: void recycle()>();

     label3:
        $r4 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(android.view.MotionEvent)>(r1);

        r0.<com.android.server.accessibility.gestures.TouchState: android.view.MotionEvent mLastInjectedHoverEventForClick> = $r4;

        goto label8;

     label4:
        r7 = r0.<com.android.server.accessibility.gestures.TouchState: android.view.MotionEvent mLastInjectedHoverEvent>;

        if r7 == null goto label5;

        virtualinvoke r7.<android.view.MotionEvent: void recycle()>();

     label5:
        $r2 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(android.view.MotionEvent)>(r1);

        r0.<com.android.server.accessibility.gestures.TouchState: android.view.MotionEvent mLastInjectedHoverEvent> = $r2;

        goto label8;

     label6:
        $i6 = r0.<com.android.server.accessibility.gestures.TouchState: int mInjectedPointersDown>;

        i8 = $i6 & i7;

        r0.<com.android.server.accessibility.gestures.TouchState: int mInjectedPointersDown> = i8;

        if i8 != 0 goto label8;

        r0.<com.android.server.accessibility.gestures.TouchState: long mLastInjectedDownEventTime> = 0L;

        goto label8;

     label7:
        $i3 = r0.<com.android.server.accessibility.gestures.TouchState: int mInjectedPointersDown>;

        $i4 = $i3 | i7;

        r0.<com.android.server.accessibility.gestures.TouchState: int mInjectedPointersDown> = $i4;

        $l5 = virtualinvoke r1.<android.view.MotionEvent: long getDownTime()>();

        r0.<com.android.server.accessibility.gestures.TouchState: long mLastInjectedDownEventTime> = $l5;

     label8:
        return;
    }

    public void onReceivedAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        com.android.server.accessibility.gestures.TouchState r0;
        int i0, $i1;
        android.view.accessibility.AccessibilityEvent r1;
        android.view.MotionEvent r2;

        r0 := @this: com.android.server.accessibility.gestures.TouchState;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        i0 = virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: int getEventType()>();

        if i0 == 32 goto label2;

        if i0 == 128 goto label1;

        if i0 == 256 goto label1;

        if i0 == 32768 goto label2;

        goto label4;

     label1:
        $i1 = virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: int getWindowId()>();

        r0.<com.android.server.accessibility.gestures.TouchState: int mLastTouchedWindowId> = $i1;

        goto label4;

     label2:
        r2 = r0.<com.android.server.accessibility.gestures.TouchState: android.view.MotionEvent mLastInjectedHoverEventForClick>;

        if r2 == null goto label3;

        virtualinvoke r2.<android.view.MotionEvent: void recycle()>();

        r0.<com.android.server.accessibility.gestures.TouchState: android.view.MotionEvent mLastInjectedHoverEventForClick> = null;

     label3:
        r0.<com.android.server.accessibility.gestures.TouchState: int mLastTouchedWindowId> = -1;

     label4:
        return;
    }

    public void onReceivedMotionEvent(android.view.MotionEvent)
    {
        com.android.server.accessibility.gestures.TouchState r0;
        android.view.MotionEvent r1, $r2, r4, r5;
        com.android.server.accessibility.gestures.TouchState$ReceivedPointerTracker $r3;

        r0 := @this: com.android.server.accessibility.gestures.TouchState;

        r1 := @parameter0: android.view.MotionEvent;

        r4 = r0.<com.android.server.accessibility.gestures.TouchState: android.view.MotionEvent mLastReceivedEvent>;

        if r4 == null goto label1;

        virtualinvoke r4.<android.view.MotionEvent: void recycle()>();

     label1:
        r5 = r0.<com.android.server.accessibility.gestures.TouchState: android.view.MotionEvent mLastReceivedRawEvent>;

        if r5 == null goto label2;

        virtualinvoke r5.<android.view.MotionEvent: void recycle()>();

     label2:
        $r2 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(android.view.MotionEvent)>(r1);

        r0.<com.android.server.accessibility.gestures.TouchState: android.view.MotionEvent mLastReceivedEvent> = $r2;

        $r3 = r0.<com.android.server.accessibility.gestures.TouchState: com.android.server.accessibility.gestures.TouchState$ReceivedPointerTracker mReceivedPointerTracker>;

        virtualinvoke $r3.<com.android.server.accessibility.gestures.TouchState$ReceivedPointerTracker: void onMotionEvent(android.view.MotionEvent)>(r1);

        return;
    }

    public void setState(int)
    {
        com.android.server.accessibility.gestures.TouchState r0;
        int i0, $i1;

        r0 := @this: com.android.server.accessibility.gestures.TouchState;

        i0 := @parameter0: int;

        $i1 = r0.<com.android.server.accessibility.gestures.TouchState: int mState>;

        if $i1 != i0 goto label1;

        return;

     label1:
        r0.<com.android.server.accessibility.gestures.TouchState: int mState> = i0;

        return;
    }

    public void startDelegating()
    {
        com.android.server.accessibility.gestures.TouchState r0;

        r0 := @this: com.android.server.accessibility.gestures.TouchState;

        virtualinvoke r0.<com.android.server.accessibility.gestures.TouchState: void setState(int)>(4);

        return;
    }

    public void startDragging()
    {
        com.android.server.accessibility.gestures.TouchState r0;

        r0 := @this: com.android.server.accessibility.gestures.TouchState;

        virtualinvoke r0.<com.android.server.accessibility.gestures.TouchState: void setState(int)>(3);

        return;
    }

    public void startGestureDetecting()
    {
        com.android.server.accessibility.gestures.TouchState r0;

        r0 := @this: com.android.server.accessibility.gestures.TouchState;

        virtualinvoke r0.<com.android.server.accessibility.gestures.TouchState: void setState(int)>(5);

        return;
    }

    public void startTouchExploring()
    {
        com.android.server.accessibility.gestures.TouchState r0;

        r0 := @this: com.android.server.accessibility.gestures.TouchState;

        virtualinvoke r0.<com.android.server.accessibility.gestures.TouchState: void setState(int)>(2);

        return;
    }

    public void startTouchInteracting()
    {
        com.android.server.accessibility.gestures.TouchState r0;

        r0 := @this: com.android.server.accessibility.gestures.TouchState;

        virtualinvoke r0.<com.android.server.accessibility.gestures.TouchState: void setState(int)>(1);

        return;
    }

    public java.lang.String toString()
    {
        com.android.server.accessibility.gestures.TouchState r0;
        java.lang.StringBuilder $r2;
        int $i0;
        java.lang.String $r4, $r7;

        r0 := @this: com.android.server.accessibility.gestures.TouchState;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TouchState { mState: ");

        $i0 = r0.<com.android.server.accessibility.gestures.TouchState: int mState>;

        $r4 = staticinvoke <com.android.server.accessibility.gestures.TouchState: java.lang.String getStateSymbolicName(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" }");

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    public static void <clinit>()
    {
        <com.android.server.accessibility.gestures.TouchState: int STATE_TOUCH_INTERACTING> = 1;

        <com.android.server.accessibility.gestures.TouchState: int STATE_TOUCH_EXPLORING> = 2;

        <com.android.server.accessibility.gestures.TouchState: int STATE_GESTURE_DETECTING> = 5;

        <com.android.server.accessibility.gestures.TouchState: int STATE_DRAGGING> = 3;

        <com.android.server.accessibility.gestures.TouchState: int STATE_DELEGATING> = 4;

        <com.android.server.accessibility.gestures.TouchState: int STATE_CLEAR> = 0;

        <com.android.server.accessibility.gestures.TouchState: int MAX_POINTER_COUNT> = 32;

        <com.android.server.accessibility.gestures.TouchState: java.lang.String LOG_TAG> = "TouchState";

        <com.android.server.accessibility.gestures.TouchState: int ALL_POINTER_ID_BITS> = -1;

        return;
    }
}
