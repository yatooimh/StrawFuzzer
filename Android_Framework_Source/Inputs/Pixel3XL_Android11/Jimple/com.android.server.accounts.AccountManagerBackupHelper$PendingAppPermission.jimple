final class com.android.server.accounts.AccountManagerBackupHelper$PendingAppPermission extends java.lang.Object
{
    private final java.lang.String accountDigest;
    private final java.lang.String certDigest;
    private final java.lang.String packageName;
    final com.android.server.accounts.AccountManagerBackupHelper this$0;
    private final int userId;

    public void <init>(com.android.server.accounts.AccountManagerBackupHelper, java.lang.String, java.lang.String, java.lang.String, int)
    {
        com.android.server.accounts.AccountManagerBackupHelper$PendingAppPermission r0;
        com.android.server.accounts.AccountManagerBackupHelper r1;
        java.lang.String r2, r3, r4;
        int i0;

        r0 := @this: com.android.server.accounts.AccountManagerBackupHelper$PendingAppPermission;

        r1 := @parameter0: com.android.server.accounts.AccountManagerBackupHelper;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        i0 := @parameter4: int;

        r0.<com.android.server.accounts.AccountManagerBackupHelper$PendingAppPermission: com.android.server.accounts.AccountManagerBackupHelper this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.accounts.AccountManagerBackupHelper$PendingAppPermission: java.lang.String accountDigest> = r2;

        r0.<com.android.server.accounts.AccountManagerBackupHelper$PendingAppPermission: java.lang.String packageName> = r3;

        r0.<com.android.server.accounts.AccountManagerBackupHelper$PendingAppPermission: java.lang.String certDigest> = r4;

        r0.<com.android.server.accounts.AccountManagerBackupHelper$PendingAppPermission: int userId> = i0;

        return;
    }

    static java.lang.String access$600(com.android.server.accounts.AccountManagerBackupHelper$PendingAppPermission)
    {
        com.android.server.accounts.AccountManagerBackupHelper$PendingAppPermission r0;
        java.lang.String $r1;

        r0 := @parameter0: com.android.server.accounts.AccountManagerBackupHelper$PendingAppPermission;

        $r1 = r0.<com.android.server.accounts.AccountManagerBackupHelper$PendingAppPermission: java.lang.String packageName>;

        return $r1;
    }

    public boolean apply(android.content.pm.PackageManager)
    {
        com.android.server.accounts.AccountManagerBackupHelper$PendingAppPermission r0;
        java.lang.Object r1, $r19, r30;
        java.util.Iterator r2;
        android.accounts.Account[] r3;
        int i0, $i1, $i2, $i3, i4, i5;
        com.android.server.accounts.AccountManagerBackupHelper $r4, $r12, $r14;
        com.android.server.accounts.AccountManagerService $r5, $r15;
        java.util.HashMap $r6;
        java.util.Collection $r7;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.String $r8, $r10, $r17, $r18, $r20, $r21, $r23, r34;
        android.content.pm.Signature[] $r9, $r16;
        android.content.pm.ApplicationInfo $r11;
        android.accounts.AccountManagerInternal $r13;
        byte[] $r22;
        java.lang.Throwable $r24, $r26;
        android.content.pm.PackageManager$NameNotFoundException $r25;
        android.content.pm.PackageManager r27;
        android.accounts.Account r28, r31;
        com.android.server.accounts.AccountManagerService$UserAccounts r29;
        android.content.pm.PackageInfo r32;
        java.lang.String[] r33;

        r0 := @this: com.android.server.accounts.AccountManagerBackupHelper$PendingAppPermission;

        r27 := @parameter0: android.content.pm.PackageManager;

        r28 = null;

        $r4 = r0.<com.android.server.accounts.AccountManagerBackupHelper$PendingAppPermission: com.android.server.accounts.AccountManagerBackupHelper this$0>;

        $r5 = staticinvoke <com.android.server.accounts.AccountManagerBackupHelper: com.android.server.accounts.AccountManagerService access$000(com.android.server.accounts.AccountManagerBackupHelper)>($r4);

        $i1 = r0.<com.android.server.accounts.AccountManagerBackupHelper$PendingAppPermission: int userId>;

        r29 = virtualinvoke $r5.<com.android.server.accounts.AccountManagerService: com.android.server.accounts.AccountManagerService$UserAccounts getUserAccounts(int)>($i1);

        r30 = r29.<com.android.server.accounts.AccountManagerService$UserAccounts: java.lang.Object dbLock>;

        entermonitor r30;

     label01:
        r1 = r29.<com.android.server.accounts.AccountManagerService$UserAccounts: java.lang.Object cacheLock>;

        entermonitor r1;

     label02:
        $r6 = r29.<com.android.server.accounts.AccountManagerService$UserAccounts: java.util.HashMap accountCache>;

        $r7 = virtualinvoke $r6.<java.util.HashMap: java.util.Collection values()>();

        r2 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();

     label03:
        r31 = r28;

     label04:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label12;

        $r19 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.accounts.Account[]) $r19;

        i0 = lengthof r3;

     label05:
        i4 = 0;

     label06:
        r31 = r28;

        if i4 >= i0 goto label10;

        r31 = r3[i4];

     label07:
        $r21 = r0.<com.android.server.accounts.AccountManagerBackupHelper$PendingAppPermission: java.lang.String accountDigest>;

        $r20 = r31.<android.accounts.Account: java.lang.String name>;

        $r22 = virtualinvoke $r20.<java.lang.String: byte[] getBytes()>();

        $r23 = staticinvoke <android.util.PackageUtils: java.lang.String computeSha256Digest(byte[])>($r22);

        $z4 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>($r23);

        if $z4 == 0 goto label09;

     label08:
        goto label10;

     label09:
        i4 = i4 + 1;

        goto label06;

     label10:
        if r31 == null goto label11;

        goto label12;

     label11:
        r28 = r31;

        goto label03;

     label12:
        exitmonitor r1;

     label13:
        exitmonitor r30;

     label14:
        if r31 != null goto label15;

        return 0;

     label15:
        $r8 = r0.<com.android.server.accounts.AccountManagerBackupHelper$PendingAppPermission: java.lang.String packageName>;

        $i2 = r0.<com.android.server.accounts.AccountManagerBackupHelper$PendingAppPermission: int userId>;

        r32 = virtualinvoke r27.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfoAsUser(java.lang.String,int,int)>($r8, 64, $i2);

     label16:
        $r9 = r32.<android.content.pm.PackageInfo: android.content.pm.Signature[] signatures>;

        r33 = staticinvoke <android.util.PackageUtils: java.lang.String[] computeSignaturesSha256Digests(android.content.pm.Signature[])>($r9);

        r34 = staticinvoke <android.util.PackageUtils: java.lang.String computeSignaturesSha256Digest(java.lang.String[])>(r33);

        $r10 = r0.<com.android.server.accounts.AccountManagerBackupHelper$PendingAppPermission: java.lang.String certDigest>;

        $z1 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r34);

        if $z1 != 0 goto label18;

        $r16 = r32.<android.content.pm.PackageInfo: android.content.pm.Signature[] signatures>;

        $i3 = lengthof $r16;

        if $i3 <= 1 goto label17;

        $r18 = r0.<com.android.server.accounts.AccountManagerBackupHelper$PendingAppPermission: java.lang.String certDigest>;

        $r17 = r33[0];

        $z3 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>($r17);

        if $z3 != 0 goto label18;

     label17:
        return 0;

     label18:
        $r11 = r32.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        i5 = $r11.<android.content.pm.ApplicationInfo: int uid>;

        $r12 = r0.<com.android.server.accounts.AccountManagerBackupHelper$PendingAppPermission: com.android.server.accounts.AccountManagerBackupHelper this$0>;

        $r13 = staticinvoke <com.android.server.accounts.AccountManagerBackupHelper: android.accounts.AccountManagerInternal access$100(com.android.server.accounts.AccountManagerBackupHelper)>($r12);

        $z2 = virtualinvoke $r13.<android.accounts.AccountManagerInternal: boolean hasAccountAccess(android.accounts.Account,int)>(r31, i5);

        if $z2 != 0 goto label19;

        $r14 = r0.<com.android.server.accounts.AccountManagerBackupHelper$PendingAppPermission: com.android.server.accounts.AccountManagerBackupHelper this$0>;

        $r15 = staticinvoke <com.android.server.accounts.AccountManagerBackupHelper: com.android.server.accounts.AccountManagerService access$000(com.android.server.accounts.AccountManagerBackupHelper)>($r14);

        virtualinvoke $r15.<com.android.server.accounts.AccountManagerService: void grantAppPermission(android.accounts.Account,java.lang.String,int)>(r31, "com.android.AccountManager.ACCOUNT_ACCESS_TOKEN_TYPE", i5);

     label19:
        return 1;

     label20:
        $r25 := @caughtexception;

        return 0;

     label21:
        $r24 := @caughtexception;

     label22:
        exitmonitor r1;

     label23:
        throw $r24;

     label24:
        $r26 := @caughtexception;

     label25:
        exitmonitor r30;

     label26:
        throw $r26;

        catch java.lang.Throwable from label01 to label02 with label24;
        catch java.lang.Throwable from label02 to label03 with label21;
        catch java.lang.Throwable from label04 to label05 with label21;
        catch java.lang.Throwable from label07 to label08 with label21;
        catch java.lang.Throwable from label12 to label13 with label21;
        catch java.lang.Throwable from label13 to label14 with label24;
        catch android.content.pm.PackageManager$NameNotFoundException from label15 to label16 with label20;
        catch java.lang.Throwable from label22 to label23 with label21;
        catch java.lang.Throwable from label23 to label24 with label24;
        catch java.lang.Throwable from label25 to label26 with label24;
    }
}
