class com.android.server.accounts.AccountManagerService$8 extends com.android.server.accounts.AccountManagerService$Session
{
    final com.android.server.accounts.AccountManagerService this$0;
    final android.accounts.Account val$account;
    final com.android.server.accounts.AccountManagerService$UserAccounts val$accounts;
    final java.lang.String val$authTokenType;
    final java.lang.String val$callerPkg;
    final byte[] val$callerPkgSigDigest;
    final int val$callerUid;
    final boolean val$customTokens;
    final android.os.Bundle val$loginOptions;
    final boolean val$notifyOnAuthFailure;
    final boolean val$permissionGranted;

    void <init>(com.android.server.accounts.AccountManagerService, com.android.server.accounts.AccountManagerService$UserAccounts, android.accounts.IAccountManagerResponse, java.lang.String, boolean, boolean, java.lang.String, boolean, android.os.Bundle, android.accounts.Account, java.lang.String, boolean, boolean, int, boolean, java.lang.String, byte[], com.android.server.accounts.AccountManagerService$UserAccounts)
    {
        com.android.server.accounts.AccountManagerService$8 r0;
        com.android.server.accounts.AccountManagerService r1;
        com.android.server.accounts.AccountManagerService$UserAccounts r2, r11;
        android.accounts.IAccountManagerResponse r3;
        java.lang.String r4, r5, r8, r9;
        boolean z0, z1, z2, z3, z4, z5;
        android.os.Bundle r6;
        android.accounts.Account r7;
        int i0;
        byte[] r10;

        r0 := @this: com.android.server.accounts.AccountManagerService$8;

        r1 := @parameter0: com.android.server.accounts.AccountManagerService;

        r2 := @parameter1: com.android.server.accounts.AccountManagerService$UserAccounts;

        r3 := @parameter2: android.accounts.IAccountManagerResponse;

        r4 := @parameter3: java.lang.String;

        z0 := @parameter4: boolean;

        z1 := @parameter5: boolean;

        r5 := @parameter6: java.lang.String;

        z2 := @parameter7: boolean;

        r6 := @parameter8: android.os.Bundle;

        r7 := @parameter9: android.accounts.Account;

        r8 := @parameter10: java.lang.String;

        z3 := @parameter11: boolean;

        z4 := @parameter12: boolean;

        i0 := @parameter13: int;

        z5 := @parameter14: boolean;

        r9 := @parameter15: java.lang.String;

        r10 := @parameter16: byte[];

        r11 := @parameter17: com.android.server.accounts.AccountManagerService$UserAccounts;

        r0.<com.android.server.accounts.AccountManagerService$8: com.android.server.accounts.AccountManagerService this$0> = r1;

        r0.<com.android.server.accounts.AccountManagerService$8: android.os.Bundle val$loginOptions> = r6;

        r0.<com.android.server.accounts.AccountManagerService$8: android.accounts.Account val$account> = r7;

        r0.<com.android.server.accounts.AccountManagerService$8: java.lang.String val$authTokenType> = r8;

        r0.<com.android.server.accounts.AccountManagerService$8: boolean val$notifyOnAuthFailure> = z3;

        r0.<com.android.server.accounts.AccountManagerService$8: boolean val$permissionGranted> = z4;

        r0.<com.android.server.accounts.AccountManagerService$8: int val$callerUid> = i0;

        r0.<com.android.server.accounts.AccountManagerService$8: boolean val$customTokens> = z5;

        r0.<com.android.server.accounts.AccountManagerService$8: java.lang.String val$callerPkg> = r9;

        r0.<com.android.server.accounts.AccountManagerService$8: byte[] val$callerPkgSigDigest> = r10;

        r0.<com.android.server.accounts.AccountManagerService$8: com.android.server.accounts.AccountManagerService$UserAccounts val$accounts> = r11;

        specialinvoke r0.<com.android.server.accounts.AccountManagerService$Session: void <init>(com.android.server.accounts.AccountManagerService,com.android.server.accounts.AccountManagerService$UserAccounts,android.accounts.IAccountManagerResponse,java.lang.String,boolean,boolean,java.lang.String,boolean)>(r1, r2, r3, r4, z0, z1, r5, z2);

        return;
    }

    public void onResult(android.os.Bundle)
    {
        com.android.server.accounts.AccountManagerService$8 r0;
        java.lang.String r1, $r6, $r9, $r11, $r15, $r21, r26, r27;
        long l0, $l3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        int $i1, $i2, $i5;
        com.android.server.accounts.AccountManagerService $r3, $r14, $r17, $r19;
        com.android.server.accounts.AccountManagerService$UserAccounts $r4, $r7, $r13, $r16;
        android.accounts.Account $r5, $r8, $r12, $r20;
        byte $b4;
        byte[] $r10;
        android.accounts.AccountAuthenticatorResponse $r18;
        android.os.Bundle $r22, r23;
        android.content.Intent r24, r30;
        android.os.Parcelable $r29;

        r0 := @this: com.android.server.accounts.AccountManagerService$8;

        r23 := @parameter0: android.os.Bundle;

        staticinvoke <android.os.Bundle: android.os.Bundle setDefusable(android.os.Bundle,boolean)>(r23, 1);

        if r23 == null goto label9;

        $z0 = virtualinvoke r23.<android.os.Bundle: boolean containsKey(java.lang.String)>("authTokenLabelKey");

        if $z0 == 0 goto label1;

        $r19 = r0.<com.android.server.accounts.AccountManagerService$8: com.android.server.accounts.AccountManagerService this$0>;

        $r20 = r0.<com.android.server.accounts.AccountManagerService$8: android.accounts.Account val$account>;

        $i5 = r0.<com.android.server.accounts.AccountManagerService$8: int val$callerUid>;

        $r18 = new android.accounts.AccountAuthenticatorResponse;

        specialinvoke $r18.<android.accounts.AccountAuthenticatorResponse: void <init>(android.accounts.IAccountAuthenticatorResponse)>(r0);

        $r21 = r0.<com.android.server.accounts.AccountManagerService$8: java.lang.String val$authTokenType>;

        r24 = staticinvoke <com.android.server.accounts.AccountManagerService: android.content.Intent access$1800(com.android.server.accounts.AccountManagerService,android.accounts.Account,java.lang.String,int,android.accounts.AccountAuthenticatorResponse,java.lang.String,boolean)>($r19, $r20, null, $i5, $r18, $r21, 1);

        $r22 = new android.os.Bundle;

        specialinvoke $r22.<android.os.Bundle: void <init>()>();

        virtualinvoke $r22.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("intent", r24);

        virtualinvoke r0.<com.android.server.accounts.AccountManagerService$8: void onResult(android.os.Bundle)>($r22);

        return;

     label1:
        r26 = virtualinvoke r23.<android.os.Bundle: java.lang.String getString(java.lang.String)>("authtoken");

        if r26 == null goto label7;

        r27 = virtualinvoke r23.<android.os.Bundle: java.lang.String getString(java.lang.String)>("authAccount");

        r1 = virtualinvoke r23.<android.os.Bundle: java.lang.String getString(java.lang.String)>("accountType");

        $z4 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z4 != 0 goto label6;

        $z5 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r27);

        if $z5 == 0 goto label2;

        goto label6;

     label2:
        $r8 = new android.accounts.Account;

        specialinvoke $r8.<android.accounts.Account: void <init>(java.lang.String,java.lang.String)>(r27, r1);

        $z6 = r0.<com.android.server.accounts.AccountManagerService$8: boolean val$customTokens>;

        if $z6 != 0 goto label3;

        $r17 = r0.<com.android.server.accounts.AccountManagerService$8: com.android.server.accounts.AccountManagerService this$0>;

        $r16 = r0.<com.android.server.accounts.AccountManagerService$8: com.android.server.accounts.AccountManagerService$UserAccounts mAccounts>;

        $r15 = r0.<com.android.server.accounts.AccountManagerService$8: java.lang.String val$authTokenType>;

        staticinvoke <com.android.server.accounts.AccountManagerService: boolean access$1900(com.android.server.accounts.AccountManagerService,com.android.server.accounts.AccountManagerService$UserAccounts,android.accounts.Account,java.lang.String,java.lang.String)>($r17, $r16, $r8, $r15, r26);

     label3:
        l0 = virtualinvoke r23.<android.os.Bundle: long getLong(java.lang.String,long)>("android.accounts.expiry", 0L);

        $z7 = r0.<com.android.server.accounts.AccountManagerService$8: boolean val$customTokens>;

        if $z7 == 0 goto label5;

        $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $b4 = l0 cmp $l3;

        if $b4 <= 0 goto label4;

        $r14 = r0.<com.android.server.accounts.AccountManagerService$8: com.android.server.accounts.AccountManagerService this$0>;

        $r13 = r0.<com.android.server.accounts.AccountManagerService$8: com.android.server.accounts.AccountManagerService$UserAccounts mAccounts>;

        $r12 = r0.<com.android.server.accounts.AccountManagerService$8: android.accounts.Account val$account>;

        $r11 = r0.<com.android.server.accounts.AccountManagerService$8: java.lang.String val$callerPkg>;

        $r10 = r0.<com.android.server.accounts.AccountManagerService$8: byte[] val$callerPkgSigDigest>;

        $r9 = r0.<com.android.server.accounts.AccountManagerService$8: java.lang.String val$authTokenType>;

        staticinvoke <com.android.server.accounts.AccountManagerService: void access$2000(com.android.server.accounts.AccountManagerService,com.android.server.accounts.AccountManagerService$UserAccounts,android.accounts.Account,java.lang.String,byte[],java.lang.String,java.lang.String,long)>($r14, $r13, $r12, $r11, $r10, $r9, r26, l0);

        goto label7;

     label4:
        goto label7;

     label5:
        goto label7;

     label6:
        virtualinvoke r0.<com.android.server.accounts.AccountManagerService$8: void onError(int,java.lang.String)>(5, "the type and name should not be empty");

        return;

     label7:
        $r29 = virtualinvoke r23.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>("intent");

        r30 = (android.content.Intent) $r29;

        if r30 == null goto label9;

        $z1 = r0.<com.android.server.accounts.AccountManagerService$8: boolean val$notifyOnAuthFailure>;

        if $z1 == 0 goto label9;

        $z2 = r0.<com.android.server.accounts.AccountManagerService$8: boolean val$customTokens>;

        if $z2 != 0 goto label9;

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $z3 = virtualinvoke r0.<com.android.server.accounts.AccountManagerService$8: boolean checkKeyIntent(int,android.content.Intent)>($i1, r30);

        if $z3 != 0 goto label8;

        virtualinvoke r0.<com.android.server.accounts.AccountManagerService$8: void onError(int,java.lang.String)>(5, "invalid intent in bundle returned");

        return;

     label8:
        $r3 = r0.<com.android.server.accounts.AccountManagerService$8: com.android.server.accounts.AccountManagerService this$0>;

        $r4 = r0.<com.android.server.accounts.AccountManagerService$8: com.android.server.accounts.AccountManagerService$UserAccounts mAccounts>;

        $r5 = r0.<com.android.server.accounts.AccountManagerService$8: android.accounts.Account val$account>;

        $r6 = virtualinvoke r23.<android.os.Bundle: java.lang.String getString(java.lang.String)>("authFailedMessage");

        $r7 = r0.<com.android.server.accounts.AccountManagerService$8: com.android.server.accounts.AccountManagerService$UserAccounts val$accounts>;

        $i2 = staticinvoke <com.android.server.accounts.AccountManagerService$UserAccounts: int access$800(com.android.server.accounts.AccountManagerService$UserAccounts)>($r7);

        staticinvoke <com.android.server.accounts.AccountManagerService: void access$2100(com.android.server.accounts.AccountManagerService,com.android.server.accounts.AccountManagerService$UserAccounts,android.accounts.Account,java.lang.CharSequence,android.content.Intent,java.lang.String,int)>($r3, $r4, $r5, $r6, r30, "android", $i2);

     label9:
        specialinvoke r0.<com.android.server.accounts.AccountManagerService$Session: void onResult(android.os.Bundle)>(r23);

        return;
    }

    public void run() throws android.os.RemoteException
    {
        com.android.server.accounts.AccountManagerService$8 r0;
        boolean $z0;
        android.os.Bundle $r1;
        java.lang.String $r2, $r5;
        android.accounts.Account $r3;
        android.accounts.IAccountAuthenticator $r4, $r6;

        r0 := @this: com.android.server.accounts.AccountManagerService$8;

        $z0 = r0.<com.android.server.accounts.AccountManagerService$8: boolean val$permissionGranted>;

        if $z0 != 0 goto label1;

        $r6 = r0.<com.android.server.accounts.AccountManagerService$8: android.accounts.IAccountAuthenticator mAuthenticator>;

        $r5 = r0.<com.android.server.accounts.AccountManagerService$8: java.lang.String val$authTokenType>;

        interfaceinvoke $r6.<android.accounts.IAccountAuthenticator: void getAuthTokenLabel(android.accounts.IAccountAuthenticatorResponse,java.lang.String)>(r0, $r5);

        goto label2;

     label1:
        $r4 = r0.<com.android.server.accounts.AccountManagerService$8: android.accounts.IAccountAuthenticator mAuthenticator>;

        $r3 = r0.<com.android.server.accounts.AccountManagerService$8: android.accounts.Account val$account>;

        $r2 = r0.<com.android.server.accounts.AccountManagerService$8: java.lang.String val$authTokenType>;

        $r1 = r0.<com.android.server.accounts.AccountManagerService$8: android.os.Bundle val$loginOptions>;

        interfaceinvoke $r4.<android.accounts.IAccountAuthenticator: void getAuthToken(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account,java.lang.String,android.os.Bundle)>(r0, $r3, $r2, $r1);

     label2:
        return;
    }

    protected java.lang.String toDebugString(long)
    {
        com.android.server.accounts.AccountManagerService$8 r0;
        long l0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2, $r6, $r9, $r16;
        android.accounts.Account $r5;
        android.os.Bundle $r12, r18;
        boolean $z0;

        r0 := @this: com.android.server.accounts.AccountManagerService$8;

        l0 := @parameter0: long;

        r18 = r0.<com.android.server.accounts.AccountManagerService$8: android.os.Bundle val$loginOptions>;

        if r18 == null goto label1;

        virtualinvoke r18.<android.os.Bundle: java.util.Set keySet()>();

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = specialinvoke r0.<com.android.server.accounts.AccountManagerService$Session: java.lang.String toDebugString(long)>(l0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", getAuthToken, ");

        $r5 = r0.<com.android.server.accounts.AccountManagerService$8: android.accounts.Account val$account>;

        $r6 = virtualinvoke $r5.<android.accounts.Account: java.lang.String toSafeString()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", authTokenType ");

        $r9 = r0.<com.android.server.accounts.AccountManagerService$8: java.lang.String val$authTokenType>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", loginOptions ");

        $r12 = r0.<com.android.server.accounts.AccountManagerService$8: android.os.Bundle val$loginOptions>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", notifyOnAuthFailure ");

        $z0 = r0.<com.android.server.accounts.AccountManagerService$8: boolean val$notifyOnAuthFailure>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r16 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r16;
    }
}
