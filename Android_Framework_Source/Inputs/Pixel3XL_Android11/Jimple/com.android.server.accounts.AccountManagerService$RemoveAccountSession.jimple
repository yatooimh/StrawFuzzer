class com.android.server.accounts.AccountManagerService$RemoveAccountSession extends com.android.server.accounts.AccountManagerService$Session
{
    final android.accounts.Account mAccount;
    final com.android.server.accounts.AccountManagerService this$0;

    public void <init>(com.android.server.accounts.AccountManagerService, com.android.server.accounts.AccountManagerService$UserAccounts, android.accounts.IAccountManagerResponse, android.accounts.Account, boolean)
    {
        com.android.server.accounts.AccountManagerService$RemoveAccountSession r0;
        com.android.server.accounts.AccountManagerService r1;
        com.android.server.accounts.AccountManagerService$UserAccounts r2;
        android.accounts.IAccountManagerResponse r3;
        android.accounts.Account r4;
        boolean z0;
        java.lang.String $r5, $r6;

        r0 := @this: com.android.server.accounts.AccountManagerService$RemoveAccountSession;

        r1 := @parameter0: com.android.server.accounts.AccountManagerService;

        r2 := @parameter1: com.android.server.accounts.AccountManagerService$UserAccounts;

        r3 := @parameter2: android.accounts.IAccountManagerResponse;

        r4 := @parameter3: android.accounts.Account;

        z0 := @parameter4: boolean;

        r0.<com.android.server.accounts.AccountManagerService$RemoveAccountSession: com.android.server.accounts.AccountManagerService this$0> = r1;

        $r6 = r4.<android.accounts.Account: java.lang.String type>;

        $r5 = r4.<android.accounts.Account: java.lang.String name>;

        specialinvoke r0.<com.android.server.accounts.AccountManagerService$Session: void <init>(com.android.server.accounts.AccountManagerService,com.android.server.accounts.AccountManagerService$UserAccounts,android.accounts.IAccountManagerResponse,java.lang.String,boolean,boolean,java.lang.String,boolean)>(r1, r2, r3, $r6, z0, 1, $r5, 0);

        r0.<com.android.server.accounts.AccountManagerService$RemoveAccountSession: android.accounts.Account mAccount> = r4;

        return;
    }

    public void onResult(android.os.Bundle)
    {
        com.android.server.accounts.AccountManagerService$RemoveAccountSession r0;
        android.os.Bundle r1;
        android.accounts.IAccountManagerResponse r2;
        boolean $z0, $z1, $z2, $z3;
        java.lang.StringBuilder $r4;
        java.lang.Class $r5;
        java.lang.String $r6, $r10;
        com.android.server.accounts.AccountManagerService $r11;
        com.android.server.accounts.AccountManagerService$UserAccounts $r12;
        android.accounts.Account $r13;
        int $i1;
        android.os.RemoteException $r14;

        r0 := @this: com.android.server.accounts.AccountManagerService$RemoveAccountSession;

        r1 := @parameter0: android.os.Bundle;

        staticinvoke <android.os.Bundle: android.os.Bundle setDefusable(android.os.Bundle,boolean)>(r1, 1);

        if r1 == null goto label5;

        $z0 = virtualinvoke r1.<android.os.Bundle: boolean containsKey(java.lang.String)>("booleanResult");

        if $z0 == 0 goto label5;

        $z1 = virtualinvoke r1.<android.os.Bundle: boolean containsKey(java.lang.String)>("intent");

        if $z1 != 0 goto label5;

        $z2 = virtualinvoke r1.<android.os.Bundle: boolean getBoolean(java.lang.String)>("booleanResult");

        if $z2 == 0 goto label1;

        $r11 = r0.<com.android.server.accounts.AccountManagerService$RemoveAccountSession: com.android.server.accounts.AccountManagerService this$0>;

        $r12 = r0.<com.android.server.accounts.AccountManagerService$RemoveAccountSession: com.android.server.accounts.AccountManagerService$UserAccounts mAccounts>;

        $r13 = r0.<com.android.server.accounts.AccountManagerService$RemoveAccountSession: android.accounts.Account mAccount>;

        $i1 = staticinvoke <com.android.server.accounts.AccountManagerService$RemoveAccountSession: int getCallingUid()>();

        staticinvoke <com.android.server.accounts.AccountManagerService: boolean access$1700(com.android.server.accounts.AccountManagerService,com.android.server.accounts.AccountManagerService$UserAccounts,android.accounts.Account,int)>($r11, $r12, $r13, $i1);

     label1:
        r2 = virtualinvoke r0.<com.android.server.accounts.AccountManagerService$RemoveAccountSession: android.accounts.IAccountManagerResponse getResponseAndClose()>();

        if r2 == null goto label5;

        $z3 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("AccountManagerService", 2);

        if $z3 == 0 goto label2;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getSimpleName()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" calling onResult() on response ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r10 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("AccountManagerService", $r10);

     label2:
        interfaceinvoke r2.<android.accounts.IAccountManagerResponse: void onResult(android.os.Bundle)>(r1);

     label3:
        goto label5;

     label4:
        $r14 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("AccountManagerService", "Error calling onResult()", $r14);

     label5:
        specialinvoke r0.<com.android.server.accounts.AccountManagerService$Session: void onResult(android.os.Bundle)>(r1);

        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    public void run() throws android.os.RemoteException
    {
        com.android.server.accounts.AccountManagerService$RemoveAccountSession r0;
        android.accounts.Account $r1;
        android.accounts.IAccountAuthenticator $r2;

        r0 := @this: com.android.server.accounts.AccountManagerService$RemoveAccountSession;

        $r2 = r0.<com.android.server.accounts.AccountManagerService$RemoveAccountSession: android.accounts.IAccountAuthenticator mAuthenticator>;

        $r1 = r0.<com.android.server.accounts.AccountManagerService$RemoveAccountSession: android.accounts.Account mAccount>;

        interfaceinvoke $r2.<android.accounts.IAccountAuthenticator: void getAccountRemovalAllowed(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account)>(r0, $r1);

        return;
    }

    protected java.lang.String toDebugString(long)
    {
        com.android.server.accounts.AccountManagerService$RemoveAccountSession r0;
        long l0;
        java.lang.StringBuilder $r2;
        java.lang.String $r3, $r8;
        android.accounts.Account $r6;

        r0 := @this: com.android.server.accounts.AccountManagerService$RemoveAccountSession;

        l0 := @parameter0: long;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = specialinvoke r0.<com.android.server.accounts.AccountManagerService$Session: java.lang.String toDebugString(long)>(l0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", removeAccount, account ");

        $r6 = r0.<com.android.server.accounts.AccountManagerService$RemoveAccountSession: android.accounts.Account mAccount>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }
}
