abstract class com.android.server.accounts.AccountManagerService$Session extends android.accounts.IAccountAuthenticatorResponse$Stub implements android.os.IBinder$DeathRecipient, android.content.ServiceConnection
{
    final java.lang.String mAccountName;
    final java.lang.String mAccountType;
    protected final com.android.server.accounts.AccountManagerService$UserAccounts mAccounts;
    final boolean mAuthDetailsRequired;
    android.accounts.IAccountAuthenticator mAuthenticator;
    final long mCreationTime;
    final boolean mExpectActivityLaunch;
    private int mNumErrors;
    private int mNumRequestContinued;
    public int mNumResults;
    android.accounts.IAccountManagerResponse mResponse;
    private final boolean mStripAuthTokenFromResult;
    final boolean mUpdateLastAuthenticatedTime;
    final com.android.server.accounts.AccountManagerService this$0;

    public void <init>(com.android.server.accounts.AccountManagerService, com.android.server.accounts.AccountManagerService$UserAccounts, android.accounts.IAccountManagerResponse, java.lang.String, boolean, boolean, java.lang.String, boolean)
    {
        com.android.server.accounts.AccountManagerService$Session r0;
        com.android.server.accounts.AccountManagerService r1;
        com.android.server.accounts.AccountManagerService$UserAccounts r2;
        android.accounts.IAccountManagerResponse r3;
        java.lang.String r4, r5;
        boolean z0, z1, z2;

        r0 := @this: com.android.server.accounts.AccountManagerService$Session;

        r1 := @parameter0: com.android.server.accounts.AccountManagerService;

        r2 := @parameter1: com.android.server.accounts.AccountManagerService$UserAccounts;

        r3 := @parameter2: android.accounts.IAccountManagerResponse;

        r4 := @parameter3: java.lang.String;

        z0 := @parameter4: boolean;

        z1 := @parameter5: boolean;

        r5 := @parameter6: java.lang.String;

        z2 := @parameter7: boolean;

        specialinvoke r0.<com.android.server.accounts.AccountManagerService$Session: void <init>(com.android.server.accounts.AccountManagerService,com.android.server.accounts.AccountManagerService$UserAccounts,android.accounts.IAccountManagerResponse,java.lang.String,boolean,boolean,java.lang.String,boolean,boolean)>(r1, r2, r3, r4, z0, z1, r5, z2, 0);

        return;
    }

    public void <init>(com.android.server.accounts.AccountManagerService, com.android.server.accounts.AccountManagerService$UserAccounts, android.accounts.IAccountManagerResponse, java.lang.String, boolean, boolean, java.lang.String, boolean, boolean)
    {
        com.android.server.accounts.AccountManagerService$Session r0;
        android.accounts.IAccountManagerResponse r1;
        java.lang.String r2, r3, $r6;
        boolean z0, z1, z2, z3;
        java.lang.IllegalArgumentException $r4;
        long $l0;
        java.util.LinkedHashMap $r5, r13;
        android.os.IBinder $r8;
        java.lang.Throwable $r9;
        android.os.RemoteException $r10;
        com.android.server.accounts.AccountManagerService r11;
        com.android.server.accounts.AccountManagerService$UserAccounts r12;

        r0 := @this: com.android.server.accounts.AccountManagerService$Session;

        r11 := @parameter0: com.android.server.accounts.AccountManagerService;

        r12 := @parameter1: com.android.server.accounts.AccountManagerService$UserAccounts;

        r1 := @parameter2: android.accounts.IAccountManagerResponse;

        r2 := @parameter3: java.lang.String;

        z0 := @parameter4: boolean;

        z1 := @parameter5: boolean;

        r3 := @parameter6: java.lang.String;

        z2 := @parameter7: boolean;

        z3 := @parameter8: boolean;

        r0.<com.android.server.accounts.AccountManagerService$Session: com.android.server.accounts.AccountManagerService this$0> = r11;

        specialinvoke r0.<android.accounts.IAccountAuthenticatorResponse$Stub: void <init>()>();

        r0.<com.android.server.accounts.AccountManagerService$Session: int mNumResults> = 0;

        r0.<com.android.server.accounts.AccountManagerService$Session: int mNumRequestContinued> = 0;

        r0.<com.android.server.accounts.AccountManagerService$Session: int mNumErrors> = 0;

        r0.<com.android.server.accounts.AccountManagerService$Session: android.accounts.IAccountAuthenticator mAuthenticator> = null;

        if r2 == null goto label10;

        r0.<com.android.server.accounts.AccountManagerService$Session: com.android.server.accounts.AccountManagerService$UserAccounts mAccounts> = r12;

        r0.<com.android.server.accounts.AccountManagerService$Session: boolean mStripAuthTokenFromResult> = z1;

        r0.<com.android.server.accounts.AccountManagerService$Session: android.accounts.IAccountManagerResponse mResponse> = r1;

        r0.<com.android.server.accounts.AccountManagerService$Session: java.lang.String mAccountType> = r2;

        r0.<com.android.server.accounts.AccountManagerService$Session: boolean mExpectActivityLaunch> = z0;

        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        r0.<com.android.server.accounts.AccountManagerService$Session: long mCreationTime> = $l0;

        r0.<com.android.server.accounts.AccountManagerService$Session: java.lang.String mAccountName> = r3;

        r0.<com.android.server.accounts.AccountManagerService$Session: boolean mAuthDetailsRequired> = z2;

        r0.<com.android.server.accounts.AccountManagerService$Session: boolean mUpdateLastAuthenticatedTime> = z3;

        r13 = staticinvoke <com.android.server.accounts.AccountManagerService: java.util.LinkedHashMap access$2800(com.android.server.accounts.AccountManagerService)>(r11);

        entermonitor r13;

     label01:
        $r5 = staticinvoke <com.android.server.accounts.AccountManagerService: java.util.LinkedHashMap access$2800(com.android.server.accounts.AccountManagerService)>(r11);

        $r6 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r5.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, r0);

        exitmonitor r13;

     label02:
        if r1 == null goto label06;

     label03:
        $r8 = interfaceinvoke r1.<android.accounts.IAccountManagerResponse: android.os.IBinder asBinder()>();

        interfaceinvoke $r8.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>(r0, 0);

     label04:
        goto label06;

     label05:
        $r10 := @caughtexception;

        r0.<com.android.server.accounts.AccountManagerService$Session: android.accounts.IAccountManagerResponse mResponse> = null;

        virtualinvoke r0.<com.android.server.accounts.AccountManagerService$Session: void binderDied()>();

     label06:
        return;

     label07:
        $r9 := @caughtexception;

     label08:
        exitmonitor r13;

     label09:
        throw $r9;

     label10:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("accountType is null");

        throw $r4;

        catch java.lang.Throwable from label01 to label02 with label07;
        catch android.os.RemoteException from label03 to label04 with label05;
        catch java.lang.Throwable from label08 to label09 with label07;
    }

    private boolean bindToAuthenticator(java.lang.String)
    {
        com.android.server.accounts.AccountManagerService$Session r0;
        com.android.server.accounts.AccountManagerService $r2, $r7, $r12, $r15;
        com.android.server.accounts.IAccountAuthenticatorCache $r3, $r13;
        android.accounts.AuthenticatorDescription $r4;
        com.android.server.accounts.AccountManagerService$UserAccounts $r5, $r6, $r14, $r16;
        int $i0, $i1, $i2, $i3, i8;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        android.content.Intent $r8;
        android.content.ComponentName $r10, $r21, $r27, $r33;
        android.content.Context $r17;
        android.os.UserHandle $r18;
        java.lang.StringBuilder $r19, $r25, $r31, $r37;
        java.lang.String $r24, $r29, $r36, $r41, r42;
        android.content.pm.ComponentInfo $r30;
        android.content.pm.RegisteredServicesCache$ServiceInfo r43;

        r0 := @this: com.android.server.accounts.AccountManagerService$Session;

        r42 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.accounts.AccountManagerService$Session: com.android.server.accounts.AccountManagerService this$0>;

        $r3 = staticinvoke <com.android.server.accounts.AccountManagerService: com.android.server.accounts.IAccountAuthenticatorCache access$3300(com.android.server.accounts.AccountManagerService)>($r2);

        $r4 = staticinvoke <android.accounts.AuthenticatorDescription: android.accounts.AuthenticatorDescription newKey(java.lang.String)>(r42);

        $r5 = r0.<com.android.server.accounts.AccountManagerService$Session: com.android.server.accounts.AccountManagerService$UserAccounts mAccounts>;

        $i0 = staticinvoke <com.android.server.accounts.AccountManagerService$UserAccounts: int access$800(com.android.server.accounts.AccountManagerService$UserAccounts)>($r5);

        r43 = interfaceinvoke $r3.<com.android.server.accounts.IAccountAuthenticatorCache: android.content.pm.RegisteredServicesCache$ServiceInfo getServiceInfo(android.accounts.AuthenticatorDescription,int)>($r4, $i0);

        if r43 != null goto label2;

        $z6 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("AccountManagerService", 2);

        if $z6 == 0 goto label1;

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("there is no authenticator for ");

        virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r42);

        virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", bailing out");

        $r41 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("AccountManagerService", $r41);

     label1:
        return 0;

     label2:
        $r7 = r0.<com.android.server.accounts.AccountManagerService$Session: com.android.server.accounts.AccountManagerService this$0>;

        $r6 = r0.<com.android.server.accounts.AccountManagerService$Session: com.android.server.accounts.AccountManagerService$UserAccounts mAccounts>;

        $i1 = staticinvoke <com.android.server.accounts.AccountManagerService$UserAccounts: int access$800(com.android.server.accounts.AccountManagerService$UserAccounts)>($r6);

        $z0 = staticinvoke <com.android.server.accounts.AccountManagerService: boolean access$3400(com.android.server.accounts.AccountManagerService,int)>($r7, $i1);

        if $z0 != 0 goto label3;

        $r30 = r43.<android.content.pm.RegisteredServicesCache$ServiceInfo: android.content.pm.ComponentInfo componentInfo>;

        $z5 = $r30.<android.content.pm.ComponentInfo: boolean directBootAware>;

        if $z5 != 0 goto label3;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Blocking binding to authenticator ");

        $r33 = r43.<android.content.pm.RegisteredServicesCache$ServiceInfo: android.content.ComponentName componentName>;

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r33);

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" which isn\'t encryption aware");

        $r36 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AccountManagerService", $r36);

        return 0;

     label3:
        $r8 = new android.content.Intent;

        specialinvoke $r8.<android.content.Intent: void <init>()>();

        virtualinvoke $r8.<android.content.Intent: android.content.Intent setAction(java.lang.String)>("android.accounts.AccountAuthenticator");

        $r10 = r43.<android.content.pm.RegisteredServicesCache$ServiceInfo: android.content.ComponentName componentName>;

        virtualinvoke $r8.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>($r10);

        $z1 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("AccountManagerService", 2);

        if $z1 == 0 goto label4;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("performing bindService to ");

        $r27 = r43.<android.content.pm.RegisteredServicesCache$ServiceInfo: android.content.ComponentName componentName>;

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r27);

        $r29 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("AccountManagerService", $r29);

     label4:
        i8 = 1;

        $r12 = r0.<com.android.server.accounts.AccountManagerService$Session: com.android.server.accounts.AccountManagerService this$0>;

        $r13 = staticinvoke <com.android.server.accounts.AccountManagerService: com.android.server.accounts.IAccountAuthenticatorCache access$3300(com.android.server.accounts.AccountManagerService)>($r12);

        $r14 = r0.<com.android.server.accounts.AccountManagerService$Session: com.android.server.accounts.AccountManagerService$UserAccounts mAccounts>;

        $i2 = staticinvoke <com.android.server.accounts.AccountManagerService$UserAccounts: int access$800(com.android.server.accounts.AccountManagerService$UserAccounts)>($r14);

        $z2 = interfaceinvoke $r13.<com.android.server.accounts.IAccountAuthenticatorCache: boolean getBindInstantServiceAllowed(int)>($i2);

        if $z2 == 0 goto label5;

        i8 = 1 | 4194304;

     label5:
        $r15 = r0.<com.android.server.accounts.AccountManagerService$Session: com.android.server.accounts.AccountManagerService this$0>;

        $r17 = $r15.<com.android.server.accounts.AccountManagerService: android.content.Context mContext>;

        $r16 = r0.<com.android.server.accounts.AccountManagerService$Session: com.android.server.accounts.AccountManagerService$UserAccounts mAccounts>;

        $i3 = staticinvoke <com.android.server.accounts.AccountManagerService$UserAccounts: int access$800(com.android.server.accounts.AccountManagerService$UserAccounts)>($r16);

        $r18 = staticinvoke <android.os.UserHandle: android.os.UserHandle of(int)>($i3);

        $z3 = virtualinvoke $r17.<android.content.Context: boolean bindServiceAsUser(android.content.Intent,android.content.ServiceConnection,int,android.os.UserHandle)>($r8, r0, i8, $r18);

        if $z3 != 0 goto label7;

        $z4 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("AccountManagerService", 2);

        if $z4 == 0 goto label6;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bindService to ");

        $r21 = r43.<android.content.pm.RegisteredServicesCache$ServiceInfo: android.content.ComponentName componentName>;

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r21);

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" failed");

        $r24 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("AccountManagerService", $r24);

     label6:
        return 0;

     label7:
        return 1;
    }

    private void close()
    {
        com.android.server.accounts.AccountManagerService$Session r0;
        java.util.LinkedHashMap r1, $r4;
        com.android.server.accounts.AccountManagerService $r2, $r3;
        java.lang.String $r5;
        java.lang.Object $r6;
        android.os.IBinder $r7;
        java.lang.Throwable $r8;
        android.accounts.IAccountManagerResponse r9;

        r0 := @this: com.android.server.accounts.AccountManagerService$Session;

        $r2 = r0.<com.android.server.accounts.AccountManagerService$Session: com.android.server.accounts.AccountManagerService this$0>;

        r1 = staticinvoke <com.android.server.accounts.AccountManagerService: java.util.LinkedHashMap access$2800(com.android.server.accounts.AccountManagerService)>($r2);

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.accounts.AccountManagerService$Session: com.android.server.accounts.AccountManagerService this$0>;

        $r4 = staticinvoke <com.android.server.accounts.AccountManagerService: java.util.LinkedHashMap access$2800(com.android.server.accounts.AccountManagerService)>($r3);

        $r5 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        $r6 = virtualinvoke $r4.<java.util.LinkedHashMap: java.lang.Object remove(java.lang.Object)>($r5);

        if $r6 != null goto label3;

        exitmonitor r1;

     label2:
        return;

     label3:
        exitmonitor r1;

     label4:
        r9 = r0.<com.android.server.accounts.AccountManagerService$Session: android.accounts.IAccountManagerResponse mResponse>;

        if r9 == null goto label5;

        $r7 = interfaceinvoke r9.<android.accounts.IAccountManagerResponse: android.os.IBinder asBinder()>();

        interfaceinvoke $r7.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>(r0, 0);

        r0.<com.android.server.accounts.AccountManagerService$Session: android.accounts.IAccountManagerResponse mResponse> = null;

     label5:
        virtualinvoke r0.<com.android.server.accounts.AccountManagerService$Session: void cancelTimeout()>();

        specialinvoke r0.<com.android.server.accounts.AccountManagerService$Session: void unbind()>();

        return;

     label6:
        $r8 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    private boolean isExportedSystemActivity(android.content.pm.ActivityInfo)
    {
        com.android.server.accounts.AccountManagerService$Session r0;
        android.content.pm.ActivityInfo r1;
        java.lang.String r2, $r3, $r4, $r6, $r8;
        boolean $z0, $z1, $z2, z3;
        java.lang.Class $r5, $r7;

        r0 := @this: com.android.server.accounts.AccountManagerService$Session;

        r1 := @parameter0: android.content.pm.ActivityInfo;

        r2 = r1.<android.content.pm.ActivityInfo: java.lang.String name>;

        $r4 = "android";

        $r3 = r1.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label2;

        $r5 = class "Landroid/accounts/GrantCredentialsPermissionActivity;";

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z1 != 0 goto label1;

        $r7 = class "Landroid/accounts/CantAddAccountActivity;";

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>();

        $z2 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z2 == 0 goto label2;

     label1:
        z3 = 1;

        goto label3;

     label2:
        z3 = 0;

     label3:
        return z3;
    }

    private void unbind()
    {
        com.android.server.accounts.AccountManagerService$Session r0;
        android.accounts.IAccountAuthenticator $r1;
        com.android.server.accounts.AccountManagerService $r2;
        android.content.Context $r3;

        r0 := @this: com.android.server.accounts.AccountManagerService$Session;

        $r1 = r0.<com.android.server.accounts.AccountManagerService$Session: android.accounts.IAccountAuthenticator mAuthenticator>;

        if $r1 == null goto label1;

        r0.<com.android.server.accounts.AccountManagerService$Session: android.accounts.IAccountAuthenticator mAuthenticator> = null;

        $r2 = r0.<com.android.server.accounts.AccountManagerService$Session: com.android.server.accounts.AccountManagerService this$0>;

        $r3 = $r2.<com.android.server.accounts.AccountManagerService: android.content.Context mContext>;

        virtualinvoke $r3.<android.content.Context: void unbindService(android.content.ServiceConnection)>(r0);

     label1:
        return;
    }

    void bind()
    {
        com.android.server.accounts.AccountManagerService$Session r0;
        boolean $z0, $z1;
        java.lang.String $r1, $r4, $r6, $r9, $r11;
        java.lang.StringBuilder $r2, $r7;

        r0 := @this: com.android.server.accounts.AccountManagerService$Session;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("AccountManagerService", 2);

        if $z0 == 0 goto label1;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("initiating bind to authenticator type ");

        $r9 = r0.<com.android.server.accounts.AccountManagerService$Session: java.lang.String mAccountType>;

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("AccountManagerService", $r11);

     label1:
        $r1 = r0.<com.android.server.accounts.AccountManagerService$Session: java.lang.String mAccountType>;

        $z1 = specialinvoke r0.<com.android.server.accounts.AccountManagerService$Session: boolean bindToAuthenticator(java.lang.String)>($r1);

        if $z1 != 0 goto label2;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bind attempt failed for ");

        $r4 = virtualinvoke r0.<com.android.server.accounts.AccountManagerService$Session: java.lang.String toDebugString()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("AccountManagerService", $r6);

        virtualinvoke r0.<com.android.server.accounts.AccountManagerService$Session: void onError(int,java.lang.String)>(1, "bind failure");

     label2:
        return;
    }

    public void binderDied()
    {
        com.android.server.accounts.AccountManagerService$Session r0;

        r0 := @this: com.android.server.accounts.AccountManagerService$Session;

        r0.<com.android.server.accounts.AccountManagerService$Session: android.accounts.IAccountManagerResponse mResponse> = null;

        specialinvoke r0.<com.android.server.accounts.AccountManagerService$Session: void close()>();

        return;
    }

    public void cancelTimeout()
    {
        com.android.server.accounts.AccountManagerService$Session r0;
        com.android.server.accounts.AccountManagerService $r1;
        com.android.server.accounts.AccountManagerService$MessageHandler $r2;

        r0 := @this: com.android.server.accounts.AccountManagerService$Session;

        $r1 = r0.<com.android.server.accounts.AccountManagerService$Session: com.android.server.accounts.AccountManagerService this$0>;

        $r2 = $r1.<com.android.server.accounts.AccountManagerService: com.android.server.accounts.AccountManagerService$MessageHandler mHandler>;

        virtualinvoke $r2.<com.android.server.accounts.AccountManagerService$MessageHandler: void removeMessages(int,java.lang.Object)>(3, r0);

        return;
    }

    protected boolean checkKeyIntent(int, android.content.Intent)
    {
        com.android.server.accounts.AccountManagerService$Session r0;
        int i0, i2, $i3, $i4, $i5;
        long l1;
        boolean z0, $z1;
        android.content.ClipData $r1, $r13;
        com.android.server.accounts.AccountManagerService $r3;
        android.content.Context $r4;
        android.content.pm.PackageManager $r5;
        com.android.server.accounts.AccountManagerService$UserAccounts $r6;
        android.content.pm.ApplicationInfo $r7;
        java.lang.Object $r8;
        java.lang.Object[] $r9;
        java.lang.String $r10, $r11, $r12, r20;
        java.lang.Throwable $r14, $r15, r21;
        android.content.Intent r16;
        android.content.pm.ResolveInfo r17;
        android.content.pm.ActivityInfo r18;
        android.content.pm.PackageManagerInternal r19;

        r0 := @this: com.android.server.accounts.AccountManagerService$Session;

        i0 := @parameter0: int;

        r16 := @parameter1: android.content.Intent;

        $r1 = virtualinvoke r16.<android.content.Intent: android.content.ClipData getClipData()>();

        if $r1 != null goto label01;

        $r13 = staticinvoke <android.content.ClipData: android.content.ClipData newPlainText(java.lang.CharSequence,java.lang.CharSequence)>(null, null);

        virtualinvoke r16.<android.content.Intent: void setClipData(android.content.ClipData)>($r13);

     label01:
        $i3 = virtualinvoke r16.<android.content.Intent: int getFlags()>();

        $i4 = $i3 & -196;

        virtualinvoke r16.<android.content.Intent: android.content.Intent setFlags(int)>($i4);

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label02:
        $r3 = r0.<com.android.server.accounts.AccountManagerService$Session: com.android.server.accounts.AccountManagerService this$0>;

        $r4 = $r3.<com.android.server.accounts.AccountManagerService: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r6 = r0.<com.android.server.accounts.AccountManagerService$Session: com.android.server.accounts.AccountManagerService$UserAccounts mAccounts>;

        $i5 = staticinvoke <com.android.server.accounts.AccountManagerService$UserAccounts: int access$800(com.android.server.accounts.AccountManagerService$UserAccounts)>($r6);

        r17 = virtualinvoke $r5.<android.content.pm.PackageManager: android.content.pm.ResolveInfo resolveActivityAsUser(android.content.Intent,int,int)>(r16, 0, $i5);

     label03:
        if r17 != null goto label04;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return 0;

     label04:
        r18 = r17.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r7 = r18.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        i2 = $r7.<android.content.pm.ApplicationInfo: int uid>;

        $r8 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/content/pm/PackageManagerInternal;");

        r19 = (android.content.pm.PackageManagerInternal) $r8;

        z0 = specialinvoke r0.<com.android.server.accounts.AccountManagerService$Session: boolean isExportedSystemActivity(android.content.pm.ActivityInfo)>(r18);

     label05:
        if z0 != 0 goto label09;

     label06:
        $z1 = virtualinvoke r19.<android.content.pm.PackageManagerInternal: boolean hasSignatureCapability(int,int,int)>(i2, i0, 16);

        if $z1 != 0 goto label09;

        r20 = r18.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $r9 = newarray (java.lang.Object)[3];

        $r10 = r18.<android.content.pm.ActivityInfo: java.lang.String name>;

        $r9[0] = $r10;

        $r9[1] = r20;

        $r11 = r0.<com.android.server.accounts.AccountManagerService$Session: java.lang.String mAccountType>;

        $r9[2] = $r11;

        $r12 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("KEY_INTENT resolved to an Activity (%s) in a package (%s) that does not share a signature with the supplying authenticator (%s).", $r9);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("AccountManagerService", $r12);

     label07:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return 0;

     label08:
        $r15 := @caughtexception;

        r21 = $r15;

        goto label11;

     label09:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return 1;

     label10:
        $r14 := @caughtexception;

        r21 = $r14;

     label11:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw r21;

        catch java.lang.Throwable from label02 to label03 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label06 to label07 with label08;
    }

    android.accounts.IAccountManagerResponse getResponseAndClose()
    {
        com.android.server.accounts.AccountManagerService$Session r0;
        android.accounts.IAccountManagerResponse r1, $r2;

        r0 := @this: com.android.server.accounts.AccountManagerService$Session;

        $r2 = r0.<com.android.server.accounts.AccountManagerService$Session: android.accounts.IAccountManagerResponse mResponse>;

        if $r2 != null goto label1;

        return null;

     label1:
        r1 = r0.<com.android.server.accounts.AccountManagerService$Session: android.accounts.IAccountManagerResponse mResponse>;

        specialinvoke r0.<com.android.server.accounts.AccountManagerService$Session: void close()>();

        return r1;
    }

    public void onError(int, java.lang.String)
    {
        com.android.server.accounts.AccountManagerService$Session r0;
        int i0, $i1, $i2;
        android.accounts.IAccountManagerResponse r1;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r3;
        java.lang.Class $r4;
        java.lang.String $r5, $r9, r11;
        android.os.RemoteException $r10;

        r0 := @this: com.android.server.accounts.AccountManagerService$Session;

        i0 := @parameter0: int;

        r11 := @parameter1: java.lang.String;

        $i1 = r0.<com.android.server.accounts.AccountManagerService$Session: int mNumErrors>;

        $i2 = $i1 + 1;

        r0.<com.android.server.accounts.AccountManagerService$Session: int mNumErrors> = $i2;

        r1 = virtualinvoke r0.<com.android.server.accounts.AccountManagerService$Session: android.accounts.IAccountManagerResponse getResponseAndClose()>();

        if r1 == null goto label4;

        $z1 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("AccountManagerService", 2);

        if $z1 == 0 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getSimpleName()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" calling onError() on response ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("AccountManagerService", $r9);

     label1:
        interfaceinvoke r1.<android.accounts.IAccountManagerResponse: void onError(int,java.lang.String)>(i0, r11);

     label2:
        goto label5;

     label3:
        $r10 := @caughtexception;

        $z2 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("AccountManagerService", 2);

        if $z2 == 0 goto label2;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>("AccountManagerService", "Session.onError: caught RemoteException while responding", $r10);

        goto label2;

     label4:
        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("AccountManagerService", 2);

        if $z0 == 0 goto label5;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("AccountManagerService", "Session.onError: already closed");

     label5:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void onRequestContinued()
    {
        com.android.server.accounts.AccountManagerService$Session r0;
        int $i0, $i1;

        r0 := @this: com.android.server.accounts.AccountManagerService$Session;

        $i0 = r0.<com.android.server.accounts.AccountManagerService$Session: int mNumRequestContinued>;

        $i1 = $i0 + 1;

        r0.<com.android.server.accounts.AccountManagerService$Session: int mNumRequestContinued> = $i1;

        return;
    }

    public void onResult(android.os.Bundle)
    {
        com.android.server.accounts.AccountManagerService$Session r0;
        int $i0, $i1, $i2, $i3, $i6, $i7;
        boolean $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z11, $z12, $z13, z14, z15, $z16, z17, z18, $z19, $z20;
        java.lang.String $r2, $r4, $r8, $r10, $r14, $r15, $r22, $r23, $r27, $r28, $r31, $r32, r39, r40;
        java.lang.Class $r3, $r9;
        android.accounts.Account $r16, $r26, $r30;
        com.android.server.accounts.AccountManagerService$UserAccounts $r17, $r20, $r25;
        com.android.server.accounts.AccountManagerService$NotificationId $r18;
        android.os.UserHandle $r19;
        android.os.Parcelable $r21;
        com.android.server.accounts.AccountManagerService $r24, $r33, r42;
        com.android.server.accounts.AccountsDb $r29;
        android.os.RemoteException $r34;
        android.os.Bundle r35;
        android.content.Intent r36, r37;
        long l9;
        android.accounts.IAccountManagerResponse r43;
        java.lang.StringBuilder r44, r45;

        r0 := @this: com.android.server.accounts.AccountManagerService$Session;

        r35 := @parameter0: android.os.Bundle;

        staticinvoke <android.os.Bundle: android.os.Bundle setDefusable(android.os.Bundle,boolean)>(r35, 1);

        $i0 = r0.<com.android.server.accounts.AccountManagerService$Session: int mNumResults>;

        $i1 = $i0 + 1;

        r0.<com.android.server.accounts.AccountManagerService$Session: int mNumResults> = $i1;

        r36 = null;

        if r35 == null goto label09;

        z14 = virtualinvoke r35.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>("booleanResult", 0);

        $z9 = virtualinvoke r35.<android.os.Bundle: boolean containsKey(java.lang.String)>("authAccount");

        if $z9 == 0 goto label01;

        $z12 = virtualinvoke r35.<android.os.Bundle: boolean containsKey(java.lang.String)>("accountType");

        if $z12 == 0 goto label01;

        z15 = 1;

        goto label02;

     label01:
        z15 = 0;

     label02:
        $z16 = r0.<com.android.server.accounts.AccountManagerService$Session: boolean mUpdateLastAuthenticatedTime>;

        if $z16 == 0 goto label04;

        if z14 != 0 goto label03;

        if z15 == 0 goto label04;

     label03:
        z17 = 1;

        goto label05;

     label04:
        z17 = 0;

     label05:
        if z17 != 0 goto label06;

        $z11 = r0.<com.android.server.accounts.AccountManagerService$Session: boolean mAuthDetailsRequired>;

        if $z11 == 0 goto label09;

     label06:
        $r24 = r0.<com.android.server.accounts.AccountManagerService$Session: com.android.server.accounts.AccountManagerService this$0>;

        $r23 = r0.<com.android.server.accounts.AccountManagerService$Session: java.lang.String mAccountName>;

        $r22 = r0.<com.android.server.accounts.AccountManagerService$Session: java.lang.String mAccountType>;

        z18 = staticinvoke <com.android.server.accounts.AccountManagerService: boolean access$2900(com.android.server.accounts.AccountManagerService,java.lang.String,java.lang.String)>($r24, $r23, $r22);

        if z17 == 0 goto label07;

        if z18 == 0 goto label07;

        $r33 = r0.<com.android.server.accounts.AccountManagerService$Session: com.android.server.accounts.AccountManagerService this$0>;

        $r30 = new android.accounts.Account;

        $r32 = r0.<com.android.server.accounts.AccountManagerService$Session: java.lang.String mAccountName>;

        $r31 = r0.<com.android.server.accounts.AccountManagerService$Session: java.lang.String mAccountType>;

        specialinvoke $r30.<android.accounts.Account: void <init>(java.lang.String,java.lang.String)>($r32, $r31);

        staticinvoke <com.android.server.accounts.AccountManagerService: boolean access$3000(com.android.server.accounts.AccountManagerService,android.accounts.Account)>($r33, $r30);

     label07:
        $z19 = r0.<com.android.server.accounts.AccountManagerService$Session: boolean mAuthDetailsRequired>;

        if $z19 == 0 goto label09;

        l9 = -1L;

        if z18 == 0 goto label08;

        $r25 = r0.<com.android.server.accounts.AccountManagerService$Session: com.android.server.accounts.AccountManagerService$UserAccounts mAccounts>;

        $r29 = $r25.<com.android.server.accounts.AccountManagerService$UserAccounts: com.android.server.accounts.AccountsDb accountsDb>;

        $r26 = new android.accounts.Account;

        $r28 = r0.<com.android.server.accounts.AccountManagerService$Session: java.lang.String mAccountName>;

        $r27 = r0.<com.android.server.accounts.AccountManagerService$Session: java.lang.String mAccountType>;

        specialinvoke $r26.<android.accounts.Account: void <init>(java.lang.String,java.lang.String)>($r28, $r27);

        l9 = virtualinvoke $r29.<com.android.server.accounts.AccountsDb: long findAccountLastAuthenticatedTime(android.accounts.Account)>($r26);

     label08:
        virtualinvoke r35.<android.os.Bundle: void putLong(java.lang.String,long)>("lastAuthenticatedTime", l9);

     label09:
        if r35 == null goto label10;

        $r21 = virtualinvoke r35.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>("intent");

        r37 = (android.content.Intent) $r21;

        r36 = r37;

        if r37 == null goto label10;

        r36 = r37;

        $i7 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $z8 = virtualinvoke r0.<com.android.server.accounts.AccountManagerService$Session: boolean checkKeyIntent(int,android.content.Intent)>($i7, r37);

        if $z8 != 0 goto label10;

        virtualinvoke r0.<com.android.server.accounts.AccountManagerService$Session: void onError(int,java.lang.String)>(5, "invalid intent in bundle returned");

        return;

     label10:
        if r35 == null goto label11;

        $r15 = virtualinvoke r35.<android.os.Bundle: java.lang.String getString(java.lang.String)>("authtoken");

        $z5 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r15);

        if $z5 != 0 goto label11;

        r39 = virtualinvoke r35.<android.os.Bundle: java.lang.String getString(java.lang.String)>("authAccount");

        r40 = virtualinvoke r35.<android.os.Bundle: java.lang.String getString(java.lang.String)>("accountType");

        $z6 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r39);

        if $z6 != 0 goto label11;

        $z7 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r40);

        if $z7 != 0 goto label11;

        $r16 = new android.accounts.Account;

        specialinvoke $r16.<android.accounts.Account: void <init>(java.lang.String,java.lang.String)>(r39, r40);

        r42 = r0.<com.android.server.accounts.AccountManagerService$Session: com.android.server.accounts.AccountManagerService this$0>;

        $r17 = r0.<com.android.server.accounts.AccountManagerService$Session: com.android.server.accounts.AccountManagerService$UserAccounts mAccounts>;

        $r18 = staticinvoke <com.android.server.accounts.AccountManagerService: com.android.server.accounts.AccountManagerService$NotificationId access$3100(com.android.server.accounts.AccountManagerService,com.android.server.accounts.AccountManagerService$UserAccounts,android.accounts.Account)>(r42, $r17, $r16);

        $r19 = new android.os.UserHandle;

        $r20 = r0.<com.android.server.accounts.AccountManagerService$Session: com.android.server.accounts.AccountManagerService$UserAccounts mAccounts>;

        $i6 = staticinvoke <com.android.server.accounts.AccountManagerService$UserAccounts: int access$800(com.android.server.accounts.AccountManagerService$UserAccounts)>($r20);

        specialinvoke $r19.<android.os.UserHandle: void <init>(int)>($i6);

        staticinvoke <com.android.server.accounts.AccountManagerService: void access$3200(com.android.server.accounts.AccountManagerService,com.android.server.accounts.AccountManagerService$NotificationId,android.os.UserHandle)>(r42, $r18, $r19);

     label11:
        $z20 = r0.<com.android.server.accounts.AccountManagerService$Session: boolean mExpectActivityLaunch>;

        if $z20 == 0 goto label12;

        if r35 == null goto label12;

        $z4 = virtualinvoke r35.<android.os.Bundle: boolean containsKey(java.lang.String)>("intent");

        if $z4 == 0 goto label12;

        r43 = r0.<com.android.server.accounts.AccountManagerService$Session: android.accounts.IAccountManagerResponse mResponse>;

        goto label13;

     label12:
        r43 = virtualinvoke r0.<com.android.server.accounts.AccountManagerService$Session: android.accounts.IAccountManagerResponse getResponseAndClose()>();

     label13:
        if r43 == null goto label26;

        if r35 != null goto label17;

     label14:
        $z3 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("AccountManagerService", 2);

        if $z3 == 0 goto label15;

        r44 = new java.lang.StringBuilder;

        specialinvoke r44.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.String getSimpleName()>();

        virtualinvoke r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        virtualinvoke r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" calling onError() on response ");

        virtualinvoke r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r43);

        $r14 = virtualinvoke r44.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("AccountManagerService", $r14);

     label15:
        interfaceinvoke r43.<android.accounts.IAccountManagerResponse: void onError(int,java.lang.String)>(5, "null bundle returned");

     label16:
        goto label24;

     label17:
        $z1 = r0.<com.android.server.accounts.AccountManagerService$Session: boolean mStripAuthTokenFromResult>;

        if $z1 == 0 goto label18;

        virtualinvoke r35.<android.os.Bundle: void remove(java.lang.String)>("authtoken");

     label18:
        $z2 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("AccountManagerService", 2);

        if $z2 == 0 goto label19;

        r45 = new java.lang.StringBuilder;

        specialinvoke r45.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getSimpleName()>();

        virtualinvoke r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" calling onResult() on response ");

        virtualinvoke r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r43);

        $r8 = virtualinvoke r45.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("AccountManagerService", $r8);

     label19:
        $i2 = virtualinvoke r35.<android.os.Bundle: int getInt(java.lang.String,int)>("errorCode", -1);

        if $i2 <= 0 goto label23;

     label20:
        if r36 != null goto label23;

     label21:
        $i3 = virtualinvoke r35.<android.os.Bundle: int getInt(java.lang.String)>("errorCode");

        $r2 = virtualinvoke r35.<android.os.Bundle: java.lang.String getString(java.lang.String)>("errorMessage");

        interfaceinvoke r43.<android.accounts.IAccountManagerResponse: void onError(int,java.lang.String)>($i3, $r2);

     label22:
        goto label24;

     label23:
        interfaceinvoke r43.<android.accounts.IAccountManagerResponse: void onResult(android.os.Bundle)>(r35);

     label24:
        goto label26;

     label25:
        $r34 := @caughtexception;

        $z13 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("AccountManagerService", 2);

        if $z13 == 0 goto label26;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>("AccountManagerService", "failure while notifying response", $r34);

     label26:
        return;

        catch android.os.RemoteException from label14 to label15 with label25;
        catch android.os.RemoteException from label15 to label16 with label25;
        catch android.os.RemoteException from label17 to label18 with label25;
        catch android.os.RemoteException from label18 to label19 with label25;
        catch android.os.RemoteException from label19 to label20 with label25;
        catch android.os.RemoteException from label21 to label22 with label25;
        catch android.os.RemoteException from label23 to label24 with label25;
    }

    public void onServiceConnected(android.content.ComponentName, android.os.IBinder)
    {
        com.android.server.accounts.AccountManagerService$Session r0;
        android.os.IBinder r1;
        android.accounts.IAccountAuthenticator $r2;
        android.os.RemoteException $r3;
        android.content.ComponentName r4;

        r0 := @this: com.android.server.accounts.AccountManagerService$Session;

        r4 := @parameter0: android.content.ComponentName;

        r1 := @parameter1: android.os.IBinder;

        $r2 = staticinvoke <android.accounts.IAccountAuthenticator$Stub: android.accounts.IAccountAuthenticator asInterface(android.os.IBinder)>(r1);

        r0.<com.android.server.accounts.AccountManagerService$Session: android.accounts.IAccountAuthenticator mAuthenticator> = $r2;

     label1:
        virtualinvoke r0.<com.android.server.accounts.AccountManagerService$Session: void run()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        virtualinvoke r0.<com.android.server.accounts.AccountManagerService$Session: void onError(int,java.lang.String)>(1, "remote exception");

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void onServiceDisconnected(android.content.ComponentName)
    {
        com.android.server.accounts.AccountManagerService$Session r0;
        android.os.RemoteException $r1;
        boolean $z0;
        android.content.ComponentName r2;
        android.accounts.IAccountManagerResponse r3;

        r0 := @this: com.android.server.accounts.AccountManagerService$Session;

        r2 := @parameter0: android.content.ComponentName;

        r0.<com.android.server.accounts.AccountManagerService$Session: android.accounts.IAccountAuthenticator mAuthenticator> = null;

        r3 = virtualinvoke r0.<com.android.server.accounts.AccountManagerService$Session: android.accounts.IAccountManagerResponse getResponseAndClose()>();

        if r3 == null goto label4;

     label1:
        interfaceinvoke r3.<android.accounts.IAccountManagerResponse: void onError(int,java.lang.String)>(1, "disconnected");

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("AccountManagerService", 2);

        if $z0 == 0 goto label4;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>("AccountManagerService", "Session.onServiceDisconnected: caught RemoteException while responding", $r1);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void onTimedOut()
    {
        com.android.server.accounts.AccountManagerService$Session r0;
        android.os.RemoteException $r1;
        boolean $z0;
        android.accounts.IAccountManagerResponse r2;

        r0 := @this: com.android.server.accounts.AccountManagerService$Session;

        r2 = virtualinvoke r0.<com.android.server.accounts.AccountManagerService$Session: android.accounts.IAccountManagerResponse getResponseAndClose()>();

        if r2 == null goto label4;

     label1:
        interfaceinvoke r2.<android.accounts.IAccountManagerResponse: void onError(int,java.lang.String)>(1, "timeout");

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("AccountManagerService", 2);

        if $z0 == 0 goto label4;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>("AccountManagerService", "Session.onTimedOut: caught RemoteException while responding", $r1);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public abstract void run() throws android.os.RemoteException;

    protected java.lang.String toDebugString()
    {
        com.android.server.accounts.AccountManagerService$Session r0;
        long $l0;
        java.lang.String $r1;

        r0 := @this: com.android.server.accounts.AccountManagerService$Session;

        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r1 = virtualinvoke r0.<com.android.server.accounts.AccountManagerService$Session: java.lang.String toDebugString(long)>($l0);

        return $r1;
    }

    protected java.lang.String toDebugString(long)
    {
        com.android.server.accounts.AccountManagerService$Session r0;
        long l0, $l4, $l5;
        java.lang.StringBuilder $r2;
        boolean $z0, z1;
        android.accounts.IAccountAuthenticator $r6;
        int $i1, $i2, $i3;
        double $d0, $d1;
        java.lang.String $r16;

        r0 := @this: com.android.server.accounts.AccountManagerService$Session;

        l0 := @parameter0: long;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Session: expectLaunch ");

        $z0 = r0.<com.android.server.accounts.AccountManagerService$Session: boolean mExpectActivityLaunch>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", connected ");

        $r6 = r0.<com.android.server.accounts.AccountManagerService$Session: android.accounts.IAccountAuthenticator mAuthenticator>;

        if $r6 == null goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", stats (");

        $i1 = r0.<com.android.server.accounts.AccountManagerService$Session: int mNumResults>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $i2 = r0.<com.android.server.accounts.AccountManagerService$Session: int mNumRequestContinued>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $i3 = r0.<com.android.server.accounts.AccountManagerService$Session: int mNumErrors>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("), lifetime ");

        $l4 = r0.<com.android.server.accounts.AccountManagerService$Session: long mCreationTime>;

        $l5 = l0 - $l4;

        $d0 = (double) $l5;

        $d1 = $d0 / 1000.0;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d1);

        $r16 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r16;
    }
}
