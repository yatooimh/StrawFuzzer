abstract class com.android.server.accounts.AccountManagerService$StartAccountSession extends com.android.server.accounts.AccountManagerService$Session
{
    private final boolean mIsPasswordForwardingAllowed;
    final com.android.server.accounts.AccountManagerService this$0;

    public void <init>(com.android.server.accounts.AccountManagerService, com.android.server.accounts.AccountManagerService$UserAccounts, android.accounts.IAccountManagerResponse, java.lang.String, boolean, java.lang.String, boolean, boolean, boolean)
    {
        com.android.server.accounts.AccountManagerService$StartAccountSession r0;
        com.android.server.accounts.AccountManagerService r1;
        com.android.server.accounts.AccountManagerService$UserAccounts r2;
        android.accounts.IAccountManagerResponse r3;
        java.lang.String r4, r5;
        boolean z0, z1, z2, z3;

        r0 := @this: com.android.server.accounts.AccountManagerService$StartAccountSession;

        r1 := @parameter0: com.android.server.accounts.AccountManagerService;

        r2 := @parameter1: com.android.server.accounts.AccountManagerService$UserAccounts;

        r3 := @parameter2: android.accounts.IAccountManagerResponse;

        r4 := @parameter3: java.lang.String;

        z0 := @parameter4: boolean;

        r5 := @parameter5: java.lang.String;

        z1 := @parameter6: boolean;

        z2 := @parameter7: boolean;

        z3 := @parameter8: boolean;

        r0.<com.android.server.accounts.AccountManagerService$StartAccountSession: com.android.server.accounts.AccountManagerService this$0> = r1;

        specialinvoke r0.<com.android.server.accounts.AccountManagerService$Session: void <init>(com.android.server.accounts.AccountManagerService,com.android.server.accounts.AccountManagerService$UserAccounts,android.accounts.IAccountManagerResponse,java.lang.String,boolean,boolean,java.lang.String,boolean,boolean)>(r1, r2, r3, r4, z0, 1, r5, z1, z2);

        r0.<com.android.server.accounts.AccountManagerService$StartAccountSession: boolean mIsPasswordForwardingAllowed> = z3;

        return;
    }

    public void onResult(android.os.Bundle)
    {
        com.android.server.accounts.AccountManagerService$StartAccountSession r0;
        int $i0, $i1, $i2, $i5, $i7;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        com.android.server.accounts.AccountManagerService $r2, $r11, $r13, $r23;
        java.lang.String $r3, $r6, $r10, $r12, $r16, $r20, r32, $r33;
        java.lang.StringBuilder $r4, $r14;
        java.lang.Class $r5, $r15;
        android.os.Parcelable $r21;
        java.lang.Throwable $r22;
        android.os.Bundle r24, r31, $r35;
        android.content.Intent r25, r26;
        android.accounts.IAccountManagerResponse r28;
        com.android.server.accounts.CryptoHelper $r34;

        r0 := @this: com.android.server.accounts.AccountManagerService$StartAccountSession;

        r24 := @parameter0: android.os.Bundle;

        staticinvoke <android.os.Bundle: android.os.Bundle setDefusable(android.os.Bundle,boolean)>(r24, 1);

        $i0 = r0.<com.android.server.accounts.AccountManagerService$StartAccountSession: int mNumResults>;

        $i1 = $i0 + 1;

        r0.<com.android.server.accounts.AccountManagerService$StartAccountSession: int mNumResults> = $i1;

        r25 = null;

        if r24 == null goto label01;

        $r21 = virtualinvoke r24.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>("intent");

        r26 = (android.content.Intent) $r21;

        r25 = r26;

        if r26 == null goto label01;

        r25 = r26;

        $i7 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $z6 = virtualinvoke r0.<com.android.server.accounts.AccountManagerService$StartAccountSession: boolean checkKeyIntent(int,android.content.Intent)>($i7, r26);

        if $z6 != 0 goto label01;

        virtualinvoke r0.<com.android.server.accounts.AccountManagerService$StartAccountSession: void onError(int,java.lang.String)>(5, "invalid intent in bundle returned");

        return;

     label01:
        $z8 = r0.<com.android.server.accounts.AccountManagerService$StartAccountSession: boolean mExpectActivityLaunch>;

        if $z8 == 0 goto label02;

        if r24 == null goto label02;

        $z5 = virtualinvoke r24.<android.os.Bundle: boolean containsKey(java.lang.String)>("intent");

        if $z5 == 0 goto label02;

        r28 = r0.<com.android.server.accounts.AccountManagerService$StartAccountSession: android.accounts.IAccountManagerResponse mResponse>;

        goto label03;

     label02:
        r28 = virtualinvoke r0.<com.android.server.accounts.AccountManagerService$StartAccountSession: android.accounts.IAccountManagerResponse getResponseAndClose()>();

     label03:
        if r28 != null goto label04;

        return;

     label04:
        if r24 != null goto label06;

        $z4 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("AccountManagerService", 2);

        if $z4 == 0 goto label05;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r16 = virtualinvoke $r15.<java.lang.Class: java.lang.String getSimpleName()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" calling onError() on response ");

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r28);

        $r20 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("AccountManagerService", $r20);

     label05:
        $r13 = r0.<com.android.server.accounts.AccountManagerService$StartAccountSession: com.android.server.accounts.AccountManagerService this$0>;

        staticinvoke <com.android.server.accounts.AccountManagerService: void access$2300(com.android.server.accounts.AccountManagerService,android.accounts.IAccountManagerResponse,int,java.lang.String)>($r13, r28, 5, "null bundle returned");

        return;

     label06:
        $i2 = virtualinvoke r24.<android.os.Bundle: int getInt(java.lang.String,int)>("errorCode", -1);

        if $i2 <= 0 goto label07;

        if r25 != null goto label07;

        $r11 = r0.<com.android.server.accounts.AccountManagerService$StartAccountSession: com.android.server.accounts.AccountManagerService this$0>;

        $i5 = virtualinvoke r24.<android.os.Bundle: int getInt(java.lang.String)>("errorCode");

        $r12 = virtualinvoke r24.<android.os.Bundle: java.lang.String getString(java.lang.String)>("errorMessage");

        staticinvoke <com.android.server.accounts.AccountManagerService: void access$2300(com.android.server.accounts.AccountManagerService,android.accounts.IAccountManagerResponse,int,java.lang.String)>($r11, r28, $i5, $r12);

        return;

     label07:
        $z0 = r0.<com.android.server.accounts.AccountManagerService$StartAccountSession: boolean mIsPasswordForwardingAllowed>;

        if $z0 != 0 goto label08;

        virtualinvoke r24.<android.os.Bundle: void remove(java.lang.String)>("password");

     label08:
        virtualinvoke r24.<android.os.Bundle: void remove(java.lang.String)>("authtoken");

        $z1 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("AccountManagerService", 2);

        if $z1 == 0 goto label09;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getSimpleName()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" calling onResult() on response ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r28);

        $r10 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("AccountManagerService", $r10);

     label09:
        r31 = virtualinvoke r24.<android.os.Bundle: android.os.Bundle getBundle(java.lang.String)>("accountSessionBundle");

        if r31 == null goto label16;

        r32 = virtualinvoke r31.<android.os.Bundle: java.lang.String getString(java.lang.String)>("accountType");

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r32);

        if $z2 != 0 goto label10;

        $r3 = r0.<com.android.server.accounts.AccountManagerService$StartAccountSession: java.lang.String mAccountType>;

        $z3 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r32);

        if $z3 != 0 goto label11;

     label10:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("AccountManagerService", "Account type in session bundle doesn\'t match request.");

     label11:
        $r33 = r0.<com.android.server.accounts.AccountManagerService$StartAccountSession: java.lang.String mAccountType>;

        virtualinvoke r31.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("accountType", $r33);

     label12:
        $r34 = staticinvoke <com.android.server.accounts.CryptoHelper: com.android.server.accounts.CryptoHelper getInstance()>();

        $r35 = virtualinvoke $r34.<com.android.server.accounts.CryptoHelper: android.os.Bundle encryptBundle(android.os.Bundle)>(r31);

        virtualinvoke r24.<android.os.Bundle: void putBundle(java.lang.String,android.os.Bundle)>("accountSessionBundle", $r35);

     label13:
        goto label16;

     label14:
        $r22 := @caughtexception;

        $z7 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("AccountManagerService", 3);

        if $z7 == 0 goto label15;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>("AccountManagerService", "Failed to encrypt session bundle!", $r22);

     label15:
        $r23 = r0.<com.android.server.accounts.AccountManagerService$StartAccountSession: com.android.server.accounts.AccountManagerService this$0>;

        staticinvoke <com.android.server.accounts.AccountManagerService: void access$2300(com.android.server.accounts.AccountManagerService,android.accounts.IAccountManagerResponse,int,java.lang.String)>($r23, r28, 5, "failed to encrypt session bundle");

        return;

     label16:
        $r2 = r0.<com.android.server.accounts.AccountManagerService$StartAccountSession: com.android.server.accounts.AccountManagerService this$0>;

        staticinvoke <com.android.server.accounts.AccountManagerService: void access$2400(com.android.server.accounts.AccountManagerService,android.accounts.IAccountManagerResponse,android.os.Bundle)>($r2, r28, r24);

        return;

        catch java.security.GeneralSecurityException from label12 to label13 with label14;
    }
}
