class com.android.server.accounts.CryptoHelper extends java.lang.Object
{
    private static final java.lang.String CIPHER_ALGORITHM;
    private static final int IV_LENGTH;
    private static final java.lang.String KEY_ALGORITHM;
    private static final java.lang.String KEY_CIPHER;
    private static final java.lang.String KEY_IV;
    private static final java.lang.String KEY_MAC;
    private static final java.lang.String MAC_ALGORITHM;
    private static final java.lang.String TAG;
    private static com.android.server.accounts.CryptoHelper sInstance;
    private final javax.crypto.SecretKey mEncryptionKey;
    private final javax.crypto.SecretKey mMacKey;

    private void <init>() throws java.security.NoSuchAlgorithmException
    {
        com.android.server.accounts.CryptoHelper r0;
        javax.crypto.KeyGenerator $r1, $r3;
        javax.crypto.SecretKey $r2, $r4;

        r0 := @this: com.android.server.accounts.CryptoHelper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>("AES");

        $r2 = virtualinvoke $r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>();

        r0.<com.android.server.accounts.CryptoHelper: javax.crypto.SecretKey mEncryptionKey> = $r2;

        $r3 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>("HMACSHA256");

        $r4 = virtualinvoke $r3.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>();

        r0.<com.android.server.accounts.CryptoHelper: javax.crypto.SecretKey mMacKey> = $r4;

        return;
    }

    private static boolean constantTimeArrayEquals(byte[], byte[])
    {
        byte[] r0, r1;
        int $i0, $i1, $i2, i5;
        byte $b3, $b4;
        boolean z0, z1, z2;

        r0 := @parameter0: byte[];

        r1 := @parameter1: byte[];

        z0 = 1;

        if r0 == null goto label7;

        if r1 != null goto label1;

        goto label7;

     label1:
        $i1 = lengthof r0;

        $i0 = lengthof r1;

        if $i1 == $i0 goto label2;

        return 0;

     label2:
        z1 = 1;

        i5 = 0;

     label3:
        $i2 = lengthof r1;

        if i5 >= $i2 goto label6;

        $b4 = r0[i5];

        $b3 = r1[i5];

        if $b4 != $b3 goto label4;

        z2 = 1;

        goto label5;

     label4:
        z2 = 0;

     label5:
        z1 = z1 & z2;

        i5 = i5 + 1;

        goto label3;

     label6:
        return z1;

     label7:
        if r0 != r1 goto label8;

        goto label9;

     label8:
        z0 = 0;

     label9:
        return z0;
    }

    private byte[] createMac(byte[], byte[]) throws java.security.GeneralSecurityException
    {
        com.android.server.accounts.CryptoHelper r0;
        byte[] r1, r2, $r5;
        javax.crypto.Mac r3;
        javax.crypto.SecretKey $r4;

        r0 := @this: com.android.server.accounts.CryptoHelper;

        r1 := @parameter0: byte[];

        r2 := @parameter1: byte[];

        r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>("HMACSHA256");

        $r4 = r0.<com.android.server.accounts.CryptoHelper: javax.crypto.SecretKey mMacKey>;

        virtualinvoke r3.<javax.crypto.Mac: void init(java.security.Key)>($r4);

        virtualinvoke r3.<javax.crypto.Mac: void update(byte[])>(r1);

        virtualinvoke r3.<javax.crypto.Mac: void update(byte[])>(r2);

        $r5 = virtualinvoke r3.<javax.crypto.Mac: byte[] doFinal()>();

        return $r5;
    }

    static com.android.server.accounts.CryptoHelper getInstance() throws java.security.NoSuchAlgorithmException
    {
        com.android.server.accounts.CryptoHelper $r0, r2, r3;
        java.lang.Throwable $r1;

        entermonitor class "Lcom/android/server/accounts/CryptoHelper;";

     label1:
        $r0 = <com.android.server.accounts.CryptoHelper: com.android.server.accounts.CryptoHelper sInstance>;

        if $r0 != null goto label2;

        r2 = new com.android.server.accounts.CryptoHelper;

        specialinvoke r2.<com.android.server.accounts.CryptoHelper: void <init>()>();

        <com.android.server.accounts.CryptoHelper: com.android.server.accounts.CryptoHelper sInstance> = r2;

     label2:
        r3 = <com.android.server.accounts.CryptoHelper: com.android.server.accounts.CryptoHelper sInstance>;

     label3:
        exitmonitor class "Lcom/android/server/accounts/CryptoHelper;";

        return r3;

     label4:
        $r1 := @caughtexception;

        exitmonitor class "Lcom/android/server/accounts/CryptoHelper;";

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
    }

    private boolean verifyMac(byte[], byte[], byte[]) throws java.security.GeneralSecurityException
    {
        com.android.server.accounts.CryptoHelper r0;
        byte[] r1, r2, r3, $r4;
        int $i1, $i2;
        boolean $z0, $z1;

        r0 := @this: com.android.server.accounts.CryptoHelper;

        r1 := @parameter0: byte[];

        r2 := @parameter1: byte[];

        r3 := @parameter2: byte[];

        if r1 == null goto label2;

        $i1 = lengthof r1;

        if $i1 == 0 goto label2;

        if r3 == null goto label2;

        $i2 = lengthof r3;

        if $i2 != 0 goto label1;

        goto label2;

     label1:
        $r4 = specialinvoke r0.<com.android.server.accounts.CryptoHelper: byte[] createMac(byte[],byte[])>(r1, r2);

        $z0 = staticinvoke <com.android.server.accounts.CryptoHelper: boolean constantTimeArrayEquals(byte[],byte[])>(r3, $r4);

        return $z0;

     label2:
        $z1 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("Account", 2);

        if $z1 == 0 goto label3;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("Account", "Cipher or MAC is empty!");

     label3:
        return 0;
    }

    android.os.Bundle decryptBundle(android.os.Bundle) throws java.security.GeneralSecurityException
    {
        com.android.server.accounts.CryptoHelper r0;
        byte[] $r2, r7, r8, r11;
        boolean $z0;
        javax.crypto.spec.IvParameterSpec $r3;
        javax.crypto.SecretKey $r4;
        int $i0;
        android.os.Bundle $r5, r6;
        javax.crypto.Cipher r10;
        android.os.Parcel r12;

        r0 := @this: com.android.server.accounts.CryptoHelper;

        r6 := @parameter0: android.os.Bundle;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r6, "Cannot decrypt null bundle.");

        r7 = virtualinvoke r6.<android.os.Bundle: byte[] getByteArray(java.lang.String)>("iv");

        r8 = virtualinvoke r6.<android.os.Bundle: byte[] getByteArray(java.lang.String)>("cipher");

        $r2 = virtualinvoke r6.<android.os.Bundle: byte[] getByteArray(java.lang.String)>("mac");

        $z0 = specialinvoke r0.<com.android.server.accounts.CryptoHelper: boolean verifyMac(byte[],byte[],byte[])>(r8, r7, $r2);

        if $z0 != 0 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Account", "Escrow mac mismatched!");

        return null;

     label1:
        $r3 = new javax.crypto.spec.IvParameterSpec;

        specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r7);

        r10 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>("AES/CBC/PKCS5Padding");

        $r4 = r0.<com.android.server.accounts.CryptoHelper: javax.crypto.SecretKey mEncryptionKey>;

        virtualinvoke r10.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(2, $r4, $r3);

        r11 = virtualinvoke r10.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r8);

        r12 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $i0 = lengthof r11;

        virtualinvoke r12.<android.os.Parcel: void unmarshall(byte[],int,int)>(r11, 0, $i0);

        virtualinvoke r12.<android.os.Parcel: void setDataPosition(int)>(0);

        $r5 = new android.os.Bundle;

        specialinvoke $r5.<android.os.Bundle: void <init>()>();

        virtualinvoke $r5.<android.os.Bundle: void readFromParcel(android.os.Parcel)>(r12);

        virtualinvoke r12.<android.os.Parcel: void recycle()>();

        return $r5;
    }

    android.os.Bundle encryptBundle(android.os.Bundle) throws java.security.GeneralSecurityException
    {
        com.android.server.accounts.CryptoHelper r0;
        byte[] r1, r2, r8, r10;
        javax.crypto.SecretKey $r4;
        android.os.Bundle $r5, r6;
        android.os.Parcel r7;
        javax.crypto.Cipher r9;

        r0 := @this: com.android.server.accounts.CryptoHelper;

        r6 := @parameter0: android.os.Bundle;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r6, "Cannot encrypt null bundle.");

        r7 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        virtualinvoke r6.<android.os.Bundle: void writeToParcel(android.os.Parcel,int)>(r7, 0);

        r8 = virtualinvoke r7.<android.os.Parcel: byte[] marshall()>();

        virtualinvoke r7.<android.os.Parcel: void recycle()>();

        r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>("AES/CBC/PKCS5Padding");

        $r4 = r0.<com.android.server.accounts.CryptoHelper: javax.crypto.SecretKey mEncryptionKey>;

        virtualinvoke r9.<javax.crypto.Cipher: void init(int,java.security.Key)>(1, $r4);

        r10 = virtualinvoke r9.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r8);

        r1 = virtualinvoke r9.<javax.crypto.Cipher: byte[] getIV()>();

        r2 = specialinvoke r0.<com.android.server.accounts.CryptoHelper: byte[] createMac(byte[],byte[])>(r10, r1);

        $r5 = new android.os.Bundle;

        specialinvoke $r5.<android.os.Bundle: void <init>()>();

        virtualinvoke $r5.<android.os.Bundle: void putByteArray(java.lang.String,byte[])>("cipher", r10);

        virtualinvoke $r5.<android.os.Bundle: void putByteArray(java.lang.String,byte[])>("mac", r2);

        virtualinvoke $r5.<android.os.Bundle: void putByteArray(java.lang.String,byte[])>("iv", r1);

        return $r5;
    }

    public static void <clinit>()
    {
        <com.android.server.accounts.CryptoHelper: java.lang.String TAG> = "Account";

        <com.android.server.accounts.CryptoHelper: java.lang.String MAC_ALGORITHM> = "HMACSHA256";

        <com.android.server.accounts.CryptoHelper: java.lang.String KEY_MAC> = "mac";

        <com.android.server.accounts.CryptoHelper: java.lang.String KEY_IV> = "iv";

        <com.android.server.accounts.CryptoHelper: java.lang.String KEY_CIPHER> = "cipher";

        <com.android.server.accounts.CryptoHelper: java.lang.String KEY_ALGORITHM> = "AES";

        <com.android.server.accounts.CryptoHelper: int IV_LENGTH> = 16;

        <com.android.server.accounts.CryptoHelper: java.lang.String CIPHER_ALGORITHM> = "AES/CBC/PKCS5Padding";

        return;
    }
}
