class com.android.server.accounts.TokenCache$TokenLruCache extends android.util.LruCache
{
    private java.util.HashMap mAccountEvictors;
    private java.util.HashMap mTokenEvictors;

    public void <init>()
    {
        com.android.server.accounts.TokenCache$TokenLruCache r0;
        java.util.HashMap $r1, $r2;

        r0 := @this: com.android.server.accounts.TokenCache$TokenLruCache;

        specialinvoke r0.<android.util.LruCache: void <init>(int)>(64000);

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.accounts.TokenCache$TokenLruCache: java.util.HashMap mTokenEvictors> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.accounts.TokenCache$TokenLruCache: java.util.HashMap mAccountEvictors> = $r2;

        return;
    }

    protected void entryRemoved(boolean, com.android.server.accounts.TokenCache$Key, com.android.server.accounts.TokenCache$Value, com.android.server.accounts.TokenCache$Value)
    {
        com.android.server.accounts.TokenCache$TokenLruCache r0;
        boolean z0;
        com.android.server.accounts.TokenCache$Value r1, r2;
        android.util.Pair $r3;
        android.accounts.Account $r4;
        java.lang.String $r5, $r6;
        java.util.HashMap $r7;
        java.lang.Object $r8;
        com.android.server.accounts.TokenCache$Key r9;
        com.android.server.accounts.TokenCache$TokenLruCache$Evictor r10;

        r0 := @this: com.android.server.accounts.TokenCache$TokenLruCache;

        z0 := @parameter0: boolean;

        r9 := @parameter1: com.android.server.accounts.TokenCache$Key;

        r1 := @parameter2: com.android.server.accounts.TokenCache$Value;

        r2 := @parameter3: com.android.server.accounts.TokenCache$Value;

        if r1 == null goto label1;

        if r2 != null goto label1;

        $r7 = r0.<com.android.server.accounts.TokenCache$TokenLruCache: java.util.HashMap mTokenEvictors>;

        $r3 = new android.util.Pair;

        $r4 = r9.<com.android.server.accounts.TokenCache$Key: android.accounts.Account account>;

        $r6 = $r4.<android.accounts.Account: java.lang.String type>;

        $r5 = r1.<com.android.server.accounts.TokenCache$Value: java.lang.String token>;

        specialinvoke $r3.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r6, $r5);

        $r8 = virtualinvoke $r7.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r3);

        r10 = (com.android.server.accounts.TokenCache$TokenLruCache$Evictor) $r8;

        if r10 == null goto label1;

        virtualinvoke r10.<com.android.server.accounts.TokenCache$TokenLruCache$Evictor: void evict()>();

     label1:
        return;
    }

    protected volatile void entryRemoved(boolean, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        com.android.server.accounts.TokenCache$TokenLruCache r0;
        boolean z0;
        java.lang.Object r1, r2, r3;
        com.android.server.accounts.TokenCache$Value $r4, $r5;
        com.android.server.accounts.TokenCache$Key $r6;

        r0 := @this: com.android.server.accounts.TokenCache$TokenLruCache;

        z0 := @parameter0: boolean;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: java.lang.Object;

        $r6 = (com.android.server.accounts.TokenCache$Key) r1;

        $r5 = (com.android.server.accounts.TokenCache$Value) r2;

        $r4 = (com.android.server.accounts.TokenCache$Value) r3;

        virtualinvoke r0.<com.android.server.accounts.TokenCache$TokenLruCache: void entryRemoved(boolean,com.android.server.accounts.TokenCache$Key,com.android.server.accounts.TokenCache$Value,com.android.server.accounts.TokenCache$Value)>(z0, $r6, $r5, $r4);

        return;
    }

    public void evict(android.accounts.Account)
    {
        com.android.server.accounts.TokenCache$TokenLruCache r0;
        java.util.HashMap $r1;
        java.lang.Object $r2;
        android.accounts.Account r3;
        com.android.server.accounts.TokenCache$TokenLruCache$Evictor r4;

        r0 := @this: com.android.server.accounts.TokenCache$TokenLruCache;

        r3 := @parameter0: android.accounts.Account;

        $r1 = r0.<com.android.server.accounts.TokenCache$TokenLruCache: java.util.HashMap mAccountEvictors>;

        $r2 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r3);

        r4 = (com.android.server.accounts.TokenCache$TokenLruCache$Evictor) $r2;

        if r4 == null goto label1;

        virtualinvoke r4.<com.android.server.accounts.TokenCache$TokenLruCache$Evictor: void evict()>();

     label1:
        return;
    }

    public void evict(java.lang.String, java.lang.String)
    {
        com.android.server.accounts.TokenCache$TokenLruCache r0;
        java.lang.String r1, r5;
        android.util.Pair $r2;
        java.util.HashMap $r3;
        java.lang.Object $r4;
        com.android.server.accounts.TokenCache$TokenLruCache$Evictor r6;

        r0 := @this: com.android.server.accounts.TokenCache$TokenLruCache;

        r5 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r3 = r0.<com.android.server.accounts.TokenCache$TokenLruCache: java.util.HashMap mTokenEvictors>;

        $r2 = new android.util.Pair;

        specialinvoke $r2.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>(r5, r1);

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2);

        r6 = (com.android.server.accounts.TokenCache$TokenLruCache$Evictor) $r4;

        if r6 == null goto label1;

        virtualinvoke r6.<com.android.server.accounts.TokenCache$TokenLruCache$Evictor: void evict()>();

     label1:
        return;
    }

    public void putToken(com.android.server.accounts.TokenCache$Key, com.android.server.accounts.TokenCache$Value)
    {
        com.android.server.accounts.TokenCache$TokenLruCache r0;
        com.android.server.accounts.TokenCache$Key r1;
        com.android.server.accounts.TokenCache$Value r2;
        android.util.Pair $r3;
        android.accounts.Account $r4, $r11, $r14;
        java.lang.String $r5, $r6;
        java.util.HashMap $r7, $r9, $r12, $r15;
        java.lang.Object $r8, $r13;
        com.android.server.accounts.TokenCache$TokenLruCache$Evictor $r18, $r19, r21, r22, r23, r24;

        r0 := @this: com.android.server.accounts.TokenCache$TokenLruCache;

        r1 := @parameter0: com.android.server.accounts.TokenCache$Key;

        r2 := @parameter1: com.android.server.accounts.TokenCache$Value;

        $r3 = new android.util.Pair;

        $r4 = r1.<com.android.server.accounts.TokenCache$Key: android.accounts.Account account>;

        $r6 = $r4.<android.accounts.Account: java.lang.String type>;

        $r5 = r2.<com.android.server.accounts.TokenCache$Value: java.lang.String token>;

        specialinvoke $r3.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r6, $r5);

        $r7 = r0.<com.android.server.accounts.TokenCache$TokenLruCache: java.util.HashMap mTokenEvictors>;

        $r8 = virtualinvoke $r7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r3);

        r21 = (com.android.server.accounts.TokenCache$TokenLruCache$Evictor) $r8;

        r22 = r21;

        if r21 != null goto label1;

        $r19 = new com.android.server.accounts.TokenCache$TokenLruCache$Evictor;

        specialinvoke $r19.<com.android.server.accounts.TokenCache$TokenLruCache$Evictor: void <init>(com.android.server.accounts.TokenCache$TokenLruCache)>(r0);

        r22 = $r19;

     label1:
        virtualinvoke r22.<com.android.server.accounts.TokenCache$TokenLruCache$Evictor: void add(com.android.server.accounts.TokenCache$Key)>(r1);

        $r9 = r0.<com.android.server.accounts.TokenCache$TokenLruCache: java.util.HashMap mTokenEvictors>;

        virtualinvoke $r9.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, r22);

        $r12 = r0.<com.android.server.accounts.TokenCache$TokenLruCache: java.util.HashMap mAccountEvictors>;

        $r11 = r1.<com.android.server.accounts.TokenCache$Key: android.accounts.Account account>;

        $r13 = virtualinvoke $r12.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r11);

        r23 = (com.android.server.accounts.TokenCache$TokenLruCache$Evictor) $r13;

        r24 = r23;

        if r23 != null goto label2;

        $r18 = new com.android.server.accounts.TokenCache$TokenLruCache$Evictor;

        specialinvoke $r18.<com.android.server.accounts.TokenCache$TokenLruCache$Evictor: void <init>(com.android.server.accounts.TokenCache$TokenLruCache)>(r0);

        r24 = $r18;

     label2:
        virtualinvoke r24.<com.android.server.accounts.TokenCache$TokenLruCache$Evictor: void add(com.android.server.accounts.TokenCache$Key)>(r1);

        $r15 = r0.<com.android.server.accounts.TokenCache$TokenLruCache: java.util.HashMap mAccountEvictors>;

        $r14 = r1.<com.android.server.accounts.TokenCache$Key: android.accounts.Account account>;

        virtualinvoke $r15.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, r22);

        virtualinvoke r0.<com.android.server.accounts.TokenCache$TokenLruCache: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    protected int sizeOf(com.android.server.accounts.TokenCache$Key, com.android.server.accounts.TokenCache$Value)
    {
        com.android.server.accounts.TokenCache$TokenLruCache r0;
        com.android.server.accounts.TokenCache$Key r1;
        com.android.server.accounts.TokenCache$Value r2;
        java.lang.String $r3;
        int $i0;

        r0 := @this: com.android.server.accounts.TokenCache$TokenLruCache;

        r1 := @parameter0: com.android.server.accounts.TokenCache$Key;

        r2 := @parameter1: com.android.server.accounts.TokenCache$Value;

        $r3 = r2.<com.android.server.accounts.TokenCache$Value: java.lang.String token>;

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        return $i0;
    }

    protected volatile int sizeOf(java.lang.Object, java.lang.Object)
    {
        com.android.server.accounts.TokenCache$TokenLruCache r0;
        java.lang.Object r1, r2;
        com.android.server.accounts.TokenCache$Value $r3;
        com.android.server.accounts.TokenCache$Key $r4;
        int $i0;

        r0 := @this: com.android.server.accounts.TokenCache$TokenLruCache;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (com.android.server.accounts.TokenCache$Key) r1;

        $r3 = (com.android.server.accounts.TokenCache$Value) r2;

        $i0 = virtualinvoke r0.<com.android.server.accounts.TokenCache$TokenLruCache: int sizeOf(com.android.server.accounts.TokenCache$Key,com.android.server.accounts.TokenCache$Value)>($r4, $r3);

        return $i0;
    }
}
