class com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler extends android.os.Handler
{
    private static final java.lang.String ADB_NOTIFICATION_CHANNEL_ID_TV;
    static final int MESSAGE_ADB_ALLOW;
    static final int MESSAGE_ADB_CLEAR;
    static final int MESSAGE_ADB_CONFIRM;
    static final int MESSAGE_ADB_CONNECTED_KEY;
    static final int MESSAGE_ADB_DENY;
    static final int MESSAGE_ADB_DISABLED;
    static final int MESSAGE_ADB_DISCONNECT;
    static final int MESSAGE_ADB_ENABLED;
    static final int MESSAGE_ADB_PERSIST_KEYSTORE;
    static final int MESSAGE_ADB_UPDATE_KEYSTORE;
    static final int MSG_ADBDWIFI_DISABLE;
    static final int MSG_ADBDWIFI_ENABLE;
    static final int MSG_ADBD_SOCKET_CONNECTED;
    static final int MSG_ADBD_SOCKET_DISCONNECTED;
    static final int MSG_ADBWIFI_ALLOW;
    static final int MSG_ADBWIFI_DENY;
    static final java.lang.String MSG_DISABLE_ADBDWIFI;
    static final java.lang.String MSG_DISCONNECT_DEVICE;
    static final int MSG_PAIRING_CANCEL;
    static final int MSG_PAIR_PAIRING_CODE;
    static final int MSG_PAIR_QR_CODE;
    static final int MSG_REQ_UNPAIR;
    static final int MSG_RESPONSE_PAIRING_PORT;
    static final int MSG_RESPONSE_PAIRING_RESULT;
    static final int MSG_SERVER_CONNECTED;
    static final int MSG_SERVER_DISCONNECTED;
    static final int MSG_WIFI_DEVICE_CONNECTED;
    static final int MSG_WIFI_DEVICE_DISCONNECTED;
    static final long UPDATE_KEYSTORE_JOB_INTERVAL;
    static final long UPDATE_KEYSTORE_MIN_JOB_INTERVAL;
    private int mAdbEnabledRefCount;
    private com.android.server.adb.AdbDebuggingManager$AdbKeyStore mAdbKeyStore;
    private boolean mAdbNotificationShown;
    private android.database.ContentObserver mAuthTimeObserver;
    private final android.content.BroadcastReceiver mBroadcastReceiver;
    private android.app.NotificationManager mNotificationManager;
    final com.android.server.adb.AdbDebuggingManager this$0;

    void <init>(com.android.server.adb.AdbDebuggingManager, android.os.Looper)
    {
        com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler r0;
        com.android.server.adb.AdbDebuggingManager r1;
        android.os.Looper r2;
        com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler$1 $r3;
        com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler$2 $r4;

        r0 := @this: com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler;

        r1 := @parameter0: com.android.server.adb.AdbDebuggingManager;

        r2 := @parameter1: android.os.Looper;

        r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0> = r1;

        specialinvoke r0.<android.os.Handler: void <init>(android.os.Looper)>(r2);

        $r3 = new com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler$1;

        specialinvoke $r3.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler$1: void <init>(com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler)>(r0);

        r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: android.content.BroadcastReceiver mBroadcastReceiver> = $r3;

        r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: int mAdbEnabledRefCount> = 0;

        $r4 = new com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler$2;

        specialinvoke $r4.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler$2: void <init>(com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler,android.os.Handler)>(r0, r0);

        r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: android.database.ContentObserver mAuthTimeObserver> = $r4;

        return;
    }

    void <init>(com.android.server.adb.AdbDebuggingManager, android.os.Looper, com.android.server.adb.AdbDebuggingManager$AdbDebuggingThread, com.android.server.adb.AdbDebuggingManager$AdbKeyStore)
    {
        com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler r0;
        com.android.server.adb.AdbDebuggingManager r1;
        android.os.Looper r2;
        com.android.server.adb.AdbDebuggingManager$AdbDebuggingThread r3;
        com.android.server.adb.AdbDebuggingManager$AdbKeyStore r4;
        com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler$1 $r5;
        com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler$2 $r6;

        r0 := @this: com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler;

        r1 := @parameter0: com.android.server.adb.AdbDebuggingManager;

        r2 := @parameter1: android.os.Looper;

        r3 := @parameter2: com.android.server.adb.AdbDebuggingManager$AdbDebuggingThread;

        r4 := @parameter3: com.android.server.adb.AdbDebuggingManager$AdbKeyStore;

        r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0> = r1;

        specialinvoke r0.<android.os.Handler: void <init>(android.os.Looper)>(r2);

        $r5 = new com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler$1;

        specialinvoke $r5.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler$1: void <init>(com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler)>(r0);

        r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: android.content.BroadcastReceiver mBroadcastReceiver> = $r5;

        r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: int mAdbEnabledRefCount> = 0;

        $r6 = new com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler$2;

        specialinvoke $r6.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler$2: void <init>(com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler,android.os.Handler)>(r0, r0);

        r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: android.database.ContentObserver mAuthTimeObserver> = $r6;

        staticinvoke <com.android.server.adb.AdbDebuggingManager: com.android.server.adb.AdbDebuggingManager$AdbDebuggingThread access$402(com.android.server.adb.AdbDebuggingManager,com.android.server.adb.AdbDebuggingManager$AdbDebuggingThread)>(r1, r3);

        r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager$AdbKeyStore mAdbKeyStore> = r4;

        return;
    }

    private void cancelJobToUpdateAdbKeyStore()
    {
        com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler r0;

        r0 := @this: com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler;

        virtualinvoke r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: void removeMessages(int)>(9);

        return;
    }

    private java.lang.String createPairingCode(int)
    {
        com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler r0;
        int i0, $i1, i2;
        java.security.SecureRandom $r3;
        java.lang.StringBuilder $r4;
        java.lang.String r7;

        r0 := @this: com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler;

        i0 := @parameter0: int;

        r7 = "";

        $r3 = new java.security.SecureRandom;

        specialinvoke $r3.<java.security.SecureRandom: void <init>()>();

        i2 = 0;

     label1:
        if i2 >= i0 goto label2;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $i1 = virtualinvoke $r3.<java.security.SecureRandom: int nextInt(int)>(10);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        i2 = i2 + 1;

        goto label1;

     label2:
        return r7;
    }

    private com.android.server.adb.AdbDebuggingManager$AdbConnectionInfo getCurrentWifiApInfo()
    {
        com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler r0;
        android.net.wifi.WifiManager r1;
        android.net.wifi.WifiInfo r2;
        int i0, $i2, $i5, $i6, i7;
        com.android.server.adb.AdbDebuggingManager $r3, $r7;
        android.content.Context $r4;
        java.lang.Object $r5, $r8, $r10;
        boolean $z0, $z1, $z2, $z3;
        com.android.server.adb.AdbDebuggingManager$AdbConnectionInfo $r6;
        android.net.wifi.WifiConfiguration $r9, $r11;
        java.lang.String $r12, r13, r14, r16;
        java.util.List r15;

        r0 := @this: com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler;

        $r3 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        $r4 = staticinvoke <com.android.server.adb.AdbDebuggingManager: android.content.Context access$000(com.android.server.adb.AdbDebuggingManager)>($r3);

        $r5 = virtualinvoke $r4.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("wifi");

        r1 = (android.net.wifi.WifiManager) $r5;

        r2 = virtualinvoke r1.<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>();

        if r2 == null goto label11;

        $i2 = virtualinvoke r2.<android.net.wifi.WifiInfo: int getNetworkId()>();

        if $i2 != -1 goto label01;

        goto label11;

     label01:
        $z0 = virtualinvoke r2.<android.net.wifi.WifiInfo: boolean isPasspointAp()>();

        if $z0 != 0 goto label07;

        $z2 = virtualinvoke r2.<android.net.wifi.WifiInfo: boolean isOsuAp()>();

        if $z2 == 0 goto label02;

        goto label07;

     label02:
        r13 = virtualinvoke r2.<android.net.wifi.WifiInfo: java.lang.String getSSID()>();

        if r13 == null goto label03;

        r14 = r13;

        $r12 = "<unknown ssid>";

        $z3 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r13);

        if $z3 == 0 goto label08;

     label03:
        r15 = virtualinvoke r1.<android.net.wifi.WifiManager: java.util.List getConfiguredNetworks()>();

        i0 = interfaceinvoke r15.<java.util.List: int size()>();

        i7 = 0;

     label04:
        if i7 >= i0 goto label06;

        $r8 = interfaceinvoke r15.<java.util.List: java.lang.Object get(int)>(i7);

        $r9 = (android.net.wifi.WifiConfiguration) $r8;

        $i5 = $r9.<android.net.wifi.WifiConfiguration: int networkId>;

        $i6 = virtualinvoke r2.<android.net.wifi.WifiInfo: int getNetworkId()>();

        if $i5 != $i6 goto label05;

        $r10 = interfaceinvoke r15.<java.util.List: java.lang.Object get(int)>(i7);

        $r11 = (android.net.wifi.WifiConfiguration) $r10;

        r13 = $r11.<android.net.wifi.WifiConfiguration: java.lang.String SSID>;

     label05:
        i7 = i7 + 1;

        goto label04;

     label06:
        r14 = r13;

        if r13 != null goto label08;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("AdbDebuggingManager", "Unable to get ssid of the wifi AP.");

        return null;

     label07:
        r14 = virtualinvoke r2.<android.net.wifi.WifiInfo: java.lang.String getPasspointProviderFriendlyName()>();

     label08:
        r16 = virtualinvoke r2.<android.net.wifi.WifiInfo: java.lang.String getBSSID()>();

        if r16 == null goto label10;

        $z1 = virtualinvoke r16.<java.lang.String: boolean isEmpty()>();

        if $z1 == 0 goto label09;

        goto label10;

     label09:
        $r6 = new com.android.server.adb.AdbDebuggingManager$AdbConnectionInfo;

        $r7 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        specialinvoke $r6.<com.android.server.adb.AdbDebuggingManager$AdbConnectionInfo: void <init>(com.android.server.adb.AdbDebuggingManager,java.lang.String,java.lang.String)>($r7, r16, r14);

        return $r6;

     label10:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("AdbDebuggingManager", "Unable to get the wifi ap\'s BSSID.");

        return null;

     label11:
        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("AdbDebuggingManager", "Not connected to any wireless network. Not enabling adbwifi.");

        return null;
    }

    private boolean isTv()
    {
        com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler r0;
        com.android.server.adb.AdbDebuggingManager $r1;
        android.content.Context $r2;
        android.content.pm.PackageManager $r3;
        boolean $z0;

        r0 := @this: com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler;

        $r1 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        $r2 = staticinvoke <com.android.server.adb.AdbDebuggingManager: android.content.Context access$000(com.android.server.adb.AdbDebuggingManager)>($r1);

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $z0 = virtualinvoke $r3.<android.content.pm.PackageManager: boolean hasSystemFeature(java.lang.String)>("android.software.leanback");

        return $z0;
    }

    private void logAdbConnectionChanged(java.lang.String, int, boolean)
    {
        com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler r0;
        java.lang.String r1, $r16;
        int i0;
        boolean z0;
        long l1, l2;
        com.android.server.adb.AdbDebuggingManager$AdbKeyStore $r3, $r4;
        java.lang.StringBuilder $r5;

        r0 := @this: com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        $r3 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager$AdbKeyStore mAdbKeyStore>;

        l1 = virtualinvoke $r3.<com.android.server.adb.AdbDebuggingManager$AdbKeyStore: long getLastConnectionTime(java.lang.String)>(r1);

        $r4 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager$AdbKeyStore mAdbKeyStore>;

        l2 = virtualinvoke $r4.<com.android.server.adb.AdbDebuggingManager$AdbKeyStore: long getAllowedConnectionTime()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Logging key ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", state = ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", alwaysAllow = ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", lastConnectionTime = ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", authWindow = ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l2);

        $r16 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("AdbDebuggingManager", $r16);

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,long,long,int,boolean)>(144, l1, l2, i0, z0);

        return;
    }

    private void onAdbdWifiServerConnected(int)
    {
        com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler r0;
        int i0;
        com.android.server.adb.AdbDebuggingManager$AdbKeyStore $r1;
        java.util.Map $r2;

        r0 := @this: com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager$AdbKeyStore mAdbKeyStore>;

        $r2 = virtualinvoke $r1.<com.android.server.adb.AdbDebuggingManager$AdbKeyStore: java.util.Map getPairedDevices()>();

        specialinvoke r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: void sendPairedDevicesToUI(java.util.Map)>($r2);

        specialinvoke r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: void sendServerConnectionState(boolean,int)>(1, i0);

        return;
    }

    private void onAdbdWifiServerDisconnected(int)
    {
        com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler r0;
        int i0;
        com.android.server.adb.AdbDebuggingManager $r1;
        java.util.Set $r2;

        r0 := @this: com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        $r2 = staticinvoke <com.android.server.adb.AdbDebuggingManager: java.util.Set access$700(com.android.server.adb.AdbDebuggingManager)>($r1);

        interfaceinvoke $r2.<java.util.Set: void clear()>();

        virtualinvoke r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: void showAdbConnectedNotification(boolean)>(0);

        specialinvoke r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: void sendServerConnectionState(boolean,int)>(0, i0);

        return;
    }

    private void onPairingResult(java.lang.String)
    {
        com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler r0;
        java.lang.String r2, r19, r21;
        java.lang.String[] r3;
        android.content.Intent $r4, $r14;
        com.android.server.adb.AdbDebuggingManager $r6, $r9, $r13, $r16;
        int $i0;
        android.debug.PairDevice $r7;
        android.content.Context $r10, $r17;
        android.os.UserHandle $r11, $r18;
        com.android.server.adb.AdbDebuggingManager$AdbKeyStore $r12;
        long $l1;

        r0 := @this: com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler;

        r19 := @parameter0: java.lang.String;

        if r19 != null goto label1;

        $r14 = new android.content.Intent;

        specialinvoke $r14.<android.content.Intent: void <init>(java.lang.String)>("com.android.server.adb.WIRELESS_DEBUG_PAIRING_RESULT");

        virtualinvoke $r14.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("status", 0);

        $r16 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        $r17 = staticinvoke <com.android.server.adb.AdbDebuggingManager: android.content.Context access$000(com.android.server.adb.AdbDebuggingManager)>($r16);

        $r18 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r17.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)>($r14, $r18);

        goto label3;

     label1:
        $r4 = new android.content.Intent;

        specialinvoke $r4.<android.content.Intent: void <init>(java.lang.String)>("com.android.server.adb.WIRELESS_DEBUG_PAIRING_RESULT");

        virtualinvoke $r4.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("status", 1);

        $r6 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        r2 = staticinvoke <com.android.server.adb.AdbDebuggingManager: java.lang.String access$900(com.android.server.adb.AdbDebuggingManager,java.lang.String)>($r6, r19);

        r21 = "nouser@nohostname";

        r3 = virtualinvoke r19.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\s+");

        $i0 = lengthof r3;

        if $i0 <= 1 goto label2;

        r21 = r3[1];

     label2:
        $r7 = new android.debug.PairDevice;

        specialinvoke $r7.<android.debug.PairDevice: void <init>(java.lang.String,java.lang.String,boolean)>(r2, r21, 0);

        virtualinvoke $r4.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("pair_device", $r7);

        $r9 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        $r10 = staticinvoke <com.android.server.adb.AdbDebuggingManager: android.content.Context access$000(com.android.server.adb.AdbDebuggingManager)>($r9);

        $r11 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r10.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)>($r4, $r11);

        $r12 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager$AdbKeyStore mAdbKeyStore>;

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        virtualinvoke $r12.<com.android.server.adb.AdbDebuggingManager$AdbKeyStore: void setLastConnectionTime(java.lang.String,long)>(r19, $l1);

        $r13 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        staticinvoke <com.android.server.adb.AdbDebuggingManager: void access$600(com.android.server.adb.AdbDebuggingManager)>($r13);

        virtualinvoke r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: long scheduleJobToUpdateAdbKeyStore()>();

     label3:
        return;
    }

    private void sendPairedDevicesToUI(java.util.Map)
    {
        com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler r0;
        java.util.Map r1;
        android.content.Intent $r3;
        java.util.HashMap $r4;
        com.android.server.adb.AdbDebuggingManager $r6;
        android.content.Context $r7;
        android.os.UserHandle $r8;

        r0 := @this: com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler;

        r1 := @parameter0: java.util.Map;

        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>(java.lang.String)>("com.android.server.adb.WIRELESS_DEBUG_PAIRED_DEVICES");

        $r4 = (java.util.HashMap) r1;

        virtualinvoke $r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>("devices_map", $r4);

        $r6 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        $r7 = staticinvoke <com.android.server.adb.AdbDebuggingManager: android.content.Context access$000(com.android.server.adb.AdbDebuggingManager)>($r6);

        $r8 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r7.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)>($r3, $r8);

        return;
    }

    private void sendPairingPortToUI(int)
    {
        com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler r0;
        int i0;
        android.content.Intent $r2;
        com.android.server.adb.AdbDebuggingManager $r5;
        android.content.Context $r6;
        android.os.UserHandle $r7;

        r0 := @this: com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler;

        i0 := @parameter0: int;

        $r2 = new android.content.Intent;

        specialinvoke $r2.<android.content.Intent: void <init>(java.lang.String)>("com.android.server.adb.WIRELESS_DEBUG_PAIRING_RESULT");

        virtualinvoke $r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("status", 4);

        virtualinvoke $r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("adb_port", i0);

        $r5 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        $r6 = staticinvoke <com.android.server.adb.AdbDebuggingManager: android.content.Context access$000(com.android.server.adb.AdbDebuggingManager)>($r5);

        $r7 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r6.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)>($r2, $r7);

        return;
    }

    private void sendServerConnectionState(boolean, int)
    {
        com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler r0;
        boolean z0;
        int i0;
        android.content.Intent $r2;
        com.android.server.adb.AdbDebuggingManager $r5;
        android.content.Context $r6;
        android.os.UserHandle $r7;
        byte b1;

        r0 := @this: com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        $r2 = new android.content.Intent;

        specialinvoke $r2.<android.content.Intent: void <init>(java.lang.String)>("com.android.server.adb.WIRELESS_DEBUG_STATUS");

        if z0 == 0 goto label1;

        b1 = 4;

        goto label2;

     label1:
        b1 = 5;

     label2:
        virtualinvoke $r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("status", b1);

        virtualinvoke $r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("adb_port", i0);

        $r5 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        $r6 = staticinvoke <com.android.server.adb.AdbDebuggingManager: android.content.Context access$000(com.android.server.adb.AdbDebuggingManager)>($r5);

        $r7 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r6.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)>($r2, $r7);

        return;
    }

    private void setupNotifications()
    {
        com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler r0;
        android.app.NotificationManager r1, $r2, $r8;
        com.android.server.adb.AdbDebuggingManager $r3, $r7;
        android.content.Context $r4, $r9;
        java.lang.Object $r5;
        boolean $z0;
        android.app.NotificationChannel $r6;
        java.lang.String $r10;

        r0 := @this: com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler;

        $r2 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: android.app.NotificationManager mNotificationManager>;

        if $r2 == null goto label1;

        return;

     label1:
        $r3 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        $r4 = staticinvoke <com.android.server.adb.AdbDebuggingManager: android.content.Context access$000(com.android.server.adb.AdbDebuggingManager)>($r3);

        $r5 = virtualinvoke $r4.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("notification");

        r1 = (android.app.NotificationManager) $r5;

        r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: android.app.NotificationManager mNotificationManager> = r1;

        if r1 != null goto label2;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("AdbDebuggingManager", "Unable to setup notifications for wireless debugging");

        return;

     label2:
        $z0 = specialinvoke r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: boolean isTv()>();

        if $z0 == 0 goto label3;

        $r8 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: android.app.NotificationManager mNotificationManager>;

        $r6 = new android.app.NotificationChannel;

        $r7 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        $r9 = staticinvoke <com.android.server.adb.AdbDebuggingManager: android.content.Context access$000(com.android.server.adb.AdbDebuggingManager)>($r7);

        $r10 = virtualinvoke $r9.<android.content.Context: java.lang.String getString(int)>(17039605);

        specialinvoke $r6.<android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)>("usbdevicemanager.adb.tv", $r10, 4);

        virtualinvoke $r8.<android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)>($r6);

     label3:
        return;
    }

    private void startAdbDebuggingThread()
    {
        com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler r0;
        int i0, $i1;
        com.android.server.adb.AdbDebuggingManager$AdbDebuggingThread $r1, $r6;
        com.android.server.adb.AdbDebuggingManager $r2, $r3, $r5;
        com.android.server.adb.AdbDebuggingManager$AdbKeyStore $r7;

        r0 := @this: com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler;

        $i1 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: int mAdbEnabledRefCount>;

        i0 = $i1 + 1;

        r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: int mAdbEnabledRefCount> = i0;

        if i0 <= 1 goto label1;

        return;

     label1:
        virtualinvoke r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: void registerForAuthTimeChanges()>();

        $r3 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        $r1 = new com.android.server.adb.AdbDebuggingManager$AdbDebuggingThread;

        $r2 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        specialinvoke $r1.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingThread: void <init>(com.android.server.adb.AdbDebuggingManager)>($r2);

        staticinvoke <com.android.server.adb.AdbDebuggingManager: com.android.server.adb.AdbDebuggingManager$AdbDebuggingThread access$402(com.android.server.adb.AdbDebuggingManager,com.android.server.adb.AdbDebuggingManager$AdbDebuggingThread)>($r3, $r1);

        $r5 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        $r6 = staticinvoke <com.android.server.adb.AdbDebuggingManager: com.android.server.adb.AdbDebuggingManager$AdbDebuggingThread access$400(com.android.server.adb.AdbDebuggingManager)>($r5);

        virtualinvoke $r6.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingThread: void start()>();

        $r7 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager$AdbKeyStore mAdbKeyStore>;

        virtualinvoke $r7.<com.android.server.adb.AdbDebuggingManager$AdbKeyStore: void updateKeyStore()>();

        virtualinvoke r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: long scheduleJobToUpdateAdbKeyStore()>();

        return;
    }

    private void stopAdbDebuggingThread()
    {
        com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler r0;
        int i0, $i1;
        java.util.Iterator r1;
        java.util.Map$Entry r2;
        com.android.server.adb.AdbDebuggingManager $r3, $r5, $r7, $r10, $r11, $r13, $r19, $r21;
        com.android.server.adb.AdbDebuggingManager$AdbDebuggingThread $r4, $r20;
        java.util.Map $r6, $r8, $r12;
        boolean $z0, $z1;
        java.util.Set $r9, $r14;
        java.lang.Object $r15, $r17;
        com.android.server.adb.AdbDebuggingManager$AdbKeyStore $r16;
        java.lang.String $r18;
        long $l3;

        r0 := @this: com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler;

        $i1 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: int mAdbEnabledRefCount>;

        i0 = $i1 - 1;

        r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: int mAdbEnabledRefCount> = i0;

        if i0 <= 0 goto label1;

        return;

     label1:
        $r3 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        $r4 = staticinvoke <com.android.server.adb.AdbDebuggingManager: com.android.server.adb.AdbDebuggingManager$AdbDebuggingThread access$400(com.android.server.adb.AdbDebuggingManager)>($r3);

        if $r4 == null goto label2;

        $r19 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        $r20 = staticinvoke <com.android.server.adb.AdbDebuggingManager: com.android.server.adb.AdbDebuggingManager$AdbDebuggingThread access$400(com.android.server.adb.AdbDebuggingManager)>($r19);

        virtualinvoke $r20.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingThread: void stopListening()>();

        $r21 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        staticinvoke <com.android.server.adb.AdbDebuggingManager: com.android.server.adb.AdbDebuggingManager$AdbDebuggingThread access$402(com.android.server.adb.AdbDebuggingManager,com.android.server.adb.AdbDebuggingManager$AdbDebuggingThread)>($r21, null);

     label2:
        $r5 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        $r6 = staticinvoke <com.android.server.adb.AdbDebuggingManager: java.util.Map access$500(com.android.server.adb.AdbDebuggingManager)>($r5);

        $z0 = interfaceinvoke $r6.<java.util.Map: boolean isEmpty()>();

        if $z0 != 0 goto label5;

        $r7 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        $r8 = staticinvoke <com.android.server.adb.AdbDebuggingManager: java.util.Map access$500(com.android.server.adb.AdbDebuggingManager)>($r7);

        $r9 = interfaceinvoke $r8.<java.util.Map: java.util.Set entrySet()>();

        r1 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r15 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (java.util.Map$Entry) $r15;

        $r16 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager$AdbKeyStore mAdbKeyStore>;

        $r17 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r18 = (java.lang.String) $r17;

        $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        virtualinvoke $r16.<com.android.server.adb.AdbDebuggingManager$AdbKeyStore: void setLastConnectionTime(java.lang.String,long)>($r18, $l3);

        goto label3;

     label4:
        $r10 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        staticinvoke <com.android.server.adb.AdbDebuggingManager: void access$600(com.android.server.adb.AdbDebuggingManager)>($r10);

        $r11 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        $r12 = staticinvoke <com.android.server.adb.AdbDebuggingManager: java.util.Map access$500(com.android.server.adb.AdbDebuggingManager)>($r11);

        interfaceinvoke $r12.<java.util.Map: void clear()>();

        $r13 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        $r14 = staticinvoke <com.android.server.adb.AdbDebuggingManager: java.util.Set access$700(com.android.server.adb.AdbDebuggingManager)>($r13);

        interfaceinvoke $r14.<java.util.Set: void clear()>();

     label5:
        virtualinvoke r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: long scheduleJobToUpdateAdbKeyStore()>();

        return;
    }

    private void updateUIPairCode(java.lang.String)
    {
        com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler r0;
        java.lang.String r1;
        android.content.Intent $r3;
        com.android.server.adb.AdbDebuggingManager $r6;
        android.content.Context $r7;
        android.os.UserHandle $r8;

        r0 := @this: com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler;

        r1 := @parameter0: java.lang.String;

        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>(java.lang.String)>("com.android.server.adb.WIRELESS_DEBUG_PAIRING_RESULT");

        virtualinvoke $r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("pairing_code", r1);

        virtualinvoke $r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("status", 3);

        $r6 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        $r7 = staticinvoke <com.android.server.adb.AdbDebuggingManager: android.content.Context access$000(com.android.server.adb.AdbDebuggingManager)>($r6);

        $r8 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r7.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)>($r3, $r8);

        return;
    }

    private boolean verifyWifiNetwork(java.lang.String, java.lang.String)
    {
        com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler r0;
        java.lang.String r1, r2;
        com.android.server.adb.AdbDebuggingManager$AdbKeyStore $r3;
        boolean $z0;
        com.android.server.adb.AdbDebuggingManager $r4;

        r0 := @this: com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager$AdbKeyStore mAdbKeyStore>;

        $z0 = virtualinvoke $r3.<com.android.server.adb.AdbDebuggingManager$AdbKeyStore: boolean isTrustedNetwork(java.lang.String)>(r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $r4 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        staticinvoke <com.android.server.adb.AdbDebuggingManager: void access$1700(com.android.server.adb.AdbDebuggingManager,java.lang.String,java.lang.String)>($r4, r2, r1);

        return 0;
    }

    public void handleMessage(android.os.Message)
    {
        com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler r0;
        int i0, $i1, $i2, $i3, $i6, $i7, $i8, $i15, $i16, $i22, i27, i28;
        java.lang.String r1, $r52, $r59, $r83, $r126, $r127, $r174, $r200, $r201, $r203, $r206, $r222, $r240, $r242, r254, r255, r256, r259, r260, r262, r265, r266, r267, r271, r275, r276, r277, r279;
        com.android.server.adb.AdbDebuggingManager$AdbKeyStore $r2, $r39, $r46, $r53, $r76, $r78, $r89, $r90, $r157, $r165, $r166, $r172, $r186, $r193, $r196, $r229, r274, r281, r291;
        com.android.server.adb.AdbDebuggingManager $r3, $r5, $r6, $r8, $r10, $r12, $r13, $r16, $r18, $r21, $r23, $r25, $r27, $r31, $r32, $r34, $r37, $r41, $r44, $r55, $r57, $r60, $r61, $r64, $r69, $r70, $r73, $r75, $r87, $r92, $r96, $r97, $r99, $r102, $r103, $r105, $r107, $r109, $r111, $r113, $r115, $r116, $r117, $r118, $r121, $r123, $r125, $r128, $r130, $r135, $r136, $r139, $r141, $r142, $r144, $r147, $r149, $r151, $r158, $r159, $r163, $r167, $r170, $r176, $r178, $r182, $r187, $r188, $r191, $r194, $r198, $r202, $r204, $r207, $r209, $r211, $r213, $r215, $r217, $r220, $r221, $r223, $r225, $r227, $r230, $r231, $r239, $r243, $r244, $r245, $r246, $r248, r278;
        com.android.server.adb.AdbDebuggingManager$AdbConnectionPortPoller $r4, $r7, $r17, $r24, $r26, $r74, $r140, r282, r284, r290;
        boolean $z0, $z1, $z2, $z5, $z6, $z7, $z9, $z10, $z13, $z14, $z16, $z17, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z32, z34, z35, z36;
        com.android.server.adb.AdbDebuggingManager$PortListenerImpl $r14, $r71, $r137;
        java.lang.Object $r19, $r29, $r36, $r43, $r48, $r50, $r58, $r77, $r94, $r146, $r153, $r171, $r173, $r175, $r180, $r199, $r219;
        java.lang.Integer $r20, $r30, $r49, $r154, $r155, $r161, $r181, $r184, $r233;
        android.content.ContentResolver $r22, $r35, $r56, $r62, $r143, $r145;
        com.android.server.adb.AdbDebuggingManager$AdbConnectionInfo $r33, r252, r257, r269;
        java.util.Set $r38, $r42, $r45, $r169, $r195;
        java.util.Map $r40, $r47, $r54, $r91, $r148, $r150, $r152, $r160, $r164, $r168, $r177, $r179, $r183, $r189, $r192, $r228, $r232;
        android.os.Bundle $r51, r264;
        android.content.Context $r65, $r119, $r131;
        android.content.BroadcastReceiver $r66, $r120, $r132;
        com.android.server.adb.AdbDebuggingManager$AdbDebuggingThread $r88, $r93, $r122, $r124, $r208, $r210, $r212, $r214, $r216, $r218, $r224, $r226;
        com.android.server.adb.AdbDebuggingManager$PairingThread $r100, $r106, $r108, $r110, $r112, r287, r288;
        long $l9, $l13, $l17, $l23;
        java.lang.Throwable $r249, $r250;
        android.os.Message r251;
        java.util.Iterator r272;
        java.util.Map$Entry r273;
        android.content.IntentFilter r283, r289;
        java.lang.StringBuilder r285, r286, r292;
        java.lang.InterruptedException r293;

        r0 := @this: com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler;

        r251 := @parameter0: android.os.Message;

        $r2 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager$AdbKeyStore mAdbKeyStore>;

        if $r2 != null goto label01;

        r281 = new com.android.server.adb.AdbDebuggingManager$AdbKeyStore;

        $r248 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        specialinvoke r281.<com.android.server.adb.AdbDebuggingManager$AdbKeyStore: void <init>(com.android.server.adb.AdbDebuggingManager)>($r248);

        r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager$AdbKeyStore mAdbKeyStore> = r281;

     label01:
        i0 = r251.<android.os.Message: int what>;

        z34 = 0;

        z35 = 0;

        tableswitch(i0)
        {
            case 1: goto label70;
            case 2: goto label68;
            case 3: goto label63;
            case 4: goto label62;
            case 5: goto label59;
            case 6: goto label57;
            case 7: goto label52;
            case 8: goto label51;
            case 9: goto label47;
            case 10: goto label42;
            case 11: goto label38;
            case 12: goto label35;
            case 13: goto label02;
            case 14: goto label30;
            case 15: goto label29;
            case 16: goto label28;
            case 17: goto label24;
            case 18: goto label19;
            case 19: goto label18;
            case 20: goto label17;
            case 21: goto label16;
            case 22: goto label15;
            case 23: goto label14;
            case 24: goto label08;
            case 25: goto label06;
            case 26: goto label05;
            case 27: goto label03;
            default: goto label02;
        };

     label02:
        goto label72;

     label03:
        $r3 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        $r4 = staticinvoke <com.android.server.adb.AdbDebuggingManager: com.android.server.adb.AdbDebuggingManager$AdbConnectionPortPoller access$1400(com.android.server.adb.AdbDebuggingManager)>($r3);

        if $r4 == null goto label04;

        $r6 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        $r7 = staticinvoke <com.android.server.adb.AdbDebuggingManager: com.android.server.adb.AdbDebuggingManager$AdbConnectionPortPoller access$1400(com.android.server.adb.AdbDebuggingManager)>($r6);

        virtualinvoke $r7.<com.android.server.adb.AdbDebuggingManager$AdbConnectionPortPoller: void cancelAndWait()>();

        $r8 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        staticinvoke <com.android.server.adb.AdbDebuggingManager: com.android.server.adb.AdbDebuggingManager$AdbConnectionPortPoller access$1402(com.android.server.adb.AdbDebuggingManager,com.android.server.adb.AdbDebuggingManager$AdbConnectionPortPoller)>($r8, null);

     label04:
        $r5 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        $z0 = staticinvoke <com.android.server.adb.AdbDebuggingManager: boolean access$1200(com.android.server.adb.AdbDebuggingManager)>($r5);

        if $z0 == 0 goto label72;

        specialinvoke r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: void onAdbdWifiServerDisconnected(int)>(-1);

        goto label72;

     label05:
        $r10 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        $z1 = staticinvoke <com.android.server.adb.AdbDebuggingManager: boolean access$1200(com.android.server.adb.AdbDebuggingManager)>($r10);

        if $z1 == 0 goto label72;

        $r13 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        r282 = new com.android.server.adb.AdbDebuggingManager$AdbConnectionPortPoller;

        $r12 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        $r14 = staticinvoke <com.android.server.adb.AdbDebuggingManager: com.android.server.adb.AdbDebuggingManager$PortListenerImpl access$1500(com.android.server.adb.AdbDebuggingManager)>($r12);

        specialinvoke r282.<com.android.server.adb.AdbDebuggingManager$AdbConnectionPortPoller: void <init>(com.android.server.adb.AdbDebuggingManager$AdbConnectionPortListener)>($r14);

        staticinvoke <com.android.server.adb.AdbDebuggingManager: com.android.server.adb.AdbDebuggingManager$AdbConnectionPortPoller access$1402(com.android.server.adb.AdbDebuggingManager,com.android.server.adb.AdbDebuggingManager$AdbConnectionPortPoller)>($r13, r282);

        $r16 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        $r17 = staticinvoke <com.android.server.adb.AdbDebuggingManager: com.android.server.adb.AdbDebuggingManager$AdbConnectionPortPoller access$1400(com.android.server.adb.AdbDebuggingManager)>($r16);

        virtualinvoke $r17.<com.android.server.adb.AdbDebuggingManager$AdbConnectionPortPoller: void start()>();

        goto label72;

     label06:
        $r18 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        $z2 = staticinvoke <com.android.server.adb.AdbDebuggingManager: boolean access$1200(com.android.server.adb.AdbDebuggingManager)>($r18);

        if $z2 != 0 goto label07;

        goto label72;

     label07:
        $r19 = r251.<android.os.Message: java.lang.Object obj>;

        $r20 = (java.lang.Integer) $r19;

        $i1 = virtualinvoke $r20.<java.lang.Integer: int intValue()>();

        specialinvoke r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: void onAdbdWifiServerDisconnected(int)>($i1);

        $r21 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        $r22 = staticinvoke <com.android.server.adb.AdbDebuggingManager: android.content.ContentResolver access$200(com.android.server.adb.AdbDebuggingManager)>($r21);

        staticinvoke <android.provider.Settings$Global: boolean putInt(android.content.ContentResolver,java.lang.String,int)>($r22, "adb_wifi_enabled", 0);

        specialinvoke r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: void stopAdbDebuggingThread()>();

        $r23 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        $r24 = staticinvoke <com.android.server.adb.AdbDebuggingManager: com.android.server.adb.AdbDebuggingManager$AdbConnectionPortPoller access$1400(com.android.server.adb.AdbDebuggingManager)>($r23);

        if $r24 == null goto label72;

        $r25 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        $r26 = staticinvoke <com.android.server.adb.AdbDebuggingManager: com.android.server.adb.AdbDebuggingManager$AdbConnectionPortPoller access$1400(com.android.server.adb.AdbDebuggingManager)>($r25);

        virtualinvoke $r26.<com.android.server.adb.AdbDebuggingManager$AdbConnectionPortPoller: void cancelAndWait()>();

        $r27 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        staticinvoke <com.android.server.adb.AdbDebuggingManager: com.android.server.adb.AdbDebuggingManager$AdbConnectionPortPoller access$1402(com.android.server.adb.AdbDebuggingManager,com.android.server.adb.AdbDebuggingManager$AdbConnectionPortPoller)>($r27, null);

        goto label72;

     label08:
        $r29 = r251.<android.os.Message: java.lang.Object obj>;

        $r30 = (java.lang.Integer) $r29;

        i27 = virtualinvoke $r30.<java.lang.Integer: int intValue()>();

        specialinvoke r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: void onAdbdWifiServerConnected(int)>(i27);

        $r31 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        r252 = staticinvoke <com.android.server.adb.AdbDebuggingManager: com.android.server.adb.AdbDebuggingManager$AdbConnectionInfo access$300(com.android.server.adb.AdbDebuggingManager)>($r31);

        entermonitor r252;

     label09:
        $r32 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        $r33 = staticinvoke <com.android.server.adb.AdbDebuggingManager: com.android.server.adb.AdbDebuggingManager$AdbConnectionInfo access$300(com.android.server.adb.AdbDebuggingManager)>($r32);

        virtualinvoke $r33.<com.android.server.adb.AdbDebuggingManager$AdbConnectionInfo: void setPort(int)>(i27);

        exitmonitor r252;

     label10:
        $r34 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        $r35 = staticinvoke <com.android.server.adb.AdbDebuggingManager: android.content.ContentResolver access$200(com.android.server.adb.AdbDebuggingManager)>($r34);

        staticinvoke <android.provider.Settings$Global: boolean putInt(android.content.ContentResolver,java.lang.String,int)>($r35, "adb_wifi_enabled", 1);

        goto label72;

     label11:
        $r249 := @caughtexception;

     label12:
        exitmonitor r252;

     label13:
        throw $r249;

     label14:
        $r36 = r251.<android.os.Message: java.lang.Object obj>;

        r254 = (java.lang.String) $r36;

        $r37 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        $r38 = staticinvoke <com.android.server.adb.AdbDebuggingManager: java.util.Set access$700(com.android.server.adb.AdbDebuggingManager)>($r37);

        $z5 = interfaceinvoke $r38.<java.util.Set: boolean remove(java.lang.Object)>(r254);

        if $z5 == 0 goto label72;

        $r39 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager$AdbKeyStore mAdbKeyStore>;

        $r40 = virtualinvoke $r39.<com.android.server.adb.AdbDebuggingManager$AdbKeyStore: java.util.Map getPairedDevices()>();

        specialinvoke r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: void sendPairedDevicesToUI(java.util.Map)>($r40);

        $r41 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        $r42 = staticinvoke <com.android.server.adb.AdbDebuggingManager: java.util.Set access$700(com.android.server.adb.AdbDebuggingManager)>($r41);

        $z6 = interfaceinvoke $r42.<java.util.Set: boolean isEmpty()>();

        if $z6 == 0 goto label72;

        virtualinvoke r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: void showAdbConnectedNotification(boolean)>(0);

        goto label72;

     label15:
        $r43 = r251.<android.os.Message: java.lang.Object obj>;

        r255 = (java.lang.String) $r43;

        $r44 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        $r45 = staticinvoke <com.android.server.adb.AdbDebuggingManager: java.util.Set access$700(com.android.server.adb.AdbDebuggingManager)>($r44);

        $z7 = interfaceinvoke $r45.<java.util.Set: boolean add(java.lang.Object)>(r255);

        if $z7 == 0 goto label72;

        $r46 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager$AdbKeyStore mAdbKeyStore>;

        $r47 = virtualinvoke $r46.<com.android.server.adb.AdbDebuggingManager$AdbKeyStore: java.util.Map getPairedDevices()>();

        specialinvoke r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: void sendPairedDevicesToUI(java.util.Map)>($r47);

        virtualinvoke r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: void showAdbConnectedNotification(boolean)>(1);

        goto label72;

     label16:
        $r48 = r251.<android.os.Message: java.lang.Object obj>;

        $r49 = (java.lang.Integer) $r48;

        $i2 = virtualinvoke $r49.<java.lang.Integer: int intValue()>();

        specialinvoke r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: void sendPairingPortToUI(int)>($i2);

        goto label72;

     label17:
        $r50 = r251.<android.os.Message: java.lang.Object obj>;

        $r51 = (android.os.Bundle) $r50;

        $r52 = virtualinvoke $r51.<android.os.Bundle: java.lang.String getString(java.lang.String)>("publicKey");

        specialinvoke r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: void onPairingResult(java.lang.String)>($r52);

        $r53 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager$AdbKeyStore mAdbKeyStore>;

        $r54 = virtualinvoke $r53.<com.android.server.adb.AdbDebuggingManager$AdbKeyStore: java.util.Map getPairedDevices()>();

        specialinvoke r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: void sendPairedDevicesToUI(java.util.Map)>($r54);

        goto label72;

     label18:
        $r55 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        $r56 = staticinvoke <com.android.server.adb.AdbDebuggingManager: android.content.ContentResolver access$200(com.android.server.adb.AdbDebuggingManager)>($r55);

        staticinvoke <android.provider.Settings$Global: boolean putInt(android.content.ContentResolver,java.lang.String,int)>($r56, "adb_wifi_enabled", 0);

        specialinvoke r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: void sendServerConnectionState(boolean,int)>(0, -1);

        goto label72;

     label19:
        $r57 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        $z9 = staticinvoke <com.android.server.adb.AdbDebuggingManager: boolean access$1200(com.android.server.adb.AdbDebuggingManager)>($r57);

        if $z9 == 0 goto label20;

        goto label72;

     label20:
        $r58 = r251.<android.os.Message: java.lang.Object obj>;

        r256 = (java.lang.String) $r58;

        $i3 = r251.<android.os.Message: int arg1>;

        if $i3 != 1 goto label21;

        z35 = 1;

     label21:
        if z35 == 0 goto label22;

        $r76 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager$AdbKeyStore mAdbKeyStore>;

        virtualinvoke $r76.<com.android.server.adb.AdbDebuggingManager$AdbKeyStore: void addTrustedNetwork(java.lang.String)>(r256);

     label22:
        r257 = specialinvoke r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager$AdbConnectionInfo getCurrentWifiApInfo()>();

        if r257 == null goto label72;

        $r59 = virtualinvoke r257.<com.android.server.adb.AdbDebuggingManager$AdbConnectionInfo: java.lang.String getBSSID()>();

        $z10 = virtualinvoke r256.<java.lang.String: boolean equals(java.lang.Object)>($r59);

        if $z10 != 0 goto label23;

        goto label72;

     label23:
        $r60 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        staticinvoke <com.android.server.adb.AdbDebuggingManager: void access$1300(com.android.server.adb.AdbDebuggingManager,com.android.server.adb.AdbDebuggingManager$AdbConnectionInfo)>($r60, r257);

        $r61 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        $r62 = staticinvoke <com.android.server.adb.AdbDebuggingManager: android.content.ContentResolver access$200(com.android.server.adb.AdbDebuggingManager)>($r61);

        staticinvoke <android.provider.Settings$Global: boolean putInt(android.content.ContentResolver,java.lang.String,int)>($r62, "adb_wifi_enabled", 1);

        r283 = new android.content.IntentFilter;

        specialinvoke r283.<android.content.IntentFilter: void <init>(java.lang.String)>("android.net.wifi.WIFI_STATE_CHANGED");

        virtualinvoke r283.<android.content.IntentFilter: void addAction(java.lang.String)>("android.net.wifi.STATE_CHANGE");

        $r64 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        $r65 = staticinvoke <com.android.server.adb.AdbDebuggingManager: android.content.Context access$000(com.android.server.adb.AdbDebuggingManager)>($r64);

        $r66 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: android.content.BroadcastReceiver mBroadcastReceiver>;

        virtualinvoke $r65.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r66, r283);

        staticinvoke <android.os.SystemProperties: void set(java.lang.String,java.lang.String)>("persist.adb.tls_server.enable", "1");

        $r70 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        r284 = new com.android.server.adb.AdbDebuggingManager$AdbConnectionPortPoller;

        $r69 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        $r71 = staticinvoke <com.android.server.adb.AdbDebuggingManager: com.android.server.adb.AdbDebuggingManager$PortListenerImpl access$1500(com.android.server.adb.AdbDebuggingManager)>($r69);

        specialinvoke r284.<com.android.server.adb.AdbDebuggingManager$AdbConnectionPortPoller: void <init>(com.android.server.adb.AdbDebuggingManager$AdbConnectionPortListener)>($r71);

        staticinvoke <com.android.server.adb.AdbDebuggingManager: com.android.server.adb.AdbDebuggingManager$AdbConnectionPortPoller access$1402(com.android.server.adb.AdbDebuggingManager,com.android.server.adb.AdbDebuggingManager$AdbConnectionPortPoller)>($r70, r284);

        $r73 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        $r74 = staticinvoke <com.android.server.adb.AdbDebuggingManager: com.android.server.adb.AdbDebuggingManager$AdbConnectionPortPoller access$1400(com.android.server.adb.AdbDebuggingManager)>($r73);

        virtualinvoke $r74.<com.android.server.adb.AdbDebuggingManager$AdbConnectionPortPoller: void start()>();

        specialinvoke r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: void startAdbDebuggingThread()>();

        $r75 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        staticinvoke <com.android.server.adb.AdbDebuggingManager: boolean access$1202(com.android.server.adb.AdbDebuggingManager,boolean)>($r75, 1);

        goto label72;

     label24:
        $r77 = r251.<android.os.Message: java.lang.Object obj>;

        r259 = (java.lang.String) $r77;

        $r78 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager$AdbKeyStore mAdbKeyStore>;

        r260 = virtualinvoke $r78.<com.android.server.adb.AdbDebuggingManager$AdbKeyStore: java.lang.String findKeyFromFingerprint(java.lang.String)>(r259);

        if r260 == null goto label27;

        $z13 = virtualinvoke r260.<java.lang.String: boolean isEmpty()>();

        if $z13 == 0 goto label25;

        goto label27;

     label25:
        r285 = new java.lang.StringBuilder;

        specialinvoke r285.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r285.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DD");

        virtualinvoke r285.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r260);

        r262 = virtualinvoke r285.<java.lang.StringBuilder: java.lang.String toString()>();

        $r87 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        $r88 = staticinvoke <com.android.server.adb.AdbDebuggingManager: com.android.server.adb.AdbDebuggingManager$AdbDebuggingThread access$400(com.android.server.adb.AdbDebuggingManager)>($r87);

        if $r88 == null goto label26;

        $r92 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        $r93 = staticinvoke <com.android.server.adb.AdbDebuggingManager: com.android.server.adb.AdbDebuggingManager$AdbDebuggingThread access$400(com.android.server.adb.AdbDebuggingManager)>($r92);

        virtualinvoke $r93.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingThread: void sendResponse(java.lang.String)>(r262);

     label26:
        $r89 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager$AdbKeyStore mAdbKeyStore>;

        virtualinvoke $r89.<com.android.server.adb.AdbDebuggingManager$AdbKeyStore: void removeKey(java.lang.String)>(r260);

        $r90 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager$AdbKeyStore mAdbKeyStore>;

        $r91 = virtualinvoke $r90.<com.android.server.adb.AdbDebuggingManager$AdbKeyStore: java.util.Map getPairedDevices()>();

        specialinvoke r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: void sendPairedDevicesToUI(java.util.Map)>($r91);

        goto label72;

     label27:
        r286 = new java.lang.StringBuilder;

        specialinvoke r286.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r286.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not a known fingerprint [");

        virtualinvoke r286.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r259);

        virtualinvoke r286.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r83 = virtualinvoke r286.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("AdbDebuggingManager", $r83);

        goto label72;

     label28:
        $r94 = r251.<android.os.Message: java.lang.Object obj>;

        r264 = (android.os.Bundle) $r94;

        r265 = virtualinvoke r264.<android.os.Bundle: java.lang.String getString(java.lang.String)>("serviceName");

        r266 = virtualinvoke r264.<android.os.Bundle: java.lang.String getString(java.lang.String)>("password");

        $r97 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        r287 = new com.android.server.adb.AdbDebuggingManager$PairingThread;

        $r96 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        specialinvoke r287.<com.android.server.adb.AdbDebuggingManager$PairingThread: void <init>(com.android.server.adb.AdbDebuggingManager,java.lang.String,java.lang.String)>($r96, r266, r265);

        staticinvoke <com.android.server.adb.AdbDebuggingManager: com.android.server.adb.AdbDebuggingManager$PairingThread access$1602(com.android.server.adb.AdbDebuggingManager,com.android.server.adb.AdbDebuggingManager$PairingThread)>($r97, r287);

        $r99 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        $r100 = staticinvoke <com.android.server.adb.AdbDebuggingManager: com.android.server.adb.AdbDebuggingManager$PairingThread access$1600(com.android.server.adb.AdbDebuggingManager)>($r99);

        virtualinvoke $r100.<com.android.server.adb.AdbDebuggingManager$PairingThread: void start()>();

        goto label72;

     label29:
        r267 = specialinvoke r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: java.lang.String createPairingCode(int)>(6);

        specialinvoke r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: void updateUIPairCode(java.lang.String)>(r267);

        $r103 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        r288 = new com.android.server.adb.AdbDebuggingManager$PairingThread;

        $r102 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        specialinvoke r288.<com.android.server.adb.AdbDebuggingManager$PairingThread: void <init>(com.android.server.adb.AdbDebuggingManager,java.lang.String,java.lang.String)>($r102, r267, null);

        staticinvoke <com.android.server.adb.AdbDebuggingManager: com.android.server.adb.AdbDebuggingManager$PairingThread access$1602(com.android.server.adb.AdbDebuggingManager,com.android.server.adb.AdbDebuggingManager$PairingThread)>($r103, r288);

        $r105 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        $r106 = staticinvoke <com.android.server.adb.AdbDebuggingManager: com.android.server.adb.AdbDebuggingManager$PairingThread access$1600(com.android.server.adb.AdbDebuggingManager)>($r105);

        virtualinvoke $r106.<com.android.server.adb.AdbDebuggingManager$PairingThread: void start()>();

        goto label72;

     label30:
        $r107 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        $r108 = staticinvoke <com.android.server.adb.AdbDebuggingManager: com.android.server.adb.AdbDebuggingManager$PairingThread access$1600(com.android.server.adb.AdbDebuggingManager)>($r107);

        if $r108 == null goto label72;

        $r109 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        $r110 = staticinvoke <com.android.server.adb.AdbDebuggingManager: com.android.server.adb.AdbDebuggingManager$PairingThread access$1600(com.android.server.adb.AdbDebuggingManager)>($r109);

        virtualinvoke $r110.<com.android.server.adb.AdbDebuggingManager$PairingThread: void cancelPairing()>();

     label31:
        $r111 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        $r112 = staticinvoke <com.android.server.adb.AdbDebuggingManager: com.android.server.adb.AdbDebuggingManager$PairingThread access$1600(com.android.server.adb.AdbDebuggingManager)>($r111);

        virtualinvoke $r112.<com.android.server.adb.AdbDebuggingManager$PairingThread: void join()>();

     label32:
        goto label34;

     label33:
        $r250 := @caughtexception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AdbDebuggingManager", "Error while waiting for pairing thread to quit.");

        r293 = (java.lang.InterruptedException) $r250;

        virtualinvoke r293.<java.lang.InterruptedException: void printStackTrace()>();

     label34:
        $r113 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        staticinvoke <com.android.server.adb.AdbDebuggingManager: com.android.server.adb.AdbDebuggingManager$PairingThread access$1602(com.android.server.adb.AdbDebuggingManager,com.android.server.adb.AdbDebuggingManager$PairingThread)>($r113, null);

        goto label72;

     label35:
        $r115 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        $z14 = staticinvoke <com.android.server.adb.AdbDebuggingManager: boolean access$1200(com.android.server.adb.AdbDebuggingManager)>($r115);

        if $z14 != 0 goto label36;

        goto label72;

     label36:
        $r116 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        staticinvoke <com.android.server.adb.AdbDebuggingManager: boolean access$1202(com.android.server.adb.AdbDebuggingManager,boolean)>($r116, 0);

        $r117 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        staticinvoke <com.android.server.adb.AdbDebuggingManager: void access$1300(com.android.server.adb.AdbDebuggingManager,com.android.server.adb.AdbDebuggingManager$AdbConnectionInfo)>($r117, null);

        $r118 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        $r119 = staticinvoke <com.android.server.adb.AdbDebuggingManager: android.content.Context access$000(com.android.server.adb.AdbDebuggingManager)>($r118);

        $r120 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: android.content.BroadcastReceiver mBroadcastReceiver>;

        virtualinvoke $r119.<android.content.Context: void unregisterReceiver(android.content.BroadcastReceiver)>($r120);

        $r121 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        $r122 = staticinvoke <com.android.server.adb.AdbDebuggingManager: com.android.server.adb.AdbDebuggingManager$AdbDebuggingThread access$400(com.android.server.adb.AdbDebuggingManager)>($r121);

        if $r122 == null goto label37;

        $r123 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        $r124 = staticinvoke <com.android.server.adb.AdbDebuggingManager: com.android.server.adb.AdbDebuggingManager$AdbDebuggingThread access$400(com.android.server.adb.AdbDebuggingManager)>($r123);

        virtualinvoke $r124.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingThread: void sendResponse(java.lang.String)>("DA");

     label37:
        specialinvoke r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: void onAdbdWifiServerDisconnected(int)>(-1);

        specialinvoke r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: void stopAdbDebuggingThread()>();

        goto label72;

     label38:
        $r125 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        $z16 = staticinvoke <com.android.server.adb.AdbDebuggingManager: boolean access$1200(com.android.server.adb.AdbDebuggingManager)>($r125);

        if $z16 == 0 goto label39;

        goto label72;

     label39:
        r269 = specialinvoke r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager$AdbConnectionInfo getCurrentWifiApInfo()>();

        if r269 != null goto label40;

        $r144 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        $r145 = staticinvoke <com.android.server.adb.AdbDebuggingManager: android.content.ContentResolver access$200(com.android.server.adb.AdbDebuggingManager)>($r144);

        staticinvoke <android.provider.Settings$Global: boolean putInt(android.content.ContentResolver,java.lang.String,int)>($r145, "adb_wifi_enabled", 0);

        goto label72;

     label40:
        $r126 = virtualinvoke r269.<com.android.server.adb.AdbDebuggingManager$AdbConnectionInfo: java.lang.String getBSSID()>();

        $r127 = virtualinvoke r269.<com.android.server.adb.AdbDebuggingManager$AdbConnectionInfo: java.lang.String getSSID()>();

        $z17 = specialinvoke r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: boolean verifyWifiNetwork(java.lang.String,java.lang.String)>($r126, $r127);

        if $z17 != 0 goto label41;

        $r142 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        $r143 = staticinvoke <com.android.server.adb.AdbDebuggingManager: android.content.ContentResolver access$200(com.android.server.adb.AdbDebuggingManager)>($r142);

        staticinvoke <android.provider.Settings$Global: boolean putInt(android.content.ContentResolver,java.lang.String,int)>($r143, "adb_wifi_enabled", 0);

        goto label72;

     label41:
        $r128 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        staticinvoke <com.android.server.adb.AdbDebuggingManager: void access$1300(com.android.server.adb.AdbDebuggingManager,com.android.server.adb.AdbDebuggingManager$AdbConnectionInfo)>($r128, r269);

        r289 = new android.content.IntentFilter;

        specialinvoke r289.<android.content.IntentFilter: void <init>(java.lang.String)>("android.net.wifi.WIFI_STATE_CHANGED");

        virtualinvoke r289.<android.content.IntentFilter: void addAction(java.lang.String)>("android.net.wifi.STATE_CHANGE");

        $r130 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        $r131 = staticinvoke <com.android.server.adb.AdbDebuggingManager: android.content.Context access$000(com.android.server.adb.AdbDebuggingManager)>($r130);

        $r132 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: android.content.BroadcastReceiver mBroadcastReceiver>;

        virtualinvoke $r131.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r132, r289);

        staticinvoke <android.os.SystemProperties: void set(java.lang.String,java.lang.String)>("persist.adb.tls_server.enable", "1");

        $r136 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        r290 = new com.android.server.adb.AdbDebuggingManager$AdbConnectionPortPoller;

        $r135 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        $r137 = staticinvoke <com.android.server.adb.AdbDebuggingManager: com.android.server.adb.AdbDebuggingManager$PortListenerImpl access$1500(com.android.server.adb.AdbDebuggingManager)>($r135);

        specialinvoke r290.<com.android.server.adb.AdbDebuggingManager$AdbConnectionPortPoller: void <init>(com.android.server.adb.AdbDebuggingManager$AdbConnectionPortListener)>($r137);

        staticinvoke <com.android.server.adb.AdbDebuggingManager: com.android.server.adb.AdbDebuggingManager$AdbConnectionPortPoller access$1402(com.android.server.adb.AdbDebuggingManager,com.android.server.adb.AdbDebuggingManager$AdbConnectionPortPoller)>($r136, r290);

        $r139 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        $r140 = staticinvoke <com.android.server.adb.AdbDebuggingManager: com.android.server.adb.AdbDebuggingManager$AdbConnectionPortPoller access$1400(com.android.server.adb.AdbDebuggingManager)>($r139);

        virtualinvoke $r140.<com.android.server.adb.AdbDebuggingManager$AdbConnectionPortPoller: void start()>();

        specialinvoke r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: void startAdbDebuggingThread()>();

        $r141 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        staticinvoke <com.android.server.adb.AdbDebuggingManager: boolean access$1202(com.android.server.adb.AdbDebuggingManager,boolean)>($r141, 1);

        goto label72;

     label42:
        $r146 = r251.<android.os.Message: java.lang.Object obj>;

        r271 = (java.lang.String) $r146;

        if r271 == null goto label46;

        $i6 = virtualinvoke r271.<java.lang.String: int length()>();

        if $i6 != 0 goto label43;

        goto label46;

     label43:
        $r147 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        $r148 = staticinvoke <com.android.server.adb.AdbDebuggingManager: java.util.Map access$500(com.android.server.adb.AdbDebuggingManager)>($r147);

        $z21 = interfaceinvoke $r148.<java.util.Map: boolean containsKey(java.lang.Object)>(r271);

        if $z21 != 0 goto label44;

        $r159 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        $r160 = staticinvoke <com.android.server.adb.AdbDebuggingManager: java.util.Map access$500(com.android.server.adb.AdbDebuggingManager)>($r159);

        $r161 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        interfaceinvoke $r160.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r271, $r161);

        goto label45;

     label44:
        $r149 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        $r150 = staticinvoke <com.android.server.adb.AdbDebuggingManager: java.util.Map access$500(com.android.server.adb.AdbDebuggingManager)>($r149);

        $r151 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        $r152 = staticinvoke <com.android.server.adb.AdbDebuggingManager: java.util.Map access$500(com.android.server.adb.AdbDebuggingManager)>($r151);

        $r153 = interfaceinvoke $r152.<java.util.Map: java.lang.Object get(java.lang.Object)>(r271);

        $r154 = (java.lang.Integer) $r153;

        $i7 = virtualinvoke $r154.<java.lang.Integer: int intValue()>();

        $i8 = $i7 + 1;

        $r155 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i8);

        interfaceinvoke $r150.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r271, $r155);

     label45:
        $r157 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager$AdbKeyStore mAdbKeyStore>;

        $l9 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        virtualinvoke $r157.<com.android.server.adb.AdbDebuggingManager$AdbKeyStore: void setLastConnectionTime(java.lang.String,long)>(r271, $l9);

        $r158 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        staticinvoke <com.android.server.adb.AdbDebuggingManager: void access$600(com.android.server.adb.AdbDebuggingManager)>($r158);

        virtualinvoke r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: long scheduleJobToUpdateAdbKeyStore()>();

        specialinvoke r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: void logAdbConnectionChanged(java.lang.String,int,boolean)>(r271, 4, 1);

        goto label72;

     label46:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AdbDebuggingManager", "Received a connected key message with an empty key");

        goto label72;

     label47:
        $r163 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        $r164 = staticinvoke <com.android.server.adb.AdbDebuggingManager: java.util.Map access$500(com.android.server.adb.AdbDebuggingManager)>($r163);

        $z22 = interfaceinvoke $r164.<java.util.Map: boolean isEmpty()>();

        if $z22 != 0 goto label50;

        $r167 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        $r168 = staticinvoke <com.android.server.adb.AdbDebuggingManager: java.util.Map access$500(com.android.server.adb.AdbDebuggingManager)>($r167);

        $r169 = interfaceinvoke $r168.<java.util.Map: java.util.Set entrySet()>();

        r272 = interfaceinvoke $r169.<java.util.Set: java.util.Iterator iterator()>();

     label48:
        $z24 = interfaceinvoke r272.<java.util.Iterator: boolean hasNext()>();

        if $z24 == 0 goto label49;

        $r171 = interfaceinvoke r272.<java.util.Iterator: java.lang.Object next()>();

        r273 = (java.util.Map$Entry) $r171;

        $r172 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager$AdbKeyStore mAdbKeyStore>;

        $r173 = interfaceinvoke r273.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r174 = (java.lang.String) $r173;

        $l13 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        virtualinvoke $r172.<com.android.server.adb.AdbDebuggingManager$AdbKeyStore: void setLastConnectionTime(java.lang.String,long)>($r174, $l13);

        goto label48;

     label49:
        $r170 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        staticinvoke <com.android.server.adb.AdbDebuggingManager: void access$600(com.android.server.adb.AdbDebuggingManager)>($r170);

        virtualinvoke r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: long scheduleJobToUpdateAdbKeyStore()>();

        goto label72;

     label50:
        $r165 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager$AdbKeyStore mAdbKeyStore>;

        $z23 = virtualinvoke $r165.<com.android.server.adb.AdbDebuggingManager$AdbKeyStore: boolean isEmpty()>();

        if $z23 != 0 goto label72;

        $r166 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager$AdbKeyStore mAdbKeyStore>;

        virtualinvoke $r166.<com.android.server.adb.AdbDebuggingManager$AdbKeyStore: void updateKeyStore()>();

        virtualinvoke r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: long scheduleJobToUpdateAdbKeyStore()>();

        goto label72;

     label51:
        r274 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager$AdbKeyStore mAdbKeyStore>;

        if r274 == null goto label72;

        virtualinvoke r274.<com.android.server.adb.AdbDebuggingManager$AdbKeyStore: void persistKeyStore()>();

        goto label72;

     label52:
        $r175 = r251.<android.os.Message: java.lang.Object obj>;

        r275 = (java.lang.String) $r175;

        z36 = 0;

        if r275 == null goto label55;

        $i15 = virtualinvoke r275.<java.lang.String: int length()>();

        if $i15 <= 0 goto label55;

        $r176 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        $r177 = staticinvoke <com.android.server.adb.AdbDebuggingManager: java.util.Map access$500(com.android.server.adb.AdbDebuggingManager)>($r176);

        $z25 = interfaceinvoke $r177.<java.util.Map: boolean containsKey(java.lang.Object)>(r275);

        if $z25 == 0 goto label56;

        z36 = 1;

        $r178 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        $r179 = staticinvoke <com.android.server.adb.AdbDebuggingManager: java.util.Map access$500(com.android.server.adb.AdbDebuggingManager)>($r178);

        $r180 = interfaceinvoke $r179.<java.util.Map: java.lang.Object get(java.lang.Object)>(r275);

        $r181 = (java.lang.Integer) $r180;

        $i16 = virtualinvoke $r181.<java.lang.Integer: int intValue()>();

        i28 = $i16 - 1;

        if i28 != 0 goto label53;

        $r186 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager$AdbKeyStore mAdbKeyStore>;

        $l17 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        virtualinvoke $r186.<com.android.server.adb.AdbDebuggingManager$AdbKeyStore: void setLastConnectionTime(java.lang.String,long)>(r275, $l17);

        $r187 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        staticinvoke <com.android.server.adb.AdbDebuggingManager: void access$600(com.android.server.adb.AdbDebuggingManager)>($r187);

        virtualinvoke r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: long scheduleJobToUpdateAdbKeyStore()>();

        $r188 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        $r189 = staticinvoke <com.android.server.adb.AdbDebuggingManager: java.util.Map access$500(com.android.server.adb.AdbDebuggingManager)>($r188);

        interfaceinvoke $r189.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r275);

        goto label54;

     label53:
        $r182 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        $r183 = staticinvoke <com.android.server.adb.AdbDebuggingManager: java.util.Map access$500(com.android.server.adb.AdbDebuggingManager)>($r182);

        $r184 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i28);

        interfaceinvoke $r183.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r275, $r184);

     label54:
        goto label56;

     label55:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AdbDebuggingManager", "Received a disconnected key message with an empty key");

     label56:
        specialinvoke r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: void logAdbConnectionChanged(java.lang.String,int,boolean)>(r275, 7, z36);

        goto label72;

     label57:
        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("AdbDebuggingManager", "Received a request to clear the adb authorizations");

        $r191 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        $r192 = staticinvoke <com.android.server.adb.AdbDebuggingManager: java.util.Map access$500(com.android.server.adb.AdbDebuggingManager)>($r191);

        interfaceinvoke $r192.<java.util.Map: void clear()>();

        $r193 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager$AdbKeyStore mAdbKeyStore>;

        if $r193 != null goto label58;

        r291 = new com.android.server.adb.AdbDebuggingManager$AdbKeyStore;

        $r198 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        specialinvoke r291.<com.android.server.adb.AdbDebuggingManager$AdbKeyStore: void <init>(com.android.server.adb.AdbDebuggingManager)>($r198);

        r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager$AdbKeyStore mAdbKeyStore> = r291;

     label58:
        $r194 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        $r195 = staticinvoke <com.android.server.adb.AdbDebuggingManager: java.util.Set access$700(com.android.server.adb.AdbDebuggingManager)>($r194);

        interfaceinvoke $r195.<java.util.Set: void clear()>();

        $r196 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager$AdbKeyStore mAdbKeyStore>;

        virtualinvoke $r196.<com.android.server.adb.AdbDebuggingManager$AdbKeyStore: void deleteKeyStore()>();

        specialinvoke r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: void cancelJobToUpdateAdbKeyStore()>();

        goto label72;

     label59:
        $r199 = r251.<android.os.Message: java.lang.Object obj>;

        r276 = (java.lang.String) $r199;

        $r200 = "trigger_restart_min_framework";

        $r201 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("vold.decrypt");

        $z26 = virtualinvoke $r200.<java.lang.String: boolean equals(java.lang.Object)>($r201);

        if $z26 == 0 goto label60;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AdbDebuggingManager", "Deferring adb confirmation until after vold decrypt");

        $r211 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        $r212 = staticinvoke <com.android.server.adb.AdbDebuggingManager: com.android.server.adb.AdbDebuggingManager$AdbDebuggingThread access$400(com.android.server.adb.AdbDebuggingManager)>($r211);

        if $r212 == null goto label72;

        $r213 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        $r214 = staticinvoke <com.android.server.adb.AdbDebuggingManager: com.android.server.adb.AdbDebuggingManager$AdbDebuggingThread access$400(com.android.server.adb.AdbDebuggingManager)>($r213);

        virtualinvoke $r214.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingThread: void sendResponse(java.lang.String)>("NO");

        specialinvoke r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: void logAdbConnectionChanged(java.lang.String,int,boolean)>(r276, 6, 0);

        goto label72;

     label60:
        $r202 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        r277 = staticinvoke <com.android.server.adb.AdbDebuggingManager: java.lang.String access$900(com.android.server.adb.AdbDebuggingManager,java.lang.String)>($r202, r276);

        $r203 = "";

        $z27 = virtualinvoke $r203.<java.lang.String: boolean equals(java.lang.Object)>(r277);

        if $z27 == 0 goto label61;

        $r207 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        $r208 = staticinvoke <com.android.server.adb.AdbDebuggingManager: com.android.server.adb.AdbDebuggingManager$AdbDebuggingThread access$400(com.android.server.adb.AdbDebuggingManager)>($r207);

        if $r208 == null goto label72;

        $r209 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        $r210 = staticinvoke <com.android.server.adb.AdbDebuggingManager: com.android.server.adb.AdbDebuggingManager$AdbDebuggingThread access$400(com.android.server.adb.AdbDebuggingManager)>($r209);

        virtualinvoke $r210.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingThread: void sendResponse(java.lang.String)>("NO");

        specialinvoke r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: void logAdbConnectionChanged(java.lang.String,int,boolean)>(r276, 5, 0);

        goto label72;

     label61:
        specialinvoke r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: void logAdbConnectionChanged(java.lang.String,int,boolean)>(r276, 1, 0);

        $r204 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        staticinvoke <com.android.server.adb.AdbDebuggingManager: java.lang.String access$1002(com.android.server.adb.AdbDebuggingManager,java.lang.String)>($r204, r277);

        r278 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        $r206 = staticinvoke <com.android.server.adb.AdbDebuggingManager: java.lang.String access$1000(com.android.server.adb.AdbDebuggingManager)>(r278);

        staticinvoke <com.android.server.adb.AdbDebuggingManager: void access$1100(com.android.server.adb.AdbDebuggingManager,java.lang.String,java.lang.String)>(r278, r276, $r206);

        goto label72;

     label62:
        $r215 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        $r216 = staticinvoke <com.android.server.adb.AdbDebuggingManager: com.android.server.adb.AdbDebuggingManager$AdbDebuggingThread access$400(com.android.server.adb.AdbDebuggingManager)>($r215);

        if $r216 == null goto label72;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AdbDebuggingManager", "Denying adb confirmation");

        $r217 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        $r218 = staticinvoke <com.android.server.adb.AdbDebuggingManager: com.android.server.adb.AdbDebuggingManager$AdbDebuggingThread access$400(com.android.server.adb.AdbDebuggingManager)>($r217);

        virtualinvoke $r218.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingThread: void sendResponse(java.lang.String)>("NO");

        specialinvoke r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: void logAdbConnectionChanged(java.lang.String,int,boolean)>(null, 3, 0);

        goto label72;

     label63:
        $r219 = r251.<android.os.Message: java.lang.Object obj>;

        r1 = (java.lang.String) $r219;

        $r220 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        r279 = staticinvoke <com.android.server.adb.AdbDebuggingManager: java.lang.String access$900(com.android.server.adb.AdbDebuggingManager,java.lang.String)>($r220, r1);

        $r221 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        $r222 = staticinvoke <com.android.server.adb.AdbDebuggingManager: java.lang.String access$1000(com.android.server.adb.AdbDebuggingManager)>($r221);

        $z28 = virtualinvoke r279.<java.lang.String: boolean equals(java.lang.Object)>($r222);

        if $z28 != 0 goto label64;

        r292 = new java.lang.StringBuilder;

        specialinvoke r292.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r292.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fingerprints do not match. Got ");

        virtualinvoke r292.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r279);

        virtualinvoke r292.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", expected ");

        $r239 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        $r240 = staticinvoke <com.android.server.adb.AdbDebuggingManager: java.lang.String access$1000(com.android.server.adb.AdbDebuggingManager)>($r239);

        virtualinvoke r292.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r240);

        $r242 = virtualinvoke r292.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("AdbDebuggingManager", $r242);

        goto label72;

     label64:
        $i22 = r251.<android.os.Message: int arg1>;

        if $i22 != 1 goto label65;

        z34 = 1;

     label65:
        $r223 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        $r224 = staticinvoke <com.android.server.adb.AdbDebuggingManager: com.android.server.adb.AdbDebuggingManager$AdbDebuggingThread access$400(com.android.server.adb.AdbDebuggingManager)>($r223);

        if $r224 == null goto label72;

        $r225 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        $r226 = staticinvoke <com.android.server.adb.AdbDebuggingManager: com.android.server.adb.AdbDebuggingManager$AdbDebuggingThread access$400(com.android.server.adb.AdbDebuggingManager)>($r225);

        virtualinvoke $r226.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingThread: void sendResponse(java.lang.String)>("OK");

        if z34 == 0 goto label67;

        $r227 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        $r228 = staticinvoke <com.android.server.adb.AdbDebuggingManager: java.util.Map access$500(com.android.server.adb.AdbDebuggingManager)>($r227);

        $z29 = interfaceinvoke $r228.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z29 != 0 goto label66;

        $r231 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        $r232 = staticinvoke <com.android.server.adb.AdbDebuggingManager: java.util.Map access$500(com.android.server.adb.AdbDebuggingManager)>($r231);

        $r233 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        interfaceinvoke $r232.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r233);

     label66:
        $r229 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager$AdbKeyStore mAdbKeyStore>;

        $l23 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        virtualinvoke $r229.<com.android.server.adb.AdbDebuggingManager$AdbKeyStore: void setLastConnectionTime(java.lang.String,long)>(r1, $l23);

        $r230 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        staticinvoke <com.android.server.adb.AdbDebuggingManager: void access$600(com.android.server.adb.AdbDebuggingManager)>($r230);

        virtualinvoke r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: long scheduleJobToUpdateAdbKeyStore()>();

     label67:
        specialinvoke r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: void logAdbConnectionChanged(java.lang.String,int,boolean)>(r1, 2, z34);

        goto label72;

     label68:
        $r243 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        $z30 = staticinvoke <com.android.server.adb.AdbDebuggingManager: boolean access$800(com.android.server.adb.AdbDebuggingManager)>($r243);

        if $z30 != 0 goto label69;

        goto label72;

     label69:
        specialinvoke r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: void stopAdbDebuggingThread()>();

        $r244 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        staticinvoke <com.android.server.adb.AdbDebuggingManager: boolean access$802(com.android.server.adb.AdbDebuggingManager,boolean)>($r244, 0);

        goto label72;

     label70:
        $r245 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        $z32 = staticinvoke <com.android.server.adb.AdbDebuggingManager: boolean access$800(com.android.server.adb.AdbDebuggingManager)>($r245);

        if $z32 == 0 goto label71;

        goto label72;

     label71:
        specialinvoke r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: void startAdbDebuggingThread()>();

        $r246 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        staticinvoke <com.android.server.adb.AdbDebuggingManager: boolean access$802(com.android.server.adb.AdbDebuggingManager,boolean)>($r246, 1);

     label72:
        return;

        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
        catch java.lang.InterruptedException from label31 to label32 with label33;
    }

    void registerForAuthTimeChanges()
    {
        com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler r0;
        android.net.Uri r1;
        com.android.server.adb.AdbDebuggingManager $r2;
        android.content.Context $r3;
        android.content.ContentResolver $r4;
        android.database.ContentObserver $r5;

        r0 := @this: com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler;

        r1 = staticinvoke <android.provider.Settings$Global: android.net.Uri getUriFor(java.lang.String)>("adb_allowed_connection_time");

        $r2 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        $r3 = staticinvoke <com.android.server.adb.AdbDebuggingManager: android.content.Context access$000(com.android.server.adb.AdbDebuggingManager)>($r2);

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r5 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: android.database.ContentObserver mAuthTimeObserver>;

        virtualinvoke $r4.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver)>(r1, 0, $r5);

        return;
    }

    long scheduleJobToUpdateAdbKeyStore()
    {
        com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler r0;
        com.android.server.adb.AdbDebuggingManager$AdbKeyStore $r1;
        byte $b0, $b1;
        long $l2, l3, l4;
        android.os.Message $r2;

        r0 := @this: com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler;

        specialinvoke r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: void cancelJobToUpdateAdbKeyStore()>();

        $r1 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager$AdbKeyStore mAdbKeyStore>;

        l3 = virtualinvoke $r1.<com.android.server.adb.AdbDebuggingManager$AdbKeyStore: long getNextExpirationTime()>();

        $b0 = l3 cmp -1L;

        if $b0 != 0 goto label1;

        return -1L;

     label1:
        $b1 = l3 cmp 0L;

        if $b1 != 0 goto label2;

        l4 = 0L;

        goto label3;

     label2:
        $l2 = staticinvoke <java.lang.Math: long min(long,long)>(86400000L, l3);

        l4 = staticinvoke <java.lang.Math: long max(long,long)>($l2, 60000L);

     label3:
        $r2 = virtualinvoke r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: android.os.Message obtainMessage(int)>(9);

        virtualinvoke r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: boolean sendMessageDelayed(android.os.Message,long)>($r2, l4);

        return l4;
    }

    public void showAdbConnectedNotification(boolean)
    {
        com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler r0;
        boolean z0, $z1, $z2;
        android.app.Notification r1;
        android.os.UserHandle $r2, $r6;
        android.app.NotificationManager $r3, $r7;
        com.android.server.adb.AdbDebuggingManager $r4;
        android.content.Context $r5;

        r0 := @this: com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler;

        z0 := @parameter0: boolean;

        $z1 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: boolean mAdbNotificationShown>;

        if z0 != $z1 goto label1;

        return;

     label1:
        specialinvoke r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: void setupNotifications()>();

        $z2 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: boolean mAdbNotificationShown>;

        if $z2 != 0 goto label2;

        $r4 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: com.android.server.adb.AdbDebuggingManager this$0>;

        $r5 = staticinvoke <com.android.server.adb.AdbDebuggingManager: android.content.Context access$000(com.android.server.adb.AdbDebuggingManager)>($r4);

        r1 = staticinvoke <android.debug.AdbNotifications: android.app.Notification createNotification(android.content.Context,byte)>($r5, 1);

        r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: boolean mAdbNotificationShown> = 1;

        $r7 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: android.app.NotificationManager mNotificationManager>;

        $r6 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r7.<android.app.NotificationManager: void notifyAsUser(java.lang.String,int,android.app.Notification,android.os.UserHandle)>(null, 62, r1, $r6);

        goto label3;

     label2:
        r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: boolean mAdbNotificationShown> = 0;

        $r3 = r0.<com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: android.app.NotificationManager mNotificationManager>;

        $r2 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r3.<android.app.NotificationManager: void cancelAsUser(java.lang.String,int,android.os.UserHandle)>(null, 62, $r2);

     label3:
        return;
    }

    public static void <clinit>()
    {
        <com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: long UPDATE_KEYSTORE_MIN_JOB_INTERVAL> = 60000L;

        <com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: long UPDATE_KEYSTORE_JOB_INTERVAL> = 86400000L;

        <com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: int MSG_WIFI_DEVICE_DISCONNECTED> = 23;

        <com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: int MSG_WIFI_DEVICE_CONNECTED> = 22;

        <com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: int MSG_SERVER_DISCONNECTED> = 25;

        <com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: int MSG_SERVER_CONNECTED> = 24;

        <com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: int MSG_RESPONSE_PAIRING_RESULT> = 20;

        <com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: int MSG_RESPONSE_PAIRING_PORT> = 21;

        <com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: int MSG_REQ_UNPAIR> = 17;

        <com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: int MSG_PAIR_QR_CODE> = 16;

        <com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: int MSG_PAIR_PAIRING_CODE> = 15;

        <com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: int MSG_PAIRING_CANCEL> = 14;

        <com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: java.lang.String MSG_DISCONNECT_DEVICE> = "DD";

        <com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: java.lang.String MSG_DISABLE_ADBDWIFI> = "DA";

        <com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: int MSG_ADBWIFI_DENY> = 19;

        <com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: int MSG_ADBWIFI_ALLOW> = 18;

        <com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: int MSG_ADBD_SOCKET_DISCONNECTED> = 27;

        <com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: int MSG_ADBD_SOCKET_CONNECTED> = 26;

        <com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: int MSG_ADBDWIFI_ENABLE> = 11;

        <com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: int MSG_ADBDWIFI_DISABLE> = 12;

        <com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: int MESSAGE_ADB_UPDATE_KEYSTORE> = 9;

        <com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: int MESSAGE_ADB_PERSIST_KEYSTORE> = 8;

        <com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: int MESSAGE_ADB_ENABLED> = 1;

        <com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: int MESSAGE_ADB_DISCONNECT> = 7;

        <com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: int MESSAGE_ADB_DISABLED> = 2;

        <com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: int MESSAGE_ADB_DENY> = 4;

        <com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: int MESSAGE_ADB_CONNECTED_KEY> = 10;

        <com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: int MESSAGE_ADB_CONFIRM> = 5;

        <com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: int MESSAGE_ADB_CLEAR> = 6;

        <com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: int MESSAGE_ADB_ALLOW> = 3;

        <com.android.server.adb.AdbDebuggingManager$AdbDebuggingHandler: java.lang.String ADB_NOTIFICATION_CHANNEL_ID_TV> = "usbdevicemanager.adb.tv";

        return;
    }
}
