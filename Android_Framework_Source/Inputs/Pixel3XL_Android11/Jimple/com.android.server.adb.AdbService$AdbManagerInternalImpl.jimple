class com.android.server.adb.AdbService$AdbManagerInternalImpl extends android.debug.AdbManagerInternal
{
    final com.android.server.adb.AdbService this$0;

    private void <init>(com.android.server.adb.AdbService)
    {
        com.android.server.adb.AdbService$AdbManagerInternalImpl r0;
        com.android.server.adb.AdbService r1;

        r0 := @this: com.android.server.adb.AdbService$AdbManagerInternalImpl;

        r1 := @parameter0: com.android.server.adb.AdbService;

        r0.<com.android.server.adb.AdbService$AdbManagerInternalImpl: com.android.server.adb.AdbService this$0> = r1;

        specialinvoke r0.<android.debug.AdbManagerInternal: void <init>()>();

        return;
    }

    void <init>(com.android.server.adb.AdbService, com.android.server.adb.AdbService$1)
    {
        com.android.server.adb.AdbService$AdbManagerInternalImpl r0;
        com.android.server.adb.AdbService r1;
        com.android.server.adb.AdbService$1 r2;

        r0 := @this: com.android.server.adb.AdbService$AdbManagerInternalImpl;

        r1 := @parameter0: com.android.server.adb.AdbService;

        r2 := @parameter1: com.android.server.adb.AdbService$1;

        specialinvoke r0.<com.android.server.adb.AdbService$AdbManagerInternalImpl: void <init>(com.android.server.adb.AdbService)>(r1);

        return;
    }

    static void lambda$startAdbdForTransport$0(java.lang.Object, boolean, byte)
    {
        java.lang.Object r0;
        boolean z0;
        byte b0;
        com.android.server.adb.AdbService $r1;

        r0 := @parameter0: java.lang.Object;

        z0 := @parameter1: boolean;

        b0 := @parameter2: byte;

        $r1 = (com.android.server.adb.AdbService) r0;

        staticinvoke <com.android.server.adb.AdbService: void access$500(com.android.server.adb.AdbService,boolean,byte)>($r1, z0, b0);

        return;
    }

    static void lambda$stopAdbdForTransport$1(java.lang.Object, boolean, byte)
    {
        java.lang.Object r0;
        boolean z0;
        byte b0;
        com.android.server.adb.AdbService $r1;

        r0 := @parameter0: java.lang.Object;

        z0 := @parameter1: boolean;

        b0 := @parameter2: byte;

        $r1 = (com.android.server.adb.AdbService) r0;

        staticinvoke <com.android.server.adb.AdbService: void access$500(com.android.server.adb.AdbService,boolean,byte)>($r1, z0, b0);

        return;
    }

    public java.io.File getAdbKeysFile()
    {
        com.android.server.adb.AdbService$AdbManagerInternalImpl r0;
        com.android.server.adb.AdbService $r1, $r3;
        com.android.server.adb.AdbDebuggingManager $r2, $r4;
        java.io.File r5;

        r0 := @this: com.android.server.adb.AdbService$AdbManagerInternalImpl;

        $r1 = r0.<com.android.server.adb.AdbService$AdbManagerInternalImpl: com.android.server.adb.AdbService this$0>;

        $r2 = staticinvoke <com.android.server.adb.AdbService: com.android.server.adb.AdbDebuggingManager access$400(com.android.server.adb.AdbService)>($r1);

        if $r2 != null goto label1;

        r5 = null;

        goto label2;

     label1:
        $r3 = r0.<com.android.server.adb.AdbService$AdbManagerInternalImpl: com.android.server.adb.AdbService this$0>;

        $r4 = staticinvoke <com.android.server.adb.AdbService: com.android.server.adb.AdbDebuggingManager access$400(com.android.server.adb.AdbService)>($r3);

        r5 = virtualinvoke $r4.<com.android.server.adb.AdbDebuggingManager: java.io.File getUserKeyFile()>();

     label2:
        return r5;
    }

    public java.io.File getAdbTempKeysFile()
    {
        com.android.server.adb.AdbService$AdbManagerInternalImpl r0;
        com.android.server.adb.AdbService $r1, $r3;
        com.android.server.adb.AdbDebuggingManager $r2, $r4;
        java.io.File r5;

        r0 := @this: com.android.server.adb.AdbService$AdbManagerInternalImpl;

        $r1 = r0.<com.android.server.adb.AdbService$AdbManagerInternalImpl: com.android.server.adb.AdbService this$0>;

        $r2 = staticinvoke <com.android.server.adb.AdbService: com.android.server.adb.AdbDebuggingManager access$400(com.android.server.adb.AdbService)>($r1);

        if $r2 != null goto label1;

        r5 = null;

        goto label2;

     label1:
        $r3 = r0.<com.android.server.adb.AdbService$AdbManagerInternalImpl: com.android.server.adb.AdbService this$0>;

        $r4 = staticinvoke <com.android.server.adb.AdbService: com.android.server.adb.AdbDebuggingManager access$400(com.android.server.adb.AdbService)>($r3);

        r5 = virtualinvoke $r4.<com.android.server.adb.AdbDebuggingManager: java.io.File getAdbTempKeysFile()>();

     label2:
        return r5;
    }

    public boolean isAdbEnabled(byte)
    {
        com.android.server.adb.AdbService$AdbManagerInternalImpl r0;
        byte b0;
        java.lang.StringBuilder $r2;
        java.lang.IllegalArgumentException $r5;
        java.lang.String $r6;
        com.android.server.adb.AdbService $r7, $r8;
        boolean $z0, $z1;

        r0 := @this: com.android.server.adb.AdbService$AdbManagerInternalImpl;

        b0 := @parameter0: byte;

        if b0 != 0 goto label1;

        $r8 = r0.<com.android.server.adb.AdbService$AdbManagerInternalImpl: com.android.server.adb.AdbService this$0>;

        $z1 = staticinvoke <com.android.server.adb.AdbService: boolean access$200(com.android.server.adb.AdbService)>($r8);

        return $z1;

     label1:
        if b0 != 1 goto label2;

        $r7 = r0.<com.android.server.adb.AdbService$AdbManagerInternalImpl: com.android.server.adb.AdbService this$0>;

        $z0 = staticinvoke <com.android.server.adb.AdbService: boolean access$300(com.android.server.adb.AdbService)>($r7);

        return $z0;

     label2:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isAdbEnabled called with unimplemented transport type=");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b0);

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r5;
    }

    public void registerTransport(android.debug.IAdbTransport)
    {
        com.android.server.adb.AdbService$AdbManagerInternalImpl r0;
        android.debug.IAdbTransport r1;
        com.android.server.adb.AdbService $r2;
        android.util.ArrayMap $r3;
        android.os.IBinder $r4;

        r0 := @this: com.android.server.adb.AdbService$AdbManagerInternalImpl;

        r1 := @parameter0: android.debug.IAdbTransport;

        $r2 = r0.<com.android.server.adb.AdbService$AdbManagerInternalImpl: com.android.server.adb.AdbService this$0>;

        $r3 = staticinvoke <com.android.server.adb.AdbService: android.util.ArrayMap access$100(com.android.server.adb.AdbService)>($r2);

        $r4 = interfaceinvoke r1.<android.debug.IAdbTransport: android.os.IBinder asBinder()>();

        virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, r1);

        return;
    }

    public void startAdbdForTransport(byte)
    {
        com.android.server.adb.AdbService$AdbManagerInternalImpl r0;
        byte b0;
        android.os.Handler $r1;
        com.android.server.adb.'-$$Lambda$AdbService$AdbManagerInternalImpl$eYI_FNtHA7A5dnyLFnC4mhwBDEo' $r2;
        com.android.server.adb.AdbService $r3;
        java.lang.Boolean $r4;
        java.lang.Byte $r5;
        android.os.Message $r6;
        com.android.internal.util.function.TriConsumer r7;

        r0 := @this: com.android.server.adb.AdbService$AdbManagerInternalImpl;

        b0 := @parameter0: byte;

        $r1 = staticinvoke <com.android.server.FgThread: android.os.Handler getHandler()>();

        $r2 = <com.android.server.adb._$$Lambda$AdbService$AdbManagerInternalImpl$eYI_FNtHA7A5dnyLFnC4mhwBDEo: com.android.server.adb.'-$$Lambda$AdbService$AdbManagerInternalImpl$eYI_FNtHA7A5dnyLFnC4mhwBDEo' INSTANCE>;

        $r3 = r0.<com.android.server.adb.AdbService$AdbManagerInternalImpl: com.android.server.adb.AdbService this$0>;

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        $r5 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>(b0);

        r7 = (com.android.internal.util.function.TriConsumer) $r2;

        $r6 = staticinvoke <com.android.internal.util.function.pooled.PooledLambda: android.os.Message obtainMessage(com.android.internal.util.function.TriConsumer,java.lang.Object,java.lang.Object,java.lang.Object)>(r7, $r3, $r4, $r5);

        virtualinvoke $r1.<android.os.Handler: boolean sendMessage(android.os.Message)>($r6);

        return;
    }

    public void stopAdbdForTransport(byte)
    {
        com.android.server.adb.AdbService$AdbManagerInternalImpl r0;
        byte b0;
        android.os.Handler $r1;
        com.android.server.adb.'-$$Lambda$AdbService$AdbManagerInternalImpl$jgrEiL2yPVkymVh0sKSMHbmTnmY' $r2;
        com.android.server.adb.AdbService $r3;
        java.lang.Boolean $r4;
        java.lang.Byte $r5;
        android.os.Message $r6;
        com.android.internal.util.function.TriConsumer r7;

        r0 := @this: com.android.server.adb.AdbService$AdbManagerInternalImpl;

        b0 := @parameter0: byte;

        $r1 = staticinvoke <com.android.server.FgThread: android.os.Handler getHandler()>();

        $r2 = <com.android.server.adb._$$Lambda$AdbService$AdbManagerInternalImpl$jgrEiL2yPVkymVh0sKSMHbmTnmY: com.android.server.adb.'-$$Lambda$AdbService$AdbManagerInternalImpl$jgrEiL2yPVkymVh0sKSMHbmTnmY' INSTANCE>;

        $r3 = r0.<com.android.server.adb.AdbService$AdbManagerInternalImpl: com.android.server.adb.AdbService this$0>;

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $r5 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>(b0);

        r7 = (com.android.internal.util.function.TriConsumer) $r2;

        $r6 = staticinvoke <com.android.internal.util.function.pooled.PooledLambda: android.os.Message obtainMessage(com.android.internal.util.function.TriConsumer,java.lang.Object,java.lang.Object,java.lang.Object)>(r7, $r3, $r4, $r5);

        virtualinvoke $r1.<android.os.Handler: boolean sendMessage(android.os.Message)>($r6);

        return;
    }

    public void unregisterTransport(android.debug.IAdbTransport)
    {
        com.android.server.adb.AdbService$AdbManagerInternalImpl r0;
        android.debug.IAdbTransport r1;
        com.android.server.adb.AdbService $r2;
        android.util.ArrayMap $r3;
        android.os.IBinder $r4;

        r0 := @this: com.android.server.adb.AdbService$AdbManagerInternalImpl;

        r1 := @parameter0: android.debug.IAdbTransport;

        $r2 = r0.<com.android.server.adb.AdbService$AdbManagerInternalImpl: com.android.server.adb.AdbService this$0>;

        $r3 = staticinvoke <com.android.server.adb.AdbService: android.util.ArrayMap access$100(com.android.server.adb.AdbService)>($r2);

        $r4 = interfaceinvoke r1.<android.debug.IAdbTransport: android.os.IBinder asBinder()>();

        virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>($r4);

        return;
    }
}
