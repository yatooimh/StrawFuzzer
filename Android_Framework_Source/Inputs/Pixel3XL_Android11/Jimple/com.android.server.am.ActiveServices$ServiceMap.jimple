final class com.android.server.am.ActiveServices$ServiceMap extends android.os.Handler
{
    static final int MSG_BG_START_TIMEOUT;
    static final int MSG_ENSURE_NOT_START_BG;
    static final int MSG_UPDATE_FOREGROUND_APPS;
    final android.util.ArrayMap mActiveForegroundApps;
    boolean mActiveForegroundAppsChanged;
    final java.util.ArrayList mDelayedStartList;
    final android.util.ArrayMap mServicesByInstanceName;
    final android.util.ArrayMap mServicesByIntent;
    final java.util.ArrayList mStartingBackground;
    final int mUserId;
    final com.android.server.am.ActiveServices this$0;

    void <init>(com.android.server.am.ActiveServices, android.os.Looper, int)
    {
        com.android.server.am.ActiveServices$ServiceMap r0;
        com.android.server.am.ActiveServices r1;
        android.os.Looper r2;
        int i0;
        android.util.ArrayMap $r3, $r4, $r7;
        java.util.ArrayList $r5, $r6;

        r0 := @this: com.android.server.am.ActiveServices$ServiceMap;

        r1 := @parameter0: com.android.server.am.ActiveServices;

        r2 := @parameter1: android.os.Looper;

        i0 := @parameter2: int;

        r0.<com.android.server.am.ActiveServices$ServiceMap: com.android.server.am.ActiveServices this$0> = r1;

        specialinvoke r0.<android.os.Handler: void <init>(android.os.Looper)>(r2);

        $r3 = new android.util.ArrayMap;

        specialinvoke $r3.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.am.ActiveServices$ServiceMap: android.util.ArrayMap mServicesByInstanceName> = $r3;

        $r4 = new android.util.ArrayMap;

        specialinvoke $r4.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.am.ActiveServices$ServiceMap: android.util.ArrayMap mServicesByIntent> = $r4;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.ActiveServices$ServiceMap: java.util.ArrayList mDelayedStartList> = $r5;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.ActiveServices$ServiceMap: java.util.ArrayList mStartingBackground> = $r6;

        $r7 = new android.util.ArrayMap;

        specialinvoke $r7.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.am.ActiveServices$ServiceMap: android.util.ArrayMap mActiveForegroundApps> = $r7;

        r0.<com.android.server.am.ActiveServices$ServiceMap: int mUserId> = i0;

        return;
    }

    void ensureNotStartingBackgroundLocked(com.android.server.am.ServiceRecord)
    {
        com.android.server.am.ActiveServices$ServiceMap r0;
        com.android.server.am.ServiceRecord r1;
        java.util.ArrayList $r2, $r3;
        boolean $z0;
        android.os.Message $r4;

        r0 := @this: com.android.server.am.ActiveServices$ServiceMap;

        r1 := @parameter0: com.android.server.am.ServiceRecord;

        $r2 = r0.<com.android.server.am.ActiveServices$ServiceMap: java.util.ArrayList mStartingBackground>;

        $z0 = virtualinvoke $r2.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        virtualinvoke r0.<com.android.server.am.ActiveServices$ServiceMap: void removeMessages(int)>(3);

        $r4 = virtualinvoke r0.<com.android.server.am.ActiveServices$ServiceMap: android.os.Message obtainMessage(int)>(3);

        virtualinvoke r0.<com.android.server.am.ActiveServices$ServiceMap: boolean sendMessage(android.os.Message)>($r4);

     label1:
        $r3 = r0.<com.android.server.am.ActiveServices$ServiceMap: java.util.ArrayList mDelayedStartList>;

        virtualinvoke $r3.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        return;
    }

    public void handleMessage(android.os.Message)
    {
        com.android.server.am.ActiveServices$ServiceMap r0;
        int i0;
        com.android.server.am.ActiveServices $r1, $r2, $r3;
        java.lang.Throwable $r4, $r5;
        android.os.Message r6;
        com.android.server.am.ActivityManagerService r7, r9;

        r0 := @this: com.android.server.am.ActiveServices$ServiceMap;

        r6 := @parameter0: android.os.Message;

        i0 = r6.<android.os.Message: int what>;

        if i0 == 1 goto label08;

        if i0 == 2 goto label07;

        if i0 == 3 goto label01;

        goto label11;

     label01:
        $r3 = r0.<com.android.server.am.ActiveServices$ServiceMap: com.android.server.am.ActiveServices this$0>;

        r7 = $r3.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        entermonitor r7;

     label02:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        virtualinvoke r0.<com.android.server.am.ActiveServices$ServiceMap: void rescheduleDelayedStartsLocked()>();

        exitmonitor r7;

     label03:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        goto label11;

     label04:
        $r5 := @caughtexception;

     label05:
        exitmonitor r7;

     label06:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r5;

     label07:
        $r2 = r0.<com.android.server.am.ActiveServices$ServiceMap: com.android.server.am.ActiveServices this$0>;

        virtualinvoke $r2.<com.android.server.am.ActiveServices: void updateForegroundApps(com.android.server.am.ActiveServices$ServiceMap)>(r0);

        goto label11;

     label08:
        $r1 = r0.<com.android.server.am.ActiveServices$ServiceMap: com.android.server.am.ActiveServices this$0>;

        r9 = $r1.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        entermonitor r9;

     label09:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        virtualinvoke r0.<com.android.server.am.ActiveServices$ServiceMap: void rescheduleDelayedStartsLocked()>();

        exitmonitor r9;

     label10:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

     label11:
        return;

     label12:
        $r4 := @caughtexception;

     label13:
        exitmonitor r9;

     label14:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r4;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label05 to label06 with label04;
        catch java.lang.Throwable from label09 to label10 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    void rescheduleDelayedStartsLocked()
    {
        com.android.server.am.ActiveServices$ServiceMap r0;
        java.util.ArrayList $r1, $r2, $r3, $r6, $r9, $r11, $r13, $r14, $r28, $r34, $r43;
        int $i0, $i1, $i2, $i5, $i6, $i7, i13, i14, i15, i16, $i17, $i18;
        com.android.server.am.ActiveServices $r4, $r10, $r15, $r44;
        com.android.server.am.ActivityManagerService $r5;
        java.lang.Object $r7, $r12, $r16, $r29;
        long $l3, $l9, l12;
        byte $b4, $b10;
        android.os.Message $r8;
        com.android.server.am.ServiceRecord$StartItem $r17;
        android.content.Intent $r18;
        java.lang.StringBuilder $r20, $r30;
        boolean $z1, $z2;
        java.lang.String $r27, $r33;
        android.os.TransactionTooLargeException $r36;
        com.android.server.am.ServiceRecord r37, r39, r42;

        r0 := @this: com.android.server.am.ActiveServices$ServiceMap;

        virtualinvoke r0.<com.android.server.am.ActiveServices$ServiceMap: void removeMessages(int)>(1);

        l12 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        i13 = 0;

        $r1 = r0.<com.android.server.am.ActiveServices$ServiceMap: java.util.ArrayList mStartingBackground>;

        i14 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

     label01:
        if i13 >= i14 goto label03;

        $r28 = r0.<com.android.server.am.ActiveServices$ServiceMap: java.util.ArrayList mStartingBackground>;

        $r29 = virtualinvoke $r28.<java.util.ArrayList: java.lang.Object get(int)>(i13);

        r37 = (com.android.server.am.ServiceRecord) $r29;

        i15 = i13;

        i16 = i14;

        $l9 = r37.<com.android.server.am.ServiceRecord: long startingBgTimeout>;

        $b10 = $l9 cmp l12;

        if $b10 > 0 goto label02;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Waited long enough for: ");

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r37);

        $r33 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", $r33);

        $r34 = r0.<com.android.server.am.ActiveServices$ServiceMap: java.util.ArrayList mStartingBackground>;

        virtualinvoke $r34.<java.util.ArrayList: java.lang.Object remove(int)>(i13);

        i16 = i14 - 1;

        i15 = i13 - 1;

     label02:
        i13 = i15 + 1;

        i14 = i16;

        goto label01;

     label03:
        $r2 = r0.<com.android.server.am.ActiveServices$ServiceMap: java.util.ArrayList mDelayedStartList>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if $i0 <= 0 goto label08;

        $r9 = r0.<com.android.server.am.ActiveServices$ServiceMap: java.util.ArrayList mStartingBackground>;

        $i5 = virtualinvoke $r9.<java.util.ArrayList: int size()>();

        $r10 = r0.<com.android.server.am.ActiveServices$ServiceMap: com.android.server.am.ActiveServices this$0>;

        $i6 = $r10.<com.android.server.am.ActiveServices: int mMaxStartingBackground>;

        if $i5 >= $i6 goto label08;

        $r11 = r0.<com.android.server.am.ActiveServices$ServiceMap: java.util.ArrayList mDelayedStartList>;

        $r12 = virtualinvoke $r11.<java.util.ArrayList: java.lang.Object remove(int)>(0);

        r39 = (com.android.server.am.ServiceRecord) $r12;

        r39.<com.android.server.am.ServiceRecord: boolean delayed> = 0;

        $r13 = r39.<com.android.server.am.ServiceRecord: java.util.ArrayList pendingStarts>;

        $i7 = virtualinvoke $r13.<java.util.ArrayList: int size()>();

        if $i7 > 0 goto label04;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("**** NO PENDING STARTS! ");

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r39);

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" startReq=");

        $z1 = r39.<com.android.server.am.ServiceRecord: boolean startRequested>;

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" delayedStop=");

        $z2 = r39.<com.android.server.am.ServiceRecord: boolean delayedStop>;

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        $r27 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("ActivityManager", $r27);

        goto label07;

     label04:
        $r15 = r0.<com.android.server.am.ActiveServices$ServiceMap: com.android.server.am.ActiveServices this$0>;

        $r14 = r39.<com.android.server.am.ServiceRecord: java.util.ArrayList pendingStarts>;

        $r16 = virtualinvoke $r14.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r17 = (com.android.server.am.ServiceRecord$StartItem) $r16;

        $r18 = $r17.<com.android.server.am.ServiceRecord$StartItem: android.content.Intent intent>;

        virtualinvoke $r15.<com.android.server.am.ActiveServices: android.content.ComponentName startServiceInnerLocked(com.android.server.am.ActiveServices$ServiceMap,android.content.Intent,com.android.server.am.ServiceRecord,boolean,boolean)>(r0, $r18, r39, 0, 1);

     label05:
        goto label07;

     label06:
        $r36 := @caughtexception;

     label07:
        goto label03;

     label08:
        $r3 = r0.<com.android.server.am.ActiveServices$ServiceMap: java.util.ArrayList mStartingBackground>;

        $i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if $i1 <= 0 goto label10;

        $r6 = r0.<com.android.server.am.ActiveServices$ServiceMap: java.util.ArrayList mStartingBackground>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(0);

        r42 = (com.android.server.am.ServiceRecord) $r7;

        $l3 = r42.<com.android.server.am.ServiceRecord: long startingBgTimeout>;

        $b4 = $l3 cmp l12;

        if $b4 <= 0 goto label09;

        l12 = r42.<com.android.server.am.ServiceRecord: long startingBgTimeout>;

        goto label09;

     label09:
        $r8 = virtualinvoke r0.<com.android.server.am.ActiveServices$ServiceMap: android.os.Message obtainMessage(int)>(1);

        virtualinvoke r0.<com.android.server.am.ActiveServices$ServiceMap: boolean sendMessageAtTime(android.os.Message,long)>($r8, l12);

     label10:
        $r43 = r0.<com.android.server.am.ActiveServices$ServiceMap: java.util.ArrayList mStartingBackground>;

        $i17 = virtualinvoke $r43.<java.util.ArrayList: int size()>();

        $r44 = r0.<com.android.server.am.ActiveServices$ServiceMap: com.android.server.am.ActiveServices this$0>;

        $i18 = $r44.<com.android.server.am.ActiveServices: int mMaxStartingBackground>;

        if $i17 >= $i18 goto label11;

        $r4 = r0.<com.android.server.am.ActiveServices$ServiceMap: com.android.server.am.ActiveServices this$0>;

        $r5 = $r4.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $i2 = r0.<com.android.server.am.ActiveServices$ServiceMap: int mUserId>;

        virtualinvoke $r5.<com.android.server.am.ActivityManagerService: void backgroundServicesFinishedLocked(int)>($i2);

     label11:
        return;

        catch android.os.TransactionTooLargeException from label04 to label05 with label06;
    }

    public static void <clinit>()
    {
        <com.android.server.am.ActiveServices$ServiceMap: int MSG_UPDATE_FOREGROUND_APPS> = 2;

        <com.android.server.am.ActiveServices$ServiceMap: int MSG_ENSURE_NOT_START_BG> = 3;

        <com.android.server.am.ActiveServices$ServiceMap: int MSG_BG_START_TIMEOUT> = 1;

        return;
    }
}
