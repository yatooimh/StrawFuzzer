public final class com.android.server.am.ActiveServices extends java.lang.Object
{
    private static final boolean DEBUG_DELAYED_SERVICE;
    private static final boolean DEBUG_DELAYED_STARTS;
    private static final int DEBUG_FGS_ALLOW_WHILE_IN_USE;
    private static final int DEBUG_FGS_ENFORCE_TYPE;
    static final int LAST_ANR_LIFETIME_DURATION_MSECS;
    private static final boolean LOG_SERVICE_START_STOP;
    static final int SERVICE_BACKGROUND_TIMEOUT;
    static final int SERVICE_START_FOREGROUND_TIMEOUT;
    static final int SERVICE_TIMEOUT;
    private static final boolean SHOW_DUNGEON_NOTIFICATION;
    private static final java.lang.String TAG;
    private static final java.lang.String TAG_MU;
    private static final java.lang.String TAG_SERVICE;
    private static final java.lang.String TAG_SERVICE_EXECUTING;
    final com.android.server.am.ActivityManagerService mAm;
    android.appwidget.AppWidgetManagerInternal mAppWidgetManagerInternal;
    final java.util.ArrayList mDestroyingServices;
    private final android.util.SparseArray mFgsAppOpCallbacks;
    java.lang.String mLastAnrDump;
    final java.lang.Runnable mLastAnrDumpClearer;
    final int mMaxStartingBackground;
    final java.util.ArrayList mPendingServices;
    final java.util.ArrayList mRestartingServices;
    boolean mScreenOn;
    final android.util.ArrayMap mServiceConnections;
    final android.util.SparseArray mServiceMap;
    private java.util.ArrayList mTmpCollectionResults;
    android.util.ArraySet mWhiteListAllowWhileInUsePermissionInFgs;

    public void <init>(com.android.server.am.ActivityManagerService)
    {
        com.android.server.am.ActiveServices r0;
        android.util.SparseArray $r1, $r6;
        android.util.ArrayMap $r2;
        java.util.ArrayList $r3, $r4, $r5;
        android.util.ArraySet $r7;
        com.android.server.am.ActiveServices$1 $r8;
        java.lang.String $r9;
        boolean $z0;
        java.lang.RuntimeException $r10;
        com.android.server.am.ActivityManagerService r11;
        int i2;

        r0 := @this: com.android.server.am.ActiveServices;

        r11 := @parameter0: com.android.server.am.ActivityManagerService;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new android.util.SparseArray;

        specialinvoke $r1.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.am.ActiveServices: android.util.SparseArray mServiceMap> = $r1;

        $r2 = new android.util.ArrayMap;

        specialinvoke $r2.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.am.ActiveServices: android.util.ArrayMap mServiceConnections> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.ActiveServices: java.util.ArrayList mPendingServices> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.ActiveServices: java.util.ArrayList mRestartingServices> = $r4;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.ActiveServices: java.util.ArrayList mDestroyingServices> = $r5;

        r0.<com.android.server.am.ActiveServices: java.util.ArrayList mTmpCollectionResults> = null;

        $r6 = new android.util.SparseArray;

        specialinvoke $r6.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.am.ActiveServices: android.util.SparseArray mFgsAppOpCallbacks> = $r6;

        r0.<com.android.server.am.ActiveServices: boolean mScreenOn> = 1;

        $r7 = new android.util.ArraySet;

        specialinvoke $r7.<android.util.ArraySet: void <init>()>();

        r0.<com.android.server.am.ActiveServices: android.util.ArraySet mWhiteListAllowWhileInUsePermissionInFgs> = $r7;

        $r8 = new com.android.server.am.ActiveServices$1;

        specialinvoke $r8.<com.android.server.am.ActiveServices$1: void <init>(com.android.server.am.ActiveServices)>(r0);

        r0.<com.android.server.am.ActiveServices: java.lang.Runnable mLastAnrDumpClearer> = $r8;

        r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm> = r11;

     label1:
        $r9 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String,java.lang.String)>("ro.config.max_starting_bg", "0");

        i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r9);

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        i2 = 0;

     label4:
        if i2 <= 0 goto label5;

        goto label7;

     label5:
        $z0 = staticinvoke <android.app.ActivityManager: boolean isLowRamDeviceStatic()>();

        if $z0 == 0 goto label6;

        i2 = 1;

        goto label7;

     label6:
        i2 = 8;

     label7:
        r0.<com.android.server.am.ActiveServices: int mMaxStartingBackground> = i2;

        return;

        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    static java.lang.String access$100(com.android.server.am.ActiveServices, com.android.server.am.ServiceRecord, int, boolean, boolean, boolean) throws android.os.TransactionTooLargeException
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ServiceRecord r1;
        int i0;
        boolean z0, z1, z2;
        java.lang.String $r2;

        r0 := @parameter0: com.android.server.am.ActiveServices;

        r1 := @parameter1: com.android.server.am.ServiceRecord;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        z2 := @parameter5: boolean;

        $r2 = specialinvoke r0.<com.android.server.am.ActiveServices: java.lang.String bringUpServiceLocked(com.android.server.am.ServiceRecord,int,boolean,boolean,boolean)>(r1, i0, z0, z1, z2);

        return $r2;
    }

    static com.android.server.am.ActiveServices$ServiceMap access$300(com.android.server.am.ActiveServices, int)
    {
        com.android.server.am.ActiveServices r0;
        int i0;
        com.android.server.am.ActiveServices$ServiceMap $r1;

        r0 := @parameter0: com.android.server.am.ActiveServices;

        i0 := @parameter1: int;

        $r1 = specialinvoke r0.<com.android.server.am.ActiveServices: com.android.server.am.ActiveServices$ServiceMap getServiceMapLocked(int)>(i0);

        return $r1;
    }

    private boolean appIsTopLocked(int)
    {
        com.android.server.am.ActiveServices r0;
        int i0, $i1;
        com.android.server.am.ActivityManagerService $r1;
        boolean z0;

        r0 := @this: com.android.server.am.ActiveServices;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $i1 = virtualinvoke $r1.<com.android.server.am.ActivityManagerService: int getUidState(int)>(i0);

        if $i1 > 2 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private boolean appRestrictedAnyInBackground(int, java.lang.String)
    {
        com.android.server.am.ActiveServices r0;
        int i0, $i1;
        java.lang.String r1;
        com.android.server.am.ActivityManagerService $r2;
        android.app.AppOpsManager $r3;
        boolean z0;

        r0 := @this: com.android.server.am.ActiveServices;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r2 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r3 = virtualinvoke $r2.<com.android.server.am.ActivityManagerService: android.app.AppOpsManager getAppOpsManager()>();

        $i1 = virtualinvoke $r3.<android.app.AppOpsManager: int checkOpNoThrow(int,int,java.lang.String)>(70, i0, r1);

        if $i1 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private final void bringDownServiceIfNeededLocked(com.android.server.am.ServiceRecord, boolean, boolean)
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ServiceRecord r1;
        boolean z0, z1, $z2, $z3;
        java.util.ArrayList $r2;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: com.android.server.am.ServiceRecord;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        $z2 = specialinvoke r0.<com.android.server.am.ActiveServices: boolean isServiceNeededLocked(com.android.server.am.ServiceRecord,boolean,boolean)>(r1, z0, z1);

        if $z2 == 0 goto label1;

        return;

     label1:
        $r2 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mPendingServices>;

        $z3 = virtualinvoke $r2.<java.util.ArrayList: boolean contains(java.lang.Object)>(r1);

        if $z3 == 0 goto label2;

        return;

     label2:
        specialinvoke r0.<com.android.server.am.ActiveServices: void bringDownServiceLocked(com.android.server.am.ServiceRecord)>(r1);

        return;
    }

    private final void bringDownServiceLocked(com.android.server.am.ServiceRecord)
    {
        com.android.server.am.ActiveServices r0;
        long l0, $l8, $l12, $l21;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i10, $i11, $i13, $i14, i18, i19, i20, $i22, i23, $i24, i25;
        com.android.server.am.ProcessRecord $r2, $r19, $r20, $r21, $r23, $r25, $r27, $r29, $r70, $r73, $r80, $r83, $r87, $r123, $r148;
        android.content.Intent$FilterComparison $r3, $r88;
        android.util.ArrayMap $r4, $r16, $r48, $r82, $r85, r129, $r140, $r153;
        java.util.ArrayList $r6, $r24, $r43, $r45, r130, $r146, $r147;
        boolean $z1, $z3, $z5, $z8, $z11, z12, z13, $z14;
        java.lang.Runnable $r7, $r14;
        com.android.server.am.ActivityManagerService $r8, $r26, $r30, $r31, $r40, $r41, $r61, $r62, $r68, $r71, $r76, $r78, $r84;
        com.android.server.am.ProcessStatsService $r9, $r42, $r79;
        com.android.internal.app.procstats.ServiceState $r10, $r11, $r12, $r13, r137, r145;
        com.android.server.am.ActiveServices$ServiceRestarter $r15;
        com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv $r17, $r18;
        android.app.IApplicationThread $r22, $r28, $r81, $r89;
        com.android.server.appop.AppOpsService $r32, $r33, $r63, $r64;
        android.os.IBinder $r34, $r65, $r117;
        android.content.pm.ApplicationInfo $r35, $r37, $r66;
        java.lang.String $r36, $r38, $r56, $r60, $r67, $r75, $r99, $r101, $r105, $r107, $r111, $r124, $r127;
        android.content.ComponentName $r39, $r47, $r93, $r141;
        java.lang.Object $r44, $r86, $r91, $r92, $r114, $r120, $r142;
        java.lang.StringBuilder $r50, $r57, $r97, $r103, $r109;
        java.lang.IllegalStateException $r55;
        com.android.server.am.ActivityManagerService$MainHandler $r69, $r72, $r77;
        android.os.Bundle $r74;
        android.content.Intent $r90;
        android.app.IServiceConnection $r94, $r116;
        java.lang.Throwable $r95;
        java.lang.Exception $r96, $r102, $r108;
        com.android.server.am.ConnectionRecord $r115, $r121, r131;
        com.android.server.am.AppBindRecord $r122;
        com.android.server.am.ServiceRecord r128, r143;
        com.android.server.am.IntentBindRecord r133;
        android.os.Message r138;
        com.android.server.am.ActiveServices$ServiceMap r139;
        com.android.internal.os.BatteryStatsImpl r149;

        r0 := @this: com.android.server.am.ActiveServices;

        r128 := @parameter0: com.android.server.am.ServiceRecord;

        r129 = virtualinvoke r128.<com.android.server.am.ServiceRecord: android.util.ArrayMap getConnections()>();

        $i1 = virtualinvoke r129.<android.util.ArrayMap: int size()>();

        i18 = $i1 - 1;

     label01:
        if i18 < 0 goto label08;

        $r91 = virtualinvoke r129.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i18);

        r130 = (java.util.ArrayList) $r91;

        i19 = 0;

     label02:
        $i14 = virtualinvoke r130.<java.util.ArrayList: int size()>();

        if i19 >= $i14 goto label07;

        $r92 = virtualinvoke r130.<java.util.ArrayList: java.lang.Object get(int)>(i19);

        r131 = (com.android.server.am.ConnectionRecord) $r92;

        r131.<com.android.server.am.ConnectionRecord: boolean serviceDead> = 1;

        virtualinvoke r131.<com.android.server.am.ConnectionRecord: void stopAssociation()>();

     label03:
        $r94 = r131.<com.android.server.am.ConnectionRecord: android.app.IServiceConnection conn>;

        $r93 = r128.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        interfaceinvoke $r94.<android.app.IServiceConnection: void connected(android.content.ComponentName,android.os.IBinder,boolean)>($r93, null, 1);

     label04:
        goto label06;

     label05:
        $r108 := @caughtexception;

        $r109 = new java.lang.StringBuilder;

        specialinvoke $r109.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r109.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure disconnecting service ");

        $r111 = r128.<com.android.server.am.ServiceRecord: java.lang.String shortInstanceName>;

        virtualinvoke $r109.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r111);

        virtualinvoke $r109.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to connection ");

        $r114 = virtualinvoke r130.<java.util.ArrayList: java.lang.Object get(int)>(i19);

        $r115 = (com.android.server.am.ConnectionRecord) $r114;

        $r116 = $r115.<com.android.server.am.ConnectionRecord: android.app.IServiceConnection conn>;

        $r117 = interfaceinvoke $r116.<android.app.IServiceConnection: android.os.IBinder asBinder()>();

        virtualinvoke $r109.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r117);

        virtualinvoke $r109.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (in ");

        $r120 = virtualinvoke r130.<java.util.ArrayList: java.lang.Object get(int)>(i19);

        $r121 = (com.android.server.am.ConnectionRecord) $r120;

        $r122 = $r121.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        $r123 = $r122.<com.android.server.am.AppBindRecord: com.android.server.am.ProcessRecord client>;

        $r124 = $r123.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        virtualinvoke $r109.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r124);

        virtualinvoke $r109.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r127 = virtualinvoke $r109.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r127, $r108);

     label06:
        i19 = i19 + 1;

        goto label02;

     label07:
        i18 = i18 + -1;

        goto label01;

     label08:
        $r2 = r128.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r2 == null goto label17;

        $r80 = r128.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r81 = $r80.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r81 == null goto label17;

        z12 = 0;

        $r82 = r128.<com.android.server.am.ServiceRecord: android.util.ArrayMap bindings>;

        $i13 = virtualinvoke $r82.<android.util.ArrayMap: int size()>();

        i20 = $i13 - 1;

     label09:
        z13 = z12;

        if i20 < 0 goto label16;

        $r85 = r128.<com.android.server.am.ServiceRecord: android.util.ArrayMap bindings>;

        $r86 = virtualinvoke $r85.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i20);

        r133 = (com.android.server.am.IntentBindRecord) $r86;

        $z11 = r133.<com.android.server.am.IntentBindRecord: boolean hasBound>;

        if $z11 == 0 goto label15;

     label10:
        specialinvoke r0.<com.android.server.am.ActiveServices: void bumpServiceExecutingLocked(com.android.server.am.ServiceRecord,boolean,java.lang.String)>(r128, 0, "bring down unbind");

     label11:
        z12 = 1;

     label12:
        r133.<com.android.server.am.IntentBindRecord: boolean hasBound> = 0;

        r133.<com.android.server.am.IntentBindRecord: boolean requested> = 0;

        $r87 = r128.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r89 = $r87.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r88 = r133.<com.android.server.am.IntentBindRecord: android.content.Intent$FilterComparison intent>;

        $r90 = virtualinvoke $r88.<android.content.Intent$FilterComparison: android.content.Intent getIntent()>();

        interfaceinvoke $r89.<android.app.IApplicationThread: void scheduleUnbindService(android.os.IBinder,android.content.Intent)>(r128, $r90);

     label13:
        goto label15;

     label14:
        $r102 := @caughtexception;

        $r103 = new java.lang.StringBuilder;

        specialinvoke $r103.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r103.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception when unbinding service ");

        $r105 = r128.<com.android.server.am.ServiceRecord: java.lang.String shortInstanceName>;

        virtualinvoke $r103.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r105);

        $r107 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r107, $r102);

        z13 = 0;

        specialinvoke r0.<com.android.server.am.ActiveServices: void serviceProcessGoneLocked(com.android.server.am.ServiceRecord)>(r128);

        goto label16;

     label15:
        i20 = i20 + -1;

        goto label09;

     label16:
        if z13 == 0 goto label17;

        $r84 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r83 = r128.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        virtualinvoke $r84.<com.android.server.am.ActivityManagerService: boolean updateOomAdjLocked(com.android.server.am.ProcessRecord,boolean,java.lang.String)>($r83, 1, "updateOomAdj_unbindService");

     label17:
        $z14 = r128.<com.android.server.am.ServiceRecord: boolean fgRequired>;

        if $z14 == 0 goto label19;

        $r57 = new java.lang.StringBuilder;

        specialinvoke $r57.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bringing down service while still waiting for start foreground: ");

        virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r128);

        $r60 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r60);

        r128.<com.android.server.am.ServiceRecord: boolean fgRequired> = 0;

        r128.<com.android.server.am.ServiceRecord: boolean fgWaiting> = 0;

        r137 = virtualinvoke r128.<com.android.server.am.ServiceRecord: com.android.internal.app.procstats.ServiceState getTracker()>();

        if r137 == null goto label18;

        $r78 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r79 = $r78.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        $i11 = virtualinvoke $r79.<com.android.server.am.ProcessStatsService: int getMemFactorLocked()>();

        $l12 = r128.<com.android.server.am.ServiceRecord: long lastActivity>;

        virtualinvoke r137.<com.android.internal.app.procstats.ServiceState: void setForeground(boolean,int,long)>(0, $i11, $l12);

     label18:
        $r61 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r64 = $r61.<com.android.server.am.ActivityManagerService: com.android.server.appop.AppOpsService mAppOpsService>;

        $r62 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r63 = $r62.<com.android.server.am.ActivityManagerService: com.android.server.appop.AppOpsService mAppOpsService>;

        $r65 = staticinvoke <android.app.AppOpsManager: android.os.IBinder getToken(com.android.internal.app.IAppOpsService)>($r63);

        $r66 = r128.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $i10 = $r66.<android.content.pm.ApplicationInfo: int uid>;

        $r67 = r128.<com.android.server.am.ServiceRecord: java.lang.String packageName>;

        virtualinvoke $r64.<com.android.server.appop.AppOpsService: void finishOperation(android.os.IBinder,int,int,java.lang.String,java.lang.String)>($r65, 76, $i10, $r67, null);

        $r68 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r69 = $r68.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        virtualinvoke $r69.<com.android.server.am.ActivityManagerService$MainHandler: void removeMessages(int,java.lang.Object)>(66, r128);

        $r70 = r128.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r70 == null goto label19;

        $r71 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r72 = $r71.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        r138 = virtualinvoke $r72.<com.android.server.am.ActivityManagerService$MainHandler: android.os.Message obtainMessage(int)>(69);

        $r73 = r128.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        r138.<android.os.Message: java.lang.Object obj> = $r73;

        $r74 = virtualinvoke r138.<android.os.Message: android.os.Bundle getData()>();

        $r75 = virtualinvoke r128.<com.android.server.am.ServiceRecord: java.lang.String toString()>();

        virtualinvoke $r74.<android.os.Bundle: void putCharSequence(java.lang.String,java.lang.CharSequence)>("servicerecord", $r75);

        $r76 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r77 = $r76.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        virtualinvoke $r77.<com.android.server.am.ActivityManagerService$MainHandler: boolean sendMessage(android.os.Message)>(r138);

     label19:
        $l21 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r128.<com.android.server.am.ServiceRecord: long destroyTime> = $l21;

        $i22 = r128.<com.android.server.am.ServiceRecord: int userId>;

        r139 = specialinvoke r0.<com.android.server.am.ActiveServices: com.android.server.am.ActiveServices$ServiceMap getServiceMapLocked(int)>($i22);

        $r140 = r139.<com.android.server.am.ActiveServices$ServiceMap: android.util.ArrayMap mServicesByInstanceName>;

        $r141 = r128.<com.android.server.am.ServiceRecord: android.content.ComponentName instanceName>;

        $r142 = virtualinvoke $r140.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>($r141);

        r143 = (com.android.server.am.ServiceRecord) $r142;

        if r143 == null goto label21;

        if r143 != r128 goto label20;

        goto label21;

     label20:
        $r48 = r139.<com.android.server.am.ActiveServices$ServiceMap: android.util.ArrayMap mServicesByInstanceName>;

        $r47 = r128.<com.android.server.am.ServiceRecord: android.content.ComponentName instanceName>;

        virtualinvoke $r48.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r47, r143);

        $r50 = new java.lang.StringBuilder;

        specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bringing down ");

        virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r128);

        virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but actually running ");

        virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r143);

        $r55 = new java.lang.IllegalStateException;

        $r56 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r55.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r56);

        throw $r55;

     label21:
        $r4 = r139.<com.android.server.am.ActiveServices$ServiceMap: android.util.ArrayMap mServicesByIntent>;

        $r3 = r128.<com.android.server.am.ServiceRecord: android.content.Intent$FilterComparison intent>;

        virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>($r3);

        r128.<com.android.server.am.ServiceRecord: int totalRestartCount> = 0;

        specialinvoke r0.<com.android.server.am.ActiveServices: boolean unscheduleServiceRestartLocked(com.android.server.am.ServiceRecord,int,boolean)>(r128, 0, 1);

        $r6 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mPendingServices>;

        $i2 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        i23 = $i2 - 1;

     label22:
        if i23 < 0 goto label24;

        $r43 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mPendingServices>;

        $r44 = virtualinvoke $r43.<java.util.ArrayList: java.lang.Object get(int)>(i23);

        if $r44 != r128 goto label23;

        $r45 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mPendingServices>;

        virtualinvoke $r45.<java.util.ArrayList: java.lang.Object remove(int)>(i23);

     label23:
        i23 = i23 + -1;

        goto label22;

     label24:
        specialinvoke r0.<com.android.server.am.ActiveServices: void cancelForegroundNotificationLocked(com.android.server.am.ServiceRecord)>(r128);

        $z1 = r128.<com.android.server.am.ServiceRecord: boolean isForeground>;

        if $z1 == 0 goto label26;

        specialinvoke r0.<com.android.server.am.ActiveServices: void decActiveForegroundAppLocked(com.android.server.am.ActiveServices$ServiceMap,com.android.server.am.ServiceRecord)>(r139, r128);

        r145 = virtualinvoke r128.<com.android.server.am.ServiceRecord: com.android.internal.app.procstats.ServiceState getTracker()>();

        if r145 == null goto label25;

        $r41 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r42 = $r41.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        $i7 = virtualinvoke $r42.<com.android.server.am.ProcessStatsService: int getMemFactorLocked()>();

        $l8 = r128.<com.android.server.am.ServiceRecord: long lastActivity>;

        virtualinvoke r145.<com.android.internal.app.procstats.ServiceState: void setForeground(boolean,int,long)>(0, $i7, $l8);

     label25:
        $r30 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r33 = $r30.<com.android.server.am.ActivityManagerService: com.android.server.appop.AppOpsService mAppOpsService>;

        $r31 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r32 = $r31.<com.android.server.am.ActivityManagerService: com.android.server.appop.AppOpsService mAppOpsService>;

        $r34 = staticinvoke <android.app.AppOpsManager: android.os.IBinder getToken(com.android.internal.app.IAppOpsService)>($r32);

        $r35 = r128.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $i4 = $r35.<android.content.pm.ApplicationInfo: int uid>;

        $r36 = r128.<com.android.server.am.ServiceRecord: java.lang.String packageName>;

        virtualinvoke $r33.<com.android.server.appop.AppOpsService: void finishOperation(android.os.IBinder,int,int,java.lang.String,java.lang.String)>($r34, 76, $i4, $r36, null);

        specialinvoke r0.<com.android.server.am.ActiveServices: void unregisterAppOpCallbackLocked(com.android.server.am.ServiceRecord)>(r128);

        $r37 = r128.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $i5 = $r37.<android.content.pm.ApplicationInfo: int uid>;

        $r38 = r128.<com.android.server.am.ServiceRecord: java.lang.String shortInstanceName>;

        $z8 = r128.<com.android.server.am.ServiceRecord: boolean mAllowWhileInUsePermissionInFgs>;

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int,java.lang.String,int,boolean)>(60, $i5, $r38, 2, $z8);

        $r40 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r39 = r128.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        $i6 = r128.<com.android.server.am.ServiceRecord: int userId>;

        virtualinvoke $r40.<com.android.server.am.ActivityManagerService: void updateForegroundServiceUsageStats(android.content.ComponentName,int,boolean)>($r39, $i6, 0);

     label26:
        r128.<com.android.server.am.ServiceRecord: boolean isForeground> = 0;

        r128.<com.android.server.am.ServiceRecord: int foregroundId> = 0;

        r128.<com.android.server.am.ServiceRecord: android.app.Notification foregroundNoti> = null;

        r128.<com.android.server.am.ServiceRecord: boolean mAllowWhileInUsePermissionInFgs> = 0;

        virtualinvoke r128.<com.android.server.am.ServiceRecord: void clearDeliveredStartsLocked()>();

        $r146 = r128.<com.android.server.am.ServiceRecord: java.util.ArrayList pendingStarts>;

        virtualinvoke $r146.<java.util.ArrayList: void clear()>();

        $r147 = r139.<com.android.server.am.ActiveServices$ServiceMap: java.util.ArrayList mDelayedStartList>;

        virtualinvoke $r147.<java.util.ArrayList: boolean remove(java.lang.Object)>(r128);

        $r148 = r128.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r148 == null goto label36;

        $r17 = r128.<com.android.server.am.ServiceRecord: com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv stats>;

        r149 = virtualinvoke $r17.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: com.android.internal.os.BatteryStatsImpl getBatteryStats()>();

        entermonitor r149;

     label27:
        $r18 = r128.<com.android.server.am.ServiceRecord: com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv stats>;

        virtualinvoke $r18.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: void stopLaunchedLocked()>();

        exitmonitor r149;

     label28:
        $r19 = r128.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        virtualinvoke $r19.<com.android.server.am.ProcessRecord: boolean stopService(com.android.server.am.ServiceRecord)>(r128);

        $r20 = r128.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        virtualinvoke $r20.<com.android.server.am.ProcessRecord: void updateBoundClientUids()>();

        $z5 = r128.<com.android.server.am.ServiceRecord: boolean whitelistManager>;

        if $z5 == 0 goto label29;

        $r29 = r128.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        specialinvoke r0.<com.android.server.am.ActiveServices: void updateWhitelistManagerLocked(com.android.server.am.ProcessRecord)>($r29);

     label29:
        $r21 = r128.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r22 = $r21.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r22 == null goto label36;

        $r23 = r128.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        specialinvoke r0.<com.android.server.am.ActiveServices: void updateServiceForegroundLocked(com.android.server.am.ProcessRecord,boolean)>($r23, 0);

     label30:
        specialinvoke r0.<com.android.server.am.ActiveServices: void bumpServiceExecutingLocked(com.android.server.am.ServiceRecord,boolean,java.lang.String)>(r128, 0, "destroy");

        $r24 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mDestroyingServices>;

        virtualinvoke $r24.<java.util.ArrayList: boolean add(java.lang.Object)>(r128);

        r128.<com.android.server.am.ServiceRecord: boolean destroying> = 1;

        $r26 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r25 = r128.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        virtualinvoke $r26.<com.android.server.am.ActivityManagerService: boolean updateOomAdjLocked(com.android.server.am.ProcessRecord,boolean,java.lang.String)>($r25, 1, "updateOomAdj_unbindService");

        $r27 = r128.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r28 = $r27.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        interfaceinvoke $r28.<android.app.IApplicationThread: void scheduleStopService(android.os.IBinder)>(r128);

     label31:
        goto label36;

     label32:
        $r96 := @caughtexception;

        $r97 = new java.lang.StringBuilder;

        specialinvoke $r97.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception when destroying service ");

        $r99 = r128.<com.android.server.am.ServiceRecord: java.lang.String shortInstanceName>;

        virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r99);

        $r101 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r101, $r96);

        specialinvoke r0.<com.android.server.am.ActiveServices: void serviceProcessGoneLocked(com.android.server.am.ServiceRecord)>(r128);

        goto label36;

     label33:
        $r95 := @caughtexception;

     label34:
        exitmonitor r149;

     label35:
        throw $r95;

     label36:
        $r153 = r128.<com.android.server.am.ServiceRecord: android.util.ArrayMap bindings>;

        $i24 = virtualinvoke $r153.<android.util.ArrayMap: int size()>();

        if $i24 <= 0 goto label37;

        $r16 = r128.<com.android.server.am.ServiceRecord: android.util.ArrayMap bindings>;

        virtualinvoke $r16.<android.util.ArrayMap: void clear()>();

     label37:
        $r7 = r128.<com.android.server.am.ServiceRecord: java.lang.Runnable restarter>;

        $z3 = $r7 instanceof com.android.server.am.ActiveServices$ServiceRestarter;

        if $z3 == 0 goto label38;

        $r14 = r128.<com.android.server.am.ServiceRecord: java.lang.Runnable restarter>;

        $r15 = (com.android.server.am.ActiveServices$ServiceRestarter) $r14;

        virtualinvoke $r15.<com.android.server.am.ActiveServices$ServiceRestarter: void setService(com.android.server.am.ServiceRecord)>(null);

     label38:
        $r8 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r9 = $r8.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        i25 = virtualinvoke $r9.<com.android.server.am.ProcessStatsService: int getMemFactorLocked()>();

        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r10 = r128.<com.android.server.am.ServiceRecord: com.android.internal.app.procstats.ServiceState tracker>;

        if $r10 == null goto label39;

        $r11 = r128.<com.android.server.am.ServiceRecord: com.android.internal.app.procstats.ServiceState tracker>;

        virtualinvoke $r11.<com.android.internal.app.procstats.ServiceState: void setStarted(boolean,int,long)>(0, i25, l0);

        $r12 = r128.<com.android.server.am.ServiceRecord: com.android.internal.app.procstats.ServiceState tracker>;

        virtualinvoke $r12.<com.android.internal.app.procstats.ServiceState: void setBound(boolean,int,long)>(0, i25, l0);

        $i3 = r128.<com.android.server.am.ServiceRecord: int executeNesting>;

        if $i3 != 0 goto label39;

        $r13 = r128.<com.android.server.am.ServiceRecord: com.android.internal.app.procstats.ServiceState tracker>;

        virtualinvoke $r13.<com.android.internal.app.procstats.ServiceState: void clearCurrentOwner(java.lang.Object,boolean)>(r128, 0);

        r128.<com.android.server.am.ServiceRecord: com.android.internal.app.procstats.ServiceState tracker> = null;

     label39:
        virtualinvoke r139.<com.android.server.am.ActiveServices$ServiceMap: void ensureNotStartingBackgroundLocked(com.android.server.am.ServiceRecord)>(r128);

        return;

        catch java.lang.Exception from label03 to label04 with label05;
        catch java.lang.Exception from label10 to label11 with label14;
        catch java.lang.Exception from label12 to label13 with label14;
        catch java.lang.Throwable from label27 to label28 with label33;
        catch java.lang.Exception from label30 to label31 with label32;
        catch java.lang.Throwable from label34 to label35 with label33;
    }

    private java.lang.String bringUpServiceLocked(com.android.server.am.ServiceRecord, int, boolean, boolean, boolean) throws android.os.TransactionTooLargeException
    {
        com.android.server.am.ActiveServices r0;
        int i0, $i1, $i2, $i3, $i4, $i6, $i7, $i9, $i10, $i12, $i15, $i16, $i17, $i18;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z10, $z13, z14, z15, $z16;
        java.lang.String r1, $r9, $r21, $r31, $r34, $r35, $r44, $r48, $r69, $r71, $r76, $r80, r83, r95;
        com.android.server.am.ProcessRecord $r4, $r63, r88, r93;
        java.util.ArrayList $r5, $r12, $r13, $r61, $r62;
        com.android.server.am.ActivityManagerService $r6, $r15, $r17, $r38, $r42;
        com.android.server.am.UserController $r7;
        android.content.pm.IPackageManager $r8;
        com.android.server.am.HostingRecord $r10, r91;
        android.content.ComponentName $r11, $r32, $r36;
        android.content.pm.ApplicationInfo $r14, $r16, $r20, $r24, $r37, $r40, $r41, $r47, $r51;
        java.lang.StringBuilder $r18, $r45, $r67, $r74;
        android.content.Intent$FilterComparison $r27, $r54;
        android.content.Intent $r28, $r55;
        android.content.pm.ServiceInfo $r33, $r87, $r92;
        android.app.IApplicationThread $r39, $r64;
        com.android.server.am.ProcessStatsService $r43;
        long $l8;
        com.android.server.am.ActiveServices$ServiceMap $r60;
        android.os.RemoteException $r65, $r66;
        android.os.TransactionTooLargeException $r72;
        java.lang.Throwable $r73;
        com.android.server.am.ServiceRecord r81;

        r0 := @this: com.android.server.am.ActiveServices;

        r81 := @parameter0: com.android.server.am.ServiceRecord;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        z14 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        $r4 = r81.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r4 == null goto label01;

        $r63 = r81.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r64 = $r63.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r64 == null goto label01;

        specialinvoke r0.<com.android.server.am.ActiveServices: void sendServiceArgsLocked(com.android.server.am.ServiceRecord,boolean,boolean)>(r81, z0, 0);

        return null;

     label01:
        if z14 != 0 goto label02;

        $r62 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mRestartingServices>;

        $z13 = virtualinvoke $r62.<java.util.ArrayList: boolean contains(java.lang.Object)>(r81);

        if $z13 == 0 goto label02;

        return null;

     label02:
        $r5 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mRestartingServices>;

        $z2 = virtualinvoke $r5.<java.util.ArrayList: boolean remove(java.lang.Object)>(r81);

        if $z2 == 0 goto label03;

        specialinvoke r0.<com.android.server.am.ActiveServices: void clearRestartingIfNeededLocked(com.android.server.am.ServiceRecord)>(r81);

     label03:
        $z3 = r81.<com.android.server.am.ServiceRecord: boolean delayed>;

        if $z3 == 0 goto label04;

        $i12 = r81.<com.android.server.am.ServiceRecord: int userId>;

        $r60 = specialinvoke r0.<com.android.server.am.ActiveServices: com.android.server.am.ActiveServices$ServiceMap getServiceMapLocked(int)>($i12);

        $r61 = $r60.<com.android.server.am.ActiveServices$ServiceMap: java.util.ArrayList mDelayedStartList>;

        virtualinvoke $r61.<java.util.ArrayList: boolean remove(java.lang.Object)>(r81);

        r81.<com.android.server.am.ServiceRecord: boolean delayed> = 0;

     label04:
        $r6 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r7 = $r6.<com.android.server.am.ActivityManagerService: com.android.server.am.UserController mUserController>;

        $i1 = r81.<com.android.server.am.ServiceRecord: int userId>;

        $z4 = virtualinvoke $r7.<com.android.server.am.UserController: boolean hasStartedUserState(int)>($i1);

        if $z4 != 0 goto label05;

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to launch app ");

        $r47 = r81.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $r48 = $r47.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48);

        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r51 = r81.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $i9 = $r51.<android.content.pm.ApplicationInfo: int uid>;

        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for service ");

        $r54 = r81.<com.android.server.am.ServiceRecord: android.content.Intent$FilterComparison intent>;

        $r55 = virtualinvoke $r54.<android.content.Intent$FilterComparison: android.content.Intent getIntent()>();

        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r55);

        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": user ");

        $i10 = r81.<com.android.server.am.ServiceRecord: int userId>;

        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is stopped");

        r83 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r83);

        specialinvoke r0.<com.android.server.am.ActiveServices: void bringDownServiceLocked(com.android.server.am.ServiceRecord)>(r81);

        return r83;

     label05:
        $r8 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        $r9 = r81.<com.android.server.am.ServiceRecord: java.lang.String packageName>;

        $i2 = r81.<com.android.server.am.ServiceRecord: int userId>;

        interfaceinvoke $r8.<android.content.pm.IPackageManager: void setPackageStoppedState(java.lang.String,boolean,int)>($r9, 0, $i2);

     label06:
        goto label09;

     label07:
        $r73 := @caughtexception;

        $r74 = new java.lang.StringBuilder;

        specialinvoke $r74.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed trying to unstop package ");

        $r76 = r81.<com.android.server.am.ServiceRecord: java.lang.String packageName>;

        virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r76);

        virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r73);

        $r80 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r80);

        goto label09;

     label08:
        $r65 := @caughtexception;

     label09:
        $r87 = r81.<com.android.server.am.ServiceRecord: android.content.pm.ServiceInfo serviceInfo>;

        $i15 = $r87.<android.content.pm.ServiceInfo: int flags>;

        $i16 = $i15 & 2;

        if $i16 == 0 goto label10;

        z15 = 1;

        goto label11;

     label10:
        z15 = 0;

     label11:
        r1 = r81.<com.android.server.am.ServiceRecord: java.lang.String processName>;

        $r10 = new com.android.server.am.HostingRecord;

        $r11 = r81.<com.android.server.am.ServiceRecord: android.content.ComponentName instanceName>;

        specialinvoke $r10.<com.android.server.am.HostingRecord: void <init>(java.lang.String,android.content.ComponentName)>("service", $r11);

        if z15 != 0 goto label17;

        $r38 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r37 = r81.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $i7 = $r37.<android.content.pm.ApplicationInfo: int uid>;

        r88 = virtualinvoke $r38.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord getProcessRecordLocked(java.lang.String,int,boolean)>(r1, $i7, 0);

        if r88 == null goto label16;

        $r39 = r88.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r39 == null goto label16;

     label12:
        $r40 = r81.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $r44 = $r40.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r41 = r81.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $l8 = $r41.<android.content.pm.ApplicationInfo: long longVersionCode>;

        $r42 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r43 = $r42.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        virtualinvoke r88.<com.android.server.am.ProcessRecord: boolean addPackage(java.lang.String,long,com.android.server.am.ProcessStatsService)>($r44, $l8, $r43);

        specialinvoke r0.<com.android.server.am.ActiveServices: void realStartServiceLocked(com.android.server.am.ServiceRecord,com.android.server.am.ProcessRecord,boolean)>(r81, r88, z0);

     label13:
        return null;

     label14:
        $r66 := @caughtexception;

        $r67 = new java.lang.StringBuilder;

        specialinvoke $r67.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception when starting service ");

        $r69 = r81.<com.android.server.am.ServiceRecord: java.lang.String shortInstanceName>;

        virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r69);

        $r71 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r71, $r66);

        goto label16;

     label15:
        $r72 := @caughtexception;

        throw $r72;

     label16:
        r91 = $r10;

        goto label19;

     label17:
        r88 = r81.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord isolatedProc>;

        r91 = $r10;

        $z5 = staticinvoke <android.webkit.WebViewZygote: boolean isMultiprocessEnabled()>();

        if $z5 == 0 goto label18;

        r91 = $r10;

        $r33 = r81.<com.android.server.am.ServiceRecord: android.content.pm.ServiceInfo serviceInfo>;

        $r34 = $r33.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        $r35 = staticinvoke <android.webkit.WebViewZygote: java.lang.String getPackageName()>();

        $z10 = virtualinvoke $r34.<java.lang.String: boolean equals(java.lang.Object)>($r35);

        if $z10 == 0 goto label18;

        $r36 = r81.<com.android.server.am.ServiceRecord: android.content.ComponentName instanceName>;

        r91 = staticinvoke <com.android.server.am.HostingRecord: com.android.server.am.HostingRecord byWebviewZygote(android.content.ComponentName)>($r36);

     label18:
        $r92 = r81.<com.android.server.am.ServiceRecord: android.content.pm.ServiceInfo serviceInfo>;

        $i17 = $r92.<android.content.pm.ServiceInfo: int flags>;

        $i18 = $i17 & 8;

        if $i18 == 0 goto label19;

        $r32 = r81.<com.android.server.am.ServiceRecord: android.content.ComponentName instanceName>;

        $r31 = r81.<com.android.server.am.ServiceRecord: java.lang.String definingPackageName>;

        $i6 = r81.<com.android.server.am.ServiceRecord: int definingUid>;

        r91 = staticinvoke <com.android.server.am.HostingRecord: com.android.server.am.HostingRecord byAppZygote(android.content.ComponentName,java.lang.String,int)>($r32, $r31, $i6);

        goto label19;

     label19:
        if r88 != null goto label22;

        if z1 != 0 goto label22;

        $r17 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r16 = r81.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        r93 = virtualinvoke $r17.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord startProcessLocked(java.lang.String,android.content.pm.ApplicationInfo,boolean,int,com.android.server.am.HostingRecord,int,boolean,boolean,boolean)>(r1, $r16, 1, i0, r91, 0, 0, z15, 0);

        if r93 != null goto label20;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to launch app ");

        $r20 = r81.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $r21 = $r20.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r24 = r81.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $i4 = $r24.<android.content.pm.ApplicationInfo: int uid>;

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for service ");

        $r27 = r81.<com.android.server.am.ServiceRecord: android.content.Intent$FilterComparison intent>;

        $r28 = virtualinvoke $r27.<android.content.Intent$FilterComparison: android.content.Intent getIntent()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r28);

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": process is bad");

        r95 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r95);

        specialinvoke r0.<com.android.server.am.ActiveServices: void bringDownServiceLocked(com.android.server.am.ServiceRecord)>(r81);

        return r95;

     label20:
        if z15 == 0 goto label21;

        r81.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord isolatedProc> = r93;

     label21:
        goto label22;

     label22:
        $z16 = r81.<com.android.server.am.ServiceRecord: boolean fgRequired>;

        if $z16 == 0 goto label23;

        $r15 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r14 = r81.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $i3 = $r14.<android.content.pm.ApplicationInfo: int uid>;

        virtualinvoke $r15.<com.android.server.am.ActivityManagerService: void tempWhitelistUidLocked(int,long,java.lang.String)>($i3, 10000L, "fg-service-launch");

     label23:
        $r12 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mPendingServices>;

        $z6 = virtualinvoke $r12.<java.util.ArrayList: boolean contains(java.lang.Object)>(r81);

        if $z6 != 0 goto label24;

        $r13 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mPendingServices>;

        virtualinvoke $r13.<java.util.ArrayList: boolean add(java.lang.Object)>(r81);

     label24:
        $z7 = r81.<com.android.server.am.ServiceRecord: boolean delayedStop>;

        if $z7 == 0 goto label25;

        r81.<com.android.server.am.ServiceRecord: boolean delayedStop> = 0;

        $z8 = r81.<com.android.server.am.ServiceRecord: boolean startRequested>;

        if $z8 == 0 goto label25;

        specialinvoke r0.<com.android.server.am.ActiveServices: void stopServiceLocked(com.android.server.am.ServiceRecord)>(r81);

     label25:
        return null;

        catch android.os.RemoteException from label05 to label06 with label08;
        catch java.lang.IllegalArgumentException from label05 to label06 with label07;
        catch android.os.TransactionTooLargeException from label12 to label13 with label15;
        catch android.os.RemoteException from label12 to label13 with label14;
    }

    private final void bumpServiceExecutingLocked(com.android.server.am.ServiceRecord, boolean, java.lang.String)
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ServiceRecord r1;
        boolean z0, $z2, $z4, $z5, z6, $z7, $z8;
        long l0;
        com.android.server.am.ActivityManagerService $r2, $r13, $r19;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i8, $i9, $i10;
        com.android.server.am.ProcessRecord $r3, $r4, $r5, $r6, $r7, $r8, $r10, $r12, $r15, $r16, r28;
        android.util.ArraySet $r9, $r11;
        com.android.server.am.ProcessStatsService $r14;
        java.lang.StringBuilder $r17;
        android.content.ComponentName $r22;
        java.lang.String $r24, r25;
        com.android.internal.app.procstats.ServiceState r27;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: com.android.server.am.ServiceRecord;

        z0 := @parameter1: boolean;

        r25 := @parameter2: java.lang.String;

        z6 = 1;

        $r2 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $i1 = $r2.<com.android.server.am.ActivityManagerService: int mBootPhase>;

        if $i1 >= 600 goto label1;

        z6 = 1;

        $r15 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r15 == null goto label1;

        z6 = 1;

        $r16 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $i4 = $r16.<com.android.server.am.ProcessRecord: int pid>;

        $i5 = staticinvoke <android.os.Process: int myPid()>();

        if $i4 != $i5 goto label1;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Too early to start/bind service in system_server: Phase=");

        $r19 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $i6 = $r19.<com.android.server.am.ActivityManagerService: int mBootPhase>;

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r22 = virtualinvoke r1.<com.android.server.am.ServiceRecord: android.content.ComponentName getComponentName()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r22);

        $r24 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r24);

        z6 = 0;

     label1:
        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $i8 = r1.<com.android.server.am.ServiceRecord: int executeNesting>;

        if $i8 != 0 goto label3;

        r1.<com.android.server.am.ServiceRecord: boolean executeFg> = z0;

        r27 = virtualinvoke r1.<com.android.server.am.ServiceRecord: com.android.internal.app.procstats.ServiceState getTracker()>();

        if r27 == null goto label2;

        $r13 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r14 = $r13.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        $i3 = virtualinvoke $r14.<com.android.server.am.ProcessStatsService: int getMemFactorLocked()>();

        virtualinvoke r27.<com.android.internal.app.procstats.ServiceState: void setExecuting(boolean,int,long)>(1, $i3, l0);

     label2:
        $r7 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r7 == null goto label4;

        $r8 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r9 = $r8.<com.android.server.am.ProcessRecord: android.util.ArraySet executingServices>;

        virtualinvoke $r9.<android.util.ArraySet: boolean add(java.lang.Object)>(r1);

        r28 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $z4 = r28.<com.android.server.am.ProcessRecord: boolean execServicesFg>;

        $z5 = $z4 | z0;

        r28.<com.android.server.am.ProcessRecord: boolean execServicesFg> = $z5;

        if z6 == 0 goto label4;

        $r10 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r11 = $r10.<com.android.server.am.ProcessRecord: android.util.ArraySet executingServices>;

        $i2 = virtualinvoke $r11.<android.util.ArraySet: int size()>();

        if $i2 != 1 goto label4;

        $r12 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        virtualinvoke r0.<com.android.server.am.ActiveServices: void scheduleServiceTimeoutLocked(com.android.server.am.ProcessRecord)>($r12);

        goto label4;

     label3:
        $r3 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r3 == null goto label4;

        if z0 == 0 goto label4;

        $r4 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $z2 = $r4.<com.android.server.am.ProcessRecord: boolean execServicesFg>;

        if $z2 != 0 goto label4;

        $r5 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r5.<com.android.server.am.ProcessRecord: boolean execServicesFg> = 1;

        if z6 == 0 goto label4;

        $r6 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        virtualinvoke r0.<com.android.server.am.ActiveServices: void scheduleServiceTimeoutLocked(com.android.server.am.ProcessRecord)>($r6);

        goto label4;

     label4:
        $z7 = r1.<com.android.server.am.ServiceRecord: boolean executeFg>;

        $z8 = $z7 | z0;

        r1.<com.android.server.am.ServiceRecord: boolean executeFg> = $z8;

        $i9 = r1.<com.android.server.am.ServiceRecord: int executeNesting>;

        $i10 = $i9 + 1;

        r1.<com.android.server.am.ServiceRecord: int executeNesting> = $i10;

        r1.<com.android.server.am.ServiceRecord: long executingStart> = l0;

        return;
    }

    private void cancelForegroundNotificationLocked(com.android.server.am.ServiceRecord)
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ServiceRecord r1, r3;
        com.android.server.am.ActiveServices$ServiceMap r2;
        int $i0, $i1, $i2, $i3, $i4, i5;
        android.util.ArrayMap $r4, $r5;
        java.lang.Object $r6;
        java.lang.String $r7, $r8;
        boolean $z0;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: com.android.server.am.ServiceRecord;

        $i0 = r1.<com.android.server.am.ServiceRecord: int foregroundId>;

        if $i0 == 0 goto label4;

        $i1 = r1.<com.android.server.am.ServiceRecord: int userId>;

        r2 = specialinvoke r0.<com.android.server.am.ActiveServices: com.android.server.am.ActiveServices$ServiceMap getServiceMapLocked(int)>($i1);

        if r2 == null goto label3;

        $r4 = r2.<com.android.server.am.ActiveServices$ServiceMap: android.util.ArrayMap mServicesByInstanceName>;

        $i2 = virtualinvoke $r4.<android.util.ArrayMap: int size()>();

        i5 = $i2 - 1;

     label1:
        if i5 < 0 goto label3;

        $r5 = r2.<com.android.server.am.ActiveServices$ServiceMap: android.util.ArrayMap mServicesByInstanceName>;

        $r6 = virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i5);

        r3 = (com.android.server.am.ServiceRecord) $r6;

        if r3 == r1 goto label2;

        $i4 = r3.<com.android.server.am.ServiceRecord: int foregroundId>;

        $i3 = r1.<com.android.server.am.ServiceRecord: int foregroundId>;

        if $i4 != $i3 goto label2;

        $r8 = r3.<com.android.server.am.ServiceRecord: java.lang.String packageName>;

        $r7 = r1.<com.android.server.am.ServiceRecord: java.lang.String packageName>;

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label2;

        return;

     label2:
        i5 = i5 + -1;

        goto label1;

     label3:
        virtualinvoke r1.<com.android.server.am.ServiceRecord: void cancelNotification()>();

     label4:
        return;
    }

    private void clearRestartingIfNeededLocked(com.android.server.am.ServiceRecord)
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ServiceRecord r1, $r9;
        com.android.internal.app.procstats.ServiceState $r2, $r6, $r10, $r11;
        java.util.ArrayList $r3, $r7;
        int $i0, $i1, i3;
        com.android.server.am.ActivityManagerService $r4;
        com.android.server.am.ProcessStatsService $r5;
        long $l2;
        java.lang.Object $r8;
        boolean z1;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: com.android.server.am.ServiceRecord;

        $r2 = r1.<com.android.server.am.ServiceRecord: com.android.internal.app.procstats.ServiceState restartTracker>;

        if $r2 == null goto label4;

        $r3 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mRestartingServices>;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i3 = $i0 - 1;

     label1:
        z1 = 0;

        if i3 < 0 goto label3;

        $r7 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mRestartingServices>;

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        $r9 = (com.android.server.am.ServiceRecord) $r8;

        $r11 = $r9.<com.android.server.am.ServiceRecord: com.android.internal.app.procstats.ServiceState restartTracker>;

        $r10 = r1.<com.android.server.am.ServiceRecord: com.android.internal.app.procstats.ServiceState restartTracker>;

        if $r11 != $r10 goto label2;

        z1 = 1;

        goto label3;

     label2:
        i3 = i3 + -1;

        goto label1;

     label3:
        if z1 != 0 goto label4;

        $r6 = r1.<com.android.server.am.ServiceRecord: com.android.internal.app.procstats.ServiceState restartTracker>;

        $r4 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r5 = $r4.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        $i1 = virtualinvoke $r5.<com.android.server.am.ProcessStatsService: int getMemFactorLocked()>();

        $l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        virtualinvoke $r6.<com.android.internal.app.procstats.ServiceState: void setRestarting(boolean,int,long)>(0, $i1, $l2);

        r1.<com.android.server.am.ServiceRecord: com.android.internal.app.procstats.ServiceState restartTracker> = null;

     label4:
        return;
    }

    private boolean collectPackageServicesLocked(java.lang.String, java.util.Set, boolean, boolean, android.util.ArrayMap)
    {
        com.android.server.am.ActiveServices r0;
        java.lang.String r1, $r11, $r20, $r22;
        java.util.Set r2;
        boolean z0, z1, $z3, $z5, $z6, $z7, $z8, z9, z10, z11;
        android.util.ArrayMap r3;
        com.android.server.am.ServiceRecord r4;
        int $i0, i2;
        java.lang.Object $r6;
        com.android.server.am.ProcessRecord $r7, $r12, $r15, $r16, $r17, $r18, $r19;
        java.lang.StringBuilder $r8;
        java.util.ArrayList $r13, $r14, $r23;
        android.content.ComponentName $r21;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.Set;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        r3 := @parameter4: android.util.ArrayMap;

        z9 = 0;

        $i0 = virtualinvoke r3.<android.util.ArrayMap: int size()>();

        i2 = $i0 - 1;

     label01:
        if i2 < 0 goto label10;

        $r6 = virtualinvoke r3.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i2);

        r4 = (com.android.server.am.ServiceRecord) $r6;

        if r1 == null goto label03;

        $r20 = r4.<com.android.server.am.ServiceRecord: java.lang.String packageName>;

        $z7 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z7 == 0 goto label02;

        if r2 == null goto label03;

        $r21 = r4.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        $r22 = virtualinvoke $r21.<android.content.ComponentName: java.lang.String getClassName()>();

        $z8 = interfaceinvoke r2.<java.util.Set: boolean contains(java.lang.Object)>($r22);

        if $z8 == 0 goto label02;

        goto label03;

     label02:
        z10 = 0;

        goto label04;

     label03:
        z10 = 1;

     label04:
        z11 = z9;

        if z10 == 0 goto label09;

        $r7 = r4.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r7 == null goto label05;

        if z0 != 0 goto label05;

        z11 = z9;

        $r19 = r4.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $z6 = virtualinvoke $r19.<com.android.server.am.ProcessRecord: boolean isPersistent()>();

        if $z6 != 0 goto label09;

     label05:
        if z1 != 0 goto label06;

        return 1;

     label06:
        z11 = 1;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Force stopping service ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", $r11);

        $r12 = r4.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r12 == null goto label07;

        $r15 = r4.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $z3 = virtualinvoke $r15.<com.android.server.am.ProcessRecord: boolean isPersistent()>();

        if $z3 != 0 goto label07;

        $r16 = r4.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        virtualinvoke $r16.<com.android.server.am.ProcessRecord: boolean stopService(com.android.server.am.ServiceRecord)>(r4);

        $r17 = r4.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        virtualinvoke $r17.<com.android.server.am.ProcessRecord: void updateBoundClientUids()>();

        $z5 = r4.<com.android.server.am.ServiceRecord: boolean whitelistManager>;

        if $z5 == 0 goto label07;

        $r18 = r4.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        specialinvoke r0.<com.android.server.am.ActiveServices: void updateWhitelistManagerLocked(com.android.server.am.ProcessRecord)>($r18);

     label07:
        virtualinvoke r4.<com.android.server.am.ServiceRecord: void setProcess(com.android.server.am.ProcessRecord)>(null);

        r4.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord isolatedProc> = null;

        $r23 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mTmpCollectionResults>;

        if $r23 != null goto label08;

        $r14 = new java.util.ArrayList;

        specialinvoke $r14.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.ActiveServices: java.util.ArrayList mTmpCollectionResults> = $r14;

     label08:
        $r13 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mTmpCollectionResults>;

        virtualinvoke $r13.<java.util.ArrayList: boolean add(java.lang.Object)>(r4);

     label09:
        i2 = i2 + -1;

        z9 = z11;

        goto label01;

     label10:
        return z9;
    }

    private void decActiveForegroundAppLocked(com.android.server.am.ActiveServices$ServiceMap, com.android.server.am.ServiceRecord)
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ActiveServices$ServiceMap r1;
        com.android.server.am.ServiceRecord r2;
        com.android.server.am.ActiveServices$ActiveForegroundApp r3;
        java.lang.String $r4, $r7;
        android.util.ArrayMap $r5, $r8;
        java.lang.Object $r6;
        int $i0, $i1, $i2;
        long $l3, $l4, $l5, $l7;
        boolean $z0;
        byte $b6;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: com.android.server.am.ActiveServices$ServiceMap;

        r2 := @parameter1: com.android.server.am.ServiceRecord;

        $r5 = r1.<com.android.server.am.ActiveServices$ServiceMap: android.util.ArrayMap mActiveForegroundApps>;

        $r4 = r2.<com.android.server.am.ServiceRecord: java.lang.String packageName>;

        $r6 = virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r4);

        r3 = (com.android.server.am.ActiveServices$ActiveForegroundApp) $r6;

        if r3 == null goto label2;

        $i0 = r3.<com.android.server.am.ActiveServices$ActiveForegroundApp: int mNumActive>;

        $i1 = $i0 - 1;

        r3.<com.android.server.am.ActiveServices$ActiveForegroundApp: int mNumActive> = $i1;

        $i2 = r3.<com.android.server.am.ActiveServices$ActiveForegroundApp: int mNumActive>;

        if $i2 > 0 goto label2;

        $l3 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        r3.<com.android.server.am.ActiveServices$ActiveForegroundApp: long mEndTime> = $l3;

        $l4 = r3.<com.android.server.am.ActiveServices$ActiveForegroundApp: long mEndTime>;

        $z0 = virtualinvoke r0.<com.android.server.am.ActiveServices: boolean foregroundAppShownEnoughLocked(com.android.server.am.ActiveServices$ActiveForegroundApp,long)>(r3, $l4);

        if $z0 == 0 goto label1;

        $r8 = r1.<com.android.server.am.ActiveServices$ServiceMap: android.util.ArrayMap mActiveForegroundApps>;

        $r7 = r2.<com.android.server.am.ServiceRecord: java.lang.String packageName>;

        virtualinvoke $r8.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>($r7);

        r1.<com.android.server.am.ActiveServices$ServiceMap: boolean mActiveForegroundAppsChanged> = 1;

        specialinvoke r0.<com.android.server.am.ActiveServices: void requestUpdateActiveForegroundAppsLocked(com.android.server.am.ActiveServices$ServiceMap,long)>(r1, 0L);

        goto label2;

     label1:
        $l5 = r3.<com.android.server.am.ActiveServices$ActiveForegroundApp: long mHideTime>;

        $b6 = $l5 cmp 9223372036854775807L;

        if $b6 >= 0 goto label2;

        $l7 = r3.<com.android.server.am.ActiveServices$ActiveForegroundApp: long mHideTime>;

        specialinvoke r0.<com.android.server.am.ActiveServices: void requestUpdateActiveForegroundAppsLocked(com.android.server.am.ActiveServices$ServiceMap,long)>(r1, $l7);

     label2:
        return;
    }

    private void dumpService(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, com.android.server.am.ServiceRecord, java.lang.String[], boolean)
    {
        com.android.server.am.ActiveServices r0;
        java.io.PrintWriter r1;
        java.lang.String[] r2;
        boolean z0;
        java.lang.String r3, $r7, $r8, $r18, $r25, $r31, r33;
        java.lang.StringBuilder $r4, $r21, $r28, r39;
        int $i0, $i1;
        com.android.server.am.ProcessRecord $r9, $r10, $r11, $r13, $r19;
        android.app.IApplicationThread $r12, $r14;
        android.os.ParcelFileDescriptor $r15;
        java.lang.Throwable $r20, $r26, $r32;
        android.os.RemoteException $r27;
        java.io.FileDescriptor r34;
        com.android.server.am.ServiceRecord r35;
        com.android.server.am.ActivityManagerService r37;
        com.android.internal.os.TransferPipe r38;

        r0 := @this: com.android.server.am.ActiveServices;

        r33 := @parameter0: java.lang.String;

        r34 := @parameter1: java.io.FileDescriptor;

        r1 := @parameter2: java.io.PrintWriter;

        r35 := @parameter3: com.android.server.am.ServiceRecord;

        r2 := @parameter4: java.lang.String[];

        z0 := @parameter5: boolean;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r33);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        r37 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        entermonitor r37;

     label01:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r33);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("SERVICE ");

        $r7 = r35.<com.android.server.am.ServiceRecord: java.lang.String shortInstanceName>;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r7);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" ");

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r35);

        $r8 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r8);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" pid=");

        $r9 = r35.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r9 == null goto label03;

        $r19 = r35.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $i1 = $r19.<com.android.server.am.ProcessRecord: int pid>;

        virtualinvoke r1.<java.io.PrintWriter: void println(int)>($i1);

     label02:
        goto label04;

     label03:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("(not running)");

     label04:
        if z0 == 0 goto label06;

     label05:
        virtualinvoke r35.<com.android.server.am.ServiceRecord: void dump(java.io.PrintWriter,java.lang.String)>(r1, r3);

     label06:
        exitmonitor r37;

     label07:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        $r10 = r35.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r10 == null goto label17;

        $r11 = r35.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r12 = $r11.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r12 == null goto label17;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r33);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  Client:");

        virtualinvoke r1.<java.io.PrintWriter: void flush()>();

     label08:
        r38 = new com.android.internal.os.TransferPipe;

        specialinvoke r38.<com.android.internal.os.TransferPipe: void <init>()>();

     label09:
        $r13 = r35.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r14 = $r13.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r15 = virtualinvoke r38.<com.android.internal.os.TransferPipe: android.os.ParcelFileDescriptor getWriteFd()>();

        interfaceinvoke $r14.<android.app.IApplicationThread: void dumpService(android.os.ParcelFileDescriptor,android.os.IBinder,java.lang.String[])>($r15, r35, r2);

        r39 = new java.lang.StringBuilder;

        specialinvoke r39.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r33);

        virtualinvoke r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");

        $r18 = virtualinvoke r39.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r38.<com.android.internal.os.TransferPipe: void setBufferPrefix(java.lang.String)>($r18);

        virtualinvoke r38.<com.android.internal.os.TransferPipe: void go(java.io.FileDescriptor)>(r34);

     label10:
        virtualinvoke r38.<com.android.internal.os.TransferPipe: void kill()>();

     label11:
        goto label17;

     label12:
        $r26 := @caughtexception;

     label13:
        virtualinvoke r38.<com.android.internal.os.TransferPipe: void kill()>();

     label14:
        throw $r26;

     label15:
        $r27 := @caughtexception;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r33);

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    Got a RemoteException while dumping the service");

        $r31 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r31);

        goto label17;

     label16:
        $r20 := @caughtexception;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r33);

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    Failure while dumping the service: ");

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r20);

        $r25 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r25);

     label17:
        return;

     label18:
        $r32 := @caughtexception;

     label19:
        exitmonitor r37;

     label20:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r32;

        catch java.lang.Throwable from label01 to label02 with label18;
        catch java.lang.Throwable from label03 to label04 with label18;
        catch java.lang.Throwable from label05 to label06 with label18;
        catch java.lang.Throwable from label06 to label07 with label18;
        catch java.io.IOException from label08 to label09 with label16;
        catch android.os.RemoteException from label08 to label09 with label15;
        catch java.lang.Throwable from label09 to label10 with label12;
        catch java.io.IOException from label10 to label11 with label16;
        catch android.os.RemoteException from label10 to label11 with label15;
        catch java.io.IOException from label13 to label14 with label16;
        catch android.os.RemoteException from label13 to label14 with label15;
        catch java.io.IOException from label14 to label15 with label16;
        catch android.os.RemoteException from label14 to label15 with label15;
        catch java.lang.Throwable from label19 to label20 with label18;
    }

    private final com.android.server.am.ServiceRecord findServiceLocked(android.content.ComponentName, android.os.IBinder, int)
    {
        com.android.server.am.ActiveServices r0;
        android.os.IBinder r1;
        int i0;
        android.content.ComponentName r2;
        com.android.server.am.ServiceRecord r3;

        r0 := @this: com.android.server.am.ActiveServices;

        r2 := @parameter0: android.content.ComponentName;

        r1 := @parameter1: android.os.IBinder;

        i0 := @parameter2: int;

        r3 = virtualinvoke r0.<com.android.server.am.ActiveServices: com.android.server.am.ServiceRecord getServiceByNameLocked(android.content.ComponentName,int)>(r2, i0);

        if r3 != r1 goto label1;

        goto label2;

     label1:
        r3 = null;

     label2:
        return r3;
    }

    private int getAllowMode(android.content.Intent, java.lang.String)
    {
        com.android.server.am.ActiveServices r0;
        android.content.Intent r1;
        java.lang.String r2, $r5;
        android.content.ComponentName $r3, $r4;
        boolean $z0;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: java.lang.String;

        if r2 == null goto label3;

        $r3 = virtualinvoke r1.<android.content.Intent: android.content.ComponentName getComponent()>();

        if $r3 != null goto label1;

        goto label3;

     label1:
        $r4 = virtualinvoke r1.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r5 = virtualinvoke $r4.<android.content.ComponentName: java.lang.String getPackageName()>();

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label2;

        return 3;

     label2:
        return 1;

     label3:
        return 1;
    }

    private com.android.server.am.ActiveServices$ServiceMap getServiceMapLocked(int)
    {
        com.android.server.am.ActiveServices r0;
        int i0;
        com.android.server.am.ActiveServices$ServiceMap r1, $r4, r9;
        android.util.SparseArray $r2, $r8;
        java.lang.Object $r3;
        com.android.server.am.ActivityManagerService $r5;
        com.android.server.am.ActivityManagerService$MainHandler $r6;
        android.os.Looper $r7;

        r0 := @this: com.android.server.am.ActiveServices;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.am.ActiveServices: android.util.SparseArray mServiceMap>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r1 = (com.android.server.am.ActiveServices$ServiceMap) $r3;

        r9 = r1;

        if r1 != null goto label1;

        $r4 = new com.android.server.am.ActiveServices$ServiceMap;

        $r5 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r6 = $r5.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        $r7 = virtualinvoke $r6.<com.android.server.am.ActivityManagerService$MainHandler: android.os.Looper getLooper()>();

        specialinvoke $r4.<com.android.server.am.ActiveServices$ServiceMap: void <init>(com.android.server.am.ActiveServices,android.os.Looper,int)>(r0, $r7, i0);

        r9 = $r4;

        $r8 = r0.<com.android.server.am.ActiveServices: android.util.SparseArray mServiceMap>;

        virtualinvoke $r8.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, $r4);

     label1:
        return r9;
    }

    private final boolean isServiceNeededLocked(com.android.server.am.ServiceRecord, boolean, boolean)
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ServiceRecord r1;
        boolean z0, $z1, z2;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: com.android.server.am.ServiceRecord;

        z0 := @parameter1: boolean;

        z2 := @parameter2: boolean;

        $z1 = r1.<com.android.server.am.ServiceRecord: boolean startRequested>;

        if $z1 == 0 goto label1;

        return 1;

     label1:
        if z0 != 0 goto label2;

        z2 = virtualinvoke r1.<com.android.server.am.ServiceRecord: boolean hasAutoCreateConnections()>();

     label2:
        if z2 == 0 goto label3;

        return 1;

     label3:
        return 0;
    }

    private void maybeLogBindCrossProfileService(int, java.lang.String, int)
    {
        com.android.server.am.ActiveServices r0;
        int i0, i1, i2;
        java.lang.String r1;
        boolean $z0, $z1;
        com.android.server.am.ActivityManagerService $r2;
        com.android.server.am.UserController $r3;
        android.app.admin.DevicePolicyEventLogger $r4, $r6;
        java.lang.String[] $r5;

        r0 := @this: com.android.server.am.ActiveServices;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        $z0 = staticinvoke <android.os.UserHandle: boolean isCore(int)>(i1);

        if $z0 == 0 goto label1;

        return;

     label1:
        i2 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        if i2 == i0 goto label3;

        $r2 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r3 = $r2.<com.android.server.am.ActivityManagerService: com.android.server.am.UserController mUserController>;

        $z1 = virtualinvoke $r3.<com.android.server.am.UserController: boolean isSameProfileGroup(int,int)>(i2, i0);

        if $z1 != 0 goto label2;

        goto label3;

     label2:
        $r4 = staticinvoke <android.app.admin.DevicePolicyEventLogger: android.app.admin.DevicePolicyEventLogger createEvent(int)>(151);

        $r5 = newarray (java.lang.String)[1];

        $r5[0] = r1;

        $r6 = virtualinvoke $r4.<android.app.admin.DevicePolicyEventLogger: android.app.admin.DevicePolicyEventLogger setStrings(java.lang.String[])>($r5);

        virtualinvoke $r6.<android.app.admin.DevicePolicyEventLogger: void write()>();

        return;

     label3:
        return;
    }

    private final void realStartServiceLocked(com.android.server.am.ServiceRecord, com.android.server.am.ProcessRecord, boolean) throws android.os.RemoteException
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ServiceRecord r1;
        com.android.server.am.ProcessRecord r2, $r6;
        long l0;
        boolean z0, $z3, $z4, $z6, z12, $z13, $z14, $z15, z16;
        android.app.IApplicationThread $r3, $r21;
        android.os.RemoteException $r4;
        com.android.server.am.ActivityManagerService $r5, $r7, $r17, $r20, $r36;
        android.content.pm.ApplicationInfo $r8, $r19;
        android.content.ComponentName $r9, $r11;
        int $i1, $i2, $i3, $i4, $i5;
        java.lang.String $r10, $r12, $r16, $r35;
        com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv $r13, $r14;
        android.content.pm.ServiceInfo $r15, $r18, $r22;
        android.content.res.CompatibilityInfo $r23;
        com.android.server.am.ActiveServices$ServiceMap $r24;
        java.util.ArrayList $r25, $r26, $r28, $r31;
        com.android.server.am.ServiceRecord$StartItem $r27;
        java.lang.Throwable $r30, $r37;
        android.os.DeadObjectException $r32;
        com.android.internal.os.BatteryStatsImpl r38;
        java.lang.StringBuilder r42;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: com.android.server.am.ServiceRecord;

        r2 := @parameter1: com.android.server.am.ProcessRecord;

        z12 := @parameter2: boolean;

        $r3 = r2.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r3 == null goto label21;

        virtualinvoke r1.<com.android.server.am.ServiceRecord: void setProcess(com.android.server.am.ProcessRecord)>(r2);

        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r1.<com.android.server.am.ServiceRecord: long lastActivity> = l0;

        r1.<com.android.server.am.ServiceRecord: long restartTime> = l0;

        z0 = virtualinvoke r2.<com.android.server.am.ProcessRecord: boolean startService(com.android.server.am.ServiceRecord)>(r1);

        specialinvoke r0.<com.android.server.am.ActiveServices: void bumpServiceExecutingLocked(com.android.server.am.ServiceRecord,boolean,java.lang.String)>(r1, z12, "create");

        $r5 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        virtualinvoke $r5.<com.android.server.am.ActivityManagerService: void updateLruProcessLocked(com.android.server.am.ProcessRecord,boolean,com.android.server.am.ProcessRecord)>(r2, 0, null);

        $r6 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        specialinvoke r0.<com.android.server.am.ActiveServices: void updateServiceForegroundLocked(com.android.server.am.ProcessRecord,boolean)>($r6, 0);

        $r7 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        virtualinvoke $r7.<com.android.server.am.ActivityManagerService: void updateOomAdjLocked(com.android.server.am.ProcessRecord,java.lang.String)>(r2, "updateOomAdj_startService");

     label01:
        $r8 = r1.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $i1 = $r8.<android.content.pm.ApplicationInfo: int uid>;

        $r9 = r1.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        $r10 = virtualinvoke $r9.<android.content.ComponentName: java.lang.String getPackageName()>();

        $r11 = r1.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        $r12 = virtualinvoke $r11.<android.content.ComponentName: java.lang.String getClassName()>();

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int,java.lang.String,java.lang.String)>(100, $i1, $r10, $r12);

        $r13 = r1.<com.android.server.am.ServiceRecord: com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv stats>;

        r38 = virtualinvoke $r13.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: com.android.internal.os.BatteryStatsImpl getBatteryStats()>();

        entermonitor r38;

     label02:
        $r14 = r1.<com.android.server.am.ServiceRecord: com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv stats>;

        virtualinvoke $r14.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: void startLaunchedLocked()>();

        exitmonitor r38;

     label03:
        $r17 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r15 = r1.<com.android.server.am.ServiceRecord: android.content.pm.ServiceInfo serviceInfo>;

        $r16 = $r15.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        virtualinvoke $r17.<com.android.server.am.ActivityManagerService: void notifyPackageUse(java.lang.String,int)>($r16, 1);

        virtualinvoke r2.<com.android.server.am.ProcessRecord: void forceProcessStateUpTo(int)>(10);

        $r21 = r2.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r22 = r1.<com.android.server.am.ServiceRecord: android.content.pm.ServiceInfo serviceInfo>;

        $r20 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r18 = r1.<com.android.server.am.ServiceRecord: android.content.pm.ServiceInfo serviceInfo>;

        $r19 = $r18.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r23 = virtualinvoke $r20.<com.android.server.am.ActivityManagerService: android.content.res.CompatibilityInfo compatibilityInfoForPackage(android.content.pm.ApplicationInfo)>($r19);

        $i2 = virtualinvoke r2.<com.android.server.am.ProcessRecord: int getReportedProcState()>();

        interfaceinvoke $r21.<android.app.IApplicationThread: void scheduleCreateService(android.os.IBinder,android.content.pm.ServiceInfo,android.content.res.CompatibilityInfo,int)>(r1, $r22, $r23, $i2);

        virtualinvoke r1.<com.android.server.am.ServiceRecord: void postNotification()>();

     label04:
        goto label05;

     label05:
        $z13 = r1.<com.android.server.am.ServiceRecord: boolean whitelistManager>;

        if $z13 == 0 goto label06;

        r2.<com.android.server.am.ProcessRecord: boolean whitelistManager> = 1;

     label06:
        specialinvoke r0.<com.android.server.am.ActiveServices: void requestServiceBindingsLocked(com.android.server.am.ServiceRecord,boolean)>(r1, z12);

        specialinvoke r0.<com.android.server.am.ActiveServices: boolean updateServiceClientActivitiesLocked(com.android.server.am.ProcessRecord,com.android.server.am.ConnectionRecord,boolean)>(r2, null, 1);

        if z0 == 0 goto label07;

        virtualinvoke r2.<com.android.server.am.ProcessRecord: void addBoundClientUidsOfNewService(com.android.server.am.ServiceRecord)>(r1);

     label07:
        $z14 = r1.<com.android.server.am.ServiceRecord: boolean startRequested>;

        if $z14 == 0 goto label08;

        $z6 = r1.<com.android.server.am.ServiceRecord: boolean callStart>;

        if $z6 == 0 goto label08;

        $r26 = r1.<com.android.server.am.ServiceRecord: java.util.ArrayList pendingStarts>;

        $i4 = virtualinvoke $r26.<java.util.ArrayList: int size()>();

        if $i4 != 0 goto label08;

        $r28 = r1.<com.android.server.am.ServiceRecord: java.util.ArrayList pendingStarts>;

        $r27 = new com.android.server.am.ServiceRecord$StartItem;

        $i5 = virtualinvoke r1.<com.android.server.am.ServiceRecord: int makeNextStartId()>();

        specialinvoke $r27.<com.android.server.am.ServiceRecord$StartItem: void <init>(com.android.server.am.ServiceRecord,boolean,int,android.content.Intent,com.android.server.uri.NeededUriGrants,int)>(r1, 0, $i5, null, null, 0);

        virtualinvoke $r28.<java.util.ArrayList: boolean add(java.lang.Object)>($r27);

     label08:
        specialinvoke r0.<com.android.server.am.ActiveServices: void sendServiceArgsLocked(com.android.server.am.ServiceRecord,boolean,boolean)>(r1, z12, 1);

        $z15 = r1.<com.android.server.am.ServiceRecord: boolean delayed>;

        if $z15 == 0 goto label09;

        $i3 = r1.<com.android.server.am.ServiceRecord: int userId>;

        $r24 = specialinvoke r0.<com.android.server.am.ActiveServices: com.android.server.am.ActiveServices$ServiceMap getServiceMapLocked(int)>($i3);

        $r25 = $r24.<com.android.server.am.ActiveServices$ServiceMap: java.util.ArrayList mDelayedStartList>;

        virtualinvoke $r25.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        r1.<com.android.server.am.ServiceRecord: boolean delayed> = 0;

        goto label09;

     label09:
        $z3 = r1.<com.android.server.am.ServiceRecord: boolean delayedStop>;

        if $z3 == 0 goto label10;

        r1.<com.android.server.am.ServiceRecord: boolean delayedStop> = 0;

        $z4 = r1.<com.android.server.am.ServiceRecord: boolean startRequested>;

        if $z4 == 0 goto label10;

        specialinvoke r0.<com.android.server.am.ActiveServices: void stopServiceLocked(com.android.server.am.ServiceRecord)>(r1);

     label10:
        return;

     label11:
        $r37 := @caughtexception;

     label12:
        exitmonitor r38;

     label13:
        throw $r37;

     label14:
        $r30 := @caughtexception;

        goto label18;

     label15:
        $r32 := @caughtexception;

     label16:
        r42 = new java.lang.StringBuilder;

        specialinvoke r42.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Application dead when creating service ");

        virtualinvoke r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r35 = virtualinvoke r42.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r35);

        $r36 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        virtualinvoke $r36.<com.android.server.am.ActivityManagerService: void appDiedLocked(com.android.server.am.ProcessRecord,java.lang.String)>(r2, "Died when creating service");

     label17:
        throw $r32;

     label18:
        $r31 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mDestroyingServices>;

        z16 = virtualinvoke $r31.<java.util.ArrayList: boolean contains(java.lang.Object)>(r1);

        specialinvoke r0.<com.android.server.am.ActiveServices: void serviceDoneExecutingLocked(com.android.server.am.ServiceRecord,boolean,boolean)>(r1, z16, z16);

        if z0 == 0 goto label19;

        virtualinvoke r2.<com.android.server.am.ProcessRecord: boolean stopService(com.android.server.am.ServiceRecord)>(r1);

        virtualinvoke r1.<com.android.server.am.ServiceRecord: void setProcess(com.android.server.am.ProcessRecord)>(null);

     label19:
        if z16 != 0 goto label20;

        specialinvoke r0.<com.android.server.am.ActiveServices: boolean scheduleServiceRestartLocked(com.android.server.am.ServiceRecord,boolean)>(r1, 0);

     label20:
        throw $r30;

     label21:
        $r4 = new android.os.RemoteException;

        specialinvoke $r4.<android.os.RemoteException: void <init>()>();

        throw $r4;

        catch android.os.DeadObjectException from label01 to label02 with label15;
        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label02 to label03 with label11;
        catch android.os.DeadObjectException from label03 to label04 with label15;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.Throwable from label12 to label13 with label11;
        catch android.os.DeadObjectException from label13 to label14 with label15;
        catch java.lang.Throwable from label13 to label14 with label14;
        catch java.lang.Throwable from label16 to label17 with label14;
        catch java.lang.Throwable from label17 to label18 with label14;
    }

    private void registerAppOpCallbackLocked(com.android.server.am.ServiceRecord)
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ServiceRecord r1;
        int i0;
        com.android.server.am.ActiveServices$AppOpCallback r2, $r7, r12;
        com.android.server.am.ProcessRecord $r3, $r9;
        android.content.pm.ApplicationInfo $r4;
        android.util.SparseArray $r5, $r11;
        java.lang.Object $r6;
        com.android.server.am.ActivityManagerService $r8;
        android.app.AppOpsManager $r10;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: com.android.server.am.ServiceRecord;

        $r3 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r3 != null goto label1;

        return;

     label1:
        $r4 = r1.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        i0 = $r4.<android.content.pm.ApplicationInfo: int uid>;

        $r5 = r0.<com.android.server.am.ActiveServices: android.util.SparseArray mFgsAppOpCallbacks>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r2 = (com.android.server.am.ActiveServices$AppOpCallback) $r6;

        r12 = r2;

        if r2 != null goto label2;

        $r7 = new com.android.server.am.ActiveServices$AppOpCallback;

        $r9 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r8 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r10 = virtualinvoke $r8.<com.android.server.am.ActivityManagerService: android.app.AppOpsManager getAppOpsManager()>();

        specialinvoke $r7.<com.android.server.am.ActiveServices$AppOpCallback: void <init>(com.android.server.am.ProcessRecord,android.app.AppOpsManager)>($r9, $r10);

        r12 = $r7;

        $r11 = r0.<com.android.server.am.ActiveServices: android.util.SparseArray mFgsAppOpCallbacks>;

        virtualinvoke $r11.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, $r7);

     label2:
        virtualinvoke r12.<com.android.server.am.ActiveServices$AppOpCallback: void registerLocked()>();

        return;
    }

    private final boolean requestServiceBindingLocked(com.android.server.am.ServiceRecord, com.android.server.am.IntentBindRecord, boolean, boolean) throws android.os.TransactionTooLargeException
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ServiceRecord r1;
        boolean z0, $z1, z2, z3, z4;
        com.android.server.am.ProcessRecord $r2, $r3, $r6, $r7, $r11;
        android.app.IApplicationThread $r4, $r9;
        android.util.ArrayMap $r5;
        int $i0, $i1;
        android.content.Intent$FilterComparison $r8;
        android.content.Intent $r10;
        android.os.RemoteException $r12;
        java.util.ArrayList $r13, $r15;
        android.os.TransactionTooLargeException $r14;
        com.android.server.am.IntentBindRecord r16;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: com.android.server.am.ServiceRecord;

        r16 := @parameter1: com.android.server.am.IntentBindRecord;

        z2 := @parameter2: boolean;

        z0 := @parameter3: boolean;

        $r2 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r2 == null goto label11;

        $r3 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r4 = $r3.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r4 != null goto label01;

        goto label11;

     label01:
        $z1 = r16.<com.android.server.am.IntentBindRecord: boolean requested>;

        if $z1 == 0 goto label02;

        if z0 == 0 goto label10;

     label02:
        $r5 = r16.<com.android.server.am.IntentBindRecord: android.util.ArrayMap apps>;

        $i0 = virtualinvoke $r5.<android.util.ArrayMap: int size()>();

        if $i0 <= 0 goto label10;

     label03:
        specialinvoke r0.<com.android.server.am.ActiveServices: void bumpServiceExecutingLocked(com.android.server.am.ServiceRecord,boolean,java.lang.String)>(r1, z2, "bind");

        $r6 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        virtualinvoke $r6.<com.android.server.am.ProcessRecord: void forceProcessStateUpTo(int)>(10);

        $r7 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r9 = $r7.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r8 = r16.<com.android.server.am.IntentBindRecord: android.content.Intent$FilterComparison intent>;

        $r10 = virtualinvoke $r8.<android.content.Intent$FilterComparison: android.content.Intent getIntent()>();

        $r11 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $i1 = virtualinvoke $r11.<com.android.server.am.ProcessRecord: int getReportedProcState()>();

        interfaceinvoke $r9.<android.app.IApplicationThread: void scheduleBindService(android.os.IBinder,android.content.Intent,boolean,int)>(r1, $r10, z0, $i1);

     label04:
        if z0 != 0 goto label06;

     label05:
        r16.<com.android.server.am.IntentBindRecord: boolean requested> = 1;

     label06:
        r16.<com.android.server.am.IntentBindRecord: boolean hasBound> = 1;

        r16.<com.android.server.am.IntentBindRecord: boolean doRebind> = 0;

     label07:
        goto label10;

     label08:
        $r12 := @caughtexception;

        $r13 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mDestroyingServices>;

        z3 = virtualinvoke $r13.<java.util.ArrayList: boolean contains(java.lang.Object)>(r1);

        specialinvoke r0.<com.android.server.am.ActiveServices: void serviceDoneExecutingLocked(com.android.server.am.ServiceRecord,boolean,boolean)>(r1, z3, z3);

        return 0;

     label09:
        $r14 := @caughtexception;

        $r15 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mDestroyingServices>;

        z4 = virtualinvoke $r15.<java.util.ArrayList: boolean contains(java.lang.Object)>(r1);

        specialinvoke r0.<com.android.server.am.ActiveServices: void serviceDoneExecutingLocked(com.android.server.am.ServiceRecord,boolean,boolean)>(r1, z4, z4);

        throw $r14;

     label10:
        return 1;

     label11:
        return 0;

        catch android.os.TransactionTooLargeException from label03 to label04 with label09;
        catch android.os.RemoteException from label03 to label04 with label08;
        catch android.os.TransactionTooLargeException from label05 to label06 with label09;
        catch android.os.RemoteException from label05 to label06 with label08;
        catch android.os.TransactionTooLargeException from label06 to label07 with label09;
        catch android.os.RemoteException from label06 to label07 with label08;
    }

    private final void requestServiceBindingsLocked(com.android.server.am.ServiceRecord, boolean) throws android.os.TransactionTooLargeException
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ServiceRecord r1;
        boolean z0, $z1;
        android.util.ArrayMap $r2, $r3;
        int $i0, i1;
        java.lang.Object $r4;
        com.android.server.am.IntentBindRecord $r5;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: com.android.server.am.ServiceRecord;

        z0 := @parameter1: boolean;

        $r2 = r1.<com.android.server.am.ServiceRecord: android.util.ArrayMap bindings>;

        $i0 = virtualinvoke $r2.<android.util.ArrayMap: int size()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label3;

        $r3 = r1.<com.android.server.am.ServiceRecord: android.util.ArrayMap bindings>;

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i1);

        $r5 = (com.android.server.am.IntentBindRecord) $r4;

        $z1 = specialinvoke r0.<com.android.server.am.ActiveServices: boolean requestServiceBindingLocked(com.android.server.am.ServiceRecord,com.android.server.am.IntentBindRecord,boolean,boolean)>(r1, $r5, z0, 0);

        if $z1 != 0 goto label2;

        goto label3;

     label2:
        i1 = i1 + -1;

        goto label1;

     label3:
        return;
    }

    private boolean requestStartTargetPermissionsReviewIfNeededLocked(com.android.server.am.ServiceRecord, java.lang.String, java.lang.String, int, android.content.Intent, boolean, int)
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ServiceRecord r1;
        int i0, i1, $i2, $i3;
        android.content.Intent r2, $r14;
        boolean z0, $z1;
        com.android.server.am.PendingIntentController r3;
        java.lang.String r4, $r7, $r16, $r27, $r30, r31, r32;
        com.android.server.am.ActivityManagerService $r5, $r8, $r9, $r20;
        android.content.pm.PackageManagerInternal $r6;
        android.content.Context $r10;
        android.content.ContentResolver $r11;
        android.content.Intent[] $r12;
        java.lang.String[] $r13;
        android.content.IntentSender $r18;
        com.android.server.am.ActiveServices$2 $r21;
        com.android.server.am.ActivityManagerService$MainHandler $r22;
        java.lang.StringBuilder $r23;
        com.android.server.am.PendingIntentRecord r34;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: com.android.server.am.ServiceRecord;

        r31 := @parameter1: java.lang.String;

        r32 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        r2 := @parameter4: android.content.Intent;

        z0 := @parameter5: boolean;

        i1 := @parameter6: int;

        $r5 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r6 = virtualinvoke $r5.<com.android.server.am.ActivityManagerService: android.content.pm.PackageManagerInternal getPackageManagerInternalLocked()>();

        $r7 = r1.<com.android.server.am.ServiceRecord: java.lang.String packageName>;

        $i2 = r1.<com.android.server.am.ServiceRecord: int userId>;

        $z1 = virtualinvoke $r6.<android.content.pm.PackageManagerInternal: boolean isPermissionsReviewRequired(java.lang.String,int)>($r7, $i2);

        if $z1 == 0 goto label2;

        if z0 != 0 goto label1;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("u");

        $i3 = r1.<com.android.server.am.ServiceRecord: int userId>;

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Starting a service in package");

        $r27 = r1.<com.android.server.am.ServiceRecord: java.lang.String packageName>;

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires a permissions review");

        $r30 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r30);

        return 0;

     label1:
        $r8 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        r3 = $r8.<com.android.server.am.ActivityManagerService: com.android.server.am.PendingIntentController mPendingIntentController>;

        $r9 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r10 = $r9.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r11 = virtualinvoke $r10.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r4 = virtualinvoke r2.<android.content.Intent: java.lang.String resolveType(android.content.ContentResolver)>($r11);

        $r12 = newarray (android.content.Intent)[1];

        $r12[0] = r2;

        $r13 = newarray (java.lang.String)[1];

        $r13[0] = r4;

        r34 = virtualinvoke r3.<com.android.server.am.PendingIntentController: com.android.server.am.PendingIntentRecord getIntentSender(int,java.lang.String,java.lang.String,int,int,android.os.IBinder,java.lang.String,int,android.content.Intent[],java.lang.String[],int,android.os.Bundle)>(4, r31, r32, i0, i1, null, null, 0, $r12, $r13, 1409286144, null);

        $r14 = new android.content.Intent;

        specialinvoke $r14.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.REVIEW_PERMISSIONS");

        virtualinvoke $r14.<android.content.Intent: android.content.Intent addFlags(int)>(411041792);

        $r16 = r1.<com.android.server.am.ServiceRecord: java.lang.String packageName>;

        virtualinvoke $r14.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("android.intent.extra.PACKAGE_NAME", $r16);

        $r18 = new android.content.IntentSender;

        specialinvoke $r18.<android.content.IntentSender: void <init>(android.content.IIntentSender)>(r34);

        virtualinvoke $r14.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("android.intent.extra.INTENT", $r18);

        $r20 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r22 = $r20.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        $r21 = new com.android.server.am.ActiveServices$2;

        specialinvoke $r21.<com.android.server.am.ActiveServices$2: void <init>(com.android.server.am.ActiveServices,android.content.Intent,int)>(r0, $r14, i1);

        virtualinvoke $r22.<com.android.server.am.ActivityManagerService$MainHandler: boolean post(java.lang.Runnable)>($r21);

        return 0;

     label2:
        return 1;
    }

    private void requestUpdateActiveForegroundAppsLocked(com.android.server.am.ActiveServices$ServiceMap, long)
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ActiveServices$ServiceMap r1;
        long l0, $l2, $l3, $l4, $l5;
        android.os.Message r2;
        byte $b1;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: com.android.server.am.ActiveServices$ServiceMap;

        l0 := @parameter1: long;

        r2 = virtualinvoke r1.<com.android.server.am.ActiveServices$ServiceMap: android.os.Message obtainMessage(int)>(2);

        $b1 = l0 cmp 0L;

        if $b1 == 0 goto label1;

        $l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l3 = $l2 + l0;

        $l4 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l5 = $l3 - $l4;

        virtualinvoke r1.<com.android.server.am.ActiveServices$ServiceMap: boolean sendMessageAtTime(android.os.Message,long)>(r2, $l5);

        goto label2;

     label1:
        r1.<com.android.server.am.ActiveServices$ServiceMap: boolean mActiveForegroundAppsChanged> = 1;

        virtualinvoke r1.<com.android.server.am.ActiveServices$ServiceMap: boolean sendMessage(android.os.Message)>(r2);

     label2:
        return;
    }

    private com.android.server.am.ActiveServices$ServiceLookupResult retrieveServiceLocked(android.content.Intent, java.lang.String, java.lang.String, java.lang.String, int, int, int, boolean, boolean, boolean, boolean)
    {
        com.android.server.am.ActiveServices r0;
        java.lang.String r1, r2, r3, $r12, $r14, $r19, $r21, $r28, $r29, $r30, $r35, $r42, $r44, $r47, $r54, $r56, $r58, $r61, $r70, $r76, $r82, $r87, $r91, $r92, $r99, $r106, $r121, $r123, $r133, $r136, $r140, $r144, $r148, $r150, $r153, $r154, $r155, $r163, $r167, $r172, $r175, $r181, $r183, r205, r210, r224, r226, r235, r236, r269, r293;
        int i0, i2, $i4, $i5, $i6, $i7, $i8, $i11, $i13, $i15, $i16, $i17, $i18, $i19, $i20, $i22, $i23, $i24, $i26, $i27, $i29, $i30, i31, i32, i33, i34, i35, i36, i38, i39, i40, i42;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, z12, z13;
        long l3;
        com.android.server.am.ActiveServices$ServiceRestarter r4;
        com.android.server.am.ActivityManagerService $r5, $r22, $r23, $r31, $r89, $r103, $r107, $r124, $r126, $r127, r223, $r260;
        com.android.server.am.UserController $r6;
        java.lang.StringBuilder $r7, $r13, $r33, $r45, $r59, $r71, $r78, $r84, r219, r221, r225, r227, r237, r240, r242, r244, r246, r250, r281;
        java.lang.IllegalArgumentException $r11, r220;
        android.content.ComponentName $r18, $r25, $r118, r208, r209, r222, r233, r234, r263;
        android.content.pm.ApplicationInfo $r20, $r24, $r27, $r68, $r73, $r90, $r93, $r94, $r95, $r105, $r116, $r117, $r122, $r125, $r149, $r151, $r152, r230, r232, $r261, $r262;
        com.android.server.firewall.IntentFirewall $r26;
        android.app.AppOpsManager $r32;
        com.android.server.am.ActiveServices$ServiceLookupResult $r57, $r75, $r77, $r88, $r168, $r299;
        android.util.ArrayMap $r100, $r108, $r110, $r185, $r187;
        java.lang.Object $r101, $r114, $r186, $r188;
        android.content.Intent $r102, r204;
        com.android.server.am.BatteryStatsService $r104;
        java.util.ArrayList $r112, $r113, $r119;
        android.content.pm.ServiceInfo $r115, $r182, r216, r231, r238, r251, r257;
        android.content.pm.IPackageManager $r145;
        android.content.Intent$FilterComparison $r184, r267;
        android.os.RemoteException $r189, $r191, $r192, $r196, $r197, $r198, $r200, $r201, $r202, $r203;
        java.lang.Throwable $r190, $r193, $r194, $r195, $r199, r252, r275;
        com.android.server.am.ServiceRecord r206, r212, r218, r265, r266, r272, r273, r274;
        com.android.server.am.ActiveServices$ServiceMap r207, r247;
        android.content.pm.PackageManagerInternal r214, r248;
        android.content.pm.ResolveInfo r215, r249;
        java.lang.SecurityException r239, r241, r243, r245, r279;
        com.android.internal.os.BatteryStatsImpl r268;
        com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv r271;

        r0 := @this: com.android.server.am.ActiveServices;

        r204 := @parameter0: android.content.Intent;

        r205 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        i0 := @parameter4: int;

        i31 := @parameter5: int;

        i32 := @parameter6: int;

        z0 := @parameter7: boolean;

        z1 := @parameter8: boolean;

        z2 := @parameter9: boolean;

        z12 := @parameter10: boolean;

        r206 = null;

        $r5 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r6 = $r5.<com.android.server.am.ActivityManagerService: com.android.server.am.UserController mUserController>;

        $i4 = specialinvoke r0.<com.android.server.am.ActiveServices: int getAllowMode(android.content.Intent,java.lang.String)>(r204, r2);

        i33 = virtualinvoke $r6.<com.android.server.am.UserController: int handleIncomingUser(int,int,int,boolean,int,java.lang.String,java.lang.String)>(i0, i31, i32, 0, $i4, "service", r2);

        r207 = specialinvoke r0.<com.android.server.am.ActiveServices: com.android.server.am.ActiveServices$ServiceMap getServiceMapLocked(int)>(i33);

        if r205 != null goto label001;

        r208 = virtualinvoke r204.<android.content.Intent: android.content.ComponentName getComponent()>();

        goto label002;

     label001:
        r209 = virtualinvoke r204.<android.content.Intent: android.content.ComponentName getComponent()>();

        if r209 == null goto label143;

        r210 = virtualinvoke r209.<android.content.ComponentName: java.lang.String getPackageName()>();

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke r209.<android.content.ComponentName: java.lang.String getClassName()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r205);

        $r18 = new android.content.ComponentName;

        $r19 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>(r210, $r19);

        r208 = $r18;

     label002:
        if r208 == null goto label003;

        $r187 = r207.<com.android.server.am.ActiveServices$ServiceMap: android.util.ArrayMap mServicesByInstanceName>;

        $r188 = virtualinvoke $r187.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r208);

        r206 = (com.android.server.am.ServiceRecord) $r188;

     label003:
        r212 = r206;

        if r206 != null goto label004;

        r212 = r206;

        if z2 != 0 goto label004;

        r212 = r206;

        if r205 != null goto label004;

        $r184 = new android.content.Intent$FilterComparison;

        specialinvoke $r184.<android.content.Intent$FilterComparison: void <init>(android.content.Intent)>(r204);

        $r185 = r207.<com.android.server.am.ActiveServices$ServiceMap: android.util.ArrayMap mServicesByIntent>;

        $r186 = virtualinvoke $r185.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r184);

        r212 = (com.android.server.am.ServiceRecord) $r186;

     label004:
        if r212 == null goto label005;

        $r182 = r212.<com.android.server.am.ServiceRecord: android.content.pm.ServiceInfo serviceInfo>;

        $i29 = $r182.<android.content.pm.ServiceInfo: int flags>;

        $i30 = $i29 & 4;

        if $i30 == 0 goto label005;

        $r183 = r212.<com.android.server.am.ServiceRecord: java.lang.String packageName>;

        $z11 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r183);

        if $z11 != 0 goto label005;

        r212 = null;

        goto label005;

     label005:
        if r212 != null goto label134;

        if z12 == 0 goto label006;

        i34 = 268436480 | 8388608;

        goto label007;

     label006:
        i34 = 268436480;

     label007:
        $r89 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        r214 = virtualinvoke $r89.<com.android.server.am.ActivityManagerService: android.content.pm.PackageManagerInternal getPackageManagerInternalLocked()>();

     label008:
        r215 = virtualinvoke r214.<android.content.pm.PackageManagerInternal: android.content.pm.ResolveInfo resolveService(android.content.Intent,java.lang.String,int,int,int)>(r204, r1, i34, i33, i31);

     label009:
        if r215 == null goto label013;

     label010:
        r216 = r215.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

     label011:
        goto label014;

     label012:
        $r192 := @caughtexception;

        r218 = r212;

        goto label135;

     label013:
        r216 = null;

     label014:
        if r216 != null goto label017;

     label015:
        r219 = new java.lang.StringBuilder;

        specialinvoke r219.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r219.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to start service ");

        virtualinvoke r219.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r204);

        virtualinvoke r219.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" U=");

        virtualinvoke r219.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i33);

        virtualinvoke r219.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": not found");

        $r181 = virtualinvoke r219.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r181);

     label016:
        return null;

     label017:
        if r205 == null goto label021;

     label018:
        $i26 = r216.<android.content.pm.ServiceInfo: int flags>;

        $i27 = $i26 & 2;

        if $i27 == 0 goto label020;

     label019:
        goto label021;

     label020:
        r220 = new java.lang.IllegalArgumentException;

        r221 = new java.lang.StringBuilder;

        specialinvoke r221.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r221.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t use instance name \'");

        virtualinvoke r221.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r205);

        virtualinvoke r221.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' with non-isolated service \'");

        $r172 = r216.<android.content.pm.ServiceInfo: java.lang.String name>;

        virtualinvoke r221.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r172);

        virtualinvoke r221.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r175 = virtualinvoke r221.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r220.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r175);

        throw r220;

     label021:
        r222 = new android.content.ComponentName;

        $r90 = r216.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r92 = $r90.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r91 = r216.<android.content.pm.ServiceInfo: java.lang.String name>;

        specialinvoke r222.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r92, $r91);

     label022:
        if r208 == null goto label023;

        goto label024;

     label023:
        r208 = r222;

     label024:
        r223 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        r224 = virtualinvoke r208.<android.content.ComponentName: java.lang.String getPackageName()>();

        $r93 = r216.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo>;

        i35 = $r93.<android.content.pm.ApplicationInfo: int uid>;

     label025:
        z13 = virtualinvoke r223.<com.android.server.am.ActivityManagerService: boolean validateAssociationAllowedLocked(java.lang.String,int,java.lang.String,int)>(r2, i31, r224, i35);

     label026:
        if z13 != 0 goto label030;

     label027:
        r225 = new java.lang.StringBuilder;

        specialinvoke r225.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r225.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("association not allowed between packages ");

        virtualinvoke r225.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke r225.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and ");

        $r163 = virtualinvoke r208.<android.content.ComponentName: java.lang.String getPackageName()>();

        virtualinvoke r225.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r163);

        r226 = virtualinvoke r225.<java.lang.StringBuilder: java.lang.String toString()>();

        r227 = new java.lang.StringBuilder;

        specialinvoke r227.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r227.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Service lookup failed: ");

        virtualinvoke r227.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r226);

        $r167 = virtualinvoke r227.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r167);

        $r168 = new com.android.server.am.ActiveServices$ServiceLookupResult;

        specialinvoke $r168.<com.android.server.am.ActiveServices$ServiceLookupResult: void <init>(com.android.server.am.ActiveServices,com.android.server.am.ServiceRecord,java.lang.String)>(r0, null, r226);

     label028:
        return $r168;

     label029:
        $r200 := @caughtexception;

        r218 = r212;

        goto label135;

     label030:
        $r94 = r216.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo>;

        r3 = $r94.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r95 = r216.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo>;

        i36 = $r95.<android.content.pm.ApplicationInfo: int uid>;

        i2 = r216.<android.content.pm.ServiceInfo: int flags>;

     label031:
        $i15 = i2 & 4;

        if $i15 == 0 goto label045;

        if z2 == 0 goto label044;

     label032:
        $z10 = r216.<android.content.pm.ServiceInfo: boolean exported>;

        if $z10 == 0 goto label043;

        $i22 = r216.<android.content.pm.ServiceInfo: int flags>;

        $i23 = $i22 & 2;

        if $i23 == 0 goto label042;

        $r145 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        r230 = interfaceinvoke $r145.<android.content.pm.IPackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int,int)>(r2, 1024, i33);

     label033:
        if r230 == null goto label041;

     label034:
        r231 = new android.content.pm.ServiceInfo;

        specialinvoke r231.<android.content.pm.ServiceInfo: void <init>(android.content.pm.ServiceInfo)>(r216);

        r232 = new android.content.pm.ApplicationInfo;

        $r149 = r231.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo>;

        specialinvoke r232.<android.content.pm.ApplicationInfo: void <init>(android.content.pm.ApplicationInfo)>($r149);

        r231.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo> = r232;

        $r151 = r231.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r150 = r230.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r151.<android.content.pm.ApplicationInfo: java.lang.String packageName> = $r150;

        $r152 = r231.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i24 = r230.<android.content.pm.ApplicationInfo: int uid>;

        $r152.<android.content.pm.ApplicationInfo: int uid> = $i24;

        r233 = new android.content.ComponentName;

        $r153 = r230.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r154 = virtualinvoke r208.<android.content.ComponentName: java.lang.String getClassName()>();

        specialinvoke r233.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r153, $r154);

        r234 = new android.content.ComponentName;

        r235 = r230.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

     label035:
        if r205 != null goto label038;

     label036:
        r236 = virtualinvoke r222.<android.content.ComponentName: java.lang.String getClassName()>();

     label037:
        goto label039;

     label038:
        r237 = new java.lang.StringBuilder;

        specialinvoke r237.<java.lang.StringBuilder: void <init>()>();

        $r155 = virtualinvoke r222.<android.content.ComponentName: java.lang.String getClassName()>();

        virtualinvoke r237.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r155);

        virtualinvoke r237.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        virtualinvoke r237.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r205);

        r236 = virtualinvoke r237.<java.lang.StringBuilder: java.lang.String toString()>();

     label039:
        specialinvoke r234.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>(r235, r236);

        virtualinvoke r204.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>(r233);

     label040:
        r222 = r234;

        r208 = r233;

        r238 = r231;

        goto label046;

     label041:
        r239 = new java.lang.SecurityException;

        r240 = new java.lang.StringBuilder;

        specialinvoke r240.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r240.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BIND_EXTERNAL_SERVICE failed, could not resolve client package ");

        virtualinvoke r240.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r148 = virtualinvoke r240.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r239.<java.lang.SecurityException: void <init>(java.lang.String)>($r148);

        throw r239;

     label042:
        r241 = new java.lang.SecurityException;

        r242 = new java.lang.StringBuilder;

        specialinvoke r242.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r242.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BIND_EXTERNAL_SERVICE failed, ");

        virtualinvoke r242.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r222);

        virtualinvoke r242.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not an isolatedProcess");

        $r144 = virtualinvoke r242.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r241.<java.lang.SecurityException: void <init>(java.lang.String)>($r144);

        throw r241;

     label043:
        r243 = new java.lang.SecurityException;

        r244 = new java.lang.StringBuilder;

        specialinvoke r244.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r244.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BIND_EXTERNAL_SERVICE failed, ");

        virtualinvoke r244.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r222);

        virtualinvoke r244.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not exported");

        $r140 = virtualinvoke r244.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r243.<java.lang.SecurityException: void <init>(java.lang.String)>($r140);

        throw r243;

     label044:
        r245 = new java.lang.SecurityException;

        r246 = new java.lang.StringBuilder;

        specialinvoke r246.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r246.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BIND_EXTERNAL_SERVICE required for ");

        virtualinvoke r246.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r208);

        $r136 = virtualinvoke r246.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r245.<java.lang.SecurityException: void <init>(java.lang.String)>($r136);

        throw r245;

     label045:
        if z2 != 0 goto label121;

        r238 = r216;

     label046:
        if i33 <= 0 goto label071;

     label047:
        $r124 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r123 = r238.<android.content.pm.ServiceInfo: java.lang.String processName>;

        $r122 = r238.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r121 = r238.<android.content.pm.ServiceInfo: java.lang.String name>;

        $i19 = r238.<android.content.pm.ServiceInfo: int flags>;

        $z8 = virtualinvoke $r124.<com.android.server.am.ActivityManagerService: boolean isSingleton(java.lang.String,android.content.pm.ApplicationInfo,java.lang.String,int)>($r123, $r122, $r121, $i19);

        if $z8 == 0 goto label066;

        $r126 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r125 = r238.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i20 = $r125.<android.content.pm.ApplicationInfo: int uid>;

        $z9 = virtualinvoke $r126.<com.android.server.am.ActivityManagerService: boolean isValidSingletonCall(int,int)>(i31, $i20);

        if $z9 == 0 goto label065;

     label048:
        r247 = specialinvoke r0.<com.android.server.am.ActiveServices: com.android.server.am.ActiveServices$ServiceMap getServiceMapLocked(int)>(0);

     label049:
        l3 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label050:
        $r127 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        r248 = virtualinvoke $r127.<com.android.server.am.ActivityManagerService: android.content.pm.PackageManagerInternal getPackageManagerInternalLocked()>();

     label051:
        r249 = virtualinvoke r248.<android.content.pm.PackageManagerInternal: android.content.pm.ResolveInfo resolveService(android.content.Intent,java.lang.String,int,int,int)>(r204, r1, i34, 0, i31);

     label052:
        if r249 != null goto label056;

     label053:
        r250 = new java.lang.StringBuilder;

        specialinvoke r250.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to resolve service ");

        virtualinvoke r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r204);

        virtualinvoke r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" U=");

        virtualinvoke r250.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(0);

        virtualinvoke r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": not found");

        $r133 = virtualinvoke r250.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r133);

     label054:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

     label055:
        return null;

     label056:
        r251 = r249.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

     label057:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

     label058:
        i38 = 0;

        goto label067;

     label059:
        $r195 := @caughtexception;

        r252 = $r195;

        goto label061;

     label060:
        $r199 := @caughtexception;

        r252 = $r199;

     label061:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

     label062:
        throw r252;

     label063:
        $r197 := @caughtexception;

        r218 = r212;

        goto label135;

     label064:
        $r198 := @caughtexception;

        r218 = r212;

        goto label135;

     label065:
        goto label066;

     label066:
        i38 = i33;

        r251 = r238;

        r247 = r207;

     label067:
        r257 = new android.content.pm.ServiceInfo;

     label068:
        specialinvoke r257.<android.content.pm.ServiceInfo: void <init>(android.content.pm.ServiceInfo)>(r251);

     label069:
        $r260 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r261 = r257.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r262 = virtualinvoke $r260.<com.android.server.am.ActivityManagerService: android.content.pm.ApplicationInfo getAppInfoForUser(android.content.pm.ApplicationInfo,int)>($r261, i38);

        r257.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo> = $r262;

     label070:
        r207 = r247;

        goto label072;

     label071:
        r257 = r238;

     label072:
        r263 = r208;

     label073:
        $r100 = r207.<com.android.server.am.ActiveServices$ServiceMap: android.util.ArrayMap mServicesByInstanceName>;

        $r101 = virtualinvoke $r100.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r208);

        r265 = (com.android.server.am.ServiceRecord) $r101;

     label074:
        r218 = r265;

        if r265 != null goto label120;

        if z0 == 0 goto label120;

        r266 = r265;

     label075:
        r267 = new android.content.Intent$FilterComparison;

     label076:
        r266 = r265;

     label077:
        $r102 = virtualinvoke r204.<android.content.Intent: android.content.Intent cloneFilter()>();

        specialinvoke r267.<android.content.Intent$FilterComparison: void <init>(android.content.Intent)>($r102);

     label078:
        r266 = r265;

     label079:
        r4 = new com.android.server.am.ActiveServices$ServiceRestarter;

     label080:
        r266 = r265;

     label081:
        specialinvoke r4.<com.android.server.am.ActiveServices$ServiceRestarter: void <init>(com.android.server.am.ActiveServices,com.android.server.am.ActiveServices$1)>(r0, null);

     label082:
        r266 = r265;

     label083:
        $r103 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r104 = $r103.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        r268 = virtualinvoke $r104.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl getActiveStatistics()>();

     label084:
        r266 = r265;

     label085:
        entermonitor r268;

     label086:
        $r105 = r257.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo>;

        i39 = $r105.<android.content.pm.ApplicationInfo: int uid>;

        r269 = virtualinvoke r208.<android.content.ComponentName: java.lang.String getPackageName()>();

     label087:
        $r106 = virtualinvoke r208.<android.content.ComponentName: java.lang.String getClassName()>();

        r271 = virtualinvoke r268.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv getServiceStatsLocked(int,java.lang.String,java.lang.String)>(i39, r269, $r106);

        exitmonitor r268;

     label088:
        r218 = r265;

     label089:
        r272 = new com.android.server.am.ServiceRecord;

     label090:
        r218 = r265;

     label091:
        $r107 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        specialinvoke r272.<com.android.server.am.ServiceRecord: void <init>(com.android.server.am.ActivityManagerService,com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv,android.content.ComponentName,android.content.ComponentName,java.lang.String,int,android.content.Intent$FilterComparison,android.content.pm.ServiceInfo,boolean,java.lang.Runnable)>($r107, r271, r222, r208, r3, i36, r267, r257, z1, r4);

     label092:
        r218 = r272;

        r266 = r272;

     label093:
        r272.<com.android.server.am.ServiceRecord: java.lang.String mRecentCallingPackage> = r2;

     label094:
        r266 = r272;

     label095:
        virtualinvoke r4.<com.android.server.am.ActiveServices$ServiceRestarter: void setService(com.android.server.am.ServiceRecord)>(r272);

     label096:
        r266 = r272;

     label097:
        $r108 = r207.<com.android.server.am.ActiveServices$ServiceMap: android.util.ArrayMap mServicesByInstanceName>;

        virtualinvoke $r108.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r208, r272);

     label098:
        r266 = r272;

     label099:
        $r110 = r207.<com.android.server.am.ActiveServices$ServiceMap: android.util.ArrayMap mServicesByIntent>;

        virtualinvoke $r110.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r267, r272);

     label100:
        r266 = r272;

     label101:
        $r112 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mPendingServices>;

        $i16 = virtualinvoke $r112.<java.util.ArrayList: int size()>();

        i40 = $i16 - 1;

     label102:
        if i40 < 0 goto label111;

        r266 = r218;

     label103:
        $r113 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mPendingServices>;

        $r114 = virtualinvoke $r113.<java.util.ArrayList: java.lang.Object get(int)>(i40);

        r273 = (com.android.server.am.ServiceRecord) $r114;

     label104:
        r274 = r218;

     label105:
        $r115 = r273.<com.android.server.am.ServiceRecord: android.content.pm.ServiceInfo serviceInfo>;

        $r116 = $r115.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i18 = $r116.<android.content.pm.ApplicationInfo: int uid>;

        $r117 = r257.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i17 = $r117.<android.content.pm.ApplicationInfo: int uid>;

        if $i18 != $i17 goto label110;

     label106:
        r218 = r274;

     label107:
        $r118 = r273.<com.android.server.am.ServiceRecord: android.content.ComponentName instanceName>;

        $z7 = virtualinvoke $r118.<android.content.ComponentName: boolean equals(java.lang.Object)>(r263);

        if $z7 == 0 goto label110;

     label108:
        r218 = r274;

     label109:
        $r119 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mPendingServices>;

        virtualinvoke $r119.<java.util.ArrayList: java.lang.Object remove(int)>(i40);

     label110:
        i40 = i40 + -1;

        r218 = r274;

        goto label102;

     label111:
        goto label120;

     label112:
        $r190 := @caughtexception;

        r275 = $r190;

        goto label114;

     label113:
        $r194 := @caughtexception;

        r275 = $r194;

     label114:
        r218 = r265;

     label115:
        exitmonitor r268;

     label116:
        throw r275;

     label117:
        $r203 := @caughtexception;

        goto label135;

     label118:
        $r193 := @caughtexception;

        r275 = $r193;

        goto label114;

     label119:
        $r196 := @caughtexception;

        r218 = r266;

        goto label135;

     label120:
        goto label135;

     label121:
        r279 = new java.lang.SecurityException;

     label122:
        r281 = new java.lang.StringBuilder;

     label123:
        specialinvoke r281.<java.lang.StringBuilder: void <init>()>();

     label124:
        virtualinvoke r281.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BIND_EXTERNAL_SERVICE failed, ");

     label125:
        virtualinvoke r281.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r208);

     label126:
        virtualinvoke r281.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not an externalService");

     label127:
        $r99 = virtualinvoke r281.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r279.<java.lang.SecurityException: void <init>(java.lang.String)>($r99);

     label128:
        throw r279;

     label129:
        $r202 := @caughtexception;

        r218 = r212;

        goto label135;

     label130:
        $r201 := @caughtexception;

        goto label133;

     label131:
        $r189 := @caughtexception;

        goto label133;

     label132:
        $r191 := @caughtexception;

     label133:
        r218 = r212;

        goto label135;

     label134:
        r218 = r212;

     label135:
        if r218 == null goto label142;

        $r22 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r21 = r218.<com.android.server.am.ServiceRecord: java.lang.String packageName>;

        $r20 = r218.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $i5 = $r20.<android.content.pm.ApplicationInfo: int uid>;

        $z3 = virtualinvoke $r22.<com.android.server.am.ActivityManagerService: boolean validateAssociationAllowedLocked(java.lang.String,int,java.lang.String,int)>(r2, i31, $r21, $i5);

        if $z3 != 0 goto label136;

        $r78 = new java.lang.StringBuilder;

        specialinvoke $r78.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("association not allowed between packages ");

        virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and ");

        $r82 = r218.<com.android.server.am.ServiceRecord: java.lang.String packageName>;

        virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r82);

        r293 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.String toString()>();

        $r84 = new java.lang.StringBuilder;

        specialinvoke $r84.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Service lookup failed: ");

        virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r293);

        $r87 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r87);

        $r88 = new com.android.server.am.ActiveServices$ServiceLookupResult;

        specialinvoke $r88.<com.android.server.am.ActiveServices$ServiceLookupResult: void <init>(com.android.server.am.ActiveServices,com.android.server.am.ServiceRecord,java.lang.String)>(r0, null, r293);

        return $r88;

     label136:
        $r23 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r26 = $r23.<com.android.server.am.ActivityManagerService: com.android.server.firewall.IntentFirewall mIntentFirewall>;

        $r25 = r218.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        $r24 = r218.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $z4 = virtualinvoke $r26.<com.android.server.firewall.IntentFirewall: boolean checkService(android.content.ComponentName,android.content.Intent,int,int,java.lang.String,android.content.pm.ApplicationInfo)>($r25, r204, i31, i0, r1, $r24);

        if $z4 != 0 goto label137;

        $r77 = new com.android.server.am.ActiveServices$ServiceLookupResult;

        specialinvoke $r77.<com.android.server.am.ActiveServices$ServiceLookupResult: void <init>(com.android.server.am.ActiveServices,com.android.server.am.ServiceRecord,java.lang.String)>(r0, null, "blocked by firewall");

        return $r77;

     label137:
        $r28 = r218.<com.android.server.am.ServiceRecord: java.lang.String permission>;

        $r27 = r218.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $i6 = $r27.<android.content.pm.ApplicationInfo: int uid>;

        $z5 = r218.<com.android.server.am.ServiceRecord: boolean exported>;

        $i7 = staticinvoke <com.android.server.am.ActivityManagerService: int checkComponentPermission(java.lang.String,int,int,int,boolean)>($r28, i0, i31, $i6, $z5);

        if $i7 == 0 goto label139;

        $z6 = r218.<com.android.server.am.ServiceRecord: boolean exported>;

        if $z6 != 0 goto label138;

        $r59 = new java.lang.StringBuilder;

        specialinvoke $r59.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: Accessing service ");

        $r61 = r218.<com.android.server.am.ServiceRecord: java.lang.String shortInstanceName>;

        virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r61);

        virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from pid=");

        virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i31);

        virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" that is not exported from uid ");

        $r68 = r218.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $i11 = $r68.<android.content.pm.ApplicationInfo: int uid>;

        virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        $r70 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r70);

        $r71 = new java.lang.StringBuilder;

        specialinvoke $r71.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("not exported from uid ");

        $r73 = r218.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $i13 = $r73.<android.content.pm.ApplicationInfo: int uid>;

        virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i13);

        $r75 = new com.android.server.am.ActiveServices$ServiceLookupResult;

        $r76 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r75.<com.android.server.am.ActiveServices$ServiceLookupResult: void <init>(com.android.server.am.ActiveServices,com.android.server.am.ServiceRecord,java.lang.String)>(r0, null, $r76);

        return $r75;

     label138:
        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: Accessing service ");

        $r47 = r218.<com.android.server.am.ServiceRecord: java.lang.String shortInstanceName>;

        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r47);

        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from pid=");

        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i31);

        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires ");

        $r54 = r218.<com.android.server.am.ServiceRecord: java.lang.String permission>;

        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r54);

        $r56 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r56);

        $r57 = new com.android.server.am.ActiveServices$ServiceLookupResult;

        $r58 = r218.<com.android.server.am.ServiceRecord: java.lang.String permission>;

        specialinvoke $r57.<com.android.server.am.ActiveServices$ServiceLookupResult: void <init>(com.android.server.am.ActiveServices,com.android.server.am.ServiceRecord,java.lang.String)>(r0, null, $r58);

        return $r57;

     label139:
        $r29 = r218.<com.android.server.am.ServiceRecord: java.lang.String permission>;

        if $r29 == null goto label141;

        if r2 == null goto label141;

        $r30 = r218.<com.android.server.am.ServiceRecord: java.lang.String permission>;

        i42 = staticinvoke <android.app.AppOpsManager: int permissionToOpCode(java.lang.String)>($r30);

        if i42 == -1 goto label140;

        $r31 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r32 = virtualinvoke $r31.<com.android.server.am.ActivityManagerService: android.app.AppOpsManager getAppOpsManager()>();

        $i8 = virtualinvoke $r32.<android.app.AppOpsManager: int checkOpNoThrow(int,int,java.lang.String)>(i42, i31, r2);

        if $i8 == 0 goto label140;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Appop Denial: Accessing service ");

        $r35 = r218.<com.android.server.am.ServiceRecord: java.lang.String shortInstanceName>;

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from pid=");

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i31);

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires appop ");

        $r42 = staticinvoke <android.app.AppOpsManager: java.lang.String opToName(int)>(i42);

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);

        $r44 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r44);

        return null;

     label140:
        goto label141;

     label141:
        $r299 = new com.android.server.am.ActiveServices$ServiceLookupResult;

        specialinvoke $r299.<com.android.server.am.ActiveServices$ServiceLookupResult: void <init>(com.android.server.am.ActiveServices,com.android.server.am.ServiceRecord,java.lang.String)>(r0, r218, null);

        return $r299;

     label142:
        return null;

     label143:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t use custom instance name \'");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r205);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' without expicit component in Intent");

        $r11 = new java.lang.IllegalArgumentException;

        $r12 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r11;

        catch android.os.RemoteException from label007 to label008 with label132;
        catch android.os.RemoteException from label008 to label009 with label131;
        catch android.os.RemoteException from label010 to label011 with label012;
        catch android.os.RemoteException from label015 to label016 with label012;
        catch android.os.RemoteException from label018 to label019 with label012;
        catch android.os.RemoteException from label020 to label021 with label012;
        catch android.os.RemoteException from label021 to label022 with label131;
        catch android.os.RemoteException from label024 to label025 with label131;
        catch android.os.RemoteException from label025 to label026 with label130;
        catch android.os.RemoteException from label027 to label028 with label029;
        catch android.os.RemoteException from label030 to label031 with label130;
        catch android.os.RemoteException from label032 to label033 with label029;
        catch android.os.RemoteException from label034 to label035 with label029;
        catch android.os.RemoteException from label036 to label037 with label029;
        catch android.os.RemoteException from label038 to label039 with label029;
        catch android.os.RemoteException from label039 to label040 with label029;
        catch android.os.RemoteException from label041 to label042 with label029;
        catch android.os.RemoteException from label042 to label043 with label029;
        catch android.os.RemoteException from label043 to label044 with label029;
        catch android.os.RemoteException from label044 to label045 with label029;
        catch android.os.RemoteException from label047 to label048 with label130;
        catch android.os.RemoteException from label048 to label049 with label130;
        catch android.os.RemoteException from label049 to label050 with label064;
        catch java.lang.Throwable from label050 to label051 with label060;
        catch java.lang.Throwable from label051 to label052 with label059;
        catch java.lang.Throwable from label053 to label054 with label059;
        catch android.os.RemoteException from label054 to label055 with label063;
        catch java.lang.Throwable from label056 to label057 with label059;
        catch android.os.RemoteException from label057 to label058 with label063;
        catch android.os.RemoteException from label061 to label062 with label063;
        catch android.os.RemoteException from label062 to label063 with label063;
        catch android.os.RemoteException from label067 to label068 with label129;
        catch android.os.RemoteException from label068 to label069 with label129;
        catch android.os.RemoteException from label069 to label070 with label129;
        catch android.os.RemoteException from label073 to label074 with label129;
        catch android.os.RemoteException from label075 to label076 with label119;
        catch android.os.RemoteException from label077 to label078 with label119;
        catch android.os.RemoteException from label079 to label080 with label119;
        catch android.os.RemoteException from label081 to label082 with label119;
        catch android.os.RemoteException from label083 to label084 with label119;
        catch android.os.RemoteException from label085 to label086 with label119;
        catch java.lang.Throwable from label086 to label087 with label113;
        catch java.lang.Throwable from label087 to label088 with label112;
        catch android.os.RemoteException from label089 to label090 with label117;
        catch android.os.RemoteException from label091 to label092 with label117;
        catch android.os.RemoteException from label093 to label094 with label119;
        catch android.os.RemoteException from label095 to label096 with label119;
        catch android.os.RemoteException from label097 to label098 with label119;
        catch android.os.RemoteException from label099 to label100 with label119;
        catch android.os.RemoteException from label101 to label102 with label119;
        catch android.os.RemoteException from label103 to label104 with label119;
        catch android.os.RemoteException from label105 to label106 with label117;
        catch android.os.RemoteException from label107 to label108 with label117;
        catch android.os.RemoteException from label109 to label110 with label117;
        catch java.lang.Throwable from label115 to label116 with label118;
        catch android.os.RemoteException from label116 to label117 with label117;
        catch android.os.RemoteException from label121 to label122 with label129;
        catch android.os.RemoteException from label122 to label123 with label129;
        catch android.os.RemoteException from label123 to label124 with label129;
        catch android.os.RemoteException from label124 to label125 with label129;
        catch android.os.RemoteException from label125 to label126 with label129;
        catch android.os.RemoteException from label126 to label127 with label129;
        catch android.os.RemoteException from label127 to label128 with label129;
        catch android.os.RemoteException from label128 to label129 with label129;
    }

    private final boolean scheduleServiceRestartLocked(com.android.server.am.ServiceRecord, boolean)
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ServiceRecord r1, r73, r81;
        long l0, $l6, $l7, $l8, $l9, $l10, $l13, $l18, $l21, $l22, $l25, $l26, $l27, $l28, $l30, $l31, $l32, $l34, $l35, $l36, $l38, $l39, $l40, $l41, $l44, $l45, $l46, $l49, $l50, $l51, l59, l60, l62, l63, l65, l66, l67, $l68, $l69, l70;
        com.android.server.am.ActivityManagerService $r2, $r10, $r13, $r30, $r32, $r34, $r37, $r41, $r78;
        com.android.server.wm.ActivityTaskManagerInternal $r3;
        boolean $z2, $z3, $z6, $z7, z8, z9, z10, z11;
        int $i1, $i2, $i3, $i4, $i5, $i12, $i15, $i16, $i17, $i20, $i24, $i42, $i43, $i47, $i48, $i54, $i56, i61, i64, $i71, i72;
        android.content.ComponentName $r4, $r56;
        android.util.ArrayMap $r5, $r57;
        java.lang.Object $r6, $r40, $r45, $r58;
        android.content.pm.ServiceInfo $r7;
        android.content.pm.ApplicationInfo $r8;
        java.util.ArrayList $r9, $r29, $r36, $r39, $r43, $r44, $r47, $r80;
        java.lang.Runnable $r11, $r14;
        com.android.server.am.ActivityManagerService$MainHandler $r12, $r15;
        java.lang.StringBuilder $r16, $r48, $r59, $r65;
        java.lang.String $r18, $r24, $r27, $r53, $r55, $r64, $r67, $r70, r77;
        java.lang.Object[] $r25;
        java.lang.Integer $r26;
        java.lang.Long $r28;
        com.android.server.am.ProcessStatsService $r31;
        com.android.server.am.ActivityManagerConstants $r33, $r35, $r38, $r42, $r79;
        byte $b19, $b23, $b29, $b33, $b37, $b52, $b53;
        android.content.Intent $r46, $r50;
        com.android.server.am.ActiveServices$ServiceMap r72;
        com.android.server.am.ServiceRecord$StartItem r75;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: com.android.server.am.ServiceRecord;

        z8 := @parameter1: boolean;

        $r2 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r3 = $r2.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerInternal mAtmInternal>;

        $z2 = virtualinvoke $r3.<com.android.server.wm.ActivityTaskManagerInternal: boolean isShuttingDown()>();

        if $z2 == 0 goto label01;

        $r65 = new java.lang.StringBuilder;

        specialinvoke $r65.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not scheduling restart of crashed service ");

        $r67 = r1.<com.android.server.am.ServiceRecord: java.lang.String shortInstanceName>;

        virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r67);

        virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - system is shutting down");

        $r70 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r70);

        return 0;

     label01:
        $i1 = r1.<com.android.server.am.ServiceRecord: int userId>;

        r72 = specialinvoke r0.<com.android.server.am.ActiveServices: com.android.server.am.ActiveServices$ServiceMap getServiceMapLocked(int)>($i1);

        $r5 = r72.<com.android.server.am.ActiveServices$ServiceMap: android.util.ArrayMap mServicesByInstanceName>;

        $r4 = r1.<com.android.server.am.ServiceRecord: android.content.ComponentName instanceName>;

        $r6 = virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r4);

        if $r6 == r1 goto label02;

        $r57 = r72.<com.android.server.am.ActiveServices$ServiceMap: android.util.ArrayMap mServicesByInstanceName>;

        $r56 = r1.<com.android.server.am.ServiceRecord: android.content.ComponentName instanceName>;

        $r58 = virtualinvoke $r57.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r56);

        r73 = (com.android.server.am.ServiceRecord) $r58;

        $r59 = new java.lang.StringBuilder;

        specialinvoke $r59.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempting to schedule restart of ");

        virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" when found in map: ");

        virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r73);

        $r64 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("ActivityManager", $r64);

        return 0;

     label02:
        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r7 = r1.<com.android.server.am.ServiceRecord: android.content.pm.ServiceInfo serviceInfo>;

        $r8 = $r7.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i2 = $r8.<android.content.pm.ApplicationInfo: int flags>;

        $i3 = $i2 & 8;

        if $i3 != 0 goto label27;

        $r32 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r33 = $r32.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerConstants mConstants>;

        l59 = $r33.<com.android.server.am.ActivityManagerConstants: long SERVICE_RESTART_DURATION>;

        $r34 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r35 = $r34.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerConstants mConstants>;

        l60 = $r35.<com.android.server.am.ActivityManagerConstants: long SERVICE_RESET_RUN_DURATION>;

        z9 = 0;

        $r36 = r1.<com.android.server.am.ServiceRecord: java.util.ArrayList deliveredStarts>;

        i61 = virtualinvoke $r36.<java.util.ArrayList: int size()>();

        l62 = l59;

        l63 = l60;

        if i61 <= 0 goto label11;

        i64 = i61 + -1;

        l63 = l60;

        l62 = l59;

        z9 = 0;

     label03:
        if i64 < 0 goto label10;

        $r44 = r1.<com.android.server.am.ServiceRecord: java.util.ArrayList deliveredStarts>;

        $r45 = virtualinvoke $r44.<java.util.ArrayList: java.lang.Object get(int)>(i64);

        r75 = (com.android.server.am.ServiceRecord$StartItem) $r45;

        virtualinvoke r75.<com.android.server.am.ServiceRecord$StartItem: void removeUriPermissionsLocked()>();

        $r46 = r75.<com.android.server.am.ServiceRecord$StartItem: android.content.Intent intent>;

        if $r46 != null goto label04;

        goto label09;

     label04:
        if z8 == 0 goto label06;

        $i54 = r75.<com.android.server.am.ServiceRecord$StartItem: int deliveryCount>;

        if $i54 >= 3 goto label05;

        $i56 = r75.<com.android.server.am.ServiceRecord$StartItem: int doneExecutingCount>;

        if $i56 >= 6 goto label05;

        goto label06;

     label05:
        $r48 = new java.lang.StringBuilder;

        specialinvoke $r48.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Canceling start item ");

        $r50 = r75.<com.android.server.am.ServiceRecord$StartItem: android.content.Intent intent>;

        virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r50);

        virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in service ");

        $r53 = r1.<com.android.server.am.ServiceRecord: java.lang.String shortInstanceName>;

        virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r53);

        $r55 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r55);

        z9 = 1;

        goto label09;

     label06:
        $r47 = r1.<com.android.server.am.ServiceRecord: java.util.ArrayList pendingStarts>;

        virtualinvoke $r47.<java.util.ArrayList: void add(int,java.lang.Object)>(0, r75);

        $l49 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l50 = r75.<com.android.server.am.ServiceRecord$StartItem: long deliveredTime>;

        $l51 = $l49 - $l50;

        l65 = $l51 * 2L;

        l66 = l62;

        $b52 = l62 cmp l65;

        if $b52 >= 0 goto label07;

        l66 = l65;

     label07:
        l67 = l63;

        $b53 = l63 cmp l65;

        if $b53 >= 0 goto label08;

        l67 = l65;

     label08:
        l63 = l67;

        l62 = l66;

     label09:
        i64 = i64 + -1;

        goto label03;

     label10:
        $r43 = r1.<com.android.server.am.ServiceRecord: java.util.ArrayList deliveredStarts>;

        virtualinvoke $r43.<java.util.ArrayList: void clear()>();

     label11:
        if z8 == 0 goto label15;

        z10 = virtualinvoke r1.<com.android.server.am.ServiceRecord: boolean canStopIfKilled(boolean)>(z9);

        if z10 == 0 goto label12;

        $z7 = virtualinvoke r1.<com.android.server.am.ServiceRecord: boolean hasAutoCreateConnections()>();

        if $z7 != 0 goto label12;

        return 0;

     label12:
        $z6 = r1.<com.android.server.am.ServiceRecord: boolean startRequested>;

        if $z6 == 0 goto label13;

        if z10 != 0 goto label13;

        r77 = "start-requested";

        goto label14;

     label13:
        r77 = "connection";

     label14:
        goto label16;

     label15:
        r77 = "always";

     label16:
        $i16 = r1.<com.android.server.am.ServiceRecord: int totalRestartCount>;

        $i17 = $i16 + 1;

        r1.<com.android.server.am.ServiceRecord: int totalRestartCount> = $i17;

        $l18 = r1.<com.android.server.am.ServiceRecord: long restartDelay>;

        $b19 = $l18 cmp 0L;

        if $b19 != 0 goto label17;

        $i47 = r1.<com.android.server.am.ServiceRecord: int restartCount>;

        $i48 = $i47 + 1;

        r1.<com.android.server.am.ServiceRecord: int restartCount> = $i48;

        r1.<com.android.server.am.ServiceRecord: long restartDelay> = l62;

        goto label20;

     label17:
        $i20 = r1.<com.android.server.am.ServiceRecord: int crashCount>;

        if $i20 <= 1 goto label18;

        $r41 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r42 = $r41.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerConstants mConstants>;

        $l45 = $r42.<com.android.server.am.ActivityManagerConstants: long BOUND_SERVICE_CRASH_RESTART_DURATION>;

        $i42 = r1.<com.android.server.am.ServiceRecord: int crashCount>;

        $i43 = $i42 - 1;

        $l44 = (long) $i43;

        $l46 = $l45 * $l44;

        r1.<com.android.server.am.ServiceRecord: long restartDelay> = $l46;

        goto label20;

     label18:
        $l21 = r1.<com.android.server.am.ServiceRecord: long restartTime>;

        $l22 = $l21 + l63;

        $b23 = l0 cmp $l22;

        if $b23 <= 0 goto label19;

        r1.<com.android.server.am.ServiceRecord: int restartCount> = 1;

        r1.<com.android.server.am.ServiceRecord: long restartDelay> = l62;

        goto label20;

     label19:
        $l26 = r1.<com.android.server.am.ServiceRecord: long restartDelay>;

        $r37 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r38 = $r37.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerConstants mConstants>;

        $i24 = $r38.<com.android.server.am.ActivityManagerConstants: int SERVICE_RESTART_DURATION_FACTOR>;

        $l25 = (long) $i24;

        $l27 = $l26 * $l25;

        r1.<com.android.server.am.ServiceRecord: long restartDelay> = $l27;

        $l28 = r1.<com.android.server.am.ServiceRecord: long restartDelay>;

        $b29 = $l28 cmp l62;

        if $b29 >= 0 goto label20;

        r1.<com.android.server.am.ServiceRecord: long restartDelay> = l62;

     label20:
        $l68 = r1.<com.android.server.am.ServiceRecord: long restartDelay>;

        $l69 = $l68 + l0;

        r1.<com.android.server.am.ServiceRecord: long nextRestartTime> = $l69;

     label21:
        $r78 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r79 = $r78.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerConstants mConstants>;

        l70 = $r79.<com.android.server.am.ActivityManagerConstants: long SERVICE_MIN_RESTART_TIME_BETWEEN>;

        $r80 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mRestartingServices>;

        $i71 = virtualinvoke $r80.<java.util.ArrayList: int size()>();

        i72 = $i71 - 1;

     label22:
        if i72 < 0 goto label24;

        $r39 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mRestartingServices>;

        $r40 = virtualinvoke $r39.<java.util.ArrayList: java.lang.Object get(int)>(i72);

        r81 = (com.android.server.am.ServiceRecord) $r40;

        if r81 == r1 goto label23;

        $l32 = r1.<com.android.server.am.ServiceRecord: long nextRestartTime>;

        $l30 = r81.<com.android.server.am.ServiceRecord: long nextRestartTime>;

        $l31 = $l30 - l70;

        $b33 = $l32 cmp $l31;

        if $b33 < 0 goto label23;

        $l36 = r1.<com.android.server.am.ServiceRecord: long nextRestartTime>;

        $l34 = r81.<com.android.server.am.ServiceRecord: long nextRestartTime>;

        $l35 = $l34 + l70;

        $b37 = $l36 cmp $l35;

        if $b37 >= 0 goto label23;

        $l38 = r81.<com.android.server.am.ServiceRecord: long nextRestartTime>;

        $l39 = $l38 + l70;

        r1.<com.android.server.am.ServiceRecord: long nextRestartTime> = $l39;

        $l40 = r1.<com.android.server.am.ServiceRecord: long nextRestartTime>;

        $l41 = $l40 - l0;

        r1.<com.android.server.am.ServiceRecord: long restartDelay> = $l41;

        z11 = 1;

        goto label25;

     label23:
        i72 = i72 + -1;

        goto label22;

     label24:
        z11 = 0;

     label25:
        if z11 != 0 goto label26;

        goto label28;

     label26:
        goto label21;

     label27:
        $i4 = r1.<com.android.server.am.ServiceRecord: int totalRestartCount>;

        $i5 = $i4 + 1;

        r1.<com.android.server.am.ServiceRecord: int totalRestartCount> = $i5;

        r1.<com.android.server.am.ServiceRecord: int restartCount> = 0;

        r1.<com.android.server.am.ServiceRecord: long restartDelay> = 0L;

        r1.<com.android.server.am.ServiceRecord: long nextRestartTime> = l0;

        r77 = "persistent";

     label28:
        $r9 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mRestartingServices>;

        $z3 = virtualinvoke $r9.<java.util.ArrayList: boolean contains(java.lang.Object)>(r1);

        if $z3 != 0 goto label29;

        r1.<com.android.server.am.ServiceRecord: boolean createdFromFg> = 0;

        $r29 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mRestartingServices>;

        virtualinvoke $r29.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        $r30 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r31 = $r30.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        $i15 = virtualinvoke $r31.<com.android.server.am.ProcessStatsService: int getMemFactorLocked()>();

        virtualinvoke r1.<com.android.server.am.ServiceRecord: void makeRestarting(int,long)>($i15, l0);

     label29:
        specialinvoke r0.<com.android.server.am.ActiveServices: void cancelForegroundNotificationLocked(com.android.server.am.ServiceRecord)>(r1);

        $r10 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r12 = $r10.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        $r11 = r1.<com.android.server.am.ServiceRecord: java.lang.Runnable restarter>;

        virtualinvoke $r12.<com.android.server.am.ActivityManagerService$MainHandler: void removeCallbacks(java.lang.Runnable)>($r11);

        $r13 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r15 = $r13.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        $r14 = r1.<com.android.server.am.ServiceRecord: java.lang.Runnable restarter>;

        $l6 = r1.<com.android.server.am.ServiceRecord: long nextRestartTime>;

        virtualinvoke $r15.<com.android.server.am.ActivityManagerService$MainHandler: boolean postAtTime(java.lang.Runnable,long)>($r14, $l6);

        $l7 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l8 = r1.<com.android.server.am.ServiceRecord: long restartDelay>;

        $l9 = $l7 + $l8;

        r1.<com.android.server.am.ServiceRecord: long nextRestartTime> = $l9;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Scheduling restart of crashed service ");

        $r18 = r1.<com.android.server.am.ServiceRecord: java.lang.String shortInstanceName>;

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        $l10 = r1.<com.android.server.am.ServiceRecord: long restartDelay>;

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l10);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms for ");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r77);

        $r24 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r24);

        $r25 = newarray (java.lang.Object)[3];

        $i12 = r1.<com.android.server.am.ServiceRecord: int userId>;

        $r26 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i12);

        $r25[0] = $r26;

        $r27 = r1.<com.android.server.am.ServiceRecord: java.lang.String shortInstanceName>;

        $r25[1] = $r27;

        $l13 = r1.<com.android.server.am.ServiceRecord: long restartDelay>;

        $r28 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l13);

        $r25[2] = $r28;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(30035, $r25);

        return 1;
    }

    private final void sendServiceArgsLocked(com.android.server.am.ServiceRecord, boolean, boolean) throws android.os.TransactionTooLargeException
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ServiceRecord r1;
        int i0, $i1, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i14, $i16, i18;
        java.util.ArrayList $r4, $r5, $r9, $r11, $r14, $r30;
        android.content.pm.ParceledListSlice $r6;
        com.android.server.am.ProcessRecord $r7, $r21;
        android.app.IApplicationThread $r8;
        boolean $z0, $z2, $z3, $z5, $z6, z8, z9, z10, z11;
        android.os.TransactionTooLargeException $r10, $r27;
        java.lang.Object $r12;
        android.content.Intent $r13, $r18, $r20;
        long $l2;
        com.android.server.uri.NeededUriGrants $r15, $r25;
        android.content.pm.ApplicationInfo $r16;
        com.android.server.am.ActivityManagerService $r17, $r22, $r23;
        android.app.ServiceStartArgs $r19;
        com.android.server.uri.UriGrantsManagerInternal $r24;
        com.android.server.uri.UriPermissionOwner $r26;
        android.os.RemoteException $r28;
        java.lang.Exception $r29, r32;
        com.android.server.am.ServiceRecord$StartItem r31;
        byte b15, b17;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: com.android.server.am.ServiceRecord;

        z8 := @parameter1: boolean;

        z9 := @parameter2: boolean;

        $r4 = r1.<com.android.server.am.ServiceRecord: java.util.ArrayList pendingStarts>;

        i0 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        if i0 != 0 goto label01;

        return;

     label01:
        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

     label02:
        $r30 = r1.<com.android.server.am.ServiceRecord: java.util.ArrayList pendingStarts>;

        $i14 = virtualinvoke $r30.<java.util.ArrayList: int size()>();

        if $i14 <= 0 goto label10;

        $r11 = r1.<com.android.server.am.ServiceRecord: java.util.ArrayList pendingStarts>;

        $r12 = virtualinvoke $r11.<java.util.ArrayList: java.lang.Object remove(int)>(0);

        r31 = (com.android.server.am.ServiceRecord$StartItem) $r12;

        $r13 = r31.<com.android.server.am.ServiceRecord$StartItem: android.content.Intent intent>;

        if $r13 != null goto label03;

        if i0 <= 1 goto label03;

        goto label02;

     label03:
        $l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r31.<com.android.server.am.ServiceRecord$StartItem: long deliveredTime> = $l2;

        $r14 = r1.<com.android.server.am.ServiceRecord: java.util.ArrayList deliveredStarts>;

        virtualinvoke $r14.<java.util.ArrayList: boolean add(java.lang.Object)>(r31);

        $i3 = r31.<com.android.server.am.ServiceRecord$StartItem: int deliveryCount>;

        $i4 = $i3 + 1;

        r31.<com.android.server.am.ServiceRecord$StartItem: int deliveryCount> = $i4;

        $r15 = r31.<com.android.server.am.ServiceRecord$StartItem: com.android.server.uri.NeededUriGrants neededGrants>;

        if $r15 == null goto label04;

        $r23 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r24 = $r23.<com.android.server.am.ActivityManagerService: com.android.server.uri.UriGrantsManagerInternal mUgmInternal>;

        $r25 = r31.<com.android.server.am.ServiceRecord$StartItem: com.android.server.uri.NeededUriGrants neededGrants>;

        $r26 = virtualinvoke r31.<com.android.server.am.ServiceRecord$StartItem: com.android.server.uri.UriPermissionOwner getUriPermissionsLocked()>();

        interfaceinvoke $r24.<com.android.server.uri.UriGrantsManagerInternal: void grantUriPermissionUncheckedFromIntent(com.android.server.uri.NeededUriGrants,com.android.server.uri.UriPermissionOwner)>($r25, $r26);

     label04:
        $r17 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $i6 = r1.<com.android.server.am.ServiceRecord: int userId>;

        $r18 = r31.<com.android.server.am.ServiceRecord$StartItem: android.content.Intent intent>;

        $i7 = r31.<com.android.server.am.ServiceRecord$StartItem: int callingId>;

        $r16 = r1.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $i5 = $r16.<android.content.pm.ApplicationInfo: int uid>;

        $i8 = staticinvoke <android.os.UserHandle: int getAppId(int)>($i5);

        virtualinvoke $r17.<com.android.server.am.ActivityManagerService: void grantImplicitAccess(int,android.content.Intent,int,int)>($i6, $r18, $i7, $i8);

        specialinvoke r0.<com.android.server.am.ActiveServices: void bumpServiceExecutingLocked(com.android.server.am.ServiceRecord,boolean,java.lang.String)>(r1, z8, "start");

        z10 = z9;

        if z9 != 0 goto label05;

        z10 = 1;

        $r22 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r21 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        virtualinvoke $r22.<com.android.server.am.ActivityManagerService: boolean updateOomAdjLocked(com.android.server.am.ProcessRecord,boolean,java.lang.String)>($r21, 1, "updateOomAdj_startService");

     label05:
        $z2 = r1.<com.android.server.am.ServiceRecord: boolean fgRequired>;

        if $z2 == 0 goto label07;

        $z5 = r1.<com.android.server.am.ServiceRecord: boolean fgWaiting>;

        if $z5 != 0 goto label07;

        $z6 = r1.<com.android.server.am.ServiceRecord: boolean isForeground>;

        if $z6 != 0 goto label06;

        virtualinvoke r0.<com.android.server.am.ActiveServices: void scheduleServiceForegroundTransitionTimeoutLocked(com.android.server.am.ServiceRecord)>(r1);

        goto label07;

     label06:
        r1.<com.android.server.am.ServiceRecord: boolean fgRequired> = 0;

     label07:
        b15 = 0;

        $i16 = r31.<com.android.server.am.ServiceRecord$StartItem: int deliveryCount>;

        if $i16 <= 1 goto label08;

        b15 = 0 | 2;

     label08:
        b17 = b15;

        $i9 = r31.<com.android.server.am.ServiceRecord$StartItem: int doneExecutingCount>;

        if $i9 <= 0 goto label09;

        b17 = b15 | 1;

     label09:
        $r19 = new android.app.ServiceStartArgs;

        $z3 = r31.<com.android.server.am.ServiceRecord$StartItem: boolean taskRemoved>;

        $i10 = r31.<com.android.server.am.ServiceRecord$StartItem: int id>;

        $r20 = r31.<com.android.server.am.ServiceRecord$StartItem: android.content.Intent intent>;

        specialinvoke $r19.<android.app.ServiceStartArgs: void <init>(boolean,int,int,android.content.Intent)>($z3, $i10, b17, $r20);

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r19);

        z9 = z10;

        goto label02;

     label10:
        $r6 = new android.content.pm.ParceledListSlice;

        specialinvoke $r6.<android.content.pm.ParceledListSlice: void <init>(java.util.List)>($r5);

        virtualinvoke $r6.<android.content.pm.ParceledListSlice: void setInlineCountLimit(int)>(4);

        r32 = null;

     label11:
        $r7 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r8 = $r7.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        interfaceinvoke $r8.<android.app.IApplicationThread: void scheduleServiceArgs(android.os.IBinder,android.content.pm.ParceledListSlice)>(r1, $r6);

     label12:
        goto label16;

     label13:
        $r29 := @caughtexception;

        r32 = $r29;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", "Unexpected exception", $r29);

        goto label16;

     label14:
        $r28 := @caughtexception;

        r32 = $r28;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", "Failed delivering service starts", $r28);

        goto label16;

     label15:
        $r27 := @caughtexception;

        r32 = $r27;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", "Failed delivering service starts", $r27);

     label16:
        if r32 == null goto label20;

        $r9 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mDestroyingServices>;

        z11 = virtualinvoke $r9.<java.util.ArrayList: boolean contains(java.lang.Object)>(r1);

        i18 = 0;

     label17:
        $i1 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        if i18 >= $i1 goto label18;

        specialinvoke r0.<com.android.server.am.ActiveServices: void serviceDoneExecutingLocked(com.android.server.am.ServiceRecord,boolean,boolean)>(r1, z11, z11);

        i18 = i18 + 1;

        goto label17;

     label18:
        $z0 = r32 instanceof android.os.TransactionTooLargeException;

        if $z0 != 0 goto label19;

        goto label20;

     label19:
        $r10 = (android.os.TransactionTooLargeException) r32;

        throw $r10;

     label20:
        return;

        catch android.os.TransactionTooLargeException from label11 to label12 with label15;
        catch android.os.RemoteException from label11 to label12 with label14;
        catch java.lang.Exception from label11 to label12 with label13;
    }

    private void serviceDoneExecutingLocked(com.android.server.am.ServiceRecord, boolean, boolean)
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ServiceRecord r1, $r27;
        boolean z0, z1, $z2, $z4, $z6, $z9;
        long l0;
        int $i1, $i2, $i3, $i4, $i5, i6, i7;
        com.android.server.am.ProcessRecord $r2, $r3, $r4, $r5, $r6, $r7, $r13, $r14, $r16, $r18, $r22, $r24, $r28, $r30;
        com.android.server.am.ActivityManagerService $r8, $r19, $r29;
        com.android.server.am.ProcessStatsService $r9;
        com.android.internal.app.procstats.ServiceState $r10, $r11, $r12, $r32;
        android.util.ArraySet $r15, $r17, $r23, $r25;
        java.util.ArrayList $r20;
        android.util.ArrayMap $r21;
        java.lang.Object $r26;
        com.android.server.am.ActivityManagerService$MainHandler $r31;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: com.android.server.am.ServiceRecord;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        $i1 = r1.<com.android.server.am.ServiceRecord: int executeNesting>;

        $i2 = $i1 - 1;

        r1.<com.android.server.am.ServiceRecord: int executeNesting> = $i2;

        $i3 = r1.<com.android.server.am.ServiceRecord: int executeNesting>;

        if $i3 > 0 goto label9;

        $r2 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r2 == null goto label6;

        $r13 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r13.<com.android.server.am.ProcessRecord: boolean execServicesFg> = 0;

        $r14 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r15 = $r14.<com.android.server.am.ProcessRecord: android.util.ArraySet executingServices>;

        virtualinvoke $r15.<android.util.ArraySet: boolean remove(java.lang.Object)>(r1);

        $r16 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r17 = $r16.<com.android.server.am.ProcessRecord: android.util.ArraySet executingServices>;

        $i4 = virtualinvoke $r17.<android.util.ArraySet: int size()>();

        if $i4 != 0 goto label1;

        $r29 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r31 = $r29.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        $r30 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        virtualinvoke $r31.<com.android.server.am.ActivityManagerService$MainHandler: void removeMessages(int,java.lang.Object)>(12, $r30);

        goto label4;

     label1:
        $z6 = r1.<com.android.server.am.ServiceRecord: boolean executeFg>;

        if $z6 == 0 goto label4;

        $r22 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r23 = $r22.<com.android.server.am.ProcessRecord: android.util.ArraySet executingServices>;

        $i5 = virtualinvoke $r23.<android.util.ArraySet: int size()>();

        i6 = $i5 - 1;

     label2:
        if i6 < 0 goto label4;

        $r24 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r25 = $r24.<com.android.server.am.ProcessRecord: android.util.ArraySet executingServices>;

        $r26 = virtualinvoke $r25.<android.util.ArraySet: java.lang.Object valueAt(int)>(i6);

        $r27 = (com.android.server.am.ServiceRecord) $r26;

        $z9 = $r27.<com.android.server.am.ServiceRecord: boolean executeFg>;

        if $z9 == 0 goto label3;

        $r28 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r28.<com.android.server.am.ProcessRecord: boolean execServicesFg> = 1;

        goto label4;

     label3:
        i6 = i6 + -1;

        goto label2;

     label4:
        if z0 == 0 goto label5;

        $r20 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mDestroyingServices>;

        virtualinvoke $r20.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        $r21 = r1.<com.android.server.am.ServiceRecord: android.util.ArrayMap bindings>;

        virtualinvoke $r21.<android.util.ArrayMap: void clear()>();

     label5:
        $r19 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r18 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        virtualinvoke $r19.<com.android.server.am.ActivityManagerService: boolean updateOomAdjLocked(com.android.server.am.ProcessRecord,boolean,java.lang.String)>($r18, 1, "updateOomAdj_unbindService");

     label6:
        r1.<com.android.server.am.ServiceRecord: boolean executeFg> = 0;

        $r32 = r1.<com.android.server.am.ServiceRecord: com.android.internal.app.procstats.ServiceState tracker>;

        if $r32 == null goto label7;

        $r8 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r9 = $r8.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        i7 = virtualinvoke $r9.<com.android.server.am.ProcessStatsService: int getMemFactorLocked()>();

        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r10 = r1.<com.android.server.am.ServiceRecord: com.android.internal.app.procstats.ServiceState tracker>;

        virtualinvoke $r10.<com.android.internal.app.procstats.ServiceState: void setExecuting(boolean,int,long)>(0, i7, l0);

        $r11 = r1.<com.android.server.am.ServiceRecord: com.android.internal.app.procstats.ServiceState tracker>;

        virtualinvoke $r11.<com.android.internal.app.procstats.ServiceState: void setForeground(boolean,int,long)>(0, i7, l0);

        if z1 == 0 goto label7;

        $r12 = r1.<com.android.server.am.ServiceRecord: com.android.internal.app.procstats.ServiceState tracker>;

        virtualinvoke $r12.<com.android.internal.app.procstats.ServiceState: void clearCurrentOwner(java.lang.Object,boolean)>(r1, 0);

        r1.<com.android.server.am.ServiceRecord: com.android.internal.app.procstats.ServiceState tracker> = null;

     label7:
        if z1 == 0 goto label9;

        $r3 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r3 == null goto label8;

        $r4 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $z2 = virtualinvoke $r4.<com.android.server.am.ProcessRecord: boolean isPersistent()>();

        if $z2 != 0 goto label8;

        $r5 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        virtualinvoke $r5.<com.android.server.am.ProcessRecord: boolean stopService(com.android.server.am.ServiceRecord)>(r1);

        $r6 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        virtualinvoke $r6.<com.android.server.am.ProcessRecord: void updateBoundClientUids()>();

        $z4 = r1.<com.android.server.am.ServiceRecord: boolean whitelistManager>;

        if $z4 == 0 goto label8;

        $r7 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        specialinvoke r0.<com.android.server.am.ActiveServices: void updateWhitelistManagerLocked(com.android.server.am.ProcessRecord)>($r7);

     label8:
        virtualinvoke r1.<com.android.server.am.ServiceRecord: void setProcess(com.android.server.am.ProcessRecord)>(null);

     label9:
        return;
    }

    private void serviceProcessGoneLocked(com.android.server.am.ServiceRecord)
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ServiceRecord r1;
        int i0;
        long l1;
        com.android.internal.app.procstats.ServiceState $r2, $r5, $r6, $r7, $r8;
        com.android.server.am.ActivityManagerService $r3;
        com.android.server.am.ProcessStatsService $r4;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: com.android.server.am.ServiceRecord;

        $r2 = r1.<com.android.server.am.ServiceRecord: com.android.internal.app.procstats.ServiceState tracker>;

        if $r2 == null goto label1;

        $r3 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r4 = $r3.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        i0 = virtualinvoke $r4.<com.android.server.am.ProcessStatsService: int getMemFactorLocked()>();

        l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r5 = r1.<com.android.server.am.ServiceRecord: com.android.internal.app.procstats.ServiceState tracker>;

        virtualinvoke $r5.<com.android.internal.app.procstats.ServiceState: void setExecuting(boolean,int,long)>(0, i0, l1);

        $r6 = r1.<com.android.server.am.ServiceRecord: com.android.internal.app.procstats.ServiceState tracker>;

        virtualinvoke $r6.<com.android.internal.app.procstats.ServiceState: void setForeground(boolean,int,long)>(0, i0, l1);

        $r7 = r1.<com.android.server.am.ServiceRecord: com.android.internal.app.procstats.ServiceState tracker>;

        virtualinvoke $r7.<com.android.internal.app.procstats.ServiceState: void setBound(boolean,int,long)>(0, i0, l1);

        $r8 = r1.<com.android.server.am.ServiceRecord: com.android.internal.app.procstats.ServiceState tracker>;

        virtualinvoke $r8.<com.android.internal.app.procstats.ServiceState: void setStarted(boolean,int,long)>(0, i0, l1);

     label1:
        specialinvoke r0.<com.android.server.am.ActiveServices: void serviceDoneExecutingLocked(com.android.server.am.ServiceRecord,boolean,boolean)>(r1, 1, 1);

        return;
    }

    private void setServiceForegroundInnerLocked(com.android.server.am.ServiceRecord, int, android.app.Notification, int, int)
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ActiveServices$ServiceMap r1, $r51, r153;
        long l0, $l8, $l14, $l25, $l41;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, z9, z10, $z11, z12, z13, z14, z15, z16, z17;
        android.content.pm.ApplicationInfo $r2, $r8, $r10, $r21, $r22, $r40, $r47, $r61, $r63, $r73, $r80, $r81, $r100, $r104, $r105, $r109, $r116, $r123, $r131;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i9, $i10, $i11, $i12, $i13, $i15, $i16, $i17, $i18, $i19, $i20, $i22, $i23, $i24, $i26, $i27, $i28, $i29, $i33, $i34, $i35, $i37, $i38, $i39, $i40, i42, i43, i44, i45, i46, i47, i48, i49, $i50, $i51, $i52;
        com.android.server.am.ActivityManagerService $r3, $r4, $r13, $r16, $r18, $r38, $r42, $r43, $r49, $r54, $r56, $r57, $r66, $r67, $r92, $r101, $r102, $r124, $r126, $r127, $r133;
        com.android.server.appop.AppOpsService $r5, $r6, $r44, $r45, $r58, $r59, $r128, $r129;
        android.os.IBinder $r7, $r46, $r60, $r130;
        java.lang.String $r9, $r11, $r28, $r33, $r37, $r41, $r48, $r53, $r62, $r64, $r69, $r72, $r82, $r84, $r86, $r89, $r91, $r96, $r98, $r106, $r110, $r113, $r117, $r121, $r132, $r146;
        android.content.ComponentName $r12, $r65;
        com.android.server.am.ProcessRecord $r14, $r15, $r17, $r55, $r74, $r76, $r78, $r87, $r99, $r122, $r148;
        com.android.server.am.ProcessStatsService $r19, $r50, $r68, $r134;
        java.lang.IllegalArgumentException $r20, $r36;
        android.content.pm.ServiceInfo $r23, $r52;
        java.lang.StringBuilder $r24, $r94, $r107, $r114, r141, r142;
        java.lang.Object[] $r26, $r31;
        java.lang.Integer $r27, $r32;
        android.app.AppOpsManager $r39, $r103;
        android.util.ArrayMap $r70, $r145;
        java.lang.Object $r71;
        com.android.server.am.UidRecord $r77, $r79;
        com.android.server.am.ActivityManagerService$MainHandler $r93;
        java.lang.SecurityException $r120, r140;
        java.lang.Throwable $r125;
        com.android.server.am.ServiceRecord r135;
        android.app.Notification r136;
        com.android.server.am.ActiveServices$ActiveForegroundApp r143, r144;
        com.android.internal.app.procstats.ServiceState r147, r149, r151, r154;

        r0 := @this: com.android.server.am.ActiveServices;

        r135 := @parameter0: com.android.server.am.ServiceRecord;

        i42 := @parameter1: int;

        r136 := @parameter2: android.app.Notification;

        i43 := @parameter3: int;

        i44 := @parameter4: int;

        if i42 == 0 goto label132;

        if r136 == null goto label131;

        $r21 = r135.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $z2 = virtualinvoke $r21.<android.content.pm.ApplicationInfo: boolean isInstantApp()>();

        if $z2 == 0 goto label004;

        $r102 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r103 = virtualinvoke $r102.<com.android.server.am.ActivityManagerService: android.app.AppOpsManager getAppOpsManager()>();

        $r104 = r135.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $i35 = $r104.<android.content.pm.ApplicationInfo: int uid>;

        $r105 = r135.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $r106 = $r105.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        i45 = virtualinvoke $r103.<android.app.AppOpsManager: int checkOpNoThrow(int,int,java.lang.String)>(68, $i35, $r106);

        if i45 == 0 goto label003;

        if i45 == 1 goto label002;

        if i45 == 2 goto label001;

        $r124 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r122 = r135.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $i38 = $r122.<com.android.server.am.ProcessRecord: int pid>;

        $r123 = r135.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $i37 = $r123.<android.content.pm.ApplicationInfo: int uid>;

        virtualinvoke $r124.<com.android.server.am.ActivityManagerService: void enforcePermission(java.lang.String,int,int,java.lang.String)>("android.permission.INSTANT_APP_FOREGROUND_SERVICE", $i38, $i37, "startForeground");

        goto label003;

     label001:
        $r114 = new java.lang.StringBuilder;

        specialinvoke $r114.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r114.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Instant app ");

        $r116 = r135.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $r117 = $r116.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        virtualinvoke $r114.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r117);

        virtualinvoke $r114.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not have permission to create foreground services");

        $r120 = new java.lang.SecurityException;

        $r121 = virtualinvoke $r114.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r120.<java.lang.SecurityException: void <init>(java.lang.String)>($r121);

        throw $r120;

     label002:
        $r107 = new java.lang.StringBuilder;

        specialinvoke $r107.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r107.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Instant app ");

        $r109 = r135.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $r110 = $r109.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        virtualinvoke $r107.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r110);

        virtualinvoke $r107.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not have permission to create foreground services, ignoring.");

        $r113 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r113);

        return;

     label003:
        i46 = i44;

        goto label007;

     label004:
        $r22 = r135.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $i9 = $r22.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i9 < 28 goto label005;

        $r101 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r99 = r135.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $i34 = $r99.<com.android.server.am.ProcessRecord: int pid>;

        $r100 = r135.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $i33 = $r100.<android.content.pm.ApplicationInfo: int uid>;

        virtualinvoke $r101.<com.android.server.am.ActivityManagerService: void enforcePermission(java.lang.String,int,int,java.lang.String)>("android.permission.FOREGROUND_SERVICE", $i34, $i33, "startForeground");

     label005:
        $r23 = r135.<com.android.server.am.ServiceRecord: android.content.pm.ServiceInfo serviceInfo>;

        i47 = virtualinvoke $r23.<android.content.pm.ServiceInfo: int getForegroundServiceType()>();

        i48 = i44;

        if i44 != -1 goto label006;

        i48 = i47;

     label006:
        $i10 = i48 & i47;

        if $i10 != i48 goto label130;

        i46 = i48;

        $z3 = r135.<com.android.server.am.ServiceRecord: boolean mAllowWhileInUsePermissionInFgs>;

        if $z3 != 0 goto label007;

        $r94 = new java.lang.StringBuilder;

        specialinvoke $r94.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Foreground service started from background can not have location/camera/microphone access: service ");

        $r96 = r135.<com.android.server.am.ServiceRecord: java.lang.String shortInstanceName>;

        virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r96);

        $r98 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r98);

        i46 = i48;

     label007:
        z9 = 0;

        z10 = 0;

        $z11 = r135.<com.android.server.am.ServiceRecord: boolean fgRequired>;

        if $z11 == 0 goto label008;

        r135.<com.android.server.am.ServiceRecord: boolean fgRequired> = 0;

        r135.<com.android.server.am.ServiceRecord: boolean fgWaiting> = 0;

        z10 = 1;

        z9 = 1;

        $r92 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r93 = $r92.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        virtualinvoke $r93.<com.android.server.am.ActivityManagerService$MainHandler: void removeMessages(int,java.lang.Object)>(66, r135);

     label008:
        z12 = 0;

        z13 = z10;

     label009:
        $r38 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r39 = virtualinvoke $r38.<com.android.server.am.ActivityManagerService: android.app.AppOpsManager getAppOpsManager()>();

        $r40 = r135.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $i11 = $r40.<android.content.pm.ApplicationInfo: int uid>;

        $r41 = r135.<com.android.server.am.ServiceRecord: java.lang.String packageName>;

        i49 = virtualinvoke $r39.<android.app.AppOpsManager: int checkOpNoThrow(int,int,java.lang.String)>(76, $i11, $r41);

     label010:
        if i49 == 0 goto label028;

        if i49 == 1 goto label017;

        if i49 != 3 goto label011;

        goto label028;

     label011:
        z13 = z10;

     label012:
        r140 = new java.lang.SecurityException;

     label013:
        z13 = z10;

     label014:
        specialinvoke r140.<java.lang.SecurityException: void <init>(java.lang.String)>("Foreground not allowed as per app op");

     label015:
        z13 = z10;

     label016:
        throw r140;

     label017:
        z13 = z10;

     label018:
        r141 = new java.lang.StringBuilder;

     label019:
        z13 = z10;

     label020:
        specialinvoke r141.<java.lang.StringBuilder: void <init>()>();

     label021:
        z13 = z10;

     label022:
        virtualinvoke r141.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Service.startForeground() not allowed due to app op: service ");

     label023:
        z13 = z10;

     label024:
        $r89 = r135.<com.android.server.am.ServiceRecord: java.lang.String shortInstanceName>;

        virtualinvoke r141.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r89);

     label025:
        z13 = z10;

     label026:
        $r91 = virtualinvoke r141.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r91);

     label027:
        z12 = 1;

        goto label028;

     label028:
        z14 = z12;

        if z12 != 0 goto label045;

        z14 = z12;

        z13 = z10;

     label029:
        $r80 = r135.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $i28 = $r80.<android.content.pm.ApplicationInfo: int uid>;

        $z7 = specialinvoke r0.<com.android.server.am.ActiveServices: boolean appIsTopLocked(int)>($i28);

        if $z7 != 0 goto label045;

     label030:
        z14 = z12;

        z13 = z10;

     label031:
        $r81 = r135.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $i29 = $r81.<android.content.pm.ApplicationInfo: int uid>;

        $r82 = r135.<com.android.server.am.ServiceRecord: java.lang.String packageName>;

        $z8 = specialinvoke r0.<com.android.server.am.ActiveServices: boolean appRestrictedAnyInBackground(int,java.lang.String)>($i29, $r82);

        if $z8 == 0 goto label045;

     label032:
        z13 = z10;

     label033:
        r142 = new java.lang.StringBuilder;

     label034:
        z13 = z10;

     label035:
        specialinvoke r142.<java.lang.StringBuilder: void <init>()>();

     label036:
        z13 = z10;

     label037:
        virtualinvoke r142.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Service.startForeground() not allowed due to bg restriction: service ");

     label038:
        z13 = z10;

     label039:
        $r84 = r135.<com.android.server.am.ServiceRecord: java.lang.String shortInstanceName>;

        virtualinvoke r142.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r84);

     label040:
        z13 = z10;

     label041:
        $r86 = virtualinvoke r142.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r86);

     label042:
        z13 = z10;

     label043:
        $r87 = r135.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        specialinvoke r0.<com.android.server.am.ActiveServices: void updateServiceForegroundLocked(com.android.server.am.ProcessRecord,boolean)>($r87, 0);

     label044:
        z14 = 1;

     label045:
        z15 = z10;

        if z14 != 0 goto label124;

        z13 = z10;

     label046:
        $i15 = r135.<com.android.server.am.ServiceRecord: int foregroundId>;

        if $i15 == i42 goto label051;

     label047:
        z13 = z10;

     label048:
        specialinvoke r0.<com.android.server.am.ActiveServices: void cancelForegroundNotificationLocked(com.android.server.am.ServiceRecord)>(r135);

     label049:
        z13 = z10;

     label050:
        r135.<com.android.server.am.ServiceRecord: int foregroundId> = i42;

     label051:
        z13 = z10;

     label052:
        $i16 = r136.<android.app.Notification: int flags>;

        $i17 = $i16 | 64;

        r136.<android.app.Notification: int flags> = $i17;

     label053:
        z13 = z10;

     label054:
        r135.<com.android.server.am.ServiceRecord: android.app.Notification foregroundNoti> = r136;

     label055:
        z13 = z10;

     label056:
        r135.<com.android.server.am.ServiceRecord: int foregroundServiceType> = i46;

     label057:
        z16 = z10;

        z13 = z10;

     label058:
        $z4 = r135.<com.android.server.am.ServiceRecord: boolean isForeground>;

        if $z4 != 0 goto label113;

     label059:
        z13 = z10;

     label060:
        $i19 = r135.<com.android.server.am.ServiceRecord: int userId>;

        r1 = specialinvoke r0.<com.android.server.am.ActiveServices: com.android.server.am.ActiveServices$ServiceMap getServiceMapLocked(int)>($i19);

     label061:
        if r1 == null goto label097;

        z13 = z10;

     label062:
        $r70 = r1.<com.android.server.am.ActiveServices$ServiceMap: android.util.ArrayMap mActiveForegroundApps>;

        $r69 = r135.<com.android.server.am.ServiceRecord: java.lang.String packageName>;

        $r71 = virtualinvoke $r70.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r69);

        r143 = (com.android.server.am.ActiveServices$ActiveForegroundApp) $r71;

     label063:
        r144 = r143;

        if r143 != null goto label095;

        z13 = z10;

     label064:
        r144 = new com.android.server.am.ActiveServices$ActiveForegroundApp;

     label065:
        z13 = z10;

     label066:
        specialinvoke r144.<com.android.server.am.ActiveServices$ActiveForegroundApp: void <init>()>();

     label067:
        z13 = z10;

     label068:
        $r72 = r135.<com.android.server.am.ServiceRecord: java.lang.String packageName>;

        r144.<com.android.server.am.ActiveServices$ActiveForegroundApp: java.lang.String mPackageName> = $r72;

     label069:
        z13 = z10;

     label070:
        $r73 = r135.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $i26 = $r73.<android.content.pm.ApplicationInfo: int uid>;

        r144.<com.android.server.am.ActiveServices$ActiveForegroundApp: int mUid> = $i26;

     label071:
        z13 = z10;

     label072:
        $z6 = r0.<com.android.server.am.ActiveServices: boolean mScreenOn>;

        r144.<com.android.server.am.ActiveServices$ActiveForegroundApp: boolean mShownWhileScreenOn> = $z6;

     label073:
        z13 = z10;

     label074:
        $r74 = r135.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r74 == null goto label085;

     label075:
        z13 = z10;

     label076:
        $r76 = r135.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r77 = $r76.<com.android.server.am.ProcessRecord: com.android.server.am.UidRecord uidRecord>;

        if $r77 == null goto label085;

     label077:
        z13 = z10;

     label078:
        $r78 = r135.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r79 = $r78.<com.android.server.am.ProcessRecord: com.android.server.am.UidRecord uidRecord>;

        $i27 = virtualinvoke $r79.<com.android.server.am.UidRecord: int getCurProcState()>();

        if $i27 > 2 goto label080;

     label079:
        z17 = 1;

        goto label081;

     label080:
        z17 = 0;

     label081:
        z13 = z10;

     label082:
        r144.<com.android.server.am.ActiveServices$ActiveForegroundApp: boolean mShownWhileTop> = z17;

     label083:
        z13 = z10;

     label084:
        r144.<com.android.server.am.ActiveServices$ActiveForegroundApp: boolean mAppOnTop> = z17;

     label085:
        z13 = z10;

     label086:
        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

     label087:
        z13 = z10;

     label088:
        r144.<com.android.server.am.ActiveServices$ActiveForegroundApp: long mStartVisibleTime> = l0;

     label089:
        z13 = z10;

     label090:
        r144.<com.android.server.am.ActiveServices$ActiveForegroundApp: long mStartTime> = l0;

     label091:
        z13 = z10;

     label092:
        $r145 = r1.<com.android.server.am.ActiveServices$ServiceMap: android.util.ArrayMap mActiveForegroundApps>;

        $r146 = r135.<com.android.server.am.ServiceRecord: java.lang.String packageName>;

        virtualinvoke $r145.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r146, r144);

     label093:
        z13 = z10;

     label094:
        specialinvoke r0.<com.android.server.am.ActiveServices: void requestUpdateActiveForegroundAppsLocked(com.android.server.am.ActiveServices$ServiceMap,long)>(r1, 0L);

     label095:
        z13 = z10;

     label096:
        $i50 = r144.<com.android.server.am.ActiveServices$ActiveForegroundApp: int mNumActive>;

        $i51 = $i50 + 1;

        r144.<com.android.server.am.ActiveServices$ActiveForegroundApp: int mNumActive> = $i51;

     label097:
        z13 = z10;

     label098:
        r135.<com.android.server.am.ServiceRecord: boolean isForeground> = 1;

     label099:
        if z10 != 0 goto label104;

        z13 = z10;

     label100:
        r147 = virtualinvoke r135.<com.android.server.am.ServiceRecord: com.android.internal.app.procstats.ServiceState getTracker()>();

     label101:
        if r147 == null goto label103;

        z13 = z10;

     label102:
        $r67 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r68 = $r67.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        $i24 = virtualinvoke $r68.<com.android.server.am.ProcessStatsService: int getMemFactorLocked()>();

        $l25 = r135.<com.android.server.am.ServiceRecord: long lastActivity>;

        virtualinvoke r147.<com.android.internal.app.procstats.ServiceState: void setForeground(boolean,int,long)>(1, $i24, $l25);

     label103:
        z16 = z10;

        goto label105;

     label104:
        z16 = 0;

     label105:
        z13 = z16;

     label106:
        $r56 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r59 = $r56.<com.android.server.am.ActivityManagerService: com.android.server.appop.AppOpsService mAppOpsService>;

        $r57 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r58 = $r57.<com.android.server.am.ActivityManagerService: com.android.server.appop.AppOpsService mAppOpsService>;

        $r60 = staticinvoke <android.app.AppOpsManager: android.os.IBinder getToken(com.android.internal.app.IAppOpsService)>($r58);

        $r61 = r135.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $i20 = $r61.<android.content.pm.ApplicationInfo: int uid>;

        $r62 = r135.<com.android.server.am.ServiceRecord: java.lang.String packageName>;

        virtualinvoke $r59.<com.android.server.appop.AppOpsService: int startOperation(android.os.IBinder,int,int,java.lang.String,java.lang.String,boolean,boolean,java.lang.String,boolean)>($r60, 76, $i20, $r62, null, 1, 0, "", 0);

     label107:
        z13 = z16;

     label108:
        $r63 = r135.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $i22 = $r63.<android.content.pm.ApplicationInfo: int uid>;

        $r64 = r135.<com.android.server.am.ServiceRecord: java.lang.String shortInstanceName>;

        $z5 = r135.<com.android.server.am.ServiceRecord: boolean mAllowWhileInUsePermissionInFgs>;

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int,java.lang.String,int,boolean)>(60, $i22, $r64, 1, $z5);

     label109:
        z13 = z16;

     label110:
        specialinvoke r0.<com.android.server.am.ActiveServices: void registerAppOpCallbackLocked(com.android.server.am.ServiceRecord)>(r135);

     label111:
        z13 = z16;

     label112:
        $r66 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r65 = r135.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        $i23 = r135.<com.android.server.am.ServiceRecord: int userId>;

        virtualinvoke $r66.<com.android.server.am.ActivityManagerService: void updateForegroundServiceUsageStats(android.content.ComponentName,int,boolean)>($r65, $i23, 1);

     label113:
        z13 = z16;

     label114:
        virtualinvoke r135.<com.android.server.am.ServiceRecord: void postNotification()>();

     label115:
        z13 = z16;

     label116:
        $r148 = r135.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r148 == null goto label119;

     label117:
        z13 = z16;

     label118:
        $r55 = r135.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        specialinvoke r0.<com.android.server.am.ActiveServices: void updateServiceForegroundLocked(com.android.server.am.ProcessRecord,boolean)>($r55, 1);

     label119:
        z13 = z16;

     label120:
        $i18 = r135.<com.android.server.am.ServiceRecord: int userId>;

        $r51 = specialinvoke r0.<com.android.server.am.ActiveServices: com.android.server.am.ActiveServices$ServiceMap getServiceMapLocked(int)>($i18);

        virtualinvoke $r51.<com.android.server.am.ActiveServices$ServiceMap: void ensureNotStartingBackgroundLocked(com.android.server.am.ServiceRecord)>(r135);

     label121:
        z13 = z16;

     label122:
        $r54 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r52 = r135.<com.android.server.am.ServiceRecord: android.content.pm.ServiceInfo serviceInfo>;

        $r53 = $r52.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        virtualinvoke $r54.<com.android.server.am.ActivityManagerService: void notifyPackageUse(java.lang.String,int)>($r53, 2);

     label123:
        z15 = z16;

     label124:
        if z15 == 0 goto label125;

        r149 = virtualinvoke r135.<com.android.server.am.ServiceRecord: com.android.internal.app.procstats.ServiceState getTracker()>();

        if r149 == null goto label125;

        $r49 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r50 = $r49.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        $i13 = virtualinvoke $r50.<com.android.server.am.ProcessStatsService: int getMemFactorLocked()>();

        $l14 = r135.<com.android.server.am.ServiceRecord: long lastActivity>;

        virtualinvoke r149.<com.android.internal.app.procstats.ServiceState: void setForeground(boolean,int,long)>(0, $i13, $l14);

     label125:
        if z9 == 0 goto label126;

        $r42 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r45 = $r42.<com.android.server.am.ActivityManagerService: com.android.server.appop.AppOpsService mAppOpsService>;

        $r43 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r44 = $r43.<com.android.server.am.ActivityManagerService: com.android.server.appop.AppOpsService mAppOpsService>;

        $r46 = staticinvoke <android.app.AppOpsManager: android.os.IBinder getToken(com.android.internal.app.IAppOpsService)>($r44);

        $r47 = r135.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $i12 = $r47.<android.content.pm.ApplicationInfo: int uid>;

        $r48 = r135.<com.android.server.am.ServiceRecord: java.lang.String packageName>;

        virtualinvoke $r45.<com.android.server.appop.AppOpsService: void finishOperation(android.os.IBinder,int,int,java.lang.String,java.lang.String)>($r46, 76, $i12, $r48, null);

     label126:
        goto label137;

     label127:
        $r125 := @caughtexception;

        if z13 == 0 goto label128;

        r151 = virtualinvoke r135.<com.android.server.am.ServiceRecord: com.android.internal.app.procstats.ServiceState getTracker()>();

        if r151 == null goto label128;

        $r133 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r134 = $r133.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        $i40 = virtualinvoke $r134.<com.android.server.am.ProcessStatsService: int getMemFactorLocked()>();

        $l41 = r135.<com.android.server.am.ServiceRecord: long lastActivity>;

        virtualinvoke r151.<com.android.internal.app.procstats.ServiceState: void setForeground(boolean,int,long)>(0, $i40, $l41);

     label128:
        if z9 == 0 goto label129;

        $r126 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r129 = $r126.<com.android.server.am.ActivityManagerService: com.android.server.appop.AppOpsService mAppOpsService>;

        $r127 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r128 = $r127.<com.android.server.am.ActivityManagerService: com.android.server.appop.AppOpsService mAppOpsService>;

        $r130 = staticinvoke <android.app.AppOpsManager: android.os.IBinder getToken(com.android.internal.app.IAppOpsService)>($r128);

        $r131 = r135.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $i39 = $r131.<android.content.pm.ApplicationInfo: int uid>;

        $r132 = r135.<com.android.server.am.ServiceRecord: java.lang.String packageName>;

        virtualinvoke $r129.<com.android.server.appop.AppOpsService: void finishOperation(android.os.IBinder,int,int,java.lang.String,java.lang.String)>($r130, 76, $i39, $r132, null);

     label129:
        throw $r125;

     label130:
        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("foregroundServiceType ");

        $r26 = newarray (java.lang.Object)[1];

        $r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i48);

        $r26[0] = $r27;

        $r28 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("0x%08X", $r26);

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a subset of foregroundServiceType attribute ");

        $r31 = newarray (java.lang.Object)[1];

        $r32 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i47);

        $r31[0] = $r32;

        $r33 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("0x%08X", $r31);

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in service element of manifest file");

        $r36 = new java.lang.IllegalArgumentException;

        $r37 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r36.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r37);

        throw $r36;

     label131:
        $r20 = new java.lang.IllegalArgumentException;

        specialinvoke $r20.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("null notification");

        throw $r20;

     label132:
        $z0 = r135.<com.android.server.am.ServiceRecord: boolean isForeground>;

        if $z0 == 0 goto label135;

        $i3 = r135.<com.android.server.am.ServiceRecord: int userId>;

        r153 = specialinvoke r0.<com.android.server.am.ActiveServices: com.android.server.am.ActiveServices$ServiceMap getServiceMapLocked(int)>($i3);

        if r153 == null goto label133;

        specialinvoke r0.<com.android.server.am.ActiveServices: void decActiveForegroundAppLocked(com.android.server.am.ActiveServices$ServiceMap,com.android.server.am.ServiceRecord)>(r153, r135);

     label133:
        r135.<com.android.server.am.ServiceRecord: boolean isForeground> = 0;

        r154 = virtualinvoke r135.<com.android.server.am.ServiceRecord: com.android.internal.app.procstats.ServiceState getTracker()>();

        if r154 == null goto label134;

        $r18 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r19 = $r18.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        $i7 = virtualinvoke $r19.<com.android.server.am.ProcessStatsService: int getMemFactorLocked()>();

        $l8 = r135.<com.android.server.am.ServiceRecord: long lastActivity>;

        virtualinvoke r154.<com.android.internal.app.procstats.ServiceState: void setForeground(boolean,int,long)>(0, $i7, $l8);

     label134:
        $r3 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r6 = $r3.<com.android.server.am.ActivityManagerService: com.android.server.appop.AppOpsService mAppOpsService>;

        $r4 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r5 = $r4.<com.android.server.am.ActivityManagerService: com.android.server.appop.AppOpsService mAppOpsService>;

        $r7 = staticinvoke <android.app.AppOpsManager: android.os.IBinder getToken(com.android.internal.app.IAppOpsService)>($r5);

        $r8 = r135.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $i4 = $r8.<android.content.pm.ApplicationInfo: int uid>;

        $r9 = r135.<com.android.server.am.ServiceRecord: java.lang.String packageName>;

        virtualinvoke $r6.<com.android.server.appop.AppOpsService: void finishOperation(android.os.IBinder,int,int,java.lang.String,java.lang.String)>($r7, 76, $i4, $r9, null);

        specialinvoke r0.<com.android.server.am.ActiveServices: void unregisterAppOpCallbackLocked(com.android.server.am.ServiceRecord)>(r135);

        $r10 = r135.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $i5 = $r10.<android.content.pm.ApplicationInfo: int uid>;

        $r11 = r135.<com.android.server.am.ServiceRecord: java.lang.String shortInstanceName>;

        $z1 = r135.<com.android.server.am.ServiceRecord: boolean mAllowWhileInUsePermissionInFgs>;

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int,java.lang.String,int,boolean)>(60, $i5, $r11, 2, $z1);

        $r13 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r12 = r135.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        $i6 = r135.<com.android.server.am.ServiceRecord: int userId>;

        virtualinvoke $r13.<com.android.server.am.ActivityManagerService: void updateForegroundServiceUsageStats(android.content.ComponentName,int,boolean)>($r12, $i6, 0);

        $r14 = r135.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r14 == null goto label135;

        $r16 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r15 = r135.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        virtualinvoke $r16.<com.android.server.am.ActivityManagerService: void updateLruProcessLocked(com.android.server.am.ProcessRecord,boolean,com.android.server.am.ProcessRecord)>($r15, 0, null);

        $r17 = r135.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        specialinvoke r0.<com.android.server.am.ActiveServices: void updateServiceForegroundLocked(com.android.server.am.ProcessRecord,boolean)>($r17, 1);

     label135:
        $i52 = i43 & 1;

        if $i52 == 0 goto label136;

        specialinvoke r0.<com.android.server.am.ActiveServices: void cancelForegroundNotificationLocked(com.android.server.am.ServiceRecord)>(r135);

        r135.<com.android.server.am.ServiceRecord: int foregroundId> = 0;

        r135.<com.android.server.am.ServiceRecord: android.app.Notification foregroundNoti> = null;

        goto label137;

     label136:
        $r2 = r135.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $i1 = $r2.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i1 < 21 goto label137;

        virtualinvoke r135.<com.android.server.am.ServiceRecord: void stripForegroundServiceFlagFromNotification()>();

        $i2 = i43 & 2;

        if $i2 == 0 goto label137;

        r135.<com.android.server.am.ServiceRecord: int foregroundId> = 0;

        r135.<com.android.server.am.ServiceRecord: android.app.Notification foregroundNoti> = null;

     label137:
        return;

        catch java.lang.Throwable from label009 to label010 with label127;
        catch java.lang.Throwable from label012 to label013 with label127;
        catch java.lang.Throwable from label014 to label015 with label127;
        catch java.lang.Throwable from label016 to label017 with label127;
        catch java.lang.Throwable from label018 to label019 with label127;
        catch java.lang.Throwable from label020 to label021 with label127;
        catch java.lang.Throwable from label022 to label023 with label127;
        catch java.lang.Throwable from label024 to label025 with label127;
        catch java.lang.Throwable from label026 to label027 with label127;
        catch java.lang.Throwable from label029 to label030 with label127;
        catch java.lang.Throwable from label031 to label032 with label127;
        catch java.lang.Throwable from label033 to label034 with label127;
        catch java.lang.Throwable from label035 to label036 with label127;
        catch java.lang.Throwable from label037 to label038 with label127;
        catch java.lang.Throwable from label039 to label040 with label127;
        catch java.lang.Throwable from label041 to label042 with label127;
        catch java.lang.Throwable from label043 to label044 with label127;
        catch java.lang.Throwable from label046 to label047 with label127;
        catch java.lang.Throwable from label048 to label049 with label127;
        catch java.lang.Throwable from label050 to label051 with label127;
        catch java.lang.Throwable from label052 to label053 with label127;
        catch java.lang.Throwable from label054 to label055 with label127;
        catch java.lang.Throwable from label056 to label057 with label127;
        catch java.lang.Throwable from label058 to label059 with label127;
        catch java.lang.Throwable from label060 to label061 with label127;
        catch java.lang.Throwable from label062 to label063 with label127;
        catch java.lang.Throwable from label064 to label065 with label127;
        catch java.lang.Throwable from label066 to label067 with label127;
        catch java.lang.Throwable from label068 to label069 with label127;
        catch java.lang.Throwable from label070 to label071 with label127;
        catch java.lang.Throwable from label072 to label073 with label127;
        catch java.lang.Throwable from label074 to label075 with label127;
        catch java.lang.Throwable from label076 to label077 with label127;
        catch java.lang.Throwable from label078 to label079 with label127;
        catch java.lang.Throwable from label082 to label083 with label127;
        catch java.lang.Throwable from label084 to label085 with label127;
        catch java.lang.Throwable from label086 to label087 with label127;
        catch java.lang.Throwable from label088 to label089 with label127;
        catch java.lang.Throwable from label090 to label091 with label127;
        catch java.lang.Throwable from label092 to label093 with label127;
        catch java.lang.Throwable from label094 to label095 with label127;
        catch java.lang.Throwable from label096 to label097 with label127;
        catch java.lang.Throwable from label098 to label099 with label127;
        catch java.lang.Throwable from label100 to label101 with label127;
        catch java.lang.Throwable from label102 to label103 with label127;
        catch java.lang.Throwable from label106 to label107 with label127;
        catch java.lang.Throwable from label108 to label109 with label127;
        catch java.lang.Throwable from label110 to label111 with label127;
        catch java.lang.Throwable from label112 to label113 with label127;
        catch java.lang.Throwable from label114 to label115 with label127;
        catch java.lang.Throwable from label116 to label117 with label127;
        catch java.lang.Throwable from label118 to label119 with label127;
        catch java.lang.Throwable from label120 to label121 with label127;
        catch java.lang.Throwable from label122 to label123 with label127;
    }

    private void setWhiteListAllowWhileInUsePermissionInFgs()
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ActivityManagerService $r1, $r4;
        android.content.Context $r2, $r5;
        android.content.pm.PackageManager $r3, $r6;
        boolean $z0, $z1;
        android.util.ArraySet $r7, $r8;
        java.lang.String r9, r10;

        r0 := @this: com.android.server.am.ActiveServices;

        $r1 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r2 = $r1.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r9 = virtualinvoke $r3.<android.content.pm.PackageManager: java.lang.String getAttentionServicePackageName()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r9);

        if $z0 != 0 goto label1;

        $r8 = r0.<com.android.server.am.ActiveServices: android.util.ArraySet mWhiteListAllowWhileInUsePermissionInFgs>;

        virtualinvoke $r8.<android.util.ArraySet: boolean add(java.lang.Object)>(r9);

     label1:
        $r4 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r5 = $r4.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r6 = virtualinvoke $r5.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r10 = virtualinvoke $r6.<android.content.pm.PackageManager: java.lang.String getSystemCaptionsServicePackageName()>();

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r10);

        if $z1 != 0 goto label2;

        $r7 = r0.<com.android.server.am.ActiveServices: android.util.ArraySet mWhiteListAllowWhileInUsePermissionInFgs>;

        virtualinvoke $r7.<android.util.ArraySet: boolean add(java.lang.Object)>(r10);

     label2:
        return;
    }

    private boolean shouldAllowWhileInUsePermissionInFgsLocked(java.lang.String, int, int, android.content.Intent, com.android.server.am.ServiceRecord, boolean)
    {
        com.android.server.am.ActiveServices r0;
        java.lang.String r1;
        int i0, i1, $i2, i3;
        com.android.server.am.ServiceRecord r2;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, z8, z9;
        com.android.server.am.ActivityManagerService $r3, $r6, $r7, $r10;
        com.android.server.am.ActivityManagerConstants $r4;
        com.android.server.am.ProcessRecord $r5, $r12, $r14, $r17;
        com.android.server.wm.ActivityTaskManagerInternal $r8;
        android.util.ArraySet $r9, $r13;
        android.app.ActivityManagerInternal $r11;
        android.content.Intent r15;
        com.android.server.am.ActiveInstrumentation r16;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r15 := @parameter3: android.content.Intent;

        r2 := @parameter4: com.android.server.am.ServiceRecord;

        z0 := @parameter5: boolean;

        $r3 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r4 = $r3.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerConstants mConstants>;

        $z1 = $r4.<com.android.server.am.ActivityManagerConstants: boolean mFlagBackgroundFgsStartRestrictionEnabled>;

        if $z1 != 0 goto label01;

        return 1;

     label01:
        if z0 == 0 goto label02;

        return 1;

     label02:
        i3 = staticinvoke <android.os.UserHandle: int getAppId(int)>(i1);

        if i3 == 0 goto label03;

        if i3 == 1000 goto label03;

        if i3 == 1027 goto label03;

        if i3 == 2000 goto label03;

        z8 = 0;

        goto label04;

     label03:
        z8 = 1;

     label04:
        if z8 == 0 goto label05;

        return 1;

     label05:
        $r5 = r2.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r5 == null goto label06;

        $r14 = r2.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        r16 = virtualinvoke $r14.<com.android.server.am.ProcessRecord: com.android.server.am.ActiveInstrumentation getActiveInstrumentation()>();

        if r16 == null goto label06;

        $z7 = r16.<com.android.server.am.ActiveInstrumentation: boolean mHasBackgroundActivityStartsPermission>;

        if $z7 == 0 goto label06;

        return 1;

     label06:
        $r17 = r2.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r17 == null goto label07;

        $r12 = r2.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r13 = $r12.<com.android.server.am.ProcessRecord: android.util.ArraySet mAllowBackgroundActivityStartsTokens>;

        $z6 = virtualinvoke $r13.<android.util.ArraySet: boolean isEmpty()>();

        if $z6 != 0 goto label07;

        z9 = 1;

        goto label08;

     label07:
        z9 = 0;

     label08:
        if z9 == 0 goto label09;

        return 1;

     label09:
        $r6 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $i2 = virtualinvoke $r6.<com.android.server.am.ActivityManagerService: int checkPermission(java.lang.String,int,int)>("android.permission.START_ACTIVITIES_FROM_BACKGROUND", i0, i1);

        if $i2 != 0 goto label10;

        return 1;

     label10:
        $z2 = specialinvoke r0.<com.android.server.am.ActiveServices: boolean appIsTopLocked(int)>(i1);

        if $z2 == 0 goto label11;

        return 1;

     label11:
        $r7 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r8 = $r7.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerInternal mAtmInternal>;

        $z3 = virtualinvoke $r8.<com.android.server.wm.ActivityTaskManagerInternal: boolean isUidForeground(int)>(i1);

        if $z3 == 0 goto label12;

        return 1;

     label12:
        $r9 = r0.<com.android.server.am.ActiveServices: android.util.ArraySet mWhiteListAllowWhileInUsePermissionInFgs>;

        $z4 = virtualinvoke $r9.<android.util.ArraySet: boolean contains(java.lang.Object)>(r1);

        if $z4 == 0 goto label13;

        return 1;

     label13:
        $r10 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r11 = $r10.<com.android.server.am.ActivityManagerService: android.app.ActivityManagerInternal mInternal>;

        $z5 = virtualinvoke $r11.<android.app.ActivityManagerInternal: boolean isDeviceOwner(int)>(i1);

        if $z5 == 0 goto label14;

        return 1;

     label14:
        return 0;
    }

    private void stopServiceLocked(com.android.server.am.ServiceRecord)
    {
        com.android.server.am.ActiveServices r0;
        com.android.internal.os.BatteryStatsImpl r1;
        boolean $z0;
        android.content.pm.ApplicationInfo $r2;
        android.content.ComponentName $r3, $r5;
        int $i0, $i1;
        java.lang.String $r4, $r6;
        com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv $r7, $r8;
        com.android.internal.app.procstats.ServiceState $r9, $r12;
        com.android.server.am.ActivityManagerService $r10;
        com.android.server.am.ProcessStatsService $r11;
        long $l2;
        java.lang.Throwable $r13;
        com.android.server.am.ServiceRecord r14;

        r0 := @this: com.android.server.am.ActiveServices;

        r14 := @parameter0: com.android.server.am.ServiceRecord;

        $z0 = r14.<com.android.server.am.ServiceRecord: boolean delayed>;

        if $z0 == 0 goto label1;

        r14.<com.android.server.am.ServiceRecord: boolean delayedStop> = 1;

        return;

     label1:
        $r2 = r14.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $i0 = $r2.<android.content.pm.ApplicationInfo: int uid>;

        $r3 = r14.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        $r4 = virtualinvoke $r3.<android.content.ComponentName: java.lang.String getPackageName()>();

        $r5 = r14.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        $r6 = virtualinvoke $r5.<android.content.ComponentName: java.lang.String getClassName()>();

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int,java.lang.String,java.lang.String,int)>(99, $i0, $r4, $r6, 2);

        $r7 = r14.<com.android.server.am.ServiceRecord: com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv stats>;

        r1 = virtualinvoke $r7.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: com.android.internal.os.BatteryStatsImpl getBatteryStats()>();

        entermonitor r1;

     label2:
        $r8 = r14.<com.android.server.am.ServiceRecord: com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv stats>;

        virtualinvoke $r8.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: void stopRunningLocked()>();

        exitmonitor r1;

     label3:
        r14.<com.android.server.am.ServiceRecord: boolean startRequested> = 0;

        $r9 = r14.<com.android.server.am.ServiceRecord: com.android.internal.app.procstats.ServiceState tracker>;

        if $r9 == null goto label4;

        $r12 = r14.<com.android.server.am.ServiceRecord: com.android.internal.app.procstats.ServiceState tracker>;

        $r10 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r11 = $r10.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        $i1 = virtualinvoke $r11.<com.android.server.am.ProcessStatsService: int getMemFactorLocked()>();

        $l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        virtualinvoke $r12.<com.android.internal.app.procstats.ServiceState: void setStarted(boolean,int,long)>(0, $i1, $l2);

     label4:
        r14.<com.android.server.am.ServiceRecord: boolean callStart> = 0;

        specialinvoke r0.<com.android.server.am.ActiveServices: void bringDownServiceIfNeededLocked(com.android.server.am.ServiceRecord,boolean,boolean)>(r14, 0, 0);

        return;

     label5:
        $r13 := @caughtexception;

     label6:
        exitmonitor r1;

     label7:
        throw $r13;

        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    private void unregisterAppOpCallbackLocked(com.android.server.am.ServiceRecord)
    {
        com.android.server.am.ActiveServices r0;
        int i0;
        android.content.pm.ApplicationInfo $r1;
        android.util.SparseArray $r2, $r4;
        java.lang.Object $r3;
        boolean $z0;
        com.android.server.am.ServiceRecord r5;
        com.android.server.am.ActiveServices$AppOpCallback r6;

        r0 := @this: com.android.server.am.ActiveServices;

        r5 := @parameter0: com.android.server.am.ServiceRecord;

        $r1 = r5.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        i0 = $r1.<android.content.pm.ApplicationInfo: int uid>;

        $r2 = r0.<com.android.server.am.ActiveServices: android.util.SparseArray mFgsAppOpCallbacks>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r6 = (com.android.server.am.ActiveServices$AppOpCallback) $r3;

        if r6 == null goto label1;

        virtualinvoke r6.<com.android.server.am.ActiveServices$AppOpCallback: void unregisterLocked()>();

        $z0 = virtualinvoke r6.<com.android.server.am.ActiveServices$AppOpCallback: boolean isObsoleteLocked()>();

        if $z0 == 0 goto label1;

        $r4 = r0.<com.android.server.am.ActiveServices: android.util.SparseArray mFgsAppOpCallbacks>;

        virtualinvoke $r4.<android.util.SparseArray: void remove(int)>(i0);

     label1:
        return;
    }

    private final boolean unscheduleServiceRestartLocked(com.android.server.am.ServiceRecord, int, boolean)
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ServiceRecord r1;
        int i0, $i1;
        java.util.ArrayList $r2;
        com.android.server.am.ActivityManagerService $r3;
        java.lang.Runnable $r4;
        com.android.server.am.ActivityManagerService$MainHandler $r5;
        android.content.pm.ApplicationInfo $r6;
        long $l2;
        byte $b3;
        boolean z0, z1;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: com.android.server.am.ServiceRecord;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        if z0 != 0 goto label1;

        $l2 = r1.<com.android.server.am.ServiceRecord: long restartDelay>;

        $b3 = $l2 cmp 0L;

        if $b3 != 0 goto label1;

        return 0;

     label1:
        $r2 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mRestartingServices>;

        z1 = virtualinvoke $r2.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        if z1 != 0 goto label2;

        $r6 = r1.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $i1 = $r6.<android.content.pm.ApplicationInfo: int uid>;

        if i0 == $i1 goto label3;

     label2:
        virtualinvoke r1.<com.android.server.am.ServiceRecord: void resetRestartCounter()>();

     label3:
        if z1 == 0 goto label4;

        specialinvoke r0.<com.android.server.am.ActiveServices: void clearRestartingIfNeededLocked(com.android.server.am.ServiceRecord)>(r1);

     label4:
        $r3 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r5 = $r3.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        $r4 = r1.<com.android.server.am.ServiceRecord: java.lang.Runnable restarter>;

        virtualinvoke $r5.<com.android.server.am.ActivityManagerService$MainHandler: void removeCallbacks(java.lang.Runnable)>($r4);

        return 1;
    }

    private boolean updateServiceClientActivitiesLocked(com.android.server.am.ProcessRecord, com.android.server.am.ConnectionRecord, boolean)
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ProcessRecord r1, $r9, $r11, $r13, $r15, $r17;
        boolean z0, $z1, $z2, $z3, z4, z5;
        android.util.ArrayMap r2;
        java.util.ArrayList r3;
        com.android.server.am.ActivityManagerService $r4;
        com.android.server.am.ServiceRecord $r5;
        int $i0, $i1, $i2, i3, i4, i5;
        java.lang.Object $r6, $r7;
        com.android.server.am.AppBindRecord $r8, $r10, $r12, $r14, $r16;
        com.android.server.am.ConnectionRecord r18, r19;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        r18 := @parameter1: com.android.server.am.ConnectionRecord;

        z0 := @parameter2: boolean;

        if r18 == null goto label01;

        $r14 = r18.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        $r15 = $r14.<com.android.server.am.AppBindRecord: com.android.server.am.ProcessRecord client>;

        if $r15 == null goto label01;

        $r16 = r18.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        $r17 = $r16.<com.android.server.am.AppBindRecord: com.android.server.am.ProcessRecord client>;

        $z3 = virtualinvoke $r17.<com.android.server.am.ProcessRecord: boolean hasActivities()>();

        if $z3 != 0 goto label01;

        return 0;

     label01:
        z4 = 0;

        $i2 = virtualinvoke r1.<com.android.server.am.ProcessRecord: int numberOfRunningServices()>();

        i3 = $i2 - 1;

     label02:
        if i3 < 0 goto label09;

        if z4 != 0 goto label09;

        $r5 = virtualinvoke r1.<com.android.server.am.ProcessRecord: com.android.server.am.ServiceRecord getRunningServiceAt(int)>(i3);

        r2 = virtualinvoke $r5.<com.android.server.am.ServiceRecord: android.util.ArrayMap getConnections()>();

        $i0 = virtualinvoke r2.<android.util.ArrayMap: int size()>();

        i4 = $i0 - 1;

     label03:
        if i4 < 0 goto label08;

        if z4 != 0 goto label08;

        $r6 = virtualinvoke r2.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i4);

        r3 = (java.util.ArrayList) $r6;

        $i1 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        i5 = $i1 - 1;

     label04:
        z5 = z4;

        if i5 < 0 goto label07;

        $r7 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        r19 = (com.android.server.am.ConnectionRecord) $r7;

        $r8 = r19.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        $r9 = $r8.<com.android.server.am.AppBindRecord: com.android.server.am.ProcessRecord client>;

        if $r9 == null goto label06;

        $r10 = r19.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        $r11 = $r10.<com.android.server.am.AppBindRecord: com.android.server.am.ProcessRecord client>;

        if $r11 != r1 goto label05;

        goto label06;

     label05:
        $r12 = r19.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        $r13 = $r12.<com.android.server.am.AppBindRecord: com.android.server.am.ProcessRecord client>;

        $z2 = virtualinvoke $r13.<com.android.server.am.ProcessRecord: boolean hasActivities()>();

        if $z2 == 0 goto label06;

        z5 = 1;

        goto label07;

     label06:
        i5 = i5 + -1;

        goto label04;

     label07:
        i4 = i4 + -1;

        z4 = z5;

        goto label03;

     label08:
        i3 = i3 + -1;

        goto label02;

     label09:
        $z1 = virtualinvoke r1.<com.android.server.am.ProcessRecord: boolean hasClientActivities()>();

        if z4 == $z1 goto label11;

        virtualinvoke r1.<com.android.server.am.ProcessRecord: void setHasClientActivities(boolean)>(z4);

        if z0 == 0 goto label10;

        $r4 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        virtualinvoke $r4.<com.android.server.am.ActivityManagerService: void updateLruProcessLocked(com.android.server.am.ProcessRecord,boolean,com.android.server.am.ProcessRecord)>(r1, z4, null);

     label10:
        return 1;

     label11:
        return 0;
    }

    private void updateServiceForegroundLocked(com.android.server.am.ProcessRecord, boolean)
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ProcessRecord r1;
        boolean z0, $z1, $z2, z3;
        com.android.server.am.ServiceRecord r2;
        int $i0, $i1, i2, i3, i4;
        com.android.server.am.ActivityManagerService $r3;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        z0 := @parameter1: boolean;

        z3 = 0;

        i2 = 0;

        $i0 = virtualinvoke r1.<com.android.server.am.ProcessRecord: int numberOfRunningServices()>();

        i3 = $i0 - 1;

     label1:
        if i3 < 0 goto label4;

        r2 = virtualinvoke r1.<com.android.server.am.ProcessRecord: com.android.server.am.ServiceRecord getRunningServiceAt(int)>(i3);

        $z1 = r2.<com.android.server.am.ServiceRecord: boolean isForeground>;

        if $z1 != 0 goto label2;

        i4 = i2;

        $z2 = r2.<com.android.server.am.ServiceRecord: boolean fgRequired>;

        if $z2 == 0 goto label3;

     label2:
        z3 = 1;

        $i1 = r2.<com.android.server.am.ServiceRecord: int foregroundServiceType>;

        i4 = i2 | $i1;

     label3:
        i3 = i3 + -1;

        i2 = i4;

        goto label1;

     label4:
        $r3 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        virtualinvoke $r3.<com.android.server.am.ActivityManagerService: void updateProcessForegroundLocked(com.android.server.am.ProcessRecord,boolean,int,boolean)>(r1, z3, i2, z0);

        return;
    }

    private void updateWhitelistManagerLocked(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ProcessRecord r1;
        int $i0, i1;
        com.android.server.am.ServiceRecord $r2;
        boolean $z0;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        r1.<com.android.server.am.ProcessRecord: boolean whitelistManager> = 0;

        $i0 = virtualinvoke r1.<com.android.server.am.ProcessRecord: int numberOfRunningServices()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label3;

        $r2 = virtualinvoke r1.<com.android.server.am.ProcessRecord: com.android.server.am.ServiceRecord getRunningServiceAt(int)>(i1);

        $z0 = $r2.<com.android.server.am.ServiceRecord: boolean whitelistManager>;

        if $z0 == 0 goto label2;

        r1.<com.android.server.am.ProcessRecord: boolean whitelistManager> = 1;

        goto label3;

     label2:
        i1 = i1 + -1;

        goto label1;

     label3:
        return;
    }

    boolean attachApplicationLocked(com.android.server.am.ProcessRecord, java.lang.String) throws android.os.RemoteException
    {
        com.android.server.am.ActiveServices r0;
        java.util.ArrayList $r1, $r2, $r3, $r4, $r15, $r16, $r19;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7, $i8, i10, i11, i12, i13;
        java.lang.Object $r5, $r17;
        com.android.server.am.ProcessRecord $r6, $r18, r34;
        com.android.server.am.ActivityManagerService $r7, $r10, $r23;
        java.lang.Runnable $r8, $r11;
        com.android.server.am.ActivityManagerService$MainHandler $r9, $r12;
        android.content.pm.ApplicationInfo $r13, $r21, $r22, $r26;
        java.lang.String $r14, $r25, $r27, $r31, $r33, r35;
        boolean $z1, $z3, $z4, $z5, z6, z8;
        com.android.server.am.ProcessStatsService $r24;
        long $l6;
        android.os.RemoteException $r28;
        java.lang.StringBuilder $r29;
        com.android.server.am.ServiceRecord r36, r37, r40;

        r0 := @this: com.android.server.am.ActiveServices;

        r34 := @parameter0: com.android.server.am.ProcessRecord;

        r35 := @parameter1: java.lang.String;

        z6 = 0;

        $r1 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mPendingServices>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if $i0 <= 0 goto label26;

        r36 = null;

        i10 = 0;

        z6 = 0;

     label01:
        r37 = r36;

     label02:
        $r15 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mPendingServices>;

        $i5 = virtualinvoke $r15.<java.util.ArrayList: int size()>();

        if i10 >= $i5 goto label24;

     label03:
        r37 = r36;

     label04:
        $r16 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mPendingServices>;

        $r17 = virtualinvoke $r16.<java.util.ArrayList: java.lang.Object get(int)>(i10);

        r36 = (com.android.server.am.ServiceRecord) $r17;

     label05:
        r37 = r36;

     label06:
        $r18 = r36.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord isolatedProc>;

        if r34 == $r18 goto label12;

     label07:
        z8 = z6;

        i11 = i10;

        r37 = r36;

     label08:
        $i8 = r34.<com.android.server.am.ProcessRecord: int uid>;

        $r26 = r36.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $i7 = $r26.<android.content.pm.ApplicationInfo: int uid>;

        if $i8 != $i7 goto label23;

     label09:
        r37 = r36;

     label10:
        $r27 = r36.<com.android.server.am.ServiceRecord: java.lang.String processName>;

        $z5 = virtualinvoke r35.<java.lang.String: boolean equals(java.lang.Object)>($r27);

        if $z5 != 0 goto label12;

     label11:
        z8 = z6;

        i11 = i10;

        goto label23;

     label12:
        r37 = r36;

     label13:
        $r19 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mPendingServices>;

        virtualinvoke $r19.<java.util.ArrayList: java.lang.Object remove(int)>(i10);

     label14:
        i12 = i10 + -1;

        r37 = r36;

     label15:
        $r21 = r36.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $r25 = $r21.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r22 = r36.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $l6 = $r22.<android.content.pm.ApplicationInfo: long longVersionCode>;

        $r23 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r24 = $r23.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        virtualinvoke r34.<com.android.server.am.ProcessRecord: boolean addPackage(java.lang.String,long,com.android.server.am.ProcessStatsService)>($r25, $l6, $r24);

     label16:
        r37 = r36;

     label17:
        $z3 = r36.<com.android.server.am.ServiceRecord: boolean createdFromFg>;

        specialinvoke r0.<com.android.server.am.ActiveServices: void realStartServiceLocked(com.android.server.am.ServiceRecord,com.android.server.am.ProcessRecord,boolean)>(r36, r34, $z3);

     label18:
        z8 = 1;

        i11 = i12;

        r37 = r36;

     label19:
        $z4 = specialinvoke r0.<com.android.server.am.ActiveServices: boolean isServiceNeededLocked(com.android.server.am.ServiceRecord,boolean,boolean)>(r36, 0, 0);

        if $z4 != 0 goto label23;

     label20:
        r37 = r36;

     label21:
        specialinvoke r0.<com.android.server.am.ActiveServices: void bringDownServiceLocked(com.android.server.am.ServiceRecord)>(r36);

     label22:
        i11 = i12;

        z8 = 1;

     label23:
        i10 = i11 + 1;

        z6 = z8;

        goto label01;

     label24:
        goto label26;

     label25:
        $r28 := @caughtexception;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception in new application when starting service ");

        $r31 = r37.<com.android.server.am.ServiceRecord: java.lang.String shortInstanceName>;

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        $r33 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r33, $r28);

        throw $r28;

     label26:
        $r2 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mRestartingServices>;

        $i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if $i1 <= 0 goto label30;

        i13 = 0;

     label27:
        $r3 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mRestartingServices>;

        $i2 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if i13 >= $i2 goto label30;

        $r4 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mRestartingServices>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i13);

        r40 = (com.android.server.am.ServiceRecord) $r5;

        $r6 = r40.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord isolatedProc>;

        if r34 == $r6 goto label28;

        $i4 = r34.<com.android.server.am.ProcessRecord: int uid>;

        $r13 = r40.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $i3 = $r13.<android.content.pm.ApplicationInfo: int uid>;

        if $i4 != $i3 goto label29;

        $r14 = r40.<com.android.server.am.ServiceRecord: java.lang.String processName>;

        $z1 = virtualinvoke r35.<java.lang.String: boolean equals(java.lang.Object)>($r14);

        if $z1 != 0 goto label28;

        goto label29;

     label28:
        $r7 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r9 = $r7.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        $r8 = r40.<com.android.server.am.ServiceRecord: java.lang.Runnable restarter>;

        virtualinvoke $r9.<com.android.server.am.ActivityManagerService$MainHandler: void removeCallbacks(java.lang.Runnable)>($r8);

        $r10 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r12 = $r10.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        $r11 = r40.<com.android.server.am.ServiceRecord: java.lang.Runnable restarter>;

        virtualinvoke $r12.<com.android.server.am.ActivityManagerService$MainHandler: boolean post(java.lang.Runnable)>($r11);

     label29:
        i13 = i13 + 1;

        goto label27;

     label30:
        return z6;

        catch android.os.RemoteException from label02 to label03 with label25;
        catch android.os.RemoteException from label04 to label05 with label25;
        catch android.os.RemoteException from label06 to label07 with label25;
        catch android.os.RemoteException from label08 to label09 with label25;
        catch android.os.RemoteException from label10 to label11 with label25;
        catch android.os.RemoteException from label13 to label14 with label25;
        catch android.os.RemoteException from label15 to label16 with label25;
        catch android.os.RemoteException from label17 to label18 with label25;
        catch android.os.RemoteException from label19 to label20 with label25;
        catch android.os.RemoteException from label21 to label22 with label25;
    }

    int bindServiceLocked(android.app.IApplicationThread, android.os.IBinder, android.content.Intent, java.lang.String, android.app.IServiceConnection, int, java.lang.String, java.lang.String, int) throws android.os.TransactionTooLargeException
    {
        com.android.server.am.ActiveServices r0;
        android.app.IServiceConnection r1, $r35, $r120;
        java.lang.String r2, $r12, $r17, $r20, $r47, $r55, $r65, $r68, $r78, $r87, $r94, $r102, $r117, $r126, $r129, r136, r137, r159, r165, r169;
        int i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i27, $i29, $i31, $i33, $i34, $i35, i38, i39, $i40, $i41, i42, i43, i44, i45, i46, i47, i48, i49, i50, i51, i52, i53, $i54;
        long l1, $l16, $l26, $l28, $l30;
        com.android.server.am.ActivityManagerService $r3, $r15, $r48, $r49, $r58, $r69, $r95, $r97, r158, r161, r171, $r174;
        java.lang.StringBuilder $r4, $r61, $r70, $r79, $r88, $r99, r178;
        java.lang.SecurityException $r11, $r77, $r86, $r93;
        android.content.pm.ApplicationInfo $r13, $r18, $r19, $r23, $r46, r160, $r180;
        com.android.server.am.ServiceRecord $r14, r151;
        android.content.pm.PackageManagerInternal $r16;
        boolean $z0, $z6, $z8, $z9, $z10, $z11, $z13, z15, z16, z17, z18, z20, z21, z22, z23, z24, z25;
        android.content.ComponentName $r21, $r34;
        android.util.ArraySet $r24, $r26;
        com.android.server.am.ProcessRecord $r25, $r39, $r40, $r41, $r44, $r45, $r125, r138, r167, r170, r172, $r173, $r175, r176;
        android.util.ArrayMap $r27, $r37, $r42;
        java.lang.Object $r28;
        com.android.server.am.IntentBindRecord $r29, $r30, $r31, $r32, $r36, $r38, r179;
        android.os.IBinder $r33, $r121, r134, r166;
        com.android.server.am.ProcessStatsService $r50;
        android.os.RemoteCallback $r51;
        com.android.server.am.ActiveServices$3 $r52;
        android.content.Intent $r53, r135, r142, r144;
        com.android.server.am.ActiveServices$4 $r59;
        com.android.server.am.ActivityManagerService$MainHandler $r60;
        android.os.Parcelable $r96;
        com.android.server.wm.ActivityTaskManagerInternal $r98;
        java.lang.Throwable $r103, $r104, $r105, $r106, $r107, $r108, $r109, $r110, $r111, $r112, $r113, $r114, $r130, $r131, $r132, r157;
        java.lang.Exception $r115;
        com.android.server.am.AppBindRecord $r124, r163;
        android.app.IApplicationThread r133;
        com.android.server.wm.ActivityServiceConnectionsHolder r139;
        android.app.PendingIntent r141, r143;
        com.android.server.am.ActiveServices$ServiceLookupResult r150;
        com.android.internal.app.procstats.ServiceState r156;
        com.android.server.am.ConnectionRecord r164;
        java.util.ArrayList r168;
        com.android.server.am.ActiveServices$ServiceMap $r181;

        r0 := @this: com.android.server.am.ActiveServices;

        r133 := @parameter0: android.app.IApplicationThread;

        r134 := @parameter1: android.os.IBinder;

        r135 := @parameter2: android.content.Intent;

        r136 := @parameter3: java.lang.String;

        r1 := @parameter4: android.app.IServiceConnection;

        i38 := @parameter5: int;

        r137 := @parameter6: java.lang.String;

        r2 := @parameter7: java.lang.String;

        i0 := @parameter8: int;

        $r3 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        r138 = virtualinvoke $r3.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord getRecordForAppLocked(android.app.IApplicationThread)>(r133);

        if r138 == null goto label116;

        if r134 == null goto label002;

        $r97 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r98 = $r97.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerInternal mAtmInternal>;

        r139 = virtualinvoke $r98.<com.android.server.wm.ActivityTaskManagerInternal: com.android.server.wm.ActivityServiceConnectionsHolder getServiceConnectionsHolder(android.os.IBinder)>(r134);

        if r139 != null goto label001;

        $r99 = new java.lang.StringBuilder;

        specialinvoke $r99.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Binding with unknown activity: ");

        virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r134);

        $r102 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r102);

        return 0;

     label001:
        goto label003;

     label002:
        r139 = null;

     label003:
        $r13 = r138.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i3 = $r13.<android.content.pm.ApplicationInfo: int uid>;

        if $i3 != 1000 goto label004;

        z15 = 1;

        goto label005;

     label004:
        z15 = 0;

     label005:
        if z15 == 0 goto label008;

        virtualinvoke r135.<android.content.Intent: void setDefusable(boolean)>(1);

        $r96 = virtualinvoke r135.<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>("android.intent.extra.client_intent");

        r141 = (android.app.PendingIntent) $r96;

        if r141 == null goto label007;

        i39 = virtualinvoke r135.<android.content.Intent: int getIntExtra(java.lang.String,int)>("android.intent.extra.client_label", 0);

        if i39 == 0 goto label006;

        r142 = virtualinvoke r135.<android.content.Intent: android.content.Intent cloneFilter()>();

        r143 = r141;

        r144 = r142;

        goto label009;

     label006:
        r143 = r141;

        r144 = r135;

        goto label009;

     label007:
        i39 = 0;

        r144 = r135;

        r143 = r141;

        goto label009;

     label008:
        r144 = r135;

        i39 = 0;

        r143 = null;

     label009:
        $i40 = i38 & 134217728;

        if $i40 == 0 goto label010;

        $r95 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        virtualinvoke $r95.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.MANAGE_ACTIVITY_STACKS", "BIND_TREAT_LIKE_ACTIVITY");

     label010:
        $i4 = i38 & 524288;

        if $i4 == 0 goto label012;

        if z15 == 0 goto label011;

        goto label012;

     label011:
        $r88 = new java.lang.StringBuilder;

        specialinvoke $r88.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Non-system caller (pid=");

        $i35 = staticinvoke <android.os.Binder: int getCallingPid()>();

        virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i35);

        virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") set BIND_SCHEDULE_LIKE_TOP_APP when binding service ");

        virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r144);

        $r93 = new java.lang.SecurityException;

        $r94 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r93.<java.lang.SecurityException: void <init>(java.lang.String)>($r94);

        throw $r93;

     label012:
        $i5 = i38 & 16777216;

        if $i5 == 0 goto label014;

        if z15 == 0 goto label013;

        goto label014;

     label013:
        $r79 = new java.lang.StringBuilder;

        specialinvoke $r79.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Non-system caller ");

        virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r133);

        virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (pid=");

        $i34 = staticinvoke <android.os.Binder: int getCallingPid()>();

        virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i34);

        virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") set BIND_ALLOW_WHITELIST_MANAGEMENT when binding service ");

        virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r144);

        $r86 = new java.lang.SecurityException;

        $r87 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r86.<java.lang.SecurityException: void <init>(java.lang.String)>($r87);

        throw $r86;

     label014:
        $i6 = i38 & 4194304;

        if $i6 == 0 goto label016;

        if z15 == 0 goto label015;

        goto label016;

     label015:
        $r70 = new java.lang.StringBuilder;

        specialinvoke $r70.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Non-system caller ");

        virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r133);

        virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (pid=");

        $i33 = staticinvoke <android.os.Binder: int getCallingPid()>();

        virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i33);

        virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") set BIND_ALLOW_INSTANT when binding service ");

        virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r144);

        $r77 = new java.lang.SecurityException;

        $r78 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r77.<java.lang.SecurityException: void <init>(java.lang.String)>($r78);

        throw $r77;

     label016:
        $i7 = i38 & 1048576;

        if $i7 == 0 goto label017;

        $r69 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        virtualinvoke $r69.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.START_ACTIVITIES_FROM_BACKGROUND", "BIND_ALLOW_BACKGROUND_ACTIVITY_STARTS");

     label017:
        $i8 = r138.<com.android.server.am.ProcessRecord: int setSchedGroup>;

        if $i8 == 0 goto label018;

        z16 = 1;

        goto label019;

     label018:
        z16 = 0;

     label019:
        $i9 = i38 & -2147483648;

        if $i9 == 0 goto label020;

        z17 = 1;

        goto label021;

     label020:
        z17 = 0;

     label021:
        $i10 = i38 & 4194304;

        if $i10 == 0 goto label022;

        z18 = 1;

        goto label023;

     label022:
        z18 = 0;

     label023:
        $i11 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i12 = staticinvoke <android.os.Binder: int getCallingUid()>();

        r150 = specialinvoke r0.<com.android.server.am.ActiveServices: com.android.server.am.ActiveServices$ServiceLookupResult retrieveServiceLocked(android.content.Intent,java.lang.String,java.lang.String,java.lang.String,int,int,int,boolean,boolean,boolean,boolean)>(r144, r137, r136, r2, $i11, $i12, i0, 1, z16, z17, z18);

        if r150 != null goto label024;

        return 0;

     label024:
        $r14 = r150.<com.android.server.am.ActiveServices$ServiceLookupResult: com.android.server.am.ServiceRecord record>;

        if $r14 != null goto label025;

        return -1;

     label025:
        r151 = r150.<com.android.server.am.ActiveServices$ServiceLookupResult: com.android.server.am.ServiceRecord record>;

        $r15 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r16 = virtualinvoke $r15.<com.android.server.am.ActivityManagerService: android.content.pm.PackageManagerInternal getPackageManagerInternalLocked()>();

        $r17 = r151.<com.android.server.am.ServiceRecord: java.lang.String packageName>;

        $i13 = r151.<com.android.server.am.ServiceRecord: int userId>;

        $z0 = virtualinvoke $r16.<android.content.pm.PackageManagerInternal: boolean isPermissionsReviewRequired(java.lang.String,int)>($r17, $i13);

        if $z0 == 0 goto label027;

        if z16 != 0 goto label026;

        $r61 = new java.lang.StringBuilder;

        specialinvoke $r61.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("u");

        $i31 = r151.<com.android.server.am.ServiceRecord: int userId>;

        virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i31);

        virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Binding to a service in package");

        $r65 = r151.<com.android.server.am.ServiceRecord: java.lang.String packageName>;

        virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r65);

        virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires a permissions review");

        $r68 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r68);

        return 0;

     label026:
        z20 = 1;

        $r51 = new android.os.RemoteCallback;

        $r52 = new com.android.server.am.ActiveServices$3;

        specialinvoke $r52.<com.android.server.am.ActiveServices$3: void <init>(com.android.server.am.ActiveServices,com.android.server.am.ServiceRecord,android.content.Intent,boolean,android.app.IServiceConnection)>(r0, r151, r144, z16, r1);

        specialinvoke $r51.<android.os.RemoteCallback: void <init>(android.os.RemoteCallback$OnResultListener)>($r52);

        $r53 = new android.content.Intent;

        specialinvoke $r53.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.REVIEW_PERMISSIONS");

        virtualinvoke $r53.<android.content.Intent: android.content.Intent addFlags(int)>(411041792);

        $r55 = r151.<com.android.server.am.ServiceRecord: java.lang.String packageName>;

        virtualinvoke $r53.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("android.intent.extra.PACKAGE_NAME", $r55);

        virtualinvoke $r53.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("android.intent.extra.REMOTE_CALLBACK", $r51);

        $r58 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r60 = $r58.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        $r59 = new com.android.server.am.ActiveServices$4;

        specialinvoke $r59.<com.android.server.am.ActiveServices$4: void <init>(com.android.server.am.ActiveServices,android.content.Intent,int)>(r0, $r53, i0);

        virtualinvoke $r60.<com.android.server.am.ActivityManagerService$MainHandler: boolean post(java.lang.Runnable)>($r59);

        goto label028;

     label027:
        z20 = 0;

     label028:
        z21 = z16;

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label029:
        $r18 = r138.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i14 = $r18.<android.content.pm.ApplicationInfo: int uid>;

        specialinvoke r0.<com.android.server.am.ActiveServices: boolean unscheduleServiceRestartLocked(com.android.server.am.ServiceRecord,int,boolean)>(r151, $i14, 0);

     label030:
        $i15 = i38 & 1;

        if $i15 == 0 goto label038;

     label031:
        $l28 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r151.<com.android.server.am.ServiceRecord: long lastActivity> = $l28;

        $z13 = virtualinvoke r151.<com.android.server.am.ServiceRecord: boolean hasAutoCreateConnections()>();

        if $z13 != 0 goto label036;

        r156 = virtualinvoke r151.<com.android.server.am.ServiceRecord: com.android.internal.app.procstats.ServiceState getTracker()>();

     label032:
        if r156 == null goto label035;

     label033:
        $r49 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r50 = $r49.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        $i29 = virtualinvoke $r50.<com.android.server.am.ProcessStatsService: int getMemFactorLocked()>();

        $l30 = r151.<com.android.server.am.ServiceRecord: long lastActivity>;

        virtualinvoke r156.<com.android.internal.app.procstats.ServiceState: void setBound(boolean,int,long)>(1, $i29, $l30);

     label034:
        goto label038;

     label035:
        goto label038;

     label036:
        goto label038;

     label037:
        $r111 := @caughtexception;

        r157 = $r111;

        goto label115;

     label038:
        $i41 = i38 & 2097152;

        if $i41 == 0 goto label040;

     label039:
        $r48 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r46 = r151.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $r47 = $r46.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        virtualinvoke $r48.<com.android.server.am.ActivityManagerService: void requireAllowedAssociationsLocked(java.lang.String)>($r47);

     label040:
        r158 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        i42 = r138.<com.android.server.am.ProcessRecord: int uid>;

        r159 = r138.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        i43 = virtualinvoke r138.<com.android.server.am.ProcessRecord: int getCurProcState()>();

        $r19 = r151.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        i44 = $r19.<android.content.pm.ApplicationInfo: int uid>;

        r160 = r151.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

     label041:
        $l16 = r160.<android.content.pm.ApplicationInfo: long longVersionCode>;

        $r21 = r151.<com.android.server.am.ServiceRecord: android.content.ComponentName instanceName>;

        $r20 = r151.<com.android.server.am.ServiceRecord: java.lang.String processName>;

        virtualinvoke r158.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$Association startAssociationLocked(int,java.lang.String,int,int,long,android.content.ComponentName,java.lang.String)>(i42, r159, i43, i44, $l16, $r21, $r20);

        r161 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

     label042:
        i45 = r138.<com.android.server.am.ProcessRecord: int userId>;

        i46 = r138.<com.android.server.am.ProcessRecord: int uid>;

        $r23 = r151.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $i17 = $r23.<android.content.pm.ApplicationInfo: int uid>;

        i47 = staticinvoke <android.os.UserHandle: int getAppId(int)>($i17);

     label043:
        virtualinvoke r161.<com.android.server.am.ActivityManagerService: void grantImplicitAccess(int,android.content.Intent,int,int)>(i45, r144, i46, i47);

        r163 = virtualinvoke r151.<com.android.server.am.ServiceRecord: com.android.server.am.AppBindRecord retrieveAppBindingLocked(android.content.Intent,com.android.server.am.ProcessRecord)>(r144, r138);

        r164 = new com.android.server.am.ConnectionRecord;

        i48 = r138.<com.android.server.am.ProcessRecord: int uid>;

        r165 = r138.<com.android.server.am.ProcessRecord: java.lang.String processName>;

     label044:
        specialinvoke r164.<com.android.server.am.ConnectionRecord: void <init>(com.android.server.am.AppBindRecord,com.android.server.wm.ActivityServiceConnectionsHolder,android.app.IServiceConnection,int,int,android.app.PendingIntent,int,java.lang.String,java.lang.String)>(r163, r139, r1, i38, i39, r143, i48, r165, r2);

        r166 = interfaceinvoke r1.<android.app.IServiceConnection: android.os.IBinder asBinder()>();

        virtualinvoke r151.<com.android.server.am.ServiceRecord: void addConnection(android.os.IBinder,com.android.server.am.ConnectionRecord)>(r166, r164);

        $r24 = r163.<com.android.server.am.AppBindRecord: android.util.ArraySet connections>;

        virtualinvoke $r24.<android.util.ArraySet: boolean add(java.lang.Object)>(r164);

     label045:
        if r139 == null goto label049;

     label046:
        virtualinvoke r139.<com.android.server.wm.ActivityServiceConnectionsHolder: void addConnection(java.lang.Object)>(r164);

     label047:
        goto label049;

     label048:
        $r110 := @caughtexception;

        r157 = $r110;

        goto label115;

     label049:
        $r25 = r163.<com.android.server.am.AppBindRecord: com.android.server.am.ProcessRecord client>;

        $r26 = $r25.<com.android.server.am.ProcessRecord: android.util.ArraySet connections>;

        virtualinvoke $r26.<android.util.ArraySet: boolean add(java.lang.Object)>(r164);

        virtualinvoke r164.<com.android.server.am.ConnectionRecord: void startAssociationIfNeeded()>();

        i49 = r164.<com.android.server.am.ConnectionRecord: int flags>;

     label050:
        $i18 = i49 & 8;

        if $i18 == 0 goto label052;

     label051:
        $r45 = r163.<com.android.server.am.AppBindRecord: com.android.server.am.ProcessRecord client>;

        $r45.<com.android.server.am.ProcessRecord: boolean hasAboveClient> = 1;

     label052:
        i50 = r164.<com.android.server.am.ConnectionRecord: int flags>;

     label053:
        $i19 = i50 & 16777216;

        if $i19 == 0 goto label055;

     label054:
        r151.<com.android.server.am.ServiceRecord: boolean whitelistManager> = 1;

     label055:
        $i20 = i38 & 1048576;

        if $i20 == 0 goto label057;

     label056:
        virtualinvoke r151.<com.android.server.am.ServiceRecord: void setHasBindingWhitelistingBgActivityStarts(boolean)>(1);

     label057:
        r167 = r151.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

     label058:
        if r167 == null goto label060;

     label059:
        $r44 = r151.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        specialinvoke r0.<com.android.server.am.ActiveServices: boolean updateServiceClientActivitiesLocked(com.android.server.am.ProcessRecord,com.android.server.am.ConnectionRecord,boolean)>($r44, r164, 1);

     label060:
        $r27 = r0.<com.android.server.am.ActiveServices: android.util.ArrayMap mServiceConnections>;

        $r28 = virtualinvoke $r27.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r166);

        r168 = (java.util.ArrayList) $r28;

     label061:
        if r168 != null goto label064;

     label062:
        r168 = new java.util.ArrayList;

        specialinvoke r168.<java.util.ArrayList: void <init>()>();

        $r42 = r0.<com.android.server.am.ActiveServices: android.util.ArrayMap mServiceConnections>;

        virtualinvoke $r42.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r166, r168);

     label063:
        goto label064;

     label064:
        virtualinvoke r168.<java.util.ArrayList: boolean add(java.lang.Object)>(r164);

     label065:
        $i21 = i38 & 1;

        if $i21 == 0 goto label068;

     label066:
        $l26 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r151.<com.android.server.am.ServiceRecord: long lastActivity> = $l26;

        $i27 = virtualinvoke r144.<android.content.Intent: int getFlags()>();

        r169 = specialinvoke r0.<com.android.server.am.ActiveServices: java.lang.String bringUpServiceLocked(com.android.server.am.ServiceRecord,int,boolean,boolean,boolean)>(r151, $i27, z21, 0, z20);

     label067:
        if r169 == null goto label068;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return 0;

     label068:
        z22 = r151.<com.android.server.am.ServiceRecord: boolean mAllowWhileInUsePermissionInFgs>;

     label069:
        if z22 != 0 goto label075;

     label070:
        i51 = staticinvoke <android.os.Binder: int getCallingPid()>();

        i52 = staticinvoke <android.os.Binder: int getCallingUid()>();

     label071:
        $z11 = specialinvoke r0.<com.android.server.am.ActiveServices: boolean shouldAllowWhileInUsePermissionInFgsLocked(java.lang.String,int,int,android.content.Intent,com.android.server.am.ServiceRecord,boolean)>(r2, i51, i52, r144, r151, 0);

        r151.<com.android.server.am.ServiceRecord: boolean mAllowWhileInUsePermissionInFgs> = $z11;

     label072:
        goto label075;

     label073:
        $r132 := @caughtexception;

        r157 = $r132;

        goto label115;

     label074:
        $r112 := @caughtexception;

        r157 = $r112;

        goto label115;

     label075:
        r170 = r151.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

     label076:
        if r170 == null goto label085;

        $i23 = i38 & 134217728;

        if $i23 == 0 goto label078;

     label077:
        $r41 = r151.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r41.<com.android.server.am.ProcessRecord: boolean treatLikeActivity> = 1;

     label078:
        $z8 = r151.<com.android.server.am.ServiceRecord: boolean whitelistManager>;

        if $z8 == 0 goto label079;

        $r40 = r151.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r40.<com.android.server.am.ProcessRecord: boolean whitelistManager> = 1;

     label079:
        r171 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        r172 = r151.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $z9 = virtualinvoke r138.<com.android.server.am.ProcessRecord: boolean hasActivitiesOrRecentTasks()>();

        if $z9 == 0 goto label080;

        $r39 = r151.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $z10 = virtualinvoke $r39.<com.android.server.am.ProcessRecord: boolean hasClientActivities()>();

        if $z10 != 0 goto label082;

     label080:
        $i24 = virtualinvoke r138.<com.android.server.am.ProcessRecord: int getCurProcState()>();

        if $i24 > 2 goto label083;

     label081:
        $i25 = i38 & 134217728;

        if $i25 == 0 goto label083;

     label082:
        z23 = 1;

        goto label084;

     label083:
        z23 = 0;

     label084:
        $r173 = r163.<com.android.server.am.AppBindRecord: com.android.server.am.ProcessRecord client>;

        virtualinvoke r171.<com.android.server.am.ActivityManagerService: void updateLruProcessLocked(com.android.server.am.ProcessRecord,boolean,com.android.server.am.ProcessRecord)>(r172, z23, $r173);

        $r174 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r175 = r151.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        virtualinvoke $r174.<com.android.server.am.ActivityManagerService: void updateOomAdjLocked(com.android.server.am.ProcessRecord,java.lang.String)>($r175, "updateOomAdj_bindService");

     label085:
        r176 = r151.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

     label086:
        if r176 == null goto label098;

     label087:
        $r31 = r163.<com.android.server.am.AppBindRecord: com.android.server.am.IntentBindRecord intent>;

        z24 = $r31.<com.android.server.am.IntentBindRecord: boolean received>;

     label088:
        if z24 == 0 goto label098;

     label089:
        $r35 = r164.<com.android.server.am.ConnectionRecord: android.app.IServiceConnection conn>;

        $r34 = r151.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        $r32 = r163.<com.android.server.am.AppBindRecord: com.android.server.am.IntentBindRecord intent>;

        $r33 = $r32.<com.android.server.am.IntentBindRecord: android.os.IBinder binder>;

        interfaceinvoke $r35.<android.app.IServiceConnection: void connected(android.content.ComponentName,android.os.IBinder,boolean)>($r34, $r33, 0);

     label090:
        goto label093;

     label091:
        $r115 := @caughtexception;

     label092:
        r178 = new java.lang.StringBuilder;

        specialinvoke r178.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r178.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure sending service ");

        $r117 = r151.<com.android.server.am.ServiceRecord: java.lang.String shortInstanceName>;

        virtualinvoke r178.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r117);

        virtualinvoke r178.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to connection ");

        $r120 = r164.<com.android.server.am.ConnectionRecord: android.app.IServiceConnection conn>;

        $r121 = interfaceinvoke $r120.<android.app.IServiceConnection: android.os.IBinder asBinder()>();

        virtualinvoke r178.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r121);

        virtualinvoke r178.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (in ");

        $r124 = r164.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        $r125 = $r124.<com.android.server.am.AppBindRecord: com.android.server.am.ProcessRecord client>;

        $r126 = $r125.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        virtualinvoke r178.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r126);

        virtualinvoke r178.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r129 = virtualinvoke r178.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r129, $r115);

     label093:
        $r36 = r163.<com.android.server.am.AppBindRecord: com.android.server.am.IntentBindRecord intent>;

        $r37 = $r36.<com.android.server.am.IntentBindRecord: android.util.ArrayMap apps>;

        $i22 = virtualinvoke $r37.<android.util.ArrayMap: int size()>();

        if $i22 != 1 goto label096;

        $r38 = r163.<com.android.server.am.AppBindRecord: com.android.server.am.IntentBindRecord intent>;

        $z6 = $r38.<com.android.server.am.IntentBindRecord: boolean doRebind>;

        if $z6 == 0 goto label096;

        r179 = r163.<com.android.server.am.AppBindRecord: com.android.server.am.IntentBindRecord intent>;

     label094:
        specialinvoke r0.<com.android.server.am.ActiveServices: boolean requestServiceBindingLocked(com.android.server.am.ServiceRecord,com.android.server.am.IntentBindRecord,boolean,boolean)>(r151, r179, z21, 1);

     label095:
        goto label103;

     label096:
        goto label103;

     label097:
        $r109 := @caughtexception;

        r157 = $r109;

        goto label115;

     label098:
        $r29 = r163.<com.android.server.am.AppBindRecord: com.android.server.am.IntentBindRecord intent>;

        z25 = $r29.<com.android.server.am.IntentBindRecord: boolean requested>;

     label099:
        if z25 != 0 goto label103;

     label100:
        $r30 = r163.<com.android.server.am.AppBindRecord: com.android.server.am.IntentBindRecord intent>;

        specialinvoke r0.<com.android.server.am.ActiveServices: boolean requestServiceBindingLocked(com.android.server.am.ServiceRecord,com.android.server.am.IntentBindRecord,boolean,boolean)>(r151, $r30, z21, 0);

     label101:
        goto label103;

     label102:
        $r108 := @caughtexception;

        r157 = $r108;

        goto label115;

     label103:
        $r180 = r138.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        i53 = $r180.<android.content.pm.ApplicationInfo: int uid>;

     label104:
        specialinvoke r0.<com.android.server.am.ActiveServices: void maybeLogBindCrossProfileService(int,java.lang.String,int)>(i0, r2, i53);

        $i54 = r151.<com.android.server.am.ServiceRecord: int userId>;

        $r181 = specialinvoke r0.<com.android.server.am.ActiveServices: com.android.server.am.ActiveServices$ServiceMap getServiceMapLocked(int)>($i54);

        virtualinvoke $r181.<com.android.server.am.ActiveServices$ServiceMap: void ensureNotStartingBackgroundLocked(com.android.server.am.ServiceRecord)>(r151);

     label105:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return 1;

     label106:
        $r103 := @caughtexception;

        r157 = $r103;

        goto label115;

     label107:
        $r106 := @caughtexception;

        r157 = $r106;

        goto label115;

     label108:
        $r113 := @caughtexception;

        r157 = $r113;

        goto label115;

     label109:
        $r131 := @caughtexception;

        r157 = $r131;

        goto label115;

     label110:
        $r104 := @caughtexception;

        r157 = $r104;

        goto label115;

     label111:
        $r105 := @caughtexception;

        r157 = $r105;

        goto label115;

     label112:
        $r130 := @caughtexception;

        r157 = $r130;

        goto label115;

     label113:
        $r114 := @caughtexception;

        r157 = $r114;

        goto label115;

     label114:
        $r107 := @caughtexception;

        r157 = $r107;

     label115:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw r157;

     label116:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to find app for caller ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r133);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (pid=");

        $i2 = staticinvoke <android.os.Binder: int getCallingPid()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") when binding service ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r135);

        $r11 = new java.lang.SecurityException;

        $r12 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.SecurityException: void <init>(java.lang.String)>($r12);

        throw $r11;

        catch java.lang.Throwable from label029 to label030 with label114;
        catch java.lang.Throwable from label031 to label032 with label037;
        catch java.lang.Throwable from label033 to label034 with label037;
        catch java.lang.Throwable from label039 to label040 with label037;
        catch java.lang.Throwable from label040 to label041 with label114;
        catch java.lang.Throwable from label041 to label042 with label113;
        catch java.lang.Throwable from label042 to label043 with label114;
        catch java.lang.Throwable from label043 to label044 with label112;
        catch java.lang.Throwable from label044 to label045 with label111;
        catch java.lang.Throwable from label046 to label047 with label048;
        catch java.lang.Throwable from label049 to label050 with label110;
        catch java.lang.Throwable from label051 to label052 with label048;
        catch java.lang.Throwable from label052 to label053 with label110;
        catch java.lang.Throwable from label054 to label055 with label048;
        catch java.lang.Throwable from label056 to label057 with label048;
        catch java.lang.Throwable from label057 to label058 with label110;
        catch java.lang.Throwable from label059 to label060 with label048;
        catch java.lang.Throwable from label060 to label061 with label110;
        catch java.lang.Throwable from label062 to label063 with label048;
        catch java.lang.Throwable from label064 to label065 with label110;
        catch java.lang.Throwable from label066 to label067 with label048;
        catch java.lang.Throwable from label068 to label069 with label110;
        catch java.lang.Throwable from label070 to label071 with label074;
        catch java.lang.Throwable from label071 to label072 with label073;
        catch java.lang.Throwable from label075 to label076 with label109;
        catch java.lang.Throwable from label077 to label078 with label073;
        catch java.lang.Throwable from label078 to label079 with label073;
        catch java.lang.Throwable from label079 to label080 with label073;
        catch java.lang.Throwable from label080 to label081 with label073;
        catch java.lang.Throwable from label084 to label085 with label073;
        catch java.lang.Throwable from label085 to label086 with label109;
        catch java.lang.Throwable from label087 to label088 with label097;
        catch java.lang.Exception from label089 to label090 with label091;
        catch java.lang.Throwable from label089 to label090 with label073;
        catch java.lang.Throwable from label092 to label093 with label097;
        catch java.lang.Throwable from label093 to label094 with label097;
        catch java.lang.Throwable from label094 to label095 with label102;
        catch java.lang.Throwable from label098 to label099 with label108;
        catch java.lang.Throwable from label100 to label101 with label102;
        catch java.lang.Throwable from label103 to label104 with label107;
        catch java.lang.Throwable from label104 to label105 with label106;
    }

    boolean bringDownDisabledPackageServicesLocked(java.lang.String, java.util.Set, int, boolean, boolean)
    {
        com.android.server.am.ActiveServices r0;
        java.util.Set r1;
        boolean z0, $z2, z3, z4, z5, z6;
        android.util.SparseArray $r2, $r9, $r10, $r14;
        java.lang.Object $r3, $r6, $r11, $r15;
        int $i0, $i1, $i2, i3, i4, i5;
        java.util.ArrayList $r4, $r5, r18, r20;
        com.android.server.am.ServiceRecord $r7;
        android.util.ArrayMap $r8, $r13;
        com.android.server.am.ActiveServices$ServiceMap $r12, $r16, r19;
        java.lang.String r17;

        r0 := @this: com.android.server.am.ActiveServices;

        r17 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.Set;

        i3 := @parameter2: int;

        z3 := @parameter3: boolean;

        z0 := @parameter4: boolean;

        z4 = 0;

        r18 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mTmpCollectionResults>;

        if r18 == null goto label01;

        virtualinvoke r18.<java.util.ArrayList: void clear()>();

     label01:
        if i3 != -1 goto label06;

        $r9 = r0.<com.android.server.am.ActiveServices: android.util.SparseArray mServiceMap>;

        $i1 = virtualinvoke $r9.<android.util.SparseArray: int size()>();

        i4 = $i1 - 1;

     label02:
        if i4 < 0 goto label05;

        $r10 = r0.<com.android.server.am.ActiveServices: android.util.SparseArray mServiceMap>;

        $r11 = virtualinvoke $r10.<android.util.SparseArray: java.lang.Object valueAt(int)>(i4);

        $r12 = (com.android.server.am.ActiveServices$ServiceMap) $r11;

        $r13 = $r12.<com.android.server.am.ActiveServices$ServiceMap: android.util.ArrayMap mServicesByInstanceName>;

        $z2 = specialinvoke r0.<com.android.server.am.ActiveServices: boolean collectPackageServicesLocked(java.lang.String,java.util.Set,boolean,boolean,android.util.ArrayMap)>(r17, r1, z3, z0, $r13);

        z4 = z4 | $z2;

        if z0 != 0 goto label03;

        if z4 == 0 goto label03;

        return 1;

     label03:
        if z0 == 0 goto label04;

        if r1 != null goto label04;

        $r14 = r0.<com.android.server.am.ActiveServices: android.util.SparseArray mServiceMap>;

        $r15 = virtualinvoke $r14.<android.util.SparseArray: java.lang.Object valueAt(int)>(i4);

        $r16 = (com.android.server.am.ActiveServices$ServiceMap) $r15;

        $i2 = $r16.<com.android.server.am.ActiveServices$ServiceMap: int mUserId>;

        virtualinvoke r0.<com.android.server.am.ActiveServices: void forceStopPackageLocked(java.lang.String,int)>(r17, $i2);

     label04:
        i4 = i4 + -1;

        goto label02;

     label05:
        z5 = z4;

        goto label08;

     label06:
        $r2 = r0.<com.android.server.am.ActiveServices: android.util.SparseArray mServiceMap>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i3);

        r19 = (com.android.server.am.ActiveServices$ServiceMap) $r3;

        z6 = 0;

        if r19 == null goto label07;

        $r8 = r19.<com.android.server.am.ActiveServices$ServiceMap: android.util.ArrayMap mServicesByInstanceName>;

        z6 = specialinvoke r0.<com.android.server.am.ActiveServices: boolean collectPackageServicesLocked(java.lang.String,java.util.Set,boolean,boolean,android.util.ArrayMap)>(r17, r1, z3, z0, $r8);

     label07:
        z5 = z6;

        if z0 == 0 goto label08;

        z5 = z6;

        if r1 != null goto label08;

        virtualinvoke r0.<com.android.server.am.ActiveServices: void forceStopPackageLocked(java.lang.String,int)>(r17, i3);

        z5 = z6;

     label08:
        r20 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mTmpCollectionResults>;

        if r20 == null goto label11;

        $i0 = virtualinvoke r20.<java.util.ArrayList: int size()>();

        i5 = $i0 - 1;

     label09:
        if i5 < 0 goto label10;

        $r5 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mTmpCollectionResults>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        $r7 = (com.android.server.am.ServiceRecord) $r6;

        specialinvoke r0.<com.android.server.am.ActiveServices: void bringDownServiceLocked(com.android.server.am.ServiceRecord)>($r7);

        i5 = i5 + -1;

        goto label09;

     label10:
        $r4 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mTmpCollectionResults>;

        virtualinvoke $r4.<java.util.ArrayList: void clear()>();

     label11:
        return z5;
    }

    void cleanUpServices(int, android.content.ComponentName, android.content.Intent)
    {
        com.android.server.am.ActiveServices r0;
        android.content.Intent r1;
        com.android.server.am.ServiceRecord r3, r24;
        java.util.ArrayList $r4, $r8;
        int $i0, $i1, $i2, $i3, $i4, i6, i7, i8;
        java.lang.Object $r5, $r18;
        boolean $z0, $z2;
        android.content.pm.ServiceInfo $r6;
        com.android.server.am.ServiceRecord$StartItem $r7;
        com.android.server.am.ProcessRecord $r9, $r10;
        android.app.IApplicationThread $r11;
        java.lang.StringBuilder $r12;
        java.lang.String $r14, $r17, $r19, $r20;
        android.os.TransactionTooLargeException $r21;
        android.content.ComponentName r22;
        android.util.ArrayMap r23;

        r0 := @this: com.android.server.am.ActiveServices;

        i6 := @parameter0: int;

        r22 := @parameter1: android.content.ComponentName;

        r1 := @parameter2: android.content.Intent;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r23 = virtualinvoke r0.<com.android.server.am.ActiveServices: android.util.ArrayMap getServicesLocked(int)>(i6);

        $i0 = virtualinvoke r23.<android.util.ArrayMap: int size()>();

        i7 = $i0 - 1;

     label01:
        if i7 < 0 goto label03;

        $r18 = virtualinvoke r23.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i7);

        r3 = (com.android.server.am.ServiceRecord) $r18;

        $r19 = r3.<com.android.server.am.ServiceRecord: java.lang.String packageName>;

        $r20 = virtualinvoke r22.<android.content.ComponentName: java.lang.String getPackageName()>();

        $z2 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>($r20);

        if $z2 == 0 goto label02;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r3);

     label02:
        i7 = i7 + -1;

        goto label01;

     label03:
        $i1 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        i8 = $i1 - 1;

     label04:
        if i8 < 0 goto label10;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i8);

        r24 = (com.android.server.am.ServiceRecord) $r5;

        $z0 = r24.<com.android.server.am.ServiceRecord: boolean startRequested>;

        if $z0 == 0 goto label09;

        $r6 = r24.<com.android.server.am.ServiceRecord: android.content.pm.ServiceInfo serviceInfo>;

        $i2 = $r6.<android.content.pm.ServiceInfo: int flags>;

        $i3 = $i2 & 1;

        if $i3 == 0 goto label05;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Stopping service ");

        $r14 = r24.<com.android.server.am.ServiceRecord: java.lang.String shortInstanceName>;

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": remove task");

        $r17 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", $r17);

        specialinvoke r0.<com.android.server.am.ActiveServices: void stopServiceLocked(com.android.server.am.ServiceRecord)>(r24);

        goto label09;

     label05:
        $r8 = r24.<com.android.server.am.ServiceRecord: java.util.ArrayList pendingStarts>;

        $r7 = new com.android.server.am.ServiceRecord$StartItem;

        $i4 = virtualinvoke r24.<com.android.server.am.ServiceRecord: int getLastStartId()>();

        specialinvoke $r7.<com.android.server.am.ServiceRecord$StartItem: void <init>(com.android.server.am.ServiceRecord,boolean,int,android.content.Intent,com.android.server.uri.NeededUriGrants,int)>(r24, 1, $i4, r1, null, 0);

        virtualinvoke $r8.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

        $r9 = r24.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r9 == null goto label09;

        $r10 = r24.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r11 = $r10.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r11 == null goto label09;

     label06:
        specialinvoke r0.<com.android.server.am.ActiveServices: void sendServiceArgsLocked(com.android.server.am.ServiceRecord,boolean,boolean)>(r24, 1, 0);

     label07:
        goto label09;

     label08:
        $r21 := @caughtexception;

     label09:
        i8 = i8 + -1;

        goto label04;

     label10:
        return;

        catch android.os.TransactionTooLargeException from label06 to label07 with label08;
    }

    protected void dumpDebug(android.util.proto.ProtoOutputStream, long)
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ActivityManagerService r1, $r2;
        int i0, $i2, i5, i6, i7;
        long l1, l3, l4;
        com.android.server.am.UserController $r3;
        android.util.SparseArray $r4;
        java.lang.Object $r5, $r6;
        com.android.server.am.ServiceRecord $r7;
        java.lang.Throwable $r8;
        android.util.proto.ProtoOutputStream r9;
        int[] r11;
        com.android.server.am.ActiveServices$ServiceMap r12;
        android.util.ArrayMap r13;

        r0 := @this: com.android.server.am.ActiveServices;

        r9 := @parameter0: android.util.proto.ProtoOutputStream;

        l3 := @parameter1: long;

        r1 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        entermonitor r1;

     label01:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        l4 = virtualinvoke r9.<android.util.proto.ProtoOutputStream: long start(long)>(l3);

        $r2 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r3 = $r2.<com.android.server.am.ActivityManagerService: com.android.server.am.UserController mUserController>;

        r11 = virtualinvoke $r3.<com.android.server.am.UserController: int[] getUsers()>();

        i0 = lengthof r11;

     label02:
        i5 = 0;

     label03:
        if i5 >= i0 goto label12;

        i6 = r11[i5];

     label04:
        $r4 = r0.<com.android.server.am.ActiveServices: android.util.SparseArray mServiceMap>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object get(int)>(i6);

        r12 = (com.android.server.am.ActiveServices$ServiceMap) $r5;

     label05:
        if r12 != null goto label06;

        goto label11;

     label06:
        l1 = virtualinvoke r9.<android.util.proto.ProtoOutputStream: long start(long)>(2246267895809L);

        virtualinvoke r9.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464257L, i6);

        r13 = r12.<com.android.server.am.ActiveServices$ServiceMap: android.util.ArrayMap mServicesByInstanceName>;

     label07:
        i7 = 0;

     label08:
        $i2 = virtualinvoke r13.<android.util.ArrayMap: int size()>();

        if i7 >= $i2 goto label10;

        $r6 = virtualinvoke r13.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i7);

        $r7 = (com.android.server.am.ServiceRecord) $r6;

        virtualinvoke $r7.<com.android.server.am.ServiceRecord: void dumpDebug(android.util.proto.ProtoOutputStream,long)>(r9, 2246267895810L);

     label09:
        i7 = i7 + 1;

        goto label08;

     label10:
        virtualinvoke r9.<android.util.proto.ProtoOutputStream: void end(long)>(l1);

     label11:
        i5 = i5 + 1;

        goto label03;

     label12:
        virtualinvoke r9.<android.util.proto.ProtoOutputStream: void end(long)>(l4);

        exitmonitor r1;

     label13:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label14:
        $r8 := @caughtexception;

     label15:
        exitmonitor r1;

     label16:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label04 to label05 with label14;
        catch java.lang.Throwable from label06 to label07 with label14;
        catch java.lang.Throwable from label08 to label09 with label14;
        catch java.lang.Throwable from label10 to label11 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label15 to label16 with label14;
    }

    protected boolean dumpService(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String, java.lang.String[], int, boolean)
    {
        com.android.server.am.ActiveServices r0;
        java.io.PrintWriter r1;
        java.lang.String[] r2;
        boolean z0, $z1, z3;
        java.util.function.Predicate r4;
        int[] r5;
        int i0, $i1, $i2, $i3, i4, i5, i6, i7, i8;
        android.util.ArrayMap r6;
        com.android.server.am.ActivityManagerService $r8, r20;
        com.android.server.am.UserController $r9;
        com.android.server.am.'-$$Lambda$Y_KRxxoOXfy-YceuDG7WHd46Y_I' $r10;
        java.util.Comparator $r11;
        java.lang.Object $r12, $r15, $r16;
        com.android.server.am.ServiceRecord $r13, r22;
        android.util.SparseArray $r14;
        java.lang.Throwable $r17;
        java.io.FileDescriptor r18;
        java.lang.String r19;
        com.android.server.am.ActiveServices$ServiceMap r21;
        java.util.ArrayList r24;
        java.util.function.Function r25;

        r0 := @this: com.android.server.am.ActiveServices;

        r18 := @parameter0: java.io.FileDescriptor;

        r1 := @parameter1: java.io.PrintWriter;

        r19 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String[];

        i4 := @parameter4: int;

        z0 := @parameter5: boolean;

        r24 = new java.util.ArrayList;

        specialinvoke r24.<java.util.ArrayList: void <init>()>();

        r4 = staticinvoke <com.android.internal.util.DumpUtils: java.util.function.Predicate filterRecord(java.lang.String)>(r19);

        r20 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        entermonitor r20;

     label01:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r8 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r9 = $r8.<com.android.server.am.ActivityManagerService: com.android.server.am.UserController mUserController>;

        r5 = virtualinvoke $r9.<com.android.server.am.UserController: int[] getUsers()>();

        i0 = lengthof r5;

     label02:
        i5 = 0;

     label03:
        if i5 >= i0 goto label11;

        i6 = r5[i5];

     label04:
        $r14 = r0.<com.android.server.am.ActiveServices: android.util.SparseArray mServiceMap>;

        $r15 = virtualinvoke $r14.<android.util.SparseArray: java.lang.Object get(int)>(i6);

        r21 = (com.android.server.am.ActiveServices$ServiceMap) $r15;

     label05:
        if r21 != null goto label06;

        goto label10;

     label06:
        r6 = r21.<com.android.server.am.ActiveServices$ServiceMap: android.util.ArrayMap mServicesByInstanceName>;

     label07:
        i7 = 0;

     label08:
        $i3 = virtualinvoke r6.<android.util.ArrayMap: int size()>();

        if i7 >= $i3 goto label10;

        $r16 = virtualinvoke r6.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i7);

        r22 = (com.android.server.am.ServiceRecord) $r16;

        $z1 = interfaceinvoke r4.<java.util.function.Predicate: boolean test(java.lang.Object)>(r22);

        if $z1 == 0 goto label09;

        virtualinvoke r24.<java.util.ArrayList: boolean add(java.lang.Object)>(r22);

     label09:
        i7 = i7 + 1;

        goto label08;

     label10:
        i5 = i5 + 1;

        goto label03;

     label11:
        exitmonitor r20;

     label12:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        $i1 = virtualinvoke r24.<java.util.ArrayList: int size()>();

        if $i1 > 0 goto label13;

        return 0;

     label13:
        $r10 = <com.android.server.am._$$Lambda$Y_KRxxoOXfy_YceuDG7WHd46Y_I: com.android.server.am.'-$$Lambda$Y_KRxxoOXfy-YceuDG7WHd46Y_I' INSTANCE>;

        r25 = (java.util.function.Function) $r10;

        $r11 = staticinvoke <java.util.Comparator: java.util.Comparator comparing(java.util.function.Function)>(r25);

        virtualinvoke r24.<java.util.ArrayList: void sort(java.util.Comparator)>($r11);

        z3 = 0;

        i8 = 0;

     label14:
        $i2 = virtualinvoke r24.<java.util.ArrayList: int size()>();

        if i8 >= $i2 goto label16;

        if z3 == 0 goto label15;

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label15:
        z3 = 1;

        $r12 = virtualinvoke r24.<java.util.ArrayList: java.lang.Object get(int)>(i8);

        $r13 = (com.android.server.am.ServiceRecord) $r12;

        specialinvoke r0.<com.android.server.am.ActiveServices: void dumpService(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,com.android.server.am.ServiceRecord,java.lang.String[],boolean)>("", r18, r1, $r13, r2, z0);

        i8 = i8 + 1;

        goto label14;

     label16:
        return 1;

     label17:
        $r17 := @caughtexception;

     label18:
        exitmonitor r20;

     label19:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r17;

        catch java.lang.Throwable from label01 to label02 with label17;
        catch java.lang.Throwable from label04 to label05 with label17;
        catch java.lang.Throwable from label06 to label07 with label17;
        catch java.lang.Throwable from label08 to label09 with label17;
        catch java.lang.Throwable from label11 to label12 with label17;
        catch java.lang.Throwable from label18 to label19 with label17;
    }

    void forceStopPackageLocked(java.lang.String, int)
    {
        com.android.server.am.ActiveServices r0;
        java.lang.String r1, $r10;
        com.android.server.am.ActiveServices$ServiceMap r2;
        android.util.SparseArray $r3;
        java.lang.Object $r4, $r8;
        android.util.ArrayMap $r5, $r6, $r7, $r11;
        int $i0, $i1, i2, i3;
        boolean $z0, $z1;
        com.android.server.am.ActiveServices$ActiveForegroundApp $r9;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: java.lang.String;

        i2 := @parameter1: int;

        $r3 = r0.<com.android.server.am.ActiveServices: android.util.SparseArray mServiceMap>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i2);

        r2 = (com.android.server.am.ActiveServices$ServiceMap) $r4;

        if r2 == null goto label4;

        $r5 = r2.<com.android.server.am.ActiveServices$ServiceMap: android.util.ArrayMap mActiveForegroundApps>;

        $i0 = virtualinvoke $r5.<android.util.ArrayMap: int size()>();

        if $i0 <= 0 goto label4;

        $r6 = r2.<com.android.server.am.ActiveServices$ServiceMap: android.util.ArrayMap mActiveForegroundApps>;

        $i1 = virtualinvoke $r6.<android.util.ArrayMap: int size()>();

        i3 = $i1 - 1;

     label1:
        if i3 < 0 goto label3;

        $r7 = r2.<com.android.server.am.ActiveServices$ServiceMap: android.util.ArrayMap mActiveForegroundApps>;

        $r8 = virtualinvoke $r7.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i3);

        $r9 = (com.android.server.am.ActiveServices$ActiveForegroundApp) $r8;

        $r10 = $r9.<com.android.server.am.ActiveServices$ActiveForegroundApp: java.lang.String mPackageName>;

        $z1 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label2;

        $r11 = r2.<com.android.server.am.ActiveServices$ServiceMap: android.util.ArrayMap mActiveForegroundApps>;

        virtualinvoke $r11.<android.util.ArrayMap: java.lang.Object removeAt(int)>(i3);

        r2.<com.android.server.am.ActiveServices$ServiceMap: boolean mActiveForegroundAppsChanged> = 1;

     label2:
        i3 = i3 + -1;

        goto label1;

     label3:
        $z0 = r2.<com.android.server.am.ActiveServices$ServiceMap: boolean mActiveForegroundAppsChanged>;

        if $z0 == 0 goto label4;

        specialinvoke r0.<com.android.server.am.ActiveServices: void requestUpdateActiveForegroundAppsLocked(com.android.server.am.ActiveServices$ServiceMap,long)>(r2, 0L);

     label4:
        return;
    }

    boolean foregroundAppShownEnoughLocked(com.android.server.am.ActiveServices$ActiveForegroundApp, long)
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ActiveServices$ActiveForegroundApp r1;
        long l0, $l1, $l2, $l5, $l7, $l8, l10, l11, l12, l13, l14;
        boolean $z1, $z2, $z3, z4;
        byte $b3, $b4, $b6, $b9;
        com.android.server.am.ActivityManagerService $r2, $r4, $r6, $r8;
        com.android.server.am.ActivityManagerConstants $r3, $r5, $r7, $r9;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: com.android.server.am.ActiveServices$ActiveForegroundApp;

        l10 := @parameter1: long;

        z4 = 0;

        r1.<com.android.server.am.ActiveServices$ActiveForegroundApp: long mHideTime> = 9223372036854775807L;

        $z1 = r1.<com.android.server.am.ActiveServices$ActiveForegroundApp: boolean mShownWhileTop>;

        if $z1 == 0 goto label01;

        z4 = 1;

        goto label10;

     label01:
        $z2 = r0.<com.android.server.am.ActiveServices: boolean mScreenOn>;

        if $z2 != 0 goto label04;

        $z3 = r1.<com.android.server.am.ActiveServices$ActiveForegroundApp: boolean mShownWhileScreenOn>;

        if $z3 == 0 goto label02;

        goto label04;

     label02:
        $l8 = r1.<com.android.server.am.ActiveServices$ActiveForegroundApp: long mEndTime>;

        $r8 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r9 = $r8.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerConstants mConstants>;

        $l7 = $r9.<com.android.server.am.ActivityManagerConstants: long FGSERVICE_SCREEN_ON_BEFORE_TIME>;

        l11 = $l8 + $l7;

        $b9 = l10 cmp l11;

        if $b9 < 0 goto label03;

        z4 = 1;

        goto label10;

     label03:
        r1.<com.android.server.am.ActiveServices$ActiveForegroundApp: long mHideTime> = l11;

        z4 = 0;

        goto label10;

     label04:
        l0 = r1.<com.android.server.am.ActiveServices$ActiveForegroundApp: long mStartVisibleTime>;

        $l2 = r1.<com.android.server.am.ActiveServices$ActiveForegroundApp: long mStartTime>;

        $l1 = r1.<com.android.server.am.ActiveServices$ActiveForegroundApp: long mStartVisibleTime>;

        $b3 = $l2 cmp $l1;

        if $b3 == 0 goto label05;

        $r6 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r7 = $r6.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerConstants mConstants>;

        l12 = $r7.<com.android.server.am.ActivityManagerConstants: long FGSERVICE_SCREEN_ON_AFTER_TIME>;

        goto label06;

     label05:
        $r2 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r3 = $r2.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerConstants mConstants>;

        l12 = $r3.<com.android.server.am.ActivityManagerConstants: long FGSERVICE_MIN_SHOWN_TIME>;

     label06:
        l13 = l0 + l12;

        $b4 = l10 cmp l13;

        if $b4 < 0 goto label07;

        z4 = 1;

        goto label10;

     label07:
        $r4 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r5 = $r4.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerConstants mConstants>;

        $l5 = $r5.<com.android.server.am.ActivityManagerConstants: long FGSERVICE_MIN_REPORT_TIME>;

        l14 = $l5 + l10;

        $b6 = l14 cmp l13;

        if $b6 <= 0 goto label08;

        goto label09;

     label08:
        l14 = l13;

     label09:
        r1.<com.android.server.am.ActiveServices$ActiveForegroundApp: long mHideTime> = l14;

     label10:
        return z4;
    }

    void foregroundServiceProcStateChangedLocked(com.android.server.am.UidRecord)
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.UidRecord r1;
        com.android.server.am.ActiveServices$ServiceMap r2;
        com.android.server.am.ActiveServices$ActiveForegroundApp r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6;
        android.util.SparseArray $r4;
        java.lang.Object $r5, $r8;
        android.util.ArrayMap $r6, $r7;
        boolean $z0, $z1, z2, z3;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: com.android.server.am.UidRecord;

        $r4 = r0.<com.android.server.am.ActiveServices: android.util.SparseArray mServiceMap>;

        $i0 = r1.<com.android.server.am.UidRecord: int uid>;

        $i1 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i0);

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object get(int)>($i1);

        r2 = (com.android.server.am.ActiveServices$ServiceMap) $r5;

        if r2 == null goto label6;

        z2 = 0;

        $r6 = r2.<com.android.server.am.ActiveServices$ServiceMap: android.util.ArrayMap mActiveForegroundApps>;

        $i2 = virtualinvoke $r6.<android.util.ArrayMap: int size()>();

        i6 = $i2 - 1;

     label1:
        if i6 < 0 goto label5;

        $r7 = r2.<com.android.server.am.ActiveServices$ServiceMap: android.util.ArrayMap mActiveForegroundApps>;

        $r8 = virtualinvoke $r7.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i6);

        r3 = (com.android.server.am.ActiveServices$ActiveForegroundApp) $r8;

        z3 = z2;

        $i4 = r3.<com.android.server.am.ActiveServices$ActiveForegroundApp: int mUid>;

        $i3 = r1.<com.android.server.am.UidRecord: int uid>;

        if $i4 != $i3 goto label4;

        $i5 = virtualinvoke r1.<com.android.server.am.UidRecord: int getCurProcState()>();

        if $i5 > 2 goto label3;

        $z1 = r3.<com.android.server.am.ActiveServices$ActiveForegroundApp: boolean mAppOnTop>;

        if $z1 != 0 goto label2;

        r3.<com.android.server.am.ActiveServices$ActiveForegroundApp: boolean mAppOnTop> = 1;

        z2 = 1;

     label2:
        r3.<com.android.server.am.ActiveServices$ActiveForegroundApp: boolean mShownWhileTop> = 1;

        z3 = z2;

        goto label4;

     label3:
        z3 = z2;

        $z0 = r3.<com.android.server.am.ActiveServices$ActiveForegroundApp: boolean mAppOnTop>;

        if $z0 == 0 goto label4;

        r3.<com.android.server.am.ActiveServices$ActiveForegroundApp: boolean mAppOnTop> = 0;

        z3 = 1;

     label4:
        i6 = i6 + -1;

        z2 = z3;

        goto label1;

     label5:
        if z2 == 0 goto label6;

        specialinvoke r0.<com.android.server.am.ActiveServices: void requestUpdateActiveForegroundAppsLocked(com.android.server.am.ActiveServices$ServiceMap,long)>(r2, 0L);

     label6:
        return;
    }

    public int getForegroundServiceTypeLocked(android.content.ComponentName, android.os.IBinder)
    {
        com.android.server.am.ActiveServices r0;
        android.os.IBinder r1;
        int i0, i2;
        long l1;
        java.lang.Throwable $r2;
        android.content.ComponentName r3;
        com.android.server.am.ServiceRecord r4;

        r0 := @this: com.android.server.am.ActiveServices;

        r3 := @parameter0: android.content.ComponentName;

        r1 := @parameter1: android.os.IBinder;

        i0 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        i2 = 0;

     label1:
        r4 = specialinvoke r0.<com.android.server.am.ActiveServices: com.android.server.am.ServiceRecord findServiceLocked(android.content.ComponentName,android.os.IBinder,int)>(r3, r1, i0);

     label2:
        if r4 == null goto label4;

     label3:
        i2 = r4.<com.android.server.am.ServiceRecord: int foregroundServiceType>;

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return i2;

     label5:
        $r2 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.app.PendingIntent getRunningServiceControlPanelLocked(android.content.ComponentName)
    {
        com.android.server.am.ActiveServices r0;
        java.util.ArrayList r1;
        int $i0, $i1, $i2, $i3, i4, i5;
        java.lang.Object $r2, $r3, $r6;
        com.android.server.am.ConnectionRecord $r4, $r7;
        android.app.PendingIntent $r5, $r8;
        android.content.ComponentName r9;
        com.android.server.am.ServiceRecord r10;
        android.util.ArrayMap r11;

        r0 := @this: com.android.server.am.ActiveServices;

        r9 := @parameter0: android.content.ComponentName;

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i1 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i0);

        r10 = virtualinvoke r0.<com.android.server.am.ActiveServices: com.android.server.am.ServiceRecord getServiceByNameLocked(android.content.ComponentName,int)>(r9, $i1);

        if r10 == null goto label5;

        r11 = virtualinvoke r10.<com.android.server.am.ServiceRecord: android.util.ArrayMap getConnections()>();

        $i2 = virtualinvoke r11.<android.util.ArrayMap: int size()>();

        i4 = $i2 - 1;

     label1:
        if i4 < 0 goto label5;

        $r2 = virtualinvoke r11.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i4);

        r1 = (java.util.ArrayList) $r2;

        i5 = 0;

     label2:
        $i3 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if i5 >= $i3 goto label4;

        $r3 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        $r4 = (com.android.server.am.ConnectionRecord) $r3;

        $r5 = $r4.<com.android.server.am.ConnectionRecord: android.app.PendingIntent clientIntent>;

        if $r5 == null goto label3;

        $r6 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        $r7 = (com.android.server.am.ConnectionRecord) $r6;

        $r8 = $r7.<com.android.server.am.ConnectionRecord: android.app.PendingIntent clientIntent>;

        return $r8;

     label3:
        i5 = i5 + 1;

        goto label2;

     label4:
        i4 = i4 + -1;

        goto label1;

     label5:
        return null;
    }

    java.util.List getRunningServiceInfoLocked(int, int, int, boolean, boolean)
    {
        com.android.server.am.ActiveServices r0;
        int i0, i2, $i3, $i4, $i5, $i7, $i8, $i9, $i10, $i11, $i13, $i14, $i15, $i16, i17, i18, i19, i20, i21, $i22, i23, i24, $i25;
        boolean z0, z1;
        long l1, $l6, $l12;
        java.util.ArrayList $r1, $r2, $r12, $r21, $r26;
        java.lang.Object $r3, $r6, $r13, $r14;
        com.android.server.am.ProcessRecord $r4, $r5, $r8, $r9;
        android.app.ActivityManager$RunningServiceInfo $r7, $r16, r23, r28;
        com.android.server.am.ActivityManagerService $r10;
        com.android.server.am.UserController $r11;
        com.android.server.am.ServiceRecord $r15, r22, r25, r27;
        java.lang.Throwable $r17;
        int[] r19;
        android.util.ArrayMap r20, r24;

        r0 := @this: com.android.server.am.ActiveServices;

        i0 := @parameter0: int;

        i17 := @parameter1: int;

        i18 := @parameter2: int;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        if z1 == 0 goto label13;

     label01:
        $r10 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r11 = $r10.<com.android.server.am.ActivityManagerService: com.android.server.am.UserController mUserController>;

        r19 = virtualinvoke $r11.<com.android.server.am.UserController: int[] getUsers()>();

     label02:
        i19 = 0;

     label03:
        $i10 = lengthof r19;

        if i19 >= $i10 goto label08;

        $i13 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if $i13 >= i0 goto label08;

        $i14 = r19[i19];

        r20 = virtualinvoke r0.<com.android.server.am.ActiveServices: android.util.ArrayMap getServicesLocked(int)>($i14);

     label04:
        i20 = 0;

     label05:
        $i15 = virtualinvoke r20.<android.util.ArrayMap: int size()>();

        if i20 >= $i15 goto label07;

        $i16 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if $i16 >= i0 goto label07;

        $r14 = virtualinvoke r20.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i20);

        $r15 = (com.android.server.am.ServiceRecord) $r14;

        $r16 = virtualinvoke r0.<com.android.server.am.ActiveServices: android.app.ActivityManager$RunningServiceInfo makeRunningServiceInfoLocked(com.android.server.am.ServiceRecord)>($r15);

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r16);

     label06:
        i20 = i20 + 1;

        goto label05;

     label07:
        i19 = i19 + 1;

        goto label03;

     label08:
        i21 = 0;

     label09:
        $r21 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mRestartingServices>;

        $i22 = virtualinvoke $r21.<java.util.ArrayList: int size()>();

        if i21 >= $i22 goto label12;

        $i11 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if $i11 >= i0 goto label12;

        $r12 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mRestartingServices>;

        $r13 = virtualinvoke $r12.<java.util.ArrayList: java.lang.Object get(int)>(i21);

        r22 = (com.android.server.am.ServiceRecord) $r13;

     label10:
        r23 = virtualinvoke r0.<com.android.server.am.ActiveServices: android.app.ActivityManager$RunningServiceInfo makeRunningServiceInfoLocked(com.android.server.am.ServiceRecord)>(r22);

        $l12 = r22.<com.android.server.am.ServiceRecord: long nextRestartTime>;

        r23.<android.app.ActivityManager$RunningServiceInfo: long restarting> = $l12;

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r23);

     label11:
        i21 = i21 + 1;

        goto label09;

     label12:
        goto label26;

     label13:
        i2 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i18);

        r24 = virtualinvoke r0.<com.android.server.am.ActiveServices: android.util.ArrayMap getServicesLocked(int)>(i2);

     label14:
        i23 = 0;

     label15:
        $i3 = virtualinvoke r24.<android.util.ArrayMap: int size()>();

        if i23 >= $i3 goto label20;

        $i8 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if $i8 >= i0 goto label20;

        $r6 = virtualinvoke r24.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i23);

        r25 = (com.android.server.am.ServiceRecord) $r6;

     label16:
        if z0 != 0 goto label18;

     label17:
        $r8 = r25.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r8 == null goto label19;

        $r9 = r25.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $i9 = $r9.<com.android.server.am.ProcessRecord: int uid>;

        if $i9 != i18 goto label19;

     label18:
        $r7 = virtualinvoke r0.<com.android.server.am.ActiveServices: android.app.ActivityManager$RunningServiceInfo makeRunningServiceInfoLocked(com.android.server.am.ServiceRecord)>(r25);

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

     label19:
        i23 = i23 + 1;

        goto label15;

     label20:
        i24 = 0;

     label21:
        $r26 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mRestartingServices>;

        $i25 = virtualinvoke $r26.<java.util.ArrayList: int size()>();

        if i24 >= $i25 goto label26;

        $i4 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if $i4 >= i0 goto label26;

        $r2 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mRestartingServices>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i24);

        r27 = (com.android.server.am.ServiceRecord) $r3;

        $i5 = r27.<com.android.server.am.ServiceRecord: int userId>;

        if $i5 != i2 goto label25;

     label22:
        if z0 != 0 goto label24;

     label23:
        $r4 = r27.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r4 == null goto label25;

        $r5 = r27.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $i7 = $r5.<com.android.server.am.ProcessRecord: int uid>;

        if $i7 != i18 goto label25;

     label24:
        r28 = virtualinvoke r0.<com.android.server.am.ActiveServices: android.app.ActivityManager$RunningServiceInfo makeRunningServiceInfoLocked(com.android.server.am.ServiceRecord)>(r27);

        $l6 = r27.<com.android.server.am.ServiceRecord: long nextRestartTime>;

        r28.<android.app.ActivityManager$RunningServiceInfo: long restarting> = $l6;

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r28);

     label25:
        i24 = i24 + 1;

        goto label21;

     label26:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return $r1;

     label27:
        $r17 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r17;

        catch java.lang.Throwable from label01 to label02 with label27;
        catch java.lang.Throwable from label03 to label04 with label27;
        catch java.lang.Throwable from label05 to label06 with label27;
        catch java.lang.Throwable from label09 to label10 with label27;
        catch java.lang.Throwable from label10 to label11 with label27;
        catch java.lang.Throwable from label13 to label14 with label27;
        catch java.lang.Throwable from label15 to label16 with label27;
        catch java.lang.Throwable from label17 to label18 with label27;
        catch java.lang.Throwable from label18 to label19 with label27;
        catch java.lang.Throwable from label21 to label22 with label27;
        catch java.lang.Throwable from label23 to label24 with label27;
        catch java.lang.Throwable from label24 to label25 with label27;
    }

    com.android.server.am.ServiceRecord getServiceByNameLocked(android.content.ComponentName, int)
    {
        com.android.server.am.ActiveServices r0;
        android.content.ComponentName r1;
        int i0;
        com.android.server.am.ActiveServices$ServiceMap $r2;
        android.util.ArrayMap $r3;
        java.lang.Object $r4;
        com.android.server.am.ServiceRecord $r5;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: android.content.ComponentName;

        i0 := @parameter1: int;

        $r2 = specialinvoke r0.<com.android.server.am.ActiveServices: com.android.server.am.ActiveServices$ServiceMap getServiceMapLocked(int)>(i0);

        $r3 = $r2.<com.android.server.am.ActiveServices$ServiceMap: android.util.ArrayMap mServicesByInstanceName>;

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        $r5 = (com.android.server.am.ServiceRecord) $r4;

        return $r5;
    }

    android.util.ArrayMap getServicesLocked(int)
    {
        com.android.server.am.ActiveServices r0;
        int i0;
        com.android.server.am.ActiveServices$ServiceMap $r1;
        android.util.ArrayMap $r2;

        r0 := @this: com.android.server.am.ActiveServices;

        i0 := @parameter0: int;

        $r1 = specialinvoke r0.<com.android.server.am.ActiveServices: com.android.server.am.ActiveServices$ServiceMap getServiceMapLocked(int)>(i0);

        $r2 = $r1.<com.android.server.am.ActiveServices$ServiceMap: android.util.ArrayMap mServicesByInstanceName>;

        return $r2;
    }

    boolean hasBackgroundServicesLocked(int)
    {
        com.android.server.am.ActiveServices r0;
        int i0, $i1, $i2;
        com.android.server.am.ActiveServices$ServiceMap r1;
        android.util.SparseArray $r2;
        java.lang.Object $r3;
        java.util.ArrayList $r4;
        boolean z1;

        r0 := @this: com.android.server.am.ActiveServices;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.am.ActiveServices: android.util.SparseArray mServiceMap>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r1 = (com.android.server.am.ActiveServices$ServiceMap) $r3;

        z1 = 0;

        if r1 == null goto label1;

        z1 = 0;

        $r4 = r1.<com.android.server.am.ActiveServices$ServiceMap: java.util.ArrayList mStartingBackground>;

        $i1 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        $i2 = r0.<com.android.server.am.ActiveServices: int mMaxStartingBackground>;

        if $i1 < $i2 goto label1;

        z1 = 1;

     label1:
        return z1;
    }

    void killMisbehavingService(com.android.server.am.ServiceRecord, int, int, java.lang.String)
    {
        com.android.server.am.ActiveServices r0;
        int i0, i1;
        java.lang.String r1;
        com.android.server.am.ActivityManagerService r2, $r3;
        java.lang.Throwable $r4;
        com.android.server.am.ServiceRecord r5;

        r0 := @this: com.android.server.am.ActiveServices;

        r5 := @parameter0: com.android.server.am.ServiceRecord;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: java.lang.String;

        r2 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        entermonitor r2;

     label1:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        specialinvoke r0.<com.android.server.am.ActiveServices: void stopServiceLocked(com.android.server.am.ServiceRecord)>(r5);

        $r3 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        virtualinvoke $r3.<com.android.server.am.ActivityManagerService: void crashApplication(int,int,java.lang.String,int,java.lang.String,boolean)>(i0, i1, r1, -1, "Bad notification for startForeground", 1);

        exitmonitor r2;

     label2:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r2;

     label5:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    final void killServicesLocked(com.android.server.am.ProcessRecord, boolean)
    {
        com.android.server.am.ActiveServices r0;
        boolean z0, $z2, $z3, $z4, $z5, $z6, $z7, $z10, $z11, z13;
        android.util.ArraySet $r2, $r3, $r5, $r74, $r75, $r82;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i13, $i17, $i18, $i19, $i21, $i22, $i23, $i26, $i27, $i28, $i29, i30, i31, $i32, i33, i34, i35, i36, i37, i38, i39;
        java.util.ArrayList $r4, $r6, $r9, $r11, $r12, $r13, $r20, $r22, $r29, $r89;
        java.lang.Object $r7, $r14, $r23, $r33, $r67, $r70, $r73, $r76, $r83;
        com.android.server.am.ProcessRecord $r8, $r65, $r78, $r79, $r80, $r81, r86, r92;
        java.lang.String $r15, $r16, $r24, $r25, $r49, $r53, $r62;
        android.content.pm.ServiceInfo $r17, $r26, $r42;
        android.content.pm.ApplicationInfo $r18, $r19, $r27, $r28, $r43;
        android.content.ComponentName $r31;
        android.util.ArrayMap $r32, $r66, $r68, $r69, $r72, $r90;
        com.android.server.am.ActivityManagerService $r34, $r37, $r40;
        com.android.server.am.UserController $r35;
        com.android.internal.app.procstats.ServiceState $r36, $r39;
        com.android.server.am.ProcessStatsService $r38;
        long $l12, $l14, $l15;
        com.android.server.am.ActivityManagerConstants $r41;
        byte $b16;
        java.lang.StringBuilder $r44, $r55;
        java.lang.Object[] $r50;
        java.lang.Integer $r51, $r52, $r54;
        com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv $r63, $r64;
        android.app.IApplicationThread $r71;
        com.android.server.am.ConnectionRecord $r77, $r84;
        java.lang.Throwable $r85;
        com.android.server.am.ServiceRecord r87, r96, r97, r99, r100, r101;
        com.android.internal.os.BatteryStatsImpl r88;
        com.android.server.am.IntentBindRecord r91;
        com.android.server.am.AppBindRecord r93;
        com.android.server.am.ActiveServices$ServiceMap r95;

        r0 := @this: com.android.server.am.ActiveServices;

        r86 := @parameter0: com.android.server.am.ProcessRecord;

        z0 := @parameter1: boolean;

        $r2 = r86.<com.android.server.am.ProcessRecord: android.util.ArraySet connections>;

        $i0 = virtualinvoke $r2.<android.util.ArraySet: int size()>();

        i30 = $i0 - 1;

     label01:
        if i30 < 0 goto label02;

        $r82 = r86.<com.android.server.am.ProcessRecord: android.util.ArraySet connections>;

        $r83 = virtualinvoke $r82.<android.util.ArraySet: java.lang.Object valueAt(int)>(i30);

        $r84 = (com.android.server.am.ConnectionRecord) $r83;

        virtualinvoke r0.<com.android.server.am.ActiveServices: void removeConnectionLocked(com.android.server.am.ConnectionRecord,com.android.server.am.ProcessRecord,com.android.server.wm.ActivityServiceConnectionsHolder)>($r84, r86, null);

        i30 = i30 + -1;

        goto label01;

     label02:
        virtualinvoke r0.<com.android.server.am.ActiveServices: void updateServiceConnectionActivitiesLocked(com.android.server.am.ProcessRecord)>(r86);

        $r3 = r86.<com.android.server.am.ProcessRecord: android.util.ArraySet connections>;

        virtualinvoke $r3.<android.util.ArraySet: void clear()>();

        r86.<com.android.server.am.ProcessRecord: boolean whitelistManager> = 0;

        $i1 = virtualinvoke r86.<com.android.server.am.ProcessRecord: int numberOfRunningServices()>();

        i31 = $i1 - 1;

     label03:
        if i31 < 0 goto label19;

        r87 = virtualinvoke r86.<com.android.server.am.ProcessRecord: com.android.server.am.ServiceRecord getRunningServiceAt(int)>(i31);

        $r63 = r87.<com.android.server.am.ServiceRecord: com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv stats>;

        r88 = virtualinvoke $r63.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: com.android.internal.os.BatteryStatsImpl getBatteryStats()>();

        entermonitor r88;

     label04:
        $r64 = r87.<com.android.server.am.ServiceRecord: com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv stats>;

        virtualinvoke $r64.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: void stopLaunchedLocked()>();

        exitmonitor r88;

     label05:
        $r65 = r87.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r65 == r86 goto label06;

        $r78 = r87.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r78 == null goto label06;

        $r79 = r87.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $z11 = virtualinvoke $r79.<com.android.server.am.ProcessRecord: boolean isPersistent()>();

        if $z11 != 0 goto label06;

        $r80 = r87.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        virtualinvoke $r80.<com.android.server.am.ProcessRecord: boolean stopService(com.android.server.am.ServiceRecord)>(r87);

        $r81 = r87.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        virtualinvoke $r81.<com.android.server.am.ProcessRecord: void updateBoundClientUids()>();

     label06:
        virtualinvoke r87.<com.android.server.am.ServiceRecord: void setProcess(com.android.server.am.ProcessRecord)>(null);

        r87.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord isolatedProc> = null;

        r87.<com.android.server.am.ServiceRecord: int executeNesting> = 0;

        virtualinvoke r87.<com.android.server.am.ServiceRecord: void forceClearTracker()>();

        $r89 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mDestroyingServices>;

        virtualinvoke $r89.<java.util.ArrayList: boolean remove(java.lang.Object)>(r87);

        $r90 = r87.<com.android.server.am.ServiceRecord: android.util.ArrayMap bindings>;

        $i32 = virtualinvoke $r90.<android.util.ArrayMap: int size()>();

        i33 = $i32 - 1;

     label07:
        if i33 < 0 goto label15;

        $r66 = r87.<com.android.server.am.ServiceRecord: android.util.ArrayMap bindings>;

        $r67 = virtualinvoke $r66.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i33);

        r91 = (com.android.server.am.IntentBindRecord) $r67;

        r91.<com.android.server.am.IntentBindRecord: android.os.IBinder binder> = null;

        r91.<com.android.server.am.IntentBindRecord: boolean hasBound> = 0;

        r91.<com.android.server.am.IntentBindRecord: boolean received> = 0;

        r91.<com.android.server.am.IntentBindRecord: boolean requested> = 0;

        $r68 = r91.<com.android.server.am.IntentBindRecord: android.util.ArrayMap apps>;

        $i26 = virtualinvoke $r68.<android.util.ArrayMap: int size()>();

        i34 = $i26 - 1;

     label08:
        if i34 < 0 goto label14;

        $r69 = r91.<com.android.server.am.IntentBindRecord: android.util.ArrayMap apps>;

        $r70 = virtualinvoke $r69.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i34);

        r92 = (com.android.server.am.ProcessRecord) $r70;

        $z10 = r92.<com.android.server.am.ProcessRecord: boolean killedByAm>;

        if $z10 != 0 goto label13;

        $r71 = r92.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r71 != null goto label09;

        goto label13;

     label09:
        $r72 = r91.<com.android.server.am.IntentBindRecord: android.util.ArrayMap apps>;

        $r73 = virtualinvoke $r72.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i34);

        r93 = (com.android.server.am.AppBindRecord) $r73;

        $r74 = r93.<com.android.server.am.AppBindRecord: android.util.ArraySet connections>;

        $i27 = virtualinvoke $r74.<android.util.ArraySet: int size()>();

        i35 = $i27 - 1;

     label10:
        z13 = 0;

        if i35 < 0 goto label12;

        $r75 = r93.<com.android.server.am.AppBindRecord: android.util.ArraySet connections>;

        $r76 = virtualinvoke $r75.<android.util.ArraySet: java.lang.Object valueAt(int)>(i35);

        $r77 = (com.android.server.am.ConnectionRecord) $r76;

        $i28 = $r77.<com.android.server.am.ConnectionRecord: int flags>;

        $i29 = $i28 & 49;

        if $i29 != 1 goto label11;

        z13 = 1;

        goto label12;

     label11:
        i35 = i35 + -1;

        goto label10;

     label12:
        if z13 != 0 goto label13;

     label13:
        i34 = i34 + -1;

        goto label08;

     label14:
        i33 = i33 + -1;

        goto label07;

     label15:
        i31 = i31 + -1;

        goto label03;

     label16:
        $r85 := @caughtexception;

     label17:
        exitmonitor r88;

     label18:
        throw $r85;

     label19:
        $i2 = r86.<com.android.server.am.ProcessRecord: int userId>;

        r95 = specialinvoke r0.<com.android.server.am.ActiveServices: com.android.server.am.ActiveServices$ServiceMap getServiceMapLocked(int)>($i2);

        $i3 = virtualinvoke r86.<com.android.server.am.ProcessRecord: int numberOfRunningServices()>();

        i36 = $i3 - 1;

     label20:
        if i36 < 0 goto label28;

        r96 = virtualinvoke r86.<com.android.server.am.ProcessRecord: com.android.server.am.ServiceRecord getRunningServiceAt(int)>(i36);

        $z4 = virtualinvoke r86.<com.android.server.am.ProcessRecord: boolean isPersistent()>();

        if $z4 != 0 goto label21;

        virtualinvoke r86.<com.android.server.am.ProcessRecord: boolean stopService(com.android.server.am.ServiceRecord)>(r96);

        virtualinvoke r86.<com.android.server.am.ProcessRecord: void updateBoundClientUids()>();

     label21:
        $r32 = r95.<com.android.server.am.ActiveServices$ServiceMap: android.util.ArrayMap mServicesByInstanceName>;

        $r31 = r96.<com.android.server.am.ServiceRecord: android.content.ComponentName instanceName>;

        $r33 = virtualinvoke $r32.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r31);

        r97 = (com.android.server.am.ServiceRecord) $r33;

        if r97 == r96 goto label22;

        if r97 == null goto label27;

        $r55 = new java.lang.StringBuilder;

        specialinvoke $r55.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Service ");

        virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r96);

        virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in process ");

        virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r86);

        virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not same as in map: ");

        virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r97);

        $r62 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("ActivityManager", $r62);

        goto label27;

     label22:
        if z0 == 0 goto label23;

        $i13 = r96.<com.android.server.am.ServiceRecord: int crashCount>;

        $l15 = (long) $i13;

        $r40 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r41 = $r40.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerConstants mConstants>;

        $l14 = $r41.<com.android.server.am.ActivityManagerConstants: long BOUND_SERVICE_MAX_CRASH_RETRY>;

        $b16 = $l15 cmp $l14;

        if $b16 < 0 goto label23;

        $r42 = r96.<com.android.server.am.ServiceRecord: android.content.pm.ServiceInfo serviceInfo>;

        $r43 = $r42.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i17 = $r43.<android.content.pm.ApplicationInfo: int flags>;

        $i18 = $i17 & 8;

        if $i18 != 0 goto label23;

        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Service crashed ");

        $i19 = r96.<com.android.server.am.ServiceRecord: int crashCount>;

        virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i19);

        virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" times, stopping: ");

        virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r96);

        $r49 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r49);

        $r50 = newarray (java.lang.Object)[4];

        $i21 = r96.<com.android.server.am.ServiceRecord: int userId>;

        $r51 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i21);

        $r50[0] = $r51;

        $i22 = r96.<com.android.server.am.ServiceRecord: int crashCount>;

        $r52 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i22);

        $r50[1] = $r52;

        $r53 = r96.<com.android.server.am.ServiceRecord: java.lang.String shortInstanceName>;

        $r50[2] = $r53;

        $i23 = r86.<com.android.server.am.ProcessRecord: int pid>;

        $r54 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i23);

        $r50[3] = $r54;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(30034, $r50);

        specialinvoke r0.<com.android.server.am.ActiveServices: void bringDownServiceLocked(com.android.server.am.ServiceRecord)>(r96);

        goto label27;

     label23:
        if z0 == 0 goto label26;

        $r34 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r35 = $r34.<com.android.server.am.ActivityManagerService: com.android.server.am.UserController mUserController>;

        $i10 = r96.<com.android.server.am.ServiceRecord: int userId>;

        $z5 = virtualinvoke $r35.<com.android.server.am.UserController: boolean isUserRunning(int,int)>($i10, 0);

        if $z5 != 0 goto label24;

        goto label26;

     label24:
        $z6 = specialinvoke r0.<com.android.server.am.ActiveServices: boolean scheduleServiceRestartLocked(com.android.server.am.ServiceRecord,boolean)>(r96, 1);

        if $z6 != 0 goto label25;

        specialinvoke r0.<com.android.server.am.ActiveServices: void bringDownServiceLocked(com.android.server.am.ServiceRecord)>(r96);

        goto label27;

     label25:
        $z7 = virtualinvoke r96.<com.android.server.am.ServiceRecord: boolean canStopIfKilled(boolean)>(0);

        if $z7 == 0 goto label27;

        r96.<com.android.server.am.ServiceRecord: boolean startRequested> = 0;

        $r36 = r96.<com.android.server.am.ServiceRecord: com.android.internal.app.procstats.ServiceState tracker>;

        if $r36 == null goto label27;

        $r39 = r96.<com.android.server.am.ServiceRecord: com.android.internal.app.procstats.ServiceState tracker>;

        $r37 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r38 = $r37.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        $i11 = virtualinvoke $r38.<com.android.server.am.ProcessStatsService: int getMemFactorLocked()>();

        $l12 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        virtualinvoke $r39.<com.android.internal.app.procstats.ServiceState: void setStarted(boolean,int,long)>(0, $i11, $l12);

        goto label27;

     label26:
        specialinvoke r0.<com.android.server.am.ActiveServices: void bringDownServiceLocked(com.android.server.am.ServiceRecord)>(r96);

     label27:
        i36 = i36 + -1;

        goto label20;

     label28:
        if z0 != 0 goto label34;

        virtualinvoke r86.<com.android.server.am.ProcessRecord: void stopAllServices()>();

        virtualinvoke r86.<com.android.server.am.ProcessRecord: void clearBoundClientUids()>();

        $r11 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mRestartingServices>;

        $i4 = virtualinvoke $r11.<java.util.ArrayList: int size()>();

        i37 = $i4 - 1;

     label29:
        if i37 < 0 goto label31;

        $r22 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mRestartingServices>;

        $r23 = virtualinvoke $r22.<java.util.ArrayList: java.lang.Object get(int)>(i37);

        r99 = (com.android.server.am.ServiceRecord) $r23;

        $r25 = r99.<com.android.server.am.ServiceRecord: java.lang.String processName>;

        $r24 = r86.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $z3 = virtualinvoke $r25.<java.lang.String: boolean equals(java.lang.Object)>($r24);

        if $z3 == 0 goto label30;

        $r26 = r99.<com.android.server.am.ServiceRecord: android.content.pm.ServiceInfo serviceInfo>;

        $r27 = $r26.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i9 = $r27.<android.content.pm.ApplicationInfo: int uid>;

        $r28 = r86.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i8 = $r28.<android.content.pm.ApplicationInfo: int uid>;

        if $i9 != $i8 goto label30;

        $r29 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mRestartingServices>;

        virtualinvoke $r29.<java.util.ArrayList: java.lang.Object remove(int)>(i37);

        specialinvoke r0.<com.android.server.am.ActiveServices: void clearRestartingIfNeededLocked(com.android.server.am.ServiceRecord)>(r99);

     label30:
        i37 = i37 + -1;

        goto label29;

     label31:
        $r12 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mPendingServices>;

        $i5 = virtualinvoke $r12.<java.util.ArrayList: int size()>();

        i38 = $i5 - 1;

     label32:
        if i38 < 0 goto label34;

        $r13 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mPendingServices>;

        $r14 = virtualinvoke $r13.<java.util.ArrayList: java.lang.Object get(int)>(i38);

        r100 = (com.android.server.am.ServiceRecord) $r14;

        $r16 = r100.<com.android.server.am.ServiceRecord: java.lang.String processName>;

        $r15 = r86.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $z2 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>($r15);

        if $z2 == 0 goto label33;

        $r17 = r100.<com.android.server.am.ServiceRecord: android.content.pm.ServiceInfo serviceInfo>;

        $r18 = $r17.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i7 = $r18.<android.content.pm.ApplicationInfo: int uid>;

        $r19 = r86.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i6 = $r19.<android.content.pm.ApplicationInfo: int uid>;

        if $i7 != $i6 goto label33;

        $r20 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mPendingServices>;

        virtualinvoke $r20.<java.util.ArrayList: java.lang.Object remove(int)>(i38);

     label33:
        i38 = i38 + -1;

        goto label32;

     label34:
        $r4 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mDestroyingServices>;

        i39 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

     label35:
        if i39 <= 0 goto label37;

        i39 = i39 + -1;

        $r6 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mDestroyingServices>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(i39);

        r101 = (com.android.server.am.ServiceRecord) $r7;

        $r8 = r101.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r8 != r86 goto label36;

        virtualinvoke r101.<com.android.server.am.ServiceRecord: void forceClearTracker()>();

        $r9 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mDestroyingServices>;

        virtualinvoke $r9.<java.util.ArrayList: java.lang.Object remove(int)>(i39);

     label36:
        goto label35;

     label37:
        $r5 = r86.<com.android.server.am.ProcessRecord: android.util.ArraySet executingServices>;

        virtualinvoke $r5.<android.util.ArraySet: void clear()>();

        return;

        catch java.lang.Throwable from label04 to label05 with label16;
        catch java.lang.Throwable from label17 to label18 with label16;
    }

    android.app.ActivityManager$RunningServiceInfo makeRunningServiceInfoLocked(com.android.server.am.ServiceRecord)
    {
        com.android.server.am.ActiveServices r0;
        android.util.ArrayMap r2, $r9;
        com.android.server.am.ConnectionRecord r3;
        android.app.ActivityManager$RunningServiceInfo $r4;
        android.content.ComponentName $r5;
        com.android.server.am.ProcessRecord $r6, $r10, $r14, $r17, $r18, $r19, $r21;
        android.content.pm.ApplicationInfo $r7, $r15;
        int $i0, $i2, $i3, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, i20, i21;
        java.lang.String $r8, $r16;
        boolean $z0, $z1, $z2, $z3, $z4;
        long $l1, $l4;
        java.lang.Object $r11, $r12;
        com.android.server.am.AppBindRecord $r13;
        com.android.server.am.ServiceRecord r20;
        java.util.ArrayList r22;

        r0 := @this: com.android.server.am.ActiveServices;

        r20 := @parameter0: com.android.server.am.ServiceRecord;

        $r4 = new android.app.ActivityManager$RunningServiceInfo;

        specialinvoke $r4.<android.app.ActivityManager$RunningServiceInfo: void <init>()>();

        $r5 = r20.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        $r4.<android.app.ActivityManager$RunningServiceInfo: android.content.ComponentName service> = $r5;

        $r6 = r20.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r6 == null goto label01;

        $r19 = r20.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $i18 = $r19.<com.android.server.am.ProcessRecord: int pid>;

        $r4.<android.app.ActivityManager$RunningServiceInfo: int pid> = $i18;

     label01:
        $r7 = r20.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $i0 = $r7.<android.content.pm.ApplicationInfo: int uid>;

        $r4.<android.app.ActivityManager$RunningServiceInfo: int uid> = $i0;

        $r8 = r20.<com.android.server.am.ServiceRecord: java.lang.String processName>;

        $r4.<android.app.ActivityManager$RunningServiceInfo: java.lang.String process> = $r8;

        $z0 = r20.<com.android.server.am.ServiceRecord: boolean isForeground>;

        $r4.<android.app.ActivityManager$RunningServiceInfo: boolean foreground> = $z0;

        $l1 = r20.<com.android.server.am.ServiceRecord: long createRealTime>;

        $r4.<android.app.ActivityManager$RunningServiceInfo: long activeSince> = $l1;

        $z1 = r20.<com.android.server.am.ServiceRecord: boolean startRequested>;

        $r4.<android.app.ActivityManager$RunningServiceInfo: boolean started> = $z1;

        $r9 = virtualinvoke r20.<com.android.server.am.ServiceRecord: android.util.ArrayMap getConnections()>();

        $i2 = virtualinvoke $r9.<android.util.ArrayMap: int size()>();

        $r4.<android.app.ActivityManager$RunningServiceInfo: int clientCount> = $i2;

        $i3 = r20.<com.android.server.am.ServiceRecord: int crashCount>;

        $r4.<android.app.ActivityManager$RunningServiceInfo: int crashCount> = $i3;

        $l4 = r20.<com.android.server.am.ServiceRecord: long lastActivity>;

        $r4.<android.app.ActivityManager$RunningServiceInfo: long lastActivityTime> = $l4;

        $z2 = r20.<com.android.server.am.ServiceRecord: boolean isForeground>;

        if $z2 == 0 goto label02;

        $i16 = $r4.<android.app.ActivityManager$RunningServiceInfo: int flags>;

        $i17 = $i16 | 2;

        $r4.<android.app.ActivityManager$RunningServiceInfo: int flags> = $i17;

     label02:
        $z3 = r20.<com.android.server.am.ServiceRecord: boolean startRequested>;

        if $z3 == 0 goto label03;

        $i14 = $r4.<android.app.ActivityManager$RunningServiceInfo: int flags>;

        $i15 = $i14 | 1;

        $r4.<android.app.ActivityManager$RunningServiceInfo: int flags> = $i15;

     label03:
        $r10 = r20.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r10 == null goto label04;

        $r18 = r20.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $i11 = $r18.<com.android.server.am.ProcessRecord: int pid>;

        $i10 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        if $i11 != $i10 goto label04;

        $i12 = $r4.<android.app.ActivityManager$RunningServiceInfo: int flags>;

        $i13 = $i12 | 4;

        $r4.<android.app.ActivityManager$RunningServiceInfo: int flags> = $i13;

     label04:
        $r21 = r20.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r21 == null goto label05;

        $r17 = r20.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $z4 = virtualinvoke $r17.<com.android.server.am.ProcessRecord: boolean isPersistent()>();

        if $z4 == 0 goto label05;

        $i8 = $r4.<android.app.ActivityManager$RunningServiceInfo: int flags>;

        $i9 = $i8 | 8;

        $r4.<android.app.ActivityManager$RunningServiceInfo: int flags> = $i9;

     label05:
        r2 = virtualinvoke r20.<com.android.server.am.ServiceRecord: android.util.ArrayMap getConnections()>();

        $i19 = virtualinvoke r2.<android.util.ArrayMap: int size()>();

        i20 = $i19 - 1;

     label06:
        if i20 < 0 goto label10;

        $r11 = virtualinvoke r2.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i20);

        r22 = (java.util.ArrayList) $r11;

        i21 = 0;

     label07:
        $i5 = virtualinvoke r22.<java.util.ArrayList: int size()>();

        if i21 >= $i5 goto label09;

        $r12 = virtualinvoke r22.<java.util.ArrayList: java.lang.Object get(int)>(i21);

        r3 = (com.android.server.am.ConnectionRecord) $r12;

        $i6 = r3.<com.android.server.am.ConnectionRecord: int clientLabel>;

        if $i6 == 0 goto label08;

        $r13 = r3.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        $r14 = $r13.<com.android.server.am.AppBindRecord: com.android.server.am.ProcessRecord client>;

        $r15 = $r14.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r16 = $r15.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r4.<android.app.ActivityManager$RunningServiceInfo: java.lang.String clientPackage> = $r16;

        $i7 = r3.<com.android.server.am.ConnectionRecord: int clientLabel>;

        $r4.<android.app.ActivityManager$RunningServiceInfo: int clientLabel> = $i7;

        return $r4;

     label08:
        i21 = i21 + 1;

        goto label07;

     label09:
        i20 = i20 + -1;

        goto label06;

     label10:
        return $r4;
    }

    com.android.server.am.ActiveServices$ServiceDumper newServiceDumperLocked(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[], int, boolean, java.lang.String)
    {
        com.android.server.am.ActiveServices r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        int i0;
        boolean z0;
        java.lang.String r4;
        com.android.server.am.ActiveServices$ServiceDumper $r5;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        i0 := @parameter3: int;

        z0 := @parameter4: boolean;

        r4 := @parameter5: java.lang.String;

        $r5 = new com.android.server.am.ActiveServices$ServiceDumper;

        specialinvoke $r5.<com.android.server.am.ActiveServices$ServiceDumper: void <init>(com.android.server.am.ActiveServices,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,java.lang.String)>(r0, r1, r2, r3, i0, z0, r4);

        return $r5;
    }

    android.os.IBinder peekServiceLocked(android.content.Intent, java.lang.String, java.lang.String)
    {
        com.android.server.am.ActiveServices r0;
        int $i0, $i1, $i2, $i3, $i4;
        com.android.server.am.ServiceRecord $r1, $r6, $r7;
        java.lang.StringBuilder $r2;
        java.lang.String $r3, $r5, r12, r13;
        java.lang.SecurityException $r4;
        android.content.Intent$FilterComparison $r8;
        android.util.ArrayMap $r9;
        java.lang.Object $r10;
        android.content.Intent r11;
        com.android.server.am.ActiveServices$ServiceLookupResult r14;
        android.os.IBinder r15;
        com.android.server.am.IntentBindRecord r16;

        r0 := @this: com.android.server.am.ActiveServices;

        r11 := @parameter0: android.content.Intent;

        r12 := @parameter1: java.lang.String;

        r13 := @parameter2: java.lang.String;

        $i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i2 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        r14 = specialinvoke r0.<com.android.server.am.ActiveServices: com.android.server.am.ActiveServices$ServiceLookupResult retrieveServiceLocked(android.content.Intent,java.lang.String,java.lang.String,java.lang.String,int,int,int,boolean,boolean,boolean,boolean)>(r11, null, r12, r13, $i0, $i1, $i2, 0, 0, 0, 0);

        r15 = null;

        if r14 == null goto label2;

        $r1 = r14.<com.android.server.am.ActiveServices$ServiceLookupResult: com.android.server.am.ServiceRecord record>;

        if $r1 == null goto label1;

        $r6 = r14.<com.android.server.am.ActiveServices$ServiceLookupResult: com.android.server.am.ServiceRecord record>;

        $r9 = $r6.<com.android.server.am.ServiceRecord: android.util.ArrayMap bindings>;

        $r7 = r14.<com.android.server.am.ActiveServices$ServiceLookupResult: com.android.server.am.ServiceRecord record>;

        $r8 = $r7.<com.android.server.am.ServiceRecord: android.content.Intent$FilterComparison intent>;

        $r10 = virtualinvoke $r9.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r8);

        r16 = (com.android.server.am.IntentBindRecord) $r10;

        r15 = null;

        if r16 == null goto label2;

        r15 = r16.<com.android.server.am.IntentBindRecord: android.os.IBinder binder>;

        goto label2;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: Accessing service from pid=");

        $i3 = staticinvoke <android.os.Binder: int getCallingPid()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i4 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires ");

        $r3 = r14.<com.android.server.am.ActiveServices$ServiceLookupResult: java.lang.String permission>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r4 = new java.lang.SecurityException;

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.SecurityException: void <init>(java.lang.String)>($r5);

        throw $r4;

     label2:
        return r15;
    }

    final void performServiceRestartLocked(com.android.server.am.ServiceRecord)
    {
        com.android.server.am.ActiveServices r0;
        java.util.ArrayList $r2;
        boolean $z0, $z1, $z2;
        android.content.Intent$FilterComparison $r3;
        android.content.Intent $r4;
        int $i0;
        java.lang.StringBuilder $r6;
        java.lang.String $r9;
        android.os.TransactionTooLargeException $r10;
        com.android.server.am.ServiceRecord r11;

        r0 := @this: com.android.server.am.ActiveServices;

        r11 := @parameter0: com.android.server.am.ServiceRecord;

        $r2 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mRestartingServices>;

        $z0 = virtualinvoke $r2.<java.util.ArrayList: boolean contains(java.lang.Object)>(r11);

        if $z0 != 0 goto label1;

        return;

     label1:
        $z1 = specialinvoke r0.<com.android.server.am.ActiveServices: boolean isServiceNeededLocked(com.android.server.am.ServiceRecord,boolean,boolean)>(r11, 0, 0);

        if $z1 != 0 goto label2;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Restarting service that is not needed: ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r11);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("ActivityManager", $r9);

        return;

     label2:
        $r3 = r11.<com.android.server.am.ServiceRecord: android.content.Intent$FilterComparison intent>;

        $r4 = virtualinvoke $r3.<android.content.Intent$FilterComparison: android.content.Intent getIntent()>();

        $i0 = virtualinvoke $r4.<android.content.Intent: int getFlags()>();

        $z2 = r11.<com.android.server.am.ServiceRecord: boolean createdFromFg>;

        specialinvoke r0.<com.android.server.am.ActiveServices: java.lang.String bringUpServiceLocked(com.android.server.am.ServiceRecord,int,boolean,boolean,boolean)>(r11, $i0, $z2, 1, 0);

     label3:
        goto label5;

     label4:
        $r10 := @caughtexception;

     label5:
        return;

        catch android.os.TransactionTooLargeException from label2 to label3 with label4;
    }

    void processStartTimedOutLocked(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ProcessRecord r1, $r8;
        com.android.server.am.ServiceRecord r2;
        java.util.ArrayList $r4, $r5, $r13;
        int $i0, $i1, $i2, i4, i5;
        java.lang.Object $r6;
        android.content.pm.ApplicationInfo $r7;
        java.lang.StringBuilder $r9;
        java.lang.String $r12, $r15, $r16;
        boolean $z0;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        i4 = 0;

     label1:
        $r4 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mPendingServices>;

        $i0 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        if i4 >= $i0 goto label5;

        $r5 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mPendingServices>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        r2 = (com.android.server.am.ServiceRecord) $r6;

        $i2 = r1.<com.android.server.am.ProcessRecord: int uid>;

        $r7 = r2.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $i1 = $r7.<android.content.pm.ApplicationInfo: int uid>;

        if $i2 != $i1 goto label2;

        $r16 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r15 = r2.<com.android.server.am.ServiceRecord: java.lang.String processName>;

        $z0 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>($r15);

        if $z0 != 0 goto label3;

     label2:
        i5 = i4;

        $r8 = r2.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord isolatedProc>;

        if $r8 != r1 goto label4;

     label3:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Forcing bringing down service: ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r12);

        r2.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord isolatedProc> = null;

        $r13 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mPendingServices>;

        virtualinvoke $r13.<java.util.ArrayList: java.lang.Object remove(int)>(i4);

        i5 = i4 - 1;

        specialinvoke r0.<com.android.server.am.ActiveServices: void bringDownServiceLocked(com.android.server.am.ServiceRecord)>(r2);

     label4:
        i4 = i5 + 1;

        goto label1;

     label5:
        return;
    }

    void publishServiceLocked(com.android.server.am.ServiceRecord, android.content.Intent, android.os.IBinder)
    {
        com.android.server.am.ActiveServices r0;
        android.os.IBinder r1, $r23;
        long l0;
        android.content.Intent$FilterComparison r2, $r13;
        android.util.ArrayMap r3, $r7;
        java.util.ArrayList r4, $r37;
        com.android.server.am.ConnectionRecord r5;
        boolean z0, $z1, $z2;
        java.lang.Object $r8, $r9, $r10;
        int $i1, $i2, i4, i5;
        com.android.server.am.AppBindRecord $r11, $r26;
        com.android.server.am.IntentBindRecord $r12, r35;
        android.content.ComponentName $r14;
        android.app.IServiceConnection $r15, $r22;
        java.lang.Throwable $r16, $r32, r38;
        java.lang.Exception $r17;
        java.lang.String $r19, $r28, $r31;
        com.android.server.am.ProcessRecord $r27;
        com.android.server.am.ServiceRecord r33;
        android.content.Intent r34;
        java.lang.StringBuilder r36;

        r0 := @this: com.android.server.am.ActiveServices;

        r33 := @parameter0: com.android.server.am.ServiceRecord;

        r34 := @parameter1: android.content.Intent;

        r1 := @parameter2: android.os.IBinder;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        if r33 == null goto label21;

     label01:
        r2 = new android.content.Intent$FilterComparison;

     label02:
        specialinvoke r2.<android.content.Intent$FilterComparison: void <init>(android.content.Intent)>(r34);

        $r7 = r33.<com.android.server.am.ServiceRecord: android.util.ArrayMap bindings>;

        $r8 = virtualinvoke $r7.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r2);

        r35 = (com.android.server.am.IntentBindRecord) $r8;

     label03:
        if r35 == null goto label16;

     label04:
        $z1 = r35.<com.android.server.am.IntentBindRecord: boolean received>;

        if $z1 != 0 goto label16;

        r35.<com.android.server.am.IntentBindRecord: android.os.IBinder binder> = r1;

        r35.<com.android.server.am.IntentBindRecord: boolean requested> = 1;

        r35.<com.android.server.am.IntentBindRecord: boolean received> = 1;

        r3 = virtualinvoke r33.<com.android.server.am.ServiceRecord: android.util.ArrayMap getConnections()>();

        $i1 = virtualinvoke r3.<android.util.ArrayMap: int size()>();

        i4 = $i1 - 1;

     label05:
        if i4 < 0 goto label16;

     label06:
        $r9 = virtualinvoke r3.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i4);

        r4 = (java.util.ArrayList) $r9;

     label07:
        i5 = 0;

     label08:
        $i2 = virtualinvoke r4.<java.util.ArrayList: int size()>();

        if i5 >= $i2 goto label15;

        $r10 = virtualinvoke r4.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        r5 = (com.android.server.am.ConnectionRecord) $r10;

        $r11 = r5.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        $r12 = $r11.<com.android.server.am.AppBindRecord: com.android.server.am.IntentBindRecord intent>;

        $r13 = $r12.<com.android.server.am.IntentBindRecord: android.content.Intent$FilterComparison intent>;

        z0 = virtualinvoke r2.<android.content.Intent$FilterComparison: boolean equals(java.lang.Object)>($r13);

     label09:
        if z0 != 0 goto label10;

        goto label14;

     label10:
        $r15 = r5.<com.android.server.am.ConnectionRecord: android.app.IServiceConnection conn>;

        $r14 = r33.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        interfaceinvoke $r15.<android.app.IServiceConnection: void connected(android.content.ComponentName,android.os.IBinder,boolean)>($r14, r1, 0);

     label11:
        goto label14;

     label12:
        $r17 := @caughtexception;

     label13:
        r36 = new java.lang.StringBuilder;

        specialinvoke r36.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure sending service ");

        $r19 = r33.<com.android.server.am.ServiceRecord: java.lang.String shortInstanceName>;

        virtualinvoke r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        virtualinvoke r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to connection ");

        $r22 = r5.<com.android.server.am.ConnectionRecord: android.app.IServiceConnection conn>;

        $r23 = interfaceinvoke $r22.<android.app.IServiceConnection: android.os.IBinder asBinder()>();

        virtualinvoke r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r23);

        virtualinvoke r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (in ");

        $r26 = r5.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        $r27 = $r26.<com.android.server.am.AppBindRecord: com.android.server.am.ProcessRecord client>;

        $r28 = $r27.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        virtualinvoke r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        virtualinvoke r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r31 = virtualinvoke r36.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r31, $r17);

     label14:
        i5 = i5 + 1;

        goto label08;

     label15:
        i4 = i4 + -1;

        goto label05;

     label16:
        $r37 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mDestroyingServices>;

        $z2 = virtualinvoke $r37.<java.util.ArrayList: boolean contains(java.lang.Object)>(r33);

        specialinvoke r0.<com.android.server.am.ActiveServices: void serviceDoneExecutingLocked(com.android.server.am.ServiceRecord,boolean,boolean)>(r33, $z2, 0);

     label17:
        goto label21;

     label18:
        $r16 := @caughtexception;

        r38 = $r16;

        goto label20;

     label19:
        $r32 := @caughtexception;

        r38 = $r32;

     label20:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r38;

     label21:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

        catch java.lang.Throwable from label01 to label02 with label19;
        catch java.lang.Throwable from label02 to label03 with label18;
        catch java.lang.Throwable from label04 to label05 with label18;
        catch java.lang.Throwable from label06 to label07 with label18;
        catch java.lang.Throwable from label08 to label09 with label18;
        catch java.lang.Exception from label10 to label11 with label12;
        catch java.lang.Throwable from label10 to label11 with label18;
        catch java.lang.Throwable from label13 to label14 with label18;
        catch java.lang.Throwable from label16 to label17 with label18;
    }

    void removeConnectionLocked(com.android.server.am.ConnectionRecord, com.android.server.am.ProcessRecord, com.android.server.wm.ActivityServiceConnectionsHolder)
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ConnectionRecord r1;
        android.os.IBinder r2;
        com.android.server.am.AppBindRecord r3;
        com.android.server.am.ServiceRecord r4;
        java.util.ArrayList r5, $r14, r53;
        boolean z0, $z2, $z4, $z9, $z11;
        android.app.IServiceConnection $r6;
        android.util.ArrayMap $r7, $r18, $r27, $r29, $r51, $r74;
        java.lang.Object $r8, $r52;
        com.android.server.am.ProcessRecord $r9, $r15, $r20, $r21, $r22, $r23, $r26, $r31, $r33, $r34, $r35, $r36, $r37, r46, $r50, $r55, $r56, $r64, $r67;
        int $i0, $i1, $i2, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i15, $i16, $i17, $i18, $i20;
        com.android.internal.app.procstats.ServiceState $r10, $r13;
        com.android.server.am.ActivityManagerService $r11, $r24, $r54, $r63;
        com.android.server.am.ProcessStatsService $r12;
        long $l3, $l19;
        android.app.IApplicationThread $r16, $r68;
        com.android.server.am.IntentBindRecord $r17, $r19, $r25, $r65, $r66, $r69;
        android.util.ArraySet $r32, $r48, $r62;
        com.android.server.wm.ActivityServiceConnectionsHolder $r38, $r39, r47, $r49;
        java.lang.Exception $r40;
        java.lang.StringBuilder $r41;
        java.lang.String $r43, $r45, $r57, $r61;
        android.content.pm.ApplicationInfo $r58, $r59;
        android.content.ComponentName $r60;
        android.content.Intent$FilterComparison $r70;
        android.content.Intent $r71;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: com.android.server.am.ConnectionRecord;

        r46 := @parameter1: com.android.server.am.ProcessRecord;

        r47 := @parameter2: com.android.server.wm.ActivityServiceConnectionsHolder;

        $r6 = r1.<com.android.server.am.ConnectionRecord: android.app.IServiceConnection conn>;

        r2 = interfaceinvoke $r6.<android.app.IServiceConnection: android.os.IBinder asBinder()>();

        r3 = r1.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        r4 = r3.<com.android.server.am.AppBindRecord: com.android.server.am.ServiceRecord service>;

        $r7 = virtualinvoke r4.<com.android.server.am.ServiceRecord: android.util.ArrayMap getConnections()>();

        $r8 = virtualinvoke $r7.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r2);

        r5 = (java.util.ArrayList) $r8;

        if r5 == null goto label01;

        virtualinvoke r5.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        $i13 = virtualinvoke r5.<java.util.ArrayList: int size()>();

        if $i13 != 0 goto label01;

        virtualinvoke r4.<com.android.server.am.ServiceRecord: void removeConnection(android.os.IBinder)>(r2);

     label01:
        $r48 = r3.<com.android.server.am.AppBindRecord: android.util.ArraySet connections>;

        virtualinvoke $r48.<android.util.ArraySet: boolean remove(java.lang.Object)>(r1);

        virtualinvoke r1.<com.android.server.am.ConnectionRecord: void stopAssociation()>();

        $r49 = r1.<com.android.server.am.ConnectionRecord: com.android.server.wm.ActivityServiceConnectionsHolder activity>;

        if $r49 == null goto label02;

        $r38 = r1.<com.android.server.am.ConnectionRecord: com.android.server.wm.ActivityServiceConnectionsHolder activity>;

        if $r38 == r47 goto label02;

        $r39 = r1.<com.android.server.am.ConnectionRecord: com.android.server.wm.ActivityServiceConnectionsHolder activity>;

        virtualinvoke $r39.<com.android.server.wm.ActivityServiceConnectionsHolder: void removeConnection(java.lang.Object)>(r1);

        goto label02;

     label02:
        $r50 = r3.<com.android.server.am.AppBindRecord: com.android.server.am.ProcessRecord client>;

        if $r50 == r46 goto label06;

        $r31 = r3.<com.android.server.am.AppBindRecord: com.android.server.am.ProcessRecord client>;

        $r32 = $r31.<com.android.server.am.ProcessRecord: android.util.ArraySet connections>;

        virtualinvoke $r32.<android.util.ArraySet: boolean remove(java.lang.Object)>(r1);

        $i9 = r1.<com.android.server.am.ConnectionRecord: int flags>;

        $i10 = $i9 & 8;

        if $i10 == 0 goto label03;

        $r37 = r3.<com.android.server.am.AppBindRecord: com.android.server.am.ProcessRecord client>;

        virtualinvoke $r37.<com.android.server.am.ProcessRecord: void updateHasAboveClientLocked()>();

     label03:
        $i11 = r1.<com.android.server.am.ConnectionRecord: int flags>;

        $i12 = $i11 & 16777216;

        if $i12 == 0 goto label04;

        virtualinvoke r4.<com.android.server.am.ServiceRecord: void updateWhitelistManager()>();

        $z9 = r4.<com.android.server.am.ServiceRecord: boolean whitelistManager>;

        if $z9 != 0 goto label04;

        $r35 = r4.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r35 == null goto label04;

        $r36 = r4.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        specialinvoke r0.<com.android.server.am.ActiveServices: void updateWhitelistManagerLocked(com.android.server.am.ProcessRecord)>($r36);

     label04:
        $i15 = r1.<com.android.server.am.ConnectionRecord: int flags>;

        $i16 = $i15 & 1048576;

        if $i16 == 0 goto label05;

        virtualinvoke r4.<com.android.server.am.ServiceRecord: void updateHasBindingWhitelistingBgActivityStarts()>();

     label05:
        $r33 = r4.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r33 == null goto label06;

        $r34 = r4.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        specialinvoke r0.<com.android.server.am.ActiveServices: boolean updateServiceClientActivitiesLocked(com.android.server.am.ProcessRecord,com.android.server.am.ConnectionRecord,boolean)>($r34, r1, 1);

     label06:
        $r51 = r0.<com.android.server.am.ActiveServices: android.util.ArrayMap mServiceConnections>;

        $r52 = virtualinvoke $r51.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r2);

        r53 = (java.util.ArrayList) $r52;

        if r53 == null goto label07;

        virtualinvoke r53.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        $i8 = virtualinvoke r53.<java.util.ArrayList: int size()>();

        if $i8 != 0 goto label07;

        $r29 = r0.<com.android.server.am.ActiveServices: android.util.ArrayMap mServiceConnections>;

        virtualinvoke $r29.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r2);

     label07:
        $r54 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r55 = r3.<com.android.server.am.AppBindRecord: com.android.server.am.ProcessRecord client>;

        $i17 = $r55.<com.android.server.am.ProcessRecord: int uid>;

        $r56 = r3.<com.android.server.am.AppBindRecord: com.android.server.am.ProcessRecord client>;

        $r57 = $r56.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r58 = r4.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $i18 = $r58.<android.content.pm.ApplicationInfo: int uid>;

        $r59 = r4.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $l19 = $r59.<android.content.pm.ApplicationInfo: long longVersionCode>;

        $r60 = r4.<com.android.server.am.ServiceRecord: android.content.ComponentName instanceName>;

        $r61 = r4.<com.android.server.am.ServiceRecord: java.lang.String processName>;

        virtualinvoke $r54.<com.android.server.am.ActivityManagerService: void stopAssociationLocked(int,java.lang.String,int,long,android.content.ComponentName,java.lang.String)>($i17, $r57, $i18, $l19, $r60, $r61);

        $r62 = r3.<com.android.server.am.AppBindRecord: android.util.ArraySet connections>;

        $i20 = virtualinvoke $r62.<android.util.ArraySet: int size()>();

        if $i20 != 0 goto label08;

        $r25 = r3.<com.android.server.am.AppBindRecord: com.android.server.am.IntentBindRecord intent>;

        $r27 = $r25.<com.android.server.am.IntentBindRecord: android.util.ArrayMap apps>;

        $r26 = r3.<com.android.server.am.AppBindRecord: com.android.server.am.ProcessRecord client>;

        virtualinvoke $r27.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>($r26);

     label08:
        $z2 = r1.<com.android.server.am.ConnectionRecord: boolean serviceDead>;

        if $z2 != 0 goto label16;

        $r9 = r4.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r9 == null goto label13;

        $r15 = r4.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r16 = $r15.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r16 == null goto label13;

        $r17 = r3.<com.android.server.am.AppBindRecord: com.android.server.am.IntentBindRecord intent>;

        $r18 = $r17.<com.android.server.am.IntentBindRecord: android.util.ArrayMap apps>;

        $i4 = virtualinvoke $r18.<android.util.ArrayMap: int size()>();

        if $i4 != 0 goto label13;

        $r19 = r3.<com.android.server.am.AppBindRecord: com.android.server.am.IntentBindRecord intent>;

        $z4 = $r19.<com.android.server.am.IntentBindRecord: boolean hasBound>;

        if $z4 == 0 goto label13;

     label09:
        specialinvoke r0.<com.android.server.am.ActiveServices: void bumpServiceExecutingLocked(com.android.server.am.ServiceRecord,boolean,java.lang.String)>(r4, 0, "unbind");

        $r21 = r3.<com.android.server.am.AppBindRecord: com.android.server.am.ProcessRecord client>;

        $r20 = r4.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r21 == $r20 goto label10;

        $i5 = r1.<com.android.server.am.ConnectionRecord: int flags>;

        $i6 = $i5 & 32;

        if $i6 != 0 goto label10;

        $r22 = r4.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $i7 = $r22.<com.android.server.am.ProcessRecord: int setProcState>;

        if $i7 > 13 goto label10;

        $r24 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r23 = r4.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        virtualinvoke $r24.<com.android.server.am.ActivityManagerService: void updateLruProcessLocked(com.android.server.am.ProcessRecord,boolean,com.android.server.am.ProcessRecord)>($r23, 0, null);

     label10:
        $r63 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r64 = r4.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        virtualinvoke $r63.<com.android.server.am.ActivityManagerService: boolean updateOomAdjLocked(com.android.server.am.ProcessRecord,boolean,java.lang.String)>($r64, 1, "updateOomAdj_unbindService");

        $r65 = r3.<com.android.server.am.AppBindRecord: com.android.server.am.IntentBindRecord intent>;

        $r65.<com.android.server.am.IntentBindRecord: boolean hasBound> = 0;

        $r66 = r3.<com.android.server.am.AppBindRecord: com.android.server.am.IntentBindRecord intent>;

        $r66.<com.android.server.am.IntentBindRecord: boolean doRebind> = 0;

        $r67 = r4.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r68 = $r67.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r69 = r3.<com.android.server.am.AppBindRecord: com.android.server.am.IntentBindRecord intent>;

        $r70 = $r69.<com.android.server.am.IntentBindRecord: android.content.Intent$FilterComparison intent>;

        $r71 = virtualinvoke $r70.<android.content.Intent$FilterComparison: android.content.Intent getIntent()>();

        interfaceinvoke $r68.<android.app.IApplicationThread: void scheduleUnbindService(android.os.IBinder,android.content.Intent)>(r4, $r71);

     label11:
        goto label13;

     label12:
        $r40 := @caughtexception;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception when unbinding service ");

        $r43 = r4.<com.android.server.am.ServiceRecord: java.lang.String shortInstanceName>;

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);

        $r45 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r45, $r40);

        specialinvoke r0.<com.android.server.am.ActiveServices: void serviceProcessGoneLocked(com.android.server.am.ServiceRecord)>(r4);

     label13:
        $r74 = virtualinvoke r4.<com.android.server.am.ServiceRecord: android.util.ArrayMap getConnections()>();

        $z11 = virtualinvoke $r74.<android.util.ArrayMap: boolean isEmpty()>();

        if $z11 == 0 goto label14;

        $r14 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mPendingServices>;

        virtualinvoke $r14.<java.util.ArrayList: boolean remove(java.lang.Object)>(r4);

     label14:
        $i0 = r1.<com.android.server.am.ConnectionRecord: int flags>;

        $i1 = $i0 & 1;

        if $i1 == 0 goto label16;

        z0 = virtualinvoke r4.<com.android.server.am.ServiceRecord: boolean hasAutoCreateConnections()>();

        if z0 != 0 goto label15;

        $r10 = r4.<com.android.server.am.ServiceRecord: com.android.internal.app.procstats.ServiceState tracker>;

        if $r10 == null goto label15;

        $r13 = r4.<com.android.server.am.ServiceRecord: com.android.internal.app.procstats.ServiceState tracker>;

        $r11 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r12 = $r11.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        $i2 = virtualinvoke $r12.<com.android.server.am.ProcessStatsService: int getMemFactorLocked()>();

        $l3 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        virtualinvoke $r13.<com.android.internal.app.procstats.ServiceState: void setBound(boolean,int,long)>(0, $i2, $l3);

     label15:
        specialinvoke r0.<com.android.server.am.ActiveServices: void bringDownServiceIfNeededLocked(com.android.server.am.ServiceRecord,boolean,boolean)>(r4, 1, z0);

     label16:
        return;

        catch java.lang.Exception from label09 to label10 with label12;
        catch java.lang.Exception from label10 to label11 with label12;
    }

    void scheduleServiceForegroundTransitionTimeoutLocked(com.android.server.am.ServiceRecord)
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ServiceRecord r1;
        android.os.Message r2;
        com.android.server.am.ProcessRecord $r3, $r5;
        android.util.ArraySet $r4;
        int $i0;
        android.app.IApplicationThread $r6;
        com.android.server.am.ActivityManagerService $r7, $r9;
        com.android.server.am.ActivityManagerService$MainHandler $r8, $r10;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: com.android.server.am.ServiceRecord;

        $r3 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r4 = $r3.<com.android.server.am.ProcessRecord: android.util.ArraySet executingServices>;

        $i0 = virtualinvoke $r4.<android.util.ArraySet: int size()>();

        if $i0 == 0 goto label2;

        $r5 = r1.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r6 = $r5.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r6 != null goto label1;

        goto label2;

     label1:
        $r7 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r8 = $r7.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        r2 = virtualinvoke $r8.<com.android.server.am.ActivityManagerService$MainHandler: android.os.Message obtainMessage(int)>(66);

        r2.<android.os.Message: java.lang.Object obj> = r1;

        r1.<com.android.server.am.ServiceRecord: boolean fgWaiting> = 1;

        $r9 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r10 = $r9.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        virtualinvoke $r10.<com.android.server.am.ActivityManagerService$MainHandler: boolean sendMessageDelayed(android.os.Message,long)>(r2, 10000L);

        return;

     label2:
        return;
    }

    void scheduleServiceTimeoutLocked(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ProcessRecord r1;
        android.os.Message r2;
        com.android.server.am.ActivityManagerService$MainHandler r3, $r7;
        android.util.ArraySet $r4;
        int $i0;
        android.app.IApplicationThread $r5;
        com.android.server.am.ActivityManagerService $r6, $r8;
        boolean $z0;
        long l1;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        $r4 = r1.<com.android.server.am.ProcessRecord: android.util.ArraySet executingServices>;

        $i0 = virtualinvoke $r4.<android.util.ArraySet: int size()>();

        if $i0 == 0 goto label4;

        $r5 = r1.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r5 != null goto label1;

        goto label4;

     label1:
        $r6 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r7 = $r6.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        r2 = virtualinvoke $r7.<com.android.server.am.ActivityManagerService$MainHandler: android.os.Message obtainMessage(int)>(12);

        r2.<android.os.Message: java.lang.Object obj> = r1;

        $r8 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        r3 = $r8.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        $z0 = r1.<com.android.server.am.ProcessRecord: boolean execServicesFg>;

        if $z0 == 0 goto label2;

        l1 = 20000L;

        goto label3;

     label2:
        l1 = 200000L;

     label3:
        virtualinvoke r3.<com.android.server.am.ActivityManagerService$MainHandler: boolean sendMessageDelayed(android.os.Message,long)>(r2, l1);

        return;

     label4:
        return;
    }

    void serviceDoneExecutingLocked(com.android.server.am.ServiceRecord, int, int, int)
    {
        com.android.server.am.ActiveServices r0;
        int i0, i1, i2, $i4, $i6, $i7, $i10, $i11, $i12;
        boolean z0;
        long l3;
        java.util.ArrayList $r1;
        java.lang.StringBuilder $r2, $r6, $r13, $r22;
        java.lang.String $r5, $r11, $r19, $r26;
        com.android.server.am.ProcessRecord $r12, $r17;
        java.lang.IllegalArgumentException $r25;
        com.android.server.am.ServiceRecord r28;
        com.android.server.am.ServiceRecord$StartItem r30;

        r0 := @this: com.android.server.am.ActiveServices;

        r28 := @parameter0: com.android.server.am.ServiceRecord;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r1 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mDestroyingServices>;

        z0 = virtualinvoke $r1.<java.util.ArrayList: boolean contains(java.lang.Object)>(r28);

        if r28 == null goto label09;

        if i0 != 1 goto label06;

        r28.<com.android.server.am.ServiceRecord: boolean callStart> = 1;

        if i2 == 0 goto label04;

        if i2 == 1 goto label04;

        if i2 == 2 goto label03;

        if i2 == 3 goto label02;

        if i2 != 1000 goto label01;

        virtualinvoke r28.<com.android.server.am.ServiceRecord: com.android.server.am.ServiceRecord$StartItem findDeliveredStart(int,boolean,boolean)>(i1, 1, 1);

        goto label05;

     label01:
        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown service start result: ");

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r25 = new java.lang.IllegalArgumentException;

        $r26 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r25.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r26);

        throw $r25;

     label02:
        r30 = virtualinvoke r28.<com.android.server.am.ServiceRecord: com.android.server.am.ServiceRecord$StartItem findDeliveredStart(int,boolean,boolean)>(i1, 0, 0);

        if r30 == null goto label05;

        r30.<com.android.server.am.ServiceRecord$StartItem: int deliveryCount> = 0;

        $i11 = r30.<com.android.server.am.ServiceRecord$StartItem: int doneExecutingCount>;

        $i12 = $i11 + 1;

        r30.<com.android.server.am.ServiceRecord$StartItem: int doneExecutingCount> = $i12;

        r28.<com.android.server.am.ServiceRecord: boolean stopIfKilled> = 1;

        goto label05;

     label03:
        virtualinvoke r28.<com.android.server.am.ServiceRecord: com.android.server.am.ServiceRecord$StartItem findDeliveredStart(int,boolean,boolean)>(i1, 0, 1);

        $i10 = virtualinvoke r28.<com.android.server.am.ServiceRecord: int getLastStartId()>();

        if $i10 != i1 goto label05;

        r28.<com.android.server.am.ServiceRecord: boolean stopIfKilled> = 1;

        goto label05;

     label04:
        virtualinvoke r28.<com.android.server.am.ServiceRecord: com.android.server.am.ServiceRecord$StartItem findDeliveredStart(int,boolean,boolean)>(i1, 0, 1);

        r28.<com.android.server.am.ServiceRecord: boolean stopIfKilled> = 0;

     label05:
        if i2 != 0 goto label08;

        r28.<com.android.server.am.ServiceRecord: boolean callStart> = 0;

        goto label08;

     label06:
        if i0 != 2 goto label08;

        if z0 != 0 goto label07;

        $r12 = r28.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r12 == null goto label08;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Service done with onDestroy, but not inDestroying: ");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r28);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", app=");

        $r17 = r28.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);

        $r19 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r19);

        goto label08;

     label07:
        $i6 = r28.<com.android.server.am.ServiceRecord: int executeNesting>;

        if $i6 == 1 goto label08;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Service done with onDestroy, but executeNesting=");

        $i7 = r28.<com.android.server.am.ServiceRecord: int executeNesting>;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r28);

        $r11 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r11);

        r28.<com.android.server.am.ServiceRecord: int executeNesting> = 1;

     label08:
        l3 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        specialinvoke r0.<com.android.server.am.ActiveServices: void serviceDoneExecutingLocked(com.android.server.am.ServiceRecord,boolean,boolean)>(r28, z0, z0);

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

        goto label10;

     label09:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Done executing unknown service from pid ");

        $i4 = staticinvoke <android.os.Binder: int getCallingPid()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r5);

     label10:
        return;
    }

    void serviceForegroundCrash(com.android.server.am.ProcessRecord, java.lang.CharSequence)
    {
        com.android.server.am.ActiveServices r0;
        java.lang.CharSequence r1;
        com.android.server.am.ActivityManagerService r2;
        int i0, i1, i2;
        java.lang.String r3, $r8;
        android.content.pm.ApplicationInfo $r4;
        java.lang.StringBuilder $r5;
        com.android.server.am.ProcessRecord r9;

        r0 := @this: com.android.server.am.ActiveServices;

        r9 := @parameter0: com.android.server.am.ProcessRecord;

        r1 := @parameter1: java.lang.CharSequence;

        r2 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        i0 = r9.<com.android.server.am.ProcessRecord: int uid>;

        i1 = r9.<com.android.server.am.ProcessRecord: int pid>;

        $r4 = r9.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        r3 = $r4.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        i2 = r9.<com.android.server.am.ProcessRecord: int userId>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Context.startForegroundService() did not then call Service.startForeground(): ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<com.android.server.am.ActivityManagerService: void crashApplication(int,int,java.lang.String,int,java.lang.String,boolean)>(i0, i1, r3, i2, $r8, 0);

        return;
    }

    void serviceForegroundTimeout(com.android.server.am.ServiceRecord)
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ProcessRecord r1;
        com.android.server.am.AnrHelper r2;
        boolean $z0, $z1, $z2;
        com.android.server.am.ActivityManagerService $r3, r10;
        java.lang.StringBuilder $r4;
        java.lang.String $r7;
        java.lang.Throwable $r8;
        com.android.server.am.ServiceRecord r9;

        r0 := @this: com.android.server.am.ActiveServices;

        r9 := @parameter0: com.android.server.am.ServiceRecord;

        r10 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        entermonitor r10;

     label01:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $z0 = r9.<com.android.server.am.ServiceRecord: boolean fgRequired>;

        if $z0 == 0 goto label10;

        $z1 = r9.<com.android.server.am.ServiceRecord: boolean destroying>;

        if $z1 == 0 goto label03;

     label02:
        goto label10;

     label03:
        r1 = r9.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

     label04:
        if r1 == null goto label07;

     label05:
        $z2 = virtualinvoke r1.<com.android.server.am.ProcessRecord: boolean isDebugging()>();

        if $z2 == 0 goto label07;

        exitmonitor r10;

     label06:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label07:
        r9.<com.android.server.am.ServiceRecord: boolean fgWaiting> = 0;

        specialinvoke r0.<com.android.server.am.ActiveServices: void stopServiceLocked(com.android.server.am.ServiceRecord)>(r9);

        exitmonitor r10;

     label08:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        if r1 == null goto label09;

        $r3 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        r2 = $r3.<com.android.server.am.ActivityManagerService: com.android.server.am.AnrHelper mAnrHelper>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Context.startForegroundService() did not then call Service.startForeground(): ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r9);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<com.android.server.am.AnrHelper: void appNotResponding(com.android.server.am.ProcessRecord,java.lang.String)>(r1, $r7);

     label09:
        return;

     label10:
        exitmonitor r10;

     label11:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label12:
        $r8 := @caughtexception;

     label13:
        exitmonitor r10;

     label14:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label07 to label08 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    void serviceTimeout(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ActivityManagerService r1, $r5, $r7, $r8, $r10, $r15, $r18;
        long l0, l1, $l4, $l5, $l7, l10, l12, l13;
        boolean $z0, $z1, $z2, $z3;
        android.util.ArraySet $r2, $r4, $r22;
        int $i2, $i3, i9, i11;
        android.app.IApplicationThread $r3;
        com.android.server.am.ActivityManagerService$MainHandler $r6, $r17, $r20, r33;
        com.android.server.am.AnrHelper $r9;
        com.android.server.am.ProcessList $r11;
        java.util.ArrayList $r12;
        java.lang.String $r13, $r14, $r21, r31;
        java.lang.Runnable $r16, $r19;
        java.lang.Object $r23;
        byte $b6, $b8;
        java.lang.Throwable $r24;
        com.android.server.am.ProcessRecord r25;
        com.android.server.am.ServiceRecord r26;
        java.lang.StringBuilder r27, r30;
        java.io.StringWriter r28;
        com.android.internal.util.FastPrintWriter r29;
        android.os.Message r32;

        r0 := @this: com.android.server.am.ActiveServices;

        r25 := @parameter0: com.android.server.am.ProcessRecord;

        r1 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        entermonitor r1;

     label01:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $z0 = virtualinvoke r25.<com.android.server.am.ProcessRecord: boolean isDebugging()>();

        if $z0 == 0 goto label03;

        exitmonitor r1;

     label02:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label03:
        $r2 = r25.<com.android.server.am.ProcessRecord: android.util.ArraySet executingServices>;

        $i2 = virtualinvoke $r2.<android.util.ArraySet: int size()>();

        if $i2 == 0 goto label28;

        $r3 = r25.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r3 != null goto label05;

     label04:
        goto label28;

     label05:
        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

     label06:
        $z1 = r25.<com.android.server.am.ProcessRecord: boolean execServicesFg>;

        if $z1 == 0 goto label08;

     label07:
        i9 = 20000;

        goto label09;

     label08:
        i9 = 200000;

     label09:
        l1 = (long) i9;

        l10 = 0L;

     label10:
        $r4 = r25.<com.android.server.am.ProcessRecord: android.util.ArraySet executingServices>;

        $i3 = virtualinvoke $r4.<android.util.ArraySet: int size()>();

        i11 = $i3 - 1;

     label11:
        r26 = null;

        if i11 < 0 goto label17;

     label12:
        $r22 = r25.<com.android.server.am.ProcessRecord: android.util.ArraySet executingServices>;

        $r23 = virtualinvoke $r22.<android.util.ArraySet: java.lang.Object valueAt(int)>(i11);

        r26 = (com.android.server.am.ServiceRecord) $r23;

        $l5 = r26.<com.android.server.am.ServiceRecord: long executingStart>;

        $l4 = l0 - l1;

        $b6 = $l5 cmp $l4;

        if $b6 >= 0 goto label14;

     label13:
        goto label17;

     label14:
        l12 = l10;

     label15:
        $l7 = r26.<com.android.server.am.ServiceRecord: long executingStart>;

        $b8 = $l7 cmp l10;

        if $b8 <= 0 goto label16;

        l12 = r26.<com.android.server.am.ServiceRecord: long executingStart>;

     label16:
        i11 = i11 + -1;

        l10 = l12;

        goto label11;

     label17:
        if r26 == null goto label20;

     label18:
        $r10 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r11 = $r10.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r12 = $r11.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        $z3 = virtualinvoke $r12.<java.util.ArrayList: boolean contains(java.lang.Object)>(r25);

        if $z3 == 0 goto label20;

        r27 = new java.lang.StringBuilder;

        specialinvoke r27.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Timeout executing service: ");

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r26);

        $r13 = virtualinvoke r27.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r13);

        r28 = new java.io.StringWriter;

        specialinvoke r28.<java.io.StringWriter: void <init>()>();

        r29 = new com.android.internal.util.FastPrintWriter;

        specialinvoke r29.<com.android.internal.util.FastPrintWriter: void <init>(java.io.Writer,boolean,int)>(r28, 0, 1024);

        virtualinvoke r29.<java.io.PrintWriter: void println(java.lang.Object)>(r26);

        virtualinvoke r26.<com.android.server.am.ServiceRecord: void dump(java.io.PrintWriter,java.lang.String)>(r29, "    ");

        virtualinvoke r29.<java.io.PrintWriter: void close()>();

        $r14 = virtualinvoke r28.<java.io.StringWriter: java.lang.String toString()>();

        r0.<com.android.server.am.ActiveServices: java.lang.String mLastAnrDump> = $r14;

        $r15 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r17 = $r15.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        $r16 = r0.<com.android.server.am.ActiveServices: java.lang.Runnable mLastAnrDumpClearer>;

        virtualinvoke $r17.<com.android.server.am.ActivityManagerService$MainHandler: void removeCallbacks(java.lang.Runnable)>($r16);

        $r18 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r20 = $r18.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        $r19 = r0.<com.android.server.am.ActiveServices: java.lang.Runnable mLastAnrDumpClearer>;

        virtualinvoke $r20.<com.android.server.am.ActivityManagerService$MainHandler: boolean postDelayed(java.lang.Runnable,long)>($r19, 7200000L);

        r30 = new java.lang.StringBuilder;

        specialinvoke r30.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("executing service ");

        $r21 = r26.<com.android.server.am.ServiceRecord: java.lang.String shortInstanceName>;

        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        r31 = virtualinvoke r30.<java.lang.StringBuilder: java.lang.String toString()>();

     label19:
        goto label25;

     label20:
        $r5 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r6 = $r5.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        r32 = virtualinvoke $r6.<com.android.server.am.ActivityManagerService$MainHandler: android.os.Message obtainMessage(int)>(12);

        r32.<android.os.Message: java.lang.Object obj> = r25;

        $r7 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        r33 = $r7.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        $z2 = r25.<com.android.server.am.ProcessRecord: boolean execServicesFg>;

        if $z2 == 0 goto label22;

     label21:
        l13 = 20000L + l10;

        goto label23;

     label22:
        l13 = 200000L + l10;

     label23:
        virtualinvoke r33.<com.android.server.am.ActivityManagerService$MainHandler: boolean sendMessageAtTime(android.os.Message,long)>(r32, l13);

     label24:
        r31 = null;

     label25:
        exitmonitor r1;

     label26:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        if r31 == null goto label27;

        $r8 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r9 = $r8.<com.android.server.am.ActivityManagerService: com.android.server.am.AnrHelper mAnrHelper>;

        virtualinvoke $r9.<com.android.server.am.AnrHelper: void appNotResponding(com.android.server.am.ProcessRecord,java.lang.String)>(r25, r31);

     label27:
        return;

     label28:
        exitmonitor r1;

     label29:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label30:
        $r24 := @caughtexception;

     label31:
        exitmonitor r1;

     label32:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r24;

        catch java.lang.Throwable from label01 to label02 with label30;
        catch java.lang.Throwable from label03 to label04 with label30;
        catch java.lang.Throwable from label05 to label06 with label30;
        catch java.lang.Throwable from label06 to label07 with label30;
        catch java.lang.Throwable from label10 to label11 with label30;
        catch java.lang.Throwable from label12 to label13 with label30;
        catch java.lang.Throwable from label15 to label16 with label30;
        catch java.lang.Throwable from label18 to label19 with label30;
        catch java.lang.Throwable from label20 to label21 with label30;
        catch java.lang.Throwable from label23 to label24 with label30;
        catch java.lang.Throwable from label25 to label26 with label30;
        catch java.lang.Throwable from label28 to label29 with label30;
        catch java.lang.Throwable from label31 to label32 with label30;
    }

    public void setServiceForegroundLocked(android.content.ComponentName, android.os.IBinder, int, android.app.Notification, int, int)
    {
        com.android.server.am.ActiveServices r0;
        android.os.IBinder r1;
        int i0, i1, i2, i3;
        android.app.Notification r2;
        long l4;
        java.lang.Throwable $r3;
        android.content.ComponentName r4;
        com.android.server.am.ServiceRecord r5;

        r0 := @this: com.android.server.am.ActiveServices;

        r4 := @parameter0: android.content.ComponentName;

        r1 := @parameter1: android.os.IBinder;

        i0 := @parameter2: int;

        r2 := @parameter3: android.app.Notification;

        i1 := @parameter4: int;

        i2 := @parameter5: int;

        i3 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        l4 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        r5 = specialinvoke r0.<com.android.server.am.ActiveServices: com.android.server.am.ServiceRecord findServiceLocked(android.content.ComponentName,android.os.IBinder,int)>(r4, r1, i3);

     label2:
        if r5 == null goto label4;

     label3:
        specialinvoke r0.<com.android.server.am.ActiveServices: void setServiceForegroundInnerLocked(com.android.server.am.ServiceRecord,int,android.app.Notification,int,int)>(r5, i0, r2, i1, i2);

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l4);

        return;

     label5:
        $r3 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l4);

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    android.content.ComponentName startServiceInnerLocked(com.android.server.am.ActiveServices$ServiceMap, android.content.Intent, com.android.server.am.ServiceRecord, boolean, boolean) throws android.os.TransactionTooLargeException
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ServiceRecord r1;
        boolean z0, z1, $z2, $z3, z5;
        android.content.pm.ApplicationInfo $r2;
        android.content.ComponentName $r3, $r5, $r13, $r22;
        int $i0, $i1, $i2, $i6;
        java.lang.String $r4, $r6, r21;
        com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv $r7, $r8;
        java.util.ArrayList $r9, $r10;
        long $l3, $l4, $l5, $l7;
        com.android.server.am.ActivityManagerService $r11, $r14;
        com.android.server.am.ActivityManagerConstants $r12;
        com.android.server.am.ProcessStatsService $r15;
        java.lang.Throwable $r16;
        com.android.server.am.ActiveServices$ServiceMap r17;
        android.content.Intent r18;
        com.android.internal.app.procstats.ServiceState r19;
        com.android.internal.os.BatteryStatsImpl r20;

        r0 := @this: com.android.server.am.ActiveServices;

        r17 := @parameter0: com.android.server.am.ActiveServices$ServiceMap;

        r18 := @parameter1: android.content.Intent;

        r1 := @parameter2: com.android.server.am.ServiceRecord;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        r19 = virtualinvoke r1.<com.android.server.am.ServiceRecord: com.android.internal.app.procstats.ServiceState getTracker()>();

        z5 = 1;

        if r19 == null goto label01;

        $r14 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r15 = $r14.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        $i6 = virtualinvoke $r15.<com.android.server.am.ProcessStatsService: int getMemFactorLocked()>();

        $l7 = r1.<com.android.server.am.ServiceRecord: long lastActivity>;

        virtualinvoke r19.<com.android.internal.app.procstats.ServiceState: void setStarted(boolean,int,long)>(1, $i6, $l7);

     label01:
        r1.<com.android.server.am.ServiceRecord: boolean callStart> = 0;

        $r2 = r1.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $i0 = $r2.<android.content.pm.ApplicationInfo: int uid>;

        $r3 = r1.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        $r4 = virtualinvoke $r3.<android.content.ComponentName: java.lang.String getPackageName()>();

        $r5 = r1.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        $r6 = virtualinvoke $r5.<android.content.ComponentName: java.lang.String getClassName()>();

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int,java.lang.String,java.lang.String,int)>(99, $i0, $r4, $r6, 1);

        $r7 = r1.<com.android.server.am.ServiceRecord: com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv stats>;

        r20 = virtualinvoke $r7.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: com.android.internal.os.BatteryStatsImpl getBatteryStats()>();

        entermonitor r20;

     label02:
        $r8 = r1.<com.android.server.am.ServiceRecord: com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv stats>;

        virtualinvoke $r8.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: void startRunningLocked()>();

        exitmonitor r20;

     label03:
        $i1 = virtualinvoke r18.<android.content.Intent: int getFlags()>();

        r21 = specialinvoke r0.<com.android.server.am.ActiveServices: java.lang.String bringUpServiceLocked(com.android.server.am.ServiceRecord,int,boolean,boolean,boolean)>(r1, $i1, z0, 0, 0);

        if r21 == null goto label04;

        $r13 = new android.content.ComponentName;

        specialinvoke $r13.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>("!!", r21);

        return $r13;

     label04:
        $z2 = r1.<com.android.server.am.ServiceRecord: boolean startRequested>;

        if $z2 == 0 goto label07;

        if z1 == 0 goto label07;

        $r9 = r17.<com.android.server.am.ActiveServices$ServiceMap: java.util.ArrayList mStartingBackground>;

        $i2 = virtualinvoke $r9.<java.util.ArrayList: int size()>();

        if $i2 != 0 goto label05;

        goto label06;

     label05:
        z5 = 0;

     label06:
        $r10 = r17.<com.android.server.am.ActiveServices$ServiceMap: java.util.ArrayList mStartingBackground>;

        virtualinvoke $r10.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        $l3 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r11 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r12 = $r11.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerConstants mConstants>;

        $l4 = $r12.<com.android.server.am.ActivityManagerConstants: long BG_START_TIMEOUT>;

        $l5 = $l3 + $l4;

        r1.<com.android.server.am.ServiceRecord: long startingBgTimeout> = $l5;

        if z5 == 0 goto label08;

        virtualinvoke r17.<com.android.server.am.ActiveServices$ServiceMap: void rescheduleDelayedStartsLocked()>();

        goto label08;

     label07:
        if z0 != 0 goto label09;

        $z3 = r1.<com.android.server.am.ServiceRecord: boolean fgRequired>;

        if $z3 == 0 goto label08;

        goto label09;

     label08:
        goto label10;

     label09:
        virtualinvoke r17.<com.android.server.am.ActiveServices$ServiceMap: void ensureNotStartingBackgroundLocked(com.android.server.am.ServiceRecord)>(r1);

     label10:
        $r22 = r1.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        return $r22;

     label11:
        $r16 := @caughtexception;

     label12:
        exitmonitor r20;

     label13:
        throw $r16;

        catch java.lang.Throwable from label02 to label03 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    android.content.ComponentName startServiceLocked(android.app.IApplicationThread, android.content.Intent, java.lang.String, int, int, boolean, java.lang.String, java.lang.String, int) throws android.os.TransactionTooLargeException
    {
        com.android.server.am.ActiveServices r0;
        android.app.IApplicationThread r1;
        android.content.Intent r2;
        java.lang.String r3, r4, r5;
        int i0, i1, i2;
        boolean z0;
        android.content.ComponentName $r6;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: android.app.IApplicationThread;

        r2 := @parameter1: android.content.Intent;

        r3 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        z0 := @parameter5: boolean;

        r4 := @parameter6: java.lang.String;

        r5 := @parameter7: java.lang.String;

        i2 := @parameter8: int;

        $r6 = virtualinvoke r0.<com.android.server.am.ActiveServices: android.content.ComponentName startServiceLocked(android.app.IApplicationThread,android.content.Intent,java.lang.String,int,int,boolean,java.lang.String,java.lang.String,int,boolean)>(r1, r2, r3, i0, i1, z0, r4, r5, i2, 0);

        return $r6;
    }

    android.content.ComponentName startServiceLocked(android.app.IApplicationThread, android.content.Intent, java.lang.String, int, int, boolean, java.lang.String, java.lang.String, int, boolean) throws android.os.TransactionTooLargeException
    {
        com.android.server.am.ActiveServices r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i10, $i11, $i12, $i13, $i14, $i16, $i17, $i18, $i20, $i23, $i24, $i26, $i27, $i29, i30, $i31, $i32;
        java.lang.String r1, $r10, $r19, $r25, $r35, $r42, $r52, $r60, $r64, $r69, $r77, $r80, $r84, $r85, $r96, r99, r100, r104, $r114;
        boolean z0, $z1, $z2, $z3, $z6, $z7, $z8, $z9, $z11, $z12, z13, z14, z15, z16, $z18, z19;
        com.android.server.am.ProcessRecord r2, $r15, r118;
        com.android.server.am.ServiceRecord $r3, r105;
        com.android.server.am.ActivityManagerService $r4, $r7, $r11, $r16, $r20, $r29, $r30, $r36, $r53, $r61, $r87, $r112;
        com.android.server.am.UserController $r5, $r17;
        android.content.pm.ApplicationInfo $r6, $r8, $r9, $r12, $r18, $r34, $r54, $r63, $r79;
        long $l9, $l21;
        com.android.server.am.ServiceRecord$StartItem $r13;
        java.util.ArrayList $r14, $r21, $r26;
        java.lang.StringBuilder $r22, $r38, $r56, $r65, $r81, $r88;
        android.content.ComponentName $r27, $r28, $r59, $r78, $r86, r120;
        com.android.server.appop.AppOpsService $r31, $r32;
        android.os.IBinder $r33;
        com.android.server.am.ProcessStatsService $r37;
        com.android.server.am.ProcessList $r55;
        android.app.AppOpsManager $r62;
        java.lang.SecurityException $r95;
        android.app.IApplicationThread r97;
        android.content.Intent r98;
        com.android.server.am.ActiveServices$ServiceLookupResult r103;
        com.android.server.am.UidRecord r109;
        com.android.server.uri.UriGrantsManagerInternal $r113;
        com.android.server.uri.NeededUriGrants r115;
        com.android.internal.app.procstats.ServiceState r116;
        com.android.server.am.ActiveServices$ServiceMap r117;

        r0 := @this: com.android.server.am.ActiveServices;

        r97 := @parameter0: android.app.IApplicationThread;

        r98 := @parameter1: android.content.Intent;

        r99 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        z13 := @parameter5: boolean;

        r1 := @parameter6: java.lang.String;

        r100 := @parameter7: java.lang.String;

        i2 := @parameter8: int;

        z0 := @parameter9: boolean;

        if r97 == null goto label04;

        $r87 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        r2 = virtualinvoke $r87.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord getRecordForAppLocked(android.app.IApplicationThread)>(r97);

        if r2 == null goto label03;

        $i29 = r2.<com.android.server.am.ProcessRecord: int setSchedGroup>;

        if $i29 == 0 goto label01;

        z14 = 1;

        goto label02;

     label01:
        z14 = 0;

     label02:
        goto label05;

     label03:
        $r88 = new java.lang.StringBuilder;

        specialinvoke $r88.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to find app for caller ");

        virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r97);

        virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (pid=");

        virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") when starting service ");

        virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r98);

        $r95 = new java.lang.SecurityException;

        $r96 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r95.<java.lang.SecurityException: void <init>(java.lang.String)>($r96);

        throw $r95;

     label04:
        z14 = 1;

     label05:
        r103 = specialinvoke r0.<com.android.server.am.ActiveServices: com.android.server.am.ActiveServices$ServiceLookupResult retrieveServiceLocked(android.content.Intent,java.lang.String,java.lang.String,java.lang.String,int,int,int,boolean,boolean,boolean,boolean)>(r98, null, r99, r1, i0, i1, i2, 1, z14, 0, 0);

        if r103 != null goto label06;

        return null;

     label06:
        $r3 = r103.<com.android.server.am.ActiveServices$ServiceLookupResult: com.android.server.am.ServiceRecord record>;

        if $r3 != null goto label09;

        $r85 = r103.<com.android.server.am.ActiveServices$ServiceLookupResult: java.lang.String permission>;

        if $r85 == null goto label07;

        r104 = r103.<com.android.server.am.ActiveServices$ServiceLookupResult: java.lang.String permission>;

        goto label08;

     label07:
        r104 = "private to package";

     label08:
        $r86 = new android.content.ComponentName;

        specialinvoke $r86.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>("!", r104);

        return $r86;

     label09:
        r105 = r103.<com.android.server.am.ActiveServices$ServiceLookupResult: com.android.server.am.ServiceRecord record>;

        $r4 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r5 = $r4.<com.android.server.am.ActivityManagerService: com.android.server.am.UserController mUserController>;

        $i4 = r105.<com.android.server.am.ServiceRecord: int userId>;

        $z1 = virtualinvoke $r5.<com.android.server.am.UserController: boolean exists(int)>($i4);

        if $z1 != 0 goto label10;

        $r81 = new java.lang.StringBuilder;

        specialinvoke $r81.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Trying to start service with non-existent user! ");

        $i27 = r105.<com.android.server.am.ServiceRecord: int userId>;

        virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i27);

        $r84 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r84);

        return null;

     label10:
        $r7 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r6 = r105.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $i5 = $r6.<android.content.pm.ApplicationInfo: int uid>;

        $z2 = virtualinvoke $r7.<com.android.server.am.ActivityManagerService: boolean isUidActiveLocked(int)>($i5);

        $z3 = $z2 ^ 1;

        if $z3 == 0 goto label11;

        $r79 = r105.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $i26 = $r79.<android.content.pm.ApplicationInfo: int uid>;

        $r80 = r105.<com.android.server.am.ServiceRecord: java.lang.String packageName>;

        $z12 = specialinvoke r0.<com.android.server.am.ActiveServices: boolean appRestrictedAnyInBackground(int,java.lang.String)>($i26, $r80);

        if $z12 == 0 goto label11;

        z15 = 1;

        goto label12;

     label11:
        z15 = 0;

     label12:
        if z13 == 0 goto label16;

        $r61 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r62 = virtualinvoke $r61.<com.android.server.am.ActivityManagerService: android.app.AppOpsManager getAppOpsManager()>();

        $r63 = r105.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $i24 = $r63.<android.content.pm.ApplicationInfo: int uid>;

        $r64 = r105.<com.android.server.am.ServiceRecord: java.lang.String packageName>;

        i30 = virtualinvoke $r62.<android.app.AppOpsManager: int checkOpNoThrow(int,int,java.lang.String)>(76, $i24, $r64);

        if i30 == 0 goto label15;

        if i30 == 1 goto label14;

        if i30 == 3 goto label13;

        $r78 = new android.content.ComponentName;

        specialinvoke $r78.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>("!!", "foreground not allowed as per app op");

        return $r78;

     label13:
        goto label15;

     label14:
        $r65 = new java.lang.StringBuilder;

        specialinvoke $r65.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("startForegroundService not allowed due to app op: service ");

        virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r98);

        virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r69 = r105.<com.android.server.am.ServiceRecord: java.lang.String shortInstanceName>;

        virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r69);

        virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from pid=");

        virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" uid=");

        virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" pkg=");

        virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r77 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r77);

        z13 = 0;

        z16 = 1;

        goto label17;

     label15:
        goto label16;

     label16:
        z16 = 0;

     label17:
        if z15 != 0 goto label19;

        $z11 = r105.<com.android.server.am.ServiceRecord: boolean startRequested>;

        if $z11 != 0 goto label18;

        if z13 != 0 goto label18;

        goto label19;

     label18:
        goto label23;

     label19:
        $r11 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r8 = r105.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $i7 = $r8.<android.content.pm.ApplicationInfo: int uid>;

        $r10 = r105.<com.android.server.am.ServiceRecord: java.lang.String packageName>;

        $r9 = r105.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $i6 = $r9.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        i3 = virtualinvoke $r11.<com.android.server.am.ActivityManagerService: int getAppStartModeLocked(int,java.lang.String,int,int,boolean,boolean,boolean)>($i7, $r10, $i6, i0, 0, 0, z15);

        if i3 == 0 goto label23;

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Background start not allowed: service ");

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r98);

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r42 = r105.<com.android.server.am.ServiceRecord: java.lang.String shortInstanceName>;

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from pid=");

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" uid=");

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" pkg=");

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" startFg?=");

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z13);

        $r52 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r52);

        if i3 == 1 goto label22;

        if z16 == 0 goto label20;

        goto label22;

     label20:
        if z15 == 0 goto label21;

        if z13 == 0 goto label21;

        return null;

     label21:
        $r53 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r55 = $r53.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r54 = r105.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $i23 = $r54.<android.content.pm.ApplicationInfo: int uid>;

        r109 = virtualinvoke $r55.<com.android.server.am.ProcessList: com.android.server.am.UidRecord getUidRecordLocked(int)>($i23);

        $r56 = new java.lang.StringBuilder;

        specialinvoke $r56.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("app is in background uid ");

        virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r109);

        $r59 = new android.content.ComponentName;

        $r60 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r59.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>("?", $r60);

        return $r59;

     label22:
        return null;

     label23:
        $r12 = r105.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $i8 = $r12.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i8 >= 26 goto label24;

        if z13 == 0 goto label24;

        z13 = 0;

        goto label24;

     label24:
        $r112 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r113 = $r112.<com.android.server.am.ActivityManagerService: com.android.server.uri.UriGrantsManagerInternal mUgmInternal>;

        $r114 = r105.<com.android.server.am.ServiceRecord: java.lang.String packageName>;

        $i31 = r105.<com.android.server.am.ServiceRecord: int userId>;

        r115 = interfaceinvoke $r113.<com.android.server.uri.UriGrantsManagerInternal: com.android.server.uri.NeededUriGrants checkGrantUriPermissionFromIntent(android.content.Intent,int,java.lang.String,int)>(r98, i1, $r114, $i31);

        $z18 = specialinvoke r0.<com.android.server.am.ActiveServices: boolean requestStartTargetPermissionsReviewIfNeededLocked(com.android.server.am.ServiceRecord,java.lang.String,java.lang.String,int,android.content.Intent,boolean,int)>(r105, r1, r100, i1, r98, z14, i2);

        if $z18 != 0 goto label25;

        return null;

     label25:
        specialinvoke r0.<com.android.server.am.ActiveServices: boolean unscheduleServiceRestartLocked(com.android.server.am.ServiceRecord,int,boolean)>(r105, i1, 0);

        $l9 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r105.<com.android.server.am.ServiceRecord: long lastActivity> = $l9;

        r105.<com.android.server.am.ServiceRecord: boolean startRequested> = 1;

        r105.<com.android.server.am.ServiceRecord: boolean delayedStop> = 0;

        r105.<com.android.server.am.ServiceRecord: boolean fgRequired> = z13;

        $r14 = r105.<com.android.server.am.ServiceRecord: java.util.ArrayList pendingStarts>;

        $r13 = new com.android.server.am.ServiceRecord$StartItem;

        $i10 = virtualinvoke r105.<com.android.server.am.ServiceRecord: int makeNextStartId()>();

        specialinvoke $r13.<com.android.server.am.ServiceRecord$StartItem: void <init>(com.android.server.am.ServiceRecord,boolean,int,android.content.Intent,com.android.server.uri.NeededUriGrants,int)>(r105, 0, $i10, r98, r115, i1);

        virtualinvoke $r14.<java.util.ArrayList: boolean add(java.lang.Object)>($r13);

        if z13 == 0 goto label27;

        r116 = virtualinvoke r105.<com.android.server.am.ServiceRecord: com.android.internal.app.procstats.ServiceState getTracker()>();

        if r116 == null goto label26;

        $r36 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r37 = $r36.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        $i20 = virtualinvoke $r37.<com.android.server.am.ProcessStatsService: int getMemFactorLocked()>();

        $l21 = r105.<com.android.server.am.ServiceRecord: long lastActivity>;

        virtualinvoke r116.<com.android.internal.app.procstats.ServiceState: void setForeground(boolean,int,long)>(1, $i20, $l21);

     label26:
        $r29 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r32 = $r29.<com.android.server.am.ActivityManagerService: com.android.server.appop.AppOpsService mAppOpsService>;

        $r30 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r31 = $r30.<com.android.server.am.ActivityManagerService: com.android.server.appop.AppOpsService mAppOpsService>;

        $r33 = staticinvoke <android.app.AppOpsManager: android.os.IBinder getToken(com.android.internal.app.IAppOpsService)>($r31);

        $r34 = r105.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $i18 = $r34.<android.content.pm.ApplicationInfo: int uid>;

        $r35 = r105.<com.android.server.am.ServiceRecord: java.lang.String packageName>;

        virtualinvoke $r32.<com.android.server.appop.AppOpsService: int startOperation(android.os.IBinder,int,int,java.lang.String,java.lang.String,boolean,boolean,java.lang.String,boolean)>($r33, 76, $i18, $r35, null, 1, 0, null, 0);

     label27:
        $i32 = r105.<com.android.server.am.ServiceRecord: int userId>;

        r117 = specialinvoke r0.<com.android.server.am.ActiveServices: com.android.server.am.ActiveServices$ServiceMap getServiceMapLocked(int)>($i32);

        if z14 != 0 goto label32;

        if z13 != 0 goto label32;

        $r15 = r105.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r15 != null goto label32;

        $r16 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r17 = $r16.<com.android.server.am.ActivityManagerService: com.android.server.am.UserController mUserController>;

        $i11 = r105.<com.android.server.am.ServiceRecord: int userId>;

        $z8 = virtualinvoke $r17.<com.android.server.am.UserController: boolean hasStartedUserState(int)>($i11);

        if $z8 == 0 goto label32;

        $r20 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r19 = r105.<com.android.server.am.ServiceRecord: java.lang.String processName>;

        $r18 = r105.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $i12 = $r18.<android.content.pm.ApplicationInfo: int uid>;

        r118 = virtualinvoke $r20.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord getProcessRecordLocked(java.lang.String,int,boolean)>($r19, $i12, 0);

        if r118 == null goto label29;

        $i16 = virtualinvoke r118.<com.android.server.am.ProcessRecord: int getCurProcState()>();

        if $i16 <= 11 goto label28;

        goto label29;

     label28:
        $i17 = virtualinvoke r118.<com.android.server.am.ProcessRecord: int getCurProcState()>();

        if $i17 < 10 goto label32;

        z19 = 1;

        goto label33;

     label29:
        $z9 = r105.<com.android.server.am.ServiceRecord: boolean delayed>;

        if $z9 == 0 goto label30;

        $r28 = r105.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        return $r28;

     label30:
        $r21 = r117.<com.android.server.am.ActiveServices$ServiceMap: java.util.ArrayList mStartingBackground>;

        $i13 = virtualinvoke $r21.<java.util.ArrayList: int size()>();

        $i14 = r0.<com.android.server.am.ActiveServices: int mMaxStartingBackground>;

        if $i13 < $i14 goto label31;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Delaying start of: ");

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r105);

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", $r25);

        $r26 = r117.<com.android.server.am.ActiveServices$ServiceMap: java.util.ArrayList mDelayedStartList>;

        virtualinvoke $r26.<java.util.ArrayList: boolean add(java.lang.Object)>(r105);

        r105.<com.android.server.am.ServiceRecord: boolean delayed> = 1;

        $r27 = r105.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        return $r27;

     label31:
        z19 = 1;

        goto label33;

     label32:
        z19 = 0;

     label33:
        if z0 == 0 goto label34;

        virtualinvoke r105.<com.android.server.am.ServiceRecord: void whitelistBgActivityStartsOnServiceStart()>();

     label34:
        r120 = virtualinvoke r0.<com.android.server.am.ActiveServices: android.content.ComponentName startServiceInnerLocked(com.android.server.am.ActiveServices$ServiceMap,android.content.Intent,com.android.server.am.ServiceRecord,boolean,boolean)>(r117, r98, r105, z14, z19);

        $z6 = r105.<com.android.server.am.ServiceRecord: boolean mAllowWhileInUsePermissionInFgs>;

        if $z6 != 0 goto label35;

        $z7 = specialinvoke r0.<com.android.server.am.ActiveServices: boolean shouldAllowWhileInUsePermissionInFgsLocked(java.lang.String,int,int,android.content.Intent,com.android.server.am.ServiceRecord,boolean)>(r1, i0, i1, r98, r105, z0);

        r105.<com.android.server.am.ServiceRecord: boolean mAllowWhileInUsePermissionInFgs> = $z7;

     label35:
        return r120;
    }

    void stopAllForegroundServicesLocked(int, java.lang.String)
    {
        com.android.server.am.ActiveServices r0;
        java.lang.String r1, $r14;
        com.android.server.am.ActiveServices$ServiceMap r2;
        int i0, $i1, $i2, i3, i4, i5, i6;
        com.android.server.am.ServiceRecord r4, $r8;
        android.util.ArrayMap $r5, $r9;
        java.util.ArrayList $r6;
        java.lang.Object $r7, $r10;
        android.content.pm.ServiceInfo $r11, $r13;
        android.content.pm.ApplicationInfo $r12;
        boolean $z0, $z2;

        r0 := @this: com.android.server.am.ActiveServices;

        i3 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $i1 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i3);

        r2 = specialinvoke r0.<com.android.server.am.ActiveServices: com.android.server.am.ActiveServices$ServiceMap getServiceMapLocked(int)>($i1);

        $r5 = r2.<com.android.server.am.ActiveServices$ServiceMap: android.util.ArrayMap mServicesByInstanceName>;

        i0 = virtualinvoke $r5.<android.util.ArrayMap: int size()>();

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>(int)>(i0);

        i4 = 0;

     label1:
        if i4 >= i0 goto label4;

        $r9 = r2.<com.android.server.am.ActiveServices$ServiceMap: android.util.ArrayMap mServicesByInstanceName>;

        $r10 = virtualinvoke $r9.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i4);

        r4 = (com.android.server.am.ServiceRecord) $r10;

        $r11 = r4.<com.android.server.am.ServiceRecord: android.content.pm.ServiceInfo serviceInfo>;

        $r12 = $r11.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i2 = $r12.<android.content.pm.ApplicationInfo: int uid>;

        if i3 == $i2 goto label2;

        $r13 = r4.<com.android.server.am.ServiceRecord: android.content.pm.ServiceInfo serviceInfo>;

        $r14 = $r13.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r14);

        if $z2 == 0 goto label3;

     label2:
        $z0 = r4.<com.android.server.am.ServiceRecord: boolean isForeground>;

        if $z0 == 0 goto label3;

        virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>(r4);

     label3:
        i4 = i4 + 1;

        goto label1;

     label4:
        i5 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        i6 = 0;

     label5:
        if i6 >= i5 goto label6;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(i6);

        $r8 = (com.android.server.am.ServiceRecord) $r7;

        specialinvoke r0.<com.android.server.am.ActiveServices: void setServiceForegroundInnerLocked(com.android.server.am.ServiceRecord,int,android.app.Notification,int,int)>($r8, 0, null, 0, 0);

        i6 = i6 + 1;

        goto label5;

     label6:
        return;
    }

    void stopInBackgroundLocked(int)
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ActiveServices$ServiceMap r1;
        com.android.server.am.ServiceRecord r2, r30;
        android.util.SparseArray $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i13, i14, i15, i16;
        java.lang.Object $r4, $r6, $r8;
        android.util.ArrayMap $r5, $r7;
        android.content.pm.ApplicationInfo $r9, $r10, $r11, $r14, $r17, $r22;
        boolean $z0, $z2;
        java.lang.String $r12, $r21, $r23, r28;
        com.android.server.am.ActivityManagerService $r13;
        java.lang.StringBuilder $r15;
        long $l9, $l10, $l11;
        java.util.ArrayList $r24, r25, r26, r27;

        r0 := @this: com.android.server.am.ActiveServices;

        i14 := @parameter0: int;

        $r3 = r0.<com.android.server.am.ActiveServices: android.util.SparseArray mServiceMap>;

        $i0 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i14);

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>($i0);

        r1 = (com.android.server.am.ActiveServices$ServiceMap) $r4;

        r25 = null;

        if r1 == null goto label6;

        $r5 = r1.<com.android.server.am.ActiveServices$ServiceMap: android.util.ArrayMap mServicesByInstanceName>;

        $i1 = virtualinvoke $r5.<android.util.ArrayMap: int size()>();

        i15 = $i1 - 1;

     label1:
        if i15 < 0 goto label4;

        $r7 = r1.<com.android.server.am.ActiveServices$ServiceMap: android.util.ArrayMap mServicesByInstanceName>;

        $r8 = virtualinvoke $r7.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i15);

        r2 = (com.android.server.am.ServiceRecord) $r8;

        r26 = r25;

        $r9 = r2.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $i3 = $r9.<android.content.pm.ApplicationInfo: int uid>;

        if $i3 != i14 goto label3;

        r26 = r25;

        $z0 = r2.<com.android.server.am.ServiceRecord: boolean startRequested>;

        if $z0 == 0 goto label3;

        r26 = r25;

        $r13 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r10 = r2.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $i5 = $r10.<android.content.pm.ApplicationInfo: int uid>;

        $r12 = r2.<com.android.server.am.ServiceRecord: java.lang.String packageName>;

        $r11 = r2.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $i4 = $r11.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        $i6 = virtualinvoke $r13.<com.android.server.am.ActivityManagerService: int getAppStartModeLocked(int,java.lang.String,int,int,boolean,boolean,boolean)>($i5, $r12, $i4, -1, 0, 0, 0);

        if $i6 == 0 goto label3;

        r27 = r25;

        if r25 != null goto label2;

        $r24 = new java.util.ArrayList;

        specialinvoke $r24.<java.util.ArrayList: void <init>()>();

        r27 = $r24;

     label2:
        r28 = r2.<com.android.server.am.ServiceRecord: java.lang.String shortInstanceName>;

        $r14 = r2.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $i7 = $r14.<android.content.pm.ApplicationInfo: int uid>;

        staticinvoke <com.android.server.am.EventLogTags: void writeAmStopIdleService(int,java.lang.String)>($i7, r28);

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>(int)>(64);

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Stopping service due to app idle: ");

        $r17 = r2.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $i8 = $r17.<android.content.pm.ApplicationInfo: int uid>;

        staticinvoke <android.os.UserHandle: void formatUid(java.lang.StringBuilder,int)>($r15, $i8);

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $l9 = r2.<com.android.server.am.ServiceRecord: long createRealTime>;

        $l10 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l11 = $l9 - $l10;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.lang.StringBuilder)>($l11, $r15);

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r28);

        $r21 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r21);

        virtualinvoke r27.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

        r26 = r27;

        $r22 = r2.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $i13 = $r22.<android.content.pm.ApplicationInfo: int uid>;

        $r23 = r2.<com.android.server.am.ServiceRecord: java.lang.String packageName>;

        $z2 = specialinvoke r0.<com.android.server.am.ActiveServices: boolean appRestrictedAnyInBackground(int,java.lang.String)>($i13, $r23);

        if $z2 == 0 goto label3;

        specialinvoke r0.<com.android.server.am.ActiveServices: void cancelForegroundNotificationLocked(com.android.server.am.ServiceRecord)>(r2);

        r26 = r27;

     label3:
        i15 = i15 + -1;

        r25 = r26;

        goto label1;

     label4:
        if r25 == null goto label6;

        $i2 = virtualinvoke r25.<java.util.ArrayList: int size()>();

        i16 = $i2 - 1;

     label5:
        if i16 < 0 goto label6;

        $r6 = virtualinvoke r25.<java.util.ArrayList: java.lang.Object get(int)>(i16);

        r30 = (com.android.server.am.ServiceRecord) $r6;

        r30.<com.android.server.am.ServiceRecord: boolean delayed> = 0;

        virtualinvoke r1.<com.android.server.am.ActiveServices$ServiceMap: void ensureNotStartingBackgroundLocked(com.android.server.am.ServiceRecord)>(r30);

        specialinvoke r0.<com.android.server.am.ActiveServices: void stopServiceLocked(com.android.server.am.ServiceRecord)>(r30);

        i16 = i16 + -1;

        goto label5;

     label6:
        return;
    }

    int stopServiceLocked(android.app.IApplicationThread, android.content.Intent, java.lang.String, int)
    {
        com.android.server.am.ActiveServices r0;
        android.content.Intent r1;
        int i0, $i2, $i3, $i4;
        com.android.server.am.ProcessRecord r2;
        long l1;
        com.android.server.am.ActivityManagerService $r3;
        com.android.server.am.ServiceRecord $r4, $r5;
        java.lang.StringBuilder $r6;
        java.lang.SecurityException $r13;
        java.lang.String $r14, r17;
        java.lang.Throwable $r15;
        android.app.IApplicationThread r16;
        com.android.server.am.ActiveServices$ServiceLookupResult r19;

        r0 := @this: com.android.server.am.ActiveServices;

        r16 := @parameter0: android.app.IApplicationThread;

        r1 := @parameter1: android.content.Intent;

        r17 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        $r3 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        r2 = virtualinvoke $r3.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord getRecordForAppLocked(android.app.IApplicationThread)>(r16);

        if r16 == null goto label2;

        if r2 == null goto label1;

        goto label2;

     label1:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to find app for caller ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r16);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (pid=");

        $i4 = staticinvoke <android.os.Binder: int getCallingPid()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") when stopping service ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r13 = new java.lang.SecurityException;

        $r14 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.SecurityException: void <init>(java.lang.String)>($r14);

        throw $r13;

     label2:
        $i2 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        r19 = specialinvoke r0.<com.android.server.am.ActiveServices: com.android.server.am.ActiveServices$ServiceLookupResult retrieveServiceLocked(android.content.Intent,java.lang.String,java.lang.String,java.lang.String,int,int,int,boolean,boolean,boolean,boolean)>(r1, null, r17, null, $i2, $i3, i0, 0, 0, 0, 0);

        if r19 == null goto label7;

        $r4 = r19.<com.android.server.am.ActiveServices$ServiceLookupResult: com.android.server.am.ServiceRecord record>;

        if $r4 == null goto label6;

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label3:
        $r5 = r19.<com.android.server.am.ActiveServices$ServiceLookupResult: com.android.server.am.ServiceRecord record>;

        specialinvoke r0.<com.android.server.am.ActiveServices: void stopServiceLocked(com.android.server.am.ServiceRecord)>($r5);

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return 1;

     label5:
        $r15 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r15;

     label6:
        return -1;

     label7:
        return 0;

        catch java.lang.Throwable from label3 to label4 with label5;
    }

    boolean stopServiceTokenLocked(android.content.ComponentName, android.os.IBinder, int)
    {
        com.android.server.am.ActiveServices r0;
        int i0, $i2, $i3, $i5, $i6, $i8, $i9, $i10;
        com.android.server.am.ServiceRecord$StartItem r1, r21;
        long l1, $l4;
        com.android.server.am.ActivityManagerService $r2;
        com.android.server.am.ProcessStatsService $r3;
        com.android.internal.app.procstats.ServiceState $r4, $r31;
        java.util.ArrayList $r5, $r10, $r14, $r15;
        java.lang.StringBuilder $r6;
        java.lang.String $r13, $r25, $r27;
        java.lang.Object $r16;
        java.lang.Throwable $r17;
        android.content.ComponentName r18, $r24, $r26;
        android.os.IBinder r19;
        com.android.server.am.ServiceRecord r20;
        android.content.pm.ApplicationInfo $r23;
        com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv $r28, $r30;
        com.android.internal.os.BatteryStatsImpl r29;

        r0 := @this: com.android.server.am.ActiveServices;

        r18 := @parameter0: android.content.ComponentName;

        r19 := @parameter1: android.os.IBinder;

        i0 := @parameter2: int;

        $i2 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        r20 = specialinvoke r0.<com.android.server.am.ActiveServices: com.android.server.am.ServiceRecord findServiceLocked(android.content.ComponentName,android.os.IBinder,int)>(r18, r19, $i2);

        if r20 == null goto label12;

        if i0 < 0 goto label05;

        r1 = virtualinvoke r20.<com.android.server.am.ServiceRecord: com.android.server.am.ServiceRecord$StartItem findDeliveredStart(int,boolean,boolean)>(i0, 0, 0);

        if r1 == null goto label03;

     label01:
        $r14 = r20.<com.android.server.am.ServiceRecord: java.util.ArrayList deliveredStarts>;

        $i8 = virtualinvoke $r14.<java.util.ArrayList: int size()>();

        if $i8 <= 0 goto label03;

        $r15 = r20.<com.android.server.am.ServiceRecord: java.util.ArrayList deliveredStarts>;

        $r16 = virtualinvoke $r15.<java.util.ArrayList: java.lang.Object remove(int)>(0);

        r21 = (com.android.server.am.ServiceRecord$StartItem) $r16;

        virtualinvoke r21.<com.android.server.am.ServiceRecord$StartItem: void removeUriPermissionsLocked()>();

        if r21 != r1 goto label02;

        goto label03;

     label02:
        goto label01;

     label03:
        $i9 = virtualinvoke r20.<com.android.server.am.ServiceRecord: int getLastStartId()>();

        if $i9 == i0 goto label04;

        return 0;

     label04:
        $r5 = r20.<com.android.server.am.ServiceRecord: java.util.ArrayList deliveredStarts>;

        $i5 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        if $i5 <= 0 goto label05;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("stopServiceToken startId ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is last, but have ");

        $r10 = r20.<com.android.server.am.ServiceRecord: java.util.ArrayList deliveredStarts>;

        $i6 = virtualinvoke $r10.<java.util.ArrayList: int size()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" remaining args");

        $r13 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r13);

     label05:
        $r23 = r20.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $i10 = $r23.<android.content.pm.ApplicationInfo: int uid>;

        $r24 = r20.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        $r25 = virtualinvoke $r24.<android.content.ComponentName: java.lang.String getPackageName()>();

        $r26 = r20.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        $r27 = virtualinvoke $r26.<android.content.ComponentName: java.lang.String getClassName()>();

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int,java.lang.String,java.lang.String,int)>(99, $i10, $r25, $r27, 2);

        $r28 = r20.<com.android.server.am.ServiceRecord: com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv stats>;

        r29 = virtualinvoke $r28.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: com.android.internal.os.BatteryStatsImpl getBatteryStats()>();

        entermonitor r29;

     label06:
        $r30 = r20.<com.android.server.am.ServiceRecord: com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv stats>;

        virtualinvoke $r30.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: void stopRunningLocked()>();

        exitmonitor r29;

     label07:
        r20.<com.android.server.am.ServiceRecord: boolean startRequested> = 0;

        $r31 = r20.<com.android.server.am.ServiceRecord: com.android.internal.app.procstats.ServiceState tracker>;

        if $r31 == null goto label08;

        $r4 = r20.<com.android.server.am.ServiceRecord: com.android.internal.app.procstats.ServiceState tracker>;

        $r2 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r3 = $r2.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        $i3 = virtualinvoke $r3.<com.android.server.am.ProcessStatsService: int getMemFactorLocked()>();

        $l4 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        virtualinvoke $r4.<com.android.internal.app.procstats.ServiceState: void setStarted(boolean,int,long)>(0, $i3, $l4);

     label08:
        r20.<com.android.server.am.ServiceRecord: boolean callStart> = 0;

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        specialinvoke r0.<com.android.server.am.ActiveServices: void bringDownServiceIfNeededLocked(com.android.server.am.ServiceRecord,boolean,boolean)>(r20, 0, 0);

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return 1;

     label09:
        $r17 := @caughtexception;

     label10:
        exitmonitor r29;

     label11:
        throw $r17;

     label12:
        return 0;

        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    void systemServicesReady()
    {
        com.android.server.am.ActiveServices r0;
        java.lang.Object $r1, $r4;
        com.android.server.am.ActiveServices$ForcedStandbyListener $r2;
        com.android.server.AppStateTracker $r3;
        android.appwidget.AppWidgetManagerInternal $r5;

        r0 := @this: com.android.server.am.ActiveServices;

        $r1 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Lcom/android/server/AppStateTracker;");

        $r3 = (com.android.server.AppStateTracker) $r1;

        $r2 = new com.android.server.am.ActiveServices$ForcedStandbyListener;

        specialinvoke $r2.<com.android.server.am.ActiveServices$ForcedStandbyListener: void <init>(com.android.server.am.ActiveServices)>(r0);

        virtualinvoke $r3.<com.android.server.AppStateTracker: void addListener(com.android.server.AppStateTracker$Listener)>($r2);

        $r4 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/appwidget/AppWidgetManagerInternal;");

        $r5 = (android.appwidget.AppWidgetManagerInternal) $r4;

        r0.<com.android.server.am.ActiveServices: android.appwidget.AppWidgetManagerInternal mAppWidgetManagerInternal> = $r5;

        specialinvoke r0.<com.android.server.am.ActiveServices: void setWhiteListAllowWhileInUsePermissionInFgs()>();

        return;
    }

    void unbindFinishedLocked(com.android.server.am.ServiceRecord, android.content.Intent, boolean)
    {
        com.android.server.am.ActiveServices r0;
        long l0;
        boolean z0, z3, z4;
        int i1, $i2, $i3, i4;
        android.util.ArrayMap $r1, $r4, $r5, $r6;
        java.lang.Object $r2, $r7;
        java.util.ArrayList $r3;
        com.android.server.am.AppBindRecord $r8;
        android.os.TransactionTooLargeException $r9;
        java.lang.Throwable $r10;
        com.android.server.am.ServiceRecord r11;
        android.content.Intent r12;
        android.content.Intent$FilterComparison r13;
        com.android.server.am.IntentBindRecord r14;
        com.android.server.am.ProcessRecord r15;

        r0 := @this: com.android.server.am.ActiveServices;

        r11 := @parameter0: com.android.server.am.ServiceRecord;

        r12 := @parameter1: android.content.Intent;

        z3 := @parameter2: boolean;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        if r11 == null goto label20;

     label01:
        r13 = new android.content.Intent$FilterComparison;

        specialinvoke r13.<android.content.Intent$FilterComparison: void <init>(android.content.Intent)>(r12);

        $r1 = r11.<com.android.server.am.ServiceRecord: android.util.ArrayMap bindings>;

        $r2 = virtualinvoke $r1.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r13);

        r14 = (com.android.server.am.IntentBindRecord) $r2;

        $r3 = r0.<com.android.server.am.ActiveServices: java.util.ArrayList mDestroyingServices>;

        z0 = virtualinvoke $r3.<java.util.ArrayList: boolean contains(java.lang.Object)>(r11);

     label02:
        if r14 == null goto label17;

     label03:
        $r4 = r14.<com.android.server.am.IntentBindRecord: android.util.ArrayMap apps>;

        $i2 = virtualinvoke $r4.<android.util.ArrayMap: int size()>();

        if $i2 <= 0 goto label16;

     label04:
        if z0 != 0 goto label16;

     label05:
        $r5 = r14.<com.android.server.am.IntentBindRecord: android.util.ArrayMap apps>;

        $i3 = virtualinvoke $r5.<android.util.ArrayMap: int size()>();

        i4 = $i3 - 1;

     label06:
        z4 = 0;

        if i4 < 0 goto label12;

     label07:
        $r6 = r14.<com.android.server.am.IntentBindRecord: android.util.ArrayMap apps>;

        $r7 = virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i4);

        $r8 = (com.android.server.am.AppBindRecord) $r7;

        r15 = $r8.<com.android.server.am.AppBindRecord: com.android.server.am.ProcessRecord client>;

     label08:
        if r15 == null goto label11;

     label09:
        i1 = r15.<com.android.server.am.ProcessRecord: int setSchedGroup>;

     label10:
        if i1 == 0 goto label11;

        z4 = 1;

        goto label12;

     label11:
        i4 = i4 + -1;

        goto label06;

     label12:
        specialinvoke r0.<com.android.server.am.ActiveServices: boolean requestServiceBindingLocked(com.android.server.am.ServiceRecord,com.android.server.am.IntentBindRecord,boolean,boolean)>(r11, r14, z4, 1);

     label13:
        goto label15;

     label14:
        $r9 := @caughtexception;

     label15:
        goto label17;

     label16:
        r14.<com.android.server.am.IntentBindRecord: boolean doRebind> = 1;

     label17:
        specialinvoke r0.<com.android.server.am.ActiveServices: void serviceDoneExecutingLocked(com.android.server.am.ServiceRecord,boolean,boolean)>(r11, z0, 0);

     label18:
        goto label20;

     label19:
        $r10 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r10;

     label20:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

        catch java.lang.Throwable from label01 to label02 with label19;
        catch java.lang.Throwable from label03 to label04 with label19;
        catch java.lang.Throwable from label05 to label06 with label19;
        catch java.lang.Throwable from label07 to label08 with label19;
        catch java.lang.Throwable from label09 to label10 with label19;
        catch android.os.TransactionTooLargeException from label12 to label13 with label14;
        catch java.lang.Throwable from label12 to label13 with label19;
        catch java.lang.Throwable from label16 to label17 with label19;
        catch java.lang.Throwable from label17 to label18 with label19;
    }

    boolean unbindServiceLocked(android.app.IServiceConnection)
    {
        com.android.server.am.ActiveServices r0;
        android.os.IBinder r1, $r33;
        long l0;
        int i1, $i2, $i3, $i4;
        com.android.server.am.ActivityManagerService r2, $r5;
        android.util.ArrayMap $r3;
        java.lang.Object $r4, $r6, $r24;
        com.android.server.am.AppBindRecord $r7, $r10, $r13, $r15, $r18, $r21, $r42;
        com.android.server.am.ServiceRecord $r8, $r11, $r14, $r16, $r19, $r22, $r43;
        com.android.server.am.ProcessRecord $r9, $r12, $r17, $r20, $r23, $r44, r45;
        boolean $z1, $z2, $z3, z4;
        java.lang.String $r29, $r35;
        java.lang.StringBuilder $r31, r41;
        java.lang.Throwable $r36;
        android.app.IServiceConnection r37;
        java.util.ArrayList r38;
        com.android.server.am.ConnectionRecord r40;

        r0 := @this: com.android.server.am.ActiveServices;

        r37 := @parameter0: android.app.IServiceConnection;

        r1 = interfaceinvoke r37.<android.app.IServiceConnection: android.os.IBinder asBinder()>();

        $r3 = r0.<com.android.server.am.ActiveServices: android.util.ArrayMap mServiceConnections>;

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r38 = (java.util.ArrayList) $r4;

        if r38 != null goto label01;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unbind failed: could not find connection for ");

        $r33 = interfaceinvoke r37.<android.app.IServiceConnection: android.os.IBinder asBinder()>();

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r33);

        $r35 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r35);

        return 0;

     label01:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label02:
        i1 = virtualinvoke r38.<java.util.ArrayList: int size()>();

     label03:
        if i1 <= 0 goto label13;

     label04:
        $r6 = virtualinvoke r38.<java.util.ArrayList: java.lang.Object get(int)>(0);

        r40 = (com.android.server.am.ConnectionRecord) $r6;

        virtualinvoke r0.<com.android.server.am.ActiveServices: void removeConnectionLocked(com.android.server.am.ConnectionRecord,com.android.server.am.ProcessRecord,com.android.server.wm.ActivityServiceConnectionsHolder)>(r40, null, null);

        $i2 = virtualinvoke r38.<java.util.ArrayList: int size()>();

        if $i2 <= 0 goto label05;

        $r24 = virtualinvoke r38.<java.util.ArrayList: java.lang.Object get(int)>(0);

        if $r24 != r40 goto label05;

        r41 = new java.lang.StringBuilder;

        specialinvoke r41.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Connection ");

        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r40);

        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not removed for binder ");

        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r29 = virtualinvoke r41.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("ActivityManager", $r29);

        virtualinvoke r38.<java.util.ArrayList: java.lang.Object remove(int)>(0);

     label05:
        $r42 = r40.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        $r43 = $r42.<com.android.server.am.AppBindRecord: com.android.server.am.ServiceRecord service>;

        $r44 = $r43.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r44 == null goto label12;

        $r7 = r40.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        $r8 = $r7.<com.android.server.am.AppBindRecord: com.android.server.am.ServiceRecord service>;

        $r9 = $r8.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $z1 = $r9.<com.android.server.am.ProcessRecord: boolean whitelistManager>;

        if $z1 == 0 goto label06;

        $r21 = r40.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        $r22 = $r21.<com.android.server.am.AppBindRecord: com.android.server.am.ServiceRecord service>;

        $r23 = $r22.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        specialinvoke r0.<com.android.server.am.ActiveServices: void updateWhitelistManagerLocked(com.android.server.am.ProcessRecord)>($r23);

     label06:
        $i3 = r40.<com.android.server.am.ConnectionRecord: int flags>;

        $i4 = $i3 & 134217728;

        if $i4 == 0 goto label12;

        $r10 = r40.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        $r11 = $r10.<com.android.server.am.AppBindRecord: com.android.server.am.ServiceRecord service>;

        $r12 = $r11.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r12.<com.android.server.am.ProcessRecord: boolean treatLikeActivity> = 1;

        r2 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        $r13 = r40.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        $r14 = $r13.<com.android.server.am.AppBindRecord: com.android.server.am.ServiceRecord service>;

        r45 = $r14.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

     label07:
        z4 = 1;

     label08:
        $r15 = r40.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        $r16 = $r15.<com.android.server.am.AppBindRecord: com.android.server.am.ServiceRecord service>;

        $r17 = $r16.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $z2 = virtualinvoke $r17.<com.android.server.am.ProcessRecord: boolean hasClientActivities()>();

        if $z2 != 0 goto label11;

        $r18 = r40.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        $r19 = $r18.<com.android.server.am.AppBindRecord: com.android.server.am.ServiceRecord service>;

        $r20 = $r19.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $z3 = $r20.<com.android.server.am.ProcessRecord: boolean treatLikeActivity>;

        if $z3 == 0 goto label10;

     label09:
        z4 = 1;

        goto label11;

     label10:
        z4 = 0;

     label11:
        virtualinvoke r2.<com.android.server.am.ActivityManagerService: void updateLruProcessLocked(com.android.server.am.ProcessRecord,boolean,com.android.server.am.ProcessRecord)>(r45, z4, null);

     label12:
        goto label02;

     label13:
        $r5 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        virtualinvoke $r5.<com.android.server.am.ActivityManagerService: void updateOomAdjLocked(java.lang.String)>("updateOomAdj_unbindService");

     label14:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return 1;

     label15:
        $r36 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r36;

        catch java.lang.Throwable from label02 to label03 with label15;
        catch java.lang.Throwable from label04 to label05 with label15;
        catch java.lang.Throwable from label05 to label06 with label15;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch java.lang.Throwable from label08 to label09 with label15;
        catch java.lang.Throwable from label11 to label12 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
    }

    void updateForegroundApps(com.android.server.am.ActiveServices$ServiceMap)
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ActivityManagerService r1;
        long l0, $l3, $l4, $l5, $l6, $l7, $l11, l13, l15;
        com.android.server.am.ActiveServices$ActiveForegroundApp r2;
        android.util.ArrayMap $r3, $r4, $r8;
        int $i1, $i9, $i10, i14;
        byte $b2, $b8, $b12;
        java.lang.Object $r5;
        java.lang.String $r6, $r7;
        boolean $z1, $z3, $z4, $z5;
        java.lang.Throwable $r10;
        com.android.server.am.ActiveServices$ServiceMap r11;
        java.util.ArrayList r12, r13;
        android.os.Message r14;

        r0 := @this: com.android.server.am.ActiveServices;

        r11 := @parameter0: com.android.server.am.ActiveServices$ServiceMap;

        r12 = null;

        r1 = r0.<com.android.server.am.ActiveServices: com.android.server.am.ActivityManagerService mAm>;

        entermonitor r1;

     label01:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

     label02:
        l13 = 9223372036854775807L;

        if r11 == null goto label24;

     label03:
        $r3 = r11.<com.android.server.am.ActiveServices$ServiceMap: android.util.ArrayMap mActiveForegroundApps>;

        $i1 = virtualinvoke $r3.<android.util.ArrayMap: int size()>();

        i14 = $i1 - 1;

     label04:
        if i14 < 0 goto label20;

     label05:
        $r4 = r11.<com.android.server.am.ActiveServices$ServiceMap: android.util.ArrayMap mActiveForegroundApps>;

        $r5 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i14);

        r2 = (com.android.server.am.ActiveServices$ActiveForegroundApp) $r5;

     label06:
        l15 = l13;

     label07:
        $l7 = r2.<com.android.server.am.ActiveServices$ActiveForegroundApp: long mEndTime>;

        $b8 = $l7 cmp 0L;

        if $b8 == 0 goto label11;

        $z3 = virtualinvoke r0.<com.android.server.am.ActiveServices: boolean foregroundAppShownEnoughLocked(com.android.server.am.ActiveServices$ActiveForegroundApp,long)>(r2, l0);

        if $z3 == 0 goto label09;

        $r8 = r11.<com.android.server.am.ActiveServices$ServiceMap: android.util.ArrayMap mActiveForegroundApps>;

        virtualinvoke $r8.<android.util.ArrayMap: java.lang.Object removeAt(int)>(i14);

        r11.<com.android.server.am.ActiveServices$ServiceMap: boolean mActiveForegroundAppsChanged> = 1;

     label08:
        r13 = r12;

        goto label19;

     label09:
        l15 = l13;

     label10:
        $l11 = r2.<com.android.server.am.ActiveServices$ActiveForegroundApp: long mHideTime>;

        $b12 = $l11 cmp l13;

        if $b12 >= 0 goto label11;

        l15 = r2.<com.android.server.am.ActiveServices$ActiveForegroundApp: long mHideTime>;

     label11:
        r13 = r12;

        l13 = l15;

     label12:
        $z4 = r2.<com.android.server.am.ActiveServices$ActiveForegroundApp: boolean mAppOnTop>;

        if $z4 != 0 goto label19;

        $i9 = r2.<com.android.server.am.ActiveServices$ActiveForegroundApp: int mUid>;

        $r6 = r2.<com.android.server.am.ActiveServices$ActiveForegroundApp: java.lang.String mPackageName>;

        $z1 = specialinvoke r0.<com.android.server.am.ActiveServices: boolean appRestrictedAnyInBackground(int,java.lang.String)>($i9, $r6);

        if $z1 != 0 goto label17;

     label13:
        r13 = r12;

        if r12 != null goto label15;

     label14:
        r13 = new java.util.ArrayList;

        specialinvoke r13.<java.util.ArrayList: void <init>()>();

     label15:
        virtualinvoke r13.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

     label16:
        l13 = l15;

        goto label19;

     label17:
        $i10 = r2.<com.android.server.am.ActiveServices$ActiveForegroundApp: int mUid>;

        $r7 = r2.<com.android.server.am.ActiveServices$ActiveForegroundApp: java.lang.String mPackageName>;

        virtualinvoke r0.<com.android.server.am.ActiveServices: void stopAllForegroundServicesLocked(int,java.lang.String)>($i10, $r7);

     label18:
        l13 = l15;

        r13 = r12;

     label19:
        i14 = i14 + -1;

        r12 = r13;

        goto label04;

     label20:
        virtualinvoke r11.<com.android.server.am.ActiveServices$ServiceMap: void removeMessages(int)>(2);

     label21:
        $b2 = l13 cmp 9223372036854775807L;

        if $b2 >= 0 goto label24;

     label22:
        r14 = virtualinvoke r11.<com.android.server.am.ActiveServices$ServiceMap: android.os.Message obtainMessage(int)>(2);

     label23:
        $l3 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l4 = $l3 + l13;

        $l5 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l6 = $l4 - $l5;

        virtualinvoke r11.<com.android.server.am.ActiveServices$ServiceMap: boolean sendMessageAtTime(android.os.Message,long)>(r14, $l6);

     label24:
        $z5 = r11.<com.android.server.am.ActiveServices$ServiceMap: boolean mActiveForegroundAppsChanged>;

        if $z5 != 0 goto label26;

        exitmonitor r1;

     label25:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label26:
        r11.<com.android.server.am.ActiveServices$ServiceMap: boolean mActiveForegroundAppsChanged> = 0;

        exitmonitor r1;

     label27:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label28:
        $r10 := @caughtexception;

     label29:
        exitmonitor r1;

     label30:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r10;

        catch java.lang.Throwable from label01 to label02 with label28;
        catch java.lang.Throwable from label03 to label04 with label28;
        catch java.lang.Throwable from label05 to label06 with label28;
        catch java.lang.Throwable from label07 to label08 with label28;
        catch java.lang.Throwable from label10 to label11 with label28;
        catch java.lang.Throwable from label12 to label13 with label28;
        catch java.lang.Throwable from label14 to label15 with label28;
        catch java.lang.Throwable from label15 to label16 with label28;
        catch java.lang.Throwable from label17 to label18 with label28;
        catch java.lang.Throwable from label20 to label21 with label28;
        catch java.lang.Throwable from label22 to label23 with label28;
        catch java.lang.Throwable from label23 to label24 with label28;
        catch java.lang.Throwable from label24 to label25 with label28;
        catch java.lang.Throwable from label26 to label27 with label28;
        catch java.lang.Throwable from label29 to label30 with label28;
    }

    void updateScreenStateLocked(boolean)
    {
        com.android.server.am.ActiveServices r0;
        boolean z0, $z1, $z2, $z3, z4, z5, $z6;
        long l0, $l4, $l6, $l8, $l9, l12, l14;
        com.android.server.am.ActiveServices$ServiceMap r1;
        com.android.server.am.ActiveServices$ActiveForegroundApp r2;
        android.util.SparseArray $r3, $r4;
        int $i1, $i2, i11, i13;
        java.lang.Object $r5, $r8;
        android.util.ArrayMap $r6, $r7, $r10;
        byte $b3, $b5, $b7, $b10;
        java.lang.String $r9;

        r0 := @this: com.android.server.am.ActiveServices;

        z0 := @parameter0: boolean;

        $z1 = r0.<com.android.server.am.ActiveServices: boolean mScreenOn>;

        if $z1 == z0 goto label10;

        r0.<com.android.server.am.ActiveServices: boolean mScreenOn> = z0;

        if z0 == 0 goto label10;

        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r3 = r0.<com.android.server.am.ActiveServices: android.util.SparseArray mServiceMap>;

        $i1 = virtualinvoke $r3.<android.util.SparseArray: int size()>();

        i11 = $i1 - 1;

     label01:
        if i11 < 0 goto label10;

        $r4 = r0.<com.android.server.am.ActiveServices: android.util.SparseArray mServiceMap>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object valueAt(int)>(i11);

        r1 = (com.android.server.am.ActiveServices$ServiceMap) $r5;

        l12 = 9223372036854775807L;

        z4 = 0;

        $r6 = r1.<com.android.server.am.ActiveServices$ServiceMap: android.util.ArrayMap mActiveForegroundApps>;

        $i2 = virtualinvoke $r6.<android.util.ArrayMap: int size()>();

        i13 = $i2 - 1;

     label02:
        if i13 < 0 goto label07;

        $r7 = r1.<com.android.server.am.ActiveServices$ServiceMap: android.util.ArrayMap mActiveForegroundApps>;

        $r8 = virtualinvoke $r7.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i13);

        r2 = (com.android.server.am.ActiveServices$ActiveForegroundApp) $r8;

        $l4 = r2.<com.android.server.am.ActiveServices$ActiveForegroundApp: long mEndTime>;

        $b5 = $l4 cmp 0L;

        if $b5 != 0 goto label03;

        l14 = l12;

        z5 = z4;

        $z3 = r2.<com.android.server.am.ActiveServices$ActiveForegroundApp: boolean mShownWhileScreenOn>;

        if $z3 != 0 goto label06;

        r2.<com.android.server.am.ActiveServices$ActiveForegroundApp: boolean mShownWhileScreenOn> = 1;

        r2.<com.android.server.am.ActiveServices$ActiveForegroundApp: long mStartVisibleTime> = l0;

        l14 = l12;

        z5 = z4;

        goto label06;

     label03:
        $z2 = r2.<com.android.server.am.ActiveServices$ActiveForegroundApp: boolean mShownWhileScreenOn>;

        if $z2 != 0 goto label04;

        $l9 = r2.<com.android.server.am.ActiveServices$ActiveForegroundApp: long mStartVisibleTime>;

        $l8 = r2.<com.android.server.am.ActiveServices$ActiveForegroundApp: long mStartTime>;

        $b10 = $l9 cmp $l8;

        if $b10 != 0 goto label04;

        r2.<com.android.server.am.ActiveServices$ActiveForegroundApp: long mStartVisibleTime> = l0;

        r2.<com.android.server.am.ActiveServices$ActiveForegroundApp: long mEndTime> = l0;

     label04:
        $z6 = virtualinvoke r0.<com.android.server.am.ActiveServices: boolean foregroundAppShownEnoughLocked(com.android.server.am.ActiveServices$ActiveForegroundApp,long)>(r2, l0);

        if $z6 == 0 goto label05;

        $r10 = r1.<com.android.server.am.ActiveServices$ServiceMap: android.util.ArrayMap mActiveForegroundApps>;

        $r9 = r2.<com.android.server.am.ActiveServices$ActiveForegroundApp: java.lang.String mPackageName>;

        virtualinvoke $r10.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>($r9);

        r1.<com.android.server.am.ActiveServices$ServiceMap: boolean mActiveForegroundAppsChanged> = 1;

        z5 = 1;

        l14 = l12;

        goto label06;

     label05:
        l14 = l12;

        z5 = z4;

        $l6 = r2.<com.android.server.am.ActiveServices$ActiveForegroundApp: long mHideTime>;

        $b7 = $l6 cmp l12;

        if $b7 >= 0 goto label06;

        l14 = r2.<com.android.server.am.ActiveServices$ActiveForegroundApp: long mHideTime>;

        z5 = z4;

     label06:
        i13 = i13 + -1;

        l12 = l14;

        z4 = z5;

        goto label02;

     label07:
        if z4 == 0 goto label08;

        specialinvoke r0.<com.android.server.am.ActiveServices: void requestUpdateActiveForegroundAppsLocked(com.android.server.am.ActiveServices$ServiceMap,long)>(r1, 0L);

        goto label09;

     label08:
        $b3 = l12 cmp 9223372036854775807L;

        if $b3 >= 0 goto label09;

        specialinvoke r0.<com.android.server.am.ActiveServices: void requestUpdateActiveForegroundAppsLocked(com.android.server.am.ActiveServices$ServiceMap,long)>(r1, l12);

     label09:
        i11 = i11 + -1;

        goto label01;

     label10:
        return;
    }

    public void updateServiceApplicationInfoLocked(android.content.pm.ApplicationInfo)
    {
        com.android.server.am.ActiveServices r0;
        android.content.pm.ApplicationInfo r1, $r6;
        com.android.server.am.ServiceRecord r2;
        int $i0, $i1, i2, i3;
        android.util.SparseArray $r3;
        java.lang.Object $r4, $r5;
        java.lang.String $r7, $r8;
        boolean $z0;
        android.content.pm.ServiceInfo $r9;
        com.android.server.am.ActiveServices$ServiceMap r10;
        android.util.ArrayMap r11;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: android.content.pm.ApplicationInfo;

        $i0 = r1.<android.content.pm.ApplicationInfo: int uid>;

        i2 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i0);

        $r3 = r0.<com.android.server.am.ActiveServices: android.util.SparseArray mServiceMap>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i2);

        r10 = (com.android.server.am.ActiveServices$ServiceMap) $r4;

        if r10 == null goto label3;

        r11 = r10.<com.android.server.am.ActiveServices$ServiceMap: android.util.ArrayMap mServicesByInstanceName>;

        $i1 = virtualinvoke r11.<android.util.ArrayMap: int size()>();

        i3 = $i1 - 1;

     label1:
        if i3 < 0 goto label3;

        $r5 = virtualinvoke r11.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i3);

        r2 = (com.android.server.am.ServiceRecord) $r5;

        $r8 = r1.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r6 = r2.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo>;

        $r7 = $r6.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label2;

        r2.<com.android.server.am.ServiceRecord: android.content.pm.ApplicationInfo appInfo> = r1;

        $r9 = r2.<com.android.server.am.ServiceRecord: android.content.pm.ServiceInfo serviceInfo>;

        $r9.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo> = r1;

     label2:
        i3 = i3 + -1;

        goto label1;

     label3:
        return;
    }

    public void updateServiceConnectionActivitiesLocked(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ActiveServices r0;
        com.android.server.am.ProcessRecord r1, r2;
        android.util.ArraySet $r3, $r4, $r9, r10, r11;
        int $i0, i1;
        java.lang.Object $r5;
        com.android.server.am.ConnectionRecord $r6;
        com.android.server.am.AppBindRecord $r7;
        com.android.server.am.ServiceRecord $r8;
        boolean $z0;

        r0 := @this: com.android.server.am.ActiveServices;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        r10 = null;

        i1 = 0;

     label1:
        $r3 = r1.<com.android.server.am.ProcessRecord: android.util.ArraySet connections>;

        $i0 = virtualinvoke $r3.<android.util.ArraySet: int size()>();

        if i1 >= $i0 goto label6;

        $r4 = r1.<com.android.server.am.ProcessRecord: android.util.ArraySet connections>;

        $r5 = virtualinvoke $r4.<android.util.ArraySet: java.lang.Object valueAt(int)>(i1);

        $r6 = (com.android.server.am.ConnectionRecord) $r5;

        $r7 = $r6.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        $r8 = $r7.<com.android.server.am.AppBindRecord: com.android.server.am.ServiceRecord service>;

        r2 = $r8.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        r11 = r10;

        if r2 == null goto label5;

        if r2 != r1 goto label2;

        r11 = r10;

        goto label5;

     label2:
        if r10 != null goto label3;

        $r9 = new android.util.ArraySet;

        specialinvoke $r9.<android.util.ArraySet: void <init>()>();

        r11 = $r9;

        goto label4;

     label3:
        r11 = r10;

        $z0 = virtualinvoke r10.<android.util.ArraySet: boolean contains(java.lang.Object)>(r2);

        if $z0 == 0 goto label4;

        r11 = r10;

        goto label5;

     label4:
        virtualinvoke r11.<android.util.ArraySet: boolean add(java.lang.Object)>(r2);

        specialinvoke r0.<com.android.server.am.ActiveServices: boolean updateServiceClientActivitiesLocked(com.android.server.am.ProcessRecord,com.android.server.am.ConnectionRecord,boolean)>(r2, null, 0);

     label5:
        i1 = i1 + 1;

        r10 = r11;

        goto label1;

     label6:
        return;
    }

    void updateServiceGroupLocked(android.app.IServiceConnection, int, int)
    {
        com.android.server.am.ActiveServices r0;
        int i0, i1, $i2, $i3, $i4, i5;
        android.util.ArrayMap $r1;
        java.lang.Object $r2, $r9;
        java.lang.StringBuilder $r3;
        android.os.IBinder $r5, r21;
        java.lang.IllegalArgumentException $r7;
        java.lang.String $r8;
        com.android.server.am.ConnectionRecord $r10;
        com.android.server.am.AppBindRecord $r11;
        android.content.pm.ServiceInfo $r12;
        com.android.server.am.ProcessRecord $r13, $r14, $r15, $r16, $r17, $r18, $r19;
        android.app.IServiceConnection r20;
        java.util.ArrayList r22;
        com.android.server.am.ServiceRecord r23;

        r0 := @this: com.android.server.am.ActiveServices;

        r20 := @parameter0: android.app.IServiceConnection;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r21 = interfaceinvoke r20.<android.app.IServiceConnection: android.os.IBinder asBinder()>();

        $r1 = r0.<com.android.server.am.ActiveServices: android.util.ArrayMap mServiceConnections>;

        $r2 = virtualinvoke $r1.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r21);

        r22 = (java.util.ArrayList) $r2;

        if r22 == null goto label7;

        $i2 = virtualinvoke r22.<java.util.ArrayList: int size()>();

        i5 = $i2 - 1;

     label1:
        if i5 < 0 goto label6;

        $r9 = virtualinvoke r22.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        $r10 = (com.android.server.am.ConnectionRecord) $r9;

        $r11 = $r10.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        r23 = $r11.<com.android.server.am.AppBindRecord: com.android.server.am.ServiceRecord service>;

        if r23 == null goto label5;

        $r12 = r23.<com.android.server.am.ServiceRecord: android.content.pm.ServiceInfo serviceInfo>;

        $i3 = $r12.<android.content.pm.ServiceInfo: int flags>;

        $i4 = $i3 & 2;

        if $i4 == 0 goto label5;

        $r13 = r23.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r13 == null goto label3;

        if i0 <= 0 goto label2;

        $r17 = r23.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r17.<com.android.server.am.ProcessRecord: com.android.server.am.ServiceRecord connectionService> = r23;

        $r18 = r23.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r18.<com.android.server.am.ProcessRecord: int connectionGroup> = i0;

        $r19 = r23.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r19.<com.android.server.am.ProcessRecord: int connectionImportance> = i1;

        goto label5;

     label2:
        $r14 = r23.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r14.<com.android.server.am.ProcessRecord: com.android.server.am.ServiceRecord connectionService> = null;

        $r15 = r23.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r15.<com.android.server.am.ProcessRecord: int connectionGroup> = 0;

        $r16 = r23.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $r16.<com.android.server.am.ProcessRecord: int connectionImportance> = 0;

        goto label5;

     label3:
        if i0 <= 0 goto label4;

        r23.<com.android.server.am.ServiceRecord: int pendingConnectionGroup> = i0;

        r23.<com.android.server.am.ServiceRecord: int pendingConnectionImportance> = i1;

        goto label5;

     label4:
        r23.<com.android.server.am.ServiceRecord: int pendingConnectionGroup> = 0;

        r23.<com.android.server.am.ServiceRecord: int pendingConnectionImportance> = 0;

     label5:
        i5 = i5 + -1;

        goto label1;

     label6:
        return;

     label7:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not find connection for ");

        $r5 = interfaceinvoke r20.<android.app.IServiceConnection: android.os.IBinder asBinder()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r7;
    }

    public static void <clinit>()
    {
        <com.android.server.am.ActiveServices: java.lang.String TAG_SERVICE_EXECUTING> = "ActivityManager";

        <com.android.server.am.ActiveServices: java.lang.String TAG_SERVICE> = "ActivityManager";

        <com.android.server.am.ActiveServices: java.lang.String TAG_MU> = "ActivityManager_MU";

        <com.android.server.am.ActiveServices: java.lang.String TAG> = "ActivityManager";

        <com.android.server.am.ActiveServices: boolean SHOW_DUNGEON_NOTIFICATION> = 0;

        <com.android.server.am.ActiveServices: int SERVICE_TIMEOUT> = 20000;

        <com.android.server.am.ActiveServices: int SERVICE_START_FOREGROUND_TIMEOUT> = 10000;

        <com.android.server.am.ActiveServices: int SERVICE_BACKGROUND_TIMEOUT> = 200000;

        <com.android.server.am.ActiveServices: boolean LOG_SERVICE_START_STOP> = 0;

        <com.android.server.am.ActiveServices: int LAST_ANR_LIFETIME_DURATION_MSECS> = 7200000;

        <com.android.server.am.ActiveServices: int DEBUG_FGS_ENFORCE_TYPE> = 1;

        <com.android.server.am.ActiveServices: int DEBUG_FGS_ALLOW_WHILE_IN_USE> = 0;

        <com.android.server.am.ActiveServices: boolean DEBUG_DELAYED_STARTS> = 0;

        <com.android.server.am.ActiveServices: boolean DEBUG_DELAYED_SERVICE> = 0;

        return;
    }
}
