class com.android.server.am.ActivityManagerService$5 extends android.os.Handler
{
    final com.android.server.am.ActivityManagerService this$0;

    void <init>(com.android.server.am.ActivityManagerService, android.os.Looper)
    {
        com.android.server.am.ActivityManagerService$5 r0;
        com.android.server.am.ActivityManagerService r1;
        android.os.Looper r2;

        r0 := @this: com.android.server.am.ActivityManagerService$5;

        r1 := @parameter0: com.android.server.am.ActivityManagerService;

        r2 := @parameter1: android.os.Looper;

        r0.<com.android.server.am.ActivityManagerService$5: com.android.server.am.ActivityManagerService this$0> = r1;

        specialinvoke r0.<android.os.Handler: void <init>(android.os.Looper)>(r2);

        return;
    }

    static boolean lambda$handleMessage$0(com.android.internal.os.ProcessCpuTracker$Stats)
    {
        com.android.internal.os.ProcessCpuTracker$Stats r0;
        long $l0;
        byte $b1;
        int $i2;
        boolean z0;

        r0 := @parameter0: com.android.internal.os.ProcessCpuTracker$Stats;

        $l0 = r0.<com.android.internal.os.ProcessCpuTracker$Stats: long vsize>;

        $b1 = $l0 cmp 0L;

        if $b1 <= 0 goto label1;

        $i2 = r0.<com.android.internal.os.ProcessCpuTracker$Stats: int uid>;

        if $i2 >= 10000 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public void handleMessage(android.os.Message)
    {
        com.android.server.am.ActivityManagerService$5 r0, r58;
        long l0, l1, $l7, $l9, $l10, $l11, $l12, $l13, $l15, $l17, $l18, $l20, $l21, $l22, $l23, $l24, $l28, l36, l37, l38, l39, l43, l44, l46, l47, l48;
        boolean z0, $z1, $z2;
        int i2, i3, $i4, $i6, $i14, $i25, $i26, $i27, i31, i32, i34, i35, i40, $i41, i42, i45;
        com.android.server.am.ActivityManagerService $r1, $r2, $r6, $r9, $r10, $r17, $r19, $r20, $r21, $r24, $r26, $r27, $r33, $r34, $r35, $r37, r49, r54, r59, $r60, r65;
        java.util.ArrayList $r3, $r18, $r61;
        java.lang.Object $r4, $r29, $r31;
        android.app.IApplicationThread $r5, $r7;
        byte $b5, $b8, $b16;
        com.android.server.am.ProcessList$ProcStateMemTracker $r8, $r64, $r67;
        java.lang.String $r16;
        com.android.server.am.'-$$Lambda$ActivityManagerService$5$BegFiGFfKLYS7VRmiWluczgOC5k' $r22;
        com.android.internal.os.ProcessCpuTracker $r23, r50;
        com.android.server.am.ProcessStatsService $r25;
        com.android.server.am.ActivityManagerService$PidMap $r28, r52;
        com.android.internal.os.ProcessCpuTracker$Stats $r30, $r32;
        java.util.concurrent.atomic.AtomicInteger $r36, $r38;
        java.lang.Throwable $r39, $r40, $r41, $r42, $r43, $r44, $r45, r66;
        android.os.Message r46;
        com.android.internal.util.MemInfoReader r48, r70;
        java.util.List r51;
        long[] r57;
        com.android.server.am.ProcessRecord r63;
        java.lang.StringBuilder r71;
        com.android.internal.os.ProcessCpuTracker$FilterStats r72;

        r0 := @this: com.android.server.am.ActivityManagerService$5;

        r46 := @parameter0: android.os.Message;

        i31 = r46.<android.os.Message: int what>;

        if i31 == 1 goto label04;

        if i31 == 2 goto label02;

        if i31 == 3 goto label01;

        goto label03;

     label01:
        $r35 = r0.<com.android.server.am.ActivityManagerService$5: com.android.server.am.ActivityManagerService this$0>;

        $r36 = staticinvoke <com.android.server.am.ActivityManagerService: java.util.concurrent.atomic.AtomicInteger access$900(com.android.server.am.ActivityManagerService)>($r35);

        i32 = virtualinvoke $r36.<java.util.concurrent.atomic.AtomicInteger: int decrementAndGet()>();

        if i32 > 0 goto label03;

        if i32 >= 0 goto label03;

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("ActivityManager", "Activity start nesting undercount!");

        $r37 = r0.<com.android.server.am.ActivityManagerService$5: com.android.server.am.ActivityManagerService this$0>;

        $r38 = staticinvoke <com.android.server.am.ActivityManagerService: java.util.concurrent.atomic.AtomicInteger access$900(com.android.server.am.ActivityManagerService)>($r37);

        virtualinvoke $r38.<java.util.concurrent.atomic.AtomicInteger: int incrementAndGet()>();

        goto label03;

     label02:
        $r34 = r0.<com.android.server.am.ActivityManagerService$5: com.android.server.am.ActivityManagerService this$0>;

        staticinvoke <com.android.server.am.ActivityManagerService: void access$800(com.android.server.am.ActivityManagerService)>($r34);

     label03:
        return;

     label04:
        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r48 = null;

        r49 = r0.<com.android.server.am.ActivityManagerService$5: com.android.server.am.ActivityManagerService this$0>;

        entermonitor r49;

     label05:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r1 = r0.<com.android.server.am.ActivityManagerService$5: com.android.server.am.ActivityManagerService this$0>;

        z0 = $r1.<com.android.server.am.ActivityManagerService: boolean mFullPssPending>;

     label06:
        if z0 == 0 goto label08;

     label07:
        $r33 = r0.<com.android.server.am.ActivityManagerService$5: com.android.server.am.ActivityManagerService this$0>;

        $r33.<com.android.server.am.ActivityManagerService: boolean mFullPssPending> = 0;

        r70 = new com.android.internal.util.MemInfoReader;

        r48 = r70;

        specialinvoke r70.<com.android.internal.util.MemInfoReader: void <init>()>();

     label08:
        exitmonitor r49;

     label09:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        if r48 == null goto label30;

        $r19 = r0.<com.android.server.am.ActivityManagerService$5: com.android.server.am.ActivityManagerService this$0>;

        virtualinvoke $r19.<com.android.server.am.ActivityManagerService: void updateCpuStatsNow()>();

        $r20 = r0.<com.android.server.am.ActivityManagerService$5: com.android.server.am.ActivityManagerService this$0>;

        r50 = $r20.<com.android.server.am.ActivityManagerService: com.android.internal.os.ProcessCpuTracker mProcessCpuTracker>;

        entermonitor r50;

     label10:
        $r21 = r0.<com.android.server.am.ActivityManagerService$5: com.android.server.am.ActivityManagerService this$0>;

        $r23 = $r21.<com.android.server.am.ActivityManagerService: com.android.internal.os.ProcessCpuTracker mProcessCpuTracker>;

        $r22 = <com.android.server.am._$$Lambda$ActivityManagerService$5$BegFiGFfKLYS7VRmiWluczgOC5k: com.android.server.am.'-$$Lambda$ActivityManagerService$5$BegFiGFfKLYS7VRmiWluczgOC5k' INSTANCE>;

        r72 = (com.android.internal.os.ProcessCpuTracker$FilterStats) $r22;

        r51 = virtualinvoke $r23.<com.android.internal.os.ProcessCpuTracker: java.util.List getStats(com.android.internal.os.ProcessCpuTracker$FilterStats)>(r72);

        exitmonitor r50;

     label11:
        i34 = interfaceinvoke r51.<java.util.List: int size()>();

        i35 = 0;

        l36 = 0L;

     label12:
        if i35 >= i34 goto label21;

        $r26 = r0.<com.android.server.am.ActivityManagerService$5: com.android.server.am.ActivityManagerService this$0>;

        r52 = $r26.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        entermonitor r52;

     label13:
        $r27 = r0.<com.android.server.am.ActivityManagerService$5: com.android.server.am.ActivityManagerService this$0>;

        $r28 = $r27.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        $r29 = interfaceinvoke r51.<java.util.List: java.lang.Object get(int)>(i35);

        $r30 = (com.android.internal.os.ProcessCpuTracker$Stats) $r29;

        $i25 = $r30.<com.android.internal.os.ProcessCpuTracker$Stats: int pid>;

        $i26 = virtualinvoke $r28.<com.android.server.am.ActivityManagerService$PidMap: int indexOfKey(int)>($i25);

        if $i26 < 0 goto label15;

        exitmonitor r52;

     label14:
        goto label17;

     label15:
        exitmonitor r52;

     label16:
        $r31 = interfaceinvoke r51.<java.util.List: java.lang.Object get(int)>(i35);

        $r32 = (com.android.internal.os.ProcessCpuTracker$Stats) $r31;

        $i27 = $r32.<com.android.internal.os.ProcessCpuTracker$Stats: int pid>;

        $l28 = staticinvoke <android.os.Debug: long getPss(int,long[],long[])>($i27, null, null);

        l36 = l36 + $l28;

     label17:
        i35 = i35 + 1;

        goto label12;

     label18:
        $r42 := @caughtexception;

     label19:
        exitmonitor r52;

     label20:
        throw $r42;

     label21:
        virtualinvoke r48.<com.android.internal.util.MemInfoReader: void readMemInfo()>();

        r54 = r0.<com.android.server.am.ActivityManagerService$5: com.android.server.am.ActivityManagerService this$0>;

        entermonitor r54;

     label22:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        l37 = virtualinvoke r48.<com.android.internal.util.MemInfoReader: long getCachedSizeKb()>();

        l38 = virtualinvoke r48.<com.android.internal.util.MemInfoReader: long getFreeSizeKb()>();

        l1 = virtualinvoke r48.<com.android.internal.util.MemInfoReader: long getZramTotalSizeKb()>();

        l39 = virtualinvoke r48.<com.android.internal.util.MemInfoReader: long getKernelUsedSizeKb()>();

        $l24 = l37 * 1024L;

        $l23 = l38 * 1024L;

        $l22 = l1 * 1024L;

        $l21 = l39 * 1024L;

        $l20 = l36 * 1024L;

        staticinvoke <com.android.server.am.EventLogTags: void writeAmMeminfo(long,long,long,long,long)>($l24, $l23, $l22, $l21, $l20);

        $r24 = r0.<com.android.server.am.ActivityManagerService$5: com.android.server.am.ActivityManagerService this$0>;

        $r25 = $r24.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        virtualinvoke $r25.<com.android.server.am.ProcessStatsService: void addSysMemUsageLocked(long,long,long,long,long)>(l37, l38, l1, l39, l36);

        exitmonitor r54;

     label23:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        goto label30;

     label24:
        $r45 := @caughtexception;

     label25:
        exitmonitor r54;

     label26:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r45;

     label27:
        $r40 := @caughtexception;

     label28:
        exitmonitor r50;

     label29:
        throw $r40;

     label30:
        r57 = newarray (long)[3];

        i40 = 0;

        r58 = r0;

     label31:
        r59 = r58.<com.android.server.am.ActivityManagerService$5: com.android.server.am.ActivityManagerService this$0>;

        entermonitor r59;

     label32:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r60 = r58.<com.android.server.am.ActivityManagerService$5: com.android.server.am.ActivityManagerService this$0>;

        $r61 = $r60.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingPssProcesses>;

        $i41 = virtualinvoke $r61.<java.util.ArrayList: int size()>();

        if $i41 > 0 goto label38;

        $r10 = r58.<com.android.server.am.ActivityManagerService$5: com.android.server.am.ActivityManagerService this$0>;

        $z2 = $r10.<com.android.server.am.ActivityManagerService: boolean mTestPssMode>;

        if $z2 != 0 goto label34;

     label33:
        goto label36;

     label34:
        r71 = new java.lang.StringBuilder;

        specialinvoke r71.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Collected pss of ");

        virtualinvoke r71.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i40);

        virtualinvoke r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" processes in ");

        $l17 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l18 = $l17 - l0;

        virtualinvoke r71.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l18);

        virtualinvoke r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms");

        $r16 = virtualinvoke r71.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("ActivityManager", $r16);

     label35:
        goto label33;

     label36:
        $r17 = r58.<com.android.server.am.ActivityManagerService$5: com.android.server.am.ActivityManagerService this$0>;

        $r18 = $r17.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingPssProcesses>;

        virtualinvoke $r18.<java.util.ArrayList: void clear()>();

        exitmonitor r59;

     label37:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label38:
        $r2 = r58.<com.android.server.am.ActivityManagerService$5: com.android.server.am.ActivityManagerService this$0>;

        $r3 = $r2.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingPssProcesses>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object remove(int)>(0);

        r63 = (com.android.server.am.ProcessRecord) $r4;

        i42 = r63.<com.android.server.am.ProcessRecord: int pssProcState>;

        i2 = r63.<com.android.server.am.ProcessRecord: int pssStatType>;

        l43 = r63.<com.android.server.am.ProcessRecord: long lastPssTime>;

        l44 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r5 = r63.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r5 == null goto label42;

        $i14 = r63.<com.android.server.am.ProcessRecord: int setProcState>;

        if i42 != $i14 goto label42;

     label39:
        $l15 = l43 + 1000L;

        $b16 = $l15 cmp l44;

        if $b16 >= 0 goto label42;

     label40:
        i45 = r63.<com.android.server.am.ProcessRecord: int pid>;

     label41:
        goto label44;

     label42:
        $r64 = r63.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessList$ProcStateMemTracker procStateMemTracker>;

        staticinvoke <com.android.server.am.ProcessList: void abortNextPssTime(com.android.server.am.ProcessList$ProcStateMemTracker)>($r64);

     label43:
        r63 = null;

        i45 = 0;

     label44:
        exitmonitor r59;

     label45:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        if r63 == null goto label66;

        l46 = staticinvoke <android.os.SystemClock: long currentThreadTimeMillis()>();

        $r6 = r58.<com.android.server.am.ActivityManagerService$5: com.android.server.am.ActivityManagerService this$0>;

        $i4 = r63.<com.android.server.am.ProcessRecord: int uid>;

        $z1 = virtualinvoke $r6.<com.android.server.am.ActivityManagerService: boolean isCameraActiveForUid(int)>($i4);

        if $z1 == 0 goto label46;

        l47 = 0L;

        goto label47;

     label46:
        l47 = staticinvoke <android.os.Debug: long getPss(int,long[],long[])>(i45, r57, null);

     label47:
        l48 = staticinvoke <android.os.SystemClock: long currentThreadTimeMillis()>();

        r65 = r58.<com.android.server.am.ActivityManagerService$5: com.android.server.am.ActivityManagerService this$0>;

        entermonitor r65;

     label48:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

     label49:
        $b5 = l47 cmp 0L;

        if $b5 == 0 goto label60;

     label50:
        $r7 = r63.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r7 == null goto label60;

        $i6 = r63.<com.android.server.am.ProcessRecord: int setProcState>;

        if $i6 != i42 goto label60;

        i3 = r63.<com.android.server.am.ProcessRecord: int pid>;

     label51:
        if i3 != i45 goto label60;

     label52:
        $l7 = r63.<com.android.server.am.ProcessRecord: long lastPssTime>;

        $b8 = $l7 cmp l43;

        if $b8 != 0 goto label58;

     label53:
        i40 = i40 + 1;

     label54:
        $r8 = r63.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessList$ProcStateMemTracker procStateMemTracker>;

        staticinvoke <com.android.server.am.ProcessList: void commitNextPssTime(com.android.server.am.ProcessList$ProcStateMemTracker)>($r8);

     label55:
        r58 = r0;

     label56:
        $r9 = r0.<com.android.server.am.ActivityManagerService$5: com.android.server.am.ActivityManagerService this$0>;

        $l9 = r57[0];

        $l10 = r57[1];

        $l11 = r57[2];

        $l12 = l48 - l46;

        $l13 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        virtualinvoke $r9.<com.android.server.am.ActivityManagerService: void recordPssSampleLocked(com.android.server.am.ProcessRecord,int,long,long,long,long,int,long,long)>(r63, i42, l47, $l9, $l10, $l11, i2, $l12, $l13);

     label57:
        goto label61;

     label58:
        r58 = r0;

        goto label60;

     label59:
        $r43 := @caughtexception;

        r66 = $r43;

        goto label64;

     label60:
        $r67 = r63.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessList$ProcStateMemTracker procStateMemTracker>;

        staticinvoke <com.android.server.am.ProcessList: void abortNextPssTime(com.android.server.am.ProcessList$ProcStateMemTracker)>($r67);

     label61:
        exitmonitor r65;

     label62:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        goto label66;

     label63:
        $r39 := @caughtexception;

        r66 = $r39;

     label64:
        exitmonitor r65;

     label65:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw r66;

     label66:
        goto label31;

     label67:
        $r41 := @caughtexception;

     label68:
        exitmonitor r59;

     label69:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r41;

     label70:
        $r44 := @caughtexception;

     label71:
        exitmonitor r49;

     label72:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r44;

        catch java.lang.Throwable from label05 to label06 with label70;
        catch java.lang.Throwable from label07 to label08 with label70;
        catch java.lang.Throwable from label08 to label09 with label70;
        catch java.lang.Throwable from label10 to label11 with label27;
        catch java.lang.Throwable from label13 to label14 with label18;
        catch java.lang.Throwable from label15 to label16 with label18;
        catch java.lang.Throwable from label19 to label20 with label18;
        catch java.lang.Throwable from label22 to label23 with label24;
        catch java.lang.Throwable from label25 to label26 with label24;
        catch java.lang.Throwable from label28 to label29 with label27;
        catch java.lang.Throwable from label32 to label33 with label67;
        catch java.lang.Throwable from label34 to label35 with label67;
        catch java.lang.Throwable from label36 to label37 with label67;
        catch java.lang.Throwable from label38 to label39 with label67;
        catch java.lang.Throwable from label40 to label41 with label67;
        catch java.lang.Throwable from label42 to label43 with label67;
        catch java.lang.Throwable from label44 to label45 with label67;
        catch java.lang.Throwable from label48 to label49 with label63;
        catch java.lang.Throwable from label50 to label51 with label63;
        catch java.lang.Throwable from label52 to label53 with label59;
        catch java.lang.Throwable from label54 to label55 with label59;
        catch java.lang.Throwable from label56 to label57 with label63;
        catch java.lang.Throwable from label60 to label61 with label63;
        catch java.lang.Throwable from label61 to label62 with label63;
        catch java.lang.Throwable from label64 to label65 with label63;
        catch java.lang.Throwable from label68 to label69 with label67;
        catch java.lang.Throwable from label71 to label72 with label70;
    }
}
