class com.android.server.am.ActivityManagerService$8 extends java.lang.Thread
{
    final com.android.server.am.ActivityManagerService this$0;

    void <init>(com.android.server.am.ActivityManagerService, java.lang.String)
    {
        com.android.server.am.ActivityManagerService$8 r0;
        com.android.server.am.ActivityManagerService r1;
        java.lang.String r2;

        r0 := @this: com.android.server.am.ActivityManagerService$8;

        r1 := @parameter0: com.android.server.am.ActivityManagerService;

        r2 := @parameter1: java.lang.String;

        r0.<com.android.server.am.ActivityManagerService$8: com.android.server.am.ActivityManagerService this$0> = r1;

        specialinvoke r0.<java.lang.Thread: void <init>(java.lang.String)>(r2);

        return;
    }

    public void run()
    {
        com.android.server.am.ActivityManagerService$8 r0;
        com.android.internal.os.ProcessCpuTracker r1, $r6;
        long l0, l1, $l2, $l3, $l4, $l5, l9, l10;
        com.android.server.am.ActivityManagerService $r2, $r3, $r5, $r7, $r9, $r10, $r11;
        java.util.concurrent.CountDownLatch $r4;
        java.util.concurrent.atomic.AtomicLong $r8;
        byte $b6, $b7;
        java.util.concurrent.atomic.AtomicBoolean $r12;
        java.lang.Exception $r13;
        java.lang.Throwable $r14, $r15, $r16, $r17, r21;

        r0 := @this: com.android.server.am.ActivityManagerService$8;

        $r2 = r0.<com.android.server.am.ActivityManagerService$8: com.android.server.am.ActivityManagerService this$0>;

        r1 = $r2.<com.android.server.am.ActivityManagerService: com.android.internal.os.ProcessCpuTracker mProcessCpuTracker>;

        entermonitor r1;

     label01:
        $r3 = r0.<com.android.server.am.ActivityManagerService$8: com.android.server.am.ActivityManagerService this$0>;

        $r4 = $r3.<com.android.server.am.ActivityManagerService: java.util.concurrent.CountDownLatch mProcessCpuInitLatch>;

        virtualinvoke $r4.<java.util.concurrent.CountDownLatch: void countDown()>();

        $r5 = r0.<com.android.server.am.ActivityManagerService$8: com.android.server.am.ActivityManagerService this$0>;

        $r6 = $r5.<com.android.server.am.ActivityManagerService: com.android.internal.os.ProcessCpuTracker mProcessCpuTracker>;

        virtualinvoke $r6.<com.android.internal.os.ProcessCpuTracker: void init()>();

        exitmonitor r1;

     label02:
        entermonitor r0;

     label03:
        l9 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r7 = r0.<com.android.server.am.ActivityManagerService$8: com.android.server.am.ActivityManagerService this$0>;

        $r8 = $r7.<com.android.server.am.ActivityManagerService: java.util.concurrent.atomic.AtomicLong mLastCpuTime>;

        $l2 = virtualinvoke $r8.<java.util.concurrent.atomic.AtomicLong: long get()>();

        $l3 = $l2 + 268435455L;

        l0 = $l3 - l9;

        $r9 = r0.<com.android.server.am.ActivityManagerService$8: com.android.server.am.ActivityManagerService this$0>;

        $l4 = $r9.<com.android.server.am.ActivityManagerService: long mLastWriteTime>;

        $l5 = $l4 + 1800000L;

        l1 = $l5 - l9;

     label04:
        l10 = l0;

        $b6 = l1 cmp l0;

        if $b6 >= 0 goto label05;

        l10 = l1;

     label05:
        $b7 = l10 cmp 0L;

        if $b7 <= 0 goto label07;

     label06:
        $r11 = r0.<com.android.server.am.ActivityManagerService$8: com.android.server.am.ActivityManagerService this$0>;

        $r12 = $r11.<com.android.server.am.ActivityManagerService: java.util.concurrent.atomic.AtomicBoolean mProcessCpuMutexFree>;

        virtualinvoke $r12.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(1);

        virtualinvoke r0.<java.lang.Object: void wait(long)>(l10);

     label07:
        exitmonitor r0;

     label08:
        goto label14;

     label09:
        $r14 := @caughtexception;

     label10:
        exitmonitor r0;

     label11:
        throw $r14;

     label12:
        $r13 := @caughtexception;

        goto label16;

     label13:
        $r15 := @caughtexception;

     label14:
        $r10 = r0.<com.android.server.am.ActivityManagerService$8: com.android.server.am.ActivityManagerService this$0>;

        virtualinvoke $r10.<com.android.server.am.ActivityManagerService: void updateCpuStatsNow()>();

     label15:
        goto label17;

     label16:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", "Unexpected exception collecting process stats", $r13);

     label17:
        goto label02;

     label18:
        $r17 := @caughtexception;

        r21 = $r17;

     label19:
        exitmonitor r1;

     label20:
        throw r21;

     label21:
        $r16 := @caughtexception;

        r21 = $r16;

        goto label19;

        catch java.lang.Throwable from label01 to label02 with label18;
        catch java.lang.InterruptedException from label02 to label03 with label13;
        catch java.lang.Exception from label02 to label03 with label12;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
        catch java.lang.InterruptedException from label11 to label12 with label13;
        catch java.lang.Exception from label11 to label12 with label12;
        catch java.lang.Exception from label14 to label15 with label12;
        catch java.lang.Throwable from label19 to label20 with label21;
    }
}
