class com.android.server.am.ActivityManagerService$CpuBinder$1 extends java.lang.Object implements com.android.server.utils.PriorityDump$PriorityDumper
{
    final com.android.server.am.ActivityManagerService$CpuBinder this$0;

    void <init>(com.android.server.am.ActivityManagerService$CpuBinder)
    {
        com.android.server.am.ActivityManagerService$CpuBinder$1 r0;
        com.android.server.am.ActivityManagerService$CpuBinder r1;

        r0 := @this: com.android.server.am.ActivityManagerService$CpuBinder$1;

        r1 := @parameter0: com.android.server.am.ActivityManagerService$CpuBinder;

        r0.<com.android.server.am.ActivityManagerService$CpuBinder$1: com.android.server.am.ActivityManagerService$CpuBinder this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void dumpCritical(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[], boolean)
    {
        com.android.server.am.ActivityManagerService$CpuBinder$1 r0;
        java.io.PrintWriter r1;
        boolean z0, $z1;
        com.android.server.am.ActivityManagerService$CpuBinder $r2, $r5, $r7, $r11, $r15;
        com.android.server.am.ActivityManagerService $r3, $r6, $r8, $r12, $r16;
        android.content.Context $r4;
        com.android.internal.os.ProcessCpuTracker $r9, $r13, $r17, r21;
        java.lang.String $r10, $r14;
        long $l0;
        java.lang.Throwable $r18;
        java.io.FileDescriptor r19;
        java.lang.String[] r20;

        r0 := @this: com.android.server.am.ActivityManagerService$CpuBinder$1;

        r19 := @parameter0: java.io.FileDescriptor;

        r1 := @parameter1: java.io.PrintWriter;

        r20 := @parameter2: java.lang.String[];

        z0 := @parameter3: boolean;

        $r2 = r0.<com.android.server.am.ActivityManagerService$CpuBinder$1: com.android.server.am.ActivityManagerService$CpuBinder this$0>;

        $r3 = $r2.<com.android.server.am.ActivityManagerService$CpuBinder: com.android.server.am.ActivityManagerService mActivityManagerService>;

        $r4 = $r3.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $z1 = staticinvoke <com.android.internal.util.DumpUtils: boolean checkDumpAndUsageStatsPermission(android.content.Context,java.lang.String,java.io.PrintWriter)>($r4, "cpuinfo", r1);

        if $z1 != 0 goto label1;

        return;

     label1:
        $r5 = r0.<com.android.server.am.ActivityManagerService$CpuBinder$1: com.android.server.am.ActivityManagerService$CpuBinder this$0>;

        $r6 = $r5.<com.android.server.am.ActivityManagerService$CpuBinder: com.android.server.am.ActivityManagerService mActivityManagerService>;

        r21 = $r6.<com.android.server.am.ActivityManagerService: com.android.internal.os.ProcessCpuTracker mProcessCpuTracker>;

        entermonitor r21;

        if z0 == 0 goto label4;

     label2:
        $r15 = r0.<com.android.server.am.ActivityManagerService$CpuBinder$1: com.android.server.am.ActivityManagerService$CpuBinder this$0>;

        $r16 = $r15.<com.android.server.am.ActivityManagerService$CpuBinder: com.android.server.am.ActivityManagerService mActivityManagerService>;

        $r17 = $r16.<com.android.server.am.ActivityManagerService: com.android.internal.os.ProcessCpuTracker mProcessCpuTracker>;

        virtualinvoke $r17.<com.android.internal.os.ProcessCpuTracker: void dumpProto(java.io.FileDescriptor)>(r19);

        exitmonitor r21;

     label3:
        return;

     label4:
        $r7 = r0.<com.android.server.am.ActivityManagerService$CpuBinder$1: com.android.server.am.ActivityManagerService$CpuBinder this$0>;

        $r8 = $r7.<com.android.server.am.ActivityManagerService$CpuBinder: com.android.server.am.ActivityManagerService mActivityManagerService>;

        $r9 = $r8.<com.android.server.am.ActivityManagerService: com.android.internal.os.ProcessCpuTracker mProcessCpuTracker>;

        $r10 = virtualinvoke $r9.<com.android.internal.os.ProcessCpuTracker: java.lang.String printCurrentLoad()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r10);

        $r11 = r0.<com.android.server.am.ActivityManagerService$CpuBinder$1: com.android.server.am.ActivityManagerService$CpuBinder this$0>;

        $r12 = $r11.<com.android.server.am.ActivityManagerService$CpuBinder: com.android.server.am.ActivityManagerService mActivityManagerService>;

        $r13 = $r12.<com.android.server.am.ActivityManagerService: com.android.internal.os.ProcessCpuTracker mProcessCpuTracker>;

        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r14 = virtualinvoke $r13.<com.android.internal.os.ProcessCpuTracker: java.lang.String printCurrentState(long)>($l0);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r14);

        exitmonitor r21;

     label5:
        return;

     label6:
        $r18 := @caughtexception;

     label7:
        exitmonitor r21;

     label8:
        throw $r18;

        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }
}
