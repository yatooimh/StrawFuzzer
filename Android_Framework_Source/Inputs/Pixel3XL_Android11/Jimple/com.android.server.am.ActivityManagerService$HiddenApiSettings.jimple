class com.android.server.am.ActivityManagerService$HiddenApiSettings extends android.database.ContentObserver implements android.provider.DeviceConfig$OnPropertiesChangedListener
{
    public static final java.lang.String HIDDEN_API_ACCESS_LOG_SAMPLING_RATE;
    public static final java.lang.String HIDDEN_API_ACCESS_STATSLOG_SAMPLING_RATE;
    private boolean mBlacklistDisabled;
    private final android.content.Context mContext;
    private java.util.List mExemptions;
    private java.lang.String mExemptionsStr;
    private int mLogSampleRate;
    private int mPolicy;
    private int mStatslogSampleRate;

    public void <init>(android.os.Handler, android.content.Context)
    {
        com.android.server.am.ActivityManagerService$HiddenApiSettings r0;
        android.os.Handler r1;
        android.content.Context r2;
        java.util.List $r3;

        r0 := @this: com.android.server.am.ActivityManagerService$HiddenApiSettings;

        r1 := @parameter0: android.os.Handler;

        r2 := @parameter1: android.content.Context;

        specialinvoke r0.<android.database.ContentObserver: void <init>(android.os.Handler)>(r1);

        $r3 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r0.<com.android.server.am.ActivityManagerService$HiddenApiSettings: java.util.List mExemptions> = $r3;

        r0.<com.android.server.am.ActivityManagerService$HiddenApiSettings: int mLogSampleRate> = -1;

        r0.<com.android.server.am.ActivityManagerService$HiddenApiSettings: int mStatslogSampleRate> = -1;

        r0.<com.android.server.am.ActivityManagerService$HiddenApiSettings: int mPolicy> = -1;

        r0.<com.android.server.am.ActivityManagerService$HiddenApiSettings: android.content.Context mContext> = r2;

        return;
    }

    private int getValidEnforcementPolicy(java.lang.String)
    {
        com.android.server.am.ActivityManagerService$HiddenApiSettings r0;
        java.lang.String r1;
        int i0;
        android.content.Context $r2;
        android.content.ContentResolver $r3;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityManagerService$HiddenApiSettings;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.am.ActivityManagerService$HiddenApiSettings: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        i0 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>($r3, r1, -1);

        $z0 = staticinvoke <android.content.pm.ApplicationInfo: boolean isValidHiddenApiEnforcementPolicy(int)>(i0);

        if $z0 == 0 goto label1;

        return i0;

     label1:
        return -1;
    }

    private void update()
    {
        com.android.server.am.ActivityManagerService$HiddenApiSettings r0;
        android.content.Context $r1;
        android.content.ContentResolver $r2;
        java.lang.String $r3, $r4, r8;
        boolean $z0, $z1, $z2, $z3;
        java.lang.String[] $r5;
        java.util.List $r6, $r7, r9, $r11;
        android.os.ZygoteProcess $r10;
        int $i1;

        r0 := @this: com.android.server.am.ActivityManagerService$HiddenApiSettings;

        $r1 = r0.<com.android.server.am.ActivityManagerService$HiddenApiSettings: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r8 = staticinvoke <android.provider.Settings$Global: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r2, "hidden_api_blacklist_exemptions");

        $r3 = r0.<com.android.server.am.ActivityManagerService$HiddenApiSettings: java.lang.String mExemptionsStr>;

        $z0 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>(r8, $r3);

        if $z0 != 0 goto label5;

        r0.<com.android.server.am.ActivityManagerService$HiddenApiSettings: java.lang.String mExemptionsStr> = r8;

        $r4 = "*";

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r8);

        if $z1 == 0 goto label1;

        r0.<com.android.server.am.ActivityManagerService$HiddenApiSettings: boolean mBlacklistDisabled> = 1;

        $r7 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r0.<com.android.server.am.ActivityManagerService$HiddenApiSettings: java.util.List mExemptions> = $r7;

        goto label4;

     label1:
        r0.<com.android.server.am.ActivityManagerService$HiddenApiSettings: boolean mBlacklistDisabled> = 0;

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r8);

        if $z2 == 0 goto label2;

        r9 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        goto label3;

     label2:
        $r5 = virtualinvoke r8.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        r9 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r5);

     label3:
        r0.<com.android.server.am.ActivityManagerService$HiddenApiSettings: java.util.List mExemptions> = r9;

     label4:
        $r10 = <android.os.Process: android.os.ZygoteProcess ZYGOTE_PROCESS>;

        $r11 = r0.<com.android.server.am.ActivityManagerService$HiddenApiSettings: java.util.List mExemptions>;

        $z3 = virtualinvoke $r10.<android.os.ZygoteProcess: boolean setApiBlacklistExemptions(java.util.List)>($r11);

        if $z3 != 0 goto label5;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ActivityManager", "Failed to set API blacklist exemptions!");

        $r6 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r0.<com.android.server.am.ActivityManagerService$HiddenApiSettings: java.util.List mExemptions> = $r6;

     label5:
        $i1 = specialinvoke r0.<com.android.server.am.ActivityManagerService$HiddenApiSettings: int getValidEnforcementPolicy(java.lang.String)>("hidden_api_policy");

        r0.<com.android.server.am.ActivityManagerService$HiddenApiSettings: int mPolicy> = $i1;

        return;
    }

    int getPolicy()
    {
        com.android.server.am.ActivityManagerService$HiddenApiSettings r0;
        int $i0;

        r0 := @this: com.android.server.am.ActivityManagerService$HiddenApiSettings;

        $i0 = r0.<com.android.server.am.ActivityManagerService$HiddenApiSettings: int mPolicy>;

        return $i0;
    }

    boolean isDisabled()
    {
        com.android.server.am.ActivityManagerService$HiddenApiSettings r0;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityManagerService$HiddenApiSettings;

        $z0 = r0.<com.android.server.am.ActivityManagerService$HiddenApiSettings: boolean mBlacklistDisabled>;

        return $z0;
    }

    public void onChange(boolean)
    {
        com.android.server.am.ActivityManagerService$HiddenApiSettings r0;
        boolean z0;

        r0 := @this: com.android.server.am.ActivityManagerService$HiddenApiSettings;

        z0 := @parameter0: boolean;

        specialinvoke r0.<com.android.server.am.ActivityManagerService$HiddenApiSettings: void update()>();

        return;
    }

    public void onPropertiesChanged(android.provider.DeviceConfig$Properties)
    {
        com.android.server.am.ActivityManagerService$HiddenApiSettings r0;
        android.provider.DeviceConfig$Properties r1;
        int $i0, $i1, $i2, $i3, i4, i5, i6, i7;
        android.os.ZygoteProcess $r2, $r3;

        r0 := @this: com.android.server.am.ActivityManagerService$HiddenApiSettings;

        r1 := @parameter0: android.provider.DeviceConfig$Properties;

        i4 = virtualinvoke r1.<android.provider.DeviceConfig$Properties: int getInt(java.lang.String,int)>("hidden_api_access_log_sampling_rate", 0);

        if i4 < 0 goto label1;

        i5 = i4;

        if i4 <= 65536 goto label2;

     label1:
        i5 = -1;

     label2:
        if i5 == -1 goto label3;

        $i2 = r0.<com.android.server.am.ActivityManagerService$HiddenApiSettings: int mLogSampleRate>;

        if i5 == $i2 goto label3;

        r0.<com.android.server.am.ActivityManagerService$HiddenApiSettings: int mLogSampleRate> = i5;

        $r3 = <android.os.Process: android.os.ZygoteProcess ZYGOTE_PROCESS>;

        $i3 = r0.<com.android.server.am.ActivityManagerService$HiddenApiSettings: int mLogSampleRate>;

        virtualinvoke $r3.<android.os.ZygoteProcess: void setHiddenApiAccessLogSampleRate(int)>($i3);

     label3:
        i6 = virtualinvoke r1.<android.provider.DeviceConfig$Properties: int getInt(java.lang.String,int)>("hidden_api_access_statslog_sampling_rate", 0);

        if i6 < 0 goto label4;

        i7 = i6;

        if i6 <= 65536 goto label5;

     label4:
        i7 = -1;

     label5:
        if i7 == -1 goto label6;

        $i0 = r0.<com.android.server.am.ActivityManagerService$HiddenApiSettings: int mStatslogSampleRate>;

        if i7 == $i0 goto label6;

        r0.<com.android.server.am.ActivityManagerService$HiddenApiSettings: int mStatslogSampleRate> = i7;

        $r2 = <android.os.Process: android.os.ZygoteProcess ZYGOTE_PROCESS>;

        $i1 = r0.<com.android.server.am.ActivityManagerService$HiddenApiSettings: int mStatslogSampleRate>;

        virtualinvoke $r2.<android.os.ZygoteProcess: void setHiddenApiAccessStatslogSampleRate(int)>($i1);

     label6:
        return;
    }

    public void registerObserver()
    {
        com.android.server.am.ActivityManagerService$HiddenApiSettings r0;
        android.content.Context $r1, $r4, $r7;
        android.content.ContentResolver $r2, $r5;
        android.net.Uri $r3, $r6;
        java.util.concurrent.Executor $r8;

        r0 := @this: com.android.server.am.ActivityManagerService$HiddenApiSettings;

        $r1 = r0.<com.android.server.am.ActivityManagerService$HiddenApiSettings: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r3 = staticinvoke <android.provider.Settings$Global: android.net.Uri getUriFor(java.lang.String)>("hidden_api_blacklist_exemptions");

        virtualinvoke $r2.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver)>($r3, 0, r0);

        $r4 = r0.<com.android.server.am.ActivityManagerService$HiddenApiSettings: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r6 = staticinvoke <android.provider.Settings$Global: android.net.Uri getUriFor(java.lang.String)>("hidden_api_policy");

        virtualinvoke $r5.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver)>($r6, 0, r0);

        $r7 = r0.<com.android.server.am.ActivityManagerService$HiddenApiSettings: android.content.Context mContext>;

        $r8 = virtualinvoke $r7.<android.content.Context: java.util.concurrent.Executor getMainExecutor()>();

        staticinvoke <android.provider.DeviceConfig: void addOnPropertiesChangedListener(java.lang.String,java.util.concurrent.Executor,android.provider.DeviceConfig$OnPropertiesChangedListener)>("app_compat", $r8, r0);

        specialinvoke r0.<com.android.server.am.ActivityManagerService$HiddenApiSettings: void update()>();

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.am.ActivityManagerService$HiddenApiSettings: java.lang.String HIDDEN_API_ACCESS_STATSLOG_SAMPLING_RATE> = "hidden_api_access_statslog_sampling_rate";

        <com.android.server.am.ActivityManagerService$HiddenApiSettings: java.lang.String HIDDEN_API_ACCESS_LOG_SAMPLING_RATE> = "hidden_api_access_log_sampling_rate";

        return;
    }
}
