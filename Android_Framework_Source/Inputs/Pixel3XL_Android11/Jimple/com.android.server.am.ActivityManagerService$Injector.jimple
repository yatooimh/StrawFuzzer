public class com.android.server.am.ActivityManagerService$Injector extends java.lang.Object
{
    private android.content.Context mContext;
    private com.android.server.NetworkManagementInternal mNmi;

    public void <init>(android.content.Context)
    {
        com.android.server.am.ActivityManagerService$Injector r0;
        android.content.Context r1;

        r0 := @this: com.android.server.am.ActivityManagerService$Injector;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService$Injector: android.content.Context mContext> = r1;

        return;
    }

    private boolean ensureHasNetworkManagementInternal()
    {
        com.android.server.am.ActivityManagerService$Injector r0;
        com.android.server.NetworkManagementInternal $r1, $r2, $r4;
        java.lang.Object $r3;
        boolean z0;

        r0 := @this: com.android.server.am.ActivityManagerService$Injector;

        $r1 = r0.<com.android.server.am.ActivityManagerService$Injector: com.android.server.NetworkManagementInternal mNmi>;

        if $r1 != null goto label1;

        $r3 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Lcom/android/server/NetworkManagementInternal;");

        $r4 = (com.android.server.NetworkManagementInternal) $r3;

        r0.<com.android.server.am.ActivityManagerService$Injector: com.android.server.NetworkManagementInternal mNmi> = $r4;

     label1:
        $r2 = r0.<com.android.server.am.ActivityManagerService$Injector: com.android.server.NetworkManagementInternal mNmi>;

        if $r2 == null goto label2;

        z0 = 1;

        goto label3;

     label2:
        z0 = 0;

     label3:
        return z0;
    }

    public com.android.server.appop.AppOpsService getAppOpsService(java.io.File, android.os.Handler)
    {
        com.android.server.am.ActivityManagerService$Injector r0;
        java.io.File r1;
        android.os.Handler r2;
        com.android.server.appop.AppOpsService $r3;
        android.content.Context $r4;

        r0 := @this: com.android.server.am.ActivityManagerService$Injector;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: android.os.Handler;

        $r3 = new com.android.server.appop.AppOpsService;

        $r4 = virtualinvoke r0.<com.android.server.am.ActivityManagerService$Injector: android.content.Context getContext()>();

        specialinvoke $r3.<com.android.server.appop.AppOpsService: void <init>(java.io.File,android.os.Handler,android.content.Context)>(r1, r2, $r4);

        return $r3;
    }

    public android.content.Context getContext()
    {
        com.android.server.am.ActivityManagerService$Injector r0;
        android.content.Context $r1;

        r0 := @this: com.android.server.am.ActivityManagerService$Injector;

        $r1 = r0.<com.android.server.am.ActivityManagerService$Injector: android.content.Context mContext>;

        return $r1;
    }

    public com.android.server.am.ProcessList getProcessList(com.android.server.am.ActivityManagerService)
    {
        com.android.server.am.ActivityManagerService$Injector r0;
        com.android.server.am.ActivityManagerService r1;
        com.android.server.am.ProcessList $r2;

        r0 := @this: com.android.server.am.ActivityManagerService$Injector;

        r1 := @parameter0: com.android.server.am.ActivityManagerService;

        $r2 = new com.android.server.am.ProcessList;

        specialinvoke $r2.<com.android.server.am.ProcessList: void <init>()>();

        return $r2;
    }

    public android.os.Handler getUiHandler(com.android.server.am.ActivityManagerService)
    {
        com.android.server.am.ActivityManagerService$Injector r0;
        com.android.server.am.ActivityManagerService r1;
        com.android.server.am.ActivityManagerService$UiHandler $r3;

        r0 := @this: com.android.server.am.ActivityManagerService$Injector;

        r1 := @parameter0: com.android.server.am.ActivityManagerService;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r3 = new com.android.server.am.ActivityManagerService$UiHandler;

        specialinvoke $r3.<com.android.server.am.ActivityManagerService$UiHandler: void <init>(com.android.server.am.ActivityManagerService)>(r1);

        return $r3;
    }

    public boolean isNetworkRestrictedForUid(int)
    {
        com.android.server.am.ActivityManagerService$Injector r0;
        int i0;
        boolean $z0, $z1;
        com.android.server.NetworkManagementInternal $r1;

        r0 := @this: com.android.server.am.ActivityManagerService$Injector;

        i0 := @parameter0: int;

        $z0 = specialinvoke r0.<com.android.server.am.ActivityManagerService$Injector: boolean ensureHasNetworkManagementInternal()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<com.android.server.am.ActivityManagerService$Injector: com.android.server.NetworkManagementInternal mNmi>;

        $z1 = virtualinvoke $r1.<com.android.server.NetworkManagementInternal: boolean isNetworkRestrictedForUid(int)>(i0);

        return $z1;

     label1:
        return 0;
    }
}
