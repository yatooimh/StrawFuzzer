public final class com.android.server.am.ActivityManagerService$LocalService extends android.app.ActivityManagerInternal
{
    final com.android.server.am.ActivityManagerService this$0;

    public void <init>(com.android.server.am.ActivityManagerService)
    {
        com.android.server.am.ActivityManagerService$LocalService r0;
        com.android.server.am.ActivityManagerService r1;

        r0 := @this: com.android.server.am.ActivityManagerService$LocalService;

        r1 := @parameter0: com.android.server.am.ActivityManagerService;

        r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0> = r1;

        specialinvoke r0.<android.app.ActivityManagerInternal: void <init>()>();

        return;
    }

    private boolean isSplitConfigurationChange(int)
    {
        com.android.server.am.ActivityManagerService$LocalService r0;
        int i0, $i1;
        boolean z0;

        r0 := @this: com.android.server.am.ActivityManagerService$LocalService;

        i0 := @parameter0: int;

        $i1 = i0 & 4100;

        if $i1 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public void addPendingTopUid(int, int)
    {
        com.android.server.am.ActivityManagerService$LocalService r0;
        int i0, i1;
        com.android.server.am.ActivityManagerService $r1;
        com.android.server.am.PendingStartActivityUids $r2;

        r0 := @this: com.android.server.am.ActivityManagerService$LocalService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        $r2 = staticinvoke <com.android.server.am.ActivityManagerService: com.android.server.am.PendingStartActivityUids access$2000(com.android.server.am.ActivityManagerService)>($r1);

        virtualinvoke $r2.<com.android.server.am.PendingStartActivityUids: void add(int,int)>(i0, i1);

        return;
    }

    public void broadcastCloseSystemDialogs(java.lang.String)
    {
        com.android.server.am.ActivityManagerService$LocalService r0;
        com.android.server.am.ActivityManagerService r1, $r4;
        android.content.Intent r2;
        int $i0, $i1;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: com.android.server.am.ActivityManagerService$LocalService;

        r7 := @parameter0: java.lang.String;

        r1 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        r2 = new android.content.Intent;

        specialinvoke r2.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.CLOSE_SYSTEM_DIALOGS");

        virtualinvoke r2.<android.content.Intent: android.content.Intent addFlags(int)>(1342177280);

     label2:
        if r7 == null goto label4;

     label3:
        virtualinvoke r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("reason", r7);

     label4:
        $r4 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

        virtualinvoke $r4.<com.android.server.am.ActivityManagerService: int broadcastIntentLocked(com.android.server.am.ProcessRecord,java.lang.String,java.lang.String,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String[],int,android.os.Bundle,boolean,boolean,int,int,int,int,int)>(null, null, null, r2, null, null, 0, null, null, null, -1, null, 0, 0, -1, 1000, $i0, $i1, -1);

     label5:
        exitmonitor r1;

     label6:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label7:
        $r6 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public void broadcastGlobalConfigurationChanged(int, boolean)
    {
        com.android.server.am.ActivityManagerService$LocalService r0;
        boolean z0, $z1, $z2;
        com.android.server.am.ActivityManagerService r1, $r4, $r9, $r13, r14;
        android.content.Intent r2, r11, r12;
        int i0, i1, $i2, $i3, $i4, $i6, i9, $i10, $i11, $i12, i13;
        java.lang.String[] $r6;
        java.lang.Throwable $r10;

        r0 := @this: com.android.server.am.ActivityManagerService$LocalService;

        i9 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        entermonitor r1;

     label01:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        r11 = new android.content.Intent;

        specialinvoke r11.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.CONFIGURATION_CHANGED");

        virtualinvoke r11.<android.content.Intent: android.content.Intent addFlags(int)>(1881145344);

        $r4 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        $i2 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        $i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i4 = staticinvoke <android.os.Binder: int getCallingPid()>();

        virtualinvoke $r4.<com.android.server.am.ActivityManagerService: int broadcastIntentLocked(com.android.server.am.ProcessRecord,java.lang.String,java.lang.String,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String[],int,android.os.Bundle,boolean,boolean,int,int,int,int,int)>(null, null, null, r11, null, null, 0, null, null, null, -1, null, 0, 0, $i2, 1000, $i3, $i4, -1);

     label02:
        $i6 = i9 & 4;

        if $i6 == 0 goto label08;

     label03:
        r12 = new android.content.Intent;

        specialinvoke r12.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.LOCALE_CHANGED");

        virtualinvoke r12.<android.content.Intent: android.content.Intent addFlags(int)>(287309824);

     label04:
        if z0 != 0 goto label06;

     label05:
        $r9 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        $z2 = $r9.<com.android.server.am.ActivityManagerService: boolean mProcessesReady>;

        if $z2 != 0 goto label07;

     label06:
        virtualinvoke r12.<android.content.Intent: android.content.Intent addFlags(int)>(1073741824);

     label07:
        $r13 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        $i10 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        $i11 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i12 = staticinvoke <android.os.Binder: int getCallingPid()>();

        virtualinvoke $r13.<com.android.server.am.ActivityManagerService: int broadcastIntentLocked(com.android.server.am.ProcessRecord,java.lang.String,java.lang.String,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String[],int,android.os.Bundle,boolean,boolean,int,int,int,int,int)>(null, null, null, r12, null, null, 0, null, null, null, -1, null, 0, 0, $i10, 1000, $i11, $i12, -1);

     label08:
        if z0 != 0 goto label10;

     label09:
        $z1 = specialinvoke r0.<com.android.server.am.ActivityManagerService$LocalService: boolean isSplitConfigurationChange(int)>(i9);

        if $z1 == 0 goto label10;

        r2 = new android.content.Intent;

        specialinvoke r2.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.SPLIT_CONFIGURATION_CHANGED");

        virtualinvoke r2.<android.content.Intent: android.content.Intent addFlags(int)>(553648128);

        r14 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        i13 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r6 = newarray (java.lang.String)[1];

        $r6[0] = "android.permission.INSTALL_PACKAGES";

        virtualinvoke r14.<com.android.server.am.ActivityManagerService: int broadcastIntentLocked(com.android.server.am.ProcessRecord,java.lang.String,java.lang.String,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String[],int,android.os.Bundle,boolean,boolean,int,int,int,int,int)>(null, null, null, r2, null, null, 0, null, null, $r6, -1, null, 0, 0, i13, 1000, i0, i1, -1);

     label10:
        exitmonitor r1;

     label11:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label12:
        $r10 := @caughtexception;

     label13:
        exitmonitor r1;

     label14:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r10;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label07 to label08 with label12;
        catch java.lang.Throwable from label09 to label10 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public int broadcastIntent(android.content.Intent, android.content.IIntentReceiver, java.lang.String[], boolean, int, int[])
    {
        com.android.server.am.ActivityManagerService$LocalService r0;
        android.content.IIntentReceiver r1;
        java.lang.String[] r2;
        boolean z0;
        int[] r3;
        com.android.server.am.ActivityManagerService r4, r5, $r6;
        int i0, i1, i3, i4;
        long l2;
        java.lang.Throwable $r7, $r8, $r9, $r10, r14;
        android.content.Intent r11, r12;

        r0 := @this: com.android.server.am.ActivityManagerService$LocalService;

        r11 := @parameter0: android.content.Intent;

        r1 := @parameter1: android.content.IIntentReceiver;

        r2 := @parameter2: java.lang.String[];

        z0 := @parameter3: boolean;

        i3 := @parameter4: int;

        r3 := @parameter5: int[];

        r4 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        entermonitor r4;

     label01:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        r5 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

     label02:
        r12 = virtualinvoke r5.<com.android.server.am.ActivityManagerService: android.content.Intent verifyBroadcastLocked(android.content.Intent)>(r11);

     label03:
        i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label04:
        $r6 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        i4 = virtualinvoke $r6.<com.android.server.am.ActivityManagerService: int broadcastIntentLocked(com.android.server.am.ProcessRecord,java.lang.String,java.lang.String,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String[],int,android.os.Bundle,boolean,boolean,int,int,int,int,int,boolean,int[])>(null, null, null, r12, null, r1, 0, null, null, r2, -1, null, z0, 0, i0, i1, i1, i0, i3, 0, r3);

     label05:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        exitmonitor r4;

     label06:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return i4;

     label07:
        $r8 := @caughtexception;

     label08:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

     label09:
        throw $r8;

     label10:
        $r9 := @caughtexception;

        r14 = $r9;

        goto label12;

     label11:
        $r7 := @caughtexception;

        r14 = $r7;

     label12:
        exitmonitor r4;

     label13:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw r14;

     label14:
        $r10 := @caughtexception;

        r14 = $r10;

        goto label12;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label02 to label03 with label10;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.Throwable from label04 to label05 with label07;
        catch java.lang.Throwable from label05 to label06 with label14;
        catch java.lang.Throwable from label08 to label09 with label14;
        catch java.lang.Throwable from label09 to label10 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
    }

    public int broadcastIntentInPackage(java.lang.String, java.lang.String, int, int, int, android.content.Intent, java.lang.String, android.content.IIntentReceiver, int, java.lang.String, android.os.Bundle, java.lang.String, android.os.Bundle, boolean, boolean, int, boolean)
    {
        com.android.server.am.ActivityManagerService$LocalService r0;
        java.lang.String r1, r3, r5, r7, r12;
        int i0, i1, i2, i3, i4, i5;
        android.content.Intent r2;
        android.content.IIntentReceiver r4;
        android.os.Bundle r6, r8;
        boolean z0, z1, z2;
        com.android.server.am.ActivityManagerService r9, $r10;
        java.lang.Throwable $r11;

        r0 := @this: com.android.server.am.ActivityManagerService$LocalService;

        r12 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i4 := @parameter2: int;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        r2 := @parameter5: android.content.Intent;

        r3 := @parameter6: java.lang.String;

        r4 := @parameter7: android.content.IIntentReceiver;

        i2 := @parameter8: int;

        r5 := @parameter9: java.lang.String;

        r6 := @parameter10: android.os.Bundle;

        r7 := @parameter11: java.lang.String;

        r8 := @parameter12: android.os.Bundle;

        z0 := @parameter13: boolean;

        z1 := @parameter14: boolean;

        i3 := @parameter15: int;

        z2 := @parameter16: boolean;

        r9 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        entermonitor r9;

     label1:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r10 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        i5 = virtualinvoke $r10.<com.android.server.am.ActivityManagerService: int broadcastIntentInPackage(java.lang.String,java.lang.String,int,int,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,android.os.Bundle,boolean,boolean,int,boolean)>(r12, r1, i4, i0, i1, r2, r3, r4, i2, r5, r6, r7, r8, z0, z1, i3, z2);

        exitmonitor r9;

     label2:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return i5;

     label3:
        $r11 := @caughtexception;

     label4:
        exitmonitor r9;

     label5:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r11;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean canStartMoreUsers()
    {
        com.android.server.am.ActivityManagerService$LocalService r0;
        com.android.server.am.ActivityManagerService $r1;
        com.android.server.am.UserController $r2;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityManagerService$LocalService;

        $r1 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        $r2 = $r1.<com.android.server.am.ActivityManagerService: com.android.server.am.UserController mUserController>;

        $z0 = virtualinvoke $r2.<com.android.server.am.UserController: boolean canStartMoreUsers()>();

        return $z0;
    }

    public java.lang.String checkContentProviderAccess(java.lang.String, int)
    {
        com.android.server.am.ActivityManagerService$LocalService r0;
        java.lang.String r1, $r3;
        int i0;
        com.android.server.am.ActivityManagerService $r2;

        r0 := @this: com.android.server.am.ActivityManagerService$LocalService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        $r3 = virtualinvoke $r2.<com.android.server.am.ActivityManagerService: java.lang.String checkContentProviderAccess(java.lang.String,int)>(r1, i0);

        return $r3;
    }

    public int checkContentProviderUriPermission(android.net.Uri, int, int, int)
    {
        com.android.server.am.ActivityManagerService$LocalService r0;
        android.net.Uri r1;
        int i0, i1, i2, $i3;
        com.android.server.am.ActivityManagerService $r2;

        r0 := @this: com.android.server.am.ActivityManagerService$LocalService;

        r1 := @parameter0: android.net.Uri;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r2 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        $i3 = virtualinvoke $r2.<com.android.server.am.ActivityManagerService: int checkContentProviderUriPermission(android.net.Uri,int,int,int)>(r1, i0, i1, i2);

        return $i3;
    }

    public void cleanUpServices(int, android.content.ComponentName, android.content.Intent)
    {
        com.android.server.am.ActivityManagerService$LocalService r0;
        int i0;
        android.content.Intent r1;
        com.android.server.am.ActivityManagerService r2, $r3;
        com.android.server.am.ActiveServices $r4;
        java.lang.Throwable $r5;
        android.content.ComponentName r6;

        r0 := @this: com.android.server.am.ActivityManagerService$LocalService;

        i0 := @parameter0: int;

        r6 := @parameter1: android.content.ComponentName;

        r1 := @parameter2: android.content.Intent;

        r2 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        entermonitor r2;

     label1:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r3 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        $r4 = $r3.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveServices mServices>;

        virtualinvoke $r4.<com.android.server.am.ActiveServices: void cleanUpServices(int,android.content.ComponentName,android.content.Intent)>(i0, r6, r1);

        exitmonitor r2;

     label2:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r2;

     label5:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void clearPendingBackup(int)
    {
        com.android.server.am.ActivityManagerService$LocalService r0;
        int i0;
        com.android.server.am.ActivityManagerService $r1;

        r0 := @this: com.android.server.am.ActivityManagerService$LocalService;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        staticinvoke <com.android.server.am.ActivityManagerService: void access$1800(com.android.server.am.ActivityManagerService,int)>($r1, i0);

        return;
    }

    public void clearPendingIntentAllowBgActivityStarts(android.content.IIntentSender, android.os.IBinder)
    {
        com.android.server.am.ActivityManagerService$LocalService r0;
        com.android.server.am.ActivityManagerService r1;
        boolean $z0;
        com.android.server.am.PendingIntentRecord $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r6;
        java.lang.Throwable $r7;
        android.content.IIntentSender r8;
        android.os.IBinder r9;

        r0 := @this: com.android.server.am.ActivityManagerService$LocalService;

        r8 := @parameter0: android.content.IIntentSender;

        r9 := @parameter1: android.os.IBinder;

        $z0 = r8 instanceof com.android.server.am.PendingIntentRecord;

        if $z0 != 0 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("clearPendingIntentAllowBgActivityStarts(): not a PendingIntentRecord: ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r8);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r6);

        return;

     label1:
        r1 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        entermonitor r1;

     label2:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r2 = (com.android.server.am.PendingIntentRecord) r8;

        virtualinvoke $r2.<com.android.server.am.PendingIntentRecord: void clearAllowBgActivityStarts(android.os.IBinder)>(r9);

        exitmonitor r1;

     label3:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label4:
        $r7 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r7;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void deletePendingTopUid(int)
    {
        com.android.server.am.ActivityManagerService$LocalService r0;
        int i0;
        com.android.server.am.ActivityManagerService $r1;
        com.android.server.am.PendingStartActivityUids $r2;

        r0 := @this: com.android.server.am.ActivityManagerService$LocalService;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        $r2 = staticinvoke <com.android.server.am.ActivityManagerService: com.android.server.am.PendingStartActivityUids access$2000(com.android.server.am.ActivityManagerService)>($r1);

        virtualinvoke $r2.<com.android.server.am.PendingStartActivityUids: void delete(int)>(i0);

        return;
    }

    public void disconnectActivityFromServices(java.lang.Object)
    {
        com.android.server.am.ActivityManagerService$LocalService r0;
        com.android.server.am._$$Lambda$ActivityManagerService$LocalService$2LeEPdXnhP_I5Tz5a2OSkhUL0oc r1;
        java.lang.Throwable $r2;
        java.lang.Object r3;
        com.android.server.wm.ActivityServiceConnectionsHolder r4;
        com.android.server.am.ActivityManagerService r5;

        r0 := @this: com.android.server.am.ActivityManagerService$LocalService;

        r3 := @parameter0: java.lang.Object;

        r4 = (com.android.server.wm.ActivityServiceConnectionsHolder) r3;

        r5 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        entermonitor r5;

     label1:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        r1 = new com.android.server.am._$$Lambda$ActivityManagerService$LocalService$2LeEPdXnhP_I5Tz5a2OSkhUL0oc;

        specialinvoke r1.<com.android.server.am._$$Lambda$ActivityManagerService$LocalService$2LeEPdXnhP_I5Tz5a2OSkhUL0oc: void <init>(com.android.server.am.ActivityManagerService$LocalService,com.android.server.wm.ActivityServiceConnectionsHolder)>(r0, r4);

        virtualinvoke r4.<com.android.server.wm.ActivityServiceConnectionsHolder: void forEachConnection(java.util.function.Consumer)>(r1);

        exitmonitor r5;

     label2:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r5;

     label5:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void enforceCallingPermission(java.lang.String, java.lang.String)
    {
        com.android.server.am.ActivityManagerService$LocalService r0;
        java.lang.String r1, r2;
        com.android.server.am.ActivityManagerService $r3;

        r0 := @this: com.android.server.am.ActivityManagerService$LocalService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        virtualinvoke $r3.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>(r1, r2);

        return;
    }

    public void ensureBootCompleted()
    {
        com.android.server.am.ActivityManagerService$LocalService r0;
        com.android.server.am.ActivityManagerService $r1;

        r0 := @this: com.android.server.am.ActivityManagerService$LocalService;

        $r1 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        virtualinvoke $r1.<com.android.server.am.ActivityManagerService: void ensureBootCompleted()>();

        return;
    }

    public void ensureNotSpecialUser(int)
    {
        com.android.server.am.ActivityManagerService$LocalService r0;
        int i0;
        com.android.server.am.ActivityManagerService $r1;
        com.android.server.am.UserController $r2;

        r0 := @this: com.android.server.am.ActivityManagerService$LocalService;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        $r2 = $r1.<com.android.server.am.ActivityManagerService: com.android.server.am.UserController mUserController>;

        virtualinvoke $r2.<com.android.server.am.UserController: void ensureNotSpecialUser(int)>(i0);

        return;
    }

    public void finishBooting()
    {
        com.android.server.am.ActivityManagerService$LocalService r0;
        com.android.server.am.ActivityManagerService $r1;

        r0 := @this: com.android.server.am.ActivityManagerService$LocalService;

        $r1 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        virtualinvoke $r1.<com.android.server.am.ActivityManagerService: void finishBooting()>();

        return;
    }

    public void finishUserSwitch(java.lang.Object)
    {
        com.android.server.am.ActivityManagerService$LocalService r0;
        java.lang.Object r1;
        com.android.server.am.ActivityManagerService $r2;
        com.android.server.am.UserState $r3;
        com.android.server.am.UserController $r4;

        r0 := @this: com.android.server.am.ActivityManagerService$LocalService;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        $r4 = $r2.<com.android.server.am.ActivityManagerService: com.android.server.am.UserController mUserController>;

        $r3 = (com.android.server.am.UserState) r1;

        virtualinvoke $r4.<com.android.server.am.UserController: void finishUserSwitch(com.android.server.am.UserState)>($r3);

        return;
    }

    public android.content.pm.ActivityInfo getActivityInfoForUser(android.content.pm.ActivityInfo, int)
    {
        com.android.server.am.ActivityManagerService$LocalService r0;
        android.content.pm.ActivityInfo r1, $r3;
        int i0;
        com.android.server.am.ActivityManagerService $r2;

        r0 := @this: com.android.server.am.ActivityManagerService$LocalService;

        r1 := @parameter0: android.content.pm.ActivityInfo;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        $r3 = virtualinvoke $r2.<com.android.server.am.ActivityManagerService: android.content.pm.ActivityInfo getActivityInfoForUser(android.content.pm.ActivityInfo,int)>(r1, i0);

        return $r3;
    }

    public android.content.pm.ActivityPresentationInfo getActivityPresentationInfo(android.os.IBinder)
    {
        com.android.server.am.ActivityManagerService$LocalService r0;
        android.os.IBinder r1;
        int i0, $i1, i2;
        com.android.server.am.ActivityManagerService $r3, $r6, $r8;
        com.android.server.wm.ActivityTaskManagerService $r4, $r7, $r9;
        android.content.pm.ActivityPresentationInfo $r5;
        android.content.ComponentName $r10;
        android.os.RemoteException $r11;

        r0 := @this: com.android.server.am.ActivityManagerService$LocalService;

        r1 := @parameter0: android.os.IBinder;

        i2 = -1;

     label1:
        $r3 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        $r4 = $r3.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerService mActivityTaskManager>;

        i0 = virtualinvoke $r4.<com.android.server.wm.ActivityTaskManagerService: int getDisplayId(android.os.IBinder)>(r1);

     label2:
        i2 = i0;

        goto label4;

     label3:
        $r11 := @caughtexception;

     label4:
        $r5 = new android.content.pm.ActivityPresentationInfo;

        $r6 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        $r7 = $r6.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerService mActivityTaskManager>;

        $i1 = virtualinvoke $r7.<com.android.server.wm.ActivityTaskManagerService: int getTaskForActivity(android.os.IBinder,boolean)>(r1, 0);

        $r8 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        $r9 = $r8.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerService mActivityTaskManager>;

        $r10 = virtualinvoke $r9.<com.android.server.wm.ActivityTaskManagerService: android.content.ComponentName getActivityClassForToken(android.os.IBinder)>(r1);

        specialinvoke $r5.<android.content.pm.ActivityPresentationInfo: void <init>(int,int,android.content.ComponentName)>($i1, i2, $r10);

        return $r5;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int[] getCurrentProfileIds()
    {
        com.android.server.am.ActivityManagerService$LocalService r0;
        com.android.server.am.ActivityManagerService $r1;
        com.android.server.am.UserController $r2;
        int[] $r3;

        r0 := @this: com.android.server.am.ActivityManagerService$LocalService;

        $r1 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        $r2 = $r1.<com.android.server.am.ActivityManagerService: com.android.server.am.UserController mUserController>;

        $r3 = virtualinvoke $r2.<com.android.server.am.UserController: int[] getCurrentProfileIds()>();

        return $r3;
    }

    public android.content.pm.UserInfo getCurrentUser()
    {
        com.android.server.am.ActivityManagerService$LocalService r0;
        com.android.server.am.ActivityManagerService $r1;
        com.android.server.am.UserController $r2;
        android.content.pm.UserInfo $r3;

        r0 := @this: com.android.server.am.ActivityManagerService$LocalService;

        $r1 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        $r2 = $r1.<com.android.server.am.ActivityManagerService: com.android.server.am.UserController mUserController>;

        $r3 = virtualinvoke $r2.<com.android.server.am.UserController: android.content.pm.UserInfo getCurrentUser()>();

        return $r3;
    }

    public int getCurrentUserId()
    {
        com.android.server.am.ActivityManagerService$LocalService r0;
        com.android.server.am.ActivityManagerService $r1;
        com.android.server.am.UserController $r2;
        int $i0;

        r0 := @this: com.android.server.am.ActivityManagerService$LocalService;

        $r1 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        $r2 = $r1.<com.android.server.am.ActivityManagerService: com.android.server.am.UserController mUserController>;

        $i0 = virtualinvoke $r2.<com.android.server.am.UserController: int getCurrentUserId()>();

        return $i0;
    }

    public int getMaxRunningUsers()
    {
        com.android.server.am.ActivityManagerService$LocalService r0;
        com.android.server.am.ActivityManagerService $r1;
        com.android.server.am.UserController $r2;
        int $i0;

        r0 := @this: com.android.server.am.ActivityManagerService$LocalService;

        $r1 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        $r2 = $r1.<com.android.server.am.ActivityManagerService: com.android.server.am.UserController mUserController>;

        $i0 = virtualinvoke $r2.<com.android.server.am.UserController: int getMaxRunningUsers()>();

        return $i0;
    }

    public java.util.List getMemoryStateForProcesses()
    {
        com.android.server.am.ActivityManagerService$LocalService r0;
        com.android.server.am.ActivityManagerService$PidMap r2, $r7, $r9;
        int i0, $i1, $i2, $i3, i4;
        com.android.server.am.ProcessRecord r3;
        java.util.ArrayList $r4;
        com.android.server.am.ActivityManagerService $r5, $r6, $r8;
        java.lang.String $r10;
        java.lang.Throwable $r11;
        android.app.ProcessMemoryState r12;

        r0 := @this: com.android.server.am.ActivityManagerService$LocalService;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        $r5 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        r2 = $r5.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        entermonitor r2;

        i4 = 0;

     label1:
        $r6 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        $r7 = $r6.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        i0 = virtualinvoke $r7.<com.android.server.am.ActivityManagerService$PidMap: int size()>();

     label2:
        if i4 >= i0 goto label5;

     label3:
        $r8 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        $r9 = $r8.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        r3 = virtualinvoke $r9.<com.android.server.am.ActivityManagerService$PidMap: com.android.server.am.ProcessRecord valueAt(int)>(i4);

        r12 = new android.app.ProcessMemoryState;

        $i3 = r3.<com.android.server.am.ProcessRecord: int uid>;

        $i2 = r3.<com.android.server.am.ProcessRecord: int pid>;

        $r10 = r3.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $i1 = r3.<com.android.server.am.ProcessRecord: int curAdj>;

        specialinvoke r12.<android.app.ProcessMemoryState: void <init>(int,int,java.lang.String,int)>($i3, $i2, $r10, $i1);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>(r12);

     label4:
        i4 = i4 + 1;

        goto label2;

     label5:
        exitmonitor r2;

     label6:
        return $r4;

     label7:
        $r11 := @caughtexception;

     label8:
        exitmonitor r2;

     label9:
        throw $r11;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public java.util.Map getProcessesWithPendingBindMounts(int)
    {
        com.android.server.am.ActivityManagerService$LocalService r0;
        int i0;
        com.android.server.am.ActivityManagerService $r1;
        com.android.server.am.ProcessList $r2;
        java.util.Map $r3;

        r0 := @this: com.android.server.am.ActivityManagerService$LocalService;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        $r2 = $r1.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r3 = virtualinvoke $r2.<com.android.server.am.ProcessList: java.util.Map getProcessesWithPendingBindMounts(int)>(i0);

        return $r3;
    }

    public int getStorageMountMode(int, int)
    {
        com.android.server.am.ActivityManagerService$LocalService r0;
        int i0, i1, i2;
        com.android.server.am.ActivityManagerService$PidMap r1, $r4;
        com.android.server.am.ActivityManagerService $r2, $r3;
        java.lang.Throwable $r5;
        com.android.server.am.ProcessRecord r6;

        r0 := @this: com.android.server.am.ActivityManagerService$LocalService;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        if i0 == 2000 goto label10;

        if i0 != 0 goto label01;

        goto label10;

     label01:
        $r2 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        r1 = $r2.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        entermonitor r1;

     label02:
        $r3 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        $r4 = $r3.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        r6 = virtualinvoke $r4.<com.android.server.am.ActivityManagerService$PidMap: com.android.server.am.ProcessRecord get(int)>(i1);

     label03:
        if r6 != null goto label04;

        i2 = 0;

        goto label05;

     label04:
        i2 = r6.<com.android.server.am.ProcessRecord: int mountMode>;

     label05:
        exitmonitor r1;

     label06:
        return i2;

     label07:
        $r5 := @caughtexception;

     label08:
        exitmonitor r1;

     label09:
        throw $r5;

     label10:
        return 6;

        catch java.lang.Throwable from label02 to label03 with label07;
        catch java.lang.Throwable from label04 to label05 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label08 to label09 with label07;
    }

    public int getTaskIdForActivity(android.os.IBinder, boolean)
    {
        com.android.server.am.ActivityManagerService$LocalService r0;
        boolean z0;
        com.android.server.am.ActivityManagerService r1, $r2;
        int i0;
        java.lang.Throwable $r3;
        android.os.IBinder r4;

        r0 := @this: com.android.server.am.ActivityManagerService$LocalService;

        r4 := @parameter0: android.os.IBinder;

        z0 := @parameter1: boolean;

        r1 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r2 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        i0 = virtualinvoke $r2.<com.android.server.am.ActivityManagerService: int getTaskForActivity(android.os.IBinder,boolean)>(r4, z0);

        exitmonitor r1;

     label2:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return i0;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public int getUidProcessState(int)
    {
        com.android.server.am.ActivityManagerService$LocalService r0;
        int i0, $i1;
        com.android.server.am.ActivityManagerService $r1;

        r0 := @this: com.android.server.am.ActivityManagerService$LocalService;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        $i1 = virtualinvoke $r1.<com.android.server.am.ActivityManagerService: int getUidState(int)>(i0);

        return $i1;
    }

    public int handleIncomingUser(int, int, int, boolean, int, java.lang.String, java.lang.String)
    {
        com.android.server.am.ActivityManagerService$LocalService r0;
        int i0, i1, i2, i3, $i4;
        boolean z0;
        java.lang.String r1, r2;
        com.android.server.am.ActivityManagerService $r3;
        com.android.server.am.UserController $r4;

        r0 := @this: com.android.server.am.ActivityManagerService$LocalService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        z0 := @parameter3: boolean;

        i3 := @parameter4: int;

        r1 := @parameter5: java.lang.String;

        r2 := @parameter6: java.lang.String;

        $r3 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        $r4 = $r3.<com.android.server.am.ActivityManagerService: com.android.server.am.UserController mUserController>;

        $i4 = virtualinvoke $r4.<com.android.server.am.UserController: int handleIncomingUser(int,int,int,boolean,int,java.lang.String,java.lang.String)>(i0, i1, i2, z0, i3, r1, r2);

        return $i4;
    }

    public boolean hasRunningActivity(int, java.lang.String)
    {
        com.android.server.am.ActivityManagerService$LocalService r0;
        int i0, $i1, $i2, i3;
        com.android.server.am.ActivityManagerService r1, $r3, $r6;
        com.android.server.am.ProcessRecord r2;
        com.android.server.am.ProcessList $r4, $r7;
        java.util.ArrayList $r5, $r8;
        java.lang.Object $r9;
        com.android.server.wm.WindowProcessController $r10;
        boolean $z0;
        java.lang.Throwable $r11;
        java.lang.String r12;

        r0 := @this: com.android.server.am.ActivityManagerService$LocalService;

        i0 := @parameter0: int;

        r12 := @parameter1: java.lang.String;

        if r12 != null goto label01;

        return 0;

     label01:
        r1 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        entermonitor r1;

     label02:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

     label03:
        i3 = 0;

     label04:
        $r3 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        $r4 = $r3.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r5 = $r4.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        $i1 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        if i3 >= $i1 goto label09;

        $r6 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        $r7 = $r6.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r8 = $r7.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        $r9 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r2 = (com.android.server.am.ProcessRecord) $r9;

        $i2 = r2.<com.android.server.am.ProcessRecord: int uid>;

        if $i2 == i0 goto label06;

     label05:
        goto label08;

     label06:
        $r10 = virtualinvoke r2.<com.android.server.am.ProcessRecord: com.android.server.wm.WindowProcessController getWindowProcessController()>();

        $z0 = virtualinvoke $r10.<com.android.server.wm.WindowProcessController: boolean hasRunningActivity(java.lang.String)>(r12);

        if $z0 == 0 goto label08;

        exitmonitor r1;

     label07:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return 1;

     label08:
        i3 = i3 + 1;

        goto label04;

     label09:
        exitmonitor r1;

     label10:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return 0;

     label11:
        $r11 := @caughtexception;

     label12:
        exitmonitor r1;

     label13:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r11;

        catch java.lang.Throwable from label02 to label03 with label11;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    public boolean hasRunningForegroundService(int, int)
    {
        com.android.server.am.ActivityManagerService$LocalService r0;
        int i0, i1, $i2, $i3, $i4, $i5, i6;
        com.android.server.am.ActivityManagerService r1, $r2, $r5;
        com.android.server.am.ProcessList $r3, $r6;
        java.util.ArrayList $r4, $r7;
        java.lang.Object $r8;
        java.lang.Throwable $r9;
        com.android.server.am.ProcessRecord r10;

        r0 := @this: com.android.server.am.ActivityManagerService$LocalService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        entermonitor r1;

     label01:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

     label02:
        i6 = 0;

     label03:
        $r2 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        $r3 = $r2.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r4 = $r3.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        $i2 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        if i6 >= $i2 goto label08;

        $r5 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        $r6 = $r5.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r7 = $r6.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(i6);

        r10 = (com.android.server.am.ProcessRecord) $r8;

        $i3 = r10.<com.android.server.am.ProcessRecord: int uid>;

        if $i3 == i0 goto label05;

     label04:
        goto label07;

     label05:
        $i4 = virtualinvoke r10.<com.android.server.am.ProcessRecord: int getForegroundServiceTypes()>();

        $i5 = $i4 & i1;

        if $i5 == 0 goto label07;

        exitmonitor r1;

     label06:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return 1;

     label07:
        i6 = i6 + 1;

        goto label03;

     label08:
        exitmonitor r1;

     label09:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return 0;

     label10:
        $r9 := @caughtexception;

     label11:
        exitmonitor r1;

     label12:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public boolean hasStartedUserState(int)
    {
        com.android.server.am.ActivityManagerService$LocalService r0;
        int i0;
        com.android.server.am.ActivityManagerService $r1;
        com.android.server.am.UserController $r2;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityManagerService$LocalService;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        $r2 = $r1.<com.android.server.am.ActivityManagerService: com.android.server.am.UserController mUserController>;

        $z0 = virtualinvoke $r2.<com.android.server.am.UserController: boolean hasStartedUserState(int)>(i0);

        return $z0;
    }

    public long inputDispatchingTimedOut(int, boolean, java.lang.String)
    {
        com.android.server.am.ActivityManagerService$LocalService r0;
        int i0;
        boolean z0;
        java.lang.String r1;
        com.android.server.am.ActivityManagerService $r2;
        long $l1;

        r0 := @this: com.android.server.am.ActivityManagerService$LocalService;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 := @parameter2: java.lang.String;

        $r2 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        $l1 = virtualinvoke $r2.<com.android.server.am.ActivityManagerService: long inputDispatchingTimedOut(int,boolean,java.lang.String)>(i0, z0, r1);

        return $l1;
    }

    public boolean inputDispatchingTimedOut(java.lang.Object, java.lang.String, android.content.pm.ApplicationInfo, java.lang.String, java.lang.Object, boolean, java.lang.String)
    {
        com.android.server.am.ActivityManagerService$LocalService r0;
        java.lang.Object r1, r5;
        java.lang.String r2, r4, r6;
        android.content.pm.ApplicationInfo r3;
        boolean z0, $z1;
        com.android.server.wm.WindowProcessController $r7;
        com.android.server.am.ProcessRecord $r8;
        com.android.server.am.ActivityManagerService $r9;

        r0 := @this: com.android.server.am.ActivityManagerService$LocalService;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.content.pm.ApplicationInfo;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.Object;

        z0 := @parameter5: boolean;

        r6 := @parameter6: java.lang.String;

        $r9 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        $r8 = (com.android.server.am.ProcessRecord) r1;

        $r7 = (com.android.server.wm.WindowProcessController) r5;

        $z1 = virtualinvoke $r9.<com.android.server.am.ActivityManagerService: boolean inputDispatchingTimedOut(com.android.server.am.ProcessRecord,java.lang.String,android.content.pm.ApplicationInfo,java.lang.String,com.android.server.wm.WindowProcessController,boolean,java.lang.String)>($r8, r2, r3, r4, $r7, z0, r6);

        return $z1;
    }

    public boolean isActivityStartsLoggingEnabled()
    {
        com.android.server.am.ActivityManagerService$LocalService r0;
        com.android.server.am.ActivityManagerService $r1;
        com.android.server.am.ActivityManagerConstants $r2;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityManagerService$LocalService;

        $r1 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        $r2 = $r1.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerConstants mConstants>;

        $z0 = $r2.<com.android.server.am.ActivityManagerConstants: boolean mFlagActivityStartsLoggingEnabled>;

        return $z0;
    }

    public boolean isAppBad(android.content.pm.ApplicationInfo)
    {
        com.android.server.am.ActivityManagerService$LocalService r0;
        android.content.pm.ApplicationInfo r1;
        com.android.server.am.ActivityManagerService $r2;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityManagerService$LocalService;

        r1 := @parameter0: android.content.pm.ApplicationInfo;

        $r2 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        $z0 = staticinvoke <com.android.server.am.ActivityManagerService: boolean access$1700(com.android.server.am.ActivityManagerService,android.content.pm.ApplicationInfo)>($r2, r1);

        return $z0;
    }

    public boolean isAppForeground(int)
    {
        com.android.server.am.ActivityManagerService$LocalService r0;
        int i0;
        com.android.server.am.ActivityManagerService $r1;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityManagerService$LocalService;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        $z0 = staticinvoke <com.android.server.am.ActivityManagerService: boolean access$1600(com.android.server.am.ActivityManagerService,int)>($r1, i0);

        return $z0;
    }

    public boolean isBackgroundActivityStartsEnabled()
    {
        com.android.server.am.ActivityManagerService$LocalService r0;
        com.android.server.am.ActivityManagerService $r1;
        com.android.server.am.ActivityManagerConstants $r2;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityManagerService$LocalService;

        $r1 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        $r2 = $r1.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerConstants mConstants>;

        $z0 = $r2.<com.android.server.am.ActivityManagerConstants: boolean mFlagBackgroundActivityStartsEnabled>;

        return $z0;
    }

    public boolean isBooted()
    {
        com.android.server.am.ActivityManagerService$LocalService r0;
        com.android.server.am.ActivityManagerService $r1;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityManagerService$LocalService;

        $r1 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        $z0 = $r1.<com.android.server.am.ActivityManagerService: boolean mBooted>;

        return $z0;
    }

    public boolean isBooting()
    {
        com.android.server.am.ActivityManagerService$LocalService r0;
        com.android.server.am.ActivityManagerService $r1;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityManagerService$LocalService;

        $r1 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        $z0 = $r1.<com.android.server.am.ActivityManagerService: boolean mBooting>;

        return $z0;
    }

    public boolean isCurrentProfile(int)
    {
        com.android.server.am.ActivityManagerService$LocalService r0;
        int i0;
        com.android.server.am.ActivityManagerService $r1;
        com.android.server.am.UserController $r2;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityManagerService$LocalService;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        $r2 = $r1.<com.android.server.am.ActivityManagerService: com.android.server.am.UserController mUserController>;

        $z0 = virtualinvoke $r2.<com.android.server.am.UserController: boolean isCurrentProfile(int)>(i0);

        return $z0;
    }

    public boolean isDeviceOwner(int)
    {
        com.android.server.am.ActivityManagerService$LocalService r0;
        int i0, $i1;
        com.android.server.am.ActivityManagerService r1, $r3;
        java.lang.Throwable $r4;
        boolean z0;

        r0 := @this: com.android.server.am.ActivityManagerService$LocalService;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        entermonitor r1;

     label01:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

     label02:
        if i0 < 0 goto label05;

     label03:
        $r3 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        $i1 = staticinvoke <com.android.server.am.ActivityManagerService: int access$1900(com.android.server.am.ActivityManagerService)>($r3);

        if $i1 != i0 goto label05;

     label04:
        z0 = 1;

        goto label06;

     label05:
        z0 = 0;

     label06:
        exitmonitor r1;

     label07:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return z0;

     label08:
        $r4 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r4;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public boolean isPendingTopUid(int)
    {
        com.android.server.am.ActivityManagerService$LocalService r0;
        int i0;
        com.android.server.am.ActivityManagerService $r1;
        com.android.server.am.PendingStartActivityUids $r2;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityManagerService$LocalService;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        $r2 = staticinvoke <com.android.server.am.ActivityManagerService: com.android.server.am.PendingStartActivityUids access$2000(com.android.server.am.ActivityManagerService)>($r1);

        $z0 = virtualinvoke $r2.<com.android.server.am.PendingStartActivityUids: boolean isPendingTopUid(int)>(i0);

        return $z0;
    }

    public boolean isRuntimeRestarted()
    {
        com.android.server.am.ActivityManagerService$LocalService r0;
        com.android.server.am.ActivityManagerService $r1;
        com.android.server.SystemServiceManager $r2;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityManagerService$LocalService;

        $r1 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        $r2 = $r1.<com.android.server.am.ActivityManagerService: com.android.server.SystemServiceManager mSystemServiceManager>;

        $z0 = virtualinvoke $r2.<com.android.server.SystemServiceManager: boolean isRuntimeRestarted()>();

        return $z0;
    }

    public boolean isSystemReady()
    {
        com.android.server.am.ActivityManagerService$LocalService r0;
        com.android.server.am.ActivityManagerService $r1;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityManagerService$LocalService;

        $r1 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        $z0 = $r1.<com.android.server.am.ActivityManagerService: boolean mSystemReady>;

        return $z0;
    }

    public boolean isUidActive(int)
    {
        com.android.server.am.ActivityManagerService$LocalService r0;
        int i0;
        com.android.server.am.ActivityManagerService r1, $r3;
        boolean z0;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.am.ActivityManagerService$LocalService;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r3 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        z0 = virtualinvoke $r3.<com.android.server.am.ActivityManagerService: boolean isUidActiveLocked(int)>(i0);

        exitmonitor r1;

     label2:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return z0;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean isUidCurrentlyInstrumented(int)
    {
        com.android.server.am.ActivityManagerService$LocalService r0;
        int i0, $i1, $i2, i3;
        com.android.server.am.ActivityManagerService r1, $r2, $r4;
        java.util.ArrayList $r3, $r5;
        java.lang.Object $r6;
        boolean $z0;
        android.content.pm.ApplicationInfo $r7, $r8;
        java.lang.Throwable $r9;
        com.android.server.am.ActiveInstrumentation r10;

        r0 := @this: com.android.server.am.ActivityManagerService$LocalService;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        entermonitor r1;

     label01:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r2 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        $r3 = $r2.<com.android.server.am.ActivityManagerService: java.util.ArrayList mActiveInstrumentation>;

        $i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i3 = $i1 - 1;

     label02:
        if i3 < 0 goto label06;

     label03:
        $r4 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        $r5 = $r4.<com.android.server.am.ActivityManagerService: java.util.ArrayList mActiveInstrumentation>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r10 = (com.android.server.am.ActiveInstrumentation) $r6;

        $z0 = r10.<com.android.server.am.ActiveInstrumentation: boolean mFinished>;

        if $z0 != 0 goto label05;

        $r7 = r10.<com.android.server.am.ActiveInstrumentation: android.content.pm.ApplicationInfo mTargetInfo>;

        if $r7 == null goto label05;

        $r8 = r10.<com.android.server.am.ActiveInstrumentation: android.content.pm.ApplicationInfo mTargetInfo>;

        $i2 = $r8.<android.content.pm.ApplicationInfo: int uid>;

        if $i2 != i0 goto label05;

        exitmonitor r1;

     label04:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return 1;

     label05:
        i3 = i3 + -1;

        goto label02;

     label06:
        exitmonitor r1;

     label07:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return 0;

     label08:
        $r9 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public boolean isUserRunning(int, int)
    {
        com.android.server.am.ActivityManagerService$LocalService r0;
        int i0, i1;
        com.android.server.am.ActivityManagerService $r1;
        com.android.server.am.UserController $r2;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityManagerService$LocalService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        $r2 = $r1.<com.android.server.am.ActivityManagerService: com.android.server.am.UserController mUserController>;

        $z0 = virtualinvoke $r2.<com.android.server.am.UserController: boolean isUserRunning(int,int)>(i0, i1);

        return $z0;
    }

    public void killAllBackgroundProcessesExcept(int, int)
    {
        com.android.server.am.ActivityManagerService$LocalService r0;
        int i0, i1;
        com.android.server.am.ActivityManagerService r1, $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.am.ActivityManagerService$LocalService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r3 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        virtualinvoke $r3.<com.android.server.am.ActivityManagerService: void killAllBackgroundProcessesExcept(int,int)>(i0, i1);

        exitmonitor r1;

     label2:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void killForegroundAppsForUser(int)
    {
        com.android.server.am.ActivityManagerService$LocalService r0;
        com.android.server.am.ActivityManagerService r1, $r4, $r8, $r12;
        int i0, i1, $i2, i3, i4, i5, i6, i7;
        android.util.SparseArray r2;
        com.android.server.am.ProcessRecord r3, $r11;
        com.android.server.am.ProcessList $r5, $r9, $r13;
        com.android.server.am.ProcessList$MyProcessMap $r6, $r14;
        android.util.ArrayMap $r7, $r15;
        java.lang.Object $r10, $r16, $r17;
        boolean $z1, $z2, $z4;
        java.lang.Throwable $r18;
        java.util.ArrayList r19;

        r0 := @this: com.android.server.am.ActivityManagerService$LocalService;

        i3 := @parameter0: int;

        r1 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        entermonitor r1;

     label01:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        r19 = new java.util.ArrayList;

        specialinvoke r19.<java.util.ArrayList: void <init>()>();

        $r4 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        $r5 = $r4.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r6 = $r5.<com.android.server.am.ProcessList: com.android.server.am.ProcessList$MyProcessMap mProcessNames>;

        $r7 = virtualinvoke $r6.<com.android.server.am.ProcessList$MyProcessMap: android.util.ArrayMap getMap()>();

        i0 = virtualinvoke $r7.<android.util.ArrayMap: int size()>();

     label02:
        i4 = 0;

     label03:
        if i4 >= i0 goto label13;

     label04:
        $r12 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        $r13 = $r12.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r14 = $r13.<com.android.server.am.ProcessList: com.android.server.am.ProcessList$MyProcessMap mProcessNames>;

        $r15 = virtualinvoke $r14.<com.android.server.am.ProcessList$MyProcessMap: android.util.ArrayMap getMap()>();

        $r16 = virtualinvoke $r15.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i4);

        r2 = (android.util.SparseArray) $r16;

        i1 = virtualinvoke r2.<android.util.SparseArray: int size()>();

     label05:
        i5 = 0;

     label06:
        if i5 >= i1 goto label12;

     label07:
        $r17 = virtualinvoke r2.<android.util.SparseArray: java.lang.Object valueAt(int)>(i5);

        r3 = (com.android.server.am.ProcessRecord) $r17;

        $z1 = virtualinvoke r3.<com.android.server.am.ProcessRecord: boolean isPersistent()>();

        if $z1 == 0 goto label09;

     label08:
        goto label11;

     label09:
        $z2 = r3.<com.android.server.am.ProcessRecord: boolean removed>;

        if $z2 != 0 goto label10;

        $i2 = r3.<com.android.server.am.ProcessRecord: int userId>;

        if $i2 != i3 goto label11;

        $z4 = virtualinvoke r3.<com.android.server.am.ProcessRecord: boolean hasForegroundActivities()>();

        if $z4 == 0 goto label11;

     label10:
        virtualinvoke r19.<java.util.ArrayList: boolean add(java.lang.Object)>(r3);

     label11:
        i5 = i5 + 1;

        goto label06;

     label12:
        i4 = i4 + 1;

        goto label03;

     label13:
        i6 = virtualinvoke r19.<java.util.ArrayList: int size()>();

     label14:
        i7 = 0;

     label15:
        if i7 >= i6 goto label18;

     label16:
        $r8 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        $r9 = $r8.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r10 = virtualinvoke r19.<java.util.ArrayList: java.lang.Object get(int)>(i7);

        $r11 = (com.android.server.am.ProcessRecord) $r10;

        virtualinvoke $r9.<com.android.server.am.ProcessList: boolean removeProcessLocked(com.android.server.am.ProcessRecord,boolean,boolean,int,int,java.lang.String)>($r11, 0, 1, 13, 9, "kill all fg");

     label17:
        i7 = i7 + 1;

        goto label15;

     label18:
        exitmonitor r1;

     label19:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label20:
        $r18 := @caughtexception;

     label21:
        exitmonitor r1;

     label22:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r18;

        catch java.lang.Throwable from label01 to label02 with label20;
        catch java.lang.Throwable from label04 to label05 with label20;
        catch java.lang.Throwable from label07 to label08 with label20;
        catch java.lang.Throwable from label09 to label10 with label20;
        catch java.lang.Throwable from label10 to label11 with label20;
        catch java.lang.Throwable from label13 to label14 with label20;
        catch java.lang.Throwable from label16 to label17 with label20;
        catch java.lang.Throwable from label18 to label19 with label20;
        catch java.lang.Throwable from label21 to label22 with label20;
    }

    public void killProcess(java.lang.String, int, java.lang.String)
    {
        com.android.server.am.ActivityManagerService$LocalService r0;
        int i0;
        java.lang.String r1, r7;
        com.android.server.am.ActivityManagerService r2, $r3, $r4;
        com.android.server.am.ProcessList $r5;
        java.lang.Throwable $r6;
        com.android.server.am.ProcessRecord r8;

        r0 := @this: com.android.server.am.ActivityManagerService$LocalService;

        r7 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        entermonitor r2;

     label1:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r3 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        r8 = virtualinvoke $r3.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord getProcessRecordLocked(java.lang.String,int,boolean)>(r7, i0, 1);

     label2:
        if r8 == null goto label4;

     label3:
        $r4 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        $r5 = $r4.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        virtualinvoke $r5.<com.android.server.am.ProcessList: boolean removeProcessLocked(com.android.server.am.ProcessRecord,boolean,boolean,int,java.lang.String)>(r8, 0, 1, 13, r1);

     label4:
        exitmonitor r2;

     label5:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label6:
        $r6 := @caughtexception;

     label7:
        exitmonitor r2;

     label8:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public void killProcessesForRemovedTask(java.util.ArrayList)
    {
        com.android.server.am.ActivityManagerService$LocalService r0;
        com.android.server.am.ActivityManagerService r1;
        com.android.server.am.ProcessRecord r2;
        int $i0, $i1, i2;
        java.lang.Object $r3, $r5;
        com.android.server.wm.WindowProcessController $r4;
        android.util.ArraySet $r6;
        boolean $z0;
        java.lang.Throwable $r7;
        java.util.ArrayList r8;

        r0 := @this: com.android.server.am.ActivityManagerService$LocalService;

        r8 := @parameter0: java.util.ArrayList;

        r1 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        entermonitor r1;

     label01:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

     label02:
        i2 = 0;

     label03:
        $i0 = virtualinvoke r8.<java.util.ArrayList: int size()>();

        if i2 >= $i0 goto label08;

     label04:
        $r3 = virtualinvoke r8.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r4 = (com.android.server.wm.WindowProcessController) $r3;

        $r5 = $r4.<com.android.server.wm.WindowProcessController: java.lang.Object mOwner>;

        r2 = (com.android.server.am.ProcessRecord) $r5;

        $i1 = r2.<com.android.server.am.ProcessRecord: int setSchedGroup>;

        if $i1 != 0 goto label06;

        $r6 = r2.<com.android.server.am.ProcessRecord: android.util.ArraySet curReceivers>;

        $z0 = virtualinvoke $r6.<android.util.ArraySet: boolean isEmpty()>();

        if $z0 == 0 goto label06;

        virtualinvoke r2.<com.android.server.am.ProcessRecord: void kill(java.lang.String,int,int,boolean)>("remove task", 10, 0, 1);

     label05:
        goto label07;

     label06:
        r2.<com.android.server.am.ProcessRecord: java.lang.String waitingToKill> = "remove task";

     label07:
        i2 = i2 + 1;

        goto label03;

     label08:
        exitmonitor r1;

     label09:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label10:
        $r7 := @caughtexception;

     label11:
        exitmonitor r1;

     label12:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public void lambda$disconnectActivityFromServices$0$ActivityManagerService$LocalService(com.android.server.wm.ActivityServiceConnectionsHolder, java.lang.Object)
    {
        com.android.server.am.ActivityManagerService$LocalService r0;
        com.android.server.wm.ActivityServiceConnectionsHolder r1;
        java.lang.Object r2;
        com.android.server.am.ActivityManagerService $r3;
        com.android.server.am.ConnectionRecord $r4;
        com.android.server.am.ActiveServices $r5;

        r0 := @this: com.android.server.am.ActivityManagerService$LocalService;

        r1 := @parameter0: com.android.server.wm.ActivityServiceConnectionsHolder;

        r2 := @parameter1: java.lang.Object;

        $r3 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        $r5 = $r3.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveServices mServices>;

        $r4 = (com.android.server.am.ConnectionRecord) r2;

        virtualinvoke $r5.<com.android.server.am.ActiveServices: void removeConnectionLocked(com.android.server.am.ConnectionRecord,com.android.server.am.ProcessRecord,com.android.server.wm.ActivityServiceConnectionsHolder)>($r4, null, r1);

        return;
    }

    public void monitor()
    {
        com.android.server.am.ActivityManagerService$LocalService r0;
        com.android.server.am.ActivityManagerService $r1;

        r0 := @this: com.android.server.am.ActivityManagerService$LocalService;

        $r1 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        virtualinvoke $r1.<com.android.server.am.ActivityManagerService: void monitor()>();

        return;
    }

    public void notifyNetworkPolicyRulesUpdated(int, long)
    {
        com.android.server.am.ActivityManagerService$LocalService r0;
        int i0;
        long l1, $l2, $l4;
        com.android.server.am.ActivityManagerService $r1, r6;
        com.android.server.am.ProcessList $r2;
        byte $b3, $b5;
        boolean $z0;
        java.lang.Object $r3, r8;
        java.lang.Throwable $r4, $r5;
        com.android.server.am.UidRecord r7;

        r0 := @this: com.android.server.am.ActivityManagerService$LocalService;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        r6 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        entermonitor r6;

     label01:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r1 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        $r2 = $r1.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        r7 = virtualinvoke $r2.<com.android.server.am.ProcessList: com.android.server.am.UidRecord getUidRecordLocked(int)>(i0);

     label02:
        if r7 != null goto label05;

     label03:
        exitmonitor r6;

     label04:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label05:
        exitmonitor r6;

     label06:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        r8 = r7.<com.android.server.am.UidRecord: java.lang.Object networkStateLock>;

        entermonitor r8;

     label07:
        $l2 = r7.<com.android.server.am.UidRecord: long lastNetworkUpdatedProcStateSeq>;

        $b3 = $l2 cmp l1;

        if $b3 < 0 goto label09;

        exitmonitor r8;

     label08:
        return;

     label09:
        r7.<com.android.server.am.UidRecord: long lastNetworkUpdatedProcStateSeq> = l1;

        $l4 = r7.<com.android.server.am.UidRecord: long curProcStateSeq>;

        $b5 = $l4 cmp l1;

        if $b5 <= 0 goto label11;

        exitmonitor r8;

     label10:
        return;

     label11:
        $z0 = r7.<com.android.server.am.UidRecord: boolean waitingForNetwork>;

        if $z0 == 0 goto label12;

        $r3 = r7.<com.android.server.am.UidRecord: java.lang.Object networkStateLock>;

        virtualinvoke $r3.<java.lang.Object: void notifyAll()>();

     label12:
        exitmonitor r8;

     label13:
        return;

     label14:
        $r4 := @caughtexception;

     label15:
        exitmonitor r8;

     label16:
        throw $r4;

     label17:
        $r5 := @caughtexception;

     label18:
        exitmonitor r6;

     label19:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r5;

        catch java.lang.Throwable from label01 to label02 with label17;
        catch java.lang.Throwable from label03 to label04 with label17;
        catch java.lang.Throwable from label05 to label06 with label17;
        catch java.lang.Throwable from label07 to label08 with label14;
        catch java.lang.Throwable from label09 to label10 with label14;
        catch java.lang.Throwable from label11 to label12 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label15 to label16 with label14;
        catch java.lang.Throwable from label18 to label19 with label17;
    }

    public void onUserRemoved(int)
    {
        com.android.server.am.ActivityManagerService$LocalService r0;
        int i0;
        com.android.server.am.ActivityManagerService $r1, $r3, $r5;
        com.android.server.wm.ActivityTaskManagerInternal $r2;
        com.android.server.am.BatteryStatsService $r4;
        com.android.server.am.UserController $r6;

        r0 := @this: com.android.server.am.ActivityManagerService$LocalService;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        $r2 = $r1.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerInternal mAtmInternal>;

        virtualinvoke $r2.<com.android.server.wm.ActivityTaskManagerInternal: void onUserStopped(int)>(i0);

        $r3 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        $r4 = $r3.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        virtualinvoke $r4.<com.android.server.am.BatteryStatsService: void onUserRemoved(int)>(i0);

        $r5 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        $r6 = $r5.<com.android.server.am.ActivityManagerService: com.android.server.am.UserController mUserController>;

        virtualinvoke $r6.<com.android.server.am.UserController: void onUserRemoved(int)>(i0);

        return;
    }

    public void onWakefulnessChanged(int)
    {
        com.android.server.am.ActivityManagerService$LocalService r0;
        int i0;
        com.android.server.am.ActivityManagerService $r1;

        r0 := @this: com.android.server.am.ActivityManagerService$LocalService;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        virtualinvoke $r1.<com.android.server.am.ActivityManagerService: void onWakefulnessChanged(int)>(i0);

        return;
    }

    public void prepareForPossibleShutdown()
    {
        com.android.server.am.ActivityManagerService$LocalService r0;
        com.android.server.am.ActivityManagerService $r1;

        r0 := @this: com.android.server.am.ActivityManagerService$LocalService;

        $r1 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        virtualinvoke $r1.<com.android.server.am.ActivityManagerService: void prepareForPossibleShutdown()>();

        return;
    }

    public void registerProcessObserver(android.app.IProcessObserver)
    {
        com.android.server.am.ActivityManagerService$LocalService r0;
        android.app.IProcessObserver r1;
        com.android.server.am.ActivityManagerService $r2;

        r0 := @this: com.android.server.am.ActivityManagerService$LocalService;

        r1 := @parameter0: android.app.IProcessObserver;

        $r2 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        virtualinvoke $r2.<com.android.server.am.ActivityManagerService: void registerProcessObserver(android.app.IProcessObserver)>(r1);

        return;
    }

    public void reportCurKeyguardUsageEvent(boolean)
    {
        com.android.server.am.ActivityManagerService$LocalService r0;
        boolean z0;
        com.android.server.am.ActivityManagerService r1, r3;
        java.lang.Throwable $r2;
        byte b0;

        r0 := @this: com.android.server.am.ActivityManagerService$LocalService;

        z0 := @parameter0: boolean;

        r1 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        r3 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

     label2:
        if z0 == 0 goto label3;

        b0 = 17;

        goto label4;

     label3:
        b0 = 18;

     label4:
        virtualinvoke r3.<com.android.server.am.ActivityManagerService: void reportGlobalUsageEventLocked(int)>(b0);

        exitmonitor r1;

     label5:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label6:
        $r2 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public void scheduleAppGcs()
    {
        com.android.server.am.ActivityManagerService$LocalService r0;
        com.android.server.am.ActivityManagerService r1, $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.am.ActivityManagerService$LocalService;

        r1 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r3 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        virtualinvoke $r3.<com.android.server.am.ActivityManagerService: void scheduleAppGcsLocked()>();

        exitmonitor r1;

     label2:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void sendForegroundProfileChanged(int)
    {
        com.android.server.am.ActivityManagerService$LocalService r0;
        int i0;
        com.android.server.am.ActivityManagerService $r1;
        com.android.server.am.UserController $r2;

        r0 := @this: com.android.server.am.ActivityManagerService$LocalService;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        $r2 = $r1.<com.android.server.am.ActivityManagerService: com.android.server.am.UserController mUserController>;

        virtualinvoke $r2.<com.android.server.am.UserController: void sendForegroundProfileChanged(int)>(i0);

        return;
    }

    public void setBooted(boolean)
    {
        com.android.server.am.ActivityManagerService$LocalService r0;
        boolean z0;
        com.android.server.am.ActivityManagerService $r1;

        r0 := @this: com.android.server.am.ActivityManagerService$LocalService;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        $r1.<com.android.server.am.ActivityManagerService: boolean mBooted> = z0;

        return;
    }

    public void setBooting(boolean)
    {
        com.android.server.am.ActivityManagerService$LocalService r0;
        boolean z0;
        com.android.server.am.ActivityManagerService $r1;

        r0 := @this: com.android.server.am.ActivityManagerService$LocalService;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        $r1.<com.android.server.am.ActivityManagerService: boolean mBooting> = z0;

        return;
    }

    public void setDebugFlagsForStartingActivity(android.content.pm.ActivityInfo, int, android.app.ProfilerInfo, java.lang.Object)
    {
        com.android.server.am.ActivityManagerService$LocalService r0;
        int i0, $i1, $i2, $i3;
        android.app.ProfilerInfo r1;
        java.lang.Object r2;
        com.android.server.am.ActivityManagerService r3, $r6, $r9, $r12, $r14;
        java.lang.String $r4, $r7, $r10, $r13;
        android.content.pm.ApplicationInfo $r5, $r8, $r11;
        java.lang.Throwable $r15, $r16;
        android.content.pm.ActivityInfo r17;

        r0 := @this: com.android.server.am.ActivityManagerService$LocalService;

        r17 := @parameter0: android.content.pm.ActivityInfo;

        i0 := @parameter1: int;

        r1 := @parameter2: android.app.ProfilerInfo;

        r2 := @parameter3: java.lang.Object;

        r3 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        entermonitor r3;

     label01:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        entermonitor r2;

     label02:
        $i1 = i0 & 2;

        if $i1 == 0 goto label06;

     label03:
        $r14 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        $r13 = r17.<android.content.pm.ActivityInfo: java.lang.String processName>;

        virtualinvoke $r14.<com.android.server.am.ActivityManagerService: void setDebugApp(java.lang.String,boolean,boolean)>($r13, 1, 0);

     label04:
        goto label06;

     label05:
        $r16 := @caughtexception;

        goto label15;

     label06:
        $i2 = i0 & 8;

        if $i2 == 0 goto label08;

     label07:
        $r12 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        $r11 = r17.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r10 = r17.<android.content.pm.ActivityInfo: java.lang.String processName>;

        virtualinvoke $r12.<com.android.server.am.ActivityManagerService: void setNativeDebuggingAppLocked(android.content.pm.ApplicationInfo,java.lang.String)>($r11, $r10);

     label08:
        $i3 = i0 & 4;

        if $i3 == 0 goto label10;

     label09:
        $r9 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        $r8 = r17.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r7 = r17.<android.content.pm.ActivityInfo: java.lang.String processName>;

        virtualinvoke $r9.<com.android.server.am.ActivityManagerService: void setTrackAllocationApp(android.content.pm.ApplicationInfo,java.lang.String)>($r8, $r7);

     label10:
        if r1 == null goto label12;

     label11:
        $r6 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        $r5 = r17.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r4 = r17.<android.content.pm.ActivityInfo: java.lang.String processName>;

        virtualinvoke $r6.<com.android.server.am.ActivityManagerService: void setProfileApp(android.content.pm.ApplicationInfo,java.lang.String,android.app.ProfilerInfo)>($r5, $r4, r1);

     label12:
        virtualinvoke r2.<java.lang.Object: void notify()>();

        exitmonitor r2;

     label13:
        exitmonitor r3;

     label14:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label15:
        exitmonitor r2;

     label16:
        throw $r16;

     label17:
        $r15 := @caughtexception;

     label18:
        exitmonitor r3;

     label19:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r15;

        catch java.lang.Throwable from label01 to label02 with label17;
        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label07 to label08 with label05;
        catch java.lang.Throwable from label09 to label10 with label05;
        catch java.lang.Throwable from label11 to label12 with label05;
        catch java.lang.Throwable from label12 to label13 with label05;
        catch java.lang.Throwable from label13 to label14 with label17;
        catch java.lang.Throwable from label15 to label16 with label05;
        catch java.lang.Throwable from label16 to label17 with label17;
        catch java.lang.Throwable from label18 to label19 with label17;
    }

    public void setDeviceIdleWhitelist(int[], int[])
    {
        com.android.server.am.ActivityManagerService$LocalService r0;
        int[] r1, r6;
        com.android.server.am.ActivityManagerService r2, $r3, $r4;
        java.lang.Throwable $r5;

        r0 := @this: com.android.server.am.ActivityManagerService$LocalService;

        r6 := @parameter0: int[];

        r1 := @parameter1: int[];

        r2 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        entermonitor r2;

     label1:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r3 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        $r3.<com.android.server.am.ActivityManagerService: int[] mDeviceIdleWhitelist> = r6;

        $r4 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        $r4.<com.android.server.am.ActivityManagerService: int[] mDeviceIdleExceptIdleWhitelist> = r1;

        exitmonitor r2;

     label2:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r2;

     label5:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void setDeviceOwnerUid(int)
    {
        com.android.server.am.ActivityManagerService$LocalService r0;
        int i0;
        com.android.server.am.ActivityManagerService r1, $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.am.ActivityManagerService$LocalService;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r3 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        staticinvoke <com.android.server.am.ActivityManagerService: int access$1902(com.android.server.am.ActivityManagerService,int)>($r3, i0);

        exitmonitor r1;

     label2:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void setHasOverlayUi(int, boolean)
    {
        com.android.server.am.ActivityManagerService$LocalService r0;
        int i0;
        boolean z0, $z1;
        com.android.server.am.ActivityManagerService r1, $r2, $r3, $r5;
        com.android.server.am.ActivityManagerService$PidMap $r4, r11;
        java.lang.String $r8;
        java.lang.Throwable $r9, $r10;
        com.android.server.am.ProcessRecord r12;
        java.lang.StringBuilder r13;

        r0 := @this: com.android.server.am.ActivityManagerService$LocalService;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        entermonitor r1;

     label01:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r2 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        r11 = $r2.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        entermonitor r11;

     label02:
        $r3 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        $r4 = $r3.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        r12 = virtualinvoke $r4.<com.android.server.am.ActivityManagerService$PidMap: com.android.server.am.ProcessRecord get(int)>(i0);

     label03:
        if r12 != null goto label07;

     label04:
        r13 = new java.lang.StringBuilder;

        specialinvoke r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setHasOverlayUi called on unknown pid: ");

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r8);

        exitmonitor r11;

     label05:
        exitmonitor r1;

     label06:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label07:
        exitmonitor r11;

     label08:
        $z1 = virtualinvoke r12.<com.android.server.am.ProcessRecord: boolean hasOverlayUi()>();

        if $z1 != z0 goto label10;

        exitmonitor r1;

     label09:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label10:
        virtualinvoke r12.<com.android.server.am.ProcessRecord: void setHasOverlayUi(boolean)>(z0);

        $r5 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        virtualinvoke $r5.<com.android.server.am.ActivityManagerService: boolean updateOomAdjLocked(com.android.server.am.ProcessRecord,boolean,java.lang.String)>(r12, 1, "updateOomAdj_uiVisibility");

     label11:
        exitmonitor r1;

     label12:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label13:
        $r9 := @caughtexception;

     label14:
        exitmonitor r11;

     label15:
        throw $r9;

     label16:
        $r10 := @caughtexception;

     label17:
        exitmonitor r1;

     label18:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r10;

        catch java.lang.Throwable from label01 to label02 with label16;
        catch java.lang.Throwable from label02 to label03 with label13;
        catch java.lang.Throwable from label04 to label05 with label13;
        catch java.lang.Throwable from label05 to label06 with label16;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.lang.Throwable from label08 to label09 with label16;
        catch java.lang.Throwable from label10 to label11 with label16;
        catch java.lang.Throwable from label11 to label12 with label16;
        catch java.lang.Throwable from label14 to label15 with label13;
        catch java.lang.Throwable from label15 to label16 with label16;
        catch java.lang.Throwable from label17 to label18 with label16;
    }

    public void setPendingIntentAllowBgActivityStarts(android.content.IIntentSender, android.os.IBinder, int)
    {
        com.android.server.am.ActivityManagerService$LocalService r0;
        int i0;
        com.android.server.am.ActivityManagerService r1;
        boolean $z0;
        com.android.server.am.PendingIntentRecord $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r6;
        java.lang.Throwable $r7;
        android.content.IIntentSender r8;
        android.os.IBinder r9;

        r0 := @this: com.android.server.am.ActivityManagerService$LocalService;

        r8 := @parameter0: android.content.IIntentSender;

        r9 := @parameter1: android.os.IBinder;

        i0 := @parameter2: int;

        $z0 = r8 instanceof com.android.server.am.PendingIntentRecord;

        if $z0 != 0 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setPendingIntentAllowBgActivityStarts(): not a PendingIntentRecord: ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r8);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r6);

        return;

     label1:
        r1 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        entermonitor r1;

     label2:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r2 = (com.android.server.am.PendingIntentRecord) r8;

        virtualinvoke $r2.<com.android.server.am.PendingIntentRecord: void setAllowBgActivityStarts(android.os.IBinder,int)>(r9, i0);

        exitmonitor r1;

     label3:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label4:
        $r7 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r7;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void setPendingIntentWhitelistDuration(android.content.IIntentSender, android.os.IBinder, long)
    {
        com.android.server.am.ActivityManagerService$LocalService r0;
        android.content.IIntentSender r1;
        android.os.IBinder r2;
        long l0;
        com.android.server.am.ActivityManagerService $r3;
        com.android.server.am.PendingIntentController $r4;

        r0 := @this: com.android.server.am.ActivityManagerService$LocalService;

        r1 := @parameter0: android.content.IIntentSender;

        r2 := @parameter1: android.os.IBinder;

        l0 := @parameter2: long;

        $r3 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        $r4 = $r3.<com.android.server.am.ActivityManagerService: com.android.server.am.PendingIntentController mPendingIntentController>;

        virtualinvoke $r4.<com.android.server.am.PendingIntentController: void setPendingIntentWhitelistDuration(android.content.IIntentSender,android.os.IBinder,long)>(r1, r2, l0);

        return;
    }

    public void setSwitchingFromSystemUserMessage(java.lang.String)
    {
        com.android.server.am.ActivityManagerService$LocalService r0;
        java.lang.String r1;
        com.android.server.am.ActivityManagerService $r2;
        com.android.server.am.UserController $r3;

        r0 := @this: com.android.server.am.ActivityManagerService$LocalService;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        $r3 = $r2.<com.android.server.am.ActivityManagerService: com.android.server.am.UserController mUserController>;

        virtualinvoke $r3.<com.android.server.am.UserController: void setSwitchingFromSystemUserMessage(java.lang.String)>(r1);

        return;
    }

    public void setSwitchingToSystemUserMessage(java.lang.String)
    {
        com.android.server.am.ActivityManagerService$LocalService r0;
        java.lang.String r1;
        com.android.server.am.ActivityManagerService $r2;
        com.android.server.am.UserController $r3;

        r0 := @this: com.android.server.am.ActivityManagerService$LocalService;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        $r3 = $r2.<com.android.server.am.ActivityManagerService: com.android.server.am.UserController mUserController>;

        virtualinvoke $r3.<com.android.server.am.UserController: void setSwitchingToSystemUserMessage(java.lang.String)>(r1);

        return;
    }

    public boolean shouldConfirmCredentials(int)
    {
        com.android.server.am.ActivityManagerService$LocalService r0;
        int i0;
        com.android.server.am.ActivityManagerService $r1;
        com.android.server.am.UserController $r2;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityManagerService$LocalService;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        $r2 = $r1.<com.android.server.am.ActivityManagerService: com.android.server.am.UserController mUserController>;

        $z0 = virtualinvoke $r2.<com.android.server.am.UserController: boolean shouldConfirmCredentials(int)>(i0);

        return $z0;
    }

    public boolean startIsolatedProcess(java.lang.String, java.lang.String[], java.lang.String, java.lang.String, int, java.lang.Runnable)
    {
        com.android.server.am.ActivityManagerService$LocalService r0;
        java.lang.String r1, r3, r4;
        java.lang.String[] r2;
        int i0;
        java.lang.Runnable r5;
        com.android.server.am.ActivityManagerService $r6;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityManagerService$LocalService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String[];

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        i0 := @parameter4: int;

        r5 := @parameter5: java.lang.Runnable;

        $r6 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        $z0 = virtualinvoke $r6.<com.android.server.am.ActivityManagerService: boolean startIsolatedProcess(java.lang.String,java.lang.String[],java.lang.String,java.lang.String,int,java.lang.Runnable)>(r1, r2, r3, r4, i0, r5);

        return $z0;
    }

    public void startProcess(java.lang.String, android.content.pm.ApplicationInfo, boolean, boolean, java.lang.String, android.content.ComponentName)
    {
        com.android.server.am.ActivityManagerService$LocalService r0;
        android.content.pm.ApplicationInfo r1;
        boolean z0, z1, $z2;
        java.lang.String r2, $r9, r13;
        android.content.ComponentName r3;
        com.android.server.am.ActivityManagerService r4, r15;
        com.android.server.am.HostingRecord r5;
        java.lang.Throwable $r10, $r11, $r12, r17;
        java.lang.StringBuilder r14;

        r0 := @this: com.android.server.am.ActivityManagerService$LocalService;

        r13 := @parameter0: java.lang.String;

        r1 := @parameter1: android.content.pm.ApplicationInfo;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        r2 := @parameter4: java.lang.String;

        r3 := @parameter5: android.content.ComponentName;

     label01:
        $z2 = staticinvoke <android.os.Trace: boolean isTagEnabled(long)>(64L);

        if $z2 == 0 goto label04;

        r14 = new java.lang.StringBuilder;

        specialinvoke r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("startProcess:");

     label02:
        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13);

        $r9 = virtualinvoke r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.os.Trace: void traceBegin(long,java.lang.String)>(64L, $r9);

     label03:
        goto label04;

     label04:
        r15 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        entermonitor r15;

     label05:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        r4 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        r5 = new com.android.server.am.HostingRecord;

        specialinvoke r5.<com.android.server.am.HostingRecord: void <init>(java.lang.String,android.content.ComponentName,boolean)>(r2, r3, z1);

        virtualinvoke r4.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord startProcessLocked(java.lang.String,android.content.pm.ApplicationInfo,boolean,int,com.android.server.am.HostingRecord,int,boolean,boolean,boolean)>(r13, r1, z0, 0, r5, 1, 0, 0, 1);

        exitmonitor r15;

     label06:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

     label07:
        staticinvoke <android.os.Trace: void traceEnd(long)>(64L);

        return;

     label08:
        $r11 := @caughtexception;

     label09:
        exitmonitor r15;

     label10:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r11;

     label11:
        $r12 := @caughtexception;

        r17 = $r12;

        goto label13;

     label12:
        $r10 := @caughtexception;

        r17 = $r10;

     label13:
        staticinvoke <android.os.Trace: void traceEnd(long)>(64L);

        throw r17;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label02 to label03 with label11;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label09 to label10 with label08;
        catch java.lang.Throwable from label10 to label11 with label11;
    }

    public android.content.ComponentName startServiceInPackage(int, android.content.Intent, java.lang.String, boolean, java.lang.String, java.lang.String, int, boolean) throws android.os.TransactionTooLargeException
    {
        com.android.server.am.ActivityManagerService$LocalService r0;
        int i0, i1;
        java.lang.String r1, r2, r3;
        boolean z0, z1;
        com.android.server.am.ActivityManagerService r4, $r5;
        long l2;
        com.android.server.am.ActiveServices $r6;
        java.lang.Throwable $r7, $r8;
        android.content.Intent r9;
        android.content.ComponentName r10;

        r0 := @this: com.android.server.am.ActivityManagerService$LocalService;

        i0 := @parameter0: int;

        r9 := @parameter1: android.content.Intent;

        r1 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        r2 := @parameter4: java.lang.String;

        r3 := @parameter5: java.lang.String;

        i1 := @parameter6: int;

        z1 := @parameter7: boolean;

        r4 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        entermonitor r4;

     label01:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label02:
        $r5 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        $r6 = $r5.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveServices mServices>;

        r10 = virtualinvoke $r6.<com.android.server.am.ActiveServices: android.content.ComponentName startServiceLocked(android.app.IApplicationThread,android.content.Intent,java.lang.String,int,int,boolean,java.lang.String,java.lang.String,int,boolean)>(null, r9, r1, -1, i0, z0, r2, r3, i1, z1);

     label03:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

     label04:
        exitmonitor r4;

     label05:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return r10;

     label06:
        $r8 := @caughtexception;

     label07:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

     label08:
        throw $r8;

     label09:
        $r7 := @caughtexception;

     label10:
        exitmonitor r4;

     label11:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label02 to label03 with label06;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label08 to label09 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public void tempWhitelistForPendingIntent(int, int, int, long, java.lang.String)
    {
        com.android.server.am.ActivityManagerService$LocalService r0;
        int i0, i1, i2;
        long l3;
        com.android.server.am.ActivityManagerService r1, $r2;
        java.lang.Throwable $r3;
        java.lang.String r4;

        r0 := @this: com.android.server.am.ActivityManagerService$LocalService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        l3 := @parameter3: long;

        r4 := @parameter4: java.lang.String;

        r1 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r2 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        virtualinvoke $r2.<com.android.server.am.ActivityManagerService: void tempWhitelistForPendingIntentLocked(int,int,int,long,java.lang.String)>(i0, i1, i2, l3, r4);

        exitmonitor r1;

     label2:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void trimApplications()
    {
        com.android.server.am.ActivityManagerService$LocalService r0;
        com.android.server.am.ActivityManagerService $r1;

        r0 := @this: com.android.server.am.ActivityManagerService$LocalService;

        $r1 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        virtualinvoke $r1.<com.android.server.am.ActivityManagerService: void trimApplications(java.lang.String)>("updateOomAdj_activityChange");

        return;
    }

    public void unregisterProcessObserver(android.app.IProcessObserver)
    {
        com.android.server.am.ActivityManagerService$LocalService r0;
        android.app.IProcessObserver r1;
        com.android.server.am.ActivityManagerService $r2;

        r0 := @this: com.android.server.am.ActivityManagerService$LocalService;

        r1 := @parameter0: android.app.IProcessObserver;

        $r2 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        virtualinvoke $r2.<com.android.server.am.ActivityManagerService: void unregisterProcessObserver(android.app.IProcessObserver)>(r1);

        return;
    }

    public void updateActivityUsageStats(android.content.ComponentName, int, int, android.os.IBinder, android.content.ComponentName)
    {
        com.android.server.am.ActivityManagerService$LocalService r0;
        int i0, i1;
        android.os.IBinder r1;
        android.content.ComponentName r2, r6;
        com.android.server.am.ActivityManagerService r3, $r4;
        java.lang.Throwable $r5;

        r0 := @this: com.android.server.am.ActivityManagerService$LocalService;

        r6 := @parameter0: android.content.ComponentName;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: android.os.IBinder;

        r2 := @parameter4: android.content.ComponentName;

        r3 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        entermonitor r3;

     label1:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r4 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        virtualinvoke $r4.<com.android.server.am.ActivityManagerService: void updateActivityUsageStats(android.content.ComponentName,int,int,android.os.IBinder,android.content.ComponentName)>(r6, i0, i1, r1, r2);

        exitmonitor r3;

     label2:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r3;

     label5:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void updateBatteryStats(android.content.ComponentName, int, int, boolean)
    {
        com.android.server.am.ActivityManagerService$LocalService r0;
        int i0, i1;
        boolean z0;
        com.android.server.am.ActivityManagerService r1, $r2;
        java.lang.Throwable $r3;
        android.content.ComponentName r4;

        r0 := @this: com.android.server.am.ActivityManagerService$LocalService;

        r4 := @parameter0: android.content.ComponentName;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        r1 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r2 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        virtualinvoke $r2.<com.android.server.am.ActivityManagerService: void updateBatteryStats(android.content.ComponentName,int,int,boolean)>(r4, i0, i1, z0);

        exitmonitor r1;

     label2:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void updateCpuStats()
    {
        com.android.server.am.ActivityManagerService$LocalService r0;
        com.android.server.am.ActivityManagerService r1, $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.am.ActivityManagerService$LocalService;

        r1 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r3 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        virtualinvoke $r3.<com.android.server.am.ActivityManagerService: void updateCpuStats()>();

        exitmonitor r1;

     label2:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void updateDeviceIdleTempWhitelist(int[], int, boolean)
    {
        com.android.server.am.ActivityManagerService$LocalService r0;
        int i0;
        boolean z0;
        com.android.server.am.ActivityManagerService r1, $r2, $r3;
        java.lang.Throwable $r4;
        int[] r5;

        r0 := @this: com.android.server.am.ActivityManagerService$LocalService;

        r5 := @parameter0: int[];

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        r1 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r2 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        $r2.<com.android.server.am.ActivityManagerService: int[] mDeviceIdleTempWhitelist> = r5;

        $r3 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        virtualinvoke $r3.<com.android.server.am.ActivityManagerService: void setAppIdTempWhitelistStateLocked(int,boolean)>(i0, z0);

        exitmonitor r1;

     label2:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void updateForegroundTimeIfOnBattery(java.lang.String, int, long)
    {
        com.android.server.am.ActivityManagerService$LocalService r0;
        int i0;
        long l1;
        com.android.server.am.ActivityManagerService r1, $r3, $r5;
        com.android.internal.os.BatteryStatsImpl r2;
        com.android.server.am.BatteryStatsService $r4, $r6;
        boolean $z0;
        java.lang.Throwable $r7, $r8;
        java.lang.String r9;
        com.android.internal.os.BatteryStatsImpl$Uid$Proc r10;

        r0 := @this: com.android.server.am.ActivityManagerService$LocalService;

        r9 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        r1 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        entermonitor r1;

     label01:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r3 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        $r4 = $r3.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        $z0 = virtualinvoke $r4.<com.android.server.am.BatteryStatsService: boolean isOnBattery()>();

        if $z0 != 0 goto label03;

        exitmonitor r1;

     label02:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label03:
        $r5 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        $r6 = $r5.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        r2 = virtualinvoke $r6.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl getActiveStatistics()>();

        entermonitor r2;

     label04:
        r10 = virtualinvoke r2.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid$Proc getProcessStatsLocked(int,java.lang.String)>(i0, r9);

     label05:
        if r10 == null goto label07;

     label06:
        virtualinvoke r10.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: void addForegroundTimeLocked(long)>(l1);

     label07:
        exitmonitor r2;

     label08:
        exitmonitor r1;

     label09:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label10:
        $r7 := @caughtexception;

     label11:
        exitmonitor r2;

     label12:
        throw $r7;

     label13:
        $r8 := @caughtexception;

     label14:
        exitmonitor r1;

     label15:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label11 to label12 with label10;
        catch java.lang.Throwable from label12 to label13 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
    }

    public void updateOomAdj()
    {
        com.android.server.am.ActivityManagerService$LocalService r0;
        com.android.server.am.ActivityManagerService r1, $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.am.ActivityManagerService$LocalService;

        r1 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r3 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        virtualinvoke $r3.<com.android.server.am.ActivityManagerService: void updateOomAdjLocked(java.lang.String)>("updateOomAdj_meh");

        exitmonitor r1;

     label2:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void updateOomLevelsForDisplay(int)
    {
        com.android.server.am.ActivityManagerService$LocalService r0;
        int i0;
        com.android.server.am.ActivityManagerService r1, $r3, $r5, $r6;
        com.android.server.wm.WindowManagerService $r4, $r7;
        com.android.server.am.ProcessList $r8;
        java.lang.Throwable $r9;

        r0 := @this: com.android.server.am.ActivityManagerService$LocalService;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r3 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        $r4 = $r3.<com.android.server.am.ActivityManagerService: com.android.server.wm.WindowManagerService mWindowManager>;

        if $r4 == null goto label2;

        $r5 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        $r8 = $r5.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r6 = r0.<com.android.server.am.ActivityManagerService$LocalService: com.android.server.am.ActivityManagerService this$0>;

        $r7 = $r6.<com.android.server.am.ActivityManagerService: com.android.server.wm.WindowManagerService mWindowManager>;

        virtualinvoke $r8.<com.android.server.am.ProcessList: void applyDisplaySize(com.android.server.wm.WindowManagerService)>($r7);

     label2:
        exitmonitor r1;

     label3:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label4:
        $r9 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }
}
