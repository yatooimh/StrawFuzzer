final class com.android.server.am.ActivityManagerService$MainHandler extends android.os.Handler
{
    final com.android.server.am.ActivityManagerService this$0;

    public void <init>(com.android.server.am.ActivityManagerService, android.os.Looper)
    {
        com.android.server.am.ActivityManagerService$MainHandler r0;
        com.android.server.am.ActivityManagerService r1;
        android.os.Looper r2;

        r0 := @this: com.android.server.am.ActivityManagerService$MainHandler;

        r1 := @parameter0: com.android.server.am.ActivityManagerService;

        r2 := @parameter1: android.os.Looper;

        r0.<com.android.server.am.ActivityManagerService$MainHandler: com.android.server.am.ActivityManagerService this$0> = r1;

        specialinvoke r0.<android.os.Handler: void <init>(android.os.Looper,android.os.Handler$Callback,boolean)>(r2, null, 1);

        return;
    }

    public void handleMessage(android.os.Message)
    {
        com.android.server.am.ActivityManagerService$MainHandler r0;
        boolean z0, $z3;
        com.android.server.am.ActivityManagerService $r1, $r3, $r5, $r9, $r11, $r13, $r17, $r24, $r26, $r30, $r33, $r38, $r40, $r42, $r44, $r47, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r58, $r59, $r60, $r61, $r62, $r70, $r76, $r80, $r81, $r83, $r86, $r88, $r90, r114, r119, r121, r134, r136, r138, r144, r147, r149, r151, r157, r159;
        java.lang.Object $r2, $r4, $r7, $r14, $r18, $r23, $r27, $r36, $r46, $r57, $r73, $r75, $r78, $r79, $r87, $r89;
        com.android.server.am.ActivityManagerService$MainHandler$1 $r6;
        java.util.ArrayList $r8, $r32, $r35;
        int $i0, $i1, $i3, $i4, i7, i8, i10, i11, i12, i13, i14;
        com.android.server.am.ProcessList $r10, $r12, $r25, $r31, $r34, $r39, $r41;
        com.android.server.am.ServiceRecord $r15;
        com.android.server.am.ActiveServices $r16, $r19, $r29;
        com.android.server.am.ProcessRecord $r20, $r28, r113, r130, r139, r156;
        android.os.Bundle $r21, r152;
        java.lang.CharSequence $r22;
        android.app.IApplicationThread $r37, $r85, r131, r140;
        android.os.Message $r43, r112;
        com.android.server.am.ActivityManagerConstants $r45;
        long $l2, l9;
        java.lang.String $r48, $r109, $r111, r118, r122, r125, r153, r154;
        com.android.internal.app.ProcessMap $r56, $r77;
        android.content.Intent $r63;
        android.content.Context $r71;
        android.os.UserHandle $r72;
        java.lang.Long $r74;
        com.android.server.am.ActivityManagerService$PidMap $r82, $r84, r129;
        java.lang.Throwable $r91, $r92, $r93, $r94, $r95, $r96, $r97, $r99, $r100, $r102, $r103, $r104, $r105;
        android.os.RemoteException $r98, $r101, $r106;
        android.content.pm.ApplicationInfo $r108;
        android.app.IUiAutomationConnection r116;
        android.util.Pair r123, r124;
        byte[] r128;
        java.lang.StringBuilder r142;
        android.os.AppZygote r145;

        r0 := @this: com.android.server.am.ActivityManagerService$MainHandler;

        r112 := @parameter0: android.os.Message;

        i7 = r112.<android.os.Message: int what>;

        if i7 == 5 goto label114;

        if i7 == 20 goto label108;

        if i7 == 22 goto label101;

        if i7 == 33 goto label100;

        if i7 == 41 goto label094;

        if i7 == 63 goto label088;

        if i7 == 66 goto label087;

        if i7 == 69 goto label086;

        if i7 == 71 goto label080;

        if i7 == 12 goto label079;

        if i7 == 13 goto label064;

        tableswitch(i7)
        {
            case 27: goto label057;
            case 28: goto label051;
            case 29: goto label050;
            default: goto label001;
        };

     label001:
        tableswitch(i7)
        {
            case 49: goto label038;
            case 50: goto label024;
            case 51: goto label016;
            default: goto label002;
        };

     label002:
        tableswitch(i7)
        {
            case 56: goto label011;
            case 57: goto label005;
            case 58: goto label004;
            default: goto label003;
        };

     label003:
        goto label117;

     label004:
        $r86 = r0.<com.android.server.am.ActivityManagerService$MainHandler: com.android.server.am.ActivityManagerService this$0>;

        virtualinvoke $r86.<com.android.server.am.ActivityManagerService: void idleUids()>();

        goto label117;

     label005:
        $r87 = r112.<android.os.Message: java.lang.Object obj>;

        r113 = (com.android.server.am.ProcessRecord) $r87;

        r114 = r0.<com.android.server.am.ActivityManagerService$MainHandler: com.android.server.am.ActivityManagerService this$0>;

        entermonitor r114;

     label006:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r88 = r0.<com.android.server.am.ActivityManagerService$MainHandler: com.android.server.am.ActivityManagerService this$0>;

        staticinvoke <com.android.server.am.ActivityManagerService: void access$500(com.android.server.am.ActivityManagerService,com.android.server.am.ProcessRecord)>($r88, r113);

        exitmonitor r114;

     label007:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        goto label117;

     label008:
        $r94 := @caughtexception;

     label009:
        exitmonitor r114;

     label010:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r94;

     label011:
        $r89 = r112.<android.os.Message: java.lang.Object obj>;

        r116 = (android.app.IUiAutomationConnection) $r89;

     label012:
        interfaceinvoke r116.<android.app.IUiAutomationConnection: void shutdown()>();

     label013:
        goto label015;

     label014:
        $r98 := @caughtexception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", "Error shutting down UiAutomationConnection");

     label015:
        $r90 = r0.<com.android.server.am.ActivityManagerService$MainHandler: com.android.server.am.ActivityManagerService this$0>;

        staticinvoke <com.android.server.am.ActivityManagerService: boolean access$702(com.android.server.am.ActivityManagerService,boolean)>($r90, 0);

        goto label117;

     label016:
        $r46 = r112.<android.os.Message: java.lang.Object obj>;

        r118 = (java.lang.String) $r46;

        if r118 == null goto label023;

        r119 = r0.<com.android.server.am.ActivityManagerService$MainHandler: com.android.server.am.ActivityManagerService this$0>;

        entermonitor r119;

     label017:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r47 = r0.<com.android.server.am.ActivityManagerService$MainHandler: com.android.server.am.ActivityManagerService this$0>;

        $r48 = $r47.<com.android.server.am.ActivityManagerService: java.lang.String mMemWatchDumpProcName>;

        $z3 = virtualinvoke r118.<java.lang.String: boolean equals(java.lang.Object)>($r48);

        if $z3 == 0 goto label018;

        $r49 = r0.<com.android.server.am.ActivityManagerService$MainHandler: com.android.server.am.ActivityManagerService this$0>;

        $r49.<com.android.server.am.ActivityManagerService: java.lang.String mMemWatchDumpProcName> = null;

        $r50 = r0.<com.android.server.am.ActivityManagerService$MainHandler: com.android.server.am.ActivityManagerService this$0>;

        $r50.<com.android.server.am.ActivityManagerService: android.net.Uri mMemWatchDumpUri> = null;

        $r51 = r0.<com.android.server.am.ActivityManagerService$MainHandler: com.android.server.am.ActivityManagerService this$0>;

        $r51.<com.android.server.am.ActivityManagerService: int mMemWatchDumpPid> = -1;

        $r52 = r0.<com.android.server.am.ActivityManagerService$MainHandler: com.android.server.am.ActivityManagerService this$0>;

        $r52.<com.android.server.am.ActivityManagerService: int mMemWatchDumpUid> = -1;

     label018:
        exitmonitor r119;

     label019:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        goto label023;

     label020:
        $r96 := @caughtexception;

     label021:
        exitmonitor r119;

     label022:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r96;

     label023:
        goto label117;

     label024:
        r121 = r0.<com.android.server.am.ActivityManagerService$MainHandler: com.android.server.am.ActivityManagerService this$0>;

        entermonitor r121;

     label025:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r53 = r0.<com.android.server.am.ActivityManagerService$MainHandler: com.android.server.am.ActivityManagerService this$0>;

        i8 = $r53.<com.android.server.am.ActivityManagerService: int mMemWatchDumpUid>;

        $r54 = r0.<com.android.server.am.ActivityManagerService$MainHandler: com.android.server.am.ActivityManagerService this$0>;

        r122 = $r54.<com.android.server.am.ActivityManagerService: java.lang.String mMemWatchDumpProcName>;

        $r55 = r0.<com.android.server.am.ActivityManagerService$MainHandler: com.android.server.am.ActivityManagerService this$0>;

        $r56 = $r55.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mMemWatchProcesses>;

        $r57 = virtualinvoke $r56.<com.android.internal.app.ProcessMap: java.lang.Object get(java.lang.String,int)>(r122, i8);

        r123 = (android.util.Pair) $r57;

     label026:
        r124 = r123;

        if r123 != null goto label028;

     label027:
        $r76 = r0.<com.android.server.am.ActivityManagerService$MainHandler: com.android.server.am.ActivityManagerService this$0>;

        $r77 = $r76.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mMemWatchProcesses>;

        $r78 = virtualinvoke $r77.<com.android.internal.app.ProcessMap: java.lang.Object get(java.lang.String,int)>(r122, 0);

        r124 = (android.util.Pair) $r78;

     label028:
        if r124 == null goto label031;

     label029:
        $r73 = r124.<android.util.Pair: java.lang.Object first>;

        $r74 = (java.lang.Long) $r73;

        l9 = virtualinvoke $r74.<java.lang.Long: long longValue()>();

        $r75 = r124.<android.util.Pair: java.lang.Object second>;

        r125 = (java.lang.String) $r75;

     label030:
        goto label032;

     label031:
        l9 = 0L;

        r125 = null;

     label032:
        $r58 = r0.<com.android.server.am.ActivityManagerService$MainHandler: com.android.server.am.ActivityManagerService this$0>;

        z0 = staticinvoke <com.android.server.am.ActivityManagerService: boolean access$600(com.android.server.am.ActivityManagerService)>($r58);

        $r59 = r0.<com.android.server.am.ActivityManagerService$MainHandler: com.android.server.am.ActivityManagerService this$0>;

        $r59.<com.android.server.am.ActivityManagerService: android.net.Uri mMemWatchDumpUri> = null;

        $r60 = r0.<com.android.server.am.ActivityManagerService$MainHandler: com.android.server.am.ActivityManagerService this$0>;

        $r60.<com.android.server.am.ActivityManagerService: java.lang.String mMemWatchDumpProcName> = null;

        $r61 = r0.<com.android.server.am.ActivityManagerService$MainHandler: com.android.server.am.ActivityManagerService this$0>;

        $r61.<com.android.server.am.ActivityManagerService: int mMemWatchDumpPid> = -1;

        $r62 = r0.<com.android.server.am.ActivityManagerService$MainHandler: com.android.server.am.ActivityManagerService this$0>;

        $r62.<com.android.server.am.ActivityManagerService: int mMemWatchDumpUid> = -1;

        exitmonitor r121;

     label033:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        if r122 != null goto label034;

        return;

     label034:
        $r63 = new android.content.Intent;

        specialinvoke $r63.<android.content.Intent: void <init>(java.lang.String)>("com.android.internal.intent.action.HEAP_DUMP_FINISHED");

        virtualinvoke $r63.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>("com.android.shell");

        virtualinvoke $r63.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.intent.extra.UID", i8);

        virtualinvoke $r63.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("com.android.internal.extra.heap_dump.IS_USER_INITIATED", z0);

        virtualinvoke $r63.<android.content.Intent: android.content.Intent putExtra(java.lang.String,long)>("com.android.internal.extra.heap_dump.SIZE_BYTES", l9);

        virtualinvoke $r63.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("com.android.internal.extra.heap_dump.REPORT_PACKAGE", r125);

        virtualinvoke $r63.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("com.android.internal.extra.heap_dump.PROCESS_NAME", r122);

        $r70 = r0.<com.android.server.am.ActivityManagerService$MainHandler: com.android.server.am.ActivityManagerService this$0>;

        $r71 = $r70.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r72 = staticinvoke <android.os.UserHandle: android.os.UserHandle getUserHandleForUid(int)>(i8);

        virtualinvoke $r71.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)>($r63, $r72);

        goto label117;

     label035:
        $r105 := @caughtexception;

     label036:
        exitmonitor r121;

     label037:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r105;

     label038:
        i10 = r112.<android.os.Message: int arg1>;

        $r79 = r112.<android.os.Message: java.lang.Object obj>;

        r128 = (byte[]) $r79;

        $r80 = r0.<com.android.server.am.ActivityManagerService$MainHandler: com.android.server.am.ActivityManagerService this$0>;

        r129 = $r80.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        entermonitor r129;

        i11 = 0;

     label039:
        $r81 = r0.<com.android.server.am.ActivityManagerService$MainHandler: com.android.server.am.ActivityManagerService this$0>;

        $r82 = $r81.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        $i3 = virtualinvoke $r82.<com.android.server.am.ActivityManagerService$PidMap: int size()>();

        if i11 >= $i3 goto label045;

        $r83 = r0.<com.android.server.am.ActivityManagerService$MainHandler: com.android.server.am.ActivityManagerService this$0>;

        $r84 = $r83.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        r130 = virtualinvoke $r84.<com.android.server.am.ActivityManagerService$PidMap: com.android.server.am.ProcessRecord valueAt(int)>(i11);

        $i4 = r130.<com.android.server.am.ProcessRecord: int uid>;

        if $i4 != i10 goto label044;

        r131 = r130.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

     label040:
        if r131 == null goto label044;

     label041:
        $r85 = r130.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        interfaceinvoke $r85.<android.app.IApplicationThread: void notifyCleartextNetwork(byte[])>(r128);

     label042:
        goto label044;

     label043:
        $r101 := @caughtexception;

     label044:
        i11 = i11 + 1;

        goto label039;

     label045:
        exitmonitor r129;

     label046:
        goto label117;

     label047:
        $r104 := @caughtexception;

     label048:
        exitmonitor r129;

     label049:
        throw $r104;

     label050:
        $r38 = r0.<com.android.server.am.ActivityManagerService$MainHandler: com.android.server.am.ActivityManagerService this$0>;

        $r39 = $r38.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        virtualinvoke $r39.<com.android.server.am.ProcessList: void setAllHttpProxy()>();

        goto label117;

     label051:
        r134 = r0.<com.android.server.am.ActivityManagerService$MainHandler: com.android.server.am.ActivityManagerService this$0>;

        entermonitor r134;

     label052:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r40 = r0.<com.android.server.am.ActivityManagerService$MainHandler: com.android.server.am.ActivityManagerService this$0>;

        $r41 = $r40.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        virtualinvoke $r41.<com.android.server.am.ProcessList: void clearAllDnsCacheLocked()>();

        exitmonitor r134;

     label053:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        goto label117;

     label054:
        $r91 := @caughtexception;

     label055:
        exitmonitor r134;

     label056:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r91;

     label057:
        r136 = r0.<com.android.server.am.ActivityManagerService$MainHandler: com.android.server.am.ActivityManagerService this$0>;

        entermonitor r136;

     label058:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r42 = r0.<com.android.server.am.ActivityManagerService$MainHandler: com.android.server.am.ActivityManagerService this$0>;

        virtualinvoke $r42.<com.android.server.am.ActivityManagerService: void checkExcessivePowerUsageLocked()>();

        virtualinvoke r0.<com.android.server.am.ActivityManagerService$MainHandler: void removeMessages(int)>(27);

        $r43 = virtualinvoke r0.<com.android.server.am.ActivityManagerService$MainHandler: android.os.Message obtainMessage(int)>(27);

        $r44 = r0.<com.android.server.am.ActivityManagerService$MainHandler: com.android.server.am.ActivityManagerService this$0>;

        $r45 = $r44.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerConstants mConstants>;

        $l2 = $r45.<com.android.server.am.ActivityManagerConstants: long POWER_CHECK_INTERVAL>;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService$MainHandler: boolean sendMessageDelayed(android.os.Message,long)>($r43, $l2);

     label059:
        exitmonitor r136;

     label060:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        goto label117;

     label061:
        $r100 := @caughtexception;

     label062:
        exitmonitor r136;

     label063:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r100;

     label064:
        r138 = r0.<com.android.server.am.ActivityManagerService$MainHandler: com.android.server.am.ActivityManagerService this$0>;

        entermonitor r138;

     label065:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r30 = r0.<com.android.server.am.ActivityManagerService$MainHandler: com.android.server.am.ActivityManagerService this$0>;

        $r31 = $r30.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r32 = $r31.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        $i1 = virtualinvoke $r32.<java.util.ArrayList: int size()>();

        i12 = $i1 - 1;

     label066:
        if i12 < 0 goto label074;

     label067:
        $r33 = r0.<com.android.server.am.ActivityManagerService$MainHandler: com.android.server.am.ActivityManagerService this$0>;

        $r34 = $r33.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r35 = $r34.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        $r36 = virtualinvoke $r35.<java.util.ArrayList: java.lang.Object get(int)>(i12);

        r139 = (com.android.server.am.ProcessRecord) $r36;

        r140 = r139.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

     label068:
        if r140 == null goto label073;

     label069:
        $r37 = r139.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        interfaceinvoke $r37.<android.app.IApplicationThread: void updateTimeZone()>();

     label070:
        goto label073;

     label071:
        $r106 := @caughtexception;

     label072:
        r142 = new java.lang.StringBuilder;

        specialinvoke r142.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r142.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to update time zone for: ");

        $r108 = r139.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r109 = $r108.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        virtualinvoke r142.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r109);

        $r111 = virtualinvoke r142.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r111);

     label073:
        i12 = i12 + -1;

        goto label066;

     label074:
        exitmonitor r138;

     label075:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        goto label117;

     label076:
        $r93 := @caughtexception;

     label077:
        exitmonitor r138;

     label078:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r93;

     label079:
        $r26 = r0.<com.android.server.am.ActivityManagerService$MainHandler: com.android.server.am.ActivityManagerService this$0>;

        $r29 = $r26.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveServices mServices>;

        $r27 = r112.<android.os.Message: java.lang.Object obj>;

        $r28 = (com.android.server.am.ProcessRecord) $r27;

        virtualinvoke $r29.<com.android.server.am.ActiveServices: void serviceTimeout(com.android.server.am.ProcessRecord)>($r28);

        goto label117;

     label080:
        r144 = r0.<com.android.server.am.ActivityManagerService$MainHandler: com.android.server.am.ActivityManagerService this$0>;

        entermonitor r144;

     label081:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r23 = r112.<android.os.Message: java.lang.Object obj>;

        r145 = (android.os.AppZygote) $r23;

        $r24 = r0.<com.android.server.am.ActivityManagerService$MainHandler: com.android.server.am.ActivityManagerService this$0>;

        $r25 = $r24.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        virtualinvoke $r25.<com.android.server.am.ProcessList: void killAppZygoteIfNeededLocked(android.os.AppZygote,boolean)>(r145, 0);

        exitmonitor r144;

     label082:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        goto label117;

     label083:
        $r103 := @caughtexception;

     label084:
        exitmonitor r144;

     label085:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r103;

     label086:
        $r17 = r0.<com.android.server.am.ActivityManagerService$MainHandler: com.android.server.am.ActivityManagerService this$0>;

        $r19 = $r17.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveServices mServices>;

        $r18 = r112.<android.os.Message: java.lang.Object obj>;

        $r20 = (com.android.server.am.ProcessRecord) $r18;

        $r21 = virtualinvoke r112.<android.os.Message: android.os.Bundle getData()>();

        $r22 = virtualinvoke $r21.<android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String)>("servicerecord");

        virtualinvoke $r19.<com.android.server.am.ActiveServices: void serviceForegroundCrash(com.android.server.am.ProcessRecord,java.lang.CharSequence)>($r20, $r22);

        goto label117;

     label087:
        $r13 = r0.<com.android.server.am.ActivityManagerService$MainHandler: com.android.server.am.ActivityManagerService this$0>;

        $r16 = $r13.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveServices mServices>;

        $r14 = r112.<android.os.Message: java.lang.Object obj>;

        $r15 = (com.android.server.am.ServiceRecord) $r14;

        virtualinvoke $r16.<com.android.server.am.ActiveServices: void serviceForegroundTimeout(com.android.server.am.ServiceRecord)>($r15);

        goto label117;

     label088:
        r147 = r0.<com.android.server.am.ActivityManagerService$MainHandler: com.android.server.am.ActivityManagerService this$0>;

        entermonitor r147;

     label089:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r11 = r0.<com.android.server.am.ActivityManagerService$MainHandler: com.android.server.am.ActivityManagerService this$0>;

        $r12 = $r11.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        virtualinvoke $r12.<com.android.server.am.ProcessList: void handleAllTrustStorageUpdateLocked()>();

        exitmonitor r147;

     label090:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        goto label117;

     label091:
        $r102 := @caughtexception;

     label092:
        exitmonitor r147;

     label093:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r102;

     label094:
        r149 = r0.<com.android.server.am.ActivityManagerService$MainHandler: com.android.server.am.ActivityManagerService this$0>;

        entermonitor r149;

     label095:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r9 = r0.<com.android.server.am.ActivityManagerService$MainHandler: com.android.server.am.ActivityManagerService this$0>;

        $r10 = $r9.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $i0 = r112.<android.os.Message: int arg1>;

        virtualinvoke $r10.<com.android.server.am.ProcessList: void updateAllTimePrefsLocked(int)>($i0);

        exitmonitor r149;

     label096:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        goto label117;

     label097:
        $r97 := @caughtexception;

     label098:
        exitmonitor r149;

     label099:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r97;

     label100:
        $r6 = new com.android.server.am.ActivityManagerService$MainHandler$1;

        $r7 = r112.<android.os.Message: java.lang.Object obj>;

        $r8 = (java.util.ArrayList) $r7;

        specialinvoke $r6.<com.android.server.am.ActivityManagerService$MainHandler$1: void <init>(com.android.server.am.ActivityManagerService$MainHandler,java.util.ArrayList)>(r0, $r8);

        virtualinvoke $r6.<java.lang.Thread: void start()>();

        goto label117;

     label101:
        r151 = r0.<com.android.server.am.ActivityManagerService$MainHandler: com.android.server.am.ActivityManagerService this$0>;

        entermonitor r151;

     label102:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        i13 = r112.<android.os.Message: int arg1>;

        i14 = r112.<android.os.Message: int arg2>;

        $r4 = r112.<android.os.Message: java.lang.Object obj>;

        r152 = (android.os.Bundle) $r4;

        r153 = virtualinvoke r152.<android.os.Bundle: java.lang.String getString(java.lang.String)>("pkg");

        r154 = virtualinvoke r152.<android.os.Bundle: java.lang.String getString(java.lang.String)>("reason");

        $r5 = r0.<com.android.server.am.ActivityManagerService$MainHandler: com.android.server.am.ActivityManagerService this$0>;

        virtualinvoke $r5.<com.android.server.am.ActivityManagerService: boolean forceStopPackageLocked(java.lang.String,int,boolean,boolean,boolean,boolean,boolean,int,java.lang.String)>(r153, i13, 0, 0, 1, 0, 0, i14, r154);

     label103:
        exitmonitor r151;

     label104:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        goto label117;

     label105:
        $r92 := @caughtexception;

     label106:
        exitmonitor r151;

     label107:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r92;

     label108:
        $r2 = r112.<android.os.Message: java.lang.Object obj>;

        r156 = (com.android.server.am.ProcessRecord) $r2;

        r157 = r0.<com.android.server.am.ActivityManagerService$MainHandler: com.android.server.am.ActivityManagerService this$0>;

        entermonitor r157;

     label109:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r3 = r0.<com.android.server.am.ActivityManagerService$MainHandler: com.android.server.am.ActivityManagerService this$0>;

        staticinvoke <com.android.server.am.ActivityManagerService: void access$400(com.android.server.am.ActivityManagerService,com.android.server.am.ProcessRecord)>($r3, r156);

        exitmonitor r157;

     label110:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        goto label117;

     label111:
        $r99 := @caughtexception;

     label112:
        exitmonitor r157;

     label113:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r99;

     label114:
        r159 = r0.<com.android.server.am.ActivityManagerService$MainHandler: com.android.server.am.ActivityManagerService this$0>;

        entermonitor r159;

     label115:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r1 = r0.<com.android.server.am.ActivityManagerService$MainHandler: com.android.server.am.ActivityManagerService this$0>;

        virtualinvoke $r1.<com.android.server.am.ActivityManagerService: void performAppGcsIfAppropriateLocked()>();

        exitmonitor r159;

     label116:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

     label117:
        return;

     label118:
        $r95 := @caughtexception;

     label119:
        exitmonitor r159;

     label120:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r95;

        catch java.lang.Throwable from label006 to label007 with label008;
        catch java.lang.Throwable from label009 to label010 with label008;
        catch android.os.RemoteException from label012 to label013 with label014;
        catch java.lang.Throwable from label017 to label018 with label020;
        catch java.lang.Throwable from label018 to label019 with label020;
        catch java.lang.Throwable from label021 to label022 with label020;
        catch java.lang.Throwable from label025 to label026 with label035;
        catch java.lang.Throwable from label027 to label028 with label035;
        catch java.lang.Throwable from label029 to label030 with label035;
        catch java.lang.Throwable from label032 to label033 with label035;
        catch java.lang.Throwable from label036 to label037 with label035;
        catch java.lang.Throwable from label039 to label040 with label047;
        catch android.os.RemoteException from label041 to label042 with label043;
        catch java.lang.Throwable from label041 to label042 with label047;
        catch java.lang.Throwable from label045 to label046 with label047;
        catch java.lang.Throwable from label048 to label049 with label047;
        catch java.lang.Throwable from label052 to label053 with label054;
        catch java.lang.Throwable from label055 to label056 with label054;
        catch java.lang.Throwable from label058 to label059 with label061;
        catch java.lang.Throwable from label059 to label060 with label061;
        catch java.lang.Throwable from label062 to label063 with label061;
        catch java.lang.Throwable from label065 to label066 with label076;
        catch java.lang.Throwable from label067 to label068 with label076;
        catch android.os.RemoteException from label069 to label070 with label071;
        catch java.lang.Throwable from label069 to label070 with label076;
        catch java.lang.Throwable from label072 to label073 with label076;
        catch java.lang.Throwable from label074 to label075 with label076;
        catch java.lang.Throwable from label077 to label078 with label076;
        catch java.lang.Throwable from label081 to label082 with label083;
        catch java.lang.Throwable from label084 to label085 with label083;
        catch java.lang.Throwable from label089 to label090 with label091;
        catch java.lang.Throwable from label092 to label093 with label091;
        catch java.lang.Throwable from label095 to label096 with label097;
        catch java.lang.Throwable from label098 to label099 with label097;
        catch java.lang.Throwable from label102 to label103 with label105;
        catch java.lang.Throwable from label103 to label104 with label105;
        catch java.lang.Throwable from label106 to label107 with label105;
        catch java.lang.Throwable from label109 to label110 with label111;
        catch java.lang.Throwable from label112 to label113 with label111;
        catch java.lang.Throwable from label115 to label116 with label118;
        catch java.lang.Throwable from label119 to label120 with label118;
    }
}
