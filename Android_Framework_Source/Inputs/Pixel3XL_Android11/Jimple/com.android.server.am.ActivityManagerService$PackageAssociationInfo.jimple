final class com.android.server.am.ActivityManagerService$PackageAssociationInfo extends java.lang.Object
{
    private final android.util.ArraySet mAllowedPackageAssociations;
    private boolean mIsDebuggable;
    private final java.lang.String mSourcePackage;
    final com.android.server.am.ActivityManagerService this$0;

    void <init>(com.android.server.am.ActivityManagerService, java.lang.String, android.util.ArraySet, boolean)
    {
        com.android.server.am.ActivityManagerService$PackageAssociationInfo r0;
        com.android.server.am.ActivityManagerService r1;
        java.lang.String r2;
        android.util.ArraySet r3;
        boolean z0;

        r0 := @this: com.android.server.am.ActivityManagerService$PackageAssociationInfo;

        r1 := @parameter0: com.android.server.am.ActivityManagerService;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.util.ArraySet;

        z0 := @parameter3: boolean;

        r0.<com.android.server.am.ActivityManagerService$PackageAssociationInfo: com.android.server.am.ActivityManagerService this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService$PackageAssociationInfo: java.lang.String mSourcePackage> = r2;

        r0.<com.android.server.am.ActivityManagerService$PackageAssociationInfo: android.util.ArraySet mAllowedPackageAssociations> = r3;

        r0.<com.android.server.am.ActivityManagerService$PackageAssociationInfo: boolean mIsDebuggable> = z0;

        return;
    }

    android.util.ArraySet getAllowedPackageAssociations()
    {
        com.android.server.am.ActivityManagerService$PackageAssociationInfo r0;
        android.util.ArraySet $r1;

        r0 := @this: com.android.server.am.ActivityManagerService$PackageAssociationInfo;

        $r1 = r0.<com.android.server.am.ActivityManagerService$PackageAssociationInfo: android.util.ArraySet mAllowedPackageAssociations>;

        return $r1;
    }

    boolean isDebuggable()
    {
        com.android.server.am.ActivityManagerService$PackageAssociationInfo r0;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityManagerService$PackageAssociationInfo;

        $z0 = r0.<com.android.server.am.ActivityManagerService$PackageAssociationInfo: boolean mIsDebuggable>;

        return $z0;
    }

    boolean isPackageAssociationAllowed(java.lang.String)
    {
        com.android.server.am.ActivityManagerService$PackageAssociationInfo r0;
        java.lang.String r1;
        boolean $z0, $z1, z2;
        android.util.ArraySet $r2;

        r0 := @this: com.android.server.am.ActivityManagerService$PackageAssociationInfo;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<com.android.server.am.ActivityManagerService$PackageAssociationInfo: boolean mIsDebuggable>;

        if $z0 != 0 goto label2;

        $r2 = r0.<com.android.server.am.ActivityManagerService$PackageAssociationInfo: android.util.ArraySet mAllowedPackageAssociations>;

        $z1 = virtualinvoke $r2.<android.util.ArraySet: boolean contains(java.lang.Object)>(r1);

        if $z1 == 0 goto label1;

        goto label2;

     label1:
        z2 = 0;

        goto label3;

     label2:
        z2 = 1;

     label3:
        return z2;
    }

    void setDebuggable(boolean)
    {
        com.android.server.am.ActivityManagerService$PackageAssociationInfo r0;
        boolean z0;

        r0 := @this: com.android.server.am.ActivityManagerService$PackageAssociationInfo;

        z0 := @parameter0: boolean;

        r0.<com.android.server.am.ActivityManagerService$PackageAssociationInfo: boolean mIsDebuggable> = z0;

        return;
    }
}
