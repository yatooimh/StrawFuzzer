class com.android.server.am.ActivityManagerService$PermissionController extends android.os.IPermissionController$Stub
{
    com.android.server.am.ActivityManagerService mActivityManagerService;

    void <init>(com.android.server.am.ActivityManagerService)
    {
        com.android.server.am.ActivityManagerService$PermissionController r0;
        com.android.server.am.ActivityManagerService r1;

        r0 := @this: com.android.server.am.ActivityManagerService$PermissionController;

        r1 := @parameter0: com.android.server.am.ActivityManagerService;

        specialinvoke r0.<android.os.IPermissionController$Stub: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService$PermissionController: com.android.server.am.ActivityManagerService mActivityManagerService> = r1;

        return;
    }

    public boolean checkPermission(java.lang.String, int, int)
    {
        com.android.server.am.ActivityManagerService$PermissionController r0;
        java.lang.String r1;
        int i0, i1, $i2;
        com.android.server.am.ActivityManagerService $r2;
        boolean z0;

        r0 := @this: com.android.server.am.ActivityManagerService$PermissionController;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<com.android.server.am.ActivityManagerService$PermissionController: com.android.server.am.ActivityManagerService mActivityManagerService>;

        $i2 = virtualinvoke $r2.<com.android.server.am.ActivityManagerService: int checkPermission(java.lang.String,int,int)>(r1, i0, i1);

        if $i2 != 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public int getPackageUid(java.lang.String, int)
    {
        com.android.server.am.ActivityManagerService$PermissionController r0;
        com.android.server.am.ActivityManagerService $r1;
        android.content.Context $r2;
        android.content.pm.PackageManager $r3;
        android.content.pm.PackageManager$NameNotFoundException $r4;
        java.lang.String r5;
        int i0, i1;

        r0 := @this: com.android.server.am.ActivityManagerService$PermissionController;

        r5 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

     label1:
        $r1 = r0.<com.android.server.am.ActivityManagerService$PermissionController: com.android.server.am.ActivityManagerService mActivityManagerService>;

        $r2 = $r1.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        i1 = virtualinvoke $r3.<android.content.pm.PackageManager: int getPackageUid(java.lang.String,int)>(r5, i0);

     label2:
        return i1;

     label3:
        $r4 := @caughtexception;

        return -1;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label3;
    }

    public java.lang.String[] getPackagesForUid(int)
    {
        com.android.server.am.ActivityManagerService$PermissionController r0;
        int i0;
        com.android.server.am.ActivityManagerService $r1;
        android.content.Context $r2;
        android.content.pm.PackageManager $r3;
        java.lang.String[] $r4;

        r0 := @this: com.android.server.am.ActivityManagerService$PermissionController;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.am.ActivityManagerService$PermissionController: com.android.server.am.ActivityManagerService mActivityManagerService>;

        $r2 = $r1.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r4 = virtualinvoke $r3.<android.content.pm.PackageManager: java.lang.String[] getPackagesForUid(int)>(i0);

        return $r4;
    }

    public boolean isRuntimePermission(java.lang.String)
    {
        com.android.server.am.ActivityManagerService$PermissionController r0;
        java.lang.String r1, $r12;
        int i0, $i1;
        com.android.server.am.ActivityManagerService $r4;
        android.content.Context $r5;
        android.content.pm.PackageManager $r6;
        android.content.pm.PermissionInfo $r7;
        android.content.pm.PackageManager$NameNotFoundException $r8;
        java.lang.StringBuilder $r9;
        boolean z0;

        r0 := @this: com.android.server.am.ActivityManagerService$PermissionController;

        r1 := @parameter0: java.lang.String;

        z0 = 0;

     label1:
        $r4 = r0.<com.android.server.am.ActivityManagerService$PermissionController: com.android.server.am.ActivityManagerService mActivityManagerService>;

        $r5 = $r4.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r6 = virtualinvoke $r5.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r7 = virtualinvoke $r6.<android.content.pm.PackageManager: android.content.pm.PermissionInfo getPermissionInfo(java.lang.String,int)>(r1, 0);

        i0 = $r7.<android.content.pm.PermissionInfo: int protectionLevel>;

     label2:
        $i1 = i0 & 15;

        if $i1 != 1 goto label3;

        z0 = 1;

     label3:
        return z0;

     label4:
        $r8 := @caughtexception;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No such permission: ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r12, $r8);

        return 0;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label4;
    }

    public int noteOp(java.lang.String, int, java.lang.String)
    {
        com.android.server.am.ActivityManagerService$PermissionController r0;
        java.lang.String r1, r2;
        int i0, $i1, $i2;
        com.android.server.am.ActivityManagerService $r3;
        com.android.server.appop.AppOpsService $r4;

        r0 := @this: com.android.server.am.ActivityManagerService$PermissionController;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        $r3 = r0.<com.android.server.am.ActivityManagerService$PermissionController: com.android.server.am.ActivityManagerService mActivityManagerService>;

        $r4 = $r3.<com.android.server.am.ActivityManagerService: com.android.server.appop.AppOpsService mAppOpsService>;

        $i1 = staticinvoke <android.app.AppOpsManager: int strOpToOp(java.lang.String)>(r1);

        $i2 = virtualinvoke $r4.<com.android.server.appop.AppOpsService: int noteOperation(int,int,java.lang.String,java.lang.String,boolean,java.lang.String,boolean)>($i1, i0, r2, null, 0, "", 0);

        return $i2;
    }
}
