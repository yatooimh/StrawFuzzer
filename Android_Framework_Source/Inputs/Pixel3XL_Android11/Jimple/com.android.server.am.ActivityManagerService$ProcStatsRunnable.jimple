final class com.android.server.am.ActivityManagerService$ProcStatsRunnable extends java.lang.Object implements java.lang.Runnable
{
    private final com.android.server.am.ProcessStatsService mProcessStats;
    private final com.android.server.am.ActivityManagerService mService;

    void <init>(com.android.server.am.ActivityManagerService, com.android.server.am.ProcessStatsService)
    {
        com.android.server.am.ActivityManagerService$ProcStatsRunnable r0;
        com.android.server.am.ActivityManagerService r1;
        com.android.server.am.ProcessStatsService r2;

        r0 := @this: com.android.server.am.ActivityManagerService$ProcStatsRunnable;

        r1 := @parameter0: com.android.server.am.ActivityManagerService;

        r2 := @parameter1: com.android.server.am.ProcessStatsService;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService$ProcStatsRunnable: com.android.server.am.ActivityManagerService mService> = r1;

        r0.<com.android.server.am.ActivityManagerService$ProcStatsRunnable: com.android.server.am.ProcessStatsService mProcessStats> = r2;

        return;
    }

    public void run()
    {
        com.android.server.am.ActivityManagerService$ProcStatsRunnable r0;
        com.android.server.am.ActivityManagerService r1;
        com.android.server.am.ProcessStatsService $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.am.ActivityManagerService$ProcStatsRunnable;

        r1 = r0.<com.android.server.am.ActivityManagerService$ProcStatsRunnable: com.android.server.am.ActivityManagerService mService>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r3 = r0.<com.android.server.am.ActivityManagerService$ProcStatsRunnable: com.android.server.am.ProcessStatsService mProcessStats>;

        virtualinvoke $r3.<com.android.server.am.ProcessStatsService: void writeStateAsyncLocked()>();

        exitmonitor r1;

     label2:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }
}
