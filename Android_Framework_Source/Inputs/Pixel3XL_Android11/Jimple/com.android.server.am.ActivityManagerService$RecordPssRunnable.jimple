final class com.android.server.am.ActivityManagerService$RecordPssRunnable extends java.lang.Object implements java.lang.Runnable
{
    private final android.content.ContentResolver mContentResolver;
    private final android.net.Uri mDumpUri;
    private final com.android.server.am.ProcessRecord mProc;
    final com.android.server.am.ActivityManagerService this$0;

    void <init>(com.android.server.am.ActivityManagerService, com.android.server.am.ProcessRecord, android.net.Uri, android.content.ContentResolver)
    {
        com.android.server.am.ActivityManagerService$RecordPssRunnable r0;
        com.android.server.am.ActivityManagerService r1;
        com.android.server.am.ProcessRecord r2;
        android.net.Uri r3;
        android.content.ContentResolver r4;

        r0 := @this: com.android.server.am.ActivityManagerService$RecordPssRunnable;

        r1 := @parameter0: com.android.server.am.ActivityManagerService;

        r2 := @parameter1: com.android.server.am.ProcessRecord;

        r3 := @parameter2: android.net.Uri;

        r4 := @parameter3: android.content.ContentResolver;

        r0.<com.android.server.am.ActivityManagerService$RecordPssRunnable: com.android.server.am.ActivityManagerService this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService$RecordPssRunnable: com.android.server.am.ProcessRecord mProc> = r2;

        r0.<com.android.server.am.ActivityManagerService$RecordPssRunnable: android.net.Uri mDumpUri> = r3;

        r0.<com.android.server.am.ActivityManagerService$RecordPssRunnable: android.content.ContentResolver mContentResolver> = r4;

        return;
    }

    public void run()
    {
        com.android.server.am.ActivityManagerService$RecordPssRunnable r0;
        android.net.Uri $r1, $r4;
        android.content.ContentResolver $r2;
        com.android.server.am.ProcessRecord $r3, $r10;
        java.lang.String $r5, $r11;
        android.os.RemoteException $r6;
        java.lang.Throwable $r7, $r8, $r9;
        com.android.server.am.ActivityManagerService $r12;
        android.os.ParcelFileDescriptor r13;
        android.app.IApplicationThread r14;

        r0 := @this: com.android.server.am.ActivityManagerService$RecordPssRunnable;

     label01:
        $r2 = r0.<com.android.server.am.ActivityManagerService$RecordPssRunnable: android.content.ContentResolver mContentResolver>;

        $r1 = r0.<com.android.server.am.ActivityManagerService$RecordPssRunnable: android.net.Uri mDumpUri>;

        r13 = virtualinvoke $r2.<android.content.ContentResolver: android.os.ParcelFileDescriptor openFileDescriptor(android.net.Uri,java.lang.String)>($r1, "rw");

     label02:
        $r3 = r0.<com.android.server.am.ActivityManagerService$RecordPssRunnable: com.android.server.am.ProcessRecord mProc>;

        r14 = $r3.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

     label03:
        if r14 == null goto label07;

     label04:
        $r4 = r0.<com.android.server.am.ActivityManagerService$RecordPssRunnable: android.net.Uri mDumpUri>;

        $r5 = virtualinvoke $r4.<android.net.Uri: java.lang.String getPath()>();

        interfaceinvoke r14.<android.app.IApplicationThread: void dumpHeap(boolean,boolean,boolean,java.lang.String,android.os.ParcelFileDescriptor,android.os.RemoteCallback)>(1, 0, 0, $r5, r13, null);

     label05:
        goto label07;

     label06:
        $r6 := @caughtexception;

     label07:
        if r13 == null goto label09;

     label08:
        virtualinvoke r13.<android.os.ParcelFileDescriptor: void close()>();

     label09:
        goto label17;

     label10:
        $r7 := @caughtexception;

        if r13 == null goto label15;

     label11:
        virtualinvoke r13.<android.os.ParcelFileDescriptor: void close()>();

     label12:
        goto label15;

     label13:
        $r8 := @caughtexception;

     label14:
        virtualinvoke $r7.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r8);

     label15:
        throw $r7;

     label16:
        $r9 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", "Failed to dump heap", $r9);

        $r12 = r0.<com.android.server.am.ActivityManagerService$RecordPssRunnable: com.android.server.am.ActivityManagerService this$0>;

        $r10 = r0.<com.android.server.am.ActivityManagerService$RecordPssRunnable: com.android.server.am.ProcessRecord mProc>;

        $r11 = $r10.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        staticinvoke <com.android.server.am.ActivityManagerService: void access$1500(com.android.server.am.ActivityManagerService,java.lang.String)>($r12, $r11);

     label17:
        return;

        catch java.io.IOException from label01 to label02 with label16;
        catch java.lang.Throwable from label02 to label03 with label10;
        catch android.os.RemoteException from label04 to label05 with label06;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.io.IOException from label08 to label09 with label16;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.io.IOException from label14 to label15 with label16;
        catch java.io.IOException from label15 to label16 with label16;
    }
}
