public class com.android.server.am.ActivityManagerService extends android.app.IActivityManager$Stub implements com.android.server.Watchdog$Monitor, com.android.internal.os.BatteryStatsImpl$BatteryCallback
{
    static final int ABORT_DUMPHEAP_MSG;
    private static final java.lang.String ACTION_HEAP_DUMP_FINISHED;
    public static final java.lang.String ACTION_TRIGGER_IDLE;
    private static final java.lang.String ACTIVITY_START_PSS_DEFER_CONFIG;
    static final java.lang.String ANR_FILE_PREFIX;
    public static final java.lang.String ANR_TRACE_DIR;
    static final long BATTERY_STATS_TIME;
    private static final int BINDER_PROXY_HIGH_WATERMARK;
    private static final int BINDER_PROXY_LOW_WATERMARK;
    static final int BROADCAST_BG_TIMEOUT;
    static final int BROADCAST_FG_TIMEOUT;
    static final int CHECK_EXCESSIVE_POWER_USE_MSG;
    static final int CLEAR_DNS_CACHE_MSG;
    static final int COLLECT_PSS_BG_MSG;
    static final int CONTENT_PROVIDER_PUBLISH_TIMEOUT_MSG;
    static final int DEFER_PSS_MSG;
    static final int DISPATCH_OOM_ADJ_OBSERVER_MSG;
    static final int DISPATCH_PROCESSES_CHANGED_UI_MSG;
    static final int DISPATCH_PROCESS_DIED_UI_MSG;
    static final int DISPATCH_UIDS_CHANGED_UI_MSG;
    static final int DROPBOX_DEFAULT_MAX_SIZE;
    static final long[] DUMP_MEM_BUCKETS;
    static final int[] DUMP_MEM_OOM_ADJ;
    static final java.lang.String[] DUMP_MEM_OOM_COMPACT_LABEL;
    static final java.lang.String[] DUMP_MEM_OOM_LABEL;
    static final java.lang.String[] EMPTY_STRING_ARRAY;
    static final java.lang.String EXTRA_BUGREPORT_TYPE;
    static final java.lang.String EXTRA_DESCRIPTION;
    private static final java.lang.String EXTRA_HEAP_DUMP_IS_USER_INITIATED;
    private static final java.lang.String EXTRA_HEAP_DUMP_PROCESS_NAME;
    private static final java.lang.String EXTRA_HEAP_DUMP_REPORT_PACKAGE;
    private static final java.lang.String EXTRA_HEAP_DUMP_SIZE_BYTES;
    static final java.lang.String EXTRA_TITLE;
    static final int FIRST_BROADCAST_QUEUE_MSG;
    static final int GC_BACKGROUND_PROCESSES_MSG;
    static final int HANDLE_TRUST_STORAGE_UPDATE_MSG;
    static final int IDLE_UIDS_MSG;
    private static final java.lang.String INTENT_BUGREPORT_REQUESTED;
    private static final java.lang.String INTENT_REMOTE_BUGREPORT_FINISHED;
    private static final int JAVA_DUMP_MINIMUM_SIZE;
    static final int KILL_APPLICATION_MSG;
    static final int KILL_APP_ZYGOTE_DELAY_MS;
    static final int KILL_APP_ZYGOTE_MSG;
    private static final int KSM_SHARED;
    private static final int KSM_SHARING;
    private static final int KSM_UNSHARED;
    private static final int KSM_VOLATILE;
    private static final int MAX_BUGREPORT_DESCRIPTION_SIZE;
    private static final int MAX_BUGREPORT_TITLE_SIZE;
    private static final int MAX_DUP_SUPPRESSED_STACKS;
    private static final int MAX_RECEIVERS_ALLOWED_PER_APP;
    static final int MAX_STATE_DATA_SIZE;
    private static final int MEMINFO_COMPACT_VERSION;
    private static final int MINIMUM_MEMORY_GROWTH_THRESHOLD;
    static final long MONITOR_CPU_MAX_TIME;
    static final long MONITOR_CPU_MIN_TIME;
    static final boolean MONITOR_CPU_USAGE;
    static final boolean MONITOR_THREAD_CPU_USAGE;
    public static final int MY_PID;
    private static final int NATIVE_DUMP_TIMEOUT_MS;
    private static final long NETWORK_ACCESS_TIMEOUT_DEFAULT_MS;
    static final int NOTIFY_CLEARTEXT_NETWORK_MSG;
    static final int PERSISTENT_MASK;
    static final int POST_DUMP_HEAP_NOTIFICATION_MSG;
    private static final int[] PROCESS_STATE_STATS_FORMAT;
    static final int PROC_START_TIMEOUT;
    static final int PROC_START_TIMEOUT_MSG;
    static final int PROC_START_TIMEOUT_WITH_WRAPPER;
    static final int PUSH_TEMP_WHITELIST_UI_MSG;
    static final int REPORT_MEM_USAGE_MSG;
    static final int RESERVED_BYTES_PER_LOGCAT_LINE;
    static final int SERVICE_FOREGROUND_CRASH_MSG;
    static final int SERVICE_FOREGROUND_TIMEOUT_MSG;
    static final java.lang.String SERVICE_RECORD_KEY;
    static final int SERVICE_TIMEOUT_MSG;
    private static final java.lang.String SHELL_APP_PACKAGE;
    static final int SHOW_ERROR_UI_MSG;
    static final int SHOW_NOT_RESPONDING_UI_MSG;
    static final int SHOW_STRICT_MODE_VIOLATION_UI_MSG;
    static final int SHUTDOWN_UI_AUTOMATION_CONNECTION_MSG;
    private static final int SLOW_UID_OBSERVER_THRESHOLD_MS;
    public static final int STOCK_PM_FLAGS;
    static final int STOP_DEFERRING_PSS_MSG;
    static final java.lang.String SYSTEM_DEBUGGABLE;
    private static final java.lang.String SYSTEM_PROPERTY_DEVICE_PROVISIONED;
    static final java.lang.String SYSTEM_USER_HOME_NEEDED;
    static final java.lang.String TAG;
    static final java.lang.String TAG_BACKUP;
    private static final java.lang.String TAG_BROADCAST;
    private static final java.lang.String TAG_CLEANUP;
    private static final java.lang.String TAG_CONFIGURATION;
    private static final java.lang.String TAG_LOCKTASK;
    static final java.lang.String TAG_LRU;
    private static final java.lang.String TAG_MU;
    static final java.lang.String TAG_NETWORK;
    static final java.lang.String TAG_OOM_ADJ;
    private static final java.lang.String TAG_POWER;
    static final java.lang.String TAG_PROCESSES;
    static final java.lang.String TAG_PROCESS_OBSERVERS;
    private static final java.lang.String TAG_PROVIDER;
    static final java.lang.String TAG_PSS;
    private static final java.lang.String TAG_SERVICE;
    private static final java.lang.String TAG_SWITCH;
    static final java.lang.String TAG_UID_OBSERVERS;
    public static final int TOP_APP_PRIORITY_BOOST;
    static final boolean TRACK_PROCSTATS_ASSOCIATIONS;
    static final int UPDATE_HTTP_PROXY_MSG;
    static final int UPDATE_TIME_PREFERENCE_MSG;
    static final int UPDATE_TIME_ZONE;
    static final boolean VALIDATE_UID_STATES;
    static final int WAIT_FOR_DEBUGGER_UI_MSG;
    static final android.util.SparseArray sActiveProcessInfoSelfLocked;
    private static java.text.SimpleDateFormat sAnrFileDateFormat;
    private static final java.lang.ThreadLocal sCallerIdentity;
    static final com.android.server.am.HostingRecord sNullHostingRecord;
    private static java.lang.String sTheRealBuildSerial;
    private static com.android.server.ThreadPriorityBooster sThreadPriorityBooster;
    final android.util.IntArray mActiveCameraUids;
    final java.util.ArrayList mActiveInstrumentation;
    com.android.server.am.ActivityManagerService$ProcessChangeItem[] mActiveProcessChanges;
    com.android.server.am.UidRecord$ChangeItem[] mActiveUidChanges;
    private final com.android.server.wm.ActivityMetricsLaunchObserver mActivityLaunchObserver;
    private final java.util.concurrent.atomic.AtomicInteger mActivityStartingNesting;
    public com.android.server.wm.ActivityTaskManagerService mActivityTaskManager;
    boolean mAllowLowerMemLevel;
    android.util.ArrayMap mAllowedAssociations;
    private final java.util.HashSet mAlreadyLoggedViolatedStacks;
    boolean mAlwaysFinishActivities;
    final com.android.server.am.AnrHelper mAnrHelper;
    private java.util.Map mAppAgentMap;
    android.util.ArrayMap mAppBindArgs;
    final com.android.server.am.AppErrors mAppErrors;
    private android.app.AppOpsManager mAppOpsManager;
    final com.android.server.appop.AppOpsService mAppOpsService;
    final android.util.SparseArray mAssociations;
    public com.android.server.wm.ActivityTaskManagerInternal mAtmInternal;
    final java.util.ArrayList mAvailProcessChanges;
    final java.util.ArrayList mAvailUidChanges;
    int[] mBackgroundAppIdWhitelist;
    android.util.ArraySet mBackgroundLaunchBroadcasts;
    final android.util.SparseArray mBackupTargets;
    final com.android.server.am.BatteryStatsService mBatteryStatsService;
    com.android.server.am.BroadcastQueue mBgBroadcastQueue;
    final android.os.Handler mBgHandler;
    private boolean mBinderTransactionTrackingEnabled;
    boolean mBootAnimationComplete;
    int mBootPhase;
    volatile boolean mBooted;
    volatile boolean mBooting;
    final com.android.server.am.BroadcastQueue[] mBroadcastQueues;
    boolean mCallFinishBooting;
    com.android.server.am.ActivityManagerConstants mConstants;
    com.android.server.contentcapture.ContentCaptureManagerInternal mContentCaptureService;
    final android.content.Context mContext;
    com.android.server.am.CoreSettingsObserver mCoreSettingsObserver;
    com.android.server.am.BroadcastStats mCurBroadcastStats;
    com.android.server.am.ActivityManagerService$OomAdjObserver mCurOomAdjObserver;
    int mCurOomAdjUid;
    private java.lang.String mCurResumedPackage;
    private int mCurResumedUid;
    java.lang.String mDebugApp;
    boolean mDebugTransient;
    com.android.server.am.ActivityManagerService$DevelopmentSettingsObserver mDevelopmentSettingsObserver;
    int[] mDeviceIdleExceptIdleWhitelist;
    int[] mDeviceIdleTempWhitelist;
    int[] mDeviceIdleWhitelist;
    java.lang.String mDeviceOwnerName;
    private int mDeviceOwnerUid;
    boolean mEnableOffloadQueue;
    private final android.util.ArrayMap mErrorClusterRecords;
    final int mFactoryTest;
    com.android.server.am.BroadcastQueue mFgBroadcastQueue;
    boolean mForceBackgroundCheck;
    final com.android.internal.app.ProcessMap mForegroundPackages;
    boolean mFullPssPending;
    final com.android.server.am.ActivityManagerService$MainHandler mHandler;
    public final com.android.server.ServiceThread mHandlerThread;
    final com.android.server.am.ActivityManagerService$HiddenApiSettings mHiddenApiBlacklist;
    final android.util.SparseArray mImportantProcesses;
    final com.android.server.am.ActivityManagerService$Injector mInjector;
    private com.android.server.pm.Installer mInstaller;
    final com.android.server.am.InstrumentationReporter mInstrumentationReporter;
    public final com.android.server.firewall.IntentFirewall mIntentFirewall;
    public final android.app.ActivityManagerInternal mInternal;
    android.util.ArrayMap mIsolatedAppBindArgs;
    com.android.server.am.BroadcastStats mLastBroadcastStats;
    final java.util.concurrent.atomic.AtomicLong mLastCpuTime;
    long mLastFullPssTime;
    long mLastIdleTime;
    long mLastMemUsageReportTime;
    int mLastMemoryLevel;
    int mLastNumProcesses;
    long mLastPowerCheckUptime;
    long mLastWriteTime;
    final java.util.ArrayList mLaunchingProviders;
    private android.os.ParcelFileDescriptor[] mLifeMonitorFds;
    com.android.server.DeviceIdleInternal mLocalDeviceIdleController;
    android.os.PowerManagerInternal mLocalPowerManager;
    final com.android.server.am.LowMemDetector mLowMemDetector;
    long mLowRamStartTime;
    long mLowRamTimeSinceLastIdle;
    int mMemWatchDumpPid;
    java.lang.String mMemWatchDumpProcName;
    int mMemWatchDumpUid;
    android.net.Uri mMemWatchDumpUri;
    private boolean mMemWatchIsUserInitiated;
    final com.android.internal.app.ProcessMap mMemWatchProcesses;
    java.lang.String mNativeDebuggingApp;
    com.android.server.am.BroadcastQueue mOffloadBroadcastQueue;
    volatile boolean mOnBattery;
    public com.android.server.am.OomAdjProfiler mOomAdjProfiler;
    com.android.server.am.OomAdjuster mOomAdjuster;
    java.lang.String mOrigDebugApp;
    boolean mOrigWaitForDebugger;
    android.content.pm.PackageManagerInternal mPackageManagerInt;
    final com.android.server.PackageWatchdog mPackageWatchdog;
    public final com.android.server.am.PendingIntentController mPendingIntentController;
    final java.util.ArrayList mPendingProcessChanges;
    final java.util.ArrayList mPendingPssProcesses;
    private final com.android.server.am.PendingStartActivityUids mPendingStartActivityUids;
    final com.android.server.am.PendingTempWhitelists mPendingTempWhitelist;
    final java.util.ArrayList mPendingUidChanges;
    com.android.server.pm.permission.PermissionManagerServiceInternal mPermissionManagerInt;
    final java.util.ArrayList mPersistentStartingProcesses;
    final com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked;
    private final com.android.server.compat.PlatformCompat mPlatformCompat;
    private final com.android.server.utils.PriorityDump$PriorityDumper mPriorityDumper;
    final android.os.Handler mProcStartHandler;
    final com.android.server.ServiceThread mProcStartHandlerThread;
    final java.util.concurrent.CountDownLatch mProcessCpuInitLatch;
    final java.util.concurrent.atomic.AtomicBoolean mProcessCpuMutexFree;
    final java.lang.Thread mProcessCpuThread;
    final com.android.internal.os.ProcessCpuTracker mProcessCpuTracker;
    final com.android.server.am.ProcessList mProcessList;
    final android.os.RemoteCallbackList mProcessObservers;
    private final long[] mProcessStateStatsLongs;
    final com.android.server.am.ProcessStatsService mProcessStats;
    final java.util.ArrayList mProcessesOnHold;
    volatile boolean mProcessesReady;
    final java.util.ArrayList mProcessesToGc;
    final com.android.server.am.ActivityManagerService$ProfileData mProfileData;
    int mProfileType;
    final com.android.server.am.ProviderMap mProviderMap;
    private volatile long mPssDeferralTime;
    private final android.provider.DeviceConfig$OnPropertiesChangedListener mPssDelayConfigListener;
    final com.android.server.IntentResolver mReceiverResolver;
    final java.util.HashMap mRegisteredReceivers;
    boolean mSafeMode;
    final com.android.server.am.ActiveServices mServices;
    final android.util.SparseArray mStickyBroadcasts;
    final java.lang.StringBuilder mStringBuilder;
    boolean mSystemProvidersInstalled;
    volatile boolean mSystemReady;
    com.android.server.SystemServiceManager mSystemServiceManager;
    final android.app.ActivityThread mSystemThread;
    boolean mTestPssMode;
    java.lang.String mTrackAllocationApp;
    boolean mTrackingAssociations;
    com.android.server.uri.UriGrantsManagerInternal mUgmInternal;
    final android.content.Context mUiContext;
    final android.os.Handler mUiHandler;
    int mUidChangeDispatchCount;
    final android.os.RemoteCallbackList mUidObservers;
    android.app.usage.UsageStatsManagerInternal mUsageStatsService;
    boolean mUseFifoUiScheduling;
    final com.android.server.am.UserController mUserController;
    private boolean mUserIsMonkey;
    final com.android.server.am.ActiveUids mValidateUids;
    boolean mWaitForDebugger;
    long mWaitForNetworkTimeoutMs;
    int mWakefulness;
    public com.android.server.wm.WindowManagerService mWindowManager;
    com.android.server.wm.WindowManagerInternal mWmInternal;

    static void <clinit>()
    {
        int $i0;
        java.lang.String[] $r0, $r8, $r9;
        com.android.server.ThreadPriorityBooster $r1;
        android.util.SparseArray $r2;
        java.lang.ThreadLocal $r3;
        com.android.server.am.HostingRecord $r4;
        int[] $r5, $r7;
        long[] $r6;

        <com.android.server.am.ActivityManagerService: int WAIT_FOR_DEBUGGER_UI_MSG> = 6;

        <com.android.server.am.ActivityManagerService: boolean VALIDATE_UID_STATES> = 1;

        <com.android.server.am.ActivityManagerService: int UPDATE_TIME_ZONE> = 13;

        <com.android.server.am.ActivityManagerService: int UPDATE_TIME_PREFERENCE_MSG> = 41;

        <com.android.server.am.ActivityManagerService: int UPDATE_HTTP_PROXY_MSG> = 29;

        <com.android.server.am.ActivityManagerService: boolean TRACK_PROCSTATS_ASSOCIATIONS> = 1;

        <com.android.server.am.ActivityManagerService: int TOP_APP_PRIORITY_BOOST> = -10;

        <com.android.server.am.ActivityManagerService: java.lang.String TAG_UID_OBSERVERS> = "ActivityManager";

        <com.android.server.am.ActivityManagerService: java.lang.String TAG_SWITCH> = "ActivityManager";

        <com.android.server.am.ActivityManagerService: java.lang.String TAG_SERVICE> = "ActivityManager";

        <com.android.server.am.ActivityManagerService: java.lang.String TAG_PSS> = "ActivityManager";

        <com.android.server.am.ActivityManagerService: java.lang.String TAG_PROVIDER> = "ActivityManager";

        <com.android.server.am.ActivityManagerService: java.lang.String TAG_PROCESS_OBSERVERS> = "ActivityManager";

        <com.android.server.am.ActivityManagerService: java.lang.String TAG_PROCESSES> = "ActivityManager";

        <com.android.server.am.ActivityManagerService: java.lang.String TAG_POWER> = "ActivityManager";

        <com.android.server.am.ActivityManagerService: java.lang.String TAG_OOM_ADJ> = "ActivityManager";

        <com.android.server.am.ActivityManagerService: java.lang.String TAG_NETWORK> = "ActivityManager_Network";

        <com.android.server.am.ActivityManagerService: java.lang.String TAG_MU> = "ActivityManager_MU";

        <com.android.server.am.ActivityManagerService: java.lang.String TAG_LRU> = "ActivityManager";

        <com.android.server.am.ActivityManagerService: java.lang.String TAG_LOCKTASK> = "ActivityManager";

        <com.android.server.am.ActivityManagerService: java.lang.String TAG_CONFIGURATION> = "ActivityManager";

        <com.android.server.am.ActivityManagerService: java.lang.String TAG_CLEANUP> = "ActivityManager";

        <com.android.server.am.ActivityManagerService: java.lang.String TAG_BROADCAST> = "ActivityManager";

        <com.android.server.am.ActivityManagerService: java.lang.String TAG_BACKUP> = "ActivityManager";

        <com.android.server.am.ActivityManagerService: java.lang.String TAG> = "ActivityManager";

        <com.android.server.am.ActivityManagerService: java.lang.String SYSTEM_USER_HOME_NEEDED> = "ro.system_user_home_needed";

        <com.android.server.am.ActivityManagerService: java.lang.String SYSTEM_PROPERTY_DEVICE_PROVISIONED> = "persist.sys.device_provisioned";

        <com.android.server.am.ActivityManagerService: java.lang.String SYSTEM_DEBUGGABLE> = "ro.debuggable";

        <com.android.server.am.ActivityManagerService: int STOP_DEFERRING_PSS_MSG> = 3;

        <com.android.server.am.ActivityManagerService: int STOCK_PM_FLAGS> = 1024;

        <com.android.server.am.ActivityManagerService: int SLOW_UID_OBSERVER_THRESHOLD_MS> = 20;

        <com.android.server.am.ActivityManagerService: int SHUTDOWN_UI_AUTOMATION_CONNECTION_MSG> = 56;

        <com.android.server.am.ActivityManagerService: int SHOW_STRICT_MODE_VIOLATION_UI_MSG> = 26;

        <com.android.server.am.ActivityManagerService: int SHOW_NOT_RESPONDING_UI_MSG> = 2;

        <com.android.server.am.ActivityManagerService: int SHOW_ERROR_UI_MSG> = 1;

        <com.android.server.am.ActivityManagerService: java.lang.String SHELL_APP_PACKAGE> = "com.android.shell";

        <com.android.server.am.ActivityManagerService: int SERVICE_TIMEOUT_MSG> = 12;

        <com.android.server.am.ActivityManagerService: java.lang.String SERVICE_RECORD_KEY> = "servicerecord";

        <com.android.server.am.ActivityManagerService: int SERVICE_FOREGROUND_TIMEOUT_MSG> = 66;

        <com.android.server.am.ActivityManagerService: int SERVICE_FOREGROUND_CRASH_MSG> = 69;

        <com.android.server.am.ActivityManagerService: int RESERVED_BYTES_PER_LOGCAT_LINE> = 100;

        <com.android.server.am.ActivityManagerService: int REPORT_MEM_USAGE_MSG> = 33;

        <com.android.server.am.ActivityManagerService: int PUSH_TEMP_WHITELIST_UI_MSG> = 68;

        <com.android.server.am.ActivityManagerService: int PROC_START_TIMEOUT_WITH_WRAPPER> = 1200000;

        <com.android.server.am.ActivityManagerService: int PROC_START_TIMEOUT_MSG> = 20;

        <com.android.server.am.ActivityManagerService: int PROC_START_TIMEOUT> = 10000;

        <com.android.server.am.ActivityManagerService: int POST_DUMP_HEAP_NOTIFICATION_MSG> = 50;

        <com.android.server.am.ActivityManagerService: int PERSISTENT_MASK> = 9;

        <com.android.server.am.ActivityManagerService: int NOTIFY_CLEARTEXT_NETWORK_MSG> = 49;

        <com.android.server.am.ActivityManagerService: long NETWORK_ACCESS_TIMEOUT_DEFAULT_MS> = 200L;

        <com.android.server.am.ActivityManagerService: int NATIVE_DUMP_TIMEOUT_MS> = 2000;

        <com.android.server.am.ActivityManagerService: boolean MONITOR_THREAD_CPU_USAGE> = 0;

        <com.android.server.am.ActivityManagerService: boolean MONITOR_CPU_USAGE> = 1;

        <com.android.server.am.ActivityManagerService: long MONITOR_CPU_MIN_TIME> = 5000L;

        <com.android.server.am.ActivityManagerService: long MONITOR_CPU_MAX_TIME> = 268435455L;

        <com.android.server.am.ActivityManagerService: int MINIMUM_MEMORY_GROWTH_THRESHOLD> = 10000;

        <com.android.server.am.ActivityManagerService: int MEMINFO_COMPACT_VERSION> = 1;

        <com.android.server.am.ActivityManagerService: int MAX_STATE_DATA_SIZE> = 128;

        <com.android.server.am.ActivityManagerService: int MAX_RECEIVERS_ALLOWED_PER_APP> = 1000;

        <com.android.server.am.ActivityManagerService: int MAX_DUP_SUPPRESSED_STACKS> = 5000;

        <com.android.server.am.ActivityManagerService: int MAX_BUGREPORT_TITLE_SIZE> = 50;

        <com.android.server.am.ActivityManagerService: int MAX_BUGREPORT_DESCRIPTION_SIZE> = 150;

        <com.android.server.am.ActivityManagerService: int KSM_VOLATILE> = 3;

        <com.android.server.am.ActivityManagerService: int KSM_UNSHARED> = 2;

        <com.android.server.am.ActivityManagerService: int KSM_SHARING> = 1;

        <com.android.server.am.ActivityManagerService: int KSM_SHARED> = 0;

        <com.android.server.am.ActivityManagerService: int KILL_APP_ZYGOTE_MSG> = 71;

        <com.android.server.am.ActivityManagerService: int KILL_APP_ZYGOTE_DELAY_MS> = 5000;

        <com.android.server.am.ActivityManagerService: int KILL_APPLICATION_MSG> = 22;

        <com.android.server.am.ActivityManagerService: int JAVA_DUMP_MINIMUM_SIZE> = 100;

        <com.android.server.am.ActivityManagerService: java.lang.String INTENT_REMOTE_BUGREPORT_FINISHED> = "com.android.internal.intent.action.REMOTE_BUGREPORT_FINISHED";

        <com.android.server.am.ActivityManagerService: java.lang.String INTENT_BUGREPORT_REQUESTED> = "com.android.internal.intent.action.BUGREPORT_REQUESTED";

        <com.android.server.am.ActivityManagerService: int IDLE_UIDS_MSG> = 58;

        <com.android.server.am.ActivityManagerService: int HANDLE_TRUST_STORAGE_UPDATE_MSG> = 63;

        <com.android.server.am.ActivityManagerService: int GC_BACKGROUND_PROCESSES_MSG> = 5;

        <com.android.server.am.ActivityManagerService: int FIRST_BROADCAST_QUEUE_MSG> = 200;

        <com.android.server.am.ActivityManagerService: java.lang.String EXTRA_TITLE> = "android.intent.extra.TITLE";

        <com.android.server.am.ActivityManagerService: java.lang.String EXTRA_HEAP_DUMP_SIZE_BYTES> = "com.android.internal.extra.heap_dump.SIZE_BYTES";

        <com.android.server.am.ActivityManagerService: java.lang.String EXTRA_HEAP_DUMP_REPORT_PACKAGE> = "com.android.internal.extra.heap_dump.REPORT_PACKAGE";

        <com.android.server.am.ActivityManagerService: java.lang.String EXTRA_HEAP_DUMP_PROCESS_NAME> = "com.android.internal.extra.heap_dump.PROCESS_NAME";

        <com.android.server.am.ActivityManagerService: java.lang.String EXTRA_HEAP_DUMP_IS_USER_INITIATED> = "com.android.internal.extra.heap_dump.IS_USER_INITIATED";

        <com.android.server.am.ActivityManagerService: java.lang.String EXTRA_DESCRIPTION> = "android.intent.extra.DESCRIPTION";

        <com.android.server.am.ActivityManagerService: java.lang.String EXTRA_BUGREPORT_TYPE> = "android.intent.extra.BUGREPORT_TYPE";

        <com.android.server.am.ActivityManagerService: int DROPBOX_DEFAULT_MAX_SIZE> = 196608;

        <com.android.server.am.ActivityManagerService: int DISPATCH_UIDS_CHANGED_UI_MSG> = 53;

        <com.android.server.am.ActivityManagerService: int DISPATCH_PROCESS_DIED_UI_MSG> = 32;

        <com.android.server.am.ActivityManagerService: int DISPATCH_PROCESSES_CHANGED_UI_MSG> = 31;

        <com.android.server.am.ActivityManagerService: int DISPATCH_OOM_ADJ_OBSERVER_MSG> = 70;

        <com.android.server.am.ActivityManagerService: int DEFER_PSS_MSG> = 2;

        <com.android.server.am.ActivityManagerService: int CONTENT_PROVIDER_PUBLISH_TIMEOUT_MSG> = 57;

        <com.android.server.am.ActivityManagerService: int COLLECT_PSS_BG_MSG> = 1;

        <com.android.server.am.ActivityManagerService: int CLEAR_DNS_CACHE_MSG> = 28;

        <com.android.server.am.ActivityManagerService: int CHECK_EXCESSIVE_POWER_USE_MSG> = 27;

        <com.android.server.am.ActivityManagerService: int BROADCAST_FG_TIMEOUT> = 10000;

        <com.android.server.am.ActivityManagerService: int BROADCAST_BG_TIMEOUT> = 60000;

        <com.android.server.am.ActivityManagerService: int BINDER_PROXY_LOW_WATERMARK> = 5500;

        <com.android.server.am.ActivityManagerService: int BINDER_PROXY_HIGH_WATERMARK> = 6000;

        <com.android.server.am.ActivityManagerService: long BATTERY_STATS_TIME> = 1800000L;

        <com.android.server.am.ActivityManagerService: java.lang.String ANR_TRACE_DIR> = "/data/anr";

        <com.android.server.am.ActivityManagerService: java.lang.String ANR_FILE_PREFIX> = "anr_";

        <com.android.server.am.ActivityManagerService: java.lang.String ACTIVITY_START_PSS_DEFER_CONFIG> = "activity_start_pss_defer";

        <com.android.server.am.ActivityManagerService: java.lang.String ACTION_TRIGGER_IDLE> = "com.android.server.ACTION_TRIGGER_IDLE";

        <com.android.server.am.ActivityManagerService: java.lang.String ACTION_HEAP_DUMP_FINISHED> = "com.android.internal.intent.action.HEAP_DUMP_FINISHED";

        <com.android.server.am.ActivityManagerService: int ABORT_DUMPHEAP_MSG> = 51;

        $i0 = staticinvoke <android.os.Process: int myPid()>();

        <com.android.server.am.ActivityManagerService: int MY_PID> = $i0;

        $r0 = newarray (java.lang.String)[0];

        <com.android.server.am.ActivityManagerService: java.lang.String[] EMPTY_STRING_ARRAY> = $r0;

        $r1 = new com.android.server.ThreadPriorityBooster;

        specialinvoke $r1.<com.android.server.ThreadPriorityBooster: void <init>(int,int)>(-2, 6);

        <com.android.server.am.ActivityManagerService: com.android.server.ThreadPriorityBooster sThreadPriorityBooster> = $r1;

        $r2 = new android.util.SparseArray;

        specialinvoke $r2.<android.util.SparseArray: void <init>()>();

        <com.android.server.am.ActivityManagerService: android.util.SparseArray sActiveProcessInfoSelfLocked> = $r2;

        $r3 = new java.lang.ThreadLocal;

        specialinvoke $r3.<java.lang.ThreadLocal: void <init>()>();

        <com.android.server.am.ActivityManagerService: java.lang.ThreadLocal sCallerIdentity> = $r3;

        <com.android.server.am.ActivityManagerService: java.lang.String sTheRealBuildSerial> = "unknown";

        $r4 = new com.android.server.am.HostingRecord;

        specialinvoke $r4.<com.android.server.am.HostingRecord: void <init>(java.lang.String)>(null);

        <com.android.server.am.ActivityManagerService: com.android.server.am.HostingRecord sNullHostingRecord> = $r4;

        $r5 = newarray (int)[3];

        $r5[0] = 32;

        $r5[1] = 544;

        $r5[2] = 10272;

        <com.android.server.am.ActivityManagerService: int[] PROCESS_STATE_STATS_FORMAT> = $r5;

        $r6 = newarray (long)[23];

        $r6[0] = 5120L;

        $r6[1] = 7168L;

        $r6[2] = 10240L;

        $r6[3] = 15360L;

        $r6[4] = 20480L;

        $r6[5] = 30720L;

        $r6[6] = 40960L;

        $r6[7] = 81920L;

        $r6[8] = 122880L;

        $r6[9] = 163840L;

        $r6[10] = 204800L;

        $r6[11] = 256000L;

        $r6[12] = 307200L;

        $r6[13] = 358400L;

        $r6[14] = 409600L;

        $r6[15] = 512000L;

        $r6[16] = 614400L;

        $r6[17] = 819200L;

        $r6[18] = 1048576L;

        $r6[19] = 2097152L;

        $r6[20] = 5242880L;

        $r6[21] = 10485760L;

        $r6[22] = 20971520L;

        <com.android.server.am.ActivityManagerService: long[] DUMP_MEM_BUCKETS> = $r6;

        $r7 = newarray (int)[15];

        $r7[0] = -1000;

        $r7[1] = -900;

        $r7[2] = -800;

        $r7[3] = -700;

        $r7[4] = 0;

        $r7[5] = 100;

        $r7[6] = 200;

        $r7[7] = 250;

        $r7[8] = 300;

        $r7[9] = 400;

        $r7[10] = 500;

        $r7[11] = 600;

        $r7[12] = 700;

        $r7[13] = 800;

        $r7[14] = 900;

        <com.android.server.am.ActivityManagerService: int[] DUMP_MEM_OOM_ADJ> = $r7;

        $r8 = newarray (java.lang.String)[15];

        $r8[0] = "Native";

        $r8[1] = "System";

        $r8[2] = "Persistent";

        $r8[3] = "Persistent Service";

        $r8[4] = "Foreground";

        $r8[5] = "Visible";

        $r8[6] = "Perceptible";

        $r8[7] = "Perceptible Low";

        $r8[8] = "Heavy Weight";

        $r8[9] = "Backup";

        $r8[10] = "A Services";

        $r8[11] = "Home";

        $r8[12] = "Previous";

        $r8[13] = "B Services";

        $r8[14] = "Cached";

        <com.android.server.am.ActivityManagerService: java.lang.String[] DUMP_MEM_OOM_LABEL> = $r8;

        $r9 = newarray (java.lang.String)[15];

        $r9[0] = "native";

        $r9[1] = "sys";

        $r9[2] = "pers";

        $r9[3] = "persvc";

        $r9[4] = "fore";

        $r9[5] = "vis";

        $r9[6] = "percept";

        $r9[7] = "perceptl";

        $r9[8] = "heavy";

        $r9[9] = "backup";

        $r9[10] = "servicea";

        $r9[11] = "home";

        $r9[12] = "prev";

        $r9[13] = "serviceb";

        $r9[14] = "cached";

        <com.android.server.am.ActivityManagerService: java.lang.String[] DUMP_MEM_OOM_COMPACT_LABEL> = $r9;

        return;
    }

    public void <init>(android.content.Context, com.android.server.wm.ActivityTaskManagerService)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.wm.ActivityTaskManagerService r1;
        com.android.server.am.InstrumentationReporter $r3;
        java.util.ArrayList $r4, $r12, $r13, $r14, $r15, $r26, $r37, $r38, $r41, $r42;
        com.android.server.am.OomAdjProfiler $r5, $r106;
        com.android.server.am.BroadcastQueue[] $r6, r156;
        android.util.IntArray $r7;
        com.android.server.am.ActivityManagerService$1 $r8;
        int[] $r9, $r27, $r28, $r29;
        com.android.server.am.ActivityManagerService$PidMap $r10;
        android.util.SparseArray $r11, $r23, $r24, $r25;
        java.util.concurrent.atomic.AtomicInteger $r16;
        com.android.server.am.ActivityManagerService$2 $r17;
        long $l0, $l1;
        com.android.server.am.ActivityManagerService$3 $r18;
        com.android.server.am.ActiveUids $r19, $r73;
        java.util.HashSet $r20;
        java.util.HashMap $r21;
        com.android.server.am.ActivityManagerService$4 $r22;
        com.android.server.am.PendingTempWhitelists $r30;
        java.lang.StringBuilder $r31, $r56;
        com.android.internal.app.ProcessMap $r32, $r34;
        com.android.server.am.ActivityManagerService$ProfileData $r33;
        android.os.RemoteCallbackList $r35, $r39;
        com.android.server.am.ActivityManagerService$ProcessChangeItem[] $r36;
        com.android.server.am.UidRecord$ChangeItem[] $r40;
        com.android.server.am.AnrHelper $r43;
        com.android.internal.os.ProcessCpuTracker $r44;
        java.util.concurrent.atomic.AtomicLong $r45;
        java.util.concurrent.atomic.AtomicBoolean $r46;
        java.util.concurrent.CountDownLatch $r47;
        com.android.server.am.ActivityManagerService$5 $r48;
        android.os.Handler $r49, $r65, $r67, $r99;
        android.os.Looper $r50, $r63, $r69, $r118, $r128;
        long[] $r51;
        android.util.ArrayMap $r52;
        com.android.server.am.ActivityManagerService$Injector $r54, $r64, $r76, $r110;
        int $i2, $i3, $i5, $i6, $i7;
        android.app.ContextImpl $r55;
        java.lang.String $r59, $r121, $r122;
        com.android.server.ServiceThread $r60, $r62, $r66, $r68, $r117, $r141;
        com.android.server.am.ActivityManagerService$MainHandler $r61, $r71, $r85, $r87, $r89, $r111, $r125, $r134, $r137;
        com.android.server.am.ActivityManagerConstants $r70, $r119;
        android.content.Context $r72, $r94, $r96, $r133, $r144, r146;
        android.os.IBinder $r74;
        com.android.server.compat.PlatformCompat $r75, $r77;
        com.android.server.am.LowMemDetector $r78;
        com.android.server.am.OomAdjuster $r79, $r139;
        com.android.server.am.ProcessList $r80, r152;
        com.android.server.am.BroadcastConstants $r81, $r82, $r83;
        boolean $z0, $z1, $z2, $z3;
        com.android.server.am.BroadcastQueue $r84, $r86, $r88, $r90, $r91;
        com.android.server.am.ActiveServices $r92;
        com.android.server.am.ProviderMap $r93;
        com.android.server.am.AppErrors $r95;
        com.android.server.am.BatteryStatsService $r98, $r101, $r102, $r104;
        com.android.internal.os.BatteryStatsImpl $r100, $r103, $r105;
        com.android.server.am.ProcessStatsService $r107;
        java.io.File $r108, $r109, r158;
        com.android.server.appop.AppOpsService $r112;
        java.lang.Object $r113, $r129;
        com.android.server.uri.UriGrantsManagerInternal $r114;
        com.android.server.am.UserController $r115, $r120;
        com.android.server.am.PendingIntentController $r116, $r126;
        com.android.server.firewall.IntentFirewall $r123;
        com.android.server.am.ActivityManagerService$IntentFirewallInterface $r124;
        com.android.server.DisplayThread $r127;
        com.android.server.wm.ActivityTaskManagerInternal $r130;
        com.android.server.am.ActivityManagerService$8 $r131;
        com.android.server.am.ActivityManagerService$HiddenApiSettings $r132;
        com.android.server.Watchdog $r135, $r136;
        com.android.internal.os.BackgroundThread $r138;
        com.android.server.am.CachedAppOptimizer $r140;
        com.android.server.am.ActivityManagerService$LocalService $r142;
        com.android.server.am.PendingStartActivityUids $r143;
        java.lang.Exception $r145;
        android.app.ActivityThread r147;
        com.android.server.PackageWatchdog r157;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r146 := @parameter0: android.content.Context;

        r1 := @parameter1: com.android.server.wm.ActivityTaskManagerService;

        specialinvoke r0.<android.app.IActivityManager$Stub: void <init>()>();

        $r3 = new com.android.server.am.InstrumentationReporter;

        specialinvoke $r3.<com.android.server.am.InstrumentationReporter: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.InstrumentationReporter mInstrumentationReporter> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mActiveInstrumentation> = $r4;

        $r5 = new com.android.server.am.OomAdjProfiler;

        specialinvoke $r5.<com.android.server.am.OomAdjProfiler: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.OomAdjProfiler mOomAdjProfiler> = $r5;

        r0.<com.android.server.am.ActivityManagerService: boolean mUseFifoUiScheduling> = 0;

        $r6 = newarray (com.android.server.am.BroadcastQueue)[3];

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastQueue[] mBroadcastQueues> = $r6;

        r0.<com.android.server.am.ActivityManagerService: int mDeviceOwnerUid> = -1;

        $r7 = new android.util.IntArray;

        specialinvoke $r7.<android.util.IntArray: void <init>(int)>(4);

        r0.<com.android.server.am.ActivityManagerService: android.util.IntArray mActiveCameraUids> = $r7;

        $r8 = new com.android.server.am.ActivityManagerService$1;

        specialinvoke $r8.<com.android.server.am.ActivityManagerService$1: void <init>(com.android.server.am.ActivityManagerService)>(r0);

        r0.<com.android.server.am.ActivityManagerService: com.android.server.utils.PriorityDump$PriorityDumper mPriorityDumper> = $r8;

        $r9 = newarray (int)[1];

        $r9[0] = 1002;

        r0.<com.android.server.am.ActivityManagerService: int[] mBackgroundAppIdWhitelist> = $r9;

        $r10 = new com.android.server.am.ActivityManagerService$PidMap;

        specialinvoke $r10.<com.android.server.am.ActivityManagerService$PidMap: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked> = $r10;

        $r11 = new android.util.SparseArray;

        specialinvoke $r11.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mImportantProcesses> = $r11;

        $r12 = new java.util.ArrayList;

        specialinvoke $r12.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesOnHold> = $r12;

        $r13 = new java.util.ArrayList;

        specialinvoke $r13.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPersistentStartingProcesses> = $r13;

        $r14 = new java.util.ArrayList;

        specialinvoke $r14.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesToGc> = $r14;

        $r15 = new java.util.ArrayList;

        specialinvoke $r15.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingPssProcesses> = $r15;

        $r16 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r16.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>(0);

        r0.<com.android.server.am.ActivityManagerService: java.util.concurrent.atomic.AtomicInteger mActivityStartingNesting> = $r16;

        $r17 = new com.android.server.am.ActivityManagerService$2;

        specialinvoke $r17.<com.android.server.am.ActivityManagerService$2: void <init>(com.android.server.am.ActivityManagerService)>(r0);

        r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityMetricsLaunchObserver mActivityLaunchObserver> = $r17;

        r0.<com.android.server.am.ActivityManagerService: long mPssDeferralTime> = 0L;

        r0.<com.android.server.am.ActivityManagerService: boolean mBinderTransactionTrackingEnabled> = 0;

        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r0.<com.android.server.am.ActivityManagerService: long mLastFullPssTime> = $l0;

        r0.<com.android.server.am.ActivityManagerService: boolean mFullPssPending> = 0;

        $r18 = new com.android.server.am.ActivityManagerService$3;

        specialinvoke $r18.<com.android.server.am.ActivityManagerService$3: void <init>(com.android.server.am.ActivityManagerService)>(r0);

        r0.<com.android.server.am.ActivityManagerService: android.provider.DeviceConfig$OnPropertiesChangedListener mPssDelayConfigListener> = $r18;

        $r19 = new com.android.server.am.ActiveUids;

        specialinvoke $r19.<com.android.server.am.ActiveUids: void <init>(com.android.server.am.ActivityManagerService,boolean)>(r0, 0);

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveUids mValidateUids> = $r19;

        $r20 = new java.util.HashSet;

        specialinvoke $r20.<java.util.HashSet: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: java.util.HashSet mAlreadyLoggedViolatedStacks> = $r20;

        $r21 = new java.util.HashMap;

        specialinvoke $r21.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mRegisteredReceivers> = $r21;

        $r22 = new com.android.server.am.ActivityManagerService$4;

        specialinvoke $r22.<com.android.server.am.ActivityManagerService$4: void <init>(com.android.server.am.ActivityManagerService)>(r0);

        r0.<com.android.server.am.ActivityManagerService: com.android.server.IntentResolver mReceiverResolver> = $r22;

        $r23 = new android.util.SparseArray;

        specialinvoke $r23.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mStickyBroadcasts> = $r23;

        $r24 = new android.util.SparseArray;

        specialinvoke $r24.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mAssociations> = $r24;

        $r25 = new android.util.SparseArray;

        specialinvoke $r25.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mBackupTargets> = $r25;

        $r26 = new java.util.ArrayList;

        specialinvoke $r26.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLaunchingProviders> = $r26;

        $r27 = newarray (int)[0];

        r0.<com.android.server.am.ActivityManagerService: int[] mDeviceIdleWhitelist> = $r27;

        $r28 = newarray (int)[0];

        r0.<com.android.server.am.ActivityManagerService: int[] mDeviceIdleExceptIdleWhitelist> = $r28;

        $r29 = newarray (int)[0];

        r0.<com.android.server.am.ActivityManagerService: int[] mDeviceIdleTempWhitelist> = $r29;

        $r30 = new com.android.server.am.PendingTempWhitelists;

        specialinvoke $r30.<com.android.server.am.PendingTempWhitelists: void <init>(com.android.server.am.ActivityManagerService)>(r0);

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.PendingTempWhitelists mPendingTempWhitelist> = $r30;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>(int)>(256);

        r0.<com.android.server.am.ActivityManagerService: java.lang.StringBuilder mStringBuilder> = $r31;

        r0.<com.android.server.am.ActivityManagerService: boolean mProcessesReady> = 0;

        r0.<com.android.server.am.ActivityManagerService: boolean mSystemReady> = 0;

        r0.<com.android.server.am.ActivityManagerService: boolean mOnBattery> = 0;

        r0.<com.android.server.am.ActivityManagerService: boolean mBooting> = 0;

        r0.<com.android.server.am.ActivityManagerService: boolean mCallFinishBooting> = 0;

        r0.<com.android.server.am.ActivityManagerService: boolean mBootAnimationComplete> = 0;

        r0.<com.android.server.am.ActivityManagerService: int mWakefulness> = 1;

        r0.<com.android.server.am.ActivityManagerService: boolean mAllowLowerMemLevel> = 0;

        r0.<com.android.server.am.ActivityManagerService: int mLastMemoryLevel> = 0;

        $l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r0.<com.android.server.am.ActivityManagerService: long mLastIdleTime> = $l1;

        r0.<com.android.server.am.ActivityManagerService: long mLowRamTimeSinceLastIdle> = 0L;

        r0.<com.android.server.am.ActivityManagerService: long mLowRamStartTime> = 0L;

        r0.<com.android.server.am.ActivityManagerService: java.lang.String mCurResumedPackage> = null;

        r0.<com.android.server.am.ActivityManagerService: int mCurResumedUid> = -1;

        $r32 = new com.android.internal.app.ProcessMap;

        specialinvoke $r32.<com.android.internal.app.ProcessMap: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mForegroundPackages> = $r32;

        r0.<com.android.server.am.ActivityManagerService: boolean mTestPssMode> = 0;

        r0.<com.android.server.am.ActivityManagerService: java.lang.String mDebugApp> = null;

        r0.<com.android.server.am.ActivityManagerService: boolean mWaitForDebugger> = 0;

        r0.<com.android.server.am.ActivityManagerService: boolean mDebugTransient> = 0;

        r0.<com.android.server.am.ActivityManagerService: java.lang.String mOrigDebugApp> = null;

        r0.<com.android.server.am.ActivityManagerService: boolean mOrigWaitForDebugger> = 0;

        r0.<com.android.server.am.ActivityManagerService: boolean mAlwaysFinishActivities> = 0;

        $r33 = new com.android.server.am.ActivityManagerService$ProfileData;

        specialinvoke $r33.<com.android.server.am.ActivityManagerService$ProfileData: void <init>(com.android.server.am.ActivityManagerService)>(r0);

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$ProfileData mProfileData> = $r33;

        r0.<com.android.server.am.ActivityManagerService: java.util.Map mAppAgentMap> = null;

        r0.<com.android.server.am.ActivityManagerService: int mProfileType> = 0;

        $r34 = new com.android.internal.app.ProcessMap;

        specialinvoke $r34.<com.android.internal.app.ProcessMap: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mMemWatchProcesses> = $r34;

        r0.<com.android.server.am.ActivityManagerService: java.lang.String mTrackAllocationApp> = null;

        r0.<com.android.server.am.ActivityManagerService: java.lang.String mNativeDebuggingApp> = null;

        $r35 = new android.os.RemoteCallbackList;

        specialinvoke $r35.<android.os.RemoteCallbackList: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: android.os.RemoteCallbackList mProcessObservers> = $r35;

        $r36 = newarray (com.android.server.am.ActivityManagerService$ProcessChangeItem)[5];

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$ProcessChangeItem[] mActiveProcessChanges> = $r36;

        $r37 = new java.util.ArrayList;

        specialinvoke $r37.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingProcessChanges> = $r37;

        $r38 = new java.util.ArrayList;

        specialinvoke $r38.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mAvailProcessChanges> = $r38;

        $r39 = new android.os.RemoteCallbackList;

        specialinvoke $r39.<android.os.RemoteCallbackList: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: android.os.RemoteCallbackList mUidObservers> = $r39;

        $r40 = newarray (com.android.server.am.UidRecord$ChangeItem)[5];

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.UidRecord$ChangeItem[] mActiveUidChanges> = $r40;

        $r41 = new java.util.ArrayList;

        specialinvoke $r41.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingUidChanges> = $r41;

        $r42 = new java.util.ArrayList;

        specialinvoke $r42.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mAvailUidChanges> = $r42;

        $r43 = new com.android.server.am.AnrHelper;

        specialinvoke $r43.<com.android.server.am.AnrHelper: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.AnrHelper mAnrHelper> = $r43;

        $r44 = new com.android.internal.os.ProcessCpuTracker;

        specialinvoke $r44.<com.android.internal.os.ProcessCpuTracker: void <init>(boolean)>(0);

        r0.<com.android.server.am.ActivityManagerService: com.android.internal.os.ProcessCpuTracker mProcessCpuTracker> = $r44;

        $r45 = new java.util.concurrent.atomic.AtomicLong;

        specialinvoke $r45.<java.util.concurrent.atomic.AtomicLong: void <init>(long)>(0L);

        r0.<com.android.server.am.ActivityManagerService: java.util.concurrent.atomic.AtomicLong mLastCpuTime> = $r45;

        $r46 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r46.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(1);

        r0.<com.android.server.am.ActivityManagerService: java.util.concurrent.atomic.AtomicBoolean mProcessCpuMutexFree> = $r46;

        $r47 = new java.util.concurrent.CountDownLatch;

        specialinvoke $r47.<java.util.concurrent.CountDownLatch: void <init>(int)>(1);

        r0.<com.android.server.am.ActivityManagerService: java.util.concurrent.CountDownLatch mProcessCpuInitLatch> = $r47;

        r0.<com.android.server.am.ActivityManagerService: long mLastWriteTime> = 0L;

        r0.<com.android.server.am.ActivityManagerService: boolean mBooted> = 0;

        r0.<com.android.server.am.ActivityManagerService: long mLastMemUsageReportTime> = 0L;

        $r48 = new com.android.server.am.ActivityManagerService$5;

        $r49 = staticinvoke <com.android.internal.os.BackgroundThread: android.os.Handler getHandler()>();

        $r50 = virtualinvoke $r49.<android.os.Handler: android.os.Looper getLooper()>();

        specialinvoke $r48.<com.android.server.am.ActivityManagerService$5: void <init>(com.android.server.am.ActivityManagerService,android.os.Looper)>(r0, $r50);

        r0.<com.android.server.am.ActivityManagerService: android.os.Handler mBgHandler> = $r48;

        $r51 = newarray (long)[1];

        r0.<com.android.server.am.ActivityManagerService: long[] mProcessStateStatsLongs> = $r51;

        $r52 = new android.util.ArrayMap;

        specialinvoke $r52.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: android.util.ArrayMap mErrorClusterRecords> = $r52;

        staticinvoke <com.android.server.LockGuard: java.lang.Object installLock(java.lang.Object,int)>(r0, 6);

        $r54 = new com.android.server.am.ActivityManagerService$Injector;

        specialinvoke $r54.<com.android.server.am.ActivityManagerService$Injector: void <init>(android.content.Context)>(r146);

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$Injector mInjector> = $r54;

        r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext> = r146;

        $i2 = staticinvoke <android.os.FactoryTest: int getMode()>();

        r0.<com.android.server.am.ActivityManagerService: int mFactoryTest> = $i2;

        r147 = staticinvoke <android.app.ActivityThread: android.app.ActivityThread currentActivityThread()>();

        r0.<com.android.server.am.ActivityManagerService: android.app.ActivityThread mSystemThread> = r147;

        $r55 = virtualinvoke r147.<android.app.ActivityThread: android.app.ContextImpl getSystemUiContext()>();

        r0.<com.android.server.am.ActivityManagerService: android.content.Context mUiContext> = $r55;

        $r56 = new java.lang.StringBuilder;

        specialinvoke $r56.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Memory class: ");

        $i3 = staticinvoke <android.app.ActivityManager: int staticGetMemoryClass()>();

        virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r59 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", $r59);

        $r60 = new com.android.server.ServiceThread;

        specialinvoke $r60.<com.android.server.ServiceThread: void <init>(java.lang.String,int,boolean)>("ActivityManager", -2, 0);

        r0.<com.android.server.am.ActivityManagerService: com.android.server.ServiceThread mHandlerThread> = $r60;

        virtualinvoke $r60.<com.android.server.ServiceThread: void start()>();

        $r61 = new com.android.server.am.ActivityManagerService$MainHandler;

        $r62 = r0.<com.android.server.am.ActivityManagerService: com.android.server.ServiceThread mHandlerThread>;

        $r63 = virtualinvoke $r62.<com.android.server.ServiceThread: android.os.Looper getLooper()>();

        specialinvoke $r61.<com.android.server.am.ActivityManagerService$MainHandler: void <init>(com.android.server.am.ActivityManagerService,android.os.Looper)>(r0, $r63);

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler> = $r61;

        $r64 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$Injector mInjector>;

        $r65 = virtualinvoke $r64.<com.android.server.am.ActivityManagerService$Injector: android.os.Handler getUiHandler(com.android.server.am.ActivityManagerService)>(r0);

        r0.<com.android.server.am.ActivityManagerService: android.os.Handler mUiHandler> = $r65;

        $r66 = new com.android.server.ServiceThread;

        specialinvoke $r66.<com.android.server.ServiceThread: void <init>(java.lang.String,int,boolean)>("ActivityManager:procStart", -2, 0);

        r0.<com.android.server.am.ActivityManagerService: com.android.server.ServiceThread mProcStartHandlerThread> = $r66;

        virtualinvoke $r66.<com.android.server.ServiceThread: void start()>();

        $r67 = new android.os.Handler;

        $r68 = r0.<com.android.server.am.ActivityManagerService: com.android.server.ServiceThread mProcStartHandlerThread>;

        $r69 = virtualinvoke $r68.<com.android.server.ServiceThread: android.os.Looper getLooper()>();

        specialinvoke $r67.<android.os.Handler: void <init>(android.os.Looper)>($r69);

        r0.<com.android.server.am.ActivityManagerService: android.os.Handler mProcStartHandler> = $r67;

        $r70 = new com.android.server.am.ActivityManagerConstants;

        $r72 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r71 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        specialinvoke $r70.<com.android.server.am.ActivityManagerConstants: void <init>(android.content.Context,com.android.server.am.ActivityManagerService,android.os.Handler)>($r72, r0, $r71);

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerConstants mConstants> = $r70;

        $r73 = new com.android.server.am.ActiveUids;

        specialinvoke $r73.<com.android.server.am.ActiveUids: void <init>(com.android.server.am.ActivityManagerService,boolean)>(r0, 1);

        $r74 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("platform_compat");

        $r75 = (com.android.server.compat.PlatformCompat) $r74;

        r0.<com.android.server.am.ActivityManagerService: com.android.server.compat.PlatformCompat mPlatformCompat> = $r75;

        $r76 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$Injector mInjector>;

        r152 = virtualinvoke $r76.<com.android.server.am.ActivityManagerService$Injector: com.android.server.am.ProcessList getProcessList(com.android.server.am.ActivityManagerService)>(r0);

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList> = r152;

        $r77 = r0.<com.android.server.am.ActivityManagerService: com.android.server.compat.PlatformCompat mPlatformCompat>;

        virtualinvoke r152.<com.android.server.am.ProcessList: void init(com.android.server.am.ActivityManagerService,com.android.server.am.ActiveUids,com.android.server.compat.PlatformCompat)>(r0, $r73, $r77);

        $r78 = new com.android.server.am.LowMemDetector;

        specialinvoke $r78.<com.android.server.am.LowMemDetector: void <init>(com.android.server.am.ActivityManagerService)>(r0);

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.LowMemDetector mLowMemDetector> = $r78;

        $r79 = new com.android.server.am.OomAdjuster;

        $r80 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        specialinvoke $r79.<com.android.server.am.OomAdjuster: void <init>(com.android.server.am.ActivityManagerService,com.android.server.am.ProcessList,com.android.server.am.ActiveUids)>(r0, $r80, $r73);

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.OomAdjuster mOomAdjuster> = $r79;

        $r81 = new com.android.server.am.BroadcastConstants;

        specialinvoke $r81.<com.android.server.am.BroadcastConstants: void <init>(java.lang.String)>("bcast_fg_constants");

        $r81.<com.android.server.am.BroadcastConstants: long TIMEOUT> = 10000L;

        $r82 = new com.android.server.am.BroadcastConstants;

        specialinvoke $r82.<com.android.server.am.BroadcastConstants: void <init>(java.lang.String)>("bcast_bg_constants");

        $r82.<com.android.server.am.BroadcastConstants: long TIMEOUT> = 60000L;

        $r83 = new com.android.server.am.BroadcastConstants;

        specialinvoke $r83.<com.android.server.am.BroadcastConstants: void <init>(java.lang.String)>("bcast_offload_constants");

        $r83.<com.android.server.am.BroadcastConstants: long TIMEOUT> = 60000L;

        $r83.<com.android.server.am.BroadcastConstants: long SLOW_TIME> = 2147483647L;

        $z0 = staticinvoke <android.os.SystemProperties: boolean getBoolean(java.lang.String,boolean)>("persist.device_config.activity_manager_native_boot.offload_queue_enabled", 0);

        r0.<com.android.server.am.ActivityManagerService: boolean mEnableOffloadQueue> = $z0;

        $r84 = new com.android.server.am.BroadcastQueue;

        $r85 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        specialinvoke $r84.<com.android.server.am.BroadcastQueue: void <init>(com.android.server.am.ActivityManagerService,android.os.Handler,java.lang.String,com.android.server.am.BroadcastConstants,boolean)>(r0, $r85, "foreground", $r81, 0);

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastQueue mFgBroadcastQueue> = $r84;

        $r86 = new com.android.server.am.BroadcastQueue;

        $r87 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        specialinvoke $r86.<com.android.server.am.BroadcastQueue: void <init>(com.android.server.am.ActivityManagerService,android.os.Handler,java.lang.String,com.android.server.am.BroadcastConstants,boolean)>(r0, $r87, "background", $r82, 1);

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastQueue mBgBroadcastQueue> = $r86;

        $r88 = new com.android.server.am.BroadcastQueue;

        $r89 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        specialinvoke $r88.<com.android.server.am.BroadcastQueue: void <init>(com.android.server.am.ActivityManagerService,android.os.Handler,java.lang.String,com.android.server.am.BroadcastConstants,boolean)>(r0, $r89, "offload", $r83, 1);

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastQueue mOffloadBroadcastQueue> = $r88;

        r156 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastQueue[] mBroadcastQueues>;

        $r90 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastQueue mFgBroadcastQueue>;

        r156[0] = $r90;

        $r91 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastQueue mBgBroadcastQueue>;

        r156[1] = $r91;

        r156[2] = $r88;

        $r92 = new com.android.server.am.ActiveServices;

        specialinvoke $r92.<com.android.server.am.ActiveServices: void <init>(com.android.server.am.ActivityManagerService)>(r0);

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveServices mServices> = $r92;

        $r93 = new com.android.server.am.ProviderMap;

        specialinvoke $r93.<com.android.server.am.ProviderMap: void <init>(com.android.server.am.ActivityManagerService)>(r0);

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProviderMap mProviderMap> = $r93;

        $r94 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mUiContext>;

        r157 = staticinvoke <com.android.server.PackageWatchdog: com.android.server.PackageWatchdog getInstance(android.content.Context)>($r94);

        r0.<com.android.server.am.ActivityManagerService: com.android.server.PackageWatchdog mPackageWatchdog> = r157;

        $r95 = new com.android.server.am.AppErrors;

        $r96 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mUiContext>;

        specialinvoke $r95.<com.android.server.am.AppErrors: void <init>(android.content.Context,com.android.server.am.ActivityManagerService,com.android.server.PackageWatchdog)>($r96, r0, r157);

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.AppErrors mAppErrors> = $r95;

        r158 = staticinvoke <com.android.server.SystemServiceManager: java.io.File ensureSystemDir()>();

        staticinvoke <com.android.internal.os.BackgroundThread: com.android.internal.os.BackgroundThread get()>();

        $r98 = new com.android.server.am.BatteryStatsService;

        $r99 = staticinvoke <com.android.internal.os.BackgroundThread: android.os.Handler getHandler()>();

        specialinvoke $r98.<com.android.server.am.BatteryStatsService: void <init>(android.content.Context,java.io.File,android.os.Handler)>(r146, r158, $r99);

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService> = $r98;

        $r100 = virtualinvoke $r98.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl getActiveStatistics()>();

        virtualinvoke $r100.<com.android.internal.os.BatteryStatsImpl: void readLocked()>();

        $r101 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        virtualinvoke $r101.<com.android.server.am.BatteryStatsService: void scheduleWriteToDisk()>();

        $r102 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        $r103 = virtualinvoke $r102.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl getActiveStatistics()>();

        $z1 = virtualinvoke $r103.<com.android.internal.os.BatteryStatsImpl: boolean getIsOnBattery()>();

        r0.<com.android.server.am.ActivityManagerService: boolean mOnBattery> = $z1;

        $r104 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        $r105 = virtualinvoke $r104.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl getActiveStatistics()>();

        virtualinvoke $r105.<com.android.internal.os.BatteryStatsImpl: void setCallback(com.android.internal.os.BatteryStatsImpl$BatteryCallback)>(r0);

        $r106 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.OomAdjProfiler mOomAdjProfiler>;

        $z2 = r0.<com.android.server.am.ActivityManagerService: boolean mOnBattery>;

        virtualinvoke $r106.<com.android.server.am.OomAdjProfiler: void batteryPowerChanged(boolean)>($z2);

        $r107 = new com.android.server.am.ProcessStatsService;

        $r108 = new java.io.File;

        specialinvoke $r108.<java.io.File: void <init>(java.io.File,java.lang.String)>(r158, "procstats");

        specialinvoke $r107.<com.android.server.am.ProcessStatsService: void <init>(com.android.server.am.ActivityManagerService,java.io.File)>(r0, $r108);

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats> = $r107;

        $r110 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$Injector mInjector>;

        $r109 = new java.io.File;

        specialinvoke $r109.<java.io.File: void <init>(java.io.File,java.lang.String)>(r158, "appops.xml");

        $r111 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        $r112 = virtualinvoke $r110.<com.android.server.am.ActivityManagerService$Injector: com.android.server.appop.AppOpsService getAppOpsService(java.io.File,android.os.Handler)>($r109, $r111);

        r0.<com.android.server.am.ActivityManagerService: com.android.server.appop.AppOpsService mAppOpsService> = $r112;

        $r113 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Lcom/android/server/uri/UriGrantsManagerInternal;");

        $r114 = (com.android.server.uri.UriGrantsManagerInternal) $r113;

        r0.<com.android.server.am.ActivityManagerService: com.android.server.uri.UriGrantsManagerInternal mUgmInternal> = $r114;

        $r115 = new com.android.server.am.UserController;

        specialinvoke $r115.<com.android.server.am.UserController: void <init>(com.android.server.am.ActivityManagerService)>(r0);

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.UserController mUserController> = $r115;

        $r116 = new com.android.server.am.PendingIntentController;

        $r117 = r0.<com.android.server.am.ActivityManagerService: com.android.server.ServiceThread mHandlerThread>;

        $r118 = virtualinvoke $r117.<com.android.server.ServiceThread: android.os.Looper getLooper()>();

        $r120 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.UserController mUserController>;

        $r119 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerConstants mConstants>;

        specialinvoke $r116.<com.android.server.am.PendingIntentController: void <init>(android.os.Looper,com.android.server.am.UserController,com.android.server.am.ActivityManagerConstants)>($r118, $r120, $r119);

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.PendingIntentController mPendingIntentController> = $r116;

        $i5 = staticinvoke <android.os.SystemProperties: int getInt(java.lang.String,int)>("sys.use_fifo_ui", 0);

        if $i5 == 0 goto label1;

        r0.<com.android.server.am.ActivityManagerService: boolean mUseFifoUiScheduling> = 1;

     label1:
        $r121 = "1";

        $r122 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("debug.track-associations");

        $z3 = virtualinvoke $r121.<java.lang.String: boolean equals(java.lang.Object)>($r122);

        r0.<com.android.server.am.ActivityManagerService: boolean mTrackingAssociations> = $z3;

        $r123 = new com.android.server.firewall.IntentFirewall;

        $r124 = new com.android.server.am.ActivityManagerService$IntentFirewallInterface;

        specialinvoke $r124.<com.android.server.am.ActivityManagerService$IntentFirewallInterface: void <init>(com.android.server.am.ActivityManagerService)>(r0);

        $r125 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        specialinvoke $r123.<com.android.server.firewall.IntentFirewall: void <init>(com.android.server.firewall.IntentFirewall$AMSInterface,android.os.Handler)>($r124, $r125);

        r0.<com.android.server.am.ActivityManagerService: com.android.server.firewall.IntentFirewall mIntentFirewall> = $r123;

        r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerService mActivityTaskManager> = r1;

        $r126 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.PendingIntentController mPendingIntentController>;

        $r127 = staticinvoke <com.android.server.DisplayThread: com.android.server.DisplayThread get()>();

        $r128 = virtualinvoke $r127.<com.android.server.DisplayThread: android.os.Looper getLooper()>();

        virtualinvoke r1.<com.android.server.wm.ActivityTaskManagerService: void initialize(com.android.server.firewall.IntentFirewall,com.android.server.am.PendingIntentController,android.os.Looper)>($r123, $r126, $r128);

        $r129 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Lcom/android/server/wm/ActivityTaskManagerInternal;");

        $r130 = (com.android.server.wm.ActivityTaskManagerInternal) $r129;

        r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerInternal mAtmInternal> = $r130;

        $r131 = new com.android.server.am.ActivityManagerService$8;

        specialinvoke $r131.<com.android.server.am.ActivityManagerService$8: void <init>(com.android.server.am.ActivityManagerService,java.lang.String)>(r0, "CpuTracker");

        r0.<com.android.server.am.ActivityManagerService: java.lang.Thread mProcessCpuThread> = $r131;

        $r132 = new com.android.server.am.ActivityManagerService$HiddenApiSettings;

        $r134 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        $r133 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        specialinvoke $r132.<com.android.server.am.ActivityManagerService$HiddenApiSettings: void <init>(android.os.Handler,android.content.Context)>($r134, $r133);

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$HiddenApiSettings mHiddenApiBlacklist> = $r132;

        $r135 = staticinvoke <com.android.server.Watchdog: com.android.server.Watchdog getInstance()>();

        virtualinvoke $r135.<com.android.server.Watchdog: void addMonitor(com.android.server.Watchdog$Monitor)>(r0);

        $r136 = staticinvoke <com.android.server.Watchdog: com.android.server.Watchdog getInstance()>();

        $r137 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        virtualinvoke $r136.<com.android.server.Watchdog: void addThread(android.os.Handler)>($r137);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void updateOomAdjLocked(java.lang.String)>("updateOomAdj_meh");

     label2:
        $r138 = staticinvoke <com.android.internal.os.BackgroundThread: com.android.internal.os.BackgroundThread get()>();

        $i6 = virtualinvoke $r138.<com.android.internal.os.BackgroundThread: int getThreadId()>();

        staticinvoke <android.os.Process: void setThreadGroupAndCpuset(int,int)>($i6, 2);

        $r139 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.OomAdjuster mOomAdjuster>;

        $r140 = $r139.<com.android.server.am.OomAdjuster: com.android.server.am.CachedAppOptimizer mCachedAppOptimizer>;

        $r141 = $r140.<com.android.server.am.CachedAppOptimizer: com.android.server.ServiceThread mCachedAppOptimizerThread>;

        $i7 = virtualinvoke $r141.<com.android.server.ServiceThread: int getThreadId()>();

        staticinvoke <android.os.Process: void setThreadGroupAndCpuset(int,int)>($i7, 2);

     label3:
        goto label5;

     label4:
        $r145 := @caughtexception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", "Setting background thread cpuset failed");

     label5:
        $r142 = new com.android.server.am.ActivityManagerService$LocalService;

        specialinvoke $r142.<com.android.server.am.ActivityManagerService$LocalService: void <init>(com.android.server.am.ActivityManagerService)>(r0);

        r0.<com.android.server.am.ActivityManagerService: android.app.ActivityManagerInternal mInternal> = $r142;

        $r143 = new com.android.server.am.PendingStartActivityUids;

        $r144 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        specialinvoke $r143.<com.android.server.am.PendingStartActivityUids: void <init>(android.content.Context)>($r144);

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.PendingStartActivityUids mPendingStartActivityUids> = $r143;

        return;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    public void <init>(com.android.server.am.ActivityManagerService$Injector, com.android.server.ServiceThread)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.ServiceThread r1;
        com.android.server.am.InstrumentationReporter $r3;
        java.util.ArrayList $r4, $r12, $r13, $r14, $r15, $r26, $r37, $r38, $r41, $r42;
        com.android.server.am.OomAdjProfiler $r5;
        com.android.server.am.BroadcastQueue[] $r6;
        android.util.IntArray $r7;
        com.android.server.am.ActivityManagerService$1 $r8;
        int[] $r9, $r27, $r28, $r29;
        com.android.server.am.ActivityManagerService$PidMap $r10;
        android.util.SparseArray $r11, $r23, $r24, $r25;
        java.util.concurrent.atomic.AtomicInteger $r16;
        com.android.server.am.ActivityManagerService$2 $r17;
        long $l0, $l1;
        com.android.server.am.ActivityManagerService$3 $r18;
        com.android.server.am.ActiveUids $r19, $r56;
        java.util.HashSet $r20;
        java.util.HashMap $r21;
        com.android.server.am.ActivityManagerService$4 $r22;
        com.android.server.am.PendingTempWhitelists $r30;
        java.lang.StringBuilder $r31;
        com.android.internal.app.ProcessMap $r32, $r34;
        com.android.server.am.ActivityManagerService$ProfileData $r33;
        android.os.RemoteCallbackList $r35, $r39;
        com.android.server.am.ActivityManagerService$ProcessChangeItem[] $r36;
        com.android.server.am.UidRecord$ChangeItem[] $r40;
        com.android.server.am.AnrHelper $r43;
        com.android.internal.os.ProcessCpuTracker $r44;
        java.util.concurrent.atomic.AtomicLong $r45;
        java.util.concurrent.atomic.AtomicBoolean $r46;
        java.util.concurrent.CountDownLatch $r47;
        com.android.server.am.ActivityManagerService$5 $r48;
        android.os.Handler $r49, $r58;
        android.os.Looper $r50, $r65, $r79;
        long[] $r51;
        android.util.ArrayMap $r52;
        android.content.Context $r53, $r63, $r77;
        com.android.server.am.ActivityManagerService$Injector $r54, r80;
        com.android.server.appop.AppOpsService $r55;
        com.android.server.compat.PlatformCompat $r57;
        java.lang.Object $r59;
        com.android.server.uri.UriGrantsManagerInternal $r60;
        com.android.server.am.ActivityManagerService$LocalService $r61;
        com.android.server.am.PendingStartActivityUids $r62;
        com.android.server.am.PendingIntentController $r64, r88;
        com.android.server.am.ActivityManagerConstants $r66, $r75, r82;
        com.android.server.am.UserController $r67, $r68, r87;
        com.android.server.am.ActiveServices $r69, r86;
        com.android.server.firewall.IntentFirewall $r70, r85;
        com.android.server.am.ActivityManagerService$IntentFirewallInterface $r71;
        com.android.server.am.ActivityManagerService$MainHandler $r72, $r76, $r78, r81;
        com.android.server.am.OomAdjuster $r73, r84;
        com.android.server.am.ProcessList $r74, r83;
        boolean z0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r80 := @parameter0: com.android.server.am.ActivityManagerService$Injector;

        r1 := @parameter1: com.android.server.ServiceThread;

        specialinvoke r0.<android.app.IActivityManager$Stub: void <init>()>();

        $r3 = new com.android.server.am.InstrumentationReporter;

        specialinvoke $r3.<com.android.server.am.InstrumentationReporter: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.InstrumentationReporter mInstrumentationReporter> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mActiveInstrumentation> = $r4;

        $r5 = new com.android.server.am.OomAdjProfiler;

        specialinvoke $r5.<com.android.server.am.OomAdjProfiler: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.OomAdjProfiler mOomAdjProfiler> = $r5;

        r0.<com.android.server.am.ActivityManagerService: boolean mUseFifoUiScheduling> = 0;

        $r6 = newarray (com.android.server.am.BroadcastQueue)[3];

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastQueue[] mBroadcastQueues> = $r6;

        r0.<com.android.server.am.ActivityManagerService: int mDeviceOwnerUid> = -1;

        $r7 = new android.util.IntArray;

        specialinvoke $r7.<android.util.IntArray: void <init>(int)>(4);

        r0.<com.android.server.am.ActivityManagerService: android.util.IntArray mActiveCameraUids> = $r7;

        $r8 = new com.android.server.am.ActivityManagerService$1;

        specialinvoke $r8.<com.android.server.am.ActivityManagerService$1: void <init>(com.android.server.am.ActivityManagerService)>(r0);

        r0.<com.android.server.am.ActivityManagerService: com.android.server.utils.PriorityDump$PriorityDumper mPriorityDumper> = $r8;

        z0 = 1;

        $r9 = newarray (int)[1];

        $r9[0] = 1002;

        r0.<com.android.server.am.ActivityManagerService: int[] mBackgroundAppIdWhitelist> = $r9;

        $r10 = new com.android.server.am.ActivityManagerService$PidMap;

        specialinvoke $r10.<com.android.server.am.ActivityManagerService$PidMap: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked> = $r10;

        $r11 = new android.util.SparseArray;

        specialinvoke $r11.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mImportantProcesses> = $r11;

        $r12 = new java.util.ArrayList;

        specialinvoke $r12.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesOnHold> = $r12;

        $r13 = new java.util.ArrayList;

        specialinvoke $r13.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPersistentStartingProcesses> = $r13;

        $r14 = new java.util.ArrayList;

        specialinvoke $r14.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesToGc> = $r14;

        $r15 = new java.util.ArrayList;

        specialinvoke $r15.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingPssProcesses> = $r15;

        $r16 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r16.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>(0);

        r0.<com.android.server.am.ActivityManagerService: java.util.concurrent.atomic.AtomicInteger mActivityStartingNesting> = $r16;

        $r17 = new com.android.server.am.ActivityManagerService$2;

        specialinvoke $r17.<com.android.server.am.ActivityManagerService$2: void <init>(com.android.server.am.ActivityManagerService)>(r0);

        r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityMetricsLaunchObserver mActivityLaunchObserver> = $r17;

        r0.<com.android.server.am.ActivityManagerService: long mPssDeferralTime> = 0L;

        r0.<com.android.server.am.ActivityManagerService: boolean mBinderTransactionTrackingEnabled> = 0;

        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r0.<com.android.server.am.ActivityManagerService: long mLastFullPssTime> = $l0;

        r0.<com.android.server.am.ActivityManagerService: boolean mFullPssPending> = 0;

        $r18 = new com.android.server.am.ActivityManagerService$3;

        specialinvoke $r18.<com.android.server.am.ActivityManagerService$3: void <init>(com.android.server.am.ActivityManagerService)>(r0);

        r0.<com.android.server.am.ActivityManagerService: android.provider.DeviceConfig$OnPropertiesChangedListener mPssDelayConfigListener> = $r18;

        $r19 = new com.android.server.am.ActiveUids;

        specialinvoke $r19.<com.android.server.am.ActiveUids: void <init>(com.android.server.am.ActivityManagerService,boolean)>(r0, 0);

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveUids mValidateUids> = $r19;

        $r20 = new java.util.HashSet;

        specialinvoke $r20.<java.util.HashSet: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: java.util.HashSet mAlreadyLoggedViolatedStacks> = $r20;

        $r21 = new java.util.HashMap;

        specialinvoke $r21.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mRegisteredReceivers> = $r21;

        $r22 = new com.android.server.am.ActivityManagerService$4;

        specialinvoke $r22.<com.android.server.am.ActivityManagerService$4: void <init>(com.android.server.am.ActivityManagerService)>(r0);

        r0.<com.android.server.am.ActivityManagerService: com.android.server.IntentResolver mReceiverResolver> = $r22;

        $r23 = new android.util.SparseArray;

        specialinvoke $r23.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mStickyBroadcasts> = $r23;

        $r24 = new android.util.SparseArray;

        specialinvoke $r24.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mAssociations> = $r24;

        $r25 = new android.util.SparseArray;

        specialinvoke $r25.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mBackupTargets> = $r25;

        $r26 = new java.util.ArrayList;

        specialinvoke $r26.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLaunchingProviders> = $r26;

        $r27 = newarray (int)[0];

        r0.<com.android.server.am.ActivityManagerService: int[] mDeviceIdleWhitelist> = $r27;

        $r28 = newarray (int)[0];

        r0.<com.android.server.am.ActivityManagerService: int[] mDeviceIdleExceptIdleWhitelist> = $r28;

        $r29 = newarray (int)[0];

        r0.<com.android.server.am.ActivityManagerService: int[] mDeviceIdleTempWhitelist> = $r29;

        $r30 = new com.android.server.am.PendingTempWhitelists;

        specialinvoke $r30.<com.android.server.am.PendingTempWhitelists: void <init>(com.android.server.am.ActivityManagerService)>(r0);

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.PendingTempWhitelists mPendingTempWhitelist> = $r30;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>(int)>(256);

        r0.<com.android.server.am.ActivityManagerService: java.lang.StringBuilder mStringBuilder> = $r31;

        r0.<com.android.server.am.ActivityManagerService: boolean mProcessesReady> = 0;

        r0.<com.android.server.am.ActivityManagerService: boolean mSystemReady> = 0;

        r0.<com.android.server.am.ActivityManagerService: boolean mOnBattery> = 0;

        r0.<com.android.server.am.ActivityManagerService: boolean mBooting> = 0;

        r0.<com.android.server.am.ActivityManagerService: boolean mCallFinishBooting> = 0;

        r0.<com.android.server.am.ActivityManagerService: boolean mBootAnimationComplete> = 0;

        r0.<com.android.server.am.ActivityManagerService: int mWakefulness> = 1;

        r0.<com.android.server.am.ActivityManagerService: boolean mAllowLowerMemLevel> = 0;

        r0.<com.android.server.am.ActivityManagerService: int mLastMemoryLevel> = 0;

        $l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r0.<com.android.server.am.ActivityManagerService: long mLastIdleTime> = $l1;

        r0.<com.android.server.am.ActivityManagerService: long mLowRamTimeSinceLastIdle> = 0L;

        r0.<com.android.server.am.ActivityManagerService: long mLowRamStartTime> = 0L;

        r0.<com.android.server.am.ActivityManagerService: java.lang.String mCurResumedPackage> = null;

        r0.<com.android.server.am.ActivityManagerService: int mCurResumedUid> = -1;

        $r32 = new com.android.internal.app.ProcessMap;

        specialinvoke $r32.<com.android.internal.app.ProcessMap: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mForegroundPackages> = $r32;

        r0.<com.android.server.am.ActivityManagerService: boolean mTestPssMode> = 0;

        r0.<com.android.server.am.ActivityManagerService: java.lang.String mDebugApp> = null;

        r0.<com.android.server.am.ActivityManagerService: boolean mWaitForDebugger> = 0;

        r0.<com.android.server.am.ActivityManagerService: boolean mDebugTransient> = 0;

        r0.<com.android.server.am.ActivityManagerService: java.lang.String mOrigDebugApp> = null;

        r0.<com.android.server.am.ActivityManagerService: boolean mOrigWaitForDebugger> = 0;

        r0.<com.android.server.am.ActivityManagerService: boolean mAlwaysFinishActivities> = 0;

        $r33 = new com.android.server.am.ActivityManagerService$ProfileData;

        specialinvoke $r33.<com.android.server.am.ActivityManagerService$ProfileData: void <init>(com.android.server.am.ActivityManagerService)>(r0);

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$ProfileData mProfileData> = $r33;

        r0.<com.android.server.am.ActivityManagerService: java.util.Map mAppAgentMap> = null;

        r0.<com.android.server.am.ActivityManagerService: int mProfileType> = 0;

        $r34 = new com.android.internal.app.ProcessMap;

        specialinvoke $r34.<com.android.internal.app.ProcessMap: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mMemWatchProcesses> = $r34;

        r0.<com.android.server.am.ActivityManagerService: java.lang.String mTrackAllocationApp> = null;

        r0.<com.android.server.am.ActivityManagerService: java.lang.String mNativeDebuggingApp> = null;

        $r35 = new android.os.RemoteCallbackList;

        specialinvoke $r35.<android.os.RemoteCallbackList: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: android.os.RemoteCallbackList mProcessObservers> = $r35;

        $r36 = newarray (com.android.server.am.ActivityManagerService$ProcessChangeItem)[5];

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$ProcessChangeItem[] mActiveProcessChanges> = $r36;

        $r37 = new java.util.ArrayList;

        specialinvoke $r37.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingProcessChanges> = $r37;

        $r38 = new java.util.ArrayList;

        specialinvoke $r38.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mAvailProcessChanges> = $r38;

        $r39 = new android.os.RemoteCallbackList;

        specialinvoke $r39.<android.os.RemoteCallbackList: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: android.os.RemoteCallbackList mUidObservers> = $r39;

        $r40 = newarray (com.android.server.am.UidRecord$ChangeItem)[5];

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.UidRecord$ChangeItem[] mActiveUidChanges> = $r40;

        $r41 = new java.util.ArrayList;

        specialinvoke $r41.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingUidChanges> = $r41;

        $r42 = new java.util.ArrayList;

        specialinvoke $r42.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mAvailUidChanges> = $r42;

        $r43 = new com.android.server.am.AnrHelper;

        specialinvoke $r43.<com.android.server.am.AnrHelper: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.AnrHelper mAnrHelper> = $r43;

        $r44 = new com.android.internal.os.ProcessCpuTracker;

        specialinvoke $r44.<com.android.internal.os.ProcessCpuTracker: void <init>(boolean)>(0);

        r0.<com.android.server.am.ActivityManagerService: com.android.internal.os.ProcessCpuTracker mProcessCpuTracker> = $r44;

        $r45 = new java.util.concurrent.atomic.AtomicLong;

        specialinvoke $r45.<java.util.concurrent.atomic.AtomicLong: void <init>(long)>(0L);

        r0.<com.android.server.am.ActivityManagerService: java.util.concurrent.atomic.AtomicLong mLastCpuTime> = $r45;

        $r46 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r46.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(1);

        r0.<com.android.server.am.ActivityManagerService: java.util.concurrent.atomic.AtomicBoolean mProcessCpuMutexFree> = $r46;

        $r47 = new java.util.concurrent.CountDownLatch;

        specialinvoke $r47.<java.util.concurrent.CountDownLatch: void <init>(int)>(1);

        r0.<com.android.server.am.ActivityManagerService: java.util.concurrent.CountDownLatch mProcessCpuInitLatch> = $r47;

        r0.<com.android.server.am.ActivityManagerService: long mLastWriteTime> = 0L;

        r0.<com.android.server.am.ActivityManagerService: boolean mBooted> = 0;

        r0.<com.android.server.am.ActivityManagerService: long mLastMemUsageReportTime> = 0L;

        $r48 = new com.android.server.am.ActivityManagerService$5;

        $r49 = staticinvoke <com.android.internal.os.BackgroundThread: android.os.Handler getHandler()>();

        $r50 = virtualinvoke $r49.<android.os.Handler: android.os.Looper getLooper()>();

        specialinvoke $r48.<com.android.server.am.ActivityManagerService$5: void <init>(com.android.server.am.ActivityManagerService,android.os.Looper)>(r0, $r50);

        r0.<com.android.server.am.ActivityManagerService: android.os.Handler mBgHandler> = $r48;

        $r51 = newarray (long)[1];

        r0.<com.android.server.am.ActivityManagerService: long[] mProcessStateStatsLongs> = $r51;

        $r52 = new android.util.ArrayMap;

        specialinvoke $r52.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: android.util.ArrayMap mErrorClusterRecords> = $r52;

        if r1 == null goto label01;

        goto label02;

     label01:
        z0 = 0;

     label02:
        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$Injector mInjector> = r80;

        $r53 = virtualinvoke r80.<com.android.server.am.ActivityManagerService$Injector: android.content.Context getContext()>();

        r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext> = $r53;

        r0.<com.android.server.am.ActivityManagerService: android.content.Context mUiContext> = null;

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.AppErrors mAppErrors> = null;

        r0.<com.android.server.am.ActivityManagerService: com.android.server.PackageWatchdog mPackageWatchdog> = null;

        $r54 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$Injector mInjector>;

        $r55 = virtualinvoke $r54.<com.android.server.am.ActivityManagerService$Injector: com.android.server.appop.AppOpsService getAppOpsService(java.io.File,android.os.Handler)>(null, null);

        r0.<com.android.server.am.ActivityManagerService: com.android.server.appop.AppOpsService mAppOpsService> = $r55;

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService> = null;

        if z0 == 0 goto label03;

        $r78 = new com.android.server.am.ActivityManagerService$MainHandler;

        $r79 = virtualinvoke r1.<com.android.server.ServiceThread: android.os.Looper getLooper()>();

        specialinvoke $r78.<com.android.server.am.ActivityManagerService$MainHandler: void <init>(com.android.server.am.ActivityManagerService,android.os.Looper)>(r0, $r79);

        r81 = $r78;

        goto label04;

     label03:
        r81 = null;

     label04:
        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler> = r81;

        r0.<com.android.server.am.ActivityManagerService: com.android.server.ServiceThread mHandlerThread> = r1;

        if z0 == 0 goto label05;

        $r75 = new com.android.server.am.ActivityManagerConstants;

        $r77 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r76 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        specialinvoke $r75.<com.android.server.am.ActivityManagerConstants: void <init>(android.content.Context,com.android.server.am.ActivityManagerService,android.os.Handler)>($r77, r0, $r76);

        r82 = $r75;

        goto label06;

     label05:
        r82 = null;

     label06:
        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerConstants mConstants> = r82;

        $r56 = new com.android.server.am.ActiveUids;

        specialinvoke $r56.<com.android.server.am.ActiveUids: void <init>(com.android.server.am.ActivityManagerService,boolean)>(r0, 0);

        r0.<com.android.server.am.ActivityManagerService: com.android.server.compat.PlatformCompat mPlatformCompat> = null;

        r83 = virtualinvoke r80.<com.android.server.am.ActivityManagerService$Injector: com.android.server.am.ProcessList getProcessList(com.android.server.am.ActivityManagerService)>(r0);

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList> = r83;

        $r57 = r0.<com.android.server.am.ActivityManagerService: com.android.server.compat.PlatformCompat mPlatformCompat>;

        virtualinvoke r83.<com.android.server.am.ProcessList: void init(com.android.server.am.ActivityManagerService,com.android.server.am.ActiveUids,com.android.server.compat.PlatformCompat)>(r0, $r56, $r57);

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.LowMemDetector mLowMemDetector> = null;

        if z0 == 0 goto label07;

        $r73 = new com.android.server.am.OomAdjuster;

        $r74 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        specialinvoke $r73.<com.android.server.am.OomAdjuster: void <init>(com.android.server.am.ActivityManagerService,com.android.server.am.ProcessList,com.android.server.am.ActiveUids,com.android.server.ServiceThread)>(r0, $r74, $r56, r1);

        r84 = $r73;

        goto label08;

     label07:
        r84 = null;

     label08:
        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.OomAdjuster mOomAdjuster> = r84;

        if z0 == 0 goto label09;

        $r70 = new com.android.server.firewall.IntentFirewall;

        $r71 = new com.android.server.am.ActivityManagerService$IntentFirewallInterface;

        specialinvoke $r71.<com.android.server.am.ActivityManagerService$IntentFirewallInterface: void <init>(com.android.server.am.ActivityManagerService)>(r0);

        $r72 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        specialinvoke $r70.<com.android.server.firewall.IntentFirewall: void <init>(com.android.server.firewall.IntentFirewall$AMSInterface,android.os.Handler)>($r71, $r72);

        r85 = $r70;

        goto label10;

     label09:
        r85 = null;

     label10:
        r0.<com.android.server.am.ActivityManagerService: com.android.server.firewall.IntentFirewall mIntentFirewall> = r85;

        r0.<com.android.server.am.ActivityManagerService: java.lang.Thread mProcessCpuThread> = null;

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats> = null;

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProviderMap mProviderMap> = null;

        if z0 == 0 goto label11;

        $r69 = new com.android.server.am.ActiveServices;

        specialinvoke $r69.<com.android.server.am.ActiveServices: void <init>(com.android.server.am.ActivityManagerService)>(r0);

        r86 = $r69;

        goto label12;

     label11:
        r86 = null;

     label12:
        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveServices mServices> = r86;

        r0.<com.android.server.am.ActivityManagerService: android.app.ActivityThread mSystemThread> = null;

        $r58 = virtualinvoke r80.<com.android.server.am.ActivityManagerService$Injector: android.os.Handler getUiHandler(com.android.server.am.ActivityManagerService)>(null);

        r0.<com.android.server.am.ActivityManagerService: android.os.Handler mUiHandler> = $r58;

        if z0 == 0 goto label13;

        $r68 = new com.android.server.am.UserController;

        specialinvoke $r68.<com.android.server.am.UserController: void <init>(com.android.server.am.ActivityManagerService)>(r0);

        r87 = $r68;

        goto label14;

     label13:
        r87 = null;

     label14:
        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.UserController mUserController> = r87;

        if z0 == 0 goto label15;

        $r64 = new com.android.server.am.PendingIntentController;

        $r65 = virtualinvoke r1.<com.android.server.ServiceThread: android.os.Looper getLooper()>();

        $r67 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.UserController mUserController>;

        $r66 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerConstants mConstants>;

        specialinvoke $r64.<com.android.server.am.PendingIntentController: void <init>(android.os.Looper,com.android.server.am.UserController,com.android.server.am.ActivityManagerConstants)>($r65, $r67, $r66);

        r88 = $r64;

        goto label16;

     label15:
        r88 = null;

     label16:
        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.PendingIntentController mPendingIntentController> = r88;

        r0.<com.android.server.am.ActivityManagerService: com.android.server.ServiceThread mProcStartHandlerThread> = null;

        r0.<com.android.server.am.ActivityManagerService: android.os.Handler mProcStartHandler> = null;

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$HiddenApiSettings mHiddenApiBlacklist> = null;

        r0.<com.android.server.am.ActivityManagerService: int mFactoryTest> = 0;

        $r59 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Lcom/android/server/uri/UriGrantsManagerInternal;");

        $r60 = (com.android.server.uri.UriGrantsManagerInternal) $r59;

        r0.<com.android.server.am.ActivityManagerService: com.android.server.uri.UriGrantsManagerInternal mUgmInternal> = $r60;

        $r61 = new com.android.server.am.ActivityManagerService$LocalService;

        specialinvoke $r61.<com.android.server.am.ActivityManagerService$LocalService: void <init>(com.android.server.am.ActivityManagerService)>(r0);

        r0.<com.android.server.am.ActivityManagerService: android.app.ActivityManagerInternal mInternal> = $r61;

        $r62 = new com.android.server.am.PendingStartActivityUids;

        $r63 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        specialinvoke $r62.<com.android.server.am.PendingStartActivityUids: void <init>(android.content.Context)>($r63);

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.PendingStartActivityUids mPendingStartActivityUids> = $r62;

        return;
    }

    private void abortHeapDump(java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1;
        android.os.Message r2;
        com.android.server.am.ActivityManagerService$MainHandler $r3, $r4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        r2 = virtualinvoke $r3.<com.android.server.am.ActivityManagerService$MainHandler: android.os.Message obtainMessage(int)>(51);

        r2.<android.os.Message: java.lang.Object obj> = r1;

        $r4 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        virtualinvoke $r4.<com.android.server.am.ActivityManagerService$MainHandler: boolean sendMessage(android.os.Message)>(r2);

        return;
    }

    static void access$000(com.android.server.am.ActivityManagerService, java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[], boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        boolean z0;

        r0 := @parameter0: com.android.server.am.ActivityManagerService;

        r1 := @parameter1: java.io.FileDescriptor;

        r2 := @parameter2: java.io.PrintWriter;

        r3 := @parameter3: java.lang.String[];

        z0 := @parameter4: boolean;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void doDump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],boolean)>(r1, r2, r3, z0);

        return;
    }

    static long access$100(com.android.server.am.ActivityManagerService)
    {
        com.android.server.am.ActivityManagerService r0;
        long $l0;

        r0 := @parameter0: com.android.server.am.ActivityManagerService;

        $l0 = r0.<com.android.server.am.ActivityManagerService: long mPssDeferralTime>;

        return $l0;
    }

    static void access$1000(com.android.server.am.ActivityManagerService)
    {
        com.android.server.am.ActivityManagerService r0;

        r0 := @parameter0: com.android.server.am.ActivityManagerService;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void start()>();

        return;
    }

    static long access$102(com.android.server.am.ActivityManagerService, long)
    {
        com.android.server.am.ActivityManagerService r0;
        long l0;

        r0 := @parameter0: com.android.server.am.ActivityManagerService;

        l0 := @parameter1: long;

        r0.<com.android.server.am.ActivityManagerService: long mPssDeferralTime> = l0;

        return l0;
    }

    static void access$1100(com.android.server.am.ActivityManagerService)
    {
        com.android.server.am.ActivityManagerService r0;

        r0 := @parameter0: com.android.server.am.ActivityManagerService;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void startBroadcastObservers()>();

        return;
    }

    static void access$1200(com.android.server.am.ActivityManagerService, java.lang.String, int)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1;
        int i0;

        r0 := @parameter0: com.android.server.am.ActivityManagerService;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void finishForceStopPackageLocked(java.lang.String,int)>(r1, i0);

        return;
    }

    static boolean access$1300(com.android.server.am.ActivityManagerService, android.content.Context)
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.Context r1;
        boolean $z0;

        r0 := @parameter0: com.android.server.am.ActivityManagerService;

        r1 := @parameter1: android.content.Context;

        $z0 = specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean isDeviceProvisioned(android.content.Context)>(r1);

        return $z0;
    }

    static void access$1500(com.android.server.am.ActivityManagerService, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.server.am.ActivityManagerService;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void abortHeapDump(java.lang.String)>(r1);

        return;
    }

    static boolean access$1600(com.android.server.am.ActivityManagerService, int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0;
        boolean $z0;

        r0 := @parameter0: com.android.server.am.ActivityManagerService;

        i0 := @parameter1: int;

        $z0 = specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean isAppForeground(int)>(i0);

        return $z0;
    }

    static boolean access$1700(com.android.server.am.ActivityManagerService, android.content.pm.ApplicationInfo)
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.pm.ApplicationInfo r1;
        boolean $z0;

        r0 := @parameter0: com.android.server.am.ActivityManagerService;

        r1 := @parameter1: android.content.pm.ApplicationInfo;

        $z0 = specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean isAppBad(android.content.pm.ApplicationInfo)>(r1);

        return $z0;
    }

    static void access$1800(com.android.server.am.ActivityManagerService, int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0;

        r0 := @parameter0: com.android.server.am.ActivityManagerService;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void clearPendingBackup(int)>(i0);

        return;
    }

    static int access$1900(com.android.server.am.ActivityManagerService)
    {
        com.android.server.am.ActivityManagerService r0;
        int $i0;

        r0 := @parameter0: com.android.server.am.ActivityManagerService;

        $i0 = r0.<com.android.server.am.ActivityManagerService: int mDeviceOwnerUid>;

        return $i0;
    }

    static int access$1902(com.android.server.am.ActivityManagerService, int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0;

        r0 := @parameter0: com.android.server.am.ActivityManagerService;

        i0 := @parameter1: int;

        r0.<com.android.server.am.ActivityManagerService: int mDeviceOwnerUid> = i0;

        return i0;
    }

    static void access$200(com.android.server.am.ActivityManagerService)
    {
        com.android.server.am.ActivityManagerService r0;

        r0 := @parameter0: com.android.server.am.ActivityManagerService;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void dispatchProcessesChanged()>();

        return;
    }

    static com.android.server.am.PendingStartActivityUids access$2000(com.android.server.am.ActivityManagerService)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.PendingStartActivityUids $r1;

        r0 := @parameter0: com.android.server.am.ActivityManagerService;

        $r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.PendingStartActivityUids mPendingStartActivityUids>;

        return $r1;
    }

    static void access$300(com.android.server.am.ActivityManagerService, int, int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1;

        r0 := @parameter0: com.android.server.am.ActivityManagerService;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void dispatchProcessDied(int,int)>(i0, i1);

        return;
    }

    static void access$400(com.android.server.am.ActivityManagerService, com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1;

        r0 := @parameter0: com.android.server.am.ActivityManagerService;

        r1 := @parameter1: com.android.server.am.ProcessRecord;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void processStartTimedOutLocked(com.android.server.am.ProcessRecord)>(r1);

        return;
    }

    static void access$500(com.android.server.am.ActivityManagerService, com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1;

        r0 := @parameter0: com.android.server.am.ActivityManagerService;

        r1 := @parameter1: com.android.server.am.ProcessRecord;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void processContentProviderPublishTimedOutLocked(com.android.server.am.ProcessRecord)>(r1);

        return;
    }

    static boolean access$600(com.android.server.am.ActivityManagerService)
    {
        com.android.server.am.ActivityManagerService r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.am.ActivityManagerService;

        $z0 = r0.<com.android.server.am.ActivityManagerService: boolean mMemWatchIsUserInitiated>;

        return $z0;
    }

    static boolean access$702(com.android.server.am.ActivityManagerService, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        boolean z0;

        r0 := @parameter0: com.android.server.am.ActivityManagerService;

        z0 := @parameter1: boolean;

        r0.<com.android.server.am.ActivityManagerService: boolean mUserIsMonkey> = z0;

        return z0;
    }

    static void access$800(com.android.server.am.ActivityManagerService)
    {
        com.android.server.am.ActivityManagerService r0;

        r0 := @parameter0: com.android.server.am.ActivityManagerService;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void deferPssForActivityStart()>();

        return;
    }

    static java.util.concurrent.atomic.AtomicInteger access$900(com.android.server.am.ActivityManagerService)
    {
        com.android.server.am.ActivityManagerService r0;
        java.util.concurrent.atomic.AtomicInteger $r1;

        r0 := @parameter0: com.android.server.am.ActivityManagerService;

        $r1 = r0.<com.android.server.am.ActivityManagerService: java.util.concurrent.atomic.AtomicInteger mActivityStartingNesting>;

        return $r1;
    }

    private static void addServiceToMap(android.util.ArrayMap, java.lang.String)
    {
        android.util.ArrayMap r0;
        java.lang.String r1;
        android.os.IBinder r2;

        r0 := @parameter0: android.util.ArrayMap;

        r1 := @parameter1: java.lang.String;

        r2 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>(r1);

        if r2 == null goto label1;

        virtualinvoke r0.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

     label1:
        return;
    }

    private void appendBasicMemEntry(java.lang.StringBuilder, int, int, long, long, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.StringBuilder r1;
        int i0, i1;
        long l2, l3;
        java.lang.String r2, $r4, $r7, $r13;
        byte $b4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.StringBuilder;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        l2 := @parameter3: long;

        l3 := @parameter4: long;

        r2 := @parameter5: java.lang.String;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r4 = staticinvoke <com.android.server.am.ProcessList: java.lang.String makeOomAdjString(int,boolean)>(i0, 0);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        $r7 = staticinvoke <com.android.server.am.ProcessList: java.lang.String makeProcStateString(int)>(i1);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        staticinvoke <com.android.server.am.ProcessList: void appendRamKb(java.lang.StringBuilder,long)>(r1, l2);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $b4 = l3 cmp 0L;

        if $b4 <= 0 goto label1;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r13 = staticinvoke <com.android.server.am.ActivityManagerService: java.lang.String stringifyKBSize(long)>(l3);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" memtrack)");

     label1:
        return;
    }

    static final void appendMemBucket(java.lang.StringBuilder, long, java.lang.String, boolean)
    {
        java.lang.StringBuilder r0;
        long l0, $l3, $l4, $l6, $l7;
        java.lang.String r1, r9;
        boolean z0;
        int i1, i2, i8, i9, i10;
        long[] r2;
        byte $b5;

        r0 := @parameter0: java.lang.StringBuilder;

        l0 := @parameter1: long;

        r1 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        i8 = virtualinvoke r1.<java.lang.String: int lastIndexOf(int)>(46);

        if i8 < 0 goto label1;

        i9 = i8 + 1;

        goto label2;

     label1:
        i9 = 0;

     label2:
        i1 = virtualinvoke r1.<java.lang.String: int length()>();

        i10 = 0;

     label3:
        r2 = <com.android.server.am.ActivityManagerService: long[] DUMP_MEM_BUCKETS>;

        i2 = lengthof r2;

        r9 = "MB.";

        if i10 >= i2 goto label7;

        $l4 = r2[i10];

        $b5 = $l4 cmp l0;

        if $b5 < 0 goto label6;

        $l6 = r2[i10];

        $l7 = $l6 / 1024L;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l7);

        if z0 == 0 goto label4;

        goto label5;

     label4:
        r9 = "MB ";

     label5:
        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence,int,int)>(r1, i9, i1);

        return;

     label6:
        i10 = i10 + 1;

        goto label3;

     label7:
        $l3 = l0 / 1024L;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);

        if z0 == 0 goto label8;

        goto label9;

     label8:
        r9 = "MB ";

     label9:
        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence,int,int)>(r1, i9, i1);

        return;
    }

    private void appendMemInfo(java.lang.StringBuilder, com.android.server.am.ProcessMemInfo)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.StringBuilder r1;
        com.android.server.am.ProcessMemInfo r2;
        java.lang.String $r3, $r7, $r10, $r12;
        long $l0, $l1;
        int $i2, $i3, $i4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.StringBuilder;

        r2 := @parameter1: com.android.server.am.ProcessMemInfo;

        $i3 = r2.<com.android.server.am.ProcessMemInfo: int oomAdj>;

        $i2 = r2.<com.android.server.am.ProcessMemInfo: int procState>;

        $l1 = r2.<com.android.server.am.ProcessMemInfo: long pss>;

        $l0 = r2.<com.android.server.am.ProcessMemInfo: long memtrack>;

        $r3 = r2.<com.android.server.am.ProcessMemInfo: java.lang.String name>;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void appendBasicMemEntry(java.lang.StringBuilder,int,int,long,long,java.lang.String)>(r1, $i3, $i2, $l1, $l0, $r3);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (pid ");

        $i4 = r2.<com.android.server.am.ProcessMemInfo: int pid>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") ");

        $r7 = r2.<com.android.server.am.ProcessMemInfo: java.lang.String adjType>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r10 = r2.<com.android.server.am.ProcessMemInfo: java.lang.String adjReason>;

        if $r10 == null goto label1;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("                      ");

        $r12 = r2.<com.android.server.am.ProcessMemInfo: java.lang.String adjReason>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

     label1:
        return;
    }

    private boolean attachApplicationLocked(android.app.IApplicationThread, int, int, long)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1, $r7, $r23, $r27, $r34, $r39, $r43, $r45, $r55, $r56, $r62, $r69, $r72, $r75, $r76, $r78, $r80, $r86, $r89, $r97, $r99, $r101, $r102, $r103, $r105, $r110, $r121, $r126, $r132, $r143, $r151, r160, r162, r171, r173, r177, r180, r181, r184, r185, r189, r190, r205, r234, r235, r236, $r239;
        int i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i14, $i15, $i16, $i17, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i29, $i32, $i34, i37, i38, i45, i46, i47, i48, i49, i50, i51, i52, $i53, i54, i56, i57, i59, i60;
        android.app.IUiAutomationConnection r2;
        android.content.res.Configuration r3, $r210, r215, $r217;
        android.content.res.CompatibilityInfo r4, $r12, $r30, $r218;
        long l1, $l9, $l10, $l11, $l12, $l13, $l18, $l30, $l33, $l35, l39, l40, l55, l58;
        android.app.IApplicationThread $r5, r155;
        android.os.IBinder $r6;
        com.android.server.am.OomAdjuster $r8;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, z22, z23, z24, z25, z26, z27, z28, z29, $z30, z31, z32, z33, $z34, z35, z36, z37, z38, z39, z40, z41, z42;
        com.android.server.am.ActivityManagerService$MainHandler $r9, $r106, $r107;
        android.util.SparseArray $r10;
        java.lang.Object $r11, $r37, $r40, $r49, $r68, $r71, $r74, $r114, $r119;
        com.android.server.am.ActivityManagerService$ProfileData $r13, $r61, $r63, $r79, $r81, $r82, $r84, $r87, $r90, $r92, $r94;
        android.content.pm.ApplicationInfo $r14, $r15, $r19, $r20, $r26, $r28, $r29, $r35, $r38, $r41, $r42, $r44, $r50, $r53, $r54, $r66, $r98, $r100, $r108, r175, r193, $r197;
        com.android.server.am.ProcessStatsService $r16, $r145, $r240;
        java.util.ArrayList $r17, $r18, $r46, $r48, $r52, $r57, $r186;
        com.android.server.am.HostingRecord $r21, $r22, $r24, $r146;
        com.android.server.am.ProcessRecord $r25, r157, r158, r159, r164;
        com.android.server.wm.ActivityTaskManagerInternal $r31, $r200;
        com.android.server.wm.WindowProcessController $r32, $r201, $r209, $r216;
        java.lang.String[] $r33, $r51, r188;
        com.android.server.compat.PlatformCompat $r36, r203;
        com.android.server.am.ActiveInstrumentation $r47, r174, r187, r202;
        android.os.ParcelFileDescriptor $r58, $r59, $r60;
        android.app.ProfilerInfo $r64, $r77, $r83, $r85, $r88, $r91, $r93, $r95, r176, r178, r179, r183;
        java.util.Map $r65, $r67, $r70, $r73, r182;
        android.content.ComponentName $r96, r206;
        java.lang.StringBuilder $r104, $r109, $r120, $r125, $r131, $r142, $r150, $r237;
        com.android.server.am.ProcessList $r111, $r112, $r115, $r117, $r147, r224;
        byte $b28, $b31, $b36, b43, b44;
        android.util.LongSparseArray $r113, $r118;
        com.android.server.am.ActivityManagerService$PidMap $r116, r156;
        java.lang.Object[] $r122;
        java.lang.Integer $r123;
        java.lang.Exception $r124, $r127, $r128, $r130, $r133, $r134, $r135, $r136, $r137, $r138, $r139, $r140, $r141, $r148, $r149, $r152, $r153, $r154, r172, r228;
        java.lang.Throwable $r129;
        android.os.RemoteException $r144;
        com.android.server.am.ActivityManagerService$AppDeathRecipient r166;
        java.util.List r167;
        android.os.Message r168;
        com.android.server.am.BackupRecord r170, r192;
        android.view.autofill.AutofillManagerInternal r195;
        android.content.AutofillOptions r196;
        com.android.server.contentcapture.ContentCaptureManagerInternal r198;
        android.content.ContentCaptureOptions r199;
        android.content.pm.ProviderInfoList r204;
        android.os.Bundle r207, r213, $r221;
        android.app.IInstrumentationWatcher r208;
        android.util.ArrayMap r211, $r219;
        com.android.server.am.CoreSettingsObserver $r212, $r220;
        long[] r214, $r222;
        com.android.server.am.ActiveServices r227;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r155 := @parameter0: android.app.IApplicationThread;

        i37 := @parameter1: int;

        i38 := @parameter2: int;

        l39 := @parameter3: long;

        l40 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $i2 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        if i37 == $i2 goto label009;

        if i37 < 0 goto label009;

        r156 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        entermonitor r156;

     label001:
        $r116 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        r157 = virtualinvoke $r116.<com.android.server.am.ActivityManagerService$PidMap: com.android.server.am.ProcessRecord get(int)>(i37);

        exitmonitor r156;

     label002:
        r158 = r157;

        if r157 == null goto label010;

        $i32 = r157.<com.android.server.am.ProcessRecord: int startUid>;

        if $i32 != i38 goto label003;

        r158 = r157;

        $l35 = r157.<com.android.server.am.ProcessRecord: long startSeq>;

        $b36 = $l35 cmp l39;

        if $b36 == 0 goto label010;

     label003:
        $r117 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r118 = $r117.<com.android.server.am.ProcessList: android.util.LongSparseArray mPendingStarts>;

        $r119 = virtualinvoke $r118.<android.util.LongSparseArray: java.lang.Object get(long)>(l39);

        r159 = (com.android.server.am.ProcessRecord) $r119;

        if r159 == null goto label004;

        r160 = r159.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        goto label005;

     label004:
        r160 = null;

     label005:
        $r120 = new java.lang.StringBuilder;

        specialinvoke $r120.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r120.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("attachApplicationLocked process:");

        virtualinvoke $r120.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r160);

        virtualinvoke $r120.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" startSeq:");

        virtualinvoke $r120.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l39);

        virtualinvoke $r120.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" pid:");

        virtualinvoke $r120.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i37);

        virtualinvoke $r120.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" belongs to another existing app:");

        $r121 = r157.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        virtualinvoke $r120.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r121);

        virtualinvoke $r120.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" startSeq:");

        $l33 = r157.<com.android.server.am.ProcessRecord: long startSeq>;

        virtualinvoke $r120.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l33);

        r162 = virtualinvoke $r120.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("ActivityManager", r162);

        $r122 = newarray (java.lang.Object)[3];

        $r122[0] = "131105245";

        $i34 = r157.<com.android.server.am.ProcessRecord: int startUid>;

        $r123 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i34);

        $r122[1] = $r123;

        $r122[2] = r162;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(1397638484, $r122);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean cleanUpApplicationRecordLocked(com.android.server.am.ProcessRecord,boolean,boolean,int,boolean)>(r157, 0, 0, -1, 1);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void removePidLocked(com.android.server.am.ProcessRecord)>(r157);

        r158 = null;

        goto label010;

     label006:
        $r129 := @caughtexception;

     label007:
        exitmonitor r156;

     label008:
        throw $r129;

     label009:
        r158 = null;

     label010:
        if r158 != null goto label012;

        $b28 = l39 cmp 0L;

        if $b28 <= 0 goto label012;

        $r112 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r113 = $r112.<com.android.server.am.ProcessList: android.util.LongSparseArray mPendingStarts>;

        $r114 = virtualinvoke $r113.<android.util.LongSparseArray: java.lang.Object get(long)>(l39);

        r164 = (com.android.server.am.ProcessRecord) $r114;

        if r164 == null goto label011;

        $i29 = r164.<com.android.server.am.ProcessRecord: int startUid>;

        if $i29 != i38 goto label011;

        $l30 = r164.<com.android.server.am.ProcessRecord: long startSeq>;

        $b31 = $l30 cmp l39;

        if $b31 != 0 goto label011;

        $r115 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $z20 = virtualinvoke r164.<com.android.server.am.ProcessRecord: boolean isUsingWrapper()>();

        $z21 = virtualinvoke $r115.<com.android.server.am.ProcessList: boolean handleProcessStartedLocked(com.android.server.am.ProcessRecord,int,boolean,long,boolean)>(r164, i37, $z20, l39, 1);

        if $z21 == 0 goto label012;

        goto label013;

     label011:
        goto label012;

     label012:
        r164 = r158;

     label013:
        if r164 != null goto label018;

        $r109 = new java.lang.StringBuilder;

        specialinvoke $r109.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r109.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No pending application record for pid ");

        virtualinvoke $r109.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i37);

        virtualinvoke $r109.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (IApplicationThread ");

        virtualinvoke $r109.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r155);

        virtualinvoke $r109.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("); dropping process");

        $r110 = virtualinvoke $r109.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r110);

        staticinvoke <com.android.server.am.EventLogTags: void writeAmDropProcess(int)>(i37);

        if i37 <= 0 goto label014;

        $i27 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        if i37 == $i27 goto label014;

        staticinvoke <android.os.Process: void killProcessQuiet(int)>(i37);

        $r111 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        virtualinvoke $r111.<com.android.server.am.ProcessList: void noteAppKill(com.android.server.am.ProcessRecord,int,int,java.lang.String)>(r164, 7, 0, "attach failed");

        goto label017;

     label014:
        interfaceinvoke r155.<android.app.IApplicationThread: void scheduleExit()>();

     label015:
        goto label017;

     label016:
        $r136 := @caughtexception;

     label017:
        return 0;

     label018:
        $r5 = r164.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r5 == null goto label019;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void handleAppDiedLocked(com.android.server.am.ProcessRecord,boolean,boolean)>(r164, 1, 1);

        goto label019;

     label019:
        r1 = r164.<com.android.server.am.ProcessRecord: java.lang.String processName>;

     label020:
        r166 = new com.android.server.am.ActivityManagerService$AppDeathRecipient;

        specialinvoke r166.<com.android.server.am.ActivityManagerService$AppDeathRecipient: void <init>(com.android.server.am.ActivityManagerService,com.android.server.am.ProcessRecord,int,android.app.IApplicationThread)>(r0, r164, i37, r155);

        $r6 = interfaceinvoke r155.<android.app.IApplicationThread: android.os.IBinder asBinder()>();

        interfaceinvoke $r6.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>(r166, 0);

        r164.<com.android.server.am.ProcessRecord: android.os.IBinder$DeathRecipient deathRecipient> = r166;

     label021:
        $i4 = r164.<com.android.server.am.ProcessRecord: int userId>;

        $i3 = r164.<com.android.server.am.ProcessRecord: int pid>;

        $r7 = r164.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        staticinvoke <com.android.server.am.EventLogTags: void writeAmProcBound(int,int,java.lang.String)>($i4, $i3, $r7);

        r164.<com.android.server.am.ProcessRecord: int verifiedAdj> = -10000;

        r164.<com.android.server.am.ProcessRecord: int setAdj> = -10000;

        r164.<com.android.server.am.ProcessRecord: int curAdj> = -10000;

        $r8 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.OomAdjuster mOomAdjuster>;

        virtualinvoke $r8.<com.android.server.am.OomAdjuster: void setAttachingSchedGroupLocked(com.android.server.am.ProcessRecord)>(r164);

        r164.<com.android.server.am.ProcessRecord: java.lang.Object forcingToImportant> = null;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void updateProcessForegroundLocked(com.android.server.am.ProcessRecord,boolean,int,boolean)>(r164, 0, 0, 0);

        r164.<com.android.server.am.ProcessRecord: boolean hasShownUi> = 0;

        virtualinvoke r164.<com.android.server.am.ProcessRecord: void setDebugging(boolean)>(0);

        virtualinvoke r164.<com.android.server.am.ProcessRecord: void setCached(boolean)>(0);

        r164.<com.android.server.am.ProcessRecord: boolean killedByAm> = 0;

        r164.<com.android.server.am.ProcessRecord: boolean killed> = 0;

        $i5 = r164.<com.android.server.am.ProcessRecord: int userId>;

        $z0 = staticinvoke <android.os.storage.StorageManager: boolean isUserKeyUnlocked(int)>($i5);

        r164.<com.android.server.am.ProcessRecord: boolean unlocked> = $z0;

        $r9 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        virtualinvoke $r9.<com.android.server.am.ActivityManagerService$MainHandler: void removeMessages(int,java.lang.Object)>(20, r164);

        $z1 = r0.<com.android.server.am.ActivityManagerService: boolean mProcessesReady>;

        if $z1 != 0 goto label023;

        $r108 = r164.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $z19 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean isAllowedWhileBooting(android.content.pm.ApplicationInfo)>($r108);

        if $z19 == 0 goto label022;

        goto label023;

     label022:
        z22 = 0;

        goto label024;

     label023:
        z22 = 1;

     label024:
        if z22 == 0 goto label025;

        r167 = specialinvoke r0.<com.android.server.am.ActivityManagerService: java.util.List generateApplicationProvidersLocked(com.android.server.am.ProcessRecord)>(r164);

        goto label026;

     label025:
        r167 = null;

     label026:
        if r167 == null goto label027;

        $z18 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean checkAppInLaunchingProvidersLocked(com.android.server.am.ProcessRecord)>(r164);

        if $z18 == 0 goto label027;

        $r106 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        r168 = virtualinvoke $r106.<com.android.server.am.ActivityManagerService$MainHandler: android.os.Message obtainMessage(int)>(57);

        r168.<android.os.Message: java.lang.Object obj> = r164;

        $r107 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        virtualinvoke $r107.<com.android.server.am.ActivityManagerService$MainHandler: boolean sendMessageDelayed(android.os.Message,long)>(r168, 10000L);

     label027:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void checkTime(long,java.lang.String)>(l40, "attachApplicationLocked: before bindApplication");

        if z22 != 0 goto label028;

        $r104 = new java.lang.StringBuilder;

        specialinvoke $r104.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Launching preboot mode app: ");

        virtualinvoke $r104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r164);

        $r105 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", $r105);

     label028:
        $r10 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mBackupTargets>;

        $i6 = r164.<com.android.server.am.ProcessRecord: int userId>;

        $r11 = virtualinvoke $r10.<android.util.SparseArray: java.lang.Object get(int)>($i6);

        r170 = (com.android.server.am.BackupRecord) $r11;

     label029:
        r171 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mDebugApp>;

     label030:
        b43 = 0;

        if r171 == null goto label040;

        b43 = 0;

     label031:
        $r102 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mDebugApp>;

        $z14 = virtualinvoke $r102.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z14 == 0 goto label040;

        $z15 = r0.<com.android.server.am.ActivityManagerService: boolean mWaitForDebugger>;

        if $z15 == 0 goto label033;

     label032:
        b44 = 2;

        goto label034;

     label033:
        b44 = 1;

     label034:
        virtualinvoke r164.<com.android.server.am.ProcessRecord: void setDebugging(boolean)>(1);

     label035:
        b43 = b44;

     label036:
        $z16 = r0.<com.android.server.am.ActivityManagerService: boolean mDebugTransient>;

        if $z16 == 0 goto label040;

        $r103 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mOrigDebugApp>;

        r0.<com.android.server.am.ActivityManagerService: java.lang.String mDebugApp> = $r103;

        $z17 = r0.<com.android.server.am.ActivityManagerService: boolean mOrigWaitForDebugger>;

        r0.<com.android.server.am.ActivityManagerService: boolean mWaitForDebugger> = $z17;

     label037:
        b43 = b44;

        goto label040;

     label038:
        $r140 := @caughtexception;

        r172 = $r140;

     label039:
        goto label234;

     label040:
        r173 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mTrackAllocationApp>;

     label041:
        if r173 == null goto label044;

     label042:
        $r101 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mTrackAllocationApp>;

        $z13 = virtualinvoke $r101.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z13 == 0 goto label044;

        r0.<com.android.server.am.ActivityManagerService: java.lang.String mTrackAllocationApp> = null;

     label043:
        z23 = 1;

        goto label045;

     label044:
        z23 = 0;

     label045:
        if r170 == null goto label054;

     label046:
        $r98 = r170.<com.android.server.am.BackupRecord: android.content.pm.ApplicationInfo appInfo>;

        $r99 = $r98.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $z12 = virtualinvoke $r99.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z12 == 0 goto label054;

        $r100 = r170.<com.android.server.am.BackupRecord: android.content.pm.ApplicationInfo appInfo>;

        $i25 = $r100.<android.content.pm.ApplicationInfo: int uid>;

        if $i25 < 10000 goto label052;

        i45 = r170.<com.android.server.am.BackupRecord: int backupMode>;

     label047:
        if i45 == 2 goto label051;

     label048:
        $i26 = r170.<com.android.server.am.BackupRecord: int backupMode>;

        if $i26 == 3 goto label051;

     label049:
        i46 = r170.<com.android.server.am.BackupRecord: int backupMode>;

     label050:
        if i46 != 1 goto label052;

     label051:
        z24 = 1;

        goto label053;

     label052:
        z24 = 0;

     label053:
        goto label055;

     label054:
        z24 = 0;

     label055:
        r174 = virtualinvoke r164.<com.android.server.am.ProcessRecord: com.android.server.am.ActiveInstrumentation getActiveInstrumentation()>();

     label056:
        if r174 == null goto label060;

     label057:
        $r96 = r174.<com.android.server.am.ActiveInstrumentation: android.content.ComponentName mClass>;

        $r97 = virtualinvoke $r96.<android.content.ComponentName: java.lang.String getPackageName()>();

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void notifyPackageUse(java.lang.String,int)>($r97, 7);

     label058:
        goto label060;

     label059:
        $r138 := @caughtexception;

        r172 = $r138;

        goto label039;

     label060:
        if r174 == null goto label063;

     label061:
        r175 = r174.<com.android.server.am.ActiveInstrumentation: android.content.pm.ApplicationInfo mTargetInfo>;

     label062:
        goto label064;

     label063:
        r175 = r164.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

     label064:
        $r12 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: android.content.res.CompatibilityInfo compatibilityInfoForPackage(android.content.pm.ApplicationInfo)>(r175);

        r164.<com.android.server.am.ProcessRecord: android.content.res.CompatibilityInfo compat> = $r12;

     label065:
        r176 = null;

     label066:
        $r13 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$ProfileData mProfileData>;

        r177 = virtualinvoke $r13.<com.android.server.am.ActivityManagerService$ProfileData: java.lang.String getProfileApp()>();

     label067:
        if r177 == null goto label085;

     label068:
        $r79 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$ProfileData mProfileData>;

        $r80 = virtualinvoke $r79.<com.android.server.am.ActivityManagerService$ProfileData: java.lang.String getProfileApp()>();

        $z10 = virtualinvoke $r80.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z10 == 0 goto label085;

     label069:
        $r81 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$ProfileData mProfileData>;

        virtualinvoke $r81.<com.android.server.am.ActivityManagerService$ProfileData: void setProfileProc(com.android.server.am.ProcessRecord)>(r164);

     label070:
        $r82 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$ProfileData mProfileData>;

        $r83 = virtualinvoke $r82.<com.android.server.am.ActivityManagerService$ProfileData: android.app.ProfilerInfo getProfilerInfo()>();

        if $r83 == null goto label089;

     label071:
        $r84 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$ProfileData mProfileData>;

        $r85 = virtualinvoke $r84.<com.android.server.am.ActivityManagerService$ProfileData: android.app.ProfilerInfo getProfilerInfo()>();

        $r86 = $r85.<android.app.ProfilerInfo: java.lang.String profileFile>;

        if $r86 != null goto label075;

     label072:
        $r94 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$ProfileData mProfileData>;

        $r95 = virtualinvoke $r94.<com.android.server.am.ActivityManagerService$ProfileData: android.app.ProfilerInfo getProfilerInfo()>();

        $z11 = $r95.<android.app.ProfilerInfo: boolean attachAgentDuringBind>;

        if $z11 == 0 goto label074;

     label073:
        goto label075;

     label074:
        z25 = 0;

        goto label076;

     label075:
        z25 = 1;

     label076:
        if z25 == 0 goto label080;

     label077:
        r178 = new android.app.ProfilerInfo;

     label078:
        $r92 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$ProfileData mProfileData>;

        $r93 = virtualinvoke $r92.<com.android.server.am.ActivityManagerService$ProfileData: android.app.ProfilerInfo getProfilerInfo()>();

        specialinvoke r178.<android.app.ProfilerInfo: void <init>(android.app.ProfilerInfo)>($r93);

     label079:
        goto label081;

     label080:
        r178 = null;

     label081:
        r179 = r178;

        r180 = null;

     label082:
        $r87 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$ProfileData mProfileData>;

        $r88 = virtualinvoke $r87.<com.android.server.am.ActivityManagerService$ProfileData: android.app.ProfilerInfo getProfilerInfo()>();

        $r89 = $r88.<android.app.ProfilerInfo: java.lang.String agent>;

        if $r89 == null goto label084;

     label083:
        $r90 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$ProfileData mProfileData>;

        $r91 = virtualinvoke $r90.<com.android.server.am.ActivityManagerService$ProfileData: android.app.ProfilerInfo getProfilerInfo()>();

        r180 = $r91.<android.app.ProfilerInfo: java.lang.String agent>;

     label084:
        r181 = r180;

        r176 = r179;

        goto label090;

     label085:
        if r174 == null goto label089;

     label086:
        $r76 = r174.<com.android.server.am.ActiveInstrumentation: java.lang.String mProfileFile>;

        if $r76 == null goto label089;

     label087:
        $r77 = new android.app.ProfilerInfo;

        $r78 = r174.<com.android.server.am.ActiveInstrumentation: java.lang.String mProfileFile>;

        specialinvoke $r77.<android.app.ProfilerInfo: void <init>(java.lang.String,android.os.ParcelFileDescriptor,int,boolean,boolean,java.lang.String,boolean)>($r78, null, 0, 0, 0, null, 0);

        r176 = $r77;

     label088:
        r181 = null;

        goto label090;

     label089:
        r181 = null;

     label090:
        r182 = r0.<com.android.server.am.ActivityManagerService: java.util.Map mAppAgentMap>;

     label091:
        r183 = r176;

        if r182 == null goto label103;

        r183 = r176;

     label092:
        $r65 = r0.<com.android.server.am.ActivityManagerService: java.util.Map mAppAgentMap>;

        $z9 = interfaceinvoke $r65.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z9 == 0 goto label103;

     label093:
        r183 = r176;

     label094:
        $r66 = r164.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i23 = $r66.<android.content.pm.ApplicationInfo: int flags>;

        $i24 = $i23 & 2;

        if $i24 == 0 goto label103;

     label095:
        $r67 = r0.<com.android.server.am.ActivityManagerService: java.util.Map mAppAgentMap>;

        $r68 = interfaceinvoke $r67.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r184 = (java.lang.String) $r68;

     label096:
        if r176 != null goto label100;

     label097:
        r183 = new android.app.ProfilerInfo;

     label098:
        $r73 = r0.<com.android.server.am.ActivityManagerService: java.util.Map mAppAgentMap>;

        $r74 = interfaceinvoke $r73.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r75 = (java.lang.String) $r74;

        specialinvoke r183.<android.app.ProfilerInfo: void <init>(java.lang.String,android.os.ParcelFileDescriptor,int,boolean,boolean,java.lang.String,boolean)>(null, null, 0, 0, 0, $r75, 1);

     label099:
        goto label103;

     label100:
        r183 = r176;

     label101:
        $r69 = r176.<android.app.ProfilerInfo: java.lang.String agent>;

        if $r69 != null goto label103;

     label102:
        $r70 = r0.<com.android.server.am.ActivityManagerService: java.util.Map mAppAgentMap>;

        $r71 = interfaceinvoke $r70.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r72 = (java.lang.String) $r71;

        r183 = virtualinvoke r176.<android.app.ProfilerInfo: android.app.ProfilerInfo setAgent(java.lang.String,boolean)>($r72, 1);

     label103:
        if r183 == null goto label109;

     label104:
        $r58 = r183.<android.app.ProfilerInfo: android.os.ParcelFileDescriptor profileFd>;

        if $r58 == null goto label109;

     label105:
        $r59 = r183.<android.app.ProfilerInfo: android.os.ParcelFileDescriptor profileFd>;

        $r60 = virtualinvoke $r59.<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor dup()>();

        r183.<android.app.ProfilerInfo: android.os.ParcelFileDescriptor profileFd> = $r60;

     label106:
        $r61 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$ProfileData mProfileData>;

        $r62 = virtualinvoke $r61.<com.android.server.am.ActivityManagerService$ProfileData: java.lang.String getProfileApp()>();

        $z8 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>($r62, r1);

        if $z8 == 0 goto label109;

     label107:
        $r63 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$ProfileData mProfileData>;

        $r64 = virtualinvoke $r63.<com.android.server.am.ActivityManagerService$ProfileData: android.app.ProfilerInfo getProfilerInfo()>();

        if $r64 == null goto label109;

     label108:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void clearProfilerLocked()>();

     label109:
        z26 = virtualinvoke r175.<android.content.pm.ApplicationInfo: boolean isInstantApp()>();

     label110:
        if z26 != 0 goto label114;

     label111:
        $i22 = r175.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i22 >= 28 goto label114;

     label112:
        r185 = <com.android.server.am.ActivityManagerService: java.lang.String sTheRealBuildSerial>;

     label113:
        goto label115;

     label114:
        r185 = "unknown";

     label115:
        $r186 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mActiveInstrumentation>;

        i47 = virtualinvoke $r186.<java.util.ArrayList: int size()>();

     label116:
        if i47 <= 0 goto label145;

        if r174 != null goto label145;

     label117:
        $r46 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mActiveInstrumentation>;

        $i19 = virtualinvoke $r46.<java.util.ArrayList: int size()>();

        i48 = $i19 - 1;

     label118:
        if i48 < 0 goto label143;

     label119:
        $r47 = virtualinvoke r164.<com.android.server.am.ProcessRecord: com.android.server.am.ActiveInstrumentation getActiveInstrumentation()>();

        if $r47 != null goto label143;

     label120:
        $r48 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mActiveInstrumentation>;

        $r49 = virtualinvoke $r48.<java.util.ArrayList: java.lang.Object get(int)>(i48);

        r187 = (com.android.server.am.ActiveInstrumentation) $r49;

     label121:
        $z5 = r187.<com.android.server.am.ActiveInstrumentation: boolean mFinished>;

        if $z5 != 0 goto label142;

     label122:
        $r50 = r187.<com.android.server.am.ActiveInstrumentation: android.content.pm.ApplicationInfo mTargetInfo>;

        $i21 = $r50.<android.content.pm.ApplicationInfo: int uid>;

        $i20 = r164.<com.android.server.am.ProcessRecord: int uid>;

        if $i21 != $i20 goto label141;

     label123:
        $r51 = r187.<com.android.server.am.ActiveInstrumentation: java.lang.String[] mTargetProcesses>;

        i49 = lengthof $r51;

     label124:
        if i49 != 0 goto label130;

     label125:
        $r53 = r187.<com.android.server.am.ActiveInstrumentation: android.content.pm.ApplicationInfo mTargetInfo>;

        $r56 = $r53.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r54 = r164.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r55 = $r54.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $z7 = virtualinvoke $r56.<java.lang.String: boolean equals(java.lang.Object)>($r55);

        if $z7 == 0 goto label129;

     label126:
        virtualinvoke r164.<com.android.server.am.ProcessRecord: void setActiveInstrumentation(com.android.server.am.ActiveInstrumentation)>(r187);

     label127:
        $r57 = r187.<com.android.server.am.ActiveInstrumentation: java.util.ArrayList mRunningProcesses>;

        virtualinvoke $r57.<java.util.ArrayList: boolean add(java.lang.Object)>(r164);

     label128:
        goto label142;

     label129:
        goto label142;

     label130:
        r188 = r187.<com.android.server.am.ActiveInstrumentation: java.lang.String[] mTargetProcesses>;

     label131:
        i0 = lengthof r188;

     label132:
        i50 = 0;

     label133:
        if i50 >= i0 goto label140;

        r189 = r188[i50];

     label134:
        r190 = r164.<com.android.server.am.ProcessRecord: java.lang.String processName>;

     label135:
        $z6 = virtualinvoke r189.<java.lang.String: boolean equals(java.lang.Object)>(r190);

        if $z6 == 0 goto label139;

     label136:
        virtualinvoke r164.<com.android.server.am.ProcessRecord: void setActiveInstrumentation(com.android.server.am.ActiveInstrumentation)>(r187);

     label137:
        $r52 = r187.<com.android.server.am.ActiveInstrumentation: java.util.ArrayList mRunningProcesses>;

        virtualinvoke $r52.<java.util.ArrayList: boolean add(java.lang.Object)>(r164);

     label138:
        goto label142;

     label139:
        i50 = i50 + 1;

        goto label133;

     label140:
        goto label142;

     label141:
        goto label142;

     label142:
        i48 = i48 + -1;

        goto label118;

     label143:
        r192 = r170;

        r193 = r175;

        goto label146;

     label144:
        $r128 := @caughtexception;

        r172 = $r128;

        goto label234;

     label145:
        r193 = r175;

        r192 = r170;

     label146:
        if r181 == null goto label150;

     label147:
        interfaceinvoke r155.<android.app.IApplicationThread: void attachAgent(java.lang.String)>(r181);

     label148:
        goto label150;

     label149:
        $r133 := @caughtexception;

        r172 = $r133;

        goto label234;

     label150:
        $r14 = r164.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        i51 = $r14.<android.content.pm.ApplicationInfo: int flags>;

     label151:
        $i7 = i51 & 2;

        if $i7 == 0 goto label153;

     label152:
        $r44 = r164.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r45 = $r44.<android.content.pm.ApplicationInfo: java.lang.String dataDir>;

        interfaceinvoke r155.<android.app.IApplicationThread: void attachStartupAgents(java.lang.String)>($r45);

     label153:
        $r15 = r164.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i8 = $r15.<android.content.pm.ApplicationInfo: int uid>;

        i52 = staticinvoke <android.os.UserHandle: int getAppId(int)>($i8);

     label154:
        if i52 < 10000 goto label159;

     label155:
        $r40 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/view/autofill/AutofillManagerInternal;");

        r195 = (android.view.autofill.AutofillManagerInternal) $r40;

     label156:
        if r195 == null goto label159;

     label157:
        $r41 = r164.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r43 = $r41.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r42 = r164.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $l18 = $r42.<android.content.pm.ApplicationInfo: long longVersionCode>;

        $i17 = r164.<com.android.server.am.ProcessRecord: int userId>;

        r196 = virtualinvoke r195.<android.view.autofill.AutofillManagerInternal: android.content.AutofillOptions getAutofillOptions(java.lang.String,long,int)>($r43, $l18, $i17);

     label158:
        goto label160;

     label159:
        r196 = null;

     label160:
        $r197 = r164.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i53 = $r197.<android.content.pm.ApplicationInfo: int uid>;

        i54 = staticinvoke <android.os.UserHandle: int getAppId(int)>($i53);

     label161:
        if i54 < 10000 goto label166;

     label162:
        $r37 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Lcom/android/server/contentcapture/ContentCaptureManagerInternal;");

        r198 = (com.android.server.contentcapture.ContentCaptureManagerInternal) $r37;

     label163:
        if r198 == null goto label166;

     label164:
        $i16 = r164.<com.android.server.am.ProcessRecord: int userId>;

        $r38 = r164.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r39 = $r38.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        r199 = virtualinvoke r198.<com.android.server.contentcapture.ContentCaptureManagerInternal: android.content.ContentCaptureOptions getOptionsForPackage(int,java.lang.String)>($i16, $r39);

     label165:
        goto label167;

     label166:
        r199 = null;

     label167:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void checkTime(long,java.lang.String)>(l40, "attachApplicationLocked: immediately before bindApplication");

        l55 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r200 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerInternal mAtmInternal>;

        $r201 = virtualinvoke r164.<com.android.server.am.ProcessRecord: com.android.server.wm.WindowProcessController getWindowProcessController()>();

        virtualinvoke $r200.<com.android.server.wm.ActivityTaskManagerInternal: void preBindApplication(com.android.server.wm.WindowProcessController)>($r201);

        r202 = virtualinvoke r164.<com.android.server.am.ProcessRecord: com.android.server.am.ActiveInstrumentation getActiveInstrumentation()>();

        r203 = r0.<com.android.server.am.ActivityManagerService: com.android.server.compat.PlatformCompat mPlatformCompat>;

     label168:
        if r203 == null goto label170;

     label169:
        $r36 = r0.<com.android.server.am.ActivityManagerService: com.android.server.compat.PlatformCompat mPlatformCompat>;

        $r35 = r164.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        virtualinvoke $r36.<com.android.server.compat.PlatformCompat: void resetReporting(android.content.pm.ApplicationInfo)>($r35);

     label170:
        r204 = staticinvoke <android.content.pm.ProviderInfoList: android.content.pm.ProviderInfoList fromList(java.util.List)>(r167);

        r205 = r164.<com.android.server.am.ProcessRecord: java.lang.String isolatedEntryPoint>;

     label171:
        if r205 == null goto label174;

     label172:
        $r34 = r164.<com.android.server.am.ProcessRecord: java.lang.String isolatedEntryPoint>;

        $r33 = r164.<com.android.server.am.ProcessRecord: java.lang.String[] isolatedEntryPointArgs>;

        interfaceinvoke r155.<android.app.IApplicationThread: void runIsolatedEntryPoint(java.lang.String,java.lang.String[])>($r34, $r33);

     label173:
        goto label188;

     label174:
        if r202 == null goto label183;

     label175:
        r206 = r202.<com.android.server.am.ActiveInstrumentation: android.content.ComponentName mClass>;

        r207 = r202.<com.android.server.am.ActiveInstrumentation: android.os.Bundle mArguments>;

        r208 = r202.<com.android.server.am.ActiveInstrumentation: android.app.IInstrumentationWatcher mWatcher>;

        r2 = r202.<com.android.server.am.ActiveInstrumentation: android.app.IUiAutomationConnection mUiAutomationConnection>;

        z27 = r0.<com.android.server.am.ActivityManagerService: boolean mBinderTransactionTrackingEnabled>;

     label176:
        if z24 != 0 goto label178;

        if z22 != 0 goto label177;

        goto label178;

     label177:
        z28 = 0;

        goto label179;

     label178:
        z28 = 1;

     label179:
        z29 = virtualinvoke r164.<com.android.server.am.ProcessRecord: boolean isPersistent()>();

        r3 = new android.content.res.Configuration;

        $r209 = virtualinvoke r164.<com.android.server.am.ProcessRecord: com.android.server.wm.WindowProcessController getWindowProcessController()>();

        $r210 = virtualinvoke $r209.<com.android.server.wm.WindowProcessController: android.content.res.Configuration getConfiguration()>();

        specialinvoke r3.<android.content.res.Configuration: void <init>(android.content.res.Configuration)>($r210);

        r4 = r164.<com.android.server.am.ProcessRecord: android.content.res.CompatibilityInfo compat>;

        $z30 = r164.<com.android.server.am.ProcessRecord: boolean isolated>;

        r211 = specialinvoke r0.<com.android.server.am.ActivityManagerService: android.util.ArrayMap getCommonServicesLocked(boolean)>($z30);

        $r212 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.CoreSettingsObserver mCoreSettingsObserver>;

        r213 = virtualinvoke $r212.<com.android.server.am.CoreSettingsObserver: android.os.Bundle getCoreSettingsLocked()>();

        r214 = r164.<com.android.server.am.ProcessRecord: long[] mDisabledCompatChanges>;

     label180:
        interfaceinvoke r155.<android.app.IApplicationThread: void bindApplication(java.lang.String,android.content.pm.ApplicationInfo,android.content.pm.ProviderInfoList,android.content.ComponentName,android.app.ProfilerInfo,android.os.Bundle,android.app.IInstrumentationWatcher,android.app.IUiAutomationConnection,int,boolean,boolean,boolean,boolean,android.content.res.Configuration,android.content.res.CompatibilityInfo,java.util.Map,android.os.Bundle,java.lang.String,android.content.AutofillOptions,android.content.ContentCaptureOptions,long[])>(r1, r193, r204, r206, r183, r207, r208, r2, b43, z27, z23, z28, z29, r3, r4, r211, r213, r185, r196, r199, r214);

     label181:
        goto label188;

     label182:
        $r154 := @caughtexception;

        r172 = $r154;

        goto label234;

     label183:
        z31 = r0.<com.android.server.am.ActivityManagerService: boolean mBinderTransactionTrackingEnabled>;

     label184:
        if z24 != 0 goto label186;

        if z22 != 0 goto label185;

        goto label186;

     label185:
        z32 = 0;

        goto label187;

     label186:
        z32 = 1;

     label187:
        z33 = virtualinvoke r164.<com.android.server.am.ProcessRecord: boolean isPersistent()>();

        r215 = new android.content.res.Configuration;

        $r216 = virtualinvoke r164.<com.android.server.am.ProcessRecord: com.android.server.wm.WindowProcessController getWindowProcessController()>();

        $r217 = virtualinvoke $r216.<com.android.server.wm.WindowProcessController: android.content.res.Configuration getConfiguration()>();

        specialinvoke r215.<android.content.res.Configuration: void <init>(android.content.res.Configuration)>($r217);

        $r218 = r164.<com.android.server.am.ProcessRecord: android.content.res.CompatibilityInfo compat>;

        $z34 = r164.<com.android.server.am.ProcessRecord: boolean isolated>;

        $r219 = specialinvoke r0.<com.android.server.am.ActivityManagerService: android.util.ArrayMap getCommonServicesLocked(boolean)>($z34);

        $r220 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.CoreSettingsObserver mCoreSettingsObserver>;

        $r221 = virtualinvoke $r220.<com.android.server.am.CoreSettingsObserver: android.os.Bundle getCoreSettingsLocked()>();

        $r222 = r164.<com.android.server.am.ProcessRecord: long[] mDisabledCompatChanges>;

        interfaceinvoke r155.<android.app.IApplicationThread: void bindApplication(java.lang.String,android.content.pm.ApplicationInfo,android.content.pm.ProviderInfoList,android.content.ComponentName,android.app.ProfilerInfo,android.os.Bundle,android.app.IInstrumentationWatcher,android.app.IUiAutomationConnection,int,boolean,boolean,boolean,boolean,android.content.res.Configuration,android.content.res.CompatibilityInfo,java.util.Map,android.os.Bundle,java.lang.String,android.content.AutofillOptions,android.content.ContentCaptureOptions,long[])>(r1, r193, r204, null, r183, null, null, null, b43, z31, z23, z32, z33, r215, $r218, $r219, $r221, r185, r196, r199, $r222);

     label188:
        if r183 == null goto label192;

     label189:
        virtualinvoke r183.<android.app.ProfilerInfo: void closeFd()>();

     label190:
        goto label192;

     label191:
        $r148 := @caughtexception;

        r172 = $r148;

        goto label234;

     label192:
        $r16 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        virtualinvoke r164.<com.android.server.am.ProcessRecord: void makeActive(android.app.IApplicationThread,com.android.server.am.ProcessStatsService)>(r155, $r16);

     label193:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void checkTime(long,java.lang.String)>(l40, "attachApplicationLocked: immediately after bindApplication");

        r224 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

     label194:
        virtualinvoke r224.<com.android.server.am.ProcessList: void updateLruProcessLocked(com.android.server.am.ProcessRecord,boolean,com.android.server.am.ProcessRecord)>(r164, 0, null);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void checkTime(long,java.lang.String)>(l40, "attachApplicationLocked: after updateLruProcessLocked");

        l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r164.<com.android.server.am.ProcessRecord: long lastLowMemory> = l1;

        r164.<com.android.server.am.ProcessRecord: long lastRequestedGc> = l1;

     label195:
        $r17 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPersistentStartingProcesses>;

        virtualinvoke $r17.<java.util.ArrayList: boolean remove(java.lang.Object)>(r164);

        $r18 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesOnHold>;

        virtualinvoke $r18.<java.util.ArrayList: boolean remove(java.lang.Object)>(r164);

        z35 = 0;

        z36 = 0;

        if z22 == 0 goto label199;

     label196:
        $r31 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerInternal mAtmInternal>;

        $r32 = virtualinvoke r164.<com.android.server.am.ProcessRecord: com.android.server.wm.WindowProcessController getWindowProcessController()>();

        z36 = virtualinvoke $r31.<com.android.server.wm.ActivityTaskManagerInternal: boolean attachApplication(com.android.server.wm.WindowProcessController)>($r32);

     label197:
        z35 = 0;

        goto label199;

     label198:
        $r149 := @caughtexception;

        $r150 = new java.lang.StringBuilder;

        specialinvoke $r150.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r150.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception thrown launching activities in ");

        virtualinvoke $r150.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r164);

        $r151 = virtualinvoke $r150.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r151, $r149);

        z35 = 1;

        z36 = 0;

     label199:
        if z35 != 0 goto label209;

     label200:
        r227 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveServices mServices>;

     label201:
        z37 = z36;

     label202:
        $z4 = virtualinvoke r227.<com.android.server.am.ActiveServices: boolean attachApplicationLocked(com.android.server.am.ProcessRecord,java.lang.String)>(r164, r1);

        z36 = z36 | $z4;

     label203:
        z37 = z36;

     label204:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void checkTime(long,java.lang.String)>(l40, "attachApplicationLocked: after mServices.attachApplicationLocked");

     label205:
        z38 = z35;

        goto label210;

     label206:
        $r124 := @caughtexception;

        r228 = $r124;

        z36 = z37;

        goto label208;

     label207:
        $r134 := @caughtexception;

        r228 = $r134;

     label208:
        $r125 = new java.lang.StringBuilder;

        specialinvoke $r125.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r125.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception thrown starting services in ");

        virtualinvoke $r125.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r164);

        $r126 = virtualinvoke $r125.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r126, r228);

        z38 = 1;

        goto label210;

     label209:
        z38 = z35;

     label210:
        if z38 != 0 goto label216;

        z39 = z38;

        z40 = z36;

        $z2 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean isPendingBroadcastProcessLocked(int)>(i37);

        if $z2 == 0 goto label217;

        z40 = z36;

     label211:
        $z3 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean sendPendingBroadcastsLocked(com.android.server.am.ProcessRecord)>(r164);

        z41 = z36 | $z3;

     label212:
        z40 = z41;

     label213:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void checkTime(long,java.lang.String)>(l40, "attachApplicationLocked: after sendPendingBroadcastsLocked");

     label214:
        z39 = z38;

        z40 = z41;

        goto label217;

     label215:
        $r130 := @caughtexception;

        $r131 = new java.lang.StringBuilder;

        specialinvoke $r131.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r131.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception thrown dispatching broadcasts in ");

        virtualinvoke $r131.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r164);

        $r132 = virtualinvoke $r131.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r132, $r130);

        z39 = 1;

        goto label217;

     label216:
        z40 = z36;

        z39 = z38;

     label217:
        if z39 != 0 goto label221;

        z42 = z39;

        if r192 == null goto label222;

        z42 = z39;

        $r25 = r192.<com.android.server.am.BackupRecord: com.android.server.am.ProcessRecord app>;

        if $r25 != r164 goto label222;

        $r26 = r192.<com.android.server.am.BackupRecord: android.content.pm.ApplicationInfo appInfo>;

        $r27 = $r26.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void notifyPackageUse(java.lang.String,int)>($r27, 5);

     label218:
        $r29 = r192.<com.android.server.am.BackupRecord: android.content.pm.ApplicationInfo appInfo>;

        $r28 = r192.<com.android.server.am.BackupRecord: android.content.pm.ApplicationInfo appInfo>;

        $r30 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: android.content.res.CompatibilityInfo compatibilityInfoForPackage(android.content.pm.ApplicationInfo)>($r28);

        $i15 = r192.<com.android.server.am.BackupRecord: int backupMode>;

        $i14 = r192.<com.android.server.am.BackupRecord: int userId>;

        interfaceinvoke r155.<android.app.IApplicationThread: void scheduleCreateBackupAgent(android.content.pm.ApplicationInfo,android.content.res.CompatibilityInfo,int,int)>($r29, $r30, $i15, $i14);

     label219:
        z42 = z39;

        goto label222;

     label220:
        $r141 := @caughtexception;

        $r142 = new java.lang.StringBuilder;

        specialinvoke $r142.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r142.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception thrown creating backup agent in ");

        virtualinvoke $r142.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r164);

        $r143 = virtualinvoke $r142.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r143, $r141);

        z42 = 1;

        goto label222;

     label221:
        z42 = z39;

     label222:
        if z42 == 0 goto label223;

        virtualinvoke r164.<com.android.server.am.ProcessRecord: void kill(java.lang.String,int,boolean)>("error during init", 7, 1);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void handleAppDiedLocked(com.android.server.am.ProcessRecord,boolean,boolean)>(r164, 0, 1);

        return 0;

     label223:
        if z40 != 0 goto label224;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void updateOomAdjLocked(com.android.server.am.ProcessRecord,java.lang.String)>(r164, "updateOomAdj_processBegin");

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void checkTime(long,java.lang.String)>(l40, "attachApplicationLocked: after updateOomAdjLocked");

     label224:
        $r19 = r164.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        i56 = $r19.<android.content.pm.ApplicationInfo: int uid>;

        i57 = r164.<com.android.server.am.ProcessRecord: int pid>;

        $r20 = r164.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        r234 = $r20.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        l58 = r164.<com.android.server.am.ProcessRecord: long startTime>;

        $l9 = r164.<com.android.server.am.ProcessRecord: long startTime>;

        $l10 = l55 - $l9;

        i59 = (int) $l10;

        $l11 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l12 = r164.<com.android.server.am.ProcessRecord: long startTime>;

        $l13 = $l11 - $l12;

        i60 = (int) $l13;

        $r21 = r164.<com.android.server.am.ProcessRecord: com.android.server.am.HostingRecord hostingRecord>;

        r235 = virtualinvoke $r21.<com.android.server.am.HostingRecord: java.lang.String getType()>();

        $r22 = r164.<com.android.server.am.ProcessRecord: com.android.server.am.HostingRecord hostingRecord>;

        $r23 = virtualinvoke $r22.<com.android.server.am.HostingRecord: java.lang.String getName()>();

        if $r23 == null goto label225;

        $r24 = r164.<com.android.server.am.ProcessRecord: com.android.server.am.HostingRecord hostingRecord>;

        r236 = virtualinvoke $r24.<com.android.server.am.HostingRecord: java.lang.String getName()>();

        goto label226;

     label225:
        r236 = "";

     label226:
        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int,int,java.lang.String,int,long,int,int,java.lang.String,java.lang.String)>(169, i56, i57, r234, 3, l58, i59, i60, r235, r236);

        return 1;

     label227:
        $r135 := @caughtexception;

        r172 = $r135;

        goto label229;

     label228:
        $r153 := @caughtexception;

        r172 = $r153;

     label229:
        goto label234;

     label230:
        $r139 := @caughtexception;

        r172 = $r139;

        goto label234;

     label231:
        $r127 := @caughtexception;

        r172 = $r127;

        goto label234;

     label232:
        $r137 := @caughtexception;

        r172 = $r137;

        goto label234;

     label233:
        $r152 := @caughtexception;

        r172 = $r152;

     label234:
        $r237 = new java.lang.StringBuilder;

        specialinvoke $r237.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r237.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception thrown during bind of ");

        virtualinvoke $r237.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r164);

        $r239 = virtualinvoke $r237.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r239, r172);

        $r240 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        virtualinvoke r164.<com.android.server.am.ProcessRecord: void resetPackageList(com.android.server.am.ProcessStatsService)>($r240);

        virtualinvoke r164.<com.android.server.am.ProcessRecord: void unlinkDeathRecipient()>();

        virtualinvoke r164.<com.android.server.am.ProcessRecord: void kill(java.lang.String,int,boolean)>("error during bind", 7, 1);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void handleAppDiedLocked(com.android.server.am.ProcessRecord,boolean,boolean)>(r164, 0, 1);

        return 0;

     label235:
        $r144 := @caughtexception;

        $r145 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        virtualinvoke r164.<com.android.server.am.ProcessRecord: void resetPackageList(com.android.server.am.ProcessStatsService)>($r145);

        $r147 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r146 = new com.android.server.am.HostingRecord;

        specialinvoke $r146.<com.android.server.am.HostingRecord: void <init>(java.lang.String,java.lang.String)>("link fail", r1);

        virtualinvoke $r147.<com.android.server.am.ProcessList: void startProcessLocked(com.android.server.am.ProcessRecord,com.android.server.am.HostingRecord,int)>(r164, $r146, 0);

        return 0;

        catch java.lang.Throwable from label001 to label002 with label006;
        catch java.lang.Throwable from label007 to label008 with label006;
        catch java.lang.Exception from label014 to label015 with label016;
        catch android.os.RemoteException from label020 to label021 with label235;
        catch java.lang.Exception from label029 to label030 with label233;
        catch java.lang.Exception from label031 to label032 with label038;
        catch java.lang.Exception from label034 to label035 with label038;
        catch java.lang.Exception from label036 to label037 with label038;
        catch java.lang.Exception from label040 to label041 with label233;
        catch java.lang.Exception from label042 to label043 with label038;
        catch java.lang.Exception from label046 to label047 with label038;
        catch java.lang.Exception from label048 to label049 with label059;
        catch java.lang.Exception from label049 to label050 with label059;
        catch java.lang.Exception from label055 to label056 with label232;
        catch java.lang.Exception from label057 to label058 with label059;
        catch java.lang.Exception from label061 to label062 with label059;
        catch java.lang.Exception from label063 to label064 with label232;
        catch java.lang.Exception from label064 to label065 with label232;
        catch java.lang.Exception from label066 to label067 with label232;
        catch java.lang.Exception from label068 to label069 with label059;
        catch java.lang.Exception from label069 to label070 with label059;
        catch java.lang.Exception from label070 to label071 with label059;
        catch java.lang.Exception from label071 to label072 with label059;
        catch java.lang.Exception from label072 to label073 with label059;
        catch java.lang.Exception from label077 to label078 with label059;
        catch java.lang.Exception from label078 to label079 with label059;
        catch java.lang.Exception from label082 to label083 with label059;
        catch java.lang.Exception from label083 to label084 with label059;
        catch java.lang.Exception from label086 to label087 with label059;
        catch java.lang.Exception from label087 to label088 with label059;
        catch java.lang.Exception from label090 to label091 with label232;
        catch java.lang.Exception from label092 to label093 with label059;
        catch java.lang.Exception from label094 to label095 with label059;
        catch java.lang.Exception from label095 to label096 with label059;
        catch java.lang.Exception from label097 to label098 with label059;
        catch java.lang.Exception from label098 to label099 with label059;
        catch java.lang.Exception from label101 to label102 with label059;
        catch java.lang.Exception from label102 to label103 with label059;
        catch java.lang.Exception from label104 to label105 with label059;
        catch java.lang.Exception from label105 to label106 with label059;
        catch java.lang.Exception from label106 to label107 with label059;
        catch java.lang.Exception from label107 to label108 with label059;
        catch java.lang.Exception from label108 to label109 with label059;
        catch java.lang.Exception from label109 to label110 with label232;
        catch java.lang.Exception from label111 to label112 with label059;
        catch java.lang.Exception from label112 to label113 with label059;
        catch java.lang.Exception from label115 to label116 with label232;
        catch java.lang.Exception from label117 to label118 with label144;
        catch java.lang.Exception from label119 to label120 with label144;
        catch java.lang.Exception from label120 to label121 with label144;
        catch java.lang.Exception from label121 to label122 with label144;
        catch java.lang.Exception from label122 to label123 with label144;
        catch java.lang.Exception from label123 to label124 with label144;
        catch java.lang.Exception from label125 to label126 with label059;
        catch java.lang.Exception from label126 to label127 with label059;
        catch java.lang.Exception from label127 to label128 with label059;
        catch java.lang.Exception from label130 to label131 with label144;
        catch java.lang.Exception from label131 to label132 with label144;
        catch java.lang.Exception from label134 to label135 with label149;
        catch java.lang.Exception from label135 to label136 with label149;
        catch java.lang.Exception from label136 to label137 with label149;
        catch java.lang.Exception from label137 to label138 with label149;
        catch java.lang.Exception from label147 to label148 with label149;
        catch java.lang.Exception from label150 to label151 with label231;
        catch java.lang.Exception from label152 to label153 with label149;
        catch java.lang.Exception from label153 to label154 with label231;
        catch java.lang.Exception from label155 to label156 with label149;
        catch java.lang.Exception from label157 to label158 with label149;
        catch java.lang.Exception from label160 to label161 with label231;
        catch java.lang.Exception from label162 to label163 with label149;
        catch java.lang.Exception from label164 to label165 with label149;
        catch java.lang.Exception from label167 to label168 with label231;
        catch java.lang.Exception from label169 to label170 with label149;
        catch java.lang.Exception from label170 to label171 with label231;
        catch java.lang.Exception from label172 to label173 with label149;
        catch java.lang.Exception from label175 to label176 with label182;
        catch java.lang.Exception from label179 to label180 with label182;
        catch java.lang.Exception from label180 to label181 with label191;
        catch java.lang.Exception from label183 to label184 with label230;
        catch java.lang.Exception from label187 to label188 with label230;
        catch java.lang.Exception from label189 to label190 with label191;
        catch java.lang.Exception from label192 to label193 with label230;
        catch java.lang.Exception from label193 to label194 with label228;
        catch java.lang.Exception from label194 to label195 with label227;
        catch java.lang.Exception from label196 to label197 with label198;
        catch java.lang.Exception from label200 to label201 with label207;
        catch java.lang.Exception from label202 to label203 with label206;
        catch java.lang.Exception from label204 to label205 with label206;
        catch java.lang.Exception from label211 to label212 with label215;
        catch java.lang.Exception from label213 to label214 with label215;
        catch java.lang.Exception from label218 to label219 with label220;
    }

    static void boostPriorityForLockedSection()
    {
        com.android.server.ThreadPriorityBooster $r0;

        $r0 = <com.android.server.am.ActivityManagerService: com.android.server.ThreadPriorityBooster sThreadPriorityBooster>;

        virtualinvoke $r0.<com.android.server.ThreadPriorityBooster: void boost()>();

        return;
    }

    private boolean canClearIdentity(int, int, int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, i2, $i3, $i4, $i5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $i3 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i1);

        if $i3 != i2 goto label1;

        return 1;

     label1:
        $i4 = staticinvoke <com.android.server.am.ActivityManagerService: int checkComponentPermission(java.lang.String,int,int,int,boolean)>("android.permission.INTERACT_ACROSS_USERS", i0, i1, -1, 1);

        if $i4 == 0 goto label3;

        $i5 = staticinvoke <com.android.server.am.ActivityManagerService: int checkComponentPermission(java.lang.String,int,int,int,boolean)>("android.permission.INTERACT_ACROSS_USERS_FULL", i0, i1, -1, 1);

        if $i5 != 0 goto label2;

        goto label3;

     label2:
        return 0;

     label3:
        return 1;
    }

    private final boolean canGcNowLocked()
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.BroadcastQueue[] r1;
        int i0, i1;
        com.android.server.am.BroadcastQueue r2;
        com.android.server.wm.ActivityTaskManagerInternal $r3;
        boolean $z0, $z1, $z2;
        java.util.ArrayList $r4;
        com.android.server.am.BroadcastDispatcher $r5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastQueue[] mBroadcastQueues>;

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label4;

        r2 = r1[i1];

        $r4 = r2.<com.android.server.am.BroadcastQueue: java.util.ArrayList mParallelBroadcasts>;

        $z1 = virtualinvoke $r4.<java.util.ArrayList: boolean isEmpty()>();

        if $z1 == 0 goto label3;

        $r5 = r2.<com.android.server.am.BroadcastQueue: com.android.server.am.BroadcastDispatcher mDispatcher>;

        $z2 = virtualinvoke $r5.<com.android.server.am.BroadcastDispatcher: boolean isEmpty()>();

        if $z2 != 0 goto label2;

        goto label3;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;

     label4:
        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerInternal mAtmInternal>;

        $z0 = virtualinvoke $r3.<com.android.server.wm.ActivityTaskManagerInternal: boolean canGcNow()>();

        return $z0;
    }

    private void checkBroadcastFromSystem(android.content.Intent, com.android.server.am.ProcessRecord, java.lang.String, int, boolean, java.util.List)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1;
        java.lang.String r2, r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r24, $r28, $r34, $r38, $r41, $r44;
        int i0, $i1, $i2, $i3, $i4, i7;
        boolean z0, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, z18;
        java.util.List r3;
        java.lang.StringBuilder $r20, $r30;
        java.lang.Throwable $r29, $r39;
        com.android.server.am.BroadcastFilter $r40;
        android.content.pm.ActivityInfo $r42, $r43;
        android.content.ComponentName $r45;
        android.content.Intent r46;
        java.lang.Object r47;
        android.content.pm.ResolveInfo r48;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r46 := @parameter0: android.content.Intent;

        r1 := @parameter1: com.android.server.am.ProcessRecord;

        r2 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        z0 := @parameter4: boolean;

        r3 := @parameter5: java.util.List;

        $i1 = virtualinvoke r46.<android.content.Intent: int getFlags()>();

        $i2 = $i1 & 4194304;

        if $i2 == 0 goto label01;

        return;

     label01:
        r4 = virtualinvoke r46.<android.content.Intent: java.lang.String getAction()>();

        if z0 != 0 goto label14;

        $r5 = "android.intent.action.CLOSE_SYSTEM_DIALOGS";

        $z2 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z2 != 0 goto label14;

        $r6 = "com.android.intent.action.DISMISS_KEYBOARD_SHORTCUTS";

        $z3 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z3 != 0 goto label14;

        $r7 = "android.intent.action.MEDIA_BUTTON";

        $z4 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z4 != 0 goto label14;

        $r8 = "android.intent.action.MEDIA_SCANNER_SCAN_FILE";

        $z5 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z5 != 0 goto label14;

        $r9 = "com.android.intent.action.SHOW_KEYBOARD_SHORTCUTS";

        $z6 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z6 != 0 goto label14;

        $r10 = "android.intent.action.MASTER_CLEAR";

        $z7 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z7 != 0 goto label14;

        $r11 = "android.intent.action.FACTORY_RESET";

        $z8 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z8 != 0 goto label14;

        $r12 = "android.appwidget.action.APPWIDGET_CONFIGURE";

        $z9 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z9 != 0 goto label14;

        $r13 = "android.appwidget.action.APPWIDGET_UPDATE";

        $z10 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z10 != 0 goto label14;

        $r14 = "android.location.HIGH_POWER_REQUEST_CHANGE";

        $z11 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z11 != 0 goto label14;

        $r15 = "com.android.omadm.service.CONFIGURATION_UPDATE";

        $z12 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z12 != 0 goto label14;

        $r16 = "android.text.style.SUGGESTION_PICKED";

        $z13 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z13 != 0 goto label14;

        $r17 = "android.media.action.OPEN_AUDIO_EFFECT_CONTROL_SESSION";

        $z14 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z14 != 0 goto label14;

        $r18 = "android.media.action.CLOSE_AUDIO_EFFECT_CONTROL_SESSION";

        $z15 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z15 == 0 goto label02;

        goto label14;

     label02:
        $r19 = virtualinvoke r46.<android.content.Intent: java.lang.String getPackage()>();

        if $r19 != null goto label03;

        $r45 = virtualinvoke r46.<android.content.Intent: android.content.ComponentName getComponent()>();

        if $r45 == null goto label10;

     label03:
        if r3 == null goto label13;

        $i3 = interfaceinvoke r3.<java.util.List: int size()>();

        if $i3 != 0 goto label04;

        goto label13;

     label04:
        $i4 = interfaceinvoke r3.<java.util.List: int size()>();

        i7 = $i4 - 1;

     label05:
        z18 = 1;

        if i7 < 0 goto label09;

        r47 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i7);

        $z16 = r47 instanceof android.content.pm.ResolveInfo;

        if $z16 == 0 goto label07;

        r48 = (android.content.pm.ResolveInfo) r47;

        $r42 = r48.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $z17 = $r42.<android.content.pm.ActivityInfo: boolean exported>;

        if $z17 == 0 goto label06;

        $r43 = r48.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r44 = $r43.<android.content.pm.ActivityInfo: java.lang.String permission>;

        if $r44 != null goto label06;

        z18 = 0;

        goto label09;

     label06:
        goto label08;

     label07:
        $r40 = (com.android.server.am.BroadcastFilter) r47;

        $r41 = $r40.<com.android.server.am.BroadcastFilter: java.lang.String requiredPermission>;

        if $r41 != null goto label08;

        z18 = 0;

        goto label09;

     label08:
        i7 = i7 + -1;

        goto label05;

     label09:
        if z18 == 0 goto label10;

        return;

     label10:
        if r1 == null goto label11;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Sending non-protected broadcast ");

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from system ");

        $r34 = virtualinvoke r1.<com.android.server.am.ProcessRecord: java.lang.String toShortString()>();

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" pkg ");

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r38 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        $r39 = new java.lang.Throwable;

        specialinvoke $r39.<java.lang.Throwable: void <init>()>();

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r38, $r39);

        goto label12;

     label11:
        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Sending non-protected broadcast ");

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from system uid ");

        $r24 = staticinvoke <android.os.UserHandle: java.lang.String formatUid(int)>(i0);

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" pkg ");

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r28 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        $r29 = new java.lang.Throwable;

        specialinvoke $r29.<java.lang.Throwable: void <init>()>();

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r28, $r29);

     label12:
        return;

     label13:
        return;

     label14:
        return;
    }

    public static int checkComponentPermission(java.lang.String, int, int, int, boolean)
    {
        int i0, i1, i2, $i3, $i4;
        boolean z0, $z1;
        android.util.SparseArray r0, $r2;
        android.content.pm.ProcessInfo r1;
        java.lang.Object $r3;
        android.util.ArraySet $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r7 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        z0 := @parameter4: boolean;

        $i3 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        if i0 != $i3 goto label01;

        return 0;

     label01:
        if r7 == null goto label11;

        r0 = <com.android.server.am.ActivityManagerService: android.util.SparseArray sActiveProcessInfoSelfLocked>;

        entermonitor r0;

     label02:
        $r2 = <com.android.server.am.ActivityManagerService: android.util.SparseArray sActiveProcessInfoSelfLocked>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r1 = (android.content.pm.ProcessInfo) $r3;

     label03:
        if r1 == null goto label06;

     label04:
        $r4 = r1.<android.content.pm.ProcessInfo: android.util.ArraySet deniedPermissions>;

        if $r4 == null goto label06;

        $r5 = r1.<android.content.pm.ProcessInfo: android.util.ArraySet deniedPermissions>;

        $z1 = virtualinvoke $r5.<android.util.ArraySet: boolean contains(java.lang.Object)>(r7);

        if $z1 == 0 goto label06;

        exitmonitor r0;

     label05:
        return -1;

     label06:
        exitmonitor r0;

     label07:
        goto label11;

     label08:
        $r6 := @caughtexception;

     label09:
        exitmonitor r0;

     label10:
        throw $r6;

     label11:
        $i4 = staticinvoke <android.app.ActivityManager: int checkComponentPermission(java.lang.String,int,int,boolean)>(r7, i1, i2, z0);

        return $i4;

        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    private java.lang.String checkContentProviderAssociation(com.android.server.am.ProcessRecord, int, android.content.pm.ProviderInfo)
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.pm.ProviderInfo r1;
        com.android.server.am.ProcessRecord$PackageList $r2, $r3;
        int $i0, $i1, $i2, $i3, i4, i5;
        java.lang.String $r4, $r6, $r7, $r9, r11;
        android.content.pm.ApplicationInfo $r5, $r8;
        boolean $z0, $z1;
        com.android.server.am.ProcessRecord r10;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r10 := @parameter0: com.android.server.am.ProcessRecord;

        i4 := @parameter1: int;

        r1 := @parameter2: android.content.pm.ProviderInfo;

        if r10 != null goto label3;

        $r9 = r1.<android.content.pm.ProviderInfo: java.lang.String packageName>;

        $r8 = r1.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i3 = $r8.<android.content.pm.ApplicationInfo: int uid>;

        $z1 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean validateAssociationAllowedLocked(java.lang.String,int,java.lang.String,int)>($r9, $i3, null, i4);

        if $z1 == 0 goto label1;

        r11 = null;

        goto label2;

     label1:
        r11 = "<null>";

     label2:
        return r11;

     label3:
        $r2 = r10.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        $i0 = virtualinvoke $r2.<com.android.server.am.ProcessRecord$PackageList: int size()>();

        i5 = $i0 - 1;

     label4:
        if i5 < 0 goto label6;

        $r3 = r10.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        $r4 = virtualinvoke $r3.<com.android.server.am.ProcessRecord$PackageList: java.lang.String keyAt(int)>(i5);

        $i2 = r10.<com.android.server.am.ProcessRecord: int uid>;

        $r6 = r1.<android.content.pm.ProviderInfo: java.lang.String packageName>;

        $r5 = r1.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i1 = $r5.<android.content.pm.ApplicationInfo: int uid>;

        $z0 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean validateAssociationAllowedLocked(java.lang.String,int,java.lang.String,int)>($r4, $i2, $r6, $i1);

        if $z0 != 0 goto label5;

        $r7 = r1.<android.content.pm.ProviderInfo: java.lang.String packageName>;

        return $r7;

     label5:
        i5 = i5 + -1;

        goto label4;

     label6:
        return null;
    }

    private final java.lang.String checkContentProviderPermissionLocked(android.content.pm.ProviderInfo, com.android.server.am.ProcessRecord, int, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, z8, z9, $z11;
        int i0, i1, $i2, $i3, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12, i13, i14, $i15, $i16, i17;
        java.lang.String r2, $r4, $r5, $r6, $r9, $r12, $r34, $r36, $r41, r45, r47, $r51, r53;
        android.content.pm.ApplicationInfo $r3, $r26, $r29, $r30, $r42;
        java.lang.StringBuilder $r7, $r24, $r32, $r49;
        com.android.server.uri.UriGrantsManagerInternal $r28, $r37;
        com.android.server.am.UserController $r31, r39;
        android.content.pm.ProviderInfo r38;
        android.content.pm.PathPermission[] r43;
        android.content.pm.PathPermission r44;
        java.lang.Object r52;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r38 := @parameter0: android.content.pm.ProviderInfo;

        r1 := @parameter1: com.android.server.am.ProcessRecord;

        i11 := @parameter2: int;

        z0 := @parameter3: boolean;

        if r1 == null goto label01;

        i12 = r1.<com.android.server.am.ProcessRecord: int pid>;

        goto label02;

     label01:
        i12 = staticinvoke <android.os.Binder: int getCallingPid()>();

     label02:
        if r1 == null goto label03;

        i13 = r1.<com.android.server.am.ProcessRecord: int uid>;

        goto label04;

     label03:
        i13 = staticinvoke <android.os.Binder: int getCallingUid()>();

     label04:
        if z0 == 0 goto label08;

        $r31 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.UserController mUserController>;

        i0 = virtualinvoke $r31.<com.android.server.am.UserController: int unsafeConvertIncomingUser(int)>(i11);

        $i10 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i13);

        if i0 == $i10 goto label06;

        $r37 = r0.<com.android.server.am.ActivityManagerService: com.android.server.uri.UriGrantsManagerInternal mUgmInternal>;

        $z7 = interfaceinvoke $r37.<com.android.server.uri.UriGrantsManagerInternal: boolean checkAuthorityGrants(int,android.content.pm.ProviderInfo,int,boolean)>(i13, r38, i0, z0);

        if $z7 == 0 goto label05;

        return null;

     label05:
        z8 = 1;

        goto label07;

     label06:
        z8 = 0;

     label07:
        r39 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.UserController mUserController>;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("checkContentProviderPermissionLocked ");

        $r34 = r38.<android.content.pm.ProviderInfo: java.lang.String authority>;

        virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        $r36 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        i1 = virtualinvoke r39.<com.android.server.am.UserController: int handleIncomingUser(int,int,int,boolean,int,java.lang.String,java.lang.String)>(i12, i13, i11, 0, 0, $r36, null);

        i14 = i1;

        z9 = z8;

        if i1 == i0 goto label09;

        z9 = 0;

        i14 = i1;

        goto label09;

     label08:
        i14 = i11;

        z9 = 0;

     label09:
        $r41 = r38.<android.content.pm.ProviderInfo: java.lang.String readPermission>;

        $r42 = r38.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i15 = $r42.<android.content.pm.ApplicationInfo: int uid>;

        $z11 = r38.<android.content.pm.ProviderInfo: boolean exported>;

        $i16 = staticinvoke <com.android.server.am.ActivityManagerService: int checkComponentPermission(java.lang.String,int,int,int,boolean)>($r41, i12, i13, $i15, $z11);

        if $i16 != 0 goto label10;

        return null;

     label10:
        $r4 = r38.<android.content.pm.ProviderInfo: java.lang.String writePermission>;

        $r3 = r38.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i2 = $r3.<android.content.pm.ApplicationInfo: int uid>;

        $z1 = r38.<android.content.pm.ProviderInfo: boolean exported>;

        $i3 = staticinvoke <com.android.server.am.ActivityManagerService: int checkComponentPermission(java.lang.String,int,int,int,boolean)>($r4, i12, i13, $i2, $z1);

        if $i3 != 0 goto label11;

        return null;

     label11:
        r43 = r38.<android.content.pm.ProviderInfo: android.content.pm.PathPermission[] pathPermissions>;

        if r43 == null goto label15;

        i17 = lengthof r43;

     label12:
        if i17 <= 0 goto label15;

        i17 = i17 + -1;

        r44 = r43[i17];

        r2 = virtualinvoke r44.<android.content.pm.PathPermission: java.lang.String getReadPermission()>();

        if r2 == null goto label13;

        $r30 = r38.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i8 = $r30.<android.content.pm.ApplicationInfo: int uid>;

        $z6 = r38.<android.content.pm.ProviderInfo: boolean exported>;

        $i9 = staticinvoke <com.android.server.am.ActivityManagerService: int checkComponentPermission(java.lang.String,int,int,int,boolean)>(r2, i12, i13, $i8, $z6);

        if $i9 != 0 goto label13;

        return null;

     label13:
        r45 = virtualinvoke r44.<android.content.pm.PathPermission: java.lang.String getWritePermission()>();

        if r45 == null goto label14;

        $r29 = r38.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i6 = $r29.<android.content.pm.ApplicationInfo: int uid>;

        $z5 = r38.<android.content.pm.ProviderInfo: boolean exported>;

        $i7 = staticinvoke <com.android.server.am.ActivityManagerService: int checkComponentPermission(java.lang.String,int,int,int,boolean)>(r45, i12, i13, $i6, $z5);

        if $i7 != 0 goto label14;

        return null;

     label14:
        goto label12;

     label15:
        if z9 != 0 goto label16;

        $r28 = r0.<com.android.server.am.ActivityManagerService: com.android.server.uri.UriGrantsManagerInternal mUgmInternal>;

        $z4 = interfaceinvoke $r28.<com.android.server.uri.UriGrantsManagerInternal: boolean checkAuthorityGrants(int,android.content.pm.ProviderInfo,int,boolean)>(i13, r38, i14, z0);

        if $z4 == 0 goto label16;

        return null;

     label16:
        $z2 = r38.<android.content.pm.ProviderInfo: boolean exported>;

        if $z2 != 0 goto label17;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" that is not exported from UID ");

        $r26 = r38.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i5 = $r26.<android.content.pm.ApplicationInfo: int uid>;

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        r47 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label19;

     label17:
        $r6 = "android.permission.MANAGE_DOCUMENTS";

        $r5 = r38.<android.content.pm.ProviderInfo: java.lang.String readPermission>;

        $z3 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z3 == 0 goto label18;

        r47 = " requires that you obtain access using ACTION_OPEN_DOCUMENT or related APIs";

        goto label19;

     label18:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires ");

        $r9 = r38.<android.content.pm.ProviderInfo: java.lang.String readPermission>;

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" or ");

        $r12 = r38.<android.content.pm.ProviderInfo: java.lang.String writePermission>;

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        r47 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

     label19:
        $r49 = new java.lang.StringBuilder;

        specialinvoke $r49.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: opening provider ");

        $r51 = r38.<android.content.pm.ProviderInfo: java.lang.String name>;

        virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r51);

        virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from ");

        if r1 == null goto label20;

        r52 = r1;

        goto label21;

     label20:
        r52 = "(null)";

     label21:
        virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r52);

        virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (pid=");

        virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i12);

        virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i13);

        virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r47);

        r53 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r53);

        return r53;
    }

    private void cleanupDisabledPackageComponentsLocked(java.lang.String, int, java.lang.String[])
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, $i1, $i2, $i3, $i4, i5, i6, i7, i8, i9, i10, i11;
        android.content.pm.IPackageManager r1;
        java.lang.String r2, r15;
        boolean z0, $z1, z8, z10;
        com.android.server.wm.ActivityTaskManagerInternal $r3;
        com.android.server.am.ActiveServices $r4;
        java.util.ArrayList $r5;
        com.android.server.am.ProviderMap $r6;
        com.android.server.am.BroadcastQueue[] $r7, $r8;
        com.android.server.am.BroadcastQueue $r9;
        java.lang.Object $r10;
        com.android.server.am.ContentProviderRecord $r11;
        android.util.ArraySet $r12, r17, r18, r21;
        java.lang.Exception $r13, $r14;
        java.lang.String[] r16;
        android.content.ComponentName r20;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r15 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r16 := @parameter2: java.lang.String[];

        r1 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        if r16 != null goto label01;

        return;

     label01:
        $i1 = lengthof r16;

        i5 = $i1 - 1;

        z8 = 0;

        r17 = null;

     label02:
        if i5 < 0 goto label16;

        r2 = r16[i5];

        z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(r15);

        i6 = 0;

        if z0 == 0 goto label08;

        if i0 == -1 goto label03;

        i7 = i0;

        goto label04;

     label03:
        i7 = 0;

     label04:
        i8 = interfaceinvoke r1.<android.content.pm.IPackageManager: int getApplicationEnabledSetting(java.lang.String,int)>(r15, i7);

     label05:
        z8 = 0;

        if i8 == 1 goto label06;

        z8 = 0;

        if i8 == 0 goto label06;

        z8 = 1;

     label06:
        z10 = z8;

        if z8 == 0 goto label14;

        r18 = null;

        goto label17;

     label07:
        $r13 := @caughtexception;

        return;

     label08:
        r20 = new android.content.ComponentName;

        specialinvoke r20.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>(r15, r2);

     label09:
        if i0 == -1 goto label10;

        i6 = i0;

     label10:
        i9 = interfaceinvoke r1.<android.content.pm.IPackageManager: int getComponentEnabledSetting(android.content.ComponentName,int)>(r20, i6);

     label11:
        if i9 == 1 goto label13;

        if i9 == 0 goto label13;

        r21 = r17;

        if r17 != null goto label12;

        $r12 = new android.util.ArraySet;

        $i4 = lengthof r16;

        specialinvoke $r12.<android.util.ArraySet: void <init>(int)>($i4);

        r21 = $r12;

     label12:
        interfaceinvoke r21.<java.util.Set: boolean add(java.lang.Object)>(r2);

        r17 = r21;

        z10 = z8;

        goto label14;

     label13:
        z10 = z8;

     label14:
        i5 = i5 + -1;

        z8 = z10;

        goto label02;

     label15:
        $r14 := @caughtexception;

        return;

     label16:
        r18 = r17;

     label17:
        if z8 != 0 goto label18;

        if r18 != null goto label18;

        return;

     label18:
        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerInternal mAtmInternal>;

        $z1 = r0.<com.android.server.am.ActivityManagerService: boolean mBooted>;

        virtualinvoke $r3.<com.android.server.wm.ActivityTaskManagerInternal: void cleanupDisabledPackageComponents(java.lang.String,java.util.Set,int,boolean)>(r15, r18, i0, $z1);

        $r4 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveServices mServices>;

        virtualinvoke $r4.<com.android.server.am.ActiveServices: boolean bringDownDisabledPackageServicesLocked(java.lang.String,java.util.Set,int,boolean,boolean)>(r15, r18, i0, 0, 1);

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        $r6 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProviderMap mProviderMap>;

        virtualinvoke $r6.<com.android.server.am.ProviderMap: boolean collectPackageProvidersLocked(java.lang.String,java.util.Set,boolean,boolean,int,java.util.ArrayList)>(r15, r18, 1, 0, i0, $r5);

        $i2 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        i10 = $i2 - 1;

     label19:
        if i10 < 0 goto label20;

        $r10 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i10);

        $r11 = (com.android.server.am.ContentProviderRecord) $r10;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean removeDyingProviderLocked(com.android.server.am.ProcessRecord,com.android.server.am.ContentProviderRecord,boolean)>(null, $r11, 1);

        i10 = i10 + -1;

        goto label19;

     label20:
        $r7 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastQueue[] mBroadcastQueues>;

        $i3 = lengthof $r7;

        i11 = $i3 - 1;

     label21:
        if i11 < 0 goto label22;

        $r8 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastQueue[] mBroadcastQueues>;

        $r9 = $r8[i11];

        virtualinvoke $r9.<com.android.server.am.BroadcastQueue: boolean cleanupDisabledPackageReceiversLocked(java.lang.String,java.util.Set,int,boolean)>(r15, r18, i0, 1);

        i11 = i11 + -1;

        goto label21;

     label22:
        return;

        catch java.lang.Exception from label04 to label05 with label07;
        catch java.lang.Exception from label08 to label09 with label15;
        catch java.lang.Exception from label10 to label11 with label15;
    }

    private void clearPendingBackup(int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0;
        android.util.SparseArray $r2;
        java.lang.Object $r3;
        com.android.server.job.JobSchedulerInternal $r4;
        java.lang.Throwable $r5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        entermonitor r0;

     label1:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r2 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mBackupTargets>;

        virtualinvoke $r2.<android.util.SparseArray: void delete(int)>(i0);

        exitmonitor r0;

     label2:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        $r3 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Lcom/android/server/job/JobSchedulerInternal;");

        $r4 = (com.android.server.job.JobSchedulerInternal) $r3;

        interfaceinvoke $r4.<com.android.server.job.JobSchedulerInternal: void clearAllBackingUpUids()>();

        return;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private java.util.List collectReceiverComponents(android.content.Intent, java.lang.String, int, int[], int[])
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1, $r13, $r14, $r19, r38;
        int[] r2, r3;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, i13, i14, i15, i16, i17, i18, i19, $i20, i21, i22;
        boolean z0, $z1, z2;
        java.lang.Object $r4, $r9, $r15, $r20;
        android.content.pm.ResolveInfo $r5, $r21, r36, r39;
        android.content.pm.ActivityInfo $r6, $r10, $r11, $r12, $r16, $r17, $r18, $r22;
        android.content.pm.ApplicationInfo $r7;
        android.content.pm.ParceledListSlice $r8;
        com.android.server.am.UserController $r23;
        android.os.RemoteException $r24, $r25, $r26, $r27, $r28, $r29;
        android.content.Intent r30;
        java.util.List r31, r34, r35;
        java.util.HashSet r32, r41;
        android.content.pm.IPackageManager r33;
        android.content.ComponentName r37, r40;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r30 := @parameter0: android.content.Intent;

        r1 := @parameter1: java.lang.String;

        i12 := @parameter2: int;

        r2 := @parameter3: int[];

        r3 := @parameter4: int[];

        r31 = null;

        r32 = null;

     label01:
        i0 = lengthof r2;

     label02:
        i13 = 0;

        z2 = 0;

        r31 = null;

     label03:
        if i13 >= i0 goto label49;

        i14 = r2[i13];

        if i12 != 2000 goto label08;

     label04:
        $r23 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.UserController mUserController>;

        z0 = virtualinvoke $r23.<com.android.server.am.UserController: boolean hasUserRestriction(java.lang.String,int)>("no_debugging_features", i14);

     label05:
        if z0 == 0 goto label08;

        goto label46;

     label06:
        $r27 := @caughtexception;

     label07:
        goto label51;

     label08:
        r33 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

     label09:
        $r8 = interfaceinvoke r33.<android.content.pm.IPackageManager: android.content.pm.ParceledListSlice queryIntentReceivers(android.content.Intent,java.lang.String,int,int)>(r30, r1, 268436480, i14);

        r34 = virtualinvoke $r8.<android.content.pm.ParceledListSlice: java.util.List getList()>();

     label10:
        if i14 == 0 goto label17;

        if r34 == null goto label17;

        i15 = 0;

     label11:
        $i9 = interfaceinvoke r34.<java.util.List: int size()>();

        if i15 >= $i9 goto label16;

     label12:
        i16 = i15;

     label13:
        $r20 = interfaceinvoke r34.<java.util.List: java.lang.Object get(int)>(i15);

        $r21 = (android.content.pm.ResolveInfo) $r20;

        $r22 = $r21.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $i10 = $r22.<android.content.pm.ActivityInfo: int flags>;

        $i11 = $i10 & 536870912;

        if $i11 == 0 goto label15;

        interfaceinvoke r34.<java.util.List: java.lang.Object remove(int)>(i15);

     label14:
        i16 = i15 - 1;

     label15:
        i15 = i16 + 1;

        goto label11;

     label16:
        goto label17;

     label17:
        r35 = r34;

        if r34 == null goto label21;

     label18:
        i17 = interfaceinvoke r34.<java.util.List: int size()>();

     label19:
        r35 = r34;

        if i17 != 0 goto label21;

        r35 = null;

        goto label21;

     label20:
        $r25 := @caughtexception;

        goto label07;

     label21:
        if r31 != null goto label22;

        r31 = r35;

        goto label46;

     label22:
        if r35 == null goto label46;

        if z2 != 0 goto label36;

        i18 = 0;

     label23:
        $i6 = interfaceinvoke r31.<java.util.List: int size()>();

        if i18 >= $i6 goto label35;

     label24:
        $r15 = interfaceinvoke r31.<java.util.List: java.lang.Object get(int)>(i18);

        r36 = (android.content.pm.ResolveInfo) $r15;

     label25:
        $r16 = r36.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $i7 = $r16.<android.content.pm.ActivityInfo: int flags>;

        $i8 = $i7 & 1073741824;

        if $i8 == 0 goto label34;

     label26:
        r37 = new android.content.ComponentName;

     label27:
        $r17 = r36.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        r38 = $r17.<android.content.pm.ActivityInfo: java.lang.String packageName>;

     label28:
        $r18 = r36.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r19 = $r18.<android.content.pm.ActivityInfo: java.lang.String name>;

        specialinvoke r37.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>(r38, $r19);

     label29:
        if r32 != null goto label32;

     label30:
        r32 = new java.util.HashSet;

        specialinvoke r32.<java.util.HashSet: void <init>()>();

     label31:
        goto label32;

     label32:
        virtualinvoke r32.<java.util.HashSet: boolean add(java.lang.Object)>(r37);

     label33:
        goto label34;

     label34:
        i18 = i18 + 1;

        goto label23;

     label35:
        z2 = 1;

        goto label36;

     label36:
        i19 = 0;

     label37:
        $i20 = interfaceinvoke r35.<java.util.List: int size()>();

        if i19 >= $i20 goto label44;

        $r9 = interfaceinvoke r35.<java.util.List: java.lang.Object get(int)>(i19);

        r39 = (android.content.pm.ResolveInfo) $r9;

        $r10 = r39.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $i4 = $r10.<android.content.pm.ActivityInfo: int flags>;

        $i5 = $i4 & 1073741824;

        if $i5 == 0 goto label42;

        r40 = new android.content.ComponentName;

        $r11 = r39.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r14 = $r11.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $r12 = r39.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r13 = $r12.<android.content.pm.ActivityInfo: java.lang.String name>;

        specialinvoke r40.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r14, $r13);

     label38:
        r41 = r32;

        if r32 != null goto label40;

     label39:
        r41 = new java.util.HashSet;

        specialinvoke r41.<java.util.HashSet: void <init>()>();

     label40:
        $z1 = virtualinvoke r41.<java.util.HashSet: boolean contains(java.lang.Object)>(r40);

        if $z1 != 0 goto label41;

        virtualinvoke r41.<java.util.HashSet: boolean add(java.lang.Object)>(r40);

        interfaceinvoke r31.<java.util.List: boolean add(java.lang.Object)>(r39);

     label41:
        r32 = r41;

        goto label43;

     label42:
        interfaceinvoke r31.<java.util.List: boolean add(java.lang.Object)>(r39);

     label43:
        i19 = i19 + 1;

        goto label37;

     label44:
        goto label46;

     label45:
        $r29 := @caughtexception;

        goto label51;

     label46:
        i13 = i13 + 1;

        goto label03;

     label47:
        $r26 := @caughtexception;

        goto label51;

     label48:
        $r24 := @caughtexception;

        goto label51;

     label49:
        goto label51;

     label50:
        $r28 := @caughtexception;

     label51:
        if r31 == null goto label54;

        if r3 == null goto label54;

        $i1 = interfaceinvoke r31.<java.util.List: int size()>();

        i21 = $i1 - 1;

     label52:
        if i21 < 0 goto label54;

        $r4 = interfaceinvoke r31.<java.util.List: java.lang.Object get(int)>(i21);

        $r5 = (android.content.pm.ResolveInfo) $r4;

        $r6 = $r5.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r7 = $r6.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i2 = $r7.<android.content.pm.ApplicationInfo: int uid>;

        i22 = staticinvoke <android.os.UserHandle: int getAppId(int)>($i2);

        if i22 < 10000 goto label53;

        $i3 = staticinvoke <java.util.Arrays: int binarySearch(int[],int)>(r3, i22);

        if $i3 >= 0 goto label53;

        interfaceinvoke r31.<java.util.List: java.lang.Object remove(int)>(i21);

     label53:
        i21 = i21 + -1;

        goto label52;

     label54:
        return r31;

        catch android.os.RemoteException from label01 to label02 with label50;
        catch android.os.RemoteException from label04 to label05 with label06;
        catch android.os.RemoteException from label08 to label09 with label48;
        catch android.os.RemoteException from label09 to label10 with label47;
        catch android.os.RemoteException from label11 to label12 with label20;
        catch android.os.RemoteException from label13 to label14 with label20;
        catch android.os.RemoteException from label18 to label19 with label20;
        catch android.os.RemoteException from label23 to label24 with label47;
        catch android.os.RemoteException from label24 to label25 with label47;
        catch android.os.RemoteException from label25 to label26 with label47;
        catch android.os.RemoteException from label26 to label27 with label47;
        catch android.os.RemoteException from label27 to label28 with label47;
        catch android.os.RemoteException from label28 to label29 with label45;
        catch android.os.RemoteException from label30 to label31 with label45;
        catch android.os.RemoteException from label32 to label33 with label45;
        catch android.os.RemoteException from label37 to label38 with label45;
        catch android.os.RemoteException from label39 to label40 with label45;
        catch android.os.RemoteException from label40 to label41 with label45;
        catch android.os.RemoteException from label42 to label43 with label45;
    }

    private static java.io.File createAnrDumpFile(java.io.File) throws java.io.IOException
    {
        java.io.File r0, r7;
        java.text.SimpleDateFormat $r1, r8, r9;
        java.lang.String $r4, $r5, r11;
        boolean $z0;
        java.lang.Throwable $r6;
        java.util.Date r10;
        java.lang.StringBuilder r12;
        java.io.IOException r13;

        r7 := @parameter0: java.io.File;

        entermonitor class "Lcom/android/server/am/ActivityManagerService;";

     label1:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r1 = <com.android.server.am.ActivityManagerService: java.text.SimpleDateFormat sAnrFileDateFormat>;

        if $r1 != null goto label2;

        r8 = new java.text.SimpleDateFormat;

        specialinvoke r8.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyy-MM-dd-HH-mm-ss-SSS");

        <com.android.server.am.ActivityManagerService: java.text.SimpleDateFormat sAnrFileDateFormat> = r8;

     label2:
        r9 = <com.android.server.am.ActivityManagerService: java.text.SimpleDateFormat sAnrFileDateFormat>;

        r10 = new java.util.Date;

        specialinvoke r10.<java.util.Date: void <init>()>();

        r11 = virtualinvoke r9.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>(r10);

        r0 = new java.io.File;

        r12 = new java.lang.StringBuilder;

        specialinvoke r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("anr_");

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);

        $r4 = virtualinvoke r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<java.io.File: void <init>(java.io.File,java.lang.String)>(r7, $r4);

        $z0 = virtualinvoke r0.<java.io.File: boolean createNewFile()>();

        if $z0 == 0 goto label4;

        $r5 = virtualinvoke r0.<java.io.File: java.lang.String getAbsolutePath()>();

        staticinvoke <android.os.FileUtils: int setPermissions(java.lang.String,int,int,int)>($r5, 384, -1, -1);

        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

     label3:
        exitmonitor class "Lcom/android/server/am/ActivityManagerService;";

        return r0;

     label4:
        r13 = new java.io.IOException;

        specialinvoke r13.<java.io.IOException: void <init>(java.lang.String)>("Unable to create ANR dump file: createNewFile failed");

        throw r13;

     label5:
        $r6 := @caughtexception;

        exitmonitor class "Lcom/android/server/am/ActivityManagerService;";

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label4 to label5 with label5;
    }

    private void deferPssForActivityStart()
    {
        com.android.server.am.ActivityManagerService r0;
        long $l0, $l3;
        byte $b1;
        java.util.concurrent.atomic.AtomicInteger $r2;
        android.os.Handler $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        entermonitor r0;

     label1:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $l0 = r0.<com.android.server.am.ActivityManagerService: long mPssDeferralTime>;

        $b1 = $l0 cmp 0L;

        if $b1 <= 0 goto label2;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void deferPssIfNeededLocked()>();

        $r2 = r0.<com.android.server.am.ActivityManagerService: java.util.concurrent.atomic.AtomicInteger mActivityStartingNesting>;

        virtualinvoke $r2.<java.util.concurrent.atomic.AtomicInteger: int getAndIncrement()>();

        $r3 = r0.<com.android.server.am.ActivityManagerService: android.os.Handler mBgHandler>;

        $l3 = r0.<com.android.server.am.ActivityManagerService: long mPssDeferralTime>;

        virtualinvoke $r3.<android.os.Handler: boolean sendEmptyMessageDelayed(int,long)>(3, $l3);

     label2:
        exitmonitor r0;

     label3:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label4:
        $r4 := @caughtexception;

     label5:
        exitmonitor r0;

     label6:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    private void deferPssIfNeededLocked()
    {
        com.android.server.am.ActivityManagerService r0;
        java.util.ArrayList $r1;
        int $i0;
        android.os.Handler $r2, $r3;
        long $l1;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingPssProcesses>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if $i0 <= 0 goto label1;

        $r2 = r0.<com.android.server.am.ActivityManagerService: android.os.Handler mBgHandler>;

        virtualinvoke $r2.<android.os.Handler: void removeMessages(int)>(1);

        $r3 = r0.<com.android.server.am.ActivityManagerService: android.os.Handler mBgHandler>;

        $l1 = r0.<com.android.server.am.ActivityManagerService: long mPssDeferralTime>;

        virtualinvoke $r3.<android.os.Handler: boolean sendEmptyMessageDelayed(int,long)>(1, $l1);

     label1:
        return;
    }

    private void demoteSystemServerRenderThread(int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        staticinvoke <android.os.Process: void setThreadPriority(int,int)>(i0, 10);

        return;
    }

    private void dispatchProcessDied(int, int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, i2;
        android.os.RemoteCallbackList $r1, $r2, $r3;
        android.os.IInterface $r4;
        android.os.RemoteException $r5;
        android.app.IProcessObserver r6;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.server.am.ActivityManagerService: android.os.RemoteCallbackList mProcessObservers>;

        i2 = virtualinvoke $r1.<android.os.RemoteCallbackList: int beginBroadcast()>();

     label1:
        if i2 <= 0 goto label6;

        i2 = i2 + -1;

        $r3 = r0.<com.android.server.am.ActivityManagerService: android.os.RemoteCallbackList mProcessObservers>;

        $r4 = virtualinvoke $r3.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>(i2);

        r6 = (android.app.IProcessObserver) $r4;

        if r6 == null goto label5;

     label2:
        interfaceinvoke r6.<android.app.IProcessObserver: void onProcessDied(int,int)>(i0, i1);

     label3:
        goto label5;

     label4:
        $r5 := @caughtexception;

     label5:
        goto label1;

     label6:
        $r2 = r0.<com.android.server.am.ActivityManagerService: android.os.RemoteCallbackList mProcessObservers>;

        virtualinvoke $r2.<android.os.RemoteCallbackList: void finishBroadcast()>();

        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    private void dispatchProcessesChanged()
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, i13, i14;
        com.android.server.am.ActivityManagerService$ProcessChangeItem r1, $r11;
        java.util.ArrayList $r2, $r5, $r7, $r12;
        com.android.server.am.ActivityManagerService$ProcessChangeItem[] $r3, $r4, $r10, $r15, $r16;
        android.os.RemoteCallbackList $r8, $r9, $r13;
        android.os.IInterface $r14;
        boolean $z1;
        android.os.RemoteException $r17;
        java.lang.Throwable $r18, $r19;
        android.app.IProcessObserver r20;

        r0 := @this: com.android.server.am.ActivityManagerService;

        entermonitor r0;

     label01:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r2 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingProcessChanges>;

        i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$ProcessChangeItem[] mActiveProcessChanges>;

        $i2 = lengthof $r3;

        if $i2 >= i0 goto label02;

        $r16 = newarray (com.android.server.am.ActivityManagerService$ProcessChangeItem)[i0];

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$ProcessChangeItem[] mActiveProcessChanges> = $r16;

     label02:
        $r5 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingProcessChanges>;

        $r4 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$ProcessChangeItem[] mActiveProcessChanges>;

        virtualinvoke $r5.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r4);

        $r7 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingProcessChanges>;

        virtualinvoke $r7.<java.util.ArrayList: void clear()>();

        exitmonitor r0;

     label03:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        $r8 = r0.<com.android.server.am.ActivityManagerService: android.os.RemoteCallbackList mProcessObservers>;

        i12 = virtualinvoke $r8.<android.os.RemoteCallbackList: int beginBroadcast()>();

     label04:
        if i12 <= 0 goto label11;

        i1 = i12 - 1;

        $r13 = r0.<com.android.server.am.ActivityManagerService: android.os.RemoteCallbackList mProcessObservers>;

        $r14 = virtualinvoke $r13.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>(i1);

        r20 = (android.app.IProcessObserver) $r14;

        if r20 == null goto label10;

        i13 = 0;

     label05:
        if i13 >= i0 goto label10;

     label06:
        $r15 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$ProcessChangeItem[] mActiveProcessChanges>;

        r1 = $r15[i13];

        $i3 = r1.<com.android.server.am.ActivityManagerService$ProcessChangeItem: int changes>;

        $i4 = $i3 & 1;

        if $i4 == 0 goto label07;

        $i11 = r1.<com.android.server.am.ActivityManagerService$ProcessChangeItem: int pid>;

        $i10 = r1.<com.android.server.am.ActivityManagerService$ProcessChangeItem: int uid>;

        $z1 = r1.<com.android.server.am.ActivityManagerService$ProcessChangeItem: boolean foregroundActivities>;

        interfaceinvoke r20.<android.app.IProcessObserver: void onForegroundActivitiesChanged(int,int,boolean)>($i11, $i10, $z1);

     label07:
        $i5 = r1.<com.android.server.am.ActivityManagerService$ProcessChangeItem: int changes>;

        $i6 = $i5 & 2;

        if $i6 == 0 goto label08;

        $i9 = r1.<com.android.server.am.ActivityManagerService$ProcessChangeItem: int pid>;

        $i8 = r1.<com.android.server.am.ActivityManagerService$ProcessChangeItem: int uid>;

        $i7 = r1.<com.android.server.am.ActivityManagerService$ProcessChangeItem: int foregroundServiceTypes>;

        interfaceinvoke r20.<android.app.IProcessObserver: void onForegroundServicesChanged(int,int,int)>($i9, $i8, $i7);

     label08:
        i13 = i13 + 1;

        goto label05;

     label09:
        $r17 := @caughtexception;

     label10:
        i12 = i1;

        goto label04;

     label11:
        $r9 = r0.<com.android.server.am.ActivityManagerService: android.os.RemoteCallbackList mProcessObservers>;

        virtualinvoke $r9.<android.os.RemoteCallbackList: void finishBroadcast()>();

        entermonitor r0;

     label12:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

     label13:
        i14 = 0;

     label14:
        if i14 >= i0 goto label17;

     label15:
        $r12 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mAvailProcessChanges>;

        $r10 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$ProcessChangeItem[] mActiveProcessChanges>;

        $r11 = $r10[i14];

        virtualinvoke $r12.<java.util.ArrayList: boolean add(java.lang.Object)>($r11);

     label16:
        i14 = i14 + 1;

        goto label14;

     label17:
        exitmonitor r0;

     label18:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label19:
        $r18 := @caughtexception;

     label20:
        exitmonitor r0;

     label21:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r18;

     label22:
        $r19 := @caughtexception;

     label23:
        exitmonitor r0;

     label24:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r19;

        catch java.lang.Throwable from label01 to label02 with label22;
        catch java.lang.Throwable from label02 to label03 with label22;
        catch android.os.RemoteException from label06 to label07 with label09;
        catch android.os.RemoteException from label07 to label08 with label09;
        catch java.lang.Throwable from label12 to label13 with label19;
        catch java.lang.Throwable from label15 to label16 with label19;
        catch java.lang.Throwable from label17 to label18 with label19;
        catch java.lang.Throwable from label20 to label21 with label19;
        catch java.lang.Throwable from label23 to label24 with label22;
    }

    private void dispatchUidsChangedForObserver(android.app.IUidObserver, com.android.server.am.ActivityManagerService$UidObserverRegistration, int)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ActivityManagerService$UidObserverRegistration r1;
        int i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, i36, i37, $i38, $i39, $i40, i41, i44, $i45;
        com.android.server.am.UidRecord$ChangeItem r2;
        long l1, $l10, $l42, $l43;
        com.android.server.am.UidRecord$ChangeItem[] $r3;
        android.util.SparseIntArray $r4, $r5, $r6, $r7, $r8;
        boolean $z0, $z1, z2, z3, z4;
        android.os.RemoteException $r9;
        android.app.IUidObserver r10;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r10 := @parameter0: android.app.IUidObserver;

        r1 := @parameter1: com.android.server.am.ActivityManagerService$UidObserverRegistration;

        i0 := @parameter2: int;

        if r10 != null goto label01;

        return;

     label01:
        i36 = 0;

     label02:
        if i36 >= i0 goto label50;

     label03:
        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.UidRecord$ChangeItem[] mActiveUidChanges>;

        r2 = $r3[i36];

        i37 = r2.<com.android.server.am.UidRecord$ChangeItem: int change>;

     label04:
        if i37 != 0 goto label07;

     label05:
        $i34 = r1.<com.android.server.am.ActivityManagerService$UidObserverRegistration: int which>;

        $i35 = $i34 & 1;

        if $i35 != 0 goto label07;

     label06:
        goto label48;

     label07:
        l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

     label08:
        $i2 = i37 & 2;

        if $i2 == 0 goto label11;

     label09:
        $i31 = r1.<com.android.server.am.ActivityManagerService$UidObserverRegistration: int which>;

        $i32 = $i31 & 4;

        if $i32 == 0 goto label13;

        $i33 = r2.<com.android.server.am.UidRecord$ChangeItem: int uid>;

        $z1 = r2.<com.android.server.am.UidRecord$ChangeItem: boolean ephemeral>;

        interfaceinvoke r10.<android.app.IUidObserver: void onUidIdle(int,boolean)>($i33, $z1);

     label10:
        goto label13;

     label11:
        $i3 = i37 & 4;

        if $i3 == 0 goto label13;

     label12:
        $i28 = r1.<com.android.server.am.ActivityManagerService$UidObserverRegistration: int which>;

        $i29 = $i28 & 8;

        if $i29 == 0 goto label13;

        $i30 = r2.<com.android.server.am.UidRecord$ChangeItem: int uid>;

        interfaceinvoke r10.<android.app.IUidObserver: void onUidActive(int)>($i30);

     label13:
        $i38 = r1.<com.android.server.am.ActivityManagerService$UidObserverRegistration: int which>;

        $i39 = $i38 & 16;

        if $i39 == 0 goto label19;

     label14:
        $i24 = i37 & 8;

        if $i24 == 0 goto label17;

     label15:
        $i27 = r2.<com.android.server.am.UidRecord$ChangeItem: int uid>;

        interfaceinvoke r10.<android.app.IUidObserver: void onUidCachedChanged(int,boolean)>($i27, 1);

     label16:
        goto label19;

     label17:
        $i25 = i37 & 16;

        if $i25 == 0 goto label19;

     label18:
        $i26 = r2.<com.android.server.am.UidRecord$ChangeItem: int uid>;

        interfaceinvoke r10.<android.app.IUidObserver: void onUidCachedChanged(int,boolean)>($i26, 0);

     label19:
        $i40 = i37 & 1;

        if $i40 == 0 goto label24;

     label20:
        $i20 = r1.<com.android.server.am.ActivityManagerService$UidObserverRegistration: int which>;

        $i21 = $i20 & 2;

        if $i21 == 0 goto label21;

        $i23 = r2.<com.android.server.am.UidRecord$ChangeItem: int uid>;

        $z0 = r2.<com.android.server.am.UidRecord$ChangeItem: boolean ephemeral>;

        interfaceinvoke r10.<android.app.IUidObserver: void onUidGone(int,boolean)>($i23, $z0);

     label21:
        $r7 = r1.<com.android.server.am.ActivityManagerService$UidObserverRegistration: android.util.SparseIntArray lastProcStates>;

        if $r7 == null goto label23;

        $r8 = r1.<com.android.server.am.ActivityManagerService$UidObserverRegistration: android.util.SparseIntArray lastProcStates>;

        $i22 = r2.<com.android.server.am.UidRecord$ChangeItem: int uid>;

        virtualinvoke $r8.<android.util.SparseIntArray: void delete(int)>($i22);

     label22:
        goto label45;

     label23:
        goto label45;

     label24:
        $i4 = r1.<com.android.server.am.ActivityManagerService$UidObserverRegistration: int which>;

        $i5 = $i4 & 1;

        if $i5 == 0 goto label45;

        $i8 = r1.<com.android.server.am.ActivityManagerService$UidObserverRegistration: int cutpoint>;

        if $i8 < 0 goto label39;

        $r6 = r1.<com.android.server.am.ActivityManagerService$UidObserverRegistration: android.util.SparseIntArray lastProcStates>;

        $i15 = r2.<com.android.server.am.UidRecord$ChangeItem: int uid>;

        i41 = virtualinvoke $r6.<android.util.SparseIntArray: int get(int,int)>($i15, -1);

     label25:
        if i41 == -1 goto label35;

     label26:
        $i17 = r1.<com.android.server.am.ActivityManagerService$UidObserverRegistration: int cutpoint>;

        if i41 > $i17 goto label28;

     label27:
        z2 = 1;

        goto label29;

     label28:
        z2 = 0;

     label29:
        $i19 = r2.<com.android.server.am.UidRecord$ChangeItem: int processState>;

        $i18 = r1.<com.android.server.am.ActivityManagerService$UidObserverRegistration: int cutpoint>;

        if $i19 > $i18 goto label31;

     label30:
        z3 = 1;

        goto label32;

     label31:
        z3 = 0;

     label32:
        if z2 == z3 goto label33;

        z4 = 1;

        goto label34;

     label33:
        z4 = 0;

     label34:
        goto label40;

     label35:
        $i16 = r2.<com.android.server.am.UidRecord$ChangeItem: int processState>;

        if $i16 == 20 goto label37;

     label36:
        z4 = 1;

        goto label38;

     label37:
        z4 = 0;

     label38:
        goto label40;

     label39:
        z4 = 1;

     label40:
        if z4 == 0 goto label44;

     label41:
        $r4 = r1.<com.android.server.am.ActivityManagerService$UidObserverRegistration: android.util.SparseIntArray lastProcStates>;

        if $r4 == null goto label42;

        $r5 = r1.<com.android.server.am.ActivityManagerService$UidObserverRegistration: android.util.SparseIntArray lastProcStates>;

        $i14 = r2.<com.android.server.am.UidRecord$ChangeItem: int uid>;

        $i13 = r2.<com.android.server.am.UidRecord$ChangeItem: int processState>;

        virtualinvoke $r5.<android.util.SparseIntArray: void put(int,int)>($i14, $i13);

     label42:
        $i12 = r2.<com.android.server.am.UidRecord$ChangeItem: int uid>;

        $i11 = r2.<com.android.server.am.UidRecord$ChangeItem: int processState>;

        $l10 = r2.<com.android.server.am.UidRecord$ChangeItem: long procStateSeq>;

        $i9 = r2.<com.android.server.am.UidRecord$ChangeItem: int capability>;

        interfaceinvoke r10.<android.app.IUidObserver: void onUidStateChanged(int,int,long,int)>($i12, $i11, $l10, $i9);

     label43:
        goto label45;

     label44:
        goto label45;

     label45:
        $l42 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l43 = $l42 - l1;

        i44 = (int) $l43;

        $i45 = r1.<com.android.server.am.ActivityManagerService$UidObserverRegistration: int mMaxDispatchTime>;

        if $i45 >= i44 goto label46;

        r1.<com.android.server.am.ActivityManagerService$UidObserverRegistration: int mMaxDispatchTime> = i44;

     label46:
        if i44 < 20 goto label48;

     label47:
        $i6 = r1.<com.android.server.am.ActivityManagerService$UidObserverRegistration: int mSlowDispatchCount>;

        $i7 = $i6 + 1;

        r1.<com.android.server.am.ActivityManagerService$UidObserverRegistration: int mSlowDispatchCount> = $i7;

     label48:
        i36 = i36 + 1;

        goto label02;

     label49:
        $r9 := @caughtexception;

        goto label50;

     label50:
        return;

        catch android.os.RemoteException from label03 to label04 with label49;
        catch android.os.RemoteException from label05 to label06 with label49;
        catch android.os.RemoteException from label07 to label08 with label49;
        catch android.os.RemoteException from label09 to label10 with label49;
        catch android.os.RemoteException from label12 to label13 with label49;
        catch android.os.RemoteException from label13 to label14 with label49;
        catch android.os.RemoteException from label15 to label16 with label49;
        catch android.os.RemoteException from label18 to label19 with label49;
        catch android.os.RemoteException from label20 to label21 with label49;
        catch android.os.RemoteException from label21 to label22 with label49;
        catch android.os.RemoteException from label24 to label25 with label49;
        catch android.os.RemoteException from label26 to label27 with label49;
        catch android.os.RemoteException from label29 to label30 with label49;
        catch android.os.RemoteException from label35 to label36 with label49;
        catch android.os.RemoteException from label41 to label42 with label49;
        catch android.os.RemoteException from label42 to label43 with label49;
        catch android.os.RemoteException from label45 to label46 with label49;
        catch android.os.RemoteException from label47 to label48 with label49;
    }

    private void doDump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[], boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        java.io.PrintWriter r1;
        boolean z0, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32, $z33, $z34, $z35, $z36, $z37, $z38, $z39, $z40, $z43, $z44, $z45, $z46, $z47, $z48, $z49, $z50, $z51, $z52, $z53, $z54, $z55, $z56, $z57, $z58, $z59, z60, z61, z62, z63, z64, z65, z66, z67, $z68, z69, $z70, $z71;
        long l0, l46, l47, l48, l49;
        int i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i42, i43, i44, i45, i51, i52, i53;
        android.content.Context $r2;
        java.lang.String $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r39, $r40, $r41, $r42, $r49, $r57, $r61, $r63, $r65, $r66, $r67, $r68, $r69, $r70, $r71, $r78, $r79, $r80, $r81, $r82, $r83, $r84, $r85, $r86, $r87, $r92, r117, r118, r121, r122, r126, r129, r130, r135, r138, r155;
        com.android.server.am.PendingIntentController $r17;
        com.android.server.am.ActiveServices $r36, $r38, $r73, $r74, $r140;
        com.android.server.am.ActiveServices$ServiceDumper $r37, r147;
        com.android.server.wm.ActivityTaskManagerInternal $r43, $r64, $r72, r158;
        com.android.server.am.ActivityManagerShellCommand $r44;
        android.os.ResultReceiver $r45;
        java.lang.StringBuilder $r46, $r54, $r58, $r75, $r88;
        com.android.server.am.ProcessList $r50;
        com.android.server.am.AppExitInfoTracker $r51;
        com.android.server.am.ActivityManagerConstants $r52;
        com.android.server.am.OomAdjuster $r53;
        android.util.proto.ProtoOutputStream $r62;
        char $c41;
        java.lang.Throwable $r93, $r94, $r95, $r96, $r97, $r98, $r99, $r100, $r101, $r102, $r103, $r104, $r105, $r106, $r107, $r108, $r109, $r110, $r111, $r112, $r113, r131, r132;
        java.io.FileDescriptor r114;
        java.lang.String[] r115, r116, r123, r136, r139, r142, r159;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r114 := @parameter0: java.io.FileDescriptor;

        r1 := @parameter1: java.io.PrintWriter;

        r115 := @parameter2: java.lang.String[];

        z0 := @parameter3: boolean;

        r116 = r115;

        $r2 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $z2 = staticinvoke <com.android.internal.util.DumpUtils: boolean checkDumpAndUsageStatsPermission(android.content.Context,java.lang.String,java.io.PrintWriter)>($r2, "ActivityManager", r1);

        if $z2 != 0 goto label001;

        return;

     label001:
        i43 = 0;

        z60 = 0;

        z61 = 0;

        z62 = 0;

        z63 = 0;

        z64 = 0;

        z65 = 0;

        z66 = 0;

        r117 = null;

     label002:
        $i2 = lengthof r115;

        if i43 >= $i2 goto label015;

        r118 = r115[i43];

        if r118 == null goto label015;

        $i40 = virtualinvoke r118.<java.lang.String: int length()>();

        if $i40 <= 0 goto label015;

        $c41 = virtualinvoke r118.<java.lang.String: char charAt(int)>(0);

        if $c41 == 45 goto label003;

        goto label015;

     label003:
        i43 = i43 + 1;

        $r79 = "-a";

        $z51 = virtualinvoke $r79.<java.lang.String: boolean equals(java.lang.Object)>(r118);

        if $z51 == 0 goto label004;

        z60 = 1;

        z67 = z63;

        goto label014;

     label004:
        $r80 = "-c";

        $z52 = virtualinvoke $r80.<java.lang.String: boolean equals(java.lang.Object)>(r118);

        if $z52 == 0 goto label005;

        z61 = 1;

        z67 = z63;

        goto label014;

     label005:
        $r81 = "-v";

        $z53 = virtualinvoke $r81.<java.lang.String: boolean equals(java.lang.Object)>(r118);

        if $z53 == 0 goto label006;

        z65 = 1;

        z67 = z63;

        goto label014;

     label006:
        $r82 = "-f";

        $z54 = virtualinvoke $r82.<java.lang.String: boolean equals(java.lang.Object)>(r118);

        if $z54 == 0 goto label007;

        z66 = 1;

        z67 = z63;

        goto label014;

     label007:
        $r83 = "-p";

        $z55 = virtualinvoke $r83.<java.lang.String: boolean equals(java.lang.Object)>(r118);

        if $z55 == 0 goto label009;

        $i42 = lengthof r115;

        if i43 >= $i42 goto label008;

        r117 = r115[i43];

        i43 = i43 + 1;

        z61 = 1;

        z67 = z63;

        goto label014;

     label008:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Error: -p option requires package argument");

        return;

     label009:
        $r84 = "--checkin";

        $z56 = virtualinvoke $r84.<java.lang.String: boolean equals(java.lang.Object)>(r118);

        if $z56 == 0 goto label010;

        z67 = 1;

        z62 = 1;

        goto label014;

     label010:
        $r85 = "-C";

        $z57 = virtualinvoke $r85.<java.lang.String: boolean equals(java.lang.Object)>(r118);

        if $z57 == 0 goto label011;

        z67 = 1;

        goto label014;

     label011:
        $r86 = "--normal-priority";

        $z58 = virtualinvoke $r86.<java.lang.String: boolean equals(java.lang.Object)>(r118);

        if $z58 == 0 goto label012;

        z64 = 1;

        z67 = z63;

        goto label014;

     label012:
        $r87 = "-h";

        $z59 = virtualinvoke $r87.<java.lang.String: boolean equals(java.lang.Object)>(r118);

        if $z59 == 0 goto label013;

        staticinvoke <com.android.server.am.ActivityManagerShellCommand: void dumpHelp(java.io.PrintWriter,boolean)>(r1, 1);

        return;

     label013:
        $r88 = new java.lang.StringBuilder;

        specialinvoke $r88.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown argument: ");

        virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r118);

        virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; use -h for help");

        $r92 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r92);

        z67 = z63;

     label014:
        z63 = z67;

        goto label002;

     label015:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        if z0 == 0 goto label047;

        $r62 = new android.util.proto.ProtoOutputStream;

        specialinvoke $r62.<android.util.proto.ProtoOutputStream: void <init>(java.io.FileDescriptor)>(r114);

        $i32 = lengthof r115;

        if i43 >= $i32 goto label016;

        r121 = r115[i43];

        goto label017;

     label016:
        r121 = "";

     label017:
        i44 = i43 + 1;

        $r63 = "activities";

        $z43 = virtualinvoke $r63.<java.lang.String: boolean equals(java.lang.Object)>(r121);

        if $z43 != 0 goto label045;

        $r65 = "a";

        $z44 = virtualinvoke $r65.<java.lang.String: boolean equals(java.lang.Object)>(r121);

        if $z44 == 0 goto label018;

        goto label045;

     label018:
        $r66 = "broadcasts";

        $z45 = virtualinvoke $r66.<java.lang.String: boolean equals(java.lang.Object)>(r121);

        if $z45 != 0 goto label039;

        $r67 = "b";

        $z46 = virtualinvoke $r67.<java.lang.String: boolean equals(java.lang.Object)>(r121);

        if $z46 == 0 goto label019;

        goto label039;

     label019:
        $r68 = "provider";

        $z47 = virtualinvoke $r68.<java.lang.String: boolean equals(java.lang.Object)>(r121);

        if $z47 == 0 goto label023;

        $i34 = lengthof r115;

        if i44 < $i34 goto label020;

        r122 = null;

        r123 = <com.android.server.am.ActivityManagerService: java.lang.String[] EMPTY_STRING_ARRAY>;

        goto label021;

     label020:
        r122 = r115[i44];

        i45 = i44 + 1;

        $i35 = lengthof r115;

        $i36 = $i35 - i45;

        r123 = newarray (java.lang.String)[$i36];

        $i37 = lengthof r115;

        if $i37 <= 2 goto label021;

        $i38 = lengthof r115;

        $i39 = $i38 - i45;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r115, i45, r123, 0, $i39);

     label021:
        $z68 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean dumpProviderProto(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String,java.lang.String[])>(r114, r1, r122, r123);

        if $z68 != 0 goto label022;

        $r75 = new java.lang.StringBuilder;

        specialinvoke $r75.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No providers match: ");

        virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r122);

        $r78 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r78);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Use -h for help.");

     label022:
        goto label046;

     label023:
        $r69 = "service";

        $z48 = virtualinvoke $r69.<java.lang.String: boolean equals(java.lang.Object)>(r121);

        if $z48 == 0 goto label024;

        $r74 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveServices mServices>;

        virtualinvoke $r74.<com.android.server.am.ActiveServices: void dumpDebug(android.util.proto.ProtoOutputStream,long)>($r62, 1146756268033L);

        goto label046;

     label024:
        $r70 = "processes";

        $z49 = virtualinvoke $r70.<java.lang.String: boolean equals(java.lang.Object)>(r121);

        if $z49 != 0 goto label031;

        $r71 = "p";

        $z50 = virtualinvoke $r71.<java.lang.String: boolean equals(java.lang.Object)>(r121);

        if $z50 == 0 goto label025;

        goto label031;

     label025:
        entermonitor r0;

     label026:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        l46 = virtualinvoke $r62.<android.util.proto.ProtoOutputStream: long start(long)>(1146756268033L);

        $r72 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerInternal mAtmInternal>;

        virtualinvoke $r72.<com.android.server.wm.ActivityTaskManagerInternal: void writeActivitiesToProto(android.util.proto.ProtoOutputStream)>($r62);

        virtualinvoke $r62.<android.util.proto.ProtoOutputStream: void end(long)>(l46);

        l47 = virtualinvoke $r62.<android.util.proto.ProtoOutputStream: long start(long)>(1146756268034L);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void writeBroadcastsToProtoLocked(android.util.proto.ProtoOutputStream)>($r62);

        virtualinvoke $r62.<android.util.proto.ProtoOutputStream: void end(long)>(l47);

        l48 = virtualinvoke $r62.<android.util.proto.ProtoOutputStream: long start(long)>(1146756268035L);

        $r73 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveServices mServices>;

        virtualinvoke $r73.<com.android.server.am.ActiveServices: void dumpDebug(android.util.proto.ProtoOutputStream,long)>($r62, 1146756268033L);

        virtualinvoke $r62.<android.util.proto.ProtoOutputStream: void end(long)>(l48);

        l49 = virtualinvoke $r62.<android.util.proto.ProtoOutputStream: long start(long)>(1146756268036L);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void writeProcessesToProtoLocked(android.util.proto.ProtoOutputStream,java.lang.String)>($r62, r117);

        virtualinvoke $r62.<android.util.proto.ProtoOutputStream: void end(long)>(l49);

        exitmonitor r0;

     label027:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        goto label046;

     label028:
        $r104 := @caughtexception;

     label029:
        exitmonitor r0;

     label030:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r104;

     label031:
        $i33 = lengthof r115;

        if i44 >= $i33 goto label032;

        r126 = r115[i44];

        goto label033;

     label032:
        r126 = r117;

     label033:
        entermonitor r0;

     label034:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void writeProcessesToProtoLocked(android.util.proto.ProtoOutputStream,java.lang.String)>($r62, r126);

        exitmonitor r0;

     label035:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        goto label046;

     label036:
        $r105 := @caughtexception;

     label037:
        exitmonitor r0;

     label038:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r105;

     label039:
        entermonitor r0;

     label040:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void writeBroadcastsToProtoLocked(android.util.proto.ProtoOutputStream)>($r62);

        exitmonitor r0;

     label041:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        goto label046;

     label042:
        $r102 := @caughtexception;

     label043:
        exitmonitor r0;

     label044:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r102;

     label045:
        $r64 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerInternal mAtmInternal>;

        virtualinvoke $r64.<com.android.server.wm.ActivityTaskManagerInternal: void writeActivitiesToProto(android.util.proto.ProtoOutputStream)>($r62);

     label046:
        virtualinvoke $r62.<android.util.proto.ProtoOutputStream: void flush()>();

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label047:
        i1 = specialinvoke r0.<com.android.server.am.ActivityManagerService: int getAppId(java.lang.String)>(r117);

        z69 = 0;

        $i3 = lengthof r115;

        if i43 >= $i3 goto label187;

        r129 = r115[i43];

        i43 = i43 + 1;

        $r3 = "activities";

        $z3 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r129);

        if $z3 != 0 goto label183;

        $r4 = "a";

        $z4 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r129);

        if $z4 != 0 goto label183;

        $r5 = "lastanr";

        $z5 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r129);

        if $z5 != 0 goto label182;

        $r6 = "lastanr-traces";

        $z6 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r129);

        if $z6 != 0 goto label182;

        $r7 = "starter";

        $z7 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r129);

        if $z7 != 0 goto label181;

        $r8 = "containers";

        $z8 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r129);

        if $z8 != 0 goto label181;

        $r9 = "recents";

        $z9 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r129);

        if $z9 != 0 goto label180;

        $r10 = "r";

        $z10 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r129);

        if $z10 == 0 goto label048;

        goto label183;

     label048:
        $r11 = "binder-proxies";

        $z11 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r129);

        if $z11 == 0 goto label050;

        $i29 = lengthof r115;

        if i43 < $i29 goto label049;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void dumpBinderProxies(java.io.PrintWriter,int)>(r1, 0);

        goto label184;

     label049:
        r130 = r115[i43];

        i43 = i43 + 1;

        staticinvoke <java.lang.System: void gc()>();

        staticinvoke <java.lang.System: void runFinalization()>();

        staticinvoke <java.lang.System: void gc()>();

        $i30 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r130);

        $i31 = staticinvoke <com.android.internal.os.BinderInternal: int nGetBinderProxyCount(int)>($i30);

        virtualinvoke r1.<java.io.PrintWriter: void println(int)>($i31);

        z69 = 0;

        goto label185;

     label050:
        $r12 = "allowed-associations";

        $z12 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r129);

        if $z12 == 0 goto label059;

        $i28 = lengthof r115;

        if i43 >= $i28 goto label051;

        r117 = r115[i43];

        i43 = i43 + 1;

        goto label051;

     label051:
        entermonitor r0;

     label052:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

     label053:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void dumpAllowedAssociationsLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,java.lang.String)>(r114, r1, r115, i43, 1, r117);

        exitmonitor r0;

     label054:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        z69 = 0;

        goto label185;

     label055:
        $r99 := @caughtexception;

        r131 = $r99;

        goto label057;

     label056:
        $r95 := @caughtexception;

        r131 = $r95;

     label057:
        exitmonitor r0;

     label058:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw r131;

     label059:
        $r13 = "broadcasts";

        $z13 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r129);

        if $z13 != 0 goto label173;

        $r14 = "b";

        $z14 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>(r129);

        if $z14 == 0 goto label060;

        goto label173;

     label060:
        $r15 = "broadcast-stats";

        $z15 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>(r129);

        if $z15 == 0 goto label073;

        $i27 = lengthof r115;

        if i43 >= $i27 goto label061;

        r117 = r115[i43];

        i43 = i43 + 1;

        goto label061;

     label061:
        entermonitor r0;

     label062:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

     label063:
        if z63 == 0 goto label066;

     label064:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void dumpBroadcastStatsCheckinLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,java.lang.String)>(r114, r1, r115, i43, z62, r117);

     label065:
        goto label067;

     label066:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void dumpBroadcastStatsLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,java.lang.String)>(r114, r1, r115, i43, 1, r117);

     label067:
        exitmonitor r0;

     label068:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        z69 = 0;

        goto label185;

     label069:
        $r98 := @caughtexception;

        r132 = $r98;

     label070:
        exitmonitor r0;

     label071:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw r132;

     label072:
        $r113 := @caughtexception;

        r132 = $r113;

        goto label070;

     label073:
        $r16 = "intents";

        $z16 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>(r129);

        if $z16 != 0 goto label165;

        $r18 = "i";

        $z17 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>(r129);

        if $z17 == 0 goto label074;

        goto label165;

     label074:
        $r19 = "processes";

        $z18 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>(r129);

        if $z18 != 0 goto label158;

        $r20 = "p";

        $z19 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>(r129);

        if $z19 == 0 goto label075;

        goto label158;

     label075:
        $r21 = "oom";

        $z20 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>(r129);

        if $z20 != 0 goto label152;

        $r22 = "o";

        $z22 = virtualinvoke $r22.<java.lang.String: boolean equals(java.lang.Object)>(r129);

        if $z22 == 0 goto label076;

        goto label152;

     label076:
        $r23 = "lmk";

        $z23 = virtualinvoke $r23.<java.lang.String: boolean equals(java.lang.Object)>(r129);

        if $z23 == 0 goto label082;

        entermonitor r0;

     label077:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean dumpLmkLocked(java.io.PrintWriter)>(r1);

        exitmonitor r0;

     label078:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        goto label184;

     label079:
        $r101 := @caughtexception;

     label080:
        exitmonitor r0;

     label081:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r101;

     label082:
        $r24 = "lru";

        $z24 = virtualinvoke $r24.<java.lang.String: boolean equals(java.lang.Object)>(r129);

        if $z24 == 0 goto label088;

        entermonitor r0;

     label083:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean dumpLruLocked(java.io.PrintWriter,java.lang.String,java.lang.String)>(r1, r117, null);

        exitmonitor r0;

     label084:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        goto label184;

     label085:
        $r94 := @caughtexception;

     label086:
        exitmonitor r0;

     label087:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r94;

     label088:
        $r25 = "permissions";

        $z25 = virtualinvoke $r25.<java.lang.String: boolean equals(java.lang.Object)>(r129);

        if $z25 != 0 goto label146;

        $r26 = "perm";

        $z26 = virtualinvoke $r26.<java.lang.String: boolean equals(java.lang.Object)>(r129);

        if $z26 == 0 goto label089;

        goto label146;

     label089:
        $r27 = "provider";

        $z27 = virtualinvoke $r27.<java.lang.String: boolean equals(java.lang.Object)>(r129);

        if $z27 == 0 goto label093;

        $i21 = lengthof r115;

        if i43 < $i21 goto label090;

        r135 = null;

        r136 = <com.android.server.am.ActivityManagerService: java.lang.String[] EMPTY_STRING_ARRAY>;

        goto label091;

     label090:
        r135 = r115[i43];

        i43 = i43 + 1;

        $i22 = lengthof r115;

        $i23 = $i22 - i43;

        r136 = newarray (java.lang.String)[$i23];

        $i24 = lengthof r115;

        if $i24 <= 2 goto label091;

        $i25 = lengthof r115;

        $i26 = $i25 - i43;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r115, i43, r136, 0, $i26);

     label091:
        $z70 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean dumpProvider(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String,java.lang.String[],int,boolean)>(r114, r1, r135, r136, 0, z60);

        if $z70 != 0 goto label092;

        $r58 = new java.lang.StringBuilder;

        specialinvoke $r58.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No providers match: ");

        virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r135);

        $r61 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r61);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Use -h for help.");

     label092:
        z69 = 0;

        goto label185;

     label093:
        $r28 = "providers";

        $z28 = virtualinvoke $r28.<java.lang.String: boolean equals(java.lang.Object)>(r129);

        if $z28 != 0 goto label140;

        $r29 = "prov";

        $z29 = virtualinvoke $r29.<java.lang.String: boolean equals(java.lang.Object)>(r129);

        if $z29 == 0 goto label094;

        goto label140;

     label094:
        $r30 = "service";

        $z30 = virtualinvoke $r30.<java.lang.String: boolean equals(java.lang.Object)>(r129);

        if $z30 == 0 goto label098;

        $i15 = lengthof r115;

        if i43 < $i15 goto label095;

        r138 = null;

        r139 = <com.android.server.am.ActivityManagerService: java.lang.String[] EMPTY_STRING_ARRAY>;

        goto label096;

     label095:
        r138 = r115[i43];

        i43 = i43 + 1;

        $i16 = lengthof r115;

        $i17 = $i16 - i43;

        r139 = newarray (java.lang.String)[$i17];

        $i18 = lengthof r115;

        if $i18 <= 2 goto label096;

        $i19 = lengthof r115;

        $i20 = $i19 - i43;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r115, i43, r139, 0, $i20);

     label096:
        $r140 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveServices mServices>;

        $z71 = virtualinvoke $r140.<com.android.server.am.ActiveServices: boolean dumpService(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String,java.lang.String[],int,boolean)>(r114, r1, r138, r139, 0, z60);

        if $z71 != 0 goto label097;

        $r54 = new java.lang.StringBuilder;

        specialinvoke $r54.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No services match: ");

        virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r138);

        $r57 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r57);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Use -h for help.");

     label097:
        z69 = 0;

        goto label185;

     label098:
        $r31 = "package";

        $z31 = virtualinvoke $r31.<java.lang.String: boolean equals(java.lang.Object)>(r129);

        if $z31 == 0 goto label102;

        $i9 = lengthof r115;

        if i43 < $i9 goto label099;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("package: no package name specified");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Use -h for help.");

        r142 = r115;

        goto label101;

     label099:
        r117 = r115[i43];

        i51 = i43 + 1;

        $i10 = lengthof r115;

        $i11 = $i10 - i51;

        r142 = newarray (java.lang.String)[$i11];

        $i12 = lengthof r115;

        if $i12 <= 2 goto label100;

        $i13 = lengthof r115;

        $i14 = $i13 - i51;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r115, i51, r142, 0, $i14);

     label100:
        i43 = 0;

        z69 = 1;

     label101:
        r116 = r142;

        goto label185;

     label102:
        $r32 = "associations";

        $z32 = virtualinvoke $r32.<java.lang.String: boolean equals(java.lang.Object)>(r129);

        if $z32 != 0 goto label134;

        $r33 = "as";

        $z33 = virtualinvoke $r33.<java.lang.String: boolean equals(java.lang.Object)>(r129);

        if $z33 == 0 goto label103;

        goto label134;

     label103:
        $r34 = "settings";

        $z34 = virtualinvoke $r34.<java.lang.String: boolean equals(java.lang.Object)>(r129);

        if $z34 == 0 goto label109;

        entermonitor r0;

     label104:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r52 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerConstants mConstants>;

        virtualinvoke $r52.<com.android.server.am.ActivityManagerConstants: void dump(java.io.PrintWriter)>(r1);

        $r53 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.OomAdjuster mOomAdjuster>;

        virtualinvoke $r53.<com.android.server.am.OomAdjuster: void dumpCachedAppOptimizerSettings(java.io.PrintWriter)>(r1);

        exitmonitor r0;

     label105:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        goto label184;

     label106:
        $r109 := @caughtexception;

     label107:
        exitmonitor r0;

     label108:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r109;

     label109:
        $r35 = "services";

        $z35 = virtualinvoke $r35.<java.lang.String: boolean equals(java.lang.Object)>(r129);

        if $z35 != 0 goto label122;

        $r39 = "s";

        $z36 = virtualinvoke $r39.<java.lang.String: boolean equals(java.lang.Object)>(r129);

        if $z36 == 0 goto label110;

        goto label122;

     label110:
        $r40 = "locks";

        $z37 = virtualinvoke $r40.<java.lang.String: boolean equals(java.lang.Object)>(r129);

        if $z37 == 0 goto label111;

        staticinvoke <com.android.server.LockGuard: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r114, r1, r115);

        goto label184;

     label111:
        $r41 = "users";

        $z38 = virtualinvoke $r41.<java.lang.String: boolean equals(java.lang.Object)>(r129);

        if $z38 == 0 goto label117;

        entermonitor r0;

     label112:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void dumpUsersLocked(java.io.PrintWriter)>(r1);

        exitmonitor r0;

     label113:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        goto label184;

     label114:
        $r107 := @caughtexception;

     label115:
        exitmonitor r0;

     label116:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r107;

     label117:
        $r42 = "exit-info";

        $z39 = virtualinvoke $r42.<java.lang.String: boolean equals(java.lang.Object)>(r129);

        if $z39 == 0 goto label119;

        i52 = i43;

        $i8 = lengthof r115;

        if i43 >= $i8 goto label118;

        r117 = r115[i43];

        i52 = i43 + 1;

     label118:
        $r50 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r51 = $r50.<com.android.server.am.ProcessList: com.android.server.am.AppExitInfoTracker mAppExitInfoTracker>;

        virtualinvoke $r51.<com.android.server.am.AppExitInfoTracker: void dumpHistoryProcessExitInfo(java.io.PrintWriter,java.lang.String)>(r1, r117);

        i43 = i52;

        z69 = 0;

        goto label185;

     label119:
        $r43 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerInternal mAtmInternal>;

        $z40 = virtualinvoke $r43.<com.android.server.wm.ActivityTaskManagerInternal: boolean dumpActivity(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String,java.lang.String[],int,boolean,boolean,boolean)>(r114, r1, r129, r115, i43, z60, z65, z66);

        if $z40 != 0 goto label121;

        $r44 = new com.android.server.am.ActivityManagerShellCommand;

        specialinvoke $r44.<com.android.server.am.ActivityManagerShellCommand: void <init>(com.android.server.am.ActivityManagerService,boolean)>(r0, 1);

        $r45 = new android.os.ResultReceiver;

        specialinvoke $r45.<android.os.ResultReceiver: void <init>(android.os.Handler)>(null);

        $i7 = virtualinvoke $r44.<com.android.server.am.ActivityManagerShellCommand: int exec(android.os.Binder,java.io.FileDescriptor,java.io.FileDescriptor,java.io.FileDescriptor,java.lang.String[],android.os.ShellCallback,android.os.ResultReceiver)>(r0, null, r114, null, r115, null, $r45);

        if $i7 >= 0 goto label120;

        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad activity command, or no activities match: ");

        virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r129);

        $r49 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r49);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Use -h for help.");

        goto label184;

     label120:
        goto label184;

     label121:
        goto label184;

     label122:
        if z61 == 0 goto label128;

        entermonitor r0;

     label123:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r38 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveServices mServices>;

        r147 = virtualinvoke $r38.<com.android.server.am.ActiveServices: com.android.server.am.ActiveServices$ServiceDumper newServiceDumperLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,java.lang.String)>(r114, r1, r115, i43, 1, r117);

        exitmonitor r0;

     label124:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        virtualinvoke r147.<com.android.server.am.ActiveServices$ServiceDumper: void dumpWithClient()>();

        goto label184;

     label125:
        $r100 := @caughtexception;

     label126:
        exitmonitor r0;

     label127:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r100;

     label128:
        entermonitor r0;

     label129:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r36 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveServices mServices>;

        $r37 = virtualinvoke $r36.<com.android.server.am.ActiveServices: com.android.server.am.ActiveServices$ServiceDumper newServiceDumperLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,java.lang.String)>(r114, r1, r115, i43, 1, r117);

        virtualinvoke $r37.<com.android.server.am.ActiveServices$ServiceDumper: void dumpLocked()>();

        exitmonitor r0;

     label130:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        goto label184;

     label131:
        $r112 := @caughtexception;

     label132:
        exitmonitor r0;

     label133:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r112;

     label134:
        entermonitor r0;

     label135:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void dumpAssociationsLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,boolean,java.lang.String)>(r114, r1, r115, i43, 1, z61, r117);

        exitmonitor r0;

     label136:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        goto label184;

     label137:
        $r108 := @caughtexception;

     label138:
        exitmonitor r0;

     label139:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r108;

     label140:
        entermonitor r0;

     label141:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void dumpProvidersLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,java.lang.String)>(r114, r1, r115, i43, 1, r117);

        exitmonitor r0;

     label142:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        goto label184;

     label143:
        $r97 := @caughtexception;

     label144:
        exitmonitor r0;

     label145:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r97;

     label146:
        entermonitor r0;

     label147:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void dumpPermissionsLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,java.lang.String)>(r114, r1, r115, i43, 1, r117);

        exitmonitor r0;

     label148:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        goto label184;

     label149:
        $r96 := @caughtexception;

     label150:
        exitmonitor r0;

     label151:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r96;

     label152:
        entermonitor r0;

     label153:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean dumpOomLocked(java.io.FileDescriptor,java.io.PrintWriter,boolean,java.lang.String[],int,boolean,java.lang.String,boolean)>(r114, r1, 0, r115, i43, 1, r117, 1);

        exitmonitor r0;

     label154:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        goto label184;

     label155:
        $r93 := @caughtexception;

     label156:
        exitmonitor r0;

     label157:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r93;

     label158:
        $i6 = lengthof r115;

        if i43 >= $i6 goto label159;

        r117 = r115[i43];

        i43 = i43 + 1;

        goto label159;

     label159:
        entermonitor r0;

     label160:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void dumpProcessesLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,java.lang.String,int)>(r114, r1, r115, i43, 1, r117, i1);

        exitmonitor r0;

     label161:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        z69 = 0;

        goto label185;

     label162:
        $r103 := @caughtexception;

     label163:
        exitmonitor r0;

     label164:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r103;

     label165:
        $i5 = lengthof r115;

        if i43 >= $i5 goto label166;

        r155 = r115[i43];

        i43 = i43 + 1;

        goto label167;

     label166:
        r155 = r117;

     label167:
        entermonitor r0;

     label168:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r17 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.PendingIntentController mPendingIntentController>;

        virtualinvoke $r17.<com.android.server.am.PendingIntentController: void dumpPendingIntents(java.io.PrintWriter,boolean,java.lang.String)>(r1, 1, r155);

        exitmonitor r0;

     label169:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        r117 = r155;

        z69 = 0;

        goto label185;

     label170:
        $r106 := @caughtexception;

     label171:
        exitmonitor r0;

     label172:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r106;

     label173:
        $i4 = lengthof r115;

        if i43 >= $i4 goto label174;

        r117 = r115[i43];

        i43 = i43 + 1;

        goto label174;

     label174:
        entermonitor r0;

     label175:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void dumpBroadcastsLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,java.lang.String)>(r114, r1, r115, i43, 1, r117);

        exitmonitor r0;

     label176:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        z69 = 0;

        goto label185;

     label177:
        $r111 := @caughtexception;

     label178:
        exitmonitor r0;

     label179:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r111;

     label180:
        goto label183;

     label181:
        goto label183;

     label182:
        goto label183;

     label183:
        i53 = i43;

        r158 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerInternal mAtmInternal>;

        virtualinvoke r158.<com.android.server.wm.ActivityTaskManagerInternal: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,boolean,java.lang.String)>(r129, r114, r1, r115, i53, 1, z61, r117);

     label184:
        z69 = 0;

     label185:
        if z69 != 0 goto label186;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label186:
        r159 = r116;

        goto label188;

     label187:
        r159 = r115;

     label188:
        if z63 == 0 goto label189;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void dumpBroadcastStatsCheckinLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,java.lang.String)>(r114, r1, r159, i43, z62, r117);

        goto label193;

     label189:
        if z61 == 0 goto label190;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void dumpEverything(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,java.lang.String,boolean,boolean,int)>(r114, r1, r159, i43, z60, r117, z61, z64, i1);

        goto label193;

     label190:
        entermonitor r0;

     label191:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void dumpEverything(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,java.lang.String,boolean,boolean,int)>(r114, r1, r159, i43, z60, r117, z61, z64, i1);

        exitmonitor r0;

     label192:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

     label193:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label194:
        $r110 := @caughtexception;

     label195:
        exitmonitor r0;

     label196:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r110;

        catch java.lang.Throwable from label026 to label027 with label028;
        catch java.lang.Throwable from label029 to label030 with label028;
        catch java.lang.Throwable from label034 to label035 with label036;
        catch java.lang.Throwable from label037 to label038 with label036;
        catch java.lang.Throwable from label040 to label041 with label042;
        catch java.lang.Throwable from label043 to label044 with label042;
        catch java.lang.Throwable from label052 to label053 with label056;
        catch java.lang.Throwable from label053 to label054 with label055;
        catch java.lang.Throwable from label057 to label058 with label055;
        catch java.lang.Throwable from label062 to label063 with label069;
        catch java.lang.Throwable from label064 to label065 with label072;
        catch java.lang.Throwable from label066 to label067 with label072;
        catch java.lang.Throwable from label067 to label068 with label072;
        catch java.lang.Throwable from label070 to label071 with label072;
        catch java.lang.Throwable from label077 to label078 with label079;
        catch java.lang.Throwable from label080 to label081 with label079;
        catch java.lang.Throwable from label083 to label084 with label085;
        catch java.lang.Throwable from label086 to label087 with label085;
        catch java.lang.Throwable from label104 to label105 with label106;
        catch java.lang.Throwable from label107 to label108 with label106;
        catch java.lang.Throwable from label112 to label113 with label114;
        catch java.lang.Throwable from label115 to label116 with label114;
        catch java.lang.Throwable from label123 to label124 with label125;
        catch java.lang.Throwable from label126 to label127 with label125;
        catch java.lang.Throwable from label129 to label130 with label131;
        catch java.lang.Throwable from label132 to label133 with label131;
        catch java.lang.Throwable from label135 to label136 with label137;
        catch java.lang.Throwable from label138 to label139 with label137;
        catch java.lang.Throwable from label141 to label142 with label143;
        catch java.lang.Throwable from label144 to label145 with label143;
        catch java.lang.Throwable from label147 to label148 with label149;
        catch java.lang.Throwable from label150 to label151 with label149;
        catch java.lang.Throwable from label153 to label154 with label155;
        catch java.lang.Throwable from label156 to label157 with label155;
        catch java.lang.Throwable from label160 to label161 with label162;
        catch java.lang.Throwable from label163 to label164 with label162;
        catch java.lang.Throwable from label168 to label169 with label170;
        catch java.lang.Throwable from label171 to label172 with label170;
        catch java.lang.Throwable from label175 to label176 with label177;
        catch java.lang.Throwable from label178 to label179 with label177;
        catch java.lang.Throwable from label191 to label192 with label194;
        catch java.lang.Throwable from label195 to label196 with label194;
    }

    private final void dumpApplicationMemoryUsage(java.io.FileDescriptor, com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions, java.lang.String[], boolean, java.util.ArrayList)
    {
        com.android.server.am.ActivityManagerService r0;
        boolean z0, z1, z2, z3, z4, $z5, $z6, $z7, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z25, $z26, $z27, $z28, $z31, $z32, $z33, $z34, $z35, $z36, $z37, $z38, $z39, $z40, $z41, $z42, $z43, $z45, z46, z47, z48, $z49, z50, $z51, $z52, z53, $z54;
        long[] r2, r3, r4, r5, r117, r134, r135, r136, r138, r139, r141, r143, r147, r149, r150, r159, r250;
        java.util.ArrayList[] r6;
        com.android.server.am.ProcessRecord r7;
        long l0, l1, l2, $l8, $l9, $l10, $l11, $l12, $l13, $l14, $l15, $l16, $l18, $l19, $l20, $l21, $l24, $l25, $l26, $l27, $l28, $l29, $l30, $l31, $l33, $l34, $l35, $l36, $l37, $l38, $l39, $l41, $l44, $l45, $l46, $l52, $l53, $l54, $l55, $l56, $l57, $l58, $l63, $l65, $l71, $l73, $l75, $l77, $l79, $l81, $l83, $l85, $l87, $l89, $l90, $l91, $l92, $l93, $l94, $l95, $l97, $l98, $l100, $l101, $l103, $l104, $l106, $l108, $l110, $l111, $l113, $l115, $l116, $l119, $l121, $l123, $l125, $l127, $l129, $l131, $l133, $l135, $l138, $l139, $l140, $l141, $l142, $l143, $l148, $l149, $l151, $l152, $l154, $l155, $l157, $l159, $l160, $l162, $l164, $l165, $l167, $l169, $l170, $l171, $l173, $l174, $l177, $l179, $l189, $l191, l196, l197, l203, l204, l208, l209, l210, l211, l212, l214, l216, l217, l218, l219, l220, l222, l225, l226, l227, l228, l230, l231, l236, l248, l249, l251, l252, l253, l254, l260, l261, l262, l263, l266, l267, l268, l270, l272, l275, l277, l278, l279, l281, l282, l283, l284, l291, l292, l293, l294, l295, l296, l297, l298, l299, l300;
        android.util.proto.ProtoOutputStream $r9, $r72, r142, r154, r249;
        java.util.ArrayList $r10, $r13, $r17, $r24, $r28, $r38, $r39, $r50, $r51, $r52, $r69, r115, r132, r151, r186, r196, r231, r232, $r239;
        android.util.SparseArray $r11, r133, r153, r160, r185, r195;
        int $i3, $i4, $i5, $i6, $i7, $i22, $i23, $i32, $i43, $i47, $i48, $i49, $i50, $i51, $i60, $i62, $i64, $i66, $i67, $i68, $i69, $i70, $i72, $i74, $i76, $i78, $i80, $i82, $i84, $i86, $i88, $i96, $i99, $i102, $i105, $i107, $i109, $i112, $i114, $i117, $i118, $i120, $i122, $i124, $i126, $i128, $i130, $i132, $i134, $i136, $i137, $i144, $i145, $i146, $i147, $i150, $i153, $i156, $i158, $i161, $i163, $i166, $i168, $i172, $i176, $i178, $i180, $i181, $i182, $i185, $i186, $i188, $i190, $i192, $i193, i198, i199, i200, i201, i202, i205, i221, i223, i224, $i232, $i233, $i234, $i235, i237, i242, i245, i246, $i247, i250, i255, $i256, i258, i259, i264, i265, i269, i271, i273, $i274, i276, i280, i285, i286, i288, $i289;
        com.android.internal.os.ProcessCpuTracker $r12, $r30, $r71, $r76, r121, r188;
        com.android.server.am.ActivityManagerService$MemItem $r14, $r15, $r16, $r22, $r27, $r29, $r47, r197, r238;
        byte $b17, $b40, $b42, $b59, $b61, $b175, $b187, b229, b287, $b290;
        com.android.server.am.ProcessList $r18, $r19;
        com.android.server.am.ProcessStatsService $r20;
        java.lang.String[] $r21, $r25, r114, r137;
        int[] $r23, r180;
        java.lang.Object $r26, $r40, $r73;
        java.lang.String $r31, $r36, $r37, $r42, $r48, $r49, $r62, $r66, $r68, $r70, $r74, $r77, $r78, r118, r123, r172, r173, r177, r236, r240, r242;
        java.lang.StringBuilder $r41, $r64, r200;
        com.android.server.am.ProcessRecord$PackageList $r53, $r56, $r57;
        android.util.ArrayMap $r54;
        com.android.internal.app.procstats.ProcessState $r55, $r59, $r60;
        android.content.pm.ApplicationInfo $r58;
        byte[] $r61;
        android.os.Debug$MemoryInfo $r63, $r75, r126, r129, r140, r187, r191;
        char $c184;
        java.lang.Throwable $r79, $r80, $r81, $r82, $r83, $r84, $r85, $r86, $r88, $r89, $r90, $r91, $r92, $r93, $r94, $r95, $r96, $r97, $r98, $r99, $r100, $r102, $r103, $r104, $r105, $r106, $r107, $r108, $r109, $r110, $r111, r124, r163, r165, r174, r184, r192;
        android.os.RemoteException $r87, $r101, r164;
        java.io.FileDescriptor r112;
        com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions r113, r116, r152;
        com.android.internal.os.ProcessCpuTracker$Stats r122, r128, r190;
        android.app.IApplicationThread r144, r167;
        com.android.internal.os.ByteTransferPipe r161;
        android.os.ParcelFileDescriptor r162;
        com.android.internal.app.procstats.ProcessStats$ProcessStateHolder r171;
        java.util.Iterator r237;
        com.android.internal.util.MemInfoReader $r244;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r112 := @parameter0: java.io.FileDescriptor;

        r113 := @parameter1: com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions;

        r114 := @parameter2: java.lang.String[];

        z0 := @parameter3: boolean;

        r115 := @parameter4: java.util.ArrayList;

        r116 = r113;

        l196 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        l197 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        r117 = newarray (long)[3];

        if r115 != null goto label036;

        $i182 = lengthof r114;

        if $i182 <= 0 goto label035;

        r118 = r114[0];

        $c184 = virtualinvoke r118.<java.lang.String: char charAt(int)>(0);

        if $c184 == 45 goto label034;

        $r69 = new java.util.ArrayList;

        specialinvoke $r69.<java.util.ArrayList: void <init>()>();

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void updateCpuStatsNow()>();

     label001:
        $r70 = r114[0];

        i198 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r70);

     label002:
        goto label004;

     label003:
        $r105 := @caughtexception;

        i198 = -1;

     label004:
        r121 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.os.ProcessCpuTracker mProcessCpuTracker>;

        entermonitor r121;

     label005:
        $r71 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.os.ProcessCpuTracker mProcessCpuTracker>;

        i199 = virtualinvoke $r71.<com.android.internal.os.ProcessCpuTracker: int countStats()>();

     label006:
        i200 = 0;

     label007:
        if i200 >= i199 goto label018;

     label008:
        $r76 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.os.ProcessCpuTracker mProcessCpuTracker>;

        r122 = virtualinvoke $r76.<com.android.internal.os.ProcessCpuTracker: com.android.internal.os.ProcessCpuTracker$Stats getStats(int)>(i200);

     label009:
        $i193 = r122.<com.android.internal.os.ProcessCpuTracker$Stats: int pid>;

        if $i193 == i198 goto label013;

        $r77 = r122.<com.android.internal.os.ProcessCpuTracker$Stats: java.lang.String baseName>;

        if $r77 == null goto label012;

        r123 = r122.<com.android.internal.os.ProcessCpuTracker$Stats: java.lang.String baseName>;

     label010:
        $r78 = r114[0];

        $z45 = virtualinvoke r123.<java.lang.String: boolean equals(java.lang.Object)>($r78);

        if $z45 == 0 goto label014;

     label011:
        goto label013;

     label012:
        goto label014;

     label013:
        virtualinvoke $r69.<java.util.ArrayList: boolean add(java.lang.Object)>(r122);

     label014:
        i200 = i200 + 1;

        goto label007;

     label015:
        $r110 := @caughtexception;

        r124 = $r110;

        goto label031;

     label016:
        $r91 := @caughtexception;

        r124 = $r91;

        goto label031;

     label017:
        $r111 := @caughtexception;

        r124 = $r111;

        goto label031;

     label018:
        exitmonitor r121;

     label019:
        $i185 = virtualinvoke $r69.<java.util.ArrayList: int size()>();

        if $i185 <= 0 goto label028;

        $r72 = new android.util.proto.ProtoOutputStream;

        specialinvoke $r72.<android.util.proto.ProtoOutputStream: void <init>(java.io.FileDescriptor)>(r112);

        virtualinvoke $r72.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529665L, l196);

        virtualinvoke $r72.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529666L, l197);

        r126 = null;

        $i186 = virtualinvoke $r69.<java.util.ArrayList: int size()>();

        i201 = $i186 - 1;

     label020:
        if i201 < 0 goto label027;

        $r73 = virtualinvoke $r69.<java.util.ArrayList: java.lang.Object get(int)>(i201);

        r128 = (com.android.internal.os.ProcessCpuTracker$Stats) $r73;

        i202 = r128.<com.android.internal.os.ProcessCpuTracker$Stats: int pid>;

        r129 = r126;

        if r126 != null goto label021;

        $r75 = new android.os.Debug$MemoryInfo;

        specialinvoke $r75.<android.os.Debug$MemoryInfo: void <init>()>();

        r129 = $r75;

     label021:
        $z39 = r113.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean dumpDetails>;

        if $z39 != 0 goto label024;

        if z0 != 0 goto label022;

        $z43 = r113.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean oomOnly>;

        if $z43 != 0 goto label022;

        goto label024;

     label022:
        l203 = staticinvoke <android.os.Debug: long getPss(int,long[],long[])>(i202, r117, null);

        $b187 = l203 cmp 0L;

        if $b187 != 0 goto label023;

        goto label026;

     label023:
        $i188 = (int) l203;

        r129.<android.os.Debug$MemoryInfo: int nativePss> = $i188;

        $l189 = r117[0];

        $i190 = (int) $l189;

        r129.<android.os.Debug$MemoryInfo: int nativePrivateDirty> = $i190;

        $l191 = r117[2];

        $i192 = (int) $l191;

        r129.<android.os.Debug$MemoryInfo: int nativeRss> = $i192;

        goto label025;

     label024:
        $z40 = staticinvoke <android.os.Debug: boolean getMemoryInfo(int,android.os.Debug$MemoryInfo)>(i202, r129);

        if $z40 != 0 goto label025;

        goto label026;

     label025:
        l204 = virtualinvoke $r72.<android.util.proto.ProtoOutputStream: long start(long)>(2246267895811L);

        virtualinvoke $r72.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464257L, i202);

        $r74 = r128.<com.android.internal.os.ProcessCpuTracker$Stats: java.lang.String baseName>;

        virtualinvoke $r72.<android.util.proto.ProtoOutputStream: void write(long,java.lang.String)>(1138166333442L, $r74);

        $z42 = r113.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean dumpDalvik>;

        $z41 = r113.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean dumpSummaryOnly>;

        staticinvoke <android.app.ActivityThread: void dumpMemInfoTable(android.util.proto.ProtoOutputStream,android.os.Debug$MemoryInfo,boolean,boolean,long,long,long,long,long,long)>($r72, r129, $z42, $z41, 0L, 0L, 0L, 0L, 0L, 0L);

        virtualinvoke $r72.<android.util.proto.ProtoOutputStream: void end(long)>(l204);

     label026:
        i201 = i201 + -1;

        r126 = r129;

        goto label020;

     label027:
        virtualinvoke $r72.<android.util.proto.ProtoOutputStream: void flush()>();

        return;

     label028:
        goto label034;

     label029:
        $r96 := @caughtexception;

        r124 = $r96;

        goto label031;

     label030:
        $r93 := @caughtexception;

        r124 = $r93;

     label031:
        exitmonitor r121;

     label032:
        throw r124;

     label033:
        $r109 := @caughtexception;

        r124 = $r109;

        goto label031;

     label034:
        goto label035;

     label035:
        $r64 = new java.lang.StringBuilder;

        specialinvoke $r64.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No process found for: ");

        $r66 = r114[0];

        virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r66);

        $r68 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ActivityManager", $r68);

        return;

     label036:
        if z0 != 0 goto label039;

        $z36 = r113.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean oomOnly>;

        if $z36 != 0 goto label039;

        $i181 = virtualinvoke r115.<java.util.ArrayList: int size()>();

        if $i181 == 1 goto label038;

        $z37 = r113.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean isCheckinRequest>;

        if $z37 != 0 goto label038;

        $z38 = r113.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean packages>;

        if $z38 == 0 goto label037;

        goto label038;

     label037:
        goto label039;

     label038:
        r113.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean dumpDetails> = 1;

        goto label039;

     label039:
        i205 = virtualinvoke r115.<java.util.ArrayList: int size()>();

        if i205 <= 1 goto label040;

        $z35 = r113.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean packages>;

        if $z35 != 0 goto label040;

        z46 = 1;

        goto label041;

     label040:
        z46 = 0;

     label041:
        if z46 == 0 goto label042;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void updateCpuStatsNow()>();

     label042:
        $r9 = new android.util.proto.ProtoOutputStream;

        specialinvoke $r9.<android.util.proto.ProtoOutputStream: void <init>(java.io.FileDescriptor)>(r112);

        virtualinvoke $r9.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529665L, l196);

        virtualinvoke $r9.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529666L, l197);

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        r132 = $r10;

        $r11 = new android.util.SparseArray;

        specialinvoke $r11.<android.util.SparseArray: void <init>()>();

        r133 = $r11;

        $z5 = r113.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean dumpDalvik>;

        if $z5 == 0 goto label043;

        r134 = newarray (long)[15];

        goto label044;

     label043:
        r134 = <libcore.util.EmptyArray: long[] LONG>;

     label044:
        $z6 = r113.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean dumpDalvik>;

        if $z6 == 0 goto label045;

        r135 = newarray (long)[15];

        goto label046;

     label045:
        r135 = <libcore.util.EmptyArray: long[] LONG>;

     label046:
        $z7 = r113.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean dumpDalvik>;

        if $z7 == 0 goto label047;

        r136 = newarray (long)[15];

        goto label048;

     label047:
        r136 = <libcore.util.EmptyArray: long[] LONG>;

     label048:
        r2 = newarray (long)[17];

        r3 = newarray (long)[17];

        r4 = newarray (long)[17];

        r137 = <com.android.server.am.ActivityManagerService: java.lang.String[] DUMP_MEM_OOM_LABEL>;

        $i3 = lengthof r137;

        r138 = newarray (long)[$i3];

        $i4 = lengthof r137;

        r139 = newarray (long)[$i4];

        $i5 = lengthof r137;

        r5 = newarray (long)[$i5];

        $i6 = lengthof r137;

        r6 = newarray (java.util.ArrayList)[$i6];

        l208 = 0L;

        l209 = 0L;

        l210 = 0L;

        l211 = 0L;

        l212 = 0L;

        l214 = 0L;

        l216 = 0L;

        l217 = 0L;

        l218 = 0L;

        l219 = 0L;

        r140 = null;

        l220 = 0L;

        z47 = 0;

        i221 = i205 - 1;

        l222 = 0L;

        r141 = r134;

        r142 = $r9;

        r143 = r138;

     label049:
        if i221 < 0 goto label122;

        $r40 = virtualinvoke r115.<java.util.ArrayList: java.lang.Object get(int)>(i221);

        r7 = (com.android.server.am.ProcessRecord) $r40;

        entermonitor r0;

     label050:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        r144 = r7.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        i223 = r7.<com.android.server.am.ProcessRecord: int pid>;

        i224 = virtualinvoke r7.<com.android.server.am.ProcessRecord: int getSetAdjWithServices()>();

        z48 = virtualinvoke r7.<com.android.server.am.ProcessRecord: boolean hasActivities()>();

        exitmonitor r0;

     label051:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        if r144 != null goto label052;

        r147 = r139;

        r149 = r143;

        r150 = r141;

        r151 = r132;

        r152 = r116;

        r153 = r133;

        r154 = r142;

        l225 = l209;

        goto label112;

     label052:
        if r140 != null goto label053;

        $r63 = new android.os.Debug$MemoryInfo;

        specialinvoke $r63.<android.os.Debug$MemoryInfo: void <init>()>();

        r140 = $r63;

        goto label053;

     label053:
        $z26 = r116.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean dumpDetails>;

        if $z26 != 0 goto label056;

        if z0 != 0 goto label054;

        $z34 = r116.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean oomOnly>;

        if $z34 != 0 goto label054;

        goto label056;

     label054:
        l226 = staticinvoke <android.os.SystemClock: long currentThreadTimeMillis()>();

        l227 = staticinvoke <android.os.Debug: long getPss(int,long[],long[])>(i223, r117, null);

        $b175 = l227 cmp 0L;

        if $b175 != 0 goto label055;

        goto label057;

     label055:
        $i176 = (int) l227;

        r140.<android.os.Debug$MemoryInfo: int dalvikPss> = $i176;

        l228 = staticinvoke <android.os.SystemClock: long currentThreadTimeMillis()>();

        $l177 = r117[0];

        $i178 = (int) $l177;

        r140.<android.os.Debug$MemoryInfo: int dalvikPrivateDirty> = $i178;

        $l179 = r117[2];

        $i180 = (int) $l179;

        r140.<android.os.Debug$MemoryInfo: int dalvikRss> = $i180;

        b229 = 3;

        goto label059;

     label056:
        l226 = staticinvoke <android.os.SystemClock: long currentThreadTimeMillis()>();

        $z27 = staticinvoke <android.os.Debug: boolean getMemoryInfo(int,android.os.Debug$MemoryInfo)>(i223, r140);

        if $z27 != 0 goto label058;

     label057:
        r154 = r142;

        r147 = r139;

        r150 = r141;

        r152 = r116;

        r151 = r132;

        r153 = r133;

        r149 = r143;

        l225 = l209;

        goto label112;

     label058:
        l228 = staticinvoke <android.os.SystemClock: long currentThreadTimeMillis()>();

        z47 = r140.<android.os.Debug$MemoryInfo: boolean hasSwappedOutPss>;

        b229 = 4;

     label059:
        r159 = r139;

        r160 = r133;

        $z28 = r116.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean dumpDetails>;

        if $z28 == 0 goto label076;

        $z31 = r116.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean localOnly>;

        if $z31 == 0 goto label060;

        l230 = virtualinvoke r142.<android.util.proto.ProtoOutputStream: long start(long)>(2246267895812L);

        l231 = virtualinvoke r142.<android.util.proto.ProtoOutputStream: long start(long)>(1146756268033L);

        virtualinvoke r142.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464257L, i223);

        $r62 = r7.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        virtualinvoke r142.<android.util.proto.ProtoOutputStream: void write(long,java.lang.String)>(1138166333442L, $r62);

        $z33 = r116.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean dumpDalvik>;

        $z32 = r116.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean dumpSummaryOnly>;

        staticinvoke <android.app.ActivityThread: void dumpMemInfoTable(android.util.proto.ProtoOutputStream,android.os.Debug$MemoryInfo,boolean,boolean,long,long,long,long,long,long)>(r142, r140, $z33, $z32, 0L, 0L, 0L, 0L, 0L, 0L);

        virtualinvoke r142.<android.util.proto.ProtoOutputStream: void end(long)>(l231);

        virtualinvoke r142.<android.util.proto.ProtoOutputStream: void end(long)>(l230);

        goto label076;

     label060:
        r161 = new com.android.internal.os.ByteTransferPipe;

        specialinvoke r161.<com.android.internal.os.ByteTransferPipe: void <init>()>();

     label061:
        r162 = virtualinvoke r161.<com.android.internal.os.ByteTransferPipe: android.os.ParcelFileDescriptor getWriteFd()>();

        z1 = r116.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean dumpFullDetails>;

        z2 = r116.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean dumpDalvik>;

        z3 = r116.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean dumpSummaryOnly>;

        z4 = r116.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean dumpUnreachable>;

     label062:
        interfaceinvoke r144.<android.app.IApplicationThread: void dumpMemInfoProto(android.os.ParcelFileDescriptor,android.os.Debug$MemoryInfo,boolean,boolean,boolean,boolean,java.lang.String[])>(r162, r140, z1, z2, z3, z4, r114);

        $r61 = virtualinvoke r161.<com.android.internal.os.ByteTransferPipe: byte[] get()>();

        virtualinvoke r142.<android.util.proto.ProtoOutputStream: void write(long,byte[])>(2246267895812L, $r61);

     label063:
        virtualinvoke r161.<com.android.internal.os.ByteTransferPipe: void kill()>();

     label064:
        goto label075;

     label065:
        $r92 := @caughtexception;

        r163 = $r92;

        goto label067;

     label066:
        $r108 := @caughtexception;

        r163 = $r108;

     label067:
        virtualinvoke r161.<com.android.internal.os.ByteTransferPipe: void kill()>();

     label068:
        throw r163;

     label069:
        $r87 := @caughtexception;

        r164 = $r87;

        goto label072;

     label070:
        $r82 := @caughtexception;

        r165 = $r82;

        goto label074;

     label071:
        $r101 := @caughtexception;

        r164 = $r101;

     label072:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", "Got RemoteException!", r164);

        goto label076;

     label073:
        $r79 := @caughtexception;

        r165 = $r79;

     label074:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", "Got IOException!", r165);

     label075:
        goto label076;

     label076:
        r149 = r143;

        r147 = r159;

        $i232 = virtualinvoke r140.<android.os.Debug$MemoryInfo: int getTotalPss()>();

        l0 = (long) $i232;

        $i233 = virtualinvoke r140.<android.os.Debug$MemoryInfo: int getTotalUss()>();

        l1 = (long) $i233;

        $i234 = virtualinvoke r140.<android.os.Debug$MemoryInfo: int getTotalRss()>();

        l2 = (long) $i234;

        $i235 = virtualinvoke r140.<android.os.Debug$MemoryInfo: int getTotalSwappedOutPss()>();

        l236 = (long) $i235;

        entermonitor r0;

     label077:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        r167 = r7.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

     label078:
        if r167 == null goto label096;

     label079:
        i237 = virtualinvoke r7.<com.android.server.am.ProcessRecord: int getSetAdjWithServices()>();

     label080:
        if i224 != i237 goto label094;

     label081:
        $r55 = r7.<com.android.server.am.ProcessRecord: com.android.internal.app.procstats.ProcessState baseProcessTracker>;

        $l171 = l228 - l226;

        $r53 = r7.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        $r54 = $r53.<com.android.server.am.ProcessRecord$PackageList: android.util.ArrayMap mPkgList>;

        virtualinvoke $r55.<com.android.internal.app.procstats.ProcessState: void addPss(long,long,long,boolean,int,long,android.util.ArrayMap)>(l0, l1, l2, 1, b229, $l171, $r54);

     label082:
        $r56 = r7.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        $i172 = virtualinvoke $r56.<com.android.server.am.ProcessRecord$PackageList: int size()>();

        i242 = $i172 - 1;

     label083:
        if i242 < 0 goto label092;

     label084:
        $r57 = r7.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        r171 = virtualinvoke $r57.<com.android.server.am.ProcessRecord$PackageList: com.android.internal.app.procstats.ProcessStats$ProcessStateHolder valueAt(int)>(i242);

     label085:
        $r58 = r7.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        i245 = $r58.<android.content.pm.ApplicationInfo: int uid>;

     label086:
        $r59 = r171.<com.android.internal.app.procstats.ProcessStats$ProcessStateHolder: com.android.internal.app.procstats.ProcessState state>;

        r172 = virtualinvoke $r59.<com.android.internal.app.procstats.ProcessState: java.lang.String getName()>();

        $r60 = r171.<com.android.internal.app.procstats.ProcessStats$ProcessStateHolder: com.android.internal.app.procstats.ProcessState state>;

        r173 = virtualinvoke $r60.<com.android.internal.app.procstats.ProcessState: java.lang.String getPackage()>();

     label087:
        $l174 = l228 - l226;

        $l173 = r171.<com.android.internal.app.procstats.ProcessStats$ProcessStateHolder: long appVersion>;

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int,java.lang.String,java.lang.String,long,long,long,int,long,long)>(18, i245, r172, r173, l0, l1, l2, b229, $l174, $l173);

     label088:
        i242 = i242 + -1;

        goto label083;

     label089:
        $r84 := @caughtexception;

        r174 = $r84;

        goto label115;

     label090:
        $r90 := @caughtexception;

        r174 = $r90;

        goto label115;

     label091:
        $r99 := @caughtexception;

        r174 = $r99;

        goto label115;

     label092:
        r154 = r142;

        goto label097;

     label093:
        $r104 := @caughtexception;

        r174 = $r104;

        goto label115;

     label094:
        r154 = r142;

        goto label097;

     label095:
        $r107 := @caughtexception;

        r174 = $r107;

        goto label115;

     label096:
        r154 = r142;

     label097:
        exitmonitor r0;

     label098:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        $z49 = r113.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean isCheckinRequest>;

        if $z49 != 0 goto label111;

        if r140 == null goto label111;

        l211 = l211 + l0;

        l212 = l212 + l236;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r42 = r7.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (pid ");

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i223);

        if z48 == 0 goto label099;

        r177 = " / activities)";

        goto label100;

     label099:
        r177 = ")";

     label100:
        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r177);

        $r47 = new com.android.server.am.ActivityManagerService$MemItem;

        $r48 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        $r49 = r7.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        specialinvoke $r47.<com.android.server.am.ActivityManagerService$MemItem: void <init>(java.lang.String,java.lang.String,long,long,long,int,boolean)>($r48, $r49, l0, l236, l2, i223, z48);

        virtualinvoke r132.<java.util.ArrayList: boolean add(java.lang.Object)>($r47);

        virtualinvoke r160.<android.util.SparseArray: void put(int,java.lang.Object)>(i223, $r47);

        $i118 = r140.<android.os.Debug$MemoryInfo: int nativePss>;

        $l119 = (long) $i118;

        l220 = l220 + $l119;

        $i120 = r140.<android.os.Debug$MemoryInfo: int nativeSwappedOutPss>;

        $l121 = (long) $i120;

        l216 = l216 + $l121;

        $i122 = r140.<android.os.Debug$MemoryInfo: int nativeRss>;

        $l123 = (long) $i122;

        l217 = l217 + $l123;

        $i124 = r140.<android.os.Debug$MemoryInfo: int dalvikPss>;

        $l125 = (long) $i124;

        l218 = l218 + $l125;

        $i126 = r140.<android.os.Debug$MemoryInfo: int dalvikSwappedOutPss>;

        $l127 = (long) $i126;

        l219 = l219 + $l127;

        $i128 = r140.<android.os.Debug$MemoryInfo: int dalvikRss>;

        $l129 = (long) $i128;

        l222 = l222 + $l129;

        i246 = 0;

        r150 = r141;

     label101:
        $i247 = lengthof r150;

        if i246 >= $i247 goto label102;

        $l157 = r150[i246];

        $i156 = i246 + 17;

        $i158 = virtualinvoke r140.<android.os.Debug$MemoryInfo: int getOtherPss(int)>($i156);

        $l159 = (long) $i158;

        $l160 = $l157 + $l159;

        r150[i246] = $l160;

        $l162 = r135[i246];

        $i161 = i246 + 17;

        $i163 = virtualinvoke r140.<android.os.Debug$MemoryInfo: int getOtherSwappedOutPss(int)>($i161);

        $l164 = (long) $i163;

        $l165 = $l162 + $l164;

        r135[i246] = $l165;

        $l167 = r136[i246];

        $i166 = i246 + 17;

        $i168 = virtualinvoke r140.<android.os.Debug$MemoryInfo: int getOtherRss(int)>($i166);

        $l169 = (long) $i168;

        $l170 = $l167 + $l169;

        r136[i246] = $l170;

        i246 = i246 + 1;

        goto label101;

     label102:
        $i130 = r140.<android.os.Debug$MemoryInfo: int otherPss>;

        $l131 = (long) $i130;

        l208 = l208 + $l131;

        $i132 = r140.<android.os.Debug$MemoryInfo: int otherRss>;

        $l133 = (long) $i132;

        l248 = l210 + $l133;

        $i134 = r140.<android.os.Debug$MemoryInfo: int otherSwappedOutPss>;

        $l135 = (long) $i134;

        l249 = l209 + $l135;

        i250 = 0;

        l251 = l248;

     label103:
        if i250 >= 17 goto label104;

        $i147 = virtualinvoke r140.<android.os.Debug$MemoryInfo: int getOtherPss(int)>(i250);

        l252 = (long) $i147;

        $l148 = r2[i250];

        $l149 = $l148 + l252;

        r2[i250] = $l149;

        l208 = l208 - l252;

        $i150 = virtualinvoke r140.<android.os.Debug$MemoryInfo: int getOtherSwappedOutPss(int)>(i250);

        l253 = (long) $i150;

        $l151 = r3[i250];

        $l152 = $l151 + l253;

        r3[i250] = $l152;

        l249 = l249 - l253;

        $i153 = virtualinvoke r140.<android.os.Debug$MemoryInfo: int getOtherRss(int)>(i250);

        l254 = (long) $i153;

        $l154 = r4[i250];

        $l155 = $l154 + l254;

        r4[i250] = $l155;

        l251 = l251 - l254;

        i250 = i250 + 1;

        goto label103;

     label104:
        if i224 < 900 goto label105;

        l214 = l214 + l0;

        goto label105;

     label105:
        i255 = 0;

     label106:
        $i256 = lengthof r149;

        if i255 >= $i256 goto label110;

        $i136 = lengthof r149;

        $i137 = $i136 - 1;

        if i255 == $i137 goto label108;

        r180 = <com.android.server.am.ActivityManagerService: int[] DUMP_MEM_OOM_ADJ>;

        $i144 = r180[i255];

        if i224 < $i144 goto label107;

        $i145 = i255 + 1;

        $i146 = r180[$i145];

        if i224 >= $i146 goto label107;

        goto label108;

     label107:
        i255 = i255 + 1;

        goto label106;

     label108:
        $l138 = r149[i255];

        $l139 = $l138 + l0;

        r149[i255] = $l139;

        $l140 = r159[i255];

        $l141 = $l140 + l236;

        r159[i255] = $l141;

        $r50 = r6[i255];

        if $r50 != null goto label109;

        $r52 = new java.util.ArrayList;

        specialinvoke $r52.<java.util.ArrayList: void <init>()>();

        r6[i255] = $r52;

     label109:
        $r51 = r6[i255];

        virtualinvoke $r51.<java.util.ArrayList: boolean add(java.lang.Object)>($r47);

        $l142 = r5[i255];

        $l143 = $l142 + l2;

        r5[i255] = $l143;

        goto label110;

     label110:
        r152 = r113;

        r151 = r132;

        r153 = r160;

        l225 = l249;

        l210 = l251;

        goto label112;

     label111:
        r150 = r141;

        r151 = r132;

        l225 = l209;

        r153 = r160;

        r152 = r113;

     label112:
        i221 = i221 + -1;

        r142 = r154;

        r116 = r152;

        r139 = r147;

        r133 = r153;

        r132 = r151;

        r143 = r149;

        r141 = r150;

        l209 = l225;

        goto label049;

     label113:
        $r97 := @caughtexception;

        r174 = $r97;

        goto label115;

     label114:
        $r81 := @caughtexception;

        r174 = $r81;

     label115:
        exitmonitor r0;

     label116:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw r174;

     label117:
        $r89 := @caughtexception;

        r174 = $r89;

        goto label115;

     label118:
        $r94 := @caughtexception;

        r184 = $r94;

     label119:
        exitmonitor r0;

     label120:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw r184;

     label121:
        $r100 := @caughtexception;

        r184 = $r100;

        goto label119;

     label122:
        r185 = r133;

        r186 = r132;

        if z46 == 0 goto label225;

        r187 = null;

        r188 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.os.ProcessCpuTracker mProcessCpuTracker>;

        entermonitor r188;

     label123:
        $r12 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.os.ProcessCpuTracker mProcessCpuTracker>;

        i258 = virtualinvoke $r12.<com.android.internal.os.ProcessCpuTracker: int countStats()>();

     label124:
        i259 = 0;

        l260 = l210;

        l261 = l216;

        l262 = l220;

        l263 = 0L;

     label125:
        if i259 >= i258 goto label188;

     label126:
        $r30 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.os.ProcessCpuTracker mProcessCpuTracker>;

        r190 = virtualinvoke $r30.<com.android.internal.os.ProcessCpuTracker: com.android.internal.os.ProcessCpuTracker$Stats getStats(int)>(i259);

        $l58 = r190.<com.android.internal.os.ProcessCpuTracker$Stats: long vsize>;

        $b59 = $l58 cmp 0L;

        if $b59 <= 0 goto label185;

        $i60 = r190.<com.android.internal.os.ProcessCpuTracker$Stats: int pid>;

        i264 = virtualinvoke r185.<android.util.SparseArray: int indexOfKey(int)>($i60);

     label127:
        if i264 >= 0 goto label185;

        r191 = r187;

        if r187 != null goto label131;

     label128:
        r191 = new android.os.Debug$MemoryInfo;

        specialinvoke r191.<android.os.Debug$MemoryInfo: void <init>()>();

     label129:
        goto label131;

     label130:
        $r106 := @caughtexception;

        r192 = $r106;

        goto label222;

     label131:
        if z0 != 0 goto label135;

     label132:
        $z25 = r116.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean oomOnly>;

        if $z25 != 0 goto label135;

        $i117 = r190.<com.android.internal.os.ProcessCpuTracker$Stats: int pid>;

        z50 = staticinvoke <android.os.Debug: boolean getMemoryInfo(int,android.os.Debug$MemoryInfo)>($i117, r191);

     label133:
        if z50 != 0 goto label134;

        goto label138;

     label134:
        goto label140;

     label135:
        i265 = r190.<com.android.internal.os.ProcessCpuTracker$Stats: int pid>;

     label136:
        l266 = staticinvoke <android.os.Debug: long getPss(int,long[],long[])>(i265, r117, null);

     label137:
        $b61 = l266 cmp 0L;

        if $b61 != 0 goto label139;

     label138:
        r195 = r185;

        l267 = l261;

        r196 = r186;

        goto label186;

     label139:
        $i62 = (int) l266;

        r191.<android.os.Debug$MemoryInfo: int nativePss> = $i62;

        $l63 = r117[0];

        $i64 = (int) $l63;

        r191.<android.os.Debug$MemoryInfo: int nativePrivateDirty> = $i64;

        $l65 = r117[2];

        $i66 = (int) $l65;

        r191.<android.os.Debug$MemoryInfo: int nativeRss> = $i66;

     label140:
        $i67 = virtualinvoke r191.<android.os.Debug$MemoryInfo: int getTotalPss()>();

        l268 = (long) $i67;

        i269 = virtualinvoke r191.<android.os.Debug$MemoryInfo: int getTotalSwappedOutPss()>();

     label141:
        l270 = (long) i269;

     label142:
        i271 = virtualinvoke r191.<android.os.Debug$MemoryInfo: int getTotalRss()>();

     label143:
        l272 = (long) i271;

        l211 = l211 + l268;

        l212 = l212 + l270;

     label144:
        r197 = new com.android.server.am.ActivityManagerService$MemItem;

     label145:
        r200 = new java.lang.StringBuilder;

     label146:
        specialinvoke r200.<java.lang.StringBuilder: void <init>()>();

     label147:
        $r31 = r190.<com.android.internal.os.ProcessCpuTracker$Stats: java.lang.String name>;

        virtualinvoke r200.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

     label148:
        virtualinvoke r200.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (pid ");

     label149:
        $i68 = r190.<com.android.internal.os.ProcessCpuTracker$Stats: int pid>;

        virtualinvoke r200.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i68);

     label150:
        virtualinvoke r200.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

     label151:
        $r36 = virtualinvoke r200.<java.lang.StringBuilder: java.lang.String toString()>();

        $r37 = r190.<com.android.internal.os.ProcessCpuTracker$Stats: java.lang.String name>;

        $i69 = virtualinvoke r191.<android.os.Debug$MemoryInfo: int getSummaryTotalSwapPss()>();

        $l71 = (long) $i69;

        $i70 = r190.<com.android.internal.os.ProcessCpuTracker$Stats: int pid>;

        specialinvoke r197.<com.android.server.am.ActivityManagerService$MemItem: void <init>(java.lang.String,java.lang.String,long,long,long,int,boolean)>($r36, $r37, l268, $l71, l272, $i70, 0);

     label152:
        virtualinvoke r186.<java.util.ArrayList: boolean add(java.lang.Object)>(r197);

     label153:
        $i72 = r191.<android.os.Debug$MemoryInfo: int nativePss>;

        $l73 = (long) $i72;

        l262 = l262 + $l73;

     label154:
        $i74 = r191.<android.os.Debug$MemoryInfo: int nativeSwappedOutPss>;

        $l75 = (long) $i74;

        l267 = l261 + $l75;

     label155:
        $i76 = r191.<android.os.Debug$MemoryInfo: int nativeRss>;

        $l77 = (long) $i76;

        l217 = l217 + $l77;

     label156:
        $i78 = r191.<android.os.Debug$MemoryInfo: int dalvikPss>;

        $l79 = (long) $i78;

        l218 = l218 + $l79;

     label157:
        $i80 = r191.<android.os.Debug$MemoryInfo: int dalvikSwappedOutPss>;

        $l81 = (long) $i80;

        l219 = l219 + $l81;

     label158:
        $i82 = r191.<android.os.Debug$MemoryInfo: int dalvikRss>;

        $l83 = (long) $i82;

        l222 = l222 + $l83;

     label159:
        i273 = 0;

     label160:
        $i274 = lengthof r141;

        if i273 >= $i274 goto label166;

     label161:
        l275 = r141[i273];

     label162:
        $i105 = i273 + 17;

        i276 = virtualinvoke r191.<android.os.Debug$MemoryInfo: int getOtherPss(int)>($i105);

     label163:
        l277 = (long) i276;

        $l106 = l275 + l277;

        r141[i273] = $l106;

     label164:
        $l108 = r135[i273];

        $i107 = i273 + 17;

        $i109 = virtualinvoke r191.<android.os.Debug$MemoryInfo: int getOtherSwappedOutPss(int)>($i107);

        $l110 = (long) $i109;

        $l111 = $l108 + $l110;

        r135[i273] = $l111;

        $l113 = r136[i273];

        $i112 = i273 + 17;

        $i114 = virtualinvoke r191.<android.os.Debug$MemoryInfo: int getOtherRss(int)>($i112);

        $l115 = (long) $i114;

        $l116 = $l113 + $l115;

        r136[i273] = $l116;

     label165:
        i273 = i273 + 1;

        goto label160;

     label166:
        r231 = r186;

        r195 = r185;

     label167:
        $i84 = r191.<android.os.Debug$MemoryInfo: int otherPss>;

        $l85 = (long) $i84;

        l278 = l208 + $l85;

        $i86 = r191.<android.os.Debug$MemoryInfo: int otherSwappedOutPss>;

        $l87 = (long) $i86;

        l279 = l209 + $l87;

        $i88 = r191.<android.os.Debug$MemoryInfo: int otherRss>;

        $l89 = (long) $i88;

        l260 = l260 + $l89;

     label168:
        i280 = 0;

        l281 = l278;

     label169:
        if i280 >= 17 goto label176;

     label170:
        $i96 = virtualinvoke r191.<android.os.Debug$MemoryInfo: int getOtherPss(int)>(i280);

        l282 = (long) $i96;

     label171:
        $l97 = r2[i280];

        $l98 = $l97 + l282;

        r2[i280] = $l98;

        l281 = l281 - l282;

     label172:
        $i99 = virtualinvoke r191.<android.os.Debug$MemoryInfo: int getOtherSwappedOutPss(int)>(i280);

        l283 = (long) $i99;

     label173:
        $l100 = r3[i280];

        $l101 = $l100 + l283;

        r3[i280] = $l101;

        l279 = l279 - l283;

     label174:
        $i102 = virtualinvoke r191.<android.os.Debug$MemoryInfo: int getOtherRss(int)>(i280);

        l284 = (long) $i102;

     label175:
        $l103 = r4[i280];

        $l104 = $l103 + l284;

        r4[i280] = $l104;

        l260 = l260 - l284;

        i280 = i280 + 1;

        goto label169;

     label176:
        $l90 = r143[0];

        $l91 = $l90 + l268;

        r143[0] = $l91;

        $l92 = r139[0];

        $l93 = $l92 + l270;

        r139[0] = $l93;

        $r38 = r6[0];

        if $r38 != null goto label179;

     label177:
        r232 = new java.util.ArrayList;

        specialinvoke r232.<java.util.ArrayList: void <init>()>();

     label178:
        r6[0] = r232;

     label179:
        $r39 = r6[0];

        virtualinvoke $r39.<java.util.ArrayList: boolean add(java.lang.Object)>(r197);

     label180:
        $l94 = r5[0];

        $l95 = $l94 + l272;

        r5[0] = $l95;

        l263 = l263 + l268;

        l208 = l281;

        l209 = l279;

        r196 = r231;

        goto label186;

     label181:
        $r103 := @caughtexception;

        r192 = $r103;

        goto label222;

     label182:
        $r83 := @caughtexception;

        r192 = $r83;

        goto label222;

     label183:
        $r98 := @caughtexception;

        r192 = $r98;

        goto label222;

     label184:
        $r88 := @caughtexception;

        r192 = $r88;

        goto label222;

     label185:
        r196 = r186;

        r195 = r185;

        l267 = l261;

        r191 = r187;

     label186:
        i259 = i259 + 1;

        r116 = r113;

        r186 = r196;

        r187 = r191;

        r185 = r195;

        l261 = l267;

        goto label125;

     label187:
        $r85 := @caughtexception;

        r192 = $r85;

        goto label222;

     label188:
        exitmonitor r188;

     label189:
        $r13 = new java.util.ArrayList;

        specialinvoke $r13.<java.util.ArrayList: void <init>()>();

        $r14 = new com.android.server.am.ActivityManagerService$MemItem;

        specialinvoke $r14.<com.android.server.am.ActivityManagerService$MemItem: void <init>(java.lang.String,java.lang.String,long,long,long,int)>("Native", "Native", l262, l261, l217, -1);

        virtualinvoke $r13.<java.util.ArrayList: boolean add(java.lang.Object)>($r14);

        $r15 = new com.android.server.am.ActivityManagerService$MemItem;

        specialinvoke $r15.<com.android.server.am.ActivityManagerService$MemItem: void <init>(java.lang.String,java.lang.String,long,long,long,int)>("Dalvik", "Dalvik", l218, l219, l222, -2);

        virtualinvoke $r13.<java.util.ArrayList: boolean add(java.lang.Object)>($r15);

        $r16 = new com.android.server.am.ActivityManagerService$MemItem;

        specialinvoke $r16.<com.android.server.am.ActivityManagerService$MemItem: void <init>(java.lang.String,java.lang.String,long,long,long,int)>("Unknown", "Unknown", l208, l209, l260, -3);

        virtualinvoke $r13.<java.util.ArrayList: boolean add(java.lang.Object)>($r16);

        i285 = 0;

     label190:
        if i285 >= 17 goto label191;

        r236 = staticinvoke <android.os.Debug$MemoryInfo: java.lang.String getOtherLabel(int)>(i285);

        $r29 = new com.android.server.am.ActivityManagerService$MemItem;

        $l57 = r2[i285];

        $l56 = r3[i285];

        $l55 = r4[i285];

        specialinvoke $r29.<com.android.server.am.ActivityManagerService$MemItem: void <init>(java.lang.String,java.lang.String,long,long,long,int)>(r236, r236, $l57, $l56, $l55, i285);

        virtualinvoke $r13.<java.util.ArrayList: boolean add(java.lang.Object)>($r29);

        i285 = i285 + 1;

        goto label190;

     label191:
        $i7 = lengthof r141;

        if $i7 <= 0 goto label199;

        r237 = virtualinvoke $r13.<java.util.ArrayList: java.util.Iterator iterator()>();

     label192:
        $z51 = interfaceinvoke r237.<java.util.Iterator: boolean hasNext()>();

        if $z51 == 0 goto label199;

        $r26 = interfaceinvoke r237.<java.util.Iterator: java.lang.Object next()>();

        r238 = (com.android.server.am.ActivityManagerService$MemItem) $r26;

        $i47 = r238.<com.android.server.am.ActivityManagerService$MemItem: int id>;

        if $i47 != -2 goto label193;

        i286 = 0;

        b287 = 3;

        goto label196;

     label193:
        $i48 = r238.<com.android.server.am.ActivityManagerService$MemItem: int id>;

        if $i48 != 0 goto label194;

        i286 = 4;

        b287 = 9;

        goto label196;

     label194:
        $i49 = r238.<com.android.server.am.ActivityManagerService$MemItem: int id>;

        if $i49 != 10 goto label195;

        i286 = 10;

        b287 = 12;

        goto label196;

     label195:
        $i50 = r238.<com.android.server.am.ActivityManagerService$MemItem: int id>;

        if $i50 != 12 goto label192;

        i286 = 13;

        b287 = 14;

     label196:
        $r239 = new java.util.ArrayList;

        specialinvoke $r239.<java.util.ArrayList: void <init>()>();

        r238.<com.android.server.am.ActivityManagerService$MemItem: java.util.ArrayList subitems> = $r239;

     label197:
        if i286 > b287 goto label198;

        $i51 = i286 + 17;

        r240 = staticinvoke <android.os.Debug$MemoryInfo: java.lang.String getOtherLabel(int)>($i51);

        $r28 = r238.<com.android.server.am.ActivityManagerService$MemItem: java.util.ArrayList subitems>;

        $r27 = new com.android.server.am.ActivityManagerService$MemItem;

        $l54 = r141[i286];

        $l53 = r135[i286];

        $l52 = r136[i286];

        specialinvoke $r27.<com.android.server.am.ActivityManagerService$MemItem: void <init>(java.lang.String,java.lang.String,long,long,long,int)>(r240, r240, $l54, $l53, $l52, i286);

        virtualinvoke $r28.<java.util.ArrayList: boolean add(java.lang.Object)>($r27);

        i286 = i286 + 1;

        goto label197;

     label198:
        goto label192;

     label199:
        $r17 = new java.util.ArrayList;

        specialinvoke $r17.<java.util.ArrayList: void <init>()>();

        i288 = 0;

     label200:
        $i289 = lengthof r143;

        if i288 >= $i289 goto label204;

        $l41 = r143[i288];

        $b42 = $l41 cmp 0L;

        if $b42 == 0 goto label203;

        $z19 = r113.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean isCompact>;

        if $z19 == 0 goto label201;

        $r25 = <com.android.server.am.ActivityManagerService: java.lang.String[] DUMP_MEM_OOM_COMPACT_LABEL>;

        r242 = $r25[i288];

        goto label202;

     label201:
        $r21 = <com.android.server.am.ActivityManagerService: java.lang.String[] DUMP_MEM_OOM_LABEL>;

        r242 = $r21[i288];

     label202:
        $r22 = new com.android.server.am.ActivityManagerService$MemItem;

        $l46 = r143[i288];

        $l45 = r139[i288];

        $l44 = r5[i288];

        $r23 = <com.android.server.am.ActivityManagerService: int[] DUMP_MEM_OOM_ADJ>;

        $i43 = $r23[i288];

        specialinvoke $r22.<com.android.server.am.ActivityManagerService$MemItem: void <init>(java.lang.String,java.lang.String,long,long,long,int)>(r242, r242, $l46, $l45, $l44, $i43);

        $r24 = r6[i288];

        $r22.<com.android.server.am.ActivityManagerService$MemItem: java.util.ArrayList subitems> = $r24;

        virtualinvoke $r17.<java.util.ArrayList: boolean add(java.lang.Object)>($r22);

        goto label203;

     label203:
        i288 = i288 + 1;

        goto label200;

     label204:
        $z11 = r113.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean oomOnly>;

        if $z11 != 0 goto label205;

        staticinvoke <com.android.server.am.ActivityManagerService: void dumpMemItems(android.util.proto.ProtoOutputStream,long,java.lang.String,java.util.ArrayList,boolean,boolean,boolean)>(r142, 2246267895837L, "proc", r186, 1, 0, 0);

     label205:
        staticinvoke <com.android.server.am.ActivityManagerService: void dumpMemItems(android.util.proto.ProtoOutputStream,long,java.lang.String,java.util.ArrayList,boolean,boolean,boolean)>(r142, 2246267895838L, "oom", $r17, 0, 0, 0);

        if z0 != 0 goto label206;

        $z18 = r113.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean oomOnly>;

        if $z18 != 0 goto label206;

        staticinvoke <com.android.server.am.ActivityManagerService: void dumpMemItems(android.util.proto.ProtoOutputStream,long,java.lang.String,java.util.ArrayList,boolean,boolean,boolean)>(r142, 2246267895839L, "cat", $r13, 1, 0, 0);

     label206:
        $z52 = r113.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean dumpSwapPss>;

        if $z52 == 0 goto label207;

        if z47 == 0 goto label207;

        $b40 = l212 cmp 0L;

        if $b40 == 0 goto label207;

        z53 = 1;

        goto label208;

     label207:
        z53 = 0;

     label208:
        r113.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean dumpSwapPss> = z53;

        $z54 = r113.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean oomOnly>;

        if $z54 != 0 goto label209;

        $z17 = r113.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean dumpSwapPss>;

        staticinvoke <com.android.server.am.ActivityManagerService: void dumpMemItems(android.util.proto.ProtoOutputStream,long,java.lang.String,java.util.ArrayList,boolean,boolean,boolean)>(r142, 2246267895813L, "proc", r186, 1, 1, $z17);

     label209:
        $z12 = r113.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean dumpSwapPss>;

        staticinvoke <com.android.server.am.ActivityManagerService: void dumpMemItems(android.util.proto.ProtoOutputStream,long,java.lang.String,java.util.ArrayList,boolean,boolean,boolean)>(r142, 2246267895814L, "oom", $r17, 0, 1, $z12);

        if z0 != 0 goto label210;

        $z15 = r113.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean oomOnly>;

        if $z15 != 0 goto label210;

        $z16 = r113.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean dumpSwapPss>;

        staticinvoke <com.android.server.am.ActivityManagerService: void dumpMemItems(android.util.proto.ProtoOutputStream,long,java.lang.String,java.util.ArrayList,boolean,boolean,boolean)>(r142, 2246267895815L, "cat", $r13, 1, 1, $z16);

     label210:
        $r244 = new com.android.internal.util.MemInfoReader;

        specialinvoke $r244.<com.android.internal.util.MemInfoReader: void <init>()>();

        virtualinvoke $r244.<com.android.internal.util.MemInfoReader: void readMemInfo()>();

        $b290 = l263 cmp 0L;

        if $b290 <= 0 goto label216;

        entermonitor r0;

     label211:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        l291 = virtualinvoke $r244.<com.android.internal.util.MemInfoReader: long getCachedSizeKb()>();

        l292 = virtualinvoke $r244.<com.android.internal.util.MemInfoReader: long getFreeSizeKb()>();

        l293 = virtualinvoke $r244.<com.android.internal.util.MemInfoReader: long getZramTotalSizeKb()>();

        l294 = virtualinvoke $r244.<com.android.internal.util.MemInfoReader: long getKernelUsedSizeKb()>();

        $l39 = l291 * 1024L;

        $l38 = l292 * 1024L;

        $l37 = l293 * 1024L;

        $l36 = l294 * 1024L;

        $l35 = l263 * 1024L;

        staticinvoke <com.android.server.am.EventLogTags: void writeAmMeminfo(long,long,long,long,long)>($l39, $l38, $l37, $l36, $l35);

        $r20 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        virtualinvoke $r20.<com.android.server.am.ProcessStatsService: void addSysMemUsageLocked(long,long,long,long,long)>(l291, l292, l293, l294, l263);

        exitmonitor r0;

     label212:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        goto label216;

     label213:
        $r80 := @caughtexception;

     label214:
        exitmonitor r0;

     label215:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r80;

     label216:
        if z0 != 0 goto label217;

        l295 = virtualinvoke $r244.<com.android.internal.util.MemInfoReader: long getTotalSizeKb()>();

        virtualinvoke r142.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529672L, l295);

        $i32 = r0.<com.android.server.am.ActivityManagerService: int mLastMemoryLevel>;

        virtualinvoke r142.<android.util.proto.ProtoOutputStream: void write(long,int)>(1159641169929L, $i32);

        virtualinvoke r142.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529674L, l214);

        $l33 = virtualinvoke $r244.<com.android.internal.util.MemInfoReader: long getCachedSizeKb()>();

        virtualinvoke r142.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529675L, $l33);

        $l34 = virtualinvoke $r244.<com.android.internal.util.MemInfoReader: long getFreeSizeKb()>();

        virtualinvoke r142.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529676L, $l34);

        goto label217;

     label217:
        r249 = r142;

        l296 = virtualinvoke $r244.<com.android.internal.util.MemInfoReader: long getTotalSizeKb()>();

        l297 = virtualinvoke $r244.<com.android.internal.util.MemInfoReader: long getFreeSizeKb()>();

        l298 = virtualinvoke $r244.<com.android.internal.util.MemInfoReader: long getCachedSizeKb()>();

        l299 = virtualinvoke $r244.<com.android.internal.util.MemInfoReader: long getKernelUsedSizeKb()>();

        l300 = virtualinvoke $r244.<com.android.internal.util.MemInfoReader: long getZramTotalSizeKb()>();

        $l8 = l211 - l214;

        virtualinvoke r142.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529677L, $l8);

        $l9 = virtualinvoke $r244.<com.android.internal.util.MemInfoReader: long getKernelUsedSizeKb()>();

        virtualinvoke r142.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529678L, $l9);

        $l10 = l211 - l212;

        $l11 = l296 - $l10;

        $l12 = $l11 - l297;

        $l13 = $l12 - l298;

        $l14 = $l13 - l299;

        $l15 = $l14 - l300;

        virtualinvoke r142.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529679L, $l15);

        if z0 != 0 goto label219;

        $l16 = virtualinvoke $r244.<com.android.internal.util.MemInfoReader: long getZramTotalSizeKb()>();

        $b17 = $l16 cmp 0L;

        if $b17 == 0 goto label218;

        $l27 = virtualinvoke $r244.<com.android.internal.util.MemInfoReader: long getZramTotalSizeKb()>();

        virtualinvoke r142.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529680L, $l27);

        $l28 = virtualinvoke $r244.<com.android.internal.util.MemInfoReader: long getSwapTotalSizeKb()>();

        $l29 = virtualinvoke $r244.<com.android.internal.util.MemInfoReader: long getSwapFreeSizeKb()>();

        $l30 = $l28 - $l29;

        virtualinvoke r142.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529681L, $l30);

        $l31 = virtualinvoke $r244.<com.android.internal.util.MemInfoReader: long getSwapTotalSizeKb()>();

        virtualinvoke r142.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529682L, $l31);

     label218:
        r250 = specialinvoke r0.<com.android.server.am.ActivityManagerService: long[] getKsmInfo()>();

        $l18 = r250[1];

        virtualinvoke r249.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529683L, $l18);

        $l19 = r250[0];

        virtualinvoke r249.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529684L, $l19);

        $l20 = r250[2];

        virtualinvoke r249.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529685L, $l20);

        $l21 = r250[3];

        virtualinvoke r249.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529686L, $l21);

        $i22 = staticinvoke <android.app.ActivityManager: int staticGetMemoryClass()>();

        virtualinvoke r249.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464279L, $i22);

        $i23 = staticinvoke <android.app.ActivityManager: int staticGetLargeMemoryClass()>();

        virtualinvoke r249.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464280L, $i23);

        $r18 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $l24 = virtualinvoke $r18.<com.android.server.am.ProcessList: long getMemLevel(int)>(999);

        $l25 = $l24 / 1024L;

        virtualinvoke r249.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529689L, $l25);

        $r19 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $l26 = virtualinvoke $r19.<com.android.server.am.ProcessList: long getCachedRestoreThresholdKb()>();

        virtualinvoke r249.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529690L, $l26);

        $z13 = staticinvoke <android.app.ActivityManager: boolean isLowRamDeviceStatic()>();

        virtualinvoke r249.<android.util.proto.ProtoOutputStream: void write(long,boolean)>(1133871366171L, $z13);

        $z14 = staticinvoke <android.app.ActivityManager: boolean isHighEndGfx()>();

        virtualinvoke r249.<android.util.proto.ProtoOutputStream: void write(long,boolean)>(1133871366172L, $z14);

     label219:
        goto label225;

     label220:
        $r102 := @caughtexception;

        r192 = $r102;

        goto label222;

     label221:
        $r86 := @caughtexception;

        r192 = $r86;

     label222:
        exitmonitor r188;

     label223:
        throw r192;

     label224:
        $r95 := @caughtexception;

        r192 = $r95;

        goto label222;

     label225:
        virtualinvoke r142.<android.util.proto.ProtoOutputStream: void flush()>();

        return;

        catch java.lang.NumberFormatException from label001 to label002 with label003;
        catch java.lang.Throwable from label005 to label006 with label030;
        catch java.lang.Throwable from label008 to label009 with label017;
        catch java.lang.Throwable from label009 to label010 with label016;
        catch java.lang.Throwable from label010 to label011 with label015;
        catch java.lang.Throwable from label013 to label014 with label015;
        catch java.lang.Throwable from label018 to label019 with label029;
        catch java.lang.Throwable from label031 to label032 with label033;
        catch java.lang.Throwable from label050 to label051 with label118;
        catch java.io.IOException from label060 to label061 with label073;
        catch android.os.RemoteException from label060 to label061 with label071;
        catch java.lang.Throwable from label061 to label062 with label066;
        catch java.lang.Throwable from label062 to label063 with label065;
        catch java.io.IOException from label063 to label064 with label070;
        catch android.os.RemoteException from label063 to label064 with label069;
        catch java.io.IOException from label067 to label068 with label070;
        catch android.os.RemoteException from label067 to label068 with label069;
        catch java.io.IOException from label068 to label069 with label070;
        catch android.os.RemoteException from label068 to label069 with label069;
        catch java.lang.Throwable from label077 to label078 with label114;
        catch java.lang.Throwable from label079 to label080 with label095;
        catch java.lang.Throwable from label081 to label082 with label093;
        catch java.lang.Throwable from label082 to label083 with label093;
        catch java.lang.Throwable from label084 to label085 with label093;
        catch java.lang.Throwable from label085 to label086 with label091;
        catch java.lang.Throwable from label086 to label087 with label090;
        catch java.lang.Throwable from label087 to label088 with label089;
        catch java.lang.Throwable from label097 to label098 with label113;
        catch java.lang.Throwable from label115 to label116 with label117;
        catch java.lang.Throwable from label119 to label120 with label121;
        catch java.lang.Throwable from label123 to label124 with label221;
        catch java.lang.Throwable from label126 to label127 with label187;
        catch java.lang.Throwable from label128 to label129 with label130;
        catch java.lang.Throwable from label132 to label133 with label130;
        catch java.lang.Throwable from label135 to label136 with label187;
        catch java.lang.Throwable from label136 to label137 with label184;
        catch java.lang.Throwable from label139 to label140 with label184;
        catch java.lang.Throwable from label140 to label141 with label184;
        catch java.lang.Throwable from label142 to label143 with label187;
        catch java.lang.Throwable from label144 to label145 with label183;
        catch java.lang.Throwable from label145 to label146 with label182;
        catch java.lang.Throwable from label146 to label147 with label182;
        catch java.lang.Throwable from label147 to label148 with label182;
        catch java.lang.Throwable from label148 to label149 with label182;
        catch java.lang.Throwable from label149 to label150 with label182;
        catch java.lang.Throwable from label150 to label151 with label182;
        catch java.lang.Throwable from label151 to label152 with label182;
        catch java.lang.Throwable from label152 to label153 with label182;
        catch java.lang.Throwable from label153 to label154 with label182;
        catch java.lang.Throwable from label154 to label155 with label182;
        catch java.lang.Throwable from label155 to label156 with label182;
        catch java.lang.Throwable from label156 to label157 with label182;
        catch java.lang.Throwable from label157 to label158 with label182;
        catch java.lang.Throwable from label158 to label159 with label182;
        catch java.lang.Throwable from label160 to label161 with label182;
        catch java.lang.Throwable from label162 to label163 with label182;
        catch java.lang.Throwable from label164 to label165 with label181;
        catch java.lang.Throwable from label167 to label168 with label181;
        catch java.lang.Throwable from label170 to label171 with label181;
        catch java.lang.Throwable from label172 to label173 with label181;
        catch java.lang.Throwable from label174 to label175 with label181;
        catch java.lang.Throwable from label177 to label178 with label181;
        catch java.lang.Throwable from label179 to label180 with label181;
        catch java.lang.Throwable from label188 to label189 with label220;
        catch java.lang.Throwable from label211 to label212 with label213;
        catch java.lang.Throwable from label214 to label215 with label213;
        catch java.lang.Throwable from label222 to label223 with label224;
    }

    private final void dumpApplicationMemoryUsage(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String, com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions, java.lang.String[], boolean, java.util.ArrayList, java.io.PrintWriter)
    {
        com.android.server.am.ActivityManagerService r0;
        java.io.PrintWriter r1, r159, r265, r267;
        boolean z0, z1, z2, $z3, $z4, $z5, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32, $z33, $z39, $z40, $z41, $z42, $z45, $z46, $z47, $z48, $z49, $z50, $z51, $z52, $z53, $z54, $z55, $z56, $z57, $z58, $z60, $z61, $z62, z63, z64, $z65, $z66, $z67, $z68, $z69, $z70, z71, z72, z73, z74, z75, $z76, z77, z78, z79, z80, z81, z82, z83, $z84, z85, $z86, $z87, $z88, z89, $z90, $z91, $z92, $z93;
        long[] r2, r3, r4, r5, r163, r181, r182, r183, r184, r186, r195, r198, r223, r227, r228, r239, r241, r250, r251, r275;
        java.util.ArrayList[] r6;
        android.os.ParcelFileDescriptor r9;
        long l1, l2, l3, l4, l5, l6, l7, l8, $l14, $l15, $l16, $l17, $l18, $l19, $l20, $l21, $l22, $l23, $l25, $l26, $l27, $l28, $l31, $l32, $l33, $l35, $l37, $l39, $l41, $l42, $l43, $l44, $l45, $l46, $l47, $l48, $l49, $l50, $l51, $l52, $l53, $l54, $l55, $l56, $l57, $l58, $l59, $l60, $l61, $l62, $l63, $l64, $l65, $l67, $l70, $l71, $l72, $l78, $l79, $l80, $l81, $l82, $l83, $l84, $l88, $l90, $l97, $l98, $l99, $l101, $l103, $l105, $l106, $l107, $l108, $l109, $l110, $l111, $l113, $l114, $l116, $l117, $l119, $l120, $l122, $l124, $l126, $l128, $l129, $l131, $l133, $l135, $l137, $l139, $l141, $l143, $l145, $l147, $l150, $l151, $l152, $l153, $l154, $l155, $l160, $l161, $l163, $l164, $l166, $l167, $l169, $l171, $l172, $l174, $l176, $l177, $l179, $l181, $l182, $l183, $l185, $l186, $l189, $l191, $l200, $l202, l205, l206, l212, l214, l215, l217, l218, l219, l221, l224, l225, l226, l227, l228, l229, l232, l233, l234, l237, l240, l243, l256, l257, l263, l264, l265, l267, l268, l269, l270, l273, l274, l275, l276, l282, l284, l285, l286, l287, l288, l289, l290, l293, l294, l295, l297, l298, l300, l302, l304, l306, l308, l310, l312, l316, l318, l319, l321, l322, l323, l324, l326, l327, l328, l329, l335, l336, l337, l338, $l340, $l341, $l342, $l343, $l344, $l345, l346, l347, l348, l350, l351, l352, $l353, $l354, $l355, $l356, $l359, $l360;
        java.util.ArrayList $r10, $r13, $r17, $r36, $r40, $r50, $r51, $r62, $r63, $r64, $r86, r158, r189, r199, r224, r238, r254, r255, $r260;
        android.util.SparseArray $r11, r180, r197, r218;
        int $i9, $i10, $i11, $i12, $i29, $i30, $i69, $i73, $i74, $i75, $i76, $i77, $i86, $i89, $i91, $i92, $i93, $i94, $i95, $i96, $i100, $i102, $i104, $i112, $i115, $i118, $i121, $i123, $i125, $i127, $i130, $i132, $i134, $i136, $i138, $i140, $i142, $i144, $i146, $i148, $i149, $i156, $i157, $i158, $i159, $i162, $i165, $i168, $i170, $i173, $i175, $i178, $i180, $i184, $i188, $i190, $i192, $i193, $i194, $i196, $i197, $i199, $i201, $i203, $i204, i207, i208, i209, i210, i211, i213, i216, i223, i230, i231, $i238, $i239, $i241, $i242, i244, i251, i255, i259, i261, $i262, i266, i272, $i277, i278, i279, i291, i292, i296, i299, i301, i303, i305, i307, i309, i311, i313, $i315, i317, i320, i325, i330, i331, i333, $i334, i339, $i357, $i358;
        com.android.internal.os.ProcessCpuTracker $r12, $r42, $r88, $r99, r168, r242;
        com.android.server.am.ActivityManagerService$MemItem $r14, $r15, $r16, $r34, $r39, $r41, $r59, r252, r259;
        com.android.internal.util.MemInfoReader $r18;
        byte $b13, $b24, $b34, $b36, $b38, $b40, $b66, $b68, $b85, $b87, $b187, $b198, b235, b332, $b349;
        com.android.server.am.ProcessList $r19, $r280, $r282;
        java.lang.String $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r43, $r48, $r49, $r54, $r60, $r61, $r72, $r77, $r80, $r85, $r87, $r94, $r97, $r100, $r101, $r102, $r129, $r142, r155, r164, r165, $r177, r215, r216, r220, r257, r261, r263, $r271, $r272, $r273, $r274, $r276, $r277, $r278, $r279, $r281, $r283;
        com.android.server.am.ProcessStatsService $r32;
        java.lang.String[] $r33, $r37, r157, r185;
        int[] $r35, r229;
        java.lang.Object $r38, $r52, $r89;
        java.lang.StringBuilder $r53, $r73, $r82, $r90, $r126, $r139, r253;
        com.android.server.am.ProcessRecord$PackageList $r65, $r67, $r68;
        android.util.ArrayMap $r66;
        android.content.pm.ApplicationInfo $r69;
        com.android.internal.app.procstats.ProcessState $r70, $r71, r213;
        android.os.Debug$MemoryInfo $r81, $r98, r172, r175, r187, r243, r245, r249;
        char $c195;
        java.lang.Throwable $r103, $r104, $r105, $r106, $r107, $r108, $r109, $r110, $r111, $r112, $r113, $r114, $r115, $r116, $r117, $r118, $r119, $r120, $r121, $r122, $r123, $r124, $r125, $r130, $r131, $r132, $r133, $r134, $r135, $r136, $r137, $r143, $r144, $r145, $r147, $r148, $r149, $r150, $r151, $r152, $r153, r170, r205, r207, r217, r237, r246;
        android.os.RemoteException $r138, $r146, r206;
        java.io.FileDescriptor r154;
        com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions r156, r188, r202;
        com.android.internal.os.ProcessCpuTracker$Stats r169, r174, r244;
        com.android.server.am.ProcessRecord r192;
        android.app.IApplicationThread r193, r212;
        com.android.internal.os.TransferPipe r203;
        com.android.internal.app.procstats.ProcessStats$ProcessStateHolder r214;
        java.util.Iterator r258;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r154 := @parameter0: java.io.FileDescriptor;

        r1 := @parameter1: java.io.PrintWriter;

        r155 := @parameter2: java.lang.String;

        r156 := @parameter3: com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions;

        r157 := @parameter4: java.lang.String[];

        z0 := @parameter5: boolean;

        r158 := @parameter6: java.util.ArrayList;

        r159 := @parameter7: java.io.PrintWriter;

        l205 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        l206 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        r163 = newarray (long)[3];

        if r158 != null goto label030;

        r164 = "N/A";

        $i194 = lengthof r157;

        if $i194 <= 0 goto label029;

        r165 = r157[0];

        $c195 = virtualinvoke r165.<java.lang.String: char charAt(int)>(0);

        if $c195 == 45 goto label028;

        $r86 = new java.util.ArrayList;

        specialinvoke $r86.<java.util.ArrayList: void <init>()>();

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void updateCpuStatsNow()>();

     label001:
        $r87 = r157[0];

        i207 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r87);

     label002:
        goto label004;

     label003:
        $r151 := @caughtexception;

        i207 = -1;

     label004:
        r168 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.os.ProcessCpuTracker mProcessCpuTracker>;

        entermonitor r168;

     label005:
        $r88 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.os.ProcessCpuTracker mProcessCpuTracker>;

        i208 = virtualinvoke $r88.<com.android.internal.os.ProcessCpuTracker: int countStats()>();

     label006:
        i209 = 0;

     label007:
        if i209 >= i208 goto label012;

     label008:
        $r99 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.os.ProcessCpuTracker mProcessCpuTracker>;

        r169 = virtualinvoke $r99.<com.android.internal.os.ProcessCpuTracker: com.android.internal.os.ProcessCpuTracker$Stats getStats(int)>(i209);

        $i204 = r169.<com.android.internal.os.ProcessCpuTracker$Stats: int pid>;

        if $i204 == i207 goto label009;

        $r100 = r169.<com.android.internal.os.ProcessCpuTracker$Stats: java.lang.String baseName>;

        if $r100 == null goto label010;

        $r102 = r169.<com.android.internal.os.ProcessCpuTracker$Stats: java.lang.String baseName>;

        $r101 = r157[0];

        $z60 = virtualinvoke $r102.<java.lang.String: boolean equals(java.lang.Object)>($r101);

        if $z60 == 0 goto label010;

     label009:
        virtualinvoke $r86.<java.util.ArrayList: boolean add(java.lang.Object)>(r169);

     label010:
        i209 = i209 + 1;

        goto label007;

     label011:
        $r105 := @caughtexception;

        r170 = $r105;

        goto label025;

     label012:
        exitmonitor r168;

     label013:
        $i196 = virtualinvoke $r86.<java.util.ArrayList: int size()>();

        if $i196 <= 0 goto label023;

        z63 = r156.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean isCheckinRequest>;

        z64 = r156.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean isCompact>;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void dumpApplicationMemoryUsageHeader(java.io.PrintWriter,long,long,boolean,boolean)>(r1, l205, l206, z63, z64);

        r172 = null;

        $i197 = virtualinvoke $r86.<java.util.ArrayList: int size()>();

        i210 = $i197 - 1;

     label014:
        if i210 < 0 goto label022;

        $r89 = virtualinvoke $r86.<java.util.ArrayList: java.lang.Object get(int)>(i210);

        r174 = (com.android.internal.os.ProcessCpuTracker$Stats) $r89;

        i211 = r174.<com.android.internal.os.ProcessCpuTracker$Stats: int pid>;

        r175 = r172;

        if r172 != null goto label015;

        $r98 = new android.os.Debug$MemoryInfo;

        specialinvoke $r98.<android.os.Debug$MemoryInfo: void <init>()>();

        r175 = $r98;

     label015:
        $z54 = r156.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean dumpDetails>;

        if $z54 != 0 goto label018;

        if z0 != 0 goto label016;

        $z58 = r156.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean oomOnly>;

        if $z58 != 0 goto label016;

        goto label018;

     label016:
        l212 = staticinvoke <android.os.Debug: long getPss(int,long[],long[])>(i211, r163, null);

        $b198 = l212 cmp 0L;

        if $b198 != 0 goto label017;

        goto label021;

     label017:
        $i199 = (int) l212;

        r175.<android.os.Debug$MemoryInfo: int nativePss> = $i199;

        $l200 = r163[0];

        $i201 = (int) $l200;

        r175.<android.os.Debug$MemoryInfo: int nativePrivateDirty> = $i201;

        $l202 = r163[2];

        $i203 = (int) $l202;

        r175.<android.os.Debug$MemoryInfo: int nativeRss> = $i203;

        goto label019;

     label018:
        $z55 = staticinvoke <android.os.Debug: boolean getMemoryInfo(int,android.os.Debug$MemoryInfo)>(i211, r175);

        if $z55 != 0 goto label019;

        goto label021;

     label019:
        $z56 = r156.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean isCheckinRequest>;

        if $z56 != 0 goto label020;

        $z57 = r156.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean dumpDetails>;

        if $z57 == 0 goto label020;

        $r90 = new java.lang.StringBuilder;

        specialinvoke $r90.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n** MEMINFO in pid ");

        virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i211);

        virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [");

        $r94 = r174.<com.android.internal.os.ProcessCpuTracker$Stats: java.lang.String baseName>;

        virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r94);

        virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] **");

        $r97 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r97);

     label020:
        $z65 = r156.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean isCheckinRequest>;

        $z66 = r156.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean dumpFullDetails>;

        $z67 = r156.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean dumpDalvik>;

        $z68 = r156.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean dumpSummaryOnly>;

        $r177 = r174.<com.android.internal.os.ProcessCpuTracker$Stats: java.lang.String baseName>;

        staticinvoke <android.app.ActivityThread: void dumpMemInfoTable(java.io.PrintWriter,android.os.Debug$MemoryInfo,boolean,boolean,boolean,boolean,int,java.lang.String,long,long,long,long,long,long)>(r1, r175, $z65, $z66, $z67, $z68, i211, $r177, 0L, 0L, 0L, 0L, 0L, 0L);

        $z69 = r156.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean isCheckinRequest>;

        if $z69 == 0 goto label021;

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label021:
        i210 = i210 + -1;

        r172 = r175;

        goto label014;

     label022:
        return;

     label023:
        goto label028;

     label024:
        $r116 := @caughtexception;

        r170 = $r116;

     label025:
        exitmonitor r168;

     label026:
        throw r170;

     label027:
        $r119 := @caughtexception;

        r170 = $r119;

        goto label025;

     label028:
        r164 = r165;

        goto label029;

     label029:
        $r82 = new java.lang.StringBuilder;

        specialinvoke $r82.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No process found for: ");

        virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r164);

        $r85 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r85);

        return;

     label030:
        if z0 != 0 goto label032;

        $z51 = r156.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean oomOnly>;

        if $z51 != 0 goto label032;

        $i193 = virtualinvoke r158.<java.util.ArrayList: int size()>();

        if $i193 == 1 goto label031;

        $z52 = r156.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean isCheckinRequest>;

        if $z52 != 0 goto label031;

        $z53 = r156.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean packages>;

        if $z53 == 0 goto label032;

     label031:
        r156.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean dumpDetails> = 1;

     label032:
        i213 = virtualinvoke r158.<java.util.ArrayList: int size()>();

        $z70 = r156.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean isCheckinRequest>;

        if $z70 != 0 goto label033;

        if i213 <= 1 goto label033;

        $z50 = r156.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean packages>;

        if $z50 != 0 goto label033;

        z71 = 1;

        goto label034;

     label033:
        z71 = 0;

     label034:
        if z71 == 0 goto label035;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void updateCpuStatsNow()>();

     label035:
        z72 = r156.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean isCheckinRequest>;

        z73 = r156.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean isCompact>;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void dumpApplicationMemoryUsageHeader(java.io.PrintWriter,long,long,boolean,boolean)>(r1, l205, l206, z72, z73);

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        $r11 = new android.util.SparseArray;

        specialinvoke $r11.<android.util.SparseArray: void <init>()>();

        r180 = $r11;

        $z3 = r156.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean dumpDalvik>;

        if $z3 == 0 goto label036;

        r181 = newarray (long)[15];

        goto label037;

     label036:
        r181 = <libcore.util.EmptyArray: long[] LONG>;

     label037:
        $z4 = r156.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean dumpDalvik>;

        if $z4 == 0 goto label038;

        r182 = newarray (long)[15];

        goto label039;

     label038:
        r182 = <libcore.util.EmptyArray: long[] LONG>;

     label039:
        $z5 = r156.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean dumpDalvik>;

        if $z5 == 0 goto label040;

        r183 = newarray (long)[15];

        goto label041;

     label040:
        r183 = <libcore.util.EmptyArray: long[] LONG>;

     label041:
        r2 = newarray (long)[17];

        l214 = 0L;

        r184 = newarray (long)[17];

        r3 = newarray (long)[17];

        r185 = <com.android.server.am.ActivityManagerService: java.lang.String[] DUMP_MEM_OOM_LABEL>;

        l215 = 0L;

        $i9 = lengthof r185;

        r186 = newarray (long)[$i9];

        i216 = lengthof r185;

        l217 = 0L;

        r4 = newarray (long)[i216];

        $i10 = lengthof r185;

        r5 = newarray (long)[$i10];

        $i11 = lengthof r185;

        r6 = newarray (java.util.ArrayList)[$i11];

        l218 = 0L;

        l219 = 0L;

        l221 = 0L;

        i223 = i213 - 1;

        l224 = 0L;

        l225 = 0L;

        l226 = 0L;

        l227 = 0L;

        l228 = 0L;

        r187 = null;

        z74 = 0;

        l229 = 0L;

        r188 = r156;

        r189 = $r10;

     label042:
        if i223 < 0 goto label124;

        $r52 = virtualinvoke r158.<java.util.ArrayList: java.lang.Object get(int)>(i223);

        r192 = (com.android.server.am.ProcessRecord) $r52;

        entermonitor r0;

     label043:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        r193 = r192.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        i230 = r192.<com.android.server.am.ProcessRecord: int pid>;

        i231 = virtualinvoke r192.<com.android.server.am.ProcessRecord: int getSetAdjWithServices()>();

        z75 = virtualinvoke r192.<com.android.server.am.ProcessRecord: boolean hasActivities()>();

        exitmonitor r0;

     label044:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        if r193 == null goto label118;

        if r187 != null goto label045;

        $r81 = new android.os.Debug$MemoryInfo;

        specialinvoke $r81.<android.os.Debug$MemoryInfo: void <init>()>();

        r187 = $r81;

        goto label045;

     label045:
        $z40 = r188.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean dumpDetails>;

        if $z40 != 0 goto label048;

        if z0 != 0 goto label046;

        $z49 = r188.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean oomOnly>;

        if $z49 != 0 goto label046;

        goto label048;

     label046:
        l232 = staticinvoke <android.os.SystemClock: long currentThreadTimeMillis()>();

        l233 = staticinvoke <android.os.Debug: long getPss(int,long[],long[])>(i230, r163, null);

        $b187 = l233 cmp 0L;

        if $b187 != 0 goto label047;

        goto label049;

     label047:
        $i188 = (int) l233;

        r187.<android.os.Debug$MemoryInfo: int dalvikPss> = $i188;

        l234 = staticinvoke <android.os.SystemClock: long currentThreadTimeMillis()>();

        $l189 = r163[0];

        $i190 = (int) $l189;

        r187.<android.os.Debug$MemoryInfo: int dalvikPrivateDirty> = $i190;

        $l191 = r163[2];

        $i192 = (int) $l191;

        r187.<android.os.Debug$MemoryInfo: int dalvikRss> = $i192;

        b235 = 3;

        goto label051;

     label048:
        l232 = staticinvoke <android.os.SystemClock: long currentThreadTimeMillis()>();

        $z41 = staticinvoke <android.os.Debug: boolean getMemoryInfo(int,android.os.Debug$MemoryInfo)>(i230, r187);

        if $z41 != 0 goto label050;

     label049:
        r195 = r186;

        r197 = r180;

        r198 = r181;

        r199 = r189;

        goto label119;

     label050:
        l234 = staticinvoke <android.os.SystemClock: long currentThreadTimeMillis()>();

        z74 = r187.<android.os.Debug$MemoryInfo: boolean hasSwappedOutPss>;

        b235 = 4;

     label051:
        $z42 = r188.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean isCheckinRequest>;

        if $z42 != 0 goto label052;

        $z48 = r188.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean dumpDetails>;

        if $z48 == 0 goto label052;

        $r73 = new java.lang.StringBuilder;

        specialinvoke $r73.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n** MEMINFO in pid ");

        virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i230);

        virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [");

        $r77 = r192.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r77);

        virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] **");

        $r80 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r80);

     label052:
        $z76 = r188.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean dumpDetails>;

        if $z76 == 0 goto label075;

        $z45 = r188.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean localOnly>;

        if $z45 == 0 goto label054;

        z77 = r188.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean isCheckinRequest>;

        z78 = r188.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean dumpFullDetails>;

        z79 = r188.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean dumpDalvik>;

        $z46 = r188.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean dumpSummaryOnly>;

        $r72 = r192.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        staticinvoke <android.app.ActivityThread: void dumpMemInfoTable(java.io.PrintWriter,android.os.Debug$MemoryInfo,boolean,boolean,boolean,boolean,int,java.lang.String,long,long,long,long,long,long)>(r1, r187, z77, z78, z79, $z46, i230, $r72, 0L, 0L, 0L, 0L, 0L, 0L);

        $z47 = r188.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean isCheckinRequest>;

        if $z47 == 0 goto label053;

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        goto label075;

     label053:
        goto label075;

     label054:
        r202 = r188;

        virtualinvoke r1.<java.io.PrintWriter: void flush()>();

     label055:
        r203 = new com.android.internal.os.TransferPipe;

        specialinvoke r203.<com.android.internal.os.TransferPipe: void <init>()>();

     label056:
        r9 = virtualinvoke r203.<com.android.internal.os.TransferPipe: android.os.ParcelFileDescriptor getWriteFd()>();

        z1 = r188.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean isCheckinRequest>;

        z80 = r188.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean dumpFullDetails>;

        z81 = r188.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean dumpDalvik>;

        z82 = r188.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean dumpSummaryOnly>;

        z2 = r188.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean dumpUnreachable>;

     label057:
        interfaceinvoke r193.<android.app.IApplicationThread: void dumpMemInfo(android.os.ParcelFileDescriptor,android.os.Debug$MemoryInfo,boolean,boolean,boolean,boolean,boolean,java.lang.String[])>(r9, r187, z1, z80, z81, z82, z2, r157);

        z83 = r188.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean dumpUnreachable>;

     label058:
        if z83 == 0 goto label059;

        l237 = 30000L;

        goto label060;

     label059:
        l237 = 5000L;

     label060:
        virtualinvoke r203.<com.android.internal.os.TransferPipe: void go(java.io.FileDescriptor,long)>(r154, l237);

     label061:
        virtualinvoke r203.<com.android.internal.os.TransferPipe: void kill()>();

     label062:
        goto label074;

     label063:
        $r153 := @caughtexception;

        r205 = $r153;

        goto label066;

     label064:
        $r143 := @caughtexception;

        r205 = $r143;

        goto label066;

     label065:
        $r148 := @caughtexception;

        r205 = $r148;

     label066:
        virtualinvoke r203.<com.android.internal.os.TransferPipe: void kill()>();

     label067:
        throw r205;

     label068:
        $r138 := @caughtexception;

        r206 = $r138;

        goto label071;

     label069:
        $r150 := @caughtexception;

        r207 = $r150;

        goto label073;

     label070:
        $r146 := @caughtexception;

        r206 = $r146;

     label071:
        $z62 = r202.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean isCheckinRequest>;

        if $z62 != 0 goto label075;

        $r139 = new java.lang.StringBuilder;

        specialinvoke $r139.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r139.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got RemoteException! ");

        virtualinvoke $r139.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r206);

        $r142 = virtualinvoke $r139.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r142);

        virtualinvoke r1.<java.io.PrintWriter: void flush()>();

        goto label075;

     label072:
        $r125 := @caughtexception;

        r207 = $r125;

     label073:
        $z61 = r202.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean isCheckinRequest>;

        if $z61 != 0 goto label074;

        $r126 = new java.lang.StringBuilder;

        specialinvoke $r126.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r126.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got IoException! ");

        virtualinvoke $r126.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r207);

        $r129 = virtualinvoke $r126.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r129);

        virtualinvoke r1.<java.io.PrintWriter: void flush()>();

     label074:
        goto label075;

     label075:
        $i238 = virtualinvoke r187.<android.os.Debug$MemoryInfo: int getTotalPss()>();

        l1 = (long) $i238;

        $i239 = virtualinvoke r187.<android.os.Debug$MemoryInfo: int getTotalUss()>();

        l240 = (long) $i239;

        $i241 = virtualinvoke r187.<android.os.Debug$MemoryInfo: int getTotalRss()>();

        l2 = (long) $i241;

        $i242 = virtualinvoke r187.<android.os.Debug$MemoryInfo: int getTotalSwappedOutPss()>();

        l243 = (long) $i242;

        entermonitor r0;

     label076:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        r212 = r192.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

     label077:
        if r212 == null goto label097;

     label078:
        i244 = virtualinvoke r192.<com.android.server.am.ProcessRecord: int getSetAdjWithServices()>();

     label079:
        if i231 != i244 goto label095;

     label080:
        r213 = r192.<com.android.server.am.ProcessRecord: com.android.internal.app.procstats.ProcessState baseProcessTracker>;

     label081:
        $l183 = l234 - l232;

        $r65 = r192.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        $r66 = $r65.<com.android.server.am.ProcessRecord$PackageList: android.util.ArrayMap mPkgList>;

        virtualinvoke r213.<com.android.internal.app.procstats.ProcessState: void addPss(long,long,long,boolean,int,long,android.util.ArrayMap)>(l1, l240, l2, 1, b235, $l183, $r66);

     label082:
        $r67 = r192.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        $i184 = virtualinvoke $r67.<com.android.server.am.ProcessRecord$PackageList: int size()>();

        i251 = $i184 - 1;

     label083:
        if i251 < 0 goto label092;

     label084:
        $r68 = r192.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        r214 = virtualinvoke $r68.<com.android.server.am.ProcessRecord$PackageList: com.android.internal.app.procstats.ProcessStats$ProcessStateHolder valueAt(int)>(i251);

     label085:
        $r69 = r192.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        i255 = $r69.<android.content.pm.ApplicationInfo: int uid>;

     label086:
        $r70 = r214.<com.android.internal.app.procstats.ProcessStats$ProcessStateHolder: com.android.internal.app.procstats.ProcessState state>;

        r215 = virtualinvoke $r70.<com.android.internal.app.procstats.ProcessState: java.lang.String getName()>();

        $r71 = r214.<com.android.internal.app.procstats.ProcessStats$ProcessStateHolder: com.android.internal.app.procstats.ProcessState state>;

        r216 = virtualinvoke $r71.<com.android.internal.app.procstats.ProcessState: java.lang.String getPackage()>();

     label087:
        $l186 = l234 - l232;

        $l185 = r214.<com.android.internal.app.procstats.ProcessStats$ProcessStateHolder: long appVersion>;

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int,java.lang.String,java.lang.String,long,long,long,int,long,long)>(18, i255, r215, r216, l1, l240, l2, b235, $l186, $l185);

     label088:
        i251 = i251 + -1;

        goto label083;

     label089:
        $r104 := @caughtexception;

        r217 = $r104;

        goto label115;

     label090:
        $r111 := @caughtexception;

        r217 = $r111;

        goto label115;

     label091:
        $r117 := @caughtexception;

        r217 = $r117;

        goto label115;

     label092:
        goto label097;

     label093:
        $r145 := @caughtexception;

        r217 = $r145;

        goto label115;

     label094:
        $r136 := @caughtexception;

        r217 = $r136;

        goto label115;

     label095:
        goto label097;

     label096:
        $r107 := @caughtexception;

        r217 = $r107;

        goto label115;

     label097:
        r218 = r180;

     label098:
        exitmonitor r0;

     label099:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        $z84 = r188.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean isCheckinRequest>;

        if $z84 != 0 goto label111;

        if r187 == null goto label111;

        l256 = l218 + l1;

        l257 = l219 + l243;

        $r53 = new java.lang.StringBuilder;

        specialinvoke $r53.<java.lang.StringBuilder: void <init>()>();

        $r54 = r192.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r54);

        virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (pid ");

        virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i230);

        if z75 == 0 goto label100;

        r220 = " / activities)";

        goto label101;

     label100:
        r220 = ")";

     label101:
        virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r220);

        $r59 = new com.android.server.am.ActivityManagerService$MemItem;

        $r60 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>();

        $r61 = r192.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        specialinvoke $r59.<com.android.server.am.ActivityManagerService$MemItem: void <init>(java.lang.String,java.lang.String,long,long,long,int,boolean)>($r60, $r61, l1, l243, l2, i230, z75);

        virtualinvoke r189.<java.util.ArrayList: boolean add(java.lang.Object)>($r59);

        virtualinvoke r218.<android.util.SparseArray: void put(int,java.lang.Object)>(i230, $r59);

        i259 = r187.<android.os.Debug$MemoryInfo: int nativePss>;

        $l131 = (long) i259;

        l3 = l215 + $l131;

        $i132 = r187.<android.os.Debug$MemoryInfo: int nativeSwappedOutPss>;

        $l133 = (long) $i132;

        l4 = l217 + $l133;

        $i134 = r187.<android.os.Debug$MemoryInfo: int nativeRss>;

        $l135 = (long) $i134;

        l5 = l214 + $l135;

        $i136 = r187.<android.os.Debug$MemoryInfo: int dalvikPss>;

        $l137 = (long) $i136;

        l6 = l224 + $l137;

        $i138 = r187.<android.os.Debug$MemoryInfo: int dalvikSwappedOutPss>;

        $l139 = (long) $i138;

        l7 = l225 + $l139;

        $i140 = r187.<android.os.Debug$MemoryInfo: int dalvikRss>;

        $l141 = (long) $i140;

        l8 = l226 + $l141;

        i261 = 0;

        r223 = r181;

        r224 = r189;

     label102:
        $i262 = lengthof r223;

        if i261 >= $i262 goto label103;

        $l169 = r223[i261];

        $i168 = i261 + 17;

        $i170 = virtualinvoke r187.<android.os.Debug$MemoryInfo: int getOtherPss(int)>($i168);

        $l171 = (long) $i170;

        $l172 = $l169 + $l171;

        r223[i261] = $l172;

        $l174 = r182[i261];

        $i173 = i261 + 17;

        $i175 = virtualinvoke r187.<android.os.Debug$MemoryInfo: int getOtherSwappedOutPss(int)>($i173);

        $l176 = (long) $i175;

        $l177 = $l174 + $l176;

        r182[i261] = $l177;

        $l179 = r183[i261];

        $i178 = i261 + 17;

        $i180 = virtualinvoke r187.<android.os.Debug$MemoryInfo: int getOtherRss(int)>($i178);

        $l181 = (long) $i180;

        $l182 = $l179 + $l181;

        r183[i261] = $l182;

        i261 = i261 + 1;

        goto label102;

     label103:
        $i142 = r187.<android.os.Debug$MemoryInfo: int otherPss>;

        $l143 = (long) $i142;

        l263 = l227 + $l143;

        $i144 = r187.<android.os.Debug$MemoryInfo: int otherRss>;

        $l145 = (long) $i144;

        l264 = l229 + $l145;

        $i146 = r187.<android.os.Debug$MemoryInfo: int otherSwappedOutPss>;

        $l147 = (long) $i146;

        l265 = l228 + $l147;

        i266 = 0;

     label104:
        if i266 >= 17 goto label105;

        $i159 = virtualinvoke r187.<android.os.Debug$MemoryInfo: int getOtherPss(int)>(i266);

        l267 = (long) $i159;

        $l160 = r2[i266];

        $l161 = $l160 + l267;

        r2[i266] = $l161;

        l263 = l263 - l267;

        $i162 = virtualinvoke r187.<android.os.Debug$MemoryInfo: int getOtherSwappedOutPss(int)>(i266);

        l268 = (long) $i162;

        $l163 = r184[i266];

        $l164 = $l163 + l268;

        r184[i266] = $l164;

        l265 = l265 - l268;

        $i165 = virtualinvoke r187.<android.os.Debug$MemoryInfo: int getOtherRss(int)>(i266);

        l269 = (long) $i165;

        $l166 = r3[i266];

        $l167 = $l166 + l269;

        r3[i266] = $l167;

        l264 = l264 - l269;

        i266 = i266 + 1;

        goto label104;

     label105:
        l270 = l221;

        if i231 < 900 goto label106;

        l270 = l221 + l1;

     label106:
        i272 = 0;

     label107:
        r227 = r186;

        r228 = r186;

        r198 = r223;

        r199 = r224;

        l273 = l5;

        l274 = l3;

        l217 = l4;

        l275 = l6;

        l276 = l7;

        l226 = l8;

        l227 = l263;

        l228 = l265;

        l229 = l264;

        l218 = l256;

        l219 = l257;

        l221 = l270;

        $i277 = lengthof r186;

        if i272 >= $i277 goto label112;

        $i148 = lengthof r186;

        $i149 = $i148 - 1;

        if i272 == $i149 goto label109;

        r229 = <com.android.server.am.ActivityManagerService: int[] DUMP_MEM_OOM_ADJ>;

        $i156 = r229[i272];

        if i231 < $i156 goto label108;

        $i157 = i272 + 1;

        $i158 = r229[$i157];

        if i231 >= $i158 goto label108;

        goto label109;

     label108:
        i272 = i272 + 1;

        r186 = r227;

        goto label107;

     label109:
        $l150 = r227[i272];

        $l151 = $l150 + l1;

        r227[i272] = $l151;

        $l152 = r4[i272];

        $l153 = $l152 + l243;

        r4[i272] = $l153;

        $r62 = r6[i272];

        if $r62 != null goto label110;

        $r64 = new java.util.ArrayList;

        specialinvoke $r64.<java.util.ArrayList: void <init>()>();

        r6[i272] = $r64;

     label110:
        $r63 = r6[i272];

        virtualinvoke $r63.<java.util.ArrayList: boolean add(java.lang.Object)>($r59);

        $l154 = r5[i272];

        $l155 = $l154 + l2;

        r5[i272] = $l155;

        r228 = r227;

        r198 = r223;

        r199 = r224;

        l273 = l5;

        l274 = l3;

        l217 = l4;

        l275 = l6;

        l276 = l7;

        l226 = l8;

        l227 = l263;

        l228 = l265;

        l229 = l264;

        l218 = l256;

        l219 = l257;

        l221 = l270;

        goto label112;

     label111:
        l276 = l225;

        l275 = l224;

        l274 = l215;

        l273 = l214;

        r199 = r189;

        r198 = r181;

        r228 = r186;

     label112:
        r195 = r228;

        r197 = r218;

        l214 = l273;

        l215 = l274;

        l224 = l275;

        l225 = l276;

        goto label119;

     label113:
        $r109 := @caughtexception;

        r217 = $r109;

        goto label115;

     label114:
        $r144 := @caughtexception;

        r217 = $r144;

     label115:
        exitmonitor r0;

     label116:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw r217;

     label117:
        $r130 := @caughtexception;

        r217 = $r130;

        goto label115;

     label118:
        r199 = r189;

        r198 = r181;

        r197 = r180;

        r195 = r186;

     label119:
        i223 = i223 + -1;

        r181 = r198;

        r186 = r195;

        r180 = r197;

        r189 = r199;

        goto label042;

     label120:
        $r137 := @caughtexception;

        r237 = $r137;

     label121:
        exitmonitor r0;

     label122:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw r237;

     label123:
        $r121 := @caughtexception;

        r237 = $r121;

        goto label121;

     label124:
        r238 = r189;

        r239 = r163;

        r241 = r181;

        if z71 == 0 goto label265;

        r242 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.os.ProcessCpuTracker mProcessCpuTracker>;

        entermonitor r242;

     label125:
        $r12 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.os.ProcessCpuTracker mProcessCpuTracker>;

        i278 = virtualinvoke $r12.<com.android.internal.os.ProcessCpuTracker: int countStats()>();

     label126:
        i279 = 0;

        r243 = null;

        l282 = l217;

        l284 = l219;

        l285 = l228;

        l286 = l214;

        l287 = l226;

        l288 = l225;

        l289 = l215;

        l290 = 0L;

     label127:
        if i279 >= i278 goto label201;

     label128:
        $r42 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.os.ProcessCpuTracker mProcessCpuTracker>;

        r244 = virtualinvoke $r42.<com.android.internal.os.ProcessCpuTracker: com.android.internal.os.ProcessCpuTracker$Stats getStats(int)>(i279);

        $l84 = r244.<com.android.internal.os.ProcessCpuTracker$Stats: long vsize>;

        $b85 = $l84 cmp 0L;

        if $b85 <= 0 goto label198;

        $i86 = r244.<com.android.internal.os.ProcessCpuTracker$Stats: int pid>;

        i291 = virtualinvoke r180.<android.util.SparseArray: int indexOfKey(int)>($i86);

     label129:
        if i291 >= 0 goto label198;

        if r243 != null goto label133;

     label130:
        r245 = new android.os.Debug$MemoryInfo;

        specialinvoke r245.<android.os.Debug$MemoryInfo: void <init>()>();

     label131:
        goto label134;

     label132:
        $r152 := @caughtexception;

        r246 = $r152;

        goto label262;

     label133:
        r245 = r243;

     label134:
        if z0 != 0 goto label139;

     label135:
        $z39 = r156.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean oomOnly>;

        if $z39 != 0 goto label139;

        $i130 = r244.<com.android.internal.os.ProcessCpuTracker$Stats: int pid>;

        z85 = staticinvoke <android.os.Debug: boolean getMemoryInfo(int,android.os.Debug$MemoryInfo)>($i130, r245);

     label136:
        if z85 != 0 goto label137;

        goto label142;

     label137:
        goto label145;

     label138:
        $r149 := @caughtexception;

        r246 = $r149;

        goto label262;

     label139:
        i292 = r244.<com.android.internal.os.ProcessCpuTracker$Stats: int pid>;

     label140:
        l293 = staticinvoke <android.os.Debug: long getPss(int,long[],long[])>(i292, r239, null);

     label141:
        $b87 = l293 cmp 0L;

        if $b87 != 0 goto label143;

     label142:
        r249 = r245;

        l294 = l227;

        l295 = l285;

        r250 = r239;

        goto label199;

     label143:
        i296 = (int) l293;

     label144:
        r245.<android.os.Debug$MemoryInfo: int nativePss> = i296;

        $l88 = r239[0];

        $i89 = (int) $l88;

        r245.<android.os.Debug$MemoryInfo: int nativePrivateDirty> = $i89;

        $l90 = r239[2];

        $i91 = (int) $l90;

        r245.<android.os.Debug$MemoryInfo: int nativeRss> = $i91;

     label145:
        $i92 = virtualinvoke r245.<android.os.Debug$MemoryInfo: int getTotalPss()>();

        l297 = (long) $i92;

        $i93 = virtualinvoke r245.<android.os.Debug$MemoryInfo: int getTotalSwappedOutPss()>();

        l298 = (long) $i93;

        i299 = virtualinvoke r245.<android.os.Debug$MemoryInfo: int getTotalRss()>();

     label146:
        r251 = r239;

        l300 = (long) i299;

        l218 = l218 + l297;

        l284 = l284 + l298;

     label147:
        r252 = new com.android.server.am.ActivityManagerService$MemItem;

     label148:
        r253 = new java.lang.StringBuilder;

        specialinvoke r253.<java.lang.StringBuilder: void <init>()>();

        $r43 = r244.<com.android.internal.os.ProcessCpuTracker$Stats: java.lang.String name>;

        virtualinvoke r253.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);

        virtualinvoke r253.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (pid ");

        $i94 = r244.<com.android.internal.os.ProcessCpuTracker$Stats: int pid>;

        virtualinvoke r253.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i94);

        virtualinvoke r253.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r48 = virtualinvoke r253.<java.lang.StringBuilder: java.lang.String toString()>();

        $r49 = r244.<com.android.internal.os.ProcessCpuTracker$Stats: java.lang.String name>;

        $i95 = virtualinvoke r245.<android.os.Debug$MemoryInfo: int getSummaryTotalSwapPss()>();

        $l97 = (long) $i95;

        $i96 = r244.<com.android.internal.os.ProcessCpuTracker$Stats: int pid>;

        specialinvoke r252.<com.android.server.am.ActivityManagerService$MemItem: void <init>(java.lang.String,java.lang.String,long,long,long,int,boolean)>($r48, $r49, l297, $l97, l300, $i96, 0);

     label149:
        r254 = r238;

     label150:
        virtualinvoke r238.<java.util.ArrayList: boolean add(java.lang.Object)>(r252);

        i301 = r245.<android.os.Debug$MemoryInfo: int nativePss>;

     label151:
        l302 = (long) i301;

     label152:
        i303 = r245.<android.os.Debug$MemoryInfo: int nativeSwappedOutPss>;

     label153:
        $l98 = (long) i303;

        l304 = l282 + $l98;

     label154:
        i305 = r245.<android.os.Debug$MemoryInfo: int nativeRss>;

     label155:
        $l99 = (long) i305;

        l306 = l286 + $l99;

     label156:
        i307 = r245.<android.os.Debug$MemoryInfo: int dalvikPss>;

     label157:
        l308 = (long) i307;

     label158:
        i309 = r245.<android.os.Debug$MemoryInfo: int dalvikSwappedOutPss>;

     label159:
        l310 = (long) i309;

     label160:
        i311 = r245.<android.os.Debug$MemoryInfo: int dalvikRss>;

     label161:
        l312 = (long) i311;

        i313 = 0;

     label162:
        $i315 = lengthof r241;

        if i313 >= $i315 goto label171;

     label163:
        l316 = r241[i313];

     label164:
        $i121 = i313 + 17;

        i317 = virtualinvoke r245.<android.os.Debug$MemoryInfo: int getOtherPss(int)>($i121);

     label165:
        l318 = (long) i317;

        $l122 = l316 + l318;

        r241[i313] = $l122;

        l319 = r182[i313];

     label166:
        $i123 = i313 + 17;

        i320 = virtualinvoke r245.<android.os.Debug$MemoryInfo: int getOtherSwappedOutPss(int)>($i123);

     label167:
        l321 = (long) i320;

        $l124 = l319 + l321;

        r182[i313] = $l124;

     label168:
        $l126 = r183[i313];

        $i125 = i313 + 17;

        $i127 = virtualinvoke r245.<android.os.Debug$MemoryInfo: int getOtherRss(int)>($i125);

        $l128 = (long) $i127;

        $l129 = $l126 + $l128;

        r183[i313] = $l129;

     label169:
        i313 = i313 + 1;

        goto label162;

     label170:
        $r114 := @caughtexception;

        r246 = $r114;

        goto label262;

     label171:
        $i100 = r245.<android.os.Debug$MemoryInfo: int otherPss>;

        $l101 = (long) $i100;

        l322 = l227 + $l101;

        $i102 = r245.<android.os.Debug$MemoryInfo: int otherSwappedOutPss>;

        $l103 = (long) $i102;

        l323 = l285 + $l103;

        $i104 = r245.<android.os.Debug$MemoryInfo: int otherRss>;

        $l105 = (long) $i104;

        l324 = l229 + $l105;

     label172:
        i325 = 0;

        l326 = l322;

     label173:
        if i325 >= 17 goto label180;

     label174:
        $i112 = virtualinvoke r245.<android.os.Debug$MemoryInfo: int getOtherPss(int)>(i325);

        l327 = (long) $i112;

     label175:
        $l113 = r2[i325];

        $l114 = $l113 + l327;

        r2[i325] = $l114;

        l326 = l326 - l327;

     label176:
        $i115 = virtualinvoke r245.<android.os.Debug$MemoryInfo: int getOtherSwappedOutPss(int)>(i325);

        l328 = (long) $i115;

     label177:
        $l116 = r184[i325];

        $l117 = $l116 + l328;

        r184[i325] = $l117;

        l323 = l323 - l328;

     label178:
        $i118 = virtualinvoke r245.<android.os.Debug$MemoryInfo: int getOtherRss(int)>(i325);

        l329 = (long) $i118;

     label179:
        $l119 = r3[i325];

        $l120 = $l119 + l329;

        r3[i325] = $l120;

        l324 = l324 - l329;

        i325 = i325 + 1;

        goto label173;

     label180:
        $l106 = r186[0];

        $l107 = $l106 + l297;

        r186[0] = $l107;

        $l108 = r4[0];

        $l109 = $l108 + l298;

        r4[0] = $l109;

        $r50 = r6[0];

        if $r50 != null goto label183;

     label181:
        r255 = new java.util.ArrayList;

        specialinvoke r255.<java.util.ArrayList: void <init>()>();

     label182:
        r6[0] = r255;

     label183:
        $r51 = r6[0];

        virtualinvoke $r51.<java.util.ArrayList: boolean add(java.lang.Object)>(r252);

     label184:
        $l110 = r5[0];

        $l111 = $l110 + l300;

        r5[0] = $l111;

        l224 = l224 + l308;

        l290 = l290 + l297;

        l289 = l302 + l289;

        l288 = l288 + l310;

        l287 = l287 + l312;

        r238 = r254;

        r249 = r245;

        l282 = l304;

        l286 = l306;

        l294 = l326;

        l295 = l323;

        l229 = l324;

        r250 = r251;

        goto label199;

     label185:
        $r113 := @caughtexception;

        r246 = $r113;

        goto label262;

     label186:
        $r122 := @caughtexception;

        r246 = $r122;

        goto label262;

     label187:
        $r132 := @caughtexception;

        r246 = $r132;

        goto label262;

     label188:
        $r120 := @caughtexception;

        r246 = $r120;

        goto label262;

     label189:
        $r133 := @caughtexception;

        r246 = $r133;

        goto label262;

     label190:
        $r134 := @caughtexception;

        r246 = $r134;

        goto label262;

     label191:
        $r115 := @caughtexception;

        r246 = $r115;

        goto label262;

     label192:
        $r110 := @caughtexception;

        r246 = $r110;

        goto label262;

     label193:
        $r118 := @caughtexception;

        r246 = $r118;

        goto label262;

     label194:
        $r147 := @caughtexception;

        r246 = $r147;

        goto label262;

     label195:
        $r106 := @caughtexception;

        r246 = $r106;

        goto label262;

     label196:
        $r112 := @caughtexception;

        r246 = $r112;

        goto label262;

     label197:
        $r135 := @caughtexception;

        r246 = $r135;

        goto label262;

     label198:
        r250 = r239;

        l295 = l285;

        l294 = l227;

        r249 = r243;

     label199:
        i279 = i279 + 1;

        r243 = r249;

        l227 = l294;

        l285 = l295;

        r239 = r250;

        goto label127;

     label200:
        $r124 := @caughtexception;

        r246 = $r124;

        goto label262;

     label201:
        exitmonitor r242;

     label202:
        $r13 = new java.util.ArrayList;

        specialinvoke $r13.<java.util.ArrayList: void <init>()>();

        $r14 = new com.android.server.am.ActivityManagerService$MemItem;

        specialinvoke $r14.<com.android.server.am.ActivityManagerService$MemItem: void <init>(java.lang.String,java.lang.String,long,long,long,int)>("Native", "Native", l289, l282, l286, -1);

        virtualinvoke $r13.<java.util.ArrayList: boolean add(java.lang.Object)>($r14);

        $r15 = new com.android.server.am.ActivityManagerService$MemItem;

        specialinvoke $r15.<com.android.server.am.ActivityManagerService$MemItem: void <init>(java.lang.String,java.lang.String,long,long,long,int)>("Dalvik", "Dalvik", l224, l288, l287, -2);

        virtualinvoke $r13.<java.util.ArrayList: boolean add(java.lang.Object)>($r15);

        $r16 = new com.android.server.am.ActivityManagerService$MemItem;

        specialinvoke $r16.<com.android.server.am.ActivityManagerService$MemItem: void <init>(java.lang.String,java.lang.String,long,long,long,int)>("Unknown", "Unknown", l227, l285, l229, -3);

        virtualinvoke $r13.<java.util.ArrayList: boolean add(java.lang.Object)>($r16);

        i330 = 0;

     label203:
        if i330 >= 17 goto label204;

        r257 = staticinvoke <android.os.Debug$MemoryInfo: java.lang.String getOtherLabel(int)>(i330);

        $r41 = new com.android.server.am.ActivityManagerService$MemItem;

        $l83 = r2[i330];

        $l82 = r184[i330];

        $l81 = r3[i330];

        specialinvoke $r41.<com.android.server.am.ActivityManagerService$MemItem: void <init>(java.lang.String,java.lang.String,long,long,long,int)>(r257, r257, $l83, $l82, $l81, i330);

        virtualinvoke $r13.<java.util.ArrayList: boolean add(java.lang.Object)>($r41);

        i330 = i330 + 1;

        goto label203;

     label204:
        $i12 = lengthof r241;

        if $i12 <= 0 goto label212;

        r258 = virtualinvoke $r13.<java.util.ArrayList: java.util.Iterator iterator()>();

     label205:
        $z86 = interfaceinvoke r258.<java.util.Iterator: boolean hasNext()>();

        if $z86 == 0 goto label212;

        $r38 = interfaceinvoke r258.<java.util.Iterator: java.lang.Object next()>();

        r259 = (com.android.server.am.ActivityManagerService$MemItem) $r38;

        $i73 = r259.<com.android.server.am.ActivityManagerService$MemItem: int id>;

        if $i73 != -2 goto label206;

        i331 = 0;

        b332 = 3;

        goto label209;

     label206:
        $i74 = r259.<com.android.server.am.ActivityManagerService$MemItem: int id>;

        if $i74 != 0 goto label207;

        i331 = 4;

        b332 = 9;

        goto label209;

     label207:
        $i75 = r259.<com.android.server.am.ActivityManagerService$MemItem: int id>;

        if $i75 != 10 goto label208;

        i331 = 10;

        b332 = 12;

        goto label209;

     label208:
        $i76 = r259.<com.android.server.am.ActivityManagerService$MemItem: int id>;

        if $i76 != 12 goto label205;

        i331 = 13;

        b332 = 14;

     label209:
        $r260 = new java.util.ArrayList;

        specialinvoke $r260.<java.util.ArrayList: void <init>()>();

        r259.<com.android.server.am.ActivityManagerService$MemItem: java.util.ArrayList subitems> = $r260;

     label210:
        if i331 > b332 goto label211;

        $i77 = i331 + 17;

        r261 = staticinvoke <android.os.Debug$MemoryInfo: java.lang.String getOtherLabel(int)>($i77);

        $r40 = r259.<com.android.server.am.ActivityManagerService$MemItem: java.util.ArrayList subitems>;

        $r39 = new com.android.server.am.ActivityManagerService$MemItem;

        $l80 = r241[i331];

        $l79 = r182[i331];

        $l78 = r183[i331];

        specialinvoke $r39.<com.android.server.am.ActivityManagerService$MemItem: void <init>(java.lang.String,java.lang.String,long,long,long,int)>(r261, r261, $l80, $l79, $l78, i331);

        virtualinvoke $r40.<java.util.ArrayList: boolean add(java.lang.Object)>($r39);

        i331 = i331 + 1;

        goto label210;

     label211:
        goto label205;

     label212:
        $r17 = new java.util.ArrayList;

        specialinvoke $r17.<java.util.ArrayList: void <init>()>();

        i333 = 0;

     label213:
        $i334 = lengthof r186;

        if i333 >= $i334 goto label217;

        $l67 = r186[i333];

        $b68 = $l67 cmp 0L;

        if $b68 == 0 goto label216;

        $z33 = r156.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean isCompact>;

        if $z33 == 0 goto label214;

        $r37 = <com.android.server.am.ActivityManagerService: java.lang.String[] DUMP_MEM_OOM_COMPACT_LABEL>;

        r263 = $r37[i333];

        goto label215;

     label214:
        $r33 = <com.android.server.am.ActivityManagerService: java.lang.String[] DUMP_MEM_OOM_LABEL>;

        r263 = $r33[i333];

     label215:
        $r34 = new com.android.server.am.ActivityManagerService$MemItem;

        $l72 = r186[i333];

        $l71 = r4[i333];

        $l70 = r5[i333];

        $r35 = <com.android.server.am.ActivityManagerService: int[] DUMP_MEM_OOM_ADJ>;

        $i69 = $r35[i333];

        specialinvoke $r34.<com.android.server.am.ActivityManagerService$MemItem: void <init>(java.lang.String,java.lang.String,long,long,long,int)>(r263, r263, $l72, $l71, $l70, $i69);

        $r36 = r6[i333];

        $r34.<com.android.server.am.ActivityManagerService$MemItem: java.util.ArrayList subitems> = $r36;

        virtualinvoke $r17.<java.util.ArrayList: boolean add(java.lang.Object)>($r34);

        goto label216;

     label216:
        i333 = i333 + 1;

        goto label213;

     label217:
        $z9 = r156.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean isCompact>;

        if $z9 != 0 goto label218;

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label218:
        if z0 != 0 goto label219;

        $z30 = r156.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean oomOnly>;

        if $z30 != 0 goto label219;

        $z31 = r156.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean isCompact>;

        if $z31 != 0 goto label219;

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Total RSS by process:");

        $z32 = r156.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean isCompact>;

        staticinvoke <com.android.server.am.ActivityManagerService: void dumpMemItems(java.io.PrintWriter,java.lang.String,java.lang.String,java.util.ArrayList,boolean,boolean,boolean,boolean)>(r1, "  ", "proc", r238, 1, $z32, 0, 0);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        goto label219;

     label219:
        $z87 = r156.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean isCompact>;

        if $z87 != 0 goto label220;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Total RSS by OOM adjustment:");

        goto label220;

     label220:
        $z10 = r156.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean isCompact>;

        staticinvoke <com.android.server.am.ActivityManagerService: void dumpMemItems(java.io.PrintWriter,java.lang.String,java.lang.String,java.util.ArrayList,boolean,boolean,boolean,boolean)>(r1, "  ", "oom", $r17, 0, $z10, 0, 0);

        if z0 != 0 goto label224;

        $z27 = r156.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean oomOnly>;

        if $z27 != 0 goto label224;

        if r159 == null goto label221;

        r265 = r159;

        goto label222;

     label221:
        r265 = r1;

     label222:
        $z28 = r156.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean isCompact>;

        if $z28 != 0 goto label223;

        virtualinvoke r265.<java.io.PrintWriter: void println()>();

        virtualinvoke r265.<java.io.PrintWriter: void println(java.lang.String)>("Total RSS by category:");

     label223:
        $z29 = r156.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean isCompact>;

        staticinvoke <com.android.server.am.ActivityManagerService: void dumpMemItems(java.io.PrintWriter,java.lang.String,java.lang.String,java.util.ArrayList,boolean,boolean,boolean,boolean)>(r265, "  ", "cat", $r13, 1, $z29, 0, 0);

     label224:
        $z88 = r156.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean dumpSwapPss>;

        if $z88 == 0 goto label225;

        if z74 == 0 goto label225;

        $b66 = l284 cmp 0L;

        if $b66 == 0 goto label225;

        z89 = 1;

        goto label226;

     label225:
        z89 = 0;

     label226:
        r156.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean dumpSwapPss> = z89;

        if z0 != 0 goto label227;

        $z23 = r156.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean oomOnly>;

        if $z23 != 0 goto label227;

        $z24 = r156.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean isCompact>;

        if $z24 != 0 goto label227;

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Total PSS by process:");

        $z26 = r156.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean isCompact>;

        $z25 = r156.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean dumpSwapPss>;

        staticinvoke <com.android.server.am.ActivityManagerService: void dumpMemItems(java.io.PrintWriter,java.lang.String,java.lang.String,java.util.ArrayList,boolean,boolean,boolean,boolean)>(r1, "  ", "proc", r238, 1, $z26, 1, $z25);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        goto label227;

     label227:
        $z90 = r156.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean isCompact>;

        if $z90 != 0 goto label228;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Total PSS by OOM adjustment:");

     label228:
        $z12 = r156.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean isCompact>;

        $z11 = r156.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean dumpSwapPss>;

        staticinvoke <com.android.server.am.ActivityManagerService: void dumpMemItems(java.io.PrintWriter,java.lang.String,java.lang.String,java.util.ArrayList,boolean,boolean,boolean,boolean)>(r1, "  ", "oom", $r17, 0, $z12, 1, $z11);

        if z0 != 0 goto label232;

        $z19 = r156.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean oomOnly>;

        if $z19 != 0 goto label232;

        if r159 == null goto label229;

        r267 = r159;

        goto label230;

     label229:
        r267 = r1;

     label230:
        $z20 = r156.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean isCompact>;

        if $z20 != 0 goto label231;

        virtualinvoke r267.<java.io.PrintWriter: void println()>();

        virtualinvoke r267.<java.io.PrintWriter: void println(java.lang.String)>("Total PSS by category:");

     label231:
        $z22 = r156.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean isCompact>;

        $z21 = r156.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean dumpSwapPss>;

        staticinvoke <com.android.server.am.ActivityManagerService: void dumpMemItems(java.io.PrintWriter,java.lang.String,java.lang.String,java.util.ArrayList,boolean,boolean,boolean,boolean)>(r267, "  ", "cat", $r13, 1, $z22, 1, $z21);

     label232:
        $z91 = r156.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean isCompact>;

        if $z91 != 0 goto label233;

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label233:
        $r18 = new com.android.internal.util.MemInfoReader;

        specialinvoke $r18.<com.android.internal.util.MemInfoReader: void <init>()>();

        virtualinvoke $r18.<com.android.internal.util.MemInfoReader: void readMemInfo()>();

        $b13 = l290 cmp 0L;

        if $b13 <= 0 goto label239;

        entermonitor r0;

     label234:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        l335 = virtualinvoke $r18.<com.android.internal.util.MemInfoReader: long getCachedSizeKb()>();

        l336 = virtualinvoke $r18.<com.android.internal.util.MemInfoReader: long getFreeSizeKb()>();

        l337 = virtualinvoke $r18.<com.android.internal.util.MemInfoReader: long getZramTotalSizeKb()>();

        l338 = virtualinvoke $r18.<com.android.internal.util.MemInfoReader: long getKernelUsedSizeKb()>();

        $l65 = l335 * 1024L;

        $l64 = l336 * 1024L;

        $l63 = l337 * 1024L;

        $l62 = l338 * 1024L;

        $l61 = l290 * 1024L;

        staticinvoke <com.android.server.am.EventLogTags: void writeAmMeminfo(long,long,long,long,long)>($l65, $l64, $l63, $l62, $l61);

        $r32 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        virtualinvoke $r32.<com.android.server.am.ProcessStatsService: void addSysMemUsageLocked(long,long,long,long,long)>(l335, l336, l337, l338, l290);

        exitmonitor r0;

     label235:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        goto label239;

     label236:
        $r103 := @caughtexception;

     label237:
        exitmonitor r0;

     label238:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r103;

     label239:
        if z0 != 0 goto label246;

        $z18 = r156.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean isCompact>;

        if $z18 != 0 goto label245;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("Total RAM: ");

        $l60 = virtualinvoke $r18.<com.android.internal.util.MemInfoReader: long getTotalSizeKb()>();

        $r31 = staticinvoke <com.android.server.am.ActivityManagerService: java.lang.String stringifyKBSize(long)>($l60);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r31);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" (status ");

        i339 = r0.<com.android.server.am.ActivityManagerService: int mLastMemoryLevel>;

        if i339 == 0 goto label243;

        if i339 == 1 goto label242;

        if i339 == 2 goto label241;

        if i339 == 3 goto label240;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>(i339);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(")");

        goto label244;

     label240:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("critical)");

        goto label244;

     label241:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("low)");

        goto label244;

     label242:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("moderate)");

        goto label244;

     label243:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("normal)");

     label244:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" Free RAM: ");

        $l340 = virtualinvoke $r18.<com.android.internal.util.MemInfoReader: long getCachedSizeKb()>();

        $l341 = l221 + $l340;

        $l342 = virtualinvoke $r18.<com.android.internal.util.MemInfoReader: long getFreeSizeKb()>();

        $l343 = $l341 + $l342;

        $r271 = staticinvoke <com.android.server.am.ActivityManagerService: java.lang.String stringifyKBSize(long)>($l343);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r271);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" (");

        $r272 = staticinvoke <com.android.server.am.ActivityManagerService: java.lang.String stringifyKBSize(long)>(l221);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r272);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" cached pss + ");

        $l344 = virtualinvoke $r18.<com.android.internal.util.MemInfoReader: long getCachedSizeKb()>();

        $r273 = staticinvoke <com.android.server.am.ActivityManagerService: java.lang.String stringifyKBSize(long)>($l344);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r273);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" cached kernel + ");

        $l345 = virtualinvoke $r18.<com.android.internal.util.MemInfoReader: long getFreeSizeKb()>();

        $r274 = staticinvoke <com.android.server.am.ActivityManagerService: java.lang.String stringifyKBSize(long)>($l345);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r274);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(" free)");

        goto label246;

     label245:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("ram,");

        $l54 = virtualinvoke $r18.<com.android.internal.util.MemInfoReader: long getTotalSizeKb()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(long)>($l54);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $l55 = virtualinvoke $r18.<com.android.internal.util.MemInfoReader: long getCachedSizeKb()>();

        $l56 = l221 + $l55;

        $l57 = virtualinvoke $r18.<com.android.internal.util.MemInfoReader: long getFreeSizeKb()>();

        $l58 = $l56 + $l57;

        virtualinvoke r1.<java.io.PrintWriter: void print(long)>($l58);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $l59 = l218 - l221;

        virtualinvoke r1.<java.io.PrintWriter: void println(long)>($l59);

        goto label246;

     label246:
        l346 = virtualinvoke $r18.<com.android.internal.util.MemInfoReader: long getKernelUsedSizeKb()>();

        l347 = staticinvoke <android.os.Debug: long getIonHeapsSizeKb()>();

        l348 = l346;

        $b349 = l347 cmp 0L;

        if $b349 <= 0 goto label247;

        l350 = staticinvoke <android.os.Debug: long getIonMappedSizeKb()>();

        l351 = staticinvoke <android.os.Debug: long getIonPoolsSizeKb()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("      ION: ");

        $l52 = l347 + l351;

        $r27 = staticinvoke <com.android.server.am.ActivityManagerService: java.lang.String stringifyKBSize(long)>($l52);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r27);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" (");

        $r28 = staticinvoke <com.android.server.am.ActivityManagerService: java.lang.String stringifyKBSize(long)>(l350);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r28);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" mapped + ");

        $l53 = l347 - l350;

        $r29 = staticinvoke <com.android.server.am.ActivityManagerService: java.lang.String stringifyKBSize(long)>($l53);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r29);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" unmapped + ");

        $r30 = staticinvoke <com.android.server.am.ActivityManagerService: java.lang.String stringifyKBSize(long)>(l351);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r30);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(" pools)");

        l348 = l346 + l347;

     label247:
        $l14 = virtualinvoke $r18.<com.android.internal.util.MemInfoReader: long getTotalSizeKb()>();

        $l15 = l218 - l284;

        $l16 = $l14 - $l15;

        $l17 = virtualinvoke $r18.<com.android.internal.util.MemInfoReader: long getFreeSizeKb()>();

        $l18 = $l16 - $l17;

        $l19 = virtualinvoke $r18.<com.android.internal.util.MemInfoReader: long getCachedSizeKb()>();

        $l20 = $l18 - $l19;

        $l21 = $l20 - l348;

        $l22 = virtualinvoke $r18.<com.android.internal.util.MemInfoReader: long getZramTotalSizeKb()>();

        l352 = $l21 - $l22;

        $z13 = r156.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean isCompact>;

        if $z13 != 0 goto label248;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" Used RAM: ");

        $l49 = l218 - l221;

        $l50 = $l49 + l348;

        $r23 = staticinvoke <com.android.server.am.ActivityManagerService: java.lang.String stringifyKBSize(long)>($l50);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r23);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" (");

        $l51 = l218 - l221;

        $r24 = staticinvoke <com.android.server.am.ActivityManagerService: java.lang.String stringifyKBSize(long)>($l51);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r24);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" used pss + ");

        $r25 = staticinvoke <com.android.server.am.ActivityManagerService: java.lang.String stringifyKBSize(long)>(l348);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r25);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" kernel)\n");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" Lost RAM: ");

        $r26 = staticinvoke <com.android.server.am.ActivityManagerService: java.lang.String stringifyKBSize(long)>(l352);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r26);

        goto label249;

     label248:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("lostram,");

        virtualinvoke r1.<java.io.PrintWriter: void println(long)>(l352);

     label249:
        if z0 != 0 goto label259;

        $l23 = virtualinvoke $r18.<com.android.internal.util.MemInfoReader: long getZramTotalSizeKb()>();

        $b24 = $l23 cmp 0L;

        if $b24 == 0 goto label251;

        $z17 = r156.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean isCompact>;

        if $z17 != 0 goto label250;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("     ZRAM: ");

        $l44 = virtualinvoke $r18.<com.android.internal.util.MemInfoReader: long getZramTotalSizeKb()>();

        $r20 = staticinvoke <com.android.server.am.ActivityManagerService: java.lang.String stringifyKBSize(long)>($l44);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r20);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" physical used for ");

        $l45 = virtualinvoke $r18.<com.android.internal.util.MemInfoReader: long getSwapTotalSizeKb()>();

        $l46 = virtualinvoke $r18.<com.android.internal.util.MemInfoReader: long getSwapFreeSizeKb()>();

        $l47 = $l45 - $l46;

        $r21 = staticinvoke <com.android.server.am.ActivityManagerService: java.lang.String stringifyKBSize(long)>($l47);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r21);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" in swap (");

        $l48 = virtualinvoke $r18.<com.android.internal.util.MemInfoReader: long getSwapTotalSizeKb()>();

        $r22 = staticinvoke <com.android.server.am.ActivityManagerService: java.lang.String stringifyKBSize(long)>($l48);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r22);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(" total swap)");

        goto label251;

     label250:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("zram,");

        $l41 = virtualinvoke $r18.<com.android.internal.util.MemInfoReader: long getZramTotalSizeKb()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(long)>($l41);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $l42 = virtualinvoke $r18.<com.android.internal.util.MemInfoReader: long getSwapTotalSizeKb()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(long)>($l42);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $l43 = virtualinvoke $r18.<com.android.internal.util.MemInfoReader: long getSwapFreeSizeKb()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(long)>($l43);

        goto label251;

     label251:
        r275 = specialinvoke r0.<com.android.server.am.ActivityManagerService: long[] getKsmInfo()>();

        $z92 = r156.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean isCompact>;

        if $z92 != 0 goto label256;

        $l33 = r275[1];

        $b34 = $l33 cmp 0L;

        if $b34 != 0 goto label252;

        $l35 = r275[0];

        $b36 = $l35 cmp 0L;

        if $b36 != 0 goto label252;

        $l37 = r275[2];

        $b38 = $l37 cmp 0L;

        if $b38 != 0 goto label252;

        $l39 = r275[3];

        $b40 = $l39 cmp 0L;

        if $b40 == 0 goto label253;

     label252:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("      KSM: ");

        $l353 = r275[1];

        $r276 = staticinvoke <com.android.server.am.ActivityManagerService: java.lang.String stringifyKBSize(long)>($l353);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r276);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" saved from shared ");

        $l354 = r275[0];

        $r277 = staticinvoke <com.android.server.am.ActivityManagerService: java.lang.String stringifyKBSize(long)>($l354);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r277);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("           ");

        $l355 = r275[2];

        $r278 = staticinvoke <com.android.server.am.ActivityManagerService: java.lang.String stringifyKBSize(long)>($l355);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r278);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" unshared; ");

        $l356 = r275[3];

        $r279 = staticinvoke <com.android.server.am.ActivityManagerService: java.lang.String stringifyKBSize(long)>($l356);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r279);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(" volatile");

     label253:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("   Tuning: ");

        $i357 = staticinvoke <android.app.ActivityManager: int staticGetMemoryClass()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i357);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" (large ");

        $i358 = staticinvoke <android.app.ActivityManager: int staticGetLargeMemoryClass()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i358);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("), oom ");

        $r280 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $l359 = virtualinvoke $r280.<com.android.server.am.ProcessList: long getMemLevel(int)>(999);

        $r281 = staticinvoke <com.android.server.am.ActivityManagerService: java.lang.String stringifySize(long,int)>($l359, 1024);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r281);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(", restore limit ");

        $r282 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $l360 = virtualinvoke $r282.<com.android.server.am.ProcessList: long getCachedRestoreThresholdKb()>();

        $r283 = staticinvoke <com.android.server.am.ActivityManagerService: java.lang.String stringifyKBSize(long)>($l360);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r283);

        $z93 = staticinvoke <android.app.ActivityManager: boolean isLowRamDeviceStatic()>();

        if $z93 == 0 goto label254;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" (low-ram)");

     label254:
        $z16 = staticinvoke <android.app.ActivityManager: boolean isHighEndGfx()>();

        if $z16 == 0 goto label255;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" (high-end-gfx)");

     label255:
        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        goto label259;

     label256:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("ksm,");

        $l25 = r275[1];

        virtualinvoke r1.<java.io.PrintWriter: void print(long)>($l25);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $l26 = r275[0];

        virtualinvoke r1.<java.io.PrintWriter: void print(long)>($l26);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $l27 = r275[2];

        virtualinvoke r1.<java.io.PrintWriter: void print(long)>($l27);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $l28 = r275[3];

        virtualinvoke r1.<java.io.PrintWriter: void println(long)>($l28);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("tuning,");

        $i29 = staticinvoke <android.app.ActivityManager: int staticGetMemoryClass()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i29);

        virtualinvoke r1.<java.io.PrintWriter: void print(char)>(44);

        $i30 = staticinvoke <android.app.ActivityManager: int staticGetLargeMemoryClass()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i30);

        virtualinvoke r1.<java.io.PrintWriter: void print(char)>(44);

        $r19 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $l31 = virtualinvoke $r19.<com.android.server.am.ProcessList: long getMemLevel(int)>(999);

        $l32 = $l31 / 1024L;

        virtualinvoke r1.<java.io.PrintWriter: void print(long)>($l32);

        $z14 = staticinvoke <android.app.ActivityManager: boolean isLowRamDeviceStatic()>();

        if $z14 == 0 goto label257;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",low-ram");

     label257:
        $z15 = staticinvoke <android.app.ActivityManager: boolean isHighEndGfx()>();

        if $z15 == 0 goto label258;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",high-end-gfx");

     label258:
        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        goto label259;

     label259:
        goto label265;

     label260:
        $r131 := @caughtexception;

        r246 = $r131;

        goto label262;

     label261:
        $r108 := @caughtexception;

        r246 = $r108;

     label262:
        exitmonitor r242;

     label263:
        throw r246;

     label264:
        $r123 := @caughtexception;

        r246 = $r123;

        goto label262;

     label265:
        return;

        catch java.lang.NumberFormatException from label001 to label002 with label003;
        catch java.lang.Throwable from label005 to label006 with label024;
        catch java.lang.Throwable from label008 to label009 with label011;
        catch java.lang.Throwable from label009 to label010 with label011;
        catch java.lang.Throwable from label012 to label013 with label024;
        catch java.lang.Throwable from label025 to label026 with label027;
        catch java.lang.Throwable from label043 to label044 with label120;
        catch java.io.IOException from label055 to label056 with label072;
        catch android.os.RemoteException from label055 to label056 with label070;
        catch java.lang.Throwable from label056 to label057 with label065;
        catch java.lang.Throwable from label057 to label058 with label064;
        catch java.lang.Throwable from label060 to label061 with label063;
        catch java.io.IOException from label061 to label062 with label069;
        catch android.os.RemoteException from label061 to label062 with label068;
        catch java.io.IOException from label066 to label067 with label069;
        catch android.os.RemoteException from label066 to label067 with label068;
        catch java.io.IOException from label067 to label068 with label069;
        catch android.os.RemoteException from label067 to label068 with label068;
        catch java.lang.Throwable from label076 to label077 with label114;
        catch java.lang.Throwable from label078 to label079 with label096;
        catch java.lang.Throwable from label080 to label081 with label094;
        catch java.lang.Throwable from label081 to label082 with label093;
        catch java.lang.Throwable from label082 to label083 with label093;
        catch java.lang.Throwable from label084 to label085 with label093;
        catch java.lang.Throwable from label085 to label086 with label091;
        catch java.lang.Throwable from label086 to label087 with label090;
        catch java.lang.Throwable from label087 to label088 with label089;
        catch java.lang.Throwable from label098 to label099 with label113;
        catch java.lang.Throwable from label115 to label116 with label117;
        catch java.lang.Throwable from label121 to label122 with label123;
        catch java.lang.Throwable from label125 to label126 with label261;
        catch java.lang.Throwable from label128 to label129 with label200;
        catch java.lang.Throwable from label130 to label131 with label132;
        catch java.lang.Throwable from label135 to label136 with label138;
        catch java.lang.Throwable from label139 to label140 with label197;
        catch java.lang.Throwable from label140 to label141 with label196;
        catch java.lang.Throwable from label144 to label145 with label195;
        catch java.lang.Throwable from label145 to label146 with label195;
        catch java.lang.Throwable from label147 to label148 with label194;
        catch java.lang.Throwable from label148 to label149 with label193;
        catch java.lang.Throwable from label150 to label151 with label192;
        catch java.lang.Throwable from label152 to label153 with label191;
        catch java.lang.Throwable from label154 to label155 with label190;
        catch java.lang.Throwable from label156 to label157 with label189;
        catch java.lang.Throwable from label158 to label159 with label188;
        catch java.lang.Throwable from label160 to label161 with label187;
        catch java.lang.Throwable from label162 to label163 with label186;
        catch java.lang.Throwable from label164 to label165 with label186;
        catch java.lang.Throwable from label166 to label167 with label170;
        catch java.lang.Throwable from label168 to label169 with label185;
        catch java.lang.Throwable from label171 to label172 with label185;
        catch java.lang.Throwable from label174 to label175 with label185;
        catch java.lang.Throwable from label176 to label177 with label185;
        catch java.lang.Throwable from label178 to label179 with label185;
        catch java.lang.Throwable from label181 to label182 with label185;
        catch java.lang.Throwable from label183 to label184 with label185;
        catch java.lang.Throwable from label201 to label202 with label260;
        catch java.lang.Throwable from label234 to label235 with label236;
        catch java.lang.Throwable from label237 to label238 with label236;
        catch java.lang.Throwable from label262 to label263 with label264;
    }

    private final void dumpApplicationMemoryUsageHeader(java.io.PrintWriter, long, long, boolean, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        java.io.PrintWriter r1;
        long l0, l1;
        boolean z0, z1;
        java.lang.StringBuilder $r3;
        java.lang.String $r8;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.io.PrintWriter;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        if z1 == 0 goto label1;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("version,");

        virtualinvoke r1.<java.io.PrintWriter: void println(int)>(1);

     label1:
        if z0 != 0 goto label3;

        if z1 == 0 goto label2;

        goto label3;

     label2:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Applications Memory Usage (in Kilobytes):");

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Uptime: ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Realtime: ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);

        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r8);

        goto label4;

     label3:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("time,");

        virtualinvoke r1.<java.io.PrintWriter: void print(long)>(l0);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",");

        virtualinvoke r1.<java.io.PrintWriter: void println(long)>(l1);

     label4:
        return;
    }

    private void dumpEverything(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[], int, boolean, java.lang.String, boolean, boolean, int)
    {
        com.android.server.am.ActivityManagerService r0;
        java.io.PrintWriter r1;
        java.lang.String[] r2;
        int i0, i1, $i2;
        boolean z0, z1, z2;
        java.lang.String r3;
        com.android.server.am.ActivityManagerConstants $r5;
        com.android.server.am.OomAdjuster $r6;
        com.android.server.am.PendingIntentController $r7;
        com.android.server.am.ActiveServices $r8;
        com.android.server.wm.ActivityTaskManagerInternal $r9, $r10, $r14, $r15, r23;
        com.android.server.am.ProcessList $r11;
        com.android.server.am.AppExitInfoTracker $r12;
        com.android.server.am.OomAdjProfiler $r13;
        java.lang.Throwable $r16, $r17, $r18, $r19, $r20, r26, r27;
        java.io.FileDescriptor r21;
        com.android.server.am.ActiveServices$ServiceDumper r22;
        android.util.SparseArray $r24;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r21 := @parameter0: java.io.FileDescriptor;

        r1 := @parameter1: java.io.PrintWriter;

        r2 := @parameter2: java.lang.String[];

        i0 := @parameter3: int;

        z0 := @parameter4: boolean;

        r3 := @parameter5: java.lang.String;

        z1 := @parameter6: boolean;

        z2 := @parameter7: boolean;

        i1 := @parameter8: int;

        entermonitor r0;

     label01:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r5 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerConstants mConstants>;

        virtualinvoke $r5.<com.android.server.am.ActivityManagerConstants: void dump(java.io.PrintWriter)>(r1);

        $r6 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.OomAdjuster mOomAdjuster>;

        virtualinvoke $r6.<com.android.server.am.OomAdjuster: void dumpCachedAppOptimizerSettings(java.io.PrintWriter)>(r1);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label02:
        if z0 == 0 goto label04;

     label03:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("-------------------------------------------------------------------------------");

     label04:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void dumpAllowedAssociationsLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,java.lang.String)>(r21, r1, r2, i0, z0, r3);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label05:
        if z0 == 0 goto label07;

     label06:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("-------------------------------------------------------------------------------");

     label07:
        $r7 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.PendingIntentController mPendingIntentController>;

        virtualinvoke $r7.<com.android.server.am.PendingIntentController: void dumpPendingIntents(java.io.PrintWriter,boolean,java.lang.String)>(r1, z0, r3);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label08:
        if z0 == 0 goto label10;

     label09:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("-------------------------------------------------------------------------------");

     label10:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void dumpBroadcastsLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,java.lang.String)>(r21, r1, r2, i0, z0, r3);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label11:
        if z0 == 0 goto label13;

     label12:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("-------------------------------------------------------------------------------");

     label13:
        if z0 != 0 goto label14;

        if r3 == null goto label17;

     label14:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void dumpBroadcastStatsLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,java.lang.String)>(r21, r1, r2, i0, z0, r3);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label15:
        if z0 == 0 goto label17;

     label16:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("-------------------------------------------------------------------------------");

     label17:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void dumpProvidersLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,java.lang.String)>(r21, r1, r2, i0, z0, r3);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label18:
        if z0 == 0 goto label20;

     label19:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("-------------------------------------------------------------------------------");

     label20:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void dumpPermissionsLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,java.lang.String)>(r21, r1, r2, i0, z0, r3);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        $r8 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveServices mServices>;

        r22 = virtualinvoke $r8.<com.android.server.am.ActiveServices: com.android.server.am.ActiveServices$ServiceDumper newServiceDumperLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,java.lang.String)>(r21, r1, r2, i0, z0, r3);

     label21:
        if z1 != 0 goto label24;

        if z0 == 0 goto label23;

     label22:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("-------------------------------------------------------------------------------");

     label23:
        virtualinvoke r22.<com.android.server.am.ActiveServices$ServiceDumper: void dumpLocked()>();

     label24:
        exitmonitor r0;

     label25:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        if z1 == 0 goto label27;

        if z0 == 0 goto label26;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("-------------------------------------------------------------------------------");

     label26:
        virtualinvoke r22.<com.android.server.am.ActiveServices$ServiceDumper: void dumpWithClient()>();

     label27:
        if r3 != null goto label29;

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        if z0 == 0 goto label28;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("-------------------------------------------------------------------------------");

     label28:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void dumpBinderProxies(java.io.PrintWriter,int)>(r1, 6000);

     label29:
        entermonitor r0;

     label30:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label31:
        if z0 == 0 goto label33;

     label32:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("-------------------------------------------------------------------------------");

     label33:
        r23 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerInternal mAtmInternal>;

     label34:
        virtualinvoke r23.<com.android.server.wm.ActivityTaskManagerInternal: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,boolean,java.lang.String)>("recents", r21, r1, r2, i0, z0, z1, r3);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label35:
        if z0 == 0 goto label37;

     label36:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("-------------------------------------------------------------------------------");

     label37:
        $r9 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerInternal mAtmInternal>;

        virtualinvoke $r9.<com.android.server.wm.ActivityTaskManagerInternal: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,boolean,java.lang.String)>("lastanr", r21, r1, r2, i0, z0, z1, r3);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label38:
        if z0 == 0 goto label40;

     label39:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("-------------------------------------------------------------------------------");

     label40:
        $r10 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerInternal mAtmInternal>;

        virtualinvoke $r10.<com.android.server.wm.ActivityTaskManagerInternal: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,boolean,java.lang.String)>("starter", r21, r1, r2, i0, z0, z1, r3);

     label41:
        if r3 != null goto label46;

     label42:
        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label43:
        if z0 == 0 goto label45;

     label44:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("-------------------------------------------------------------------------------");

     label45:
        $r15 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerInternal mAtmInternal>;

        virtualinvoke $r15.<com.android.server.wm.ActivityTaskManagerInternal: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,boolean,java.lang.String)>("containers", r21, r1, r2, i0, z0, z1, r3);

     label46:
        if z2 != 0 goto label51;

     label47:
        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label48:
        if z0 == 0 goto label50;

     label49:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("-------------------------------------------------------------------------------");

     label50:
        $r14 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerInternal mAtmInternal>;

        virtualinvoke $r14.<com.android.server.wm.ActivityTaskManagerInternal: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,boolean,java.lang.String)>("activities", r21, r1, r2, i0, z0, z1, r3);

     label51:
        $r24 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mAssociations>;

        $i2 = virtualinvoke $r24.<android.util.SparseArray: int size()>();

        if $i2 <= 0 goto label56;

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label52:
        if z0 == 0 goto label54;

     label53:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("-------------------------------------------------------------------------------");

     label54:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void dumpAssociationsLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,boolean,java.lang.String)>(r21, r1, r2, i0, z0, z1, r3);

     label55:
        goto label56;

     label56:
        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label57:
        if z0 == 0 goto label59;

     label58:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("-------------------------------------------------------------------------------");

     label59:
        $r11 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r12 = $r11.<com.android.server.am.ProcessList: com.android.server.am.AppExitInfoTracker mAppExitInfoTracker>;

        virtualinvoke $r12.<com.android.server.am.AppExitInfoTracker: void dumpHistoryProcessExitInfo(java.io.PrintWriter,java.lang.String)>(r1, r3);

     label60:
        if r3 != null goto label68;

     label61:
        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label62:
        if z0 == 0 goto label64;

     label63:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("-------------------------------------------------------------------------------");

     label64:
        $r13 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.OomAdjProfiler mOomAdjProfiler>;

        virtualinvoke $r13.<com.android.server.am.OomAdjProfiler: void dump(java.io.PrintWriter)>(r1);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label65:
        if z0 == 0 goto label67;

     label66:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("-------------------------------------------------------------------------------");

     label67:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean dumpLmkLocked(java.io.PrintWriter)>(r1);

     label68:
        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label69:
        if z0 == 0 goto label71;

     label70:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("-------------------------------------------------------------------------------");

     label71:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void dumpProcessesLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,java.lang.String,int)>(r21, r1, r2, i0, z0, r3, i1);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label72:
        if z0 == 0 goto label74;

     label73:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("-------------------------------------------------------------------------------");

     label74:
        specialinvoke r0.<com.android.server.am.ActivityManagerService: void dumpUsersLocked(java.io.PrintWriter)>(r1);

        exitmonitor r0;

     label75:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label76:
        $r19 := @caughtexception;

        r26 = $r19;

        goto label78;

     label77:
        $r17 := @caughtexception;

        r26 = $r17;

     label78:
        exitmonitor r0;

     label79:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw r26;

     label80:
        $r18 := @caughtexception;

        r26 = $r18;

        goto label78;

     label81:
        $r16 := @caughtexception;

        r27 = $r16;

     label82:
        exitmonitor r0;

     label83:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw r27;

     label84:
        $r20 := @caughtexception;

        r27 = $r20;

        goto label82;

        catch java.lang.Throwable from label01 to label02 with label81;
        catch java.lang.Throwable from label03 to label04 with label81;
        catch java.lang.Throwable from label04 to label05 with label81;
        catch java.lang.Throwable from label06 to label07 with label81;
        catch java.lang.Throwable from label07 to label08 with label81;
        catch java.lang.Throwable from label09 to label10 with label81;
        catch java.lang.Throwable from label10 to label11 with label81;
        catch java.lang.Throwable from label12 to label13 with label81;
        catch java.lang.Throwable from label14 to label15 with label81;
        catch java.lang.Throwable from label16 to label17 with label81;
        catch java.lang.Throwable from label17 to label18 with label81;
        catch java.lang.Throwable from label19 to label20 with label81;
        catch java.lang.Throwable from label20 to label21 with label81;
        catch java.lang.Throwable from label22 to label23 with label81;
        catch java.lang.Throwable from label23 to label24 with label81;
        catch java.lang.Throwable from label24 to label25 with label81;
        catch java.lang.Throwable from label30 to label31 with label77;
        catch java.lang.Throwable from label32 to label33 with label77;
        catch java.lang.Throwable from label33 to label34 with label77;
        catch java.lang.Throwable from label34 to label35 with label76;
        catch java.lang.Throwable from label36 to label37 with label76;
        catch java.lang.Throwable from label37 to label38 with label76;
        catch java.lang.Throwable from label39 to label40 with label76;
        catch java.lang.Throwable from label40 to label41 with label76;
        catch java.lang.Throwable from label42 to label43 with label76;
        catch java.lang.Throwable from label44 to label45 with label76;
        catch java.lang.Throwable from label45 to label46 with label76;
        catch java.lang.Throwable from label47 to label48 with label76;
        catch java.lang.Throwable from label49 to label50 with label76;
        catch java.lang.Throwable from label50 to label51 with label76;
        catch java.lang.Throwable from label51 to label52 with label76;
        catch java.lang.Throwable from label53 to label54 with label76;
        catch java.lang.Throwable from label54 to label55 with label80;
        catch java.lang.Throwable from label56 to label57 with label80;
        catch java.lang.Throwable from label58 to label59 with label80;
        catch java.lang.Throwable from label59 to label60 with label80;
        catch java.lang.Throwable from label61 to label62 with label80;
        catch java.lang.Throwable from label63 to label64 with label80;
        catch java.lang.Throwable from label64 to label65 with label80;
        catch java.lang.Throwable from label66 to label67 with label80;
        catch java.lang.Throwable from label67 to label68 with label80;
        catch java.lang.Throwable from label68 to label69 with label80;
        catch java.lang.Throwable from label70 to label71 with label80;
        catch java.lang.Throwable from label71 to label72 with label80;
        catch java.lang.Throwable from label73 to label74 with label80;
        catch java.lang.Throwable from label74 to label75 with label80;
        catch java.lang.Throwable from label78 to label79 with label80;
        catch java.lang.Throwable from label82 to label83 with label84;
    }

    private static long dumpJavaTracesTombstoned(int, java.lang.String, long)
    {
        int i0, $i4;
        java.lang.String r0;
        long l1, l2, $l3, $l7, $l11, $l12;
        boolean z0, $z1, z2;
        byte $b8;
        java.lang.Exception $r1;
        java.io.File r2;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.String;

        l1 := @parameter2: long;

        l2 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l3 = l1 / 1000L;

        $i4 = (int) $l3;

        z0 = staticinvoke <android.os.Debug: boolean dumpJavaBacktraceToFileTimeout(int,java.lang.String,int)>(i0, r0, $i4);

        z2 = z0;

        if z0 == 0 goto label7;

     label1:
        r2 = new java.io.File;

        specialinvoke r2.<java.io.File: void <init>(java.lang.String)>(r0);

     label2:
        z2 = z0;

     label3:
        $l7 = virtualinvoke r2.<java.io.File: long length()>();

        $b8 = $l7 cmp 100L;

        if $b8 >= 0 goto label5;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", "Successfully created Java ANR file is empty!");

     label4:
        z2 = 0;

     label5:
        goto label7;

     label6:
        $r1 := @caughtexception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", "Unable to get ANR file size", $r1);

        z2 = 0;

     label7:
        if z2 != 0 goto label8;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", "Dumping Java threads failed, initiating native stack dump.");

        $z1 = staticinvoke <android.os.Debug: boolean dumpNativeBacktraceToFileTimeout(int,java.lang.String,int)>(i0, r0, 2);

        if $z1 != 0 goto label8;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", "Native stack dump failed!");

     label8:
        $l11 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l12 = $l11 - l2;

        return $l12;

        catch java.lang.Exception from label1 to label2 with label6;
        catch java.lang.Exception from label3 to label4 with label6;
    }

    static final void dumpMemItems(android.util.proto.ProtoOutputStream, long, java.lang.String, java.util.ArrayList, boolean, boolean, boolean)
    {
        android.util.proto.ProtoOutputStream r0;
        long l0, l1, $l3, $l4, $l5;
        java.lang.String r1, $r5, $r8;
        java.util.ArrayList r2, $r6, $r7;
        boolean z0, z1, z2, $z3, $z4;
        com.android.server.am.ActivityManagerService$MemItem r3;
        java.lang.Object $r4;
        int $i2, i6, $i7;

        r0 := @parameter0: android.util.proto.ProtoOutputStream;

        l0 := @parameter1: long;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.util.ArrayList;

        z0 := @parameter4: boolean;

        z1 := @parameter5: boolean;

        z2 := @parameter6: boolean;

        if z0 == 0 goto label1;

        staticinvoke <com.android.server.am.ActivityManagerService: void sortMemItems(java.util.List,boolean)>(r2, z1);

        goto label1;

     label1:
        i6 = 0;

     label2:
        $i7 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        if i6 >= $i7 goto label5;

        $r4 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i6);

        r3 = (com.android.server.am.ActivityManagerService$MemItem) $r4;

        l1 = virtualinvoke r0.<android.util.proto.ProtoOutputStream: long start(long)>(l0);

        virtualinvoke r0.<android.util.proto.ProtoOutputStream: void write(long,java.lang.String)>(1138166333441L, r1);

        $r5 = r3.<com.android.server.am.ActivityManagerService$MemItem: java.lang.String shortLabel>;

        virtualinvoke r0.<android.util.proto.ProtoOutputStream: void write(long,java.lang.String)>(1138166333442L, $r5);

        $z3 = r3.<com.android.server.am.ActivityManagerService$MemItem: boolean isProc>;

        virtualinvoke r0.<android.util.proto.ProtoOutputStream: void write(long,boolean)>(1133871366148L, $z3);

        $i2 = r3.<com.android.server.am.ActivityManagerService$MemItem: int id>;

        virtualinvoke r0.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464259L, $i2);

        $z4 = r3.<com.android.server.am.ActivityManagerService$MemItem: boolean hasActivities>;

        virtualinvoke r0.<android.util.proto.ProtoOutputStream: void write(long,boolean)>(1133871366149L, $z4);

        $l3 = r3.<com.android.server.am.ActivityManagerService$MemItem: long pss>;

        virtualinvoke r0.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529670L, $l3);

        $l4 = r3.<com.android.server.am.ActivityManagerService$MemItem: long mRss>;

        virtualinvoke r0.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529673L, $l4);

        if z2 == 0 goto label3;

        $l5 = r3.<com.android.server.am.ActivityManagerService$MemItem: long swapPss>;

        virtualinvoke r0.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529671L, $l5);

     label3:
        $r6 = r3.<com.android.server.am.ActivityManagerService$MemItem: java.util.ArrayList subitems>;

        if $r6 == null goto label4;

        $r8 = r3.<com.android.server.am.ActivityManagerService$MemItem: java.lang.String shortLabel>;

        $r7 = r3.<com.android.server.am.ActivityManagerService$MemItem: java.util.ArrayList subitems>;

        staticinvoke <com.android.server.am.ActivityManagerService: void dumpMemItems(android.util.proto.ProtoOutputStream,long,java.lang.String,java.util.ArrayList,boolean,boolean,boolean)>(r0, 2246267895816L, $r8, $r7, 1, z1, z2);

     label4:
        virtualinvoke r0.<android.util.proto.ProtoOutputStream: void end(long)>(l1);

        i6 = i6 + 1;

        goto label2;

     label5:
        return;
    }

    static final void dumpMemItems(java.io.PrintWriter, java.lang.String, java.lang.String, java.util.ArrayList, boolean, boolean, boolean, boolean)
    {
        java.io.PrintWriter r0;
        java.lang.String r1, r2, $r6, $r10, $r12, $r13, $r15, $r16, $r19, $r20, $r21, r24;
        java.util.ArrayList r3, $r11, $r25;
        boolean z0, z1, z2, $z3, z4, z5;
        com.android.server.am.ActivityManagerService$MemItem r4;
        java.lang.Object $r5;
        java.lang.StringBuilder $r7;
        long $l0, $l2, $l3, $l4, l7, l8, l9;
        int $i1, i5, $i6;
        java.lang.Object[] $r14, $r18;
        java.io.Serializable r23;

        r0 := @parameter0: java.io.PrintWriter;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.util.ArrayList;

        z4 := @parameter4: boolean;

        z0 := @parameter5: boolean;

        z1 := @parameter6: boolean;

        z2 := @parameter7: boolean;

        if z4 == 0 goto label01;

        if z0 != 0 goto label01;

        staticinvoke <com.android.server.am.ActivityManagerService: void sortMemItems(java.util.List,boolean)>(r3, z1);

     label01:
        i5 = 0;

     label02:
        $i6 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        if i5 >= $i6 goto label18;

        $r5 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        r4 = (com.android.server.am.ActivityManagerService$MemItem) $r5;

        if z0 != 0 goto label06;

        if z1 == 0 goto label03;

        if z2 == 0 goto label03;

        $r18 = newarray (java.lang.Object)[4];

        $r18[0] = r1;

        $l3 = r4.<com.android.server.am.ActivityManagerService$MemItem: long pss>;

        $r19 = staticinvoke <com.android.server.am.ActivityManagerService: java.lang.String stringifyKBSize(long)>($l3);

        $r18[1] = $r19;

        $r20 = r4.<com.android.server.am.ActivityManagerService$MemItem: java.lang.String label>;

        $r18[2] = $r20;

        $l4 = r4.<com.android.server.am.ActivityManagerService$MemItem: long swapPss>;

        $r21 = staticinvoke <com.android.server.am.ActivityManagerService: java.lang.String stringifyKBSize(long)>($l4);

        $r18[3] = $r21;

        virtualinvoke r0.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("%s%s: %-60s (%s in swap)\n", $r18);

        goto label16;

     label03:
        if z1 == 0 goto label04;

        l7 = r4.<com.android.server.am.ActivityManagerService$MemItem: long pss>;

        goto label05;

     label04:
        l7 = r4.<com.android.server.am.ActivityManagerService$MemItem: long mRss>;

     label05:
        $r14 = newarray (java.lang.Object)[3];

        $r14[0] = r1;

        $r15 = staticinvoke <com.android.server.am.ActivityManagerService: java.lang.String stringifyKBSize(long)>(l7);

        $r14[1] = $r15;

        $r16 = r4.<com.android.server.am.ActivityManagerService$MemItem: java.lang.String label>;

        $r14[2] = $r16;

        virtualinvoke r0.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("%s%s: %s\n", $r14);

        goto label16;

     label06:
        z5 = r4.<com.android.server.am.ActivityManagerService$MemItem: boolean isProc>;

        r23 = "N/A";

        if z5 == 0 goto label12;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("proc,");

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $r13 = r4.<com.android.server.am.ActivityManagerService$MemItem: java.lang.String shortLabel>;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>($r13);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $i1 = r4.<com.android.server.am.ActivityManagerService$MemItem: int id>;

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i1);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(",");

        if z1 == 0 goto label07;

        l8 = r4.<com.android.server.am.ActivityManagerService$MemItem: long pss>;

        goto label08;

     label07:
        l8 = r4.<com.android.server.am.ActivityManagerService$MemItem: long mRss>;

     label08:
        virtualinvoke r0.<java.io.PrintWriter: void print(long)>(l8);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(",");

        if z2 == 0 goto label09;

        $l2 = r4.<com.android.server.am.ActivityManagerService$MemItem: long swapPss>;

        r23 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

     label09:
        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.Object)>(r23);

        $z3 = r4.<com.android.server.am.ActivityManagerService$MemItem: boolean hasActivities>;

        if $z3 == 0 goto label10;

        r24 = ",a";

        goto label11;

     label10:
        r24 = ",e";

     label11:
        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>(r24);

        goto label16;

     label12:
        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $r6 = r4.<com.android.server.am.ActivityManagerService$MemItem: java.lang.String shortLabel>;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>($r6);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(",");

        if z1 == 0 goto label13;

        l9 = r4.<com.android.server.am.ActivityManagerService$MemItem: long pss>;

        goto label14;

     label13:
        l9 = r4.<com.android.server.am.ActivityManagerService$MemItem: long mRss>;

     label14:
        virtualinvoke r0.<java.io.PrintWriter: void print(long)>(l9);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(",");

        if z2 == 0 goto label15;

        $l0 = r4.<com.android.server.am.ActivityManagerService$MemItem: long swapPss>;

        r23 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

     label15:
        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.Object)>(r23);

     label16:
        $r25 = r4.<com.android.server.am.ActivityManagerService$MemItem: java.util.ArrayList subitems>;

        if $r25 == null goto label17;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = r4.<com.android.server.am.ActivityManagerService$MemItem: java.lang.String shortLabel>;

        $r11 = r4.<com.android.server.am.ActivityManagerService$MemItem: java.util.ArrayList subitems>;

        staticinvoke <com.android.server.am.ActivityManagerService: void dumpMemItems(java.io.PrintWriter,java.lang.String,java.lang.String,java.util.ArrayList,boolean,boolean,boolean,boolean)>(r0, $r10, $r12, $r11, 1, z0, z1, z2);

     label17:
        i5 = i5 + 1;

        goto label02;

     label18:
        return;
    }

    private static final int dumpProcessList(java.io.PrintWriter, com.android.server.am.ActivityManagerService, java.util.List, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        java.io.PrintWriter r0;
        java.util.List r1;
        java.lang.String r2, r3, r4, r5, $r10, $r11, $r13, r15;
        com.android.server.am.ProcessRecord r6;
        int $i0, i1, i2, i3;
        java.lang.Object $r7;
        boolean $z0, $z1, $z2;
        java.lang.Object[] $r8;
        java.lang.Integer $r9;
        android.content.pm.ApplicationInfo $r12;
        com.android.server.am.ActivityManagerService r14;

        r0 := @parameter0: java.io.PrintWriter;

        r14 := @parameter1: com.android.server.am.ActivityManagerService;

        r1 := @parameter2: java.util.List;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: java.lang.String;

        r4 := @parameter5: java.lang.String;

        r5 := @parameter6: java.lang.String;

        i1 = 0;

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        i2 = $i0 - 1;

     label1:
        if i2 < 0 goto label6;

        $r7 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i2);

        r6 = (com.android.server.am.ProcessRecord) $r7;

        if r5 == null goto label2;

        $r12 = r6.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r13 = $r12.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $z2 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        if $z2 != 0 goto label2;

        i3 = i1;

        goto label5;

     label2:
        $z0 = virtualinvoke r6.<com.android.server.am.ProcessRecord: boolean isPersistent()>();

        if $z0 == 0 goto label3;

        r15 = r4;

        goto label4;

     label3:
        r15 = r3;

     label4:
        $r8 = newarray (java.lang.Object)[4];

        $r8[0] = r2;

        $r8[1] = r15;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r8[2] = $r9;

        $r10 = virtualinvoke r6.<com.android.server.am.ProcessRecord: java.lang.String toString()>();

        $r8[3] = $r10;

        $r11 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s%s #%2d: %s", $r8);

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r11);

        i3 = i1;

        $z1 = virtualinvoke r6.<com.android.server.am.ProcessRecord: boolean isPersistent()>();

        if $z1 == 0 goto label5;

        i3 = i1 + 1;

     label5:
        i2 = i2 + -1;

        i1 = i3;

        goto label1;

     label6:
        return i1;
    }

    private static final boolean dumpProcessOomList(java.io.PrintWriter, com.android.server.am.ActivityManagerService, java.util.List, java.lang.String, java.lang.String, java.lang.String, boolean, java.lang.String)
    {
        java.io.PrintWriter r0;
        java.util.List r1;
        java.lang.String r2, r3, r4, r6, r7, $r15, $r16, $r21, $r22, $r24, $r27, $r29, $r32, r35, r38;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        long l0, l1, l2, $l3, $l19, $l20, $l21, $l22, $l23, $l24, $l26, $l28, $l29, $l30, $l31;
        com.android.server.am.ProcessRecord r5, $r26;
        int $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i25, i32, i33, $i45, i46;
        java.lang.Object $r8, $r10, $r11, $r13, $r17, $r18, $r19, $r20, $r23, $r25, $r28, $r30, $r33, $r39;
        android.util.Pair $r9, $r12;
        java.lang.Integer $r14;
        byte $b27;
        android.content.ComponentName $r31;
        com.android.server.am.ActivityManagerService r34;
        java.util.ArrayList r36;
        char c35, c42;

        r0 := @parameter0: java.io.PrintWriter;

        r34 := @parameter1: com.android.server.am.ActivityManagerService;

        r1 := @parameter2: java.util.List;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: java.lang.String;

        r4 := @parameter5: java.lang.String;

        z0 := @parameter6: boolean;

        r35 := @parameter7: java.lang.String;

        r36 = staticinvoke <com.android.server.am.ActivityManagerService: java.util.ArrayList sortProcessOomList(java.util.List,java.lang.String)>(r1, r35);

        $z1 = virtualinvoke r36.<java.util.ArrayList: boolean isEmpty()>();

        if $z1 == 0 goto label01;

        return 0;

     label01:
        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l3 = r34.<com.android.server.am.ActivityManagerService: long mLastPowerCheckUptime>;

        l1 = l0 - $l3;

        $i4 = virtualinvoke r36.<java.util.ArrayList: int size()>();

        i32 = $i4 - 1;

     label02:
        if i32 < 0 goto label26;

        $r8 = virtualinvoke r36.<java.util.ArrayList: java.lang.Object get(int)>(i32);

        $r9 = (android.util.Pair) $r8;

        $r10 = $r9.<android.util.Pair: java.lang.Object first>;

        r5 = (com.android.server.am.ProcessRecord) $r10;

        $i5 = r5.<com.android.server.am.ProcessRecord: int setAdj>;

        r6 = staticinvoke <com.android.server.am.ProcessList: java.lang.String makeOomAdjString(int,boolean)>($i5, 0);

        i33 = r5.<com.android.server.am.ProcessRecord: int setSchedGroup>;

        if i33 == 0 goto label07;

        if i33 == 1 goto label06;

        if i33 == 2 goto label05;

        if i33 == 3 goto label04;

        if i33 == 4 goto label03;

        c35 = 63;

        goto label08;

     label03:
        c35 = 66;

        goto label08;

     label04:
        c35 = 84;

        goto label08;

     label05:
        c35 = 70;

        goto label08;

     label06:
        c35 = 82;

        goto label08;

     label07:
        c35 = 98;

     label08:
        $z7 = virtualinvoke r5.<com.android.server.am.ProcessRecord: boolean hasForegroundActivities()>();

        if $z7 == 0 goto label09;

        c42 = 65;

        goto label11;

     label09:
        $z2 = virtualinvoke r5.<com.android.server.am.ProcessRecord: boolean hasForegroundServices()>();

        if $z2 == 0 goto label10;

        c42 = 83;

        goto label11;

     label10:
        c42 = 32;

     label11:
        $i45 = virtualinvoke r5.<com.android.server.am.ProcessRecord: int getCurProcState()>();

        r7 = staticinvoke <com.android.server.am.ProcessList: java.lang.String makeProcStateString(int)>($i45);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        $z8 = virtualinvoke r5.<com.android.server.am.ProcessRecord: boolean isPersistent()>();

        if $z8 == 0 goto label12;

        r38 = r4;

        goto label13;

     label12:
        r38 = r3;

     label13:
        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r38);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(" #");

        $i6 = interfaceinvoke r1.<java.util.List: int size()>();

        $i7 = $i6 - 1;

        $r11 = virtualinvoke r36.<java.util.ArrayList: java.lang.Object get(int)>(i32);

        $r12 = (android.util.Pair) $r11;

        $r13 = $r12.<android.util.Pair: java.lang.Object second>;

        $r14 = (java.lang.Integer) $r13;

        $i8 = virtualinvoke $r14.<java.lang.Integer: int intValue()>();

        i46 = $i7 - $i8;

        if i46 >= 10 goto label14;

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(32);

     label14:
        virtualinvoke r0.<java.io.PrintWriter: void print(int)>(i46);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r6);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(32);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(c35);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(47);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(c42);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(47);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r7);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(32);

        $i9 = r5.<com.android.server.am.ProcessRecord: int curCapability>;

        staticinvoke <android.app.ActivityManager: void printCapabilitiesSummary(java.io.PrintWriter,int)>(r0, $i9);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(32);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(" t:");

        $i10 = r5.<com.android.server.am.ProcessRecord: int trimMemoryLevel>;

        if $i10 >= 10 goto label15;

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(32);

        goto label15;

     label15:
        $i11 = r5.<com.android.server.am.ProcessRecord: int trimMemoryLevel>;

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i11);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(32);

        $r15 = virtualinvoke r5.<com.android.server.am.ProcessRecord: java.lang.String toShortString()>();

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>($r15);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(" (");

        $r16 = r5.<com.android.server.am.ProcessRecord: java.lang.String adjType>;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>($r16);

        virtualinvoke r0.<java.io.PrintWriter: void println(char)>(41);

        $r17 = r5.<com.android.server.am.ProcessRecord: java.lang.Object adjSource>;

        if $r17 != null goto label16;

        $r33 = r5.<com.android.server.am.ProcessRecord: java.lang.Object adjTarget>;

        if $r33 == null goto label22;

     label16:
        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("    ");

        $r18 = r5.<com.android.server.am.ProcessRecord: java.lang.Object adjTarget>;

        $z3 = $r18 instanceof android.content.ComponentName;

        if $z3 == 0 goto label17;

        $r30 = r5.<com.android.server.am.ProcessRecord: java.lang.Object adjTarget>;

        $r31 = (android.content.ComponentName) $r30;

        $r32 = virtualinvoke $r31.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>($r32);

        goto label19;

     label17:
        $r19 = r5.<com.android.server.am.ProcessRecord: java.lang.Object adjTarget>;

        if $r19 == null goto label18;

        $r28 = r5.<com.android.server.am.ProcessRecord: java.lang.Object adjTarget>;

        $r29 = virtualinvoke $r28.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>($r29);

        goto label19;

     label18:
        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("{null}");

     label19:
        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("<=");

        $r39 = r5.<com.android.server.am.ProcessRecord: java.lang.Object adjSource>;

        $z9 = $r39 instanceof com.android.server.am.ProcessRecord;

        if $z9 == 0 goto label20;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("Proc{");

        $r25 = r5.<com.android.server.am.ProcessRecord: java.lang.Object adjSource>;

        $r26 = (com.android.server.am.ProcessRecord) $r25;

        $r27 = virtualinvoke $r26.<com.android.server.am.ProcessRecord: java.lang.String toShortString()>();

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>($r27);

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("}");

        goto label22;

     label20:
        $r20 = r5.<com.android.server.am.ProcessRecord: java.lang.Object adjSource>;

        if $r20 == null goto label21;

        $r23 = r5.<com.android.server.am.ProcessRecord: java.lang.Object adjSource>;

        $r24 = virtualinvoke $r23.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r24);

        goto label22;

     label21:
        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("{null}");

     label22:
        if z0 == 0 goto label25;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("    ");

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("oom: max=");

        $i12 = r5.<com.android.server.am.ProcessRecord: int maxAdj>;

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i12);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(" curRaw=");

        $i13 = virtualinvoke r5.<com.android.server.am.ProcessRecord: int getCurRawAdj()>();

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i13);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(" setRaw=");

        $i14 = r5.<com.android.server.am.ProcessRecord: int setRawAdj>;

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i14);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(" cur=");

        $i15 = r5.<com.android.server.am.ProcessRecord: int curAdj>;

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i15);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(" set=");

        $i16 = r5.<com.android.server.am.ProcessRecord: int setAdj>;

        virtualinvoke r0.<java.io.PrintWriter: void println(int)>($i16);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("    ");

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("state: cur=");

        $i17 = virtualinvoke r5.<com.android.server.am.ProcessRecord: int getCurProcState()>();

        $r21 = staticinvoke <com.android.server.am.ProcessList: java.lang.String makeProcStateString(int)>($i17);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>($r21);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(" set=");

        $i18 = r5.<com.android.server.am.ProcessRecord: int setProcState>;

        $r22 = staticinvoke <com.android.server.am.ProcessList: java.lang.String makeProcStateString(int)>($i18);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>($r22);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(" lastPss=");

        $l19 = r5.<com.android.server.am.ProcessRecord: long lastPss>;

        $l20 = $l19 * 1024L;

        staticinvoke <android.util.DebugUtils: void printSizeValue(java.io.PrintWriter,long)>(r0, $l20);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(" lastSwapPss=");

        $l21 = r5.<com.android.server.am.ProcessRecord: long lastSwapPss>;

        $l22 = $l21 * 1024L;

        staticinvoke <android.util.DebugUtils: void printSizeValue(java.io.PrintWriter,long)>(r0, $l22);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(" lastCachedPss=");

        $l23 = r5.<com.android.server.am.ProcessRecord: long lastCachedPss>;

        $l24 = $l23 * 1024L;

        staticinvoke <android.util.DebugUtils: void printSizeValue(java.io.PrintWriter,long)>(r0, $l24);

        virtualinvoke r0.<java.io.PrintWriter: void println()>();

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("    ");

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("cached=");

        $z4 = virtualinvoke r5.<com.android.server.am.ProcessRecord: boolean isCached()>();

        virtualinvoke r0.<java.io.PrintWriter: void print(boolean)>($z4);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(" empty=");

        $z5 = r5.<com.android.server.am.ProcessRecord: boolean empty>;

        virtualinvoke r0.<java.io.PrintWriter: void print(boolean)>($z5);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(" hasAboveClient=");

        $z6 = r5.<com.android.server.am.ProcessRecord: boolean hasAboveClient>;

        virtualinvoke r0.<java.io.PrintWriter: void println(boolean)>($z6);

        $i25 = r5.<com.android.server.am.ProcessRecord: int setProcState>;

        if $i25 < 10 goto label24;

        $l26 = r5.<com.android.server.am.ProcessRecord: long lastCpuTime>;

        $b27 = $l26 cmp 0L;

        if $b27 == 0 goto label23;

        $l29 = r5.<com.android.server.am.ProcessRecord: long curCpuTime>;

        $l28 = r5.<com.android.server.am.ProcessRecord: long lastCpuTime>;

        l2 = $l29 - $l28;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("    ");

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("run cpu over ");

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>(l1, r0);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(" used ");

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>(l2, r0);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(" (");

        $l30 = 100L * l2;

        $l31 = $l30 / l1;

        virtualinvoke r0.<java.io.PrintWriter: void print(long)>($l31);

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("%)");

        goto label25;

     label23:
        goto label25;

     label24:
        goto label25;

     label25:
        i32 = i32 + -1;

        goto label02;

     label26:
        return 1;
    }

    public static android.util.Pair dumpStackTraces(java.lang.String, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList)
    {
        java.util.ArrayList r0, r51, r52;
        int i0, i1, $i12, $i21, i28, i32, i35;
        java.lang.StringBuilder $r2, $r11, $r15, $r25, $r29, $r41, $r55;
        java.lang.String $r5, $r14, $r19, $r28, $r33, $r45, r50, $r56;
        byte $b4, $b7, $b9, $b15, $b17, $b20, $b31;
        android.util.Pair $r6, $r20, $r34, $r46, r58, r62, r66, r67;
        java.lang.Long $r7, $r8, $r21, $r22, $r35, $r36, $r47, $r48;
        boolean $z0, $z1, $z3, z4;
        java.lang.Object $r9, $r23, $r37;
        java.lang.Integer $r10, $r24, $r38;
        long $l6, $l11, $l13, $l14, l22, l23, l24, l25, l26, l27, l29, $l30, l33, l34;
        java.io.File $r49, r54;
        java.util.Iterator r59, r63;

        r50 := @parameter0: java.lang.String;

        r51 := @parameter1: java.util.ArrayList;

        r52 := @parameter2: java.util.ArrayList;

        r0 := @parameter3: java.util.ArrayList;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Dumping to ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r50);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", $r5);

        l22 = 20000L;

        l23 = -1L;

        l24 = -1L;

        l25 = 20000L;

        l26 = -1L;

        l27 = -1L;

        if r51 == null goto label11;

        i0 = virtualinvoke r51.<java.util.ArrayList: int size()>();

        i28 = 0;

     label01:
        l25 = l22;

        l26 = l23;

        l27 = l24;

        if i28 >= i0 goto label11;

        $r37 = virtualinvoke r51.<java.util.ArrayList: java.lang.Object get(int)>(i28);

        $r38 = (java.lang.Integer) $r37;

        i1 = virtualinvoke $r38.<java.lang.Integer: int intValue()>();

        if i28 != 0 goto label02;

        $i21 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        if $i21 == i1 goto label02;

        z4 = 1;

        goto label03;

     label02:
        z4 = 0;

     label03:
        r54 = null;

        if z4 == 0 goto label06;

        $r49 = new java.io.File;

        specialinvoke $r49.<java.io.File: void <init>(java.lang.String)>(r50);

        r54 = $r49;

        $z3 = virtualinvoke $r49.<java.io.File: boolean exists()>();

        if $z3 == 0 goto label04;

        l29 = virtualinvoke $r49.<java.io.File: long length()>();

        goto label05;

     label04:
        l29 = 0L;

     label05:
        l23 = l29;

     label06:
        $r55 = new java.lang.StringBuilder;

        specialinvoke $r55.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Collecting stacks for pid ");

        virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", $r56);

        $l30 = staticinvoke <com.android.server.am.ActivityManagerService: long dumpJavaTracesTombstoned(int,java.lang.String,long)>(i1, r50, l22);

        l22 = l22 - $l30;

        $b31 = l22 cmp 0L;

        if $b31 > 0 goto label09;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Aborting stack trace dump (current firstPid=");

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("); deadline exceeded.");

        $r45 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ActivityManager", $r45);

        $b20 = l23 cmp 0L;

        if $b20 < 0 goto label07;

        $r46 = new android.util.Pair;

        $r47 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l23);

        $r48 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l24);

        specialinvoke $r46.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r47, $r48);

        r58 = $r46;

        goto label08;

     label07:
        r58 = null;

     label08:
        return r58;

     label09:
        if z4 == 0 goto label10;

        l24 = virtualinvoke r54.<java.io.File: long length()>();

     label10:
        i28 = i28 + 1;

        goto label01;

     label11:
        if r52 == null goto label17;

        r59 = virtualinvoke r52.<java.util.ArrayList: java.util.Iterator iterator()>();

     label12:
        $z1 = interfaceinvoke r59.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label16;

        $r23 = interfaceinvoke r59.<java.util.Iterator: java.lang.Object next()>();

        $r24 = (java.lang.Integer) $r23;

        i32 = virtualinvoke $r24.<java.lang.Integer: int intValue()>();

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Collecting stacks for native pid ");

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i32);

        $r28 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", $r28);

        l33 = staticinvoke <java.lang.Math: long min(long,long)>(2000L, l25);

        l34 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l11 = l33 / 1000L;

        $i12 = (int) $l11;

        staticinvoke <android.os.Debug: boolean dumpNativeBacktraceToFileTimeout(int,java.lang.String,int)>(i32, r50, $i12);

        $l13 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l14 = $l13 - l34;

        l25 = l25 - $l14;

        $b15 = l25 cmp 0L;

        if $b15 > 0 goto label15;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Aborting stack trace dump (current native pid=");

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i32);

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("); deadline exceeded.");

        $r33 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ActivityManager", $r33);

        $b17 = l26 cmp 0L;

        if $b17 < 0 goto label13;

        $r34 = new android.util.Pair;

        $r35 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l26);

        $r36 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l27);

        specialinvoke $r34.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r35, $r36);

        r62 = $r34;

        goto label14;

     label13:
        r62 = null;

     label14:
        return r62;

     label15:
        goto label12;

     label16:
        goto label17;

     label17:
        if r0 == null goto label22;

        r63 = virtualinvoke r0.<java.util.ArrayList: java.util.Iterator iterator()>();

     label18:
        $z0 = interfaceinvoke r63.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label22;

        $r9 = interfaceinvoke r63.<java.util.Iterator: java.lang.Object next()>();

        $r10 = (java.lang.Integer) $r9;

        i35 = virtualinvoke $r10.<java.lang.Integer: int intValue()>();

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Collecting stacks for extra pid ");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i35);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", $r14);

        $l6 = staticinvoke <com.android.server.am.ActivityManagerService: long dumpJavaTracesTombstoned(int,java.lang.String,long)>(i35, r50, l25);

        l25 = l25 - $l6;

        $b7 = l25 cmp 0L;

        if $b7 > 0 goto label21;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Aborting stack trace dump (current extra pid=");

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i35);

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("); deadline exceeded.");

        $r19 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ActivityManager", $r19);

        $b9 = l26 cmp 0L;

        if $b9 < 0 goto label19;

        $r20 = new android.util.Pair;

        $r21 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l26);

        $r22 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l27);

        specialinvoke $r20.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r21, $r22);

        r66 = $r20;

        goto label20;

     label19:
        r66 = null;

     label20:
        return r66;

     label21:
        goto label18;

     label22:
        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", "Done dumping");

        $b4 = l26 cmp 0L;

        if $b4 < 0 goto label23;

        $r6 = new android.util.Pair;

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l26);

        $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l27);

        specialinvoke $r6.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r7, $r8);

        r67 = $r6;

        goto label24;

     label23:
        r67 = null;

     label24:
        return r67;
    }

    public static java.io.File dumpStackTraces(java.util.ArrayList, com.android.internal.os.ProcessCpuTracker, android.util.SparseArray, java.util.ArrayList, java.io.StringWriter)
    {
        java.util.ArrayList r0, r3;
        com.android.internal.os.ProcessCpuTracker r1;
        android.util.SparseArray r2;
        java.io.StringWriter r4;
        java.io.File $r5;

        r0 := @parameter0: java.util.ArrayList;

        r1 := @parameter1: com.android.internal.os.ProcessCpuTracker;

        r2 := @parameter2: android.util.SparseArray;

        r3 := @parameter3: java.util.ArrayList;

        r4 := @parameter4: java.io.StringWriter;

        $r5 = staticinvoke <com.android.server.am.ActivityManagerService: java.io.File dumpStackTraces(java.util.ArrayList,com.android.internal.os.ProcessCpuTracker,android.util.SparseArray,java.util.ArrayList,java.io.StringWriter,long[])>(r0, r1, r2, r3, r4, null);

        return $r5;
    }

    static java.io.File dumpStackTraces(java.util.ArrayList, com.android.internal.os.ProcessCpuTracker, android.util.SparseArray, java.util.ArrayList, java.io.StringWriter, long[])
    {
        android.util.SparseArray r0;
        java.util.ArrayList r1, r25, r27, r39;
        java.io.StringWriter r2;
        long[] r3;
        int i0, $i4, $i5, $i6, $i7, $i9, i11;
        com.android.internal.os.ProcessCpuTracker$Stats r4;
        java.lang.String $r10, $r19, $r35;
        java.lang.Object $r11, $r13;
        java.lang.Long $r12, $r14;
        long $l2, $l3;
        java.lang.Integer $r20;
        java.lang.Throwable $r21, $r24;
        com.android.internal.os.ProcessCpuTracker r26;
        java.io.File r34, r41;
        android.util.Pair r36;
        java.lang.StringBuilder r38, r40;
        java.io.PrintWriter r42;
        java.io.IOException r43;

        r25 := @parameter0: java.util.ArrayList;

        r26 := @parameter1: com.android.internal.os.ProcessCpuTracker;

        r0 := @parameter2: android.util.SparseArray;

        r1 := @parameter3: java.util.ArrayList;

        r2 := @parameter4: java.io.StringWriter;

        r3 := @parameter5: long[];

        r27 = null;

        r38 = new java.lang.StringBuilder;

        specialinvoke r38.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dumpStackTraces pids=");

        virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" nativepids=");

        virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r10 = virtualinvoke r38.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", $r10);

        if r26 == null goto label08;

        virtualinvoke r26.<com.android.internal.os.ProcessCpuTracker: void init()>();

     label01:
        staticinvoke <java.lang.Thread: void sleep(long)>(200L);

     label02:
        goto label04;

     label03:
        $r24 := @caughtexception;

     label04:
        virtualinvoke r26.<com.android.internal.os.ProcessCpuTracker: void update()>();

        i0 = virtualinvoke r26.<com.android.internal.os.ProcessCpuTracker: int countWorkingStats()>();

        r39 = new java.util.ArrayList;

        specialinvoke r39.<java.util.ArrayList: void <init>()>();

        i11 = 0;

     label05:
        r27 = r39;

        if i11 >= i0 goto label08;

        r27 = r39;

        $i4 = virtualinvoke r39.<java.util.ArrayList: int size()>();

        if $i4 >= 5 goto label08;

        r4 = virtualinvoke r26.<com.android.internal.os.ProcessCpuTracker: com.android.internal.os.ProcessCpuTracker$Stats getWorkingStats(int)>(i11);

        $i5 = r4.<com.android.internal.os.ProcessCpuTracker$Stats: int pid>;

        $i6 = virtualinvoke r0.<android.util.SparseArray: int indexOfKey(int)>($i5);

        if $i6 < 0 goto label06;

        $i9 = r4.<com.android.internal.os.ProcessCpuTracker$Stats: int pid>;

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);

        virtualinvoke r39.<java.util.ArrayList: boolean add(java.lang.Object)>($r20);

        goto label07;

     label06:
        r40 = new java.lang.StringBuilder;

        specialinvoke r40.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skipping next CPU consuming process, not a java proc: ");

        $i7 = r4.<com.android.internal.os.ProcessCpuTracker$Stats: int pid>;

        virtualinvoke r40.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r19 = virtualinvoke r40.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", $r19);

     label07:
        i11 = i11 + 1;

        goto label05;

     label08:
        r41 = new java.io.File;

        specialinvoke r41.<java.io.File: void <init>(java.lang.String)>("/data/anr");

        staticinvoke <com.android.server.am.ActivityManagerService: void maybePruneOldTraces(java.io.File)>(r41);

     label09:
        r34 = staticinvoke <com.android.server.am.ActivityManagerService: java.io.File createAnrDumpFile(java.io.File)>(r41);

     label10:
        $r35 = virtualinvoke r34.<java.io.File: java.lang.String getAbsolutePath()>();

        r36 = staticinvoke <com.android.server.am.ActivityManagerService: android.util.Pair dumpStackTraces(java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)>($r35, r25, r1, r27);

        if r3 == null goto label12;

        if r36 != null goto label11;

        r3[1] = -1L;

        r3[0] = -1L;

        goto label12;

     label11:
        $r11 = r36.<android.util.Pair: java.lang.Object first>;

        $r12 = (java.lang.Long) $r11;

        $l2 = virtualinvoke $r12.<java.lang.Long: long longValue()>();

        r3[0] = $l2;

        $r13 = r36.<android.util.Pair: java.lang.Object second>;

        $r14 = (java.lang.Long) $r13;

        $l3 = virtualinvoke $r14.<java.lang.Long: long longValue()>();

        r3[1] = $l3;

     label12:
        return r34;

     label13:
        $r21 := @caughtexception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", "Exception creating ANR dump file:", $r21);

        if r2 == null goto label14;

        virtualinvoke r2.<java.io.StringWriter: java.io.StringWriter append(java.lang.CharSequence)>("----- Exception creating ANR dump file -----\n");

        r42 = new java.io.PrintWriter;

        specialinvoke r42.<java.io.PrintWriter: void <init>(java.io.Writer)>(r2);

        r43 = (java.io.IOException) $r21;

        virtualinvoke r43.<java.io.IOException: void printStackTrace(java.io.PrintWriter)>(r42);

     label14:
        return null;

        catch java.lang.InterruptedException from label01 to label02 with label03;
        catch java.io.IOException from label09 to label10 with label13;
    }

    private void dumpUsersLocked(java.io.PrintWriter)
    {
        com.android.server.am.ActivityManagerService r0;
        java.io.PrintWriter r1;
        com.android.server.am.UserController $r2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.io.PrintWriter;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("ACTIVITY MANAGER USERS (dumpsys activity users)");

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.UserController mUserController>;

        virtualinvoke $r2.<com.android.server.am.UserController: void dump(java.io.PrintWriter)>(r1);

        return;
    }

    private void enforceWriteSettingsPermission(java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, $i1;
        java.lang.String $r1, r12, r15;
        boolean $z0;
        java.lang.StringBuilder $r2;
        java.lang.SecurityException $r11;
        android.content.Context r13;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r12 := @parameter0: java.lang.String;

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if i0 != 0 goto label1;

        return;

     label1:
        r13 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r1 = staticinvoke <android.provider.Settings: java.lang.String getPackageNameForUid(android.content.Context,int)>(r13, i0);

        $z0 = staticinvoke <android.provider.Settings: boolean checkAndNoteWriteSettingsOperation(android.content.Context,int,java.lang.String,boolean)>(r13, i0, $r1, 0);

        if $z0 == 0 goto label2;

        return;

     label2:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from pid=");

        $i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.WRITE_SETTINGS");

        r15 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r15);

        $r11 = new java.lang.SecurityException;

        specialinvoke $r11.<java.lang.SecurityException: void <init>(java.lang.String)>(r15);

        throw $r11;
    }

    private void ensureAllowedAssociations()
    {
        com.android.server.am.ActivityManagerService r0;
        android.util.ArrayMap r1, $r4, $r6, $r11;
        java.lang.String r2;
        android.util.ArraySet r3;
        int i0, $i1, $i2, $i3, i4;
        com.android.server.SystemConfig $r5;
        java.lang.Object $r8, $r9;
        com.android.server.am.ActivityManagerService$PackageAssociationInfo $r10;
        android.os.RemoteException $r13;
        boolean z2;
        android.content.pm.IPackageManager r14;
        android.content.pm.ApplicationInfo r15;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $r4 = r0.<com.android.server.am.ActivityManagerService: android.util.ArrayMap mAllowedAssociations>;

        if $r4 != null goto label10;

        $r5 = staticinvoke <com.android.server.SystemConfig: com.android.server.SystemConfig getInstance()>();

        r1 = virtualinvoke $r5.<com.android.server.SystemConfig: android.util.ArrayMap getAllowedAssociations()>();

        $r6 = new android.util.ArrayMap;

        $i1 = virtualinvoke r1.<android.util.ArrayMap: int size()>();

        specialinvoke $r6.<android.util.ArrayMap: void <init>(int)>($i1);

        r0.<com.android.server.am.ActivityManagerService: android.util.ArrayMap mAllowedAssociations> = $r6;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: android.content.pm.PackageManagerInternal getPackageManagerInternalLocked()>();

        i4 = 0;

     label01:
        $i2 = virtualinvoke r1.<android.util.ArrayMap: int size()>();

        if i4 >= $i2 goto label10;

        $r8 = virtualinvoke r1.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i4);

        r2 = (java.lang.String) $r8;

        $r9 = virtualinvoke r1.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i4);

        r3 = (android.util.ArraySet) $r9;

        z2 = 0;

     label02:
        r14 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

     label03:
        r15 = interfaceinvoke r14.<android.content.pm.IPackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int,int)>(r2, 131072, 0);

     label04:
        if r15 == null goto label07;

     label05:
        i0 = r15.<android.content.pm.ApplicationInfo: int flags>;

     label06:
        z2 = 0;

        $i3 = i0 & 2;

        if $i3 == 0 goto label07;

        z2 = 1;

     label07:
        goto label09;

     label08:
        $r13 := @caughtexception;

        z2 = 0;

     label09:
        $r11 = r0.<com.android.server.am.ActivityManagerService: android.util.ArrayMap mAllowedAssociations>;

        $r10 = new com.android.server.am.ActivityManagerService$PackageAssociationInfo;

        specialinvoke $r10.<com.android.server.am.ActivityManagerService$PackageAssociationInfo: void <init>(com.android.server.am.ActivityManagerService,java.lang.String,android.util.ArraySet,boolean)>(r0, r2, r3, z2);

        virtualinvoke $r11.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r10);

        i4 = i4 + 1;

        goto label01;

     label10:
        return;

        catch android.os.RemoteException from label02 to label03 with label08;
        catch android.os.RemoteException from label03 to label04 with label08;
        catch android.os.RemoteException from label05 to label06 with label08;
    }

    private com.android.server.am.ProcessRecord findAppProcess(android.os.IBinder, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1;
        com.android.server.am.ProcessList $r2;
        java.lang.Throwable $r3;
        android.os.IBinder r4;
        com.android.server.am.ProcessRecord r5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r4 := @parameter0: android.os.IBinder;

        r1 := @parameter1: java.lang.String;

        if r4 != null goto label1;

        return null;

     label1:
        entermonitor r0;

     label2:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        r5 = virtualinvoke $r2.<com.android.server.am.ProcessList: com.android.server.am.ProcessRecord findAppProcessLocked(android.os.IBinder,java.lang.String)>(r4, r1);

        exitmonitor r0;

     label3:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return r5;

     label4:
        $r3 := @caughtexception;

     label5:
        exitmonitor r0;

     label6:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r3;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    private com.android.server.am.ProcessRecord findProcessLocked(java.lang.String, int, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, i8, i9;
        com.android.server.am.ActivityManagerService$PidMap r1, $r3;
        com.android.server.am.UserController $r2;
        com.android.server.am.ProcessList $r4;
        com.android.server.am.ProcessList$MyProcessMap $r5;
        android.util.ArrayMap $r6;
        java.lang.Object $r7, $r8, $r9;
        java.lang.Throwable $r10, $r11;
        java.lang.String r12, r13;
        com.android.server.am.ProcessRecord r14, r15, r17, r19;
        android.util.SparseArray r18;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r12 := @parameter0: java.lang.String;

        i7 := @parameter1: int;

        r13 := @parameter2: java.lang.String;

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.UserController mUserController>;

        $i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i0 = virtualinvoke $r2.<com.android.server.am.UserController: int handleIncomingUser(int,int,int,boolean,int,java.lang.String,java.lang.String)>($i1, $i2, i7, 1, 2, r13, null);

        r14 = null;

     label01:
        i8 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r12);

     label02:
        r14 = null;

     label03:
        r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

     label04:
        r14 = null;

     label05:
        entermonitor r1;

     label06:
        r14 = null;

     label07:
        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        r15 = virtualinvoke $r3.<com.android.server.am.ActivityManagerService$PidMap: com.android.server.am.ProcessRecord get(int)>(i8);

     label08:
        r14 = r15;

     label09:
        exitmonitor r1;

     label10:
        goto label15;

     label11:
        $r11 := @caughtexception;

     label12:
        exitmonitor r1;

     label13:
        throw $r11;

     label14:
        $r10 := @caughtexception;

        r15 = r14;

     label15:
        r17 = r15;

        if r15 != null goto label18;

        $r4 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r5 = $r4.<com.android.server.am.ProcessList: com.android.server.am.ProcessList$MyProcessMap mProcessNames>;

        $r6 = virtualinvoke $r5.<com.android.server.am.ProcessList$MyProcessMap: android.util.ArrayMap getMap()>();

        $r7 = virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r12);

        r18 = (android.util.SparseArray) $r7;

        r17 = r15;

        if r18 == null goto label18;

        r17 = r15;

        $i3 = virtualinvoke r18.<android.util.SparseArray: int size()>();

        if $i3 <= 0 goto label18;

        $r8 = virtualinvoke r18.<android.util.SparseArray: java.lang.Object valueAt(int)>(0);

        r19 = (com.android.server.am.ProcessRecord) $r8;

        r17 = r19;

        if i0 == -1 goto label18;

        r17 = r19;

        $i4 = r19.<com.android.server.am.ProcessRecord: int userId>;

        if $i4 == i0 goto label18;

        i9 = 1;

     label16:
        r17 = r19;

        $i5 = virtualinvoke r18.<android.util.SparseArray: int size()>();

        if i9 >= $i5 goto label18;

        $r9 = virtualinvoke r18.<android.util.SparseArray: java.lang.Object valueAt(int)>(i9);

        r17 = (com.android.server.am.ProcessRecord) $r9;

        $i6 = r17.<com.android.server.am.ProcessRecord: int userId>;

        if $i6 != i0 goto label17;

        goto label18;

     label17:
        i9 = i9 + 1;

        goto label16;

     label18:
        return r17;

        catch java.lang.NumberFormatException from label01 to label02 with label14;
        catch java.lang.NumberFormatException from label03 to label04 with label14;
        catch java.lang.NumberFormatException from label05 to label06 with label14;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
        catch java.lang.NumberFormatException from label13 to label14 with label14;
    }

    private void finishForceStopPackageLocked(java.lang.String, int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, $i1, $i2, $i3, $i4, $i5;
        android.content.Intent $r1;
        android.net.Uri $r2;
        boolean $z0;
        java.lang.String r6;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r6 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r1 = new android.content.Intent;

        $r2 = staticinvoke <android.net.Uri: android.net.Uri fromParts(java.lang.String,java.lang.String,java.lang.String)>("package", r6, null);

        specialinvoke $r1.<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>("android.intent.action.PACKAGE_RESTARTED", $r2);

        $z0 = r0.<com.android.server.am.ActivityManagerService: boolean mProcessesReady>;

        if $z0 != 0 goto label1;

        virtualinvoke $r1.<android.content.Intent: android.content.Intent addFlags(int)>(1342177280);

     label1:
        virtualinvoke $r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.intent.extra.UID", i0);

        $i1 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        virtualinvoke $r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.intent.extra.user_handle", $i1);

        $i2 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        $i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i4 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i5 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: int broadcastIntentLocked(com.android.server.am.ProcessRecord,java.lang.String,java.lang.String,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String[],int,android.os.Bundle,boolean,boolean,int,int,int,int,int)>(null, null, null, $r1, null, null, 0, null, null, null, -1, null, 0, 0, $i2, 1000, $i3, $i4, $i5);

        return;
    }

    private void forceStopPackageLocked(java.lang.String, int, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1, r2;
        int i0, $i1, $i2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        $i1 = staticinvoke <android.os.UserHandle: int getAppId(int)>(i0);

        $i2 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean forceStopPackageLocked(java.lang.String,int,boolean,boolean,boolean,boolean,boolean,int,java.lang.String)>(r1, $i1, 0, 0, 1, 0, 0, $i2, r2);

        return;
    }

    private final java.util.List generateApplicationProvidersLocked(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1;
        int i0, $i1, $i2, $i3, $i4, $i6, $i7, i8, i9, i10, i11, i12, i13;
        android.content.pm.ProviderInfo r2;
        boolean z0, $z1, $z3;
        com.android.server.am.ContentProviderRecord r4, $r27, r34;
        android.content.pm.IPackageManager $r5;
        java.lang.String $r6, $r11, $r13, $r15, $r16, $r18, $r24, $r25, $r26, $r36;
        android.content.pm.ParceledListSlice $r7;
        android.util.ArrayMap $r8, $r9, $r19;
        java.lang.Object $r10;
        android.content.pm.ApplicationInfo $r12, $r21, $r22, $r28, $r35;
        android.content.ComponentName $r14;
        com.android.server.am.ProviderMap $r17, $r29;
        com.android.server.am.ProcessStatsService $r23;
        long $l5;
        android.os.RemoteException $r31;
        java.util.List r32;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

     label01:
        $r5 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        $r6 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $i1 = r1.<com.android.server.am.ProcessRecord: int uid>;

        $r7 = interfaceinvoke $r5.<android.content.pm.IPackageManager: android.content.pm.ParceledListSlice queryContentProviders(java.lang.String,int,int,java.lang.String)>($r6, $i1, 268438528, null);

        r32 = virtualinvoke $r7.<android.content.pm.ParceledListSlice: java.util.List getList()>();

     label02:
        goto label04;

     label03:
        $r31 := @caughtexception;

        r32 = null;

     label04:
        i0 = r1.<com.android.server.am.ProcessRecord: int userId>;

        if r32 == null goto label11;

        i8 = interfaceinvoke r32.<java.util.List: int size()>();

        $r9 = r1.<com.android.server.am.ProcessRecord: android.util.ArrayMap pubProviders>;

        $r8 = r1.<com.android.server.am.ProcessRecord: android.util.ArrayMap pubProviders>;

        $i2 = virtualinvoke $r8.<android.util.ArrayMap: int size()>();

        $i3 = $i2 + i8;

        virtualinvoke $r9.<android.util.ArrayMap: void ensureCapacity(int)>($i3);

        i9 = 0;

     label05:
        if i9 >= i8 goto label11;

        $r10 = interfaceinvoke r32.<java.util.List: java.lang.Object get(int)>(i9);

        r2 = (android.content.pm.ProviderInfo) $r10;

        $r13 = r2.<android.content.pm.ProviderInfo: java.lang.String processName>;

        $r12 = r2.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r11 = r2.<android.content.pm.ProviderInfo: java.lang.String name>;

        $i4 = r2.<android.content.pm.ProviderInfo: int flags>;

        z0 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean isSingleton(java.lang.String,android.content.pm.ApplicationInfo,java.lang.String,int)>($r13, $r12, $r11, $i4);

        if z0 == 0 goto label06;

        $i6 = r1.<com.android.server.am.ProcessRecord: int uid>;

        $i7 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i6);

        if $i7 == 0 goto label06;

        interfaceinvoke r32.<java.util.List: java.lang.Object remove(int)>(i9);

        i10 = i8 + -1;

        i11 = i9 - 1;

        i12 = i10;

        goto label10;

     label06:
        $r14 = new android.content.ComponentName;

        $r16 = r2.<android.content.pm.ProviderInfo: java.lang.String packageName>;

        $r15 = r2.<android.content.pm.ProviderInfo: java.lang.String name>;

        specialinvoke $r14.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r16, $r15);

        $r17 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProviderMap mProviderMap>;

        r4 = virtualinvoke $r17.<com.android.server.am.ProviderMap: com.android.server.am.ContentProviderRecord getProviderByClass(android.content.ComponentName,int)>($r14, i0);

        r34 = r4;

        if r4 != null goto label07;

        $r27 = new com.android.server.am.ContentProviderRecord;

        $r28 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        specialinvoke $r27.<com.android.server.am.ContentProviderRecord: void <init>(com.android.server.am.ActivityManagerService,android.content.pm.ProviderInfo,android.content.pm.ApplicationInfo,android.content.ComponentName,boolean)>(r0, r2, $r28, $r14, z0);

        r34 = $r27;

        $r29 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProviderMap mProviderMap>;

        virtualinvoke $r29.<com.android.server.am.ProviderMap: void putProviderByClass(android.content.ComponentName,com.android.server.am.ContentProviderRecord)>($r14, $r27);

     label07:
        $r19 = r1.<com.android.server.am.ProcessRecord: android.util.ArrayMap pubProviders>;

        $r18 = r2.<android.content.pm.ProviderInfo: java.lang.String name>;

        virtualinvoke $r19.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r18, r34);

        $z1 = r2.<android.content.pm.ProviderInfo: boolean multiprocess>;

        if $z1 == 0 goto label08;

        $r26 = "android";

        $r25 = r2.<android.content.pm.ProviderInfo: java.lang.String packageName>;

        $z3 = virtualinvoke $r26.<java.lang.String: boolean equals(java.lang.Object)>($r25);

        if $z3 != 0 goto label09;

     label08:
        $r21 = r2.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r24 = $r21.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r22 = r2.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $l5 = $r22.<android.content.pm.ApplicationInfo: long longVersionCode>;

        $r23 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        virtualinvoke r1.<com.android.server.am.ProcessRecord: boolean addPackage(java.lang.String,long,com.android.server.am.ProcessStatsService)>($r24, $l5, $r23);

     label09:
        $r35 = r2.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r36 = $r35.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void notifyPackageUse(java.lang.String,int)>($r36, 4);

        i11 = i9;

        i12 = i8;

     label10:
        i13 = i11 + 1;

        i8 = i12;

        i9 = i13;

        goto label05;

     label11:
        return r32;

        catch android.os.RemoteException from label01 to label02 with label03;
    }

    private int getAppId(java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, $i1;
        android.content.Context $r1;
        android.content.pm.PackageManager $r2;
        android.content.pm.ApplicationInfo $r3;
        android.content.pm.PackageManager$NameNotFoundException $r4;
        java.lang.String r5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r5 := @parameter0: java.lang.String;

        if r5 == null goto label4;

     label1:
        $r1 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r3 = virtualinvoke $r2.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>(r5, 0);

        $i1 = $r3.<android.content.pm.ApplicationInfo: int uid>;

        i0 = staticinvoke <android.os.UserHandle: int getAppId(int)>($i1);

     label2:
        return i0;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r4.<android.content.pm.PackageManager$NameNotFoundException: void printStackTrace()>();

     label4:
        return -1;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label3;
    }

    private android.util.ArraySet getBackgroundLaunchBroadcasts()
    {
        com.android.server.am.ActivityManagerService r0;
        android.util.ArraySet $r1, $r2, $r4;
        com.android.server.SystemConfig $r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 = r0.<com.android.server.am.ActivityManagerService: android.util.ArraySet mBackgroundLaunchBroadcasts>;

        if $r1 != null goto label1;

        $r3 = staticinvoke <com.android.server.SystemConfig: com.android.server.SystemConfig getInstance()>();

        $r4 = virtualinvoke $r3.<com.android.server.SystemConfig: android.util.ArraySet getAllowImplicitBroadcasts()>();

        r0.<com.android.server.am.ActivityManagerService: android.util.ArraySet mBackgroundLaunchBroadcasts> = $r4;

     label1:
        $r2 = r0.<com.android.server.am.ActivityManagerService: android.util.ArraySet mBackgroundLaunchBroadcasts>;

        return $r2;
    }

    private android.util.ArrayMap getCommonServicesLocked(boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        boolean z0;
        android.util.ArrayMap $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26;

        r0 := @this: com.android.server.am.ActivityManagerService;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label2;

        $r23 = r0.<com.android.server.am.ActivityManagerService: android.util.ArrayMap mIsolatedAppBindArgs>;

        if $r23 != null goto label1;

        $r25 = new android.util.ArrayMap;

        specialinvoke $r25.<android.util.ArrayMap: void <init>(int)>(1);

        r0.<com.android.server.am.ActivityManagerService: android.util.ArrayMap mIsolatedAppBindArgs> = $r25;

        staticinvoke <com.android.server.am.ActivityManagerService: void addServiceToMap(android.util.ArrayMap,java.lang.String)>($r25, "package");

        $r26 = r0.<com.android.server.am.ActivityManagerService: android.util.ArrayMap mIsolatedAppBindArgs>;

        staticinvoke <com.android.server.am.ActivityManagerService: void addServiceToMap(android.util.ArrayMap,java.lang.String)>($r26, "permissionmgr");

     label1:
        $r24 = r0.<com.android.server.am.ActivityManagerService: android.util.ArrayMap mIsolatedAppBindArgs>;

        return $r24;

     label2:
        $r1 = r0.<com.android.server.am.ActivityManagerService: android.util.ArrayMap mAppBindArgs>;

        if $r1 != null goto label3;

        $r3 = new android.util.ArrayMap;

        specialinvoke $r3.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: android.util.ArrayMap mAppBindArgs> = $r3;

        staticinvoke <com.android.server.am.ActivityManagerService: void addServiceToMap(android.util.ArrayMap,java.lang.String)>($r3, "package");

        $r4 = r0.<com.android.server.am.ActivityManagerService: android.util.ArrayMap mAppBindArgs>;

        staticinvoke <com.android.server.am.ActivityManagerService: void addServiceToMap(android.util.ArrayMap,java.lang.String)>($r4, "permissionmgr");

        $r5 = r0.<com.android.server.am.ActivityManagerService: android.util.ArrayMap mAppBindArgs>;

        staticinvoke <com.android.server.am.ActivityManagerService: void addServiceToMap(android.util.ArrayMap,java.lang.String)>($r5, "window");

        $r6 = r0.<com.android.server.am.ActivityManagerService: android.util.ArrayMap mAppBindArgs>;

        staticinvoke <com.android.server.am.ActivityManagerService: void addServiceToMap(android.util.ArrayMap,java.lang.String)>($r6, "alarm");

        $r7 = r0.<com.android.server.am.ActivityManagerService: android.util.ArrayMap mAppBindArgs>;

        staticinvoke <com.android.server.am.ActivityManagerService: void addServiceToMap(android.util.ArrayMap,java.lang.String)>($r7, "display");

        $r8 = r0.<com.android.server.am.ActivityManagerService: android.util.ArrayMap mAppBindArgs>;

        staticinvoke <com.android.server.am.ActivityManagerService: void addServiceToMap(android.util.ArrayMap,java.lang.String)>($r8, "network_management");

        $r9 = r0.<com.android.server.am.ActivityManagerService: android.util.ArrayMap mAppBindArgs>;

        staticinvoke <com.android.server.am.ActivityManagerService: void addServiceToMap(android.util.ArrayMap,java.lang.String)>($r9, "connectivity");

        $r10 = r0.<com.android.server.am.ActivityManagerService: android.util.ArrayMap mAppBindArgs>;

        staticinvoke <com.android.server.am.ActivityManagerService: void addServiceToMap(android.util.ArrayMap,java.lang.String)>($r10, "accessibility");

        $r11 = r0.<com.android.server.am.ActivityManagerService: android.util.ArrayMap mAppBindArgs>;

        staticinvoke <com.android.server.am.ActivityManagerService: void addServiceToMap(android.util.ArrayMap,java.lang.String)>($r11, "input_method");

        $r12 = r0.<com.android.server.am.ActivityManagerService: android.util.ArrayMap mAppBindArgs>;

        staticinvoke <com.android.server.am.ActivityManagerService: void addServiceToMap(android.util.ArrayMap,java.lang.String)>($r12, "input");

        $r13 = r0.<com.android.server.am.ActivityManagerService: android.util.ArrayMap mAppBindArgs>;

        staticinvoke <com.android.server.am.ActivityManagerService: void addServiceToMap(android.util.ArrayMap,java.lang.String)>($r13, "graphicsstats");

        $r14 = r0.<com.android.server.am.ActivityManagerService: android.util.ArrayMap mAppBindArgs>;

        staticinvoke <com.android.server.am.ActivityManagerService: void addServiceToMap(android.util.ArrayMap,java.lang.String)>($r14, "appops");

        $r15 = r0.<com.android.server.am.ActivityManagerService: android.util.ArrayMap mAppBindArgs>;

        staticinvoke <com.android.server.am.ActivityManagerService: void addServiceToMap(android.util.ArrayMap,java.lang.String)>($r15, "content");

        $r16 = r0.<com.android.server.am.ActivityManagerService: android.util.ArrayMap mAppBindArgs>;

        staticinvoke <com.android.server.am.ActivityManagerService: void addServiceToMap(android.util.ArrayMap,java.lang.String)>($r16, "jobscheduler");

        $r17 = r0.<com.android.server.am.ActivityManagerService: android.util.ArrayMap mAppBindArgs>;

        staticinvoke <com.android.server.am.ActivityManagerService: void addServiceToMap(android.util.ArrayMap,java.lang.String)>($r17, "notification");

        $r18 = r0.<com.android.server.am.ActivityManagerService: android.util.ArrayMap mAppBindArgs>;

        staticinvoke <com.android.server.am.ActivityManagerService: void addServiceToMap(android.util.ArrayMap,java.lang.String)>($r18, "vibrator");

        $r19 = r0.<com.android.server.am.ActivityManagerService: android.util.ArrayMap mAppBindArgs>;

        staticinvoke <com.android.server.am.ActivityManagerService: void addServiceToMap(android.util.ArrayMap,java.lang.String)>($r19, "account");

        $r20 = r0.<com.android.server.am.ActivityManagerService: android.util.ArrayMap mAppBindArgs>;

        staticinvoke <com.android.server.am.ActivityManagerService: void addServiceToMap(android.util.ArrayMap,java.lang.String)>($r20, "power");

        $r21 = r0.<com.android.server.am.ActivityManagerService: android.util.ArrayMap mAppBindArgs>;

        staticinvoke <com.android.server.am.ActivityManagerService: void addServiceToMap(android.util.ArrayMap,java.lang.String)>($r21, "user");

        $r22 = r0.<com.android.server.am.ActivityManagerService: android.util.ArrayMap mAppBindArgs>;

        staticinvoke <com.android.server.am.ActivityManagerService: void addServiceToMap(android.util.ArrayMap,java.lang.String)>($r22, "mount");

     label3:
        $r2 = r0.<com.android.server.am.ActivityManagerService: android.util.ArrayMap mAppBindArgs>;

        return $r2;
    }

    private android.app.ContentProviderHolder getContentProviderExternalUnchecked(java.lang.String, android.os.IBinder, int, java.lang.String, int)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1, r3;
        android.os.IBinder r2;
        int i0, i1;
        android.app.ContentProviderHolder $r4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.IBinder;

        i0 := @parameter2: int;

        r3 := @parameter3: java.lang.String;

        i1 := @parameter4: int;

        $r4 = specialinvoke r0.<com.android.server.am.ActivityManagerService: android.app.ContentProviderHolder getContentProviderImpl(android.app.IApplicationThread,java.lang.String,android.os.IBinder,int,java.lang.String,java.lang.String,boolean,int)>(null, r1, r2, i0, null, r3, 1, i1);

        return $r4;
    }

    private android.app.ContentProviderHolder getContentProviderImpl(android.app.IApplicationThread, java.lang.String, android.os.IBinder, int, java.lang.String, java.lang.String, boolean, int)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1, $r9, $r11, $r15, $r17, $r21, $r23, $r25, $r28, $r29, $r30, $r37, $r40, $r42, $r44, $r46, $r53, $r54, $r56, $r58, $r60, $r61, $r62, $r63, $r64, $r68, $r69, $r72, $r73, $r80, $r81, $r87, $r88, $r91, $r106, $r107, r163, r165, r172, r174, r178, r179, r185, r186, $r193, r206, r207, r216, $r229, r232, r235, $r236, r248, r250;
        long l0, $l5, $l6, $l7, l27, l33, l35, l38, l39;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, z12, z13, z14, z15, z16, z17, z18, z19, z20, z21, z22, z23, z24, z25, z26, z27, z28, z29, z30, z31;
        int i1, $i2, $i3, $i4, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, i25, i26, i29, i31, i32, i34, $i36, i37;
        android.content.pm.ApplicationInfo r2, $r5, $r8, $r10, $r14, $r16, $r18, $r19, $r20, $r24, $r26, $r27, $r36, $r39, $r41, $r51, $r55, $r57, $r59, $r65, $r90, $r105, r173, r217, r220, $r230, $r234;
        android.content.ComponentName r3, $r67, $r71, $r79, r213;
        com.android.server.am.ProviderMap $r4, $r31, $r33, $r34, $r89;
        android.app.ContentProviderHolder $r6, r180, r224;
        java.lang.StringBuilder $r7, r169, r175, r183, r194, r202, r210, r212, r218, r228, r237, r242, r244;
        com.android.server.am.ProcessList $r12, $r78;
        com.android.server.am.ProcessRecord $r13, $r70, $r74, $r75, $r76, $r77, $r82, $r83, $r84, $r85, $r86, r167, r176, $r190, $r191, r196, r197, r223, r231, r249;
        android.content.pm.IPackageManager $r22, $r35, $r66, r215;
        java.util.ArrayList $r32, $r38, $r49;
        android.app.IApplicationThread $r43, $r48, r162;
        android.util.ArrayMap $r45, $r47;
        com.android.server.am.ContentProviderRecord $r50, $r52, r171, r189, r214, r222;
        java.lang.Throwable $r92, $r93, $r94, $r95, $r96, $r97, $r98, $r99, $r100, $r102, $r103, $r104, $r108, $r110, $r111, $r112, $r113, $r114, $r115, $r116, $r117, $r119, $r120, $r121, $r123, $r124, $r125, $r126, $r127, $r129, $r130, $r131, $r132, $r133, $r134, $r135, $r136, $r137, $r138, $r139, $r141, $r142, $r143, $r144, $r145, $r147, $r148, $r150, $r151, $r152, $r154, $r156, $r157, $r158, $r159, $r161, r170, r219, r226, r247;
        android.os.RemoteException $r101, $r109, $r118, $r122, $r128, $r140, $r146, $r149, $r153, $r155, $r160;
        android.os.IBinder r164;
        android.content.pm.ProviderInfo r166, r177, r184, $r192, r198, r204, r205, r238;
        java.lang.SecurityException r168, r181, r182, r200, r201, r240, r241;
        com.android.server.am.ContentProviderConnection r187, r195, r199, r239;
        java.lang.IllegalArgumentException r208;
        java.lang.IllegalStateException r209;
        com.android.server.am.UserController $r211;
        java.lang.Object r225;
        com.android.server.am.HostingRecord r233;
        android.content.IContentProvider r243, r245;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r162 := @parameter0: android.app.IApplicationThread;

        r163 := @parameter1: java.lang.String;

        r164 := @parameter2: android.os.IBinder;

        i25 := @parameter3: int;

        r165 := @parameter4: java.lang.String;

        r1 := @parameter5: java.lang.String;

        z12 := @parameter6: boolean;

        i26 := @parameter7: int;

        r166 = null;

        entermonitor r0;

     label001:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        l27 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

     label002:
        if r162 == null goto label007;

     label003:
        r167 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord getRecordForAppLocked(android.app.IApplicationThread)>(r162);

     label004:
        if r167 == null goto label005;

        goto label008;

     label005:
        r168 = new java.lang.SecurityException;

        r169 = new java.lang.StringBuilder;

        specialinvoke r169.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r169.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to find app for caller ");

        virtualinvoke r169.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r162);

        virtualinvoke r169.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (pid=");

        $i24 = staticinvoke <android.os.Binder: int getCallingPid()>();

        virtualinvoke r169.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i24);

        virtualinvoke r169.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") when getting content provider ");

        virtualinvoke r169.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r163);

        $r91 = virtualinvoke r169.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r168.<java.lang.SecurityException: void <init>(java.lang.String)>($r91);

        throw r168;

     label006:
        $r130 := @caughtexception;

        r170 = $r130;

        goto label324;

     label007:
        r167 = null;

     label008:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void checkTime(long,java.lang.String)>(l27, "getContentProviderImpl: getProviderByName");

        $r4 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProviderMap mProviderMap>;

        r171 = virtualinvoke $r4.<com.android.server.am.ProviderMap: com.android.server.am.ContentProviderRecord getProviderByName(java.lang.String,int)>(r163, i26);

     label009:
        if r171 != null goto label022;

        if i26 == 0 goto label022;

     label010:
        $r89 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProviderMap mProviderMap>;

        r171 = virtualinvoke $r89.<com.android.server.am.ProviderMap: com.android.server.am.ContentProviderRecord getProviderByName(java.lang.String,int)>(r163, 0);

     label011:
        if r171 == null goto label020;

     label012:
        r166 = r171.<com.android.server.am.ContentProviderRecord: android.content.pm.ProviderInfo info>;

        r172 = r166.<android.content.pm.ProviderInfo: java.lang.String processName>;

        r173 = r166.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        r174 = r166.<android.content.pm.ProviderInfo: java.lang.String name>;

     label013:
        $i22 = r166.<android.content.pm.ProviderInfo: int flags>;

        $z11 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean isSingleton(java.lang.String,android.content.pm.ApplicationInfo,java.lang.String,int)>(r172, r173, r174, $i22);

        if $z11 == 0 goto label018;

     label014:
        if r167 != null goto label015;

        i29 = i25;

        goto label016;

     label015:
        i29 = r167.<com.android.server.am.ProcessRecord: int uid>;

     label016:
        $r90 = r166.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i23 = $r90.<android.content.pm.ApplicationInfo: int uid>;

        z13 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean isValidSingletonCall(int,int)>(i29, $i23);

     label017:
        if z13 == 0 goto label018;

        i26 = 0;

        z14 = 0;

        goto label023;

     label018:
        r171 = null;

        r166 = null;

        z14 = 1;

        goto label023;

     label019:
        $r138 := @caughtexception;

        r170 = $r138;

        goto label324;

     label020:
        z14 = 1;

        goto label023;

     label021:
        $r102 := @caughtexception;

        r170 = $r102;

        goto label324;

     label022:
        z14 = 1;

     label023:
        z15 = 0;

        if r171 == null goto label034;

     label024:
        $r82 = r171.<com.android.server.am.ContentProviderRecord: com.android.server.am.ProcessRecord proc>;

        if $r82 == null goto label034;

        $r83 = r171.<com.android.server.am.ContentProviderRecord: com.android.server.am.ProcessRecord proc>;

        z16 = $r83.<com.android.server.am.ProcessRecord: boolean killed>;

     label025:
        if z16 != 0 goto label026;

        z15 = 1;

        goto label027;

     label026:
        z15 = 0;

     label027:
        $r84 = r171.<com.android.server.am.ContentProviderRecord: com.android.server.am.ProcessRecord proc>;

        $z9 = $r84.<com.android.server.am.ProcessRecord: boolean killed>;

        if $z9 == 0 goto label031;

        $r85 = r171.<com.android.server.am.ContentProviderRecord: com.android.server.am.ProcessRecord proc>;

        $z10 = $r85.<com.android.server.am.ProcessRecord: boolean killedByAm>;

        if $z10 == 0 goto label031;

        r175 = new java.lang.StringBuilder;

        specialinvoke r175.<java.lang.StringBuilder: void <init>()>();

     label028:
        $r86 = r171.<com.android.server.am.ContentProviderRecord: com.android.server.am.ProcessRecord proc>;

        $r87 = virtualinvoke $r86.<com.android.server.am.ProcessRecord: java.lang.String toString()>();

        virtualinvoke r175.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r87);

        virtualinvoke r175.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" was killed by AM but isn\'t really dead");

        $r88 = virtualinvoke r175.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("ActivityManager", $r88);

        r176 = r171.<com.android.server.am.ContentProviderRecord: com.android.server.am.ProcessRecord proc>;

     label029:
        goto label035;

     label030:
        $r135 := @caughtexception;

        r170 = $r135;

        goto label324;

     label031:
        r176 = null;

        goto label035;

     label032:
        $r98 := @caughtexception;

        r170 = $r98;

        goto label324;

     label033:
        $r136 := @caughtexception;

        r170 = $r136;

        goto label324;

     label034:
        r176 = null;

     label035:
        if z15 == 0 goto label109;

     label036:
        r177 = r171.<com.android.server.am.ContentProviderRecord: android.content.pm.ProviderInfo info>;

     label037:
        if r167 == null goto label049;

     label038:
        $z8 = virtualinvoke r171.<com.android.server.am.ContentProviderRecord: boolean canRunHere(com.android.server.am.ProcessRecord)>(r167);

        if $z8 == 0 goto label049;

        r178 = specialinvoke r0.<com.android.server.am.ActivityManagerService: java.lang.String checkContentProviderAssociation(com.android.server.am.ProcessRecord,int,android.content.pm.ProviderInfo)>(r167, i25, r177);

     label039:
        if r178 != null goto label046;

     label040:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void checkTime(long,java.lang.String)>(l27, "getContentProviderImpl: before checkContentProviderPermission");

        r179 = specialinvoke r0.<com.android.server.am.ActivityManagerService: java.lang.String checkContentProviderPermissionLocked(android.content.pm.ProviderInfo,com.android.server.am.ProcessRecord,int,boolean)>(r177, r167, i26, z14);

     label041:
        if r179 != null goto label044;

     label042:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void checkTime(long,java.lang.String)>(l27, "getContentProviderImpl: after checkContentProviderPermission");

        r180 = virtualinvoke r171.<com.android.server.am.ContentProviderRecord: android.app.ContentProviderHolder newHolder(com.android.server.am.ContentProviderConnection)>(null);

        r180.<android.app.ContentProviderHolder: android.content.IContentProvider provider> = null;

        exitmonitor r0;

     label043:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return r180;

     label044:
        r181 = new java.lang.SecurityException;

        specialinvoke r181.<java.lang.SecurityException: void <init>(java.lang.String)>(r179);

        throw r181;

     label045:
        $r143 := @caughtexception;

        r170 = $r143;

        goto label324;

     label046:
        r182 = new java.lang.SecurityException;

        r183 = new java.lang.StringBuilder;

        specialinvoke r183.<java.lang.StringBuilder: void <init>()>();

     label047:
        virtualinvoke r183.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Content provider lookup ");

        $r79 = r171.<com.android.server.am.ContentProviderRecord: android.content.ComponentName name>;

        $r80 = virtualinvoke $r79.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        virtualinvoke r183.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r80);

        virtualinvoke r183.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" failed: association not allowed with package ");

        virtualinvoke r183.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r178);

        $r81 = virtualinvoke r183.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r182.<java.lang.SecurityException: void <init>(java.lang.String)>($r81);

        throw r182;

     label048:
        $r139 := @caughtexception;

        r170 = $r139;

        goto label324;

     label049:
        $r66 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        r184 = interfaceinvoke $r66.<android.content.pm.IPackageManager: android.content.pm.ProviderInfo resolveContentProvider(java.lang.String,int,int)>(r163, 0, i26);

     label050:
        if r184 != null goto label053;

     label051:
        exitmonitor r0;

     label052:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return null;

     label053:
        goto label056;

     label054:
        $r125 := @caughtexception;

        r170 = $r125;

        goto label324;

     label055:
        $r109 := @caughtexception;

     label056:
        r185 = specialinvoke r0.<com.android.server.am.ActivityManagerService: java.lang.String checkContentProviderAssociation(com.android.server.am.ProcessRecord,int,android.content.pm.ProviderInfo)>(r167, i25, r177);

     label057:
        if r185 != null goto label097;

     label058:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void checkTime(long,java.lang.String)>(l27, "getContentProviderImpl: before checkContentProviderPermission");

        r186 = specialinvoke r0.<com.android.server.am.ActivityManagerService: java.lang.String checkContentProviderPermissionLocked(android.content.pm.ProviderInfo,com.android.server.am.ProcessRecord,int,boolean)>(r177, r167, i26, z14);

     label059:
        if r186 != null goto label094;

     label060:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void checkTime(long,java.lang.String)>(l27, "getContentProviderImpl: after checkContentProviderPermission");

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void checkTime(long,java.lang.String)>(l27, "getContentProviderImpl: incProviderCountLocked");

     label061:
        r187 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ContentProviderConnection incProviderCountLocked(com.android.server.am.ProcessRecord,com.android.server.am.ContentProviderRecord,android.os.IBinder,int,java.lang.String,java.lang.String,boolean)>(r167, r171, r164, i25, r165, r1, z12);

     label062:
        if r187 == null goto label071;

     label063:
        $i19 = r187.<com.android.server.am.ContentProviderConnection: int stableCount>;

        $i18 = r187.<com.android.server.am.ContentProviderConnection: int unstableCount>;

        $i20 = $i19 + $i18;

        if $i20 != 1 goto label071;

     label064:
        $r76 = r171.<com.android.server.am.ContentProviderRecord: com.android.server.am.ProcessRecord proc>;

        if $r76 == null goto label069;

     label065:
        if r167 == null goto label069;

     label066:
        $i21 = r167.<com.android.server.am.ProcessRecord: int setAdj>;

        if $i21 > 250 goto label069;

     label067:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void checkTime(long,java.lang.String)>(l27, "getContentProviderImpl: before updateLruProcess");

        $r78 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r77 = r171.<com.android.server.am.ContentProviderRecord: com.android.server.am.ProcessRecord proc>;

        virtualinvoke $r78.<com.android.server.am.ProcessList: void updateLruProcessLocked(com.android.server.am.ProcessRecord,boolean,com.android.server.am.ProcessRecord)>($r77, 0, null);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void checkTime(long,java.lang.String)>(l27, "getContentProviderImpl: after updateLruProcess");

     label068:
        goto label071;

     label069:
        goto label071;

     label070:
        $r108 := @caughtexception;

        r170 = $r108;

        goto label324;

     label071:
        r189 = r171;

     label072:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void checkTime(long,java.lang.String)>(l27, "getContentProviderImpl: before updateOomAdj");

        $r190 = r171.<com.android.server.am.ContentProviderRecord: com.android.server.am.ProcessRecord proc>;

        i31 = $r190.<com.android.server.am.ProcessRecord: int verifiedAdj>;

        $r191 = r171.<com.android.server.am.ContentProviderRecord: com.android.server.am.ProcessRecord proc>;

        z17 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean updateOomAdjLocked(com.android.server.am.ProcessRecord,boolean,java.lang.String)>($r191, 1, "updateOomAdj_getProvider");

     label073:
        z18 = z17;

        if z17 == 0 goto label076;

        z18 = z17;

     label074:
        $r74 = r171.<com.android.server.am.ContentProviderRecord: com.android.server.am.ProcessRecord proc>;

        $i17 = $r74.<com.android.server.am.ProcessRecord: int setAdj>;

        if i31 == $i17 goto label076;

        $r75 = r171.<com.android.server.am.ContentProviderRecord: com.android.server.am.ProcessRecord proc>;

        z0 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean isProcessAliveLocked(com.android.server.am.ProcessRecord)>($r75);

     label075:
        z18 = z17;

        if z0 != 0 goto label076;

        z18 = 0;

     label076:
        $r192 = r189.<com.android.server.am.ContentProviderRecord: android.content.pm.ProviderInfo info>;

        $r193 = $r192.<android.content.pm.ProviderInfo: java.lang.String packageName>;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void maybeUpdateProviderUsageStatsLocked(com.android.server.am.ProcessRecord,java.lang.String,java.lang.String)>(r167, $r193, r163);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void checkTime(long,java.lang.String)>(l27, "getContentProviderImpl: after updateOomAdj");

     label077:
        if z18 != 0 goto label085;

     label078:
        r194 = new java.lang.StringBuilder;

        specialinvoke r194.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r194.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Existing provider ");

        $r71 = r189.<com.android.server.am.ContentProviderRecord: android.content.ComponentName name>;

        $r72 = virtualinvoke $r71.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        virtualinvoke r194.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r72);

        virtualinvoke r194.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is crashing; detaching ");

        virtualinvoke r194.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r167);

        $r73 = virtualinvoke r194.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("ActivityManager", $r73);

     label079:
        $z7 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean decProviderCountLocked(com.android.server.am.ContentProviderConnection,com.android.server.am.ContentProviderRecord,android.os.IBinder,boolean)>(r187, r189, r164, z12);

        if $z7 != 0 goto label081;

        exitmonitor r0;

     label080:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return null;

     label081:
        z15 = 0;

        r195 = null;

     label082:
        r176 = r189.<com.android.server.am.ContentProviderRecord: com.android.server.am.ProcessRecord proc>;

     label083:
        goto label088;

     label084:
        $r97 := @caughtexception;

        r170 = $r97;

        goto label324;

     label085:
        r196 = r189.<com.android.server.am.ContentProviderRecord: com.android.server.am.ProcessRecord proc>;

     label086:
        r195 = r187;

     label087:
        $r70 = r189.<com.android.server.am.ContentProviderRecord: com.android.server.am.ProcessRecord proc>;

        $i16 = $r70.<com.android.server.am.ProcessRecord: int setAdj>;

        r196.<com.android.server.am.ProcessRecord: int verifiedAdj> = $i16;

     label088:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

     label089:
        r197 = r176;

        r198 = r177;

        r199 = r195;

        goto label110;

     label090:
        $r161 := @caughtexception;

        r170 = $r161;

        goto label092;

     label091:
        $r123 := @caughtexception;

        r170 = $r123;

     label092:
        goto label324;

     label093:
        $r117 := @caughtexception;

        r170 = $r117;

        goto label324;

     label094:
        r200 = new java.lang.SecurityException;

     label095:
        specialinvoke r200.<java.lang.SecurityException: void <init>(java.lang.String)>(r186);

     label096:
        throw r200;

     label097:
        r201 = new java.lang.SecurityException;

     label098:
        r202 = new java.lang.StringBuilder;

     label099:
        specialinvoke r202.<java.lang.StringBuilder: void <init>()>();

     label100:
        virtualinvoke r202.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Content provider lookup ");

     label101:
        $r67 = r171.<com.android.server.am.ContentProviderRecord: android.content.ComponentName name>;

        $r68 = virtualinvoke $r67.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        virtualinvoke r202.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r68);

     label102:
        virtualinvoke r202.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" failed: association not allowed with package ");

     label103:
        virtualinvoke r202.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r185);

     label104:
        $r69 = virtualinvoke r202.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r201.<java.lang.SecurityException: void <init>(java.lang.String)>($r69);

     label105:
        throw r201;

     label106:
        $r93 := @caughtexception;

        r170 = $r93;

        goto label324;

     label107:
        $r94 := @caughtexception;

        r170 = $r94;

        goto label324;

     label108:
        $r132 := @caughtexception;

        r170 = $r132;

        goto label324;

     label109:
        r199 = null;

        r189 = r171;

        r197 = r176;

        r198 = r166;

     label110:
        if z15 != 0 goto label278;

        r204 = r198;

     label111:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void checkTime(long,java.lang.String)>(l27, "getContentProviderImpl: before resolveContentProvider");

     label112:
        r204 = r198;

     label113:
        $r22 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        r205 = interfaceinvoke $r22.<android.content.pm.IPackageManager: android.content.pm.ProviderInfo resolveContentProvider(java.lang.String,int,int)>(r163, 3072, i26);

     label114:
        r204 = r205;

     label115:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void checkTime(long,java.lang.String)>(l27, "getContentProviderImpl: after resolveContentProvider");

     label116:
        r204 = r205;

        goto label119;

     label117:
        $r116 := @caughtexception;

        r170 = $r116;

        goto label324;

     label118:
        $r140 := @caughtexception;

     label119:
        if r204 != null goto label122;

     label120:
        exitmonitor r0;

     label121:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return null;

     label122:
        $r25 = r204.<android.content.pm.ProviderInfo: java.lang.String processName>;

        $r24 = r204.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r23 = r204.<android.content.pm.ProviderInfo: java.lang.String name>;

        $i12 = r204.<android.content.pm.ProviderInfo: int flags>;

        z19 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean isSingleton(java.lang.String,android.content.pm.ApplicationInfo,java.lang.String,int)>($r25, $r24, $r23, $i12);

     label123:
        if z19 == 0 goto label127;

        if r167 != null goto label124;

        i32 = i25;

        goto label125;

     label124:
        i32 = r167.<com.android.server.am.ProcessRecord: int uid>;

     label125:
        $r65 = r204.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i15 = $r65.<android.content.pm.ApplicationInfo: int uid>;

        z20 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean isValidSingletonCall(int,int)>(i32, $i15);

     label126:
        if z20 == 0 goto label127;

        z21 = 1;

        goto label128;

     label127:
        z21 = 0;

     label128:
        if z21 == 0 goto label129;

        i26 = 0;

     label129:
        $r26 = r204.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r27 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: android.content.pm.ApplicationInfo getAppInfoForUser(android.content.pm.ApplicationInfo,int)>($r26, i26);

        r204.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo> = $r27;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void checkTime(long,java.lang.String)>(l27, "getContentProviderImpl: got app info for user");

        r206 = specialinvoke r0.<com.android.server.am.ActivityManagerService: java.lang.String checkContentProviderAssociation(com.android.server.am.ProcessRecord,int,android.content.pm.ProviderInfo)>(r167, i25, r204);

     label130:
        if r206 != null goto label266;

     label131:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void checkTime(long,java.lang.String)>(l27, "getContentProviderImpl: before checkContentProviderPermission");

     label132:
        if z21 != 0 goto label133;

        z22 = 1;

        goto label134;

     label133:
        z22 = 0;

     label134:
        r207 = specialinvoke r0.<com.android.server.am.ActivityManagerService: java.lang.String checkContentProviderPermissionLocked(android.content.pm.ProviderInfo,com.android.server.am.ProcessRecord,int,boolean)>(r204, r167, i26, z22);

     label135:
        if r207 != null goto label263;

     label136:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void checkTime(long,java.lang.String)>(l27, "getContentProviderImpl: after checkContentProviderPermission");

        z23 = r0.<com.android.server.am.ActivityManagerService: boolean mProcessesReady>;

     label137:
        if z23 != 0 goto label141;

     label138:
        $r64 = r204.<android.content.pm.ProviderInfo: java.lang.String processName>;

        $z6 = virtualinvoke $r64.<java.lang.String: boolean equals(java.lang.Object)>("system");

        if $z6 == 0 goto label140;

     label139:
        goto label141;

     label140:
        r208 = new java.lang.IllegalArgumentException;

        specialinvoke r208.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Attempt to launch content provider before system ready");

        throw r208;

     label141:
        z24 = r0.<com.android.server.am.ActivityManagerService: boolean mSystemProvidersInstalled>;

     label142:
        if z24 != 0 goto label146;

     label143:
        $r59 = r204.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $z4 = virtualinvoke $r59.<android.content.pm.ApplicationInfo: boolean isSystemApp()>();

        if $z4 == 0 goto label146;

        $r61 = "system";

        $r60 = r204.<android.content.pm.ProviderInfo: java.lang.String processName>;

        $z5 = virtualinvoke $r61.<java.lang.String: boolean equals(java.lang.Object)>($r60);

        if $z5 != 0 goto label145;

     label144:
        goto label146;

     label145:
        r209 = new java.lang.IllegalStateException;

        r210 = new java.lang.StringBuilder;

        specialinvoke r210.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r210.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot access system provider: \'");

        $r62 = r204.<android.content.pm.ProviderInfo: java.lang.String authority>;

        virtualinvoke r210.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r62);

        virtualinvoke r210.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' before system providers are installed!");

        $r63 = virtualinvoke r210.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r209.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r63);

        throw r209;

     label146:
        $r211 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.UserController mUserController>;

        z25 = virtualinvoke $r211.<com.android.server.am.UserController: boolean isUserRunning(int,int)>(i26, 0);

     label147:
        if z25 != 0 goto label150;

     label148:
        r212 = new java.lang.StringBuilder;

        specialinvoke r212.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r212.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to launch app ");

        $r55 = r204.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r56 = $r55.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        virtualinvoke r212.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r56);

        virtualinvoke r212.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r57 = r204.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i14 = $r57.<android.content.pm.ApplicationInfo: int uid>;

        virtualinvoke r212.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i14);

        virtualinvoke r212.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for provider ");

        virtualinvoke r212.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r163);

        virtualinvoke r212.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": user ");

        virtualinvoke r212.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i26);

        virtualinvoke r212.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is stopped");

        $r58 = virtualinvoke r212.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r58);

        exitmonitor r0;

     label149:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return null;

     label150:
        r213 = new android.content.ComponentName;

        $r30 = r204.<android.content.pm.ProviderInfo: java.lang.String packageName>;

        $r29 = r204.<android.content.pm.ProviderInfo: java.lang.String name>;

        specialinvoke r213.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r30, $r29);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void checkTime(long,java.lang.String)>(l27, "getContentProviderImpl: before getProviderByClass");

        $r31 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProviderMap mProviderMap>;

        r214 = virtualinvoke $r31.<com.android.server.am.ProviderMap: com.android.server.am.ContentProviderRecord getProviderByClass(android.content.ComponentName,int)>(r213, i26);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void checkTime(long,java.lang.String)>(l27, "getContentProviderImpl: after getProviderByClass");

     label151:
        if r214 != null goto label152;

        z26 = 1;

        goto label153;

     label152:
        z26 = 0;

     label153:
        z27 = z26;

        if z26 == 0 goto label190;

     label154:
        l33 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        z28 = specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean requestTargetProviderPermissionsReviewIfNeededLocked(android.content.pm.ProviderInfo,com.android.server.am.ProcessRecord,int)>(r204, r167, i26);

     label155:
        if z28 != 0 goto label158;

     label156:
        exitmonitor r0;

     label157:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return null;

     label158:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void checkTime(long,java.lang.String)>(l27, "getContentProviderImpl: before getApplicationInfo");

        r215 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

     label159:
        $r51 = r204.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        r216 = $r51.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

     label160:
        r217 = interfaceinvoke r215.<android.content.pm.IPackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int,int)>(r216, 1024, i26);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void checkTime(long,java.lang.String)>(l27, "getContentProviderImpl: after getApplicationInfo");

     label161:
        if r217 != null goto label170;

     label162:
        r218 = new java.lang.StringBuilder;

        specialinvoke r218.<java.lang.StringBuilder: void <init>()>();

     label163:
        virtualinvoke r218.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No package info for content provider ");

        $r53 = r204.<android.content.pm.ProviderInfo: java.lang.String name>;

        virtualinvoke r218.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r53);

        $r54 = virtualinvoke r218.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r54);

     label164:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l33);

        exitmonitor r0;

     label165:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return null;

     label166:
        $r157 := @caughtexception;

        r219 = $r157;

        goto label184;

     label167:
        $r122 := @caughtexception;

        goto label187;

     label168:
        $r137 := @caughtexception;

        r219 = $r137;

        goto label184;

     label169:
        $r101 := @caughtexception;

        goto label187;

     label170:
        r220 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: android.content.pm.ApplicationInfo getAppInfoForUser(android.content.pm.ApplicationInfo,int)>(r217, i26);

     label171:
        $r52 = new com.android.server.am.ContentProviderRecord;

        specialinvoke $r52.<com.android.server.am.ContentProviderRecord: void <init>(com.android.server.am.ActivityManagerService,android.content.pm.ProviderInfo,android.content.pm.ApplicationInfo,android.content.ComponentName,boolean)>(r0, r204, r220, r213, z21);

     label172:
        r214 = $r52;

     label173:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l33);

     label174:
        goto label188;

     label175:
        $r129 := @caughtexception;

        r219 = $r129;

        goto label184;

     label176:
        $r160 := @caughtexception;

        goto label187;

     label177:
        $r127 := @caughtexception;

        r219 = $r127;

        goto label184;

     label178:
        $r149 := @caughtexception;

        goto label187;

     label179:
        $r150 := @caughtexception;

        r219 = $r150;

        goto label184;

     label180:
        $r153 := @caughtexception;

        goto label187;

     label181:
        $r96 := @caughtexception;

        r219 = $r96;

        goto label184;

     label182:
        $r146 := @caughtexception;

        goto label187;

     label183:
        $r156 := @caughtexception;

        r219 = $r156;

     label184:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l33);

     label185:
        throw r219;

     label186:
        $r155 := @caughtexception;

     label187:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l33);

     label188:
        z29 = z27;

        goto label196;

     label189:
        $r145 := @caughtexception;

        r170 = $r145;

        goto label324;

     label190:
        r222 = r214;

     label191:
        r223 = r214.<com.android.server.am.ContentProviderRecord: com.android.server.am.ProcessRecord proc>;

     label192:
        z29 = z26;

        if r197 != r223 goto label196;

        r214 = r222;

        z29 = z26;

        if r197 == null goto label196;

     label193:
        $r50 = new com.android.server.am.ContentProviderRecord;

        specialinvoke $r50.<com.android.server.am.ContentProviderRecord: void <init>(com.android.server.am.ContentProviderRecord)>(r222);

        r214 = $r50;

     label194:
        z29 = 1;

        goto label196;

     label195:
        $r113 := @caughtexception;

        r170 = $r113;

        goto label324;

     label196:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void checkTime(long,java.lang.String)>(l27, "getContentProviderImpl: now have ContentProviderRecord");

     label197:
        if r167 == null goto label200;

     label198:
        $z3 = virtualinvoke r214.<com.android.server.am.ContentProviderRecord: boolean canRunHere(com.android.server.am.ProcessRecord)>(r167);

        if $z3 == 0 goto label200;

        r224 = virtualinvoke r214.<com.android.server.am.ContentProviderRecord: android.app.ContentProviderHolder newHolder(com.android.server.am.ContentProviderConnection)>(null);

        exitmonitor r0;

     label199:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return r224;

     label200:
        $r32 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLaunchingProviders>;

        i1 = virtualinvoke $r32.<java.util.ArrayList: int size()>();

     label201:
        i34 = 0;

     label202:
        if i34 >= i1 goto label206;

     label203:
        $r49 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLaunchingProviders>;

        r225 = virtualinvoke $r49.<java.util.ArrayList: java.lang.Object get(int)>(i34);

     label204:
        if r225 != r214 goto label205;

        goto label206;

     label205:
        i34 = i34 + 1;

        goto label202;

     label206:
        if i34 < i1 goto label247;

     label207:
        l35 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label208:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void checkTime(long,java.lang.String)>(l27, "getContentProviderImpl: before set stopped state");

        $r35 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        $r36 = r214.<com.android.server.am.ContentProviderRecord: android.content.pm.ApplicationInfo appInfo>;

        $r37 = $r36.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        interfaceinvoke $r35.<android.content.pm.IPackageManager: void setPackageStoppedState(java.lang.String,boolean,int)>($r37, 0, i26);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void checkTime(long,java.lang.String)>(l27, "getContentProviderImpl: after set stopped state");

     label209:
        goto label215;

     label210:
        $r92 := @caughtexception;

        r226 = $r92;

        goto label244;

     label211:
        $r104 := @caughtexception;

     label212:
        r228 = new java.lang.StringBuilder;

        specialinvoke r228.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r228.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed trying to unstop package ");

        $r105 = r214.<com.android.server.am.ContentProviderRecord: android.content.pm.ApplicationInfo appInfo>;

        $r106 = $r105.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        virtualinvoke r228.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r106);

        virtualinvoke r228.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        virtualinvoke r228.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r104);

        $r107 = virtualinvoke r228.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r107);

     label213:
        goto label215;

     label214:
        $r128 := @caughtexception;

     label215:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void checkTime(long,java.lang.String)>(l27, "getContentProviderImpl: looking for process record");

     label216:
        $r229 = r204.<android.content.pm.ProviderInfo: java.lang.String processName>;

        $r230 = r214.<com.android.server.am.ContentProviderRecord: android.content.pm.ApplicationInfo appInfo>;

        $i36 = $r230.<android.content.pm.ApplicationInfo: int uid>;

        r231 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord getProcessRecordLocked(java.lang.String,int,boolean)>($r229, $i36, 0);

     label217:
        if r231 == null goto label224;

     label218:
        $r43 = r231.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r43 == null goto label224;

        $z1 = r231.<com.android.server.am.ProcessRecord: boolean killed>;

        if $z1 != 0 goto label224;

        $r45 = r231.<com.android.server.am.ProcessRecord: android.util.ArrayMap pubProviders>;

        $r44 = r204.<android.content.pm.ProviderInfo: java.lang.String name>;

        $z2 = virtualinvoke $r45.<android.util.ArrayMap: boolean containsKey(java.lang.Object)>($r44);

        if $z2 != 0 goto label222;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void checkTime(long,java.lang.String)>(l27, "getContentProviderImpl: scheduling install");

        $r47 = r231.<com.android.server.am.ProcessRecord: android.util.ArrayMap pubProviders>;

        $r46 = r204.<android.content.pm.ProviderInfo: java.lang.String name>;

        virtualinvoke $r47.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r46, r214);

     label219:
        $r48 = r231.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        interfaceinvoke $r48.<android.app.IApplicationThread: void scheduleInstallProvider(android.content.pm.ProviderInfo)>(r204);

     label220:
        goto label222;

     label221:
        $r118 := @caughtexception;

     label222:
        goto label234;

     label223:
        $r147 := @caughtexception;

        r226 = $r147;

        goto label244;

     label224:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void checkTime(long,java.lang.String)>(l27, "getContentProviderImpl: before start process");

        r232 = r204.<android.content.pm.ProviderInfo: java.lang.String processName>;

        r2 = r214.<com.android.server.am.ContentProviderRecord: android.content.pm.ApplicationInfo appInfo>;

        r233 = new com.android.server.am.HostingRecord;

        r3 = new android.content.ComponentName;

     label225:
        $r234 = r204.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        r235 = $r234.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

     label226:
        $r236 = r204.<android.content.pm.ProviderInfo: java.lang.String name>;

        specialinvoke r3.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>(r235, $r236);

        specialinvoke r233.<com.android.server.am.HostingRecord: void <init>(java.lang.String,android.content.ComponentName)>("content provider", r3);

     label227:
        r231 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord startProcessLocked(java.lang.String,android.content.pm.ApplicationInfo,boolean,int,com.android.server.am.HostingRecord,int,boolean,boolean,boolean)>(r232, r2, 0, 0, r233, 0, 0, 0, 0);

     label228:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void checkTime(long,java.lang.String)>(l27, "getContentProviderImpl: after start process");

     label229:
        if r231 != null goto label234;

     label230:
        r237 = new java.lang.StringBuilder;

        specialinvoke r237.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r237.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to launch app ");

     label231:
        $r39 = r204.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r40 = $r39.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        virtualinvoke r237.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

        virtualinvoke r237.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r41 = r204.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i13 = $r41.<android.content.pm.ApplicationInfo: int uid>;

        virtualinvoke r237.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i13);

        virtualinvoke r237.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for provider ");

        virtualinvoke r237.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r163);

        virtualinvoke r237.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": process is bad");

        $r42 = virtualinvoke r237.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r42);

     label232:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l35);

        exitmonitor r0;

     label233:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return null;

     label234:
        r214.<com.android.server.am.ContentProviderRecord: com.android.server.am.ProcessRecord launchingApp> = r231;

        $r38 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLaunchingProviders>;

        virtualinvoke $r38.<java.util.ArrayList: boolean add(java.lang.Object)>(r214);

     label235:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l35);

     label236:
        goto label247;

     label237:
        $r111 := @caughtexception;

        r226 = $r111;

        goto label244;

     label238:
        $r103 := @caughtexception;

        r226 = $r103;

        goto label244;

     label239:
        $r112 := @caughtexception;

        r226 = $r112;

        goto label244;

     label240:
        $r100 := @caughtexception;

        r226 = $r100;

        goto label244;

     label241:
        $r119 := @caughtexception;

        r226 = $r119;

        goto label244;

     label242:
        $r158 := @caughtexception;

        r226 = $r158;

        goto label244;

     label243:
        $r133 := @caughtexception;

        r226 = $r133;

     label244:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l35);

     label245:
        throw r226;

     label246:
        $r99 := @caughtexception;

        r170 = $r99;

        goto label324;

     label247:
        z30 = z15;

     label248:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void checkTime(long,java.lang.String)>(l27, "getContentProviderImpl: updating data structures");

     label249:
        if z29 == 0 goto label253;

     label250:
        $r34 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProviderMap mProviderMap>;

        virtualinvoke $r34.<com.android.server.am.ProviderMap: void putProviderByClass(android.content.ComponentName,com.android.server.am.ContentProviderRecord)>(r213, r214);

     label251:
        goto label253;

     label252:
        $r148 := @caughtexception;

        r170 = $r148;

        goto label324;

     label253:
        $r33 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProviderMap mProviderMap>;

        virtualinvoke $r33.<com.android.server.am.ProviderMap: void putProviderByName(java.lang.String,com.android.server.am.ContentProviderRecord)>(r163, r214);

     label254:
        r238 = r204;

     label255:
        r239 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ContentProviderConnection incProviderCountLocked(com.android.server.am.ProcessRecord,com.android.server.am.ContentProviderRecord,android.os.IBinder,int,java.lang.String,java.lang.String,boolean)>(r167, r214, r164, i25, r165, r1, z12);

     label256:
        if r239 == null goto label260;

     label257:
        r239.<com.android.server.am.ContentProviderConnection: boolean waiting> = 1;

     label258:
        goto label260;

     label259:
        $r114 := @caughtexception;

        r170 = $r114;

        goto label324;

     label260:
        r189 = r214;

        r198 = r238;

        z15 = z30;

        goto label279;

     label261:
        $r142 := @caughtexception;

        r170 = $r142;

        goto label324;

     label262:
        $r121 := @caughtexception;

        r170 = $r121;

        goto label324;

     label263:
        r240 = new java.lang.SecurityException;

     label264:
        specialinvoke r240.<java.lang.SecurityException: void <init>(java.lang.String)>(r207);

     label265:
        throw r240;

     label266:
        r241 = new java.lang.SecurityException;

     label267:
        r242 = new java.lang.StringBuilder;

     label268:
        specialinvoke r242.<java.lang.StringBuilder: void <init>()>();

     label269:
        virtualinvoke r242.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Content provider lookup ");

     label270:
        virtualinvoke r242.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r163);

     label271:
        virtualinvoke r242.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" failed: association not allowed with package ");

     label272:
        virtualinvoke r242.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r206);

     label273:
        $r28 = virtualinvoke r242.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r241.<java.lang.SecurityException: void <init>(java.lang.String)>($r28);

     label274:
        throw r241;

     label275:
        $r144 := @caughtexception;

        r170 = $r144;

        goto label324;

     label276:
        $r124 := @caughtexception;

        r170 = $r124;

        goto label324;

     label277:
        $r159 := @caughtexception;

        r170 = $r159;

        goto label324;

     label278:
        r239 = r199;

     label279:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void checkTime(long,java.lang.String)>(l27, "getContentProviderImpl: done!");

        $r5 = r198.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i2 = $r5.<android.content.pm.ApplicationInfo: int uid>;

        i37 = staticinvoke <android.os.UserHandle: int getAppId(int)>($i2);

     label280:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void grantImplicitAccess(int,android.content.Intent,int,int)>(i26, null, i25, i37);

        exitmonitor r0;

     label281:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        l38 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        entermonitor r189;

     label282:
        r243 = r189.<com.android.server.am.ContentProviderRecord: android.content.IContentProvider provider>;

     label283:
        z31 = 0;

        if r243 != null goto label304;

     label284:
        $r13 = r189.<com.android.server.am.ContentProviderRecord: com.android.server.am.ProcessRecord launchingApp>;

        if $r13 != null goto label286;

        r244 = new java.lang.StringBuilder;

        specialinvoke r244.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r244.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to launch app ");

        $r14 = r198.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r15 = $r14.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        virtualinvoke r244.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        virtualinvoke r244.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r16 = r198.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i8 = $r16.<android.content.pm.ApplicationInfo: int uid>;

        virtualinvoke r244.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        virtualinvoke r244.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for provider ");

        virtualinvoke r244.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r163);

        virtualinvoke r244.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": launching app became null");

        $r17 = virtualinvoke r244.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r17);

        $r18 = r198.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i9 = $r18.<android.content.pm.ApplicationInfo: int uid>;

        $i10 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i9);

        $r19 = r198.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r21 = $r19.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r20 = r198.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i11 = $r20.<android.content.pm.ApplicationInfo: int uid>;

        staticinvoke <com.android.server.am.EventLogTags: void writeAmProviderLostProcess(int,java.lang.String,int,java.lang.String)>($i10, $r21, $i11, r163);

        exitmonitor r189;

     label285:
        return null;

     label286:
        $l5 = l38 + 20000L;

        $l6 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l7 = $l5 - $l6;

        l39 = staticinvoke <java.lang.Math: long max(long,long)>(0L, $l7);

     label287:
        if r239 == null goto label290;

     label288:
        r239.<com.android.server.am.ContentProviderConnection: boolean waiting> = 1;

     label289:
        goto label290;

     label290:
        virtualinvoke r189.<java.lang.Object: void wait(long)>(l39);

        r245 = r189.<com.android.server.am.ContentProviderRecord: android.content.IContentProvider provider>;

     label291:
        if r245 != null goto label294;

        z31 = 1;

        if r239 == null goto label304;

     label292:
        r239.<com.android.server.am.ContentProviderConnection: boolean waiting> = 0;

     label293:
        z31 = 1;

        goto label304;

     label294:
        if r239 == null goto label302;

        goto label301;

     label295:
        $r131 := @caughtexception;

        goto label300;

     label296:
        $r110 := @caughtexception;

        if r239 == null goto label298;

     label297:
        r239.<com.android.server.am.ContentProviderConnection: boolean waiting> = 0;

     label298:
        throw $r110;

     label299:
        $r154 := @caughtexception;

     label300:
        if r239 == null goto label302;

     label301:
        r239.<com.android.server.am.ContentProviderConnection: boolean waiting> = 0;

     label302:
        goto label282;

     label303:
        $r151 := @caughtexception;

        r247 = $r151;

        goto label317;

     label304:
        exitmonitor r189;

     label305:
        if z31 == 0 goto label315;

        r248 = "unknown";

        if r162 == null goto label314;

        entermonitor r0;

     label306:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r12 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        r249 = virtualinvoke $r12.<com.android.server.am.ProcessList: com.android.server.am.ProcessRecord getLRURecordForAppLocked(android.app.IApplicationThread)>(r162);

     label307:
        r250 = "unknown";

        if r249 == null goto label309;

     label308:
        r250 = r249.<com.android.server.am.ProcessRecord: java.lang.String processName>;

     label309:
        exitmonitor r0;

     label310:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        r248 = r250;

        goto label314;

     label311:
        $r141 := @caughtexception;

     label312:
        exitmonitor r0;

     label313:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r141;

     label314:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Timeout waiting for provider ");

        $r8 = r198.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r9 = $r8.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r10 = r198.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i3 = $r10.<android.content.pm.ApplicationInfo: int uid>;

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for provider ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r163);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" providerRunning=");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z15);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" caller=");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r248);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $i4 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("ActivityManager", $r11);

        return null;

     label315:
        $r6 = virtualinvoke r189.<com.android.server.am.ContentProviderRecord: android.app.ContentProviderHolder newHolder(com.android.server.am.ContentProviderConnection)>(r239);

        return $r6;

     label316:
        $r134 := @caughtexception;

        r247 = $r134;

     label317:
        exitmonitor r189;

     label318:
        throw r247;

     label319:
        $r95 := @caughtexception;

        r247 = $r95;

        goto label317;

     label320:
        $r126 := @caughtexception;

        r170 = $r126;

        goto label322;

     label321:
        $r152 := @caughtexception;

        r170 = $r152;

     label322:
        goto label324;

     label323:
        $r120 := @caughtexception;

        r170 = $r120;

     label324:
        exitmonitor r0;

     label325:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw r170;

     label326:
        $r115 := @caughtexception;

        r170 = $r115;

        goto label324;

        catch java.lang.Throwable from label001 to label002 with label323;
        catch java.lang.Throwable from label003 to label004 with label006;
        catch java.lang.Throwable from label005 to label006 with label006;
        catch java.lang.Throwable from label008 to label009 with label323;
        catch java.lang.Throwable from label010 to label011 with label021;
        catch java.lang.Throwable from label012 to label013 with label021;
        catch java.lang.Throwable from label013 to label014 with label019;
        catch java.lang.Throwable from label015 to label016 with label019;
        catch java.lang.Throwable from label016 to label017 with label019;
        catch java.lang.Throwable from label024 to label025 with label033;
        catch java.lang.Throwable from label027 to label028 with label032;
        catch java.lang.Throwable from label028 to label029 with label030;
        catch java.lang.Throwable from label036 to label037 with label108;
        catch java.lang.Throwable from label038 to label039 with label048;
        catch java.lang.Throwable from label040 to label041 with label045;
        catch java.lang.Throwable from label042 to label043 with label045;
        catch java.lang.Throwable from label044 to label045 with label045;
        catch java.lang.Throwable from label046 to label047 with label048;
        catch java.lang.Throwable from label047 to label048 with label054;
        catch android.os.RemoteException from label049 to label050 with label055;
        catch java.lang.Throwable from label049 to label050 with label054;
        catch java.lang.Throwable from label051 to label052 with label054;
        catch java.lang.Throwable from label056 to label057 with label107;
        catch java.lang.Throwable from label058 to label059 with label107;
        catch java.lang.Throwable from label060 to label061 with label107;
        catch java.lang.Throwable from label061 to label062 with label093;
        catch java.lang.Throwable from label063 to label064 with label070;
        catch java.lang.Throwable from label064 to label065 with label070;
        catch java.lang.Throwable from label066 to label067 with label070;
        catch java.lang.Throwable from label067 to label068 with label070;
        catch java.lang.Throwable from label072 to label073 with label091;
        catch java.lang.Throwable from label074 to label075 with label070;
        catch java.lang.Throwable from label076 to label077 with label091;
        catch java.lang.Throwable from label078 to label079 with label084;
        catch java.lang.Throwable from label079 to label080 with label070;
        catch java.lang.Throwable from label082 to label083 with label106;
        catch java.lang.Throwable from label085 to label086 with label090;
        catch java.lang.Throwable from label087 to label088 with label106;
        catch java.lang.Throwable from label088 to label089 with label106;
        catch java.lang.Throwable from label094 to label095 with label106;
        catch java.lang.Throwable from label095 to label096 with label106;
        catch java.lang.Throwable from label096 to label097 with label106;
        catch java.lang.Throwable from label097 to label098 with label106;
        catch java.lang.Throwable from label098 to label099 with label106;
        catch java.lang.Throwable from label099 to label100 with label106;
        catch java.lang.Throwable from label100 to label101 with label106;
        catch java.lang.Throwable from label101 to label102 with label106;
        catch java.lang.Throwable from label102 to label103 with label106;
        catch java.lang.Throwable from label103 to label104 with label106;
        catch java.lang.Throwable from label104 to label105 with label106;
        catch java.lang.Throwable from label105 to label106 with label106;
        catch android.os.RemoteException from label111 to label112 with label118;
        catch java.lang.Throwable from label111 to label112 with label117;
        catch android.os.RemoteException from label113 to label114 with label118;
        catch java.lang.Throwable from label113 to label114 with label117;
        catch android.os.RemoteException from label115 to label116 with label118;
        catch java.lang.Throwable from label115 to label116 with label117;
        catch java.lang.Throwable from label120 to label121 with label117;
        catch java.lang.Throwable from label122 to label123 with label277;
        catch java.lang.Throwable from label124 to label125 with label117;
        catch java.lang.Throwable from label125 to label126 with label117;
        catch java.lang.Throwable from label129 to label130 with label276;
        catch java.lang.Throwable from label131 to label132 with label276;
        catch java.lang.Throwable from label134 to label135 with label276;
        catch java.lang.Throwable from label136 to label137 with label276;
        catch java.lang.Throwable from label138 to label139 with label117;
        catch java.lang.Throwable from label140 to label141 with label117;
        catch java.lang.Throwable from label141 to label142 with label276;
        catch java.lang.Throwable from label143 to label144 with label117;
        catch java.lang.Throwable from label145 to label146 with label117;
        catch java.lang.Throwable from label146 to label147 with label276;
        catch java.lang.Throwable from label148 to label149 with label117;
        catch java.lang.Throwable from label150 to label151 with label276;
        catch java.lang.Throwable from label154 to label155 with label189;
        catch java.lang.Throwable from label156 to label157 with label117;
        catch android.os.RemoteException from label158 to label159 with label186;
        catch java.lang.Throwable from label158 to label159 with label183;
        catch android.os.RemoteException from label159 to label160 with label182;
        catch java.lang.Throwable from label159 to label160 with label181;
        catch android.os.RemoteException from label160 to label161 with label180;
        catch java.lang.Throwable from label160 to label161 with label179;
        catch android.os.RemoteException from label162 to label163 with label169;
        catch java.lang.Throwable from label162 to label163 with label168;
        catch android.os.RemoteException from label163 to label164 with label167;
        catch java.lang.Throwable from label163 to label164 with label166;
        catch java.lang.Throwable from label164 to label165 with label117;
        catch android.os.RemoteException from label170 to label171 with label178;
        catch java.lang.Throwable from label170 to label171 with label177;
        catch android.os.RemoteException from label171 to label172 with label176;
        catch java.lang.Throwable from label171 to label172 with label175;
        catch java.lang.Throwable from label173 to label174 with label195;
        catch java.lang.Throwable from label184 to label185 with label195;
        catch java.lang.Throwable from label185 to label186 with label195;
        catch java.lang.Throwable from label187 to label188 with label195;
        catch java.lang.Throwable from label191 to label192 with label262;
        catch java.lang.Throwable from label193 to label194 with label195;
        catch java.lang.Throwable from label196 to label197 with label262;
        catch java.lang.Throwable from label198 to label199 with label195;
        catch java.lang.Throwable from label200 to label201 with label262;
        catch java.lang.Throwable from label203 to label204 with label195;
        catch java.lang.Throwable from label207 to label208 with label246;
        catch android.os.RemoteException from label208 to label209 with label214;
        catch java.lang.IllegalArgumentException from label208 to label209 with label211;
        catch java.lang.Throwable from label208 to label209 with label210;
        catch java.lang.Throwable from label212 to label213 with label210;
        catch java.lang.Throwable from label215 to label216 with label243;
        catch java.lang.Throwable from label216 to label217 with label242;
        catch java.lang.Throwable from label218 to label219 with label223;
        catch android.os.RemoteException from label219 to label220 with label221;
        catch java.lang.Throwable from label219 to label220 with label223;
        catch java.lang.Throwable from label224 to label225 with label242;
        catch java.lang.Throwable from label225 to label226 with label241;
        catch java.lang.Throwable from label226 to label227 with label240;
        catch java.lang.Throwable from label227 to label228 with label239;
        catch java.lang.Throwable from label228 to label229 with label238;
        catch java.lang.Throwable from label230 to label231 with label238;
        catch java.lang.Throwable from label231 to label232 with label237;
        catch java.lang.Throwable from label232 to label233 with label252;
        catch java.lang.Throwable from label234 to label235 with label237;
        catch java.lang.Throwable from label235 to label236 with label252;
        catch java.lang.Throwable from label244 to label245 with label252;
        catch java.lang.Throwable from label245 to label246 with label252;
        catch java.lang.Throwable from label248 to label249 with label261;
        catch java.lang.Throwable from label250 to label251 with label252;
        catch java.lang.Throwable from label253 to label254 with label261;
        catch java.lang.Throwable from label255 to label256 with label275;
        catch java.lang.Throwable from label257 to label258 with label259;
        catch java.lang.Throwable from label263 to label264 with label275;
        catch java.lang.Throwable from label264 to label265 with label275;
        catch java.lang.Throwable from label265 to label266 with label275;
        catch java.lang.Throwable from label266 to label267 with label275;
        catch java.lang.Throwable from label267 to label268 with label275;
        catch java.lang.Throwable from label268 to label269 with label275;
        catch java.lang.Throwable from label269 to label270 with label275;
        catch java.lang.Throwable from label270 to label271 with label275;
        catch java.lang.Throwable from label271 to label272 with label275;
        catch java.lang.Throwable from label272 to label273 with label275;
        catch java.lang.Throwable from label273 to label274 with label275;
        catch java.lang.Throwable from label274 to label275 with label275;
        catch java.lang.Throwable from label279 to label280 with label321;
        catch java.lang.Throwable from label280 to label281 with label320;
        catch java.lang.Throwable from label282 to label283 with label316;
        catch java.lang.Throwable from label284 to label285 with label303;
        catch java.lang.InterruptedException from label286 to label287 with label299;
        catch java.lang.Throwable from label286 to label287 with label296;
        catch java.lang.InterruptedException from label288 to label289 with label295;
        catch java.lang.Throwable from label288 to label289 with label296;
        catch java.lang.InterruptedException from label290 to label291 with label295;
        catch java.lang.Throwable from label290 to label291 with label296;
        catch java.lang.Throwable from label292 to label293 with label303;
        catch java.lang.Throwable from label297 to label298 with label303;
        catch java.lang.Throwable from label298 to label299 with label303;
        catch java.lang.Throwable from label301 to label302 with label303;
        catch java.lang.Throwable from label304 to label305 with label316;
        catch java.lang.Throwable from label306 to label307 with label311;
        catch java.lang.Throwable from label308 to label309 with label311;
        catch java.lang.Throwable from label309 to label310 with label311;
        catch java.lang.Throwable from label312 to label313 with label311;
        catch java.lang.Throwable from label317 to label318 with label319;
        catch java.lang.Throwable from label324 to label325 with label326;
    }

    private final long[] getKsmInfo()
    {
        com.android.server.am.ActivityManagerService r0;
        int[] r1;
        long[] r2, $r3;
        long l0, l1, l2, $l3, $l4, $l5, $l6, $l7, $l8, $l9, $l10, $l11;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 = newarray (int)[1];

        r1[0] = 8224;

        r2 = newarray (long)[1];

        staticinvoke <android.os.Process: boolean readProcFile(java.lang.String,int[],java.lang.String[],long[],float[])>("/sys/kernel/mm/ksm/pages_shared", r1, null, r2, null);

        $l3 = r2[0];

        $l4 = $l3 * 4096L;

        l0 = $l4 / 1024L;

        r2[0] = 0L;

        staticinvoke <android.os.Process: boolean readProcFile(java.lang.String,int[],java.lang.String[],long[],float[])>("/sys/kernel/mm/ksm/pages_sharing", r1, null, r2, null);

        $l5 = r2[0];

        $l6 = $l5 * 4096L;

        l1 = $l6 / 1024L;

        r2[0] = 0L;

        staticinvoke <android.os.Process: boolean readProcFile(java.lang.String,int[],java.lang.String[],long[],float[])>("/sys/kernel/mm/ksm/pages_unshared", r1, null, r2, null);

        $l7 = r2[0];

        $l8 = $l7 * 4096L;

        l2 = $l8 / 1024L;

        r2[0] = 0L;

        staticinvoke <android.os.Process: boolean readProcFile(java.lang.String,int[],java.lang.String[],long[],float[])>("/sys/kernel/mm/ksm/pages_volatile", r1, null, r2, null);

        $r3 = newarray (long)[4];

        $r3[0] = l0;

        $r3[1] = l1;

        $r3[2] = l2;

        $l9 = r2[0];

        $l10 = $l9 * 4096L;

        $l11 = $l10 / 1024L;

        $r3[3] = $l11;

        return $r3;
    }

    private long getLowRamTimeSinceIdle(long)
    {
        com.android.server.am.ActivityManagerService r0;
        long l0, l1, l2, $l4, l5;
        byte $b3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        l0 := @parameter0: long;

        l1 = r0.<com.android.server.am.ActivityManagerService: long mLowRamTimeSinceLastIdle>;

        l2 = r0.<com.android.server.am.ActivityManagerService: long mLowRamStartTime>;

        l5 = 0L;

        $b3 = l2 cmp 0L;

        if $b3 <= 0 goto label1;

        l5 = l0 - l2;

     label1:
        $l4 = l1 + l5;

        return $l4;
    }

    private com.android.server.pm.permission.PermissionManagerServiceInternal getPermissionManagerInternalLocked()
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.pm.permission.PermissionManagerServiceInternal $r1, $r2, $r4;
        java.lang.Object $r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.pm.permission.PermissionManagerServiceInternal mPermissionManagerInt>;

        if $r1 != null goto label1;

        $r3 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Lcom/android/server/pm/permission/PermissionManagerServiceInternal;");

        $r4 = (com.android.server.pm.permission.PermissionManagerServiceInternal) $r3;

        r0.<com.android.server.am.ActivityManagerService: com.android.server.pm.permission.PermissionManagerServiceInternal mPermissionManagerInt> = $r4;

     label1:
        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.pm.permission.PermissionManagerServiceInternal mPermissionManagerInt>;

        return $r2;
    }

    private android.content.pm.ProviderInfo getProviderInfoLocked(java.lang.String, int, int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, $i2;
        com.android.server.am.ContentProviderRecord r1;
        com.android.server.am.ProviderMap $r2;
        android.content.pm.IPackageManager $r3;
        android.os.RemoteException $r4;
        java.lang.String r5;
        android.content.pm.ProviderInfo r6;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r5 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProviderMap mProviderMap>;

        r1 = virtualinvoke $r2.<com.android.server.am.ProviderMap: com.android.server.am.ContentProviderRecord getProviderByName(java.lang.String,int)>(r5, i0);

        if r1 == null goto label1;

        r6 = r1.<com.android.server.am.ContentProviderRecord: android.content.pm.ProviderInfo info>;

        goto label4;

     label1:
        $r3 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        $i2 = i1 | 2048;

        r6 = interfaceinvoke $r3.<android.content.pm.IPackageManager: android.content.pm.ProviderInfo resolveContentProvider(java.lang.String,int,int)>(r5, $i2, i0);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r6 = null;

     label4:
        return r6;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private int getUidFromIntent(android.content.Intent)
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.Intent r1;
        android.os.Bundle r2;
        boolean $z0;
        int i0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.content.Intent;

        i0 = -1;

        if r1 != null goto label1;

        return -1;

     label1:
        r2 = virtualinvoke r1.<android.content.Intent: android.os.Bundle getExtras()>();

        $z0 = virtualinvoke r1.<android.content.Intent: boolean hasExtra(java.lang.String)>("android.intent.extra.UID");

        if $z0 == 0 goto label2;

        i0 = virtualinvoke r2.<android.os.Bundle: int getInt(java.lang.String)>("android.intent.extra.UID");

        goto label2;

     label2:
        return i0;
    }

    private void handlePendingSystemServerWtfs(java.util.LinkedList)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1;
        int $i0;
        com.android.server.am.ActivityManagerService$PidMap $r2, r11;
        java.lang.Object $r3, $r4, $r5, $r8;
        android.app.ApplicationErrorReport$CrashInfo $r6;
        java.lang.String $r7;
        java.lang.Throwable $r9;
        java.util.LinkedList r10;
        android.util.Pair r12;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r10 := @parameter0: java.util.LinkedList;

        r11 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        entermonitor r11;

     label1:
        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        $i0 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        r1 = virtualinvoke $r2.<com.android.server.am.ActivityManagerService$PidMap: com.android.server.am.ProcessRecord get(int)>($i0);

        exitmonitor r11;

     label2:
        $r3 = virtualinvoke r10.<java.util.LinkedList: java.lang.Object poll()>();

        r12 = (android.util.Pair) $r3;

     label3:
        if r12 == null goto label4;

        $r4 = r12.<android.util.Pair: java.lang.Object first>;

        $r7 = (java.lang.String) $r4;

        $r5 = r12.<android.util.Pair: java.lang.Object second>;

        $r6 = (android.app.ApplicationErrorReport$CrashInfo) $r5;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void addErrorToDropBox(java.lang.String,com.android.server.am.ProcessRecord,java.lang.String,java.lang.String,java.lang.String,com.android.server.am.ProcessRecord,java.lang.String,java.lang.String,java.io.File,android.app.ApplicationErrorReport$CrashInfo)>("wtf", r1, "system_server", null, null, null, $r7, null, null, $r6);

        $r8 = virtualinvoke r10.<java.util.LinkedList: java.lang.Object poll()>();

        r12 = (android.util.Pair) $r8;

        goto label3;

     label4:
        return;

     label5:
        $r9 := @caughtexception;

     label6:
        exitmonitor r11;

     label7:
        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    private boolean hasUsageStatsPermission(java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1;
        int i0, $i1, $i2;
        com.android.server.appop.AppOpsService $r2;
        boolean z1, z2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.appop.AppOpsService mAppOpsService>;

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i0 = virtualinvoke $r2.<com.android.server.appop.AppOpsService: int noteOperation(int,int,java.lang.String,java.lang.String,boolean,java.lang.String,boolean)>(43, $i1, r1, null, 0, "", 0);

        z1 = 1;

        if i0 != 3 goto label3;

        $i2 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.PACKAGE_USAGE_STATS");

        if $i2 != 0 goto label1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;

     label3:
        if i0 != 0 goto label4;

        z2 = 1;

        goto label5;

     label4:
        z2 = 0;

     label5:
        return z2;
    }

    private boolean isAppBad(android.content.pm.ApplicationInfo)
    {
        com.android.server.am.ActivityManagerService r0;
        boolean z0;
        com.android.server.am.AppErrors $r1;
        java.lang.Throwable $r2;
        android.content.pm.ApplicationInfo r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r3 := @parameter0: android.content.pm.ApplicationInfo;

        entermonitor r0;

     label1:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.AppErrors mAppErrors>;

        z0 = virtualinvoke $r1.<com.android.server.am.AppErrors: boolean isBadProcessLocked(android.content.pm.ApplicationInfo)>(r3);

        exitmonitor r0;

     label2:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return z0;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private boolean isAppForeground(int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, $i1;
        com.android.server.am.ProcessList $r1;
        com.android.server.am.ActiveUids $r2;
        boolean $z0, z1;
        java.lang.Throwable $r3;
        com.android.server.am.UidRecord r4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        entermonitor r0;

     label01:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r2 = $r1.<com.android.server.am.ProcessList: com.android.server.am.ActiveUids mActiveUids>;

        r4 = virtualinvoke $r2.<com.android.server.am.ActiveUids: com.android.server.am.UidRecord get(int)>(i0);

     label02:
        z1 = 0;

        if r4 == null goto label09;

     label03:
        $z0 = r4.<com.android.server.am.UidRecord: boolean idle>;

        if $z0 == 0 goto label05;

     label04:
        goto label09;

     label05:
        $i1 = virtualinvoke r4.<com.android.server.am.UidRecord: int getCurProcState()>();

        if $i1 > 6 goto label07;

     label06:
        z1 = 1;

     label07:
        exitmonitor r0;

     label08:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return z1;

     label09:
        exitmonitor r0;

     label10:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return 0;

     label11:
        $r3 := @caughtexception;

     label12:
        exitmonitor r0;

     label13:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r3;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    private boolean isCallerShell()
    {
        com.android.server.am.ActivityManagerService r0;
        int i0;
        boolean z0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if i0 == 2000 goto label2;

        if i0 != 0 goto label1;

        goto label2;

     label1:
        z0 = 0;

        goto label3;

     label2:
        z0 = 1;

     label3:
        return z0;
    }

    private boolean isDeviceProvisioned(android.content.Context)
    {
        com.android.server.am.ActivityManagerService r0;
        int $i0;
        android.content.Context r1;
        android.content.ContentResolver r2;
        boolean z0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.content.Context;

        r2 = virtualinvoke r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        z0 = 0;

        $i0 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>(r2, "device_provisioned", 0);

        if $i0 == 0 goto label1;

        z0 = 1;

     label1:
        return z0;
    }

    private boolean isEphemeralLocked(int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, $i1, $i2;
        java.lang.String[] r1;
        android.content.Context $r2;
        android.content.pm.PackageManager $r3;
        android.content.pm.PackageManagerInternal $r4;
        java.lang.String $r5;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r1 = virtualinvoke $r3.<android.content.pm.PackageManager: java.lang.String[] getPackagesForUid(int)>(i0);

        if r1 == null goto label2;

        $i1 = lengthof r1;

        if $i1 == 1 goto label1;

        goto label2;

     label1:
        $r4 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: android.content.pm.PackageManagerInternal getPackageManagerInternalLocked()>();

        $i2 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        $r5 = r1[0];

        $z0 = virtualinvoke $r4.<android.content.pm.PackageManagerInternal: boolean isPackageEphemeral(int,java.lang.String)>($i2, $r5);

        return $z0;

     label2:
        return 0;
    }

    private boolean isInRestrictedBucket(int, java.lang.String, long)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, $i2;
        java.lang.String r1;
        long l1;
        android.app.usage.UsageStatsManagerInternal $r2;
        boolean z0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        l1 := @parameter2: long;

        $r2 = r0.<com.android.server.am.ActivityManagerService: android.app.usage.UsageStatsManagerInternal mUsageStatsService>;

        $i2 = virtualinvoke $r2.<android.app.usage.UsageStatsManagerInternal: int getAppStandbyBucket(java.lang.String,int,long)>(r1, i0, l1);

        if 45 > $i2 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private boolean isInstantApp(com.android.server.am.ProcessRecord, java.lang.String, int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, $i1, $i3, $i4;
        android.content.pm.IPackageManager r1;
        boolean z0, $z1;
        com.android.server.appop.AppOpsService $r2;
        android.content.pm.ApplicationInfo $r3;
        android.os.RemoteException $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r9, r11, r12, r13;
        com.android.server.am.ProcessRecord r10;
        java.lang.String[] r14;
        java.lang.IllegalArgumentException r15;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r10 := @parameter0: com.android.server.am.ProcessRecord;

        r11 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $i1 = staticinvoke <android.os.UserHandle: int getAppId(int)>(i0);

        if $i1 >= 10000 goto label01;

        return 0;

     label01:
        if r10 == null goto label02;

        $r3 = r10.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $z1 = virtualinvoke $r3.<android.content.pm.ApplicationInfo: boolean isInstantApp()>();

        return $z1;

     label02:
        r1 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        r12 = r11;

        if r11 != null goto label13;

        r13 = r11;

     label03:
        r14 = interfaceinvoke r1.<android.content.pm.IPackageManager: java.lang.String[] getPackagesForUid(int)>(i0);

     label04:
        if r14 == null goto label07;

        r13 = r11;

     label05:
        $i4 = lengthof r14;

        if $i4 == 0 goto label07;

     label06:
        r12 = r14[0];

        goto label13;

     label07:
        r13 = r11;

     label08:
        r15 = new java.lang.IllegalArgumentException;

     label09:
        r13 = r11;

     label10:
        specialinvoke r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unable to determine caller package name");

     label11:
        r13 = r11;

     label12:
        throw r15;

     label13:
        r13 = r12;

     label14:
        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.appop.AppOpsService mAppOpsService>;

        virtualinvoke $r2.<com.android.server.appop.AppOpsService: int checkPackage(int,java.lang.String)>(i0, r12);

     label15:
        r13 = r12;

     label16:
        $i3 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        z0 = interfaceinvoke r1.<android.content.pm.IPackageManager: boolean isInstantApp(java.lang.String,int)>(r12, $i3);

     label17:
        return z0;

     label18:
        $r4 := @caughtexception;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error looking up if ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is an instant app.");

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r9, $r4);

        return 1;

        catch android.os.RemoteException from label03 to label04 with label18;
        catch android.os.RemoteException from label05 to label06 with label18;
        catch android.os.RemoteException from label08 to label09 with label18;
        catch android.os.RemoteException from label10 to label11 with label18;
        catch android.os.RemoteException from label12 to label13 with label18;
        catch android.os.RemoteException from label14 to label15 with label18;
        catch android.os.RemoteException from label16 to label17 with label18;
    }

    private boolean isOnOffloadQueue(int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, $i1;
        boolean $z0, z1;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        $z0 = r0.<com.android.server.am.ActivityManagerService: boolean mEnableOffloadQueue>;

        if $z0 == 0 goto label1;

        $i1 = -2147483648 & i0;

        if $i1 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    private boolean killProcessesBelowAdj(int, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, $i2, $i4, i5;
        com.android.server.am.ActivityManagerService$PidMap r1, $r4, $r5, $r6;
        com.android.server.am.ProcessRecord r2;
        java.lang.SecurityException $r3;
        boolean $z0, z1, z2;
        java.lang.Throwable $r7;
        java.lang.String r8;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        r8 := @parameter1: java.lang.String;

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if $i2 != 1000 goto label17;

        z1 = 0;

        r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        entermonitor r1;

     label01:
        $r4 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        i1 = virtualinvoke $r4.<com.android.server.am.ActivityManagerService$PidMap: int size()>();

     label02:
        i5 = 0;

     label03:
        if i5 >= i1 goto label12;

     label04:
        $r5 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        virtualinvoke $r5.<com.android.server.am.ActivityManagerService$PidMap: int keyAt(int)>(i5);

        $r6 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        r2 = virtualinvoke $r6.<com.android.server.am.ActivityManagerService$PidMap: com.android.server.am.ProcessRecord valueAt(int)>(i5);

     label05:
        if r2 != null goto label06;

        z2 = z1;

        goto label11;

     label06:
        z2 = z1;

     label07:
        $i4 = r2.<com.android.server.am.ProcessRecord: int setAdj>;

        if $i4 <= i0 goto label11;

     label08:
        z2 = z1;

     label09:
        $z0 = r2.<com.android.server.am.ProcessRecord: boolean killedByAm>;

        if $z0 != 0 goto label11;

        virtualinvoke r2.<com.android.server.am.ProcessRecord: void kill(java.lang.String,int,boolean)>(r8, 8, 1);

     label10:
        z2 = 1;

     label11:
        i5 = i5 + 1;

        z1 = z2;

        goto label03;

     label12:
        exitmonitor r1;

     label13:
        return z1;

     label14:
        $r7 := @caughtexception;

     label15:
        exitmonitor r1;

     label16:
        throw $r7;

     label17:
        $r3 = new java.lang.SecurityException;

        specialinvoke $r3.<java.lang.SecurityException: void <init>(java.lang.String)>("killProcessesBelowAdj() only available to system");

        throw $r3;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label04 to label05 with label14;
        catch java.lang.Throwable from label07 to label08 with label14;
        catch java.lang.Throwable from label09 to label10 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label15 to label16 with label14;
    }

    static void lambda$logStrictModeViolationToDropBox$4(android.os.DropBoxManager, java.lang.String, java.lang.String)
    {
        android.os.DropBoxManager r0;
        java.lang.String r1, r2;

        r0 := @parameter0: android.os.DropBoxManager;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        virtualinvoke r0.<android.os.DropBoxManager: void addText(java.lang.String,java.lang.String)>(r1, r2);

        return;
    }

    static boolean lambda$reportMemUsage$6(com.android.internal.os.ProcessCpuTracker$Stats)
    {
        com.android.internal.os.ProcessCpuTracker$Stats r0;
        long $l0;
        byte $b1;
        boolean z0;

        r0 := @parameter0: com.android.internal.os.ProcessCpuTracker$Stats;

        $l0 = r0.<com.android.internal.os.ProcessCpuTracker$Stats: long vsize>;

        $b1 = $l0 cmp 0L;

        if $b1 <= 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private void logStrictModeViolationToDropBox(com.android.server.am.ProcessRecord, android.os.StrictMode$ViolationInfo)
    {
        com.android.server.am.ActivityManagerService r0;
        android.os.StrictMode$ViolationInfo r1;
        android.os.DropBoxManager r2;
        java.lang.String r3, $r7, $r12, $r21, $r24, $r27, $r30, $r43, r55, r59, r60;
        int i0, $i2, $i3, $i4, $i8, $i9, $i10, $i11, $i12, i13;
        android.content.Context $r4;
        java.lang.Object $r5;
        java.lang.StringBuilder $r6, $r10;
        boolean $z0, z2;
        long $l1, $l5, $l7;
        byte $b6;
        java.lang.String[] $r22, r58;
        android.os.Handler $r28;
        com.android.server.am._$$Lambda$ActivityManagerService$sgcouPmrltwdDp2DCHkd89xkLZ4 $r29;
        android.content.pm.ApplicationInfo $r52;
        java.lang.Throwable $r53;
        com.android.server.am.ProcessRecord r54;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r54 := @parameter0: com.android.server.am.ProcessRecord;

        r1 := @parameter1: android.os.StrictMode$ViolationInfo;

        if r1 != null goto label01;

        return;

     label01:
        i13 = 0;

        if r54 == null goto label03;

        $r52 = r54.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i11 = $r52.<android.content.pm.ApplicationInfo: int flags>;

        $i12 = $i11 & 129;

        if $i12 == 0 goto label02;

        goto label03;

     label02:
        z2 = 0;

        goto label04;

     label03:
        z2 = 1;

     label04:
        if r54 != null goto label05;

        r55 = "unknown";

        goto label06;

     label05:
        r55 = r54.<com.android.server.am.ProcessRecord: java.lang.String processName>;

     label06:
        $r4 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("dropbox");

        r2 = (android.os.DropBoxManager) $r5;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = staticinvoke <com.android.server.am.ActivityManagerService: java.lang.String processClass(com.android.server.am.ProcessRecord)>(r54);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_strictmode");

        r3 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        if r2 == null goto label23;

        $z0 = virtualinvoke r2.<android.os.DropBoxManager: boolean isTagEnabled(java.lang.String)>(r3);

        if $z0 != 0 goto label07;

        goto label23;

     label07:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>(int)>(1024);

        entermonitor $r10;

     label08:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void appendDropBoxProcessHeaders(com.android.server.am.ProcessRecord,java.lang.String,java.lang.StringBuilder)>(r54, r55, $r10);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Build: ");

        $r12 = <android.os.Build: java.lang.String FINGERPRINT>;

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("System-App: ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z2);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Uptime-Millis: ");

        $l1 = r1.<android.os.StrictMode$ViolationInfo: long violationUptimeMillis>;

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $i2 = r1.<android.os.StrictMode$ViolationInfo: int violationNumThisLoop>;

        if $i2 == 0 goto label09;

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Loop-Violation-Number: ");

        $i10 = r1.<android.os.StrictMode$ViolationInfo: int violationNumThisLoop>;

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

     label09:
        $i3 = r1.<android.os.StrictMode$ViolationInfo: int numAnimationsRunning>;

        if $i3 == 0 goto label10;

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Animations-Running: ");

        $i9 = r1.<android.os.StrictMode$ViolationInfo: int numAnimationsRunning>;

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

     label10:
        $r21 = r1.<android.os.StrictMode$ViolationInfo: java.lang.String broadcastIntentAction>;

        if $r21 == null goto label11;

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Broadcast-Intent-Action: ");

        $r43 = r1.<android.os.StrictMode$ViolationInfo: java.lang.String broadcastIntentAction>;

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

     label11:
        $i4 = r1.<android.os.StrictMode$ViolationInfo: int durationMillis>;

        if $i4 == -1 goto label12;

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duration-Millis: ");

        $i8 = r1.<android.os.StrictMode$ViolationInfo: int durationMillis>;

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

     label12:
        $l5 = r1.<android.os.StrictMode$ViolationInfo: long numInstances>;

        $b6 = $l5 cmp -1L;

        if $b6 == 0 goto label13;

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Instance-Count: ");

        $l7 = r1.<android.os.StrictMode$ViolationInfo: long numInstances>;

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l7);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

     label13:
        $r22 = r1.<android.os.StrictMode$ViolationInfo: java.lang.String[] tags>;

        if $r22 == null goto label17;

        r58 = r1.<android.os.StrictMode$ViolationInfo: java.lang.String[] tags>;

        i0 = lengthof r58;

     label14:
        if i13 >= i0 goto label17;

        r59 = r58[i13];

     label15:
        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Span-Tag: ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r59);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

     label16:
        i13 = i13 + 1;

        goto label14;

     label17:
        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r24 = virtualinvoke r1.<android.os.StrictMode$ViolationInfo: java.lang.String getStackTrace()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r27 = virtualinvoke r1.<android.os.StrictMode$ViolationInfo: java.lang.String getViolationDetails()>();

        if $r27 == null goto label18;

        $r30 = virtualinvoke r1.<android.os.StrictMode$ViolationInfo: java.lang.String getViolationDetails()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

     label18:
        exitmonitor $r10;

     label19:
        r60 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r28 = staticinvoke <com.android.server.IoThread: android.os.Handler getHandler()>();

        $r29 = new com.android.server.am._$$Lambda$ActivityManagerService$sgcouPmrltwdDp2DCHkd89xkLZ4;

        specialinvoke $r29.<com.android.server.am._$$Lambda$ActivityManagerService$sgcouPmrltwdDp2DCHkd89xkLZ4: void <init>(android.os.DropBoxManager,java.lang.String,java.lang.String)>(r2, r3, r60);

        virtualinvoke $r28.<android.os.Handler: boolean post(java.lang.Runnable)>($r29);

        return;

     label20:
        $r53 := @caughtexception;

     label21:
        exitmonitor $r10;

     label22:
        throw $r53;

     label23:
        return;

        catch java.lang.Throwable from label08 to label09 with label20;
        catch java.lang.Throwable from label09 to label10 with label20;
        catch java.lang.Throwable from label10 to label11 with label20;
        catch java.lang.Throwable from label11 to label12 with label20;
        catch java.lang.Throwable from label12 to label13 with label20;
        catch java.lang.Throwable from label13 to label14 with label20;
        catch java.lang.Throwable from label15 to label16 with label20;
        catch java.lang.Throwable from label17 to label18 with label20;
        catch java.lang.Throwable from label18 to label19 with label20;
        catch java.lang.Throwable from label21 to label22 with label20;
    }

    public static android.net.Uri makeHeapDumpUri(java.lang.String)
    {
        java.lang.String r0, $r6;
        java.lang.StringBuilder $r2;
        android.net.Uri $r7;

        r0 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("content://com.android.shell.heapdump/");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_javaheap.bin");

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r6);

        return $r7;
    }

    private void maybeLogUserspaceRebootEvent()
    {
        com.android.server.am.ActivityManagerService r0;
        int i0;
        boolean $z0, $z1;
        com.android.server.am.UserController $r1;
        java.util.concurrent.Executor $r2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $z0 = staticinvoke <com.android.server.UserspaceRebootLogger: boolean shouldLogUserspaceRebootEvent()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.UserController mUserController>;

        i0 = virtualinvoke $r1.<com.android.server.am.UserController: int getCurrentUserId()>();

        if i0 == 0 goto label2;

        return;

     label2:
        $z1 = staticinvoke <android.os.storage.StorageManager: boolean isUserKeyUnlocked(int)>(i0);

        $r2 = staticinvoke <com.android.internal.os.BackgroundThread: java.util.concurrent.Executor getExecutor()>();

        staticinvoke <com.android.server.UserspaceRebootLogger: void logEventAsync(boolean,java.util.concurrent.Executor)>($z1, $r2);

        return;
    }

    private static void maybePruneOldTraces(java.io.File)
    {
        int i0, $i2, i7;
        long l1, $l4, $l5;
        com.android.server.am.'-$$Lambda$yk1Ms9fVlF6PvprMwF2rru-dw4Q' $r1;
        java.util.Comparator $r2, $r3;
        java.io.File $r4, $r7, $r10, r11;
        boolean $z0;
        java.lang.String $r9;
        byte $b6;
        java.io.File[] r12;
        java.lang.StringBuilder r13;
        java.util.function.ToLongFunction r14;

        r11 := @parameter0: java.io.File;

        r12 = virtualinvoke r11.<java.io.File: java.io.File[] listFiles()>();

        if r12 != null goto label1;

        return;

     label1:
        i0 = staticinvoke <android.os.SystemProperties: int getInt(java.lang.String,int)>("tombstoned.max_anr_count", 64);

        l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r1 = <com.android.server.am._$$Lambda$yk1Ms9fVlF6PvprMwF2rru_dw4Q: com.android.server.am.'-$$Lambda$yk1Ms9fVlF6PvprMwF2rru-dw4Q' INSTANCE>;

        r14 = (java.util.function.ToLongFunction) $r1;

        $r2 = staticinvoke <java.util.Comparator: java.util.Comparator comparingLong(java.util.function.ToLongFunction)>(r14);

        $r3 = interfaceinvoke $r2.<java.util.Comparator: java.util.Comparator reversed()>();

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>(r12, $r3);

        i7 = 0;

     label2:
        $i2 = lengthof r12;

        if i7 >= $i2 goto label5;

        if i7 > i0 goto label3;

        $r10 = r12[i7];

        $l4 = virtualinvoke $r10.<java.io.File: long lastModified()>();

        $l5 = l1 - $l4;

        $b6 = $l5 cmp 86400000L;

        if $b6 <= 0 goto label4;

     label3:
        $r4 = r12[i7];

        $z0 = virtualinvoke $r4.<java.io.File: boolean delete()>();

        if $z0 != 0 goto label4;

        r13 = new java.lang.StringBuilder;

        specialinvoke r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to prune stale trace file: ");

        $r7 = r12[i7];

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r9);

     label4:
        i7 = i7 + 1;

        goto label2;

     label5:
        return;
    }

    private void maybeUpdateProviderUsageStatsLocked(com.android.server.am.ProcessRecord, java.lang.String, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1;
        java.lang.String r2, r3;
        com.android.server.am.UserState r4;
        long l0, $l4, $l5;
        java.lang.Long r5, $r10;
        int $i1, $i2, $i3;
        com.android.server.am.UserController $r6;
        android.util.ArrayMap $r7, $r9;
        java.lang.Object $r8;
        boolean $z0;
        android.app.usage.UsageStatsManagerInternal $r12;
        byte $b6;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        if r1 != null goto label1;

        return;

     label1:
        $i1 = virtualinvoke r1.<com.android.server.am.ProcessRecord: int getCurProcState()>();

        if $i1 > 6 goto label5;

        $r6 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.UserController mUserController>;

        $i2 = r1.<com.android.server.am.ProcessRecord: int userId>;

        r4 = virtualinvoke $r6.<com.android.server.am.UserController: com.android.server.am.UserState getStartedUserState(int)>($i2);

        if r4 != null goto label2;

        return;

     label2:
        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r7 = r4.<com.android.server.am.UserState: android.util.ArrayMap mProviderLastReportedFg>;

        $r8 = virtualinvoke $r7.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r3);

        r5 = (java.lang.Long) $r8;

        if r5 == null goto label3;

        $l4 = virtualinvoke r5.<java.lang.Long: long longValue()>();

        $l5 = l0 - 60000L;

        $b6 = $l4 cmp $l5;

        if $b6 >= 0 goto label5;

     label3:
        $z0 = r0.<com.android.server.am.ActivityManagerService: boolean mSystemReady>;

        if $z0 == 0 goto label4;

        $r12 = r0.<com.android.server.am.ActivityManagerService: android.app.usage.UsageStatsManagerInternal mUsageStatsService>;

        $i3 = r1.<com.android.server.am.ProcessRecord: int userId>;

        virtualinvoke $r12.<android.app.usage.UsageStatsManagerInternal: void reportContentProviderUsage(java.lang.String,java.lang.String,int)>(r3, r2, $i3);

     label4:
        $r9 = r4.<com.android.server.am.UserState: android.util.ArrayMap mProviderLastReportedFg>;

        $r10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        virtualinvoke $r9.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, $r10);

     label5:
        return;
    }

    private static java.lang.String processClass(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ProcessRecord r0;
        int $i0, $i1, $i2, $i3;
        android.content.pm.ApplicationInfo $r1;

        r0 := @parameter0: com.android.server.am.ProcessRecord;

        if r0 == null goto label3;

        $i1 = r0.<com.android.server.am.ProcessRecord: int pid>;

        $i0 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        if $i1 != $i0 goto label1;

        goto label3;

     label1:
        $r1 = r0.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i2 = $r1.<android.content.pm.ApplicationInfo: int flags>;

        $i3 = $i2 & 1;

        if $i3 == 0 goto label2;

        return "system_app";

     label2:
        return "data_app";

     label3:
        return "system_server";
    }

    private final void processContentProviderPublishTimedOutLocked(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1;
        com.android.server.am.ProcessList $r2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean cleanupAppInLaunchingProvidersLocked(com.android.server.am.ProcessRecord,boolean)>(r1, 1);

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        virtualinvoke $r2.<com.android.server.am.ProcessList: boolean removeProcessLocked(com.android.server.am.ProcessRecord,boolean,boolean,int,int,java.lang.String)>(r1, 0, 1, 7, 0, "timeout publishing content providers");

        return;
    }

    private boolean processSanityChecksLocked(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1;
        android.app.IApplicationThread $r2;
        java.lang.String $r3, $r4;
        boolean $z0;
        android.content.pm.ApplicationInfo $r5;
        int $i0, $i1;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        if r1 == null goto label3;

        $r2 = r1.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r2 != null goto label1;

        goto label3;

     label1:
        $r3 = "1";

        $r4 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String,java.lang.String)>("ro.debuggable", "0");

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label2;

        $r5 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i0 = $r5.<android.content.pm.ApplicationInfo: int flags>;

        $i1 = $i0 & 2;

        if $i1 != 0 goto label2;

        return 0;

     label2:
        return 1;

     label3:
        return 0;
    }

    private final void processStartTimedOutLocked(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1, $r23;
        int i0, $i3, $i4, $i5, $i6, $i7, $i9, $i11, $i12;
        boolean $z0, $z2, $z4;
        java.lang.StringBuilder $r2, $r6;
        java.lang.String $r5, $r10, $r11, $r12, $r18;
        com.android.server.am.ProcessList $r13;
        com.android.server.wm.ActivityTaskManagerInternal $r15;
        com.android.server.wm.WindowProcessController $r16;
        android.content.pm.ApplicationInfo $r17, $r26;
        com.android.server.am.BatteryStatsService $r19, $r27;
        com.android.server.am.ActiveServices $r20;
        android.util.SparseArray $r21;
        java.lang.Object $r22;
        com.android.server.am.ActivityManagerService$10 $r24;
        com.android.server.am.ActivityManagerService$MainHandler $r25;
        com.android.server.am.BackupRecord r29;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        i0 = r1.<com.android.server.am.ProcessRecord: int pid>;

        $z0 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean removePidIfNoThread(com.android.server.am.ProcessRecord)>(r1);

        if $z0 == 0 goto label4;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Process ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" failed to attach");

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r10);

        $i4 = r1.<com.android.server.am.ProcessRecord: int userId>;

        $i3 = r1.<com.android.server.am.ProcessRecord: int uid>;

        $r11 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        staticinvoke <com.android.server.am.EventLogTags: void writeAmProcessStartTimeout(int,int,int,java.lang.String)>($i4, i0, $i3, $r11);

        $r13 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r12 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $i5 = r1.<com.android.server.am.ProcessRecord: int uid>;

        virtualinvoke $r13.<com.android.server.am.ProcessList: com.android.server.am.ProcessRecord removeProcessNameLocked(java.lang.String,int)>($r12, $i5);

        $r15 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerInternal mAtmInternal>;

        $r16 = virtualinvoke r1.<com.android.server.am.ProcessRecord: com.android.server.wm.WindowProcessController getWindowProcessController()>();

        virtualinvoke $r15.<com.android.server.wm.ActivityTaskManagerInternal: void clearHeavyWeightProcessIfEquals(com.android.server.wm.WindowProcessController)>($r16);

        $r19 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        $r18 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r17 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i6 = $r17.<android.content.pm.ApplicationInfo: int uid>;

        virtualinvoke $r19.<com.android.server.am.BatteryStatsService: void noteProcessFinish(java.lang.String,int)>($r18, $i6);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean cleanupAppInLaunchingProvidersLocked(com.android.server.am.ProcessRecord,boolean)>(r1, 1);

        $r20 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveServices mServices>;

        virtualinvoke $r20.<com.android.server.am.ActiveServices: void processStartTimedOutLocked(com.android.server.am.ProcessRecord)>(r1);

        virtualinvoke r1.<com.android.server.am.ProcessRecord: void kill(java.lang.String,int,boolean)>("start timeout", 7, 1);

        $z2 = r1.<com.android.server.am.ProcessRecord: boolean isolated>;

        if $z2 == 0 goto label1;

        $r27 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        $i12 = r1.<com.android.server.am.ProcessRecord: int uid>;

        $r26 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i11 = $r26.<android.content.pm.ApplicationInfo: int uid>;

        virtualinvoke $r27.<com.android.server.am.BatteryStatsService: void removeIsolatedUid(int,int)>($i12, $i11);

     label1:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void removeLruProcessLocked(com.android.server.am.ProcessRecord)>(r1);

        $r21 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mBackupTargets>;

        $i7 = r1.<com.android.server.am.ProcessRecord: int userId>;

        $r22 = virtualinvoke $r21.<android.util.SparseArray: java.lang.Object get(int)>($i7);

        r29 = (com.android.server.am.BackupRecord) $r22;

        if r29 == null goto label2;

        $r23 = r29.<com.android.server.am.BackupRecord: com.android.server.am.ProcessRecord app>;

        $i9 = $r23.<com.android.server.am.ProcessRecord: int pid>;

        if $i9 != i0 goto label2;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", "Unattached app died before backup, skipping");

        $r25 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        $r24 = new com.android.server.am.ActivityManagerService$10;

        specialinvoke $r24.<com.android.server.am.ActivityManagerService$10: void <init>(com.android.server.am.ActivityManagerService,com.android.server.am.ProcessRecord)>(r0, r1);

        virtualinvoke $r25.<com.android.server.am.ActivityManagerService$MainHandler: boolean post(java.lang.Runnable)>($r24);

     label2:
        $z4 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean isPendingBroadcastProcessLocked(int)>(i0);

        if $z4 == 0 goto label3;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", "Unattached app died before broadcast acknowledged, skipping");

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void skipPendingBroadcastLocked(int)>(i0);

     label3:
        goto label5;

     label4:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Spurious process start timeout - pid not known for ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r5);

     label5:
        return;
    }

    private void removeContentProviderExternalUnchecked(java.lang.String, android.os.IBinder, int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0;
        com.android.server.am.ProviderMap $r1, $r6;
        android.content.pm.ProviderInfo $r2, $r3;
        java.lang.String $r4, $r5, $r10, $r16, r18;
        boolean $z0, $z1;
        java.lang.Throwable $r17;
        android.os.IBinder r19;
        com.android.server.am.ContentProviderRecord r20, r22;
        android.content.ComponentName r21;
        java.lang.StringBuilder r23, r24;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r18 := @parameter0: java.lang.String;

        r19 := @parameter1: android.os.IBinder;

        i0 := @parameter2: int;

        entermonitor r0;

     label01:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProviderMap mProviderMap>;

        r20 = virtualinvoke $r1.<com.android.server.am.ProviderMap: com.android.server.am.ContentProviderRecord getProviderByName(java.lang.String,int)>(r18, i0);

     label02:
        if r20 != null goto label05;

     label03:
        exitmonitor r0;

     label04:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label05:
        r21 = new android.content.ComponentName;

        $r2 = r20.<com.android.server.am.ContentProviderRecord: android.content.pm.ProviderInfo info>;

        $r5 = $r2.<android.content.pm.ProviderInfo: java.lang.String packageName>;

        $r3 = r20.<com.android.server.am.ContentProviderRecord: android.content.pm.ProviderInfo info>;

        $r4 = $r3.<android.content.pm.ProviderInfo: java.lang.String name>;

        specialinvoke r21.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r5, $r4);

        $r6 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProviderMap mProviderMap>;

        r22 = virtualinvoke $r6.<com.android.server.am.ProviderMap: com.android.server.am.ContentProviderRecord getProviderByClass(android.content.ComponentName,int)>(r21, i0);

        $z0 = virtualinvoke r22.<com.android.server.am.ContentProviderRecord: boolean hasExternalProcessHandles()>();

        if $z0 == 0 goto label09;

        $z1 = virtualinvoke r22.<com.android.server.am.ContentProviderRecord: boolean removeExternalProcessHandleLocked(android.os.IBinder)>(r19);

        if $z1 == 0 goto label07;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void updateOomAdjLocked(java.lang.String)>("updateOomAdj_removeProvider");

     label06:
        goto label10;

     label07:
        r23 = new java.lang.StringBuilder;

        specialinvoke r23.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attmpt to remove content provider ");

        virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r22);

        virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with no external reference for token: ");

        virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r19);

        virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r16 = virtualinvoke r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ActivityManager", $r16);

     label08:
        goto label10;

     label09:
        r24 = new java.lang.StringBuilder;

        specialinvoke r24.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attmpt to remove content provider: ");

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r22);

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with no external references.");

        $r10 = virtualinvoke r24.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ActivityManager", $r10);

     label10:
        exitmonitor r0;

     label11:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label12:
        $r17 := @caughtexception;

     label13:
        exitmonitor r0;

     label14:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r17;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label07 to label08 with label12;
        catch java.lang.Throwable from label09 to label10 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    private final boolean removeDyingProviderLocked(com.android.server.am.ProcessRecord, com.android.server.am.ContentProviderRecord, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ContentProviderRecord r1, $r6, $r14, $r16, $r43;
        boolean z0, $z2, $z3, $z4, z5, z6, z7;
        int i0, $i1, $i2, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12, $i13, i14, $i15;
        com.android.server.am.ProcessRecord r2, $r22, r50;
        java.util.ArrayList $r3, $r9, $r10, $r11, $r20, $r23;
        android.content.ComponentName $r4, $r27, $r32, $r46;
        com.android.server.am.ProviderMap $r5, $r42, $r45, $r47;
        android.content.pm.ProviderInfo $r7, $r25;
        java.lang.String $r8, $r26, $r28, $r33, $r40, $r41, $r44, r54;
        java.lang.Object $r12;
        android.app.IApplicationThread $r13, $r18, $r29;
        android.content.IContentProvider $r15, $r17;
        android.os.IBinder $r19;
        android.content.pm.ApplicationInfo $r24;
        long $l3;
        java.lang.StringBuilder $r30;
        java.lang.Throwable $r48;
        android.os.RemoteException $r49;
        java.lang.String[] r51;
        com.android.server.am.ContentProviderConnection r52;
        java.io.Serializable r55;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r50 := @parameter0: com.android.server.am.ProcessRecord;

        r1 := @parameter1: com.android.server.am.ContentProviderRecord;

        z5 := @parameter2: boolean;

        $r3 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLaunchingProviders>;

        z0 = virtualinvoke $r3.<java.util.ArrayList: boolean contains(java.lang.Object)>(r1);

        if z0 == 0 goto label01;

        if z5 != 0 goto label01;

        $i10 = r1.<com.android.server.am.ContentProviderRecord: int mRestartCount>;

        i11 = $i10 + 1;

        r1.<com.android.server.am.ContentProviderRecord: int mRestartCount> = i11;

        if i11 <= 3 goto label01;

        z6 = 1;

        goto label02;

     label01:
        z6 = z5;

     label02:
        if z0 == 0 goto label03;

        if z6 == 0 goto label09;

     label03:
        entermonitor r1;

     label04:
        r1.<com.android.server.am.ContentProviderRecord: com.android.server.am.ProcessRecord launchingApp> = null;

        virtualinvoke r1.<java.lang.Object: void notifyAll()>();

        exitmonitor r1;

     label05:
        $i1 = r1.<com.android.server.am.ContentProviderRecord: int uid>;

        i0 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i1);

        $r5 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProviderMap mProviderMap>;

        $r4 = r1.<com.android.server.am.ContentProviderRecord: android.content.ComponentName name>;

        $r6 = virtualinvoke $r5.<com.android.server.am.ProviderMap: com.android.server.am.ContentProviderRecord getProviderByClass(android.content.ComponentName,int)>($r4, i0);

        if $r6 != r1 goto label06;

        $r47 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProviderMap mProviderMap>;

        $r46 = r1.<com.android.server.am.ContentProviderRecord: android.content.ComponentName name>;

        virtualinvoke $r47.<com.android.server.am.ProviderMap: void removeProviderByClass(android.content.ComponentName,int)>($r46, i0);

     label06:
        $r7 = r1.<com.android.server.am.ContentProviderRecord: android.content.pm.ProviderInfo info>;

        $r8 = $r7.<android.content.pm.ProviderInfo: java.lang.String authority>;

        r51 = virtualinvoke $r8.<java.lang.String: java.lang.String[] split(java.lang.String)>(";");

        i12 = 0;

     label07:
        $i13 = lengthof r51;

        if i12 >= $i13 goto label09;

        $r42 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProviderMap mProviderMap>;

        $r41 = r51[i12];

        $r43 = virtualinvoke $r42.<com.android.server.am.ProviderMap: com.android.server.am.ContentProviderRecord getProviderByName(java.lang.String,int)>($r41, i0);

        if $r43 != r1 goto label08;

        $r45 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProviderMap mProviderMap>;

        $r44 = r51[i12];

        virtualinvoke $r45.<com.android.server.am.ProviderMap: void removeProviderByName(java.lang.String,int)>($r44, i0);

     label08:
        i12 = i12 + 1;

        goto label07;

     label09:
        $r9 = r1.<com.android.server.am.ContentProviderRecord: java.util.ArrayList connections>;

        $i2 = virtualinvoke $r9.<java.util.ArrayList: int size()>();

        i14 = $i2 - 1;

     label10:
        if i14 < 0 goto label23;

        $r11 = r1.<com.android.server.am.ContentProviderRecord: java.util.ArrayList connections>;

        $r12 = virtualinvoke $r11.<java.util.ArrayList: java.lang.Object get(int)>(i14);

        r52 = (com.android.server.am.ContentProviderConnection) $r12;

        $z2 = r52.<com.android.server.am.ContentProviderConnection: boolean waiting>;

        if $z2 == 0 goto label11;

        if z0 == 0 goto label11;

        if z6 != 0 goto label11;

        goto label22;

     label11:
        r2 = r52.<com.android.server.am.ContentProviderConnection: com.android.server.am.ProcessRecord client>;

        r52.<com.android.server.am.ContentProviderConnection: boolean dead> = 1;

        $i15 = r52.<com.android.server.am.ContentProviderConnection: int stableCount>;

        if $i15 <= 0 goto label16;

        $z4 = virtualinvoke r2.<com.android.server.am.ProcessRecord: boolean isPersistent()>();

        if $z4 != 0 goto label22;

        $r29 = r2.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r29 == null goto label22;

        $i6 = r2.<com.android.server.am.ProcessRecord: int pid>;

        if $i6 == 0 goto label22;

        $i8 = r2.<com.android.server.am.ProcessRecord: int pid>;

        $i7 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        if $i8 == $i7 goto label22;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("depends on provider ");

        $r32 = r1.<com.android.server.am.ContentProviderRecord: android.content.ComponentName name>;

        $r33 = virtualinvoke $r32.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in dying proc ");

        if r50 == null goto label12;

        r54 = r50.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        goto label13;

     label12:
        r54 = "??";

     label13:
        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r54);

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (adj ");

        if r50 == null goto label14;

        $i9 = r50.<com.android.server.am.ProcessRecord: int setAdj>;

        r55 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);

        goto label15;

     label14:
        r55 = "??";

     label15:
        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r55);

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r40 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<com.android.server.am.ProcessRecord: void kill(java.lang.String,int,int,boolean)>($r40, 12, 0, 1);

        goto label22;

     label16:
        $r13 = r2.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r13 == null goto label22;

        $r14 = r52.<com.android.server.am.ContentProviderConnection: com.android.server.am.ContentProviderRecord provider>;

        $r15 = $r14.<com.android.server.am.ContentProviderRecord: android.content.IContentProvider provider>;

        if $r15 == null goto label22;

     label17:
        $r18 = r2.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r16 = r52.<com.android.server.am.ContentProviderConnection: com.android.server.am.ContentProviderRecord provider>;

        $r17 = $r16.<com.android.server.am.ContentProviderRecord: android.content.IContentProvider provider>;

        $r19 = interfaceinvoke $r17.<android.content.IContentProvider: android.os.IBinder asBinder()>();

        interfaceinvoke $r18.<android.app.IApplicationThread: void unstableProviderDied(android.os.IBinder)>($r19);

     label18:
        goto label20;

     label19:
        $r49 := @caughtexception;

     label20:
        $r20 = r1.<com.android.server.am.ContentProviderRecord: java.util.ArrayList connections>;

        virtualinvoke $r20.<java.util.ArrayList: java.lang.Object remove(int)>(i14);

        $r22 = r52.<com.android.server.am.ContentProviderConnection: com.android.server.am.ProcessRecord client>;

        $r23 = $r22.<com.android.server.am.ProcessRecord: java.util.ArrayList conProviders>;

        $z3 = virtualinvoke $r23.<java.util.ArrayList: boolean remove(java.lang.Object)>(r52);

        if $z3 == 0 goto label21;

        $i5 = r2.<com.android.server.am.ProcessRecord: int uid>;

        $r28 = r2.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $i4 = r1.<com.android.server.am.ContentProviderRecord: int uid>;

        $r24 = r1.<com.android.server.am.ContentProviderRecord: android.content.pm.ApplicationInfo appInfo>;

        $l3 = $r24.<android.content.pm.ApplicationInfo: long longVersionCode>;

        $r27 = r1.<com.android.server.am.ContentProviderRecord: android.content.ComponentName name>;

        $r25 = r1.<com.android.server.am.ContentProviderRecord: android.content.pm.ProviderInfo info>;

        $r26 = $r25.<android.content.pm.ProviderInfo: java.lang.String processName>;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void stopAssociationLocked(int,java.lang.String,int,long,android.content.ComponentName,java.lang.String)>($i5, $r28, $i4, $l3, $r27, $r26);

        goto label22;

     label21:
        goto label22;

     label22:
        i14 = i14 + -1;

        goto label10;

     label23:
        z7 = z0;

        if z0 == 0 goto label24;

        z7 = z0;

        if z6 == 0 goto label24;

        $r10 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLaunchingProviders>;

        virtualinvoke $r10.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        r1.<com.android.server.am.ContentProviderRecord: int mRestartCount> = 0;

        z7 = 0;

     label24:
        return z7;

     label25:
        $r48 := @caughtexception;

     label26:
        exitmonitor r1;

     label27:
        throw $r48;

        catch java.lang.Throwable from label04 to label05 with label25;
        catch android.os.RemoteException from label17 to label18 with label19;
        catch java.lang.Throwable from label26 to label27 with label25;
    }

    private boolean reportLmkKillAtOrBelow(java.io.PrintWriter, int)
    {
        com.android.server.am.ActivityManagerService r0;
        java.io.PrintWriter r1;
        int i0;
        java.lang.Integer r2;
        java.lang.StringBuilder $r4;
        java.lang.String $r9;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.io.PrintWriter;

        i0 := @parameter1: int;

        r2 = staticinvoke <com.android.server.am.ProcessList: java.lang.Integer getLmkdKillCount(int,int)>(0, i0);

        if r2 == null goto label1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    kills at or below oom_adj ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r9 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r9);

        return 1;

     label1:
        return 0;
    }

    private void reportStartInstrumentationFailureLocked(android.app.IInstrumentationWatcher, android.content.ComponentName, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        android.app.IInstrumentationWatcher r1;
        android.content.ComponentName r2;
        java.lang.String r3;
        android.os.Bundle $r5;
        com.android.server.am.InstrumentationReporter $r6;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.app.IInstrumentationWatcher;

        r2 := @parameter1: android.content.ComponentName;

        r3 := @parameter2: java.lang.String;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r3);

        if r1 == null goto label1;

        $r5 = new android.os.Bundle;

        specialinvoke $r5.<android.os.Bundle: void <init>()>();

        virtualinvoke $r5.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("id", "ActivityManagerService");

        virtualinvoke $r5.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("Error", r3);

        $r6 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.InstrumentationReporter mInstrumentationReporter>;

        virtualinvoke $r6.<com.android.server.am.InstrumentationReporter: void reportStatus(android.app.IInstrumentationWatcher,android.content.ComponentName,int,android.os.Bundle)>(r1, r2, -1, $r5);

     label1:
        return;
    }

    private boolean requestTargetProviderPermissionsReviewIfNeededLocked(android.content.pm.ProviderInfo, com.android.server.am.ProcessRecord, int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, $i2;
        boolean z0, z3;
        android.content.pm.PackageManagerInternal $r1;
        java.lang.String $r2, $r5, $r15, $r18;
        android.content.Intent $r3;
        android.os.UserHandle $r7;
        com.android.server.am.ActivityManagerService$StartActivityRunnable $r8;
        android.content.Context $r9;
        com.android.server.am.ActivityManagerService$MainHandler $r10;
        java.lang.StringBuilder $r11;
        android.content.pm.ProviderInfo r19;
        com.android.server.am.ProcessRecord r20;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r19 := @parameter0: android.content.pm.ProviderInfo;

        r20 := @parameter1: com.android.server.am.ProcessRecord;

        i0 := @parameter2: int;

        $r1 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: android.content.pm.PackageManagerInternal getPackageManagerInternalLocked()>();

        $r2 = r19.<android.content.pm.ProviderInfo: java.lang.String packageName>;

        z0 = virtualinvoke $r1.<android.content.pm.PackageManagerInternal: boolean isPermissionsReviewRequired(java.lang.String,int)>($r2, i0);

        if z0 == 0 goto label4;

        z3 = 1;

        if r20 == null goto label2;

        $i2 = r20.<com.android.server.am.ProcessRecord: int setSchedGroup>;

        if $i2 == 0 goto label1;

        z3 = 1;

        goto label2;

     label1:
        z3 = 0;

     label2:
        if z3 != 0 goto label3;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("u");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Instantiating a provider in package");

        $r15 = r19.<android.content.pm.ProviderInfo: java.lang.String packageName>;

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires a permissions review");

        $r18 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r18);

        return 0;

     label3:
        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.REVIEW_PERMISSIONS");

        virtualinvoke $r3.<android.content.Intent: android.content.Intent addFlags(int)>(276824064);

        $r5 = r19.<android.content.pm.ProviderInfo: java.lang.String packageName>;

        virtualinvoke $r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("android.intent.extra.PACKAGE_NAME", $r5);

        $r7 = new android.os.UserHandle;

        specialinvoke $r7.<android.os.UserHandle: void <init>(int)>(i0);

        $r10 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        $r8 = new com.android.server.am.ActivityManagerService$StartActivityRunnable;

        $r9 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        specialinvoke $r8.<com.android.server.am.ActivityManagerService$StartActivityRunnable: void <init>(android.content.Context,android.content.Intent,android.os.UserHandle)>($r9, $r3, $r7);

        virtualinvoke $r10.<com.android.server.am.ActivityManagerService$MainHandler: boolean post(java.lang.Runnable)>($r8);

        return 0;

     label4:
        return 1;
    }

    static void resetPriorityAfterLockedSection()
    {
        com.android.server.ThreadPriorityBooster $r0;

        $r0 = <com.android.server.am.ActivityManagerService: com.android.server.ThreadPriorityBooster sThreadPriorityBooster>;

        virtualinvoke $r0.<com.android.server.ThreadPriorityBooster: void reset()>();

        return;
    }

    private void retrieveSettings()
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1, $r10;
        long l0, l1;
        int i2, $i3, $i4;
        android.content.Context $r2, $r8;
        com.android.server.wm.ActivityTaskManagerService $r3;
        com.android.server.am.ActivityManagerService$HiddenApiSettings $r4;
        android.app.Application $r5;
        java.util.concurrent.Executor $r6;
        android.provider.DeviceConfig$OnPropertiesChangedListener $r7;
        com.android.server.am.AppErrors $r9;
        boolean $z1, z2, z3, z4, z5;
        com.android.server.am.UserController $r11;
        java.lang.Throwable $r12;
        android.content.ContentResolver r13;
        android.content.res.Resources r14;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $r2 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        r13 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerService mActivityTaskManager>;

        virtualinvoke $r3.<com.android.server.wm.ActivityTaskManagerService: void retrieveSettings(android.content.ContentResolver)>(r13);

        r1 = staticinvoke <android.provider.Settings$Global: java.lang.String getString(android.content.ContentResolver,java.lang.String)>(r13, "debug_app");

        $i3 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>(r13, "wait_for_debugger", 0);

        if $i3 == 0 goto label01;

        z2 = 1;

        goto label02;

     label01:
        z2 = 0;

     label02:
        $i4 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>(r13, "always_finish_activities", 0);

        if $i4 == 0 goto label03;

        z3 = 1;

        goto label04;

     label03:
        z3 = 0;

     label04:
        l0 = staticinvoke <android.provider.Settings$Global: long getLong(android.content.ContentResolver,java.lang.String,long)>(r13, "network_access_timeout_ms", 200L);

        $r4 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$HiddenApiSettings mHiddenApiBlacklist>;

        virtualinvoke $r4.<com.android.server.am.ActivityManagerService$HiddenApiSettings: void registerObserver()>();

        l1 = staticinvoke <android.provider.DeviceConfig: long getLong(java.lang.String,java.lang.String,long)>("activity_manager", "activity_start_pss_defer", 0L);

        $r5 = staticinvoke <android.app.ActivityThread: android.app.Application currentApplication()>();

        $r6 = virtualinvoke $r5.<android.app.Application: java.util.concurrent.Executor getMainExecutor()>();

        $r7 = r0.<com.android.server.am.ActivityManagerService: android.provider.DeviceConfig$OnPropertiesChangedListener mPssDelayConfigListener>;

        staticinvoke <android.provider.DeviceConfig: void addOnPropertiesChangedListener(java.lang.String,java.util.concurrent.Executor,android.provider.DeviceConfig$OnPropertiesChangedListener)>("activity_manager", $r6, $r7);

        entermonitor r0;

     label05:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        r0.<com.android.server.am.ActivityManagerService: java.lang.String mOrigDebugApp> = r1;

        r0.<com.android.server.am.ActivityManagerService: java.lang.String mDebugApp> = r1;

        r0.<com.android.server.am.ActivityManagerService: boolean mOrigWaitForDebugger> = z2;

        r0.<com.android.server.am.ActivityManagerService: boolean mWaitForDebugger> = z2;

        r0.<com.android.server.am.ActivityManagerService: boolean mAlwaysFinishActivities> = z3;

        $r8 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        r14 = virtualinvoke $r8.<android.content.Context: android.content.res.Resources getResources()>();

        $r9 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.AppErrors mAppErrors>;

        $r10 = virtualinvoke r14.<android.content.res.Resources: java.lang.String getString(int)>(17039823);

        virtualinvoke $r9.<com.android.server.am.AppErrors: void loadAppsNotReportingCrashesFromConfigLocked(java.lang.String)>($r10);

     label06:
        z4 = 0;

     label07:
        $z1 = virtualinvoke r14.<android.content.res.Resources: boolean getBoolean(int)>(17891400);

        if $z1 != 0 goto label09;

     label08:
        z4 = 1;

     label09:
        i2 = virtualinvoke r14.<android.content.res.Resources: int getInteger(int)>(17694848);

        z5 = virtualinvoke r14.<android.content.res.Resources: boolean getBoolean(int)>(17891488);

        $r11 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.UserController mUserController>;

        virtualinvoke $r11.<com.android.server.am.UserController: void setInitialConfig(boolean,int,boolean)>(z4, i2, z5);

        r0.<com.android.server.am.ActivityManagerService: long mWaitForNetworkTimeoutMs> = l0;

        r0.<com.android.server.am.ActivityManagerService: long mPssDeferralTime> = l1;

        exitmonitor r0;

     label10:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label11:
        $r12 := @caughtexception;

     label12:
        exitmonitor r0;

     label13:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r12;

        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    private static boolean scanArgs(java.lang.String[], java.lang.String)
    {
        java.lang.String[] r0;
        java.lang.String r1, $r2;
        int i0, i1;
        boolean $z0;

        r0 := @parameter0: java.lang.String[];

        r1 := @parameter1: java.lang.String;

        if r0 == null goto label3;

        i0 = lengthof r0;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r2 = r0[i1];

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    public static boolean scheduleAsFifoPriority(int, boolean)
    {
        int i0;
        boolean z0;
        java.lang.Throwable $r0, $r5;
        java.lang.StringBuilder $r1, $r6;
        java.lang.String $r4, $r9;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

     label1:
        staticinvoke <android.os.Process: void setThreadScheduler(int,int,int)>(i0, 1073741825, 1);

     label2:
        return 1;

     label3:
        $r5 := @caughtexception;

        if z0 != 0 goto label5;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to set scheduling policy, not allowed:\n");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r9);

        goto label5;

     label4:
        $r0 := @caughtexception;

        if z0 != 0 goto label5;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to set scheduling policy, thread does not exist:\n");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r4);

     label5:
        return 0;

        catch java.lang.IllegalArgumentException from label1 to label2 with label4;
        catch java.lang.SecurityException from label1 to label2 with label3;
    }

    public static boolean scheduleAsRegularPriority(int, boolean)
    {
        int i0;
        boolean z0;
        java.lang.Throwable $r0, $r5;
        java.lang.StringBuilder $r1, $r6;
        java.lang.String $r4, $r9;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

     label1:
        staticinvoke <android.os.Process: void setThreadScheduler(int,int,int)>(i0, 0, 0);

     label2:
        return 1;

     label3:
        $r0 := @caughtexception;

        if z0 != 0 goto label5;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to set scheduling policy, not allowed:\n");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r4);

        goto label5;

     label4:
        $r5 := @caughtexception;

        if z0 != 0 goto label5;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to set scheduling policy, thread does not exist:\n");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r9);

     label5:
        return 0;

        catch java.lang.IllegalArgumentException from label1 to label2 with label4;
        catch java.lang.SecurityException from label1 to label2 with label3;
    }

    private final void sendPackageBroadcastLocked(int, java.lang.String[], int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1;
        java.lang.String[] r1;
        com.android.server.am.ProcessList $r2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String[];

        i1 := @parameter2: int;

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        virtualinvoke $r2.<com.android.server.am.ProcessList: void sendPackageBroadcastLocked(int,java.lang.String[],int)>(i0, r1, i1);

        return;
    }

    private void showConsoleNotificationIfActive()
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1, $r2, $r6, r22;
        boolean $z0;
        android.content.Context $r3, $r4, $r7, $r13, $r18;
        android.app.Notification$Builder $r5, $r8, $r9, $r10, $r11, $r12, $r14, $r15, $r16, $r17;
        int $i0;
        java.lang.Object $r19;
        android.os.UserHandle $r20;
        android.app.NotificationManager $r21;
        android.app.Notification r23;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $r2 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("init.svc.console");

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("running");

        if $z0 != 0 goto label1;

        return;

     label1:
        $r3 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        r22 = virtualinvoke $r3.<android.content.Context: java.lang.String getString(int)>(17039978);

        $r4 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        r1 = virtualinvoke $r4.<android.content.Context: java.lang.String getString(int)>(17039977);

        $r5 = new android.app.Notification$Builder;

        $r7 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r6 = <com.android.internal.notification.SystemNotificationChannels: java.lang.String DEVELOPER>;

        specialinvoke $r5.<android.app.Notification$Builder: void <init>(android.content.Context,java.lang.String)>($r7, $r6);

        $r8 = virtualinvoke $r5.<android.app.Notification$Builder: android.app.Notification$Builder setSmallIcon(int)>(17303547);

        $r9 = virtualinvoke $r8.<android.app.Notification$Builder: android.app.Notification$Builder setWhen(long)>(0L);

        $r10 = virtualinvoke $r9.<android.app.Notification$Builder: android.app.Notification$Builder setOngoing(boolean)>(1);

        $r11 = virtualinvoke $r10.<android.app.Notification$Builder: android.app.Notification$Builder setTicker(java.lang.CharSequence)>(r22);

        $r12 = virtualinvoke $r11.<android.app.Notification$Builder: android.app.Notification$Builder setDefaults(int)>(0);

        $r13 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $i0 = virtualinvoke $r13.<android.content.Context: int getColor(int)>(17170460);

        $r14 = virtualinvoke $r12.<android.app.Notification$Builder: android.app.Notification$Builder setColor(int)>($i0);

        $r15 = virtualinvoke $r14.<android.app.Notification$Builder: android.app.Notification$Builder setContentTitle(java.lang.CharSequence)>(r22);

        $r16 = virtualinvoke $r15.<android.app.Notification$Builder: android.app.Notification$Builder setContentText(java.lang.CharSequence)>(r1);

        $r17 = virtualinvoke $r16.<android.app.Notification$Builder: android.app.Notification$Builder setVisibility(int)>(1);

        r23 = virtualinvoke $r17.<android.app.Notification$Builder: android.app.Notification build()>();

        $r18 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r19 = virtualinvoke $r18.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/app/NotificationManager;");

        $r21 = (android.app.NotificationManager) $r19;

        $r20 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r21.<android.app.NotificationManager: void notifyAsUser(java.lang.String,int,android.app.Notification,android.os.UserHandle)>(null, 55, r23, $r20);

        return;
    }

    private static void sortMemItems(java.util.List, boolean)
    {
        java.util.List r0;
        boolean z0;
        com.android.server.am.ActivityManagerService$22 $r1;

        r0 := @parameter0: java.util.List;

        z0 := @parameter1: boolean;

        $r1 = new com.android.server.am.ActivityManagerService$22;

        specialinvoke $r1.<com.android.server.am.ActivityManagerService$22: void <init>(boolean)>(z0);

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r0, $r1);

        return;
    }

    private static final java.util.ArrayList sortProcessOomList(java.util.List, java.lang.String)
    {
        java.util.List r0;
        java.lang.String r1;
        com.android.server.am.ProcessRecord r3, $r9;
        java.util.ArrayList $r4;
        int $i0, $i1, i2;
        com.android.server.am.ActivityManagerService$21 $r5;
        java.lang.Object $r6, $r8;
        android.util.Pair $r7;
        java.lang.Integer $r10;
        com.android.server.am.ProcessRecord$PackageList $r11;
        boolean $z1;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.lang.String;

        $r4 = new java.util.ArrayList;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        specialinvoke $r4.<java.util.ArrayList: void <init>(int)>($i0);

        i2 = 0;

     label1:
        $i1 = interfaceinvoke r0.<java.util.List: int size()>();

        if i2 >= $i1 goto label4;

        $r6 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i2);

        r3 = (com.android.server.am.ProcessRecord) $r6;

        if r1 == null goto label2;

        $r11 = r3.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        $z1 = virtualinvoke $r11.<com.android.server.am.ProcessRecord$PackageList: boolean containsKey(java.lang.Object)>(r1);

        if $z1 != 0 goto label2;

        goto label3;

     label2:
        $r7 = new android.util.Pair;

        $r8 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i2);

        $r9 = (com.android.server.am.ProcessRecord) $r8;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        specialinvoke $r7.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r9, $r10);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        $r5 = new com.android.server.am.ActivityManagerService$21;

        specialinvoke $r5.<com.android.server.am.ActivityManagerService$21: void <init>()>();

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r4, $r5);

        return $r4;
    }

    private void start()
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.Thread $r2, $r10;
        com.android.server.am.BatteryStatsService $r3;
        com.android.server.appop.AppOpsService $r4;
        android.app.ActivityManagerInternal $r5;
        com.android.server.wm.ActivityTaskManagerService $r6;
        com.android.server.am.PendingIntentController $r7;
        java.util.concurrent.CountDownLatch $r8;
        java.lang.Throwable $r9;
        java.lang.IllegalStateException $r11;

        r0 := @this: com.android.server.am.ActivityManagerService;

        staticinvoke <android.os.Process: void removeAllProcessGroups()>();

        $r2 = r0.<com.android.server.am.ActivityManagerService: java.lang.Thread mProcessCpuThread>;

        virtualinvoke $r2.<java.lang.Thread: void start()>();

        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        virtualinvoke $r3.<com.android.server.am.BatteryStatsService: void publish()>();

        $r4 = r0.<com.android.server.am.ActivityManagerService: com.android.server.appop.AppOpsService mAppOpsService>;

        virtualinvoke $r4.<com.android.server.appop.AppOpsService: void publish()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("AppOps", "AppOpsService published");

        $r5 = r0.<com.android.server.am.ActivityManagerService: android.app.ActivityManagerInternal mInternal>;

        staticinvoke <com.android.server.LocalServices: void addService(java.lang.Class,java.lang.Object)>(class "Landroid/app/ActivityManagerInternal;", $r5);

        $r6 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerService mActivityTaskManager>;

        virtualinvoke $r6.<com.android.server.wm.ActivityTaskManagerService: void onActivityManagerInternalAdded()>();

        $r7 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.PendingIntentController mPendingIntentController>;

        virtualinvoke $r7.<com.android.server.am.PendingIntentController: void onActivityManagerInternalAdded()>();

     label1:
        $r8 = r0.<com.android.server.am.ActivityManagerService: java.util.concurrent.CountDownLatch mProcessCpuInitLatch>;

        virtualinvoke $r8.<java.util.concurrent.CountDownLatch: void await()>();

     label2:
        return;

     label3:
        $r9 := @caughtexception;

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", "Interrupted wait during start", $r9);

        $r10 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r10.<java.lang.Thread: void interrupt()>();

        $r11 = new java.lang.IllegalStateException;

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Interrupted wait during start");

        throw $r11;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }

    private void startBroadcastObservers()
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.BroadcastQueue[] r1;
        int i0, i1;
        android.content.Context $r2;
        com.android.server.am.BroadcastQueue $r3;
        android.content.ContentResolver $r4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastQueue[] mBroadcastQueues>;

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r3 = r1[i1];

        $r2 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r4 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        virtualinvoke $r3.<com.android.server.am.BroadcastQueue: void start(android.content.ContentResolver)>($r4);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    private void startHeapDumpLocked(com.android.server.am.ProcessRecord, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        boolean z0;
        int i0, $i1;
        android.content.Context r1, $r5;
        java.lang.String $r2, $r3;
        android.net.Uri $r4, $r9;
        android.os.UserHandle $r6;
        android.os.Handler $r7;
        com.android.server.am.ActivityManagerService$RecordPssRunnable $r8;
        android.content.ContentResolver $r10;
        android.content.pm.PackageManager$NameNotFoundException $r11;
        java.lang.RuntimeException $r12;
        com.android.server.am.ProcessRecord r13;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r13 := @parameter0: com.android.server.am.ProcessRecord;

        z0 := @parameter1: boolean;

        $r2 = r13.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        r0.<com.android.server.am.ActivityManagerService: java.lang.String mMemWatchDumpProcName> = $r2;

        $r3 = r13.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r4 = staticinvoke <com.android.server.am.ActivityManagerService: android.net.Uri makeHeapDumpUri(java.lang.String)>($r3);

        r0.<com.android.server.am.ActivityManagerService: android.net.Uri mMemWatchDumpUri> = $r4;

        $i1 = r13.<com.android.server.am.ProcessRecord: int pid>;

        r0.<com.android.server.am.ActivityManagerService: int mMemWatchDumpPid> = $i1;

        i0 = r13.<com.android.server.am.ProcessRecord: int uid>;

        r0.<com.android.server.am.ActivityManagerService: int mMemWatchDumpUid> = i0;

        r0.<com.android.server.am.ActivityManagerService: boolean mMemWatchIsUserInitiated> = z0;

     label1:
        $r5 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r6 = staticinvoke <android.os.UserHandle: android.os.UserHandle getUserHandleForUid(int)>(i0);

        r1 = virtualinvoke $r5.<android.content.Context: android.content.Context createPackageContextAsUser(java.lang.String,int,android.os.UserHandle)>("android", 0, $r6);

     label2:
        $r7 = staticinvoke <com.android.internal.os.BackgroundThread: android.os.Handler getHandler()>();

        $r8 = new com.android.server.am.ActivityManagerService$RecordPssRunnable;

        $r9 = r0.<com.android.server.am.ActivityManagerService: android.net.Uri mMemWatchDumpUri>;

        $r10 = virtualinvoke r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        specialinvoke $r8.<com.android.server.am.ActivityManagerService$RecordPssRunnable: void <init>(com.android.server.am.ActivityManagerService,com.android.server.am.ProcessRecord,android.net.Uri,android.content.ContentResolver)>(r0, r13, $r9, $r10);

        virtualinvoke $r7.<android.os.Handler: boolean post(java.lang.Runnable)>($r8);

        return;

     label3:
        $r11 := @caughtexception;

        $r12 = new java.lang.RuntimeException;

        specialinvoke $r12.<java.lang.RuntimeException: void <init>(java.lang.String)>("android package not found.");

        throw $r12;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label3;
    }

    private void stopProfilerLocked(com.android.server.am.ProcessRecord, int)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ActivityManagerService$ProfileData $r1, $r3;
        android.app.IApplicationThread $r2;
        com.android.server.am.ProcessRecord $r4, r7, r8;
        android.os.RemoteException $r5;
        java.lang.IllegalStateException $r6;
        int i0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r7 := @parameter0: com.android.server.am.ProcessRecord;

        i0 := @parameter1: int;

        if r7 == null goto label1;

        r8 = r7;

        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$ProfileData mProfileData>;

        $r4 = virtualinvoke $r3.<com.android.server.am.ActivityManagerService$ProfileData: com.android.server.am.ProcessRecord getProfileProc()>();

        if r7 != $r4 goto label2;

     label1:
        $r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$ProfileData mProfileData>;

        r8 = virtualinvoke $r1.<com.android.server.am.ActivityManagerService$ProfileData: com.android.server.am.ProcessRecord getProfileProc()>();

        i0 = r0.<com.android.server.am.ActivityManagerService: int mProfileType>;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void clearProfilerLocked()>();

     label2:
        if r8 != null goto label3;

        return;

     label3:
        $r2 = r8.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        interfaceinvoke $r2.<android.app.IApplicationThread: void profilerControl(boolean,android.app.ProfilerInfo,int)>(0, null, i0);

     label4:
        return;

     label5:
        $r5 := @caughtexception;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Process disappeared");

        throw $r6;

        catch android.os.RemoteException from label3 to label4 with label5;
    }

    private static java.lang.String stringifyKBSize(long)
    {
        long l0, $l1;
        java.lang.String $r0;

        l0 := @parameter0: long;

        $l1 = 1024L * l0;

        $r0 = staticinvoke <com.android.server.am.ActivityManagerService: java.lang.String stringifySize(long,int)>($l1, 1024);

        return $r0;
    }

    private static java.lang.String stringifySize(long, int)
    {
        long l0, $l2, $l3, $l4, $l5, $l6, $l7;
        int i1;
        java.util.Locale r0;
        java.lang.Object[] $r1, $r4, $r7, $r11;
        java.lang.Long $r2, $r5, $r8, $r12;
        java.lang.String $r3, $r6, $r9, $r13;
        java.lang.IllegalArgumentException $r10;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        r0 = <java.util.Locale: java.util.Locale US>;

        if i1 == 1 goto label4;

        if i1 == 1024 goto label3;

        if i1 == 1048576 goto label2;

        if i1 != 1073741824 goto label1;

        $r11 = newarray (java.lang.Object)[1];

        $l5 = l0 / 1024L;

        $l6 = $l5 / 1024L;

        $l7 = $l6 / 1024L;

        $r12 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l7);

        $r11[0] = $r12;

        $r13 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(r0, "%,1dG", $r11);

        return $r13;

     label1:
        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid size order");

        throw $r10;

     label2:
        $r7 = newarray (java.lang.Object)[1];

        $l3 = l0 / 1024L;

        $l4 = $l3 / 1024L;

        $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l4);

        $r7[0] = $r8;

        $r9 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(r0, "%,5dM", $r7);

        return $r9;

     label3:
        $r4 = newarray (java.lang.Object)[1];

        $l2 = l0 / 1024L;

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r4[0] = $r5;

        $r6 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(r0, "%,9dK", $r4);

        return $r6;

     label4:
        $r1 = newarray (java.lang.Object)[1];

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r1[0] = $r2;

        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(r0, "%,13d", $r1);

        return $r3;
    }

    private boolean uidOnBackgroundWhitelist(int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, $i2, i3, i4;
        int[] r1;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i3 := @parameter0: int;

        i0 = staticinvoke <android.os.UserHandle: int getAppId(int)>(i3);

        r1 = r0.<com.android.server.am.ActivityManagerService: int[] mBackgroundAppIdWhitelist>;

        i1 = lengthof r1;

        i4 = 0;

     label1:
        if i4 >= i1 goto label3;

        $i2 = r1[i4];

        if i0 != $i2 goto label2;

        return 1;

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        return 0;
    }

    private void updateAssociationForApp(android.content.pm.ApplicationInfo)
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.pm.ApplicationInfo r1;
        com.android.server.am.ActivityManagerService$PackageAssociationInfo r2;
        java.lang.String $r3;
        android.util.ArrayMap $r4;
        java.lang.Object $r5;
        int $i0, $i1;
        boolean z0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.content.pm.ApplicationInfo;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void ensureAllowedAssociations()>();

        $r4 = r0.<com.android.server.am.ActivityManagerService: android.util.ArrayMap mAllowedAssociations>;

        $r3 = r1.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r5 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r3);

        r2 = (com.android.server.am.ActivityManagerService$PackageAssociationInfo) $r5;

        if r2 == null goto label3;

        $i0 = r1.<android.content.pm.ApplicationInfo: int flags>;

        $i1 = $i0 & 2;

        if $i1 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        virtualinvoke r2.<com.android.server.am.ActivityManagerService$PackageAssociationInfo: void setDebuggable(boolean)>(z0);

     label3:
        return;
    }

    private void updateForceBackgroundCheck(boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        boolean z0, $z1;
        com.android.server.am.ProcessList $r2;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        z0 := @parameter0: boolean;

        entermonitor r0;

     label1:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $z1 = r0.<com.android.server.am.ActivityManagerService: boolean mForceBackgroundCheck>;

        if $z1 == z0 goto label4;

        r0.<com.android.server.am.ActivityManagerService: boolean mForceBackgroundCheck> = z0;

     label2:
        if z0 == 0 goto label4;

     label3:
        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        virtualinvoke $r2.<com.android.server.am.ProcessList: void doStopUidForIdleUidsLocked()>();

     label4:
        exitmonitor r0;

     label5:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label6:
        $r3 := @caughtexception;

     label7:
        exitmonitor r0;

     label8:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    private void watchDeviceProvisioning(android.content.Context)
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.Context r1;
        boolean $z0;
        android.content.ContentResolver $r2;
        android.net.Uri $r3;
        com.android.server.am.ActivityManagerService$18 $r4;
        android.os.Handler $r5;
        android.os.Looper $r6;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.content.Context;

        $z0 = specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean isDeviceProvisioned(android.content.Context)>(r1);

        if $z0 == 0 goto label1;

        staticinvoke <android.os.SystemProperties: void set(java.lang.String,java.lang.String)>("persist.sys.device_provisioned", "1");

        goto label2;

     label1:
        $r2 = virtualinvoke r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r3 = staticinvoke <android.provider.Settings$Global: android.net.Uri getUriFor(java.lang.String)>("device_provisioned");

        $r4 = new com.android.server.am.ActivityManagerService$18;

        $r5 = new android.os.Handler;

        $r6 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        specialinvoke $r5.<android.os.Handler: void <init>(android.os.Looper)>($r6);

        specialinvoke $r4.<com.android.server.am.ActivityManagerService$18: void <init>(com.android.server.am.ActivityManagerService,android.os.Handler,android.content.Context)>(r0, $r5, r1);

        virtualinvoke $r2.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver)>($r3, 0, $r4);

     label2:
        return;
    }

    private static final boolean writeProcessOomListToProto(android.util.proto.ProtoOutputStream, long, com.android.server.am.ActivityManagerService, java.util.List, boolean, java.lang.String)
    {
        android.util.proto.ProtoOutputStream r0;
        long l0, l1, l2, l4, l5, l6, l7, $l23, $l24, $l25, $l26, $l27, $l28, $l30, $l32, $l33, $l34;
        com.android.server.am.ActivityManagerService r1;
        java.util.List r2;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        com.android.server.am.ProcessRecord r3, $r24;
        java.lang.String r4, $r16, $r18, $r20, $r22, $r26, r30, $r32;
        int i3, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i29, i35, $i37, $i38, $i39;
        java.lang.Object $r5, $r7, $r8, $r10, $r12, $r13, $r14, $r21, $r23, $r25, $r27, $r29, $r33, $r34;
        android.util.Pair $r6, $r9;
        java.lang.Integer $r11;
        java.lang.StringBuilder $r15, $r17, $r19;
        byte $b31, b36;
        double $d0, $d1, $d2, $d3;
        android.content.ComponentName $r28;
        java.util.ArrayList r31;

        r0 := @parameter0: android.util.proto.ProtoOutputStream;

        l0 := @parameter1: long;

        r1 := @parameter2: com.android.server.am.ActivityManagerService;

        r2 := @parameter3: java.util.List;

        z0 := @parameter4: boolean;

        r30 := @parameter5: java.lang.String;

        r31 = staticinvoke <com.android.server.am.ActivityManagerService: java.util.ArrayList sortProcessOomList(java.util.List,java.lang.String)>(r2, r30);

        $z1 = virtualinvoke r31.<java.util.ArrayList: boolean isEmpty()>();

        if $z1 == 0 goto label01;

        return 0;

     label01:
        l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $i8 = virtualinvoke r31.<java.util.ArrayList: int size()>();

        i35 = $i8 - 1;

     label02:
        if i35 < 0 goto label19;

        $r5 = virtualinvoke r31.<java.util.ArrayList: java.lang.Object get(int)>(i35);

        $r6 = (android.util.Pair) $r5;

        $r7 = $r6.<android.util.Pair: java.lang.Object first>;

        r3 = (com.android.server.am.ProcessRecord) $r7;

        l2 = virtualinvoke r0.<android.util.proto.ProtoOutputStream: long start(long)>(l0);

        $i9 = r3.<com.android.server.am.ProcessRecord: int setAdj>;

        r4 = staticinvoke <com.android.server.am.ProcessList: java.lang.String makeOomAdjString(int,boolean)>($i9, 1);

        $z2 = virtualinvoke r3.<com.android.server.am.ProcessRecord: boolean isPersistent()>();

        virtualinvoke r0.<android.util.proto.ProtoOutputStream: void write(long,boolean)>(1133871366145L, $z2);

        $i10 = interfaceinvoke r2.<java.util.List: int size()>();

        $i11 = $i10 - 1;

        $r8 = virtualinvoke r31.<java.util.ArrayList: java.lang.Object get(int)>(i35);

        $r9 = (android.util.Pair) $r8;

        $r10 = $r9.<android.util.Pair: java.lang.Object second>;

        $r11 = (java.lang.Integer) $r10;

        $i12 = virtualinvoke $r11.<java.lang.Integer: int intValue()>();

        $i13 = $i11 - $i12;

        virtualinvoke r0.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464258L, $i13);

        virtualinvoke r0.<android.util.proto.ProtoOutputStream: void write(long,java.lang.String)>(1138166333443L, r4);

        b36 = -1;

        i3 = r3.<com.android.server.am.ProcessRecord: int setSchedGroup>;

        if i3 == 0 goto label06;

        if i3 == 2 goto label05;

        if i3 == 3 goto label04;

        if i3 == 4 goto label03;

        goto label07;

     label03:
        b36 = 3;

        goto label07;

     label04:
        b36 = 2;

        goto label07;

     label05:
        b36 = 1;

        goto label07;

     label06:
        b36 = 0;

     label07:
        if b36 == -1 goto label08;

        virtualinvoke r0.<android.util.proto.ProtoOutputStream: void write(long,int)>(1159641169924L, b36);

     label08:
        $z3 = virtualinvoke r3.<com.android.server.am.ProcessRecord: boolean hasForegroundActivities()>();

        if $z3 == 0 goto label09;

        virtualinvoke r0.<android.util.proto.ProtoOutputStream: void write(long,boolean)>(1133871366149L, 1);

        goto label10;

     label09:
        $z4 = virtualinvoke r3.<com.android.server.am.ProcessRecord: boolean hasForegroundServices()>();

        if $z4 == 0 goto label10;

        virtualinvoke r0.<android.util.proto.ProtoOutputStream: void write(long,boolean)>(1133871366150L, 1);

     label10:
        $i37 = virtualinvoke r3.<com.android.server.am.ProcessRecord: int getCurProcState()>();

        $i38 = staticinvoke <com.android.server.am.ProcessList: int makeProcStateProtoEnum(int)>($i37);

        virtualinvoke r0.<android.util.proto.ProtoOutputStream: void write(long,int)>(1159641169927L, $i38);

        $i39 = r3.<com.android.server.am.ProcessRecord: int trimMemoryLevel>;

        virtualinvoke r0.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464264L, $i39);

        virtualinvoke r3.<com.android.server.am.ProcessRecord: void dumpDebug(android.util.proto.ProtoOutputStream,long)>(r0, 1146756268041L);

        $r32 = r3.<com.android.server.am.ProcessRecord: java.lang.String adjType>;

        virtualinvoke r0.<android.util.proto.ProtoOutputStream: void write(long,java.lang.String)>(1138166333450L, $r32);

        $r33 = r3.<com.android.server.am.ProcessRecord: java.lang.Object adjSource>;

        if $r33 != null goto label11;

        $r29 = r3.<com.android.server.am.ProcessRecord: java.lang.Object adjTarget>;

        if $r29 == null goto label15;

     label11:
        $r12 = r3.<com.android.server.am.ProcessRecord: java.lang.Object adjTarget>;

        $z5 = $r12 instanceof android.content.ComponentName;

        if $z5 == 0 goto label12;

        $r27 = r3.<com.android.server.am.ProcessRecord: java.lang.Object adjTarget>;

        $r28 = (android.content.ComponentName) $r27;

        virtualinvoke $r28.<android.content.ComponentName: void dumpDebug(android.util.proto.ProtoOutputStream,long)>(r0, 1146756268043L);

        goto label13;

     label12:
        $r13 = r3.<com.android.server.am.ProcessRecord: java.lang.Object adjTarget>;

        if $r13 == null goto label13;

        $r25 = r3.<com.android.server.am.ProcessRecord: java.lang.Object adjTarget>;

        $r26 = virtualinvoke $r25.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke r0.<android.util.proto.ProtoOutputStream: void write(long,java.lang.String)>(1138166333452L, $r26);

        goto label13;

     label13:
        $r34 = r3.<com.android.server.am.ProcessRecord: java.lang.Object adjSource>;

        $z9 = $r34 instanceof com.android.server.am.ProcessRecord;

        if $z9 == 0 goto label14;

        $r23 = r3.<com.android.server.am.ProcessRecord: java.lang.Object adjSource>;

        $r24 = (com.android.server.am.ProcessRecord) $r23;

        virtualinvoke $r24.<com.android.server.am.ProcessRecord: void dumpDebug(android.util.proto.ProtoOutputStream,long)>(r0, 1146756268045L);

        goto label15;

     label14:
        $r14 = r3.<com.android.server.am.ProcessRecord: java.lang.Object adjSource>;

        if $r14 == null goto label15;

        $r21 = r3.<com.android.server.am.ProcessRecord: java.lang.Object adjSource>;

        $r22 = virtualinvoke $r21.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke r0.<android.util.proto.ProtoOutputStream: void write(long,java.lang.String)>(1138166333454L, $r22);

        goto label15;

     label15:
        if z0 == 0 goto label18;

        l4 = virtualinvoke r0.<android.util.proto.ProtoOutputStream: long start(long)>(1146756268047L);

        $i14 = r3.<com.android.server.am.ProcessRecord: int maxAdj>;

        virtualinvoke r0.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464257L, $i14);

        $i15 = virtualinvoke r3.<com.android.server.am.ProcessRecord: int getCurRawAdj()>();

        virtualinvoke r0.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464258L, $i15);

        $i16 = r3.<com.android.server.am.ProcessRecord: int setRawAdj>;

        virtualinvoke r0.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464259L, $i16);

        $i17 = r3.<com.android.server.am.ProcessRecord: int curAdj>;

        virtualinvoke r0.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464260L, $i17);

        $i18 = r3.<com.android.server.am.ProcessRecord: int setAdj>;

        virtualinvoke r0.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464261L, $i18);

        $i19 = virtualinvoke r3.<com.android.server.am.ProcessRecord: int getCurProcState()>();

        $i20 = staticinvoke <com.android.server.am.ProcessList: int makeProcStateProtoEnum(int)>($i19);

        virtualinvoke r0.<android.util.proto.ProtoOutputStream: void write(long,int)>(1159641169927L, $i20);

        $i21 = r3.<com.android.server.am.ProcessRecord: int setProcState>;

        $i22 = staticinvoke <com.android.server.am.ProcessList: int makeProcStateProtoEnum(int)>($i21);

        virtualinvoke r0.<android.util.proto.ProtoOutputStream: void write(long,int)>(1159641169928L, $i22);

        $l23 = r3.<com.android.server.am.ProcessRecord: long lastPss>;

        $l24 = $l23 * 1024L;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = staticinvoke <android.util.DebugUtils: java.lang.String sizeValueToString(long,java.lang.StringBuilder)>($l24, $r15);

        virtualinvoke r0.<android.util.proto.ProtoOutputStream: void write(long,java.lang.String)>(1138166333449L, $r16);

        $l25 = r3.<com.android.server.am.ProcessRecord: long lastSwapPss>;

        $l26 = $l25 * 1024L;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = staticinvoke <android.util.DebugUtils: java.lang.String sizeValueToString(long,java.lang.StringBuilder)>($l26, $r17);

        virtualinvoke r0.<android.util.proto.ProtoOutputStream: void write(long,java.lang.String)>(1138166333450L, $r18);

        $l27 = r3.<com.android.server.am.ProcessRecord: long lastCachedPss>;

        $l28 = $l27 * 1024L;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = staticinvoke <android.util.DebugUtils: java.lang.String sizeValueToString(long,java.lang.StringBuilder)>($l28, $r19);

        virtualinvoke r0.<android.util.proto.ProtoOutputStream: void write(long,java.lang.String)>(1138166333451L, $r20);

        $z6 = virtualinvoke r3.<com.android.server.am.ProcessRecord: boolean isCached()>();

        virtualinvoke r0.<android.util.proto.ProtoOutputStream: void write(long,boolean)>(1133871366156L, $z6);

        $z7 = r3.<com.android.server.am.ProcessRecord: boolean empty>;

        virtualinvoke r0.<android.util.proto.ProtoOutputStream: void write(long,boolean)>(1133871366157L, $z7);

        $z8 = r3.<com.android.server.am.ProcessRecord: boolean hasAboveClient>;

        virtualinvoke r0.<android.util.proto.ProtoOutputStream: void write(long,boolean)>(1133871366158L, $z8);

        $i29 = r3.<com.android.server.am.ProcessRecord: int setProcState>;

        if $i29 < 10 goto label17;

        $l30 = r3.<com.android.server.am.ProcessRecord: long lastCpuTime>;

        $b31 = $l30 cmp 0L;

        if $b31 == 0 goto label16;

        $l32 = r1.<com.android.server.am.ActivityManagerService: long mLastPowerCheckUptime>;

        l5 = l1 - $l32;

        $l34 = r3.<com.android.server.am.ProcessRecord: long curCpuTime>;

        $l33 = r3.<com.android.server.am.ProcessRecord: long lastCpuTime>;

        l6 = $l34 - $l33;

        l7 = virtualinvoke r0.<android.util.proto.ProtoOutputStream: long start(long)>(1146756268047L);

        virtualinvoke r0.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529665L, l5);

        virtualinvoke r0.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529666L, l6);

        $d0 = (double) l6;

        $d2 = $d0 * 100.0;

        $d1 = (double) l5;

        $d3 = $d2 / $d1;

        virtualinvoke r0.<android.util.proto.ProtoOutputStream: void write(long,double)>(1108101562371L, $d3);

        virtualinvoke r0.<android.util.proto.ProtoOutputStream: void end(long)>(l7);

        goto label17;

     label16:
        goto label17;

     label17:
        virtualinvoke r0.<android.util.proto.ProtoOutputStream: void end(long)>(l4);

        goto label18;

     label18:
        virtualinvoke r0.<android.util.proto.ProtoOutputStream: void end(long)>(l2);

        i35 = i35 + -1;

        goto label02;

     label19:
        return 1;
    }

    final com.android.server.am.ProcessRecord addAppLocked(android.content.pm.ApplicationInfo, java.lang.String, boolean, java.lang.String, int)
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.pm.ApplicationInfo r1;
        java.lang.String r2, r3;
        boolean z0;
        int i0;
        com.android.server.am.ProcessRecord $r4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.content.pm.ApplicationInfo;

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        r3 := @parameter3: java.lang.String;

        i0 := @parameter4: int;

        $r4 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord addAppLocked(android.content.pm.ApplicationInfo,java.lang.String,boolean,boolean,boolean,java.lang.String,int)>(r1, r2, z0, 0, 0, r3, i0);

        return $r4;
    }

    final com.android.server.am.ProcessRecord addAppLocked(android.content.pm.ApplicationInfo, java.lang.String, boolean, boolean, boolean, java.lang.String, int)
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.pm.ApplicationInfo r1;
        java.lang.String r2, r3;
        boolean z0, z1, z2;
        int i0;
        com.android.server.am.ProcessRecord $r4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.content.pm.ApplicationInfo;

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        z2 := @parameter4: boolean;

        r3 := @parameter5: java.lang.String;

        i0 := @parameter6: int;

        $r4 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord addAppLocked(android.content.pm.ApplicationInfo,java.lang.String,boolean,boolean,boolean,boolean,java.lang.String,int)>(r1, r2, z0, z1, 0, z2, r3, i0);

        return $r4;
    }

    final com.android.server.am.ProcessRecord addAppLocked(android.content.pm.ApplicationInfo, java.lang.String, boolean, boolean, boolean, boolean, java.lang.String, int)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1, r2, $r5, $r15, $r19, r22, r25, r29;
        boolean z0, z1, z2, z3;
        int i0, $i1, $i2, $i3, $i4, $i6, $i7;
        android.content.pm.IPackageManager $r4;
        android.app.IApplicationThread $r6;
        java.util.ArrayList $r7, $r8;
        com.android.server.am.HostingRecord $r9, $r10;
        com.android.server.am.ProcessList $r11, r24, r28;
        java.lang.Throwable $r12;
        java.lang.StringBuilder $r13;
        android.os.RemoteException $r20;
        android.content.pm.ApplicationInfo r21;
        com.android.server.am.ProcessRecord r23;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r21 := @parameter0: android.content.pm.ApplicationInfo;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        z2 := @parameter4: boolean;

        z3 := @parameter5: boolean;

        r2 := @parameter6: java.lang.String;

        i0 := @parameter7: int;

        if z0 != 0 goto label03;

        if r1 == null goto label01;

        r22 = r1;

        goto label02;

     label01:
        r22 = r21.<android.content.pm.ApplicationInfo: java.lang.String processName>;

     label02:
        $i4 = r21.<android.content.pm.ApplicationInfo: int uid>;

        r23 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord getProcessRecordLocked(java.lang.String,int,boolean)>(r22, $i4, 1);

        goto label04;

     label03:
        r23 = null;

     label04:
        if r23 != null goto label07;

        r24 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        if r1 == null goto label05;

        r25 = r1;

        goto label06;

     label05:
        r25 = r21.<android.content.pm.ApplicationInfo: java.lang.String processName>;

     label06:
        $r10 = new com.android.server.am.HostingRecord;

        specialinvoke $r10.<com.android.server.am.HostingRecord: void <init>(java.lang.String,java.lang.String)>("added application", r25);

        r23 = virtualinvoke r24.<com.android.server.am.ProcessList: com.android.server.am.ProcessRecord newProcessRecordLocked(android.content.pm.ApplicationInfo,java.lang.String,boolean,int,com.android.server.am.HostingRecord)>(r21, r1, z0, 0, $r10);

        $r11 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        virtualinvoke $r11.<com.android.server.am.ProcessList: void updateLruProcessLocked(com.android.server.am.ProcessRecord,boolean,com.android.server.am.ProcessRecord)>(r23, 0, null);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void updateOomAdjLocked(com.android.server.am.ProcessRecord,java.lang.String)>(r23, "updateOomAdj_processBegin");

        goto label07;

     label07:
        $r4 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        $r5 = r21.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $i1 = r23.<com.android.server.am.ProcessRecord: int uid>;

        $i2 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i1);

        interfaceinvoke $r4.<android.content.pm.IPackageManager: void setPackageStoppedState(java.lang.String,boolean,int)>($r5, 0, $i2);

     label08:
        goto label11;

     label09:
        $r12 := @caughtexception;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed trying to unstop package ");

        $r15 = r21.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r19 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r19);

        goto label11;

     label10:
        $r20 := @caughtexception;

     label11:
        $i6 = r21.<android.content.pm.ApplicationInfo: int flags>;

        $i7 = $i6 & 9;

        if $i7 != 9 goto label12;

        virtualinvoke r23.<com.android.server.am.ProcessRecord: void setPersistent(boolean)>(1);

        r23.<com.android.server.am.ProcessRecord: int maxAdj> = -800;

     label12:
        $r6 = r23.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r6 != null goto label15;

        $r7 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPersistentStartingProcesses>;

        $i3 = virtualinvoke $r7.<java.util.ArrayList: int indexOf(java.lang.Object)>(r23);

        if $i3 >= 0 goto label15;

        $r8 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPersistentStartingProcesses>;

        virtualinvoke $r8.<java.util.ArrayList: boolean add(java.lang.Object)>(r23);

        r28 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        if r1 == null goto label13;

        r29 = r1;

        goto label14;

     label13:
        r29 = r23.<com.android.server.am.ProcessRecord: java.lang.String processName>;

     label14:
        $r9 = new com.android.server.am.HostingRecord;

        specialinvoke $r9.<com.android.server.am.HostingRecord: void <init>(java.lang.String,java.lang.String)>("added application", r29);

        virtualinvoke r28.<com.android.server.am.ProcessList: boolean startProcessLocked(com.android.server.am.ProcessRecord,com.android.server.am.HostingRecord,int,boolean,boolean,boolean,java.lang.String)>(r23, $r9, i0, z1, z2, z3, r2);

     label15:
        return r23;

        catch android.os.RemoteException from label07 to label08 with label10;
        catch java.lang.IllegalArgumentException from label07 to label08 with label09;
    }

    final void addBackgroundCheckViolationLocked(java.lang.String, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1, r2;
        com.android.server.am.BroadcastStats $r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void rotateBroadcastStatsIfNeededLocked()>();

        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastStats mCurBroadcastStats>;

        virtualinvoke $r3.<com.android.server.am.BroadcastStats: void addBackgroundCheckViolation(java.lang.String,java.lang.String)>(r1, r2);

        return;
    }

    final void addBroadcastStatLocked(java.lang.String, java.lang.String, int, int, long)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1, r2;
        int i0, i1;
        long l2;
        com.android.server.am.BroadcastStats $r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        l2 := @parameter4: long;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void rotateBroadcastStatsIfNeededLocked()>();

        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastStats mCurBroadcastStats>;

        virtualinvoke $r3.<com.android.server.am.BroadcastStats: void addBroadcast(java.lang.String,java.lang.String,int,int,long)>(r1, r2, i0, i1, l2);

        return;
    }

    public void addErrorToDropBox(java.lang.String, com.android.server.am.ProcessRecord, java.lang.String, java.lang.String, java.lang.String, com.android.server.am.ProcessRecord, java.lang.String, java.lang.String, java.io.File, android.app.ApplicationErrorReport$CrashInfo)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1, r5;
        java.lang.String r2, r3, r4, r6, r7, r11, $r18, $r26, $r32, $r33, $r35, $r46, r64, r69, $r73;
        java.io.File r8;
        android.app.ApplicationErrorReport$CrashInfo r9;
        android.os.DropBoxManager r10;
        android.util.ArrayMap r12, $r22, $r58;
        long[] r13, r66;
        int i0, $i5, $i6;
        android.os.IBinder $r14;
        android.content.Context $r15;
        java.lang.Object $r16, $r23;
        java.lang.StringBuilder $r17, $r24, $r70;
        boolean $z0, $z1, $z2, $z3, $z4;
        long $l1, $l3, $l7, $l9, l10, l11, l12, l13, l14;
        byte $b2, $b4, $b8;
        java.lang.Throwable $r60, $r61, $r62, $r63, r67;
        com.android.server.am.ActivityManagerService$20 $r72;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r64 := @parameter0: java.lang.String;

        r1 := @parameter1: com.android.server.am.ProcessRecord;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String;

        r5 := @parameter5: com.android.server.am.ProcessRecord;

        r6 := @parameter6: java.lang.String;

        r7 := @parameter7: java.lang.String;

        r8 := @parameter8: java.io.File;

        r9 := @parameter9: android.app.ApplicationErrorReport$CrashInfo;

        $r14 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("dropbox");

        if $r14 != null goto label01;

        return;

     label01:
        $r15 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r16 = virtualinvoke $r15.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/os/DropBoxManager;");

        r10 = (android.os.DropBoxManager) $r16;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = staticinvoke <com.android.server.am.ActivityManagerService: java.lang.String processClass(com.android.server.am.ProcessRecord)>(r1);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_");

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r64);

        r11 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        if r10 == null goto label32;

        $z0 = virtualinvoke r10.<android.os.DropBoxManager: boolean isTagEnabled(java.lang.String)>(r11);

        if $z0 != 0 goto label02;

        goto label32;

     label02:
        l10 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        r12 = r0.<com.android.server.am.ActivityManagerService: android.util.ArrayMap mErrorClusterRecords>;

        entermonitor r12;

     label03:
        $r22 = r0.<com.android.server.am.ActivityManagerService: android.util.ArrayMap mErrorClusterRecords>;

        $r23 = virtualinvoke $r22.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r64);

        r13 = (long[]) $r23;

     label04:
        r66 = r13;

        if r13 != null goto label08;

     label05:
        r66 = newarray (long)[2];

        $r58 = r0.<com.android.server.am.ActivityManagerService: android.util.ArrayMap mErrorClusterRecords>;

        virtualinvoke $r58.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r64, r66);

     label06:
        goto label08;

     label07:
        $r63 := @caughtexception;

        r67 = $r63;

        goto label29;

     label08:
        l11 = r66[0];

        $l1 = l10 - l11;

        $b2 = $l1 cmp 10000L;

        if $b2 <= 0 goto label09;

        r66[0] = l10;

        r66[1] = 1L;

        goto label12;

     label09:
        l12 = r66[1];

        $l3 = 1L + l12;

        r66[1] = $l3;

        $b4 = l12 cmp 5L;

        if $b4 < 0 goto label12;

     label10:
        exitmonitor r12;

     label11:
        return;

     label12:
        exitmonitor r12;

     label13:
        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>(int)>(1024);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void appendDropBoxProcessHeaders(com.android.server.am.ProcessRecord,java.lang.String,java.lang.StringBuilder)>(r1, r2, $r24);

        if r1 == null goto label16;

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Foreground: ");

        $z3 = virtualinvoke r1.<com.android.server.am.ProcessRecord: boolean isInterestingToUserLocked()>();

        if $z3 == 0 goto label14;

        r69 = "Yes";

        goto label15;

     label14:
        r69 = "No";

     label15:
        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r69);

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $l7 = r1.<com.android.server.am.ProcessRecord: long startTime>;

        $b8 = $l7 cmp 0L;

        if $b8 <= 0 goto label16;

        l13 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l14 = r1.<com.android.server.am.ProcessRecord: long startTime>;

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Process-Runtime: ");

        $l9 = l13 - l14;

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l9);

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

     label16:
        if r3 == null goto label17;

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Activity: ");

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

     label17:
        if r4 == null goto label19;

        if r5 == null goto label18;

        $i6 = r5.<com.android.server.am.ProcessRecord: int pid>;

        $i5 = r1.<com.android.server.am.ProcessRecord: int pid>;

        if $i6 == $i5 goto label18;

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parent-Process: ");

        $r46 = r5.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r46);

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

     label18:
        $z4 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z4 != 0 goto label19;

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parent-Activity: ");

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

     label19:
        if r6 == null goto label20;

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Subject: ");

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

     label20:
        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Build: ");

        $r26 = <android.os.Build: java.lang.String FINGERPRINT>;

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $z1 = staticinvoke <android.os.Debug: boolean isDebuggerConnected()>();

        if $z1 == 0 goto label21;

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Debugger: Connected\n");

     label21:
        if r9 == null goto label22;

        $r32 = r9.<android.app.ApplicationErrorReport$CrashInfo: java.lang.String crashTag>;

        if $r32 == null goto label22;

        $r33 = r9.<android.app.ApplicationErrorReport$CrashInfo: java.lang.String crashTag>;

        $z2 = virtualinvoke $r33.<java.lang.String: boolean isEmpty()>();

        if $z2 != 0 goto label22;

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Crash-Tag: ");

        $r35 = r9.<android.app.ApplicationErrorReport$CrashInfo: java.lang.String crashTag>;

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

     label22:
        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r70 = new java.lang.StringBuilder;

        specialinvoke $r70.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error dump: ");

        virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);

        $r72 = new com.android.server.am.ActivityManagerService$20;

        $r73 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r72.<com.android.server.am.ActivityManagerService$20: void <init>(com.android.server.am.ActivityManagerService,java.lang.String,java.lang.String,java.lang.StringBuilder,java.lang.String,java.io.File,android.app.ApplicationErrorReport$CrashInfo,android.os.DropBoxManager)>(r0, $r73, r7, $r24, r11, r8, r9, r10);

        if r1 != null goto label26;

        i0 = staticinvoke <android.os.StrictMode: int allowThreadDiskWritesMask()>();

     label23:
        virtualinvoke $r72.<java.lang.Thread: void run()>();

     label24:
        staticinvoke <android.os.StrictMode: void setThreadPolicyMask(int)>(i0);

        goto label27;

     label25:
        $r61 := @caughtexception;

        staticinvoke <android.os.StrictMode: void setThreadPolicyMask(int)>(i0);

        throw $r61;

     label26:
        virtualinvoke $r72.<java.lang.Thread: void start()>();

     label27:
        return;

     label28:
        $r62 := @caughtexception;

        r67 = $r62;

     label29:
        exitmonitor r12;

     label30:
        throw r67;

     label31:
        $r60 := @caughtexception;

        r67 = $r60;

        goto label29;

     label32:
        return;

        catch java.lang.Throwable from label03 to label04 with label28;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label10 to label11 with label07;
        catch java.lang.Throwable from label12 to label13 with label28;
        catch java.lang.Throwable from label23 to label24 with label25;
        catch java.lang.Throwable from label29 to label30 with label31;
    }

    public void addInstrumentationResults(android.app.IApplicationThread, android.os.Bundle)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1;
        long l0;
        java.lang.String $r4;
        boolean $z0;
        java.lang.IllegalArgumentException $r5;
        java.lang.Throwable $r6;
        android.app.IApplicationThread r7;
        android.os.Bundle r8;
        java.lang.StringBuilder r9;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r7 := @parameter0: android.app.IApplicationThread;

        r8 := @parameter1: android.os.Bundle;

        staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        if r8 == null goto label02;

        $z0 = virtualinvoke r8.<android.os.Bundle: boolean hasFileDescriptors()>();

        if $z0 != 0 goto label01;

        goto label02;

     label01:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("File descriptors passed in Intent");

        throw $r5;

     label02:
        entermonitor r0;

     label03:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        r1 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord getRecordForAppLocked(android.app.IApplicationThread)>(r7);

     label04:
        if r1 != null goto label07;

     label05:
        r9 = new java.lang.StringBuilder;

        specialinvoke r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("addInstrumentationResults: no app for ");

        virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);

        $r4 = virtualinvoke r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r4);

        exitmonitor r0;

     label06:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label07:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void addInstrumentationResultsLocked(com.android.server.am.ProcessRecord,android.os.Bundle)>(r1, r8);

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        exitmonitor r0;

     label08:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label09:
        $r6 := @caughtexception;

     label10:
        exitmonitor r0;

     label11:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r6;

        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    void addInstrumentationResultsLocked(com.android.server.am.ProcessRecord, android.os.Bundle)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1;
        com.android.server.am.ActiveInstrumentation r2;
        boolean $z0;
        android.os.Bundle $r3, $r4, $r5, r10;
        java.lang.StringBuilder $r6;
        java.lang.String $r9;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        r10 := @parameter1: android.os.Bundle;

        r2 = virtualinvoke r1.<com.android.server.am.ProcessRecord: com.android.server.am.ActiveInstrumentation getActiveInstrumentation()>();

        if r2 != null goto label1;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("finishInstrumentation called on non-instrumented: ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r9);

        return;

     label1:
        $z0 = r2.<com.android.server.am.ActiveInstrumentation: boolean mFinished>;

        if $z0 != 0 goto label3;

        if r10 == null goto label3;

        $r3 = r2.<com.android.server.am.ActiveInstrumentation: android.os.Bundle mCurResults>;

        if $r3 != null goto label2;

        $r5 = new android.os.Bundle;

        specialinvoke $r5.<android.os.Bundle: void <init>(android.os.Bundle)>(r10);

        r2.<com.android.server.am.ActiveInstrumentation: android.os.Bundle mCurResults> = $r5;

        goto label3;

     label2:
        $r4 = r2.<com.android.server.am.ActiveInstrumentation: android.os.Bundle mCurResults>;

        virtualinvoke $r4.<android.os.Bundle: void putAll(android.os.Bundle)>(r10);

     label3:
        return;
    }

    public void addPackageDependency(java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1;
        int $i0, $i1, $i2;
        com.android.server.am.ActivityManagerService$PidMap $r2, r8;
        android.util.ArraySet $r3, $r4, r9;
        java.lang.Throwable $r5, $r6;
        java.lang.String r7;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r7 := @parameter0: java.lang.String;

        entermonitor r0;

     label01:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i1 = staticinvoke <android.os.Process: int myPid()>();

        if $i0 != $i1 goto label03;

        exitmonitor r0;

     label02:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label03:
        r8 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        entermonitor r8;

     label04:
        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        $i2 = staticinvoke <android.os.Binder: int getCallingPid()>();

        r1 = virtualinvoke $r2.<com.android.server.am.ActivityManagerService$PidMap: com.android.server.am.ProcessRecord get(int)>($i2);

        exitmonitor r8;

     label05:
        if r1 == null goto label08;

     label06:
        $r3 = r1.<com.android.server.am.ProcessRecord: android.util.ArraySet pkgDeps>;

        if $r3 != null goto label07;

        r9 = new android.util.ArraySet;

        specialinvoke r9.<android.util.ArraySet: void <init>(int)>(1);

        r1.<com.android.server.am.ProcessRecord: android.util.ArraySet pkgDeps> = r9;

     label07:
        $r4 = r1.<com.android.server.am.ProcessRecord: android.util.ArraySet pkgDeps>;

        virtualinvoke $r4.<android.util.ArraySet: boolean add(java.lang.Object)>(r7);

     label08:
        exitmonitor r0;

     label09:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label10:
        $r5 := @caughtexception;

     label11:
        exitmonitor r8;

     label12:
        throw $r5;

     label13:
        $r6 := @caughtexception;

     label14:
        exitmonitor r0;

     label15:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label11 to label12 with label10;
        catch java.lang.Throwable from label12 to label13 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
    }

    void addPidLocked(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ActivityManagerService$PidMap $r1, r11;
        android.content.pm.ProcessInfo $r2, $r6;
        int $i0, $i1, $i2;
        android.util.SparseArray $r3, $r7, r12;
        com.android.server.wm.ActivityTaskManagerInternal $r4;
        com.android.server.wm.WindowProcessController $r5;
        java.lang.Throwable $r8, $r9;
        com.android.server.am.ProcessRecord r10;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r10 := @parameter0: com.android.server.am.ProcessRecord;

        r11 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        entermonitor r11;

     label01:
        $r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        virtualinvoke $r1.<com.android.server.am.ActivityManagerService$PidMap: void doAddInternal(com.android.server.am.ProcessRecord)>(r10);

        exitmonitor r11;

     label02:
        r12 = <com.android.server.am.ActivityManagerService: android.util.SparseArray sActiveProcessInfoSelfLocked>;

        entermonitor r12;

     label03:
        $r2 = r10.<com.android.server.am.ProcessRecord: android.content.pm.ProcessInfo processInfo>;

        if $r2 == null goto label05;

        $r7 = <com.android.server.am.ActivityManagerService: android.util.SparseArray sActiveProcessInfoSelfLocked>;

        $i2 = r10.<com.android.server.am.ProcessRecord: int pid>;

        $r6 = r10.<com.android.server.am.ProcessRecord: android.content.pm.ProcessInfo processInfo>;

        virtualinvoke $r7.<android.util.SparseArray: void put(int,java.lang.Object)>($i2, $r6);

     label04:
        goto label06;

     label05:
        $r3 = <com.android.server.am.ActivityManagerService: android.util.SparseArray sActiveProcessInfoSelfLocked>;

        $i0 = r10.<com.android.server.am.ProcessRecord: int pid>;

        virtualinvoke $r3.<android.util.SparseArray: void remove(int)>($i0);

     label06:
        exitmonitor r12;

     label07:
        $r4 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerInternal mAtmInternal>;

        $i1 = r10.<com.android.server.am.ProcessRecord: int pid>;

        $r5 = virtualinvoke r10.<com.android.server.am.ProcessRecord: com.android.server.wm.WindowProcessController getWindowProcessController()>();

        virtualinvoke $r4.<com.android.server.wm.ActivityTaskManagerInternal: void onProcessMapped(int,com.android.server.wm.WindowProcessController)>($i1, $r5);

        return;

     label08:
        $r8 := @caughtexception;

     label09:
        exitmonitor r12;

     label10:
        throw $r8;

     label11:
        $r9 := @caughtexception;

     label12:
        exitmonitor r11;

     label13:
        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    final void addProcessToGcListLocked(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1, $r6;
        java.util.ArrayList $r2, $r3, $r4, $r7;
        int $i0, $i4, i5;
        java.lang.Object $r5;
        long $l1, $l2;
        byte $b3;
        boolean z1;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        $r2 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesToGc>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i5 = $i0 - 1;

     label1:
        z1 = 0;

        if i5 < 0 goto label3;

        $r4 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesToGc>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        $r6 = (com.android.server.am.ProcessRecord) $r5;

        $l2 = $r6.<com.android.server.am.ProcessRecord: long lastRequestedGc>;

        $l1 = r1.<com.android.server.am.ProcessRecord: long lastRequestedGc>;

        $b3 = $l2 cmp $l1;

        if $b3 >= 0 goto label2;

        z1 = 1;

        $r7 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesToGc>;

        $i4 = i5 + 1;

        virtualinvoke $r7.<java.util.ArrayList: void add(int,java.lang.Object)>($i4, r1);

        goto label3;

     label2:
        i5 = i5 + -1;

        goto label1;

     label3:
        if z1 != 0 goto label4;

        $r3 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesToGc>;

        virtualinvoke $r3.<java.util.ArrayList: void add(int,java.lang.Object)>(0, r1);

     label4:
        return;
    }

    final void appDiedLocked(com.android.server.am.ProcessRecord, int, android.app.IApplicationThread, boolean, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        boolean z0, $z1, $z2, z3, z4, $z5;
        java.lang.String r1, $r8, $r15, $r17, $r23, $r26, $r31, $r34, $r36, $r45;
        com.android.server.am.ProcessRecord r2, r48;
        com.android.server.am.ActivityManagerService$PidMap $r3, r50;
        com.android.server.am.BatteryStatsService $r4;
        android.content.pm.ApplicationInfo $r5, $r16, $r37;
        int $i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i17, $i18, $i19;
        long $l1;
        java.lang.StringBuilder $r6, $r24, r51;
        android.app.IApplicationThread $r18, $r19, r49;
        android.os.IBinder $r20, $r21;
        com.android.server.am.ActiveInstrumentation $r22;
        com.android.server.am.ProcessList $r38;
        java.lang.Throwable $r46, $r47;
        com.android.internal.os.BatteryStatsImpl r52;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r48 := @parameter0: com.android.server.am.ProcessRecord;

        i17 := @parameter1: int;

        r49 := @parameter2: android.app.IApplicationThread;

        z0 := @parameter3: boolean;

        r1 := @parameter4: java.lang.String;

        r50 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        entermonitor r50;

     label01:
        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        r2 = virtualinvoke $r3.<com.android.server.am.ActivityManagerService$PidMap: com.android.server.am.ProcessRecord get(int)>(i17);

     label02:
        if r2 == r48 goto label05;

     label03:
        r51 = new java.lang.StringBuilder;

        specialinvoke r51.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Spurious death for ");

        virtualinvoke r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r48);

        virtualinvoke r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", curProc for ");

        virtualinvoke r51.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i17);

        virtualinvoke r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        virtualinvoke r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r45 = virtualinvoke r51.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r45);

        exitmonitor r50;

     label04:
        return;

     label05:
        exitmonitor r50;

     label06:
        $r4 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        r52 = virtualinvoke $r4.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl getActiveStatistics()>();

        entermonitor r52;

     label07:
        $r5 = r48.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i0 = $r5.<android.content.pm.ApplicationInfo: int uid>;

        virtualinvoke r52.<com.android.internal.os.BatteryStatsImpl: void noteProcessDiedLocked(int,int)>($i0, i17);

        exitmonitor r52;

     label08:
        $z1 = r48.<com.android.server.am.ProcessRecord: boolean killed>;

        if $z1 != 0 goto label10;

        if z0 != 0 goto label09;

        staticinvoke <android.os.Process: void killProcessQuiet(int)>(i17);

        $r38 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        virtualinvoke $r38.<com.android.server.am.ProcessList: void noteAppKill(com.android.server.am.ProcessRecord,int,int,java.lang.String)>(r48, 13, 0, r1);

     label09:
        $i15 = r48.<com.android.server.am.ProcessRecord: int uid>;

        staticinvoke <com.android.server.am.ProcessList: void killProcessGroup(int,int)>($i15, i17);

        r48.<com.android.server.am.ProcessRecord: boolean killed> = 1;

     label10:
        $i18 = r48.<com.android.server.am.ProcessRecord: int pid>;

        if $i18 != i17 goto label16;

        $r18 = r48.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r18 == null goto label16;

        $r19 = r48.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r20 = interfaceinvoke $r19.<android.app.IApplicationThread: android.os.IBinder asBinder()>();

        $r21 = interfaceinvoke r49.<android.app.IApplicationThread: android.os.IBinder asBinder()>();

        if $r20 != $r21 goto label16;

        $r22 = virtualinvoke r48.<com.android.server.am.ProcessRecord: com.android.server.am.ActiveInstrumentation getActiveInstrumentation()>();

        if $r22 != null goto label11;

        z3 = 1;

        goto label12;

     label11:
        z3 = 0;

     label12:
        $z2 = r48.<com.android.server.am.ProcessRecord: boolean killedByAm>;

        if $z2 != 0 goto label13;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Process ");

        $r26 = r48.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (pid ");

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i17);

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") has died: ");

        $i12 = r48.<com.android.server.am.ProcessRecord: int setAdj>;

        $r31 = staticinvoke <com.android.server.am.ProcessList: java.lang.String makeOomAdjString(int,boolean)>($i12, 1);

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i13 = r48.<com.android.server.am.ProcessRecord: int setProcState>;

        $r34 = staticinvoke <com.android.server.am.ProcessList: java.lang.String makeProcStateString(int)>($i13);

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        $r36 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        $r37 = r48.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i14 = $r37.<android.content.pm.ApplicationInfo: int uid>;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void reportUidInfoMessageLocked(java.lang.String,java.lang.String,int)>("ActivityManager", $r36, $i14);

        r0.<com.android.server.am.ActivityManagerService: boolean mAllowLowerMemLevel> = 1;

        z4 = z3;

        goto label14;

     label13:
        r0.<com.android.server.am.ActivityManagerService: boolean mAllowLowerMemLevel> = 0;

        z4 = 0;

     label14:
        $i11 = r48.<com.android.server.am.ProcessRecord: int userId>;

        $i10 = r48.<com.android.server.am.ProcessRecord: int pid>;

        $r23 = r48.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $i9 = r48.<com.android.server.am.ProcessRecord: int setAdj>;

        $i8 = r48.<com.android.server.am.ProcessRecord: int setProcState>;

        staticinvoke <com.android.server.am.EventLogTags: void writeAmProcDied(int,int,java.lang.String,int,int)>($i11, $i10, $r23, $i9, $i8);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void handleAppDiedLocked(com.android.server.am.ProcessRecord,boolean,boolean)>(r48, 0, 1);

        if z3 == 0 goto label15;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void updateOomAdjLocked(java.lang.String)>("updateOomAdj_processEnd");

     label15:
        if z4 == 0 goto label17;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void doLowMemReportIfNeededLocked(com.android.server.am.ProcessRecord)>(r48);

        goto label17;

     label16:
        $i19 = r48.<com.android.server.am.ProcessRecord: int pid>;

        if $i19 == i17 goto label17;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Process ");

        $r8 = r48.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (pid ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i17);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") has died and restarted (pid ");

        $i2 = r48.<com.android.server.am.ProcessRecord: int pid>;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(").");

        $r15 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r16 = r48.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i3 = $r16.<android.content.pm.ApplicationInfo: int uid>;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void reportUidInfoMessageLocked(java.lang.String,java.lang.String,int)>("ActivityManager", $r15, $i3);

        $i7 = r48.<com.android.server.am.ProcessRecord: int userId>;

        $i6 = r48.<com.android.server.am.ProcessRecord: int pid>;

        $r17 = r48.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $i5 = r48.<com.android.server.am.ProcessRecord: int setAdj>;

        $i4 = r48.<com.android.server.am.ProcessRecord: int setProcState>;

        staticinvoke <com.android.server.am.EventLogTags: void writeAmProcDied(int,int,java.lang.String,int,int)>($i7, $i6, $r17, $i5, $i4);

        goto label17;

     label17:
        $z5 = staticinvoke <com.android.server.am.MemoryStatUtil: boolean hasMemcg()>();

        if $z5 != 0 goto label18;

        $l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,long)>(65, $l1);

     label18:
        return;

     label19:
        $r46 := @caughtexception;

     label20:
        exitmonitor r52;

     label21:
        throw $r46;

     label22:
        $r47 := @caughtexception;

     label23:
        exitmonitor r50;

     label24:
        throw $r47;

        catch java.lang.Throwable from label01 to label02 with label22;
        catch java.lang.Throwable from label03 to label04 with label22;
        catch java.lang.Throwable from label05 to label06 with label22;
        catch java.lang.Throwable from label07 to label08 with label19;
        catch java.lang.Throwable from label20 to label21 with label19;
        catch java.lang.Throwable from label23 to label24 with label22;
    }

    final void appDiedLocked(com.android.server.am.ProcessRecord, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1;
        java.lang.String r2;
        android.app.IApplicationThread $r3;
        int $i0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        r2 := @parameter1: java.lang.String;

        $i0 = r1.<com.android.server.am.ProcessRecord: int pid>;

        $r3 = r1.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void appDiedLocked(com.android.server.am.ProcessRecord,int,android.app.IApplicationThread,boolean,java.lang.String)>(r1, $i0, $r3, 0, r2);

        return;
    }

    public void appNotResponding(java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0;
        com.android.server.am.ActivityManagerService$PidMap r1, $r5;
        com.android.server.am.AnrHelper r2;
        android.content.pm.ApplicationInfo r3;
        java.lang.StringBuilder r4, r16;
        java.lang.String $r8, $r11, r13;
        java.lang.Throwable $r12;
        com.android.server.am.ProcessRecord r14;
        java.lang.SecurityException r15;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r13 := @parameter0: java.lang.String;

        i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        entermonitor r1;

     label1:
        $r5 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        r14 = virtualinvoke $r5.<com.android.server.am.ActivityManagerService$PidMap: com.android.server.am.ProcessRecord get(int)>(i0);

     label2:
        if r14 == null goto label5;

     label3:
        r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.AnrHelper mAnrHelper>;

        r3 = r14.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        r4 = new java.lang.StringBuilder;

        specialinvoke r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("App requested: ");

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13);

        $r11 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<com.android.server.am.AnrHelper: void appNotResponding(com.android.server.am.ProcessRecord,java.lang.String,android.content.pm.ApplicationInfo,java.lang.String,com.android.server.wm.WindowProcessController,boolean,java.lang.String)>(r14, null, r3, null, null, 0, $r11);

        exitmonitor r1;

     label4:
        return;

     label5:
        r15 = new java.lang.SecurityException;

        r16 = new java.lang.StringBuilder;

        specialinvoke r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown process: ");

        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r15.<java.lang.SecurityException: void <init>(java.lang.String)>($r8);

        throw r15;

     label6:
        $r12 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r12;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label5 to label6 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public void appNotRespondingViaProvider(android.os.IBinder)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ContentProviderRecord $r1;
        com.android.server.am.AnrHelper $r2;
        android.os.IBinder r3;
        com.android.server.am.ContentProviderConnection r4;
        com.android.server.am.ProcessRecord r5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r3 := @parameter0: android.os.IBinder;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.REMOVE_TASKS", "appNotRespondingViaProvider()");

        r4 = (com.android.server.am.ContentProviderConnection) r3;

        if r4 != null goto label1;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", "ContentProviderConnection is null");

        return;

     label1:
        $r1 = r4.<com.android.server.am.ContentProviderConnection: com.android.server.am.ContentProviderRecord provider>;

        r5 = $r1.<com.android.server.am.ContentProviderRecord: com.android.server.am.ProcessRecord proc>;

        if r5 != null goto label2;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", "Failed to find hosting ProcessRecord");

        return;

     label2:
        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.AnrHelper mAnrHelper>;

        virtualinvoke $r2.<com.android.server.am.AnrHelper: void appNotResponding(com.android.server.am.ProcessRecord,java.lang.String)>(r5, "ContentProvider not responding");

        return;
    }

    int appRestrictedInBackgroundLocked(int, java.lang.String, int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, $i1, i3, i4;
        java.lang.String r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        com.android.server.am.ActivityManagerConstants $r2;
        long $l2;
        android.app.AppOpsManager $r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        i3 := @parameter2: int;

        if i3 < 26 goto label1;

        return 2;

     label1:
        $z0 = r0.<com.android.server.am.ActivityManagerService: boolean mOnBattery>;

        if $z0 == 0 goto label2;

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerConstants mConstants>;

        $z4 = $r2.<com.android.server.am.ActivityManagerConstants: boolean FORCE_BACKGROUND_CHECK_ON_RESTRICTED_APPS>;

        if $z4 == 0 goto label2;

        $i1 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        $l2 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $z5 = specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean isInRestrictedBucket(int,java.lang.String,long)>($i1, r1, $l2);

        if $z5 == 0 goto label2;

        return 1;

     label2:
        $r3 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: android.app.AppOpsManager getAppOpsManager()>();

        i4 = virtualinvoke $r3.<android.app.AppOpsManager: int noteOpNoThrow(int,int,java.lang.String,java.lang.String,java.lang.String)>(63, i0, r1, null, "");

        if i4 == 0 goto label4;

        if i4 == 1 goto label3;

        return 2;

     label3:
        return 1;

     label4:
        $z1 = r0.<com.android.server.am.ActivityManagerService: boolean mForceBackgroundCheck>;

        if $z1 == 0 goto label5;

        $z2 = staticinvoke <android.os.UserHandle: boolean isCore(int)>(i0);

        if $z2 != 0 goto label5;

        $z3 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean isOnDeviceIdleWhitelistLocked(int,boolean)>(i0, 1);

        if $z3 != 0 goto label5;

        return 1;

     label5:
        return 0;
    }

    int appServicesRestrictedInBackgroundLocked(int, java.lang.String, int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, $i2;
        java.lang.String r1;
        android.content.pm.PackageManagerInternal $r2;
        boolean $z0, $z1, $z2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        $r2 = r0.<com.android.server.am.ActivityManagerService: android.content.pm.PackageManagerInternal mPackageManagerInt>;

        $z0 = virtualinvoke $r2.<android.content.pm.PackageManagerInternal: boolean isPackagePersistent(java.lang.String)>(r1);

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $z1 = specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean uidOnBackgroundWhitelist(int)>(i0);

        if $z1 == 0 goto label2;

        return 0;

     label2:
        $z2 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean isOnDeviceIdleWhitelistLocked(int,boolean)>(i0, 0);

        if $z2 == 0 goto label3;

        return 0;

     label3:
        $i2 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int appRestrictedInBackgroundLocked(int,java.lang.String,int)>(i0, r1, i1);

        return $i2;
    }

    void appendDropBoxProcessHeaders(com.android.server.am.ProcessRecord, java.lang.String, java.lang.StringBuilder)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.StringBuilder r1, r44;
        android.content.pm.IPackageManager r2;
        int $i0, $i1, $i2, $i3, i6, i7;
        android.content.pm.ApplicationInfo $r13, $r19;
        java.lang.String $r15, $r27, $r29, $r39, r41, r42;
        com.android.server.am.ProcessRecord$PackageList $r18, $r21;
        boolean $z0;
        long $l4;
        java.lang.Throwable $r35;
        android.os.RemoteException $r36;
        com.android.server.am.ProcessRecord r40;
        android.content.pm.PackageInfo r43;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r40 := @parameter0: com.android.server.am.ProcessRecord;

        r41 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.StringBuilder;

        if r40 != null goto label01;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Process: ");

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r41);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        return;

     label01:
        entermonitor r0;

     label02:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Process: ");

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r41);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PID: ");

        $i0 = r40.<com.android.server.am.ProcessRecord: int pid>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("UID: ");

        $i1 = r40.<com.android.server.am.ProcessRecord: int uid>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r13 = r40.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        i6 = $r13.<android.content.pm.ApplicationInfo: int flags>;

        r2 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Flags: 0x");

        $r15 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i6);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

     label03:
        i7 = 0;

     label04:
        $r18 = r40.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        $i2 = virtualinvoke $r18.<com.android.server.am.ProcessRecord$PackageList: int size()>();

        if i7 >= $i2 goto label13;

        $r21 = r40.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        r42 = virtualinvoke $r21.<com.android.server.am.ProcessRecord$PackageList: java.lang.String keyAt(int)>(i7);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package: ");

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r42);

     label05:
        $i3 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        r43 = interfaceinvoke r2.<android.content.pm.IPackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int,int)>(r42, 0, $i3);

     label06:
        if r43 == null goto label08;

     label07:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" v");

        $l4 = virtualinvoke r43.<android.content.pm.PackageInfo: long getLongVersionCode()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l4);

        $r27 = r43.<android.content.pm.PackageInfo: java.lang.String versionName>;

        if $r27 == null goto label08;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r29 = r43.<android.content.pm.PackageInfo: java.lang.String versionName>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

     label08:
        goto label11;

     label09:
        $r36 := @caughtexception;

     label10:
        r44 = new java.lang.StringBuilder;

        specialinvoke r44.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error getting package info: ");

        virtualinvoke r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r42);

        $r39 = virtualinvoke r44.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r39, $r36);

     label11:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

     label12:
        i7 = i7 + 1;

        goto label04;

     label13:
        $r19 = r40.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $z0 = virtualinvoke $r19.<android.content.pm.ApplicationInfo: boolean isInstantApp()>();

        if $z0 == 0 goto label14;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Instant-App: true\n");

     label14:
        exitmonitor r0;

     label15:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label16:
        $r35 := @caughtexception;

     label17:
        exitmonitor r0;

     label18:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r35;

        catch java.lang.Throwable from label02 to label03 with label16;
        catch java.lang.Throwable from label04 to label05 with label16;
        catch android.os.RemoteException from label05 to label06 with label09;
        catch java.lang.Throwable from label05 to label06 with label16;
        catch android.os.RemoteException from label07 to label08 with label09;
        catch java.lang.Throwable from label07 to label08 with label16;
        catch java.lang.Throwable from label10 to label11 with label16;
        catch java.lang.Throwable from label11 to label12 with label16;
        catch java.lang.Throwable from label13 to label14 with label16;
        catch java.lang.Throwable from label14 to label15 with label16;
        catch java.lang.Throwable from label17 to label18 with label16;
    }

    public void attachAgent(java.lang.String, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String $r3, $r5, $r6, $r11, r15, r16;
        android.app.IApplicationThread $r4, $r7;
        boolean $z0;
        android.content.pm.ApplicationInfo $r8;
        int $i0, $i1;
        android.os.RemoteException $r12;
        java.lang.IllegalStateException $r13;
        java.lang.Throwable $r14;
        com.android.server.am.ProcessRecord r17;
        java.lang.SecurityException r18;
        java.lang.StringBuilder r19, r21;
        java.lang.IllegalArgumentException r20;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r15 := @parameter0: java.lang.String;

        r16 := @parameter1: java.lang.String;

     label01:
        entermonitor r0;

     label02:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        r17 = specialinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord findProcessLocked(java.lang.String,int,java.lang.String)>(r15, 0, "attachAgent");

     label03:
        if r17 == null goto label10;

     label04:
        $r4 = r17.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r4 == null goto label10;

        $r5 = "1";

        $r6 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String,java.lang.String)>("ro.debuggable", "0");

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 != 0 goto label07;

        $r8 = r17.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i0 = $r8.<android.content.pm.ApplicationInfo: int flags>;

        $i1 = $i0 & 2;

        if $i1 == 0 goto label06;

     label05:
        goto label07;

     label06:
        r18 = new java.lang.SecurityException;

        r19 = new java.lang.StringBuilder;

        specialinvoke r19.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Process not debuggable: ");

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r17);

        $r11 = virtualinvoke r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r18.<java.lang.SecurityException: void <init>(java.lang.String)>($r11);

        throw r18;

     label07:
        $r7 = r17.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        interfaceinvoke $r7.<android.app.IApplicationThread: void attachAgent(java.lang.String)>(r16);

        exitmonitor r0;

     label08:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

     label09:
        return;

     label10:
        r20 = new java.lang.IllegalArgumentException;

        r21 = new java.lang.StringBuilder;

        specialinvoke r21.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown process: ");

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);

        $r3 = virtualinvoke r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r20.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw r20;

     label11:
        $r14 := @caughtexception;

     label12:
        exitmonitor r0;

     label13:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r14;

     label14:
        $r12 := @caughtexception;

        $r13 = new java.lang.IllegalStateException;

        specialinvoke $r13.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Process disappeared");

        throw $r13;

        catch android.os.RemoteException from label01 to label02 with label14;
        catch java.lang.Throwable from label02 to label03 with label11;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch android.os.RemoteException from label08 to label09 with label14;
        catch java.lang.Throwable from label10 to label11 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
        catch android.os.RemoteException from label13 to label14 with label14;
    }

    public final void attachApplication(android.app.IApplicationThread, long)
    {
        com.android.server.am.ActivityManagerService r0;
        long l0, l3;
        int i1, i2;
        java.lang.SecurityException $r1;
        java.lang.Throwable $r2;
        android.app.IApplicationThread r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r3 := @parameter0: android.app.IApplicationThread;

        l0 := @parameter1: long;

        if r3 == null goto label6;

        entermonitor r0;

     label1:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

        i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        l3 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean attachApplicationLocked(android.app.IApplicationThread,int,int,long)>(r3, i1, i2, l0);

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

        exitmonitor r0;

     label2:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r2;

     label6:
        $r1 = new java.lang.SecurityException;

        specialinvoke $r1.<java.lang.SecurityException: void <init>(java.lang.String)>("Invalid application interface");

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    void backgroundServicesFinishedLocked(int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, i2;
        com.android.server.am.BroadcastQueue[] r1;
        com.android.server.am.BroadcastQueue $r2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastQueue[] mBroadcastQueues>;

        i1 = lengthof r1;

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        $r2 = r1[i2];

        virtualinvoke $r2.<com.android.server.am.BroadcastQueue: void backgroundServicesFinishedLocked(int)>(i0);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    public void backgroundWhitelistUid(int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, $i2, $i3, $i4;
        java.lang.SecurityException $r1;
        int[] $r2, $r3, r5;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if $i2 != 1000 goto label6;

        entermonitor r0;

     label1:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r2 = r0.<com.android.server.am.ActivityManagerService: int[] mBackgroundAppIdWhitelist>;

        i1 = lengthof $r2;

        $i3 = i1 + 1;

        r5 = newarray (int)[$i3];

        $r3 = r0.<com.android.server.am.ActivityManagerService: int[] mBackgroundAppIdWhitelist>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, r5, 0, i1);

        $i4 = staticinvoke <android.os.UserHandle: int getAppId(int)>(i0);

        r5[i1] = $i4;

        r0.<com.android.server.am.ActivityManagerService: int[] mBackgroundAppIdWhitelist> = r5;

        exitmonitor r0;

     label2:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r4;

     label6:
        $r1 = new java.lang.SecurityException;

        specialinvoke $r1.<java.lang.SecurityException: void <init>(java.lang.String)>("Only the OS may call backgroundWhitelistUid()");

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void backupAgentCreated(java.lang.String, android.os.IBinder, int)
    {
        com.android.server.am.ActivityManagerService r0;
        long l0;
        com.android.server.am.UserController $r1;
        int $i1, $i2, i5, i6;
        android.util.SparseArray $r2;
        java.lang.Object $r3;
        android.content.pm.ApplicationInfo $r4;
        boolean $z0;
        android.os.IBinder $r5, r16;
        android.app.backup.IBackupManager $r6;
        java.lang.String $r10, r15, r18;
        android.os.RemoteException $r11;
        java.lang.Throwable $r12, $r14;
        java.lang.Exception $r13;
        com.android.server.am.BackupRecord r17;
        java.lang.StringBuilder r19;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r15 := @parameter0: java.lang.String;

        r16 := @parameter1: android.os.IBinder;

        i5 := @parameter2: int;

        $r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.UserController mUserController>;

        $i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i6 = virtualinvoke $r1.<com.android.server.am.UserController: int handleIncomingUser(int,int,int,boolean,int,java.lang.String,java.lang.String)>($i1, $i2, i5, 0, 2, "backupAgentCreated", null);

        entermonitor r0;

     label01:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r2 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mBackupTargets>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i6);

        r17 = (com.android.server.am.BackupRecord) $r3;

     label02:
        if r17 != null goto label03;

        r18 = null;

        goto label04;

     label03:
        $r4 = r17.<com.android.server.am.BackupRecord: android.content.pm.ApplicationInfo appInfo>;

        r18 = $r4.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

     label04:
        $z0 = virtualinvoke r15.<java.lang.String: boolean equals(java.lang.Object)>(r18);

        if $z0 != 0 goto label06;

        r19 = new java.lang.StringBuilder;

        specialinvoke r19.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Backup agent created for ");

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but not requested!");

        $r10 = virtualinvoke r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ActivityManager", $r10);

        exitmonitor r0;

     label05:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label06:
        exitmonitor r0;

     label07:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label08:
        $r5 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("backup");

        $r6 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager asInterface(android.os.IBinder)>($r5);

        interfaceinvoke $r6.<android.app.backup.IBackupManager: void agentConnectedForUser(int,java.lang.String,android.os.IBinder)>(i6, r15, r16);

     label09:
        goto label16;

     label10:
        $r12 := @caughtexception;

        goto label14;

     label11:
        $r13 := @caughtexception;

     label12:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", "Exception trying to deliver BackupAgent binding: ");

        virtualinvoke $r13.<java.lang.Exception: void printStackTrace()>();

     label13:
        goto label16;

     label14:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r12;

     label15:
        $r11 := @caughtexception;

     label16:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label17:
        $r14 := @caughtexception;

     label18:
        exitmonitor r0;

     label19:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r14;

        catch java.lang.Throwable from label01 to label02 with label17;
        catch java.lang.Throwable from label03 to label04 with label17;
        catch java.lang.Throwable from label04 to label05 with label17;
        catch java.lang.Throwable from label06 to label07 with label17;
        catch android.os.RemoteException from label08 to label09 with label15;
        catch java.lang.Exception from label08 to label09 with label11;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label12 to label13 with label10;
        catch java.lang.Throwable from label18 to label19 with label17;
    }

    public void batteryNeedsCpuUpdate()
    {
        com.android.server.am.ActivityManagerService r0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void updateCpuStatsNow()>();

        return;
    }

    public void batteryPowerChanged(boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        boolean z0;
        com.android.server.am.ActivityManagerService$PidMap r1;
        com.android.server.am.OomAdjProfiler $r2;
        java.lang.Throwable $r3, $r4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        z0 := @parameter0: boolean;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void updateCpuStatsNow()>();

        entermonitor r0;

     label01:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        entermonitor r1;

     label02:
        r0.<com.android.server.am.ActivityManagerService: boolean mOnBattery> = z0;

        exitmonitor r1;

     label03:
        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.OomAdjProfiler mOomAdjProfiler>;

        virtualinvoke $r2.<com.android.server.am.OomAdjProfiler: void batteryPowerChanged(boolean)>(z0);

        exitmonitor r0;

     label04:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label05:
        $r3 := @caughtexception;

     label06:
        exitmonitor r1;

     label07:
        throw $r3;

     label08:
        $r4 := @caughtexception;

     label09:
        exitmonitor r0;

     label10:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r4;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label02 to label03 with label05;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label06 to label07 with label05;
        catch java.lang.Throwable from label07 to label08 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public void batterySendBroadcast(android.content.Intent)
    {
        com.android.server.am.ActivityManagerService r0;
        int $i0, $i1;
        java.lang.Throwable $r1;
        android.content.Intent r2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r2 := @parameter0: android.content.Intent;

        entermonitor r0;

     label1:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: int broadcastIntentLocked(com.android.server.am.ProcessRecord,java.lang.String,java.lang.String,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String[],int,android.os.Bundle,boolean,boolean,int,int,int,int,int)>(null, null, null, r2, null, null, 0, null, null, null, -1, null, 0, 0, -1, 1000, $i0, $i1, -1);

        exitmonitor r0;

     label2:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label3:
        $r1 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void batteryStatsReset()
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.OomAdjProfiler $r1;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.OomAdjProfiler mOomAdjProfiler>;

        virtualinvoke $r1.<com.android.server.am.OomAdjProfiler: void reset()>();

        return;
    }

    public boolean bindBackupAgent(java.lang.String, int, int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, $i2, $i3, $i4, i8, i9, i10;
        com.android.server.am.HostingRecord r1;
        java.lang.String $r2, $r4, $r13, $r14, $r15, $r19, $r23, $r27, r35, r46;
        boolean $z0, $z1, $z2;
        android.content.pm.IPackageManager $r3, r36;
        android.content.ComponentName $r5, r45;
        android.util.SparseArray $r6, $r49;
        android.app.IApplicationThread $r7, r52;
        android.content.res.CompatibilityInfo $r8;
        android.content.pm.ApplicationInfo $r9, $r10, r37;
        java.lang.StringBuilder $r16, r42, r48;
        android.os.RemoteException $r20, $r29, $r34;
        java.lang.Throwable $r21, $r28, $r30, $r31, $r32, $r33, r40;
        com.android.server.am.BackupRecord r44, r51;
        com.android.server.am.ProcessRecord r47;
        java.lang.Object $r50, $r54;
        com.android.server.job.JobSchedulerInternal r55;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r35 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.CONFIRM_FULL_BACKUP", "bindBackupAgent");

        $r2 = "android";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r35);

        if $z0 == 0 goto label01;

        i8 = 0;

        goto label02;

     label01:
        i8 = i1;

     label02:
        r36 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

     label03:
        r37 = interfaceinvoke r36.<android.content.pm.IPackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int,int)>(r35, 1024, i8);

     label04:
        goto label06;

     label05:
        $r34 := @caughtexception;

        r37 = null;

     label06:
        if r37 != null goto label07;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to bind backup agent for ");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r35);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r19);

        return 0;

     label07:
        entermonitor r0;

     label08:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r3 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        $r4 = r37.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $i2 = r37.<android.content.pm.ApplicationInfo: int uid>;

        $i3 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i2);

        interfaceinvoke $r3.<android.content.pm.IPackageManager: void setPackageStoppedState(java.lang.String,boolean,int)>($r4, 0, $i3);

     label09:
        goto label15;

     label10:
        $r30 := @caughtexception;

        r40 = $r30;

        goto label48;

     label11:
        $r21 := @caughtexception;

     label12:
        r42 = new java.lang.StringBuilder;

        specialinvoke r42.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed trying to unstop package ");

        $r23 = r37.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        virtualinvoke r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        virtualinvoke r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        virtualinvoke r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r21);

        $r27 = virtualinvoke r42.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r27);

     label13:
        goto label15;

     label14:
        $r29 := @caughtexception;

     label15:
        r44 = new com.android.server.am.BackupRecord;

        specialinvoke r44.<com.android.server.am.BackupRecord: void <init>(android.content.pm.ApplicationInfo,int,int)>(r37, i0, i1);

     label16:
        if i0 != 0 goto label19;

     label17:
        r45 = new android.content.ComponentName;

        $r15 = r37.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r14 = r37.<android.content.pm.ApplicationInfo: java.lang.String backupAgentName>;

        specialinvoke r45.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r15, $r14);

     label18:
        goto label20;

     label19:
        $r5 = new android.content.ComponentName;

        specialinvoke $r5.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>("android", "FullBackupAgent");

        r45 = $r5;

     label20:
        r46 = r37.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        r1 = new com.android.server.am.HostingRecord;

        specialinvoke r1.<com.android.server.am.HostingRecord: void <init>(java.lang.String,android.content.ComponentName)>("backup", r45);

     label21:
        r47 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord startProcessLocked(java.lang.String,android.content.pm.ApplicationInfo,boolean,int,com.android.server.am.HostingRecord,int,boolean,boolean,boolean)>(r46, r37, 0, 0, r1, 4, 0, 0, 0);

     label22:
        if r47 != null goto label26;

     label23:
        r48 = new java.lang.StringBuilder;

        specialinvoke r48.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to start backup agent process ");

        virtualinvoke r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r44);

        $r13 = virtualinvoke r48.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ActivityManager", $r13);

        exitmonitor r0;

     label24:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return 0;

     label25:
        $r28 := @caughtexception;

        r40 = $r28;

        goto label48;

     label26:
        $i4 = r37.<android.content.pm.ApplicationInfo: int uid>;

        $z1 = staticinvoke <android.os.UserHandle: boolean isApp(int)>($i4);

        if $z1 == 0 goto label29;

     label27:
        if i0 != 1 goto label29;

     label28:
        r47.<com.android.server.am.ProcessRecord: boolean inFullBackup> = 1;

     label29:
        r44.<com.android.server.am.BackupRecord: com.android.server.am.ProcessRecord app> = r47;

        $r49 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mBackupTargets>;

        $r50 = virtualinvoke $r49.<android.util.SparseArray: java.lang.Object get(int)>(i1);

        r51 = (com.android.server.am.BackupRecord) $r50;

     label30:
        if r51 == null goto label33;

     label31:
        $r10 = r51.<com.android.server.am.BackupRecord: android.content.pm.ApplicationInfo appInfo>;

        i9 = $r10.<android.content.pm.ApplicationInfo: int uid>;

     label32:
        goto label34;

     label33:
        i9 = -1;

     label34:
        $z2 = r47.<com.android.server.am.ProcessRecord: boolean inFullBackup>;

        if $z2 == 0 goto label36;

        $r9 = r44.<com.android.server.am.BackupRecord: android.content.pm.ApplicationInfo appInfo>;

        i10 = $r9.<android.content.pm.ApplicationInfo: int uid>;

     label35:
        goto label37;

     label36:
        i10 = -1;

     label37:
        $r6 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mBackupTargets>;

        virtualinvoke $r6.<android.util.SparseArray: void put(int,java.lang.Object)>(i1, r44);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean updateOomAdjLocked(com.android.server.am.ProcessRecord,boolean,java.lang.String)>(r47, 1, "updateOomAdj_meh");

        r52 = r47.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

     label38:
        if r52 == null goto label42;

     label39:
        $r7 = r47.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r8 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: android.content.res.CompatibilityInfo compatibilityInfoForPackage(android.content.pm.ApplicationInfo)>(r37);

        interfaceinvoke $r7.<android.app.IApplicationThread: void scheduleCreateBackupAgent(android.content.pm.ApplicationInfo,android.content.res.CompatibilityInfo,int,int)>(r37, $r8, i0, i1);

     label40:
        goto label42;

     label41:
        $r20 := @caughtexception;

     label42:
        exitmonitor r0;

     label43:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        $r54 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Lcom/android/server/job/JobSchedulerInternal;");

        r55 = (com.android.server.job.JobSchedulerInternal) $r54;

        if i9 == -1 goto label44;

        interfaceinvoke r55.<com.android.server.job.JobSchedulerInternal: void removeBackingUpUid(int)>(i9);

     label44:
        if i10 == -1 goto label45;

        interfaceinvoke r55.<com.android.server.job.JobSchedulerInternal: void addBackingUpUid(int)>(i10);

     label45:
        return 1;

     label46:
        $r33 := @caughtexception;

        r40 = $r33;

        goto label48;

     label47:
        $r32 := @caughtexception;

        r40 = $r32;

     label48:
        exitmonitor r0;

     label49:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw r40;

     label50:
        $r31 := @caughtexception;

        r40 = $r31;

        goto label48;

        catch android.os.RemoteException from label03 to label04 with label05;
        catch android.os.RemoteException from label08 to label09 with label14;
        catch java.lang.IllegalArgumentException from label08 to label09 with label11;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label12 to label13 with label10;
        catch java.lang.Throwable from label15 to label16 with label47;
        catch java.lang.Throwable from label17 to label18 with label10;
        catch java.lang.Throwable from label19 to label20 with label47;
        catch java.lang.Throwable from label20 to label21 with label47;
        catch java.lang.Throwable from label21 to label22 with label46;
        catch java.lang.Throwable from label23 to label24 with label25;
        catch java.lang.Throwable from label26 to label27 with label50;
        catch java.lang.Throwable from label28 to label29 with label50;
        catch java.lang.Throwable from label29 to label30 with label50;
        catch java.lang.Throwable from label31 to label32 with label50;
        catch java.lang.Throwable from label34 to label35 with label50;
        catch java.lang.Throwable from label37 to label38 with label50;
        catch android.os.RemoteException from label39 to label40 with label41;
        catch java.lang.Throwable from label39 to label40 with label50;
        catch java.lang.Throwable from label42 to label43 with label50;
        catch java.lang.Throwable from label48 to label49 with label50;
    }

    public int bindIsolatedService(android.app.IApplicationThread, android.os.IBinder, android.content.Intent, java.lang.String, android.app.IServiceConnection, int, java.lang.String, java.lang.String, int) throws android.os.TransactionTooLargeException
    {
        com.android.server.am.ActivityManagerService r0;
        android.os.IBinder r1;
        android.content.Intent r2;
        java.lang.String r3, r5, r6;
        android.app.IServiceConnection r4;
        int i0, $i2, i3, i4, i5;
        char c1;
        java.lang.IllegalArgumentException $r7, $r9, $r10;
        com.android.server.am.ActiveServices $r8;
        boolean $z0;
        java.lang.Throwable $r11;
        android.app.IApplicationThread r12;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r12 := @parameter0: android.app.IApplicationThread;

        r1 := @parameter1: android.os.IBinder;

        r2 := @parameter2: android.content.Intent;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: android.app.IServiceConnection;

        i3 := @parameter5: int;

        r5 := @parameter6: java.lang.String;

        r6 := @parameter7: java.lang.String;

        i0 := @parameter8: int;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("bindService");

        if r2 == null goto label02;

        $z0 = virtualinvoke r2.<android.content.Intent: boolean hasFileDescriptors()>();

        if $z0 == 1 goto label01;

        goto label02;

     label01:
        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("File descriptors passed in Intent");

        throw $r10;

     label02:
        if r6 == null goto label15;

        if r5 == null goto label09;

        i4 = 0;

     label03:
        $i2 = virtualinvoke r5.<java.lang.String: int length()>();

        if i4 >= $i2 goto label09;

        c1 = virtualinvoke r5.<java.lang.String: char charAt(int)>(i4);

        if c1 < 97 goto label04;

        if c1 <= 122 goto label08;

     label04:
        if c1 < 65 goto label05;

        if c1 <= 90 goto label08;

     label05:
        if c1 < 48 goto label06;

        if c1 <= 57 goto label08;

     label06:
        if c1 == 95 goto label08;

        if c1 != 46 goto label07;

        goto label08;

     label07:
        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Illegal instanceName");

        throw $r9;

     label08:
        i4 = i4 + 1;

        goto label03;

     label09:
        entermonitor r0;

     label10:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r8 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveServices mServices>;

        i5 = virtualinvoke $r8.<com.android.server.am.ActiveServices: int bindServiceLocked(android.app.IApplicationThread,android.os.IBinder,android.content.Intent,java.lang.String,android.app.IServiceConnection,int,java.lang.String,java.lang.String,int)>(r12, r1, r2, r3, r4, i3, r5, r6, i0);

        exitmonitor r0;

     label11:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return i5;

     label12:
        $r11 := @caughtexception;

     label13:
        exitmonitor r0;

     label14:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r11;

     label15:
        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("callingPackage cannot be null");

        throw $r7;

        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public int bindService(android.app.IApplicationThread, android.os.IBinder, android.content.Intent, java.lang.String, android.app.IServiceConnection, int, java.lang.String, int) throws android.os.TransactionTooLargeException
    {
        com.android.server.am.ActivityManagerService r0;
        android.app.IApplicationThread r1;
        android.os.IBinder r2;
        android.content.Intent r3;
        java.lang.String r4, r6;
        android.app.IServiceConnection r5;
        int i0, i1, $i2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.app.IApplicationThread;

        r2 := @parameter1: android.os.IBinder;

        r3 := @parameter2: android.content.Intent;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: android.app.IServiceConnection;

        i0 := @parameter5: int;

        r6 := @parameter6: java.lang.String;

        i1 := @parameter7: int;

        $i2 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int bindIsolatedService(android.app.IApplicationThread,android.os.IBinder,android.content.Intent,java.lang.String,android.app.IServiceConnection,int,java.lang.String,java.lang.String,int)>(r1, r2, r3, r4, r5, i0, null, r6, i1);

        return $i2;
    }

    public void bootAnimationComplete()
    {
        com.android.server.am.ActivityManagerService r0;
        boolean z0;
        java.lang.Throwable $r2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        entermonitor r0;

     label1:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        z0 = r0.<com.android.server.am.ActivityManagerService: boolean mCallFinishBooting>;

        r0.<com.android.server.am.ActivityManagerService: boolean mBootAnimationComplete> = 1;

        exitmonitor r0;

     label2:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        if z0 == 0 goto label3;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void finishBooting()>();

     label3:
        return;

     label4:
        $r2 := @caughtexception;

     label5:
        exitmonitor r0;

     label6:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public final int broadcastIntent(android.app.IApplicationThread, android.content.Intent, java.lang.String, android.content.IIntentReceiver, int, java.lang.String, android.os.Bundle, java.lang.String[], int, android.os.Bundle, boolean, boolean, int)
    {
        com.android.server.am.ActivityManagerService r0;
        android.app.IApplicationThread r1;
        android.content.Intent r2;
        java.lang.String r3, r5;
        android.content.IIntentReceiver r4;
        int i0, i1, i2, $i3;
        android.os.Bundle r6, r8;
        java.lang.String[] r7;
        boolean z0, z1;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.app.IApplicationThread;

        r2 := @parameter1: android.content.Intent;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.content.IIntentReceiver;

        i0 := @parameter4: int;

        r5 := @parameter5: java.lang.String;

        r6 := @parameter6: android.os.Bundle;

        r7 := @parameter7: java.lang.String[];

        i1 := @parameter8: int;

        r8 := @parameter9: android.os.Bundle;

        z0 := @parameter10: boolean;

        z1 := @parameter11: boolean;

        i2 := @parameter12: int;

        $i3 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int broadcastIntentWithFeature(android.app.IApplicationThread,java.lang.String,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String[],int,android.os.Bundle,boolean,boolean,int)>(r1, null, r2, r3, r4, i0, r5, r6, r7, i1, r8, z0, z1, i2);

        return $i3;
    }

    int broadcastIntentInPackage(java.lang.String, java.lang.String, int, int, int, android.content.Intent, java.lang.String, android.content.IIntentReceiver, int, java.lang.String, android.os.Bundle, java.lang.String, android.os.Bundle, boolean, boolean, int, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1, r2, r4, r6, r14;
        int i0, i1, i2, i3, i5, i6;
        android.content.IIntentReceiver r3;
        android.os.Bundle r5, r7;
        boolean z0, z1, z2;
        android.content.Intent r8, r15;
        long l4;
        java.lang.String[] $r9, r16;
        java.lang.Throwable $r10, $r11, $r12, $r13, r18;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r14 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i5 := @parameter2: int;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        r15 := @parameter5: android.content.Intent;

        r2 := @parameter6: java.lang.String;

        r3 := @parameter7: android.content.IIntentReceiver;

        i2 := @parameter8: int;

        r4 := @parameter9: java.lang.String;

        r5 := @parameter10: android.os.Bundle;

        r6 := @parameter11: java.lang.String;

        r7 := @parameter12: android.os.Bundle;

        z0 := @parameter13: boolean;

        z1 := @parameter14: boolean;

        i3 := @parameter15: int;

        z2 := @parameter16: boolean;

        entermonitor r0;

     label01:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

     label02:
        r8 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: android.content.Intent verifyBroadcastLocked(android.content.Intent)>(r15);

     label03:
        l4 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label04:
        if r6 != null goto label05;

        r16 = null;

        goto label06;

     label05:
        $r9 = newarray (java.lang.String)[1];

        $r9[0] = r6;

        r16 = $r9;

     label06:
        i6 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int broadcastIntentLocked(com.android.server.am.ProcessRecord,java.lang.String,java.lang.String,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String[],int,android.os.Bundle,boolean,boolean,int,int,int,int,int,boolean,int[])>(null, r14, r1, r8, r2, r3, i2, r4, r5, r16, -1, r7, z0, z1, -1, i5, i0, i1, i3, z2, null);

     label07:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l4);

        exitmonitor r0;

     label08:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return i6;

     label09:
        $r13 := @caughtexception;

     label10:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l4);

     label11:
        throw $r13;

     label12:
        $r10 := @caughtexception;

        r18 = $r10;

        goto label14;

     label13:
        $r11 := @caughtexception;

        r18 = $r11;

     label14:
        exitmonitor r0;

     label15:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw r18;

     label16:
        $r12 := @caughtexception;

        r18 = $r12;

        goto label14;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label02 to label03 with label12;
        catch java.lang.Throwable from label03 to label04 with label16;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label07 to label08 with label16;
        catch java.lang.Throwable from label10 to label11 with label16;
        catch java.lang.Throwable from label11 to label12 with label16;
        catch java.lang.Throwable from label14 to label15 with label16;
    }

    final int broadcastIntentLocked(com.android.server.am.ProcessRecord, java.lang.String, java.lang.String, android.content.Intent, java.lang.String, android.content.IIntentReceiver, int, java.lang.String, android.os.Bundle, java.lang.String[], int, android.os.Bundle, boolean, boolean, int, int, int, int, int)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1;
        java.lang.String r2, r3, r5, r7;
        android.content.Intent r4;
        android.content.IIntentReceiver r6;
        int i0, i1, i2, i3, i4, i5, i6, $i7;
        android.os.Bundle r8, r10;
        java.lang.String[] r9;
        boolean z0, z1;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.content.Intent;

        r5 := @parameter4: java.lang.String;

        r6 := @parameter5: android.content.IIntentReceiver;

        i0 := @parameter6: int;

        r7 := @parameter7: java.lang.String;

        r8 := @parameter8: android.os.Bundle;

        r9 := @parameter9: java.lang.String[];

        i1 := @parameter10: int;

        r10 := @parameter11: android.os.Bundle;

        z0 := @parameter12: boolean;

        z1 := @parameter13: boolean;

        i2 := @parameter14: int;

        i3 := @parameter15: int;

        i4 := @parameter16: int;

        i5 := @parameter17: int;

        i6 := @parameter18: int;

        $i7 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int broadcastIntentLocked(com.android.server.am.ProcessRecord,java.lang.String,java.lang.String,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String[],int,android.os.Bundle,boolean,boolean,int,int,int,int,int,boolean,int[])>(r1, r2, r3, r4, r5, r6, i0, r7, r8, r9, i1, r10, z0, z1, i2, i3, i4, i5, i6, 0, null);

        return $i7;
    }

    final int broadcastIntentLocked(com.android.server.am.ProcessRecord, java.lang.String, java.lang.String, android.content.Intent, java.lang.String, android.content.IIntentReceiver, int, java.lang.String, android.os.Bundle, java.lang.String[], int, android.os.Bundle, boolean, boolean, int, int, int, int, int, boolean, int[])
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1, r2, r4, $r10, $r11, $r20, $r21, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r46, $r53, $r58, $r64, $r66, $r67, $r70, $r71, $r73, $r89, $r91, $r93, $r94, $r96, $r99, $r108, $r112, $r115, $r120, $r123, $r125, $r128, $r131, $r133, $r136, $r137, $r139, $r141, $r144, $r145, r151, r160, r164, r168, r171, r173, r175, r182, r184, r188, r193, r194, r201, $r202, r216, r228, r229;
        android.content.IIntentReceiver r3, $r13, $r16;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, i42, i43, i44, i45, i46, i48, i51, i56, i57, i59, i60, i61, i62, i63, i64, i66, i67, i68, i69, i70, $i71, $i72, i73, i74, i75, i76, i77, i78, i79, i80, i81, i82, i83, i84, i85, i87, i89, i90;
        android.os.Bundle r5, r153;
        java.lang.String[] r6, $r87, $r97, $r100, r191, r198, r226;
        boolean z0, z1, z2, z3, z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32, $z33, $z34, $z35, $z36, $z37, $z38, $z39, $z40, $z41, $z42, $z43, $z44, $z45, $z46, $z47, $z48, $z49, $z50, $z51, $z52, z53, $z54, $z55, z56, z57, z59, z60, z61, z62, z63, z64, $z65, z66, z67, z68, z70;
        android.content.ComponentName $r8, $r9, $r44, $r118, $r119, $r122;
        android.content.Intent $r14, $r15, $r50, $r61, r152, r204, r242, r267, r268;
        com.android.server.am.ProcessRecord $r17, r150;
        java.lang.Object $r18, $r22, $r23, $r24, $r36, $r47, $r49, $r57, $r59, $r60, $r210, r218, r234;
        android.content.pm.ResolveInfo $r25, r230, r232;
        android.content.pm.ActivityInfo $r26;
        com.android.server.am.BroadcastRecord $r35, r237, r272, r274;
        com.android.server.am.BroadcastFilter $r37, r231, r233;
        com.android.server.IntentResolver $r38, $r40;
        com.android.server.am.UserController $r39, $r41, $r135, $r158;
        android.util.SparseArray $r55, $r56, $r209;
        android.util.ArraySet $r68;
        com.android.server.am.ProcessList $r69, r196;
        com.android.server.am.ActivityManagerService$MainHandler $r74, $r76, $r78, $r79, $r80, r177;
        android.os.Message $r75, r178;
        com.android.server.am.BatteryStatsService $r77, $r106, $r109, r186;
        com.android.server.wm.ActivityTaskManagerInternal $r81, $r82, $r85, $r95, $r103, $r105, $r107, r199;
        android.content.pm.IPackageManager $r83, $r84, $r169;
        com.android.server.am.ActiveServices $r86, $r104;
        com.android.server.appop.AppOpsService $r101, $r110, $r111;
        com.android.server.uri.UriGrantsManagerInternal $r102;
        long $l32, l52;
        byte $b33, b49, b53;
        android.os.RemoteException $r142, $r146, $r147, $r149;
        java.lang.Throwable $r148;
        int[] r154, r156, r217, r219;
        android.app.BroadcastOptions r166, r245;
        com.android.internal.os.BatteryStatsImpl r179;
        android.net.Uri r181, r183, r187, r192, r227;
        android.content.pm.ApplicationInfo r185, r189;
        com.android.server.am.UidRecord r203;
        android.util.ArrayMap r206, r211, r212, r265;
        java.util.ArrayList r207, r213, r214, r266, r273;
        java.util.List r220, r221, r222, r225, r276, r277, r278, r279, r280, r281, r282, r283, r284, r285;
        com.android.server.am.BroadcastQueue r223, r235, r238;
        java.lang.StringBuilder r243, r244, r246, r248, r249, r251, r253, r255, r257, r258, r259, r260, r262, r263, r270, r275;
        java.lang.SecurityException r247, r250, r252, r254, r256, r261, r269, r271;
        java.lang.IllegalArgumentException r264;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r150 := @parameter0: com.android.server.am.ProcessRecord;

        r151 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r152 := @parameter3: android.content.Intent;

        r2 := @parameter4: java.lang.String;

        r3 := @parameter5: android.content.IIntentReceiver;

        i0 := @parameter6: int;

        r4 := @parameter7: java.lang.String;

        r5 := @parameter8: android.os.Bundle;

        r6 := @parameter9: java.lang.String[];

        i1 := @parameter10: int;

        r153 := @parameter11: android.os.Bundle;

        z0 := @parameter12: boolean;

        z1 := @parameter13: boolean;

        i2 := @parameter14: int;

        i3 := @parameter15: int;

        i42 := @parameter16: int;

        i43 := @parameter17: int;

        i44 := @parameter18: int;

        z53 := @parameter19: boolean;

        r154 := @parameter20: int[];

        r242 = new android.content.Intent;

        specialinvoke r242.<android.content.Intent: void <init>(android.content.Intent)>(r152);

        z2 = specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean isInstantApp(com.android.server.am.ProcessRecord,java.lang.String,int)>(r150, r151, i3);

        if z2 == 0 goto label001;

        $i40 = virtualinvoke r242.<android.content.Intent: int getFlags()>();

        $i41 = $i40 & -2097153;

        virtualinvoke r242.<android.content.Intent: android.content.Intent setFlags(int)>($i41);

     label001:
        if i44 != -1 goto label002;

        if r154 == null goto label002;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ActivityManager", "broadcastWhitelist only applies when sending to individual users. Assuming restrictive whitelist.");

        r156 = newarray (int)[0];

        goto label003;

     label002:
        r156 = r154;

     label003:
        virtualinvoke r242.<android.content.Intent: android.content.Intent addFlags(int)>(16);

        $z54 = r0.<com.android.server.am.ActivityManagerService: boolean mProcessesReady>;

        if $z54 != 0 goto label004;

        $i38 = virtualinvoke r242.<android.content.Intent: int getFlags()>();

        $i39 = $i38 & 33554432;

        if $i39 != 0 goto label004;

        virtualinvoke r242.<android.content.Intent: android.content.Intent addFlags(int)>(1073741824);

     label004:
        if r3 == null goto label005;

        if z0 != 0 goto label005;

        r243 = new java.lang.StringBuilder;

        specialinvoke r243.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r243.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Broadcast ");

        virtualinvoke r243.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r242);

        virtualinvoke r243.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not ordered but result callback requested!");

        $r141 = virtualinvoke r243.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r141);

     label005:
        $r158 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.UserController mUserController>;

        i45 = virtualinvoke $r158.<com.android.server.am.UserController: int handleIncomingUser(int,int,int,boolean,int,java.lang.String,java.lang.String)>(i2, i3, i44, 1, 0, "broadcast", r151);

        i46 = i45;

        if i45 == -1 goto label009;

        $r135 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.UserController mUserController>;

        $z51 = virtualinvoke $r135.<com.android.server.am.UserController: boolean isUserOrItsParentRunning(int)>(i45);

        if $z51 != 0 goto label009;

        if i3 != 1000 goto label007;

        $i36 = virtualinvoke r242.<android.content.Intent: int getFlags()>();

        $i37 = $i36 & 33554432;

        if $i37 != 0 goto label006;

        goto label007;

     label006:
        goto label009;

     label007:
        $r136 = "android.intent.action.ACTION_SHUTDOWN";

        $r137 = virtualinvoke r242.<android.content.Intent: java.lang.String getAction()>();

        $z52 = virtualinvoke $r136.<java.lang.String: boolean equals(java.lang.Object)>($r137);

        if $z52 != 0 goto label008;

        r244 = new java.lang.StringBuilder;

        specialinvoke r244.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r244.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skipping broadcast of ");

        virtualinvoke r244.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r242);

        virtualinvoke r244.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": user ");

        virtualinvoke r244.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i45);

        virtualinvoke r244.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and its parent (if any) are stopped");

        $r139 = virtualinvoke r244.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r139);

        return -2;

     label008:
        goto label009;

     label009:
        r160 = virtualinvoke r242.<android.content.Intent: java.lang.String getAction()>();

        if r153 == null goto label015;

        r245 = new android.app.BroadcastOptions;

        specialinvoke r245.<android.app.BroadcastOptions: void <init>(android.os.Bundle)>(r153);

        $l32 = virtualinvoke r245.<android.app.BroadcastOptions: long getTemporaryAppWhitelistDuration()>();

        $b33 = $l32 cmp 0L;

        if $b33 <= 0 goto label011;

        $i35 = staticinvoke <com.android.server.am.ActivityManagerService: int checkComponentPermission(java.lang.String,int,int,int,boolean)>("android.permission.CHANGE_DEVICE_IDLE_TEMP_WHITELIST", i43, i42, -1, 1);

        if $i35 != 0 goto label010;

        goto label011;

     label010:
        r246 = new java.lang.StringBuilder;

        specialinvoke r246.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r246.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: ");

        $r133 = virtualinvoke r242.<android.content.Intent: java.lang.String getAction()>();

        virtualinvoke r246.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r133);

        virtualinvoke r246.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" broadcast from ");

        virtualinvoke r246.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r151);

        virtualinvoke r246.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (pid=");

        virtualinvoke r246.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        virtualinvoke r246.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        virtualinvoke r246.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        virtualinvoke r246.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") requires ");

        virtualinvoke r246.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.CHANGE_DEVICE_IDLE_TEMP_WHITELIST");

        r164 = virtualinvoke r246.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r164);

        r247 = new java.lang.SecurityException;

        specialinvoke r247.<java.lang.SecurityException: void <init>(java.lang.String)>(r164);

        throw r247;

     label011:
        $z48 = virtualinvoke r245.<android.app.BroadcastOptions: boolean isDontSendToRestrictedApps()>();

        if $z48 == 0 goto label012;

        $z49 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean isUidActiveLocked(int)>(i3);

        if $z49 != 0 goto label012;

        $z50 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean isBackgroundRestrictedNoCheck(int,java.lang.String)>(i3, r151);

        if $z50 == 0 goto label012;

        r248 = new java.lang.StringBuilder;

        specialinvoke r248.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r248.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not sending broadcast ");

        virtualinvoke r248.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r160);

        virtualinvoke r248.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - app ");

        virtualinvoke r248.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r151);

        virtualinvoke r248.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has background restrictions");

        $r131 = virtualinvoke r248.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", $r131);

        return -96;

     label012:
        $z55 = virtualinvoke r245.<android.app.BroadcastOptions: boolean allowsBackgroundActivityStarts()>();

        if $z55 == 0 goto label014;

        $i34 = staticinvoke <com.android.server.am.ActivityManagerService: int checkComponentPermission(java.lang.String,int,int,int,boolean)>("android.permission.START_ACTIVITIES_FROM_BACKGROUND", i43, i42, -1, 1);

        if $i34 != 0 goto label013;

        z53 = 1;

        r166 = r245;

        goto label016;

     label013:
        r249 = new java.lang.StringBuilder;

        specialinvoke r249.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r249.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: ");

        $r128 = virtualinvoke r242.<android.content.Intent: java.lang.String getAction()>();

        virtualinvoke r249.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r128);

        virtualinvoke r249.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" broadcast from ");

        virtualinvoke r249.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r151);

        virtualinvoke r249.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (pid=");

        virtualinvoke r249.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        virtualinvoke r249.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        virtualinvoke r249.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        virtualinvoke r249.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") requires ");

        virtualinvoke r249.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.START_ACTIVITIES_FROM_BACKGROUND");

        r168 = virtualinvoke r249.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r168);

        r250 = new java.lang.SecurityException;

        specialinvoke r250.<java.lang.SecurityException: void <init>(java.lang.String)>(r168);

        throw r250;

     label014:
        r166 = r245;

        goto label016;

     label015:
        r166 = null;

     label016:
        $r169 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        z3 = interfaceinvoke $r169.<android.content.pm.IPackageManager: boolean isProtectedBroadcast(java.lang.String)>(r160);

     label017:
        i48 = staticinvoke <android.os.UserHandle: int getAppId(int)>(i3);

        if i48 == 0 goto label021;

        if i48 == 1027 goto label021;

        if i48 == 1068 goto label021;

        if i48 == 1073 goto label021;

        tableswitch(i48)
        {
            case 1000: goto label021;
            case 1001: goto label021;
            case 1002: goto label021;
            default: goto label018;
        };

     label018:
        if r150 == null goto label019;

        $z47 = virtualinvoke r150.<com.android.server.am.ProcessRecord: boolean isPersistent()>();

        if $z47 == 0 goto label019;

        z56 = 1;

        goto label020;

     label019:
        z56 = 0;

     label020:
        z57 = z56;

        goto label022;

     label021:
        z57 = 1;

     label022:
        if z57 != 0 goto label028;

        if z3 != 0 goto label027;

        $r115 = "android.appwidget.action.APPWIDGET_CONFIGURE";

        $z44 = virtualinvoke $r115.<java.lang.String: boolean equals(java.lang.Object)>(r160);

        if $z44 != 0 goto label023;

        $r125 = "android.appwidget.action.APPWIDGET_UPDATE";

        $z46 = virtualinvoke $r125.<java.lang.String: boolean equals(java.lang.Object)>(r160);

        if $z46 == 0 goto label028;

     label023:
        if r151 == null goto label026;

        $r118 = virtualinvoke r242.<android.content.Intent: android.content.ComponentName getComponent()>();

        if $r118 == null goto label025;

        $r119 = virtualinvoke r242.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r120 = virtualinvoke $r119.<android.content.ComponentName: java.lang.String getPackageName()>();

        $z45 = virtualinvoke $r120.<java.lang.String: boolean equals(java.lang.Object)>(r151);

        if $z45 == 0 goto label024;

        goto label028;

     label024:
        r251 = new java.lang.StringBuilder;

        specialinvoke r251.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r251.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: not allowed to send broadcast ");

        virtualinvoke r251.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r160);

        virtualinvoke r251.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r122 = virtualinvoke r242.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r123 = virtualinvoke $r122.<android.content.ComponentName: java.lang.String getPackageName()>();

        virtualinvoke r251.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r123);

        virtualinvoke r251.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from ");

        virtualinvoke r251.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r151);

        r171 = virtualinvoke r251.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r171);

        r252 = new java.lang.SecurityException;

        specialinvoke r252.<java.lang.SecurityException: void <init>(java.lang.String)>(r171);

        throw r252;

     label025:
        virtualinvoke r242.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>(r151);

        goto label028;

     label026:
        r253 = new java.lang.StringBuilder;

        specialinvoke r253.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r253.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: not allowed to send broadcast ");

        virtualinvoke r253.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r160);

        virtualinvoke r253.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from unknown caller.");

        r173 = virtualinvoke r253.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r173);

        r254 = new java.lang.SecurityException;

        specialinvoke r254.<java.lang.SecurityException: void <init>(java.lang.String)>(r173);

        throw r254;

     label027:
        r255 = new java.lang.StringBuilder;

        specialinvoke r255.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r255.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: not allowed to send broadcast ");

        virtualinvoke r255.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r160);

        virtualinvoke r255.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from pid=");

        virtualinvoke r255.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        virtualinvoke r255.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        virtualinvoke r255.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        r175 = virtualinvoke r255.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r175);

        r256 = new java.lang.SecurityException;

        specialinvoke r256.<java.lang.SecurityException: void <init>(java.lang.String)>(r175);

        throw r256;

     label028:
        if r160 == null goto label130;

        $r68 = specialinvoke r0.<com.android.server.am.ActivityManagerService: android.util.ArraySet getBackgroundLaunchBroadcasts()>();

        $z13 = virtualinvoke $r68.<android.util.ArraySet: boolean contains(java.lang.Object)>(r160);

        if $z13 == 0 goto label029;

        virtualinvoke r242.<android.content.Intent: android.content.Intent addFlags(int)>(16777216);

     label029:
        $i22 = virtualinvoke r160.<java.lang.String: int hashCode()>();

        lookupswitch($i22)
        {
            case -2098526293: goto label049;
            case -2074848843: goto label048;
            case -1749672628: goto label047;
            case -1403934493: goto label046;
            case -1338021860: goto label045;
            case -1001645458: goto label044;
            case -810471698: goto label043;
            case 172491798: goto label042;
            case 183904262: goto label041;
            case 267468725: goto label040;
            case 502473491: goto label039;
            case 505380757: goto label038;
            case 525384130: goto label037;
            case 555021408: goto label036;
            case 789737439: goto label035;
            case 920338478: goto label034;
            case 1290767157: goto label033;
            case 1544582882: goto label032;
            case 1862858502: goto label031;
            default: goto label030;
        };

     label030:
        goto label050;

     label031:
        $z14 = virtualinvoke r160.<java.lang.String: boolean equals(java.lang.Object)>("android.security.action.TRUST_STORE_CHANGED");

        if $z14 == 0 goto label030;

        b49 = 16;

        goto label051;

     label032:
        $z26 = virtualinvoke r160.<java.lang.String: boolean equals(java.lang.Object)>("android.intent.action.PACKAGE_ADDED");

        if $z26 == 0 goto label030;

        b49 = 8;

        goto label051;

     label033:
        $z27 = virtualinvoke r160.<java.lang.String: boolean equals(java.lang.Object)>("android.intent.action.PACKAGES_UNSUSPENDED");

        if $z27 == 0 goto label030;

        b49 = 6;

        goto label051;

     label034:
        $z28 = virtualinvoke r160.<java.lang.String: boolean equals(java.lang.Object)>("android.hardware.action.NEW_PICTURE");

        if $z28 == 0 goto label030;

        b49 = 14;

        goto label051;

     label035:
        $z29 = virtualinvoke r160.<java.lang.String: boolean equals(java.lang.Object)>("android.intent.action.PRE_BOOT_COMPLETED");

        if $z29 == 0 goto label030;

        b49 = 18;

        goto label051;

     label036:
        $z30 = virtualinvoke r160.<java.lang.String: boolean equals(java.lang.Object)>("com.android.launcher.action.INSTALL_SHORTCUT");

        if $z30 == 0 goto label030;

        b49 = 17;

        goto label051;

     label037:
        $z31 = virtualinvoke r160.<java.lang.String: boolean equals(java.lang.Object)>("android.intent.action.PACKAGE_REMOVED");

        if $z31 == 0 goto label030;

        b49 = 1;

        goto label051;

     label038:
        $z32 = virtualinvoke r160.<java.lang.String: boolean equals(java.lang.Object)>("android.intent.action.TIME_SET");

        if $z32 == 0 goto label030;

        b49 = 11;

        goto label051;

     label039:
        $z33 = virtualinvoke r160.<java.lang.String: boolean equals(java.lang.Object)>("android.intent.action.TIMEZONE_CHANGED");

        if $z33 == 0 goto label030;

        b49 = 10;

        goto label051;

     label040:
        $z34 = virtualinvoke r160.<java.lang.String: boolean equals(java.lang.Object)>("android.intent.action.PACKAGE_DATA_CLEARED");

        if $z34 == 0 goto label030;

        b49 = 9;

        goto label051;

     label041:
        $z35 = virtualinvoke r160.<java.lang.String: boolean equals(java.lang.Object)>("android.intent.action.PROXY_CHANGE");

        if $z35 == 0 goto label030;

        b49 = 13;

        goto label051;

     label042:
        $z36 = virtualinvoke r160.<java.lang.String: boolean equals(java.lang.Object)>("android.intent.action.PACKAGE_CHANGED");

        if $z36 == 0 goto label030;

        b49 = 2;

        goto label051;

     label043:
        $z37 = virtualinvoke r160.<java.lang.String: boolean equals(java.lang.Object)>("android.intent.action.PACKAGE_REPLACED");

        if $z37 == 0 goto label030;

        b49 = 7;

        goto label051;

     label044:
        $z38 = virtualinvoke r160.<java.lang.String: boolean equals(java.lang.Object)>("android.intent.action.PACKAGES_SUSPENDED");

        if $z38 == 0 goto label030;

        b49 = 5;

        goto label051;

     label045:
        $z39 = virtualinvoke r160.<java.lang.String: boolean equals(java.lang.Object)>("android.intent.action.EXTERNAL_APPLICATIONS_AVAILABLE");

        if $z39 == 0 goto label030;

        b49 = 4;

        goto label051;

     label046:
        $z40 = virtualinvoke r160.<java.lang.String: boolean equals(java.lang.Object)>("android.intent.action.EXTERNAL_APPLICATIONS_UNAVAILABLE");

        if $z40 == 0 goto label030;

        b49 = 3;

        goto label051;

     label047:
        $z41 = virtualinvoke r160.<java.lang.String: boolean equals(java.lang.Object)>("android.intent.action.UID_REMOVED");

        if $z41 == 0 goto label030;

        b49 = 0;

        goto label051;

     label048:
        $z42 = virtualinvoke r160.<java.lang.String: boolean equals(java.lang.Object)>("android.intent.action.CLEAR_DNS_CACHE");

        if $z42 == 0 goto label030;

        b49 = 12;

        goto label051;

     label049:
        $z43 = virtualinvoke r160.<java.lang.String: boolean equals(java.lang.Object)>("android.hardware.action.NEW_VIDEO");

        if $z43 == 0 goto label030;

        b49 = 15;

        goto label051;

     label050:
        b49 = -1;

     label051:
        tableswitch(b49)
        {
            case 0: goto label090;
            case 1: goto label090;
            case 2: goto label090;
            case 3: goto label090;
            case 4: goto label090;
            case 5: goto label090;
            case 6: goto label090;
            case 7: goto label082;
            case 8: goto label070;
            case 9: goto label067;
            case 10: goto label066;
            case 11: goto label059;
            case 12: goto label058;
            case 13: goto label057;
            case 14: goto label056;
            case 15: goto label056;
            case 16: goto label055;
            case 17: goto label054;
            case 18: goto label053;
            default: goto label052;
        };

     label052:
        z59 = 0;

        goto label127;

     label053:
        z59 = 1;

        goto label127;

     label054:
        r257 = new java.lang.StringBuilder;

        specialinvoke r257.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r257.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Broadcast ");

        virtualinvoke r257.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r160);

        virtualinvoke r257.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" no longer supported. It will not be delivered.");

        $r73 = virtualinvoke r257.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityManager", $r73);

        return 0;

     label055:
        $r74 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        virtualinvoke $r74.<com.android.server.am.ActivityManagerService$MainHandler: boolean sendEmptyMessage(int)>(63);

        z59 = 0;

        goto label127;

     label056:
        virtualinvoke r242.<android.content.Intent: android.content.Intent addFlags(int)>(1073741824);

        z59 = 0;

        goto label127;

     label057:
        r177 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        $r75 = virtualinvoke r177.<com.android.server.am.ActivityManagerService$MainHandler: android.os.Message obtainMessage(int)>(29);

        virtualinvoke r177.<com.android.server.am.ActivityManagerService$MainHandler: boolean sendMessage(android.os.Message)>($r75);

        z59 = 0;

        goto label127;

     label058:
        $r76 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        virtualinvoke $r76.<com.android.server.am.ActivityManagerService$MainHandler: boolean sendEmptyMessage(int)>(28);

        z59 = 0;

        goto label127;

     label059:
        i51 = virtualinvoke r242.<android.content.Intent: int getIntExtra(java.lang.String,int)>("android.intent.extra.TIME_PREF_24_HOUR_FORMAT", -1);

        if i51 == -1 goto label060;

        $r78 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        r178 = virtualinvoke $r78.<com.android.server.am.ActivityManagerService$MainHandler: android.os.Message obtainMessage(int,int,int)>(41, i51, 0);

        $r79 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        virtualinvoke $r79.<com.android.server.am.ActivityManagerService$MainHandler: boolean sendMessage(android.os.Message)>(r178);

     label060:
        $r77 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        r179 = virtualinvoke $r77.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl getActiveStatistics()>();

        entermonitor r179;

     label061:
        virtualinvoke r179.<com.android.internal.os.BatteryStatsImpl: void noteCurrentTimeChangedLocked()>();

        exitmonitor r179;

     label062:
        z59 = 0;

        goto label127;

     label063:
        $r148 := @caughtexception;

     label064:
        exitmonitor r179;

     label065:
        throw $r148;

     label066:
        $r80 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        virtualinvoke $r80.<com.android.server.am.ActivityManagerService$MainHandler: boolean sendEmptyMessage(int)>(13);

        z59 = 0;

        goto label127;

     label067:
        r181 = virtualinvoke r242.<android.content.Intent: android.net.Uri getData()>();

        if r181 == null goto label069;

        r182 = virtualinvoke r181.<android.net.Uri: java.lang.String getSchemeSpecificPart()>();

        if r182 == null goto label068;

        $r81 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerInternal mAtmInternal>;

        virtualinvoke $r81.<com.android.server.wm.ActivityTaskManagerInternal: void onPackageDataCleared(java.lang.String)>(r182);

        z59 = 0;

        goto label127;

     label068:
        z59 = 0;

        goto label127;

     label069:
        z59 = 0;

        goto label127;

     label070:
        r183 = virtualinvoke r242.<android.content.Intent: android.net.Uri getData()>();

        if r183 == null goto label081;

        r184 = virtualinvoke r183.<android.net.Uri: java.lang.String getSchemeSpecificPart()>();

        if r184 == null goto label080;

        z60 = virtualinvoke r242.<android.content.Intent: boolean getBooleanExtra(java.lang.String,boolean)>("android.intent.extra.REPLACING", 0);

        $r82 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerInternal mAtmInternal>;

        virtualinvoke $r82.<com.android.server.wm.ActivityTaskManagerInternal: void onPackageAdded(java.lang.String,boolean)>(r184, z60);

     label071:
        $r83 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        r185 = interfaceinvoke $r83.<android.content.pm.IPackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int,int)>(r184, 1024, 0);

        r186 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

     label072:
        if r185 == null goto label075;

     label073:
        l52 = r185.<android.content.pm.ApplicationInfo: long longVersionCode>;

     label074:
        goto label076;

     label075:
        l52 = 0L;

     label076:
        virtualinvoke r186.<com.android.server.am.BatteryStatsService: void notePackageInstalled(java.lang.String,long)>(r184, l52);

     label077:
        goto label079;

     label078:
        $r147 := @caughtexception;

     label079:
        z59 = 0;

        goto label127;

     label080:
        z59 = 0;

        goto label127;

     label081:
        z59 = 0;

        goto label127;

     label082:
        r187 = virtualinvoke r242.<android.content.Intent: android.net.Uri getData()>();

        if r187 == null goto label089;

        r188 = virtualinvoke r187.<android.net.Uri: java.lang.String getSchemeSpecificPart()>();

        if r188 == null goto label088;

     label083:
        $r84 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        r189 = interfaceinvoke $r84.<android.content.pm.IPackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int,int)>(r188, 1024, i45);

     label084:
        goto label086;

     label085:
        $r149 := @caughtexception;

        r189 = null;

     label086:
        if r189 != null goto label087;

        r258 = new java.lang.StringBuilder;

        specialinvoke r258.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r258.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Dropping ACTION_PACKAGE_REPLACED for non-existent pkg: ssp=");

        virtualinvoke r258.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r188);

        virtualinvoke r258.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" data=");

        virtualinvoke r258.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r187);

        $r89 = virtualinvoke r258.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r89);

        return 0;

     label087:
        specialinvoke r0.<com.android.server.am.ActivityManagerService: void updateAssociationForApp(android.content.pm.ApplicationInfo)>(r189);

        $r85 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerInternal mAtmInternal>;

        virtualinvoke $r85.<com.android.server.wm.ActivityTaskManagerInternal: void onPackageReplaced(android.content.pm.ApplicationInfo)>(r189);

        $r86 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveServices mServices>;

        virtualinvoke $r86.<com.android.server.am.ActiveServices: void updateServiceApplicationInfoLocked(android.content.pm.ApplicationInfo)>(r189);

        $r87 = newarray (java.lang.String)[1];

        $r87[0] = r188;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void sendPackageBroadcastLocked(int,java.lang.String[],int)>(3, $r87, i45);

        z59 = 0;

        goto label127;

     label088:
        z59 = 0;

        goto label127;

     label089:
        z59 = 0;

        goto label127;

     label090:
        $i23 = staticinvoke <com.android.server.am.ActivityManagerService: int checkComponentPermission(java.lang.String,int,int,int,boolean)>("android.permission.BROADCAST_PACKAGE_REMOVED", i2, i3, -1, 1);

        if $i23 != 0 goto label126;

        $i24 = virtualinvoke r160.<java.lang.String: int hashCode()>();

        lookupswitch($i24)
        {
            case -1749672628: goto label098;
            case -1403934493: goto label097;
            case -1338021860: goto label096;
            case -1001645458: goto label095;
            case 172491798: goto label094;
            case 525384130: goto label093;
            case 1290767157: goto label092;
            default: goto label091;
        };

     label091:
        goto label099;

     label092:
        $z17 = virtualinvoke r160.<java.lang.String: boolean equals(java.lang.Object)>("android.intent.action.PACKAGES_UNSUSPENDED");

        if $z17 == 0 goto label091;

        b53 = 6;

        goto label100;

     label093:
        $z20 = virtualinvoke r160.<java.lang.String: boolean equals(java.lang.Object)>("android.intent.action.PACKAGE_REMOVED");

        if $z20 == 0 goto label091;

        b53 = 3;

        goto label100;

     label094:
        $z21 = virtualinvoke r160.<java.lang.String: boolean equals(java.lang.Object)>("android.intent.action.PACKAGE_CHANGED");

        if $z21 == 0 goto label091;

        b53 = 4;

        goto label100;

     label095:
        $z22 = virtualinvoke r160.<java.lang.String: boolean equals(java.lang.Object)>("android.intent.action.PACKAGES_SUSPENDED");

        if $z22 == 0 goto label091;

        b53 = 5;

        goto label100;

     label096:
        $z23 = virtualinvoke r160.<java.lang.String: boolean equals(java.lang.Object)>("android.intent.action.EXTERNAL_APPLICATIONS_AVAILABLE");

        if $z23 == 0 goto label091;

        b53 = 2;

        goto label100;

     label097:
        $z24 = virtualinvoke r160.<java.lang.String: boolean equals(java.lang.Object)>("android.intent.action.EXTERNAL_APPLICATIONS_UNAVAILABLE");

        if $z24 == 0 goto label091;

        b53 = 1;

        goto label100;

     label098:
        $z25 = virtualinvoke r160.<java.lang.String: boolean equals(java.lang.Object)>("android.intent.action.UID_REMOVED");

        if $z25 == 0 goto label091;

        b53 = 0;

        goto label100;

     label099:
        b53 = -1;

     label100:
        tableswitch(b53)
        {
            case 0: goto label123;
            case 1: goto label119;
            case 2: goto label118;
            case 3: goto label103;
            case 4: goto label103;
            case 5: goto label102;
            case 6: goto label102;
            default: goto label101;
        };

     label101:
        goto label125;

     label102:
        $r93 = "android.intent.action.PACKAGES_SUSPENDED";

        $r94 = virtualinvoke r242.<android.content.Intent: java.lang.String getAction()>();

        z61 = virtualinvoke $r93.<java.lang.String: boolean equals(java.lang.Object)>($r94);

        r191 = virtualinvoke r242.<android.content.Intent: java.lang.String[] getStringArrayExtra(java.lang.String)>("android.intent.extra.changed_package_list");

        i56 = virtualinvoke r242.<android.content.Intent: int getIntExtra(java.lang.String,int)>("android.intent.extra.user_handle", -10000);

        $r95 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerInternal mAtmInternal>;

        virtualinvoke $r95.<com.android.server.wm.ActivityTaskManagerInternal: void onPackagesSuspendedChanged(java.lang.String[],boolean,int)>(r191, z61, i56);

        goto label125;

     label103:
        r192 = virtualinvoke r242.<android.content.Intent: android.net.Uri getData()>();

        if r192 == null goto label117;

        r193 = virtualinvoke r192.<android.net.Uri: java.lang.String getSchemeSpecificPart()>();

        if r193 == null goto label116;

        $r96 = "android.intent.action.PACKAGE_REMOVED";

        z4 = virtualinvoke $r96.<java.lang.String: boolean equals(java.lang.Object)>(r160);

        z62 = virtualinvoke r242.<android.content.Intent: boolean getBooleanExtra(java.lang.String,boolean)>("android.intent.extra.REPLACING", 0);

        $z18 = virtualinvoke r242.<android.content.Intent: boolean getBooleanExtra(java.lang.String,boolean)>("android.intent.extra.DONT_KILL_APP", 0);

        z63 = $z18 ^ 1;

        if z4 == 0 goto label104;

        if z62 != 0 goto label104;

        z64 = 1;

        goto label105;

     label104:
        z64 = 0;

     label105:
        if z4 == 0 goto label113;

        if z63 == 0 goto label108;

        $i28 = virtualinvoke r242.<android.content.Intent: int getIntExtra(java.lang.String,int)>("android.intent.extra.UID", -1);

        i57 = staticinvoke <android.os.UserHandle: int getAppId(int)>($i28);

        if z4 == 0 goto label106;

        r194 = "pkg removed";

        goto label107;

     label106:
        r194 = "pkg changed";

     label107:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean forceStopPackageLocked(java.lang.String,int,boolean,boolean,boolean,boolean,boolean,int,java.lang.String)>(r193, i57, 0, 1, 1, 0, z64, i45, r194);

        goto label109;

     label108:
        $i25 = virtualinvoke r242.<android.content.Intent: int getIntExtra(java.lang.String,int)>("android.intent.extra.UID", -1);

        $i26 = staticinvoke <android.os.UserHandle: int getAppId(int)>($i25);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void forceStopAppZygoteLocked(java.lang.String,int,int)>(r193, $i26, i45);

     label109:
        if z63 == 0 goto label110;

        i59 = 0;

        goto label111;

     label110:
        i59 = 2;

     label111:
        $r100 = newarray (java.lang.String)[1];

        $r100[0] = r193;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void sendPackageBroadcastLocked(int,java.lang.String[],int)>(i59, $r100, i45);

        if z64 == 0 goto label112;

        $r101 = r0.<com.android.server.am.ActivityManagerService: com.android.server.appop.AppOpsService mAppOpsService>;

        $i27 = virtualinvoke r242.<android.content.Intent: int getIntExtra(java.lang.String,int)>("android.intent.extra.UID", -1);

        virtualinvoke $r101.<com.android.server.appop.AppOpsService: void packageRemoved(int,java.lang.String)>($i27, r193);

        $r102 = r0.<com.android.server.am.ActivityManagerService: com.android.server.uri.UriGrantsManagerInternal mUgmInternal>;

        interfaceinvoke $r102.<com.android.server.uri.UriGrantsManagerInternal: void removeUriPermissionsForPackage(java.lang.String,int,boolean,boolean)>(r193, i45, 1, 0);

        $r103 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerInternal mAtmInternal>;

        virtualinvoke $r103.<com.android.server.wm.ActivityTaskManagerInternal: void removeRecentTasksByPackageName(java.lang.String,int)>(r193, i45);

        $r104 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveServices mServices>;

        virtualinvoke $r104.<com.android.server.am.ActiveServices: void forceStopPackageLocked(java.lang.String,int)>(r193, i45);

        $r105 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerInternal mAtmInternal>;

        virtualinvoke $r105.<com.android.server.wm.ActivityTaskManagerInternal: void onPackageUninstalled(java.lang.String)>(r193);

        $r106 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        virtualinvoke $r106.<com.android.server.am.BatteryStatsService: void notePackageUninstalled(java.lang.String)>(r193);

     label112:
        goto label115;

     label113:
        if z63 == 0 goto label114;

        i60 = virtualinvoke r242.<android.content.Intent: int getIntExtra(java.lang.String,int)>("android.intent.extra.UID", -1);

        r196 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        i61 = staticinvoke <android.os.UserHandle: int getAppId(int)>(i60);

        r259 = new java.lang.StringBuilder;

        specialinvoke r259.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r259.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("change ");

        virtualinvoke r259.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r193);

        $r99 = virtualinvoke r259.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r196.<com.android.server.am.ProcessList: boolean killPackageProcessesLocked(java.lang.String,int,int,int,int,int,java.lang.String)>(r193, i61, i45, -10000, 10, 0, $r99);

     label114:
        $r97 = virtualinvoke r242.<android.content.Intent: java.lang.String[] getStringArrayExtra(java.lang.String)>("android.intent.extra.changed_component_name_list");

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void cleanupDisabledPackageComponentsLocked(java.lang.String,int,java.lang.String[])>(r193, i45, $r97);

     label115:
        i46 = i45;

        goto label125;

     label116:
        goto label125;

     label117:
        goto label125;

     label118:
        $r107 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerInternal mAtmInternal>;

        virtualinvoke $r107.<com.android.server.wm.ActivityTaskManagerInternal: void cleanupRecentTasksForUser(int)>(-1);

        goto label125;

     label119:
        r198 = virtualinvoke r242.<android.content.Intent: java.lang.String[] getStringArrayExtra(java.lang.String)>("android.intent.extra.changed_package_list");

        if r198 == null goto label122;

        $i29 = lengthof r198;

        if $i29 <= 0 goto label122;

        i62 = 0;

     label120:
        $i30 = lengthof r198;

        if i62 >= $i30 goto label121;

        $r108 = r198[i62];

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean forceStopPackageLocked(java.lang.String,int,boolean,boolean,boolean,boolean,boolean,int,java.lang.String)>($r108, -1, 0, 1, 1, 0, 0, i45, "storage unmount");

        i62 = i62 + 1;

        goto label120;

     label121:
        r199 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerInternal mAtmInternal>;

        virtualinvoke r199.<com.android.server.wm.ActivityTaskManagerInternal: void cleanupRecentTasksForUser(int)>(-1);

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void sendPackageBroadcastLocked(int,java.lang.String[],int)>(1, r198, i45);

        goto label125;

     label122:
        goto label125;

     label123:
        i63 = specialinvoke r0.<com.android.server.am.ActivityManagerService: int getUidFromIntent(android.content.Intent)>(r242);

        if i63 < 0 goto label125;

        $r109 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        virtualinvoke $r109.<com.android.server.am.BatteryStatsService: void removeUid(int)>(i63);

        $z19 = virtualinvoke r242.<android.content.Intent: boolean getBooleanExtra(java.lang.String,boolean)>("android.intent.extra.REPLACING", 0);

        if $z19 == 0 goto label124;

        $r111 = r0.<com.android.server.am.ActivityManagerService: com.android.server.appop.AppOpsService mAppOpsService>;

        $i31 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i63);

        $r112 = virtualinvoke r242.<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>("android.intent.extra.PACKAGE_NAME");

        virtualinvoke $r111.<com.android.server.appop.AppOpsService: void resetAllModes(int,java.lang.String)>($i31, $r112);

        goto label125;

     label124:
        $r110 = r0.<com.android.server.am.ActivityManagerService: com.android.server.appop.AppOpsService mAppOpsService>;

        virtualinvoke $r110.<com.android.server.appop.AppOpsService: void uidRemoved(int)>(i63);

        goto label125;

     label125:
        z59 = 0;

        goto label127;

     label126:
        r260 = new java.lang.StringBuilder;

        specialinvoke r260.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r260.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: ");

        $r91 = virtualinvoke r242.<android.content.Intent: java.lang.String getAction()>();

        virtualinvoke r260.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r91);

        virtualinvoke r260.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" broadcast from ");

        virtualinvoke r260.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r151);

        virtualinvoke r260.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (pid=");

        virtualinvoke r260.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        virtualinvoke r260.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        virtualinvoke r260.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        virtualinvoke r260.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") requires ");

        virtualinvoke r260.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.BROADCAST_PACKAGE_REMOVED");

        r201 = virtualinvoke r260.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r201);

        r261 = new java.lang.SecurityException;

        specialinvoke r261.<java.lang.SecurityException: void <init>(java.lang.String)>(r201);

        throw r261;

     label127:
        $r202 = "android.intent.action.PACKAGE_ADDED";

        $z65 = virtualinvoke $r202.<java.lang.String: boolean equals(java.lang.Object)>(r160);

        if $z65 != 0 goto label128;

        $r70 = "android.intent.action.PACKAGE_REMOVED";

        $z15 = virtualinvoke $r70.<java.lang.String: boolean equals(java.lang.Object)>(r160);

        if $z15 != 0 goto label128;

        $r71 = "android.intent.action.PACKAGE_REPLACED";

        $z16 = virtualinvoke $r71.<java.lang.String: boolean equals(java.lang.Object)>(r160);

        if $z16 == 0 goto label129;

     label128:
        i64 = specialinvoke r0.<com.android.server.am.ActivityManagerService: int getUidFromIntent(android.content.Intent)>(r242);

        if i64 == -1 goto label129;

        $r69 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        r203 = virtualinvoke $r69.<com.android.server.am.ProcessList: com.android.server.am.UidRecord getUidRecordLocked(int)>(i64);

        if r203 == null goto label129;

        virtualinvoke r203.<com.android.server.am.UidRecord: void updateHasInternetPermission()>();

     label129:
        r204 = r242;

        goto label131;

     label130:
        z59 = 0;

        r204 = r242;

     label131:
        if z1 == 0 goto label143;

        $i20 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkPermission(java.lang.String,int,int)>("android.permission.BROADCAST_STICKY", i2, i3);

        if $i20 != 0 goto label142;

        if r6 == null goto label132;

        $i21 = lengthof r6;

        if $i21 <= 0 goto label132;

        r262 = new java.lang.StringBuilder;

        specialinvoke r262.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r262.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t broadcast sticky intent ");

        virtualinvoke r262.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r204);

        virtualinvoke r262.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and enforce permissions ");

        $r66 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(r6);

        virtualinvoke r262.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r66);

        $r67 = virtualinvoke r262.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r67);

        return -1;

     label132:
        $r44 = virtualinvoke r204.<android.content.Intent: android.content.ComponentName getComponent()>();

        if $r44 != null goto label141;

        if i46 == -1 goto label135;

        $r56 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mStickyBroadcasts>;

        $r57 = virtualinvoke $r56.<android.util.SparseArray: java.lang.Object get(int)>(-1);

        r206 = (android.util.ArrayMap) $r57;

        if r206 == null goto label135;

        $r58 = virtualinvoke r204.<android.content.Intent: java.lang.String getAction()>();

        $r59 = virtualinvoke r206.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r58);

        r207 = (java.util.ArrayList) $r59;

        if r207 == null goto label135;

        i66 = virtualinvoke r207.<java.util.ArrayList: int size()>();

        i67 = 0;

     label133:
        if i67 >= i66 goto label135;

        $r60 = virtualinvoke r207.<java.util.ArrayList: java.lang.Object get(int)>(i67);

        $r61 = (android.content.Intent) $r60;

        $z12 = virtualinvoke r204.<android.content.Intent: boolean filterEquals(android.content.Intent)>($r61);

        if $z12 != 0 goto label134;

        i67 = i67 + 1;

        goto label133;

     label134:
        r263 = new java.lang.StringBuilder;

        specialinvoke r263.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r263.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Sticky broadcast ");

        virtualinvoke r263.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r204);

        virtualinvoke r263.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for user ");

        virtualinvoke r263.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i46);

        virtualinvoke r263.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" conflicts with existing global broadcast");

        r264 = new java.lang.IllegalArgumentException;

        $r64 = virtualinvoke r263.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r264.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r64);

        throw r264;

     label135:
        $r209 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mStickyBroadcasts>;

        $r210 = virtualinvoke $r209.<android.util.SparseArray: java.lang.Object get(int)>(i46);

        r211 = (android.util.ArrayMap) $r210;

        r212 = r211;

        if r211 != null goto label136;

        r265 = new android.util.ArrayMap;

        specialinvoke r265.<android.util.ArrayMap: void <init>()>();

        r212 = r265;

        $r55 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mStickyBroadcasts>;

        virtualinvoke $r55.<android.util.SparseArray: void put(int,java.lang.Object)>(i46, r265);

     label136:
        $r46 = virtualinvoke r204.<android.content.Intent: java.lang.String getAction()>();

        $r47 = virtualinvoke r212.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r46);

        r213 = (java.util.ArrayList) $r47;

        r214 = r213;

        if r213 != null goto label137;

        r266 = new java.util.ArrayList;

        specialinvoke r266.<java.util.ArrayList: void <init>()>();

        r214 = r266;

        $r53 = virtualinvoke r204.<android.content.Intent: java.lang.String getAction()>();

        virtualinvoke r212.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r53, r266);

     label137:
        i68 = virtualinvoke r214.<java.util.ArrayList: int size()>();

        i69 = 0;

     label138:
        if i69 >= i68 goto label140;

        $r49 = virtualinvoke r214.<java.util.ArrayList: java.lang.Object get(int)>(i69);

        $r50 = (android.content.Intent) $r49;

        $z11 = virtualinvoke r204.<android.content.Intent: boolean filterEquals(android.content.Intent)>($r50);

        if $z11 == 0 goto label139;

        r267 = new android.content.Intent;

        specialinvoke r267.<android.content.Intent: void <init>(android.content.Intent)>(r204);

        virtualinvoke r214.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>(i69, r267);

        goto label140;

     label139:
        i69 = i69 + 1;

        goto label138;

     label140:
        if i69 < i68 goto label143;

        r268 = new android.content.Intent;

        specialinvoke r268.<android.content.Intent: void <init>(android.content.Intent)>(r204);

        virtualinvoke r214.<java.util.ArrayList: boolean add(java.lang.Object)>(r268);

        goto label143;

     label141:
        r269 = new java.lang.SecurityException;

        specialinvoke r269.<java.lang.SecurityException: void <init>(java.lang.String)>("Sticky broadcasts can\'t target a specific component");

        throw r269;

     label142:
        r270 = new java.lang.StringBuilder;

        specialinvoke r270.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r270.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: broadcastIntent() requesting a sticky broadcast from pid=");

        virtualinvoke r270.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        virtualinvoke r270.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        virtualinvoke r270.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        virtualinvoke r270.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires ");

        virtualinvoke r270.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.BROADCAST_STICKY");

        r216 = virtualinvoke r270.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r216);

        r271 = new java.lang.SecurityException;

        specialinvoke r271.<java.lang.SecurityException: void <init>(java.lang.String)>(r216);

        throw r271;

     label143:
        if i46 != -1 goto label144;

        $r41 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.UserController mUserController>;

        r217 = virtualinvoke $r41.<com.android.server.am.UserController: int[] getStartedUserArray()>();

        goto label145;

     label144:
        r217 = newarray (int)[1];

        i85 = (int) 0;

        r217[i85] = i46;

     label145:
        r218 = null;

        $i5 = virtualinvoke r204.<android.content.Intent: int getFlags()>();

        $i6 = $i5 & 1073741824;

        if $i6 != 0 goto label146;

        r218 = specialinvoke r0.<com.android.server.am.ActivityManagerService: java.util.List collectReceiverComponents(android.content.Intent,java.lang.String,int,int[],int[])>(r204, r2, i3, r217, r156);

        goto label146;

     label146:
        $r8 = virtualinvoke r204.<android.content.Intent: android.content.ComponentName getComponent()>();

        if $r8 != null goto label153;

        if i46 != -1 goto label152;

        if i3 != 2000 goto label152;

        i70 = 0;

        r219 = r217;

        r220 = null;

     label147:
        $i17 = lengthof r219;

        if i70 >= $i17 goto label151;

        $r39 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.UserController mUserController>;

        $i18 = r219[i70];

        $z10 = virtualinvoke $r39.<com.android.server.am.UserController: boolean hasUserRestriction(java.lang.String,int)>("no_debugging_features", $i18);

        if $z10 == 0 goto label148;

        r221 = r220;

        goto label150;

     label148:
        $r40 = r0.<com.android.server.am.ActivityManagerService: com.android.server.IntentResolver mReceiverResolver>;

        $i19 = r219[i70];

        r222 = virtualinvoke $r40.<com.android.server.IntentResolver: java.util.List queryIntent(android.content.Intent,java.lang.String,boolean,int)>(r204, r2, 0, $i19);

        if r220 != null goto label149;

        r221 = r222;

        goto label150;

     label149:
        r221 = r220;

        if r222 == null goto label150;

        interfaceinvoke r220.<java.util.List: boolean addAll(java.util.Collection)>(r222);

        r221 = r220;

     label150:
        i70 = i70 + 1;

        r220 = r221;

        goto label147;

     label151:
        goto label154;

     label152:
        $r38 = r0.<com.android.server.am.ActivityManagerService: com.android.server.IntentResolver mReceiverResolver>;

        r220 = virtualinvoke $r38.<com.android.server.IntentResolver: java.util.List queryIntent(android.content.Intent,java.lang.String,boolean,int)>(r204, r2, 0, i46);

        goto label154;

     label153:
        r220 = null;

     label154:
        $i71 = virtualinvoke r204.<android.content.Intent: int getFlags()>();

        $i72 = $i71 & 536870912;

        if $i72 == 0 goto label155;

        z68 = (boolean) 1;

        z66 = z68;

        goto label156;

     label155:
        z66 = 0;

     label156:
        if r220 == null goto label159;

        if r156 == null goto label159;

        $i14 = interfaceinvoke r220.<java.util.List: int size()>();

        i73 = $i14 - 1;

     label157:
        if i73 < 0 goto label159;

        $r36 = interfaceinvoke r220.<java.util.List: java.lang.Object get(int)>(i73);

        $r37 = (com.android.server.am.BroadcastFilter) $r36;

        $i15 = $r37.<com.android.server.am.BroadcastFilter: int owningUid>;

        i74 = staticinvoke <android.os.UserHandle: int getAppId(int)>($i15);

        if i74 < 10000 goto label158;

        $i16 = staticinvoke <java.util.Arrays: int binarySearch(int[],int)>(r156, i74);

        if $i16 >= 0 goto label158;

        interfaceinvoke r220.<java.util.List: java.lang.Object remove(int)>(i73);

     label158:
        i73 = i73 + -1;

        goto label157;

     label159:
        if r220 == null goto label160;

        i75 = interfaceinvoke r220.<java.util.List: int size()>();

        goto label161;

     label160:
        i87 = (int) 0;

        i75 = i87;

     label161:
        if z0 != 0 goto label166;

        if i75 <= 0 goto label166;

        if z57 == 0 goto label162;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void checkBroadcastFromSystem(android.content.Intent,com.android.server.am.ProcessRecord,java.lang.String,int,boolean,java.util.List)>(r204, r150, r151, i3, z3, r220);

        goto label162;

     label162:
        r223 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastQueue broadcastQueueForIntent(android.content.Intent)>(r204);

        r272 = new com.android.server.am.BroadcastRecord;

        specialinvoke r272.<com.android.server.am.BroadcastRecord: void <init>(com.android.server.am.BroadcastQueue,android.content.Intent,com.android.server.am.ProcessRecord,java.lang.String,java.lang.String,int,int,boolean,java.lang.String,java.lang.String[],int,android.app.BroadcastOptions,java.util.List,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,boolean,boolean,boolean,int,boolean,boolean)>(r223, r204, r150, r151, r1, i2, i3, z2, r2, r6, i1, r166, r220, r3, i0, r4, r5, z0, z1, 0, i46, z53, z59);

        if z66 == 0 goto label163;

        $r35 = virtualinvoke r223.<com.android.server.am.BroadcastQueue: com.android.server.am.BroadcastRecord replaceParallelBroadcastLocked(com.android.server.am.BroadcastRecord)>(r272);

        if $r35 == null goto label163;

        z70 = (boolean) 1;

        z67 = z70;

        goto label164;

     label163:
        z67 = 0;

     label164:
        if z67 != 0 goto label165;

        virtualinvoke r223.<com.android.server.am.BroadcastQueue: void enqueueParallelBroadcastLocked(com.android.server.am.BroadcastRecord)>(r272);

        virtualinvoke r223.<com.android.server.am.BroadcastQueue: void scheduleBroadcastsLocked()>();

     label165:
        r225 = null;

        i75 = 0;

        goto label167;

     label166:
        r225 = r220;

     label167:
        if r218 == null goto label183;

        $r20 = "android.intent.action.PACKAGE_ADDED";

        $r21 = virtualinvoke r204.<android.content.Intent: java.lang.String getAction()>();

        $z5 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>($r21);

        if $z5 != 0 goto label169;

        $r28 = "android.intent.action.PACKAGE_RESTARTED";

        $r29 = virtualinvoke r204.<android.content.Intent: java.lang.String getAction()>();

        $z7 = virtualinvoke $r28.<java.lang.String: boolean equals(java.lang.Object)>($r29);

        if $z7 != 0 goto label169;

        $r30 = "android.intent.action.PACKAGE_DATA_CLEARED";

        $r31 = virtualinvoke r204.<android.content.Intent: java.lang.String getAction()>();

        $z8 = virtualinvoke $r30.<java.lang.String: boolean equals(java.lang.Object)>($r31);

        if $z8 == 0 goto label168;

        goto label169;

     label168:
        r226 = null;

        $r32 = "android.intent.action.EXTERNAL_APPLICATIONS_AVAILABLE";

        $r33 = virtualinvoke r204.<android.content.Intent: java.lang.String getAction()>();

        $z9 = virtualinvoke $r32.<java.lang.String: boolean equals(java.lang.Object)>($r33);

        if $z9 == 0 goto label170;

        r226 = virtualinvoke r204.<android.content.Intent: java.lang.String[] getStringArrayExtra(java.lang.String)>("android.intent.extra.changed_package_list");

        goto label170;

     label169:
        r227 = virtualinvoke r204.<android.content.Intent: android.net.Uri getData()>();

        r226 = null;

        if r227 == null goto label170;

        r228 = virtualinvoke r227.<android.net.Uri: java.lang.String getSchemeSpecificPart()>();

        r226 = null;

        if r228 == null goto label170;

        r226 = newarray (java.lang.String)[1];

        i89 = (int) 0;

        r226[i89] = r228;

     label170:
        if r226 == null goto label175;

        $i13 = lengthof r226;

        if $i13 <= 0 goto label175;

        i4 = lengthof r226;

        i90 = (int) 0;

        i76 = i90;

     label171:
        if i76 >= i4 goto label175;

        r229 = r226[i76];

        if r229 == null goto label174;

        r276 = (java.util.List) r218;

        i77 = interfaceinvoke r276.<java.util.List: int size()>();

        i78 = 0;

     label172:
        if i78 >= i77 goto label174;

        i79 = i77;

        i80 = i78;

        r277 = (java.util.List) r218;

        $r24 = interfaceinvoke r277.<java.util.List: java.lang.Object get(int)>(i78);

        $r25 = (android.content.pm.ResolveInfo) $r24;

        $r26 = $r25.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r27 = $r26.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $z6 = virtualinvoke $r27.<java.lang.String: boolean equals(java.lang.Object)>(r229);

        if $z6 == 0 goto label173;

        r278 = (java.util.List) r218;

        interfaceinvoke r278.<java.util.List: java.lang.Object remove(int)>(i78);

        i80 = i78 - 1;

        i79 = i77 - 1;

     label173:
        i78 = i80 + 1;

        i77 = i79;

        goto label172;

     label174:
        i76 = i76 + 1;

        goto label171;

     label175:
        if r218 == null goto label176;

        r279 = (java.util.List) r218;

        i81 = interfaceinvoke r279.<java.util.List: int size()>();

        goto label177;

     label176:
        i81 = 0;

     label177:
        i82 = 0;

        r230 = null;

        r231 = null;

        i83 = i81;

        i84 = 0;

     label178:
        if i82 >= i83 goto label182;

        if i84 >= i75 goto label182;

        r232 = r230;

        if r230 != null goto label179;

        r280 = (java.util.List) r218;

        $r23 = interfaceinvoke r280.<java.util.List: java.lang.Object get(int)>(i82);

        r232 = (android.content.pm.ResolveInfo) $r23;

     label179:
        r233 = r231;

        if r231 != null goto label180;

        $r22 = interfaceinvoke r225.<java.util.List: java.lang.Object get(int)>(i84);

        r233 = (com.android.server.am.BroadcastFilter) $r22;

     label180:
        $i11 = virtualinvoke r233.<com.android.server.am.BroadcastFilter: int getPriority()>();

        $i12 = r232.<android.content.pm.ResolveInfo: int priority>;

        if $i11 < $i12 goto label181;

        r281 = (java.util.List) r218;

        interfaceinvoke r281.<java.util.List: void add(int,java.lang.Object)>(i82, r233);

        i84 = i84 + 1;

        r231 = null;

        i82 = i82 + 1;

        i83 = i83 + 1;

        r230 = r232;

        goto label178;

     label181:
        i82 = i82 + 1;

        r230 = null;

        r231 = r233;

        goto label178;

     label182:
        goto label184;

     label183:
        i84 = 0;

     label184:
        if i84 >= i75 goto label186;

        r234 = r218;

        if r218 != null goto label185;

        r273 = new java.util.ArrayList;

        specialinvoke r273.<java.util.ArrayList: void <init>()>();

        r234 = r273;

     label185:
        $r18 = interfaceinvoke r225.<java.util.List: java.lang.Object get(int)>(i84);

        r282 = (java.util.List) r234;

        interfaceinvoke r282.<java.util.List: boolean add(java.lang.Object)>($r18);

        i84 = i84 + 1;

        r218 = r234;

        goto label184;

     label186:
        if z57 == 0 goto label187;

        r283 = (java.util.List) r218;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void checkBroadcastFromSystem(android.content.Intent,com.android.server.am.ProcessRecord,java.lang.String,int,boolean,java.util.List)>(r204, r150, r151, i3, z3, r283);

        goto label187;

     label187:
        if r218 == null goto label188;

        r284 = (java.util.List) r218;

        $i10 = interfaceinvoke r284.<java.util.List: int size()>();

        if $i10 > 0 goto label189;

     label188:
        if r3 == null goto label198;

     label189:
        r235 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastQueue broadcastQueueForIntent(android.content.Intent)>(r204);

        r274 = new com.android.server.am.BroadcastRecord;

        r285 = (java.util.List) r218;

        specialinvoke r274.<com.android.server.am.BroadcastRecord: void <init>(com.android.server.am.BroadcastQueue,android.content.Intent,com.android.server.am.ProcessRecord,java.lang.String,java.lang.String,int,int,boolean,java.lang.String,java.lang.String[],int,android.app.BroadcastOptions,java.util.List,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,boolean,boolean,boolean,int,boolean,boolean)>(r235, r204, r150, r151, r1, i2, i3, z2, r2, r6, i1, r166, r285, r3, i0, r4, r5, z0, z1, 0, i46, z53, z59);

        if z66 == 0 goto label190;

        r237 = virtualinvoke r235.<com.android.server.am.BroadcastQueue: com.android.server.am.BroadcastRecord replaceOrderedBroadcastLocked(com.android.server.am.BroadcastRecord)>(r274);

        goto label191;

     label190:
        r237 = null;

     label191:
        if r237 == null goto label196;

        $r13 = r237.<com.android.server.am.BroadcastRecord: android.content.IIntentReceiver resultTo>;

        if $r13 == null goto label197;

        $r14 = r237.<com.android.server.am.BroadcastRecord: android.content.Intent intent>;

        r238 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastQueue broadcastQueueForIntent(android.content.Intent)>($r14);

     label192:
        $r17 = r237.<com.android.server.am.BroadcastRecord: com.android.server.am.ProcessRecord callerApp>;

        $r16 = r237.<com.android.server.am.BroadcastRecord: android.content.IIntentReceiver resultTo>;

        $r15 = r237.<com.android.server.am.BroadcastRecord: android.content.Intent intent>;

        $i9 = r237.<com.android.server.am.BroadcastRecord: int userId>;

        virtualinvoke r238.<com.android.server.am.BroadcastQueue: void performReceiveLocked(com.android.server.am.ProcessRecord,android.content.IIntentReceiver,android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int)>($r17, $r16, $r15, 0, null, null, 0, 0, $i9);

     label193:
        goto label195;

     label194:
        $r142 := @caughtexception;

        r275 = new java.lang.StringBuilder;

        specialinvoke r275.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r275.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure [");

        $r144 = r235.<com.android.server.am.BroadcastQueue: java.lang.String mQueueName>;

        virtualinvoke r275.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r144);

        virtualinvoke r275.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] sending broadcast result of ");

        virtualinvoke r275.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r204);

        $r145 = virtualinvoke r275.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r145, $r142);

     label195:
        goto label197;

     label196:
        virtualinvoke r235.<com.android.server.am.BroadcastQueue: void enqueueOrderedBroadcastLocked(com.android.server.am.BroadcastRecord)>(r274);

        virtualinvoke r235.<com.android.server.am.BroadcastQueue: void scheduleBroadcastsLocked()>();

     label197:
        goto label200;

     label198:
        $r9 = virtualinvoke r204.<android.content.Intent: android.content.ComponentName getComponent()>();

        if $r9 != null goto label200;

        $r10 = virtualinvoke r204.<android.content.Intent: java.lang.String getPackage()>();

        if $r10 != null goto label200;

        $i7 = virtualinvoke r204.<android.content.Intent: int getFlags()>();

        $i8 = $i7 & 1073741824;

        if $i8 != 0 goto label199;

        $r11 = virtualinvoke r204.<android.content.Intent: java.lang.String getAction()>();

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void addBroadcastStatLocked(java.lang.String,java.lang.String,int,int,long)>($r11, r151, 0, 0, 0L);

        goto label200;

     label199:
        goto label200;

     label200:
        return 0;

     label201:
        $r146 := @caughtexception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", "Remote exception", $r146);

        return 0;

        catch android.os.RemoteException from label016 to label017 with label201;
        catch java.lang.Throwable from label061 to label062 with label063;
        catch java.lang.Throwable from label064 to label065 with label063;
        catch android.os.RemoteException from label071 to label072 with label078;
        catch android.os.RemoteException from label073 to label074 with label078;
        catch android.os.RemoteException from label076 to label077 with label078;
        catch android.os.RemoteException from label083 to label084 with label085;
        catch android.os.RemoteException from label192 to label193 with label194;
    }

    public final int broadcastIntentWithFeature(android.app.IApplicationThread, java.lang.String, android.content.Intent, java.lang.String, android.content.IIntentReceiver, int, java.lang.String, android.os.Bundle, java.lang.String[], int, android.os.Bundle, boolean, boolean, int)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1, r2, r4, r18;
        android.content.IIntentReceiver r3;
        android.os.Bundle r5, r7;
        java.lang.String[] r6;
        int i0, i1, i2, i3, i5, i6;
        boolean z0, z1;
        com.android.server.am.ProcessRecord r8;
        long l4;
        android.content.pm.ApplicationInfo $r9;
        java.lang.Throwable $r10, $r11, $r12, $r13, $r14, r19, r20;
        android.app.IApplicationThread r15;
        android.content.Intent r16, r17;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r15 := @parameter0: android.app.IApplicationThread;

        r1 := @parameter1: java.lang.String;

        r16 := @parameter2: android.content.Intent;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: android.content.IIntentReceiver;

        i5 := @parameter5: int;

        r4 := @parameter6: java.lang.String;

        r5 := @parameter7: android.os.Bundle;

        r6 := @parameter8: java.lang.String[];

        i0 := @parameter9: int;

        r7 := @parameter10: android.os.Bundle;

        z0 := @parameter11: boolean;

        z1 := @parameter12: boolean;

        i1 := @parameter13: int;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("broadcastIntent");

        entermonitor r0;

     label01:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

     label02:
        r17 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: android.content.Intent verifyBroadcastLocked(android.content.Intent)>(r16);

     label03:
        r8 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord getRecordForAppLocked(android.app.IApplicationThread)>(r15);

        i2 = staticinvoke <android.os.Binder: int getCallingPid()>();

        i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        l4 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label04:
        if r8 == null goto label08;

     label05:
        $r9 = r8.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        r18 = $r9.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

     label06:
        goto label09;

     label07:
        $r14 := @caughtexception;

        r19 = $r14;

        goto label13;

     label08:
        r18 = null;

     label09:
        i6 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int broadcastIntentLocked(com.android.server.am.ProcessRecord,java.lang.String,java.lang.String,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String[],int,android.os.Bundle,boolean,boolean,int,int,int,int,int)>(r8, r18, r1, r17, r2, r3, i5, r4, r5, r6, i0, r7, z0, z1, i2, i3, i3, i2, i1);

     label10:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l4);

        exitmonitor r0;

     label11:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return i6;

     label12:
        $r10 := @caughtexception;

        r19 = $r10;

     label13:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l4);

     label14:
        throw r19;

     label15:
        $r11 := @caughtexception;

        r20 = $r11;

        goto label17;

     label16:
        $r12 := @caughtexception;

        r20 = $r12;

     label17:
        exitmonitor r0;

     label18:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw r20;

     label19:
        $r13 := @caughtexception;

        r20 = $r13;

        goto label17;

        catch java.lang.Throwable from label01 to label02 with label16;
        catch java.lang.Throwable from label02 to label03 with label15;
        catch java.lang.Throwable from label03 to label04 with label19;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label09 to label10 with label12;
        catch java.lang.Throwable from label10 to label11 with label19;
        catch java.lang.Throwable from label13 to label14 with label19;
        catch java.lang.Throwable from label14 to label15 with label19;
        catch java.lang.Throwable from label17 to label18 with label19;
    }

    com.android.server.am.BroadcastQueue broadcastQueueForIntent(android.content.Intent)
    {
        com.android.server.am.ActivityManagerService r0;
        int $i0, $i1, $i2;
        boolean $z0, z1;
        com.android.server.am.BroadcastQueue $r1, r3;
        android.content.Intent r2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r2 := @parameter0: android.content.Intent;

        $i0 = virtualinvoke r2.<android.content.Intent: int getFlags()>();

        $z0 = specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean isOnOffloadQueue(int)>($i0);

        if $z0 == 0 goto label1;

        $r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastQueue mOffloadBroadcastQueue>;

        return $r1;

     label1:
        $i1 = virtualinvoke r2.<android.content.Intent: int getFlags()>();

        $i2 = $i1 & 268435456;

        if $i2 == 0 goto label2;

        z1 = 1;

        goto label3;

     label2:
        z1 = 0;

     label3:
        if z1 == 0 goto label4;

        r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastQueue mFgBroadcastQueue>;

        goto label5;

     label4:
        r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastQueue mBgBroadcastQueue>;

     label5:
        return r3;
    }

    final void cameraActiveChanged(int, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1;
        boolean z0;
        android.util.IntArray r1, $r3, $r4, $r5;
        java.lang.Throwable $r6;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 = r0.<com.android.server.am.ActivityManagerService: android.util.IntArray mActiveCameraUids>;

        entermonitor r1;

     label01:
        $r3 = r0.<com.android.server.am.ActivityManagerService: android.util.IntArray mActiveCameraUids>;

        i1 = virtualinvoke $r3.<android.util.IntArray: int indexOf(int)>(i0);

     label02:
        if z0 == 0 goto label05;

        if i1 >= 0 goto label07;

     label03:
        $r5 = r0.<com.android.server.am.ActivityManagerService: android.util.IntArray mActiveCameraUids>;

        virtualinvoke $r5.<android.util.IntArray: void add(int)>(i0);

     label04:
        goto label07;

     label05:
        if i1 < 0 goto label07;

     label06:
        $r4 = r0.<com.android.server.am.ActivityManagerService: android.util.IntArray mActiveCameraUids>;

        virtualinvoke $r4.<android.util.IntArray: void remove(int)>(i1);

     label07:
        exitmonitor r1;

     label08:
        return;

     label09:
        $r6 := @caughtexception;

     label10:
        exitmonitor r1;

     label11:
        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public void cancelIntentSender(android.content.IIntentSender)
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.IIntentSender r1;
        com.android.server.am.PendingIntentController $r2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.content.IIntentSender;

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.PendingIntentController mPendingIntentController>;

        virtualinvoke $r2.<com.android.server.am.PendingIntentController: void cancelIntentSender(android.content.IIntentSender)>(r1);

        return;
    }

    public void cancelRecentsAnimation(boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        boolean z0;
        com.android.server.wm.ActivityTaskManagerService $r1;

        r0 := @this: com.android.server.am.ActivityManagerService;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerService mActivityTaskManager>;

        virtualinvoke $r1.<com.android.server.wm.ActivityTaskManagerService: void cancelRecentsAnimation(boolean)>(z0);

        return;
    }

    public void cancelTaskWindowTransition(int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0;
        com.android.server.wm.ActivityTaskManagerService $r1;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerService mActivityTaskManager>;

        virtualinvoke $r1.<com.android.server.wm.ActivityTaskManagerService: void cancelTaskWindowTransition(int)>(i0);

        return;
    }

    boolean checkAppInLaunchingProvidersLocked(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1, $r6;
        java.util.ArrayList $r2, $r3;
        int $i0, i1;
        java.lang.Object $r4;
        com.android.server.am.ContentProviderRecord $r5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        $r2 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLaunchingProviders>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label3;

        $r3 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLaunchingProviders>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r5 = (com.android.server.am.ContentProviderRecord) $r4;

        $r6 = $r5.<com.android.server.am.ContentProviderRecord: com.android.server.am.ProcessRecord launchingApp>;

        if $r6 != r1 goto label2;

        return 1;

     label2:
        i1 = i1 + -1;

        goto label1;

     label3:
        return 0;
    }

    int checkCallingPermission(java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1;
        int $i0, $i1, $i2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        $i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i2 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkPermission(java.lang.String,int,int)>(r1, $i0, $i1);

        return $i2;
    }

    public java.lang.String checkContentProviderAccess(java.lang.String, int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, $i1, $i2, i3;
        android.content.pm.IPackageManager $r1;
        com.android.server.am.ActivityManagerService$PidMap $r2, r23;
        java.lang.StringBuilder $r3, $r7;
        java.lang.String $r6, $r13, r18, r26;
        android.content.Context $r14;
        java.lang.Throwable $r15, $r16;
        android.os.RemoteException $r17;
        android.content.pm.ProviderInfo r19, r20;
        com.android.server.am.ProcessRecord r24;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r18 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i3 = i0;

        if i0 != -1 goto label01;

        $r14 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        virtualinvoke $r14.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.INTERACT_ACROSS_USERS_FULL", "ActivityManager");

        i3 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

     label01:
        r19 = null;

     label02:
        $r1 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        r20 = interfaceinvoke $r1.<android.content.pm.IPackageManager: android.content.pm.ProviderInfo resolveContentProvider(java.lang.String,int,int)>(r18, 790016, i3);

     label03:
        r19 = r20;

        goto label05;

     label04:
        $r17 := @caughtexception;

     label05:
        if r19 != null goto label06;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to find provider ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for user ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; expected to find a valid ContentProvider for this authority");

        $r13 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r13;

     label06:
        r23 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        entermonitor r23;

     label07:
        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        $i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

        r24 = virtualinvoke $r2.<com.android.server.am.ActivityManagerService$PidMap: com.android.server.am.ProcessRecord get(int)>($i1);

        exitmonitor r23;

     label08:
        if r24 != null goto label09;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to find PID ");

        $i2 = staticinvoke <android.os.Binder: int getCallingPid()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;

     label09:
        entermonitor r0;

     label10:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        r26 = specialinvoke r0.<com.android.server.am.ActivityManagerService: java.lang.String checkContentProviderPermissionLocked(android.content.pm.ProviderInfo,com.android.server.am.ProcessRecord,int,boolean)>(r19, r24, i3, 1);

        exitmonitor r0;

     label11:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return r26;

     label12:
        $r15 := @caughtexception;

     label13:
        exitmonitor r0;

     label14:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r15;

     label15:
        $r16 := @caughtexception;

     label16:
        exitmonitor r23;

     label17:
        throw $r16;

        catch android.os.RemoteException from label02 to label03 with label04;
        catch java.lang.Throwable from label07 to label08 with label15;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
        catch java.lang.Throwable from label16 to label17 with label15;
    }

    int checkContentProviderUriPermission(android.net.Uri, int, int, int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, i3, i4;
        java.lang.String r1, $r9, $r15;
        long l2;
        com.android.server.wm.ActivityTaskManagerService $r2;
        com.android.server.wm.WindowManagerGlobalLock $r3;
        boolean $z0;
        android.content.IContentProvider $r4;
        java.lang.IllegalStateException $r5;
        java.lang.Throwable $r6, $r7, $r10, $r11, $r12, $r13;
        java.lang.Exception $r8;
        android.os.RemoteException $r14;
        android.net.Uri r16;
        android.app.ContentProviderHolder r17, r18, r19, r20;
        java.lang.StringBuilder r26, r28;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r16 := @parameter0: android.net.Uri;

        i0 := @parameter1: int;

        i3 := @parameter2: int;

        i1 := @parameter3: int;

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerService mActivityTaskManager>;

        $r3 = virtualinvoke $r2.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock getGlobalLock()>();

        $z0 = staticinvoke <java.lang.Thread: boolean holdsLock(java.lang.Object)>($r3);

        if $z0 == 0 goto label01;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Unable to check Uri permission because caller is holding WM lock; assuming permission denied");

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.Throwable)>("ActivityManager", $r5);

        return -1;

     label01:
        r1 = virtualinvoke r16.<android.net.Uri: java.lang.String getAuthority()>();

        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        r17 = null;

        r18 = null;

        r19 = null;

     label02:
        r20 = specialinvoke r0.<com.android.server.am.ActivityManagerService: android.app.ContentProviderHolder getContentProviderExternalUnchecked(java.lang.String,android.os.IBinder,int,java.lang.String,int)>(r1, null, i3, "*checkContentProviderUriPermission*", i0);

     label03:
        if r20 == null goto label10;

        r19 = r20;

        r17 = r20;

        r18 = r20;

     label04:
        $r4 = r20.<android.app.ContentProviderHolder: android.content.IContentProvider provider>;

        i4 = interfaceinvoke $r4.<android.content.IContentProvider: int checkUriPermission(java.lang.String,java.lang.String,android.net.Uri,int,int)>(null, null, r16, i3, i1);

     label05:
        if r20 == null goto label09;

     label06:
        specialinvoke r0.<com.android.server.am.ActivityManagerService: void removeContentProviderExternalUnchecked(java.lang.String,android.os.IBinder,int)>(r1, null, i0);

     label07:
        goto label09;

     label08:
        $r7 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw $r7;

     label09:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        return i4;

     label10:
        if r20 == null goto label14;

     label11:
        specialinvoke r0.<com.android.server.am.ActivityManagerService: void removeContentProviderExternalUnchecked(java.lang.String,android.os.IBinder,int)>(r1, null, i0);

     label12:
        goto label14;

     label13:
        $r11 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw $r11;

     label14:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        return -1;

     label15:
        $r6 := @caughtexception;

        goto label48;

     label16:
        $r8 := @caughtexception;

        goto label18;

     label17:
        $r14 := @caughtexception;

        goto label33;

     label18:
        r19 = r17;

     label19:
        r26 = new java.lang.StringBuilder;

     label20:
        r19 = r17;

     label21:
        specialinvoke r26.<java.lang.StringBuilder: void <init>()>();

     label22:
        r19 = r17;

     label23:
        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception while determining type of ");

     label24:
        r19 = r17;

     label25:
        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r16);

     label26:
        r19 = r17;

     label27:
        $r9 = virtualinvoke r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r9, $r8);

     label28:
        if r17 == null goto label32;

     label29:
        specialinvoke r0.<com.android.server.am.ActivityManagerService: void removeContentProviderExternalUnchecked(java.lang.String,android.os.IBinder,int)>(r1, null, i0);

     label30:
        goto label32;

     label31:
        $r10 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw $r10;

     label32:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        return -1;

     label33:
        r19 = r18;

     label34:
        r28 = new java.lang.StringBuilder;

     label35:
        r19 = r18;

     label36:
        specialinvoke r28.<java.lang.StringBuilder: void <init>()>();

     label37:
        r19 = r18;

     label38:
        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Content provider dead retrieving ");

     label39:
        r19 = r18;

     label40:
        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r16);

     label41:
        r19 = r18;

     label42:
        $r15 = virtualinvoke r28.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r15, $r14);

     label43:
        if r18 == null goto label47;

     label44:
        specialinvoke r0.<com.android.server.am.ActivityManagerService: void removeContentProviderExternalUnchecked(java.lang.String,android.os.IBinder,int)>(r1, null, i0);

     label45:
        goto label47;

     label46:
        $r13 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw $r13;

     label47:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        return -1;

     label48:
        if r19 == null goto label52;

     label49:
        specialinvoke r0.<com.android.server.am.ActivityManagerService: void removeContentProviderExternalUnchecked(java.lang.String,android.os.IBinder,int)>(r1, null, i0);

     label50:
        goto label52;

     label51:
        $r12 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw $r12;

     label52:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw $r6;

        catch android.os.RemoteException from label02 to label03 with label17;
        catch java.lang.Exception from label02 to label03 with label16;
        catch java.lang.Throwable from label02 to label03 with label15;
        catch android.os.RemoteException from label04 to label05 with label17;
        catch java.lang.Exception from label04 to label05 with label16;
        catch java.lang.Throwable from label04 to label05 with label15;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label19 to label20 with label15;
        catch java.lang.Throwable from label21 to label22 with label15;
        catch java.lang.Throwable from label23 to label24 with label15;
        catch java.lang.Throwable from label25 to label26 with label15;
        catch java.lang.Throwable from label27 to label28 with label15;
        catch java.lang.Throwable from label29 to label30 with label31;
        catch java.lang.Throwable from label34 to label35 with label15;
        catch java.lang.Throwable from label36 to label37 with label15;
        catch java.lang.Throwable from label38 to label39 with label15;
        catch java.lang.Throwable from label40 to label41 with label15;
        catch java.lang.Throwable from label42 to label43 with label15;
        catch java.lang.Throwable from label44 to label45 with label46;
        catch java.lang.Throwable from label49 to label50 with label51;
    }

    final void checkExcessivePowerUsageLocked()
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.internal.os.BatteryStatsImpl r1;
        long l0, l1, $l4, $l6, $l8, $l9, $l11, $l12, $l14, $l15, $l19, $l21, $l22, l24, l26, l30, $l32, $l33, $l34, $l37;
        boolean z0, z1;
        int i2, $i5, $i17, $i18, $i20, i27, i28, i29, i31, i36;
        com.android.server.am.BatteryStatsService $r2;
        byte $b3, $b7, $b10, $b13, $b16, $b23, $b35;
        com.android.server.am.ProcessList $r3, $r5;
        java.util.ArrayList $r4, $r6;
        java.lang.Object $r7;
        com.android.server.am.ActivityManagerConstants $r8, $r9, $r10, $r32, $r33, $r34, $r35;
        android.content.pm.ApplicationInfo $r11, $r27;
        java.lang.StringBuilder $r12;
        java.lang.String $r21, $r29, $r31, r42;
        com.android.server.am.ProcessRecord$PackageList $r22, $r25, $r26;
        android.util.ArrayMap $r23;
        com.android.internal.app.procstats.ProcessState $r24, $r28, $r30;
        java.lang.Throwable $r36, $r37, $r38, r46;
        com.android.server.am.ProcessRecord r41;
        com.android.internal.app.procstats.ProcessStats$ProcessStateHolder r45;

        r0 := @this: com.android.server.am.ActivityManagerService;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void updateCpuStatsNow()>();

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        r1 = virtualinvoke $r2.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl getActiveStatistics()>();

        l24 = r0.<com.android.server.am.ActivityManagerService: long mLastPowerCheckUptime>;

        $b3 = l24 cmp 0L;

        if $b3 != 0 goto label01;

        z1 = 0;

        goto label02;

     label01:
        z1 = 1;

     label02:
        l26 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l4 = r0.<com.android.server.am.ActivityManagerService: long mLastPowerCheckUptime>;

        l0 = l26 - $l4;

        r0.<com.android.server.am.ActivityManagerService: long mLastPowerCheckUptime> = l26;

        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r4 = $r3.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        i27 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        z0 = z1;

        i28 = i27;

     label03:
        if i28 <= 0 goto label23;

        i29 = i28 - 1;

        $r5 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r6 = $r5.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(i29);

        r41 = (com.android.server.am.ProcessRecord) $r7;

        $i5 = r41.<com.android.server.am.ProcessRecord: int setProcState>;

        if $i5 < 14 goto label22;

        $l6 = r41.<com.android.server.am.ProcessRecord: long lastCpuTime>;

        $b7 = $l6 cmp 0L;

        if $b7 > 0 goto label04;

        goto label22;

     label04:
        $l9 = r41.<com.android.server.am.ProcessRecord: long curCpuTime>;

        $l8 = r41.<com.android.server.am.ProcessRecord: long lastCpuTime>;

        l1 = $l9 - $l8;

        if z0 == 0 goto label21;

        $b10 = l0 cmp 0L;

        if $b10 <= 0 goto label20;

        $l11 = virtualinvoke r41.<com.android.server.am.ProcessRecord: long getWhenUnimportant()>();

        l30 = l26 - $l11;

        $r8 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerConstants mConstants>;

        $l12 = $r8.<com.android.server.am.ActivityManagerConstants: long POWER_CHECK_INTERVAL>;

        $b13 = l30 cmp $l12;

        if $b13 > 0 goto label05;

        $r35 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerConstants mConstants>;

        i31 = $r35.<com.android.server.am.ActivityManagerConstants: int POWER_CHECK_MAX_CPU_1>;

        goto label09;

     label05:
        $r9 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerConstants mConstants>;

        $l14 = $r9.<com.android.server.am.ActivityManagerConstants: long POWER_CHECK_INTERVAL>;

        $l15 = $l14 * 2L;

        $b16 = l30 cmp $l15;

        if $b16 <= 0 goto label08;

        $i20 = r41.<com.android.server.am.ProcessRecord: int setProcState>;

        if $i20 > 14 goto label06;

        goto label08;

     label06:
        $r32 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerConstants mConstants>;

        $l21 = $r32.<com.android.server.am.ActivityManagerConstants: long POWER_CHECK_INTERVAL>;

        $l22 = $l21 * 3L;

        $b23 = l30 cmp $l22;

        if $b23 > 0 goto label07;

        $r34 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerConstants mConstants>;

        i31 = $r34.<com.android.server.am.ActivityManagerConstants: int POWER_CHECK_MAX_CPU_3>;

        goto label09;

     label07:
        $r33 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerConstants mConstants>;

        i31 = $r33.<com.android.server.am.ActivityManagerConstants: int POWER_CHECK_MAX_CPU_4>;

        goto label09;

     label08:
        $r10 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerConstants mConstants>;

        i31 = $r10.<com.android.server.am.ActivityManagerConstants: int POWER_CHECK_MAX_CPU_2>;

     label09:
        $l32 = 100L * l1;

        $l33 = $l32 / l0;

        $l34 = (long) i31;

        $b35 = $l33 cmp $l34;

        if $b35 < 0 goto label19;

        entermonitor r1;

     label10:
        $r11 = r41.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        i2 = $r11.<android.content.pm.ApplicationInfo: int uid>;

        r42 = r41.<com.android.server.am.ProcessRecord: java.lang.String processName>;

     label11:
        virtualinvoke r1.<com.android.internal.os.BatteryStatsImpl: void reportExcessiveCpuLocked(int,java.lang.String,long,long)>(i2, r42, l0, l1);

        exitmonitor r1;

     label12:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("excessive cpu ");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" during ");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" dur=");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l30);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" limit=");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i31);

        $r21 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r41.<com.android.server.am.ProcessRecord: void kill(java.lang.String,int,int,boolean)>($r21, 9, 7, 1);

        $r24 = r41.<com.android.server.am.ProcessRecord: com.android.internal.app.procstats.ProcessState baseProcessTracker>;

        $r22 = r41.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        $r23 = $r22.<com.android.server.am.ProcessRecord$PackageList: android.util.ArrayMap mPkgList>;

        virtualinvoke $r24.<com.android.internal.app.procstats.ProcessState: void reportExcessiveCpu(android.util.ArrayMap)>($r23);

        $r25 = r41.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        $i17 = virtualinvoke $r25.<com.android.server.am.ProcessRecord$PackageList: int size()>();

        i36 = $i17 - 1;

     label13:
        if i36 < 0 goto label21;

        $r26 = r41.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        r45 = virtualinvoke $r26.<com.android.server.am.ProcessRecord$PackageList: com.android.internal.app.procstats.ProcessStats$ProcessStateHolder valueAt(int)>(i36);

        $r27 = r41.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i18 = $r27.<android.content.pm.ApplicationInfo: int uid>;

        $r28 = r45.<com.android.internal.app.procstats.ProcessStats$ProcessStateHolder: com.android.internal.app.procstats.ProcessState state>;

        $r29 = virtualinvoke $r28.<com.android.internal.app.procstats.ProcessState: java.lang.String getName()>();

        $r30 = r45.<com.android.internal.app.procstats.ProcessStats$ProcessStateHolder: com.android.internal.app.procstats.ProcessState state>;

        $r31 = virtualinvoke $r30.<com.android.internal.app.procstats.ProcessState: java.lang.String getPackage()>();

        $l19 = r45.<com.android.internal.app.procstats.ProcessStats$ProcessStateHolder: long appVersion>;

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int,java.lang.String,java.lang.String,long)>(16, $i18, $r29, $r31, $l19);

        i36 = i36 + -1;

        goto label13;

     label14:
        $r36 := @caughtexception;

        r46 = $r36;

        goto label16;

     label15:
        $r37 := @caughtexception;

        r46 = $r37;

     label16:
        exitmonitor r1;

     label17:
        throw r46;

     label18:
        $r38 := @caughtexception;

        r46 = $r38;

        goto label16;

     label19:
        goto label21;

     label20:
        goto label21;

     label21:
        $l37 = r41.<com.android.server.am.ProcessRecord: long curCpuTime>;

        r41.<com.android.server.am.ProcessRecord: long lastCpuTime> = $l37;

        goto label22;

     label22:
        i28 = i29;

        goto label03;

     label23:
        return;

        catch java.lang.Throwable from label10 to label11 with label15;
        catch java.lang.Throwable from label11 to label12 with label14;
        catch java.lang.Throwable from label16 to label17 with label18;
    }

    public int checkPermission(java.lang.String, int, int)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1;
        int i0, i1, $i2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if r1 != null goto label1;

        return -1;

     label1:
        $i2 = staticinvoke <com.android.server.am.ActivityManagerService: int checkComponentPermission(java.lang.String,int,int,int,boolean)>(r1, i0, i1, -1, 1);

        return $i2;
    }

    public int checkPermissionWithToken(java.lang.String, int, int, android.os.IBinder)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1, $r12;
        int i0, i1, $i2, $i3, i5, i6, $i7;
        com.android.server.am.ActivityManagerService$Identity r2;
        java.lang.ThreadLocal $r3;
        java.lang.Object $r4;
        android.os.IBinder $r5, r13;
        java.lang.StringBuilder $r6;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r13 := @parameter3: android.os.IBinder;

        if r1 != null goto label1;

        return -1;

     label1:
        $r3 = <com.android.server.am.ActivityManagerService: java.lang.ThreadLocal sCallerIdentity>;

        $r4 = virtualinvoke $r3.<java.lang.ThreadLocal: java.lang.Object get()>();

        r2 = (com.android.server.am.ActivityManagerService$Identity) $r4;

        i5 = i0;

        i6 = i1;

        if r2 == null goto label2;

        i5 = i0;

        i6 = i1;

        $r5 = r2.<com.android.server.am.ActivityManagerService$Identity: android.os.IBinder token>;

        if $r5 != r13 goto label2;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("checkComponentPermission() adjusting {pid,uid} to {");

        $i2 = r2.<com.android.server.am.ActivityManagerService$Identity: int pid>;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $i3 = r2.<com.android.server.am.ActivityManagerService$Identity: int uid>;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r12 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("ActivityManager", $r12);

        i6 = r2.<com.android.server.am.ActivityManagerService$Identity: int uid>;

        i5 = r2.<com.android.server.am.ActivityManagerService$Identity: int pid>;

     label2:
        $i7 = staticinvoke <com.android.server.am.ActivityManagerService: int checkComponentPermission(java.lang.String,int,int,int,boolean)>(r1, i5, i6, -1, 1);

        return $i7;
    }

    void checkTime(long, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        long l0, l1, $l2, $l4;
        java.lang.String r1, $r8;
        byte $b3;
        java.lang.StringBuilder $r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        l0 := @parameter0: long;

        r1 := @parameter1: java.lang.String;

        l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l2 = l1 - l0;

        $b3 = $l2 cmp 50L;

        if $b3 <= 0 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Slow operation: ");

        $l4 = l1 - l0;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms so far, now at ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r8);

     label1:
        return;
    }

    public int checkUriPermission(android.net.Uri, int, int, int, int, android.os.IBinder)
    {
        com.android.server.am.ActivityManagerService r0;
        android.net.Uri r1;
        int i0, i1, i2, i3, i4, i5, i6;
        android.os.IBinder r2, $r8;
        com.android.server.am.ActivityManagerService$Identity r3;
        java.lang.ThreadLocal $r4;
        java.lang.Object $r5;
        com.android.server.uri.GrantUri $r6;
        com.android.server.uri.UriGrantsManagerInternal $r7;
        boolean $z0;
        byte b7;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.net.Uri;

        i2 := @parameter1: int;

        i3 := @parameter2: int;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        r2 := @parameter5: android.os.IBinder;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("checkUriPermission");

        $r4 = <com.android.server.am.ActivityManagerService: java.lang.ThreadLocal sCallerIdentity>;

        $r5 = virtualinvoke $r4.<java.lang.ThreadLocal: java.lang.Object get()>();

        r3 = (com.android.server.am.ActivityManagerService$Identity) $r5;

        i4 = i2;

        i5 = i3;

        if r3 == null goto label1;

        i4 = i2;

        i5 = i3;

        $r8 = r3.<com.android.server.am.ActivityManagerService$Identity: android.os.IBinder token>;

        if $r8 != r2 goto label1;

        i5 = r3.<com.android.server.am.ActivityManagerService$Identity: int uid>;

        i4 = r3.<com.android.server.am.ActivityManagerService$Identity: int pid>;

     label1:
        i6 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        b7 = 0;

        if i4 != i6 goto label2;

        return 0;

     label2:
        $r7 = r0.<com.android.server.am.ActivityManagerService: com.android.server.uri.UriGrantsManagerInternal mUgmInternal>;

        $r6 = new com.android.server.uri.GrantUri;

        specialinvoke $r6.<com.android.server.uri.GrantUri: void <init>(int,android.net.Uri,int)>(i1, r1, i0);

        $z0 = interfaceinvoke $r7.<com.android.server.uri.UriGrantsManagerInternal: boolean checkUriPermission(com.android.server.uri.GrantUri,int,int)>($r6, i5, i0);

        if $z0 == 0 goto label3;

        goto label4;

     label3:
        b7 = -1;

     label4:
        return b7;
    }

    final boolean cleanUpApplicationRecordLocked(com.android.server.am.ProcessRecord, boolean, boolean, int, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1, $r19, $r38, $r40, $r47, $r71, $r78;
        boolean z0, z1, z2, z3, $z6, $z7, $z8, $z10, $z11, $z12, $z13, $z15, $z16, $z21, $z22, z23, z24, z25, z26, z27;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i22, $i23, $i24, i25, i26, i27, $i28, i29, $i30;
        java.util.ArrayList $r2, $r3, $r11, $r36, $r37, $r39, $r41, $r42, $r44, $r46, $r53, $r54, $r55, $r58, $r76, $r79;
        com.android.server.am.ProcessList$ProcStateMemTracker $r4;
        com.android.server.am.ProcessRecord$ErrorDialogController $r5;
        com.android.server.am.ProcessStatsService $r6, $r7;
        com.android.server.am.ActiveServices $r8;
        android.util.ArrayMap $r9, $r10, $r69;
        android.util.ArraySet $r12, $r13, $r50;
        android.util.SparseArray $r14;
        java.lang.Object $r15, $r43, $r51, $r56, $r70;
        android.content.pm.ApplicationInfo $r16, $r23, $r26, $r61;
        android.os.Handler $r17;
        android.os.Message $r18;
        com.android.server.wm.ActivityTaskManagerInternal $r20, $r80;
        com.android.server.wm.WindowProcessController $r21, $r81;
        com.android.server.am.ActivityManagerService$MainHandler $r22, $r28, $r49;
        java.lang.String $r24, $r31, $r33, $r65, $r67;
        com.android.server.am.BatteryStatsService $r25, $r27;
        com.android.server.am.ProcessList $r29, $r32, $r34, $r68, $r82;
        com.android.server.am.HostingRecord $r30;
        com.android.server.am.ActivityManagerService$24 $r48;
        com.android.server.am.ReceiverList $r52;
        com.android.server.am.ContentProviderRecord $r57, $r59, $r60, $r62, $r63, r73;
        android.content.pm.ProviderInfo $r64;
        android.content.ComponentName $r66;
        long $l21;
        java.lang.Throwable $r72;
        com.android.server.am.ContentProviderConnection r74;
        com.android.server.am.BackupRecord r75;
        com.android.server.am.ActivityManagerService$ProcessChangeItem r77;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        i0 := @parameter3: int;

        z2 := @parameter4: boolean;

        if i0 < 0 goto label01;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void removeLruProcessLocked(com.android.server.am.ProcessRecord)>(r1);

        $i24 = r1.<com.android.server.am.ProcessRecord: int pid>;

        staticinvoke <com.android.server.am.ProcessList: void remove(int)>($i24);

     label01:
        $r2 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesToGc>;

        virtualinvoke $r2.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        $r3 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingPssProcesses>;

        virtualinvoke $r3.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        $r4 = r1.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessList$ProcStateMemTracker procStateMemTracker>;

        staticinvoke <com.android.server.am.ProcessList: void abortNextPssTime(com.android.server.am.ProcessList$ProcStateMemTracker)>($r4);

        $r5 = virtualinvoke r1.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$ErrorDialogController getDialogController()>();

        virtualinvoke $r5.<com.android.server.am.ProcessRecord$ErrorDialogController: void clearAllErrorDialogs()>();

        virtualinvoke r1.<com.android.server.am.ProcessRecord: void setCrashing(boolean)>(0);

        virtualinvoke r1.<com.android.server.am.ProcessRecord: void setNotResponding(boolean)>(0);

        $r6 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        virtualinvoke r1.<com.android.server.am.ProcessRecord: void resetPackageList(com.android.server.am.ProcessStatsService)>($r6);

        virtualinvoke r1.<com.android.server.am.ProcessRecord: void unlinkDeathRecipient()>();

        $r7 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        virtualinvoke r1.<com.android.server.am.ProcessRecord: void makeInactive(com.android.server.am.ProcessStatsService)>($r7);

        r1.<com.android.server.am.ProcessRecord: java.lang.String waitingToKill> = null;

        r1.<com.android.server.am.ProcessRecord: java.lang.Object forcingToImportant> = null;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void updateProcessForegroundLocked(com.android.server.am.ProcessRecord,boolean,int,boolean)>(r1, 0, 0, 0);

        virtualinvoke r1.<com.android.server.am.ProcessRecord: void setHasForegroundActivities(boolean)>(0);

        r1.<com.android.server.am.ProcessRecord: boolean hasShownUi> = 0;

        r1.<com.android.server.am.ProcessRecord: boolean treatLikeActivity> = 0;

        r1.<com.android.server.am.ProcessRecord: boolean hasAboveClient> = 0;

        virtualinvoke r1.<com.android.server.am.ProcessRecord: void setHasClientActivities(boolean)>(0);

        $r8 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveServices mServices>;

        virtualinvoke $r8.<com.android.server.am.ActiveServices: void killServicesLocked(com.android.server.am.ProcessRecord,boolean)>(r1, z1);

        z23 = 0;

        $r9 = r1.<com.android.server.am.ProcessRecord: android.util.ArrayMap pubProviders>;

        $i1 = virtualinvoke $r9.<android.util.ArrayMap: int size()>();

        i25 = $i1 - 1;

     label02:
        if i25 < 0 goto label09;

        $r69 = r1.<com.android.server.am.ProcessRecord: android.util.ArrayMap pubProviders>;

        $r70 = virtualinvoke $r69.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i25);

        r73 = (com.android.server.am.ContentProviderRecord) $r70;

        $r71 = r73.<com.android.server.am.ContentProviderRecord: com.android.server.am.ProcessRecord proc>;

        if $r71 == r1 goto label03;

        goto label08;

     label03:
        $z21 = r1.<com.android.server.am.ProcessRecord: boolean bad>;

        if $z21 != 0 goto label05;

        if z1 != 0 goto label04;

        goto label05;

     label04:
        z24 = 0;

        goto label06;

     label05:
        z24 = 1;

     label06:
        z3 = specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean removeDyingProviderLocked(com.android.server.am.ProcessRecord,com.android.server.am.ContentProviderRecord,boolean)>(r1, r73, z24);

        z25 = z23;

        if z24 != 0 goto label07;

        z25 = z23;

        if z3 == 0 goto label07;

        z25 = z23;

        $z22 = virtualinvoke r73.<com.android.server.am.ContentProviderRecord: boolean hasConnectionOrHandle()>();

        if $z22 == 0 goto label07;

        z25 = 1;

     label07:
        r73.<com.android.server.am.ContentProviderRecord: android.content.IContentProvider provider> = null;

        virtualinvoke r73.<com.android.server.am.ContentProviderRecord: void setProcess(com.android.server.am.ProcessRecord)>(null);

        z23 = z25;

     label08:
        i25 = i25 + -1;

        goto label02;

     label09:
        $r10 = r1.<com.android.server.am.ProcessRecord: android.util.ArrayMap pubProviders>;

        virtualinvoke $r10.<android.util.ArrayMap: void clear()>();

        $z6 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean cleanupAppInLaunchingProvidersLocked(com.android.server.am.ProcessRecord,boolean)>(r1, 0);

        if $z6 == 0 goto label10;

        $r68 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        virtualinvoke $r68.<com.android.server.am.ProcessList: void noteProcessDiedLocked(com.android.server.am.ProcessRecord)>(r1);

        z23 = 1;

        goto label10;

     label10:
        $r11 = r1.<com.android.server.am.ProcessRecord: java.util.ArrayList conProviders>;

        $z7 = virtualinvoke $r11.<java.util.ArrayList: boolean isEmpty()>();

        if $z7 != 0 goto label13;

        $r53 = r1.<com.android.server.am.ProcessRecord: java.util.ArrayList conProviders>;

        $i20 = virtualinvoke $r53.<java.util.ArrayList: int size()>();

        i26 = $i20 - 1;

     label11:
        if i26 < 0 goto label12;

        $r55 = r1.<com.android.server.am.ProcessRecord: java.util.ArrayList conProviders>;

        $r56 = virtualinvoke $r55.<java.util.ArrayList: java.lang.Object get(int)>(i26);

        r74 = (com.android.server.am.ContentProviderConnection) $r56;

        $r57 = r74.<com.android.server.am.ContentProviderConnection: com.android.server.am.ContentProviderRecord provider>;

        $r58 = $r57.<com.android.server.am.ContentProviderRecord: java.util.ArrayList connections>;

        virtualinvoke $r58.<java.util.ArrayList: boolean remove(java.lang.Object)>(r74);

        $i23 = r1.<com.android.server.am.ProcessRecord: int uid>;

        $r67 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r59 = r74.<com.android.server.am.ContentProviderConnection: com.android.server.am.ContentProviderRecord provider>;

        $i22 = $r59.<com.android.server.am.ContentProviderRecord: int uid>;

        $r60 = r74.<com.android.server.am.ContentProviderConnection: com.android.server.am.ContentProviderRecord provider>;

        $r61 = $r60.<com.android.server.am.ContentProviderRecord: android.content.pm.ApplicationInfo appInfo>;

        $l21 = $r61.<android.content.pm.ApplicationInfo: long longVersionCode>;

        $r62 = r74.<com.android.server.am.ContentProviderConnection: com.android.server.am.ContentProviderRecord provider>;

        $r66 = $r62.<com.android.server.am.ContentProviderRecord: android.content.ComponentName name>;

        $r63 = r74.<com.android.server.am.ContentProviderConnection: com.android.server.am.ContentProviderRecord provider>;

        $r64 = $r63.<com.android.server.am.ContentProviderRecord: android.content.pm.ProviderInfo info>;

        $r65 = $r64.<android.content.pm.ProviderInfo: java.lang.String processName>;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void stopAssociationLocked(int,java.lang.String,int,long,android.content.ComponentName,java.lang.String)>($i23, $r67, $i22, $l21, $r66, $r65);

        i26 = i26 + -1;

        goto label11;

     label12:
        $r54 = r1.<com.android.server.am.ProcessRecord: java.util.ArrayList conProviders>;

        virtualinvoke $r54.<java.util.ArrayList: void clear()>();

     label13:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void skipCurrentReceiverLocked(com.android.server.am.ProcessRecord)>(r1);

        $r12 = r1.<com.android.server.am.ProcessRecord: android.util.ArraySet receivers>;

        $i2 = virtualinvoke $r12.<android.util.ArraySet: int size()>();

        i27 = $i2 - 1;

     label14:
        if i27 < 0 goto label15;

        $r50 = r1.<com.android.server.am.ProcessRecord: android.util.ArraySet receivers>;

        $r51 = virtualinvoke $r50.<android.util.ArraySet: java.lang.Object valueAt(int)>(i27);

        $r52 = (com.android.server.am.ReceiverList) $r51;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void removeReceiverLocked(com.android.server.am.ReceiverList)>($r52);

        i27 = i27 + -1;

        goto label14;

     label15:
        $r13 = r1.<com.android.server.am.ProcessRecord: android.util.ArraySet receivers>;

        virtualinvoke $r13.<android.util.ArraySet: void clear()>();

        $r14 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mBackupTargets>;

        $i3 = r1.<com.android.server.am.ProcessRecord: int userId>;

        $r15 = virtualinvoke $r14.<android.util.SparseArray: java.lang.Object get(int)>($i3);

        r75 = (com.android.server.am.BackupRecord) $r15;

        if r75 == null goto label16;

        $i19 = r1.<com.android.server.am.ProcessRecord: int pid>;

        $r47 = r75.<com.android.server.am.BackupRecord: com.android.server.am.ProcessRecord app>;

        $i18 = $r47.<com.android.server.am.ProcessRecord: int pid>;

        if $i19 != $i18 goto label16;

        $r49 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        $r48 = new com.android.server.am.ActivityManagerService$24;

        specialinvoke $r48.<com.android.server.am.ActivityManagerService$24: void <init>(com.android.server.am.ActivityManagerService,com.android.server.am.ProcessRecord)>(r0, r1);

        virtualinvoke $r49.<com.android.server.am.ActivityManagerService$MainHandler: boolean post(java.lang.Runnable)>($r48);

     label16:
        $r76 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingProcessChanges>;

        $i28 = virtualinvoke $r76.<java.util.ArrayList: int size()>();

        i29 = $i28 - 1;

     label17:
        if i29 < 0 goto label19;

        $r42 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingProcessChanges>;

        $r43 = virtualinvoke $r42.<java.util.ArrayList: java.lang.Object get(int)>(i29);

        r77 = (com.android.server.am.ActivityManagerService$ProcessChangeItem) $r43;

        $i15 = r1.<com.android.server.am.ProcessRecord: int pid>;

        if $i15 <= 0 goto label18;

        $i17 = r77.<com.android.server.am.ActivityManagerService$ProcessChangeItem: int pid>;

        $i16 = r1.<com.android.server.am.ProcessRecord: int pid>;

        if $i17 != $i16 goto label18;

        $r44 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingProcessChanges>;

        virtualinvoke $r44.<java.util.ArrayList: java.lang.Object remove(int)>(i29);

        $r46 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mAvailProcessChanges>;

        virtualinvoke $r46.<java.util.ArrayList: boolean add(java.lang.Object)>(r77);

     label18:
        i29 = i29 + -1;

        goto label17;

     label19:
        $r17 = r0.<com.android.server.am.ActivityManagerService: android.os.Handler mUiHandler>;

        $i5 = r1.<com.android.server.am.ProcessRecord: int pid>;

        $r16 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i4 = $r16.<android.content.pm.ApplicationInfo: int uid>;

        $r18 = virtualinvoke $r17.<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(32, $i5, $i4, null);

        virtualinvoke $r18.<android.os.Message: void sendToTarget()>();

        z26 = 1;

        entermonitor r1;

     label20:
        $r19 = r1.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord mSuccessor>;

        if $r19 == null goto label24;

     label21:
        z26 = 0;

     label22:
        $z15 = virtualinvoke r1.<com.android.server.am.ProcessRecord: boolean isPersistent()>();

        if $z15 == 0 goto label23;

        $z16 = r1.<com.android.server.am.ProcessRecord: boolean removed>;

        if $z16 != 0 goto label23;

        $r39 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPersistentStartingProcesses>;

        $r38 = r1.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord mSuccessor>;

        $i14 = virtualinvoke $r39.<java.util.ArrayList: int indexOf(java.lang.Object)>($r38);

        if $i14 >= 0 goto label23;

        $r41 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPersistentStartingProcesses>;

        $r40 = r1.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord mSuccessor>;

        virtualinvoke $r41.<java.util.ArrayList: boolean add(java.lang.Object)>($r40);

     label23:
        $r78 = r1.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord mSuccessor>;

        $r78.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord mPrecedence> = null;

        r1.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord mSuccessor> = null;

        virtualinvoke r1.<java.lang.Object: void notifyAll()>();

     label24:
        exitmonitor r1;

     label25:
        if z0 == 0 goto label26;

        return 0;

     label26:
        $z8 = virtualinvoke r1.<com.android.server.am.ProcessRecord: boolean isPersistent()>();

        if $z8 == 0 goto label28;

        $z12 = r1.<com.android.server.am.ProcessRecord: boolean isolated>;

        if $z12 == 0 goto label27;

        goto label28;

     label27:
        z27 = z23;

        $z13 = r1.<com.android.server.am.ProcessRecord: boolean removed>;

        if $z13 != 0 goto label30;

        z27 = z23;

        $r36 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPersistentStartingProcesses>;

        $i13 = virtualinvoke $r36.<java.util.ArrayList: int indexOf(java.lang.Object)>(r1);

        if $i13 >= 0 goto label30;

        $r37 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPersistentStartingProcesses>;

        virtualinvoke $r37.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        z27 = 1;

        goto label30;

     label28:
        if z2 != 0 goto label29;

        $r34 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r33 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $i12 = r1.<com.android.server.am.ProcessRecord: int uid>;

        virtualinvoke $r34.<com.android.server.am.ProcessList: com.android.server.am.ProcessRecord removeProcessNameLocked(java.lang.String,int,com.android.server.am.ProcessRecord)>($r33, $i12, r1);

     label29:
        $r20 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerInternal mAtmInternal>;

        $r21 = virtualinvoke r1.<com.android.server.am.ProcessRecord: com.android.server.wm.WindowProcessController getWindowProcessController()>();

        virtualinvoke $r20.<com.android.server.wm.ActivityTaskManagerInternal: void clearHeavyWeightProcessIfEquals(com.android.server.wm.WindowProcessController)>($r21);

        z27 = z23;

     label30:
        $r79 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesOnHold>;

        virtualinvoke $r79.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        $r80 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerInternal mAtmInternal>;

        $r81 = virtualinvoke r1.<com.android.server.am.ProcessRecord: com.android.server.wm.WindowProcessController getWindowProcessController()>();

        virtualinvoke $r80.<com.android.server.wm.ActivityTaskManagerInternal: void onCleanUpApplicationRecord(com.android.server.wm.WindowProcessController)>($r81);

        $r82 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        virtualinvoke $r82.<com.android.server.am.ProcessList: void noteProcessDiedLocked(com.android.server.am.ProcessRecord)>(r1);

        if z27 == 0 goto label32;

        if z26 == 0 goto label32;

        $z11 = r1.<com.android.server.am.ProcessRecord: boolean isolated>;

        if $z11 != 0 goto label32;

        if i0 >= 0 goto label31;

        $i11 = r1.<com.android.server.am.ProcessRecord: int pid>;

        staticinvoke <com.android.server.am.ProcessList: void remove(int)>($i11);

     label31:
        $r28 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        virtualinvoke $r28.<com.android.server.am.ActivityManagerService$MainHandler: void removeMessages(int,java.lang.Object)>(57, r1);

        $r29 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        virtualinvoke $r29.<com.android.server.am.ProcessList: void addProcessNameLocked(com.android.server.am.ProcessRecord)>(r1);

        r1.<com.android.server.am.ProcessRecord: boolean pendingStart> = 0;

        $r32 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r30 = new com.android.server.am.HostingRecord;

        $r31 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        specialinvoke $r30.<com.android.server.am.HostingRecord: void <init>(java.lang.String,java.lang.String)>("restart", $r31);

        virtualinvoke $r32.<com.android.server.am.ProcessList: void startProcessLocked(com.android.server.am.ProcessRecord,com.android.server.am.HostingRecord,int)>(r1, $r30, 0);

        return 1;

     label32:
        $i30 = r1.<com.android.server.am.ProcessRecord: int pid>;

        if $i30 <= 0 goto label34;

        $i7 = r1.<com.android.server.am.ProcessRecord: int pid>;

        $i6 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        if $i7 == $i6 goto label34;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void removePidLocked(com.android.server.am.ProcessRecord)>(r1);

        $r22 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        virtualinvoke $r22.<com.android.server.am.ActivityManagerService$MainHandler: void removeMessages(int,java.lang.Object)>(20, r1);

        $r25 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        $r24 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r23 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i8 = $r23.<android.content.pm.ApplicationInfo: int uid>;

        virtualinvoke $r25.<com.android.server.am.BatteryStatsService: void noteProcessFinish(java.lang.String,int)>($r24, $i8);

        $z10 = r1.<com.android.server.am.ProcessRecord: boolean isolated>;

        if $z10 == 0 goto label33;

        $r27 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        $i10 = r1.<com.android.server.am.ProcessRecord: int uid>;

        $r26 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i9 = $r26.<android.content.pm.ApplicationInfo: int uid>;

        virtualinvoke $r27.<com.android.server.am.BatteryStatsService: void removeIsolatedUid(int,int)>($i10, $i9);

     label33:
        virtualinvoke r1.<com.android.server.am.ProcessRecord: void setPid(int)>(0);

     label34:
        return 0;

     label35:
        $r72 := @caughtexception;

     label36:
        exitmonitor r1;

     label37:
        throw $r72;

        catch java.lang.Throwable from label20 to label21 with label35;
        catch java.lang.Throwable from label22 to label23 with label35;
        catch java.lang.Throwable from label23 to label24 with label35;
        catch java.lang.Throwable from label24 to label25 with label35;
        catch java.lang.Throwable from label36 to label37 with label35;
    }

    boolean cleanupAppInLaunchingProvidersLocked(com.android.server.am.ProcessRecord, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1, $r6;
        com.android.server.am.ContentProviderRecord r2;
        int i0, $i1, $i2, i3;
        java.util.ArrayList $r3, $r4;
        java.lang.Object $r5;
        boolean $z1, $z2, z3, z4, z5, z6;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        z3 := @parameter1: boolean;

        z4 = 0;

        $r3 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLaunchingProviders>;

        $i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i3 = $i1 - 1;

     label1:
        if i3 < 0 goto label5;

        $r4 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLaunchingProviders>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r2 = (com.android.server.am.ContentProviderRecord) $r5;

        z5 = z4;

        z6 = z3;

        $r6 = r2.<com.android.server.am.ContentProviderRecord: com.android.server.am.ProcessRecord launchingApp>;

        if $r6 != r1 goto label4;

        $i2 = r2.<com.android.server.am.ContentProviderRecord: int mRestartCount>;

        i0 = $i2 + 1;

        r2.<com.android.server.am.ContentProviderRecord: int mRestartCount> = i0;

        if i0 <= 3 goto label2;

        z3 = 1;

     label2:
        if z3 != 0 goto label3;

        $z1 = r1.<com.android.server.am.ProcessRecord: boolean bad>;

        if $z1 != 0 goto label3;

        $z2 = virtualinvoke r2.<com.android.server.am.ContentProviderRecord: boolean hasConnectionOrHandle()>();

        if $z2 == 0 goto label3;

        z5 = 1;

        z6 = z3;

        goto label4;

     label3:
        specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean removeDyingProviderLocked(com.android.server.am.ProcessRecord,com.android.server.am.ContentProviderRecord,boolean)>(r1, r2, 1);

        z6 = z3;

        z5 = z4;

     label4:
        i3 = i3 + -1;

        z4 = z5;

        z3 = z6;

        goto label1;

     label5:
        return z4;
    }

    public boolean clearApplicationUserData(java.lang.String, boolean, android.content.pm.IPackageDataObserver, int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, i2, $i5, $i6, $i7, $i8, i10, i11, i12, $i13, $i14;
        long l3;
        android.content.pm.IPackageManager r1;
        boolean z0, z1, z2, z3, z4, z5, z6, z7, z8;
        com.android.server.am.UserController $r2;
        android.content.pm.PackageManagerInternal $r3, $r7;
        java.lang.String $r6, $r10, $r19, r32;
        com.android.server.uri.UriGrantsManagerInternal $r11;
        com.android.server.wm.ActivityTaskManagerInternal $r12;
        java.lang.Throwable $r20, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r31, r36, r47;
        android.os.RemoteException $r21, $r29, $r30;
        android.content.pm.IPackageDataObserver r33;
        android.content.pm.ApplicationInfo r34, r35;
        java.lang.SecurityException r38, r50;
        java.lang.StringBuilder r39, r48, r51;
        com.android.server.am.ActivityManagerService$9 r40;
        android.app.INotificationManager r41;
        java.lang.Object $r42, $r44;
        com.android.server.job.JobSchedulerInternal $r43;
        com.android.server.AlarmManagerInternal $r45;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r32 := @parameter0: java.lang.String;

        z1 := @parameter1: boolean;

        r33 := @parameter2: android.content.pm.IPackageDataObserver;

        i10 := @parameter3: int;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("clearApplicationUserData");

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.UserController mUserController>;

        i2 = virtualinvoke $r2.<com.android.server.am.UserController: int handleIncomingUser(int,int,int,boolean,int,java.lang.String,java.lang.String)>(i1, i0, i10, 0, 2, "clearApplicationUserData", null);

        l3 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label01:
        r1 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        entermonitor r0;

     label02:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r3 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: android.content.pm.PackageManagerInternal getPackageManagerInternalLocked()>();

        z2 = virtualinvoke $r3.<android.content.pm.PackageManagerInternal: boolean isPackageDataProtected(int,java.lang.String)>(i2, r32);

     label03:
        if z2 != 0 goto label56;

        r34 = null;

     label04:
        r35 = interfaceinvoke r1.<android.content.pm.IPackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int,int)>(r32, 8192, i2);

     label05:
        r34 = r35;

        goto label08;

     label06:
        $r22 := @caughtexception;

        r36 = $r22;

        goto label58;

     label07:
        $r21 := @caughtexception;

     label08:
        if r34 == null goto label11;

     label09:
        $i8 = r34.<android.content.pm.ApplicationInfo: int uid>;

        if $i8 != i0 goto label11;

     label10:
        z3 = 1;

        goto label12;

     label11:
        z3 = 0;

     label12:
        if z3 != 0 goto label16;

     label13:
        $i7 = staticinvoke <com.android.server.am.ActivityManagerService: int checkComponentPermission(java.lang.String,int,int,int,boolean)>("android.permission.CLEAR_APP_USER_DATA", i1, i0, -1, 1);

        if $i7 != 0 goto label15;

     label14:
        goto label16;

     label15:
        r38 = new java.lang.SecurityException;

        r39 = new java.lang.StringBuilder;

        specialinvoke r39.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PID ");

        virtualinvoke r39.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not have permission ");

        virtualinvoke r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.CLEAR_APP_USER_DATA");

        virtualinvoke r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to clear data of package ");

        virtualinvoke r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r32);

        $r19 = virtualinvoke r39.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r38.<java.lang.SecurityException: void <init>(java.lang.String)>($r19);

        throw r38;

     label16:
        $r7 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: android.content.pm.PackageManagerInternal getPackageManagerInternalLocked()>();

        z0 = virtualinvoke $r7.<android.content.pm.PackageManagerInternal: boolean hasInstantApplicationMetadata(java.lang.String,int)>(r32, i2);

     label17:
        if r34 != null goto label18;

        if z0 != 0 goto label18;

        z4 = 1;

        goto label19;

     label18:
        z4 = 0;

     label19:
        if r34 == null goto label22;

     label20:
        z5 = virtualinvoke r34.<android.content.pm.ApplicationInfo: boolean isInstantApp()>();

     label21:
        if z5 != 0 goto label23;

     label22:
        if z0 == 0 goto label24;

     label23:
        z6 = 1;

        goto label25;

     label24:
        z6 = 0;

     label25:
        i11 = staticinvoke <com.android.server.am.ActivityManagerService: int checkComponentPermission(java.lang.String,int,int,int,boolean)>("android.permission.ACCESS_INSTANT_APPS", i1, i0, -1, 1);

     label26:
        if i11 != 0 goto label27;

        z7 = 1;

        goto label28;

     label27:
        z7 = 0;

     label28:
        if z4 != 0 goto label47;

        if z6 == 0 goto label29;

        if z7 != 0 goto label29;

        goto label47;

     label29:
        if r34 == null goto label31;

     label30:
        $i6 = r34.<android.content.pm.ApplicationInfo: int uid>;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void forceStopPackageLocked(java.lang.String,int,java.lang.String)>(r32, $i6, "clear data");

        $r12 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerInternal mAtmInternal>;

        virtualinvoke $r12.<com.android.server.wm.ActivityTaskManagerInternal: void removeRecentTasksByPackageName(java.lang.String,int)>(r32, i2);

     label31:
        exitmonitor r0;

     label32:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        r40 = new com.android.server.am.ActivityManagerService$9;

     label33:
        specialinvoke r40.<com.android.server.am.ActivityManagerService$9: void <init>(com.android.server.am.ActivityManagerService,android.content.pm.ApplicationInfo,int,boolean,int,int,android.content.pm.IPackageDataObserver)>(r0, r34, i2, z6, i0, i1, r33);

     label34:
        interfaceinvoke r1.<android.content.pm.IPackageManager: void clearApplicationUserData(java.lang.String,android.content.pm.IPackageDataObserver,int)>(r32, r40, i2);

     label35:
        if r34 == null goto label41;

        if z1 != 0 goto label40;

     label36:
        $r11 = r0.<com.android.server.am.ActivityManagerService: com.android.server.uri.UriGrantsManagerInternal mUgmInternal>;

        interfaceinvoke $r11.<com.android.server.uri.UriGrantsManagerInternal: void removeUriPermissionsForPackage(java.lang.String,int,boolean,boolean)>(r32, i2, 1, 0);

        r41 = staticinvoke <android.app.NotificationManager: android.app.INotificationManager getService()>();

        i12 = r34.<android.content.pm.ApplicationInfo: int uid>;

        $i5 = r34.<android.content.pm.ApplicationInfo: int uid>;

        if i0 != $i5 goto label38;

     label37:
        z8 = 1;

        goto label39;

     label38:
        z8 = 0;

     label39:
        interfaceinvoke r41.<android.app.INotificationManager: void clearData(java.lang.String,int,boolean)>(r32, i12, z8);

     label40:
        $r42 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Lcom/android/server/job/JobSchedulerInternal;");

        $r43 = (com.android.server.job.JobSchedulerInternal) $r42;

        $i13 = r34.<android.content.pm.ApplicationInfo: int uid>;

        interfaceinvoke $r43.<com.android.server.job.JobSchedulerInternal: void cancelJobsForUid(int,java.lang.String)>($i13, "clear data");

        $r44 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Lcom/android/server/AlarmManagerInternal;");

        $r45 = (com.android.server.AlarmManagerInternal) $r44;

        $i14 = r34.<android.content.pm.ApplicationInfo: int uid>;

        interfaceinvoke $r45.<com.android.server.AlarmManagerInternal: void removeAlarmsForUid(int)>($i14);

     label41:
        goto label43;

     label42:
        $r29 := @caughtexception;

     label43:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

        return 1;

     label44:
        $r25 := @caughtexception;

        r47 = $r25;

        goto label63;

     label45:
        $r20 := @caughtexception;

        r47 = $r20;

        goto label63;

     label46:
        $r28 := @caughtexception;

        r36 = $r28;

        goto label58;

     label47:
        r48 = new java.lang.StringBuilder;

        specialinvoke r48.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid packageName: ");

        virtualinvoke r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r32);

        $r10 = virtualinvoke r48.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r10);

     label48:
        if r33 == null goto label53;

     label49:
        interfaceinvoke r33.<android.content.pm.IPackageDataObserver: void onRemoveCompleted(java.lang.String,boolean)>(r32, 0);

     label50:
        goto label53;

     label51:
        $r30 := @caughtexception;

     label52:
        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", "Observer no longer exists.");

     label53:
        exitmonitor r0;

     label54:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

        return 0;

     label55:
        $r31 := @caughtexception;

        r36 = $r31;

        goto label58;

     label56:
        r50 = new java.lang.SecurityException;

        r51 = new java.lang.StringBuilder;

        specialinvoke r51.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot clear data for a protected package: ");

        virtualinvoke r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r32);

        $r6 = virtualinvoke r51.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r50.<java.lang.SecurityException: void <init>(java.lang.String)>($r6);

        throw r50;

     label57:
        $r23 := @caughtexception;

        r36 = $r23;

     label58:
        exitmonitor r0;

     label59:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw r36;

     label60:
        $r24 := @caughtexception;

        r47 = $r24;

        goto label63;

     label61:
        $r26 := @caughtexception;

        r36 = $r26;

        goto label58;

     label62:
        $r27 := @caughtexception;

        r47 = $r27;

     label63:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

        throw r47;

        catch java.lang.Throwable from label01 to label02 with label62;
        catch java.lang.Throwable from label02 to label03 with label57;
        catch android.os.RemoteException from label04 to label05 with label07;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label09 to label10 with label06;
        catch java.lang.Throwable from label13 to label14 with label06;
        catch java.lang.Throwable from label15 to label16 with label06;
        catch java.lang.Throwable from label16 to label17 with label57;
        catch java.lang.Throwable from label20 to label21 with label06;
        catch java.lang.Throwable from label25 to label26 with label57;
        catch java.lang.Throwable from label30 to label31 with label06;
        catch java.lang.Throwable from label31 to label32 with label46;
        catch java.lang.Throwable from label32 to label33 with label45;
        catch java.lang.Throwable from label33 to label34 with label44;
        catch android.os.RemoteException from label34 to label35 with label42;
        catch java.lang.Throwable from label34 to label35 with label44;
        catch android.os.RemoteException from label36 to label37 with label42;
        catch java.lang.Throwable from label36 to label37 with label44;
        catch android.os.RemoteException from label39 to label40 with label42;
        catch java.lang.Throwable from label39 to label40 with label44;
        catch android.os.RemoteException from label40 to label41 with label42;
        catch java.lang.Throwable from label40 to label41 with label44;
        catch java.lang.Throwable from label47 to label48 with label55;
        catch android.os.RemoteException from label49 to label50 with label51;
        catch java.lang.Throwable from label49 to label50 with label61;
        catch java.lang.Throwable from label52 to label53 with label61;
        catch java.lang.Throwable from label53 to label54 with label61;
        catch java.lang.Throwable from label56 to label57 with label61;
        catch java.lang.Throwable from label58 to label59 with label61;
        catch java.lang.Throwable from label59 to label60 with label60;
    }

    final boolean clearBroadcastQueueForUserLocked(int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, $i1, i2;
        com.android.server.am.BroadcastQueue[] $r1, $r2;
        com.android.server.am.BroadcastQueue $r3;
        boolean $z0, z1;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        z1 = 0;

        $r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastQueue[] mBroadcastQueues>;

        $i1 = lengthof $r1;

        i2 = $i1 - 1;

     label1:
        if i2 < 0 goto label2;

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastQueue[] mBroadcastQueues>;

        $r3 = $r2[i2];

        $z0 = virtualinvoke $r3.<com.android.server.am.BroadcastQueue: boolean cleanupDisabledPackageReceiversLocked(java.lang.String,java.util.Set,int,boolean)>(null, null, i0, 1);

        z1 = z1 | $z0;

        i2 = i2 + -1;

        goto label1;

     label2:
        return z1;
    }

    void clearOomAdjObserver()
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.Throwable $r2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        entermonitor r0;

     label1:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        r0.<com.android.server.am.ActivityManagerService: int mCurOomAdjUid> = -1;

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$OomAdjObserver mCurOomAdjObserver> = null;

        exitmonitor r0;

     label2:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    void clearProfilerLocked()
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ActivityManagerService$ProfileData $r2, $r4, $r7, $r11, $r12, $r13;
        android.app.ProfilerInfo $r3, $r5, $r8;
        android.os.ParcelFileDescriptor $r6, $r9;
        java.lang.Throwable $r10;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$ProfileData mProfileData>;

        $r3 = virtualinvoke $r2.<com.android.server.am.ActivityManagerService$ProfileData: android.app.ProfilerInfo getProfilerInfo()>();

        if $r3 == null goto label4;

        $r4 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$ProfileData mProfileData>;

        $r5 = virtualinvoke $r4.<com.android.server.am.ActivityManagerService$ProfileData: android.app.ProfilerInfo getProfilerInfo()>();

        $r6 = $r5.<android.app.ProfilerInfo: android.os.ParcelFileDescriptor profileFd>;

        if $r6 == null goto label4;

     label1:
        $r7 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$ProfileData mProfileData>;

        $r8 = virtualinvoke $r7.<com.android.server.am.ActivityManagerService$ProfileData: android.app.ProfilerInfo getProfilerInfo()>();

        $r9 = $r8.<android.app.ProfilerInfo: android.os.ParcelFileDescriptor profileFd>;

        virtualinvoke $r9.<android.os.ParcelFileDescriptor: void close()>();

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

     label4:
        $r11 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$ProfileData mProfileData>;

        virtualinvoke $r11.<com.android.server.am.ActivityManagerService$ProfileData: void setProfileApp(java.lang.String)>(null);

        $r12 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$ProfileData mProfileData>;

        virtualinvoke $r12.<com.android.server.am.ActivityManagerService$ProfileData: void setProfileProc(com.android.server.am.ProcessRecord)>(null);

        $r13 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$ProfileData mProfileData>;

        virtualinvoke $r13.<com.android.server.am.ActivityManagerService$ProfileData: void setProfilerInfo(android.app.ProfilerInfo)>(null);

        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void closeSystemDialogs(java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1;
        com.android.server.wm.ActivityTaskManagerInternal $r2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerInternal mAtmInternal>;

        virtualinvoke $r2.<com.android.server.wm.ActivityTaskManagerInternal: void closeSystemDialogs(java.lang.String)>(r1);

        return;
    }

    java.util.ArrayList collectProcesses(java.io.PrintWriter, int, boolean, java.lang.String[])
    {
        com.android.server.am.ActivityManagerService r0;
        int i0;
        boolean z0;
        java.lang.String[] r1;
        com.android.server.am.ProcessList $r2;
        java.lang.Throwable $r3;
        java.io.PrintWriter r4;
        java.util.ArrayList r5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r4 := @parameter0: java.io.PrintWriter;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        r1 := @parameter3: java.lang.String[];

        entermonitor r0;

     label1:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        r5 = virtualinvoke $r2.<com.android.server.am.ProcessList: java.util.ArrayList collectProcessesLocked(int,boolean,java.lang.String[])>(i0, z0, r1);

        exitmonitor r0;

     label2:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return r5;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    android.content.res.CompatibilityInfo compatibilityInfoForPackage(android.content.pm.ApplicationInfo)
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.pm.ApplicationInfo r1;
        com.android.server.wm.ActivityTaskManagerInternal $r2;
        android.content.res.CompatibilityInfo $r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.content.pm.ApplicationInfo;

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerInternal mAtmInternal>;

        $r3 = virtualinvoke $r2.<com.android.server.wm.ActivityTaskManagerInternal: android.content.res.CompatibilityInfo compatibilityInfoForPackage(android.content.pm.ApplicationInfo)>(r1);

        return $r3;
    }

    public void crashApplication(int, int, java.lang.String, int, java.lang.String, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, i2, $i3, $i4, $i5;
        java.lang.String r1, r12, r15;
        boolean z0;
        java.lang.StringBuilder $r2;
        java.lang.SecurityException $r9;
        com.android.server.am.AppErrors $r10;
        java.lang.Throwable $r11;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r12 := @parameter2: java.lang.String;

        i2 := @parameter3: int;

        r1 := @parameter4: java.lang.String;

        z0 := @parameter5: boolean;

        $i3 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.FORCE_STOP_PACKAGES");

        if $i3 != 0 goto label6;

        entermonitor r0;

     label1:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r10 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.AppErrors mAppErrors>;

        virtualinvoke $r10.<com.android.server.am.AppErrors: void scheduleAppCrashLocked(int,int,java.lang.String,int,java.lang.String,boolean)>(i0, i1, r12, i2, r1, z0);

        exitmonitor r0;

     label2:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label3:
        $r11 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r11;

     label6:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: crashApplication() from pid=");

        $i4 = staticinvoke <android.os.Binder: int getCallingPid()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i5 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.FORCE_STOP_PACKAGES");

        r15 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r15);

        $r9 = new java.lang.SecurityException;

        specialinvoke $r9.<java.lang.SecurityException: void <init>(java.lang.String)>(r15);

        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    boolean decProviderCountLocked(com.android.server.am.ContentProviderConnection, com.android.server.am.ContentProviderRecord, android.os.IBinder, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ContentProviderConnection r1;
        android.os.IBinder r2;
        boolean z0;
        int $i0, $i1, $i2, $i3, $i4, $i6, $i7, $i8, $i9;
        java.util.ArrayList $r3, $r5;
        com.android.server.am.ProcessRecord $r4, $r6, $r7, $r8, $r11, $r12;
        long $l5, $l10;
        com.android.server.am.ContentProviderRecord r9, r10;
        java.lang.String $r13, $r17;
        android.content.pm.ApplicationInfo $r14;
        android.content.ComponentName $r15;
        android.content.pm.ProviderInfo $r16;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ContentProviderConnection;

        r9 := @parameter1: com.android.server.am.ContentProviderRecord;

        r2 := @parameter2: android.os.IBinder;

        z0 := @parameter3: boolean;

        if r1 == null goto label5;

        r10 = r1.<com.android.server.am.ContentProviderConnection: com.android.server.am.ContentProviderRecord provider>;

        if z0 == 0 goto label1;

        $i6 = r1.<com.android.server.am.ContentProviderConnection: int stableCount>;

        $i7 = $i6 - 1;

        r1.<com.android.server.am.ContentProviderConnection: int stableCount> = $i7;

        goto label2;

     label1:
        $i0 = r1.<com.android.server.am.ContentProviderConnection: int unstableCount>;

        $i1 = $i0 - 1;

        r1.<com.android.server.am.ContentProviderConnection: int unstableCount> = $i1;

     label2:
        $i2 = r1.<com.android.server.am.ContentProviderConnection: int stableCount>;

        if $i2 != 0 goto label4;

        $i3 = r1.<com.android.server.am.ContentProviderConnection: int unstableCount>;

        if $i3 != 0 goto label4;

        virtualinvoke r1.<com.android.server.am.ContentProviderConnection: void stopAssociation()>();

        $r3 = r10.<com.android.server.am.ContentProviderRecord: java.util.ArrayList connections>;

        virtualinvoke $r3.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        $r4 = r1.<com.android.server.am.ContentProviderConnection: com.android.server.am.ProcessRecord client>;

        $r5 = $r4.<com.android.server.am.ProcessRecord: java.util.ArrayList conProviders>;

        virtualinvoke $r5.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        $r6 = r1.<com.android.server.am.ContentProviderConnection: com.android.server.am.ProcessRecord client>;

        $i4 = $r6.<com.android.server.am.ProcessRecord: int setProcState>;

        if $i4 >= 15 goto label3;

        $r7 = r10.<com.android.server.am.ContentProviderRecord: com.android.server.am.ProcessRecord proc>;

        if $r7 == null goto label3;

        $r8 = r10.<com.android.server.am.ContentProviderRecord: com.android.server.am.ProcessRecord proc>;

        $l5 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r8.<com.android.server.am.ProcessRecord: long lastProviderTime> = $l5;

     label3:
        $r11 = r1.<com.android.server.am.ContentProviderConnection: com.android.server.am.ProcessRecord client>;

        $i8 = $r11.<com.android.server.am.ProcessRecord: int uid>;

        $r12 = r1.<com.android.server.am.ContentProviderConnection: com.android.server.am.ProcessRecord client>;

        $r13 = $r12.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $i9 = r10.<com.android.server.am.ContentProviderRecord: int uid>;

        $r14 = r10.<com.android.server.am.ContentProviderRecord: android.content.pm.ApplicationInfo appInfo>;

        $l10 = $r14.<android.content.pm.ApplicationInfo: long longVersionCode>;

        $r15 = r10.<com.android.server.am.ContentProviderRecord: android.content.ComponentName name>;

        $r16 = r10.<com.android.server.am.ContentProviderRecord: android.content.pm.ProviderInfo info>;

        $r17 = $r16.<android.content.pm.ProviderInfo: java.lang.String processName>;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void stopAssociationLocked(int,java.lang.String,int,long,android.content.ComponentName,java.lang.String)>($i8, $r13, $i9, $l10, $r15, $r17);

        return 1;

     label4:
        return 0;

     label5:
        virtualinvoke r9.<com.android.server.am.ContentProviderRecord: boolean removeExternalProcessHandleLocked(android.os.IBinder)>(r2);

        return 0;
    }

    void dispatchOomAdjObserver(java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ActivityManagerService$OomAdjObserver r1;
        java.lang.Throwable $r2;
        java.lang.String r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r3 := @parameter0: java.lang.String;

        entermonitor r0;

     label1:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$OomAdjObserver mCurOomAdjObserver>;

        exitmonitor r0;

     label2:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        if r1 == null goto label3;

        interfaceinvoke r1.<com.android.server.am.ActivityManagerService$OomAdjObserver: void onOomAdjMessage(java.lang.String)>(r3);

     label3:
        return;

     label4:
        $r2 := @caughtexception;

     label5:
        exitmonitor r0;

     label6:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    void dispatchUidsChanged()
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, i16, i17, i18, i19, i21;
        com.android.server.am.UidRecord$ChangeItem r1, $r10, r31;
        com.android.server.am.UidRecord r2, $r14, $r26, $r27, r32;
        java.util.ArrayList $r3, $r5, $r11, $r23;
        com.android.server.am.UidRecord$ChangeItem[] $r4, $r9, $r12, $r25, $r28;
        android.os.RemoteCallbackList $r6, $r7, $r8, $r17, $r19;
        com.android.server.am.ActiveUids $r13, $r15, $r16;
        android.os.IInterface $r18;
        android.app.IUidObserver $r20;
        java.lang.Object $r21, $r24;
        com.android.server.am.ActivityManagerService$UidObserverRegistration $r22;
        java.lang.Throwable $r29, $r30;
        long $l20;

        r0 := @this: com.android.server.am.ActivityManagerService;

        entermonitor r0;

     label01:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r3 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingUidChanges>;

        i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        $r4 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.UidRecord$ChangeItem[] mActiveUidChanges>;

        $i1 = lengthof $r4;

        if $i1 >= i0 goto label02;

        $r28 = newarray (com.android.server.am.UidRecord$ChangeItem)[i0];

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.UidRecord$ChangeItem[] mActiveUidChanges> = $r28;

     label02:
        i15 = 0;

     label03:
        if i15 >= i0 goto label06;

     label04:
        $r23 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingUidChanges>;

        $r24 = virtualinvoke $r23.<java.util.ArrayList: java.lang.Object get(int)>(i15);

        r31 = (com.android.server.am.UidRecord$ChangeItem) $r24;

        $r25 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.UidRecord$ChangeItem[] mActiveUidChanges>;

        $r25[i15] = r31;

        $r26 = r31.<com.android.server.am.UidRecord$ChangeItem: com.android.server.am.UidRecord uidRecord>;

        if $r26 == null goto label05;

        $r27 = r31.<com.android.server.am.UidRecord$ChangeItem: com.android.server.am.UidRecord uidRecord>;

        $r27.<com.android.server.am.UidRecord: com.android.server.am.UidRecord$ChangeItem pendingChange> = null;

        r31.<com.android.server.am.UidRecord$ChangeItem: com.android.server.am.UidRecord uidRecord> = null;

     label05:
        i15 = i15 + 1;

        goto label03;

     label06:
        $r5 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingUidChanges>;

        virtualinvoke $r5.<java.util.ArrayList: void clear()>();

        exitmonitor r0;

     label07:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        $i2 = r0.<com.android.server.am.ActivityManagerService: int mUidChangeDispatchCount>;

        $i3 = $i2 + i0;

        r0.<com.android.server.am.ActivityManagerService: int mUidChangeDispatchCount> = $i3;

        $r6 = r0.<com.android.server.am.ActivityManagerService: android.os.RemoteCallbackList mUidObservers>;

        i16 = virtualinvoke $r6.<android.os.RemoteCallbackList: int beginBroadcast()>();

     label08:
        if i16 <= 0 goto label09;

        i16 = i16 + -1;

        $r17 = r0.<com.android.server.am.ActivityManagerService: android.os.RemoteCallbackList mUidObservers>;

        $r18 = virtualinvoke $r17.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>(i16);

        $r20 = (android.app.IUidObserver) $r18;

        $r19 = r0.<com.android.server.am.ActivityManagerService: android.os.RemoteCallbackList mUidObservers>;

        $r21 = virtualinvoke $r19.<android.os.RemoteCallbackList: java.lang.Object getBroadcastCookie(int)>(i16);

        $r22 = (com.android.server.am.ActivityManagerService$UidObserverRegistration) $r21;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void dispatchUidsChangedForObserver(android.app.IUidObserver,com.android.server.am.ActivityManagerService$UidObserverRegistration,int)>($r20, $r22, i0);

        goto label08;

     label09:
        $r7 = r0.<com.android.server.am.ActivityManagerService: android.os.RemoteCallbackList mUidObservers>;

        virtualinvoke $r7.<android.os.RemoteCallbackList: void finishBroadcast()>();

        $r8 = r0.<com.android.server.am.ActivityManagerService: android.os.RemoteCallbackList mUidObservers>;

        $i4 = virtualinvoke $r8.<android.os.RemoteCallbackList: int getRegisteredCallbackCount()>();

        if $i4 <= 0 goto label16;

        i17 = 0;

     label10:
        if i17 >= i0 goto label16;

        $r12 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.UidRecord$ChangeItem[] mActiveUidChanges>;

        r1 = $r12[i17];

        $i5 = r1.<com.android.server.am.UidRecord$ChangeItem: int change>;

        $i6 = $i5 & 1;

        if $i6 == 0 goto label11;

        $r16 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveUids mValidateUids>;

        $i14 = r1.<com.android.server.am.UidRecord$ChangeItem: int uid>;

        virtualinvoke $r16.<com.android.server.am.ActiveUids: void remove(int)>($i14);

        goto label15;

     label11:
        $r13 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveUids mValidateUids>;

        $i7 = r1.<com.android.server.am.UidRecord$ChangeItem: int uid>;

        r2 = virtualinvoke $r13.<com.android.server.am.ActiveUids: com.android.server.am.UidRecord get(int)>($i7);

        r32 = r2;

        if r2 != null goto label12;

        $r14 = new com.android.server.am.UidRecord;

        $i12 = r1.<com.android.server.am.UidRecord$ChangeItem: int uid>;

        specialinvoke $r14.<com.android.server.am.UidRecord: void <init>(int)>($i12);

        r32 = $r14;

        $r15 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveUids mValidateUids>;

        $i13 = r1.<com.android.server.am.UidRecord$ChangeItem: int uid>;

        virtualinvoke $r15.<com.android.server.am.ActiveUids: void put(int,com.android.server.am.UidRecord)>($i13, $r14);

     label12:
        $i8 = r1.<com.android.server.am.UidRecord$ChangeItem: int change>;

        $i9 = $i8 & 2;

        if $i9 == 0 goto label13;

        r32.<com.android.server.am.UidRecord: boolean idle> = 1;

        goto label14;

     label13:
        $i10 = r1.<com.android.server.am.UidRecord$ChangeItem: int change>;

        $i11 = $i10 & 4;

        if $i11 == 0 goto label14;

        r32.<com.android.server.am.UidRecord: boolean idle> = 0;

     label14:
        i18 = r1.<com.android.server.am.UidRecord$ChangeItem: int processState>;

        r32.<com.android.server.am.UidRecord: int setProcState> = i18;

        virtualinvoke r32.<com.android.server.am.UidRecord: void setCurProcState(int)>(i18);

        i19 = r1.<com.android.server.am.UidRecord$ChangeItem: int capability>;

        r32.<com.android.server.am.UidRecord: int setCapability> = i19;

        r32.<com.android.server.am.UidRecord: int curCapability> = i19;

        $l20 = r1.<com.android.server.am.UidRecord$ChangeItem: long procStateSeq>;

        r32.<com.android.server.am.UidRecord: long lastDispatchedProcStateSeq> = $l20;

     label15:
        i17 = i17 + 1;

        goto label10;

     label16:
        entermonitor r0;

     label17:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

     label18:
        i21 = 0;

     label19:
        if i21 >= i0 goto label22;

     label20:
        $r11 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mAvailUidChanges>;

        $r9 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.UidRecord$ChangeItem[] mActiveUidChanges>;

        $r10 = $r9[i21];

        virtualinvoke $r11.<java.util.ArrayList: boolean add(java.lang.Object)>($r10);

     label21:
        i21 = i21 + 1;

        goto label19;

     label22:
        exitmonitor r0;

     label23:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label24:
        $r30 := @caughtexception;

     label25:
        exitmonitor r0;

     label26:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r30;

     label27:
        $r29 := @caughtexception;

     label28:
        exitmonitor r0;

     label29:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r29;

        catch java.lang.Throwable from label01 to label02 with label27;
        catch java.lang.Throwable from label04 to label05 with label27;
        catch java.lang.Throwable from label06 to label07 with label27;
        catch java.lang.Throwable from label17 to label18 with label24;
        catch java.lang.Throwable from label20 to label21 with label24;
        catch java.lang.Throwable from label22 to label23 with label24;
        catch java.lang.Throwable from label25 to label26 with label24;
        catch java.lang.Throwable from label28 to label29 with label27;
    }

    final void doLowMemReportIfNeededLocked(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ActivityManagerService r0;
        boolean z0, $z1, z5;
        com.android.server.am.ProcessRecord r1, r22;
        com.android.server.am.ProcessList $r2, $r5, $r6, $r10, $r21;
        java.lang.String $r3, $r4, $r17, $r18, $r19;
        int $i0, $i1, $i6, $i8, $i9, $i10, $i11, i17;
        java.util.ArrayList $r7, $r11, $r15, $r20, r23;
        com.android.server.am.ActivityManagerService$MainHandler $r8, $r9;
        java.lang.Object $r12;
        android.app.IApplicationThread $r13;
        com.android.server.am.ActivityManagerConstants $r14;
        long $l2, $l3, $l4, $l7, $l12, $l13, l15, l16;
        byte $b5, $b14;
        com.android.server.am.ProcessMemInfo $r16;
        android.os.Message r24;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r22 := @parameter0: com.android.server.am.ProcessRecord;

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $z1 = virtualinvoke $r2.<com.android.server.am.ProcessList: boolean haveBackgroundProcessLocked()>();

        if $z1 != 0 goto label13;

        $r3 = "1";

        $r4 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String,java.lang.String)>("ro.debuggable", "0");

        z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        z5 = z0;

        if z0 == 0 goto label02;

        l15 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l12 = r0.<com.android.server.am.ActivityManagerService: long mLastMemUsageReportTime>;

        $l13 = $l12 + 300000L;

        $b14 = l15 cmp $l13;

        if $b14 >= 0 goto label01;

        z5 = 0;

        goto label02;

     label01:
        r0.<com.android.server.am.ActivityManagerService: long mLastMemUsageReportTime> = l15;

        z5 = z0;

     label02:
        if z5 == 0 goto label03;

        $r20 = new java.util.ArrayList;

        $r21 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $i11 = virtualinvoke $r21.<com.android.server.am.ProcessList: int getLruSizeLocked()>();

        specialinvoke $r20.<java.util.ArrayList: void <init>(int)>($i11);

        r23 = $r20;

        goto label04;

     label03:
        r23 = null;

     label04:
        $r5 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $i0 = virtualinvoke $r5.<com.android.server.am.ProcessList: int getLruSizeLocked()>();

        staticinvoke <com.android.server.am.EventLogTags: void writeAmLowMemory(int)>($i0);

        l16 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r6 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r7 = $r6.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        $i1 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        i17 = $i1 - 1;

     label05:
        if i17 < 0 goto label11;

        $r10 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r11 = $r10.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        $r12 = virtualinvoke $r11.<java.util.ArrayList: java.lang.Object get(int)>(i17);

        r1 = (com.android.server.am.ProcessRecord) $r12;

        if r1 == r22 goto label10;

        $r13 = r1.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r13 != null goto label06;

        goto label10;

     label06:
        if z5 == 0 goto label07;

        $r16 = new com.android.server.am.ProcessMemInfo;

        $r17 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $i8 = r1.<com.android.server.am.ProcessRecord: int pid>;

        $i9 = r1.<com.android.server.am.ProcessRecord: int setAdj>;

        $i10 = r1.<com.android.server.am.ProcessRecord: int setProcState>;

        $r18 = r1.<com.android.server.am.ProcessRecord: java.lang.String adjType>;

        $r19 = virtualinvoke r1.<com.android.server.am.ProcessRecord: java.lang.String makeAdjReason()>();

        specialinvoke $r16.<com.android.server.am.ProcessMemInfo: void <init>(java.lang.String,int,int,int,java.lang.String,java.lang.String)>($r17, $i8, $i9, $i10, $r18, $r19);

        virtualinvoke r23.<java.util.ArrayList: boolean add(java.lang.Object)>($r16);

     label07:
        $l3 = r1.<com.android.server.am.ProcessRecord: long lastLowMemory>;

        $r14 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerConstants mConstants>;

        $l2 = $r14.<com.android.server.am.ActivityManagerConstants: long GC_MIN_INTERVAL>;

        $l4 = $l3 + $l2;

        $b5 = $l4 cmp l16;

        if $b5 > 0 goto label10;

        $i6 = r1.<com.android.server.am.ProcessRecord: int setAdj>;

        if $i6 > 400 goto label08;

        r1.<com.android.server.am.ProcessRecord: long lastRequestedGc> = 0L;

        goto label09;

     label08:
        $l7 = r1.<com.android.server.am.ProcessRecord: long lastLowMemory>;

        r1.<com.android.server.am.ProcessRecord: long lastRequestedGc> = $l7;

     label09:
        r1.<com.android.server.am.ProcessRecord: boolean reportLowMemory> = 1;

        r1.<com.android.server.am.ProcessRecord: long lastLowMemory> = l16;

        $r15 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesToGc>;

        virtualinvoke $r15.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void addProcessToGcListLocked(com.android.server.am.ProcessRecord)>(r1);

     label10:
        i17 = i17 + -1;

        goto label05;

     label11:
        if z5 == 0 goto label12;

        $r8 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        r24 = virtualinvoke $r8.<com.android.server.am.ActivityManagerService$MainHandler: android.os.Message obtainMessage(int,java.lang.Object)>(33, r23);

        $r9 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        virtualinvoke $r9.<com.android.server.am.ActivityManagerService$MainHandler: boolean sendMessage(android.os.Message)>(r24);

     label12:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void scheduleAppGcsLocked()>();

        goto label13;

     label13:
        return;
    }

    final void doStopUidLocked(int, com.android.server.am.UidRecord)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0;
        com.android.server.am.UidRecord r1;
        com.android.server.am.ActiveServices $r2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.server.am.UidRecord;

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveServices mServices>;

        virtualinvoke $r2.<com.android.server.am.ActiveServices: void stopInBackgroundLocked(int)>(i0);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enqueueUidChangeLocked(com.android.server.am.UidRecord,int,int)>(r1, i0, 2);

        return;
    }

    protected void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.am.ActivityManagerService r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        com.android.server.utils.PriorityDump$PriorityDumper $r4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        $r4 = r0.<com.android.server.am.ActivityManagerService: com.android.server.utils.PriorityDump$PriorityDumper mPriorityDumper>;

        staticinvoke <com.android.server.utils.PriorityDump: void dump(com.android.server.utils.PriorityDump$PriorityDumper,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>($r4, r1, r2, r3);

        return;
    }

    void dumpAllowedAssociationsLocked(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[], int, boolean, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        java.io.PrintWriter r1;
        boolean z0, $z1, $z2, $z3, z4, z5, z6;
        java.lang.String r2, $r14, r17, $r20;
        android.util.ArrayMap $r3, $r4, $r5, $r7, $r10;
        int $i0, i1, i2, i3, $i4;
        java.lang.Object $r6, $r8, $r11, $r13, $r19;
        com.android.server.am.ActivityManagerService$PackageAssociationInfo $r9, $r12;
        java.io.FileDescriptor r15;
        java.lang.String[] r16;
        android.util.ArraySet r18;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r15 := @parameter0: java.io.FileDescriptor;

        r1 := @parameter1: java.io.PrintWriter;

        r16 := @parameter2: java.lang.String[];

        i1 := @parameter3: int;

        z0 := @parameter4: boolean;

        r2 := @parameter5: java.lang.String;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("ACTIVITY MANAGER ALLOWED ASSOCIATION STATE (dumpsys activity allowed-associations)");

        z4 = 0;

        z5 = 0;

        $r3 = r0.<com.android.server.am.ActivityManagerService: android.util.ArrayMap mAllowedAssociations>;

        if $r3 == null goto label8;

        i2 = 0;

     label1:
        z4 = z5;

        $r4 = r0.<com.android.server.am.ActivityManagerService: android.util.ArrayMap mAllowedAssociations>;

        $i0 = virtualinvoke $r4.<android.util.ArrayMap: int size()>();

        if i2 >= $i0 goto label8;

        $r5 = r0.<com.android.server.am.ActivityManagerService: android.util.ArrayMap mAllowedAssociations>;

        $r6 = virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i2);

        r17 = (java.lang.String) $r6;

        $r7 = r0.<com.android.server.am.ActivityManagerService: android.util.ArrayMap mAllowedAssociations>;

        $r8 = virtualinvoke $r7.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i2);

        $r9 = (com.android.server.am.ActivityManagerService$PackageAssociationInfo) $r8;

        r18 = virtualinvoke $r9.<com.android.server.am.ActivityManagerService$PackageAssociationInfo: android.util.ArraySet getAllowedPackageAssociations()>();

        z6 = z5;

        if z5 != 0 goto label2;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  Allowed associations (by restricted package):");

        z6 = 1;

     label2:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  * ");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r17);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(":");

        i3 = 0;

     label3:
        $i4 = virtualinvoke r18.<android.util.ArraySet: int size()>();

        if i3 >= $i4 goto label6;

        if r2 == null goto label4;

        $z2 = virtualinvoke r17.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z2 != 0 goto label4;

        $r13 = virtualinvoke r18.<android.util.ArraySet: java.lang.Object valueAt(int)>(i3);

        $r14 = (java.lang.String) $r13;

        $z3 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z3 == 0 goto label5;

     label4:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("      Allow: ");

        $r19 = virtualinvoke r18.<android.util.ArraySet: java.lang.Object valueAt(int)>(i3);

        $r20 = (java.lang.String) $r19;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r20);

     label5:
        i3 = i3 + 1;

        goto label3;

     label6:
        $r10 = r0.<com.android.server.am.ActivityManagerService: android.util.ArrayMap mAllowedAssociations>;

        $r11 = virtualinvoke $r10.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i2);

        $r12 = (com.android.server.am.ActivityManagerService$PackageAssociationInfo) $r11;

        $z1 = virtualinvoke $r12.<com.android.server.am.ActivityManagerService$PackageAssociationInfo: boolean isDebuggable()>();

        if $z1 == 0 goto label7;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      (debuggable)");

     label7:
        i2 = i2 + 1;

        z5 = z6;

        goto label1;

     label8:
        if z4 != 0 goto label9;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  (No association restrictions)");

     label9:
        return;
    }

    final void dumpApplicationMemoryUsage(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String, java.lang.String[], boolean, java.io.PrintWriter, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2, r4;
        java.lang.String r3, r6, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r24;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15;
        com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions $r7;
        int $i0, $i1, i3, $i4, $i5, $i6, $i7;
        char $c2;
        java.lang.StringBuilder $r20;
        java.lang.String[] r25, r27;
        java.util.ArrayList r28;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String;

        r25 := @parameter3: java.lang.String[];

        z0 := @parameter4: boolean;

        r4 := @parameter5: java.io.PrintWriter;

        z1 := @parameter6: boolean;

        $r7 = new com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions;

        specialinvoke $r7.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: void <init>(com.android.server.am.ActivityManagerService$1)>(null);

        $r7.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean dumpDetails> = 0;

        $r7.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean dumpFullDetails> = 0;

        $r7.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean dumpDalvik> = 0;

        $r7.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean dumpSummaryOnly> = 0;

        $r7.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean dumpUnreachable> = 0;

        $r7.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean oomOnly> = 0;

        $r7.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean isCompact> = 0;

        $r7.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean localOnly> = 0;

        $r7.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean packages> = 0;

        $r7.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean isCheckinRequest> = 0;

        $r7.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean dumpSwapPss> = 0;

        $r7.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean dumpProto> = z1;

        i3 = 0;

     label01:
        $i0 = lengthof r25;

        if i3 >= $i0 goto label16;

        r6 = r25[i3];

        if r6 == null goto label16;

        $i1 = virtualinvoke r6.<java.lang.String: int length()>();

        if $i1 <= 0 goto label16;

        $c2 = virtualinvoke r6.<java.lang.String: char charAt(int)>(0);

        if $c2 == 45 goto label02;

        goto label16;

     label02:
        i3 = i3 + 1;

        $r8 = "-a";

        $z2 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z2 == 0 goto label03;

        $r7.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean dumpDetails> = 1;

        $r7.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean dumpFullDetails> = 1;

        $r7.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean dumpDalvik> = 1;

        $r7.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean dumpSwapPss> = 1;

        goto label15;

     label03:
        $r9 = "-d";

        $z3 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z3 == 0 goto label04;

        $r7.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean dumpDalvik> = 1;

        goto label15;

     label04:
        $r10 = "-c";

        $z4 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z4 == 0 goto label05;

        $r7.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean isCompact> = 1;

        goto label15;

     label05:
        $r11 = "-s";

        $z5 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z5 == 0 goto label06;

        $r7.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean dumpDetails> = 1;

        $r7.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean dumpSummaryOnly> = 1;

        goto label15;

     label06:
        $r12 = "-S";

        $z6 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z6 == 0 goto label07;

        $r7.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean dumpSwapPss> = 1;

        goto label15;

     label07:
        $r13 = "--unreachable";

        $z7 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z7 == 0 goto label08;

        $r7.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean dumpUnreachable> = 1;

        goto label15;

     label08:
        $r14 = "--oom";

        $z8 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z8 == 0 goto label09;

        $r7.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean oomOnly> = 1;

        goto label15;

     label09:
        $r15 = "--local";

        $z9 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z9 == 0 goto label10;

        $r7.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean localOnly> = 1;

        goto label15;

     label10:
        $r16 = "--package";

        $z10 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z10 == 0 goto label11;

        $r7.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean packages> = 1;

        goto label15;

     label11:
        $r17 = "--checkin";

        $z11 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z11 == 0 goto label12;

        $r7.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean isCheckinRequest> = 1;

        goto label15;

     label12:
        $r18 = "--proto";

        $z12 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z12 == 0 goto label13;

        $r7.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean dumpProto> = 1;

        goto label15;

     label13:
        $r19 = "-h";

        $z13 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z13 == 0 goto label14;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("meminfo dump options: [-a] [-d] [-c] [-s] [--oom] [process]");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  -a: include all available information for each process.");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  -d: include dalvik details.");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  -c: dump in a compact machine-parseable representation.");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  -s: dump only summary of application memory usage.");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  -S: dump also SwapPss.");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  --oom: only show processes organized by oom adj.");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  --local: only collect details locally, don\'t call process.");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  --package: interpret process arg as package, dumping all");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("             processes that have loaded that package.");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  --checkin: dump data for a checkin");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  --proto: dump data to proto");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("If [process] is specified it can be the name or ");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("pid of a specific process to dump.");

        return;

     label14:
        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown argument: ");

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; use -h for help");

        $r24 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r24);

     label15:
        goto label01;

     label16:
        $i4 = lengthof r25;

        $i5 = $i4 - i3;

        r27 = newarray (java.lang.String)[$i5];

        $i6 = lengthof r25;

        $i7 = $i6 - i3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r25, i3, r27, 0, $i7);

        $z14 = $r7.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean packages>;

        r28 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList collectProcesses(java.io.PrintWriter,int,boolean,java.lang.String[])>(r2, i3, $z14, r25);

        $z15 = $r7.<com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions: boolean dumpProto>;

        if $z15 == 0 goto label17;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void dumpApplicationMemoryUsage(java.io.FileDescriptor,com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions,java.lang.String[],boolean,java.util.ArrayList)>(r1, $r7, r27, z0, r28);

        goto label18;

     label17:
        specialinvoke r0.<com.android.server.am.ActivityManagerService: void dumpApplicationMemoryUsage(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String,com.android.server.am.ActivityManagerService$MemoryUsageDumpOptions,java.lang.String[],boolean,java.util.ArrayList,java.io.PrintWriter)>(r1, r2, r3, $r7, r27, z0, r28, r4);

     label18:
        return;
    }

    void dumpAssociationsLocked(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[], int, boolean, boolean, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        java.io.PrintWriter r1;
        boolean z0, $z2, z3, z5;
        java.lang.String r2, $r12, $r14, $r24, $r25, $r27;
        long l0, l5, $l8, $l9, $l16, $l17, $l18, $l19, l31, l35;
        int i1, i2, i3, i4, $i6, $i7, $i10, $i11, $i13, $i14, $i15, $i20, $i21, i22, i24, i25, i26, i27, i28, $i29, $i30, $i32, i33, $i34;
        android.util.SparseArray r3, $r6, $r21;
        com.android.server.am.ActivityManagerService$Association r5;
        java.lang.Object $r7, $r8, $r9, $r10;
        long[] $r11, $r28;
        byte $b12;
        android.content.ComponentName $r13, $r26;
        android.os.RemoteException $r15;
        java.io.FileDescriptor r16;
        java.lang.String[] r17;
        android.content.pm.IPackageManager r19;
        android.util.ArrayMap r22, r23;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r16 := @parameter0: java.io.FileDescriptor;

        r1 := @parameter1: java.io.PrintWriter;

        r17 := @parameter2: java.lang.String[];

        i22 := @parameter3: int;

        z3 := @parameter4: boolean;

        z0 := @parameter5: boolean;

        r2 := @parameter6: java.lang.String;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("ACTIVITY MANAGER ASSOCIATIONS (dumpsys activity associations)");

        i24 = 0;

        if r2 == null goto label04;

        r19 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

     label01:
        i24 = interfaceinvoke r19.<android.content.pm.IPackageManager: int getPackageUid(java.lang.String,int,int)>(r2, 4194304, 0);

     label02:
        goto label04;

     label03:
        $r15 := @caughtexception;

        i24 = 0;

     label04:
        z5 = 0;

        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        i25 = 0;

        $r21 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mAssociations>;

        i1 = virtualinvoke $r21.<android.util.SparseArray: int size()>();

     label05:
        if i25 >= i1 goto label19;

        $r6 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mAssociations>;

        $r7 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object valueAt(int)>(i25);

        r22 = (android.util.ArrayMap) $r7;

        i26 = 0;

        i2 = virtualinvoke r22.<android.util.ArrayMap: int size()>();

     label06:
        if i26 >= i2 goto label18;

        $r8 = virtualinvoke r22.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i26);

        r3 = (android.util.SparseArray) $r8;

        i27 = 0;

        i3 = virtualinvoke r3.<android.util.SparseArray: int size()>();

     label07:
        if i27 >= i3 goto label17;

        $r9 = virtualinvoke r3.<android.util.SparseArray: java.lang.Object valueAt(int)>(i27);

        r23 = (android.util.ArrayMap) $r9;

        i4 = virtualinvoke r23.<android.util.ArrayMap: int size()>();

        i28 = 0;

     label08:
        if i28 >= i4 goto label16;

        $r10 = virtualinvoke r23.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i28);

        r5 = (com.android.server.am.ActivityManagerService$Association) $r10;

        if r2 == null goto label09;

        $r13 = r5.<com.android.server.am.ActivityManagerService$Association: android.content.ComponentName mTargetComponent>;

        $r14 = virtualinvoke $r13.<android.content.ComponentName: java.lang.String getPackageName()>();

        $z2 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z2 != 0 goto label09;

        $i20 = r5.<com.android.server.am.ActivityManagerService$Association: int mSourceUid>;

        $i21 = staticinvoke <android.os.UserHandle: int getAppId(int)>($i20);

        if $i21 == i24 goto label09;

        goto label15;

     label09:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  ");

        $r24 = r5.<com.android.server.am.ActivityManagerService$Association: java.lang.String mTargetProcess>;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r24);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("/");

        $i29 = r5.<com.android.server.am.ActivityManagerService$Association: int mTargetUid>;

        staticinvoke <android.os.UserHandle: void formatUid(java.io.PrintWriter,int)>(r1, $i29);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" <- ");

        $r25 = r5.<com.android.server.am.ActivityManagerService$Association: java.lang.String mSourceProcess>;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r25);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("/");

        $i30 = r5.<com.android.server.am.ActivityManagerService$Association: int mSourceUid>;

        staticinvoke <android.os.UserHandle: void formatUid(java.io.PrintWriter,int)>(r1, $i30);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("    via ");

        $r26 = r5.<com.android.server.am.ActivityManagerService$Association: android.content.ComponentName mTargetComponent>;

        $r27 = virtualinvoke $r26.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r27);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("    ");

        l31 = r5.<com.android.server.am.ActivityManagerService$Association: long mTime>;

        $i32 = r5.<com.android.server.am.ActivityManagerService$Association: int mNesting>;

        if $i32 <= 0 goto label10;

        $l18 = r5.<com.android.server.am.ActivityManagerService$Association: long mStartTime>;

        $l19 = l0 - $l18;

        l31 = l31 + $l19;

        goto label10;

     label10:
        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>(l31, r1);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" (");

        $i6 = r5.<com.android.server.am.ActivityManagerService$Association: int mCount>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i6);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" times)");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  ");

        i33 = 0;

     label11:
        $r28 = r5.<com.android.server.am.ActivityManagerService$Association: long[] mStateTimes>;

        $i34 = lengthof $r28;

        if i33 >= $i34 goto label14;

        $r11 = r5.<com.android.server.am.ActivityManagerService$Association: long[] mStateTimes>;

        l5 = $r11[i33];

        l35 = l5;

        $i10 = r5.<com.android.server.am.ActivityManagerService$Association: int mLastState>;

        $i11 = $i10 - 0;

        if $i11 != i33 goto label12;

        $l16 = r5.<com.android.server.am.ActivityManagerService$Association: long mLastStateUptime>;

        $l17 = l0 - $l16;

        l35 = l5 + $l17;

     label12:
        $b12 = l35 cmp 0L;

        if $b12 == 0 goto label13;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" ");

        $i13 = i33 + 0;

        $r12 = staticinvoke <com.android.server.am.ProcessList: java.lang.String makeProcStateString(int)>($i13);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r12);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("=");

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>(l35, r1);

        $i14 = r5.<com.android.server.am.ActivityManagerService$Association: int mLastState>;

        $i15 = $i14 - 0;

        if $i15 != i33 goto label13;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("*");

        goto label13;

     label13:
        i33 = i33 + 1;

        goto label11;

     label14:
        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        z5 = 1;

        $i7 = r5.<com.android.server.am.ActivityManagerService$Association: int mNesting>;

        if $i7 <= 0 goto label15;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("    Currently active: ");

        $l8 = r5.<com.android.server.am.ActivityManagerService$Association: long mStartTime>;

        $l9 = l0 - $l8;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>($l9, r1);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        z5 = 1;

     label15:
        i28 = i28 + 1;

        goto label08;

     label16:
        i27 = i27 + 1;

        goto label07;

     label17:
        i26 = i26 + 1;

        goto label06;

     label18:
        i25 = i25 + 1;

        goto label05;

     label19:
        if z5 != 0 goto label20;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  (nothing)");

     label20:
        return;

        catch android.os.RemoteException from label01 to label02 with label03;
    }

    final void dumpBinderCacheContents(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.am.ActivityManagerService r0;
        java.io.PrintWriter r1;
        java.lang.String[] r2;
        java.util.ArrayList r3;
        com.android.server.am.ProcessRecord r4;
        com.android.internal.os.TransferPipe r5;
        int $i0, $i1, i2;
        java.lang.Object $r6;
        android.app.IApplicationThread $r7, $r16;
        java.lang.StringBuilder $r8, $r18, $r25, $r30;
        java.lang.String $r12, $r15, $r20, $r22, $r28, $r33;
        android.os.ParcelFileDescriptor $r17;
        java.lang.Throwable $r23, $r24;
        android.os.RemoteException $r29;
        java.io.FileDescriptor r34;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r34 := @parameter0: java.io.FileDescriptor;

        r1 := @parameter1: java.io.PrintWriter;

        r2 := @parameter2: java.lang.String[];

        r3 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList collectProcesses(java.io.PrintWriter,int,boolean,java.lang.String[])>(r1, 0, 0, r2);

        if r3 != null goto label01;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No process found for: ");

        $r20 = r2[0];

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r22);

        return;

     label01:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Per-process Binder Cache Contents");

        $i0 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        i2 = $i0 - 1;

     label02:
        if i2 < 0 goto label13;

        $r6 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r4 = (com.android.server.am.ProcessRecord) $r6;

        $r7 = r4.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r7 == null goto label12;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n\n** Cache info for pid ");

        $i1 = r4.<com.android.server.am.ProcessRecord: int pid>;

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [");

        $r12 = r4.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] **");

        $r15 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r15);

        virtualinvoke r1.<java.io.PrintWriter: void flush()>();

     label03:
        r5 = new com.android.internal.os.TransferPipe;

        specialinvoke r5.<com.android.internal.os.TransferPipe: void <init>()>();

     label04:
        $r16 = r4.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r17 = virtualinvoke r5.<com.android.internal.os.TransferPipe: android.os.ParcelFileDescriptor getWriteFd()>();

        interfaceinvoke $r16.<android.app.IApplicationThread: void dumpCacheInfo(android.os.ParcelFileDescriptor,java.lang.String[])>($r17, r2);

        virtualinvoke r5.<com.android.internal.os.TransferPipe: void go(java.io.FileDescriptor)>(r34);

     label05:
        virtualinvoke r5.<com.android.internal.os.TransferPipe: void kill()>();

     label06:
        goto label12;

     label07:
        $r23 := @caughtexception;

     label08:
        virtualinvoke r5.<com.android.internal.os.TransferPipe: void kill()>();

     label09:
        throw $r23;

     label10:
        $r29 := @caughtexception;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got a RemoteException while dumping the app ");

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r33 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r33);

        virtualinvoke r1.<java.io.PrintWriter: void flush()>();

        goto label12;

     label11:
        $r24 := @caughtexception;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure while dumping the app ");

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r28 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r28);

        virtualinvoke r1.<java.io.PrintWriter: void flush()>();

     label12:
        i2 = i2 + -1;

        goto label02;

     label13:
        return;

        catch java.io.IOException from label03 to label04 with label11;
        catch android.os.RemoteException from label03 to label04 with label10;
        catch java.lang.Throwable from label04 to label05 with label07;
        catch java.io.IOException from label05 to label06 with label11;
        catch android.os.RemoteException from label05 to label06 with label10;
        catch java.io.IOException from label08 to label09 with label11;
        catch android.os.RemoteException from label08 to label09 with label10;
        catch java.io.IOException from label09 to label10 with label11;
        catch android.os.RemoteException from label09 to label10 with label10;
    }

    void dumpBinderProxies(java.io.PrintWriter, int)
    {
        com.android.server.am.ActivityManagerService r0;
        java.io.PrintWriter r1;
        int i0, i1;
        java.lang.StringBuilder $r3;
        java.lang.String $r5, $r8;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.io.PrintWriter;

        i0 := @parameter1: int;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("ACTIVITY MANAGER BINDER PROXY STATE (dumpsys activity binder-proxies)");

        i1 = staticinvoke <android.os.BinderProxy: int getProxyCount()>();

        if i1 < i0 goto label1;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void dumpBinderProxyInterfaceCounts(java.io.PrintWriter,java.lang.String)>(r1, "Top proxy interface names held by SYSTEM");

        goto label2;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not dumping proxy interface counts because size (");

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") looks reasonable");

        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r8);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label2:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean dumpBinderProxiesCounts(java.io.PrintWriter,java.lang.String)>(r1, "  Counts of Binder Proxies held by SYSTEM");

        return;
    }

    boolean dumpBinderProxiesCounts(java.io.PrintWriter, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        java.io.PrintWriter r1;
        android.util.SparseIntArray r2;
        int i0, $i1, $i2, i3, i4, i5;
        android.content.Context $r3;
        android.content.pm.PackageManager $r4;
        java.lang.String $r5, r6;
        java.lang.String[] r7;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.io.PrintWriter;

        r6 := @parameter1: java.lang.String;

        r2 = staticinvoke <com.android.internal.os.BinderInternal: android.util.SparseIntArray nGetBinderProxyPerUidCounts()>();

        if r2 == null goto label7;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(r6);

        i3 = 0;

     label1:
        $i1 = virtualinvoke r2.<android.util.SparseIntArray: int size()>();

        if i3 >= $i1 goto label6;

        i0 = virtualinvoke r2.<android.util.SparseIntArray: int keyAt(int)>(i3);

        i4 = virtualinvoke r2.<android.util.SparseIntArray: int valueAt(int)>(i3);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("    UID ");

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>(i0);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(", binder count = ");

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>(i4);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(", package(s)= ");

        $r3 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r7 = virtualinvoke $r4.<android.content.pm.PackageManager: java.lang.String[] getPackagesForUid(int)>(i0);

        if r7 == null goto label4;

        i5 = 0;

     label2:
        $i2 = lengthof r7;

        if i5 >= $i2 goto label3;

        $r5 = r7[i5];

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r5);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("; ");

        i5 = i5 + 1;

        goto label2;

     label3:
        goto label5;

     label4:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("NO PACKAGE NAME FOUND");

     label5:
        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        i3 = i3 + 1;

        goto label1;

     label6:
        return 1;

     label7:
        return 0;
    }

    void dumpBinderProxyInterfaceCounts(java.io.PrintWriter, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        java.io.PrintWriter r1;
        android.os.BinderProxy$InterfaceCount[] r2;
        int $i0, $i1, i2;
        java.lang.StringBuilder $r3;
        android.os.BinderProxy$InterfaceCount $r7;
        java.lang.String $r9, r10;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.io.PrintWriter;

        r10 := @parameter1: java.lang.String;

        r2 = staticinvoke <android.os.BinderProxy: android.os.BinderProxy$InterfaceCount[] getSortedInterfaceCounts(int)>(50);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(r10);

        i2 = 0;

     label1:
        $i0 = lengthof r2;

        if i2 >= $i0 goto label2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    #");

        $i1 = i2 + 1;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r7 = r2[i2];

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r9);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    void dumpBroadcastStatsCheckinLocked(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[], int, boolean, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        java.io.PrintWriter r1;
        java.lang.String[] r2;
        int i0;
        boolean z0;
        java.lang.String r3;
        com.android.server.am.BroadcastStats $r4, $r5, r7;
        java.io.FileDescriptor r6;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r6 := @parameter0: java.io.FileDescriptor;

        r1 := @parameter1: java.io.PrintWriter;

        r2 := @parameter2: java.lang.String[];

        i0 := @parameter3: int;

        z0 := @parameter4: boolean;

        r3 := @parameter5: java.lang.String;

        $r4 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastStats mCurBroadcastStats>;

        if $r4 != null goto label1;

        return;

     label1:
        r7 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastStats mLastBroadcastStats>;

        if r7 == null goto label2;

        virtualinvoke r7.<com.android.server.am.BroadcastStats: void dumpCheckinStats(java.io.PrintWriter,java.lang.String)>(r1, r3);

        if z0 == 0 goto label2;

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastStats mLastBroadcastStats> = null;

        return;

     label2:
        $r5 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastStats mCurBroadcastStats>;

        virtualinvoke $r5.<com.android.server.am.BroadcastStats: void dumpCheckinStats(java.io.PrintWriter,java.lang.String)>(r1, r3);

        if z0 == 0 goto label3;

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastStats mCurBroadcastStats> = null;

     label3:
        return;
    }

    void dumpBroadcastStatsLocked(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[], int, boolean, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        int i0;
        boolean z0, $z1, $z2;
        java.lang.String r4;
        long l1, $l2, $l3, $l4, $l5, $l6, $l7, $l8, $l9, $l10;
        com.android.server.am.BroadcastStats $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        i0 := @parameter3: int;

        z0 := @parameter4: boolean;

        r4 := @parameter5: java.lang.String;

        $r5 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastStats mCurBroadcastStats>;

        if $r5 != null goto label1;

        return;

     label1:
        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("ACTIVITY MANAGER BROADCAST STATS STATE (dumpsys activity broadcast-stats)");

        l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r6 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastStats mLastBroadcastStats>;

        if $r6 == null goto label3;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("  Last stats (from ");

        $r7 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastStats mLastBroadcastStats>;

        $l2 = $r7.<com.android.server.am.BroadcastStats: long mStartRealtime>;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,long,java.io.PrintWriter)>($l2, l1, r2);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" to ");

        $r8 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastStats mLastBroadcastStats>;

        $l3 = $r8.<com.android.server.am.BroadcastStats: long mEndRealtime>;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,long,java.io.PrintWriter)>($l3, l1, r2);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(", ");

        $r9 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastStats mLastBroadcastStats>;

        $l5 = $r9.<com.android.server.am.BroadcastStats: long mEndUptime>;

        $r10 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastStats mLastBroadcastStats>;

        $l4 = $r10.<com.android.server.am.BroadcastStats: long mStartUptime>;

        $l6 = $l5 - $l4;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>($l6, r2);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>(" uptime):");

        $r11 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastStats mLastBroadcastStats>;

        $z1 = virtualinvoke $r11.<com.android.server.am.BroadcastStats: boolean dumpStats(java.io.PrintWriter,java.lang.String,java.lang.String)>(r2, "    ", r4);

        if $z1 != 0 goto label2;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("    (nothing)");

     label2:
        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label3:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("  Current stats (from ");

        $r12 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastStats mCurBroadcastStats>;

        $l7 = $r12.<com.android.server.am.BroadcastStats: long mStartRealtime>;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,long,java.io.PrintWriter)>($l7, l1, r2);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" to now, ");

        $l8 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r13 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastStats mCurBroadcastStats>;

        $l9 = $r13.<com.android.server.am.BroadcastStats: long mStartUptime>;

        $l10 = $l8 - $l9;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>($l10, r2);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>(" uptime):");

        $r14 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastStats mCurBroadcastStats>;

        $z2 = virtualinvoke $r14.<com.android.server.am.BroadcastStats: boolean dumpStats(java.io.PrintWriter,java.lang.String,java.lang.String)>(r2, "    ", r4);

        if $z2 != 0 goto label4;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("    (nothing)");

     label4:
        return;
    }

    void dumpBroadcastsLocked(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[], int, boolean, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        java.io.PrintWriter r1;
        int i0, $i1, $i2, $i3, $i4, i5, i6, i7, i9, i10, i11, i12;
        java.lang.String $r2, $r7, $r11, $r22, $r27, $r30, $r39, $r40, $r41, r44, r48;
        boolean $z0, $z1, $z2, $z3, $z4, z5, z10, z11, z12, z13, z15, $z16, z17, z19, z21, z22, $z25, z26;
        android.util.PrintWriterPrinter $r3;
        com.android.server.am.ActivityManagerService$MainHandler $r4;
        java.lang.StringBuilder $r5, $r15;
        android.util.SparseArray $r12, $r13, $r14, $r16;
        java.lang.Object $r17, $r20, $r21, $r23, $r25, $r28, $r35;
        android.util.ArrayMap $r18;
        java.util.Set $r19;
        android.content.Intent $r26, $r29;
        com.android.server.am.BroadcastQueue $r31, r57;
        java.util.HashMap $r32, $r33;
        java.util.Collection $r34;
        com.android.server.am.ProcessRecord $r36, $r37;
        android.content.pm.ApplicationInfo $r38;
        java.io.FileDescriptor r42;
        java.lang.String[] r43;
        java.util.Iterator r45, r52;
        com.android.server.am.ReceiverList r46;
        com.android.server.IntentResolver r47;
        com.android.server.am.BroadcastQueue[] r49, r56;
        java.util.Map$Entry r53;
        java.util.ArrayList r54;
        android.os.Bundle r55;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r42 := @parameter0: java.io.FileDescriptor;

        r1 := @parameter1: java.io.PrintWriter;

        r43 := @parameter2: java.lang.String[];

        i5 := @parameter3: int;

        z5 := @parameter4: boolean;

        r44 := @parameter5: java.lang.String;

        $r2 = "history";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r44);

        if $z0 == 0 goto label02;

        $i4 = lengthof r43;

        if i5 >= $i4 goto label01;

        $r41 = "-s";

        $r40 = r43[i5];

        $z4 = virtualinvoke $r41.<java.lang.String: boolean equals(java.lang.Object)>($r40);

        if $z4 == 0 goto label01;

        z5 = 0;

        goto label01;

     label01:
        z10 = 1;

        r44 = null;

        z11 = z5;

        goto label03;

     label02:
        z10 = 0;

        z11 = z5;

     label03:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("ACTIVITY MANAGER BROADCAST STATE (dumpsys activity broadcasts)");

        z12 = 0;

        z13 = 0;

        if z10 != 0 goto label12;

        z12 = 0;

        z13 = 0;

        if z11 == 0 goto label12;

        $r32 = r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mRegisteredReceivers>;

        $i3 = virtualinvoke $r32.<java.util.HashMap: int size()>();

        if $i3 <= 0 goto label08;

        $r33 = r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mRegisteredReceivers>;

        $r34 = virtualinvoke $r33.<java.util.HashMap: java.util.Collection values()>();

        r45 = interfaceinvoke $r34.<java.util.Collection: java.util.Iterator iterator()>();

        z13 = 0;

        z15 = 0;

        z12 = 0;

     label04:
        $z16 = interfaceinvoke r45.<java.util.Iterator: boolean hasNext()>();

        if $z16 == 0 goto label07;

        $r35 = interfaceinvoke r45.<java.util.Iterator: java.lang.Object next()>();

        r46 = (com.android.server.am.ReceiverList) $r35;

        if r44 == null goto label05;

        $r36 = r46.<com.android.server.am.ReceiverList: com.android.server.am.ProcessRecord app>;

        if $r36 == null goto label04;

        $r37 = r46.<com.android.server.am.ReceiverList: com.android.server.am.ProcessRecord app>;

        $r38 = $r37.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r39 = $r38.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $z3 = virtualinvoke r44.<java.lang.String: boolean equals(java.lang.Object)>($r39);

        if $z3 != 0 goto label05;

        goto label04;

     label05:
        z17 = z15;

        if z15 != 0 goto label06;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  Registered Receivers:");

        z12 = 1;

        z17 = 1;

        z13 = 1;

     label06:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  * ");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>(r46);

        virtualinvoke r46.<com.android.server.am.ReceiverList: void dump(java.io.PrintWriter,java.lang.String)>(r1, "    ");

        z15 = z17;

        goto label04;

     label07:
        goto label09;

     label08:
        z12 = 0;

        z13 = 0;

     label09:
        r47 = r0.<com.android.server.am.ActivityManagerService: com.android.server.IntentResolver mReceiverResolver>;

        if z12 == 0 goto label10;

        r48 = "\n  Receiver Resolver Table:";

        goto label11;

     label10:
        r48 = "  Receiver Resolver Table:";

     label11:
        $z2 = virtualinvoke r47.<com.android.server.IntentResolver: boolean dump(java.io.PrintWriter,java.lang.String,java.lang.String,java.lang.String,boolean,boolean)>(r1, r48, "    ", r44, 0, 0);

        if $z2 == 0 goto label12;

        z12 = 1;

        z13 = 1;

        goto label12;

     label12:
        r49 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastQueue[] mBroadcastQueues>;

        i6 = lengthof r49;

        i7 = 0;

        z19 = z12;

     label13:
        if i7 >= i6 goto label14;

        $r31 = r49[i7];

        z19 = virtualinvoke $r31.<com.android.server.am.BroadcastQueue: boolean dumpLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,java.lang.String,boolean)>(r42, r1, r43, i5, z11, r44, z19);

        z13 = z13 | z19;

        i7 = i7 + 1;

        goto label13;

     label14:
        z21 = 1;

        z22 = z13;

        if z10 != 0 goto label24;

        z22 = z13;

        $r12 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mStickyBroadcasts>;

        if $r12 == null goto label24;

        z22 = z13;

        if r44 != null goto label24;

        z22 = z13;

        i9 = 0;

     label15:
        $r13 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mStickyBroadcasts>;

        $i1 = virtualinvoke $r13.<android.util.SparseArray: int size()>();

        if i9 >= $i1 goto label24;

        if z21 == 0 goto label16;

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label16:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  Sticky broadcasts for user ");

        $r14 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mStickyBroadcasts>;

        $i2 = virtualinvoke $r14.<android.util.SparseArray: int keyAt(int)>(i9);

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i2);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(":");

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>(int)>(128);

        $r16 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mStickyBroadcasts>;

        $r17 = virtualinvoke $r16.<android.util.SparseArray: java.lang.Object valueAt(int)>(i9);

        $r18 = (android.util.ArrayMap) $r17;

        $r19 = virtualinvoke $r18.<android.util.ArrayMap: java.util.Set entrySet()>();

        r52 = interfaceinvoke $r19.<java.util.Set: java.util.Iterator iterator()>();

     label17:
        $z25 = interfaceinvoke r52.<java.util.Iterator: boolean hasNext()>();

        if $z25 == 0 goto label23;

        $r20 = interfaceinvoke r52.<java.util.Iterator: java.lang.Object next()>();

        r53 = (java.util.Map$Entry) $r20;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  * Sticky action ");

        $r21 = interfaceinvoke r53.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r22 = (java.lang.String) $r21;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r22);

        if z11 == 0 goto label21;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(":");

        $r23 = interfaceinvoke r53.<java.util.Map$Entry: java.lang.Object getValue()>();

        r54 = (java.util.ArrayList) $r23;

        i0 = virtualinvoke r54.<java.util.ArrayList: int size()>();

        i10 = 0;

     label18:
        if i10 >= i0 goto label20;

        virtualinvoke $r15.<java.lang.StringBuilder: void setLength(int)>(0);

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    Intent: ");

        $r25 = virtualinvoke r54.<java.util.ArrayList: java.lang.Object get(int)>(i10);

        $r26 = (android.content.Intent) $r25;

        virtualinvoke $r26.<android.content.Intent: void toShortString(java.lang.StringBuilder,boolean,boolean,boolean,boolean)>($r15, 0, 1, 0, 0);

        $r27 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r27);

        $r28 = virtualinvoke r54.<java.util.ArrayList: java.lang.Object get(int)>(i10);

        $r29 = (android.content.Intent) $r28;

        r55 = virtualinvoke $r29.<android.content.Intent: android.os.Bundle getExtras()>();

        if r55 == null goto label19;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("      ");

        $r30 = virtualinvoke r55.<android.os.Bundle: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r30);

        goto label19;

     label19:
        i10 = i10 + 1;

        goto label18;

     label20:
        goto label22;

     label21:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("");

     label22:
        goto label17;

     label23:
        i9 = i9 + 1;

        z21 = 1;

        z22 = 1;

        goto label15;

     label24:
        z26 = z22;

        if z10 != 0 goto label27;

        z26 = z22;

        if z11 == 0 goto label27;

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        r56 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastQueue[] mBroadcastQueues>;

        i11 = lengthof r56;

        i12 = 0;

     label25:
        if i12 >= i11 goto label26;

        r57 = r56[i12];

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mBroadcastsScheduled [");

        $r7 = r57.<com.android.server.am.BroadcastQueue: java.lang.String mQueueName>;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]=");

        $z1 = r57.<com.android.server.am.BroadcastQueue: boolean mBroadcastsScheduled>;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r11 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r11);

        i12 = i12 + 1;

        goto label25;

     label26:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  mHandler:");

        $r4 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        $r3 = new android.util.PrintWriterPrinter;

        specialinvoke $r3.<android.util.PrintWriterPrinter: void <init>(java.io.PrintWriter)>(r1);

        virtualinvoke $r4.<com.android.server.am.ActivityManagerService$MainHandler: void dump(android.util.Printer,java.lang.String)>($r3, "    ");

        z26 = 1;

     label27:
        if z26 != 0 goto label28;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  (nothing)");

     label28:
        return;
    }

    final void dumpDbInfo(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.am.ActivityManagerService r0;
        java.io.PrintWriter r1;
        java.lang.String[] r2;
        java.util.ArrayList r3;
        com.android.server.am.ProcessRecord r4;
        int $i0, $i1, i2;
        java.lang.Object $r6;
        android.app.IApplicationThread $r7, $r16;
        java.lang.StringBuilder $r8, $r18, $r24, $r30;
        java.lang.String $r12, $r15, $r20, $r22, $r27, $r33;
        android.os.ParcelFileDescriptor $r17;
        android.os.RemoteException $r23;
        java.lang.Throwable $r28, $r29;
        java.io.FileDescriptor r34;
        com.android.internal.os.TransferPipe r37;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r34 := @parameter0: java.io.FileDescriptor;

        r1 := @parameter1: java.io.PrintWriter;

        r2 := @parameter2: java.lang.String[];

        r3 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList collectProcesses(java.io.PrintWriter,int,boolean,java.lang.String[])>(r1, 0, 0, r2);

        if r3 != null goto label01;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No process found for: ");

        $r20 = r2[0];

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r22);

        return;

     label01:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Applications Database Info:");

        $i0 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        i2 = $i0 - 1;

     label02:
        if i2 < 0 goto label13;

        $r6 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r4 = (com.android.server.am.ProcessRecord) $r6;

        $r7 = r4.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r7 == null goto label12;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n** Database info for pid ");

        $i1 = r4.<com.android.server.am.ProcessRecord: int pid>;

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [");

        $r12 = r4.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] **");

        $r15 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r15);

        virtualinvoke r1.<java.io.PrintWriter: void flush()>();

     label03:
        r37 = new com.android.internal.os.TransferPipe;

        specialinvoke r37.<com.android.internal.os.TransferPipe: void <init>()>();

     label04:
        $r16 = r4.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r17 = virtualinvoke r37.<com.android.internal.os.TransferPipe: android.os.ParcelFileDescriptor getWriteFd()>();

        interfaceinvoke $r16.<android.app.IApplicationThread: void dumpDbInfo(android.os.ParcelFileDescriptor,java.lang.String[])>($r17, r2);

        virtualinvoke r37.<com.android.internal.os.TransferPipe: void go(java.io.FileDescriptor)>(r34);

     label05:
        virtualinvoke r37.<com.android.internal.os.TransferPipe: void kill()>();

     label06:
        goto label12;

     label07:
        $r28 := @caughtexception;

     label08:
        virtualinvoke r37.<com.android.internal.os.TransferPipe: void kill()>();

     label09:
        throw $r28;

     label10:
        $r23 := @caughtexception;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got a RemoteException while dumping the app ");

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r27 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r27);

        virtualinvoke r1.<java.io.PrintWriter: void flush()>();

        goto label12;

     label11:
        $r29 := @caughtexception;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure while dumping the app: ");

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r33 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r33);

        virtualinvoke r1.<java.io.PrintWriter: void flush()>();

     label12:
        i2 = i2 + -1;

        goto label02;

     label13:
        return;

        catch java.io.IOException from label03 to label04 with label11;
        catch android.os.RemoteException from label03 to label04 with label10;
        catch java.lang.Throwable from label04 to label05 with label07;
        catch java.io.IOException from label05 to label06 with label11;
        catch android.os.RemoteException from label05 to label06 with label10;
        catch java.io.IOException from label08 to label09 with label11;
        catch android.os.RemoteException from label08 to label09 with label10;
        catch java.io.IOException from label09 to label10 with label11;
        catch android.os.RemoteException from label09 to label10 with label10;
    }

    final void dumpGraphicsHardwareUsage(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.am.ActivityManagerService r0;
        java.io.PrintWriter r1;
        java.lang.String[] r2;
        java.util.ArrayList r3;
        long l0, l1;
        com.android.internal.os.TransferPipe r4;
        java.lang.StringBuilder $r5, $r13, $r23, $r29, $r35;
        java.lang.String $r10, $r17, $r20, $r25, $r27, $r32, $r38;
        int $i2, $i3, i4;
        java.lang.Object $r11;
        android.app.IApplicationThread $r12, $r21;
        android.os.ParcelFileDescriptor $r22;
        android.os.RemoteException $r28;
        java.lang.Throwable $r33, $r34;
        java.io.FileDescriptor r39;
        com.android.server.am.ProcessRecord r42;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r39 := @parameter0: java.io.FileDescriptor;

        r1 := @parameter1: java.io.PrintWriter;

        r2 := @parameter2: java.lang.String[];

        r3 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList collectProcesses(java.io.PrintWriter,int,boolean,java.lang.String[])>(r1, 0, 0, r2);

        if r3 != null goto label01;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No process found for: ");

        $r25 = r2[0];

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r27);

        return;

     label01:
        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Applications Graphics Acceleration Info:");

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Uptime: ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Realtime: ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);

        $r10 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r10);

        $i2 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        i4 = $i2 - 1;

     label02:
        if i4 < 0 goto label13;

        $r11 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        r42 = (com.android.server.am.ProcessRecord) $r11;

        $r12 = r42.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r12 == null goto label12;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n** Graphics info for pid ");

        $i3 = r42.<com.android.server.am.ProcessRecord: int pid>;

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [");

        $r17 = r42.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] **");

        $r20 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r20);

        virtualinvoke r1.<java.io.PrintWriter: void flush()>();

     label03:
        r4 = new com.android.internal.os.TransferPipe;

        specialinvoke r4.<com.android.internal.os.TransferPipe: void <init>()>();

     label04:
        $r21 = r42.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r22 = virtualinvoke r4.<com.android.internal.os.TransferPipe: android.os.ParcelFileDescriptor getWriteFd()>();

        interfaceinvoke $r21.<android.app.IApplicationThread: void dumpGfxInfo(android.os.ParcelFileDescriptor,java.lang.String[])>($r22, r2);

        virtualinvoke r4.<com.android.internal.os.TransferPipe: void go(java.io.FileDescriptor)>(r39);

     label05:
        virtualinvoke r4.<com.android.internal.os.TransferPipe: void kill()>();

     label06:
        goto label12;

     label07:
        $r33 := @caughtexception;

     label08:
        virtualinvoke r4.<com.android.internal.os.TransferPipe: void kill()>();

     label09:
        throw $r33;

     label10:
        $r28 := @caughtexception;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got a RemoteException while dumping the app ");

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r42);

        $r32 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r32);

        virtualinvoke r1.<java.io.PrintWriter: void flush()>();

        goto label12;

     label11:
        $r34 := @caughtexception;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure while dumping the app: ");

        virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r42);

        $r38 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r38);

        virtualinvoke r1.<java.io.PrintWriter: void flush()>();

     label12:
        i4 = i4 + -1;

        goto label02;

     label13:
        return;

        catch java.io.IOException from label03 to label04 with label11;
        catch android.os.RemoteException from label03 to label04 with label10;
        catch java.lang.Throwable from label04 to label05 with label07;
        catch java.io.IOException from label05 to label06 with label11;
        catch android.os.RemoteException from label05 to label06 with label10;
        catch java.io.IOException from label08 to label09 with label11;
        catch android.os.RemoteException from label08 to label09 with label10;
        catch java.io.IOException from label09 to label10 with label11;
        catch android.os.RemoteException from label09 to label10 with label10;
    }

    public boolean dumpHeap(java.lang.String, int, boolean, boolean, boolean, java.lang.String, android.os.ParcelFileDescriptor, android.os.RemoteCallback)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, $i1, $i2, $i3;
        boolean z0, z1, z2, z3;
        com.android.server.am.ProcessRecord r1;
        com.android.server.am.ActivityManagerService$25 r2;
        java.lang.String $r5, $r7, $r8, $r14, r26, r27;
        android.app.IApplicationThread $r6, $r9;
        android.content.pm.ApplicationInfo $r11;
        java.lang.Throwable $r15, $r17, $r18, $r19, $r20, $r21, $r22, $r25, r34, r40, r45;
        android.os.RemoteException $r16, $r23;
        android.os.ParcelFileDescriptor r28, r33, r36, r43;
        android.os.RemoteCallback r29, r35;
        java.lang.SecurityException r30, r42;
        java.lang.StringBuilder r31, r39;
        java.lang.IllegalArgumentException r38, r41;
        java.lang.IllegalStateException r47;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r26 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        z2 := @parameter4: boolean;

        r27 := @parameter5: java.lang.String;

        r28 := @parameter6: android.os.ParcelFileDescriptor;

        r29 := @parameter7: android.os.RemoteCallback;

     label01:
        entermonitor r0;

     label02:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $i1 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.SET_ACTIVITY_WATCHER");

        if $i1 != 0 goto label21;

     label03:
        if r28 == null goto label20;

     label04:
        r1 = specialinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord findProcessLocked(java.lang.String,int,java.lang.String)>(r26, i0, "dumpHeap");

     label05:
        if r1 == null goto label18;

     label06:
        $r6 = r1.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r6 == null goto label18;

        $r7 = "1";

        $r8 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String,java.lang.String)>("ro.debuggable", "0");

        z3 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r8);

     label07:
        if z3 != 0 goto label12;

     label08:
        $r11 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i2 = $r11.<android.content.pm.ApplicationInfo: int flags>;

        $i3 = $i2 & 2;

        if $i3 == 0 goto label10;

     label09:
        goto label12;

     label10:
        r30 = new java.lang.SecurityException;

        r31 = new java.lang.StringBuilder;

        specialinvoke r31.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Process not debuggable: ");

        virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r14 = virtualinvoke r31.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r30.<java.lang.SecurityException: void <init>(java.lang.String)>($r14);

        throw r30;

     label11:
        $r20 := @caughtexception;

        r33 = r28;

        r34 = $r20;

        goto label25;

     label12:
        staticinvoke <android.os.Process: void enableFreezer(boolean)>(0);

        r35 = new android.os.RemoteCallback;

        r2 = new com.android.server.am.ActivityManagerService$25;

     label13:
        specialinvoke r2.<com.android.server.am.ActivityManagerService$25: void <init>(com.android.server.am.ActivityManagerService,android.os.RemoteCallback)>(r0, r29);

        specialinvoke r35.<android.os.RemoteCallback: void <init>(android.os.RemoteCallback$OnResultListener,android.os.Handler)>(r2, null);

        $r9 = r1.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        interfaceinvoke $r9.<android.app.IApplicationThread: void dumpHeap(boolean,boolean,boolean,java.lang.String,android.os.ParcelFileDescriptor,android.os.RemoteCallback)>(z0, z1, z2, r27, r28, r35);

     label14:
        r36 = null;

     label15:
        exitmonitor r0;

     label16:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        goto label17;

     label17:
        return 1;

     label18:
        r38 = new java.lang.IllegalArgumentException;

        r39 = new java.lang.StringBuilder;

        specialinvoke r39.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown process: ");

        virtualinvoke r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r26);

        $r5 = virtualinvoke r39.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r38.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw r38;

     label19:
        $r21 := @caughtexception;

        r40 = $r21;

        goto label24;

     label20:
        r41 = new java.lang.IllegalArgumentException;

        specialinvoke r41.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("null fd");

        throw r41;

     label21:
        r42 = new java.lang.SecurityException;

        specialinvoke r42.<java.lang.SecurityException: void <init>(java.lang.String)>("Requires permission android.permission.SET_ACTIVITY_WATCHER");

        throw r42;

     label22:
        $r18 := @caughtexception;

        r40 = $r18;

        goto label24;

     label23:
        $r25 := @caughtexception;

        r40 = $r25;

     label24:
        r33 = r28;

        r34 = r40;

     label25:
        r36 = r33;

     label26:
        exitmonitor r0;

     label27:
        r43 = r33;

     label28:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

     label29:
        r43 = r33;

     label30:
        throw r34;

     label31:
        $r23 := @caughtexception;

        goto label35;

     label32:
        $r19 := @caughtexception;

        r34 = $r19;

        r33 = r36;

        goto label25;

     label33:
        $r22 := @caughtexception;

        r45 = $r22;

        r43 = r28;

        goto label42;

     label34:
        $r16 := @caughtexception;

        r33 = r28;

     label35:
        r43 = r33;

     label36:
        r47 = new java.lang.IllegalStateException;

     label37:
        r43 = r33;

     label38:
        specialinvoke r47.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Process disappeared");

     label39:
        r43 = r33;

     label40:
        throw r47;

     label41:
        $r17 := @caughtexception;

        r45 = $r17;

     label42:
        if r43 == null goto label46;

     label43:
        virtualinvoke r43.<android.os.ParcelFileDescriptor: void close()>();

     label44:
        goto label46;

     label45:
        $r15 := @caughtexception;

     label46:
        throw r45;

        catch android.os.RemoteException from label01 to label02 with label34;
        catch java.lang.Throwable from label01 to label02 with label33;
        catch java.lang.Throwable from label02 to label03 with label23;
        catch java.lang.Throwable from label04 to label05 with label19;
        catch java.lang.Throwable from label06 to label07 with label19;
        catch java.lang.Throwable from label08 to label09 with label11;
        catch java.lang.Throwable from label10 to label11 with label11;
        catch java.lang.Throwable from label12 to label13 with label19;
        catch java.lang.Throwable from label13 to label14 with label22;
        catch java.lang.Throwable from label15 to label16 with label32;
        catch java.lang.Throwable from label18 to label19 with label22;
        catch java.lang.Throwable from label20 to label21 with label22;
        catch java.lang.Throwable from label21 to label22 with label22;
        catch java.lang.Throwable from label26 to label27 with label32;
        catch android.os.RemoteException from label28 to label29 with label31;
        catch java.lang.Throwable from label28 to label29 with label41;
        catch android.os.RemoteException from label30 to label31 with label31;
        catch java.lang.Throwable from label30 to label31 with label41;
        catch java.lang.Throwable from label36 to label37 with label41;
        catch java.lang.Throwable from label38 to label39 with label41;
        catch java.lang.Throwable from label40 to label41 with label41;
        catch java.io.IOException from label43 to label44 with label45;
    }

    public void dumpHeapFinished(java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.StringBuilder r1, r20;
        int $i0, $i1, $i3, $i4;
        android.net.Uri $r2, $r6, $r9;
        java.lang.String $r8, $r10, $r17, r19;
        boolean $z0;
        com.android.server.am.ActivityManagerService$MainHandler $r11;
        java.lang.Runtime $r12;
        java.lang.Throwable $r18;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r19 := @parameter0: java.lang.String;

        entermonitor r0;

     label01:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i1 = r0.<com.android.server.am.ActivityManagerService: int mMemWatchDumpPid>;

        if $i0 == $i1 goto label03;

        r20 = new java.lang.StringBuilder;

        specialinvoke r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dumpHeapFinished: Calling pid ");

        $i3 = staticinvoke <android.os.Binder: int getCallingPid()>();

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not match last pid ");

        $i4 = r0.<com.android.server.am.ActivityManagerService: int mMemWatchDumpPid>;

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r17 = virtualinvoke r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r17);

        exitmonitor r0;

     label02:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label03:
        $r2 = r0.<com.android.server.am.ActivityManagerService: android.net.Uri mMemWatchDumpUri>;

        if $r2 == null goto label07;

        $r9 = r0.<com.android.server.am.ActivityManagerService: android.net.Uri mMemWatchDumpUri>;

        $r10 = virtualinvoke $r9.<android.net.Uri: java.lang.String getPath()>();

        $z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r19);

        if $z0 != 0 goto label05;

     label04:
        goto label07;

     label05:
        $r11 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        virtualinvoke $r11.<com.android.server.am.ActivityManagerService$MainHandler: boolean sendEmptyMessage(int)>(50);

        $r12 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        virtualinvoke $r12.<java.lang.Runtime: void gc()>();

        exitmonitor r0;

     label06:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label07:
        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dumpHeapFinished: Calling path ");

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r19);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not match last path ");

        $r6 = r0.<com.android.server.am.ActivityManagerService: android.net.Uri mMemWatchDumpUri>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r8);

        exitmonitor r0;

     label08:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label09:
        $r18 := @caughtexception;

     label10:
        exitmonitor r0;

     label11:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r18;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    boolean dumpLmkLocked(java.io.PrintWriter)
    {
        com.android.server.am.ActivityManagerService r0;
        java.io.PrintWriter r1;
        java.lang.Integer r2;
        java.lang.StringBuilder $r4;
        java.lang.String $r7;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, z12;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.io.PrintWriter;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("ACTIVITY MANAGER LMK KILLS (dumpsys activity lmk)");

        r2 = staticinvoke <com.android.server.am.ProcessList: java.lang.Integer getLmkdKillCount(int,int)>(1001, 1001);

        z12 = 0;

        if r2 != null goto label1;

        return 0;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Total number of kills: ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r7);

        $z0 = specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean reportLmkKillAtOrBelow(java.io.PrintWriter,int)>(r1, 999);

        if $z0 == 0 goto label2;

        $z1 = specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean reportLmkKillAtOrBelow(java.io.PrintWriter,int)>(r1, 900);

        if $z1 == 0 goto label2;

        $z2 = specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean reportLmkKillAtOrBelow(java.io.PrintWriter,int)>(r1, 800);

        if $z2 == 0 goto label2;

        $z3 = specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean reportLmkKillAtOrBelow(java.io.PrintWriter,int)>(r1, 700);

        if $z3 == 0 goto label2;

        $z4 = specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean reportLmkKillAtOrBelow(java.io.PrintWriter,int)>(r1, 600);

        if $z4 == 0 goto label2;

        $z5 = specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean reportLmkKillAtOrBelow(java.io.PrintWriter,int)>(r1, 500);

        if $z5 == 0 goto label2;

        $z6 = specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean reportLmkKillAtOrBelow(java.io.PrintWriter,int)>(r1, 400);

        if $z6 == 0 goto label2;

        $z7 = specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean reportLmkKillAtOrBelow(java.io.PrintWriter,int)>(r1, 300);

        if $z7 == 0 goto label2;

        $z8 = specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean reportLmkKillAtOrBelow(java.io.PrintWriter,int)>(r1, 250);

        if $z8 == 0 goto label2;

        $z9 = specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean reportLmkKillAtOrBelow(java.io.PrintWriter,int)>(r1, 200);

        if $z9 == 0 goto label2;

        $z10 = specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean reportLmkKillAtOrBelow(java.io.PrintWriter,int)>(r1, 100);

        if $z10 == 0 goto label2;

        $z11 = specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean reportLmkKillAtOrBelow(java.io.PrintWriter,int)>(r1, 0);

        if $z11 == 0 goto label2;

        z12 = 1;

        goto label2;

     label2:
        return z12;
    }

    void dumpLruEntryLocked(java.io.PrintWriter, int, com.android.server.am.ProcessRecord, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        java.io.PrintWriter r1;
        com.android.server.am.ProcessRecord r2;
        java.lang.String r3, $r4, $r5, $r6;
        int $i0, $i1, $i2, i3;
        boolean $z0, $z1, $z2, $z3, z4, $z5, z6, z7, $z8, $z9;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.io.PrintWriter;

        i3 := @parameter1: int;

        r2 := @parameter2: com.android.server.am.ProcessRecord;

        r3 := @parameter3: java.lang.String;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r3);

        virtualinvoke r1.<java.io.PrintWriter: void print(char)>(35);

        if i3 >= 10 goto label1;

        virtualinvoke r1.<java.io.PrintWriter: void print(char)>(32);

     label1:
        virtualinvoke r1.<java.io.PrintWriter: void print(int)>(i3);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        $i0 = r2.<com.android.server.am.ProcessRecord: int setAdj>;

        $r4 = staticinvoke <com.android.server.am.ProcessList: java.lang.String makeOomAdjString(int,boolean)>($i0, 0);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r4);

        virtualinvoke r1.<java.io.PrintWriter: void print(char)>(32);

        $i1 = virtualinvoke r2.<com.android.server.am.ProcessRecord: int getCurProcState()>();

        $r5 = staticinvoke <com.android.server.am.ProcessList: java.lang.String makeProcStateString(int)>($i1);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r5);

        virtualinvoke r1.<java.io.PrintWriter: void print(char)>(32);

        $i2 = r2.<com.android.server.am.ProcessRecord: int curCapability>;

        staticinvoke <android.app.ActivityManager: void printCapabilitiesSummary(java.io.PrintWriter,int)>(r1, $i2);

        virtualinvoke r1.<java.io.PrintWriter: void print(char)>(32);

        $r6 = virtualinvoke r2.<com.android.server.am.ProcessRecord: java.lang.String toShortString()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r6);

        $z0 = virtualinvoke r2.<com.android.server.am.ProcessRecord: boolean hasActivitiesOrRecentTasks()>();

        if $z0 != 0 goto label2;

        $z2 = virtualinvoke r2.<com.android.server.am.ProcessRecord: boolean hasClientActivities()>();

        if $z2 != 0 goto label2;

        $z3 = r2.<com.android.server.am.ProcessRecord: boolean treatLikeActivity>;

        if $z3 == 0 goto label9;

     label2:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" act:");

        z4 = 0;

        $z5 = virtualinvoke r2.<com.android.server.am.ProcessRecord: boolean hasActivities()>();

        if $z5 == 0 goto label3;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("activities");

        z4 = 1;

     label3:
        z6 = z4;

        $z1 = virtualinvoke r2.<com.android.server.am.ProcessRecord: boolean hasRecentTasks()>();

        if $z1 == 0 goto label5;

        if z4 == 0 goto label4;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("|");

     label4:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("recents");

        z6 = 1;

     label5:
        z7 = z6;

        $z8 = virtualinvoke r2.<com.android.server.am.ProcessRecord: boolean hasClientActivities()>();

        if $z8 == 0 goto label7;

        if z6 == 0 goto label6;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("|");

     label6:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("client");

        z7 = 1;

     label7:
        $z9 = r2.<com.android.server.am.ProcessRecord: boolean treatLikeActivity>;

        if $z9 == 0 goto label9;

        if z7 == 0 goto label8;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("|");

     label8:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("treated");

     label9:
        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        return;
    }

    boolean dumpLruLocked(java.io.PrintWriter, java.lang.String, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        java.io.PrintWriter r1;
        java.lang.String r2, r25, r26;
        int i0, $i1, i2, i3, $i4, i5;
        com.android.server.am.ProcessList $r3, $r8, $r9, $r13, $r17, $r21, $r29;
        java.util.ArrayList $r4, $r10, $r14, $r18, $r22;
        java.lang.StringBuilder $r5;
        java.lang.Object $r11, $r15, $r19, $r23;
        com.android.server.am.ProcessRecord$PackageList $r12, $r16, $r20, $r24;
        boolean $z0, $z1, $z2, $z3, z5, z6, z7, z8, z9, z11, z12;
        com.android.server.am.ProcessRecord r27, r30, r31, r32;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: java.lang.String;

        r25 := @parameter2: java.lang.String;

        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r4 = $r3.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        i0 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        if r25 != null goto label01;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("ACTIVITY MANAGER LRU PROCESSES (dumpsys activity lru)");

        r26 = "  ";

        goto label06;

     label01:
        i2 = i0 - 1;

     label02:
        z5 = 0;

        if i2 < 0 goto label04;

        $r21 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r22 = $r21.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        $r23 = virtualinvoke $r22.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r27 = (com.android.server.am.ProcessRecord) $r23;

        if r2 == null goto label03;

        $r24 = r27.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        $z3 = virtualinvoke $r24.<com.android.server.am.ProcessRecord$PackageList: boolean containsKey(java.lang.Object)>(r2);

        if $z3 != 0 goto label03;

        i2 = i2 + -1;

        goto label02;

     label03:
        z5 = 1;

     label04:
        if z5 != 0 goto label05;

        return 0;

     label05:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r25);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Raw LRU list (dumpsys activity lru):");

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r25);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        r26 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label06:
        z6 = 1;

        i3 = i0 - 1;

     label07:
        $r29 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $i4 = $r29.<com.android.server.am.ProcessList: int mLruProcessActivityStart>;

        if i3 < $i4 goto label11;

        $r17 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r18 = $r17.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        $r19 = virtualinvoke $r18.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r30 = (com.android.server.am.ProcessRecord) $r19;

        if r2 == null goto label08;

        $r20 = r30.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        $z2 = virtualinvoke $r20.<com.android.server.am.ProcessRecord$PackageList: boolean containsKey(java.lang.Object)>(r2);

        if $z2 != 0 goto label08;

        goto label10;

     label08:
        z7 = z6;

        if z6 == 0 goto label09;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r26);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Activities:");

        z7 = 0;

     label09:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void dumpLruEntryLocked(java.io.PrintWriter,int,com.android.server.am.ProcessRecord,java.lang.String)>(r1, i3, r30, r26);

        z6 = z7;

     label10:
        i3 = i3 + -1;

        goto label07;

     label11:
        z8 = 1;

     label12:
        $r8 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $i1 = $r8.<com.android.server.am.ProcessList: int mLruProcessServiceStart>;

        if i3 < $i1 goto label16;

        $r13 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r14 = $r13.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        $r15 = virtualinvoke $r14.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r31 = (com.android.server.am.ProcessRecord) $r15;

        if r2 == null goto label13;

        $r16 = r31.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        $z1 = virtualinvoke $r16.<com.android.server.am.ProcessRecord$PackageList: boolean containsKey(java.lang.Object)>(r2);

        if $z1 != 0 goto label13;

        goto label15;

     label13:
        z9 = z8;

        if z8 == 0 goto label14;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r26);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Services:");

        z9 = 0;

     label14:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void dumpLruEntryLocked(java.io.PrintWriter,int,com.android.server.am.ProcessRecord,java.lang.String)>(r1, i3, r31, r26);

        z8 = z9;

     label15:
        i3 = i3 + -1;

        goto label12;

     label16:
        i5 = i3;

        z11 = 1;

     label17:
        if i5 < 0 goto label21;

        $r9 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r10 = $r9.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        $r11 = virtualinvoke $r10.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        r32 = (com.android.server.am.ProcessRecord) $r11;

        if r2 == null goto label18;

        $r12 = r32.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        $z0 = virtualinvoke $r12.<com.android.server.am.ProcessRecord$PackageList: boolean containsKey(java.lang.Object)>(r2);

        if $z0 != 0 goto label18;

        goto label20;

     label18:
        z12 = z11;

        if z11 == 0 goto label19;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r26);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Other:");

        z12 = 0;

     label19:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void dumpLruEntryLocked(java.io.PrintWriter,int,com.android.server.am.ProcessRecord,java.lang.String)>(r1, i5, r32, r26);

        z11 = z12;

     label20:
        i5 = i5 + -1;

        goto label17;

     label21:
        return 1;
    }

    boolean dumpOomLocked(java.io.FileDescriptor, java.io.PrintWriter, boolean, java.lang.String[], int, boolean, java.lang.String, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        boolean z0, z1, z4;
        java.lang.String r4;
        com.android.server.am.ProcessList $r5, $r7, $r8, $r9, $r10, $r11, $r12;
        com.android.server.wm.ActivityTaskManagerInternal $r6;
        java.util.ArrayList $r13;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        z4 := @parameter2: boolean;

        r3 := @parameter3: java.lang.String[];

        i0 := @parameter4: int;

        z0 := @parameter5: boolean;

        r4 := @parameter6: java.lang.String;

        z1 := @parameter7: boolean;

        $r5 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $i1 = virtualinvoke $r5.<com.android.server.am.ProcessList: int getLruSizeLocked()>();

        if $i1 <= 0 goto label2;

        if z4 == 0 goto label1;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label1:
        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  OOM levels:");

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void printOomLevel(java.io.PrintWriter,java.lang.String,int)>(r2, "SYSTEM_ADJ", -900);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void printOomLevel(java.io.PrintWriter,java.lang.String,int)>(r2, "PERSISTENT_PROC_ADJ", -800);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void printOomLevel(java.io.PrintWriter,java.lang.String,int)>(r2, "PERSISTENT_SERVICE_ADJ", -700);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void printOomLevel(java.io.PrintWriter,java.lang.String,int)>(r2, "FOREGROUND_APP_ADJ", 0);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void printOomLevel(java.io.PrintWriter,java.lang.String,int)>(r2, "VISIBLE_APP_ADJ", 100);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void printOomLevel(java.io.PrintWriter,java.lang.String,int)>(r2, "PERCEPTIBLE_APP_ADJ", 200);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void printOomLevel(java.io.PrintWriter,java.lang.String,int)>(r2, "PERCEPTIBLE_LOW_APP_ADJ", 250);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void printOomLevel(java.io.PrintWriter,java.lang.String,int)>(r2, "BACKUP_APP_ADJ", 300);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void printOomLevel(java.io.PrintWriter,java.lang.String,int)>(r2, "HEAVY_WEIGHT_APP_ADJ", 400);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void printOomLevel(java.io.PrintWriter,java.lang.String,int)>(r2, "SERVICE_ADJ", 500);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void printOomLevel(java.io.PrintWriter,java.lang.String,int)>(r2, "HOME_APP_ADJ", 600);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void printOomLevel(java.io.PrintWriter,java.lang.String,int)>(r2, "PREVIOUS_APP_ADJ", 700);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void printOomLevel(java.io.PrintWriter,java.lang.String,int)>(r2, "SERVICE_B_ADJ", 800);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void printOomLevel(java.io.PrintWriter,java.lang.String,int)>(r2, "CACHED_APP_MIN_ADJ", 900);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void printOomLevel(java.io.PrintWriter,java.lang.String,int)>(r2, "CACHED_APP_MAX_ADJ", 999);

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("  Process OOM control (");

        $r7 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $i2 = virtualinvoke $r7.<com.android.server.am.ProcessList: int getLruSizeLocked()>();

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>($i2);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" total, non-act at ");

        $r8 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $i3 = virtualinvoke $r8.<com.android.server.am.ProcessList: int getLruSizeLocked()>();

        $r9 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $i4 = $r9.<com.android.server.am.ProcessList: int mLruProcessActivityStart>;

        $i5 = $i3 - $i4;

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>($i5);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(", non-svc at ");

        $r10 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $i6 = virtualinvoke $r10.<com.android.server.am.ProcessList: int getLruSizeLocked()>();

        $r11 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $i7 = $r11.<com.android.server.am.ProcessList: int mLruProcessServiceStart>;

        $i8 = $i6 - $i7;

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>($i8);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("):");

        $r12 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r13 = $r12.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        staticinvoke <com.android.server.am.ActivityManagerService: boolean dumpProcessOomList(java.io.PrintWriter,com.android.server.am.ActivityManagerService,java.util.List,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String)>(r2, r0, $r13, "    ", "Proc", "PERS", 1, r4);

        z4 = 1;

        goto label2;

     label2:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean dumpProcessesToGc(java.io.PrintWriter,boolean,java.lang.String)>(r2, z4, r4);

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

        $r6 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerInternal mAtmInternal>;

        virtualinvoke $r6.<com.android.server.wm.ActivityTaskManagerInternal: void dumpForOom(java.io.PrintWriter)>(r2);

        return 1;
    }

    void dumpPermissionsLocked(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[], int, boolean, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        int i0;
        boolean z0;
        java.lang.String r4;
        com.android.server.uri.UriGrantsManagerInternal $r5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        i0 := @parameter3: int;

        z0 := @parameter4: boolean;

        r4 := @parameter5: java.lang.String;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("ACTIVITY MANAGER URI PERMISSIONS (dumpsys activity permissions)");

        $r5 = r0.<com.android.server.am.ActivityManagerService: com.android.server.uri.UriGrantsManagerInternal mUgmInternal>;

        interfaceinvoke $r5.<com.android.server.uri.UriGrantsManagerInternal: void dump(java.io.PrintWriter,boolean,java.lang.String)>(r2, z0, r4);

        return;
    }

    void dumpProcessesLocked(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[], int, boolean, java.lang.String, int)
    {
        com.android.server.am.ActivityManagerService r0;
        java.io.PrintWriter r1;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z29, $z30, $z31, $z32, $z33, $z34, $z35, $z36, z38, z39, z40, z41, z42, z43, z44, z45, z46, z47, z48, z49, z50, z51, z52, z53, z54, z55, z56, z57, z58, z59, z60, z61, z62, z63, z64, z65, z66, z67, z68, $z69, z70, z71, z73, z74, z75, z76, z77, z78, z79, z80, z81, $z82;
        java.lang.String r2, $r18, $r21, $r27, $r31, $r37, $r45, $r55, $r63, $r73, $r83, $r87, $r90, $r92, $r97, $r104, $r118, $r122, $r124, $r131, $r137, $r139, $r141, $r155, $r158, $r160, $r161, $r162, $r167, $r169, $r173, $r175, $r179, $r181, $r185, $r188, $r192, $r197, $r212, $r230, $r245, $r247, r269, $r283, $r303, r308, r312, $r315, r320, $r330;
        int i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i11, $i12, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i26, $i27, $i28, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, i56, i57, i58, i59, i60, i61, i62, i63, i64, i65, i66, $i67, $i68, i69, $i70, i71, i72, $i73, $i74, $i75, $i76, i77, i78, i79, i80, i81, i82, i83, $i84, i85, i86, i87, i88;
        long l1, $l10, $l13, $l14, $l25, $l29, $l43;
        com.android.server.am.ProcessList $r3, $r6, $r9, $r11, $r198, $r200, $r204, $r208, $r214, $r234, $r235, $r239, $r248, $r250, $r254, $r291;
        com.android.server.am.ProcessList$MyProcessMap $r4, $r255;
        android.util.ArrayMap $r5, $r256, $r306, r307;
        android.util.SparseArray $r7, $r12, $r13, $r14, $r217, $r218, $r223, $r225, $r249, $r251, r267, r279, $r282, $r287, $r288, r309;
        java.util.ArrayList $r8, $r15, $r213, $r215, $r216, $r236, $r241, $r242, $r292, $r293;
        com.android.server.am.ActiveUids $r10, $r237, $r238, $r240;
        java.lang.StringBuilder $r16, $r28, $r42, $r46, $r56, $r66, $r84, $r88, $r93, $r105, $r119, $r135, $r145, $r164, $r170, $r176, $r202, $r328;
        com.android.server.am.ActivityManagerService$ProfileData $r30, $r34, $r38, $r95, $r100, $r107, $r111, $r115, $r123, $r125, $r127, $r129, $r132, $r314;
        com.android.server.am.ProcessRecord $r35, $r126, r268, r270, r275, $r278, r281, r286;
        android.app.ProfilerInfo $r39, $r96, $r101, $r108, $r112, $r116, $r128, $r130, $r133;
        com.android.server.am.OomAdjuster $r64, $r65;
        android.os.RemoteCallbackList $r74, $r75, $r77, $r79, $r163, $r186, $r189;
        com.android.internal.util.StatLogger $r76;
        java.lang.Object $r78, $r143, $r144, $r149, $r151, $r154, $r157, $r187, $r210, $r220, $r224, $r226, $r229, $r243, $r252, $r257, $r258, $r289;
        android.os.IInterface $r80, $r190;
        android.app.IUidObserver $r81, r298;
        java.lang.Class $r82, $r191;
        android.os.ParcelFileDescriptor $r102, $r134;
        com.android.internal.app.ProcessMap $r140, $r305;
        android.net.Uri $r142;
        java.lang.Long $r152;
        int[] $r166, $r172, $r178;
        com.android.server.am.PendingTempWhitelists $r182, $r183, $r184;
        android.util.SparseIntArray $r193, $r194, $r195, $r196;
        android.util.LongSparseArray $r199, $r201, $r205, $r209;
        com.android.server.am.ActivityManagerService$PidMap $r219, $r232, r273, $r274, $r276, $r277, r285;
        com.android.server.am.ActivityManagerService$ImportanceToken $r221;
        com.android.server.am.ProcessRecord$PackageList $r222, $r231, $r233, $r253, $r259;
        android.util.ArraySet $r227, $r228, $r284;
        android.content.ComponentName $r244;
        android.content.pm.ApplicationInfo $r246;
        java.lang.Throwable $r260, $r261, $r262, $r263, $r264, r331, r332;
        java.io.FileDescriptor r265;
        java.lang.String[] r266;
        com.android.server.am.ActiveInstrumentation r271;
        android.content.pm.ProcessInfo r280;
        com.android.server.am.AppErrors $r294;
        com.android.server.wm.ActivityTaskManagerInternal $r295;
        com.android.server.am.ActivityManagerService$UidObserverRegistration r297, r327;
        com.android.server.am.ActivityManagerService$PendingTempWhitelist r302;
        android.util.Pair r311;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r265 := @parameter0: java.io.FileDescriptor;

        r1 := @parameter1: java.io.PrintWriter;

        r266 := @parameter2: java.lang.String[];

        i56 := @parameter3: int;

        z0 := @parameter4: boolean;

        r2 := @parameter5: java.lang.String;

        i57 := @parameter6: int;

        z38 = 0;

        i58 = 0;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("ACTIVITY MANAGER RUNNING PROCESSES (dumpsys activity processes)");

        if z0 != 0 goto label002;

        if r2 == null goto label001;

        goto label002;

     label001:
        i59 = 0;

        z38 = 0;

        goto label012;

     label002:
        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r4 = $r3.<com.android.server.am.ProcessList: com.android.server.am.ProcessList$MyProcessMap mProcessNames>;

        $r5 = virtualinvoke $r4.<com.android.server.am.ProcessList$MyProcessMap: android.util.ArrayMap getMap()>();

        i60 = virtualinvoke $r5.<android.util.ArrayMap: int size()>();

        i61 = 0;

     label003:
        if i61 >= i60 goto label011;

        $r254 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r255 = $r254.<com.android.server.am.ProcessList: com.android.server.am.ProcessList$MyProcessMap mProcessNames>;

        $r256 = virtualinvoke $r255.<com.android.server.am.ProcessList$MyProcessMap: android.util.ArrayMap getMap()>();

        $r257 = virtualinvoke $r256.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i61);

        r267 = (android.util.SparseArray) $r257;

        i0 = virtualinvoke r267.<android.util.SparseArray: int size()>();

        i62 = 0;

     label004:
        if i62 >= i0 goto label010;

        $r258 = virtualinvoke r267.<android.util.SparseArray: java.lang.Object valueAt(int)>(i62);

        r268 = (com.android.server.am.ProcessRecord) $r258;

        if r2 == null goto label005;

        $r259 = r268.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        $z36 = virtualinvoke $r259.<com.android.server.am.ProcessRecord$PackageList: boolean containsKey(java.lang.Object)>(r2);

        if $z36 != 0 goto label005;

        i63 = i58;

        goto label009;

     label005:
        z39 = z38;

        if z38 != 0 goto label006;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  All known processes:");

        z39 = 1;

     label006:
        $z34 = virtualinvoke r268.<com.android.server.am.ProcessRecord: boolean isPersistent()>();

        if $z34 == 0 goto label007;

        r269 = "  *PERS*";

        goto label008;

     label007:
        r269 = "  *APP*";

     label008:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r269);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" UID ");

        $i55 = virtualinvoke r267.<android.util.SparseArray: int keyAt(int)>(i62);

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i55);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" ");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>(r268);

        virtualinvoke r268.<com.android.server.am.ProcessRecord: void dump(java.io.PrintWriter,java.lang.String)>(r1, "    ");

        z38 = z39;

        i63 = i58;

        $z35 = virtualinvoke r268.<com.android.server.am.ProcessRecord: boolean isPersistent()>();

        if $z35 == 0 goto label009;

        i63 = i58 + 1;

        z38 = z39;

     label009:
        i62 = i62 + 1;

        i58 = i63;

        goto label004;

     label010:
        i61 = i61 + 1;

        goto label003;

     label011:
        i59 = i58;

     label012:
        z40 = z38;

        $r6 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r7 = $r6.<com.android.server.am.ProcessList: android.util.SparseArray mIsolatedProcesses>;

        $i2 = virtualinvoke $r7.<android.util.SparseArray: int size()>();

        if $i2 <= 0 goto label018;

        z41 = 0;

        i64 = 0;

     label013:
        z40 = z38;

        $r248 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r249 = $r248.<com.android.server.am.ProcessList: android.util.SparseArray mIsolatedProcesses>;

        $i54 = virtualinvoke $r249.<android.util.SparseArray: int size()>();

        if i64 >= $i54 goto label018;

        $r250 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r251 = $r250.<com.android.server.am.ProcessList: android.util.SparseArray mIsolatedProcesses>;

        $r252 = virtualinvoke $r251.<android.util.SparseArray: java.lang.Object valueAt(int)>(i64);

        r270 = (com.android.server.am.ProcessRecord) $r252;

        if r2 == null goto label014;

        $r253 = r270.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        $z33 = virtualinvoke $r253.<com.android.server.am.ProcessRecord$PackageList: boolean containsKey(java.lang.Object)>(r2);

        if $z33 != 0 goto label014;

        z42 = z38;

        goto label017;

     label014:
        z42 = z38;

        z43 = z41;

        if z41 != 0 goto label016;

        if z38 == 0 goto label015;

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label015:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  Isolated process list (sorted by uid):");

        z43 = 1;

        z42 = 1;

     label016:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("    Isolated #");

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>(i64);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>(r270);

        z41 = z43;

     label017:
        i64 = i64 + 1;

        z38 = z42;

        goto label013;

     label018:
        z44 = z40;

        $r8 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mActiveInstrumentation>;

        $i3 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

        if $i3 <= 0 goto label024;

        z45 = 0;

        i65 = 0;

     label019:
        z44 = z40;

        $r241 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mActiveInstrumentation>;

        $i53 = virtualinvoke $r241.<java.util.ArrayList: int size()>();

        if i65 >= $i53 goto label024;

        $r242 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mActiveInstrumentation>;

        $r243 = virtualinvoke $r242.<java.util.ArrayList: java.lang.Object get(int)>(i65);

        r271 = (com.android.server.am.ActiveInstrumentation) $r243;

        if r2 == null goto label020;

        $r244 = r271.<com.android.server.am.ActiveInstrumentation: android.content.ComponentName mClass>;

        $r245 = virtualinvoke $r244.<android.content.ComponentName: java.lang.String getPackageName()>();

        $z31 = virtualinvoke $r245.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z31 != 0 goto label020;

        $r246 = r271.<com.android.server.am.ActiveInstrumentation: android.content.pm.ApplicationInfo mTargetInfo>;

        $r247 = $r246.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $z32 = virtualinvoke $r247.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z32 != 0 goto label020;

        goto label023;

     label020:
        z46 = z40;

        z47 = z45;

        if z45 != 0 goto label022;

        if z40 == 0 goto label021;

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label021:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  Active instrumentation:");

        z47 = 1;

        z46 = 1;

     label022:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("    Instrumentation #");

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>(i65);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>(r271);

        virtualinvoke r271.<com.android.server.am.ActiveInstrumentation: void dump(java.io.PrintWriter,java.lang.String)>(r1, "      ");

        z45 = z47;

        z40 = z46;

     label023:
        i65 = i65 + 1;

        goto label019;

     label024:
        z48 = z44;

        $z1 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean dumpOomLocked(java.io.FileDescriptor,java.io.PrintWriter,boolean,java.lang.String[],int,boolean,java.lang.String,boolean)>(r265, r1, z44, r266, i56, z0, r2, 0);

        if $z1 == 0 goto label025;

        z48 = 1;

     label025:
        z49 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean dumpProcessesToGc(java.io.PrintWriter,boolean,java.lang.String)>(r1, z48, r2);

        z50 = z49;

        $r9 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r10 = $r9.<com.android.server.am.ProcessList: com.android.server.am.ActiveUids mActiveUids>;

        $i4 = virtualinvoke $r10.<com.android.server.am.ActiveUids: int size()>();

        if $i4 <= 0 goto label026;

        z50 = z49;

        $r239 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r240 = $r239.<com.android.server.am.ProcessList: com.android.server.am.ActiveUids mActiveUids>;

        $z30 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean dumpUids(java.io.PrintWriter,java.lang.String,int,com.android.server.am.ActiveUids,java.lang.String,boolean)>(r1, r2, i57, $r240, "UID states:", z49);

        if $z30 == 0 goto label026;

        z50 = 1;

     label026:
        z51 = z50;

        if z0 == 0 goto label027;

        z51 = z50;

        $r237 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveUids mValidateUids>;

        $i52 = virtualinvoke $r237.<com.android.server.am.ActiveUids: int size()>();

        if $i52 <= 0 goto label027;

        z51 = z50;

        $r238 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveUids mValidateUids>;

        $z29 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean dumpUids(java.io.PrintWriter,java.lang.String,int,com.android.server.am.ActiveUids,java.lang.String,boolean)>(r1, r2, i57, $r238, "UID validation:", z50);

        if $z29 == 0 goto label027;

        z51 = 1;

     label027:
        if z51 == 0 goto label028;

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label028:
        z52 = z51;

        $z2 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean dumpLruLocked(java.io.PrintWriter,java.lang.String,java.lang.String)>(r1, r2, "  ");

        if $z2 == 0 goto label029;

        z52 = 1;

     label029:
        z53 = z52;

        $r11 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $i5 = virtualinvoke $r11.<com.android.server.am.ProcessList: int getLruSizeLocked()>();

        if $i5 <= 0 goto label031;

        if z52 == 0 goto label030;

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label030:
        $r234 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        virtualinvoke $r234.<com.android.server.am.ProcessList: void dumpLruListHeaderLocked(java.io.PrintWriter)>(r1);

        $r235 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r236 = $r235.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        staticinvoke <com.android.server.am.ActivityManagerService: boolean dumpProcessOomList(java.io.PrintWriter,com.android.server.am.ActivityManagerService,java.util.List,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String)>(r1, r0, $r236, "    ", "Proc", "PERS", 0, r2);

        z53 = 1;

     label031:
        if z0 != 0 goto label032;

        z54 = z53;

        if r2 == null goto label065;

     label032:
        $r12 = new android.util.SparseArray;

        specialinvoke $r12.<android.util.SparseArray: void <init>()>();

        r273 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        entermonitor r273;

        i66 = 0;

        z54 = z53;

        z55 = 0;

     label033:
        $r274 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        $i67 = virtualinvoke $r274.<com.android.server.am.ActivityManagerService$PidMap: int size()>();

        if i66 >= $i67 goto label045;

        $r232 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        r275 = virtualinvoke $r232.<com.android.server.am.ActivityManagerService$PidMap: com.android.server.am.ProcessRecord valueAt(int)>(i66);

        $i51 = r275.<com.android.server.am.ProcessRecord: int pid>;

        virtualinvoke $r12.<android.util.SparseArray: void put(int,java.lang.Object)>($i51, r275);

     label034:
        if r2 == null goto label037;

     label035:
        $r233 = r275.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        $z27 = virtualinvoke $r233.<com.android.server.am.ProcessRecord$PackageList: boolean containsKey(java.lang.Object)>(r2);

        if $z27 != 0 goto label037;

     label036:
        goto label044;

     label037:
        z56 = z55;

        z57 = z54;

        if z55 != 0 goto label042;

        if z54 == 0 goto label039;

     label038:
        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label039:
        z57 = 1;

     label040:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  PID mappings:");

     label041:
        z56 = 1;

     label042:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("    PID #");

        $r276 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        $i68 = virtualinvoke $r276.<com.android.server.am.ActivityManagerService$PidMap: int keyAt(int)>(i66);

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i68);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        $r277 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        $r278 = virtualinvoke $r277.<com.android.server.am.ActivityManagerService$PidMap: com.android.server.am.ProcessRecord valueAt(int)>(i66);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>($r278);

     label043:
        z54 = z57;

        z55 = z56;

     label044:
        i66 = i66 + 1;

        goto label033;

     label045:
        exitmonitor r273;

     label046:
        r279 = <com.android.server.am.ActivityManagerService: android.util.SparseArray sActiveProcessInfoSelfLocked>;

        entermonitor r279;

        z58 = 0;

        i69 = 0;

     label047:
        $r13 = <com.android.server.am.ActivityManagerService: android.util.SparseArray sActiveProcessInfoSelfLocked>;

        $i6 = virtualinvoke $r13.<android.util.SparseArray: int size()>();

        if i69 >= $i6 goto label064;

        $r223 = <com.android.server.am.ActivityManagerService: android.util.SparseArray sActiveProcessInfoSelfLocked>;

        $r224 = virtualinvoke $r223.<android.util.SparseArray: java.lang.Object valueAt(int)>(i69);

        r280 = (android.content.pm.ProcessInfo) $r224;

        $r225 = <com.android.server.am.ActivityManagerService: android.util.SparseArray sActiveProcessInfoSelfLocked>;

        $i49 = virtualinvoke $r225.<android.util.SparseArray: int keyAt(int)>(i69);

        $r226 = virtualinvoke $r12.<android.util.SparseArray: java.lang.Object get(int)>($i49);

        r281 = (com.android.server.am.ProcessRecord) $r226;

     label048:
        if r281 == null goto label051;

        if r2 == null goto label051;

     label049:
        $r231 = r281.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        $z26 = virtualinvoke $r231.<com.android.server.am.ProcessRecord$PackageList: boolean containsKey(java.lang.Object)>(r2);

        if $z26 != 0 goto label051;

     label050:
        goto label063;

     label051:
        z59 = z58;

        z60 = z54;

        if z58 != 0 goto label056;

        if z54 == 0 goto label053;

     label052:
        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label053:
        z60 = 1;

     label054:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  Active process infos:");

     label055:
        z59 = 1;

     label056:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("    Pinfo PID #");

        $r282 = <com.android.server.am.ActivityManagerService: android.util.SparseArray sActiveProcessInfoSelfLocked>;

        $i70 = virtualinvoke $r282.<android.util.SparseArray: int keyAt(int)>(i69);

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i70);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(":");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("      name=");

        $r283 = r280.<android.content.pm.ProcessInfo: java.lang.String name>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r283);

     label057:
        z58 = z59;

        z54 = z60;

     label058:
        $r284 = r280.<android.content.pm.ProcessInfo: android.util.ArraySet deniedPermissions>;

        if $r284 == null goto label063;

     label059:
        i71 = 0;

     label060:
        z58 = z59;

        z54 = z60;

     label061:
        $r227 = r280.<android.content.pm.ProcessInfo: android.util.ArraySet deniedPermissions>;

        $i50 = virtualinvoke $r227.<android.util.ArraySet: int size()>();

        if i71 >= $i50 goto label063;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("      deny: ");

        $r228 = r280.<android.content.pm.ProcessInfo: android.util.ArraySet deniedPermissions>;

        $r229 = virtualinvoke $r228.<android.util.ArraySet: java.lang.Object valueAt(int)>(i69);

        $r230 = (java.lang.String) $r229;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r230);

     label062:
        i71 = i71 + 1;

        goto label060;

     label063:
        i69 = i69 + 1;

        goto label047;

     label064:
        exitmonitor r279;

     label065:
        z61 = z54;

        $r14 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mImportantProcesses>;

        $i7 = virtualinvoke $r14.<android.util.SparseArray: int size()>();

        if $i7 <= 0 goto label082;

        r285 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        entermonitor r285;

        i72 = 0;

        z62 = 0;

     label066:
        $r217 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mImportantProcesses>;

        $i47 = virtualinvoke $r217.<android.util.SparseArray: int size()>();

        if i72 >= $i47 goto label077;

        $r219 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        $r218 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mImportantProcesses>;

        $r220 = virtualinvoke $r218.<android.util.SparseArray: java.lang.Object valueAt(int)>(i72);

        $r221 = (com.android.server.am.ActivityManagerService$ImportanceToken) $r220;

        $i48 = $r221.<com.android.server.am.ActivityManagerService$ImportanceToken: int pid>;

        r286 = virtualinvoke $r219.<com.android.server.am.ActivityManagerService$PidMap: com.android.server.am.ProcessRecord get(int)>($i48);

     label067:
        if r2 == null goto label070;

        z63 = z62;

        z64 = z54;

        if r286 == null goto label076;

     label068:
        $r222 = r286.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        $z25 = virtualinvoke $r222.<com.android.server.am.ProcessRecord$PackageList: boolean containsKey(java.lang.Object)>(r2);

        if $z25 != 0 goto label070;

     label069:
        z63 = z62;

        z64 = z54;

        goto label076;

     label070:
        z63 = z62;

        z64 = z54;

        if z62 != 0 goto label075;

        if z54 == 0 goto label072;

     label071:
        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label072:
        z64 = 1;

     label073:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  Foreground Processes:");

     label074:
        z63 = 1;

     label075:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("    PID #");

        $r287 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mImportantProcesses>;

        $i73 = virtualinvoke $r287.<android.util.SparseArray: int keyAt(int)>(i72);

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i73);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        $r288 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mImportantProcesses>;

        $r289 = virtualinvoke $r288.<android.util.SparseArray: java.lang.Object valueAt(int)>(i72);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>($r289);

     label076:
        i72 = i72 + 1;

        z62 = z63;

        z54 = z64;

        goto label066;

     label077:
        exitmonitor r285;

     label078:
        z61 = z54;

        goto label082;

     label079:
        $r263 := @caughtexception;

     label080:
        exitmonitor r285;

     label081:
        throw $r263;

     label082:
        z65 = z61;

        $r15 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPersistentStartingProcesses>;

        $i8 = virtualinvoke $r15.<java.util.ArrayList: int size()>();

        if $i8 <= 0 goto label084;

        if z61 == 0 goto label083;

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label083:
        z65 = 1;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  Persisent processes that are starting:");

        $r216 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPersistentStartingProcesses>;

        staticinvoke <com.android.server.am.ActivityManagerService: int dumpProcessList(java.io.PrintWriter,com.android.server.am.ActivityManagerService,java.util.List,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, r0, $r216, "    ", "Starting Norm", "Restarting PERS", r2);

     label084:
        z66 = z65;

        $r291 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r292 = $r291.<com.android.server.am.ProcessList: java.util.ArrayList mRemovedProcesses>;

        $i74 = virtualinvoke $r292.<java.util.ArrayList: int size()>();

        if $i74 <= 0 goto label086;

        if z65 == 0 goto label085;

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label085:
        z66 = 1;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  Processes that are being removed:");

        $r214 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r215 = $r214.<com.android.server.am.ProcessList: java.util.ArrayList mRemovedProcesses>;

        staticinvoke <com.android.server.am.ActivityManagerService: int dumpProcessList(java.io.PrintWriter,com.android.server.am.ActivityManagerService,java.util.List,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, r0, $r215, "    ", "Removed Norm", "Removed PERS", r2);

     label086:
        z67 = z66;

        $r293 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesOnHold>;

        $i75 = virtualinvoke $r293.<java.util.ArrayList: int size()>();

        if $i75 <= 0 goto label088;

        if z66 == 0 goto label087;

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label087:
        z67 = 1;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  Processes that are on old until the system is ready:");

        $r213 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesOnHold>;

        staticinvoke <com.android.server.am.ActivityManagerService: int dumpProcessList(java.io.PrintWriter,com.android.server.am.ActivityManagerService,java.util.List,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, r0, $r213, "    ", "OnHold Norm", "OnHold PERS", r2);

     label088:
        $r294 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.AppErrors mAppErrors>;

        z68 = virtualinvoke $r294.<com.android.server.am.AppErrors: boolean dumpLocked(java.io.FileDescriptor,java.io.PrintWriter,boolean,java.lang.String)>(r265, r1, z67, r2);

        $r295 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerInternal mAtmInternal>;

        $z69 = r0.<com.android.server.am.ActivityManagerService: boolean mTestPssMode>;

        $i76 = r0.<com.android.server.am.ActivityManagerService: int mWakefulness>;

        z70 = virtualinvoke $r295.<com.android.server.wm.ActivityTaskManagerInternal: boolean dumpForProcesses(java.io.FileDescriptor,java.io.PrintWriter,boolean,java.lang.String,int,boolean,boolean,int)>(r265, r1, z0, r2, i57, z68, $z69, $i76);

        z71 = z70;

        if z0 == 0 goto label091;

        z71 = z70;

        $r198 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r199 = $r198.<com.android.server.am.ProcessList: android.util.LongSparseArray mPendingStarts>;

        $i42 = virtualinvoke $r199.<android.util.LongSparseArray: int size()>();

        if $i42 <= 0 goto label091;

        if z70 == 0 goto label089;

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label089:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  mPendingStarts: ");

        i77 = 0;

        $r200 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r201 = $r200.<com.android.server.am.ProcessList: android.util.LongSparseArray mPendingStarts>;

        i78 = virtualinvoke $r201.<android.util.LongSparseArray: int size()>();

     label090:
        z71 = 1;

        if i77 >= i78 goto label091;

        $r202 = new java.lang.StringBuilder;

        specialinvoke $r202.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r202.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");

        $r204 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r205 = $r204.<com.android.server.am.ProcessList: android.util.LongSparseArray mPendingStarts>;

        $l43 = virtualinvoke $r205.<android.util.LongSparseArray: long keyAt(int)>(i77);

        virtualinvoke $r202.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l43);

        virtualinvoke $r202.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r208 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r209 = $r208.<com.android.server.am.ProcessList: android.util.LongSparseArray mPendingStarts>;

        $r210 = virtualinvoke $r209.<android.util.LongSparseArray: java.lang.Object valueAt(int)>(i77);

        virtualinvoke $r202.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r210);

        $r212 = virtualinvoke $r202.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r212);

        i77 = i77 + 1;

        goto label090;

     label091:
        if z0 == 0 goto label103;

        $r163 = r0.<com.android.server.am.ActivityManagerService: android.os.RemoteCallbackList mUidObservers>;

        i79 = virtualinvoke $r163.<android.os.RemoteCallbackList: int getRegisteredCallbackCount()>();

        z73 = 0;

        i80 = 0;

     label092:
        if i80 >= i79 goto label101;

        $r186 = r0.<com.android.server.am.ActivityManagerService: android.os.RemoteCallbackList mUidObservers>;

        $r187 = virtualinvoke $r186.<android.os.RemoteCallbackList: java.lang.Object getRegisteredCallbackCookie(int)>(i80);

        r297 = (com.android.server.am.ActivityManagerService$UidObserverRegistration) $r187;

        if r2 == null goto label093;

        z74 = z73;

        $r197 = r297.<com.android.server.am.ActivityManagerService$UidObserverRegistration: java.lang.String pkg>;

        $z24 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r197);

        if $z24 == 0 goto label100;

     label093:
        z75 = z73;

        if z73 != 0 goto label094;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  mUidObservers:");

        z75 = 1;

     label094:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("    ");

        $i30 = r297.<com.android.server.am.ActivityManagerService$UidObserverRegistration: int uid>;

        staticinvoke <android.os.UserHandle: void formatUid(java.io.PrintWriter,int)>(r1, $i30);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" ");

        $r188 = r297.<com.android.server.am.ActivityManagerService$UidObserverRegistration: java.lang.String pkg>;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r188);

        $r189 = r0.<com.android.server.am.ActivityManagerService: android.os.RemoteCallbackList mUidObservers>;

        $r190 = virtualinvoke $r189.<android.os.RemoteCallbackList: android.os.IInterface getRegisteredCallbackItem(int)>(i80);

        r298 = (android.app.IUidObserver) $r190;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" ");

        $r191 = virtualinvoke r298.<java.lang.Object: java.lang.Class getClass()>();

        $r192 = virtualinvoke $r191.<java.lang.Class: java.lang.String getTypeName()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r192);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(":");

        $i31 = r297.<com.android.server.am.ActivityManagerService$UidObserverRegistration: int which>;

        $i32 = $i31 & 4;

        if $i32 == 0 goto label095;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" IDLE");

     label095:
        $i33 = r297.<com.android.server.am.ActivityManagerService$UidObserverRegistration: int which>;

        $i34 = $i33 & 8;

        if $i34 == 0 goto label096;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" ACT");

     label096:
        $i35 = r297.<com.android.server.am.ActivityManagerService$UidObserverRegistration: int which>;

        $i36 = $i35 & 2;

        if $i36 == 0 goto label097;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" GONE");

     label097:
        $i37 = r297.<com.android.server.am.ActivityManagerService$UidObserverRegistration: int which>;

        $i38 = $i37 & 1;

        if $i38 == 0 goto label098;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" STATE");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" (cut=");

        $i41 = r297.<com.android.server.am.ActivityManagerService$UidObserverRegistration: int cutpoint>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i41);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(")");

     label098:
        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        z74 = z75;

        $r193 = r297.<com.android.server.am.ActivityManagerService$UidObserverRegistration: android.util.SparseIntArray lastProcStates>;

        if $r193 == null goto label100;

        $r194 = r297.<com.android.server.am.ActivityManagerService$UidObserverRegistration: android.util.SparseIntArray lastProcStates>;

        i81 = virtualinvoke $r194.<android.util.SparseIntArray: int size()>();

        i82 = 0;

     label099:
        z74 = z75;

        if i82 >= i81 goto label100;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("      Last ");

        $r195 = r297.<com.android.server.am.ActivityManagerService$UidObserverRegistration: android.util.SparseIntArray lastProcStates>;

        $i39 = virtualinvoke $r195.<android.util.SparseIntArray: int keyAt(int)>(i82);

        staticinvoke <android.os.UserHandle: void formatUid(java.io.PrintWriter,int)>(r1, $i39);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        $r196 = r297.<com.android.server.am.ActivityManagerService$UidObserverRegistration: android.util.SparseIntArray lastProcStates>;

        $i40 = virtualinvoke $r196.<android.util.SparseIntArray: int valueAt(int)>(i82);

        virtualinvoke r1.<java.io.PrintWriter: void println(int)>($i40);

        i82 = i82 + 1;

        goto label099;

     label100:
        i80 = i80 + 1;

        z73 = z74;

        goto label092;

     label101:
        $r164 = new java.lang.StringBuilder;

        specialinvoke $r164.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r164.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mDeviceIdleWhitelist=");

        $r166 = r0.<com.android.server.am.ActivityManagerService: int[] mDeviceIdleWhitelist>;

        $r167 = staticinvoke <java.util.Arrays: java.lang.String toString(int[])>($r166);

        virtualinvoke $r164.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r167);

        $r169 = virtualinvoke $r164.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r169);

        $r170 = new java.lang.StringBuilder;

        specialinvoke $r170.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r170.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mDeviceIdleExceptIdleWhitelist=");

        $r172 = r0.<com.android.server.am.ActivityManagerService: int[] mDeviceIdleExceptIdleWhitelist>;

        $r173 = staticinvoke <java.util.Arrays: java.lang.String toString(int[])>($r172);

        virtualinvoke $r170.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r173);

        $r175 = virtualinvoke $r170.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r175);

        $r176 = new java.lang.StringBuilder;

        specialinvoke $r176.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r176.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mDeviceIdleTempWhitelist=");

        $r178 = r0.<com.android.server.am.ActivityManagerService: int[] mDeviceIdleTempWhitelist>;

        $r179 = staticinvoke <java.util.Arrays: java.lang.String toString(int[])>($r178);

        virtualinvoke $r176.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r179);

        $r181 = virtualinvoke $r176.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r181);

        $r182 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.PendingTempWhitelists mPendingTempWhitelist>;

        $i26 = virtualinvoke $r182.<com.android.server.am.PendingTempWhitelists: int size()>();

        if $i26 <= 0 goto label103;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  mPendingTempWhitelist:");

        i83 = 0;

     label102:
        $r183 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.PendingTempWhitelists mPendingTempWhitelist>;

        $i27 = virtualinvoke $r183.<com.android.server.am.PendingTempWhitelists: int size()>();

        if i83 >= $i27 goto label103;

        $r184 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.PendingTempWhitelists mPendingTempWhitelist>;

        r302 = virtualinvoke $r184.<com.android.server.am.PendingTempWhitelists: com.android.server.am.ActivityManagerService$PendingTempWhitelist valueAt(int)>(i83);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("    ");

        $i28 = r302.<com.android.server.am.ActivityManagerService$PendingTempWhitelist: int targetUid>;

        staticinvoke <android.os.UserHandle: void formatUid(java.io.PrintWriter,int)>(r1, $i28);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        $l29 = r302.<com.android.server.am.ActivityManagerService$PendingTempWhitelist: long duration>;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>($l29, r1);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" ");

        $r185 = r302.<com.android.server.am.ActivityManagerService$PendingTempWhitelist: java.lang.String tag>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r185);

        i83 = i83 + 1;

        goto label102;

     label103:
        $r303 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mDebugApp>;

        if $r303 != null goto label104;

        $r162 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mOrigDebugApp>;

        if $r162 != null goto label104;

        $z22 = r0.<com.android.server.am.ActivityManagerService: boolean mDebugTransient>;

        if $z22 != 0 goto label104;

        z76 = z71;

        $z23 = r0.<com.android.server.am.ActivityManagerService: boolean mOrigWaitForDebugger>;

        if $z23 == 0 goto label107;

     label104:
        if r2 == null goto label105;

        $r160 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mDebugApp>;

        $z20 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r160);

        if $z20 != 0 goto label105;

        z76 = z71;

        $r161 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mOrigDebugApp>;

        $z21 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r161);

        if $z21 == 0 goto label107;

     label105:
        z76 = z71;

        if z71 == 0 goto label106;

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        z76 = 0;

     label106:
        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mDebugApp=");

        $r18 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mDebugApp>;

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/orig=");

        $r21 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mOrigDebugApp>;

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mDebugTransient=");

        $z3 = r0.<com.android.server.am.ActivityManagerService: boolean mDebugTransient>;

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z3);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mOrigWaitForDebugger=");

        $z4 = r0.<com.android.server.am.ActivityManagerService: boolean mOrigWaitForDebugger>;

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z4);

        $r27 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r27);

     label107:
        z77 = z76;

        $r305 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mMemWatchProcesses>;

        $r306 = virtualinvoke $r305.<com.android.internal.app.ProcessMap: android.util.ArrayMap getMap()>();

        $i84 = virtualinvoke $r306.<android.util.ArrayMap: int size()>();

        if $i84 <= 0 goto label114;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  Mem watch processes:");

        $r140 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mMemWatchProcesses>;

        r307 = virtualinvoke $r140.<com.android.internal.app.ProcessMap: android.util.ArrayMap getMap()>();

        i85 = 0;

        z77 = z76;

     label108:
        $i20 = virtualinvoke r307.<android.util.ArrayMap: int size()>();

        if i85 >= $i20 goto label113;

        $r143 = virtualinvoke r307.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i85);

        r308 = (java.lang.String) $r143;

        $r144 = virtualinvoke r307.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i85);

        r309 = (android.util.SparseArray) $r144;

        i86 = 0;

     label109:
        $i23 = virtualinvoke r309.<android.util.SparseArray: int size()>();

        if i86 >= $i23 goto label112;

        z78 = z77;

        if z77 == 0 goto label110;

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        z78 = 0;

     label110:
        $r145 = new java.lang.StringBuilder;

        specialinvoke $r145.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r145.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");

        virtualinvoke $r145.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r308);

        virtualinvoke $r145.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47);

        $i24 = virtualinvoke r309.<android.util.SparseArray: int keyAt(int)>(i86);

        staticinvoke <android.os.UserHandle: void formatUid(java.lang.StringBuilder,int)>($r145, $i24);

        $r149 = virtualinvoke r309.<android.util.SparseArray: java.lang.Object valueAt(int)>(i86);

        r311 = (android.util.Pair) $r149;

        virtualinvoke $r145.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r151 = r311.<android.util.Pair: java.lang.Object first>;

        $r152 = (java.lang.Long) $r151;

        $l25 = virtualinvoke $r152.<java.lang.Long: long longValue()>();

        staticinvoke <android.util.DebugUtils: java.lang.String sizeValueToString(long,java.lang.StringBuilder)>($l25, $r145);

        $r154 = r311.<android.util.Pair: java.lang.Object second>;

        if $r154 == null goto label111;

        virtualinvoke $r145.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", report to ");

        $r157 = r311.<android.util.Pair: java.lang.Object second>;

        $r158 = (java.lang.String) $r157;

        virtualinvoke $r145.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r158);

     label111:
        $r155 = virtualinvoke $r145.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r155);

        i86 = i86 + 1;

        z77 = z78;

        goto label109;

     label112:
        i85 = i85 + 1;

        goto label108;

     label113:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  mMemWatchDumpProcName=");

        $r141 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mMemWatchDumpProcName>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r141);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  mMemWatchDumpUri=");

        $r142 = r0.<com.android.server.am.ActivityManagerService: android.net.Uri mMemWatchDumpUri>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>($r142);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  mMemWatchDumpPid=");

        $i21 = r0.<com.android.server.am.ActivityManagerService: int mMemWatchDumpPid>;

        virtualinvoke r1.<java.io.PrintWriter: void println(int)>($i21);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  mMemWatchDumpUid=");

        $i22 = r0.<com.android.server.am.ActivityManagerService: int mMemWatchDumpUid>;

        virtualinvoke r1.<java.io.PrintWriter: void println(int)>($i22);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  mMemWatchIsUserInitiated=");

        $z19 = r0.<com.android.server.am.ActivityManagerService: boolean mMemWatchIsUserInitiated>;

        virtualinvoke r1.<java.io.PrintWriter: void println(boolean)>($z19);

     label114:
        r312 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mTrackAllocationApp>;

        z79 = z77;

        if r312 == null goto label117;

        if r2 == null goto label115;

        z79 = z77;

        $z18 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(r312);

        if $z18 == 0 goto label117;

     label115:
        z79 = z77;

        if z77 == 0 goto label116;

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        z79 = 0;

     label116:
        $r135 = new java.lang.StringBuilder;

        specialinvoke $r135.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r135.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mTrackAllocationApp=");

        $r137 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mTrackAllocationApp>;

        virtualinvoke $r135.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r137);

        $r139 = virtualinvoke $r135.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r139);

     label117:
        $r314 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$ProfileData mProfileData>;

        $r315 = virtualinvoke $r314.<com.android.server.am.ActivityManagerService$ProfileData: java.lang.String getProfileApp()>();

        if $r315 != null goto label118;

        $r125 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$ProfileData mProfileData>;

        $r126 = virtualinvoke $r125.<com.android.server.am.ActivityManagerService$ProfileData: com.android.server.am.ProcessRecord getProfileProc()>();

        if $r126 != null goto label118;

        z80 = z79;

        $r127 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$ProfileData mProfileData>;

        $r128 = virtualinvoke $r127.<com.android.server.am.ActivityManagerService$ProfileData: android.app.ProfilerInfo getProfilerInfo()>();

        if $r128 == null goto label121;

        $r129 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$ProfileData mProfileData>;

        $r130 = virtualinvoke $r129.<com.android.server.am.ActivityManagerService$ProfileData: android.app.ProfilerInfo getProfilerInfo()>();

        $r131 = $r130.<android.app.ProfilerInfo: java.lang.String profileFile>;

        if $r131 != null goto label118;

        z80 = z79;

        $r132 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$ProfileData mProfileData>;

        $r133 = virtualinvoke $r132.<com.android.server.am.ActivityManagerService$ProfileData: android.app.ProfilerInfo getProfilerInfo()>();

        $r134 = $r133.<android.app.ProfilerInfo: android.os.ParcelFileDescriptor profileFd>;

        if $r134 == null goto label121;

     label118:
        if r2 == null goto label119;

        z80 = z79;

        $r123 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$ProfileData mProfileData>;

        $r124 = virtualinvoke $r123.<com.android.server.am.ActivityManagerService$ProfileData: java.lang.String getProfileApp()>();

        $z17 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r124);

        if $z17 == 0 goto label121;

     label119:
        z81 = z79;

        if z79 == 0 goto label120;

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        z81 = 0;

     label120:
        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mProfileApp=");

        $r30 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$ProfileData mProfileData>;

        $r31 = virtualinvoke $r30.<com.android.server.am.ActivityManagerService$ProfileData: java.lang.String getProfileApp()>();

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mProfileProc=");

        $r34 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$ProfileData mProfileData>;

        $r35 = virtualinvoke $r34.<com.android.server.am.ActivityManagerService$ProfileData: com.android.server.am.ProcessRecord getProfileProc()>();

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r35);

        $r37 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r37);

        z80 = z81;

        $r38 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$ProfileData mProfileData>;

        $r39 = virtualinvoke $r38.<com.android.server.am.ActivityManagerService$ProfileData: android.app.ProfilerInfo getProfilerInfo()>();

        if $r39 == null goto label121;

        $r93 = new java.lang.StringBuilder;

        specialinvoke $r93.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mProfileFile=");

        $r95 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$ProfileData mProfileData>;

        $r96 = virtualinvoke $r95.<com.android.server.am.ActivityManagerService$ProfileData: android.app.ProfilerInfo getProfilerInfo()>();

        $r97 = $r96.<android.app.ProfilerInfo: java.lang.String profileFile>;

        virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r97);

        virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mProfileFd=");

        $r100 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$ProfileData mProfileData>;

        $r101 = virtualinvoke $r100.<com.android.server.am.ActivityManagerService$ProfileData: android.app.ProfilerInfo getProfilerInfo()>();

        $r102 = $r101.<android.app.ProfilerInfo: android.os.ParcelFileDescriptor profileFd>;

        virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r102);

        $r104 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r104);

        $r105 = new java.lang.StringBuilder;

        specialinvoke $r105.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mSamplingInterval=");

        $r107 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$ProfileData mProfileData>;

        $r108 = virtualinvoke $r107.<com.android.server.am.ActivityManagerService$ProfileData: android.app.ProfilerInfo getProfilerInfo()>();

        $i18 = $r108.<android.app.ProfilerInfo: int samplingInterval>;

        virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i18);

        virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mAutoStopProfiler=");

        $r111 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$ProfileData mProfileData>;

        $r112 = virtualinvoke $r111.<com.android.server.am.ActivityManagerService$ProfileData: android.app.ProfilerInfo getProfilerInfo()>();

        $z15 = $r112.<android.app.ProfilerInfo: boolean autoStopProfiler>;

        virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z15);

        virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mStreamingOutput=");

        $r115 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$ProfileData mProfileData>;

        $r116 = virtualinvoke $r115.<com.android.server.am.ActivityManagerService$ProfileData: android.app.ProfilerInfo getProfilerInfo()>();

        $z16 = $r116.<android.app.ProfilerInfo: boolean streamingOutput>;

        virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z16);

        $r118 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r118);

        $r119 = new java.lang.StringBuilder;

        specialinvoke $r119.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r119.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mProfileType=");

        $i19 = r0.<com.android.server.am.ActivityManagerService: int mProfileType>;

        virtualinvoke $r119.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i19);

        $r122 = virtualinvoke $r119.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r122);

        z80 = z81;

     label121:
        r320 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mNativeDebuggingApp>;

        if r320 == null goto label124;

        if r2 == null goto label122;

        $z14 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(r320);

        if $z14 == 0 goto label124;

     label122:
        if z80 == 0 goto label123;

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label123:
        $r88 = new java.lang.StringBuilder;

        specialinvoke $r88.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mNativeDebuggingApp=");

        $r90 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mNativeDebuggingApp>;

        virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r90);

        $r92 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r92);

     label124:
        if r2 != null goto label128;

        $z5 = r0.<com.android.server.am.ActivityManagerService: boolean mAlwaysFinishActivities>;

        if $z5 == 0 goto label125;

        $r84 = new java.lang.StringBuilder;

        specialinvoke $r84.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mAlwaysFinishActivities=");

        $z13 = r0.<com.android.server.am.ActivityManagerService: boolean mAlwaysFinishActivities>;

        virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z13);

        $r87 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r87);

     label125:
        if z0 == 0 goto label128;

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Total persistent processes: ");

        virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i59);

        $r45 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r45);

        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mProcessesReady=");

        $z6 = r0.<com.android.server.am.ActivityManagerService: boolean mProcessesReady>;

        virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z6);

        virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mSystemReady=");

        $z7 = r0.<com.android.server.am.ActivityManagerService: boolean mSystemReady>;

        virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z7);

        virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mBooted=");

        $z8 = r0.<com.android.server.am.ActivityManagerService: boolean mBooted>;

        virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z8);

        virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mFactoryTest=");

        $i9 = r0.<com.android.server.am.ActivityManagerService: int mFactoryTest>;

        virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r55 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r55);

        $r56 = new java.lang.StringBuilder;

        specialinvoke $r56.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mBooting=");

        $z9 = r0.<com.android.server.am.ActivityManagerService: boolean mBooting>;

        virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z9);

        virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mCallFinishBooting=");

        $z10 = r0.<com.android.server.am.ActivityManagerService: boolean mCallFinishBooting>;

        virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z10);

        virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mBootAnimationComplete=");

        $z11 = r0.<com.android.server.am.ActivityManagerService: boolean mBootAnimationComplete>;

        virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z11);

        $r63 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r63);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  mLastPowerCheckUptime=");

        $l10 = r0.<com.android.server.am.ActivityManagerService: long mLastPowerCheckUptime>;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>($l10, r1);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("");

        $r64 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.OomAdjuster mOomAdjuster>;

        virtualinvoke $r64.<com.android.server.am.OomAdjuster: void dumpSequenceNumbersLocked(java.io.PrintWriter)>(r1);

        $r65 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.OomAdjuster mOomAdjuster>;

        virtualinvoke $r65.<com.android.server.am.OomAdjuster: void dumpProcCountsLocked(java.io.PrintWriter)>(r1);

        $r66 = new java.lang.StringBuilder;

        specialinvoke $r66.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mAllowLowerMemLevel=");

        $z12 = r0.<com.android.server.am.ActivityManagerService: boolean mAllowLowerMemLevel>;

        virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z12);

        virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mLastMemoryLevel=");

        $i11 = r0.<com.android.server.am.ActivityManagerService: int mLastMemoryLevel>;

        virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mLastNumProcesses=");

        $i12 = r0.<com.android.server.am.ActivityManagerService: int mLastNumProcesses>;

        virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12);

        $r73 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r73);

        l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  mLastIdleTime=");

        $l13 = r0.<com.android.server.am.ActivityManagerService: long mLastIdleTime>;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,long,java.io.PrintWriter)>(l1, $l13, r1);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" mLowRamSinceLastIdle=");

        $l14 = specialinvoke r0.<com.android.server.am.ActivityManagerService: long getLowRamTimeSinceIdle(long)>(l1);

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>($l14, r1);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  mUidChangeDispatchCount=");

        $i15 = r0.<com.android.server.am.ActivityManagerService: int mUidChangeDispatchCount>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i15);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  Slow UID dispatches:");

        $r74 = r0.<com.android.server.am.ActivityManagerService: android.os.RemoteCallbackList mUidObservers>;

        i87 = virtualinvoke $r74.<android.os.RemoteCallbackList: int beginBroadcast()>();

        i88 = 0;

     label126:
        if i88 >= i87 goto label127;

        $r77 = r0.<com.android.server.am.ActivityManagerService: android.os.RemoteCallbackList mUidObservers>;

        $r78 = virtualinvoke $r77.<android.os.RemoteCallbackList: java.lang.Object getBroadcastCookie(int)>(i88);

        r327 = (com.android.server.am.ActivityManagerService$UidObserverRegistration) $r78;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("    ");

        $r79 = r0.<com.android.server.am.ActivityManagerService: android.os.RemoteCallbackList mUidObservers>;

        $r80 = virtualinvoke $r79.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>(i88);

        $r81 = (android.app.IUidObserver) $r80;

        $r82 = virtualinvoke $r81.<java.lang.Object: java.lang.Class getClass()>();

        $r83 = virtualinvoke $r82.<java.lang.Class: java.lang.String getTypeName()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r83);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        $i16 = r327.<com.android.server.am.ActivityManagerService$UidObserverRegistration: int mSlowDispatchCount>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i16);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" / Max ");

        $i17 = r327.<com.android.server.am.ActivityManagerService$UidObserverRegistration: int mMaxDispatchTime>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i17);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("ms");

        i88 = i88 + 1;

        goto label126;

     label127:
        $r75 = r0.<com.android.server.am.ActivityManagerService: android.os.RemoteCallbackList mUidObservers>;

        virtualinvoke $r75.<android.os.RemoteCallbackList: void finishBroadcast()>();

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  ServiceManager statistics:");

        $r76 = <android.os.ServiceManager: com.android.internal.util.StatLogger sStatLogger>;

        virtualinvoke $r76.<com.android.internal.util.StatLogger: void dump(java.io.PrintWriter,java.lang.String)>(r1, "    ");

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label128:
        $r328 = new java.lang.StringBuilder;

        specialinvoke $r328.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r328.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mForceBackgroundCheck=");

        $z82 = r0.<com.android.server.am.ActivityManagerService: boolean mForceBackgroundCheck>;

        virtualinvoke $r328.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z82);

        $r330 = virtualinvoke $r328.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r330);

        return;

     label129:
        $r264 := @caughtexception;

        r331 = $r264;

     label130:
        exitmonitor r279;

     label131:
        throw r331;

     label132:
        $r261 := @caughtexception;

        r331 = $r261;

        goto label130;

     label133:
        $r260 := @caughtexception;

        r332 = $r260;

     label134:
        exitmonitor r273;

     label135:
        throw r332;

     label136:
        $r262 := @caughtexception;

        r332 = $r262;

        goto label134;

        catch java.lang.Throwable from label033 to label034 with label133;
        catch java.lang.Throwable from label035 to label036 with label133;
        catch java.lang.Throwable from label038 to label039 with label133;
        catch java.lang.Throwable from label040 to label041 with label133;
        catch java.lang.Throwable from label042 to label043 with label133;
        catch java.lang.Throwable from label045 to label046 with label133;
        catch java.lang.Throwable from label047 to label048 with label129;
        catch java.lang.Throwable from label049 to label050 with label129;
        catch java.lang.Throwable from label052 to label053 with label129;
        catch java.lang.Throwable from label054 to label055 with label129;
        catch java.lang.Throwable from label056 to label057 with label129;
        catch java.lang.Throwable from label058 to label059 with label129;
        catch java.lang.Throwable from label061 to label062 with label129;
        catch java.lang.Throwable from label064 to label065 with label129;
        catch java.lang.Throwable from label066 to label067 with label079;
        catch java.lang.Throwable from label068 to label069 with label079;
        catch java.lang.Throwable from label071 to label072 with label079;
        catch java.lang.Throwable from label073 to label074 with label079;
        catch java.lang.Throwable from label075 to label076 with label079;
        catch java.lang.Throwable from label077 to label078 with label079;
        catch java.lang.Throwable from label080 to label081 with label079;
        catch java.lang.Throwable from label130 to label131 with label132;
        catch java.lang.Throwable from label134 to label135 with label136;
    }

    boolean dumpProcessesToGc(java.io.PrintWriter, boolean, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        java.io.PrintWriter r1;
        java.lang.String r2, $r9;
        long l0, $l4, $l5, $l6, $l7;
        com.android.server.am.ProcessRecord r3;
        java.util.ArrayList $r4, $r5, $r6;
        int $i1, $i2, i3;
        java.lang.Object $r7;
        android.content.pm.ApplicationInfo $r8;
        boolean $z0, z1, z2, z3, z4, z5, $z6;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.io.PrintWriter;

        z1 := @parameter1: boolean;

        r2 := @parameter2: java.lang.String;

        z2 = z1;

        $r4 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesToGc>;

        $i1 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        if $i1 <= 0 goto label6;

        z3 = 0;

        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        i3 = 0;

     label1:
        z2 = z1;

        $r5 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesToGc>;

        $i2 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        if i3 >= $i2 goto label6;

        $r6 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesToGc>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r3 = (com.android.server.am.ProcessRecord) $r7;

        if r2 == null goto label2;

        $r8 = r3.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r9 = $r8.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z0 != 0 goto label2;

        goto label5;

     label2:
        z4 = z3;

        z5 = z1;

        if z3 != 0 goto label4;

        if z1 == 0 goto label3;

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label3:
        z5 = 1;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  Processes that are waiting to GC:");

        z4 = 1;

     label4:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("    Process ");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>(r3);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("      lowMem=");

        $z6 = r3.<com.android.server.am.ProcessRecord: boolean reportLowMemory>;

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z6);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(", last gced=");

        $l4 = r3.<com.android.server.am.ProcessRecord: long lastRequestedGc>;

        $l5 = l0 - $l4;

        virtualinvoke r1.<java.io.PrintWriter: void print(long)>($l5);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" ms ago, last lowMem=");

        $l6 = r3.<com.android.server.am.ProcessRecord: long lastLowMemory>;

        $l7 = l0 - $l6;

        virtualinvoke r1.<java.io.PrintWriter: void print(long)>($l7);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(" ms ago");

        z1 = z5;

        z3 = z4;

     label5:
        i3 = i3 + 1;

        goto label1;

     label6:
        return z2;
    }

    protected boolean dumpProvider(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String, java.lang.String[], int, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String r3;
        java.lang.String[] r4;
        int i0;
        boolean z0, $z1;
        com.android.server.am.ProviderMap $r5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String[];

        i0 := @parameter4: int;

        z0 := @parameter5: boolean;

        $r5 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProviderMap mProviderMap>;

        $z1 = virtualinvoke $r5.<com.android.server.am.ProviderMap: boolean dumpProvider(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String,java.lang.String[],int,boolean)>(r1, r2, r3, r4, i0, z0);

        return $z1;
    }

    protected boolean dumpProviderProto(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String, java.lang.String[])
    {
        com.android.server.am.ActivityManagerService r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String r3;
        java.lang.String[] r4;
        com.android.server.am.ProviderMap $r5;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String[];

        $r5 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProviderMap mProviderMap>;

        $z0 = virtualinvoke $r5.<com.android.server.am.ProviderMap: boolean dumpProviderProto(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String,java.lang.String[])>(r1, r2, r3, r4);

        return $z0;
    }

    void dumpProvidersLocked(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[], int, boolean, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        java.io.PrintWriter r1;
        java.lang.String[] r2;
        java.lang.String r3, $r11;
        com.android.server.am.ActivityManagerService$ItemMatcher $r4;
        com.android.server.am.ProviderMap $r5;
        java.util.ArrayList $r6, $r7, $r8;
        int $i1, $i2, i3, i4;
        java.lang.Object $r9;
        android.content.ComponentName $r10;
        boolean $z0, z1, z2, z3, z4, z5, z6, z7;
        java.io.FileDescriptor r12;
        com.android.server.am.ContentProviderRecord r13;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r12 := @parameter0: java.io.FileDescriptor;

        r1 := @parameter1: java.io.PrintWriter;

        r2 := @parameter2: java.lang.String[];

        i3 := @parameter3: int;

        z1 := @parameter4: boolean;

        r3 := @parameter5: java.lang.String;

        $r4 = new com.android.server.am.ActivityManagerService$ItemMatcher;

        specialinvoke $r4.<com.android.server.am.ActivityManagerService$ItemMatcher: void <init>()>();

        virtualinvoke $r4.<com.android.server.am.ActivityManagerService$ItemMatcher: int build(java.lang.String[],int)>(r2, i3);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("ACTIVITY MANAGER CONTENT PROVIDERS (dumpsys activity providers)");

        $r5 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProviderMap mProviderMap>;

        z2 = virtualinvoke $r5.<com.android.server.am.ProviderMap: boolean dumpProvidersLocked(java.io.PrintWriter,boolean,java.lang.String)>(r1, z1, r3);

        z3 = 0 | z2;

        z4 = z3;

        $r6 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLaunchingProviders>;

        $i1 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        if $i1 <= 0 goto label6;

        z5 = 0;

        $r7 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLaunchingProviders>;

        $i2 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        i4 = $i2 - 1;

     label1:
        z4 = z3;

        if i4 < 0 goto label6;

        $r8 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLaunchingProviders>;

        $r9 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        r13 = (com.android.server.am.ContentProviderRecord) $r9;

        if r3 == null goto label2;

        $r10 = r13.<com.android.server.am.ContentProviderRecord: android.content.ComponentName name>;

        $r11 = virtualinvoke $r10.<android.content.ComponentName: java.lang.String getPackageName()>();

        $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z0 != 0 goto label2;

        goto label5;

     label2:
        z6 = z2;

        z7 = z5;

        if z5 != 0 goto label4;

        if z2 == 0 goto label3;

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label3:
        z6 = 1;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  Launching content providers:");

        z7 = 1;

        z3 = 1;

     label4:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  Launching #");

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>(i4);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>(r13);

        z5 = z7;

        z2 = z6;

     label5:
        i4 = i4 + -1;

        goto label1;

     label6:
        if z4 != 0 goto label7;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  (nothing)");

     label7:
        return;
    }

    boolean dumpUids(java.io.PrintWriter, java.lang.String, int, com.android.server.am.ActiveUids, java.lang.String, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        java.io.PrintWriter r1;
        java.lang.String r2, r4;
        int i0, $i1, $i2, $i3, i4, $i5, $i6, $i7, $i8, i9;
        com.android.server.am.ActiveUids r3;
        com.android.server.am.UidRecord r5;
        android.util.ArraySet $r6, $r8;
        java.lang.Object $r7;
        boolean z0, z1, z2, z3, z4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 := @parameter3: com.android.server.am.ActiveUids;

        r4 := @parameter4: java.lang.String;

        z0 := @parameter5: boolean;

        z1 = 0;

        i4 = 0;

        z2 = z0;

     label1:
        $i1 = virtualinvoke r3.<com.android.server.am.ActiveUids: int size()>();

        if i4 >= $i1 goto label7;

        r5 = virtualinvoke r3.<com.android.server.am.ActiveUids: com.android.server.am.UidRecord valueAt(int)>(i4);

        if r2 == null goto label2;

        $i2 = r5.<com.android.server.am.UidRecord: int uid>;

        $i3 = staticinvoke <android.os.UserHandle: int getAppId(int)>($i2);

        if $i3 == i0 goto label2;

        goto label6;

     label2:
        z3 = z1;

        z4 = z2;

        if z1 != 0 goto label4;

        z3 = 1;

        if z2 == 0 goto label3;

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label3:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  ");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(r4);

        z4 = 1;

     label4:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("    UID ");

        $i5 = r5.<com.android.server.am.UidRecord: int uid>;

        staticinvoke <android.os.UserHandle: void formatUid(java.io.PrintWriter,int)>(r1, $i5);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>(r5);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("      curProcState=");

        $i6 = r5.<com.android.server.am.UidRecord: int mCurProcState>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i6);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" curCapability=");

        $i7 = r5.<com.android.server.am.UidRecord: int curCapability>;

        staticinvoke <android.app.ActivityManager: void printCapabilitiesFull(java.io.PrintWriter,int)>(r1, $i7);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        $r8 = r5.<com.android.server.am.UidRecord: android.util.ArraySet procRecords>;

        $i8 = virtualinvoke $r8.<android.util.ArraySet: int size()>();

        i9 = $i8 - 1;

     label5:
        z1 = z3;

        z2 = z4;

        if i9 < 0 goto label6;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("      proc=");

        $r6 = r5.<com.android.server.am.UidRecord: android.util.ArraySet procRecords>;

        $r7 = virtualinvoke $r6.<android.util.ArraySet: java.lang.Object valueAt(int)>(i9);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>($r7);

        i9 = i9 + -1;

        goto label5;

     label6:
        i4 = i4 + 1;

        goto label1;

     label7:
        return z1;
    }

    void enforceCallingPermission(java.lang.String, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1, r13, r14;
        int $i0, $i1, $i2;
        java.lang.StringBuilder $r3;
        java.lang.SecurityException $r12;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r13 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $i0 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>(r13);

        if $i0 != 0 goto label1;

        return;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from pid=");

        $i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13);

        r14 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r14);

        $r12 = new java.lang.SecurityException;

        specialinvoke $r12.<java.lang.SecurityException: void <init>(java.lang.String)>(r14);

        throw $r12;
    }

    int enforceDumpPermissionForPackage(java.lang.String, int, int, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, $i2, $i3, i4, i5;
        java.lang.String r1, r4;
        long l1;
        android.content.pm.PackageManagerInternal $r2;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r4 := @parameter0: java.lang.String;

        i4 := @parameter1: int;

        i0 := @parameter2: int;

        r1 := @parameter3: java.lang.String;

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r2 = r0.<com.android.server.am.ActivityManagerService: android.content.pm.PackageManagerInternal mPackageManagerInt>;

        i5 = virtualinvoke $r2.<android.content.pm.PackageManagerInternal: int getPackageUid(java.lang.String,int,int)>(r4, 786432, i4);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        if i5 != -1 goto label3;

        return -1;

     label3:
        $i2 = staticinvoke <android.os.UserHandle: int getAppId(int)>(i5);

        $i3 = staticinvoke <android.os.UserHandle: int getAppId(int)>(i0);

        if $i2 == $i3 goto label4;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.DUMP", r1);

     label4:
        return i5;

     label5:
        $r3 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label5;
    }

    void enforceNotIsolatedCaller(java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1, $r7;
        int $i0;
        boolean $z0;
        java.lang.StringBuilder $r3;
        java.lang.SecurityException $r6;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $z0 = staticinvoke <android.os.UserHandle: boolean isIsolated(int)>($i0);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Isolated process not allowed to call ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = new java.lang.SecurityException;

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.SecurityException: void <init>(java.lang.String)>($r7);

        throw $r6;
    }

    void enforcePermission(java.lang.String, int, int, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, $i2;
        java.lang.String r1, r13, r14;
        java.lang.StringBuilder $r3;
        java.lang.SecurityException $r12;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r13 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: java.lang.String;

        $i2 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkPermission(java.lang.String,int,int)>(r13, i0, i1);

        if $i2 != 0 goto label1;

        return;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from pid=");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13);

        r14 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r14);

        $r12 = new java.lang.SecurityException;

        specialinvoke $r12.<java.lang.SecurityException: void <init>(java.lang.String)>(r14);

        throw $r12;
    }

    com.android.server.am.ActivityManagerService$ProcessChangeItem enqueueProcessChangeItemLocked(int, int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, $i2, $i3, $i4, $i5, i6, i7;
        java.util.ArrayList $r1, $r2, $r4, $r5, $r8, $r10;
        com.android.server.am.ActivityManagerService$ProcessChangeItem $r3, r12;
        android.os.Handler $r6;
        android.os.Message $r7;
        java.lang.Object $r9, $r11;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingProcessChanges>;

        $i2 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        i6 = $i2 - 1;

        r12 = null;

     label1:
        if i6 < 0 goto label3;

        $r10 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingProcessChanges>;

        $r11 = virtualinvoke $r10.<java.util.ArrayList: java.lang.Object get(int)>(i6);

        r12 = (com.android.server.am.ActivityManagerService$ProcessChangeItem) $r11;

        $i5 = r12.<com.android.server.am.ActivityManagerService$ProcessChangeItem: int pid>;

        if $i5 != i0 goto label2;

        goto label3;

     label2:
        i6 = i6 + -1;

        goto label1;

     label3:
        if i6 >= 0 goto label7;

        $r2 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mAvailProcessChanges>;

        i7 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if i7 <= 0 goto label4;

        $r8 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mAvailProcessChanges>;

        $i4 = i7 - 1;

        $r9 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object remove(int)>($i4);

        r12 = (com.android.server.am.ActivityManagerService$ProcessChangeItem) $r9;

        goto label5;

     label4:
        $r3 = new com.android.server.am.ActivityManagerService$ProcessChangeItem;

        specialinvoke $r3.<com.android.server.am.ActivityManagerService$ProcessChangeItem: void <init>()>();

        r12 = $r3;

     label5:
        r12.<com.android.server.am.ActivityManagerService$ProcessChangeItem: int changes> = 0;

        r12.<com.android.server.am.ActivityManagerService$ProcessChangeItem: int pid> = i0;

        r12.<com.android.server.am.ActivityManagerService$ProcessChangeItem: int uid> = i1;

        $r4 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingProcessChanges>;

        $i3 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        if $i3 != 0 goto label6;

        $r6 = r0.<com.android.server.am.ActivityManagerService: android.os.Handler mUiHandler>;

        $r7 = virtualinvoke $r6.<android.os.Handler: android.os.Message obtainMessage(int)>(31);

        virtualinvoke $r7.<android.os.Message: void sendToTarget()>();

     label6:
        $r5 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingProcessChanges>;

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r12);

     label7:
        return r12;
    }

    final void enqueueUidChangeLocked(com.android.server.am.UidRecord, int, int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, i19, i20, i21, i22, i23, i24, i25, i26, i27, i28;
        com.android.server.am.UidRecord$ChangeItem r1, $r4, $r14, r16;
        java.util.ArrayList $r2, $r3, $r6, $r10;
        java.lang.IllegalArgumentException $r5;
        android.os.PowerManagerInternal $r7, $r8, $r9, r17;
        boolean $z1, $z2, z3;
        java.lang.Object $r11;
        android.os.Handler $r12;
        android.os.Message $r13;
        com.android.server.am.UidRecord r15;
        long l29;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r15 := @parameter0: com.android.server.am.UidRecord;

        i0 := @parameter1: int;

        i19 := @parameter2: int;

        if r15 == null goto label04;

        $r14 = r15.<com.android.server.am.UidRecord: com.android.server.am.UidRecord$ChangeItem pendingChange>;

        if $r14 != null goto label01;

        goto label04;

     label01:
        r1 = r15.<com.android.server.am.UidRecord: com.android.server.am.UidRecord$ChangeItem pendingChange>;

        i20 = i19;

        $i12 = i19 & 6;

        if $i12 != 0 goto label02;

        $i17 = r1.<com.android.server.am.UidRecord$ChangeItem: int change>;

        $i18 = $i17 & 6;

        i20 = i19 | $i18;

     label02:
        i21 = i20;

        $i13 = i20 & 24;

        if $i13 != 0 goto label03;

        $i15 = r1.<com.android.server.am.UidRecord$ChangeItem: int change>;

        $i16 = $i15 & 24;

        i21 = i20 | $i16;

     label03:
        r16 = r1;

        i22 = i21;

        $i14 = i21 & 1;

        if $i14 == 0 goto label12;

        i23 = i21 & -13;

        r16 = r1;

        i22 = i23;

        $z2 = r15.<com.android.server.am.UidRecord: boolean idle>;

        if $z2 != 0 goto label12;

        i22 = i23 | 2;

        r16 = r1;

        goto label12;

     label04:
        $r2 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingUidChanges>;

        $i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if $i1 != 0 goto label05;

        $r12 = r0.<com.android.server.am.ActivityManagerService: android.os.Handler mUiHandler>;

        $r13 = virtualinvoke $r12.<android.os.Handler: android.os.Message obtainMessage(int)>(53);

        virtualinvoke $r13.<android.os.Message: void sendToTarget()>();

     label05:
        $r3 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mAvailUidChanges>;

        i24 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if i24 <= 0 goto label06;

        $r10 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mAvailUidChanges>;

        $i11 = i24 - 1;

        $r11 = virtualinvoke $r10.<java.util.ArrayList: java.lang.Object remove(int)>($i11);

        r16 = (com.android.server.am.UidRecord$ChangeItem) $r11;

        goto label07;

     label06:
        $r4 = new com.android.server.am.UidRecord$ChangeItem;

        specialinvoke $r4.<com.android.server.am.UidRecord$ChangeItem: void <init>()>();

        r16 = $r4;

     label07:
        if r15 == null goto label08;

        r15.<com.android.server.am.UidRecord: com.android.server.am.UidRecord$ChangeItem pendingChange> = r16;

        i25 = i19;

        $i10 = i19 & 1;

        if $i10 == 0 goto label09;

        i25 = i19;

        $z1 = r15.<com.android.server.am.UidRecord: boolean idle>;

        if $z1 != 0 goto label09;

        i25 = i19 | 2;

        goto label09;

     label08:
        if i0 < 0 goto label26;

        i25 = i19;

     label09:
        r16.<com.android.server.am.UidRecord$ChangeItem: com.android.server.am.UidRecord uidRecord> = r15;

        if r15 == null goto label10;

        i26 = r15.<com.android.server.am.UidRecord: int uid>;

        goto label11;

     label10:
        i26 = i0;

     label11:
        r16.<com.android.server.am.UidRecord$ChangeItem: int uid> = i26;

        $r6 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingUidChanges>;

        virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>(r16);

        i22 = i25;

     label12:
        r16.<com.android.server.am.UidRecord$ChangeItem: int change> = i22;

        if r15 == null goto label13;

        i27 = r15.<com.android.server.am.UidRecord: int setProcState>;

        goto label14;

     label13:
        i27 = 20;

     label14:
        r16.<com.android.server.am.UidRecord$ChangeItem: int processState> = i27;

        if r15 == null goto label15;

        i28 = r15.<com.android.server.am.UidRecord: int setCapability>;

        goto label16;

     label15:
        i28 = 0;

     label16:
        r16.<com.android.server.am.UidRecord$ChangeItem: int capability> = i28;

        if r15 == null goto label17;

        z3 = r15.<com.android.server.am.UidRecord: boolean ephemeral>;

        goto label18;

     label17:
        z3 = specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean isEphemeralLocked(int)>(i0);

     label18:
        r16.<com.android.server.am.UidRecord$ChangeItem: boolean ephemeral> = z3;

        if r15 == null goto label19;

        l29 = r15.<com.android.server.am.UidRecord: long curProcStateSeq>;

        goto label20;

     label19:
        l29 = 0L;

     label20:
        r16.<com.android.server.am.UidRecord$ChangeItem: long procStateSeq> = l29;

        if r15 == null goto label21;

        r15.<com.android.server.am.UidRecord: int lastReportedChange> = i22;

        virtualinvoke r15.<com.android.server.am.UidRecord: void updateLastDispatchedProcStateSeq(int)>(i22);

     label21:
        r17 = r0.<com.android.server.am.ActivityManagerService: android.os.PowerManagerInternal mLocalPowerManager>;

        if r17 == null goto label25;

        $i2 = i22 & 4;

        if $i2 == 0 goto label22;

        $i9 = r16.<com.android.server.am.UidRecord$ChangeItem: int uid>;

        virtualinvoke r17.<android.os.PowerManagerInternal: void uidActive(int)>($i9);

     label22:
        $i3 = i22 & 2;

        if $i3 == 0 goto label23;

        $r9 = r0.<com.android.server.am.ActivityManagerService: android.os.PowerManagerInternal mLocalPowerManager>;

        $i8 = r16.<com.android.server.am.UidRecord$ChangeItem: int uid>;

        virtualinvoke $r9.<android.os.PowerManagerInternal: void uidIdle(int)>($i8);

     label23:
        $i4 = i22 & 1;

        if $i4 == 0 goto label24;

        $r8 = r0.<com.android.server.am.ActivityManagerService: android.os.PowerManagerInternal mLocalPowerManager>;

        $i7 = r16.<com.android.server.am.UidRecord$ChangeItem: int uid>;

        virtualinvoke $r8.<android.os.PowerManagerInternal: void uidGone(int)>($i7);

        goto label25;

     label24:
        $r7 = r0.<com.android.server.am.ActivityManagerService: android.os.PowerManagerInternal mLocalPowerManager>;

        $i6 = r16.<com.android.server.am.UidRecord$ChangeItem: int uid>;

        $i5 = r16.<com.android.server.am.UidRecord$ChangeItem: int processState>;

        virtualinvoke $r7.<android.os.PowerManagerInternal: void updateUidProcState(int,int)>($i6, $i5);

     label25:
        return;

     label26:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("No UidRecord or uid");

        throw $r5;
    }

    final void ensureBootCompleted()
    {
        com.android.server.am.ActivityManagerService r0;
        boolean z0, $z1, $z2, z3;
        com.android.server.wm.ActivityTaskManagerInternal $r2;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        entermonitor r0;

     label01:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        z0 = r0.<com.android.server.am.ActivityManagerService: boolean mBooting>;

     label02:
        z3 = 0;

     label03:
        r0.<com.android.server.am.ActivityManagerService: boolean mBooting> = 0;

     label04:
        $z1 = r0.<com.android.server.am.ActivityManagerService: boolean mBooted>;

        if $z1 != 0 goto label06;

     label05:
        z3 = 1;

     label06:
        r0.<com.android.server.am.ActivityManagerService: boolean mBooted> = 1;

        exitmonitor r0;

     label07:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        if z0 == 0 goto label08;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void finishBooting()>();

     label08:
        if z3 == 0 goto label09;

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerInternal mAtmInternal>;

        $z2 = r0.<com.android.server.am.ActivityManagerService: boolean mBooted>;

        virtualinvoke $r2.<com.android.server.wm.ActivityTaskManagerInternal: void enableScreenAfterBoot(boolean)>($z2);

     label09:
        return;

     label10:
        $r3 := @caughtexception;

     label11:
        exitmonitor r0;

     label12:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r3;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public final void enterSafeMode()
    {
        com.android.server.am.ActivityManagerService r0;
        boolean z0;
        android.content.pm.IPackageManager $r1;
        android.os.RemoteException $r2;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        entermonitor r0;

     label01:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        z0 = r0.<com.android.server.am.ActivityManagerService: boolean mSystemReady>;

     label02:
        if z0 != 0 goto label06;

     label03:
        $r1 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        interfaceinvoke $r1.<android.content.pm.IPackageManager: void enterSafeMode()>();

     label04:
        goto label06;

     label05:
        $r2 := @caughtexception;

     label06:
        r0.<com.android.server.am.ActivityManagerService: boolean mSafeMode> = 1;

        exitmonitor r0;

     label07:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label08:
        $r3 := @caughtexception;

     label09:
        exitmonitor r0;

     label10:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r3;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch android.os.RemoteException from label03 to label04 with label05;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public final boolean finishActivity(android.os.IBinder, int, android.content.Intent, int)
    {
        com.android.server.am.ActivityManagerService r0;
        android.os.IBinder r1;
        int i0, i1;
        android.content.Intent r2;
        com.android.server.wm.ActivityTaskManagerService $r3;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        r2 := @parameter2: android.content.Intent;

        i1 := @parameter3: int;

        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerService mActivityTaskManager>;

        $z0 = virtualinvoke $r3.<com.android.server.wm.ActivityTaskManagerService: boolean finishActivity(android.os.IBinder,int,android.content.Intent,int)>(r1, i0, r2, i1);

        return $z0;
    }

    final void finishBooting()
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, $i2, i4;
        java.util.ArrayList r1, $r11, $r25;
        com.android.server.am.ProcessRecord r2;
        com.android.server.utils.TimingsTraceAndSlog $r3;
        boolean $z0, $z2, $z3, $z4;
        android.os.ZygoteProcess $r4;
        android.content.IntentFilter $r5;
        com.android.server.am.ActivityManagerService$11 $r6;
        android.content.Context $r7, $r29;
        android.os.storage.IStorageManager $r9;
        com.android.server.SystemServiceManager $r10;
        com.android.server.am.ActivityManagerService$MainHandler $r12, $r14;
        com.android.server.am.ActivityManagerConstants $r13;
        long $l3;
        java.util.Optional $r15, $r20, $r23;
        java.lang.Boolean $r16, $r18;
        java.lang.Object $r17, $r21, $r24, $r26, $r30;
        java.lang.String $r19, $r22;
        java.lang.Exception $r27;
        com.android.server.am.ActivityManagerService$Injector $r28;
        android.os.PowerManager $r31;
        java.lang.Throwable $r32, $r33;
        com.android.server.am.ProcessList r37;
        com.android.server.am.HostingRecord r38;
        android.os.Message r39;
        com.android.server.am.UserController r40, $r42;
        com.android.server.am.ActivityManagerService$12 r41;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $r3 = new com.android.server.utils.TimingsTraceAndSlog;

        specialinvoke $r3.<com.android.server.utils.TimingsTraceAndSlog: void <init>(java.lang.String,long)>("ActivityManagerTiming", 64L);

        virtualinvoke $r3.<com.android.server.utils.TimingsTraceAndSlog: void traceBegin(java.lang.String)>("FinishBooting");

        entermonitor r0;

     label01:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $z0 = r0.<com.android.server.am.ActivityManagerService: boolean mBootAnimationComplete>;

        if $z0 != 0 goto label03;

        r0.<com.android.server.am.ActivityManagerService: boolean mCallFinishBooting> = 1;

        exitmonitor r0;

     label02:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label03:
        r0.<com.android.server.am.ActivityManagerService: boolean mCallFinishBooting> = 0;

        exitmonitor r0;

     label04:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        $r4 = <android.os.Process: android.os.ZygoteProcess ZYGOTE_PROCESS>;

        virtualinvoke $r4.<android.os.ZygoteProcess: void bootCompleted()>();

        staticinvoke <dalvik.system.VMRuntime: void bootCompleted()>();

        $r5 = new android.content.IntentFilter;

        specialinvoke $r5.<android.content.IntentFilter: void <init>()>();

        virtualinvoke $r5.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.QUERY_PACKAGE_RESTART");

        virtualinvoke $r5.<android.content.IntentFilter: void addDataScheme(java.lang.String)>("package");

        $r7 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r6 = new com.android.server.am.ActivityManagerService$11;

        specialinvoke $r6.<com.android.server.am.ActivityManagerService$11: void <init>(com.android.server.am.ActivityManagerService)>(r0);

        virtualinvoke $r7.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r6, $r5);

     label05:
        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", "About to commit checkpoint");

        $r9 = staticinvoke <com.android.internal.content.PackageHelper: android.os.storage.IStorageManager getStorageManager()>();

        interfaceinvoke $r9.<android.os.storage.IStorageManager: void commitChanges()>();

     label06:
        goto label08;

     label07:
        $r27 := @caughtexception;

        $r28 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$Injector mInjector>;

        $r29 = virtualinvoke $r28.<com.android.server.am.ActivityManagerService$Injector: android.content.Context getContext()>();

        $r30 = virtualinvoke $r29.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("power");

        $r31 = (android.os.PowerManager) $r30;

        virtualinvoke $r31.<android.os.PowerManager: void reboot(java.lang.String)>("Checkpoint commit failed");

     label08:
        $r10 = r0.<com.android.server.am.ActivityManagerService: com.android.server.SystemServiceManager mSystemServiceManager>;

        virtualinvoke $r10.<com.android.server.SystemServiceManager: void startBootPhase(com.android.server.utils.TimingsTraceAndSlog,int)>($r3, 1000);

        entermonitor r0;

     label09:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r11 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesOnHold>;

        i0 = virtualinvoke $r11.<java.util.ArrayList: int size()>();

     label10:
        if i0 <= 0 goto label16;

     label11:
        r1 = new java.util.ArrayList;

        $r25 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesOnHold>;

        specialinvoke r1.<java.util.ArrayList: void <init>(java.util.Collection)>($r25);

     label12:
        i4 = 0;

     label13:
        if i4 >= i0 goto label16;

     label14:
        r37 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r26 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        r2 = (com.android.server.am.ProcessRecord) $r26;

        r38 = new com.android.server.am.HostingRecord;

        specialinvoke r38.<com.android.server.am.HostingRecord: void <init>(java.lang.String)>("on-hold");

        virtualinvoke r37.<com.android.server.am.ProcessList: void startProcessLocked(com.android.server.am.ProcessRecord,com.android.server.am.HostingRecord,int)>(r2, r38, 2);

     label15:
        i4 = i4 + 1;

        goto label13;

     label16:
        $i2 = r0.<com.android.server.am.ActivityManagerService: int mFactoryTest>;

        if $i2 != 1 goto label18;

        exitmonitor r0;

     label17:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label18:
        $r12 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        r39 = virtualinvoke $r12.<com.android.server.am.ActivityManagerService$MainHandler: android.os.Message obtainMessage(int)>(27);

        $r14 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        $r13 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerConstants mConstants>;

        $l3 = $r13.<com.android.server.am.ActivityManagerConstants: long POWER_CHECK_INTERVAL>;

        virtualinvoke $r14.<com.android.server.am.ActivityManagerService$MainHandler: boolean sendMessageDelayed(android.os.Message,long)>(r39, $l3);

        $r15 = staticinvoke <android.sysprop.InitProperties: java.util.Optional userspace_reboot_in_progress()>();

        $r16 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $r17 = virtualinvoke $r15.<java.util.Optional: java.lang.Object orElse(java.lang.Object)>($r16);

        $r18 = (java.lang.Boolean) $r17;

        $z2 = virtualinvoke $r18.<java.lang.Boolean: boolean booleanValue()>();

        if $z2 == 0 goto label19;

        staticinvoke <com.android.server.UserspaceRebootLogger: void noteUserspaceRebootSuccess()>();

     label19:
        staticinvoke <android.os.SystemProperties: void set(java.lang.String,java.lang.String)>("sys.boot_completed", "1");

        $r19 = "trigger_restart_min_framework";

        $r20 = staticinvoke <android.sysprop.VoldProperties: java.util.Optional decrypt()>();

        $r21 = virtualinvoke $r20.<java.util.Optional: java.lang.Object orElse(java.lang.Object)>("");

        $z3 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>($r21);

        if $z3 == 0 goto label20;

        $r22 = "";

        $r23 = staticinvoke <android.sysprop.VoldProperties: java.util.Optional encrypt_progress()>();

        $r24 = virtualinvoke $r23.<java.util.Optional: java.lang.Object orElse(java.lang.Object)>("");

        $z4 = virtualinvoke $r22.<java.lang.String: boolean equals(java.lang.Object)>($r24);

        if $z4 == 0 goto label21;

     label20:
        staticinvoke <android.os.SystemProperties: void set(java.lang.String,java.lang.String)>("dev.bootcomplete", "1");

     label21:
        r40 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.UserController mUserController>;

        r41 = new com.android.server.am.ActivityManagerService$12;

        specialinvoke r41.<com.android.server.am.ActivityManagerService$12: void <init>(com.android.server.am.ActivityManagerService)>(r0);

        virtualinvoke r40.<com.android.server.am.UserController: void sendBootCompleted(android.content.IIntentReceiver)>(r41);

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void maybeLogUserspaceRebootEvent()>();

        $r42 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.UserController mUserController>;

        virtualinvoke $r42.<com.android.server.am.UserController: void scheduleStartProfiles()>();

        exitmonitor r0;

     label22:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void showConsoleNotificationIfActive()>();

        virtualinvoke $r3.<com.android.server.utils.TimingsTraceAndSlog: void traceEnd()>();

        return;

     label23:
        $r33 := @caughtexception;

     label24:
        exitmonitor r0;

     label25:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r33;

     label26:
        $r32 := @caughtexception;

     label27:
        exitmonitor r0;

     label28:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r32;

        catch java.lang.Throwable from label01 to label02 with label26;
        catch java.lang.Throwable from label03 to label04 with label26;
        catch java.lang.Exception from label05 to label06 with label07;
        catch java.lang.Throwable from label09 to label10 with label23;
        catch java.lang.Throwable from label11 to label12 with label23;
        catch java.lang.Throwable from label14 to label15 with label23;
        catch java.lang.Throwable from label16 to label17 with label23;
        catch java.lang.Throwable from label18 to label19 with label23;
        catch java.lang.Throwable from label19 to label20 with label23;
        catch java.lang.Throwable from label20 to label21 with label23;
        catch java.lang.Throwable from label21 to label22 with label23;
        catch java.lang.Throwable from label24 to label25 with label23;
        catch java.lang.Throwable from label27 to label28 with label26;
    }

    public final void finishHeavyWeightApp()
    {
        com.android.server.am.ActivityManagerService r0;
        int $i0, $i1, $i2;
        java.lang.StringBuilder $r1;
        java.lang.SecurityException $r8;
        com.android.server.wm.ActivityTaskManagerInternal $r9;
        java.lang.String r11;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $i0 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.FORCE_STOP_PACKAGES");

        if $i0 != 0 goto label1;

        $r9 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerInternal mAtmInternal>;

        virtualinvoke $r9.<com.android.server.wm.ActivityTaskManagerInternal: void finishHeavyWeightApp()>();

        return;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: finishHeavyWeightApp() from pid=");

        $i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.FORCE_STOP_PACKAGES");

        r11 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r11);

        $r8 = new java.lang.SecurityException;

        specialinvoke $r8.<java.lang.SecurityException: void <init>(java.lang.String)>(r11);

        throw $r8;
    }

    public void finishInstrumentation(android.app.IApplicationThread, int, android.os.Bundle)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0;
        com.android.server.am.ProcessRecord r1;
        long l1;
        java.lang.String $r4;
        boolean $z0;
        java.lang.IllegalArgumentException $r5;
        java.lang.Throwable $r6;
        android.app.IApplicationThread r7;
        android.os.Bundle r8;
        java.lang.StringBuilder r9;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r7 := @parameter0: android.app.IApplicationThread;

        i0 := @parameter1: int;

        r8 := @parameter2: android.os.Bundle;

        staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        if r8 == null goto label02;

        $z0 = virtualinvoke r8.<android.os.Bundle: boolean hasFileDescriptors()>();

        if $z0 != 0 goto label01;

        goto label02;

     label01:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("File descriptors passed in Intent");

        throw $r5;

     label02:
        entermonitor r0;

     label03:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        r1 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord getRecordForAppLocked(android.app.IApplicationThread)>(r7);

     label04:
        if r1 != null goto label07;

     label05:
        r9 = new java.lang.StringBuilder;

        specialinvoke r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("finishInstrumentation: no app for ");

        virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);

        $r4 = virtualinvoke r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r4);

        exitmonitor r0;

     label06:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label07:
        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void finishInstrumentationLocked(com.android.server.am.ProcessRecord,int,android.os.Bundle)>(r1, i0, r8);

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        exitmonitor r0;

     label08:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label09:
        $r6 := @caughtexception;

     label10:
        exitmonitor r0;

     label11:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r6;

        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    void finishInstrumentationLocked(com.android.server.am.ProcessRecord, int, android.os.Bundle)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1;
        int i0, $i1, $i3;
        com.android.server.am.ActiveInstrumentation r2;
        android.os.Bundle r3, $r13, r18, r20;
        boolean $z0;
        android.app.IInstrumentationWatcher $r4, $r22;
        android.content.pm.ApplicationInfo $r5, $r25;
        java.lang.String $r6, $r17, $r26;
        com.android.server.appop.AppOpsService $r7, $r8;
        com.android.server.pm.permission.PermissionManagerServiceInternal $r9;
        android.app.IUiAutomationConnection $r10, $r24;
        com.android.server.am.ActivityManagerService$MainHandler $r11;
        android.os.Message $r12;
        java.lang.StringBuilder $r14;
        com.android.server.am.InstrumentationReporter $r21;
        android.content.ComponentName $r23;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        i0 := @parameter1: int;

        r18 := @parameter2: android.os.Bundle;

        r2 = virtualinvoke r1.<com.android.server.am.ProcessRecord: com.android.server.am.ActiveInstrumentation getActiveInstrumentation()>();

        if r2 != null goto label1;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("finishInstrumentation called on non-instrumented: ");

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r17);

        return;

     label1:
        $z0 = r2.<com.android.server.am.ActiveInstrumentation: boolean mFinished>;

        if $z0 != 0 goto label6;

        $r4 = r2.<com.android.server.am.ActiveInstrumentation: android.app.IInstrumentationWatcher mWatcher>;

        if $r4 == null goto label4;

        r3 = r2.<com.android.server.am.ActiveInstrumentation: android.os.Bundle mCurResults>;

        if r3 == null goto label2;

        r20 = r3;

        $r13 = r2.<com.android.server.am.ActiveInstrumentation: android.os.Bundle mCurResults>;

        if $r13 == null goto label3;

        r20 = r3;

        if r18 == null goto label3;

        virtualinvoke r3.<android.os.Bundle: void putAll(android.os.Bundle)>(r18);

        r20 = r3;

        goto label3;

     label2:
        r20 = r18;

     label3:
        $r21 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.InstrumentationReporter mInstrumentationReporter>;

        $r22 = r2.<com.android.server.am.ActiveInstrumentation: android.app.IInstrumentationWatcher mWatcher>;

        $r23 = r2.<com.android.server.am.ActiveInstrumentation: android.content.ComponentName mClass>;

        virtualinvoke $r21.<com.android.server.am.InstrumentationReporter: void reportFinished(android.app.IInstrumentationWatcher,android.content.ComponentName,int,android.os.Bundle)>($r22, $r23, i0, r20);

     label4:
        $r24 = r2.<com.android.server.am.ActiveInstrumentation: android.app.IUiAutomationConnection mUiAutomationConnection>;

        if $r24 == null goto label5;

        $r7 = r0.<com.android.server.am.ActivityManagerService: com.android.server.appop.AppOpsService mAppOpsService>;

        $i1 = r1.<com.android.server.am.ProcessRecord: int uid>;

        $r5 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r6 = $r5.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        virtualinvoke $r7.<com.android.server.appop.AppOpsService: void setMode(int,int,java.lang.String,int)>(99, $i1, $r6, 2);

        $r8 = r0.<com.android.server.am.ActivityManagerService: com.android.server.appop.AppOpsService mAppOpsService>;

        virtualinvoke $r8.<com.android.server.appop.AppOpsService: void setAppOpsServiceDelegate(android.app.AppOpsManagerInternal$CheckOpsDelegate)>(null);

        $r9 = specialinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.pm.permission.PermissionManagerServiceInternal getPermissionManagerInternalLocked()>();

        virtualinvoke $r9.<com.android.server.pm.permission.PermissionManagerServiceInternal: void setCheckPermissionDelegate(android.permission.PermissionManagerInternal$CheckPermissionDelegate)>(null);

        $r11 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        $r10 = r2.<com.android.server.am.ActiveInstrumentation: android.app.IUiAutomationConnection mUiAutomationConnection>;

        $r12 = virtualinvoke $r11.<com.android.server.am.ActivityManagerService$MainHandler: android.os.Message obtainMessage(int,java.lang.Object)>(56, $r10);

        virtualinvoke $r12.<android.os.Message: void sendToTarget()>();

     label5:
        r2.<com.android.server.am.ActiveInstrumentation: boolean mFinished> = 1;

     label6:
        virtualinvoke r2.<com.android.server.am.ActiveInstrumentation: void removeProcess(com.android.server.am.ProcessRecord)>(r1);

        virtualinvoke r1.<com.android.server.am.ProcessRecord: void setActiveInstrumentation(com.android.server.am.ActiveInstrumentation)>(null);

        $r25 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r26 = $r25.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $i3 = r1.<com.android.server.am.ProcessRecord: int userId>;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean forceStopPackageLocked(java.lang.String,int,boolean,boolean,boolean,boolean,boolean,int,java.lang.String)>($r26, -1, 0, 0, 1, 1, 0, $i3, "finished inst");

        return;
    }

    public void finishReceiver(android.os.IBinder, int, java.lang.String, android.os.Bundle, boolean, int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, $i3;
        java.lang.String r1;
        android.os.Bundle r2;
        boolean z0, $z1, $z2, z3;
        long l2;
        com.android.server.am.BroadcastQueue $r3, $r4, r11;
        java.lang.IllegalArgumentException $r5;
        java.lang.Throwable $r6, $r7, $r8, $r9, r13, r14;
        android.os.IBinder r10;
        com.android.server.am.BroadcastRecord r12;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r10 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: android.os.Bundle;

        z0 := @parameter4: boolean;

        i1 := @parameter5: int;

        if r2 == null goto label02;

        $z2 = virtualinvoke r2.<android.os.Bundle: boolean hasFileDescriptors()>();

        if $z2 != 0 goto label01;

        goto label02;

     label01:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("File descriptors passed in Bundle");

        throw $r5;

     label02:
        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        z3 = 0;

     label03:
        entermonitor r0;

     label04:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $z1 = specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean isOnOffloadQueue(int)>(i1);

        if $z1 == 0 goto label06;

        r11 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastQueue mOffloadBroadcastQueue>;

     label05:
        goto label10;

     label06:
        $i3 = 268435456 & i1;

        if $i3 == 0 goto label09;

     label07:
        r11 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastQueue mFgBroadcastQueue>;

     label08:
        goto label10;

     label09:
        r11 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastQueue mBgBroadcastQueue>;

     label10:
        r12 = virtualinvoke r11.<com.android.server.am.BroadcastQueue: com.android.server.am.BroadcastRecord getMatchingOrderedReceiver(android.os.IBinder)>(r10);

     label11:
        if r12 == null goto label13;

     label12:
        $r4 = r12.<com.android.server.am.BroadcastRecord: com.android.server.am.BroadcastQueue queue>;

        z3 = virtualinvoke $r4.<com.android.server.am.BroadcastQueue: boolean finishReceiverLocked(com.android.server.am.BroadcastRecord,int,java.lang.String,android.os.Bundle,boolean,boolean)>(r12, i0, r1, r2, z0, 1);

     label13:
        if z3 == 0 goto label15;

     label14:
        $r3 = r12.<com.android.server.am.BroadcastRecord: com.android.server.am.BroadcastQueue queue>;

        virtualinvoke $r3.<com.android.server.am.BroadcastQueue: void processNextBroadcastLocked(boolean,boolean)>(0, 1);

     label15:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void trimApplicationsLocked(java.lang.String)>("updateOomAdj_finishReceiver");

        exitmonitor r0;

     label16:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

     label17:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        return;

     label18:
        $r9 := @caughtexception;

        r13 = $r9;

     label19:
        exitmonitor r0;

     label20:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw r13;

     label21:
        $r8 := @caughtexception;

        r14 = $r8;

        goto label24;

     label22:
        $r6 := @caughtexception;

        r13 = $r6;

        goto label19;

     label23:
        $r7 := @caughtexception;

        r14 = $r7;

     label24:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw r14;

        catch java.lang.Throwable from label03 to label04 with label23;
        catch java.lang.Throwable from label04 to label05 with label18;
        catch java.lang.Throwable from label07 to label08 with label18;
        catch java.lang.Throwable from label09 to label10 with label18;
        catch java.lang.Throwable from label10 to label11 with label22;
        catch java.lang.Throwable from label12 to label13 with label22;
        catch java.lang.Throwable from label14 to label15 with label22;
        catch java.lang.Throwable from label15 to label16 with label22;
        catch java.lang.Throwable from label16 to label17 with label21;
        catch java.lang.Throwable from label19 to label20 with label22;
        catch java.lang.Throwable from label20 to label21 with label21;
    }

    final void forceStopAppZygoteLocked(java.lang.String, int, int)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1;
        int i0, i1, $i2, i3;
        android.content.pm.IPackageManager $r3;
        android.os.RemoteException $r4;
        com.android.server.am.ProcessList $r5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if r1 != null goto label1;

        return;

     label1:
        i3 = i0;

        if i0 >= 0 goto label5;

     label2:
        $r3 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        $i2 = interfaceinvoke $r3.<android.content.pm.IPackageManager: int getPackageUid(java.lang.String,int,int)>(r1, 268435456, 0);

        i3 = staticinvoke <android.os.UserHandle: int getAppId(int)>($i2);

     label3:
        goto label5;

     label4:
        $r4 := @caughtexception;

        i3 = i0;

     label5:
        $r5 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        virtualinvoke $r5.<com.android.server.am.ProcessList: void killAppZygotesLocked(java.lang.String,int,int,boolean)>(r1, i3, i1, 1);

        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    public void forceStopPackage(java.lang.String, int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i2, i3, i4, $i5, $i6, $i7, $i9, i13, i14, i15, i16;
        long l1;
        android.content.pm.IPackageManager r1;
        java.lang.StringBuilder $r3, r38, r40, r41, r43;
        java.lang.SecurityException $r10;
        com.android.server.am.UserController $r11, $r13, $r25;
        android.content.pm.PackageManagerInternal $r12;
        boolean $z0, $z1;
        java.lang.String $r16, $r19, $r24, $r35, r36, r47;
        java.lang.Throwable $r26, $r28, $r30;
        android.os.RemoteException $r27, $r29;
        int[] r37;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r36 := @parameter0: java.lang.String;

        i13 := @parameter1: int;

        $i5 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.FORCE_STOP_PACKAGES");

        if $i5 != 0 goto label35;

        i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r11 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.UserController mUserController>;

        $i9 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i14 = virtualinvoke $r11.<com.android.server.am.UserController: int handleIncomingUser(int,int,int,boolean,int,java.lang.String,java.lang.String)>(i0, $i9, i13, 1, 2, "forceStopPackage", null);

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label01:
        r1 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        entermonitor r0;

     label02:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

     label03:
        if i14 != -1 goto label06;

     label04:
        $r25 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.UserController mUserController>;

        r37 = virtualinvoke $r25.<com.android.server.am.UserController: int[] getUsers()>();

     label05:
        goto label08;

     label06:
        r37 = newarray (int)[1];

     label07:
        r37[0] = i14;

     label08:
        i2 = lengthof r37;

     label09:
        i15 = 0;

     label10:
        if i15 >= i2 goto label28;

        i3 = r37[i15];

     label11:
        $r12 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: android.content.pm.PackageManagerInternal getPackageManagerInternalLocked()>();

        $z0 = virtualinvoke $r12.<android.content.pm.PackageManagerInternal: boolean isPackageStateProtected(java.lang.String,int)>(r36, i3);

        if $z0 == 0 goto label13;

        r38 = new java.lang.StringBuilder;

        specialinvoke r38.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring request to force stop protected package ");

        virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r36);

        virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" u");

        virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r24 = virtualinvoke r38.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r24);

        exitmonitor r0;

     label12:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return;

     label13:
        i16 = -1;

     label14:
        i4 = interfaceinvoke r1.<android.content.pm.IPackageManager: int getPackageUid(java.lang.String,int,int)>(r36, 268435456, i3);

     label15:
        i16 = i4;

        goto label17;

     label16:
        $r29 := @caughtexception;

     label17:
        if i16 != -1 goto label20;

     label18:
        r40 = new java.lang.StringBuilder;

        specialinvoke r40.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid packageName: ");

        virtualinvoke r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r36);

        $r19 = virtualinvoke r40.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r19);

     label19:
        goto label27;

     label20:
        interfaceinvoke r1.<android.content.pm.IPackageManager: void setPackageStoppedState(java.lang.String,boolean,int)>(r36, 1, i3);

     label21:
        goto label26;

     label22:
        $r30 := @caughtexception;

     label23:
        r41 = new java.lang.StringBuilder;

        specialinvoke r41.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed trying to unstop package ");

        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r36);

        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r30);

        $r35 = virtualinvoke r41.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r35);

     label24:
        goto label26;

     label25:
        $r27 := @caughtexception;

        goto label21;

     label26:
        $r13 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.UserController mUserController>;

        $z1 = virtualinvoke $r13.<com.android.server.am.UserController: boolean isUserRunning(int,int)>(i3, 0);

        if $z1 == 0 goto label27;

        r43 = new java.lang.StringBuilder;

        specialinvoke r43.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("from pid ");

        virtualinvoke r43.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r16 = virtualinvoke r43.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void forceStopPackageLocked(java.lang.String,int,java.lang.String)>(r36, i16, $r16);

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void finishForceStopPackageLocked(java.lang.String,int)>(r36, i16);

     label27:
        i15 = i15 + 1;

        goto label10;

     label28:
        exitmonitor r0;

     label29:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

     label30:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return;

     label31:
        $r26 := @caughtexception;

     label32:
        exitmonitor r0;

     label33:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r26;

     label34:
        $r28 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r28;

     label35:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: forceStopPackage() from pid=");

        $i6 = staticinvoke <android.os.Binder: int getCallingPid()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i7 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.FORCE_STOP_PACKAGES");

        r47 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r47);

        $r10 = new java.lang.SecurityException;

        specialinvoke $r10.<java.lang.SecurityException: void <init>(java.lang.String)>(r47);

        throw $r10;

        catch java.lang.Throwable from label01 to label02 with label34;
        catch java.lang.Throwable from label02 to label03 with label31;
        catch java.lang.Throwable from label04 to label05 with label31;
        catch java.lang.Throwable from label06 to label07 with label31;
        catch java.lang.Throwable from label08 to label09 with label31;
        catch java.lang.Throwable from label11 to label12 with label31;
        catch android.os.RemoteException from label14 to label15 with label16;
        catch java.lang.Throwable from label14 to label15 with label31;
        catch java.lang.Throwable from label18 to label19 with label31;
        catch android.os.RemoteException from label20 to label21 with label25;
        catch java.lang.IllegalArgumentException from label20 to label21 with label22;
        catch java.lang.Throwable from label20 to label21 with label31;
        catch java.lang.Throwable from label23 to label24 with label31;
        catch java.lang.Throwable from label26 to label27 with label31;
        catch java.lang.Throwable from label28 to label29 with label31;
        catch java.lang.Throwable from label29 to label30 with label34;
        catch java.lang.Throwable from label32 to label33 with label31;
        catch java.lang.Throwable from label33 to label34 with label34;
    }

    final boolean forceStopPackageLocked(java.lang.String, int, boolean, boolean, boolean, boolean, boolean, int, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1, $r7, $r11, $r32, $r42, r45;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6, z8, z9, z10, z11, z12, z13, z14, z15, $z16;
        int i0, $i1, $i2, $i5, i7, i8, i10, i11;
        com.android.server.am.ProcessList r2;
        java.lang.StringBuilder r3, $r4, $r27, $r33;
        com.android.server.wm.ActivityTaskManagerInternal $r12, $r18;
        com.android.server.am.ActiveServices $r13;
        java.util.ArrayList $r14;
        com.android.server.am.ProviderMap $r15;
        com.android.server.uri.UriGrantsManagerInternal $r16;
        com.android.server.am.PendingIntentController $r17;
        com.android.server.am.BroadcastQueue[] $r19, $r20;
        com.android.server.am.BroadcastQueue $r21;
        java.lang.Object $r22;
        com.android.server.am.ContentProviderRecord $r23;
        android.util.SparseArray $r24;
        android.content.pm.IPackageManager $r43;
        android.os.RemoteException $r44;
        com.android.server.am.AppErrors r49;
        byte b9;
        com.android.server.AttributeCache r52;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        i7 := @parameter1: int;

        z8 := @parameter2: boolean;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        z9 := @parameter5: boolean;

        z2 := @parameter6: boolean;

        i0 := @parameter7: int;

        r45 := @parameter8: java.lang.String;

        if i0 != -1 goto label01;

        if r1 != null goto label01;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", "Can\'t force stop all processes of all users, that is insane!");

     label01:
        if i7 >= 0 goto label05;

        if r1 == null goto label05;

     label02:
        $r43 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        $i5 = interfaceinvoke $r43.<android.content.pm.IPackageManager: int getPackageUid(java.lang.String,int,int)>(r1, 268435456, 0);

        i8 = staticinvoke <android.os.UserHandle: int getAppId(int)>($i5);

     label03:
        i7 = i8;

        goto label05;

     label04:
        $r44 := @caughtexception;

     label05:
        if z1 == 0 goto label10;

        if r1 == null goto label06;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Force stopping ");

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" appid=");

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i7);

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" user=");

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r45);

        $r42 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", $r42);

        goto label07;

     label06:
        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Force stopping u");

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r45);

        $r32 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", $r32);

     label07:
        r49 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.AppErrors mAppErrors>;

        if r1 != null goto label08;

        z10 = 1;

        goto label09;

     label08:
        z10 = 0;

     label09:
        virtualinvoke r49.<com.android.server.am.AppErrors: void resetProcessCrashTimeLocked(boolean,int,int)>(z10, i7, i0);

     label10:
        r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        if r1 != null goto label11;

        b9 = 11;

        goto label12;

     label11:
        b9 = 10;

     label12:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        r3 = new java.lang.StringBuilder;

        if r1 != null goto label13;

        specialinvoke r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("stop user ");

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        goto label14;

     label13:
        specialinvoke r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("stop ");

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

     label14:
        $r7 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" due to ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r45);

        $r11 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        z11 = virtualinvoke r2.<com.android.server.am.ProcessList: boolean killPackageProcessesLocked(java.lang.String,int,int,int,boolean,boolean,boolean,boolean,boolean,int,int,java.lang.String)>(r1, i7, i0, -10000, z8, 0, z1, z9, 1, b9, 0, $r11);

        $r12 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerInternal mAtmInternal>;

        z12 = virtualinvoke $r12.<com.android.server.wm.ActivityTaskManagerInternal: boolean onForceStopPackage(java.lang.String,boolean,boolean,int)>(r1, z1, z9, i0);

        $r13 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveServices mServices>;

        $z3 = virtualinvoke $r13.<com.android.server.am.ActiveServices: boolean bringDownDisabledPackageServicesLocked(java.lang.String,java.util.Set,int,boolean,boolean)>(r1, null, i0, z9, z1);

        if $z3 == 0 goto label16;

        if z1 != 0 goto label15;

        return 1;

     label15:
        z13 = 1;

        goto label17;

     label16:
        z13 = z11 | z12;

     label17:
        if r1 != null goto label18;

        $r24 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mStickyBroadcasts>;

        virtualinvoke $r24.<android.util.SparseArray: void remove(int)>(i0);

     label18:
        $r14 = new java.util.ArrayList;

        specialinvoke $r14.<java.util.ArrayList: void <init>()>();

        $r15 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProviderMap mProviderMap>;

        $z4 = virtualinvoke $r15.<com.android.server.am.ProviderMap: boolean collectPackageProvidersLocked(java.lang.String,java.util.Set,boolean,boolean,int,java.util.ArrayList)>(r1, null, z1, z9, i0, $r14);

        if $z4 == 0 goto label20;

        if z1 != 0 goto label19;

        return 1;

     label19:
        z13 = 1;

     label20:
        $i1 = virtualinvoke $r14.<java.util.ArrayList: int size()>();

        i10 = $i1 - 1;

     label21:
        if i10 < 0 goto label22;

        $r22 = virtualinvoke $r14.<java.util.ArrayList: java.lang.Object get(int)>(i10);

        $r23 = (com.android.server.am.ContentProviderRecord) $r22;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean removeDyingProviderLocked(com.android.server.am.ProcessRecord,com.android.server.am.ContentProviderRecord,boolean)>(null, $r23, 1);

        i10 = i10 + -1;

        goto label21;

     label22:
        $r16 = r0.<com.android.server.am.ActivityManagerService: com.android.server.uri.UriGrantsManagerInternal mUgmInternal>;

        interfaceinvoke $r16.<com.android.server.uri.UriGrantsManagerInternal: void removeUriPermissionsForPackage(java.lang.String,int,boolean,boolean)>(r1, i0, 0, 0);

        z14 = z13;

        if z1 == 0 goto label24;

        $r19 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastQueue[] mBroadcastQueues>;

        $i2 = lengthof $r19;

        i11 = $i2 - 1;

     label23:
        z14 = z13;

        if i11 < 0 goto label24;

        $r20 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastQueue[] mBroadcastQueues>;

        $r21 = $r20[i11];

        $z6 = virtualinvoke $r21.<com.android.server.am.BroadcastQueue: boolean cleanupDisabledPackageReceiversLocked(java.lang.String,java.util.Set,int,boolean)>(r1, null, i0, z1);

        z13 = z13 | $z6;

        i11 = i11 + -1;

        goto label23;

     label24:
        if r1 == null goto label25;

        z15 = z14;

        if z2 == 0 goto label26;

     label25:
        $r17 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.PendingIntentController mPendingIntentController>;

        $z5 = virtualinvoke $r17.<com.android.server.am.PendingIntentController: boolean removePendingIntentsForPackage(java.lang.String,int,int,boolean)>(r1, i0, i7, z1);

        z15 = z14 | $z5;

     label26:
        if z1 == 0 goto label28;

        if z0 == 0 goto label27;

        if r1 == null goto label27;

        r52 = staticinvoke <com.android.server.AttributeCache: com.android.server.AttributeCache instance()>();

        if r52 == null goto label27;

        virtualinvoke r52.<com.android.server.AttributeCache: void removePackage(java.lang.String)>(r1);

     label27:
        $z16 = r0.<com.android.server.am.ActivityManagerService: boolean mBooted>;

        if $z16 == 0 goto label28;

        $r18 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerInternal mAtmInternal>;

        virtualinvoke $r18.<com.android.server.wm.ActivityTaskManagerInternal: void resumeTopActivities(boolean)>(1);

     label28:
        return z15;

        catch android.os.RemoteException from label02 to label03 with label04;
    }

    android.content.pm.ActivityInfo getActivityInfoForUser(android.content.pm.ActivityInfo, int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, $i1;
        android.content.pm.ActivityInfo $r1, r5;
        android.content.pm.ApplicationInfo $r2, $r3, $r4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r5 := @parameter0: android.content.pm.ActivityInfo;

        i0 := @parameter1: int;

        if r5 == null goto label2;

        if i0 >= 1 goto label1;

        $r4 = r5.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i1 = $r4.<android.content.pm.ApplicationInfo: int uid>;

        if $i1 >= 100000 goto label1;

        goto label2;

     label1:
        $r1 = new android.content.pm.ActivityInfo;

        specialinvoke $r1.<android.content.pm.ActivityInfo: void <init>(android.content.pm.ActivityInfo)>(r5);

        $r2 = $r1.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r3 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: android.content.pm.ApplicationInfo getAppInfoForUser(android.content.pm.ApplicationInfo,int)>($r2, i0);

        $r1.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo> = $r3;

        return $r1;

     label2:
        return r5;
    }

    public java.util.List getAllStackInfos()
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.wm.ActivityTaskManagerService $r1;
        java.util.List $r2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerService mActivityTaskManager>;

        $r2 = virtualinvoke $r1.<com.android.server.wm.ActivityTaskManagerService: java.util.List getAllStackInfos()>();

        return $r2;
    }

    android.content.pm.ApplicationInfo getAppInfoForUser(android.content.pm.ApplicationInfo, int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0;
        android.content.pm.ApplicationInfo $r1, r2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r2 := @parameter0: android.content.pm.ApplicationInfo;

        i0 := @parameter1: int;

        if r2 != null goto label1;

        return null;

     label1:
        $r1 = new android.content.pm.ApplicationInfo;

        specialinvoke $r1.<android.content.pm.ApplicationInfo: void <init>(android.content.pm.ApplicationInfo)>(r2);

        virtualinvoke $r1.<android.content.pm.ApplicationInfo: void initForUser(int)>(i0);

        return $r1;
    }

    android.app.AppOpsManager getAppOpsManager()
    {
        com.android.server.am.ActivityManagerService r0;
        android.app.AppOpsManager $r1, $r2, $r5;
        android.content.Context $r3;
        java.lang.Object $r4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 = r0.<com.android.server.am.ActivityManagerService: android.app.AppOpsManager mAppOpsManager>;

        if $r1 != null goto label1;

        $r3 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/app/AppOpsManager;");

        $r5 = (android.app.AppOpsManager) $r4;

        r0.<com.android.server.am.ActivityManagerService: android.app.AppOpsManager mAppOpsManager> = $r5;

     label1:
        $r2 = r0.<com.android.server.am.ActivityManagerService: android.app.AppOpsManager mAppOpsManager>;

        return $r2;
    }

    public com.android.internal.app.IAppOpsService getAppOpsService()
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.appop.AppOpsService $r1;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.appop.AppOpsService mAppOpsService>;

        return $r1;
    }

    int getAppStartModeLocked(int, java.lang.String, int, int, boolean, boolean, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, $i2, $i3, i4, i5;
        boolean z0, z1, $z2, $z3, $z4, z5, z6;
        android.app.ActivityManagerInternal $r1;
        com.android.server.am.ProcessList $r2;
        com.android.server.am.ActivityManagerService$PidMap $r3, r8;
        android.content.pm.PackageManagerInternal $r4;
        java.lang.Throwable $r5;
        java.lang.String r6;
        com.android.server.am.UidRecord r7;
        com.android.server.am.ProcessRecord r9;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i4 := @parameter0: int;

        r6 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        z0 := @parameter4: boolean;

        z1 := @parameter5: boolean;

        z5 := @parameter6: boolean;

        $r1 = r0.<com.android.server.am.ActivityManagerService: android.app.ActivityManagerInternal mInternal>;

        $z2 = virtualinvoke $r1.<android.app.ActivityManagerInternal: boolean isPendingTopUid(int)>(i4);

        if $z2 == 0 goto label01;

        return 0;

     label01:
        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        r7 = virtualinvoke $r2.<com.android.server.am.ProcessList: com.android.server.am.UidRecord getUidRecordLocked(int)>(i4);

        if r7 == null goto label03;

        if z0 != 0 goto label03;

        if z5 != 0 goto label03;

        $z4 = r7.<com.android.server.am.UidRecord: boolean idle>;

        if $z4 == 0 goto label02;

        goto label03;

     label02:
        return 0;

     label03:
        if r7 != null goto label04;

        $r4 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: android.content.pm.PackageManagerInternal getPackageManagerInternalLocked()>();

        $i3 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i4);

        z6 = virtualinvoke $r4.<android.content.pm.PackageManagerInternal: boolean isPackageEphemeral(int,java.lang.String)>($i3, r6);

        goto label05;

     label04:
        z6 = r7.<com.android.server.am.UidRecord: boolean ephemeral>;

     label05:
        if z6 == 0 goto label06;

        return 3;

     label06:
        if z1 == 0 goto label07;

        return 0;

     label07:
        if z0 == 0 goto label08;

        i5 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int appRestrictedInBackgroundLocked(int,java.lang.String,int)>(i4, r6, i0);

        goto label09;

     label08:
        i5 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int appServicesRestrictedInBackgroundLocked(int,java.lang.String,int)>(i4, r6, i0);

     label09:
        if i5 != 1 goto label15;

        if i1 < 0 goto label15;

        r8 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        entermonitor r8;

     label10:
        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        r9 = virtualinvoke $r3.<com.android.server.am.ActivityManagerService$PidMap: com.android.server.am.ProcessRecord get(int)>(i1);

        exitmonitor r8;

     label11:
        if r9 == null goto label15;

        $i2 = virtualinvoke r9.<com.android.server.am.ProcessRecord: int getCurProcState()>();

        $z3 = staticinvoke <android.app.ActivityManager: boolean isProcStateBackground(int)>($i2);

        if $z3 != 0 goto label15;

        return 0;

     label12:
        $r5 := @caughtexception;

     label13:
        exitmonitor r8;

     label14:
        throw $r5;

     label15:
        return i5;

        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public java.util.List getBugreportWhitelistedPackages()
    {
        com.android.server.am.ActivityManagerService r0;
        java.util.ArrayList $r1;
        com.android.server.SystemConfig $r2;
        android.util.ArraySet $r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.MANAGE_DEBUGGING", "getBugreportWhitelistedPackages");

        $r1 = new java.util.ArrayList;

        $r2 = staticinvoke <com.android.server.SystemConfig: com.android.server.SystemConfig getInstance()>();

        $r3 = virtualinvoke $r2.<com.android.server.SystemConfig: android.util.ArraySet getBugreportWhitelistedPackages()>();

        specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>($r3);

        return $r1;
    }

    public android.content.res.Configuration getConfiguration()
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.wm.ActivityTaskManagerService $r1;
        android.content.res.Configuration $r2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerService mActivityTaskManager>;

        $r2 = virtualinvoke $r1.<com.android.server.wm.ActivityTaskManagerService: android.content.res.Configuration getConfiguration()>();

        return $r2;
    }

    public final android.app.ContentProviderHolder getContentProvider(android.app.IApplicationThread, java.lang.String, java.lang.String, int, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1, r2, $r15, r19;
        int i0, i1, $i3;
        boolean z0;
        java.lang.StringBuilder $r3, $r9;
        java.lang.SecurityException $r6, $r14;
        android.app.ContentProviderHolder $r7;
        com.android.server.appop.AppOpsService $r8;
        android.app.IApplicationThread r16;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r16 := @parameter0: android.app.IApplicationThread;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        z0 := @parameter4: boolean;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("getContentProvider");

        if r16 == null goto label3;

        i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if r1 == null goto label2;

        $r8 = r0.<com.android.server.am.ActivityManagerService: com.android.server.appop.AppOpsService mAppOpsService>;

        $i3 = virtualinvoke $r8.<com.android.server.appop.AppOpsService: int checkPackage(int,java.lang.String)>(i1, r1);

        if $i3 != 0 goto label1;

        goto label2;

     label1:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Given calling package ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not match caller\'s uid ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r14 = new java.lang.SecurityException;

        $r15 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.SecurityException: void <init>(java.lang.String)>($r15);

        throw $r14;

     label2:
        $r7 = specialinvoke r0.<com.android.server.am.ActivityManagerService: android.app.ContentProviderHolder getContentProviderImpl(android.app.IApplicationThread,java.lang.String,android.os.IBinder,int,java.lang.String,java.lang.String,boolean,int)>(r16, r2, null, i1, r1, null, z0, i0);

        return $r7;

     label3:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("null IApplicationThread when getting content provider ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        r19 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r19);

        $r6 = new java.lang.SecurityException;

        specialinvoke $r6.<java.lang.SecurityException: void <init>(java.lang.String)>(r19);

        throw $r6;
    }

    public android.app.ContentProviderHolder getContentProviderExternal(java.lang.String, int, android.os.IBinder, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1, r5;
        android.os.IBinder r2;
        int i0, $i1, $i2, i3, i4;
        com.android.server.am.UserController $r3;
        android.app.ContentProviderHolder $r4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        i3 := @parameter1: int;

        r2 := @parameter2: android.os.IBinder;

        r5 := @parameter3: java.lang.String;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.ACCESS_CONTENT_PROVIDERS_EXTERNALLY", "Do not have permission in call getContentProviderExternal()");

        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.UserController mUserController>;

        $i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i0 = virtualinvoke $r3.<com.android.server.am.UserController: int handleIncomingUser(int,int,int,boolean,int,java.lang.String,java.lang.String)>($i1, $i2, i3, 0, 2, "getContentProvider", null);

        i4 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if r5 == null goto label1;

        goto label2;

     label1:
        r5 = "*external*";

     label2:
        $r4 = specialinvoke r0.<com.android.server.am.ActivityManagerService: android.app.ContentProviderHolder getContentProviderExternalUnchecked(java.lang.String,android.os.IBinder,int,java.lang.String,int)>(r1, r2, i4, r5, i0);

        return $r4;
    }

    public android.content.pm.UserInfo getCurrentUser()
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.UserController $r1;
        android.content.pm.UserInfo $r2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.UserController mUserController>;

        $r2 = virtualinvoke $r1.<com.android.server.am.UserController: android.content.pm.UserInfo getCurrentUser()>();

        return $r2;
    }

    public android.app.ActivityManager$StackInfo getFocusedStackInfo() throws android.os.RemoteException
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.wm.ActivityTaskManagerService $r1;
        android.app.ActivityManager$StackInfo $r2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerService mActivityTaskManager>;

        $r2 = virtualinvoke $r1.<com.android.server.wm.ActivityTaskManagerService: android.app.ActivityManager$StackInfo getFocusedStackInfo()>();

        return $r2;
    }

    public int getForegroundServiceType(android.content.ComponentName, android.os.IBinder)
    {
        com.android.server.am.ActivityManagerService r0;
        android.os.IBinder r1;
        int i0;
        com.android.server.am.ActiveServices $r2;
        java.lang.Throwable $r3;
        android.content.ComponentName r4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r4 := @parameter0: android.content.ComponentName;

        r1 := @parameter1: android.os.IBinder;

        entermonitor r0;

     label1:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveServices mServices>;

        i0 = virtualinvoke $r2.<com.android.server.am.ActiveServices: int getForegroundServiceTypeLocked(android.content.ComponentName,android.os.IBinder)>(r4, r1);

        exitmonitor r0;

     label2:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return i0;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public android.content.pm.ParceledListSlice getHistoricalProcessExitReasons(java.lang.String, int, int, int)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1;
        int i0, i1, i2, i3, i6, i7;
        java.lang.IllegalArgumentException $r3;
        com.android.server.am.UserController $r4;
        java.util.ArrayList $r5;
        boolean $z0;
        com.android.server.am.ProcessList $r6, $r9;
        com.android.server.am.AppExitInfoTracker $r7, $r10;
        android.content.pm.ParceledListSlice $r8;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i6 := @parameter3: int;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("getHistoricalProcessExitReasons");

        if i6 == -1 goto label4;

        if i6 == -2 goto label4;

        i2 = staticinvoke <android.os.Binder: int getCallingPid()>();

        i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        $r4 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.UserController mUserController>;

        virtualinvoke $r4.<com.android.server.am.UserController: int handleIncomingUser(int,int,int,boolean,int,java.lang.String,java.lang.String)>(i2, i3, i6, 1, 0, "getHistoricalProcessExitReasons", null);

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 != 0 goto label2;

        i7 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int enforceDumpPermissionForPackage(java.lang.String,int,int,java.lang.String)>(r1, i6, i3, "getHistoricalProcessExitReasons");

        if i7 == -1 goto label1;

        $r9 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r10 = $r9.<com.android.server.am.ProcessList: com.android.server.am.AppExitInfoTracker mAppExitInfoTracker>;

        virtualinvoke $r10.<com.android.server.am.AppExitInfoTracker: void getExitInfo(java.lang.String,int,int,int,java.util.ArrayList)>(r1, i7, i0, i1, $r5);

     label1:
        goto label3;

     label2:
        $r6 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r7 = $r6.<com.android.server.am.ProcessList: com.android.server.am.AppExitInfoTracker mAppExitInfoTracker>;

        virtualinvoke $r7.<com.android.server.am.AppExitInfoTracker: void getExitInfo(java.lang.String,int,int,int,java.util.ArrayList)>(r1, i3, i0, i1, $r5);

     label3:
        $r8 = new android.content.pm.ParceledListSlice;

        specialinvoke $r8.<android.content.pm.ParceledListSlice: void <init>(java.util.List)>($r5);

        return $r8;

     label4:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unsupported userId");

        throw $r3;
    }

    public android.content.Intent getIntentForIntentSender(android.content.IIntentSender)
    {
        com.android.server.am.ActivityManagerService r0;
        boolean z0;
        com.android.server.am.PendingIntentRecord r1;
        com.android.server.am.PendingIntentRecord$Key $r2, $r5;
        android.content.Intent $r3, $r4, $r6, r9;
        java.lang.ClassCastException $r7;
        android.content.IIntentSender r8;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r8 := @parameter0: android.content.IIntentSender;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.GET_INTENT_SENDER_INTENT", "getIntentForIntentSender()");

        z0 = r8 instanceof com.android.server.am.PendingIntentRecord;

        if z0 != 0 goto label1;

        return null;

     label1:
        r1 = (com.android.server.am.PendingIntentRecord) r8;

     label2:
        r9 = null;

     label3:
        $r2 = r1.<com.android.server.am.PendingIntentRecord: com.android.server.am.PendingIntentRecord$Key key>;

        $r3 = $r2.<com.android.server.am.PendingIntentRecord$Key: android.content.Intent requestIntent>;

        if $r3 == null goto label4;

        $r4 = new android.content.Intent;

        $r5 = r1.<com.android.server.am.PendingIntentRecord: com.android.server.am.PendingIntentRecord$Key key>;

        $r6 = $r5.<com.android.server.am.PendingIntentRecord$Key: android.content.Intent requestIntent>;

        specialinvoke $r4.<android.content.Intent: void <init>(android.content.Intent)>($r6);

        r9 = $r4;

     label4:
        return r9;

     label5:
        $r7 := @caughtexception;

        return null;

        catch java.lang.ClassCastException from label1 to label2 with label5;
        catch java.lang.ClassCastException from label3 to label4 with label5;
    }

    public android.content.IIntentSender getIntentSender(int, java.lang.String, android.os.IBinder, java.lang.String, int, android.content.Intent[], java.lang.String[], int, android.os.Bundle, int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, i2, i3;
        java.lang.String r1, r3;
        android.os.IBinder r2;
        android.content.Intent[] r4;
        java.lang.String[] r5;
        android.os.Bundle r6;
        android.content.IIntentSender $r7;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.os.IBinder;

        r3 := @parameter3: java.lang.String;

        i1 := @parameter4: int;

        r4 := @parameter5: android.content.Intent[];

        r5 := @parameter6: java.lang.String[];

        i2 := @parameter7: int;

        r6 := @parameter8: android.os.Bundle;

        i3 := @parameter9: int;

        $r7 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: android.content.IIntentSender getIntentSenderWithFeature(int,java.lang.String,java.lang.String,android.os.IBinder,java.lang.String,int,android.content.Intent[],java.lang.String[],int,android.os.Bundle,int)>(i0, r1, null, r2, r3, i1, r4, r5, i2, r6, i3);

        return $r7;
    }

    public android.content.IIntentSender getIntentSenderWithFeature(int, java.lang.String, java.lang.String, android.os.IBinder, java.lang.String, int, android.content.Intent[], java.lang.String[], int, android.os.Bundle, int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i8, $i9, $i10, $i11, $i12, $i13, i14, i15, i16, i17, i18, i19;
        android.os.IBinder r1;
        java.lang.String r2, r26, r27, r31;
        android.content.Intent[] r3;
        java.lang.String[] r4;
        android.os.Bundle r5;
        com.android.server.am.PendingIntentController $r6;
        android.content.IIntentSender $r7;
        android.content.pm.IPackageManager $r8;
        boolean $z0, $z1, $z2, z3;
        java.lang.IllegalArgumentException $r17, $r18, $r19, $r20, $r22;
        android.content.Intent $r21, r28;
        android.os.RemoteException $r23, $r24, $r25, r33;
        com.android.server.am.UserController r29;
        java.lang.StringBuilder r30;
        java.lang.SecurityException r32, $r36;
        com.android.server.wm.ActivityTaskManagerInternal r34;
        com.android.server.am.PendingIntentRecord r35;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        r26 := @parameter1: java.lang.String;

        r27 := @parameter2: java.lang.String;

        r1 := @parameter3: android.os.IBinder;

        r2 := @parameter4: java.lang.String;

        i1 := @parameter5: int;

        r3 := @parameter6: android.content.Intent[];

        r4 := @parameter7: java.lang.String[];

        i2 := @parameter8: int;

        r5 := @parameter9: android.os.Bundle;

        i14 := @parameter10: int;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("getIntentSender");

        z3 = 1;

        if r3 == null goto label09;

        $i8 = lengthof r3;

        if $i8 < 1 goto label08;

        i15 = 0;

     label01:
        $i9 = lengthof r3;

        if i15 >= $i9 goto label06;

        r28 = r3[i15];

        if r28 == null goto label05;

        $z2 = virtualinvoke r28.<android.content.Intent: boolean hasFileDescriptors()>();

        if $z2 != 0 goto label04;

        if i0 != 1 goto label03;

        $i12 = virtualinvoke r28.<android.content.Intent: int getFlags()>();

        $i13 = $i12 & 33554432;

        if $i13 != 0 goto label02;

        goto label03;

     label02:
        $r22 = new java.lang.IllegalArgumentException;

        specialinvoke $r22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t use FLAG_RECEIVER_BOOT_UPGRADE here");

        throw $r22;

     label03:
        $r21 = new android.content.Intent;

        specialinvoke $r21.<android.content.Intent: void <init>(android.content.Intent)>(r28);

        r3[i15] = $r21;

        goto label05;

     label04:
        $r20 = new java.lang.IllegalArgumentException;

        specialinvoke $r20.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("File descriptors passed in Intent");

        throw $r20;

     label05:
        i15 = i15 + 1;

        goto label01;

     label06:
        if r4 == null goto label09;

        $i11 = lengthof r4;

        $i10 = lengthof r3;

        if $i11 != $i10 goto label07;

        goto label09;

     label07:
        $r19 = new java.lang.IllegalArgumentException;

        specialinvoke $r19.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Intent array length does not match resolvedTypes length");

        throw $r19;

     label08:
        $r18 = new java.lang.IllegalArgumentException;

        specialinvoke $r18.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Intents array length must be >= 1");

        throw $r18;

     label09:
        if r5 == null goto label11;

        $z1 = virtualinvoke r5.<android.os.Bundle: boolean hasFileDescriptors()>();

        if $z1 != 0 goto label10;

        goto label11;

     label10:
        $r17 = new java.lang.IllegalArgumentException;

        specialinvoke $r17.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("File descriptors passed in options");

        throw $r17;

     label11:
        i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        r29 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.UserController mUserController>;

        i16 = staticinvoke <android.os.Binder: int getCallingPid()>();

        if i0 != 1 goto label12;

        goto label13;

     label12:
        z3 = 0;

     label13:
        i17 = virtualinvoke r29.<com.android.server.am.UserController: int handleIncomingUser(int,int,int,boolean,int,java.lang.String,java.lang.String)>(i16, i3, i14, z3, 0, "getIntentSender", null);

        if i14 != -2 goto label14;

        i18 = -2;

        goto label15;

     label14:
        i18 = i17;

     label15:
        if i3 == 0 goto label20;

        if i3 == 1000 goto label20;

     label16:
        $r8 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        $i4 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i3);

        i19 = interfaceinvoke $r8.<android.content.pm.IPackageManager: int getPackageUid(java.lang.String,int,int)>(r26, 268435456, $i4);

        $z0 = staticinvoke <android.os.UserHandle: boolean isSameApp(int,int)>(i3, i19);

        if $z0 == 0 goto label18;

     label17:
        goto label20;

     label18:
        r30 = new java.lang.StringBuilder;

        specialinvoke r30.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: getIntentSender() from pid=");

        $i5 = staticinvoke <android.os.Binder: int getCallingPid()>();

        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i6 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", (need uid=");

        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i19);

        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") is not allowed to send as package ");

        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r26);

        r31 = virtualinvoke r30.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r31);

        r32 = new java.lang.SecurityException;

        specialinvoke r32.<java.lang.SecurityException: void <init>(java.lang.String)>(r31);

        throw r32;

     label19:
        $r24 := @caughtexception;

        r33 = $r24;

        goto label27;

     label20:
        if i0 != 3 goto label24;

     label21:
        r34 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerInternal mAtmInternal>;

     label22:
        $r7 = virtualinvoke r34.<com.android.server.wm.ActivityTaskManagerInternal: android.content.IIntentSender getIntentSender(int,java.lang.String,java.lang.String,int,int,android.os.IBinder,java.lang.String,int,android.content.Intent[],java.lang.String[],int,android.os.Bundle)>(i0, r26, r27, i3, i18, r1, r2, i1, r3, r4, i2, r5);

        return $r7;

     label23:
        $r25 := @caughtexception;

        r33 = $r25;

        goto label27;

     label24:
        $r6 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.PendingIntentController mPendingIntentController>;

        r35 = virtualinvoke $r6.<com.android.server.am.PendingIntentController: com.android.server.am.PendingIntentRecord getIntentSender(int,java.lang.String,java.lang.String,int,int,android.os.IBinder,java.lang.String,int,android.content.Intent[],java.lang.String[],int,android.os.Bundle)>(i0, r26, r27, i3, i18, r1, r2, i1, r3, r4, i2, r5);

     label25:
        return r35;

     label26:
        $r23 := @caughtexception;

        r33 = $r23;

     label27:
        $r36 = new java.lang.SecurityException;

        specialinvoke $r36.<java.lang.SecurityException: void <init>(java.lang.Throwable)>(r33);

        throw $r36;

        catch android.os.RemoteException from label16 to label17 with label19;
        catch android.os.RemoteException from label18 to label19 with label19;
        catch android.os.RemoteException from label21 to label22 with label23;
        catch android.os.RemoteException from label22 to label23 with label26;
        catch android.os.RemoteException from label24 to label25 with label26;
    }

    public java.lang.String getLaunchedFromPackage(android.os.IBinder)
    {
        com.android.server.am.ActivityManagerService r0;
        android.os.IBinder r1;
        com.android.server.wm.ActivityTaskManagerService $r2;
        java.lang.String $r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerService mActivityTaskManager>;

        $r3 = virtualinvoke $r2.<com.android.server.wm.ActivityTaskManagerService: java.lang.String getLaunchedFromPackage(android.os.IBinder)>(r1);

        return $r3;
    }

    public int getLaunchedFromUid(android.os.IBinder)
    {
        com.android.server.am.ActivityManagerService r0;
        android.os.IBinder r1;
        com.android.server.wm.ActivityTaskManagerService $r2;
        int $i0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerService mActivityTaskManager>;

        $i0 = virtualinvoke $r2.<com.android.server.wm.ActivityTaskManagerService: int getLaunchedFromUid(android.os.IBinder)>(r1);

        return $i0;
    }

    public android.os.ParcelFileDescriptor getLifeMonitor()
    {
        com.android.server.am.ActivityManagerService r0;
        boolean $z0;
        java.lang.SecurityException $r1;
        android.os.ParcelFileDescriptor[] $r2, $r3, $r5;
        android.os.ParcelFileDescriptor $r4, r8;
        java.lang.Throwable $r6, $r7;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $z0 = specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean isCallerShell()>();

        if $z0 == 0 goto label11;

        entermonitor r0;

     label01:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r2 = r0.<com.android.server.am.ActivityManagerService: android.os.ParcelFileDescriptor[] mLifeMonitorFds>;

        if $r2 != null goto label02;

        $r5 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor[] createPipe()>();

        r0.<com.android.server.am.ActivityManagerService: android.os.ParcelFileDescriptor[] mLifeMonitorFds> = $r5;

     label02:
        $r3 = r0.<com.android.server.am.ActivityManagerService: android.os.ParcelFileDescriptor[] mLifeMonitorFds>;

        $r4 = $r3[0];

        r8 = virtualinvoke $r4.<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor dup()>();

     label03:
        exitmonitor r0;

     label04:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return r8;

     label05:
        $r6 := @caughtexception;

        goto label09;

     label06:
        $r7 := @caughtexception;

     label07:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", "Unable to create pipe", $r7);

        exitmonitor r0;

     label08:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return null;

     label09:
        exitmonitor r0;

     label10:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r6;

     label11:
        $r1 = new java.lang.SecurityException;

        specialinvoke $r1.<java.lang.SecurityException: void <init>(java.lang.String)>("Only shell can call it");

        throw $r1;

        catch java.io.IOException from label01 to label02 with label06;
        catch java.lang.Throwable from label01 to label02 with label05;
        catch java.io.IOException from label02 to label03 with label06;
        catch java.lang.Throwable from label02 to label03 with label05;
        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label07 to label08 with label05;
        catch java.lang.Throwable from label09 to label10 with label05;
    }

    public int getLockTaskModeState()
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.wm.ActivityTaskManagerService $r1;
        int $i0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerService mActivityTaskManager>;

        $i0 = virtualinvoke $r1.<com.android.server.wm.ActivityTaskManagerService: int getLockTaskModeState()>();

        return $i0;
    }

    public void getMemoryInfo(android.app.ActivityManager$MemoryInfo)
    {
        com.android.server.am.ActivityManagerService r0;
        android.app.ActivityManager$MemoryInfo r1;
        com.android.server.am.ProcessList $r2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.app.ActivityManager$MemoryInfo;

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        virtualinvoke $r2.<com.android.server.am.ProcessList: void getMemoryInfo(android.app.ActivityManager$MemoryInfo)>(r1);

        return;
    }

    public int getMemoryTrimLevel()
    {
        com.android.server.am.ActivityManagerService r0;
        int i0;
        java.lang.Throwable $r2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("getMyMemoryState");

        entermonitor r0;

     label1:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        i0 = r0.<com.android.server.am.ActivityManagerService: int mLastMemoryLevel>;

        exitmonitor r0;

     label2:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return i0;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void getMyMemoryState(android.app.ActivityManager$RunningAppProcessInfo)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ActivityManagerService$PidMap r1, $r5;
        com.android.server.am.ProcessRecord r2;
        java.lang.IllegalArgumentException $r3;
        android.content.pm.PackageManagerInternal $r4;
        int $i0, i1, i2;
        com.android.server.am.ProcessList $r6;
        java.lang.Throwable $r7, $r8;
        android.app.ActivityManager$RunningAppProcessInfo r9;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r9 := @parameter0: android.app.ActivityManager$RunningAppProcessInfo;

        if r9 == null goto label13;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("getMyMemoryState");

        i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r4 = r0.<com.android.server.am.ActivityManagerService: android.content.pm.PackageManagerInternal mPackageManagerInt>;

        i2 = virtualinvoke $r4.<android.content.pm.PackageManagerInternal: int getUidTargetSdkVersion(int)>(i1);

        entermonitor r0;

     label01:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        entermonitor r1;

     label02:
        $r5 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        $i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        r2 = virtualinvoke $r5.<com.android.server.am.ActivityManagerService$PidMap: com.android.server.am.ProcessRecord get(int)>($i0);

        exitmonitor r1;

     label03:
        if r2 == null goto label05;

     label04:
        $r6 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        virtualinvoke $r6.<com.android.server.am.ProcessList: void fillInProcMemInfoLocked(com.android.server.am.ProcessRecord,android.app.ActivityManager$RunningAppProcessInfo,int)>(r2, r9, i2);

     label05:
        exitmonitor r0;

     label06:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label07:
        $r7 := @caughtexception;

     label08:
        exitmonitor r1;

     label09:
        throw $r7;

     label10:
        $r8 := @caughtexception;

     label11:
        exitmonitor r0;

     label12:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r8;

     label13:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("outState is null");

        throw $r3;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label02 to label03 with label07;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label08 to label09 with label07;
        catch java.lang.Throwable from label09 to label10 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public java.lang.String getPackageForIntentSender(android.content.IIntentSender)
    {
        com.android.server.am.ActivityManagerService r0;
        boolean $z0;
        com.android.server.am.PendingIntentRecord $r1;
        com.android.server.am.PendingIntentRecord$Key $r2;
        java.lang.ClassCastException $r3;
        android.content.IIntentSender r4;
        java.lang.String r5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r4 := @parameter0: android.content.IIntentSender;

        $z0 = r4 instanceof com.android.server.am.PendingIntentRecord;

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r1 = (com.android.server.am.PendingIntentRecord) r4;

        $r2 = $r1.<com.android.server.am.PendingIntentRecord: com.android.server.am.PendingIntentRecord$Key key>;

        r5 = $r2.<com.android.server.am.PendingIntentRecord$Key: java.lang.String packageName>;

     label2:
        return r5;

     label3:
        $r3 := @caughtexception;

        return null;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    public android.content.pm.IPackageManager getPackageManager()
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.pm.IPackageManager $r1;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        return $r1;
    }

    public android.content.pm.PackageManagerInternal getPackageManagerInternalLocked()
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.pm.PackageManagerInternal $r1, $r2, $r4;
        java.lang.Object $r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 = r0.<com.android.server.am.ActivityManagerService: android.content.pm.PackageManagerInternal mPackageManagerInt>;

        if $r1 != null goto label1;

        $r3 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/content/pm/PackageManagerInternal;");

        $r4 = (android.content.pm.PackageManagerInternal) $r3;

        r0.<com.android.server.am.ActivityManagerService: android.content.pm.PackageManagerInternal mPackageManagerInt> = $r4;

     label1:
        $r2 = r0.<com.android.server.am.ActivityManagerService: android.content.pm.PackageManagerInternal mPackageManagerInt>;

        return $r2;
    }

    public int getPackageProcessState(java.lang.String, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        boolean $z0, $z1, $z2;
        com.android.server.am.ProcessList $r1, $r3;
        java.util.ArrayList $r2, $r4;
        int $i0, $i1, i2, i3, i4;
        java.lang.Object $r5;
        com.android.server.am.ProcessRecord$PackageList $r6;
        android.util.ArraySet $r7, $r8;
        java.lang.Throwable $r9;
        java.lang.String r10, r11;
        com.android.server.am.ProcessRecord r12;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r10 := @parameter0: java.lang.String;

        r11 := @parameter1: java.lang.String;

        $z0 = specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean hasUsageStatsPermission(java.lang.String)>(r11);

        if $z0 != 0 goto label01;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.PACKAGE_USAGE_STATS", "getPackageProcessState");

     label01:
        i2 = 20;

        entermonitor r0;

     label02:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r2 = $r1.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i3 = $i0 - 1;

     label03:
        if i3 < 0 goto label13;

     label04:
        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r4 = $r3.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r12 = (com.android.server.am.ProcessRecord) $r5;

     label05:
        i4 = i2;

     label06:
        $i1 = r12.<com.android.server.am.ProcessRecord: int setProcState>;

        if i2 <= $i1 goto label12;

        $r6 = r12.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        $z1 = virtualinvoke $r6.<com.android.server.am.ProcessRecord$PackageList: boolean containsKey(java.lang.Object)>(r10);

        if $z1 != 0 goto label11;

     label07:
        i4 = i2;

     label08:
        $r7 = r12.<com.android.server.am.ProcessRecord: android.util.ArraySet pkgDeps>;

        if $r7 == null goto label12;

     label09:
        i4 = i2;

     label10:
        $r8 = r12.<com.android.server.am.ProcessRecord: android.util.ArraySet pkgDeps>;

        $z2 = virtualinvoke $r8.<android.util.ArraySet: boolean contains(java.lang.Object)>(r10);

        if $z2 == 0 goto label12;

     label11:
        i4 = r12.<com.android.server.am.ProcessRecord: int setProcState>;

     label12:
        i3 = i3 + -1;

        i2 = i4;

        goto label03;

     label13:
        exitmonitor r0;

     label14:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return i2;

     label15:
        $r9 := @caughtexception;

     label16:
        exitmonitor r0;

     label17:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r9;

        catch java.lang.Throwable from label02 to label03 with label15;
        catch java.lang.Throwable from label04 to label05 with label15;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch java.lang.Throwable from label08 to label09 with label15;
        catch java.lang.Throwable from label10 to label11 with label15;
        catch java.lang.Throwable from label11 to label12 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label16 to label17 with label15;
    }

    java.lang.String getPendingTempWhitelistTagForUidLocked(int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0;
        com.android.server.am.PendingTempWhitelists $r1;
        com.android.server.am.ActivityManagerService$PendingTempWhitelist r2;
        java.lang.String r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.PendingTempWhitelists mPendingTempWhitelist>;

        r2 = virtualinvoke $r1.<com.android.server.am.PendingTempWhitelists: com.android.server.am.ActivityManagerService$PendingTempWhitelist get(int)>(i0);

        if r2 == null goto label1;

        r3 = r2.<com.android.server.am.ActivityManagerService$PendingTempWhitelist: java.lang.String tag>;

        goto label2;

     label1:
        r3 = null;

     label2:
        return r3;
    }

    public int getProcessLimit()
    {
        com.android.server.am.ActivityManagerService r0;
        int i0;
        com.android.server.am.ActivityManagerConstants $r2;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        entermonitor r0;

     label1:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerConstants mConstants>;

        i0 = virtualinvoke $r2.<com.android.server.am.ActivityManagerConstants: int getOverrideMaxCachedProcesses()>();

        exitmonitor r0;

     label2:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return i0;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public android.os.Debug$MemoryInfo[] getProcessMemoryInfo(int[])
    {
        com.android.server.am.ActivityManagerService r0;
        long l0, l1, l5, l6, l7, $l8, $l13, $l16, $l20, $l21, $l22, l32, l34, l44, l46, l49;
        int i2, i3, i4, $i9, $i10, $i11, $i12, $i14, $i15, $i17, $i18, $i19, $i24, i25, i26, i27, i28, i29, $i30, i31, i33, i37, i40, i48;
        boolean z0, z1, z3, z4;
        com.android.internal.app.procstats.ProcessStats$ProcessStateHolder r1;
        java.lang.String r2, r62;
        com.android.server.am.ActivityManagerConstants $r3;
        com.android.server.wm.ActivityTaskManagerInternal $r4;
        com.android.server.am.ActivityManagerService$PidMap $r5, r42, r48, r49;
        android.os.Debug$MemoryInfo $r6, $r8, $r9, $r17, $r18, $r19, $r20, $r21, $r22, $r52, $r54, r56;
        android.app.IApplicationThread $r7;
        com.android.server.am.ProcessRecord$PackageList $r10, $r12, $r13;
        android.util.ArrayMap $r11;
        android.content.pm.ApplicationInfo $r14;
        com.android.internal.app.procstats.ProcessState $r15, $r16, r55;
        byte $b23;
        java.lang.Throwable $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, r45, r51, r67, r68;
        int[] r40;
        com.android.server.am.ProcessRecord r43, r50;
        com.android.server.am.ActiveInstrumentation r44;
        android.os.Debug$MemoryInfo[] r46;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r40 := @parameter0: int[];

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("getProcessMemoryInfo");

        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerConstants mConstants>;

        $l8 = $r3.<com.android.server.am.ActivityManagerConstants: long MEMORY_INFO_THROTTLE_TIME>;

        l1 = l0 - $l8;

        i2 = staticinvoke <android.os.Binder: int getCallingPid()>();

        i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i4 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i3);

        $i9 = staticinvoke <android.app.ActivityManager: int checkUidPermission(java.lang.String,int)>("android.permission.INTERACT_ACROSS_USERS_FULL", i3);

        if $i9 != 0 goto label01;

        z3 = 1;

        goto label02;

     label01:
        z3 = 0;

     label02:
        z0 = z3;

        $r4 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerInternal mAtmInternal>;

        z1 = virtualinvoke $r4.<com.android.server.wm.ActivityTaskManagerInternal: boolean isGetTasksAllowed(java.lang.String,int,int)>("getProcessMemoryInfo", i2, i3);

        z4 = 0;

        r42 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        entermonitor r42;

     label03:
        $r5 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        r43 = virtualinvoke $r5.<com.android.server.am.ActivityManagerService$PidMap: com.android.server.am.ProcessRecord get(int)>(i2);

     label04:
        if r43 == null goto label13;

     label05:
        r44 = virtualinvoke r43.<com.android.server.am.ProcessRecord: com.android.server.am.ActiveInstrumentation getActiveInstrumentation()>();

     label06:
        if r44 == null goto label10;

     label07:
        $i24 = r44.<com.android.server.am.ActiveInstrumentation: int mSourceUid>;

        if $i24 == 2000 goto label09;

        i25 = r44.<com.android.server.am.ActiveInstrumentation: int mSourceUid>;

     label08:
        if i25 != 0 goto label10;

     label09:
        z4 = 1;

        goto label11;

     label10:
        z4 = 0;

     label11:
        goto label13;

     label12:
        $r36 := @caughtexception;

        r45 = $r36;

        goto label79;

     label13:
        exitmonitor r42;

     label14:
        $i10 = lengthof r40;

        r46 = newarray (android.os.Debug$MemoryInfo)[$i10];

        $i11 = lengthof r40;

        i26 = $i11 - 1;

     label15:
        if i26 < 0 goto label76;

        $r6 = new android.os.Debug$MemoryInfo;

        specialinvoke $r6.<android.os.Debug$MemoryInfo: void <init>()>();

        r46[i26] = $r6;

        entermonitor r0;

     label16:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        r48 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        entermonitor r48;

     label17:
        r49 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

     label18:
        $i12 = r40[i26];

        r50 = virtualinvoke r49.<com.android.server.am.ActivityManagerService$PidMap: com.android.server.am.ProcessRecord get(int)>($i12);

     label19:
        if r50 == null goto label23;

     label20:
        i27 = r50.<com.android.server.am.ProcessRecord: int setAdj>;

     label21:
        goto label24;

     label22:
        $r37 := @caughtexception;

        r51 = $r37;

        goto label69;

     label23:
        i27 = 0;

     label24:
        exitmonitor r48;

     label25:
        exitmonitor r0;

     label26:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        i28 = -1;

        if r50 == null goto label27;

        i29 = r50.<com.android.server.am.ProcessRecord: int uid>;

        goto label28;

     label27:
        i29 = -1;

     label28:
        if r50 == null goto label29;

        i28 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i29);

     label29:
        if i3 == i29 goto label32;

        if z1 != 0 goto label30;

        goto label65;

     label30:
        if z0 != 0 goto label31;

        if i28 == i4 goto label32;

        goto label65;

     label31:
        goto label32;

     label32:
        if r50 == null goto label33;

        $l22 = r50.<com.android.server.am.ProcessRecord: long lastMemInfoTime>;

        $b23 = $l22 cmp l1;

        if $b23 < 0 goto label33;

        $r20 = r50.<com.android.server.am.ProcessRecord: android.os.Debug$MemoryInfo lastMemInfo>;

        if $r20 == null goto label33;

        if z4 != 0 goto label33;

        $r22 = r46[i26];

        $r21 = r50.<com.android.server.am.ProcessRecord: android.os.Debug$MemoryInfo lastMemInfo>;

        virtualinvoke $r22.<android.os.Debug$MemoryInfo: void set(android.os.Debug$MemoryInfo)>($r21);

        goto label65;

     label33:
        l5 = staticinvoke <android.os.SystemClock: long currentThreadTimeMillis()>();

        $r52 = new android.os.Debug$MemoryInfo;

        specialinvoke $r52.<android.os.Debug$MemoryInfo: void <init>()>();

        $i30 = r40[i26];

        staticinvoke <android.os.Debug: boolean getMemoryInfo(int,android.os.Debug$MemoryInfo)>($i30, $r52);

        l6 = staticinvoke <android.os.SystemClock: long currentThreadTimeMillis()>();

        $r54 = r46[i26];

        virtualinvoke $r54.<android.os.Debug$MemoryInfo: void set(android.os.Debug$MemoryInfo)>($r52);

        if r50 == null goto label65;

        entermonitor r0;

     label34:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        r50.<com.android.server.am.ProcessRecord: android.os.Debug$MemoryInfo lastMemInfo> = $r52;

     label35:
        $l13 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r50.<com.android.server.am.ProcessRecord: long lastMemInfoTime> = $l13;

        $r7 = r50.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r7 == null goto label58;

        $i14 = r50.<com.android.server.am.ProcessRecord: int setAdj>;

        if $i14 != i27 goto label58;

        r55 = r50.<com.android.server.am.ProcessRecord: com.android.internal.app.procstats.ProcessState baseProcessTracker>;

        $r8 = r46[i26];

        $i15 = virtualinvoke $r8.<android.os.Debug$MemoryInfo: int getTotalPss()>();

        l7 = (long) $i15;

     label36:
        r56 = r46[i26];

     label37:
        i31 = virtualinvoke r56.<android.os.Debug$MemoryInfo: int getTotalUss()>();

     label38:
        l32 = (long) i31;

     label39:
        $r9 = r46[i26];

        i33 = virtualinvoke $r9.<android.os.Debug$MemoryInfo: int getTotalRss()>();

     label40:
        l34 = (long) i33;

     label41:
        $l16 = l6 - l5;

        $r10 = r50.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        $r11 = $r10.<com.android.server.am.ProcessRecord$PackageList: android.util.ArrayMap mPkgList>;

        virtualinvoke r55.<com.android.internal.app.procstats.ProcessState: void addPss(long,long,long,boolean,int,long,android.util.ArrayMap)>(l7, l32, l34, 0, 4, $l16, $r11);

     label42:
        $r12 = r50.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        $i17 = virtualinvoke $r12.<com.android.server.am.ProcessRecord$PackageList: int size()>();

        i37 = $i17 - 1;

     label43:
        if i37 < 0 goto label54;

     label44:
        $r13 = r50.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        r1 = virtualinvoke $r13.<com.android.server.am.ProcessRecord$PackageList: com.android.internal.app.procstats.ProcessStats$ProcessStateHolder valueAt(int)>(i37);

     label45:
        $r14 = r50.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        i40 = $r14.<android.content.pm.ApplicationInfo: int uid>;

     label46:
        $r15 = r1.<com.android.internal.app.procstats.ProcessStats$ProcessStateHolder: com.android.internal.app.procstats.ProcessState state>;

        r62 = virtualinvoke $r15.<com.android.internal.app.procstats.ProcessState: java.lang.String getName()>();

     label47:
        $r16 = r1.<com.android.internal.app.procstats.ProcessStats$ProcessStateHolder: com.android.internal.app.procstats.ProcessState state>;

        r2 = virtualinvoke $r16.<com.android.internal.app.procstats.ProcessState: java.lang.String getPackage()>();

     label48:
        $r17 = r46[i26];

        $i18 = virtualinvoke $r17.<android.os.Debug$MemoryInfo: int getTotalPss()>();

        l44 = (long) $i18;

     label49:
        $r18 = r46[i26];

        $i19 = virtualinvoke $r18.<android.os.Debug$MemoryInfo: int getTotalUss()>();

        l46 = (long) $i19;

     label50:
        $r19 = r46[i26];

        i48 = virtualinvoke $r19.<android.os.Debug$MemoryInfo: int getTotalRss()>();

     label51:
        l49 = (long) i48;

     label52:
        $l21 = l6 - l5;

        $l20 = r1.<com.android.internal.app.procstats.ProcessStats$ProcessStateHolder: long appVersion>;

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int,java.lang.String,java.lang.String,long,long,long,int,long,long)>(18, i40, r62, r2, l44, l46, l49, 4, $l21, $l20);

     label53:
        i37 = i37 + -1;

        goto label43;

     label54:
        goto label58;

     label55:
        $r31 := @caughtexception;

        r67 = $r31;

        goto label62;

     label56:
        $r24 := @caughtexception;

        r67 = $r24;

        goto label62;

     label57:
        $r33 := @caughtexception;

        r67 = $r33;

        goto label62;

     label58:
        exitmonitor r0;

     label59:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        goto label65;

     label60:
        $r30 := @caughtexception;

        r67 = $r30;

        goto label62;

     label61:
        $r28 := @caughtexception;

        r67 = $r28;

     label62:
        exitmonitor r0;

     label63:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw r67;

     label64:
        $r29 := @caughtexception;

        r67 = $r29;

        goto label62;

     label65:
        i26 = i26 + -1;

        goto label15;

     label66:
        $r26 := @caughtexception;

        r68 = $r26;

        goto label73;

     label67:
        $r25 := @caughtexception;

        r51 = $r25;

        goto label69;

     label68:
        $r32 := @caughtexception;

        r51 = $r32;

     label69:
        exitmonitor r48;

     label70:
        throw r51;

     label71:
        $r38 := @caughtexception;

        r51 = $r38;

        goto label69;

     label72:
        $r23 := @caughtexception;

        r68 = $r23;

     label73:
        exitmonitor r0;

     label74:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw r68;

     label75:
        $r34 := @caughtexception;

        r68 = $r34;

        goto label73;

     label76:
        return r46;

     label77:
        $r27 := @caughtexception;

        r45 = $r27;

        goto label79;

     label78:
        $r39 := @caughtexception;

        r45 = $r39;

     label79:
        exitmonitor r42;

     label80:
        throw r45;

     label81:
        $r35 := @caughtexception;

        r45 = $r35;

        goto label79;

        catch java.lang.Throwable from label03 to label04 with label78;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label07 to label08 with label12;
        catch java.lang.Throwable from label13 to label14 with label77;
        catch java.lang.Throwable from label16 to label17 with label72;
        catch java.lang.Throwable from label17 to label18 with label68;
        catch java.lang.Throwable from label18 to label19 with label67;
        catch java.lang.Throwable from label20 to label21 with label22;
        catch java.lang.Throwable from label24 to label25 with label67;
        catch java.lang.Throwable from label25 to label26 with label66;
        catch java.lang.Throwable from label34 to label35 with label61;
        catch java.lang.Throwable from label35 to label36 with label60;
        catch java.lang.Throwable from label37 to label38 with label57;
        catch java.lang.Throwable from label39 to label40 with label56;
        catch java.lang.Throwable from label41 to label42 with label55;
        catch java.lang.Throwable from label42 to label43 with label55;
        catch java.lang.Throwable from label44 to label45 with label55;
        catch java.lang.Throwable from label45 to label46 with label55;
        catch java.lang.Throwable from label46 to label47 with label55;
        catch java.lang.Throwable from label47 to label48 with label55;
        catch java.lang.Throwable from label48 to label49 with label55;
        catch java.lang.Throwable from label49 to label50 with label55;
        catch java.lang.Throwable from label50 to label51 with label55;
        catch java.lang.Throwable from label52 to label53 with label64;
        catch java.lang.Throwable from label58 to label59 with label64;
        catch java.lang.Throwable from label62 to label63 with label64;
        catch java.lang.Throwable from label69 to label70 with label71;
        catch java.lang.Throwable from label70 to label71 with label75;
        catch java.lang.Throwable from label73 to label74 with label75;
        catch java.lang.Throwable from label79 to label80 with label81;
    }

    final com.android.internal.app.ProcessMap getProcessNames()
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessList $r1;
        com.android.server.am.ProcessList$MyProcessMap $r2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r2 = $r1.<com.android.server.am.ProcessList: com.android.server.am.ProcessList$MyProcessMap mProcessNames>;

        return $r2;
    }

    public long[] getProcessPss(int[])
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, i4, $i8, $i9, $i10, $i11, $i12, $i14, $i19, $i22, $i23, i24, i25, i26, i32;
        boolean z0, z1;
        long[] r1, r28;
        com.android.server.am.ProcessRecord r2;
        long l2, l3, l5, l6, l7, $l13, $l15, $l16, $l17, $l18, $l20, $l21;
        com.android.internal.app.procstats.ProcessStats$ProcessStateHolder r3;
        java.lang.String r4, r29;
        com.android.server.wm.ActivityTaskManagerInternal $r5;
        com.android.server.am.ActivityManagerService$PidMap $r6, r26;
        android.app.IApplicationThread $r7;
        com.android.server.am.ProcessRecord$PackageList $r8, $r11, $r12;
        android.util.ArrayMap $r9;
        com.android.internal.app.procstats.ProcessState $r10, $r14, $r15;
        android.content.pm.ApplicationInfo $r13;
        java.lang.Throwable $r16, $r17, $r18, $r19, $r20, $r21, $r22, r27, r30, r31;
        int[] r23;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r23 := @parameter0: int[];

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("getProcessPss");

        i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        i24 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i1 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i24);

        $i8 = staticinvoke <android.app.ActivityManager: int checkUidPermission(java.lang.String,int)>("android.permission.INTERACT_ACROSS_USERS_FULL", i24);

        if $i8 != 0 goto label01;

        z1 = 1;

        goto label02;

     label01:
        z1 = 0;

     label02:
        $r5 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerInternal mAtmInternal>;

        z0 = virtualinvoke $r5.<com.android.server.wm.ActivityTaskManagerInternal: boolean isGetTasksAllowed(java.lang.String,int,int)>("getProcessPss", i0, i24);

        $i9 = lengthof r23;

        r1 = newarray (long)[$i9];

        $i10 = lengthof r23;

        i25 = $i10 - 1;

     label03:
        if i25 < 0 goto label45;

        entermonitor r0;

     label04:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        r26 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        entermonitor r26;

     label05:
        $r6 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        $i11 = r23[i25];

        r2 = virtualinvoke $r6.<com.android.server.am.ActivityManagerService$PidMap: com.android.server.am.ProcessRecord get(int)>($i11);

     label06:
        if r2 == null goto label10;

     label07:
        i26 = r2.<com.android.server.am.ProcessRecord: int setAdj>;

     label08:
        goto label11;

     label09:
        $r22 := @caughtexception;

        r27 = $r22;

        goto label38;

     label10:
        i26 = 0;

     label11:
        exitmonitor r26;

     label12:
        exitmonitor r0;

     label13:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        if z0 == 0 goto label36;

        if z1 != 0 goto label14;

        $i22 = r2.<com.android.server.am.ProcessRecord: int uid>;

        $i23 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i22);

        if $i23 == i1 goto label14;

        goto label36;

     label14:
        r28 = newarray (long)[3];

        l2 = staticinvoke <android.os.SystemClock: long currentThreadTimeMillis()>();

        $i12 = r23[i25];

        $l13 = staticinvoke <android.os.Debug: long getPss(int,long[],long[])>($i12, r28, null);

        r1[i25] = $l13;

        l3 = staticinvoke <android.os.SystemClock: long currentThreadTimeMillis()>();

        if r2 == null goto label35;

        entermonitor r0;

     label15:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

     label16:
        $r7 = r2.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r7 == null goto label29;

     label17:
        $i14 = r2.<com.android.server.am.ProcessRecord: int setAdj>;

        if $i14 != i26 goto label29;

     label18:
        $r10 = r2.<com.android.server.am.ProcessRecord: com.android.internal.app.procstats.ProcessState baseProcessTracker>;

        $l18 = r1[i25];

        $l17 = r28[0];

        $l16 = r28[2];

        $l15 = l3 - l2;

        $r8 = r2.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        $r9 = $r8.<com.android.server.am.ProcessRecord$PackageList: android.util.ArrayMap mPkgList>;

        virtualinvoke $r10.<com.android.internal.app.procstats.ProcessState: void addPss(long,long,long,boolean,int,long,android.util.ArrayMap)>($l18, $l17, $l16, 0, 3, $l15, $r9);

     label19:
        $r11 = r2.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        $i19 = virtualinvoke $r11.<com.android.server.am.ProcessRecord$PackageList: int size()>();

        i32 = $i19 - 1;

     label20:
        if i32 < 0 goto label28;

     label21:
        $r12 = r2.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        r3 = virtualinvoke $r12.<com.android.server.am.ProcessRecord$PackageList: com.android.internal.app.procstats.ProcessStats$ProcessStateHolder valueAt(int)>(i32);

     label22:
        $r13 = r2.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        i4 = $r13.<android.content.pm.ApplicationInfo: int uid>;

     label23:
        $r14 = r3.<com.android.internal.app.procstats.ProcessStats$ProcessStateHolder: com.android.internal.app.procstats.ProcessState state>;

        r4 = virtualinvoke $r14.<com.android.internal.app.procstats.ProcessState: java.lang.String getName()>();

     label24:
        $r15 = r3.<com.android.internal.app.procstats.ProcessStats$ProcessStateHolder: com.android.internal.app.procstats.ProcessState state>;

        r29 = virtualinvoke $r15.<com.android.internal.app.procstats.ProcessState: java.lang.String getPackage()>();

     label25:
        l5 = r1[i25];

        l6 = r28[0];

        l7 = r28[2];

     label26:
        $l21 = l3 - l2;

        $l20 = r3.<com.android.internal.app.procstats.ProcessStats$ProcessStateHolder: long appVersion>;

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int,java.lang.String,java.lang.String,long,long,long,int,long,long)>(18, i4, r4, r29, l5, l6, l7, 3, $l21, $l20);

     label27:
        i32 = i32 + -1;

        goto label20;

     label28:
        goto label29;

     label29:
        exitmonitor r0;

     label30:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        goto label36;

     label31:
        $r20 := @caughtexception;

        r30 = $r20;

     label32:
        exitmonitor r0;

     label33:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw r30;

     label34:
        $r19 := @caughtexception;

        r30 = $r19;

        goto label32;

     label35:
        goto label36;

     label36:
        i25 = i25 + -1;

        goto label03;

     label37:
        $r21 := @caughtexception;

        r27 = $r21;

     label38:
        exitmonitor r26;

     label39:
        throw r27;

     label40:
        $r18 := @caughtexception;

        r27 = $r18;

        goto label38;

     label41:
        $r16 := @caughtexception;

        r31 = $r16;

     label42:
        exitmonitor r0;

     label43:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw r31;

     label44:
        $r17 := @caughtexception;

        r31 = $r17;

        goto label42;

     label45:
        return r1;

        catch java.lang.Throwable from label04 to label05 with label41;
        catch java.lang.Throwable from label05 to label06 with label37;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label11 to label12 with label37;
        catch java.lang.Throwable from label12 to label13 with label41;
        catch java.lang.Throwable from label15 to label16 with label31;
        catch java.lang.Throwable from label16 to label17 with label31;
        catch java.lang.Throwable from label17 to label18 with label31;
        catch java.lang.Throwable from label18 to label19 with label31;
        catch java.lang.Throwable from label19 to label20 with label31;
        catch java.lang.Throwable from label21 to label22 with label31;
        catch java.lang.Throwable from label22 to label23 with label31;
        catch java.lang.Throwable from label23 to label24 with label31;
        catch java.lang.Throwable from label24 to label25 with label31;
        catch java.lang.Throwable from label26 to label27 with label34;
        catch java.lang.Throwable from label29 to label30 with label34;
        catch java.lang.Throwable from label32 to label33 with label34;
        catch java.lang.Throwable from label38 to label39 with label40;
        catch java.lang.Throwable from label39 to label40 with label44;
        catch java.lang.Throwable from label42 to label43 with label44;
    }

    final com.android.server.am.ProcessRecord getProcessRecordLocked(java.lang.String, int, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1;
        int i0;
        boolean z0;
        com.android.server.am.ProcessList $r2;
        com.android.server.am.ProcessRecord $r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r3 = virtualinvoke $r2.<com.android.server.am.ProcessList: com.android.server.am.ProcessRecord getProcessRecordLocked(java.lang.String,int,boolean)>(r1, i0, z0);

        return $r3;
    }

    public void getProcessStatesAndOomScoresForPIDs(int[], int[], int[])
    {
        com.android.server.am.ActivityManagerService r0;
        int[] r1, r2, r12;
        com.android.server.am.ActivityManagerService$PidMap r3, $r8;
        com.android.server.am.ProcessRecord r4;
        boolean z0;
        java.lang.NullPointerException $r5, $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, $i8, i9, i10;
        java.lang.IllegalArgumentException $r7, $r10;
        com.android.server.am.PendingStartActivityUids $r9;
        java.lang.Throwable $r11;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r12 := @parameter0: int[];

        r1 := @parameter1: int[];

        r2 := @parameter2: int[];

        if r2 == null goto label01;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.GET_PROCESS_STATE_AND_OOM_SCORE", "getProcessStatesAndOomScoresForPIDs()");

     label01:
        if r12 == null goto label22;

        if r1 == null goto label21;

        $i1 = lengthof r12;

        $i0 = lengthof r1;

        if $i1 != $i0 goto label20;

        if r2 == null goto label03;

        $i6 = lengthof r12;

        $i5 = lengthof r2;

        if $i6 != $i5 goto label02;

        goto label03;

     label02:
        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("pids and scores arrays have different lengths!");

        throw $r10;

     label03:
        r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        entermonitor r3;

        i7 = 0;

     label04:
        $i8 = lengthof r12;

        if i7 >= $i8 goto label15;

        $r8 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        $i2 = r12[i7];

        r4 = virtualinvoke $r8.<com.android.server.am.ActivityManagerService$PidMap: com.android.server.am.ProcessRecord get(int)>($i2);

     label05:
        if r4 == null goto label13;

     label06:
        $r9 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.PendingStartActivityUids mPendingStartActivityUids>;

        $i4 = r4.<com.android.server.am.ProcessRecord: int uid>;

        $i3 = r12[i7];

        z0 = virtualinvoke $r9.<com.android.server.am.PendingStartActivityUids: boolean isPendingTopPid(int,int)>($i4, $i3);

     label07:
        if z0 == 0 goto label08;

        i9 = 2;

        goto label09;

     label08:
        i9 = virtualinvoke r4.<com.android.server.am.ProcessRecord: int getCurProcState()>();

     label09:
        r1[i7] = i9;

        if r2 == null goto label12;

        if z0 == 0 goto label10;

        i10 = -1;

        goto label11;

     label10:
        i10 = r4.<com.android.server.am.ProcessRecord: int curAdj>;

     label11:
        r2[i7] = i10;

     label12:
        goto label14;

     label13:
        r1[i7] = 20;

        if r2 == null goto label14;

        r2[i7] = -10000;

     label14:
        i7 = i7 + 1;

        goto label04;

     label15:
        exitmonitor r3;

     label16:
        return;

     label17:
        $r11 := @caughtexception;

     label18:
        exitmonitor r3;

     label19:
        throw $r11;

     label20:
        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("pids and states arrays have different lengths!");

        throw $r7;

     label21:
        $r6 = new java.lang.NullPointerException;

        specialinvoke $r6.<java.lang.NullPointerException: void <init>(java.lang.String)>("states");

        throw $r6;

     label22:
        $r5 = new java.lang.NullPointerException;

        specialinvoke $r5.<java.lang.NullPointerException: void <init>(java.lang.String)>("pids");

        throw $r5;

        catch java.lang.Throwable from label04 to label05 with label17;
        catch java.lang.Throwable from label06 to label07 with label17;
        catch java.lang.Throwable from label08 to label09 with label17;
        catch java.lang.Throwable from label10 to label11 with label17;
        catch java.lang.Throwable from label15 to label16 with label17;
        catch java.lang.Throwable from label18 to label19 with label17;
    }

    public java.util.List getProcessesInErrorState()
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, $i1, $i2, $i3, $i4, $i6, i7;
        com.android.server.am.ProcessRecord r1;
        boolean z0, z1, z3;
        com.android.server.am.ProcessList $r2, $r4;
        java.util.ArrayList $r3, $r5, r17, r18;
        java.lang.Object $r6;
        android.app.IApplicationThread $r7;
        java.lang.String $r9, $r15;
        java.lang.Throwable $r16;
        android.app.ActivityManager$ProcessErrorStateInfo r19;
        java.lang.StringBuilder r20;

        r0 := @this: com.android.server.am.ActivityManagerService;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("getProcessesInErrorState");

        r17 = null;

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i2 = staticinvoke <android.app.ActivityManager: int checkUidPermission(java.lang.String,int)>("android.permission.INTERACT_ACROSS_USERS_FULL", $i1);

        if $i2 != 0 goto label01;

        z3 = 1;

        goto label02;

     label01:
        z3 = 0;

     label02:
        $i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i0 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i3);

        entermonitor r0;

     label03:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r3 = $r2.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        $i4 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i7 = $i4 - 1;

     label04:
        if i7 < 0 goto label25;

     label05:
        $r4 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r5 = $r4.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i7);

        r1 = (com.android.server.am.ProcessRecord) $r6;

     label06:
        if z3 != 0 goto label09;

     label07:
        $i6 = r1.<com.android.server.am.ProcessRecord: int userId>;

        if $i6 == i0 goto label09;

     label08:
        r18 = r17;

        goto label24;

     label09:
        z0 = virtualinvoke r1.<com.android.server.am.ProcessRecord: boolean isCrashing()>();

        z1 = virtualinvoke r1.<com.android.server.am.ProcessRecord: boolean isNotResponding()>();

     label10:
        r18 = r17;

     label11:
        $r7 = r1.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r7 == null goto label24;

     label12:
        if z0 != 0 goto label13;

        r18 = r17;

        if z1 == 0 goto label24;

     label13:
        r19 = null;

        if z0 == 0 goto label16;

     label14:
        r19 = r1.<com.android.server.am.ProcessRecord: android.app.ActivityManager$ProcessErrorStateInfo crashingReport>;

     label15:
        goto label18;

     label16:
        if z1 == 0 goto label18;

     label17:
        r19 = r1.<com.android.server.am.ProcessRecord: android.app.ActivityManager$ProcessErrorStateInfo notRespondingReport>;

     label18:
        if r19 == null goto label22;

        r18 = r17;

        if r17 != null goto label20;

     label19:
        r18 = new java.util.ArrayList;

        specialinvoke r18.<java.util.ArrayList: void <init>(int)>(1);

     label20:
        interfaceinvoke r18.<java.util.List: boolean add(java.lang.Object)>(r19);

     label21:
        goto label24;

     label22:
        r20 = new java.lang.StringBuilder;

        specialinvoke r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Missing app error report, app = ");

        $r9 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" crashing = ");

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" notResponding = ");

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z1);

        $r15 = virtualinvoke r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r15);

     label23:
        r18 = r17;

     label24:
        i7 = i7 + -1;

        r17 = r18;

        goto label04;

     label25:
        exitmonitor r0;

     label26:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return r17;

     label27:
        $r16 := @caughtexception;

     label28:
        exitmonitor r0;

     label29:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r16;

        catch java.lang.Throwable from label03 to label04 with label27;
        catch java.lang.Throwable from label05 to label06 with label27;
        catch java.lang.Throwable from label07 to label08 with label27;
        catch java.lang.Throwable from label09 to label10 with label27;
        catch java.lang.Throwable from label11 to label12 with label27;
        catch java.lang.Throwable from label14 to label15 with label27;
        catch java.lang.Throwable from label17 to label18 with label27;
        catch java.lang.Throwable from label19 to label20 with label27;
        catch java.lang.Throwable from label20 to label21 with label27;
        catch java.lang.Throwable from label22 to label23 with label27;
        catch java.lang.Throwable from label25 to label26 with label27;
        catch java.lang.Throwable from label28 to label29 with label27;
    }

    public java.lang.String getProviderMimeType(android.net.Uri, int)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1, $r8, $r13, r28;
        int i0, i1, i2, i3;
        com.android.server.am.UserController $r2;
        boolean $z0, z1;
        android.content.pm.ProviderInfo $r3;
        com.android.server.am.ActivityManagerService$MainHandler $r4, $r6, $r21;
        android.content.IContentProvider $r5;
        java.lang.Exception $r7, $r16, r32;
        java.lang.Throwable $r9, $r10, $r11, $r14, $r15, $r18, $r19, $r20, r31;
        android.os.RemoteException $r12, $r17, r33;
        android.net.Uri r22;
        long l4;
        android.app.ContentProviderHolder r23, r24;
        android.os.IBinder r25;
        android.content.ComponentName r26;
        com.android.server.am.ActivityManagerService$14 r27;
        java.lang.StringBuilder r35, r37;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r22 := @parameter0: android.net.Uri;

        i3 := @parameter1: int;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("getProviderMimeType");

        r1 = virtualinvoke r22.<android.net.Uri: java.lang.String getAuthority()>();

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.UserController mUserController>;

        i2 = virtualinvoke $r2.<com.android.server.am.UserController: int unsafeConvertIncomingUser(int)>(i3);

        $z0 = specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean canClearIdentity(int,int,int)>(i1, i0, i2);

        if $z0 == 0 goto label01;

        l4 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        z1 = 1;

        goto label02;

     label01:
        l4 = 0L;

        z1 = 0;

     label02:
        r23 = null;

     label03:
        r24 = specialinvoke r0.<com.android.server.am.ActivityManagerService: android.app.ContentProviderHolder getContentProviderExternalUnchecked(java.lang.String,android.os.IBinder,int,java.lang.String,int)>(r1, null, i0, "*getmimetype*", i2);

     label04:
        if r24 == null goto label20;

     label05:
        r25 = r24.<android.app.ContentProviderHolder: android.os.IBinder connection>;

        $r3 = r24.<android.app.ContentProviderHolder: android.content.pm.ProviderInfo info>;

        r26 = virtualinvoke $r3.<android.content.pm.ProviderInfo: android.content.ComponentName getComponentName()>();

        r27 = new com.android.server.am.ActivityManagerService$14;

        specialinvoke r27.<com.android.server.am.ActivityManagerService$14: void <init>(com.android.server.am.ActivityManagerService,android.content.ComponentName,android.os.IBinder)>(r0, r26, r25);

        $r4 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        virtualinvoke $r4.<com.android.server.am.ActivityManagerService$MainHandler: boolean postDelayed(java.lang.Runnable,long)>(r27, 1000L);

     label06:
        $r5 = r24.<android.app.ContentProviderHolder: android.content.IContentProvider provider>;

        r28 = interfaceinvoke $r5.<android.content.IContentProvider: java.lang.String getType(android.net.Uri)>(r22);

     label07:
        $r6 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        virtualinvoke $r6.<com.android.server.am.ActivityManagerService$MainHandler: void removeCallbacks(java.lang.Runnable)>(r27);

     label08:
        if z1 != 0 goto label09;

        l4 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label09:
        if r24 == null goto label13;

     label10:
        specialinvoke r0.<com.android.server.am.ActivityManagerService: void removeContentProviderExternalUnchecked(java.lang.String,android.os.IBinder,int)>(r1, null, i2);

     label11:
        goto label13;

     label12:
        $r9 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l4);

        throw $r9;

     label13:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l4);

        return r28;

     label14:
        $r20 := @caughtexception;

     label15:
        $r21 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        virtualinvoke $r21.<com.android.server.am.ActivityManagerService$MainHandler: void removeCallbacks(java.lang.Runnable)>(r27);

     label16:
        throw $r20;

     label17:
        $r14 := @caughtexception;

        r31 = $r14;

        r23 = r24;

        goto label61;

     label18:
        $r16 := @caughtexception;

        r32 = $r16;

        goto label29;

     label19:
        $r17 := @caughtexception;

        r33 = $r17;

        goto label45;

     label20:
        if z1 != 0 goto label21;

        l4 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label21:
        if r24 == null goto label25;

     label22:
        specialinvoke r0.<com.android.server.am.ActivityManagerService: void removeContentProviderExternalUnchecked(java.lang.String,android.os.IBinder,int)>(r1, null, i2);

     label23:
        goto label25;

     label24:
        $r11 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l4);

        throw $r11;

     label25:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l4);

        return null;

     label26:
        $r15 := @caughtexception;

        r31 = $r15;

        goto label61;

     label27:
        $r7 := @caughtexception;

        r32 = $r7;

        r24 = null;

        goto label29;

     label28:
        $r12 := @caughtexception;

        r33 = $r12;

        r24 = null;

        goto label45;

     label29:
        r23 = r24;

     label30:
        r35 = new java.lang.StringBuilder;

     label31:
        r23 = r24;

     label32:
        specialinvoke r35.<java.lang.StringBuilder: void <init>()>();

     label33:
        r23 = r24;

     label34:
        virtualinvoke r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception while determining type of ");

     label35:
        r23 = r24;

     label36:
        virtualinvoke r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r22);

     label37:
        r23 = r24;

     label38:
        $r8 = virtualinvoke r35.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r8, r32);

     label39:
        if z1 != 0 goto label40;

        l4 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label40:
        if r24 == null goto label44;

     label41:
        specialinvoke r0.<com.android.server.am.ActivityManagerService: void removeContentProviderExternalUnchecked(java.lang.String,android.os.IBinder,int)>(r1, null, i2);

     label42:
        goto label44;

     label43:
        $r18 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l4);

        throw $r18;

     label44:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l4);

        return null;

     label45:
        r23 = r24;

     label46:
        r37 = new java.lang.StringBuilder;

     label47:
        r23 = r24;

     label48:
        specialinvoke r37.<java.lang.StringBuilder: void <init>()>();

     label49:
        r23 = r24;

     label50:
        virtualinvoke r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Content provider dead retrieving ");

     label51:
        r23 = r24;

     label52:
        virtualinvoke r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r22);

     label53:
        r23 = r24;

     label54:
        $r13 = virtualinvoke r37.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r13, r33);

     label55:
        if z1 != 0 goto label56;

        l4 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label56:
        if r24 == null goto label60;

     label57:
        specialinvoke r0.<com.android.server.am.ActivityManagerService: void removeContentProviderExternalUnchecked(java.lang.String,android.os.IBinder,int)>(r1, null, i2);

     label58:
        goto label60;

     label59:
        $r10 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l4);

        throw $r10;

     label60:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l4);

        return null;

     label61:
        if z1 != 0 goto label62;

        l4 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label62:
        if r23 == null goto label66;

     label63:
        specialinvoke r0.<com.android.server.am.ActivityManagerService: void removeContentProviderExternalUnchecked(java.lang.String,android.os.IBinder,int)>(r1, null, i2);

     label64:
        goto label66;

     label65:
        $r19 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l4);

        throw $r19;

     label66:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l4);

        throw r31;

        catch android.os.RemoteException from label03 to label04 with label28;
        catch java.lang.Exception from label03 to label04 with label27;
        catch java.lang.Throwable from label03 to label04 with label26;
        catch android.os.RemoteException from label05 to label06 with label19;
        catch java.lang.Exception from label05 to label06 with label18;
        catch java.lang.Throwable from label05 to label06 with label17;
        catch java.lang.Throwable from label06 to label07 with label14;
        catch android.os.RemoteException from label07 to label08 with label19;
        catch java.lang.Exception from label07 to label08 with label18;
        catch java.lang.Throwable from label07 to label08 with label17;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch android.os.RemoteException from label15 to label16 with label19;
        catch java.lang.Exception from label15 to label16 with label18;
        catch java.lang.Throwable from label15 to label16 with label17;
        catch android.os.RemoteException from label16 to label17 with label19;
        catch java.lang.Exception from label16 to label17 with label18;
        catch java.lang.Throwable from label16 to label17 with label17;
        catch java.lang.Throwable from label22 to label23 with label24;
        catch java.lang.Throwable from label30 to label31 with label26;
        catch java.lang.Throwable from label32 to label33 with label26;
        catch java.lang.Throwable from label34 to label35 with label26;
        catch java.lang.Throwable from label36 to label37 with label26;
        catch java.lang.Throwable from label38 to label39 with label26;
        catch java.lang.Throwable from label41 to label42 with label43;
        catch java.lang.Throwable from label46 to label47 with label26;
        catch java.lang.Throwable from label48 to label49 with label26;
        catch java.lang.Throwable from label50 to label51 with label26;
        catch java.lang.Throwable from label52 to label53 with label26;
        catch java.lang.Throwable from label54 to label55 with label26;
        catch java.lang.Throwable from label57 to label58 with label59;
        catch java.lang.Throwable from label63 to label64 with label65;
    }

    public void getProviderMimeTypeAsync(android.net.Uri, int, android.os.RemoteCallback)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, i2, i3;
        android.os.RemoteCallback r1, r3;
        android.content.IContentProvider r2;
        com.android.server.am.UserController $r4;
        boolean $z0;
        android.os.Bundle $r5, $r10;
        android.os.RemoteException $r6;
        java.lang.String $r9, r13;
        java.lang.Throwable $r11;
        android.net.Uri r12;
        long l5;
        android.app.ContentProviderHolder r14;
        com.android.server.am._$$Lambda$ActivityManagerService$Fbs0C_KjUpE0imxFftpdBfeTJpg r15;
        java.lang.StringBuilder r18;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r12 := @parameter0: android.net.Uri;

        i0 := @parameter1: int;

        r1 := @parameter2: android.os.RemoteCallback;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("getProviderMimeTypeAsync");

        r13 = virtualinvoke r12.<android.net.Uri: java.lang.String getAuthority()>();

        i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i2 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r4 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.UserController mUserController>;

        i3 = virtualinvoke $r4.<com.android.server.am.UserController: int unsafeConvertIncomingUser(int)>(i0);

        $z0 = specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean canClearIdentity(int,int,int)>(i2, i1, i0);

        if $z0 == 0 goto label01;

        l5 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        goto label02;

     label01:
        l5 = 0L;

     label02:
        r14 = specialinvoke r0.<com.android.server.am.ActivityManagerService: android.app.ContentProviderHolder getContentProviderExternalUnchecked(java.lang.String,android.os.IBinder,int,java.lang.String,int)>(r13, null, i1, "*getmimetype*", i3);

     label03:
        if r14 == null goto label06;

     label04:
        r2 = r14.<android.app.ContentProviderHolder: android.content.IContentProvider provider>;

        r3 = new android.os.RemoteCallback;

        r15 = new com.android.server.am._$$Lambda$ActivityManagerService$Fbs0C_KjUpE0imxFftpdBfeTJpg;

        specialinvoke r15.<com.android.server.am._$$Lambda$ActivityManagerService$Fbs0C_KjUpE0imxFftpdBfeTJpg: void <init>(com.android.server.am.ActivityManagerService,java.lang.String,int,android.os.RemoteCallback)>(r0, r13, i3, r1);

        specialinvoke r3.<android.os.RemoteCallback: void <init>(android.os.RemoteCallback$OnResultListener)>(r15);

        interfaceinvoke r2.<android.content.IContentProvider: void getTypeAsync(android.net.Uri,android.os.RemoteCallback)>(r12, r3);

     label05:
        goto label07;

     label06:
        $r5 = <android.os.Bundle: android.os.Bundle EMPTY>;

        virtualinvoke r1.<android.os.RemoteCallback: void sendResult(android.os.Bundle)>($r5);

     label07:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l5);

        goto label12;

     label08:
        $r11 := @caughtexception;

        goto label13;

     label09:
        $r6 := @caughtexception;

     label10:
        r18 = new java.lang.StringBuilder;

        specialinvoke r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Content provider dead retrieving ");

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r12);

        $r9 = virtualinvoke r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r9, $r6);

        $r10 = <android.os.Bundle: android.os.Bundle EMPTY>;

        virtualinvoke r1.<android.os.RemoteCallback: void sendResult(android.os.Bundle)>($r10);

     label11:
        goto label07;

     label12:
        return;

     label13:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l5);

        throw $r11;

        catch android.os.RemoteException from label02 to label03 with label09;
        catch java.lang.Throwable from label02 to label03 with label08;
        catch android.os.RemoteException from label04 to label05 with label09;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch android.os.RemoteException from label06 to label07 with label09;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label10 to label11 with label08;
    }

    public android.content.pm.ParceledListSlice getRecentTasks(int, int, int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, i2;
        com.android.server.wm.ActivityTaskManagerService $r1;
        android.content.pm.ParceledListSlice $r2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerService mActivityTaskManager>;

        $r2 = virtualinvoke $r1.<com.android.server.wm.ActivityTaskManagerService: android.content.pm.ParceledListSlice getRecentTasks(int,int,int)>(i0, i1, i2);

        return $r2;
    }

    com.android.server.am.ProcessRecord getRecordForAppLocked(android.app.IApplicationThread)
    {
        com.android.server.am.ActivityManagerService r0;
        android.util.ArrayMap r1;
        android.util.SparseArray r2;
        com.android.server.am.ProcessList $r3, $r4;
        com.android.server.am.ProcessList$MyProcessMap $r5;
        int $i0, $i1, i3, i4;
        java.lang.Object $r6, $r7;
        android.app.IApplicationThread $r8, $r9, r15;
        android.os.IBinder $r10, r17;
        java.lang.StringBuilder $r11;
        java.lang.String $r14;
        com.android.server.am.ProcessRecord r16, r18;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r15 := @parameter0: android.app.IApplicationThread;

        if r15 != null goto label1;

        return null;

     label1:
        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        r16 = virtualinvoke $r3.<com.android.server.am.ProcessList: com.android.server.am.ProcessRecord getLRURecordForAppLocked(android.app.IApplicationThread)>(r15);

        if r16 == null goto label2;

        return r16;

     label2:
        r17 = interfaceinvoke r15.<android.app.IApplicationThread: android.os.IBinder asBinder()>();

        $r4 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r5 = $r4.<com.android.server.am.ProcessList: com.android.server.am.ProcessList$MyProcessMap mProcessNames>;

        r1 = virtualinvoke $r5.<com.android.server.am.ProcessList$MyProcessMap: android.util.ArrayMap getMap()>();

        $i0 = virtualinvoke r1.<android.util.ArrayMap: int size()>();

        i3 = $i0 - 1;

     label3:
        if i3 < 0 goto label7;

        $r6 = virtualinvoke r1.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i3);

        r2 = (android.util.SparseArray) $r6;

        $i1 = virtualinvoke r2.<android.util.SparseArray: int size()>();

        i4 = $i1 - 1;

     label4:
        if i4 < 0 goto label6;

        $r7 = virtualinvoke r2.<android.util.SparseArray: java.lang.Object valueAt(int)>(i4);

        r18 = (com.android.server.am.ProcessRecord) $r7;

        $r8 = r18.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r8 == null goto label5;

        $r9 = r18.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r10 = interfaceinvoke $r9.<android.app.IApplicationThread: android.os.IBinder asBinder()>();

        if $r10 != r17 goto label5;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getRecordForApp: exists in name list but not in LRU list: ");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r18);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("ActivityManager", $r14);

        return r18;

     label5:
        i4 = i4 + -1;

        goto label4;

     label6:
        i3 = i3 + -1;

        goto label3;

     label7:
        return null;
    }

    public java.util.List getRunningAppProcesses()
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, i2, $i3, $i4;
        boolean z0, z1;
        android.content.pm.PackageManagerInternal $r1;
        com.android.server.wm.ActivityTaskManagerInternal $r2;
        com.android.server.am.ProcessList $r3;
        java.lang.Throwable $r4;
        java.util.List r5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("getRunningAppProcesses");

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r1 = r0.<com.android.server.am.ActivityManagerService: android.content.pm.PackageManagerInternal mPackageManagerInt>;

        i1 = virtualinvoke $r1.<android.content.pm.PackageManagerInternal: int getUidTargetSdkVersion(int)>(i0);

        $i3 = staticinvoke <android.app.ActivityManager: int checkUidPermission(java.lang.String,int)>("android.permission.INTERACT_ACROSS_USERS_FULL", i0);

        if $i3 != 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        i2 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerInternal mAtmInternal>;

        $i4 = staticinvoke <android.os.Binder: int getCallingPid()>();

        z0 = virtualinvoke $r2.<com.android.server.wm.ActivityTaskManagerInternal: boolean isGetTasksAllowed(java.lang.String,int,int)>("getRunningAppProcesses", $i4, i0);

        entermonitor r0;

     label3:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        r5 = virtualinvoke $r3.<com.android.server.am.ProcessList: java.util.List getRunningAppProcessesLocked(boolean,int,boolean,int,int)>(z1, i2, z0, i0, i1);

        exitmonitor r0;

     label4:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return r5;

     label5:
        $r4 := @caughtexception;

     label6:
        exitmonitor r0;

     label7:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r4;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public java.util.List getRunningExternalApplications()
    {
        com.android.server.am.ActivityManagerService r0;
        boolean z0, $z1;
        int i0, $i1, $i2, $i3, $i4, i5;
        java.util.ArrayList $r2;
        java.util.HashSet $r3;
        java.lang.Object $r4, $r5;
        java.lang.String[] $r6, r13;
        java.lang.String $r7, r16;
        android.os.RemoteException $r8;
        java.util.List r9;
        java.util.Iterator r11, r15;
        android.app.ActivityManager$RunningAppProcessInfo r12;
        android.content.pm.IPackageManager r14;
        android.content.pm.ApplicationInfo r17;

        r0 := @this: com.android.server.am.ActivityManagerService;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("getRunningExternalApplications");

        r9 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: java.util.List getRunningAppProcesses()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        if r9 == null goto label10;

        $i1 = interfaceinvoke r9.<java.util.List: int size()>();

        if $i1 <= 0 goto label10;

        $r3 = new java.util.HashSet;

        specialinvoke $r3.<java.util.HashSet: void <init>()>();

        r11 = interfaceinvoke r9.<java.util.List: java.util.Iterator iterator()>();

     label01:
        z0 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>();

        i5 = 0;

        if z0 == 0 goto label04;

        $r5 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>();

        r12 = (android.app.ActivityManager$RunningAppProcessInfo) $r5;

        $r6 = r12.<android.app.ActivityManager$RunningAppProcessInfo: java.lang.String[] pkgList>;

        if $r6 == null goto label03;

        r13 = r12.<android.app.ActivityManager$RunningAppProcessInfo: java.lang.String[] pkgList>;

        i0 = lengthof r13;

     label02:
        if i5 >= i0 goto label03;

        $r7 = r13[i5];

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r7);

        i5 = i5 + 1;

        goto label02;

     label03:
        goto label01;

     label04:
        r14 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        r15 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label05:
        $z1 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label10;

        $r4 = interfaceinvoke r15.<java.util.Iterator: java.lang.Object next()>();

        r16 = (java.lang.String) $r4;

     label06:
        $i2 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        r17 = interfaceinvoke r14.<android.content.pm.IPackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int,int)>(r16, 0, $i2);

        $i3 = r17.<android.content.pm.ApplicationInfo: int flags>;

        $i4 = $i3 & 262144;

        if $i4 == 0 goto label07;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r17);

     label07:
        goto label09;

     label08:
        $r8 := @caughtexception;

     label09:
        goto label05;

     label10:
        return $r2;

        catch android.os.RemoteException from label06 to label07 with label08;
    }

    public android.app.PendingIntent getRunningServiceControlPanel(android.content.ComponentName)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ActiveServices $r1;
        java.lang.Throwable $r2;
        android.content.ComponentName r3;
        android.app.PendingIntent r4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r3 := @parameter0: android.content.ComponentName;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("getRunningServiceControlPanel");

        entermonitor r0;

     label1:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveServices mServices>;

        r4 = virtualinvoke $r1.<com.android.server.am.ActiveServices: android.app.PendingIntent getRunningServiceControlPanelLocked(android.content.ComponentName)>(r3);

        exitmonitor r0;

     label2:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return r4;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public int[] getRunningUserIds()
    {
        com.android.server.am.ActivityManagerService r0;
        int $i0, $i1, $i2;
        java.lang.StringBuilder $r1;
        java.lang.SecurityException $r8;
        com.android.server.am.UserController $r9;
        int[] $r10;
        java.lang.String r12;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $i0 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.INTERACT_ACROSS_USERS");

        if $i0 != 0 goto label1;

        $r9 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.UserController mUserController>;

        $r10 = virtualinvoke $r9.<com.android.server.am.UserController: int[] getStartedUserArray()>();

        return $r10;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: isUserRunning() from pid=");

        $i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.INTERACT_ACROSS_USERS");

        r12 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r12);

        $r8 = new java.lang.SecurityException;

        specialinvoke $r8.<java.lang.SecurityException: void <init>(java.lang.String)>(r12);

        throw $r8;
    }

    public java.util.List getServices(int, int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, i2, $i3, $i4;
        boolean z0, z1;
        com.android.server.wm.ActivityTaskManagerInternal $r1;
        com.android.server.am.ActiveServices $r2;
        java.lang.Throwable $r3;
        java.util.List r4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("getServices");

        i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i3 = staticinvoke <android.app.ActivityManager: int checkUidPermission(java.lang.String,int)>("android.permission.INTERACT_ACROSS_USERS_FULL", i2);

        if $i3 != 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        $r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerInternal mAtmInternal>;

        $i4 = staticinvoke <android.os.Binder: int getCallingPid()>();

        z0 = virtualinvoke $r1.<com.android.server.wm.ActivityTaskManagerInternal: boolean isGetTasksAllowed(java.lang.String,int,int)>("getServices", $i4, i2);

        entermonitor r0;

     label3:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveServices mServices>;

        r4 = virtualinvoke $r2.<com.android.server.am.ActiveServices: java.util.List getRunningServiceInfoLocked(int,int,int,boolean,boolean)>(i0, i1, i2, z0, z1);

        exitmonitor r0;

     label4:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return r4;

     label5:
        $r3 := @caughtexception;

     label6:
        exitmonitor r0;

     label7:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r3;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    java.lang.String getStartedUserState(int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, $i1;
        com.android.server.am.UserController $r1;
        com.android.server.am.UserState $r2;
        java.lang.String $r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.UserController mUserController>;

        $r2 = virtualinvoke $r1.<com.android.server.am.UserController: com.android.server.am.UserState getStartedUserState(int)>(i0);

        $i1 = $r2.<com.android.server.am.UserState: int state>;

        $r3 = staticinvoke <com.android.server.am.UserState: java.lang.String stateToString(int)>($i1);

        return $r3;
    }

    public java.lang.String getTagForIntentSender(android.content.IIntentSender, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1, r6;
        boolean $z0;
        java.lang.Throwable $r2;
        java.lang.ClassCastException $r3;
        android.content.IIntentSender r4;
        com.android.server.am.PendingIntentRecord r5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r4 := @parameter0: android.content.IIntentSender;

        r1 := @parameter1: java.lang.String;

        $z0 = r4 instanceof com.android.server.am.PendingIntentRecord;

        if $z0 != 0 goto label1;

        return null;

     label1:
        r5 = (com.android.server.am.PendingIntentRecord) r4;

        entermonitor r0;

     label2:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        r6 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: java.lang.String getTagForIntentSenderLocked(com.android.server.am.PendingIntentRecord,java.lang.String)>(r5, r1);

        exitmonitor r0;

     label3:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return r6;

     label4:
        $r2 := @caughtexception;

     label5:
        exitmonitor r0;

     label6:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r2;

     label7:
        $r3 := @caughtexception;

        return null;

        catch java.lang.ClassCastException from label1 to label2 with label7;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
        catch java.lang.ClassCastException from label6 to label7 with label7;
    }

    java.lang.String getTagForIntentSenderLocked(com.android.server.am.PendingIntentRecord, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.PendingIntentRecord r1;
        android.content.Intent r2;
        com.android.server.am.PendingIntentRecord$Key $r4;
        java.lang.String $r5, $r6, $r10, $r13, $r14, $r15, $r16, r17, r19;
        android.content.ComponentName $r7, $r9;
        boolean $z0;
        java.lang.StringBuilder $r18;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.PendingIntentRecord;

        r17 := @parameter1: java.lang.String;

        $r4 = r1.<com.android.server.am.PendingIntentRecord: com.android.server.am.PendingIntentRecord$Key key>;

        r2 = $r4.<com.android.server.am.PendingIntentRecord$Key: android.content.Intent requestIntent>;

        if r2 == null goto label7;

        $r5 = r1.<com.android.server.am.PendingIntentRecord: java.lang.String lastTag>;

        if $r5 == null goto label2;

        $r13 = r1.<com.android.server.am.PendingIntentRecord: java.lang.String lastTagPrefix>;

        if $r13 != r17 goto label2;

        $r14 = r1.<com.android.server.am.PendingIntentRecord: java.lang.String lastTagPrefix>;

        if $r14 == null goto label1;

        $r16 = r1.<com.android.server.am.PendingIntentRecord: java.lang.String lastTagPrefix>;

        $z0 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>(r17);

        if $z0 == 0 goto label2;

     label1:
        $r15 = r1.<com.android.server.am.PendingIntentRecord: java.lang.String lastTag>;

        return $r15;

     label2:
        r1.<com.android.server.am.PendingIntentRecord: java.lang.String lastTagPrefix> = r17;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>(int)>(128);

        if r17 == null goto label3;

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r17);

     label3:
        $r6 = virtualinvoke r2.<android.content.Intent: java.lang.String getAction()>();

        if $r6 == null goto label4;

        $r10 = virtualinvoke r2.<android.content.Intent: java.lang.String getAction()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        goto label6;

     label4:
        $r7 = virtualinvoke r2.<android.content.Intent: android.content.ComponentName getComponent()>();

        if $r7 == null goto label5;

        $r9 = virtualinvoke r2.<android.content.Intent: android.content.ComponentName getComponent()>();

        virtualinvoke $r9.<android.content.ComponentName: void appendShortString(java.lang.StringBuilder)>($r18);

        goto label6;

     label5:
        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("?");

     label6:
        r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        r1.<com.android.server.am.PendingIntentRecord: java.lang.String lastTag> = r19;

        return r19;

     label7:
        return null;
    }

    public android.graphics.Rect getTaskBounds(int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0;
        com.android.server.wm.ActivityTaskManagerService $r1;
        android.graphics.Rect $r2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerService mActivityTaskManager>;

        $r2 = virtualinvoke $r1.<com.android.server.wm.ActivityTaskManagerService: android.graphics.Rect getTaskBounds(int)>(i0);

        return $r2;
    }

    public int getTaskForActivity(android.os.IBinder, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        android.os.IBinder r1;
        boolean z0;
        com.android.server.wm.ActivityTaskManagerService $r2;
        int $i0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        z0 := @parameter1: boolean;

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerService mActivityTaskManager>;

        $i0 = virtualinvoke $r2.<com.android.server.wm.ActivityTaskManagerService: int getTaskForActivity(android.os.IBinder,boolean)>(r1, z0);

        return $i0;
    }

    public android.app.ActivityManager$TaskSnapshot getTaskSnapshot(int, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0;
        boolean z0;
        com.android.server.wm.ActivityTaskManagerService $r1;
        android.app.ActivityManager$TaskSnapshot $r2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerService mActivityTaskManager>;

        $r2 = virtualinvoke $r1.<com.android.server.wm.ActivityTaskManagerService: android.app.ActivityManager$TaskSnapshot getTaskSnapshot(int,boolean)>(i0, z0);

        return $r2;
    }

    public java.util.List getTasks(int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0;
        com.android.server.wm.ActivityTaskManagerService $r1;
        java.util.List $r2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerService mActivityTaskManager>;

        $r2 = virtualinvoke $r1.<com.android.server.wm.ActivityTaskManagerService: java.util.List getTasks(int)>(i0);

        return $r2;
    }

    com.android.server.am.ProcessRecord getTopAppLocked()
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1, $r3, r11, $r12;
        long l0;
        int $i1, $i2, i3;
        com.android.server.am.BatteryStatsService $r2, $r4;
        boolean $z0;
        android.content.pm.ApplicationInfo $r5;
        java.lang.Object $r6;
        java.lang.Throwable $r7;
        com.android.server.wm.ActivityTaskManagerInternal r8;
        com.android.server.am.ProcessRecord r9;
        com.android.server.wm.WindowProcessController r10;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r8 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerInternal mAtmInternal>;

        r9 = null;

        if r8 == null goto label01;

        r10 = virtualinvoke r8.<com.android.server.wm.ActivityTaskManagerInternal: com.android.server.wm.WindowProcessController getTopApp()>();

        goto label02;

     label01:
        r10 = null;

     label02:
        if r10 == null goto label03;

        $r6 = r10.<com.android.server.wm.WindowProcessController: java.lang.Object mOwner>;

        r9 = (com.android.server.am.ProcessRecord) $r6;

     label03:
        if r9 == null goto label04;

        r11 = r9.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r5 = r9.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        i3 = $r5.<android.content.pm.ApplicationInfo: int uid>;

        goto label05;

     label04:
        r11 = null;

        i3 = -1;

     label05:
        $i1 = r0.<com.android.server.am.ActivityManagerService: int mCurResumedUid>;

        if i3 != $i1 goto label06;

        r1 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mCurResumedPackage>;

        if r11 == r1 goto label12;

        if r11 == null goto label06;

        $z0 = virtualinvoke r11.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 != 0 goto label12;

     label06:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label07:
        $r12 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mCurResumedPackage>;

        if $r12 == null goto label08;

        $r4 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        $r3 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mCurResumedPackage>;

        $i2 = r0.<com.android.server.am.ActivityManagerService: int mCurResumedUid>;

        virtualinvoke $r4.<com.android.server.am.BatteryStatsService: void noteEvent(int,java.lang.String,int)>(16387, $r3, $i2);

     label08:
        r0.<com.android.server.am.ActivityManagerService: java.lang.String mCurResumedPackage> = r11;

        r0.<com.android.server.am.ActivityManagerService: int mCurResumedUid> = i3;

     label09:
        if r11 == null goto label11;

     label10:
        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        virtualinvoke $r2.<com.android.server.am.BatteryStatsService: void noteEvent(int,java.lang.String,int)>(32771, r11, i3);

     label11:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

     label12:
        return r9;

     label13:
        $r7 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r7;

        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label10 to label11 with label13;
    }

    public int getUidForIntentSender(android.content.IIntentSender)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0;
        boolean $z0;
        com.android.server.am.PendingIntentRecord $r1;
        java.lang.ClassCastException $r2;
        android.content.IIntentSender r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r3 := @parameter0: android.content.IIntentSender;

        $z0 = r3 instanceof com.android.server.am.PendingIntentRecord;

        if $z0 == 0 goto label4;

     label1:
        $r1 = (com.android.server.am.PendingIntentRecord) r3;

        i0 = $r1.<com.android.server.am.PendingIntentRecord: int uid>;

     label2:
        return i0;

     label3:
        $r2 := @caughtexception;

     label4:
        return -1;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    public int getUidProcessState(int, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        boolean $z0;
        com.android.server.am.ProcessList $r1;
        java.lang.Throwable $r2;
        int i0, i1;
        java.lang.String r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        r3 := @parameter1: java.lang.String;

        $z0 = specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean hasUsageStatsPermission(java.lang.String)>(r3);

        if $z0 != 0 goto label1;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.PACKAGE_USAGE_STATS", "getUidProcessState");

     label1:
        entermonitor r0;

     label2:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        i1 = virtualinvoke $r1.<com.android.server.am.ProcessList: int getUidProcStateLocked(int)>(i0);

        exitmonitor r0;

     label3:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return i1;

     label4:
        $r2 := @caughtexception;

     label5:
        exitmonitor r0;

     label6:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r2;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    int getUidState(int)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessList $r2;
        java.lang.Throwable $r3;
        int i0, i1;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        entermonitor r0;

     label1:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        i1 = virtualinvoke $r2.<com.android.server.am.ProcessList: int getUidProcStateLocked(int)>(i0);

        exitmonitor r0;

     label2:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return i1;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void grantImplicitAccess(int, android.content.Intent, int, int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, i2;
        android.content.Intent r1;
        android.content.pm.PackageManagerInternal $r2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.Intent;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r2 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: android.content.pm.PackageManagerInternal getPackageManagerInternalLocked()>();

        virtualinvoke $r2.<android.content.pm.PackageManagerInternal: void grantImplicitAccess(int,android.content.Intent,int,int,boolean)>(i0, r1, i2, i1, 1);

        return;
    }

    public void grantUriPermission(android.app.IApplicationThread, java.lang.String, android.net.Uri, int, int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, $i3, $i4, $i5;
        com.android.server.am.ProcessRecord r2;
        com.android.server.uri.GrantUri $r3;
        java.lang.String $r8, r15;
        com.android.server.uri.UriGrantsManagerInternal $r11, $r12;
        java.lang.Throwable $r13;
        android.app.IApplicationThread r14;
        android.net.Uri r16;
        android.content.Intent r17;
        com.android.server.uri.NeededUriGrants r18;
        java.lang.IllegalArgumentException r19;
        java.lang.SecurityException r20;
        java.lang.StringBuilder r21;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r14 := @parameter0: android.app.IApplicationThread;

        r15 := @parameter1: java.lang.String;

        r16 := @parameter2: android.net.Uri;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("grantUriPermission");

        $r3 = new com.android.server.uri.GrantUri;

        specialinvoke $r3.<com.android.server.uri.GrantUri: void <init>(int,android.net.Uri,int)>(i1, r16, i0);

        entermonitor r0;

     label1:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        r2 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord getRecordForAppLocked(android.app.IApplicationThread)>(r14);

     label2:
        if r2 == null goto label6;

        if r15 == null goto label5;

     label3:
        staticinvoke <com.android.internal.util.Preconditions: int checkFlagsArgument(int,int)>(i0, 195);

        r17 = new android.content.Intent;

        specialinvoke r17.<android.content.Intent: void <init>()>();

        virtualinvoke r17.<android.content.Intent: android.content.Intent setData(android.net.Uri)>(r16);

        virtualinvoke r17.<android.content.Intent: android.content.Intent setFlags(int)>(i0);

        $r11 = r0.<com.android.server.am.ActivityManagerService: com.android.server.uri.UriGrantsManagerInternal mUgmInternal>;

        $i4 = r2.<com.android.server.am.ProcessRecord: int uid>;

        $i3 = r2.<com.android.server.am.ProcessRecord: int uid>;

        $i5 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i3);

        r18 = interfaceinvoke $r11.<com.android.server.uri.UriGrantsManagerInternal: com.android.server.uri.NeededUriGrants checkGrantUriPermissionFromIntent(android.content.Intent,int,java.lang.String,int)>(r17, $i4, r15, $i5);

        $r12 = r0.<com.android.server.am.ActivityManagerService: com.android.server.uri.UriGrantsManagerInternal mUgmInternal>;

        interfaceinvoke $r12.<com.android.server.uri.UriGrantsManagerInternal: void grantUriPermissionUncheckedFromIntent(com.android.server.uri.NeededUriGrants,com.android.server.uri.UriPermissionOwner)>(r18, null);

        exitmonitor r0;

     label4:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label5:
        r19 = new java.lang.IllegalArgumentException;

        specialinvoke r19.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("null target");

        throw r19;

     label6:
        r20 = new java.lang.SecurityException;

        r21 = new java.lang.StringBuilder;

        specialinvoke r21.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to find app for caller ");

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r14);

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" when granting permission to uri ");

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r8 = virtualinvoke r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r20.<java.lang.SecurityException: void <init>(java.lang.String)>($r8);

        throw r20;

     label7:
        $r13 := @caughtexception;

     label8:
        exitmonitor r0;

     label9:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r13;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label6 to label7 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    final void handleAppDiedLocked(com.android.server.am.ProcessRecord, boolean, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1, $r6;
        boolean z0, z1, $z2;
        int i0;
        com.android.server.wm.ActivityTaskManagerInternal $r2;
        com.android.server.wm.WindowProcessController $r3;
        com.android.server.am._$$Lambda$ActivityManagerService$2afaFERxNQEnSdevJxY5plp1fS4 $r4;
        com.android.server.am.ActivityManagerService$ProfileData $r5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        i0 = r1.<com.android.server.am.ProcessRecord: int pid>;

        $z2 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean cleanUpApplicationRecordLocked(com.android.server.am.ProcessRecord,boolean,boolean,int,boolean)>(r1, z0, z1, -1, 0);

        if $z2 != 0 goto label1;

        if z0 != 0 goto label1;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void removeLruProcessLocked(com.android.server.am.ProcessRecord)>(r1);

        if i0 <= 0 goto label1;

        staticinvoke <com.android.server.am.ProcessList: void remove(int)>(i0);

     label1:
        $r5 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$ProfileData mProfileData>;

        $r6 = virtualinvoke $r5.<com.android.server.am.ActivityManagerService$ProfileData: com.android.server.am.ProcessRecord getProfileProc()>();

        if $r6 != r1 goto label2;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void clearProfilerLocked()>();

     label2:
        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerInternal mAtmInternal>;

        $r3 = virtualinvoke r1.<com.android.server.am.ProcessRecord: com.android.server.wm.WindowProcessController getWindowProcessController()>();

        $r4 = new com.android.server.am._$$Lambda$ActivityManagerService$2afaFERxNQEnSdevJxY5plp1fS4;

        specialinvoke $r4.<com.android.server.am._$$Lambda$ActivityManagerService$2afaFERxNQEnSdevJxY5plp1fS4: void <init>(com.android.server.am.ActivityManagerService,com.android.server.am.ProcessRecord)>(r0, r1);

        virtualinvoke $r2.<com.android.server.wm.ActivityTaskManagerInternal: void handleAppDied(com.android.server.wm.WindowProcessController,boolean,java.lang.Runnable)>($r3, z0, $r4);

        return;
    }

    public void handleApplicationCrash(android.os.IBinder, android.app.ApplicationErrorReport$ParcelableCrashInfo)
    {
        com.android.server.am.ActivityManagerService r0;
        android.app.ApplicationErrorReport$ParcelableCrashInfo r1;
        com.android.server.am.ProcessRecord r2;
        android.os.IBinder r3;
        java.lang.String r4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r3 := @parameter0: android.os.IBinder;

        r1 := @parameter1: android.app.ApplicationErrorReport$ParcelableCrashInfo;

        r2 = specialinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord findAppProcess(android.os.IBinder,java.lang.String)>(r3, "Crash");

        if r3 != null goto label1;

        r4 = "system_server";

        goto label3;

     label1:
        if r2 != null goto label2;

        r4 = "unknown";

        goto label3;

     label2:
        r4 = r2.<com.android.server.am.ProcessRecord: java.lang.String processName>;

     label3:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void handleApplicationCrashInner(java.lang.String,com.android.server.am.ProcessRecord,java.lang.String,android.app.ApplicationErrorReport$CrashInfo)>("crash", r2, r4, r1);

        return;
    }

    void handleApplicationCrashInner(java.lang.String, com.android.server.am.ProcessRecord, java.lang.String, android.app.ApplicationErrorReport$CrashInfo)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1, r3, $r7, $r8, $r9, $r11, $r13, $r17, r23, r24;
        com.android.server.am.ProcessRecord r2;
        android.app.ApplicationErrorReport$CrashInfo r4;
        int i0, i1, $i3, $i4, i5, i6, i7, i10, i11;
        android.content.pm.ApplicationInfo $r6, $r19, $r20, $r21, $r22;
        com.android.server.wm.WindowProcessController $r10;
        java.lang.StringBuilder $r12;
        com.android.server.am.AppErrors $r18;
        boolean $z0, $z1, $z2;
        byte b8, b9;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.android.server.am.ProcessRecord;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.app.ApplicationErrorReport$CrashInfo;

        i5 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i6 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i3);

        if r2 != null goto label01;

        i7 = -1;

        goto label02;

     label01:
        $r6 = r2.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        i7 = $r6.<android.content.pm.ApplicationInfo: int flags>;

     label02:
        $r9 = r4.<android.app.ApplicationErrorReport$CrashInfo: java.lang.String exceptionClassName>;

        $r8 = r4.<android.app.ApplicationErrorReport$CrashInfo: java.lang.String exceptionMessage>;

        $r7 = r4.<android.app.ApplicationErrorReport$CrashInfo: java.lang.String throwFileName>;

        $i4 = r4.<android.app.ApplicationErrorReport$CrashInfo: int throwLineNumber>;

        staticinvoke <com.android.server.am.EventLogTags: void writeAmCrash(int,int,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,int)>(i5, i6, r3, i7, $r9, $r8, $r7, $i4);

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

        if r2 == null goto label03;

        $r21 = r2.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        if $r21 == null goto label03;

        $r22 = r2.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        r23 = $r22.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        goto label04;

     label03:
        r23 = "";

     label04:
        if r2 == null goto label06;

        $r19 = r2.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        if $r19 == null goto label06;

        $r20 = r2.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $z1 = virtualinvoke $r20.<android.content.pm.ApplicationInfo: boolean isInstantApp()>();

        if $z1 == 0 goto label05;

        b8 = 2;

        goto label07;

     label05:
        b8 = 1;

        goto label07;

     label06:
        b8 = 0;

     label07:
        if r2 == null goto label09;

        $z0 = virtualinvoke r2.<com.android.server.am.ProcessRecord: boolean isInterestingToUserLocked()>();

        if $z0 == 0 goto label08;

        b9 = 2;

        goto label10;

     label08:
        b9 = 1;

        goto label10;

     label09:
        b9 = 0;

     label10:
        $z2 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("system_server");

        if $z2 == 0 goto label11;

        i10 = 3;

        goto label13;

     label11:
        if r2 == null goto label12;

        i10 = virtualinvoke r2.<com.android.server.am.ProcessRecord: int getProcessClassEnum()>();

        goto label13;

     label12:
        i10 = 0;

     label13:
        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int,java.lang.String,java.lang.String,int,java.lang.String,int,int,int)>(78, i0, r1, r3, i1, r23, b8, b9, i10);

        if r2 != null goto label14;

        i11 = 0;

        goto label15;

     label14:
        $r10 = virtualinvoke r2.<com.android.server.am.ProcessRecord: com.android.server.wm.WindowProcessController getWindowProcessController()>();

        i11 = virtualinvoke $r10.<com.android.server.wm.WindowProcessController: int computeRelaunchReason()>();

     label15:
        r24 = staticinvoke <com.android.server.wm.ActivityTaskManagerService: java.lang.String relaunchReasonToString(int)>(i11);

        $r11 = r4.<android.app.ApplicationErrorReport$CrashInfo: java.lang.String crashTag>;

        if $r11 != null goto label16;

        r4.<android.app.ApplicationErrorReport$CrashInfo: java.lang.String crashTag> = r24;

        goto label17;

     label16:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = r4.<android.app.ApplicationErrorReport$CrashInfo: java.lang.String crashTag>;

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r24);

        $r17 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        r4.<android.app.ApplicationErrorReport$CrashInfo: java.lang.String crashTag> = $r17;

     label17:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void addErrorToDropBox(java.lang.String,com.android.server.am.ProcessRecord,java.lang.String,java.lang.String,java.lang.String,com.android.server.am.ProcessRecord,java.lang.String,java.lang.String,java.io.File,android.app.ApplicationErrorReport$CrashInfo)>(r1, r2, r3, null, null, null, null, null, null, r4);

        $r18 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.AppErrors mAppErrors>;

        virtualinvoke $r18.<com.android.server.am.AppErrors: void crashApplication(com.android.server.am.ProcessRecord,android.app.ApplicationErrorReport$CrashInfo)>(r2, r4);

        return;
    }

    public void handleApplicationStrictModeViolation(android.os.IBinder, int, android.os.StrictMode$ViolationInfo)
    {
        com.android.server.am.ActivityManagerService r0;
        android.os.StrictMode$ViolationInfo r1;
        long l0;
        int $i1, $i3, $i4, i5, $i6, i7;
        com.android.server.am.AppErrorResult $r3;
        android.os.Handler $r7;
        java.lang.StringBuilder $r8;
        java.lang.String $r11;
        java.util.HashSet $r12, $r13, $r14, $r15, r21;
        boolean $z1, z3;
        java.lang.Throwable $r16, $r17;
        android.os.IBinder r18;
        com.android.server.am.ProcessRecord r19;
        java.lang.Integer r20;
        android.os.Message r23;
        java.util.HashMap r24;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r18 := @parameter0: android.os.IBinder;

        i5 := @parameter1: int;

        r1 := @parameter2: android.os.StrictMode$ViolationInfo;

        r19 = specialinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord findAppProcess(android.os.IBinder,java.lang.String)>(r18, "StrictMode");

        $i1 = 67108864 & i5;

        if $i1 == 0 goto label10;

        $i3 = virtualinvoke r1.<android.os.StrictMode$ViolationInfo: int hashCode()>();

        r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        z3 = 1;

        r21 = r0.<com.android.server.am.ActivityManagerService: java.util.HashSet mAlreadyLoggedViolatedStacks>;

        entermonitor r21;

     label01:
        $r12 = r0.<com.android.server.am.ActivityManagerService: java.util.HashSet mAlreadyLoggedViolatedStacks>;

        $z1 = virtualinvoke $r12.<java.util.HashSet: boolean contains(java.lang.Object)>(r20);

        if $z1 == 0 goto label03;

     label02:
        z3 = 0;

        goto label05;

     label03:
        $r13 = r0.<com.android.server.am.ActivityManagerService: java.util.HashSet mAlreadyLoggedViolatedStacks>;

        $i4 = virtualinvoke $r13.<java.util.HashSet: int size()>();

        if $i4 < 5000 goto label04;

        $r15 = r0.<com.android.server.am.ActivityManagerService: java.util.HashSet mAlreadyLoggedViolatedStacks>;

        virtualinvoke $r15.<java.util.HashSet: void clear()>();

     label04:
        $r14 = r0.<com.android.server.am.ActivityManagerService: java.util.HashSet mAlreadyLoggedViolatedStacks>;

        virtualinvoke $r14.<java.util.HashSet: boolean add(java.lang.Object)>(r20);

     label05:
        exitmonitor r21;

     label06:
        if z3 == 0 goto label10;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void logStrictModeViolationToDropBox(com.android.server.am.ProcessRecord,android.os.StrictMode$ViolationInfo)>(r19, r1);

        goto label10;

     label07:
        $r16 := @caughtexception;

     label08:
        exitmonitor r21;

     label09:
        throw $r16;

     label10:
        $i6 = 536870912 & i5;

        if $i6 == 0 goto label16;

        $r3 = new com.android.server.am.AppErrorResult;

        specialinvoke $r3.<com.android.server.am.AppErrorResult: void <init>()>();

        entermonitor r0;

     label11:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        r23 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        r23.<android.os.Message: int what> = 26;

        r24 = new java.util.HashMap;

        specialinvoke r24.<java.util.HashMap: void <init>()>();

        virtualinvoke r24.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("result", $r3);

        virtualinvoke r24.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("app", r19);

        virtualinvoke r24.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("info", r1);

        r23.<android.os.Message: java.lang.Object obj> = r24;

        $r7 = r0.<com.android.server.am.ActivityManagerService: android.os.Handler mUiHandler>;

        virtualinvoke $r7.<android.os.Handler: boolean sendMessage(android.os.Message)>(r23);

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        exitmonitor r0;

     label12:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        i7 = virtualinvoke $r3.<com.android.server.am.AppErrorResult: int get()>();

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handleApplicationStrictModeViolation; res=");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i7);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r11);

        goto label16;

     label13:
        $r17 := @caughtexception;

     label14:
        exitmonitor r0;

     label15:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r17;

     label16:
        return;

        catch java.lang.Throwable from label01 to label02 with label07;
        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.lang.Throwable from label04 to label05 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label08 to label09 with label07;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
    }

    public boolean handleApplicationWtf(android.os.IBinder, java.lang.String, boolean, android.app.ApplicationErrorReport$ParcelableCrashInfo, int)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1;
        boolean z0, $z2, $z3, z4, z5;
        android.app.ApplicationErrorReport$ParcelableCrashInfo r2;
        int i0, $i1, $i2, i3, i4;
        com.android.server.am.ActivityManagerService$19 $r3;
        com.android.server.am.ActivityManagerService$MainHandler $r4;
        com.android.server.am.AppErrors $r5;
        android.content.Context $r6;
        android.content.ContentResolver $r7;
        android.os.IBinder r8;
        com.android.server.am.ProcessRecord r9;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r8 := @parameter0: android.os.IBinder;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        r2 := @parameter3: android.app.ApplicationErrorReport$ParcelableCrashInfo;

        i3 := @parameter4: int;

        i4 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        if z0 != 0 goto label9;

        $i1 = staticinvoke <android.os.Process: int myPid()>();

        if i3 != $i1 goto label1;

        goto label9;

     label1:
        r9 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord handleApplicationWtfInner(int,int,android.os.IBinder,java.lang.String,android.app.ApplicationErrorReport$CrashInfo)>(i4, i0, r8, r1, r2);

        $z2 = <android.os.Build: boolean IS_ENG>;

        if $z2 != 0 goto label3;

        $r6 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r7 = virtualinvoke $r6.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i2 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>($r7, "wtf_is_fatal", 0);

        if $i2 == 0 goto label2;

        goto label3;

     label2:
        z4 = 0;

        goto label4;

     label3:
        z4 = 1;

     label4:
        if r9 == null goto label6;

        $z3 = virtualinvoke r9.<com.android.server.am.ProcessRecord: boolean isPersistent()>();

        if $z3 == 0 goto label5;

        goto label6;

     label5:
        z5 = 0;

        goto label7;

     label6:
        z5 = 1;

     label7:
        if z4 == 0 goto label8;

        if z5 != 0 goto label8;

        $r5 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.AppErrors mAppErrors>;

        virtualinvoke $r5.<com.android.server.am.AppErrors: void crashApplication(com.android.server.am.ProcessRecord,android.app.ApplicationErrorReport$CrashInfo)>(r9, r2);

        return 1;

     label8:
        return 0;

     label9:
        $r4 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        $r3 = new com.android.server.am.ActivityManagerService$19;

        specialinvoke $r3.<com.android.server.am.ActivityManagerService$19: void <init>(com.android.server.am.ActivityManagerService,int,int,android.os.IBinder,java.lang.String,android.app.ApplicationErrorReport$ParcelableCrashInfo)>(r0, i4, i0, r8, r1, r2);

        virtualinvoke $r4.<com.android.server.am.ActivityManagerService$MainHandler: boolean post(java.lang.Runnable)>($r3);

        return 0;
    }

    com.android.server.am.ProcessRecord handleApplicationWtfInner(int, int, android.os.IBinder, java.lang.String, android.app.ApplicationErrorReport$CrashInfo)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, i2, i3, i4;
        java.lang.String r1, $r5, r7;
        android.app.ApplicationErrorReport$CrashInfo r2;
        com.android.server.am.ProcessRecord r3;
        android.content.pm.ApplicationInfo $r4;
        android.os.IBinder r6;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r6 := @parameter2: android.os.IBinder;

        r1 := @parameter3: java.lang.String;

        r2 := @parameter4: android.app.ApplicationErrorReport$CrashInfo;

        r3 = specialinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord findAppProcess(android.os.IBinder,java.lang.String)>(r6, "WTF");

        if r6 != null goto label1;

        r7 = "system_server";

        goto label3;

     label1:
        if r3 != null goto label2;

        r7 = "unknown";

        goto label3;

     label2:
        r7 = r3.<com.android.server.am.ProcessRecord: java.lang.String processName>;

     label3:
        i2 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        if r3 != null goto label4;

        i3 = -1;

        goto label5;

     label4:
        $r4 = r3.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        i3 = $r4.<android.content.pm.ApplicationInfo: int flags>;

     label5:
        $r5 = r2.<android.app.ApplicationErrorReport$CrashInfo: java.lang.String exceptionMessage>;

        staticinvoke <com.android.server.am.EventLogTags: void writeAmWtf(int,int,java.lang.String,int,java.lang.String,java.lang.String)>(i2, i1, r7, i3, r1, $r5);

        if r3 == null goto label6;

        i4 = virtualinvoke r3.<com.android.server.am.ProcessRecord: int getProcessClassEnum()>();

        goto label7;

     label6:
        i4 = 0;

     label7:
        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int,java.lang.String,java.lang.String,int,int)>(80, i0, r1, r7, i1, i4);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void addErrorToDropBox(java.lang.String,com.android.server.am.ProcessRecord,java.lang.String,java.lang.String,java.lang.String,com.android.server.am.ProcessRecord,java.lang.String,java.lang.String,java.io.File,android.app.ApplicationErrorReport$CrashInfo)>("wtf", r3, r7, null, null, null, r1, null, null, r2);

        return r3;
    }

    public int handleIncomingUser(int, int, int, boolean, boolean, java.lang.String, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, i2, $i3;
        boolean z0, z1;
        java.lang.String r1, r2;
        com.android.server.am.UserController r3;
        byte b4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        r1 := @parameter5: java.lang.String;

        r2 := @parameter6: java.lang.String;

        r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.UserController mUserController>;

        if z1 == 0 goto label1;

        b4 = 2;

        goto label2;

     label1:
        b4 = 0;

     label2:
        $i3 = virtualinvoke r3.<com.android.server.am.UserController: int handleIncomingUser(int,int,int,boolean,int,java.lang.String,java.lang.String)>(i0, i1, i2, z0, b4, r1, r2);

        return $i3;
    }

    public void hang(android.os.IBinder, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        int $i0, $i1;
        java.lang.SecurityException $r2;
        com.android.server.am.ActivityManagerService$15 $r3;
        com.android.server.Watchdog $r4, $r8;
        java.lang.String $r7;
        java.lang.Throwable $r9, $r10, $r11;
        android.os.RemoteException $r12;
        android.os.IBinder r13;
        boolean z0, z1;
        java.lang.StringBuilder r14;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r13 := @parameter0: android.os.IBinder;

        z0 := @parameter1: boolean;

        $i0 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.SET_ACTIVITY_WATCHER");

        if $i0 != 0 goto label19;

        $r3 = new com.android.server.am.ActivityManagerService$15;

        specialinvoke $r3.<com.android.server.am.ActivityManagerService$15: void <init>(com.android.server.am.ActivityManagerService)>(r0);

     label01:
        interfaceinvoke r13.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>($r3, 0);

     label02:
        entermonitor r0;

     label03:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r4 = staticinvoke <com.android.server.Watchdog: com.android.server.Watchdog getInstance()>();

        virtualinvoke $r4.<com.android.server.Watchdog: void setAllowRestart(boolean)>(z0);

        r14 = new java.lang.StringBuilder;

        specialinvoke r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Hanging system process at request of pid ");

        $i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r7 = virtualinvoke r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", $r7);

        entermonitor $r3;

     label04:
        z1 = interfaceinvoke r13.<android.os.IBinder: boolean isBinderAlive()>();

     label05:
        if z1 == 0 goto label09;

     label06:
        virtualinvoke $r3.<java.lang.Object: void wait()>();

     label07:
        goto label04;

     label08:
        $r9 := @caughtexception;

        goto label07;

     label09:
        exitmonitor $r3;

     label10:
        $r8 = staticinvoke <com.android.server.Watchdog: com.android.server.Watchdog getInstance()>();

        virtualinvoke $r8.<com.android.server.Watchdog: void setAllowRestart(boolean)>(1);

        exitmonitor r0;

     label11:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label12:
        $r11 := @caughtexception;

     label13:
        exitmonitor $r3;

     label14:
        throw $r11;

     label15:
        $r10 := @caughtexception;

     label16:
        exitmonitor r0;

     label17:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r10;

     label18:
        $r12 := @caughtexception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", "hang: given caller IBinder is already dead.");

        return;

     label19:
        $r2 = new java.lang.SecurityException;

        specialinvoke $r2.<java.lang.SecurityException: void <init>(java.lang.String)>("Requires permission android.permission.SET_ACTIVITY_WATCHER");

        throw $r2;

        catch android.os.RemoteException from label01 to label02 with label18;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Throwable from label04 to label05 with label12;
        catch java.lang.InterruptedException from label06 to label07 with label08;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label09 to label10 with label12;
        catch java.lang.Throwable from label10 to label11 with label15;
        catch java.lang.Throwable from label13 to label14 with label12;
        catch java.lang.Throwable from label14 to label15 with label15;
        catch java.lang.Throwable from label16 to label17 with label15;
    }

    final void idleUids()
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.OomAdjuster $r2;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        entermonitor r0;

     label1:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.OomAdjuster mOomAdjuster>;

        virtualinvoke $r2.<com.android.server.am.OomAdjuster: void idleUidsLocked()>();

        exitmonitor r0;

     label2:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    void importanceTokenDied(com.android.server.am.ActivityManagerService$ImportanceToken)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ActivityManagerService$PidMap r1, $r6;
        int $i0, $i1, $i2;
        android.util.SparseArray $r2, $r5;
        java.lang.Object $r3;
        com.android.server.am.ActivityManagerService$ImportanceToken $r4, r9;
        java.lang.Throwable $r7, $r8;
        com.android.server.am.ProcessRecord r10;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r9 := @parameter0: com.android.server.am.ActivityManagerService$ImportanceToken;

        entermonitor r0;

     label01:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        entermonitor r1;

     label02:
        $r2 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mImportantProcesses>;

        $i0 = r9.<com.android.server.am.ActivityManagerService$ImportanceToken: int pid>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>($i0);

        $r4 = (com.android.server.am.ActivityManagerService$ImportanceToken) $r3;

        if $r4 == r9 goto label05;

        exitmonitor r1;

     label03:
        exitmonitor r0;

     label04:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label05:
        $r5 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mImportantProcesses>;

        $i1 = r9.<com.android.server.am.ActivityManagerService$ImportanceToken: int pid>;

        virtualinvoke $r5.<android.util.SparseArray: void remove(int)>($i1);

        $r6 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        $i2 = r9.<com.android.server.am.ActivityManagerService$ImportanceToken: int pid>;

        r10 = virtualinvoke $r6.<com.android.server.am.ActivityManagerService$PidMap: com.android.server.am.ProcessRecord get(int)>($i2);

     label06:
        if r10 != null goto label10;

     label07:
        exitmonitor r1;

     label08:
        exitmonitor r0;

     label09:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label10:
        r10.<com.android.server.am.ProcessRecord: java.lang.Object forcingToImportant> = null;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void updateProcessForegroundLocked(com.android.server.am.ProcessRecord,boolean,int,boolean)>(r10, 0, 0, 0);

        exitmonitor r1;

     label11:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void updateOomAdjLocked(com.android.server.am.ProcessRecord,java.lang.String)>(r10, "updateOomAdj_uiVisibility");

        exitmonitor r0;

     label12:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label13:
        $r8 := @caughtexception;

     label14:
        exitmonitor r1;

     label15:
        throw $r8;

     label16:
        $r7 := @caughtexception;

     label17:
        exitmonitor r0;

     label18:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label16;
        catch java.lang.Throwable from label02 to label03 with label13;
        catch java.lang.Throwable from label03 to label04 with label16;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.lang.Throwable from label08 to label09 with label16;
        catch java.lang.Throwable from label10 to label11 with label13;
        catch java.lang.Throwable from label11 to label12 with label16;
        catch java.lang.Throwable from label14 to label15 with label13;
        catch java.lang.Throwable from label15 to label16 with label16;
        catch java.lang.Throwable from label17 to label18 with label16;
    }

    com.android.server.am.ContentProviderConnection incProviderCountLocked(com.android.server.am.ProcessRecord, com.android.server.am.ContentProviderRecord, android.os.IBinder, int, java.lang.String, java.lang.String, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1;
        com.android.server.am.ContentProviderRecord r2, $r17;
        java.lang.String r3, r4, $r9, $r12;
        boolean z0;
        java.util.ArrayList $r5, $r7, $r8, $r15;
        int $i0, $i1, $i2, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, i14;
        com.android.server.am.ContentProviderConnection $r6, r19;
        android.content.pm.ApplicationInfo $r10;
        android.content.pm.ProviderInfo $r11;
        android.content.ComponentName $r13;
        long $l3;
        java.lang.Object $r16;
        android.os.IBinder r18;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        r2 := @parameter1: com.android.server.am.ContentProviderRecord;

        r18 := @parameter2: android.os.IBinder;

        i13 := @parameter3: int;

        r3 := @parameter4: java.lang.String;

        r4 := @parameter5: java.lang.String;

        z0 := @parameter6: boolean;

        if r1 == null goto label8;

        i14 = 0;

     label1:
        $r5 = r1.<com.android.server.am.ProcessRecord: java.util.ArrayList conProviders>;

        $i0 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        if i14 >= $i0 goto label5;

        $r15 = r1.<com.android.server.am.ProcessRecord: java.util.ArrayList conProviders>;

        $r16 = virtualinvoke $r15.<java.util.ArrayList: java.lang.Object get(int)>(i14);

        r19 = (com.android.server.am.ContentProviderConnection) $r16;

        $r17 = r19.<com.android.server.am.ContentProviderConnection: com.android.server.am.ContentProviderRecord provider>;

        if $r17 != r2 goto label4;

        if z0 == 0 goto label2;

        $i9 = r19.<com.android.server.am.ContentProviderConnection: int stableCount>;

        $i10 = $i9 + 1;

        r19.<com.android.server.am.ContentProviderConnection: int stableCount> = $i10;

        $i11 = r19.<com.android.server.am.ContentProviderConnection: int numStableIncs>;

        $i12 = $i11 + 1;

        r19.<com.android.server.am.ContentProviderConnection: int numStableIncs> = $i12;

        goto label3;

     label2:
        $i5 = r19.<com.android.server.am.ContentProviderConnection: int unstableCount>;

        $i6 = $i5 + 1;

        r19.<com.android.server.am.ContentProviderConnection: int unstableCount> = $i6;

        $i7 = r19.<com.android.server.am.ContentProviderConnection: int numUnstableIncs>;

        $i8 = $i7 + 1;

        r19.<com.android.server.am.ContentProviderConnection: int numUnstableIncs> = $i8;

     label3:
        return r19;

     label4:
        i14 = i14 + 1;

        goto label1;

     label5:
        $r6 = new com.android.server.am.ContentProviderConnection;

        specialinvoke $r6.<com.android.server.am.ContentProviderConnection: void <init>(com.android.server.am.ContentProviderRecord,com.android.server.am.ProcessRecord,java.lang.String)>(r2, r1, r3);

        virtualinvoke $r6.<com.android.server.am.ContentProviderConnection: void startAssociationIfNeeded()>();

        if z0 == 0 goto label6;

        $r6.<com.android.server.am.ContentProviderConnection: int stableCount> = 1;

        $r6.<com.android.server.am.ContentProviderConnection: int numStableIncs> = 1;

        goto label7;

     label6:
        $r6.<com.android.server.am.ContentProviderConnection: int unstableCount> = 1;

        $r6.<com.android.server.am.ContentProviderConnection: int numUnstableIncs> = 1;

     label7:
        $r7 = r2.<com.android.server.am.ContentProviderRecord: java.util.ArrayList connections>;

        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        $r8 = r1.<com.android.server.am.ProcessRecord: java.util.ArrayList conProviders>;

        virtualinvoke $r8.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        $i1 = r1.<com.android.server.am.ProcessRecord: int uid>;

        $r9 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $i2 = virtualinvoke r1.<com.android.server.am.ProcessRecord: int getCurProcState()>();

        $i4 = r2.<com.android.server.am.ContentProviderRecord: int uid>;

        $r10 = r2.<com.android.server.am.ContentProviderRecord: android.content.pm.ApplicationInfo appInfo>;

        $l3 = $r10.<android.content.pm.ApplicationInfo: long longVersionCode>;

        $r13 = r2.<com.android.server.am.ContentProviderRecord: android.content.ComponentName name>;

        $r11 = r2.<com.android.server.am.ContentProviderRecord: android.content.pm.ProviderInfo info>;

        $r12 = $r11.<android.content.pm.ProviderInfo: java.lang.String processName>;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$Association startAssociationLocked(int,java.lang.String,int,int,long,android.content.ComponentName,java.lang.String)>($i1, $r9, $i2, $i4, $l3, $r13, $r12);

        return $r6;

     label8:
        virtualinvoke r2.<com.android.server.am.ContentProviderRecord: void addExternalProcessHandleLocked(android.os.IBinder,int,java.lang.String)>(r18, i13, r4);

        return null;
    }

    public void initPowerManagement()
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.wm.ActivityTaskManagerService $r1;
        com.android.server.am.BatteryStatsService $r2;
        java.lang.Object $r3;
        android.os.PowerManagerInternal $r4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerService mActivityTaskManager>;

        virtualinvoke $r1.<com.android.server.wm.ActivityTaskManagerService: void onInitPowerManagement()>();

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        virtualinvoke $r2.<com.android.server.am.BatteryStatsService: void initPowerManagement()>();

        $r3 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/os/PowerManagerInternal;");

        $r4 = (android.os.PowerManagerInternal) $r3;

        r0.<com.android.server.am.ActivityManagerService: android.os.PowerManagerInternal mLocalPowerManager> = $r4;

        return;
    }

    long inputDispatchingTimedOut(int, boolean, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, $i1;
        boolean z0, $z1;
        com.android.server.am.ActivityManagerService$PidMap r1, $r4;
        com.android.server.am.ProcessRecord r2;
        java.lang.SecurityException $r3;
        java.lang.Throwable $r5, $r6;
        java.lang.String r7;
        long l2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r7 := @parameter2: java.lang.String;

        $i1 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.FILTER_EVENTS");

        if $i1 != 0 goto label16;

        entermonitor r0;

     label01:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        entermonitor r1;

     label02:
        $r4 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        r2 = virtualinvoke $r4.<com.android.server.am.ActivityManagerService$PidMap: com.android.server.am.ProcessRecord get(int)>(i0);

        exitmonitor r1;

     label03:
        if r2 == null goto label06;

     label04:
        l2 = virtualinvoke r2.<com.android.server.am.ProcessRecord: long getInputDispatchingTimeout()>();

     label05:
        goto label07;

     label06:
        l2 = 5000L;

     label07:
        exitmonitor r0;

     label08:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        $z1 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean inputDispatchingTimedOut(com.android.server.am.ProcessRecord,java.lang.String,android.content.pm.ApplicationInfo,java.lang.String,com.android.server.wm.WindowProcessController,boolean,java.lang.String)>(r2, null, null, null, null, z0, r7);

        if $z1 == 0 goto label09;

        return -1L;

     label09:
        return l2;

     label10:
        $r5 := @caughtexception;

     label11:
        exitmonitor r1;

     label12:
        throw $r5;

     label13:
        $r6 := @caughtexception;

     label14:
        exitmonitor r0;

     label15:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r6;

     label16:
        $r3 = new java.lang.SecurityException;

        specialinvoke $r3.<java.lang.SecurityException: void <init>(java.lang.String)>("Requires permission android.permission.FILTER_EVENTS");

        throw $r3;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label02 to label03 with label10;
        catch java.lang.Throwable from label04 to label05 with label13;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.lang.Throwable from label11 to label12 with label10;
        catch java.lang.Throwable from label12 to label13 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
    }

    boolean inputDispatchingTimedOut(com.android.server.am.ProcessRecord, java.lang.String, android.content.pm.ApplicationInfo, java.lang.String, com.android.server.wm.WindowProcessController, boolean, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.pm.ApplicationInfo r1;
        java.lang.String r2, r14, r15, r16;
        com.android.server.wm.WindowProcessController r3;
        boolean z0, $z1;
        int $i0;
        java.lang.SecurityException $r5;
        java.lang.StringBuilder $r6;
        com.android.server.am.ActiveInstrumentation $r10;
        com.android.server.am.AnrHelper $r11;
        java.lang.Throwable $r12;
        com.android.server.am.ProcessRecord r13;
        android.os.Bundle r17;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r13 := @parameter0: com.android.server.am.ProcessRecord;

        r14 := @parameter1: java.lang.String;

        r1 := @parameter2: android.content.pm.ApplicationInfo;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: com.android.server.wm.WindowProcessController;

        z0 := @parameter5: boolean;

        r15 := @parameter6: java.lang.String;

        $i0 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.FILTER_EVENTS");

        if $i0 != 0 goto label13;

        if r15 != null goto label01;

        r16 = "Input dispatching timed out";

        goto label02;

     label01:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Input dispatching timed out (");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        r16 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

     label02:
        if r13 == null goto label12;

        entermonitor r0;

     label03:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $z1 = virtualinvoke r13.<com.android.server.am.ProcessRecord: boolean isDebugging()>();

        if $z1 == 0 goto label05;

        exitmonitor r0;

     label04:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return 0;

     label05:
        $r10 = virtualinvoke r13.<com.android.server.am.ProcessRecord: com.android.server.am.ActiveInstrumentation getActiveInstrumentation()>();

        if $r10 == null goto label07;

        r17 = new android.os.Bundle;

        specialinvoke r17.<android.os.Bundle: void <init>()>();

        virtualinvoke r17.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("shortMsg", "keyDispatchingTimedOut");

        virtualinvoke r17.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("longMsg", r16);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void finishInstrumentationLocked(com.android.server.am.ProcessRecord,int,android.os.Bundle)>(r13, 0, r17);

        exitmonitor r0;

     label06:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return 1;

     label07:
        exitmonitor r0;

     label08:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        $r11 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.AnrHelper mAnrHelper>;

        virtualinvoke $r11.<com.android.server.am.AnrHelper: void appNotResponding(com.android.server.am.ProcessRecord,java.lang.String,android.content.pm.ApplicationInfo,java.lang.String,com.android.server.wm.WindowProcessController,boolean,java.lang.String)>(r13, r14, r1, r2, r3, z0, r16);

        goto label12;

     label09:
        $r12 := @caughtexception;

     label10:
        exitmonitor r0;

     label11:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r12;

     label12:
        return 1;

     label13:
        $r5 = new java.lang.SecurityException;

        specialinvoke $r5.<java.lang.SecurityException: void <init>(java.lang.String)>("Requires permission android.permission.FILTER_EVENTS");

        throw $r5;

        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    void installEncryptionUnawareProviders(int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, i2, $i3, $i6, i10, i11, i14, i15, i21, i23, i25, i27, i28, i34, $i36;
        com.android.server.am.ProcessRecord r1;
        java.lang.String r2, r4, $r18, $r21, $r24, r38, r40;
        android.content.pm.ProviderInfo r3;
        com.android.server.am.ProcessList $r5, $r8;
        com.android.server.am.ProcessList$MyProcessMap $r6, $r9;
        android.util.ArrayMap $r7, $r10;
        java.lang.Object $r11, $r12;
        android.app.IApplicationThread $r13, $r25;
        boolean $z0, $z1, z2, z3, z4, $z5, z6;
        com.android.server.am.ProcessRecord$PackageList $r14, $r15;
        android.content.pm.IPackageManager $r16;
        android.content.pm.ProviderInfo[] $r17, r37;
        android.os.RemoteException $r26, $r27, $r30, $r31, $r32, $r33;
        java.lang.Throwable $r28, $r29, r49;
        android.util.SparseArray r34, r35;
        android.content.pm.PackageInfo r36;
        android.content.pm.ApplicationInfo r41;
        java.lang.StringBuilder r42, r43;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        entermonitor r0;

     label01:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

     label02:
        $r5 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r6 = $r5.<com.android.server.am.ProcessList: com.android.server.am.ProcessList$MyProcessMap mProcessNames>;

        $r7 = virtualinvoke $r6.<com.android.server.am.ProcessList$MyProcessMap: android.util.ArrayMap getMap()>();

        i10 = virtualinvoke $r7.<android.util.ArrayMap: int size()>();

     label03:
        i11 = 0;

     label04:
        if i11 >= i10 goto label60;

     label05:
        $r8 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r9 = $r8.<com.android.server.am.ProcessList: com.android.server.am.ProcessList$MyProcessMap mProcessNames>;

        $r10 = virtualinvoke $r9.<com.android.server.am.ProcessList$MyProcessMap: android.util.ArrayMap getMap()>();

        $r11 = virtualinvoke $r10.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i11);

        r34 = (android.util.SparseArray) $r11;

     label06:
        i14 = virtualinvoke r34.<android.util.SparseArray: int size()>();

     label07:
        i15 = 0;

     label08:
        if i15 >= i14 goto label59;

     label09:
        $r12 = virtualinvoke r34.<android.util.SparseArray: java.lang.Object valueAt(int)>(i15);

        r1 = (com.android.server.am.ProcessRecord) $r12;

     label10:
        $i3 = r1.<com.android.server.am.ProcessRecord: int userId>;

        if $i3 != i0 goto label57;

     label11:
        $r13 = r1.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r13 == null goto label57;

     label12:
        $z0 = r1.<com.android.server.am.ProcessRecord: boolean unlocked>;

        if $z0 == 0 goto label14;

     label13:
        i21 = i14;

        i23 = i10;

        goto label58;

     label14:
        $r14 = r1.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        i1 = virtualinvoke $r14.<com.android.server.am.ProcessRecord$PackageList: int size()>();

     label15:
        i25 = 0;

     label16:
        if i25 >= i1 goto label56;

        i27 = i10;

        r35 = r34;

        i28 = i14;

     label17:
        $r15 = r1.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        r2 = virtualinvoke $r15.<com.android.server.am.ProcessRecord$PackageList: java.lang.String keyAt(int)>(i25);

     label18:
        i27 = i10;

        r35 = r34;

        i28 = i14;

     label19:
        $r16 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        r36 = interfaceinvoke $r16.<android.content.pm.IPackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int,int)>(r2, 262152, i0);

     label20:
        if r36 == null goto label53;

        i27 = i10;

        r35 = r34;

        i28 = i14;

     label21:
        $r17 = r36.<android.content.pm.PackageInfo: android.content.pm.ProviderInfo[] providers>;

        $z1 = staticinvoke <com.android.internal.util.ArrayUtils: boolean isEmpty(java.lang.Object[])>($r17);

        if $z1 != 0 goto label53;

     label22:
        i27 = i10;

        r35 = r34;

        i28 = i14;

     label23:
        r37 = r36.<android.content.pm.PackageInfo: android.content.pm.ProviderInfo[] providers>;

     label24:
        i27 = i10;

        r35 = r34;

        i28 = i14;

     label25:
        i2 = lengthof r37;

     label26:
        i34 = 0;

     label27:
        if i34 >= i2 goto label52;

        r3 = r37[i34];

        i27 = i10;

        r35 = r34;

        i28 = i14;

     label28:
        r38 = r3.<android.content.pm.ProviderInfo: java.lang.String processName>;

     label29:
        $r18 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        z2 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(r38, $r18);

     label30:
        if z2 != 0 goto label35;

     label31:
        z3 = r3.<android.content.pm.ProviderInfo: boolean multiprocess>;

     label32:
        if z3 == 0 goto label33;

        goto label35;

     label33:
        z4 = 0;

        goto label36;

     label34:
        $r27 := @caughtexception;

        goto label55;

     label35:
        z4 = 1;

     label36:
        r40 = r3.<android.content.pm.ProviderInfo: java.lang.String processName>;

     label37:
        r41 = r3.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

     label38:
        r4 = r3.<android.content.pm.ProviderInfo: java.lang.String name>;

     label39:
        $i36 = r3.<android.content.pm.ProviderInfo: int flags>;

        $z5 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean isSingleton(java.lang.String,android.content.pm.ApplicationInfo,java.lang.String,int)>(r40, r41, r4, $i36);

        if $z5 == 0 goto label42;

        $i6 = r1.<com.android.server.am.ProcessRecord: int userId>;

        if $i6 != 0 goto label41;

     label40:
        goto label42;

     label41:
        z6 = 0;

        goto label43;

     label42:
        z6 = 1;

     label43:
        if z4 == 0 goto label46;

        if z6 == 0 goto label46;

     label44:
        r42 = new java.lang.StringBuilder;

        specialinvoke r42.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Installing ");

        virtualinvoke r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r24 = virtualinvoke r42.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("ActivityManager", $r24);

        $r25 = r1.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        interfaceinvoke $r25.<android.app.IApplicationThread: void scheduleInstallProvider(android.content.pm.ProviderInfo)>(r3);

     label45:
        goto label47;

     label46:
        r43 = new java.lang.StringBuilder;

        specialinvoke r43.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skipping ");

        virtualinvoke r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r21 = virtualinvoke r43.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("ActivityManager", $r21);

     label47:
        i34 = i34 + 1;

        goto label27;

     label48:
        $r30 := @caughtexception;

        goto label55;

     label49:
        $r26 := @caughtexception;

        goto label55;

     label50:
        $r32 := @caughtexception;

        goto label55;

     label51:
        $r31 := @caughtexception;

        goto label55;

     label52:
        goto label53;

     label53:
        goto label55;

     label54:
        $r33 := @caughtexception;

        i10 = i27;

        r34 = r35;

        i14 = i28;

     label55:
        i25 = i25 + 1;

        goto label16;

     label56:
        i21 = i14;

        i23 = i10;

        goto label58;

     label57:
        i23 = i10;

        i21 = i14;

     label58:
        i15 = i15 + 1;

        i10 = i23;

        i14 = i21;

        goto label08;

     label59:
        i11 = i11 + 1;

        goto label04;

     label60:
        exitmonitor r0;

     label61:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label62:
        $r28 := @caughtexception;

        r49 = $r28;

     label63:
        exitmonitor r0;

     label64:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw r49;

     label65:
        $r29 := @caughtexception;

        r49 = $r29;

        goto label63;

        catch java.lang.Throwable from label01 to label02 with label62;
        catch java.lang.Throwable from label02 to label03 with label62;
        catch java.lang.Throwable from label05 to label06 with label62;
        catch java.lang.Throwable from label06 to label07 with label62;
        catch java.lang.Throwable from label09 to label10 with label62;
        catch java.lang.Throwable from label10 to label11 with label62;
        catch java.lang.Throwable from label11 to label12 with label62;
        catch java.lang.Throwable from label12 to label13 with label62;
        catch java.lang.Throwable from label14 to label15 with label62;
        catch android.os.RemoteException from label17 to label18 with label54;
        catch java.lang.Throwable from label17 to label18 with label62;
        catch android.os.RemoteException from label19 to label20 with label54;
        catch java.lang.Throwable from label19 to label20 with label62;
        catch android.os.RemoteException from label21 to label22 with label54;
        catch java.lang.Throwable from label21 to label22 with label62;
        catch android.os.RemoteException from label23 to label24 with label54;
        catch java.lang.Throwable from label23 to label24 with label62;
        catch android.os.RemoteException from label25 to label26 with label54;
        catch java.lang.Throwable from label25 to label26 with label62;
        catch android.os.RemoteException from label28 to label29 with label54;
        catch java.lang.Throwable from label28 to label29 with label62;
        catch android.os.RemoteException from label29 to label30 with label51;
        catch java.lang.Throwable from label29 to label30 with label65;
        catch android.os.RemoteException from label31 to label32 with label34;
        catch java.lang.Throwable from label31 to label32 with label65;
        catch android.os.RemoteException from label36 to label37 with label51;
        catch java.lang.Throwable from label36 to label37 with label65;
        catch android.os.RemoteException from label37 to label38 with label50;
        catch java.lang.Throwable from label37 to label38 with label65;
        catch android.os.RemoteException from label38 to label39 with label49;
        catch java.lang.Throwable from label38 to label39 with label65;
        catch android.os.RemoteException from label39 to label40 with label48;
        catch java.lang.Throwable from label39 to label40 with label65;
        catch android.os.RemoteException from label44 to label45 with label48;
        catch java.lang.Throwable from label44 to label45 with label65;
        catch android.os.RemoteException from label46 to label47 with label48;
        catch java.lang.Throwable from label46 to label47 with label65;
        catch java.lang.Throwable from label60 to label61 with label65;
        catch java.lang.Throwable from label63 to label64 with label65;
    }

    public final void installSystemProviders()
    {
        com.android.server.am.ActivityManagerService r0;
        java.util.List r1;
        android.content.pm.ProviderInfo r2;
        com.android.server.am.ProcessList $r3;
        com.android.server.am.ProcessList$MyProcessMap $r4;
        java.lang.Object $r5, $r19;
        com.android.server.am.ProcessRecord $r6;
        android.content.Context $r7, $r13, $r17;
        com.android.server.am.ActivityManagerConstants $r8;
        android.content.ContentResolver $r9, $r14;
        com.android.server.am.CoreSettingsObserver $r10;
        com.android.server.wm.ActivityTaskManagerService $r11;
        com.android.server.am.ActivityManagerService$DevelopmentSettingsObserver $r12;
        com.android.server.am.OomAdjuster $r16;
        android.app.ActivityThread $r18;
        int $i0, $i1, $i2, i4;
        android.content.pm.ApplicationInfo $r20;
        java.lang.String $r22, $r25;
        java.lang.Throwable $r27, $r28;
        java.lang.StringBuilder r29;

        r0 := @this: com.android.server.am.ActivityManagerService;

        entermonitor r0;

     label01:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r4 = $r3.<com.android.server.am.ProcessList: com.android.server.am.ProcessList$MyProcessMap mProcessNames>;

        $r5 = virtualinvoke $r4.<com.android.server.am.ProcessList$MyProcessMap: java.lang.Object get(java.lang.String,int)>("system", 1000);

        $r6 = (com.android.server.am.ProcessRecord) $r5;

        r1 = specialinvoke r0.<com.android.server.am.ActivityManagerService: java.util.List generateApplicationProvidersLocked(com.android.server.am.ProcessRecord)>($r6);

     label02:
        if r1 == null goto label07;

     label03:
        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        i4 = $i0 - 1;

     label04:
        if i4 < 0 goto label07;

     label05:
        $r19 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i4);

        r2 = (android.content.pm.ProviderInfo) $r19;

        $r20 = r2.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i1 = $r20.<android.content.pm.ApplicationInfo: int flags>;

        $i2 = $i1 & 1;

        if $i2 != 0 goto label06;

        r29 = new java.lang.StringBuilder;

        specialinvoke r29.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not installing system proc provider ");

        $r22 = r2.<android.content.pm.ProviderInfo: java.lang.String name>;

        virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": not system .apk");

        $r25 = virtualinvoke r29.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r25);

        interfaceinvoke r1.<java.util.List: java.lang.Object remove(int)>(i4);

     label06:
        i4 = i4 + -1;

        goto label04;

     label07:
        exitmonitor r0;

     label08:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        if r1 == null goto label09;

        $r18 = r0.<com.android.server.am.ActivityManagerService: android.app.ActivityThread mSystemThread>;

        virtualinvoke $r18.<android.app.ActivityThread: void installSystemProviders(java.util.List)>(r1);

     label09:
        entermonitor r0;

     label10:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        r0.<com.android.server.am.ActivityManagerService: boolean mSystemProvidersInstalled> = 1;

        exitmonitor r0;

     label11:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        $r8 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerConstants mConstants>;

        $r7 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r9 = virtualinvoke $r7.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        virtualinvoke $r8.<com.android.server.am.ActivityManagerConstants: void start(android.content.ContentResolver)>($r9);

        $r10 = new com.android.server.am.CoreSettingsObserver;

        specialinvoke $r10.<com.android.server.am.CoreSettingsObserver: void <init>(com.android.server.am.ActivityManagerService)>(r0);

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.CoreSettingsObserver mCoreSettingsObserver> = $r10;

        $r11 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerService mActivityTaskManager>;

        virtualinvoke $r11.<com.android.server.wm.ActivityTaskManagerService: void installSystemProviders()>();

        $r12 = new com.android.server.am.ActivityManagerService$DevelopmentSettingsObserver;

        specialinvoke $r12.<com.android.server.am.ActivityManagerService$DevelopmentSettingsObserver: void <init>(com.android.server.am.ActivityManagerService)>(r0);

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$DevelopmentSettingsObserver mDevelopmentSettingsObserver> = $r12;

        $r13 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r14 = virtualinvoke $r13.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        staticinvoke <com.android.server.am.SettingsToPropertiesMapper: com.android.server.am.SettingsToPropertiesMapper start(android.content.ContentResolver)>($r14);

        $r16 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.OomAdjuster mOomAdjuster>;

        virtualinvoke $r16.<com.android.server.am.OomAdjuster: void initSettings()>();

        $r17 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        staticinvoke <com.android.server.RescueParty: void onSettingsProviderPublished(android.content.Context)>($r17);

        return;

     label12:
        $r27 := @caughtexception;

     label13:
        exitmonitor r0;

     label14:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r27;

     label15:
        $r28 := @caughtexception;

     label16:
        exitmonitor r0;

     label17:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r28;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Throwable from label05 to label06 with label15;
        catch java.lang.Throwable from label07 to label08 with label15;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
        catch java.lang.Throwable from label16 to label17 with label15;
    }

    boolean isAllowedWhileBooting(android.content.pm.ApplicationInfo)
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.pm.ApplicationInfo r1;
        int $i0, $i1;
        boolean z0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.content.pm.ApplicationInfo;

        $i0 = r1.<android.content.pm.ApplicationInfo: int flags>;

        $i1 = $i0 & 8;

        if $i1 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isAppFreezerSupported()
    {
        com.android.server.am.ActivityManagerService r0;
        long l0;
        boolean z0;
        com.android.server.am.OomAdjuster $r1;
        java.lang.Throwable $r2;
        com.android.server.am.CachedAppOptimizer r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.OomAdjuster mOomAdjuster>;

        r3 = $r1.<com.android.server.am.OomAdjuster: com.android.server.am.CachedAppOptimizer mCachedAppOptimizer>;

        z0 = staticinvoke <com.android.server.am.CachedAppOptimizer: boolean isFreezerSupported()>();

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return z0;

     label3:
        $r2 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public boolean isAppStartModeDisabled(int, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, $i1;
        java.lang.Throwable $r1;
        java.lang.String r2;
        boolean z0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        r2 := @parameter1: java.lang.String;

        entermonitor r0;

     label1:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $i1 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int getAppStartModeLocked(int,java.lang.String,int,int,boolean,boolean,boolean)>(i0, r2, 0, -1, 0, 1, 0);

        if $i1 != 3 goto label3;

     label2:
        z0 = 1;

        goto label4;

     label3:
        z0 = 0;

     label4:
        exitmonitor r0;

     label5:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return z0;

     label6:
        $r1 := @caughtexception;

     label7:
        exitmonitor r0;

     label8:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public boolean isBackgroundRestricted(java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1, $r7;
        int i0, $i1, $i2;
        java.lang.IllegalArgumentException r2;
        boolean $z0;
        android.os.RemoteException $r8;
        android.content.pm.IPackageManager r9;
        java.lang.StringBuilder r10;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        r9 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

     label1:
        $i1 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        $i2 = interfaceinvoke r9.<android.content.pm.IPackageManager: int getPackageUid(java.lang.String,int,int)>(r1, 268435456, $i1);

        if $i2 != i0 goto label3;

     label2:
        goto label5;

     label3:
        r2 = new java.lang.IllegalArgumentException;

        r10 = new java.lang.StringBuilder;

        specialinvoke r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Uid ");

        virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cannot query restriction state for package ");

        virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw r2;

     label4:
        $r8 := @caughtexception;

     label5:
        $z0 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean isBackgroundRestrictedNoCheck(int,java.lang.String)>(i0, r1);

        return $z0;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch android.os.RemoteException from label3 to label4 with label4;
    }

    boolean isBackgroundRestrictedNoCheck(int, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, $i1;
        java.lang.String r1;
        android.app.AppOpsManager $r2;
        boolean z0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: android.app.AppOpsManager getAppOpsManager()>();

        $i1 = virtualinvoke $r2.<android.app.AppOpsManager: int checkOpNoThrow(int,int,java.lang.String)>(70, i0, r1);

        if $i1 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    final boolean isCameraActiveForUid(int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, $i1;
        android.util.IntArray r1, $r3;
        java.lang.Throwable $r4;
        boolean z0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.am.ActivityManagerService: android.util.IntArray mActiveCameraUids>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.am.ActivityManagerService: android.util.IntArray mActiveCameraUids>;

        $i1 = virtualinvoke $r3.<android.util.IntArray: int indexOf(int)>(i0);

        if $i1 < 0 goto label3;

     label2:
        z0 = 1;

        goto label4;

     label3:
        z0 = 0;

     label4:
        exitmonitor r1;

     label5:
        return z0;

     label6:
        $r4 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public boolean isInLockTaskMode()
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.wm.ActivityTaskManagerService $r1;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerService mActivityTaskManager>;

        $z0 = virtualinvoke $r1.<com.android.server.wm.ActivityTaskManagerService: boolean isInLockTaskMode()>();

        return $z0;
    }

    public boolean isIntentSenderABroadcast(android.content.IIntentSender)
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.IIntentSender r1;
        boolean z0, z1;
        com.android.server.am.PendingIntentRecord $r2;
        com.android.server.am.PendingIntentRecord$Key $r3;
        int $i0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.content.IIntentSender;

        z0 = r1 instanceof com.android.server.am.PendingIntentRecord;

        z1 = 0;

        if z0 == 0 goto label2;

        $r2 = (com.android.server.am.PendingIntentRecord) r1;

        $r3 = $r2.<com.android.server.am.PendingIntentRecord: com.android.server.am.PendingIntentRecord$Key key>;

        $i0 = $r3.<com.android.server.am.PendingIntentRecord$Key: int type>;

        if $i0 != 1 goto label1;

        z1 = 1;

     label1:
        return z1;

     label2:
        return 0;
    }

    public boolean isIntentSenderAForegroundService(android.content.IIntentSender)
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.IIntentSender r1;
        boolean z0, z1;
        com.android.server.am.PendingIntentRecord $r2;
        com.android.server.am.PendingIntentRecord$Key $r3;
        int $i0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.content.IIntentSender;

        z0 = r1 instanceof com.android.server.am.PendingIntentRecord;

        z1 = 0;

        if z0 == 0 goto label2;

        $r2 = (com.android.server.am.PendingIntentRecord) r1;

        $r3 = $r2.<com.android.server.am.PendingIntentRecord: com.android.server.am.PendingIntentRecord$Key key>;

        $i0 = $r3.<com.android.server.am.PendingIntentRecord$Key: int type>;

        if $i0 != 5 goto label1;

        z1 = 1;

     label1:
        return z1;

     label2:
        return 0;
    }

    public boolean isIntentSenderAnActivity(android.content.IIntentSender)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0;
        boolean $z0;
        com.android.server.am.PendingIntentRecord $r1;
        com.android.server.am.PendingIntentRecord$Key $r2;
        java.lang.ClassCastException $r3;
        android.content.IIntentSender r4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r4 := @parameter0: android.content.IIntentSender;

        $z0 = r4 instanceof com.android.server.am.PendingIntentRecord;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r1 = (com.android.server.am.PendingIntentRecord) r4;

        $r2 = $r1.<com.android.server.am.PendingIntentRecord: com.android.server.am.PendingIntentRecord$Key key>;

        i0 = $r2.<com.android.server.am.PendingIntentRecord$Key: int type>;

     label2:
        if i0 != 2 goto label3;

        return 1;

     label3:
        return 0;

     label4:
        $r3 := @caughtexception;

        return 0;

        catch java.lang.ClassCastException from label1 to label2 with label4;
    }

    public boolean isIntentSenderTargetedToPackage(android.content.IIntentSender)
    {
        com.android.server.am.ActivityManagerService r0;
        boolean $z0;
        com.android.server.am.PendingIntentRecord$Key $r1, $r3, $r5;
        android.content.Intent[] $r2, $r4, $r6;
        int $i0, i1;
        java.lang.String $r7;
        java.lang.ClassCastException $r8;
        android.content.IIntentSender r9;
        com.android.server.am.PendingIntentRecord r10;
        android.content.Intent r11;
        android.content.ComponentName r12;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r9 := @parameter0: android.content.IIntentSender;

        $z0 = r9 instanceof com.android.server.am.PendingIntentRecord;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r10 = (com.android.server.am.PendingIntentRecord) r9;

        $r1 = r10.<com.android.server.am.PendingIntentRecord: com.android.server.am.PendingIntentRecord$Key key>;

        $r2 = $r1.<com.android.server.am.PendingIntentRecord$Key: android.content.Intent[] allIntents>;

        if $r2 != null goto label3;

     label2:
        return 0;

     label3:
        i1 = 0;

     label4:
        $r3 = r10.<com.android.server.am.PendingIntentRecord: com.android.server.am.PendingIntentRecord$Key key>;

        $r4 = $r3.<com.android.server.am.PendingIntentRecord$Key: android.content.Intent[] allIntents>;

        $i0 = lengthof $r4;

        if i1 >= $i0 goto label7;

        $r5 = r10.<com.android.server.am.PendingIntentRecord: com.android.server.am.PendingIntentRecord$Key key>;

        $r6 = $r5.<com.android.server.am.PendingIntentRecord$Key: android.content.Intent[] allIntents>;

        r11 = $r6[i1];

        $r7 = virtualinvoke r11.<android.content.Intent: java.lang.String getPackage()>();

        if $r7 == null goto label6;

        r12 = virtualinvoke r11.<android.content.Intent: android.content.ComponentName getComponent()>();

     label5:
        if r12 == null goto label6;

        return 0;

     label6:
        i1 = i1 + 1;

        goto label4;

     label7:
        return 1;

     label8:
        $r8 := @caughtexception;

        return 0;

        catch java.lang.ClassCastException from label1 to label2 with label8;
        catch java.lang.ClassCastException from label4 to label5 with label8;
    }

    boolean isOnDeviceIdleWhitelistLocked(int, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, $i2, $i3, $i4;
        int[] $r1, r3;
        com.android.server.am.PendingTempWhitelists $r2;
        boolean z0, z1;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        i1 = staticinvoke <android.os.UserHandle: int getAppId(int)>(i0);

        if z0 == 0 goto label1;

        r3 = r0.<com.android.server.am.ActivityManagerService: int[] mDeviceIdleExceptIdleWhitelist>;

        goto label2;

     label1:
        r3 = r0.<com.android.server.am.ActivityManagerService: int[] mDeviceIdleWhitelist>;

     label2:
        $i2 = staticinvoke <java.util.Arrays: int binarySearch(int[],int)>(r3, i1);

        if $i2 >= 0 goto label4;

        $r1 = r0.<com.android.server.am.ActivityManagerService: int[] mDeviceIdleTempWhitelist>;

        $i3 = staticinvoke <java.util.Arrays: int binarySearch(int[],int)>($r1, i1);

        if $i3 >= 0 goto label4;

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.PendingTempWhitelists mPendingTempWhitelist>;

        $i4 = virtualinvoke $r2.<com.android.server.am.PendingTempWhitelists: int indexOfKey(int)>(i0);

        if $i4 < 0 goto label3;

        goto label4;

     label3:
        z1 = 0;

        goto label5;

     label4:
        z1 = 1;

     label5:
        return z1;
    }

    boolean isPendingBroadcastProcessLocked(int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0;
        com.android.server.am.BroadcastQueue $r1, $r2, $r3;
        boolean $z0, $z1, $z2, z3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastQueue mFgBroadcastQueue>;

        $z0 = virtualinvoke $r1.<com.android.server.am.BroadcastQueue: boolean isPendingBroadcastProcessLocked(int)>(i0);

        if $z0 != 0 goto label2;

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastQueue mBgBroadcastQueue>;

        $z1 = virtualinvoke $r2.<com.android.server.am.BroadcastQueue: boolean isPendingBroadcastProcessLocked(int)>(i0);

        if $z1 != 0 goto label2;

        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastQueue mOffloadBroadcastQueue>;

        $z2 = virtualinvoke $r3.<com.android.server.am.BroadcastQueue: boolean isPendingBroadcastProcessLocked(int)>(i0);

        if $z2 == 0 goto label1;

        goto label2;

     label1:
        z3 = 0;

        goto label3;

     label2:
        z3 = 1;

     label3:
        return z3;
    }

    boolean isProcessAliveLocked(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1;
        int i0, $i6, $i7, $i8, $i9;
        long l1;
        java.lang.String $r3, $r7, $r13;
        long[] $r4, $r5, $r8;
        int[] $r6;
        boolean $z0, z1;
        byte $b2, $b3, $b4, $b5;
        java.lang.StringBuilder $r9;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        i0 = r1.<com.android.server.am.ProcessRecord: int pid>;

        z1 = 0;

        if i0 > 0 goto label1;

        return 0;

     label1:
        $r3 = r1.<com.android.server.am.ProcessRecord: java.lang.String procStatFile>;

        if $r3 != null goto label2;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/proc/");

        $i9 = r1.<com.android.server.am.ProcessRecord: int pid>;

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/stat");

        $r13 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        r1.<com.android.server.am.ProcessRecord: java.lang.String procStatFile> = $r13;

     label2:
        $r4 = r0.<com.android.server.am.ActivityManagerService: long[] mProcessStateStatsLongs>;

        $r4[0] = 0L;

        $r7 = r1.<com.android.server.am.ProcessRecord: java.lang.String procStatFile>;

        $r6 = <com.android.server.am.ActivityManagerService: int[] PROCESS_STATE_STATS_FORMAT>;

        $r5 = r0.<com.android.server.am.ActivityManagerService: long[] mProcessStateStatsLongs>;

        $z0 = staticinvoke <android.os.Process: boolean readProcFile(java.lang.String,int[],java.lang.String[],long[],float[])>($r7, $r6, null, $r5, null);

        if $z0 != 0 goto label3;

        return 0;

     label3:
        $r8 = r0.<com.android.server.am.ActivityManagerService: long[] mProcessStateStatsLongs>;

        l1 = $r8[0];

        $b2 = l1 cmp 90L;

        if $b2 == 0 goto label5;

        $b3 = l1 cmp 88L;

        if $b3 == 0 goto label5;

        $b4 = l1 cmp 120L;

        if $b4 == 0 goto label5;

        $b5 = l1 cmp 75L;

        if $b5 == 0 goto label5;

        $i6 = r1.<com.android.server.am.ProcessRecord: int pid>;

        $i7 = staticinvoke <android.os.Process: int getUidForPid(int)>($i6);

        $i8 = r1.<com.android.server.am.ProcessRecord: int uid>;

        if $i7 != $i8 goto label4;

        z1 = 1;

     label4:
        return z1;

     label5:
        return 0;
    }

    boolean isReceivingBroadcastLocked(com.android.server.am.ProcessRecord, android.util.ArraySet)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1, $r7;
        android.util.ArraySet r2, $r6, $r8;
        com.android.server.am.BroadcastQueue[] r3;
        com.android.server.am.BroadcastQueue r4, $r11;
        com.android.server.am.BroadcastRecord r5, $r10;
        boolean $z0, $z1;
        java.lang.Object $r9;
        int i0, i1, i2, i3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        r2 := @parameter1: android.util.ArraySet;

        $r6 = r1.<com.android.server.am.ProcessRecord: android.util.ArraySet curReceivers>;

        i0 = virtualinvoke $r6.<android.util.ArraySet: int size()>();

        if i0 <= 0 goto label3;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r8 = r1.<com.android.server.am.ProcessRecord: android.util.ArraySet curReceivers>;

        $r9 = virtualinvoke $r8.<android.util.ArraySet: java.lang.Object valueAt(int)>(i1);

        $r10 = (com.android.server.am.BroadcastRecord) $r9;

        $r11 = $r10.<com.android.server.am.BroadcastRecord: com.android.server.am.BroadcastQueue queue>;

        virtualinvoke r2.<android.util.ArraySet: boolean add(java.lang.Object)>($r11);

        i1 = i1 + 1;

        goto label1;

     label2:
        return 1;

     label3:
        r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastQueue[] mBroadcastQueues>;

        i2 = lengthof r3;

        i3 = 0;

     label4:
        if i3 >= i2 goto label6;

        r4 = r3[i3];

        r5 = r4.<com.android.server.am.BroadcastQueue: com.android.server.am.BroadcastRecord mPendingBroadcast>;

        if r5 == null goto label5;

        $r7 = r5.<com.android.server.am.BroadcastRecord: com.android.server.am.ProcessRecord curApp>;

        if $r7 != r1 goto label5;

        virtualinvoke r2.<android.util.ArraySet: boolean add(java.lang.Object)>(r4);

     label5:
        i3 = i3 + 1;

        goto label4;

     label6:
        $z0 = virtualinvoke r2.<android.util.ArraySet: boolean isEmpty()>();

        $z1 = 1 ^ $z0;

        return $z1;
    }

    boolean isSingleton(java.lang.String, android.content.pm.ApplicationInfo, java.lang.String, int)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1, $r2, $r4, $r7, r12, r16;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        boolean $z0, $z1, z2;
        android.content.ComponentName $r3;
        java.lang.StringBuilder $r5;
        java.lang.SecurityException $r11;
        android.content.pm.ApplicationInfo r13;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r12 := @parameter0: java.lang.String;

        r13 := @parameter1: android.content.pm.ApplicationInfo;

        r1 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        z2 = 0;

        $i1 = r13.<android.content.pm.ApplicationInfo: int uid>;

        $i2 = staticinvoke <android.os.UserHandle: int getAppId(int)>($i1);

        if $i2 < 10000 goto label2;

        $i7 = i0 & 1073741824;

        if $i7 == 0 goto label6;

        $i8 = r13.<android.content.pm.ApplicationInfo: int uid>;

        $i9 = staticinvoke <android.app.ActivityManager: int checkUidPermission(java.lang.String,int)>("android.permission.INTERACT_ACROSS_USERS", $i8);

        if $i9 != 0 goto label1;

        z2 = 1;

        goto label6;

     label1:
        $r3 = new android.content.ComponentName;

        $r4 = r13.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        specialinvoke $r3.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r4, r1);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: Component ");

        $r7 = virtualinvoke $r3.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requests FLAG_SINGLE_USER, but app does not hold ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.INTERACT_ACROSS_USERS");

        r16 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r16);

        $r11 = new java.lang.SecurityException;

        specialinvoke $r11.<java.lang.SecurityException: void <init>(java.lang.String)>(r16);

        throw $r11;

     label2:
        $r2 = "system";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r12);

        if $z0 == 0 goto label3;

        z2 = 1;

        goto label6;

     label3:
        $i3 = i0 & 1073741824;

        if $i3 == 0 goto label6;

        $i4 = r13.<android.content.pm.ApplicationInfo: int uid>;

        $z1 = staticinvoke <android.os.UserHandle: boolean isSameApp(int,int)>($i4, 1001);

        if $z1 != 0 goto label5;

        $i5 = r13.<android.content.pm.ApplicationInfo: int flags>;

        $i6 = $i5 & 8;

        if $i6 == 0 goto label4;

        goto label5;

     label4:
        z2 = 0;

        goto label6;

     label5:
        z2 = 1;

     label6:
        return z2;
    }

    public boolean isTopActivityImmersive()
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.wm.ActivityTaskManagerService $r1;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerService mActivityTaskManager>;

        $z0 = virtualinvoke $r1.<com.android.server.wm.ActivityTaskManagerService: boolean isTopActivityImmersive()>();

        return $z0;
    }

    public boolean isTopOfTask(android.os.IBinder)
    {
        com.android.server.am.ActivityManagerService r0;
        android.os.IBinder r1;
        com.android.server.wm.ActivityTaskManagerService $r2;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerService mActivityTaskManager>;

        $z0 = virtualinvoke $r2.<com.android.server.wm.ActivityTaskManagerService: boolean isTopOfTask(android.os.IBinder)>(r1);

        return $z0;
    }

    public boolean isUidActive(int, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0;
        boolean $z0, $z1, $z2;
        android.app.ActivityManagerInternal $r1;
        java.lang.Throwable $r2;
        java.lang.String r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        r3 := @parameter1: java.lang.String;

        $z0 = specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean hasUsageStatsPermission(java.lang.String)>(r3);

        if $z0 != 0 goto label1;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.PACKAGE_USAGE_STATS", "isUidActive");

     label1:
        entermonitor r0;

     label2:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $z1 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean isUidActiveLocked(int)>(i0);

        if $z1 == 0 goto label4;

        exitmonitor r0;

     label3:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return 1;

     label4:
        exitmonitor r0;

     label5:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        $r1 = r0.<com.android.server.am.ActivityManagerService: android.app.ActivityManagerInternal mInternal>;

        $z2 = virtualinvoke $r1.<android.app.ActivityManagerInternal: boolean isPendingTopUid(int)>(i0);

        return $z2;

     label6:
        $r2 := @caughtexception;

     label7:
        exitmonitor r0;

     label8:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r2;

        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    boolean isUidActiveLocked(int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0;
        com.android.server.am.UidRecord r1;
        com.android.server.am.ProcessList $r2;
        boolean $z0, z1;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        r1 = virtualinvoke $r2.<com.android.server.am.ProcessList: com.android.server.am.UidRecord getUidRecordLocked(int)>(i0);

        if r1 == null goto label1;

        $z0 = r1.<com.android.server.am.UidRecord: boolean setIdle>;

        if $z0 != 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public boolean isUserAMonkey()
    {
        com.android.server.am.ActivityManagerService r0;
        boolean $z0, $z1, z2;
        com.android.server.wm.ActivityTaskManagerService $r2;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        entermonitor r0;

     label1:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $z0 = r0.<com.android.server.am.ActivityManagerService: boolean mUserIsMonkey>;

        if $z0 != 0 goto label4;

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerService mActivityTaskManager>;

        $z1 = virtualinvoke $r2.<com.android.server.wm.ActivityTaskManagerService: boolean isControllerAMonkey()>();

        if $z1 == 0 goto label3;

     label2:
        goto label4;

     label3:
        z2 = 0;

        goto label5;

     label4:
        z2 = 1;

     label5:
        exitmonitor r0;

     label6:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return z2;

     label7:
        $r3 := @caughtexception;

     label8:
        exitmonitor r0;

     label9:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public boolean isUserRunning(int, int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, $i2, $i3, $i4, $i5;
        com.android.server.am.UserController $r1, $r2;
        boolean $z0, $z1;
        java.lang.StringBuilder $r3;
        java.lang.SecurityException $r10;
        java.lang.String r12;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.UserController mUserController>;

        $i2 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        $z0 = virtualinvoke $r1.<com.android.server.am.UserController: boolean isSameProfileGroup(int,int)>(i0, $i2);

        if $z0 != 0 goto label2;

        $i3 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.INTERACT_ACROSS_USERS");

        if $i3 != 0 goto label1;

        goto label2;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: isUserRunning() from pid=");

        $i4 = staticinvoke <android.os.Binder: int getCallingPid()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i5 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.INTERACT_ACROSS_USERS");

        r12 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r12);

        $r10 = new java.lang.SecurityException;

        specialinvoke $r10.<java.lang.SecurityException: void <init>(java.lang.String)>(r12);

        throw $r10;

     label2:
        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.UserController mUserController>;

        $z1 = virtualinvoke $r2.<com.android.server.am.UserController: boolean isUserRunning(int,int)>(i0, i1);

        return $z1;
    }

    public boolean isUserStopped(int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0;
        com.android.server.am.UserController $r1;
        com.android.server.am.UserState $r2;
        boolean z0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.UserController mUserController>;

        $r2 = virtualinvoke $r1.<com.android.server.am.UserController: com.android.server.am.UserState getStartedUserState(int)>(i0);

        if $r2 != null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    boolean isValidSingletonCall(int, int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, i2, $i3;
        boolean $z0, z1;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 = staticinvoke <android.os.UserHandle: int getAppId(int)>(i1);

        $z0 = staticinvoke <android.os.UserHandle: boolean isSameApp(int,int)>(i0, i1);

        if $z0 != 0 goto label2;

        if i2 == 1000 goto label2;

        if i2 == 1001 goto label2;

        $i3 = staticinvoke <android.app.ActivityManager: int checkUidPermission(java.lang.String,int)>("android.permission.INTERACT_ACROSS_USERS_FULL", i1);

        if $i3 != 0 goto label1;

        goto label2;

     label1:
        z1 = 0;

        goto label3;

     label2:
        z1 = 1;

     label3:
        return z1;
    }

    public boolean isVrModePackageEnabled(android.content.ComponentName)
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.ComponentName r1;
        com.android.server.wm.ActivityTaskManagerService $r2;
        java.lang.Object $r3;
        com.android.server.vr.VrManagerInternal $r4;
        int $i0, $i1;
        boolean z0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.content.ComponentName;

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerService mActivityTaskManager>;

        virtualinvoke $r2.<com.android.server.wm.ActivityTaskManagerService: void enforceSystemHasVrFeature()>();

        $r3 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Lcom/android/server/vr/VrManagerInternal;");

        $r4 = (com.android.server.vr.VrManagerInternal) $r3;

        $i0 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        $i1 = virtualinvoke $r4.<com.android.server.vr.VrManagerInternal: int hasVrPackage(android.content.ComponentName,int)>(r1, $i0);

        if $i1 != 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public void killAllBackgroundProcesses()
    {
        com.android.server.am.ActivityManagerService r0;
        long l0;
        int $i1, $i2, $i3;
        java.lang.StringBuilder $r1;
        java.lang.SecurityException $r8;
        com.android.server.am.ProcessList $r9;
        java.lang.Throwable $r10, $r11;
        java.lang.String r15;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $i1 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.KILL_BACKGROUND_PROCESSES");

        if $i1 != 0 goto label9;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        entermonitor r0;

     label2:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        r0.<com.android.server.am.ActivityManagerService: boolean mAllowLowerMemLevel> = 1;

        $r9 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        virtualinvoke $r9.<com.android.server.am.ProcessList: boolean killPackageProcessesLocked(java.lang.String,int,int,int,int,int,java.lang.String)>(null, -1, -1, 900, 10, 0, "kill all background");

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void doLowMemReportIfNeededLocked(com.android.server.am.ProcessRecord)>(null);

        exitmonitor r0;

     label3:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label5:
        $r11 := @caughtexception;

     label6:
        exitmonitor r0;

     label7:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r11;

     label8:
        $r10 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r10;

     label9:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: killAllBackgroundProcesses() from pid=");

        $i2 = staticinvoke <android.os.Binder: int getCallingPid()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.KILL_BACKGROUND_PROCESSES");

        r15 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r15);

        $r8 = new java.lang.SecurityException;

        specialinvoke $r8.<java.lang.SecurityException: void <init>(java.lang.String)>(r15);

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label6 to label7 with label5;
        catch java.lang.Throwable from label7 to label8 with label8;
    }

    void killAllBackgroundProcessesExcept(int, int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, $i3, $i4, $i5;
        long l2;
        java.lang.StringBuilder $r1;
        java.lang.SecurityException $r8;
        com.android.server.am.ProcessList $r9;
        java.lang.Throwable $r10, $r11;
        java.lang.String r15;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i3 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.KILL_BACKGROUND_PROCESSES");

        if $i3 != 0 goto label9;

        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        entermonitor r0;

     label2:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r9 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        virtualinvoke $r9.<com.android.server.am.ProcessList: void killAllBackgroundProcessesExceptLocked(int,int)>(i0, i1);

        exitmonitor r0;

     label3:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        return;

     label5:
        $r10 := @caughtexception;

     label6:
        exitmonitor r0;

     label7:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r10;

     label8:
        $r11 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw $r11;

     label9:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: killAllBackgroundProcessesExcept() from pid=");

        $i4 = staticinvoke <android.os.Binder: int getCallingPid()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i5 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.KILL_BACKGROUND_PROCESSES");

        r15 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r15);

        $r8 = new java.lang.SecurityException;

        specialinvoke $r8.<java.lang.SecurityException: void <init>(java.lang.String)>(r15);

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label6 to label7 with label5;
        catch java.lang.Throwable from label7 to label8 with label8;
    }

    void killAppAtUsersRequest(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.AppErrors $r1;
        java.lang.Throwable $r2;
        com.android.server.am.ProcessRecord r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r3 := @parameter0: com.android.server.am.ProcessRecord;

        entermonitor r0;

     label1:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.AppErrors mAppErrors>;

        virtualinvoke $r1.<com.android.server.am.AppErrors: void killAppAtUserRequestLocked(com.android.server.am.ProcessRecord)>(r3);

        exitmonitor r0;

     label2:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void killApplication(java.lang.String, int, int, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1, $r9, $r16, r17;
        int i0, i1, i2, $i3;
        android.os.Message r2;
        java.lang.StringBuilder $r4, $r13;
        java.lang.SecurityException $r8;
        com.android.server.am.ActivityManagerService$MainHandler $r10, $r12;
        android.os.Bundle $r11;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r17 := @parameter3: java.lang.String;

        if r1 != null goto label1;

        return;

     label1:
        if i0 >= 0 goto label2;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid appid specified for pkg : ");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r16);

        return;

     label2:
        i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i3 = staticinvoke <android.os.UserHandle: int getAppId(int)>(i2);

        if $i3 != 1000 goto label3;

        $r10 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        r2 = virtualinvoke $r10.<com.android.server.am.ActivityManagerService$MainHandler: android.os.Message obtainMessage(int)>(22);

        r2.<android.os.Message: int arg1> = i0;

        r2.<android.os.Message: int arg2> = i1;

        $r11 = new android.os.Bundle;

        specialinvoke $r11.<android.os.Bundle: void <init>()>();

        virtualinvoke $r11.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("pkg", r1);

        virtualinvoke $r11.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("reason", r17);

        r2.<android.os.Message: java.lang.Object obj> = $r11;

        $r12 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        virtualinvoke $r12.<com.android.server.am.ActivityManagerService$MainHandler: boolean sendMessage(android.os.Message)>(r2);

        return;

     label3:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cannot kill pkg: ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = new java.lang.SecurityException;

        $r9 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.SecurityException: void <init>(java.lang.String)>($r9);

        throw $r8;
    }

    public void killApplicationProcess(java.lang.String, int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1;
        com.android.server.am.ProcessRecord r1;
        java.lang.StringBuilder $r2, r19;
        java.lang.SecurityException $r6;
        java.lang.String $r7, $r12, r16;
        android.app.IApplicationThread $r13, r17;
        java.lang.Throwable $r14;
        android.os.RemoteException $r15;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r16 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        if r16 != null goto label01;

        return;

     label01:
        i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if i1 != 1000 goto label16;

        entermonitor r0;

     label02:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        r1 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord getProcessRecordLocked(java.lang.String,int,boolean)>(r16, i0, 1);

     label03:
        if r1 == null goto label10;

     label04:
        r17 = r1.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

     label05:
        if r17 == null goto label10;

     label06:
        $r13 = r1.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        interfaceinvoke $r13.<android.app.IApplicationThread: void scheduleSuicide()>();

     label07:
        goto label09;

     label08:
        $r15 := @caughtexception;

     label09:
        goto label11;

     label10:
        r19 = new java.lang.StringBuilder;

        specialinvoke r19.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Process/uid not found attempting kill of ");

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16);

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" / ");

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r12 = virtualinvoke r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r12);

     label11:
        exitmonitor r0;

     label12:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label13:
        $r14 := @caughtexception;

     label14:
        exitmonitor r0;

     label15:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r14;

     label16:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cannot kill app process: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16);

        $r6 = new java.lang.SecurityException;

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.SecurityException: void <init>(java.lang.String)>($r7);

        throw $r6;

        catch java.lang.Throwable from label02 to label03 with label13;
        catch java.lang.Throwable from label04 to label05 with label13;
        catch android.os.RemoteException from label06 to label07 with label08;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label10 to label11 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
    }

    public void killBackgroundProcesses(java.lang.String, int)
    {
        com.android.server.am.ActivityManagerService r0;
        long l0;
        android.content.pm.IPackageManager r1;
        int i1, $i2, $i3, $i4, $i5, $i7, $i8, $i9, i11, i12, i13, i14, i15;
        com.android.server.am.UserController $r2, $r3;
        java.lang.String $r6, r19, r21;
        java.lang.StringBuilder $r7, r24;
        java.lang.SecurityException $r14;
        java.lang.Throwable $r15, $r17, $r18, r26;
        android.os.RemoteException $r16;
        int[] r22;
        com.android.server.am.ProcessList r25;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r19 := @parameter0: java.lang.String;

        i11 := @parameter1: int;

        $i2 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.KILL_BACKGROUND_PROCESSES");

        if $i2 == 0 goto label02;

        $i7 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.RESTART_PACKAGES");

        if $i7 != 0 goto label01;

        goto label02;

     label01:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: killBackgroundProcesses() from pid=");

        $i8 = staticinvoke <android.os.Binder: int getCallingPid()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i9 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.KILL_BACKGROUND_PROCESSES");

        r21 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r21);

        $r14 = new java.lang.SecurityException;

        specialinvoke $r14.<java.lang.SecurityException: void <init>(java.lang.String)>(r21);

        throw $r14;

     label02:
        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.UserController mUserController>;

        $i3 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i4 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i12 = virtualinvoke $r2.<com.android.server.am.UserController: int handleIncomingUser(int,int,int,boolean,int,java.lang.String,java.lang.String)>($i3, $i4, i11, 1, 2, "killBackgroundProcesses", null);

        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.UserController mUserController>;

        r22 = virtualinvoke $r3.<com.android.server.am.UserController: int[] expandUserId(int)>(i12);

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label03:
        r1 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        i13 = lengthof r22;

     label04:
        i14 = 0;

     label05:
        if i14 >= i13 goto label21;

        i1 = r22[i14];

     label06:
        $i5 = interfaceinvoke r1.<android.content.pm.IPackageManager: int getPackageUid(java.lang.String,int,int)>(r19, 268435456, i1);

        i15 = staticinvoke <android.os.UserHandle: int getAppId(int)>($i5);

     label07:
        goto label09;

     label08:
        $r16 := @caughtexception;

        i15 = -1;

     label09:
        if i15 != -1 goto label12;

     label10:
        r24 = new java.lang.StringBuilder;

        specialinvoke r24.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid packageName: ");

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r19);

        $r6 = virtualinvoke r24.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r6);

     label11:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label12:
        entermonitor r0;

     label13:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        r25 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

     label14:
        virtualinvoke r25.<com.android.server.am.ProcessList: boolean killPackageProcessesLocked(java.lang.String,int,int,int,int,int,java.lang.String)>(r19, i15, i1, 500, 10, 0, "kill background");

        exitmonitor r0;

     label15:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

     label16:
        i14 = i14 + 1;

        goto label05;

     label17:
        $r15 := @caughtexception;

        r26 = $r15;

     label18:
        exitmonitor r0;

     label19:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw r26;

     label20:
        $r17 := @caughtexception;

        r26 = $r17;

        goto label18;

     label21:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label22:
        $r18 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r18;

        catch java.lang.Throwable from label03 to label04 with label22;
        catch android.os.RemoteException from label06 to label07 with label08;
        catch java.lang.Throwable from label06 to label07 with label22;
        catch java.lang.Throwable from label10 to label11 with label22;
        catch java.lang.Throwable from label12 to label13 with label22;
        catch java.lang.Throwable from label13 to label14 with label17;
        catch java.lang.Throwable from label14 to label15 with label20;
        catch java.lang.Throwable from label15 to label16 with label22;
        catch java.lang.Throwable from label18 to label19 with label20;
        catch java.lang.Throwable from label19 to label20 with label22;
    }

    public void killPackageDependents(java.lang.String, int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i2, i3;
        long l1;
        com.android.server.am.ProcessList r1;
        java.lang.NullPointerException $r2;
        java.lang.String $r5, $r10, r14;
        java.lang.StringBuilder $r6, r18;
        java.lang.IllegalArgumentException $r9;
        android.os.RemoteException $r11;
        java.lang.Throwable $r12, $r13;
        android.content.pm.IPackageManager r15;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r14 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.KILL_UID", "killPackageDependents()");

        if r14 == null goto label14;

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        r15 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

     label01:
        i2 = interfaceinvoke r15.<android.content.pm.IPackageManager: int getPackageUid(java.lang.String,int,int)>(r14, 268435456, i0);

     label02:
        goto label04;

     label03:
        $r11 := @caughtexception;

        i2 = -1;

     label04:
        if i0 == -1 goto label06;

        if i2 == -1 goto label05;

        goto label06;

     label05:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot kill dependents of non-existing package ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r14);

        $r9 = new java.lang.IllegalArgumentException;

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r9;

     label06:
        entermonitor r0;

     label07:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        i3 = staticinvoke <android.os.UserHandle: int getAppId(int)>(i2);

        r18 = new java.lang.StringBuilder;

        specialinvoke r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dep: ");

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r14);

        $r5 = virtualinvoke r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.server.am.ProcessList: boolean killPackageProcessesLocked(java.lang.String,int,int,int,int,int,java.lang.String)>(r14, i3, i0, 0, 12, 0, $r5);

        exitmonitor r0;

     label08:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

     label09:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return;

     label10:
        $r12 := @caughtexception;

     label11:
        exitmonitor r0;

     label12:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r12;

     label13:
        $r13 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r13;

     label14:
        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("Cannot kill the dependents of a package without its name.");

        throw $r2;

        catch android.os.RemoteException from label01 to label02 with label03;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label11 to label12 with label10;
        catch java.lang.Throwable from label12 to label13 with label13;
    }

    public boolean killPids(int[], java.lang.String, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ActivityManagerService$PidMap r1, $r7, $r8;
        int i0, $i1, $i3, $i4, $i5, i6, i7, $i8, i9, i10, i11, i12, $i13;
        java.lang.SecurityException $r2;
        boolean $z0, z1, z3, z4;
        java.lang.Throwable $r9;
        int[] r10;
        java.lang.String r11, $r14;
        com.android.server.am.ProcessRecord r12, r15;
        java.lang.StringBuilder r13;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r10 := @parameter0: int[];

        r11 := @parameter1: java.lang.String;

        z1 := @parameter2: boolean;

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if $i1 != 1000 goto label24;

        if r11 != null goto label01;

        r11 = "Unknown";

        goto label01;

     label01:
        r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        entermonitor r1;

        i6 = 0;

        i7 = 0;

     label02:
        $i8 = lengthof r10;

        if i7 >= $i8 goto label07;

        $r8 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        $i5 = r10[i7];

        r12 = virtualinvoke $r8.<com.android.server.am.ActivityManagerService$PidMap: com.android.server.am.ProcessRecord get(int)>($i5);

     label03:
        i9 = i6;

        if r12 == null goto label06;

     label04:
        i0 = r12.<com.android.server.am.ProcessRecord: int setAdj>;

     label05:
        i9 = i6;

        if i0 <= i6 goto label06;

        i9 = i0;

     label06:
        i7 = i7 + 1;

        i6 = i9;

        goto label02;

     label07:
        i10 = i6;

        if i6 >= 999 goto label08;

        i10 = i6;

        if i6 <= 900 goto label08;

        i10 = 900;

     label08:
        i11 = i10;

        if z1 != 0 goto label09;

        i11 = i10;

        if i10 >= 500 goto label09;

        i11 = 500;

     label09:
        r13 = new java.lang.StringBuilder;

        specialinvoke r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Killing processes ");

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at adjustment ");

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i11);

        $r14 = virtualinvoke r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r14);

     label10:
        i12 = 0;

        z3 = 0;

     label11:
        $i13 = lengthof r10;

        if i12 >= $i13 goto label19;

        $r7 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        $i3 = r10[i12];

        r15 = virtualinvoke $r7.<com.android.server.am.ActivityManagerService$PidMap: com.android.server.am.ProcessRecord get(int)>($i3);

     label12:
        if r15 != null goto label13;

        z4 = z3;

        goto label18;

     label13:
        z4 = z3;

     label14:
        $i4 = r15.<com.android.server.am.ProcessRecord: int setAdj>;

        if $i4 < i11 goto label18;

     label15:
        z4 = z3;

     label16:
        $z0 = r15.<com.android.server.am.ProcessRecord: boolean killedByAm>;

        if $z0 != 0 goto label18;

        virtualinvoke r15.<com.android.server.am.ProcessRecord: void kill(java.lang.String,int,int,boolean)>(r11, 13, 12, 1);

     label17:
        z4 = 1;

     label18:
        i12 = i12 + 1;

        z3 = z4;

        goto label11;

     label19:
        exitmonitor r1;

     label20:
        return z3;

     label21:
        $r9 := @caughtexception;

     label22:
        exitmonitor r1;

     label23:
        throw $r9;

     label24:
        $r2 = new java.lang.SecurityException;

        specialinvoke $r2.<java.lang.SecurityException: void <init>(java.lang.String)>("killPids only available to the system");

        throw $r2;

        catch java.lang.Throwable from label02 to label03 with label21;
        catch java.lang.Throwable from label04 to label05 with label21;
        catch java.lang.Throwable from label09 to label10 with label21;
        catch java.lang.Throwable from label11 to label12 with label21;
        catch java.lang.Throwable from label14 to label15 with label21;
        catch java.lang.Throwable from label16 to label17 with label21;
        catch java.lang.Throwable from label19 to label20 with label21;
        catch java.lang.Throwable from label22 to label23 with label21;
    }

    public boolean killProcessesBelowForeground(java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1;
        int $i0;
        java.lang.SecurityException $r2;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if $i0 != 1000 goto label1;

        $z0 = specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean killProcessesBelowAdj(int,java.lang.String)>(0, r1);

        return $z0;

     label1:
        $r2 = new java.lang.SecurityException;

        specialinvoke $r2.<java.lang.SecurityException: void <init>(java.lang.String)>("killProcessesBelowForeground() only available to system");

        throw $r2;
    }

    public void killProcessesWhenImperceptible(int[], java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1;
        int i0, $i2;
        long l1;
        java.lang.SecurityException $r2;
        com.android.server.am.ProcessList $r3;
        java.lang.Throwable $r4;
        int[] r5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r5 := @parameter0: int[];

        r1 := @parameter1: java.lang.String;

        $i2 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.FORCE_STOP_PACKAGES");

        if $i2 != 0 goto label4;

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        virtualinvoke $r3.<com.android.server.am.ProcessList: void killProcessesWhenImperceptible(int[],java.lang.String,int)>(r5, r1, i0);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return;

     label3:
        $r4 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r4;

     label4:
        $r2 = new java.lang.SecurityException;

        specialinvoke $r2.<java.lang.SecurityException: void <init>(java.lang.String)>("Requires permission android.permission.FORCE_STOP_PACKAGES");

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void killUid(int, int, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1;
        long l2;
        com.android.server.am.ProcessList r1;
        java.lang.Throwable $r2, $r3;
        java.lang.String r4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r4 := @parameter2: java.lang.String;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.KILL_UID", "killUid");

        entermonitor r0;

     label01:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label02:
        r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

     label03:
        if r4 == null goto label04;

        goto label05;

     label04:
        r4 = "kill uid";

     label05:
        virtualinvoke r1.<com.android.server.am.ProcessList: boolean killPackageProcessesLocked(java.lang.String,int,int,int,boolean,boolean,boolean,boolean,boolean,int,int,java.lang.String)>(null, i0, i1, -800, 0, 1, 1, 1, 0, 13, 11, r4);

     label06:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

     label07:
        exitmonitor r0;

     label08:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label09:
        $r3 := @caughtexception;

     label10:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

     label11:
        throw $r3;

     label12:
        $r2 := @caughtexception;

     label13:
        exitmonitor r0;

     label14:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r2;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label07 to label08 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label11 to label12 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public void killUidForPermissionChange(int, int, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1;
        long l2;
        com.android.server.am.ProcessList r1;
        java.lang.Throwable $r2, $r3;
        java.lang.String r4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r4 := @parameter2: java.lang.String;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.KILL_UID", "killUid");

        entermonitor r0;

     label01:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label02:
        r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

     label03:
        if r4 == null goto label04;

        goto label05;

     label04:
        r4 = "kill uid";

     label05:
        virtualinvoke r1.<com.android.server.am.ProcessList: boolean killPackageProcessesLocked(java.lang.String,int,int,int,boolean,boolean,boolean,boolean,boolean,int,int,java.lang.String)>(null, i0, i1, -800, 0, 1, 1, 1, 0, 8, 0, r4);

     label06:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

     label07:
        exitmonitor r0;

     label08:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label09:
        $r3 := @caughtexception;

     label10:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

     label11:
        throw $r3;

     label12:
        $r2 := @caughtexception;

     label13:
        exitmonitor r0;

     label14:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r2;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label07 to label08 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label11 to label12 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public void lambda$getProviderMimeTypeAsync$1$ActivityManagerService(java.lang.String, int, android.os.RemoteCallback, android.os.Bundle)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0;
        android.os.RemoteCallback r1;
        android.os.Bundle r2;
        long l1;
        java.lang.Throwable $r3;
        java.lang.String r4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r4 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 := @parameter2: android.os.RemoteCallback;

        r2 := @parameter3: android.os.Bundle;

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        specialinvoke r0.<com.android.server.am.ActivityManagerService: void removeContentProviderExternalUnchecked(java.lang.String,android.os.IBinder,int)>(r4, null, i0);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        virtualinvoke r1.<android.os.RemoteCallback: void sendResult(android.os.Bundle)>(r2);

        return;

     label3:
        $r3 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void lambda$handleAppDiedLocked$0$ActivityManagerService(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r4, $r10;
        com.android.server.am.ActiveInstrumentation $r7;
        android.content.ComponentName $r8;
        android.os.Bundle $r11;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Crash of app ");

        $r4 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" running instrumentation ");

        $r7 = virtualinvoke r1.<com.android.server.am.ProcessRecord: com.android.server.am.ActiveInstrumentation getActiveInstrumentation()>();

        $r8 = $r7.<com.android.server.am.ActiveInstrumentation: android.content.ComponentName mClass>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r10);

        $r11 = new android.os.Bundle;

        specialinvoke $r11.<android.os.Bundle: void <init>()>();

        virtualinvoke $r11.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("shortMsg", "Process crashed.");

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void finishInstrumentationLocked(com.android.server.am.ProcessRecord,int,android.os.Bundle)>(r1, 0, $r11);

        return;
    }

    public void lambda$schedulePendingSystemServerWtfs$5$ActivityManagerService(java.util.LinkedList)
    {
        com.android.server.am.ActivityManagerService r0;
        java.util.LinkedList r1;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.util.LinkedList;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void handlePendingSystemServerWtfs(java.util.LinkedList)>(r1);

        return;
    }

    public void lambda$systemReady$2$ActivityManagerService(android.os.PowerSaveState)
    {
        com.android.server.am.ActivityManagerService r0;
        android.os.PowerSaveState r1;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.PowerSaveState;

        $z0 = r1.<android.os.PowerSaveState: boolean batterySaverEnabled>;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void updateForceBackgroundCheck(boolean)>($z0);

        return;
    }

    public void lambda$systemReady$3$ActivityManagerService(int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, $i1, $i3, $i4;
        java.lang.StringBuilder $r2;
        java.lang.String $r7;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Uid ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" sent too many Binders to uid ");

        $i1 = staticinvoke <android.os.Process: int myUid()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("ActivityManager", $r7);

        staticinvoke <android.os.BinderProxy: void dumpProxyDebugInfo()>();

        if i0 != 1000 goto label1;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", "Skipping kill (uid is SYSTEM)");

        goto label2;

     label1:
        $i3 = staticinvoke <android.os.UserHandle: int getAppId(int)>(i0);

        $i4 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void killUid(int,int,java.lang.String)>($i3, $i4, "Too many Binders sent to SYSTEM");

     label2:
        return;
    }

    public boolean launchBugReportHandlerApp()
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.Context $r2, $r7;
        boolean $z0, $z1;
        java.lang.StringBuilder $r3;
        int $i0;
        java.lang.String $r6;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $r2 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $z0 = staticinvoke <com.android.server.am.BugReportHandlerUtil: boolean isBugReportHandlerEnabled(android.content.Context)>($r2);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("launchBugReportHandlerApp requested by UID ");

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", $r6);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.DUMP", "launchBugReportHandlerApp");

        $r7 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $z1 = staticinvoke <com.android.server.am.BugReportHandlerUtil: boolean launchBugReportHandlerApp(android.content.Context)>($r7);

        return $z1;
    }

    public void makePackageIdle(java.lang.String, int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, $i2, $i3, $i4, $i6, $i7, $i10, $i11, $i12, $i13, $i15, $i16, $i17, i18, i19, i20, i21, i22, i23;
        long l1, $l8;
        com.android.server.am.UidRecord r1;
        java.lang.StringBuilder $r2, r38, r40;
        java.lang.SecurityException $r9;
        com.android.server.am.UserController $r10;
        java.lang.String $r13, $r22, $r28, r35, r44;
        android.os.PowerManagerInternal $r14, $r17, $r18, $r29, $r32, $r33;
        com.android.server.am.ProcessList $r15, $r19;
        com.android.server.am.ActiveUids $r16, $r20;
        byte $b9;
        boolean $z0;
        android.os.RemoteException $r30;
        java.lang.Throwable $r31, $r34;
        android.content.pm.IPackageManager r36;
        java.lang.IllegalArgumentException r39;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r35 := @parameter0: java.lang.String;

        i18 := @parameter1: int;

        $i2 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.FORCE_STOP_PACKAGES");

        if $i2 != 0 goto label31;

        i19 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r10 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.UserController mUserController>;

        $i6 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i0 = virtualinvoke $r10.<com.android.server.am.UserController: int handleIncomingUser(int,int,int,boolean,int,java.lang.String,java.lang.String)>(i19, $i6, i18, 1, 2, "makePackageIdle", null);

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        entermonitor r0;

     label01:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        r36 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

     label02:
        i20 = -1;

     label03:
        i21 = interfaceinvoke r36.<android.content.pm.IPackageManager: int getPackageUid(java.lang.String,int,int)>(r35, 268443648, 0);

     label04:
        i20 = i21;

        goto label06;

     label05:
        $r30 := @caughtexception;

     label06:
        if i20 == -1 goto label23;

     label07:
        $r14 = r0.<com.android.server.am.ActivityManagerService: android.os.PowerManagerInternal mLocalPowerManager>;

        if $r14 == null goto label08;

        $r29 = r0.<com.android.server.am.ActivityManagerService: android.os.PowerManagerInternal mLocalPowerManager>;

        virtualinvoke $r29.<android.os.PowerManagerInternal: void startUidChanges()>();

     label08:
        i22 = staticinvoke <android.os.UserHandle: int getAppId(int)>(i20);

        $r15 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r16 = $r15.<com.android.server.am.ProcessList: com.android.server.am.ActiveUids mActiveUids>;

        $i7 = virtualinvoke $r16.<com.android.server.am.ActiveUids: int size()>();

        i23 = $i7 - 1;

     label09:
        if i23 < 0 goto label19;

     label10:
        $r19 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r20 = $r19.<com.android.server.am.ProcessList: com.android.server.am.ActiveUids mActiveUids>;

        r1 = virtualinvoke $r20.<com.android.server.am.ActiveUids: com.android.server.am.UidRecord valueAt(int)>(i23);

        $l8 = r1.<com.android.server.am.UidRecord: long lastBackgroundTime>;

        $b9 = $l8 cmp 0L;

        if $b9 <= 0 goto label18;

        $z0 = r1.<com.android.server.am.UidRecord: boolean idle>;

        if $z0 != 0 goto label18;

        $i10 = r1.<com.android.server.am.UidRecord: int uid>;

        $i11 = staticinvoke <android.os.UserHandle: int getAppId(int)>($i10);

        if $i11 != i22 goto label17;

     label11:
        if i0 == -1 goto label15;

     label12:
        $i16 = r1.<com.android.server.am.UidRecord: int uid>;

        $i17 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i16);

        if i0 != $i17 goto label14;

     label13:
        goto label15;

     label14:
        goto label18;

     label15:
        $i12 = r1.<com.android.server.am.UidRecord: int uid>;

        staticinvoke <com.android.server.am.EventLogTags: void writeAmUidIdle(int)>($i12);

        r1.<com.android.server.am.UidRecord: boolean idle> = 1;

        r1.<com.android.server.am.UidRecord: boolean setIdle> = 1;

        r38 = new java.lang.StringBuilder;

        specialinvoke r38.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Idling uid ");

        $i13 = r1.<com.android.server.am.UidRecord: int uid>;

        $r22 = staticinvoke <android.os.UserHandle: java.lang.String formatUid(int)>($i13);

        virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from package ");

        virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r35);

        virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" user ");

        virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r28 = virtualinvoke r38.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r28);

        $i15 = r1.<com.android.server.am.UidRecord: int uid>;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void doStopUidLocked(int,com.android.server.am.UidRecord)>($i15, r1);

     label16:
        goto label18;

     label17:
        goto label18;

     label18:
        i23 = i23 + -1;

        goto label09;

     label19:
        $r17 = r0.<com.android.server.am.ActivityManagerService: android.os.PowerManagerInternal mLocalPowerManager>;

        if $r17 == null goto label20;

        $r18 = r0.<com.android.server.am.ActivityManagerService: android.os.PowerManagerInternal mLocalPowerManager>;

        virtualinvoke $r18.<android.os.PowerManagerInternal: void finishUidChanges()>();

     label20:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

     label21:
        exitmonitor r0;

     label22:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label23:
        r39 = new java.lang.IllegalArgumentException;

        r40 = new java.lang.StringBuilder;

        specialinvoke r40.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown package name ");

        virtualinvoke r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r35);

        $r13 = virtualinvoke r40.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r39.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r13);

        throw r39;

     label24:
        $r31 := @caughtexception;

     label25:
        $r32 = r0.<com.android.server.am.ActivityManagerService: android.os.PowerManagerInternal mLocalPowerManager>;

        if $r32 == null goto label26;

        $r33 = r0.<com.android.server.am.ActivityManagerService: android.os.PowerManagerInternal mLocalPowerManager>;

        virtualinvoke $r33.<android.os.PowerManagerInternal: void finishUidChanges()>();

     label26:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

     label27:
        throw $r31;

     label28:
        $r34 := @caughtexception;

     label29:
        exitmonitor r0;

     label30:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r34;

     label31:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: makePackageIdle() from pid=");

        $i3 = staticinvoke <android.os.Binder: int getCallingPid()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i4 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.FORCE_STOP_PACKAGES");

        r44 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r44);

        $r9 = new java.lang.SecurityException;

        specialinvoke $r9.<java.lang.SecurityException: void <init>(java.lang.String)>(r44);

        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label24;
        catch android.os.RemoteException from label03 to label04 with label05;
        catch java.lang.Throwable from label03 to label04 with label24;
        catch java.lang.Throwable from label07 to label08 with label24;
        catch java.lang.Throwable from label08 to label09 with label24;
        catch java.lang.Throwable from label10 to label11 with label24;
        catch java.lang.Throwable from label12 to label13 with label24;
        catch java.lang.Throwable from label15 to label16 with label24;
        catch java.lang.Throwable from label19 to label20 with label28;
        catch java.lang.Throwable from label20 to label21 with label28;
        catch java.lang.Throwable from label21 to label22 with label28;
        catch java.lang.Throwable from label23 to label24 with label24;
        catch java.lang.Throwable from label25 to label26 with label28;
        catch java.lang.Throwable from label26 to label27 with label28;
        catch java.lang.Throwable from label27 to label28 with label28;
        catch java.lang.Throwable from label29 to label30 with label28;
    }

    void maybeTriggerWatchdog()
    {
        com.android.server.am.ActivityManagerService r0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        return;
    }

    public void monitor()
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.Throwable $r2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        entermonitor r0;

     label1:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        exitmonitor r0;

     label2:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean moveActivityTaskToBack(android.os.IBinder, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        android.os.IBinder r1;
        boolean z0, $z1;
        com.android.server.wm.ActivityTaskManagerService $r2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        z0 := @parameter1: boolean;

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerService mActivityTaskManager>;

        $z1 = virtualinvoke $r2.<com.android.server.wm.ActivityTaskManagerService: boolean moveActivityTaskToBack(android.os.IBinder,boolean)>(r1, z0);

        return $z1;
    }

    public void moveTaskToFront(android.app.IApplicationThread, java.lang.String, int, int, android.os.Bundle)
    {
        com.android.server.am.ActivityManagerService r0;
        android.app.IApplicationThread r1;
        java.lang.String r2;
        int i0, i1;
        android.os.Bundle r3;
        com.android.server.wm.ActivityTaskManagerService $r4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.app.IApplicationThread;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r3 := @parameter4: android.os.Bundle;

        $r4 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerService mActivityTaskManager>;

        virtualinvoke $r4.<com.android.server.wm.ActivityTaskManagerService: void moveTaskToFront(android.app.IApplicationThread,java.lang.String,int,int,android.os.Bundle)>(r1, r2, i0, i1, r3);

        return;
    }

    public void moveTaskToStack(int, int, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1;
        boolean z0;
        com.android.server.wm.ActivityTaskManagerService $r1;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        $r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerService mActivityTaskManager>;

        virtualinvoke $r1.<com.android.server.wm.ActivityTaskManagerService: void moveTaskToStack(int,int,boolean)>(i0, i1, z0);

        return;
    }

    public boolean moveTopActivityToPinnedStack(int, android.graphics.Rect)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0;
        android.graphics.Rect r1;
        com.android.server.wm.ActivityTaskManagerService $r2;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: android.graphics.Rect;

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerService mActivityTaskManager>;

        $z0 = virtualinvoke $r2.<com.android.server.wm.ActivityTaskManagerService: boolean moveTopActivityToPinnedStack(int,android.graphics.Rect)>(i0, r1);

        return $z0;
    }

    public void noteAlarmFinish(android.content.IIntentSender, android.os.WorkSource, int, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        android.os.WorkSource r1, r4;
        java.lang.String r2;
        boolean $z0, $z1;
        int $i0, i1, i2, i3, i4;
        android.content.IIntentSender r3;
        com.android.server.am.PendingIntentRecord r5;
        com.android.server.am.BatteryStatsService $r6;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r3 := @parameter0: android.content.IIntentSender;

        r1 := @parameter1: android.os.WorkSource;

        i1 := @parameter2: int;

        r2 := @parameter3: java.lang.String;

        r4 = r1;

        if r1 == null goto label1;

        r4 = r1;

        $z1 = virtualinvoke r1.<android.os.WorkSource: boolean isEmpty()>();

        if $z1 == 0 goto label1;

        r4 = null;

     label1:
        i2 = i1;

        if i1 > 0 goto label6;

        i2 = i1;

        if r4 != null goto label6;

        if r3 == null goto label5;

        $z0 = r3 instanceof com.android.server.am.PendingIntentRecord;

        if $z0 != 0 goto label2;

        return;

     label2:
        r5 = (com.android.server.am.PendingIntentRecord) r3;

        i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i0 = r5.<com.android.server.am.PendingIntentRecord: int uid>;

        if $i0 != i3 goto label3;

        i4 = 1000;

        goto label4;

     label3:
        i4 = r5.<com.android.server.am.PendingIntentRecord: int uid>;

     label4:
        i2 = i4;

        goto label6;

     label5:
        return;

     label6:
        $r6 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        virtualinvoke $r6.<com.android.server.am.BatteryStatsService: void noteAlarmFinish(java.lang.String,android.os.WorkSource,int)>(r2, r4, i2);

        return;
    }

    public void noteAlarmStart(android.content.IIntentSender, android.os.WorkSource, int, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        android.os.WorkSource r1, r4;
        java.lang.String r2;
        boolean $z0, $z1;
        int $i0, i1, i2, i3, i4;
        android.content.IIntentSender r3;
        com.android.server.am.PendingIntentRecord r5;
        com.android.server.am.BatteryStatsService $r6;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r3 := @parameter0: android.content.IIntentSender;

        r1 := @parameter1: android.os.WorkSource;

        i1 := @parameter2: int;

        r2 := @parameter3: java.lang.String;

        r4 = r1;

        if r1 == null goto label1;

        r4 = r1;

        $z1 = virtualinvoke r1.<android.os.WorkSource: boolean isEmpty()>();

        if $z1 == 0 goto label1;

        r4 = null;

     label1:
        i2 = i1;

        if i1 > 0 goto label6;

        i2 = i1;

        if r4 != null goto label6;

        if r3 == null goto label5;

        $z0 = r3 instanceof com.android.server.am.PendingIntentRecord;

        if $z0 != 0 goto label2;

        return;

     label2:
        r5 = (com.android.server.am.PendingIntentRecord) r3;

        i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i0 = r5.<com.android.server.am.PendingIntentRecord: int uid>;

        if $i0 != i3 goto label3;

        i4 = 1000;

        goto label4;

     label3:
        i4 = r5.<com.android.server.am.PendingIntentRecord: int uid>;

     label4:
        i2 = i4;

        goto label6;

     label5:
        return;

     label6:
        $r6 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        virtualinvoke $r6.<com.android.server.am.BatteryStatsService: void noteAlarmStart(java.lang.String,android.os.WorkSource,int)>(r2, r4, i2);

        return;
    }

    void noteUidProcessState(int, int, int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, i2, i3, i5, $i6, $i7, i12, i14, i15, i16, i17;
        android.util.ArrayMap r1, r2;
        com.android.server.am.ActivityManagerService$Association r3;
        long l4, $l8, $l9, $l10, $l11;
        com.android.server.am.BatteryStatsService $r4;
        com.android.server.appop.AppOpsService $r5;
        boolean $z0;
        android.util.SparseArray $r6, $r7, $r10;
        java.lang.Object $r8, $r9, $r11, $r12;
        long[] r14;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i12 := @parameter2: int;

        $r4 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        virtualinvoke $r4.<com.android.server.am.BatteryStatsService: void noteUidProcessState(int,int)>(i0, i1);

        $r5 = r0.<com.android.server.am.ActivityManagerService: com.android.server.appop.AppOpsService mAppOpsService>;

        virtualinvoke $r5.<com.android.server.appop.AppOpsService: void updateUidProcState(int,int,int)>(i0, i1, i12);

        $z0 = r0.<com.android.server.am.ActivityManagerService: boolean mTrackingAssociations>;

        if $z0 == 0 goto label8;

        i14 = 0;

        $r6 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mAssociations>;

        i15 = virtualinvoke $r6.<android.util.SparseArray: int size()>();

     label1:
        if i14 >= i15 goto label8;

        $r7 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mAssociations>;

        $r8 = virtualinvoke $r7.<android.util.SparseArray: java.lang.Object valueAt(int)>(i14);

        r1 = (android.util.ArrayMap) $r8;

        i16 = 0;

        i2 = virtualinvoke r1.<android.util.ArrayMap: int size()>();

     label2:
        if i16 >= i2 goto label7;

        $r9 = virtualinvoke r1.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i16);

        $r10 = (android.util.SparseArray) $r9;

        $r11 = virtualinvoke $r10.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r2 = (android.util.ArrayMap) $r11;

        if r2 == null goto label6;

        i17 = 0;

        i3 = virtualinvoke r2.<android.util.ArrayMap: int size()>();

     label3:
        if i17 >= i3 goto label5;

        $r12 = virtualinvoke r2.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i17);

        r3 = (com.android.server.am.ActivityManagerService$Association) $r12;

        $i6 = r3.<com.android.server.am.ActivityManagerService$Association: int mNesting>;

        if $i6 < 1 goto label4;

        l4 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r14 = r3.<com.android.server.am.ActivityManagerService$Association: long[] mStateTimes>;

        $i7 = r3.<com.android.server.am.ActivityManagerService$Association: int mLastState>;

        i5 = $i7 + 0;

        $l10 = r14[i5];

        $l8 = r3.<com.android.server.am.ActivityManagerService$Association: long mLastStateUptime>;

        $l9 = l4 - $l8;

        $l11 = $l10 + $l9;

        r14[i5] = $l11;

        r3.<com.android.server.am.ActivityManagerService$Association: int mLastState> = i1;

        r3.<com.android.server.am.ActivityManagerService$Association: long mLastStateUptime> = l4;

        goto label4;

     label4:
        i17 = i17 + 1;

        goto label3;

     label5:
        goto label6;

     label6:
        i16 = i16 + 1;

        goto label2;

     label7:
        i14 = i14 + 1;

        goto label1;

     label8:
        return;
    }

    public void noteWakeupAlarm(android.content.IIntentSender, android.os.WorkSource, int, java.lang.String, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1, r2, r8, r9;
        int $i1, $i3, $i5, i6, i7, i8, i9, i10, i11, i12;
        long $l2, $l4;
        boolean $z0, $z1;
        android.content.IIntentSender r3;
        android.os.WorkSource r4, r5;
        com.android.server.am.PendingIntentRecord r6;
        com.android.server.am.BatteryStatsService $r7;
        android.app.usage.UsageStatsManagerInternal r10, r11;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r3 := @parameter0: android.content.IIntentSender;

        r4 := @parameter1: android.os.WorkSource;

        i6 := @parameter2: int;

        r1 := @parameter3: java.lang.String;

        r2 := @parameter4: java.lang.String;

        r5 = r4;

        if r4 == null goto label01;

        r5 = r4;

        $z1 = virtualinvoke r4.<android.os.WorkSource: boolean isEmpty()>();

        if $z1 == 0 goto label01;

        r5 = null;

     label01:
        i7 = i6;

        if i6 > 0 goto label06;

        i7 = i6;

        if r5 != null goto label06;

        if r3 == null goto label05;

        $z0 = r3 instanceof com.android.server.am.PendingIntentRecord;

        if $z0 != 0 goto label02;

        return;

     label02:
        r6 = (com.android.server.am.PendingIntentRecord) r3;

        i8 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i5 = r6.<com.android.server.am.PendingIntentRecord: int uid>;

        if $i5 != i8 goto label03;

        i9 = 1000;

        goto label04;

     label03:
        i9 = r6.<com.android.server.am.PendingIntentRecord: int uid>;

     label04:
        i7 = i9;

        goto label06;

     label05:
        return;

     label06:
        $r7 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        virtualinvoke $r7.<com.android.server.am.BatteryStatsService: void noteWakupAlarm(java.lang.String,int,android.os.WorkSource,java.lang.String)>(r1, i7, r5, r2);

        if r5 == null goto label09;

        r8 = virtualinvoke r5.<android.os.WorkSource: java.lang.String getPackageName(int)>(0);

        i10 = virtualinvoke r5.<android.os.WorkSource: int getAttributionUid()>();

        r9 = r8;

        if r8 != null goto label07;

        r9 = r1;

        i10 = i7;

     label07:
        r10 = r0.<com.android.server.am.ActivityManagerService: android.app.usage.UsageStatsManagerInternal mUsageStatsService>;

        i11 = 0;

        if r10 == null goto label08;

        $i3 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i10);

        $l4 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        i11 = virtualinvoke r10.<android.app.usage.UsageStatsManagerInternal: int getAppStandbyBucket(java.lang.String,int,long)>(r9, $i3, $l4);

     label08:
        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,android.os.WorkSource,java.lang.String,java.lang.String,int)>(35, r5, r2, r1, i11);

        goto label12;

     label09:
        r11 = r0.<com.android.server.am.ActivityManagerService: android.app.usage.UsageStatsManagerInternal mUsageStatsService>;

        if r11 == null goto label10;

        $i1 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i7);

        $l2 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        i12 = virtualinvoke r11.<android.app.usage.UsageStatsManagerInternal: int getAppStandbyBucket(java.lang.String,int,long)>(r1, $i1, $l2);

        goto label11;

     label10:
        i12 = 0;

     label11:
        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write_non_chained(int,int,java.lang.String,java.lang.String,java.lang.String,int)>(35, i7, null, r2, r1, i12);

     label12:
        return;
    }

    public void notifyCleartextNetwork(int, byte[])
    {
        com.android.server.am.ActivityManagerService r0;
        int i0;
        byte[] r1;
        com.android.server.am.ActivityManagerService$MainHandler $r2;
        android.os.Message $r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: byte[];

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        $r3 = virtualinvoke $r2.<com.android.server.am.ActivityManagerService$MainHandler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(49, i0, 0, r1);

        virtualinvoke $r3.<android.os.Message: void sendToTarget()>();

        return;
    }

    public void notifyLockedProfile(int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, $i1;
        com.android.server.am.UserController $r1;
        com.android.server.wm.ActivityTaskManagerInternal $r2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerInternal mAtmInternal>;

        $r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.UserController mUserController>;

        $i1 = virtualinvoke $r1.<com.android.server.am.UserController: int getCurrentUserId()>();

        virtualinvoke $r2.<com.android.server.wm.ActivityTaskManagerInternal: void notifyLockedProfile(int,int)>(i0, $i1);

        return;
    }

    void notifyPackageUse(java.lang.String, int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0;
        android.content.pm.PackageManagerInternal $r1;
        java.lang.Throwable $r2;
        java.lang.String r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r3 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        entermonitor r0;

     label1:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r1 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: android.content.pm.PackageManagerInternal getPackageManagerInternalLocked()>();

        virtualinvoke $r1.<android.content.pm.PackageManagerInternal: void notifyPackageUse(java.lang.String,int)>(r3, i0);

        exitmonitor r0;

     label2:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    void onCoreSettingsChange(android.os.Bundle)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessList $r1;
        java.lang.Throwable $r2;
        android.os.Bundle r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r3 := @parameter0: android.os.Bundle;

        entermonitor r0;

     label1:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        virtualinvoke $r1.<com.android.server.am.ProcessList: void updateCoreSettingsLocked(android.os.Bundle)>(r3);

        exitmonitor r0;

     label2:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void onShellCommand(java.io.FileDescriptor, java.io.FileDescriptor, java.io.FileDescriptor, java.lang.String[], android.os.ShellCallback, android.os.ResultReceiver)
    {
        com.android.server.am.ActivityManagerService r0;
        java.io.FileDescriptor r1, r2, r3;
        java.lang.String[] r4;
        android.os.ShellCallback r5;
        android.os.ResultReceiver r6;
        com.android.server.am.ActivityManagerShellCommand $r7;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.FileDescriptor;

        r3 := @parameter2: java.io.FileDescriptor;

        r4 := @parameter3: java.lang.String[];

        r5 := @parameter4: android.os.ShellCallback;

        r6 := @parameter5: android.os.ResultReceiver;

        $r7 = new com.android.server.am.ActivityManagerShellCommand;

        specialinvoke $r7.<com.android.server.am.ActivityManagerShellCommand: void <init>(com.android.server.am.ActivityManagerService,boolean)>(r0, 0);

        virtualinvoke $r7.<com.android.server.am.ActivityManagerShellCommand: int exec(android.os.Binder,java.io.FileDescriptor,java.io.FileDescriptor,java.io.FileDescriptor,java.lang.String[],android.os.ShellCallback,android.os.ResultReceiver)>(r0, r1, r2, r3, r4, r5, r6);

        return;
    }

    public boolean onTransact(int, android.os.Parcel, android.os.Parcel, int) throws android.os.RemoteException
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, i2, i3, $i4, $i5, i7, i8, i9, i10;
        boolean z0, $z3, $z4, $z5;
        java.util.ArrayList $r2;
        com.android.server.am.ProcessList $r3, $r8;
        com.android.server.am.ProcessList$MyProcessMap $r4, $r9;
        android.util.ArrayMap $r5, $r10;
        java.lang.Object $r6, $r11, $r12;
        android.os.IBinder $r7, $r15;
        android.app.IApplicationThread $r13, $r14;
        java.lang.Throwable $r16;
        java.lang.RuntimeException $r17;
        java.lang.StringBuilder $r18;
        java.lang.String $r25;
        android.os.RemoteException $r26;
        android.os.Parcel r27, r28, r31;
        android.util.SparseArray r29;
        com.android.server.am.ProcessRecord r30;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        r27 := @parameter1: android.os.Parcel;

        r28 := @parameter2: android.os.Parcel;

        i1 := @parameter3: int;

        if i0 != 1599295570 goto label20;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        entermonitor r0;

     label01:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r4 = $r3.<com.android.server.am.ProcessList: com.android.server.am.ProcessList$MyProcessMap mProcessNames>;

        $r5 = virtualinvoke $r4.<com.android.server.am.ProcessList$MyProcessMap: android.util.ArrayMap getMap()>();

        i2 = virtualinvoke $r5.<android.util.ArrayMap: int size()>();

     label02:
        i7 = 0;

     label03:
        if i7 >= i2 goto label10;

     label04:
        $r8 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r9 = $r8.<com.android.server.am.ProcessList: com.android.server.am.ProcessList$MyProcessMap mProcessNames>;

        $r10 = virtualinvoke $r9.<com.android.server.am.ProcessList$MyProcessMap: android.util.ArrayMap getMap()>();

        $r11 = virtualinvoke $r10.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i7);

        r29 = (android.util.SparseArray) $r11;

        i3 = virtualinvoke r29.<android.util.SparseArray: int size()>();

     label05:
        i8 = 0;

     label06:
        if i8 >= i3 goto label09;

     label07:
        $r12 = virtualinvoke r29.<android.util.SparseArray: java.lang.Object valueAt(int)>(i8);

        r30 = (com.android.server.am.ProcessRecord) $r12;

        $r13 = r30.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r13 == null goto label08;

        $r14 = r30.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r15 = interfaceinvoke $r14.<android.app.IApplicationThread: android.os.IBinder asBinder()>();

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r15);

     label08:
        i8 = i8 + 1;

        goto label06;

     label09:
        i7 = i7 + 1;

        goto label03;

     label10:
        exitmonitor r0;

     label11:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        i9 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i10 = 0;

     label12:
        if i10 >= i9 goto label20;

        r31 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label13:
        $r6 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i10);

        $r7 = (android.os.IBinder) $r6;

        interfaceinvoke $r7.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1599295570, r31, null, 1);

     label14:
        goto label16;

     label15:
        $r26 := @caughtexception;

     label16:
        virtualinvoke r31.<android.os.Parcel: void recycle()>();

        i10 = i10 + 1;

        goto label12;

     label17:
        $r16 := @caughtexception;

     label18:
        exitmonitor r0;

     label19:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r16;

     label20:
        z0 = specialinvoke r0.<android.app.IActivityManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>(i0, r27, r28, i1);

     label21:
        return z0;

     label22:
        $r17 := @caughtexception;

        $z3 = $r17 instanceof java.lang.SecurityException;

        if $z3 != 0 goto label23;

        $z4 = $r17 instanceof java.lang.IllegalArgumentException;

        if $z4 != 0 goto label23;

        $z5 = $r17 instanceof java.lang.IllegalStateException;

        if $z5 != 0 goto label23;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Activity Manager Crash. UID:");

        $i4 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" PID:");

        $i5 = staticinvoke <android.os.Binder: int getCallingPid()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" TRANS:");

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r25 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r25, $r17);

     label23:
        throw $r17;

        catch java.lang.Throwable from label01 to label02 with label17;
        catch java.lang.Throwable from label04 to label05 with label17;
        catch java.lang.Throwable from label07 to label08 with label17;
        catch java.lang.Throwable from label10 to label11 with label17;
        catch android.os.RemoteException from label13 to label14 with label15;
        catch java.lang.Throwable from label18 to label19 with label17;
        catch java.lang.RuntimeException from label20 to label21 with label22;
    }

    void onWakefulnessChanged(int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1;
        com.android.server.am.ActiveServices $r2;
        com.android.server.wm.ActivityTaskManagerService $r3;
        com.android.server.am.OomAdjProfiler $r4;
        java.lang.Throwable $r5;
        boolean z0, z1;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        entermonitor r0;

     label01:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        i1 = r0.<com.android.server.am.ActivityManagerService: int mWakefulness>;

     label02:
        z0 = 0;

        if i1 != 1 goto label03;

        z1 = 1;

        goto label04;

     label03:
        z1 = 0;

     label04:
        if i0 != 1 goto label05;

        z0 = 1;

     label05:
        r0.<com.android.server.am.ActivityManagerService: int mWakefulness> = i0;

     label06:
        if z1 == z0 goto label08;

     label07:
        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveServices mServices>;

        virtualinvoke $r2.<com.android.server.am.ActiveServices: void updateScreenStateLocked(boolean)>(z0);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void reportCurWakefulnessUsageEventLocked()>();

        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerService mActivityTaskManager>;

        virtualinvoke $r3.<com.android.server.wm.ActivityTaskManagerService: void onScreenAwakeChanged(boolean)>(z0);

        $r4 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.OomAdjProfiler mOomAdjProfiler>;

        virtualinvoke $r4.<com.android.server.am.OomAdjProfiler: void onWakefulnessChanged(int)>(i0);

     label08:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void updateOomAdjLocked(java.lang.String)>("updateOomAdj_uiVisibility");

        exitmonitor r0;

     label09:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label10:
        $r5 := @caughtexception;

     label11:
        exitmonitor r0;

     label12:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r5;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public android.os.ParcelFileDescriptor openContentUri(java.lang.String) throws android.os.RemoteException
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, $i1, $i2, $i3;
        android.net.Uri r1;
        java.lang.String r2, $r5, r15;
        android.app.ContentProviderHolder r3;
        java.lang.StringBuilder $r4;
        android.os.Binder $r6;
        com.android.server.am.ActivityManagerService$Identity $r7;
        java.lang.ThreadLocal $r8, $r10, $r12, $r14;
        android.content.IContentProvider $r9;
        java.lang.Throwable $r11, $r13;
        android.os.ParcelFileDescriptor r16, r18;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r15 := @parameter0: java.lang.String;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("openContentUri");

        i0 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        r1 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>(r15);

        r2 = virtualinvoke r1.<android.net.Uri: java.lang.String getAuthority()>();

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        r3 = specialinvoke r0.<com.android.server.am.ActivityManagerService: android.app.ContentProviderHolder getContentProviderExternalUnchecked(java.lang.String,android.os.IBinder,int,java.lang.String,int)>(r2, null, $i1, "*opencontent*", i0);

        r16 = null;

        if r3 == null goto label6;

        $r6 = new android.os.Binder;

        specialinvoke $r6.<android.os.Binder: void <init>()>();

        $r8 = <com.android.server.am.ActivityManagerService: java.lang.ThreadLocal sCallerIdentity>;

        $r7 = new com.android.server.am.ActivityManagerService$Identity;

        $i2 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        specialinvoke $r7.<com.android.server.am.ActivityManagerService$Identity: void <init>(com.android.server.am.ActivityManagerService,android.os.IBinder,int,int)>(r0, $r6, $i2, $i3);

        virtualinvoke $r8.<java.lang.ThreadLocal: void set(java.lang.Object)>($r7);

     label1:
        $r9 = r3.<android.app.ContentProviderHolder: android.content.IContentProvider provider>;

        r18 = interfaceinvoke $r9.<android.content.IContentProvider: android.os.ParcelFileDescriptor openFile(java.lang.String,java.lang.String,android.net.Uri,java.lang.String,android.os.ICancellationSignal,android.os.IBinder)>(null, null, r1, "r", null, $r6);

     label2:
        $r10 = <com.android.server.am.ActivityManagerService: java.lang.ThreadLocal sCallerIdentity>;

        virtualinvoke $r10.<java.lang.ThreadLocal: void remove()>();

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void removeContentProviderExternalUnchecked(java.lang.String,android.os.IBinder,int)>(r2, null, i0);

        r16 = r18;

        goto label5;

     label3:
        $r11 := @caughtexception;

        $r12 = <com.android.server.am.ActivityManagerService: java.lang.ThreadLocal sCallerIdentity>;

        virtualinvoke $r12.<java.lang.ThreadLocal: void remove()>();

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void removeContentProviderExternalUnchecked(java.lang.String,android.os.IBinder,int)>(r2, null, i0);

        throw $r11;

     label4:
        $r13 := @caughtexception;

        $r14 = <com.android.server.am.ActivityManagerService: java.lang.ThreadLocal sCallerIdentity>;

        virtualinvoke $r14.<java.lang.ThreadLocal: void remove()>();

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void removeContentProviderExternalUnchecked(java.lang.String,android.os.IBinder,int)>(r2, null, i0);

     label5:
        goto label7;

     label6:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to get provider for authority \'");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("ActivityManager", $r5);

        r16 = null;

     label7:
        return r16;

        catch java.io.FileNotFoundException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public android.os.IBinder peekService(android.content.Intent, java.lang.String, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1, r2;
        java.lang.IllegalArgumentException $r3, $r5;
        com.android.server.am.ActiveServices $r4;
        boolean $z0;
        java.lang.Throwable $r6;
        android.content.Intent r7;
        android.os.IBinder r8;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r7 := @parameter0: android.content.Intent;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("peekService");

        if r7 == null goto label2;

        $z0 = virtualinvoke r7.<android.content.Intent: boolean hasFileDescriptors()>();

        if $z0 == 1 goto label1;

        goto label2;

     label1:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("File descriptors passed in Intent");

        throw $r5;

     label2:
        if r2 == null goto label8;

        entermonitor r0;

     label3:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r4 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveServices mServices>;

        r8 = virtualinvoke $r4.<com.android.server.am.ActiveServices: android.os.IBinder peekServiceLocked(android.content.Intent,java.lang.String,java.lang.String)>(r7, r1, r2);

        exitmonitor r0;

     label4:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return r8;

     label5:
        $r6 := @caughtexception;

     label6:
        exitmonitor r0;

     label7:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r6;

     label8:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("callingPackage cannot be null");

        throw $r3;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    final void performAppGcLocked(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ActivityManagerService r0;
        long $l0;
        android.app.IApplicationThread $r1, $r2, $r3;
        boolean $z0;
        java.lang.Exception $r4;
        com.android.server.am.ProcessRecord r5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r5 := @parameter0: com.android.server.am.ProcessRecord;

     label1:
        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r5.<com.android.server.am.ProcessRecord: long lastRequestedGc> = $l0;

        $r1 = r5.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r1 == null goto label4;

        $z0 = r5.<com.android.server.am.ProcessRecord: boolean reportLowMemory>;

        if $z0 == 0 goto label3;

        r5.<com.android.server.am.ProcessRecord: boolean reportLowMemory> = 0;

        $r3 = r5.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        interfaceinvoke $r3.<android.app.IApplicationThread: void scheduleLowMemory()>();

     label2:
        goto label4;

     label3:
        $r2 = r5.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        interfaceinvoke $r2.<android.app.IApplicationThread: void processInBackground()>();

     label4:
        goto label6;

     label5:
        $r4 := @caughtexception;

     label6:
        return;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    final void performAppGcsIfAppropriateLocked()
    {
        com.android.server.am.ActivityManagerService r0;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $z0 = specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean canGcNowLocked()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void performAppGcsLocked()>();

        return;

     label1:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void scheduleAppGcsLocked()>();

        return;
    }

    final void performAppGcsLocked()
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1;
        java.util.ArrayList $r2, $r3, $r4;
        int $i0, $i1, $i2;
        boolean $z0, $z1;
        java.lang.Object $r5;
        com.android.server.am.ActivityManagerConstants $r6;
        long $l3, $l4, $l5, $l6;
        byte $b7;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $r2 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesToGc>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if $i0 > 0 goto label1;

        return;

     label1:
        $z0 = specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean canGcNowLocked()>();

        if $z0 == 0 goto label7;

     label2:
        $r3 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesToGc>;

        $i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if $i1 <= 0 goto label6;

        $r4 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesToGc>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object remove(int)>(0);

        r1 = (com.android.server.am.ProcessRecord) $r5;

        $i2 = virtualinvoke r1.<com.android.server.am.ProcessRecord: int getCurRawAdj()>();

        if $i2 > 200 goto label4;

        $z1 = r1.<com.android.server.am.ProcessRecord: boolean reportLowMemory>;

        if $z1 == 0 goto label3;

        goto label4;

     label3:
        goto label2;

     label4:
        $l4 = r1.<com.android.server.am.ProcessRecord: long lastRequestedGc>;

        $r6 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerConstants mConstants>;

        $l3 = $r6.<com.android.server.am.ActivityManagerConstants: long GC_MIN_INTERVAL>;

        $l5 = $l4 + $l3;

        $l6 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $b7 = $l5 cmp $l6;

        if $b7 > 0 goto label5;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void performAppGcLocked(com.android.server.am.ProcessRecord)>(r1);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void scheduleAppGcsLocked()>();

        return;

     label5:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void addProcessToGcListLocked(com.android.server.am.ProcessRecord)>(r1);

     label6:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void scheduleAppGcsLocked()>();

     label7:
        return;
    }

    public void performIdleMaintenance()
    {
        com.android.server.am.ActivityManagerService r0;
        long l0, l1, l2, $l5, $l6, $l10, $l11, $l12, $l16, $l19, $l21, $l22, $l23, $l24, $l26, $l27, $l28, $l30, $l31, $l32, $l33, $l34, l36, l37;
        int i3, $i4, $i13, $i14, $i15, $i17, $i18, i38;
        boolean z0, z1, $z2, z4;
        java.lang.SecurityException $r1;
        com.android.server.am.OomAdjuster $r2;
        com.android.server.am.CachedAppOptimizer $r3;
        byte $b7, $b9, $b20, $b25, $b29;
        java.lang.String $r6, $r14, $r24, $r30;
        com.android.server.am.ProcessList $r7, $r9;
        java.util.ArrayList $r8, $r10;
        java.lang.Object $r11;
        com.android.server.wm.ActivityTaskManagerInternal $r12;
        java.lang.Throwable $r31;
        java.lang.StringBuilder r32, r34, r35;
        com.android.server.am.ProcessRecord r33;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $i4 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.SET_ACTIVITY_WATCHER");

        if $i4 != 0 goto label23;

        entermonitor r0;

     label01:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l5 = r0.<com.android.server.am.ActivityManagerService: long mLastIdleTime>;

        l1 = l0 - $l5;

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.OomAdjuster mOomAdjuster>;

        $r3 = $r2.<com.android.server.am.OomAdjuster: com.android.server.am.CachedAppOptimizer mCachedAppOptimizer>;

        virtualinvoke $r3.<com.android.server.am.CachedAppOptimizer: void compactAllSystem()>();

        l2 = specialinvoke r0.<com.android.server.am.ActivityManagerService: long getLowRamTimeSinceIdle(long)>(l0);

        r0.<com.android.server.am.ActivityManagerService: long mLastIdleTime> = l0;

        r0.<com.android.server.am.ActivityManagerService: long mLowRamTimeSinceLastIdle> = 0L;

        $l6 = r0.<com.android.server.am.ActivityManagerService: long mLowRamStartTime>;

        $b7 = $l6 cmp 0L;

        if $b7 == 0 goto label02;

        r0.<com.android.server.am.ActivityManagerService: long mLowRamStartTime> = l0;

     label02:
        r32 = new java.lang.StringBuilder;

     label03:
        specialinvoke r32.<java.lang.StringBuilder: void <init>(int)>(128);

        virtualinvoke r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Idle maintenance over ");

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.lang.StringBuilder)>(l1, r32);

        virtualinvoke r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" low RAM for ");

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.lang.StringBuilder)>(l2, r32);

        $r6 = virtualinvoke r32.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", $r6);

        l36 = l1 / 3L;

     label04:
        $b9 = l2 cmp l36;

        if $b9 <= 0 goto label05;

        z4 = 1;

        goto label06;

     label05:
        z4 = 0;

     label06:
        $l10 = staticinvoke <android.os.Process: long getTotalMemory()>();

        $l11 = $l10 / 1000L;

        $l12 = $l11 / 100L;

        l37 = staticinvoke <java.lang.Math: long max(long,long)>($l12, 10000L);

        $r7 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r8 = $r7.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        $i13 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

        i38 = $i13 - 1;

     label07:
        if i38 < 0 goto label18;

     label08:
        $r9 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r10 = $r9.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        $r11 = virtualinvoke $r10.<java.util.ArrayList: java.lang.Object get(int)>(i38);

        r33 = (com.android.server.am.ProcessRecord) $r11;

        $z2 = r33.<com.android.server.am.ProcessRecord: boolean notCachedSinceIdle>;

        if $z2 == 0 goto label14;

        $i17 = r33.<com.android.server.am.ProcessRecord: int setProcState>;

        if $i17 < 5 goto label13;

        $i18 = r33.<com.android.server.am.ProcessRecord: int setProcState>;

        if $i18 > 10 goto label13;

     label09:
        if z4 == 0 goto label12;

     label10:
        $l19 = r33.<com.android.server.am.ProcessRecord: long initialIdlePss>;

        $b20 = $l19 cmp 0L;

        if $b20 == 0 goto label12;

        $l24 = r33.<com.android.server.am.ProcessRecord: long lastPss>;

        $l21 = r33.<com.android.server.am.ProcessRecord: long initialIdlePss>;

        $l22 = $l21 * 3L;

        $l23 = $l22 / 2L;

        $b25 = $l24 cmp $l23;

        if $b25 <= 0 goto label12;

        $l28 = r33.<com.android.server.am.ProcessRecord: long lastPss>;

        $l26 = r33.<com.android.server.am.ProcessRecord: long initialIdlePss>;

        $l27 = $l26 + l37;

        $b29 = $l28 cmp $l27;

        if $b29 <= 0 goto label12;

        r34 = new java.lang.StringBuilder;

        specialinvoke r34.<java.lang.StringBuilder: void <init>(int)>(128);

        virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Kill");

        $r14 = r33.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in idle maint: pss=");

        $l30 = r33.<com.android.server.am.ProcessRecord: long lastPss>;

        virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l30);

        virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", swapPss=");

        $l31 = r33.<com.android.server.am.ProcessRecord: long lastSwapPss>;

        virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l31);

        virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", initialPss=");

        $l32 = r33.<com.android.server.am.ProcessRecord: long initialIdlePss>;

        virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l32);

        virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", period=");

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.lang.StringBuilder)>(l1, r34);

        virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", lowRamPeriod=");

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.lang.StringBuilder)>(l2, r34);

        $r24 = virtualinvoke r34.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: void wtfQuiet(java.lang.String,java.lang.String)>("ActivityManager", $r24);

        r35 = new java.lang.StringBuilder;

        specialinvoke r35.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("idle maint (pss ");

        $l33 = r33.<com.android.server.am.ProcessRecord: long lastPss>;

        virtualinvoke r35.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l33);

        virtualinvoke r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from ");

        $l34 = r33.<com.android.server.am.ProcessRecord: long initialIdlePss>;

        virtualinvoke r35.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l34);

        virtualinvoke r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r30 = virtualinvoke r35.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r33.<com.android.server.am.ProcessRecord: void kill(java.lang.String,int,int,boolean)>($r30, 13, 6, 1);

     label11:
        goto label17;

     label12:
        goto label17;

     label13:
        goto label17;

     label14:
        $i14 = r33.<com.android.server.am.ProcessRecord: int setProcState>;

        if $i14 >= 14 goto label17;

        $i15 = r33.<com.android.server.am.ProcessRecord: int setProcState>;

        if $i15 < 0 goto label17;

        r33.<com.android.server.am.ProcessRecord: boolean notCachedSinceIdle> = 1;

        r33.<com.android.server.am.ProcessRecord: long initialIdlePss> = 0L;

        i3 = r33.<com.android.server.am.ProcessRecord: int setProcState>;

        z0 = r0.<com.android.server.am.ActivityManagerService: boolean mTestPssMode>;

        $r12 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerInternal mAtmInternal>;

        z1 = virtualinvoke $r12.<com.android.server.wm.ActivityTaskManagerInternal: boolean isSleeping()>();

     label15:
        $l16 = staticinvoke <com.android.server.am.ProcessList: long computeNextPssTime(int,com.android.server.am.ProcessList$ProcStateMemTracker,boolean,boolean,long)>(i3, null, z0, z1, l0);

        r33.<com.android.server.am.ProcessRecord: long nextPssTime> = $l16;

     label16:
        goto label17;

     label17:
        i38 = i38 + -1;

        goto label07;

     label18:
        exitmonitor r0;

     label19:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label20:
        $r31 := @caughtexception;

     label21:
        exitmonitor r0;

     label22:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r31;

     label23:
        $r1 = new java.lang.SecurityException;

        specialinvoke $r1.<java.lang.SecurityException: void <init>(java.lang.String)>("Requires permission android.permission.SET_ACTIVITY_WATCHER");

        throw $r1;

        catch java.lang.Throwable from label01 to label02 with label20;
        catch java.lang.Throwable from label02 to label03 with label20;
        catch java.lang.Throwable from label03 to label04 with label20;
        catch java.lang.Throwable from label06 to label07 with label20;
        catch java.lang.Throwable from label08 to label09 with label20;
        catch java.lang.Throwable from label10 to label11 with label20;
        catch java.lang.Throwable from label14 to label15 with label20;
        catch java.lang.Throwable from label15 to label16 with label20;
        catch java.lang.Throwable from label18 to label19 with label20;
        catch java.lang.Throwable from label21 to label22 with label20;
    }

    public void positionTaskInStack(int, int, int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, i2;
        com.android.server.wm.ActivityTaskManagerService $r1;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerService mActivityTaskManager>;

        virtualinvoke $r1.<com.android.server.wm.ActivityTaskManagerService: void positionTaskInStack(int,int,int)>(i0, i1, i2);

        return;
    }

    public void prepareForPossibleShutdown()
    {
        com.android.server.am.ActivityManagerService r0;
        android.app.usage.UsageStatsManagerInternal $r2, $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        entermonitor r0;

     label1:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r2 = r0.<com.android.server.am.ActivityManagerService: android.app.usage.UsageStatsManagerInternal mUsageStatsService>;

        if $r2 == null goto label2;

        $r3 = r0.<com.android.server.am.ActivityManagerService: android.app.usage.UsageStatsManagerInternal mUsageStatsService>;

        virtualinvoke $r3.<android.app.usage.UsageStatsManagerInternal: void prepareForPossibleShutdown()>();

     label2:
        exitmonitor r0;

     label3:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label4:
        $r4 := @caughtexception;

     label5:
        exitmonitor r0;

     label6:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    void printOomLevel(java.io.PrintWriter, java.lang.String, int)
    {
        com.android.server.am.ActivityManagerService r0;
        java.io.PrintWriter r1;
        java.lang.String r2, $r4;
        int i0;
        com.android.server.am.ProcessList $r3;
        long $l1;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("    ");

        if i0 < 0 goto label1;

        virtualinvoke r1.<java.io.PrintWriter: void print(char)>(32);

        if i0 >= 10 goto label2;

        virtualinvoke r1.<java.io.PrintWriter: void print(char)>(32);

        goto label2;

     label1:
        if i0 <= -10 goto label2;

        virtualinvoke r1.<java.io.PrintWriter: void print(char)>(32);

     label2:
        virtualinvoke r1.<java.io.PrintWriter: void print(int)>(i0);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" (");

        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $l1 = virtualinvoke $r3.<com.android.server.am.ProcessList: long getMemLevel(int)>(i0);

        $r4 = staticinvoke <com.android.server.am.ActivityManagerService: java.lang.String stringifySize(long,int)>($l1, 1024);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r4);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(")");

        return;
    }

    public boolean profileControl(java.lang.String, int, boolean, android.app.ProfilerInfo, int) throws android.os.RemoteException
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, $i2, $i3, $i4;
        boolean z0;
        android.os.ParcelFileDescriptor $r1, $r2, $r3, $r10, $r17, $r21, $r22, r37, r38, r42;
        java.lang.String $r4, $r15, r28;
        android.content.pm.ApplicationInfo $r5;
        com.android.server.am.ActivityManagerService$ProfileData $r6, $r8, $r11;
        android.app.IApplicationThread $r7, $r16;
        android.app.ProfilerInfo $r9, $r12, r29, r30, r31, r32, r41;
        java.lang.Throwable $r18, $r19, $r20, $r23, $r24, $r25, $r27;
        android.os.RemoteException $r26;
        java.lang.IllegalArgumentException r33, r35;
        com.android.server.am.ProcessRecord r34;
        java.lang.StringBuilder r36;
        java.lang.SecurityException r45;
        java.lang.IllegalStateException r49;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r28 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        r29 := @parameter3: android.app.ProfilerInfo;

        i1 := @parameter4: int;

        r30 = r29;

        r31 = r29;

     label001:
        entermonitor r0;

     label002:
        r32 = r29;

     label003:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

     label004:
        r32 = r29;

     label005:
        $i2 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.SET_ACTIVITY_WATCHER");

        if $i2 != 0 goto label077;

     label006:
        if z0 == 0 goto label015;

        if r29 == null goto label009;

        r32 = r29;

     label007:
        $r17 = r29.<android.app.ProfilerInfo: android.os.ParcelFileDescriptor profileFd>;

        if $r17 == null goto label009;

     label008:
        goto label015;

     label009:
        r32 = r29;

     label010:
        r33 = new java.lang.IllegalArgumentException;

     label011:
        r32 = r29;

     label012:
        specialinvoke r33.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("null profile info or fd");

     label013:
        r32 = r29;

     label014:
        throw r33;

     label015:
        r34 = null;

        if r28 == null goto label017;

        r32 = r29;

     label016:
        r34 = specialinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord findProcessLocked(java.lang.String,int,java.lang.String)>(r28, i0, "profileControl");

     label017:
        if z0 == 0 goto label034;

        if r34 == null goto label020;

        r32 = r29;

     label018:
        $r16 = r34.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r16 == null goto label020;

     label019:
        goto label034;

     label020:
        r32 = r29;

     label021:
        r35 = new java.lang.IllegalArgumentException;

     label022:
        r32 = r29;

     label023:
        r36 = new java.lang.StringBuilder;

     label024:
        r32 = r29;

     label025:
        specialinvoke r36.<java.lang.StringBuilder: void <init>()>();

     label026:
        r32 = r29;

     label027:
        virtualinvoke r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown process: ");

     label028:
        r32 = r29;

     label029:
        virtualinvoke r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r28);

     label030:
        r32 = r29;

     label031:
        $r15 = virtualinvoke r36.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r35.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r15);

     label032:
        r32 = r29;

     label033:
        throw r35;

     label034:
        if z0 == 0 goto label062;

        r32 = r29;

     label035:
        specialinvoke r0.<com.android.server.am.ActivityManagerService: void stopProfilerLocked(com.android.server.am.ProcessRecord,int)>(null, 0);

     label036:
        r32 = r29;

     label037:
        $r5 = r34.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r4 = r34.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void setProfileApp(android.content.pm.ApplicationInfo,java.lang.String,android.app.ProfilerInfo)>($r5, $r4, r29);

     label038:
        r32 = r29;

     label039:
        $r6 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$ProfileData mProfileData>;

        virtualinvoke $r6.<com.android.server.am.ActivityManagerService$ProfileData: void setProfileProc(com.android.server.am.ProcessRecord)>(r34);

     label040:
        r32 = r29;

     label041:
        r0.<com.android.server.am.ActivityManagerService: int mProfileType> = i1;

     label042:
        r32 = r29;

     label043:
        r37 = r29.<android.app.ProfilerInfo: android.os.ParcelFileDescriptor profileFd>;

     label044:
        r32 = r29;

     label045:
        r38 = virtualinvoke r37.<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor dup()>();

     label046:
        goto label048;

     label047:
        $r25 := @caughtexception;

        r38 = null;

     label048:
        r32 = r29;

     label049:
        r29.<android.app.ProfilerInfo: android.os.ParcelFileDescriptor profileFd> = r38;

     label050:
        r32 = r29;

     label051:
        $r7 = r34.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        interfaceinvoke $r7.<android.app.IApplicationThread: void profilerControl(boolean,android.app.ProfilerInfo,int)>(z0, r29, i1);

     label052:
        r32 = r29;

     label053:
        $r8 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$ProfileData mProfileData>;

        $r9 = virtualinvoke $r8.<com.android.server.am.ActivityManagerService$ProfileData: android.app.ProfilerInfo getProfilerInfo()>();

        $r10 = $r9.<android.app.ProfilerInfo: android.os.ParcelFileDescriptor profileFd>;

        virtualinvoke $r10.<android.os.ParcelFileDescriptor: void close()>();

     label054:
        goto label056;

     label055:
        $r23 := @caughtexception;

     label056:
        r32 = r29;

     label057:
        $r11 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$ProfileData mProfileData>;

        $r12 = virtualinvoke $r11.<com.android.server.am.ActivityManagerService$ProfileData: android.app.ProfilerInfo getProfilerInfo()>();

        $r12.<android.app.ProfilerInfo: android.os.ParcelFileDescriptor profileFd> = null;

     label058:
        r41 = r29;

        r32 = r29;

     label059:
        $i4 = r34.<com.android.server.am.ProcessRecord: int pid>;

        $i3 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        if $i4 != $i3 goto label061;

     label060:
        r41 = null;

     label061:
        goto label070;

     label062:
        r32 = r29;

     label063:
        specialinvoke r0.<com.android.server.am.ActivityManagerService: void stopProfilerLocked(com.android.server.am.ProcessRecord,int)>(r34, i1);

     label064:
        r41 = r29;

        if r29 == null goto label070;

        r32 = r29;

     label065:
        r42 = r29.<android.app.ProfilerInfo: android.os.ParcelFileDescriptor profileFd>;

     label066:
        r41 = r29;

        if r42 == null goto label070;

        r32 = r29;

     label067:
        $r3 = r29.<android.app.ProfilerInfo: android.os.ParcelFileDescriptor profileFd>;

        virtualinvoke $r3.<android.os.ParcelFileDescriptor: void close()>();

     label068:
        r41 = r29;

        goto label070;

     label069:
        $r24 := @caughtexception;

        r41 = r29;

     label070:
        r32 = r41;

     label071:
        exitmonitor r0;

     label072:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        if r41 == null goto label076;

        $r1 = r41.<android.app.ProfilerInfo: android.os.ParcelFileDescriptor profileFd>;

        if $r1 == null goto label076;

     label073:
        $r2 = r41.<android.app.ProfilerInfo: android.os.ParcelFileDescriptor profileFd>;

        virtualinvoke $r2.<android.os.ParcelFileDescriptor: void close()>();

     label074:
        goto label076;

     label075:
        $r18 := @caughtexception;

     label076:
        return 1;

     label077:
        r32 = r29;

     label078:
        r45 = new java.lang.SecurityException;

     label079:
        r32 = r29;

     label080:
        specialinvoke r45.<java.lang.SecurityException: void <init>(java.lang.String)>("Requires permission android.permission.SET_ACTIVITY_WATCHER");

     label081:
        r32 = r29;

     label082:
        throw r45;

     label083:
        $r19 := @caughtexception;

     label084:
        exitmonitor r0;

     label085:
        r30 = r32;

        r31 = r32;

     label086:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

     label087:
        r30 = r32;

        r31 = r32;

     label088:
        throw $r19;

     label089:
        $r20 := @caughtexception;

        goto label096;

     label090:
        $r26 := @caughtexception;

        r30 = r31;

     label091:
        r49 = new java.lang.IllegalStateException;

     label092:
        r30 = r31;

     label093:
        specialinvoke r49.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Process disappeared");

     label094:
        r30 = r31;

     label095:
        throw r49;

     label096:
        if r30 == null goto label100;

        $r21 = r30.<android.app.ProfilerInfo: android.os.ParcelFileDescriptor profileFd>;

        if $r21 == null goto label100;

     label097:
        $r22 = r30.<android.app.ProfilerInfo: android.os.ParcelFileDescriptor profileFd>;

        virtualinvoke $r22.<android.os.ParcelFileDescriptor: void close()>();

     label098:
        goto label100;

     label099:
        $r27 := @caughtexception;

     label100:
        throw $r20;

        catch android.os.RemoteException from label001 to label002 with label090;
        catch java.lang.Throwable from label001 to label002 with label089;
        catch java.lang.Throwable from label003 to label004 with label083;
        catch java.lang.Throwable from label005 to label006 with label083;
        catch java.lang.Throwable from label007 to label008 with label083;
        catch java.lang.Throwable from label010 to label011 with label083;
        catch java.lang.Throwable from label012 to label013 with label083;
        catch java.lang.Throwable from label014 to label015 with label083;
        catch java.lang.Throwable from label016 to label017 with label083;
        catch java.lang.Throwable from label018 to label019 with label083;
        catch java.lang.Throwable from label021 to label022 with label083;
        catch java.lang.Throwable from label023 to label024 with label083;
        catch java.lang.Throwable from label025 to label026 with label083;
        catch java.lang.Throwable from label027 to label028 with label083;
        catch java.lang.Throwable from label029 to label030 with label083;
        catch java.lang.Throwable from label031 to label032 with label083;
        catch java.lang.Throwable from label033 to label034 with label083;
        catch java.lang.Throwable from label035 to label036 with label083;
        catch java.lang.Throwable from label037 to label038 with label083;
        catch java.lang.Throwable from label039 to label040 with label083;
        catch java.lang.Throwable from label041 to label042 with label083;
        catch java.lang.Throwable from label043 to label044 with label083;
        catch java.io.IOException from label045 to label046 with label047;
        catch java.lang.Throwable from label045 to label046 with label083;
        catch java.lang.Throwable from label049 to label050 with label083;
        catch java.lang.Throwable from label051 to label052 with label083;
        catch java.io.IOException from label053 to label054 with label055;
        catch java.lang.Throwable from label053 to label054 with label083;
        catch java.lang.Throwable from label057 to label058 with label083;
        catch java.lang.Throwable from label059 to label060 with label083;
        catch java.lang.Throwable from label063 to label064 with label083;
        catch java.lang.Throwable from label065 to label066 with label083;
        catch java.io.IOException from label067 to label068 with label069;
        catch java.lang.Throwable from label067 to label068 with label083;
        catch java.lang.Throwable from label071 to label072 with label083;
        catch java.io.IOException from label073 to label074 with label075;
        catch java.lang.Throwable from label078 to label079 with label083;
        catch java.lang.Throwable from label080 to label081 with label083;
        catch java.lang.Throwable from label082 to label083 with label083;
        catch java.lang.Throwable from label084 to label085 with label083;
        catch android.os.RemoteException from label086 to label087 with label090;
        catch java.lang.Throwable from label086 to label087 with label089;
        catch android.os.RemoteException from label088 to label089 with label090;
        catch java.lang.Throwable from label088 to label089 with label089;
        catch java.lang.Throwable from label091 to label092 with label089;
        catch java.lang.Throwable from label093 to label094 with label089;
        catch java.lang.Throwable from label095 to label096 with label089;
        catch java.io.IOException from label097 to label098 with label099;
    }

    public final void publishContentProviders(android.app.IApplicationThread, java.util.List)
    {
        com.android.server.am.ActivityManagerService r0;
        long l0, $l4;
        int i1, $i2, $i3, i5, i6, i7, i8, i9, i10;
        android.app.ContentProviderHolder r1;
        java.lang.String $r7, $r12, $r17, $r18, $r21, $r28, $r32, $r33, $r39;
        java.lang.Object $r8, $r14, $r36;
        android.content.pm.ProviderInfo $r9, $r11, $r15, $r16, $r20, $r23, $r25, $r30, $r31;
        android.content.IContentProvider $r10, $r29;
        android.util.ArrayMap $r13;
        com.android.server.am.ProviderMap $r19, $r40;
        java.util.ArrayList $r22, $r35, $r37;
        android.content.pm.ApplicationInfo $r24, $r26;
        com.android.server.am.ProcessStatsService $r27;
        com.android.server.am.ActivityManagerService$MainHandler $r34;
        java.lang.Throwable $r41, $r42, $r43, r53;
        android.app.IApplicationThread r44;
        java.util.List r45;
        com.android.server.am.ProcessRecord r46;
        com.android.server.am.ContentProviderRecord r47;
        android.content.ComponentName r48;
        java.lang.String[] r49;
        boolean z2;
        java.lang.SecurityException r51;
        java.lang.StringBuilder r52;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r44 := @parameter0: android.app.IApplicationThread;

        r45 := @parameter1: java.util.List;

        if r45 != null goto label01;

        return;

     label01:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("publishContentProviders");

        entermonitor r0;

     label02:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        r46 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord getRecordForAppLocked(android.app.IApplicationThread)>(r44);

     label03:
        if r46 == null goto label35;

     label04:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        i1 = interfaceinvoke r45.<java.util.List: int size()>();

     label05:
        i5 = 0;

     label06:
        if i5 >= i1 goto label33;

     label07:
        $r8 = interfaceinvoke r45.<java.util.List: java.lang.Object get(int)>(i5);

        r1 = (android.app.ContentProviderHolder) $r8;

     label08:
        if r1 == null goto label32;

     label09:
        $r9 = r1.<android.app.ContentProviderHolder: android.content.pm.ProviderInfo info>;

        if $r9 == null goto label32;

        $r10 = r1.<android.app.ContentProviderHolder: android.content.IContentProvider provider>;

        if $r10 != null goto label11;

     label10:
        goto label32;

     label11:
        $r13 = r46.<com.android.server.am.ProcessRecord: android.util.ArrayMap pubProviders>;

        $r11 = r1.<android.app.ContentProviderHolder: android.content.pm.ProviderInfo info>;

        $r12 = $r11.<android.content.pm.ProviderInfo: java.lang.String name>;

        $r14 = virtualinvoke $r13.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r12);

        r47 = (com.android.server.am.ContentProviderRecord) $r14;

     label12:
        if r47 == null goto label32;

     label13:
        r48 = new android.content.ComponentName;

        $r15 = r47.<com.android.server.am.ContentProviderRecord: android.content.pm.ProviderInfo info>;

        $r18 = $r15.<android.content.pm.ProviderInfo: java.lang.String packageName>;

        $r16 = r47.<com.android.server.am.ContentProviderRecord: android.content.pm.ProviderInfo info>;

        $r17 = $r16.<android.content.pm.ProviderInfo: java.lang.String name>;

        specialinvoke r48.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r18, $r17);

        $r19 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProviderMap mProviderMap>;

        virtualinvoke $r19.<com.android.server.am.ProviderMap: void putProviderByClass(android.content.ComponentName,com.android.server.am.ContentProviderRecord)>(r48, r47);

        $r20 = r47.<com.android.server.am.ContentProviderRecord: android.content.pm.ProviderInfo info>;

        $r21 = $r20.<android.content.pm.ProviderInfo: java.lang.String authority>;

        r49 = virtualinvoke $r21.<java.lang.String: java.lang.String[] split(java.lang.String)>(";");

     label14:
        i6 = 0;

     label15:
        $i3 = lengthof r49;

        if i6 >= $i3 goto label17;

        $r40 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProviderMap mProviderMap>;

        $r39 = r49[i6];

        virtualinvoke $r40.<com.android.server.am.ProviderMap: void putProviderByName(java.lang.String,com.android.server.am.ContentProviderRecord)>($r39, r47);

     label16:
        i6 = i6 + 1;

        goto label15;

     label17:
        $r22 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLaunchingProviders>;

        i7 = virtualinvoke $r22.<java.util.ArrayList: int size()>();

     label18:
        i8 = 0;

        z2 = 0;

     label19:
        if i8 >= i7 goto label23;

        i9 = i7;

        i10 = i8;

     label20:
        $r35 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLaunchingProviders>;

        $r36 = virtualinvoke $r35.<java.util.ArrayList: java.lang.Object get(int)>(i8);

        if $r36 != r47 goto label22;

        $r37 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLaunchingProviders>;

        virtualinvoke $r37.<java.util.ArrayList: java.lang.Object remove(int)>(i8);

     label21:
        z2 = 1;

        i10 = i8 - 1;

        i9 = i7 - 1;

     label22:
        i8 = i10 + 1;

        i7 = i9;

        goto label19;

     label23:
        if z2 == 0 goto label25;

     label24:
        $r34 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        virtualinvoke $r34.<com.android.server.am.ActivityManagerService$MainHandler: void removeMessages(int,java.lang.Object)>(57, r46);

     label25:
        $r23 = r47.<com.android.server.am.ContentProviderRecord: android.content.pm.ProviderInfo info>;

        $r24 = $r23.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r28 = $r24.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r25 = r47.<com.android.server.am.ContentProviderRecord: android.content.pm.ProviderInfo info>;

        $r26 = $r25.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $l4 = $r26.<android.content.pm.ApplicationInfo: long longVersionCode>;

        $r27 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        virtualinvoke r46.<com.android.server.am.ProcessRecord: boolean addPackage(java.lang.String,long,com.android.server.am.ProcessStatsService)>($r28, $l4, $r27);

        entermonitor r47;

     label26:
        $r29 = r1.<android.app.ContentProviderHolder: android.content.IContentProvider provider>;

        r47.<com.android.server.am.ContentProviderRecord: android.content.IContentProvider provider> = $r29;

        virtualinvoke r47.<com.android.server.am.ContentProviderRecord: void setProcess(com.android.server.am.ProcessRecord)>(r46);

        virtualinvoke r47.<java.lang.Object: void notifyAll()>();

        exitmonitor r47;

     label27:
        r47.<com.android.server.am.ContentProviderRecord: int mRestartCount> = 0;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean updateOomAdjLocked(com.android.server.am.ProcessRecord,boolean,java.lang.String)>(r46, 1, "updateOomAdj_getProvider");

        $r30 = r1.<android.app.ContentProviderHolder: android.content.pm.ProviderInfo info>;

        $r33 = $r30.<android.content.pm.ProviderInfo: java.lang.String packageName>;

        $r31 = r1.<android.app.ContentProviderHolder: android.content.pm.ProviderInfo info>;

        $r32 = $r31.<android.content.pm.ProviderInfo: java.lang.String authority>;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void maybeUpdateProviderUsageStatsLocked(com.android.server.am.ProcessRecord,java.lang.String,java.lang.String)>(r46, $r33, $r32);

     label28:
        goto label32;

     label29:
        $r43 := @caughtexception;

     label30:
        exitmonitor r47;

     label31:
        throw $r43;

     label32:
        i5 = i5 + 1;

        goto label06;

     label33:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        exitmonitor r0;

     label34:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label35:
        r51 = new java.lang.SecurityException;

        r52 = new java.lang.StringBuilder;

        specialinvoke r52.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to find app for caller ");

     label36:
        virtualinvoke r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r44);

        virtualinvoke r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (pid=");

        $i2 = staticinvoke <android.os.Binder: int getCallingPid()>();

        virtualinvoke r52.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") when publishing content providers");

        $r7 = virtualinvoke r52.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r51.<java.lang.SecurityException: void <init>(java.lang.String)>($r7);

        throw r51;

     label37:
        $r42 := @caughtexception;

        r53 = $r42;

     label38:
        exitmonitor r0;

     label39:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw r53;

     label40:
        $r41 := @caughtexception;

        r53 = $r41;

        goto label38;

        catch java.lang.Throwable from label02 to label03 with label37;
        catch java.lang.Throwable from label04 to label05 with label37;
        catch java.lang.Throwable from label07 to label08 with label37;
        catch java.lang.Throwable from label09 to label10 with label37;
        catch java.lang.Throwable from label11 to label12 with label37;
        catch java.lang.Throwable from label13 to label14 with label37;
        catch java.lang.Throwable from label15 to label16 with label37;
        catch java.lang.Throwable from label17 to label18 with label37;
        catch java.lang.Throwable from label20 to label21 with label37;
        catch java.lang.Throwable from label24 to label25 with label37;
        catch java.lang.Throwable from label25 to label26 with label37;
        catch java.lang.Throwable from label26 to label27 with label29;
        catch java.lang.Throwable from label27 to label28 with label37;
        catch java.lang.Throwable from label30 to label31 with label29;
        catch java.lang.Throwable from label31 to label32 with label37;
        catch java.lang.Throwable from label33 to label34 with label37;
        catch java.lang.Throwable from label35 to label36 with label37;
        catch java.lang.Throwable from label36 to label37 with label40;
        catch java.lang.Throwable from label38 to label39 with label40;
    }

    public void publishService(android.os.IBinder, android.content.Intent, android.os.IBinder)
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.Intent r1;
        android.os.IBinder r2, r7;
        boolean $z0, $z1;
        com.android.server.am.ServiceRecord $r3;
        com.android.server.am.ActiveServices $r4;
        java.lang.IllegalArgumentException $r5, r8;
        java.lang.Throwable $r6;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r7 := @parameter0: android.os.IBinder;

        r1 := @parameter1: android.content.Intent;

        r2 := @parameter2: android.os.IBinder;

        if r1 == null goto label2;

        $z1 = virtualinvoke r1.<android.content.Intent: boolean hasFileDescriptors()>();

        if $z1 == 1 goto label1;

        goto label2;

     label1:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("File descriptors passed in Intent");

        throw $r5;

     label2:
        entermonitor r0;

     label3:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $z0 = r7 instanceof com.android.server.am.ServiceRecord;

        if $z0 == 0 goto label5;

        $r4 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveServices mServices>;

        $r3 = (com.android.server.am.ServiceRecord) r7;

        virtualinvoke $r4.<com.android.server.am.ActiveServices: void publishServiceLocked(com.android.server.am.ServiceRecord,android.content.Intent,android.os.IBinder)>($r3, r1, r2);

        exitmonitor r0;

     label4:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label5:
        r8 = new java.lang.IllegalArgumentException;

        specialinvoke r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid service token");

        throw r8;

     label6:
        $r6 := @caughtexception;

     label7:
        exitmonitor r0;

     label8:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r6;

        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label5 to label6 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    void pushTempWhitelist()
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, $i2, $i4, i5, i6, i7;
        com.android.server.am.PendingTempWhitelists $r1, $r3, $r4, $r6, $r9;
        com.android.server.DeviceIdleInternal $r2, $r8;
        com.android.server.am.ActivityManagerService$PendingTempWhitelist $r5, $r10, r14, r15;
        java.lang.String $r7;
        long $l3;
        java.lang.Throwable $r11, $r12;
        com.android.server.am.ActivityManagerService$PendingTempWhitelist[] r13;

        r0 := @this: com.android.server.am.ActivityManagerService;

        entermonitor r0;

     label01:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.PendingTempWhitelists mPendingTempWhitelist>;

        i0 = virtualinvoke $r1.<com.android.server.am.PendingTempWhitelists: int size()>();

        r13 = newarray (com.android.server.am.ActivityManagerService$PendingTempWhitelist)[i0];

     label02:
        i5 = 0;

     label03:
        if i5 >= i0 goto label06;

     label04:
        $r9 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.PendingTempWhitelists mPendingTempWhitelist>;

        $r10 = virtualinvoke $r9.<com.android.server.am.PendingTempWhitelists: com.android.server.am.ActivityManagerService$PendingTempWhitelist valueAt(int)>(i5);

        r13[i5] = $r10;

     label05:
        i5 = i5 + 1;

        goto label03;

     label06:
        exitmonitor r0;

     label07:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.DeviceIdleInternal mLocalDeviceIdleController>;

        if $r2 == null goto label09;

        i6 = 0;

     label08:
        if i6 >= i0 goto label09;

        r14 = r13[i6];

        $r8 = r0.<com.android.server.am.ActivityManagerService: com.android.server.DeviceIdleInternal mLocalDeviceIdleController>;

        $i4 = r14.<com.android.server.am.ActivityManagerService$PendingTempWhitelist: int targetUid>;

        $l3 = r14.<com.android.server.am.ActivityManagerService$PendingTempWhitelist: long duration>;

        $r7 = r14.<com.android.server.am.ActivityManagerService$PendingTempWhitelist: java.lang.String tag>;

        interfaceinvoke $r8.<com.android.server.DeviceIdleInternal: void addPowerSaveTempWhitelistAppDirect(int,long,boolean,java.lang.String)>($i4, $l3, 1, $r7);

        i6 = i6 + 1;

        goto label08;

     label09:
        entermonitor r0;

     label10:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

     label11:
        i7 = 0;

     label12:
        if i7 >= i0 goto label17;

        r15 = r13[i7];

     label13:
        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.PendingTempWhitelists mPendingTempWhitelist>;

        $i2 = r15.<com.android.server.am.ActivityManagerService$PendingTempWhitelist: int targetUid>;

        i1 = virtualinvoke $r3.<com.android.server.am.PendingTempWhitelists: int indexOfKey(int)>($i2);

     label14:
        if i1 < 0 goto label16;

     label15:
        $r4 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.PendingTempWhitelists mPendingTempWhitelist>;

        $r5 = virtualinvoke $r4.<com.android.server.am.PendingTempWhitelists: com.android.server.am.ActivityManagerService$PendingTempWhitelist valueAt(int)>(i1);

        if $r5 != r15 goto label16;

        $r6 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.PendingTempWhitelists mPendingTempWhitelist>;

        virtualinvoke $r6.<com.android.server.am.PendingTempWhitelists: void removeAt(int)>(i1);

     label16:
        i7 = i7 + 1;

        goto label12;

     label17:
        exitmonitor r0;

     label18:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label19:
        $r11 := @caughtexception;

     label20:
        exitmonitor r0;

     label21:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r11;

     label22:
        $r12 := @caughtexception;

     label23:
        exitmonitor r0;

     label24:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r12;

        catch java.lang.Throwable from label01 to label02 with label22;
        catch java.lang.Throwable from label04 to label05 with label22;
        catch java.lang.Throwable from label06 to label07 with label22;
        catch java.lang.Throwable from label10 to label11 with label19;
        catch java.lang.Throwable from label13 to label14 with label19;
        catch java.lang.Throwable from label15 to label16 with label19;
        catch java.lang.Throwable from label17 to label18 with label19;
        catch java.lang.Throwable from label20 to label21 with label19;
        catch java.lang.Throwable from label23 to label24 with label22;
    }

    void recordPssSampleLocked(com.android.server.am.ProcessRecord, int, long, long, long, long, int, long, long)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1;
        int i0, i5, $i12, $i13, $i14, $i20, $i21, $i22, $i23, i25;
        long l1, l2, l3, l4, l6, l7, $l8, $l9, $l10, $l11, $l15, $l17, $l18, $l24;
        android.util.SparseArray r2;
        boolean z0, z1;
        java.lang.String $r3, $r11, $r14, $r15, $r16, $r18, $r20, $r28, $r30;
        com.android.server.am.ProcessRecord$PackageList $r4, $r7, $r25;
        android.util.ArrayMap $r5, $r8, $r10;
        com.android.internal.app.procstats.ProcessState $r6, $r27, $r29;
        byte $b16, $b19;
        com.android.internal.app.ProcessMap $r9;
        java.lang.Object $r12, $r22, $r23, $r24;
        android.app.IApplicationThread $r13;
        java.lang.StringBuilder $r17, $r19;
        android.content.pm.ApplicationInfo $r21, $r26;
        com.android.internal.app.procstats.ProcessStats$ProcessStateHolder r31;
        java.lang.Long r32;
        android.util.Pair r33, r34;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        l2 := @parameter3: long;

        l3 := @parameter4: long;

        l4 := @parameter5: long;

        i5 := @parameter6: int;

        l6 := @parameter7: long;

        l7 := @parameter8: long;

        $i13 = r1.<com.android.server.am.ProcessRecord: int pid>;

        $i12 = r1.<com.android.server.am.ProcessRecord: int uid>;

        $r3 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $l11 = l1 * 1024L;

        $l10 = l2 * 1024L;

        $l9 = l3 * 1024L;

        $l8 = l4 * 1024L;

        staticinvoke <com.android.server.am.EventLogTags: void writeAmPss(int,int,java.lang.String,long,long,long,long,int,int,long)>($i13, $i12, $r3, $l11, $l10, $l9, $l8, i5, i0, l6);

        r1.<com.android.server.am.ProcessRecord: long lastPssTime> = l7;

        $r6 = r1.<com.android.server.am.ProcessRecord: com.android.internal.app.procstats.ProcessState baseProcessTracker>;

        $r4 = r1.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        $r5 = $r4.<com.android.server.am.ProcessRecord$PackageList: android.util.ArrayMap mPkgList>;

        virtualinvoke $r6.<com.android.internal.app.procstats.ProcessState: void addPss(long,long,long,boolean,int,long,android.util.ArrayMap)>(l1, l2, l4, 1, i5, l6, $r5);

        $r7 = r1.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        $r8 = $r7.<com.android.server.am.ProcessRecord$PackageList: android.util.ArrayMap mPkgList>;

        $i14 = virtualinvoke $r8.<android.util.ArrayMap: int size()>();

        i25 = $i14 - 1;

     label1:
        if i25 < 0 goto label2;

        $r25 = r1.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        r31 = virtualinvoke $r25.<com.android.server.am.ProcessRecord$PackageList: com.android.internal.app.procstats.ProcessStats$ProcessStateHolder valueAt(int)>(i25);

        $r26 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i23 = $r26.<android.content.pm.ApplicationInfo: int uid>;

        $r27 = r31.<com.android.internal.app.procstats.ProcessStats$ProcessStateHolder: com.android.internal.app.procstats.ProcessState state>;

        $r28 = virtualinvoke $r27.<com.android.internal.app.procstats.ProcessState: java.lang.String getName()>();

        $r29 = r31.<com.android.internal.app.procstats.ProcessStats$ProcessStateHolder: com.android.internal.app.procstats.ProcessState state>;

        $r30 = virtualinvoke $r29.<com.android.internal.app.procstats.ProcessState: java.lang.String getPackage()>();

        $l24 = r31.<com.android.internal.app.procstats.ProcessStats$ProcessStateHolder: long appVersion>;

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int,java.lang.String,java.lang.String,long,long,long,int,long,long)>(18, $i23, $r28, $r30, l1, l2, l4, i5, l6, $l24);

        i25 = i25 + -1;

        goto label1;

     label2:
        $l15 = r1.<com.android.server.am.ProcessRecord: long initialIdlePss>;

        $b16 = $l15 cmp 0L;

        if $b16 != 0 goto label3;

        r1.<com.android.server.am.ProcessRecord: long initialIdlePss> = l1;

        goto label3;

     label3:
        r1.<com.android.server.am.ProcessRecord: long lastPss> = l1;

        r1.<com.android.server.am.ProcessRecord: long lastSwapPss> = l3;

        if i0 < 14 goto label4;

        r1.<com.android.server.am.ProcessRecord: long lastCachedPss> = l1;

        r1.<com.android.server.am.ProcessRecord: long lastCachedSwapPss> = l3;

     label4:
        r1.<com.android.server.am.ProcessRecord: long mLastRss> = l4;

        $r9 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mMemWatchProcesses>;

        $r10 = virtualinvoke $r9.<com.android.internal.app.ProcessMap: android.util.ArrayMap getMap()>();

        $r11 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r12 = virtualinvoke $r10.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r11);

        r2 = (android.util.SparseArray) $r12;

        r32 = null;

        if r2 == null goto label6;

        $i22 = r1.<com.android.server.am.ProcessRecord: int uid>;

        $r22 = virtualinvoke r2.<android.util.SparseArray: java.lang.Object get(int)>($i22);

        r33 = (android.util.Pair) $r22;

        r34 = r33;

        if r33 != null goto label5;

        $r24 = virtualinvoke r2.<android.util.SparseArray: java.lang.Object get(int)>(0);

        r34 = (android.util.Pair) $r24;

     label5:
        r32 = null;

        if r34 == null goto label6;

        $r23 = r34.<android.util.Pair: java.lang.Object first>;

        r32 = (java.lang.Long) $r23;

     label6:
        if r32 == null goto label9;

        $l17 = l1 * 1024L;

        $l18 = virtualinvoke r32.<java.lang.Long: long longValue()>();

        $b19 = $l17 cmp $l18;

        if $b19 < 0 goto label9;

        $r13 = r1.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r13 == null goto label9;

        $r14 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mMemWatchDumpProcName>;

        if $r14 != null goto label9;

        $r15 = "1";

        $r16 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String,java.lang.String)>("ro.debuggable", "0");

        z0 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>($r16);

        z1 = z0;

        if z0 != 0 goto label7;

        z1 = z0;

        $r21 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i20 = $r21.<android.content.pm.ApplicationInfo: int flags>;

        $i21 = $i20 & 2;

        if $i21 == 0 goto label7;

        z1 = 1;

     label7:
        if z1 == 0 goto label8;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Process ");

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" exceeded pss limit ");

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r32);

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; reporting");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r20);

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void startHeapDumpLocked(com.android.server.am.ProcessRecord,boolean)>(r1, 0);

        goto label9;

     label8:
        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Process ");

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" exceeded pss limit ");

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r32);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", but debugging not enabled");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r18);

     label9:
        return;
    }

    public boolean refContentProvider(android.os.IBinder, int, int)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.NullPointerException $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i8, i9, i10, i11;
        java.lang.String $r4, $r7, $r12, r31;
        boolean $z0, z1;
        java.lang.ClassCastException $r13;
        java.lang.StringBuilder $r14, r23, r25, r27;
        java.lang.IllegalArgumentException $r18;
        java.lang.Throwable $r19;
        android.os.IBinder r20;
        com.android.server.am.ContentProviderConnection r21;
        java.lang.IllegalStateException r22, r24, r26;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r20 := @parameter0: android.os.IBinder;

        i8 := @parameter1: int;

        i9 := @parameter2: int;

     label01:
        r21 = (com.android.server.am.ContentProviderConnection) r20;

     label02:
        if r21 == null goto label22;

        entermonitor r0;

     label03:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

     label04:
        if i8 <= 0 goto label06;

     label05:
        $i5 = r21.<com.android.server.am.ContentProviderConnection: int numStableIncs>;

        $i6 = $i5 + i8;

        r21.<com.android.server.am.ContentProviderConnection: int numStableIncs> = $i6;

     label06:
        $i0 = r21.<com.android.server.am.ContentProviderConnection: int stableCount>;

        i10 = i8 + $i0;

     label07:
        if i10 < 0 goto label18;

        if i9 <= 0 goto label09;

     label08:
        $i3 = r21.<com.android.server.am.ContentProviderConnection: int numUnstableIncs>;

        $i4 = $i3 + i9;

        r21.<com.android.server.am.ContentProviderConnection: int numUnstableIncs> = $i4;

     label09:
        $i1 = r21.<com.android.server.am.ContentProviderConnection: int unstableCount>;

        i11 = i9 + $i1;

     label10:
        if i11 < 0 goto label17;

        $i2 = i10 + i11;

        if $i2 <= 0 goto label16;

     label11:
        r21.<com.android.server.am.ContentProviderConnection: int stableCount> = i10;

        r21.<com.android.server.am.ContentProviderConnection: int unstableCount> = i11;

        $z0 = r21.<com.android.server.am.ContentProviderConnection: boolean dead>;

        if $z0 != 0 goto label13;

     label12:
        z1 = 1;

        goto label14;

     label13:
        z1 = 0;

     label14:
        exitmonitor r0;

     label15:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return z1;

     label16:
        r22 = new java.lang.IllegalStateException;

        r23 = new java.lang.StringBuilder;

        specialinvoke r23.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ref counts can\'t go to zero here: stable=");

        virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i10);

        virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" unstable=");

        virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i11);

        $r12 = virtualinvoke r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r22.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r12);

        throw r22;

     label17:
        r24 = new java.lang.IllegalStateException;

        r25 = new java.lang.StringBuilder;

        specialinvoke r25.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unstableCount < 0: ");

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i11);

        $r7 = virtualinvoke r25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r24.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r7);

        throw r24;

     label18:
        r26 = new java.lang.IllegalStateException;

        r27 = new java.lang.StringBuilder;

        specialinvoke r27.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("stableCount < 0: ");

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i10);

        $r4 = virtualinvoke r27.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r26.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r4);

        throw r26;

     label19:
        $r19 := @caughtexception;

     label20:
        exitmonitor r0;

     label21:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r19;

     label22:
        $r1 = new java.lang.NullPointerException;

        specialinvoke $r1.<java.lang.NullPointerException: void <init>(java.lang.String)>("connection is null");

        throw $r1;

     label23:
        $r13 := @caughtexception;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("refContentProvider: ");

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r20);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not a ContentProviderConnection");

        r31 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r31);

        $r18 = new java.lang.IllegalArgumentException;

        specialinvoke $r18.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(r31);

        throw $r18;

        catch java.lang.ClassCastException from label01 to label02 with label23;
        catch java.lang.Throwable from label03 to label04 with label19;
        catch java.lang.Throwable from label05 to label06 with label19;
        catch java.lang.Throwable from label06 to label07 with label19;
        catch java.lang.Throwable from label08 to label09 with label19;
        catch java.lang.Throwable from label09 to label10 with label19;
        catch java.lang.Throwable from label11 to label12 with label19;
        catch java.lang.Throwable from label14 to label15 with label19;
        catch java.lang.Throwable from label16 to label17 with label19;
        catch java.lang.Throwable from label17 to label18 with label19;
        catch java.lang.Throwable from label18 to label19 with label19;
        catch java.lang.Throwable from label20 to label21 with label19;
    }

    void refreshSettingsCache()
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.CoreSettingsObserver $r1;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.CoreSettingsObserver mCoreSettingsObserver>;

        virtualinvoke $r1.<com.android.server.am.CoreSettingsObserver: void onChange(boolean)>(1);

        return;
    }

    public void registerIntentSenderCancelListener(android.content.IIntentSender, com.android.internal.os.IResultReceiver)
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.IIntentSender r1;
        com.android.internal.os.IResultReceiver r2;
        com.android.server.am.PendingIntentController $r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.content.IIntentSender;

        r2 := @parameter1: com.android.internal.os.IResultReceiver;

        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.PendingIntentController mPendingIntentController>;

        virtualinvoke $r3.<com.android.server.am.PendingIntentController: void registerIntentSenderCancelListener(android.content.IIntentSender,com.android.internal.os.IResultReceiver)>(r1, r2);

        return;
    }

    public void registerProcessObserver(android.app.IProcessObserver)
    {
        com.android.server.am.ActivityManagerService r0;
        android.os.RemoteCallbackList $r1;
        java.lang.Throwable $r2;
        android.app.IProcessObserver r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r3 := @parameter0: android.app.IProcessObserver;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.SET_ACTIVITY_WATCHER", "registerProcessObserver()");

        entermonitor r0;

     label1:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r1 = r0.<com.android.server.am.ActivityManagerService: android.os.RemoteCallbackList mProcessObservers>;

        virtualinvoke $r1.<android.os.RemoteCallbackList: boolean register(android.os.IInterface)>(r3);

        exitmonitor r0;

     label2:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public android.content.Intent registerReceiver(android.app.IApplicationThread, java.lang.String, android.content.IIntentReceiver, android.content.IntentFilter, java.lang.String, int, int)
    {
        com.android.server.am.ActivityManagerService r0;
        android.app.IApplicationThread r1;
        java.lang.String r2, r5;
        android.content.IIntentReceiver r3;
        android.content.IntentFilter r4;
        int i0, i1;
        android.content.Intent $r6;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.app.IApplicationThread;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.content.IIntentReceiver;

        r4 := @parameter3: android.content.IntentFilter;

        r5 := @parameter4: java.lang.String;

        i0 := @parameter5: int;

        i1 := @parameter6: int;

        $r6 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: android.content.Intent registerReceiverWithFeature(android.app.IApplicationThread,java.lang.String,java.lang.String,android.content.IIntentReceiver,android.content.IntentFilter,java.lang.String,int,int)>(r1, r2, null, r3, r4, r5, i0, i1);

        return $r6;
    }

    public android.content.Intent registerReceiverWithFeature(android.app.IApplicationThread, java.lang.String, java.lang.String, android.content.IIntentReceiver, android.content.IntentFilter, java.lang.String, int, int)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1, $r7, $r8, $r9, $r12, $r19, $r34, $r37, $r38, r56, r57, r64, r73;
        boolean z0, z1, $z2, $z3, $z4, $z5, z6;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16, i17, i18, i19, i20, i21, i22, i23, i24, i26, i28, i29;
        java.util.ArrayList r2, $r29, r70, r72, r75, r77, r78, r80, r88;
        com.android.server.am.UserController $r3;
        java.util.HashMap $r4, $r15;
        android.os.IBinder $r5, $r14, $r16, $r24, $r25;
        java.lang.Object $r6, $r11, $r26, $r28, $r30, $r32, $r33;
        com.android.server.IntentResolver $r10;
        com.android.server.am.ProcessRecord $r13, $r17, $r20, r60;
        android.util.ArraySet $r18, $r21;
        android.app.IApplicationThread $r22, $r23, r55;
        android.content.Context $r27;
        android.util.SparseArray $r31;
        android.content.pm.ApplicationInfo $r35, $r63;
        com.android.server.am.ProcessRecord$PackageList $r36;
        java.lang.Throwable $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r50, $r51, $r52, $r53, $r54, r67, r82;
        android.os.RemoteException $r49;
        android.content.IIntentReceiver r58;
        android.content.IntentFilter r59;
        java.lang.SecurityException r61, r65;
        java.lang.StringBuilder r62, r66, r85, r87, r93, r95, r97;
        java.util.Iterator r68, r69;
        int[] r71;
        android.util.ArrayMap r74;
        android.content.ContentResolver r76;
        android.content.Intent r79, r81, r89;
        com.android.server.am.ReceiverList r83;
        java.lang.IllegalStateException r84;
        com.android.server.am.BroadcastFilter r86;
        com.android.server.am.BroadcastQueue r90;
        com.android.server.am.BroadcastRecord r91;
        java.lang.IllegalArgumentException r92, r94, r96;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r55 := @parameter0: android.app.IApplicationThread;

        r56 := @parameter1: java.lang.String;

        r57 := @parameter2: java.lang.String;

        r58 := @parameter3: android.content.IIntentReceiver;

        r59 := @parameter4: android.content.IntentFilter;

        r1 := @parameter5: java.lang.String;

        i16 := @parameter6: int;

        i17 := @parameter7: int;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("registerReceiver");

        $i2 = i17 & 1;

        if $i2 == 0 goto label001;

        z6 = 1;

        goto label002;

     label001:
        z6 = 0;

     label002:
        entermonitor r0;

     label003:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

     label004:
        if r55 == null goto label014;

     label005:
        r60 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord getRecordForAppLocked(android.app.IApplicationThread)>(r55);

     label006:
        if r60 == null goto label012;

     label007:
        $r35 = r60.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i15 = $r35.<android.content.pm.ApplicationInfo: int uid>;

        if $i15 == 1000 goto label010;

        $r36 = r60.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        $z4 = virtualinvoke $r36.<com.android.server.am.ProcessRecord$PackageList: boolean containsKey(java.lang.Object)>(r56);

        if $z4 != 0 goto label010;

        $r37 = "android";

        $z5 = virtualinvoke $r37.<java.lang.String: boolean equals(java.lang.Object)>(r56);

        if $z5 == 0 goto label009;

     label008:
        goto label010;

     label009:
        r61 = new java.lang.SecurityException;

        r62 = new java.lang.StringBuilder;

        specialinvoke r62.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Given caller package ");

        virtualinvoke r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r56);

        virtualinvoke r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not running in process ");

        virtualinvoke r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r60);

        $r38 = virtualinvoke r62.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r61.<java.lang.SecurityException: void <init>(java.lang.String)>($r38);

        throw r61;

     label010:
        $r63 = r60.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        i18 = $r63.<android.content.pm.ApplicationInfo: int uid>;

        i19 = r60.<com.android.server.am.ProcessRecord: int pid>;

     label011:
        r64 = r56;

        goto label016;

     label012:
        r65 = new java.lang.SecurityException;

        r66 = new java.lang.StringBuilder;

        specialinvoke r66.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to find app for caller ");

        virtualinvoke r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r55);

        virtualinvoke r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (pid=");

        $i14 = staticinvoke <android.os.Binder: int getCallingPid()>();

        virtualinvoke r66.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i14);

        virtualinvoke r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") when registering receiver ");

        virtualinvoke r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r58);

        $r34 = virtualinvoke r66.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r65.<java.lang.SecurityException: void <init>(java.lang.String)>($r34);

        throw r65;

     label013:
        $r52 := @caughtexception;

        r67 = $r52;

        goto label105;

     label014:
        i18 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i19 = staticinvoke <android.os.Binder: int getCallingPid()>();

     label015:
        r64 = null;

        r60 = null;

     label016:
        z0 = specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean isInstantApp(com.android.server.am.ProcessRecord,java.lang.String,int)>(r60, r64, i18);

        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.UserController mUserController>;

        i0 = virtualinvoke $r3.<com.android.server.am.UserController: int handleIncomingUser(int,int,int,boolean,int,java.lang.String,java.lang.String)>(i19, i18, i16, 1, 2, "registerReceiver", r64);

     label017:
        r68 = virtualinvoke r59.<android.content.IntentFilter: java.util.Iterator actionsIterator()>();

     label018:
        r69 = r68;

        if r68 != null goto label022;

     label019:
        r70 = new java.util.ArrayList;

        specialinvoke r70.<java.util.ArrayList: void <init>(int)>(1);

        virtualinvoke r70.<java.util.ArrayList: boolean add(java.lang.Object)>(null);

        r69 = virtualinvoke r70.<java.util.ArrayList: java.util.Iterator iterator()>();

     label020:
        goto label022;

     label021:
        $r42 := @caughtexception;

        r67 = $r42;

        goto label105;

     label022:
        r71 = newarray (int)[2];

     label023:
        r71[0] = -1;

     label024:
        $i3 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i18);

        r71[1] = $i3;

     label025:
        r72 = null;

     label026:
        z1 = interfaceinvoke r69.<java.util.Iterator: boolean hasNext()>();

     label027:
        if z1 == 0 goto label041;

     label028:
        $r30 = interfaceinvoke r69.<java.util.Iterator: java.lang.Object next()>();

        r73 = (java.lang.String) $r30;

        i20 = lengthof r71;

     label029:
        i21 = 0;

     label030:
        if i21 >= i20 goto label040;

        i1 = r71[i21];

     label031:
        $r31 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mStickyBroadcasts>;

        $r32 = virtualinvoke $r31.<android.util.SparseArray: java.lang.Object get(int)>(i1);

        r74 = (android.util.ArrayMap) $r32;

     label032:
        if r74 == null goto label038;

     label033:
        $r33 = virtualinvoke r74.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r73);

        r2 = (java.util.ArrayList) $r33;

     label034:
        r75 = r72;

        if r2 == null goto label039;

        r75 = r72;

        if r72 != null goto label036;

     label035:
        r75 = new java.util.ArrayList;

        specialinvoke r75.<java.util.ArrayList: void <init>()>();

     label036:
        virtualinvoke r75.<java.util.ArrayList: boolean addAll(java.util.Collection)>(r2);

     label037:
        goto label039;

     label038:
        r75 = r72;

     label039:
        i21 = i21 + 1;

        r72 = r75;

        goto label030;

     label040:
        goto label026;

     label041:
        exitmonitor r0;

     label042:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        if r72 == null goto label048;

        $r27 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        r76 = virtualinvoke $r27.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        i22 = 0;

        i23 = virtualinvoke r72.<java.util.ArrayList: int size()>();

        r77 = r72;

        r78 = null;

     label043:
        if i22 >= i23 goto label047;

        $r28 = virtualinvoke r77.<java.util.ArrayList: java.lang.Object get(int)>(i22);

        r79 = (android.content.Intent) $r28;

        if z0 == 0 goto label044;

        $i12 = virtualinvoke r79.<android.content.Intent: int getFlags()>();

        $i13 = $i12 & 2097152;

        if $i13 != 0 goto label044;

        r80 = r78;

        goto label046;

     label044:
        r80 = r78;

        $i11 = virtualinvoke r59.<android.content.IntentFilter: int match(android.content.ContentResolver,android.content.Intent,boolean,java.lang.String)>(r76, r79, 1, "ActivityManager");

        if $i11 < 0 goto label046;

        r80 = r78;

        if r78 != null goto label045;

        $r29 = new java.util.ArrayList;

        specialinvoke $r29.<java.util.ArrayList: void <init>()>();

        r80 = $r29;

     label045:
        virtualinvoke r80.<java.util.ArrayList: boolean add(java.lang.Object)>(r79);

     label046:
        i22 = i22 + 1;

        r78 = r80;

        goto label043;

     label047:
        goto label049;

     label048:
        r78 = null;

     label049:
        if r78 == null goto label050;

        $r26 = virtualinvoke r78.<java.util.ArrayList: java.lang.Object get(int)>(0);

        r81 = (android.content.Intent) $r26;

        goto label051;

     label050:
        r81 = null;

     label051:
        if r58 != null goto label052;

        return r81;

     label052:
        entermonitor r0;

     label053:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

     label054:
        if r60 == null goto label059;

     label055:
        $r22 = r60.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r22 == null goto label056;

        $r23 = r60.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r24 = interfaceinvoke $r23.<android.app.IApplicationThread: android.os.IBinder asBinder()>();

        $r25 = interfaceinvoke r55.<android.app.IApplicationThread: android.os.IBinder asBinder()>();

        if $r24 == $r25 goto label059;

     label056:
        exitmonitor r0;

     label057:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return null;

     label058:
        $r47 := @caughtexception;

        r82 = $r47;

        goto label097;

     label059:
        $r4 = r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mRegisteredReceivers>;

        $r5 = interfaceinvoke r58.<android.content.IIntentReceiver: android.os.IBinder asBinder()>();

        $r6 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r5);

        r83 = (com.android.server.am.ReceiverList) $r6;

     label060:
        if r83 != null goto label076;

     label061:
        r83 = new com.android.server.am.ReceiverList;

     label062:
        specialinvoke r83.<com.android.server.am.ReceiverList: void <init>(com.android.server.am.ActivityManagerService,com.android.server.am.ProcessRecord,int,int,int,android.content.IIntentReceiver)>(r0, r60, i19, i18, i0, r58);

        $r13 = r83.<com.android.server.am.ReceiverList: com.android.server.am.ProcessRecord app>;

        if $r13 == null goto label067;

        $r17 = r83.<com.android.server.am.ReceiverList: com.android.server.am.ProcessRecord app>;

        $r18 = $r17.<com.android.server.am.ProcessRecord: android.util.ArraySet receivers>;

        i24 = virtualinvoke $r18.<android.util.ArraySet: int size()>();

     label063:
        if i24 >= 1000 goto label066;

     label064:
        $r20 = r83.<com.android.server.am.ReceiverList: com.android.server.am.ProcessRecord app>;

        $r21 = $r20.<com.android.server.am.ProcessRecord: android.util.ArraySet receivers>;

        virtualinvoke $r21.<android.util.ArraySet: boolean add(java.lang.Object)>(r83);

     label065:
        goto label069;

     label066:
        r84 = new java.lang.IllegalStateException;

        r85 = new java.lang.StringBuilder;

        specialinvoke r85.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Too many receivers, total of ");

        virtualinvoke r85.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i24);

        virtualinvoke r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", registered for pid: ");

        $i10 = r83.<com.android.server.am.ReceiverList: int pid>;

        virtualinvoke r85.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        virtualinvoke r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", callerPackage: ");

        virtualinvoke r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r64);

        $r19 = virtualinvoke r85.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r84.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r19);

        throw r84;

     label067:
        $r14 = interfaceinvoke r58.<android.content.IIntentReceiver: android.os.IBinder asBinder()>();

        interfaceinvoke $r14.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>(r83, 0);

     label068:
        r83.<com.android.server.am.ReceiverList: boolean linkedToDeath> = 1;

     label069:
        $r15 = r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mRegisteredReceivers>;

        $r16 = interfaceinvoke r58.<android.content.IIntentReceiver: android.os.IBinder asBinder()>();

        virtualinvoke $r15.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r16, r83);

     label070:
        goto label078;

     label071:
        $r49 := @caughtexception;

     label072:
        exitmonitor r0;

     label073:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return r81;

     label074:
        $r54 := @caughtexception;

        r82 = $r54;

        goto label097;

     label075:
        $r39 := @caughtexception;

        r82 = $r39;

        goto label097;

     label076:
        $i4 = r83.<com.android.server.am.ReceiverList: int uid>;

        if $i4 != i18 goto label094;

        $i6 = r83.<com.android.server.am.ReceiverList: int pid>;

        if $i6 != i19 goto label093;

        i26 = r83.<com.android.server.am.ReceiverList: int userId>;

     label077:
        if i26 != i0 goto label092;

     label078:
        r86 = new com.android.server.am.BroadcastFilter;

     label079:
        specialinvoke r86.<com.android.server.am.BroadcastFilter: void <init>(android.content.IntentFilter,com.android.server.am.ReceiverList,java.lang.String,java.lang.String,java.lang.String,int,int,boolean,boolean)>(r59, r83, r64, r57, r1, i18, i0, z0, z6);

        $z2 = virtualinvoke r83.<com.android.server.am.ReceiverList: boolean containsFilter(android.content.IntentFilter)>(r59);

        if $z2 == 0 goto label081;

        r87 = new java.lang.StringBuilder;

        specialinvoke r87.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Receiver with filter ");

        virtualinvoke r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r59);

        virtualinvoke r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" already registered for pid ");

        $i9 = r83.<com.android.server.am.ReceiverList: int pid>;

        virtualinvoke r87.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        virtualinvoke r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", callerPackage is ");

        virtualinvoke r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r64);

        $r12 = virtualinvoke r87.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r12);

     label080:
        goto label083;

     label081:
        virtualinvoke r83.<com.android.server.am.ReceiverList: boolean add(java.lang.Object)>(r86);

        $z3 = virtualinvoke r86.<com.android.server.am.BroadcastFilter: boolean debugCheck()>();

        if $z3 != 0 goto label082;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", "==> For Dynamic broadcast");

     label082:
        $r10 = r0.<com.android.server.am.ActivityManagerService: com.android.server.IntentResolver mReceiverResolver>;

        virtualinvoke $r10.<com.android.server.IntentResolver: void addFilter(java.lang.Object)>(r86);

     label083:
        if r78 == null goto label089;

     label084:
        r88 = new java.util.ArrayList;

        specialinvoke r88.<java.util.ArrayList: void <init>()>();

        virtualinvoke r88.<java.util.ArrayList: boolean add(java.lang.Object)>(r86);

        i28 = virtualinvoke r78.<java.util.ArrayList: int size()>();

     label085:
        i29 = 0;

     label086:
        if i29 >= i28 goto label089;

     label087:
        $r11 = virtualinvoke r78.<java.util.ArrayList: java.lang.Object get(int)>(i29);

        r89 = (android.content.Intent) $r11;

        r90 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastQueue broadcastQueueForIntent(android.content.Intent)>(r89);

        r91 = new com.android.server.am.BroadcastRecord;

        specialinvoke r91.<com.android.server.am.BroadcastRecord: void <init>(com.android.server.am.BroadcastQueue,android.content.Intent,com.android.server.am.ProcessRecord,java.lang.String,java.lang.String,int,int,boolean,java.lang.String,java.lang.String[],int,android.app.BroadcastOptions,java.util.List,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,boolean,boolean,boolean,int,boolean,boolean)>(r90, r89, null, null, null, -1, -1, 0, null, null, -1, null, r88, null, 0, null, null, 0, 1, 1, -1, 0, 0);

        virtualinvoke r90.<com.android.server.am.BroadcastQueue: void enqueueParallelBroadcastLocked(com.android.server.am.BroadcastRecord)>(r91);

        virtualinvoke r90.<com.android.server.am.BroadcastQueue: void scheduleBroadcastsLocked()>();

     label088:
        i29 = i29 + 1;

        goto label086;

     label089:
        exitmonitor r0;

     label090:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return r81;

     label091:
        $r41 := @caughtexception;

        r82 = $r41;

        goto label097;

     label092:
        r92 = new java.lang.IllegalArgumentException;

        r93 = new java.lang.StringBuilder;

        specialinvoke r93.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Receiver requested to register for user ");

        virtualinvoke r93.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" was previously registered for user ");

        $i8 = r83.<com.android.server.am.ReceiverList: int userId>;

        virtualinvoke r93.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        virtualinvoke r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" callerPackage is ");

        virtualinvoke r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r64);

        $r9 = virtualinvoke r93.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r92.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw r92;

     label093:
        r94 = new java.lang.IllegalArgumentException;

        r95 = new java.lang.StringBuilder;

        specialinvoke r95.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Receiver requested to register for pid ");

        virtualinvoke r95.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i19);

        virtualinvoke r95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" was previously registered for pid ");

        $i7 = r83.<com.android.server.am.ReceiverList: int pid>;

        virtualinvoke r95.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        virtualinvoke r95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" callerPackage is ");

        virtualinvoke r95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r64);

        $r8 = virtualinvoke r95.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r94.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw r94;

     label094:
        r96 = new java.lang.IllegalArgumentException;

        r97 = new java.lang.StringBuilder;

        specialinvoke r97.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Receiver requested to register for uid ");

        virtualinvoke r97.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i18);

        virtualinvoke r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" was previously registered for uid ");

        $i5 = r83.<com.android.server.am.ReceiverList: int uid>;

        virtualinvoke r97.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        virtualinvoke r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" callerPackage is ");

        virtualinvoke r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r64);

        $r7 = virtualinvoke r97.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r96.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw r96;

     label095:
        $r51 := @caughtexception;

        r82 = $r51;

        goto label097;

     label096:
        $r45 := @caughtexception;

        r82 = $r45;

     label097:
        exitmonitor r0;

     label098:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw r82;

     label099:
        $r53 := @caughtexception;

        r82 = $r53;

        goto label097;

     label100:
        $r48 := @caughtexception;

        r67 = $r48;

        goto label105;

     label101:
        $r43 := @caughtexception;

        r67 = $r43;

        goto label105;

     label102:
        $r40 := @caughtexception;

        r67 = $r40;

        goto label105;

     label103:
        $r46 := @caughtexception;

        r67 = $r46;

        goto label105;

     label104:
        $r44 := @caughtexception;

        r67 = $r44;

     label105:
        exitmonitor r0;

     label106:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw r67;

     label107:
        $r50 := @caughtexception;

        r67 = $r50;

        goto label105;

        catch java.lang.Throwable from label003 to label004 with label104;
        catch java.lang.Throwable from label005 to label006 with label013;
        catch java.lang.Throwable from label007 to label008 with label013;
        catch java.lang.Throwable from label009 to label010 with label013;
        catch java.lang.Throwable from label010 to label011 with label013;
        catch java.lang.Throwable from label012 to label013 with label013;
        catch java.lang.Throwable from label014 to label015 with label103;
        catch java.lang.Throwable from label016 to label017 with label102;
        catch java.lang.Throwable from label017 to label018 with label101;
        catch java.lang.Throwable from label019 to label020 with label021;
        catch java.lang.Throwable from label022 to label023 with label101;
        catch java.lang.Throwable from label024 to label025 with label101;
        catch java.lang.Throwable from label026 to label027 with label100;
        catch java.lang.Throwable from label028 to label029 with label021;
        catch java.lang.Throwable from label031 to label032 with label021;
        catch java.lang.Throwable from label033 to label034 with label021;
        catch java.lang.Throwable from label035 to label036 with label021;
        catch java.lang.Throwable from label036 to label037 with label021;
        catch java.lang.Throwable from label041 to label042 with label100;
        catch java.lang.Throwable from label053 to label054 with label096;
        catch java.lang.Throwable from label055 to label056 with label058;
        catch java.lang.Throwable from label056 to label057 with label058;
        catch java.lang.Throwable from label059 to label060 with label096;
        catch java.lang.Throwable from label061 to label062 with label075;
        catch java.lang.Throwable from label062 to label063 with label074;
        catch java.lang.Throwable from label064 to label065 with label074;
        catch java.lang.Throwable from label066 to label067 with label074;
        catch android.os.RemoteException from label067 to label068 with label071;
        catch java.lang.Throwable from label067 to label068 with label074;
        catch java.lang.Throwable from label068 to label069 with label074;
        catch java.lang.Throwable from label069 to label070 with label074;
        catch java.lang.Throwable from label072 to label073 with label074;
        catch java.lang.Throwable from label076 to label077 with label095;
        catch java.lang.Throwable from label078 to label079 with label091;
        catch java.lang.Throwable from label079 to label080 with label099;
        catch java.lang.Throwable from label081 to label082 with label099;
        catch java.lang.Throwable from label082 to label083 with label099;
        catch java.lang.Throwable from label084 to label085 with label099;
        catch java.lang.Throwable from label087 to label088 with label099;
        catch java.lang.Throwable from label089 to label090 with label099;
        catch java.lang.Throwable from label092 to label093 with label099;
        catch java.lang.Throwable from label093 to label094 with label099;
        catch java.lang.Throwable from label094 to label095 with label099;
        catch java.lang.Throwable from label097 to label098 with label099;
        catch java.lang.Throwable from label105 to label106 with label107;
    }

    public void registerTaskStackListener(android.app.ITaskStackListener)
    {
        com.android.server.am.ActivityManagerService r0;
        android.app.ITaskStackListener r1;
        com.android.server.wm.ActivityTaskManagerService $r2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.app.ITaskStackListener;

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerService mActivityTaskManager>;

        virtualinvoke $r2.<com.android.server.wm.ActivityTaskManagerService: void registerTaskStackListener(android.app.ITaskStackListener)>(r1);

        return;
    }

    public void registerUidObserver(android.app.IUidObserver, int, int, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, $i2;
        java.lang.String r1;
        android.os.RemoteCallbackList r2;
        com.android.server.am.ActivityManagerService$UidObserverRegistration r3;
        boolean $z0;
        java.lang.Throwable $r4;
        android.app.IUidObserver r5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r5 := @parameter0: android.app.IUidObserver;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: java.lang.String;

        $z0 = specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean hasUsageStatsPermission(java.lang.String)>(r1);

        if $z0 != 0 goto label1;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.PACKAGE_USAGE_STATS", "registerUidObserver");

     label1:
        entermonitor r0;

     label2:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        r2 = r0.<com.android.server.am.ActivityManagerService: android.os.RemoteCallbackList mUidObservers>;

        r3 = new com.android.server.am.ActivityManagerService$UidObserverRegistration;

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        specialinvoke r3.<com.android.server.am.ActivityManagerService$UidObserverRegistration: void <init>(int,java.lang.String,int,int)>($i2, r1, i0, i1);

        virtualinvoke r2.<android.os.RemoteCallbackList: boolean register(android.os.IInterface,java.lang.Object)>(r5, r3);

        exitmonitor r0;

     label3:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label4:
        $r4 := @caughtexception;

     label5:
        exitmonitor r0;

     label6:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r4;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void registerUserSwitchObserver(android.app.IUserSwitchObserver, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        android.app.IUserSwitchObserver r1;
        java.lang.String r2;
        com.android.server.am.UserController $r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.app.IUserSwitchObserver;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.UserController mUserController>;

        virtualinvoke $r3.<com.android.server.am.UserController: void registerUserSwitchObserver(android.app.IUserSwitchObserver,java.lang.String)>(r1, r2);

        return;
    }

    public void removeContentProvider(android.os.IBinder, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        boolean z0, $z1;
        long l0;
        java.lang.Throwable $r1, $r6;
        java.lang.ClassCastException $r2;
        android.os.IBinder r7;
        com.android.server.am.ContentProviderConnection r8;
        java.lang.NullPointerException r9;
        java.lang.StringBuilder r12;
        java.lang.String r13;
        java.lang.IllegalArgumentException r14;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r7 := @parameter0: android.os.IBinder;

        z0 := @parameter1: boolean;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("removeContentProvider");

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label01:
        entermonitor r0;

     label02:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        r8 = (com.android.server.am.ContentProviderConnection) r7;

     label03:
        if r8 == null goto label08;

     label04:
        $z1 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean decProviderCountLocked(com.android.server.am.ContentProviderConnection,com.android.server.am.ContentProviderRecord,android.os.IBinder,boolean)>(r8, null, null, z0);

        if $z1 == 0 goto label05;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void updateOomAdjLocked(java.lang.String)>("updateOomAdj_removeProvider");

     label05:
        exitmonitor r0;

     label06:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

     label07:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label08:
        r9 = new java.lang.NullPointerException;

        specialinvoke r9.<java.lang.NullPointerException: void <init>(java.lang.String)>("connection is null");

        throw r9;

     label09:
        $r1 := @caughtexception;

        goto label12;

     label10:
        $r2 := @caughtexception;

     label11:
        r12 = new java.lang.StringBuilder;

        specialinvoke r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("removeContentProvider: ");

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not a ContentProviderConnection");

        r13 = virtualinvoke r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r13);

        r14 = new java.lang.IllegalArgumentException;

        specialinvoke r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(r13);

        throw r14;

     label12:
        exitmonitor r0;

     label13:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r1;

     label14:
        $r6 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.ClassCastException from label02 to label03 with label10;
        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label06 to label07 with label14;
        catch java.lang.Throwable from label08 to label09 with label09;
        catch java.lang.Throwable from label11 to label12 with label09;
        catch java.lang.Throwable from label12 to label13 with label09;
        catch java.lang.Throwable from label13 to label14 with label14;
    }

    public void removeContentProviderExternal(java.lang.String, android.os.IBinder)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1;
        android.os.IBinder r2;
        int $i0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.IBinder;

        $i0 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void removeContentProviderExternalAsUser(java.lang.String,android.os.IBinder,int)>(r1, r2, $i0);

        return;
    }

    public void removeContentProviderExternalAsUser(java.lang.String, android.os.IBinder, int)
    {
        com.android.server.am.ActivityManagerService r0;
        android.os.IBinder r1;
        int i0;
        long l1;
        java.lang.Throwable $r2;
        java.lang.String r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r3 := @parameter0: java.lang.String;

        r1 := @parameter1: android.os.IBinder;

        i0 := @parameter2: int;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.ACCESS_CONTENT_PROVIDERS_EXTERNALLY", "Do not have permission in call removeContentProviderExternal()");

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        specialinvoke r0.<com.android.server.am.ActivityManagerService: void removeContentProviderExternalUnchecked(java.lang.String,android.os.IBinder,int)>(r3, r1, i0);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return;

     label3:
        $r2 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    final void removeLruProcessLocked(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1;
        com.android.server.am.ProcessList $r2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        virtualinvoke $r2.<com.android.server.am.ProcessList: void removeLruProcessLocked(com.android.server.am.ProcessRecord)>(r1);

        return;
    }

    boolean removePidIfNoThread(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ActivityManagerService r0;
        boolean z0;
        com.android.server.am.ActivityManagerService$PidMap $r1, r7;
        int $i0, $i1;
        android.util.SparseArray $r2, r8;
        com.android.server.wm.ActivityTaskManagerInternal $r3;
        java.lang.Throwable $r4, $r5;
        com.android.server.am.ProcessRecord r6;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r6 := @parameter0: com.android.server.am.ProcessRecord;

        r7 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        entermonitor r7;

     label01:
        $r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        z0 = virtualinvoke $r1.<com.android.server.am.ActivityManagerService$PidMap: boolean doRemoveIfNoThreadInternal(com.android.server.am.ProcessRecord)>(r6);

        exitmonitor r7;

     label02:
        if z0 == 0 goto label08;

        r8 = <com.android.server.am.ActivityManagerService: android.util.SparseArray sActiveProcessInfoSelfLocked>;

        entermonitor r8;

     label03:
        $r2 = <com.android.server.am.ActivityManagerService: android.util.SparseArray sActiveProcessInfoSelfLocked>;

        $i0 = r6.<com.android.server.am.ProcessRecord: int pid>;

        virtualinvoke $r2.<android.util.SparseArray: void remove(int)>($i0);

        exitmonitor r8;

     label04:
        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerInternal mAtmInternal>;

        $i1 = r6.<com.android.server.am.ProcessRecord: int pid>;

        virtualinvoke $r3.<com.android.server.wm.ActivityTaskManagerInternal: void onProcessUnMapped(int)>($i1);

        goto label08;

     label05:
        $r4 := @caughtexception;

     label06:
        exitmonitor r8;

     label07:
        throw $r4;

     label08:
        return z0;

     label09:
        $r5 := @caughtexception;

     label10:
        exitmonitor r7;

     label11:
        throw $r5;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label06 to label07 with label05;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    void removePidLocked(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ActivityManagerService r0;
        boolean z0;
        com.android.server.am.ActivityManagerService$PidMap $r1, r7;
        int $i0, $i1;
        android.util.SparseArray $r2, r8;
        com.android.server.wm.ActivityTaskManagerInternal $r3;
        java.lang.Throwable $r4, $r5;
        com.android.server.am.ProcessRecord r6;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r6 := @parameter0: com.android.server.am.ProcessRecord;

        r7 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        entermonitor r7;

     label01:
        $r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        z0 = virtualinvoke $r1.<com.android.server.am.ActivityManagerService$PidMap: boolean doRemoveInternal(com.android.server.am.ProcessRecord)>(r6);

        exitmonitor r7;

     label02:
        if z0 == 0 goto label08;

        r8 = <com.android.server.am.ActivityManagerService: android.util.SparseArray sActiveProcessInfoSelfLocked>;

        entermonitor r8;

     label03:
        $r2 = <com.android.server.am.ActivityManagerService: android.util.SparseArray sActiveProcessInfoSelfLocked>;

        $i0 = r6.<com.android.server.am.ProcessRecord: int pid>;

        virtualinvoke $r2.<android.util.SparseArray: void remove(int)>($i0);

        exitmonitor r8;

     label04:
        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerInternal mAtmInternal>;

        $i1 = r6.<com.android.server.am.ProcessRecord: int pid>;

        virtualinvoke $r3.<com.android.server.wm.ActivityTaskManagerInternal: void onProcessUnMapped(int)>($i1);

        goto label08;

     label05:
        $r4 := @caughtexception;

     label06:
        exitmonitor r8;

     label07:
        throw $r4;

     label08:
        return;

     label09:
        $r5 := @caughtexception;

     label10:
        exitmonitor r7;

     label11:
        throw $r5;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label06 to label07 with label05;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    void removeReceiverLocked(com.android.server.am.ReceiverList)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ReceiverList r1;
        android.content.IIntentReceiver $r2;
        java.util.HashMap $r3;
        android.os.IBinder $r4;
        int $i0, i1;
        com.android.server.IntentResolver $r6;
        java.lang.Object $r7;
        com.android.server.am.BroadcastFilter $r8;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ReceiverList;

        $r3 = r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mRegisteredReceivers>;

        $r2 = r1.<com.android.server.am.ReceiverList: android.content.IIntentReceiver receiver>;

        $r4 = interfaceinvoke $r2.<android.content.IIntentReceiver: android.os.IBinder asBinder()>();

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r4);

        $i0 = virtualinvoke r1.<com.android.server.am.ReceiverList: int size()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label2;

        $r6 = r0.<com.android.server.am.ActivityManagerService: com.android.server.IntentResolver mReceiverResolver>;

        $r7 = virtualinvoke r1.<com.android.server.am.ReceiverList: java.lang.Object get(int)>(i1);

        $r8 = (com.android.server.am.BroadcastFilter) $r7;

        virtualinvoke $r6.<com.android.server.IntentResolver: void removeFilter(java.lang.Object)>($r8);

        i1 = i1 + -1;

        goto label1;

     label2:
        return;
    }

    public void removeStack(int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0;
        com.android.server.wm.ActivityTaskManagerService $r1;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerService mActivityTaskManager>;

        virtualinvoke $r1.<com.android.server.wm.ActivityTaskManagerService: void removeStack(int)>(i0);

        return;
    }

    public boolean removeTask(int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0;
        com.android.server.wm.ActivityTaskManagerService $r1;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerService mActivityTaskManager>;

        $z0 = virtualinvoke $r1.<com.android.server.wm.ActivityTaskManagerService: boolean removeTask(int)>(i0);

        return $z0;
    }

    void reportCurWakefulnessUsageEventLocked()
    {
        com.android.server.am.ActivityManagerService r0;
        int $i0;
        byte b1;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $i0 = r0.<com.android.server.am.ActivityManagerService: int mWakefulness>;

        if $i0 != 1 goto label1;

        b1 = 15;

        goto label2;

     label1:
        b1 = 16;

     label2:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void reportGlobalUsageEventLocked(int)>(b1);

        return;
    }

    void reportGlobalUsageEventLocked(int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, $i2, $i3, $i4, i5;
        int[] r1;
        com.android.server.am.UserController $r2, $r4;
        android.app.usage.UsageStatsManagerInternal $r3, $r5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.UserController mUserController>;

        i1 = virtualinvoke $r2.<com.android.server.am.UserController: int getCurrentUserId()>();

        $r3 = r0.<com.android.server.am.ActivityManagerService: android.app.usage.UsageStatsManagerInternal mUsageStatsService>;

        virtualinvoke $r3.<android.app.usage.UsageStatsManagerInternal: void reportEvent(java.lang.String,int,int)>("android", i1, i0);

        $r4 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.UserController mUserController>;

        r1 = virtualinvoke $r4.<com.android.server.am.UserController: int[] getCurrentProfileIds()>();

        if r1 == null goto label4;

        $i2 = lengthof r1;

        i5 = $i2 - 1;

     label1:
        if i5 < 0 goto label4;

        $i3 = r1[i5];

        if $i3 != i1 goto label2;

        goto label3;

     label2:
        $r5 = r0.<com.android.server.am.ActivityManagerService: android.app.usage.UsageStatsManagerInternal mUsageStatsService>;

        $i4 = r1[i5];

        virtualinvoke $r5.<android.app.usage.UsageStatsManagerInternal: void reportEvent(java.lang.String,int,int)>("android", $i4, i0);

     label3:
        i5 = i5 + -1;

        goto label1;

     label4:
        return;
    }

    void reportMemUsage(java.util.ArrayList)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, $i2, $i46, $i47, $i53, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i63, $i64, $i65, $i66, $i73, $i77, $i79, $i80, $i81, $i84, i85, i86, i87, i89, i90, i97, i98, i100, $i101, $i102, i103, $i104, $i105;
        int[] r1, $r115;
        com.android.server.am.'-$$Lambda$ActivityManagerService$v19TUZ90g8UrLkuSM7HBbomQWrI' $r3;
        com.android.internal.os.ProcessCpuTracker $r4, r141;
        byte $b3, $b14, $b16, $b34, $b38, $b40, $b42, $b48, $b50, $b69, $b78, $b116;
        long $l4, $l5, $l6, $l7, $l8, $l9, $l10, $l11, $l12, $l13, $l15, $l17, $l18, $l19, $l20, $l21, $l22, $l23, $l24, $l25, $l26, $l27, $l28, $l33, $l36, $l37, $l39, $l41, $l43, $l44, $l45, $l49, $l51, $l52, $l54, $l62, $l67, $l68, $l70, $l71, $l72, $l74, $l75, $l76, $l82, $l83, l88, l91, l92, l93, l94, l95, l96, l99, $l106, $l107, $l108, $l109, $l110, $l111, $l112, $l113, l114, l115, l117, l118;
        java.lang.String $r18, $r21, $r24, $r27, $r30, $r34, $r37, $r40, $r43, $r59, $r63, $r66, $r67, $r68, $r82, $r84, $r85, $r87, $r91, $r94, $r97, $r101, $r108, $r112, $r119, $r127, $r158, $r159, $r160, $r161, $r162;
        com.android.server.am.ActiveServices $r79;
        com.android.server.am.ActiveServices$ServiceDumper $r80;
        com.android.server.wm.ActivityTaskManagerInternal $r81;
        java.lang.Object $r104, $r117, $r124, $r125, $r128;
        java.lang.String[] $r111, r166;
        com.android.server.am.ProcessMemInfo $r118, r138, r145, r153, r171;
        java.lang.Throwable $r129, $r130, $r131, $r132, $r133, $r134, $r135, r168, r169;
        java.util.ArrayList r136;
        long[] r139, r140, r155, r157;
        java.util.List r142;
        com.android.internal.os.ProcessCpuTracker$Stats r143;
        boolean z1, z2, z3;
        android.util.SparseArray r170;
        com.android.server.am.ActivityManagerService$23 r172;
        java.lang.StringBuilder r173, r174, r175, r176, r177, r179, r180;
        com.android.internal.util.MemInfoReader r178;
        java.io.StringWriter r181;
        com.android.internal.util.FastPrintWriter r182;
        com.android.internal.os.ProcessCpuTracker$FilterStats r183;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r136 := @parameter0: java.util.ArrayList;

        r170 = new android.util.SparseArray;

        $i2 = virtualinvoke r136.<java.util.ArrayList: int size()>();

        specialinvoke r170.<android.util.SparseArray: void <init>(int)>($i2);

        i85 = 0;

        i86 = virtualinvoke r136.<java.util.ArrayList: int size()>();

     label01:
        if i85 >= i86 goto label02;

        $r128 = virtualinvoke r136.<java.util.ArrayList: java.lang.Object get(int)>(i85);

        r138 = (com.android.server.am.ProcessMemInfo) $r128;

        $i84 = r138.<com.android.server.am.ProcessMemInfo: int pid>;

        virtualinvoke r170.<android.util.SparseArray: void put(int,java.lang.Object)>($i84, r138);

        i85 = i85 + 1;

        goto label01;

     label02:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void updateCpuStatsNow()>();

        r139 = newarray (long)[1];

        r140 = newarray (long)[2];

        r141 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.os.ProcessCpuTracker mProcessCpuTracker>;

        entermonitor r141;

     label03:
        $r4 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.os.ProcessCpuTracker mProcessCpuTracker>;

        $r3 = <com.android.server.am._$$Lambda$ActivityManagerService$v19TUZ90g8UrLkuSM7HBbomQWrI: com.android.server.am.'-$$Lambda$ActivityManagerService$v19TUZ90g8UrLkuSM7HBbomQWrI' INSTANCE>;

        r183 = (com.android.internal.os.ProcessCpuTracker$FilterStats) $r3;

        r142 = virtualinvoke $r4.<com.android.internal.os.ProcessCpuTracker: java.util.List getStats(com.android.internal.os.ProcessCpuTracker$FilterStats)>(r183);

        exitmonitor r141;

     label04:
        i0 = interfaceinvoke r142.<java.util.List: int size()>();

        i87 = 0;

     label05:
        if i87 >= i0 goto label08;

        $r125 = interfaceinvoke r142.<java.util.List: java.lang.Object get(int)>(i87);

        r143 = (com.android.internal.os.ProcessCpuTracker$Stats) $r125;

        $i77 = r143.<com.android.internal.os.ProcessCpuTracker$Stats: int pid>;

        l88 = staticinvoke <android.os.Debug: long getPss(int,long[],long[])>($i77, r140, r139);

        $b78 = l88 cmp 0L;

        if $b78 <= 0 goto label07;

        $i79 = r143.<com.android.internal.os.ProcessCpuTracker$Stats: int pid>;

        $i80 = virtualinvoke r170.<android.util.SparseArray: int indexOfKey(int)>($i79);

        if $i80 >= 0 goto label06;

        r171 = new com.android.server.am.ProcessMemInfo;

        $r127 = r143.<com.android.internal.os.ProcessCpuTracker$Stats: java.lang.String name>;

        $i81 = r143.<com.android.internal.os.ProcessCpuTracker$Stats: int pid>;

        specialinvoke r171.<com.android.server.am.ProcessMemInfo: void <init>(java.lang.String,int,int,int,java.lang.String,java.lang.String)>($r127, $i81, -1000, -1, "native", null);

        r171.<com.android.server.am.ProcessMemInfo: long pss> = l88;

        $l82 = r140[1];

        r171.<com.android.server.am.ProcessMemInfo: long swapPss> = $l82;

        $l83 = r139[0];

        r171.<com.android.server.am.ProcessMemInfo: long memtrack> = $l83;

        virtualinvoke r136.<java.util.ArrayList: boolean add(java.lang.Object)>(r171);

        goto label07;

     label06:
        goto label07;

     label07:
        i87 = i87 + 1;

        goto label05;

     label08:
        i89 = 0;

        i90 = virtualinvoke r136.<java.util.ArrayList: int size()>();

        l91 = 0L;

        l92 = 0L;

        l93 = 0L;

     label09:
        if i89 >= i90 goto label11;

        $r124 = virtualinvoke r136.<java.util.ArrayList: java.lang.Object get(int)>(i89);

        r145 = (com.android.server.am.ProcessMemInfo) $r124;

        $l68 = r145.<com.android.server.am.ProcessMemInfo: long pss>;

        $b69 = $l68 cmp 0L;

        if $b69 != 0 goto label10;

        $i73 = r145.<com.android.server.am.ProcessMemInfo: int pid>;

        $l74 = staticinvoke <android.os.Debug: long getPss(int,long[],long[])>($i73, r140, r139);

        r145.<com.android.server.am.ProcessMemInfo: long pss> = $l74;

        $l75 = r140[1];

        r145.<com.android.server.am.ProcessMemInfo: long swapPss> = $l75;

        $l76 = r139[0];

        r145.<com.android.server.am.ProcessMemInfo: long memtrack> = $l76;

     label10:
        $l70 = r145.<com.android.server.am.ProcessMemInfo: long pss>;

        l93 = l93 + $l70;

        $l71 = r145.<com.android.server.am.ProcessMemInfo: long swapPss>;

        l91 = l91 + $l71;

        $l72 = r145.<com.android.server.am.ProcessMemInfo: long memtrack>;

        l92 = l92 + $l72;

        i89 = i89 + 1;

        goto label09;

     label11:
        r172 = new com.android.server.am.ActivityManagerService$23;

        specialinvoke r172.<com.android.server.am.ActivityManagerService$23: void <init>(com.android.server.am.ActivityManagerService)>(r0);

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r136, r172);

        r173 = new java.lang.StringBuilder;

        specialinvoke r173.<java.lang.StringBuilder: void <init>(int)>(128);

        r174 = new java.lang.StringBuilder;

        specialinvoke r174.<java.lang.StringBuilder: void <init>(int)>(128);

        virtualinvoke r173.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Low on memory -- ");

        staticinvoke <com.android.server.am.ActivityManagerService: void appendMemBucket(java.lang.StringBuilder,long,java.lang.String,boolean)>(r173, l93, "total", 0);

        staticinvoke <com.android.server.am.ActivityManagerService: void appendMemBucket(java.lang.StringBuilder,long,java.lang.String,boolean)>(r174, l93, "total", 1);

        r175 = new java.lang.StringBuilder;

        specialinvoke r175.<java.lang.StringBuilder: void <init>(int)>(1024);

        r176 = new java.lang.StringBuilder;

        specialinvoke r176.<java.lang.StringBuilder: void <init>(int)>(1024);

        r177 = new java.lang.StringBuilder;

        specialinvoke r177.<java.lang.StringBuilder: void <init>(int)>(1024);

        z1 = 1;

        l94 = 0L;

        l95 = 0L;

        l96 = 0L;

        i1 = virtualinvoke r136.<java.util.ArrayList: int size()>();

        i97 = 0;

        i98 = -2147483648;

     label12:
        if i97 >= i1 goto label32;

        $r104 = virtualinvoke r136.<java.util.ArrayList: java.lang.Object get(int)>(i97);

        r153 = (com.android.server.am.ProcessMemInfo) $r104;

        l99 = l96;

        $i46 = r153.<com.android.server.am.ProcessMemInfo: int oomAdj>;

        if $i46 < 900 goto label13;

        $l67 = r153.<com.android.server.am.ProcessMemInfo: long pss>;

        l99 = l96 + $l67;

     label13:
        $i47 = r153.<com.android.server.am.ProcessMemInfo: int oomAdj>;

        if $i47 == -1000 goto label26;

        $i53 = r153.<com.android.server.am.ProcessMemInfo: int oomAdj>;

        if $i53 < 500 goto label15;

        $i65 = r153.<com.android.server.am.ProcessMemInfo: int oomAdj>;

        if $i65 == 600 goto label15;

        $i66 = r153.<com.android.server.am.ProcessMemInfo: int oomAdj>;

        if $i66 != 700 goto label14;

        goto label15;

     label14:
        i100 = i98;

        z2 = z1;

        goto label27;

     label15:
        $i101 = r153.<com.android.server.am.ProcessMemInfo: int oomAdj>;

        if i98 == $i101 goto label19;

        i98 = r153.<com.android.server.am.ProcessMemInfo: int oomAdj>;

        $i63 = r153.<com.android.server.am.ProcessMemInfo: int oomAdj>;

        if $i63 > 0 goto label16;

        virtualinvoke r173.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" / ");

     label16:
        $i64 = r153.<com.android.server.am.ProcessMemInfo: int oomAdj>;

        if $i64 < 0 goto label18;

        z3 = z1;

        if z1 == 0 goto label17;

        virtualinvoke r174.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        z3 = 0;

     label17:
        virtualinvoke r174.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n\t at ");

        z1 = z3;

        goto label20;

     label18:
        virtualinvoke r174.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("$");

        goto label20;

     label19:
        virtualinvoke r173.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        virtualinvoke r174.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("$");

     label20:
        $i102 = r153.<com.android.server.am.ProcessMemInfo: int oomAdj>;

        if $i102 > 0 goto label21;

        $l62 = r153.<com.android.server.am.ProcessMemInfo: long pss>;

        $r119 = r153.<com.android.server.am.ProcessMemInfo: java.lang.String name>;

        staticinvoke <com.android.server.am.ActivityManagerService: void appendMemBucket(java.lang.StringBuilder,long,java.lang.String,boolean)>(r173, $l62, $r119, 0);

        goto label21;

     label21:
        $l54 = r153.<com.android.server.am.ProcessMemInfo: long pss>;

        $r108 = r153.<com.android.server.am.ProcessMemInfo: java.lang.String name>;

        staticinvoke <com.android.server.am.ActivityManagerService: void appendMemBucket(java.lang.StringBuilder,long,java.lang.String,boolean)>(r174, $l54, $r108, 1);

        i100 = i98;

        z2 = z1;

        $i55 = r153.<com.android.server.am.ProcessMemInfo: int oomAdj>;

        if $i55 < 0 goto label27;

        $i56 = i97 + 1;

        if $i56 >= i1 goto label22;

        i100 = i98;

        z2 = z1;

        $i60 = i97 + 1;

        $r117 = virtualinvoke r136.<java.util.ArrayList: java.lang.Object get(int)>($i60);

        $r118 = (com.android.server.am.ProcessMemInfo) $r117;

        $i61 = $r118.<com.android.server.am.ProcessMemInfo: int oomAdj>;

        if $i61 == i98 goto label27;

     label22:
        virtualinvoke r174.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        i103 = 0;

     label23:
        r1 = <com.android.server.am.ActivityManagerService: int[] DUMP_MEM_OOM_ADJ>;

        $i104 = lengthof r1;

        if i103 >= $i104 goto label25;

        $i58 = r1[i103];

        $i57 = r153.<com.android.server.am.ProcessMemInfo: int oomAdj>;

        if $i58 != $i57 goto label24;

        $r111 = <com.android.server.am.ActivityManagerService: java.lang.String[] DUMP_MEM_OOM_LABEL>;

        $r112 = $r111[i103];

        virtualinvoke r174.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r112);

        virtualinvoke r174.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r115 = <com.android.server.am.ActivityManagerService: int[] DUMP_MEM_OOM_ADJ>;

        $i59 = $r115[i103];

        virtualinvoke r174.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i59);

     label24:
        i103 = i103 + 1;

        goto label23;

     label25:
        virtualinvoke r174.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        i100 = i98;

        z2 = z1;

        goto label27;

     label26:
        z2 = z1;

        i100 = i98;

     label27:
        specialinvoke r0.<com.android.server.am.ActivityManagerService: void appendMemInfo(java.lang.StringBuilder,com.android.server.am.ProcessMemInfo)>(r175, r153);

        $i105 = r153.<com.android.server.am.ProcessMemInfo: int oomAdj>;

        if $i105 != -1000 goto label29;

        $l49 = r153.<com.android.server.am.ProcessMemInfo: long pss>;

        $b50 = $l49 cmp 512L;

        if $b50 < 0 goto label28;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void appendMemInfo(java.lang.StringBuilder,com.android.server.am.ProcessMemInfo)>(r176, r153);

        goto label31;

     label28:
        $l51 = r153.<com.android.server.am.ProcessMemInfo: long pss>;

        l94 = l94 + $l51;

        $l52 = r153.<com.android.server.am.ProcessMemInfo: long memtrack>;

        l95 = l95 + $l52;

        goto label31;

     label29:
        $b48 = l94 cmp 0L;

        if $b48 <= 0 goto label30;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void appendBasicMemEntry(java.lang.StringBuilder,int,int,long,long,java.lang.String)>(r176, -1000, -1, l94, l95, "(Other native)");

        virtualinvoke r176.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        l94 = 0L;

        goto label30;

     label30:
        specialinvoke r0.<com.android.server.am.ActivityManagerService: void appendMemInfo(java.lang.StringBuilder,com.android.server.am.ProcessMemInfo)>(r177, r153);

     label31:
        i97 = i97 + 1;

        i98 = i100;

        z1 = z2;

        l96 = l99;

        goto label12;

     label32:
        virtualinvoke r177.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("           ");

        staticinvoke <com.android.server.am.ProcessList: void appendRamKb(java.lang.StringBuilder,long)>(r177, l93);

        virtualinvoke r177.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": TOTAL");

        $b3 = l92 cmp 0L;

        if $b3 <= 0 goto label33;

        virtualinvoke r177.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r101 = staticinvoke <com.android.server.am.ActivityManagerService: java.lang.String stringifyKBSize(long)>(l92);

        virtualinvoke r177.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r101);

        virtualinvoke r177.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" memtrack)");

     label33:
        virtualinvoke r177.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        r178 = new com.android.internal.util.MemInfoReader;

        specialinvoke r178.<com.android.internal.util.MemInfoReader: void <init>()>();

        virtualinvoke r178.<com.android.internal.util.MemInfoReader: void readMemInfo()>();

        r155 = virtualinvoke r178.<com.android.internal.util.MemInfoReader: long[] getRawInfo()>();

        r179 = new java.lang.StringBuilder;

        specialinvoke r179.<java.lang.StringBuilder: void <init>(int)>(1024);

        staticinvoke <android.os.Debug: void getMemInfo(long[])>(r155);

        virtualinvoke r179.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  MemInfo: ");

        $l4 = r155[5];

        $r18 = staticinvoke <com.android.server.am.ActivityManagerService: java.lang.String stringifyKBSize(long)>($l4);

        virtualinvoke r179.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        virtualinvoke r179.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" slab, ");

        $l5 = r155[4];

        $r21 = staticinvoke <com.android.server.am.ActivityManagerService: java.lang.String stringifyKBSize(long)>($l5);

        virtualinvoke r179.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        virtualinvoke r179.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" shmem, ");

        $l6 = r155[12];

        $r24 = staticinvoke <com.android.server.am.ActivityManagerService: java.lang.String stringifyKBSize(long)>($l6);

        virtualinvoke r179.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        virtualinvoke r179.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" vm alloc, ");

        $l7 = r155[13];

        $r27 = staticinvoke <com.android.server.am.ActivityManagerService: java.lang.String stringifyKBSize(long)>($l7);

        virtualinvoke r179.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        virtualinvoke r179.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" page tables ");

        $l8 = r155[14];

        $r30 = staticinvoke <com.android.server.am.ActivityManagerService: java.lang.String stringifyKBSize(long)>($l8);

        virtualinvoke r179.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        virtualinvoke r179.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" kernel stack\n");

        virtualinvoke r179.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("           ");

        $l9 = r155[2];

        $r34 = staticinvoke <com.android.server.am.ActivityManagerService: java.lang.String stringifyKBSize(long)>($l9);

        virtualinvoke r179.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        virtualinvoke r179.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" buffers, ");

        $l10 = r155[3];

        $r37 = staticinvoke <com.android.server.am.ActivityManagerService: java.lang.String stringifyKBSize(long)>($l10);

        virtualinvoke r179.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        virtualinvoke r179.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cached, ");

        $l11 = r155[11];

        $r40 = staticinvoke <com.android.server.am.ActivityManagerService: java.lang.String stringifyKBSize(long)>($l11);

        virtualinvoke r179.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

        virtualinvoke r179.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mapped, ");

        $l12 = r155[1];

        $r43 = staticinvoke <com.android.server.am.ActivityManagerService: java.lang.String stringifyKBSize(long)>($l12);

        virtualinvoke r179.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);

        virtualinvoke r179.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" free\n");

        $l13 = r155[10];

        $b14 = $l13 cmp 0L;

        if $b14 == 0 goto label34;

        virtualinvoke r179.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ZRAM: ");

        $l43 = r155[10];

        $r91 = staticinvoke <com.android.server.am.ActivityManagerService: java.lang.String stringifyKBSize(long)>($l43);

        virtualinvoke r179.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r91);

        virtualinvoke r179.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" RAM, ");

        $l44 = r155[8];

        $r94 = staticinvoke <com.android.server.am.ActivityManagerService: java.lang.String stringifyKBSize(long)>($l44);

        virtualinvoke r179.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r94);

        virtualinvoke r179.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" swap total, ");

        $l45 = r155[9];

        $r97 = staticinvoke <com.android.server.am.ActivityManagerService: java.lang.String stringifyKBSize(long)>($l45);

        virtualinvoke r179.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r97);

        virtualinvoke r179.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" swap free\n");

     label34:
        r157 = specialinvoke r0.<com.android.server.am.ActivityManagerService: long[] getKsmInfo()>();

        $l15 = r157[1];

        $b16 = $l15 cmp 0L;

        if $b16 != 0 goto label35;

        $l37 = r157[0];

        $b38 = $l37 cmp 0L;

        if $b38 != 0 goto label35;

        $l39 = r157[2];

        $b40 = $l39 cmp 0L;

        if $b40 != 0 goto label35;

        $l41 = r157[3];

        $b42 = $l41 cmp 0L;

        if $b42 == 0 goto label36;

        goto label35;

     label35:
        virtualinvoke r179.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  KSM: ");

        $l106 = r157[1];

        $r158 = staticinvoke <com.android.server.am.ActivityManagerService: java.lang.String stringifyKBSize(long)>($l106);

        virtualinvoke r179.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r158);

        virtualinvoke r179.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" saved from shared ");

        $l107 = r157[0];

        $r159 = staticinvoke <com.android.server.am.ActivityManagerService: java.lang.String stringifyKBSize(long)>($l107);

        virtualinvoke r179.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r159);

        virtualinvoke r179.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n       ");

        $l108 = r157[2];

        $r160 = staticinvoke <com.android.server.am.ActivityManagerService: java.lang.String stringifyKBSize(long)>($l108);

        virtualinvoke r179.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r160);

        virtualinvoke r179.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" unshared; ");

        $l109 = r157[3];

        $r161 = staticinvoke <com.android.server.am.ActivityManagerService: java.lang.String stringifyKBSize(long)>($l109);

        virtualinvoke r179.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r161);

        virtualinvoke r179.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" volatile\n");

     label36:
        virtualinvoke r179.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Free RAM: ");

        $l110 = virtualinvoke r178.<com.android.internal.util.MemInfoReader: long getCachedSizeKb()>();

        $l111 = l96 + $l110;

        $l112 = virtualinvoke r178.<com.android.internal.util.MemInfoReader: long getFreeSizeKb()>();

        $l113 = $l111 + $l112;

        $r162 = staticinvoke <com.android.server.am.ActivityManagerService: java.lang.String stringifyKBSize(long)>($l113);

        virtualinvoke r179.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r162);

        virtualinvoke r179.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        l114 = virtualinvoke r178.<com.android.internal.util.MemInfoReader: long getKernelUsedSizeKb()>();

        l115 = staticinvoke <android.os.Debug: long getIonHeapsSizeKb()>();

        $b116 = l115 cmp 0L;

        if $b116 <= 0 goto label37;

        staticinvoke <android.os.Debug: long getIonMappedSizeKb()>();

        l117 = staticinvoke <android.os.Debug: long getIonPoolsSizeKb()>();

        virtualinvoke r179.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("       ION: ");

        $l36 = l115 + l117;

        $r87 = staticinvoke <com.android.server.am.ActivityManagerService: java.lang.String stringifyKBSize(long)>($l36);

        virtualinvoke r179.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r87);

        virtualinvoke r179.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        l114 = l114 + l115;

        goto label37;

     label37:
        virtualinvoke r179.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Used RAM: ");

        $l17 = l93 - l96;

        $l18 = $l17 + l114;

        $r59 = staticinvoke <com.android.server.am.ActivityManagerService: java.lang.String stringifyKBSize(long)>($l18);

        virtualinvoke r179.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r59);

        virtualinvoke r179.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        virtualinvoke r179.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Lost RAM: ");

        $l19 = virtualinvoke r178.<com.android.internal.util.MemInfoReader: long getTotalSizeKb()>();

        $l20 = l93 - l91;

        $l21 = $l19 - $l20;

        $l22 = virtualinvoke r178.<com.android.internal.util.MemInfoReader: long getFreeSizeKb()>();

        $l23 = $l21 - $l22;

        $l24 = virtualinvoke r178.<com.android.internal.util.MemInfoReader: long getCachedSizeKb()>();

        $l25 = $l23 - $l24;

        $l26 = $l25 - l114;

        $l27 = virtualinvoke r178.<com.android.internal.util.MemInfoReader: long getZramTotalSizeKb()>();

        $l28 = $l26 - $l27;

        $r63 = staticinvoke <com.android.server.am.ActivityManagerService: java.lang.String stringifyKBSize(long)>($l28);

        virtualinvoke r179.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r63);

        virtualinvoke r179.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", "Low on memory:");

        $r66 = virtualinvoke r176.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", $r66);

        $r67 = virtualinvoke r177.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", $r67);

        $r68 = virtualinvoke r179.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", $r68);

        r180 = new java.lang.StringBuilder;

        specialinvoke r180.<java.lang.StringBuilder: void <init>(int)>(1024);

        virtualinvoke r180.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Low on memory:");

        virtualinvoke r180.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>(r174);

        virtualinvoke r180.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        virtualinvoke r180.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>(r175);

        virtualinvoke r180.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>(r177);

        virtualinvoke r180.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        virtualinvoke r180.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>(r179);

        virtualinvoke r180.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        r181 = new java.io.StringWriter;

        specialinvoke r181.<java.io.StringWriter: void <init>()>();

        entermonitor r0;

     label38:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        r182 = new com.android.internal.util.FastPrintWriter;

        specialinvoke r182.<com.android.internal.util.FastPrintWriter: void <init>(java.io.Writer,boolean,int)>(r181, 0, 256);

        r166 = newarray (java.lang.String)[0];

     label39:
        virtualinvoke r182.<java.io.PrintWriter: void println()>();

     label40:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void dumpProcessesLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,java.lang.String,int)>(null, r182, r166, 0, 0, null, -1);

        virtualinvoke r182.<java.io.PrintWriter: void println()>();

        $r79 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveServices mServices>;

        $r80 = virtualinvoke $r79.<com.android.server.am.ActiveServices: com.android.server.am.ActiveServices$ServiceDumper newServiceDumperLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,java.lang.String)>(null, r182, r166, 0, 0, null);

        virtualinvoke $r80.<com.android.server.am.ActiveServices$ServiceDumper: void dumpLocked()>();

        virtualinvoke r182.<java.io.PrintWriter: void println()>();

        $r81 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerInternal mAtmInternal>;

        virtualinvoke $r81.<com.android.server.wm.ActivityTaskManagerInternal: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,boolean,java.lang.String)>("activities", null, r182, r166, 0, 0, 0, null);

        virtualinvoke r182.<java.io.PrintWriter: void flush()>();

        exitmonitor r0;

     label41:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        $r82 = virtualinvoke r181.<java.io.StringWriter: java.lang.String toString()>();

        virtualinvoke r180.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r82);

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int)>(81);

        $r84 = virtualinvoke r173.<java.lang.StringBuilder: java.lang.String toString()>();

        $r85 = virtualinvoke r180.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void addErrorToDropBox(java.lang.String,com.android.server.am.ProcessRecord,java.lang.String,java.lang.String,java.lang.String,com.android.server.am.ProcessRecord,java.lang.String,java.lang.String,java.io.File,android.app.ApplicationErrorReport$CrashInfo)>("lowmem", null, "system_server", null, null, null, $r84, $r85, null, null);

        entermonitor r0;

     label42:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        l118 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l33 = r0.<com.android.server.am.ActivityManagerService: long mLastMemUsageReportTime>;

        $b34 = $l33 cmp l118;

        if $b34 >= 0 goto label43;

        r0.<com.android.server.am.ActivityManagerService: long mLastMemUsageReportTime> = l118;

     label43:
        exitmonitor r0;

     label44:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label45:
        $r135 := @caughtexception;

     label46:
        exitmonitor r0;

     label47:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r135;

     label48:
        $r132 := @caughtexception;

        r168 = $r132;

        goto label51;

     label49:
        $r129 := @caughtexception;

        r168 = $r129;

        goto label51;

     label50:
        $r133 := @caughtexception;

        r168 = $r133;

     label51:
        exitmonitor r0;

     label52:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw r168;

     label53:
        $r130 := @caughtexception;

        r168 = $r130;

        goto label51;

     label54:
        $r131 := @caughtexception;

        r169 = $r131;

     label55:
        exitmonitor r141;

     label56:
        throw r169;

     label57:
        $r134 := @caughtexception;

        r169 = $r134;

        goto label55;

        catch java.lang.Throwable from label03 to label04 with label54;
        catch java.lang.Throwable from label38 to label39 with label50;
        catch java.lang.Throwable from label39 to label40 with label49;
        catch java.lang.Throwable from label40 to label41 with label48;
        catch java.lang.Throwable from label42 to label43 with label45;
        catch java.lang.Throwable from label43 to label44 with label45;
        catch java.lang.Throwable from label46 to label47 with label45;
        catch java.lang.Throwable from label51 to label52 with label53;
        catch java.lang.Throwable from label55 to label56 with label57;
    }

    void reportOomAdjMessageLocked(java.lang.String, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1, r2;
        com.android.server.am.ActivityManagerService$OomAdjObserver $r3;
        android.os.Handler $r4;
        android.os.Message $r5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>(r1, r2);

        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$OomAdjObserver mCurOomAdjObserver>;

        if $r3 == null goto label1;

        $r4 = r0.<com.android.server.am.ActivityManagerService: android.os.Handler mUiHandler>;

        $r5 = virtualinvoke $r4.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(70, r2);

        virtualinvoke $r5.<android.os.Message: void sendToTarget()>();

     label1:
        return;
    }

    void reportUidInfoMessageLocked(java.lang.String, java.lang.String, int)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1, r2;
        int i0, $i2;
        com.android.server.am.ActivityManagerService$OomAdjObserver $r3;
        android.os.Handler $r4;
        android.os.Message $r5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", r2);

        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$OomAdjObserver mCurOomAdjObserver>;

        if $r3 == null goto label1;

        $i2 = r0.<com.android.server.am.ActivityManagerService: int mCurOomAdjUid>;

        if i0 != $i2 goto label1;

        $r4 = r0.<com.android.server.am.ActivityManagerService: android.os.Handler mUiHandler>;

        $r5 = virtualinvoke $r4.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(70, r2);

        virtualinvoke $r5.<android.os.Message: void sendToTarget()>();

     label1:
        return;
    }

    public void requestBugReport(int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void requestBugReportWithDescription(java.lang.String,java.lang.String,int)>(null, null, i0);

        return;
    }

    public void requestBugReportWithDescription(java.lang.String, java.lang.String, int)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1, $r21, $r27, r29, r30, $r33;
        int i0, $i3, $i5, $i6;
        long l1;
        android.content.Intent $r6;
        android.content.Context $r12;
        java.lang.IllegalArgumentException $r15, $r22, $r26;
        boolean $z0, $z1;
        java.lang.StringBuilder $r16, $r23, $r32;
        java.lang.Throwable $r28;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r29 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        if i0 == 0 goto label06;

        if i0 == 1 goto label05;

        if i0 == 2 goto label04;

        if i0 == 3 goto label03;

        if i0 == 4 goto label02;

        if i0 != 5 goto label01;

        r30 = "bugreportwifi";

        goto label07;

     label01:
        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Provided bugreport type is not correct, value: ");

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r26 = new java.lang.IllegalArgumentException;

        $r27 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r26.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r27);

        throw $r26;

     label02:
        r30 = "bugreporttelephony";

        goto label07;

     label03:
        r30 = "bugreportwear";

        goto label07;

     label04:
        r30 = "bugreportremote";

        goto label07;

     label05:
        r30 = "bugreportplus";

        goto label07;

     label06:
        r30 = "bugreportfull";

     label07:
        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r30);

        virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requested by UID ");

        $i6 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", $r33);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.DUMP", "requestBugReport");

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r29);

        if $z1 != 0 goto label11;

        $i3 = virtualinvoke r29.<java.lang.String: int length()>();

        if $i3 > 50 goto label10;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 != 0 goto label09;

        $i5 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i5 > 150 goto label08;

        goto label09;

     label08:
        $r22 = new java.lang.IllegalArgumentException;

        specialinvoke $r22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("shareDescription should be less than 150 characters");

        throw $r22;

     label09:
        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bugreport notification title ");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r29);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" description ");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r21 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("ActivityManager", $r21);

        goto label11;

     label10:
        $r15 = new java.lang.IllegalArgumentException;

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("shareTitle should be less than 50 characters");

        throw $r15;

     label11:
        $r6 = new android.content.Intent;

        specialinvoke $r6.<android.content.Intent: void <init>()>();

        virtualinvoke $r6.<android.content.Intent: android.content.Intent setAction(java.lang.String)>("com.android.internal.intent.action.BUGREPORT_REQUESTED");

        virtualinvoke $r6.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>("com.android.shell");

        virtualinvoke $r6.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.intent.extra.BUGREPORT_TYPE", i0);

        virtualinvoke $r6.<android.content.Intent: android.content.Intent addFlags(int)>(268435456);

        virtualinvoke $r6.<android.content.Intent: android.content.Intent addFlags(int)>(16777216);

        if r29 == null goto label12;

        virtualinvoke $r6.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("android.intent.extra.TITLE", r29);

     label12:
        if r1 == null goto label13;

        virtualinvoke $r6.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("android.intent.extra.DESCRIPTION", r1);

     label13:
        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label14:
        $r12 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        virtualinvoke $r12.<android.content.Context: void sendBroadcast(android.content.Intent)>($r6);

     label15:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return;

     label16:
        $r28 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r28;

        catch java.lang.Throwable from label14 to label15 with label16;
    }

    public void requestFullBugReport()
    {
        com.android.server.am.ActivityManagerService r0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void requestBugReportWithDescription(java.lang.String,java.lang.String,int)>(null, null, 0);

        return;
    }

    public void requestInteractiveBugReport()
    {
        com.android.server.am.ActivityManagerService r0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void requestBugReportWithDescription(java.lang.String,java.lang.String,int)>(null, null, 1);

        return;
    }

    public void requestInteractiveBugReportWithDescription(java.lang.String, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1, r2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void requestBugReportWithDescription(java.lang.String,java.lang.String,int)>(r1, r2, 1);

        return;
    }

    void requestPssAllProcsLocked(long, boolean, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        long l0, l1, $l7, $l8, $l9, $l11, $l12, $l14, l16;
        boolean z0, z1, $z2, $z4, $z5;
        com.android.server.am.ProcessRecord r1, $r18;
        java.util.ArrayList $r2, $r4, $r5, $r10, $r15, $r16;
        int $i2, $i3, $i4, $i5, $i6, i17, i18, $i19;
        com.android.server.am.ProcessList $r3, $r6, $r9;
        android.os.Handler $r7, $r8;
        java.lang.Object $r11, $r17;
        android.app.IApplicationThread $r12;
        com.android.server.wm.ActivityTaskManagerInternal $r13;
        com.android.server.am.ProcessList$ProcStateMemTracker $r14, $r19;
        byte $b10, $b13, $b15, b20;
        com.android.server.am.ActivityManagerConstants $r20, $r21;

        r0 := @this: com.android.server.am.ActivityManagerService;

        l0 := @parameter0: long;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        if z0 != 0 goto label03;

        l1 = r0.<com.android.server.am.ActivityManagerService: long mLastFullPssTime>;

        if z1 == 0 goto label01;

        $r21 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerConstants mConstants>;

        l16 = $r21.<com.android.server.am.ActivityManagerConstants: long FULL_PSS_LOWERED_INTERVAL>;

        goto label02;

     label01:
        $r20 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerConstants mConstants>;

        l16 = $r20.<com.android.server.am.ActivityManagerConstants: long FULL_PSS_MIN_INTERVAL>;

     label02:
        $l14 = l1 + l16;

        $b15 = l0 cmp $l14;

        if $b15 >= 0 goto label03;

        return;

     label03:
        r0.<com.android.server.am.ActivityManagerService: long mLastFullPssTime> = l0;

        r0.<com.android.server.am.ActivityManagerService: boolean mFullPssPending> = 1;

        $r2 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingPssProcesses>;

        $i2 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i17 = $i2 - 1;

     label04:
        if i17 < 0 goto label05;

        $r16 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingPssProcesses>;

        $r17 = virtualinvoke $r16.<java.util.ArrayList: java.lang.Object get(int)>(i17);

        $r18 = (com.android.server.am.ProcessRecord) $r17;

        $r19 = $r18.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessList$ProcStateMemTracker procStateMemTracker>;

        staticinvoke <com.android.server.am.ProcessList: void abortNextPssTime(com.android.server.am.ProcessList$ProcStateMemTracker)>($r19);

        i17 = i17 + -1;

        goto label04;

     label05:
        $r4 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingPssProcesses>;

        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $i3 = virtualinvoke $r3.<com.android.server.am.ProcessList: int getLruSizeLocked()>();

        virtualinvoke $r4.<java.util.ArrayList: void ensureCapacity(int)>($i3);

        $r5 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingPssProcesses>;

        virtualinvoke $r5.<java.util.ArrayList: void clear()>();

        $r6 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $i4 = virtualinvoke $r6.<com.android.server.am.ProcessList: int getLruSizeLocked()>();

        i18 = $i4 - 1;

     label06:
        if i18 < 0 goto label13;

        $r9 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r10 = $r9.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        $r11 = virtualinvoke $r10.<java.util.ArrayList: java.lang.Object get(int)>(i18);

        r1 = (com.android.server.am.ProcessRecord) $r11;

        $r12 = r1.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r12 == null goto label12;

        $i5 = virtualinvoke r1.<com.android.server.am.ProcessRecord: int getCurProcState()>();

        if $i5 != 20 goto label07;

        goto label12;

     label07:
        if z1 != 0 goto label09;

        if z0 == 0 goto label08;

        $l11 = r1.<com.android.server.am.ProcessRecord: long lastStateTime>;

        $l12 = $l11 + 1000L;

        $b13 = l0 cmp $l12;

        if $b13 > 0 goto label09;

     label08:
        $l8 = r1.<com.android.server.am.ProcessRecord: long lastStateTime>;

        $l9 = $l8 + 1200000L;

        $b10 = l0 cmp $l9;

        if $b10 <= 0 goto label12;

     label09:
        $i19 = r1.<com.android.server.am.ProcessRecord: int setProcState>;

        r1.<com.android.server.am.ProcessRecord: int pssProcState> = $i19;

        if z0 == 0 goto label10;

        b20 = 2;

        goto label11;

     label10:
        b20 = 1;

     label11:
        r1.<com.android.server.am.ProcessRecord: int pssStatType> = b20;

        $i6 = virtualinvoke r1.<com.android.server.am.ProcessRecord: int getCurProcState()>();

        $r14 = r1.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessList$ProcStateMemTracker procStateMemTracker>;

        $z4 = r0.<com.android.server.am.ActivityManagerService: boolean mTestPssMode>;

        $r13 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerInternal mAtmInternal>;

        $z5 = virtualinvoke $r13.<com.android.server.wm.ActivityTaskManagerInternal: boolean isSleeping()>();

        $l7 = staticinvoke <com.android.server.am.ProcessList: long computeNextPssTime(int,com.android.server.am.ProcessList$ProcStateMemTracker,boolean,boolean,long)>($i6, $r14, $z4, $z5, l0);

        r1.<com.android.server.am.ProcessRecord: long nextPssTime> = $l7;

        $r15 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingPssProcesses>;

        virtualinvoke $r15.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

     label12:
        i18 = i18 + -1;

        goto label06;

     label13:
        $r7 = r0.<com.android.server.am.ActivityManagerService: android.os.Handler mBgHandler>;

        $z2 = virtualinvoke $r7.<android.os.Handler: boolean hasMessages(int)>(1);

        if $z2 != 0 goto label14;

        $r8 = r0.<com.android.server.am.ActivityManagerService: android.os.Handler mBgHandler>;

        virtualinvoke $r8.<android.os.Handler: boolean sendEmptyMessage(int)>(1);

     label14:
        return;
    }

    boolean requestPssLocked(com.android.server.am.ProcessRecord, int)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1;
        int i0, $i2, $i4;
        long l1, l5;
        java.util.ArrayList $r2, $r3, $r6;
        boolean $z0;
        byte $b3;
        java.util.concurrent.atomic.AtomicInteger $r4;
        android.os.Handler $r5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingPssProcesses>;

        $z0 = virtualinvoke $r2.<java.util.ArrayList: boolean contains(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r3 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingPssProcesses>;

        $i2 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if $i2 != 0 goto label3;

        l1 = r0.<com.android.server.am.ActivityManagerService: long mPssDeferralTime>;

        l5 = 0L;

        $b3 = l1 cmp 0L;

        if $b3 <= 0 goto label2;

        $r4 = r0.<com.android.server.am.ActivityManagerService: java.util.concurrent.atomic.AtomicInteger mActivityStartingNesting>;

        $i4 = virtualinvoke $r4.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        if $i4 <= 0 goto label2;

        l5 = r0.<com.android.server.am.ActivityManagerService: long mPssDeferralTime>;

        goto label2;

     label2:
        $r5 = r0.<com.android.server.am.ActivityManagerService: android.os.Handler mBgHandler>;

        virtualinvoke $r5.<android.os.Handler: boolean sendEmptyMessageDelayed(int,long)>(1, l5);

     label3:
        r1.<com.android.server.am.ProcessRecord: int pssProcState> = i0;

        r1.<com.android.server.am.ProcessRecord: int pssStatType> = 0;

        $r6 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingPssProcesses>;

        virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        return 1;
    }

    public void requestRemoteBugReport()
    {
        com.android.server.am.ActivityManagerService r0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void requestBugReportWithDescription(java.lang.String,java.lang.String,int)>(null, null, 2);

        return;
    }

    public void requestSystemServerHeapDump()
    {
        com.android.server.am.ActivityManagerService r0;
        boolean $z0;
        int $i0, $i1, $i2;
        java.lang.SecurityException $r1;
        com.android.server.am.ActivityManagerService$PidMap $r2, r9;
        java.lang.StringBuilder $r3;
        java.lang.String $r6;
        java.lang.Throwable $r7, $r8;
        com.android.server.am.ProcessRecord r10;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $z0 = <android.os.Build: boolean IS_DEBUGGABLE>;

        if $z0 != 0 goto label01;

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("ActivityManager", "requestSystemServerHeapDump called on a user build");

        return;

     label01:
        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if $i0 != 1000 goto label13;

        r9 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        entermonitor r9;

     label02:
        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        $i1 = staticinvoke <android.os.Process: int myPid()>();

        r10 = virtualinvoke $r2.<com.android.server.am.ActivityManagerService$PidMap: com.android.server.am.ProcessRecord get(int)>($i1);

        exitmonitor r9;

     label03:
        if r10 != null goto label04;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("system process not in mPidsSelfLocked: ");

        $i2 = staticinvoke <android.os.Process: int myPid()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r6);

        return;

     label04:
        entermonitor r0;

     label05:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void startHeapDumpLocked(com.android.server.am.ProcessRecord,boolean)>(r10, 1);

        exitmonitor r0;

     label06:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label07:
        $r8 := @caughtexception;

     label08:
        exitmonitor r0;

     label09:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r8;

     label10:
        $r7 := @caughtexception;

     label11:
        exitmonitor r9;

     label12:
        throw $r7;

     label13:
        $r1 = new java.lang.SecurityException;

        specialinvoke $r1.<java.lang.SecurityException: void <init>(java.lang.String)>("Only the system process is allowed to request a system heap dump");

        throw $r1;

        catch java.lang.Throwable from label02 to label03 with label10;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label08 to label09 with label07;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public void requestTelephonyBugReport(java.lang.String, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1, r2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void requestBugReportWithDescription(java.lang.String,java.lang.String,int)>(r1, r2, 4);

        return;
    }

    public void requestWifiBugReport(java.lang.String, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1, r2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void requestBugReportWithDescription(java.lang.String,java.lang.String,int)>(r1, r2, 5);

        return;
    }

    void requireAllowedAssociationsLocked(java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1;
        android.util.ArrayMap $r2, $r6;
        java.lang.Object $r3;
        com.android.server.am.ActivityManagerService$PackageAssociationInfo $r4;
        android.util.ArraySet $r5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void ensureAllowedAssociations()>();

        $r2 = r0.<com.android.server.am.ActivityManagerService: android.util.ArrayMap mAllowedAssociations>;

        $r3 = virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        if $r3 != null goto label1;

        $r6 = r0.<com.android.server.am.ActivityManagerService: android.util.ArrayMap mAllowedAssociations>;

        $r4 = new com.android.server.am.ActivityManagerService$PackageAssociationInfo;

        $r5 = new android.util.ArraySet;

        specialinvoke $r5.<android.util.ArraySet: void <init>()>();

        specialinvoke $r4.<com.android.server.am.ActivityManagerService$PackageAssociationInfo: void <init>(com.android.server.am.ActivityManagerService,java.lang.String,android.util.ArraySet,boolean)>(r0, r1, $r5, 0);

        virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r4);

     label1:
        return;
    }

    public void resizeTask(int, android.graphics.Rect, int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1;
        android.graphics.Rect r1;
        com.android.server.wm.ActivityTaskManagerService $r2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: android.graphics.Rect;

        i1 := @parameter2: int;

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerService mActivityTaskManager>;

        virtualinvoke $r2.<com.android.server.wm.ActivityTaskManagerService: boolean resizeTask(int,android.graphics.Rect,int)>(i0, r1, i1);

        return;
    }

    public void restart()
    {
        com.android.server.am.ActivityManagerService r0;
        int $i0;
        java.lang.SecurityException $r3;
        com.android.server.am.ActivityManagerService$16 $r4;
        android.content.Intent $r5;
        android.content.Context $r8;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $i0 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.SET_ACTIVITY_WATCHER");

        if $i0 != 0 goto label1;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ActivityManager", "Sending shutdown broadcast...");

        $r4 = new com.android.server.am.ActivityManagerService$16;

        specialinvoke $r4.<com.android.server.am.ActivityManagerService$16: void <init>(com.android.server.am.ActivityManagerService)>(r0);

        $r5 = new android.content.Intent;

        specialinvoke $r5.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.ACTION_SHUTDOWN");

        virtualinvoke $r5.<android.content.Intent: android.content.Intent addFlags(int)>(268435456);

        virtualinvoke $r5.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("android.intent.extra.SHUTDOWN_USERSPACE_ONLY", 1);

        $r8 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        virtualinvoke $r4.<android.content.BroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>($r8, $r5);

        return;

     label1:
        $r3 = new java.lang.SecurityException;

        specialinvoke $r3.<java.lang.SecurityException: void <init>(java.lang.String)>("Requires permission android.permission.SET_ACTIVITY_WATCHER");

        throw $r3;
    }

    public int restartUserInBackground(int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, $i1;
        com.android.server.am.UserController $r1;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.UserController mUserController>;

        $i1 = virtualinvoke $r1.<com.android.server.am.UserController: int restartUser(int,boolean)>(i0, 0);

        return $i1;
    }

    public void resumeAppSwitches()
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.wm.ActivityTaskManagerService $r1;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerService mActivityTaskManager>;

        virtualinvoke $r1.<com.android.server.wm.ActivityTaskManagerService: void resumeAppSwitches()>();

        return;
    }

    public void revokeUriPermission(android.app.IApplicationThread, java.lang.String, android.net.Uri, int, int)
    {
        com.android.server.am.ActivityManagerService r0;
        android.net.Uri r1;
        int i0, i1, i2;
        java.lang.String $r6, $r7, $r10, $r12, r15;
        boolean $z0;
        android.content.pm.ProviderInfo $r8;
        java.lang.Throwable $r13;
        android.app.IApplicationThread r14;
        com.android.server.am.ProcessRecord r16;
        java.lang.StringBuilder r17, r21;
        com.android.server.uri.UriGrantsManagerInternal r18;
        com.android.server.uri.GrantUri r19;
        java.lang.SecurityException r20;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r14 := @parameter0: android.app.IApplicationThread;

        r15 := @parameter1: java.lang.String;

        r1 := @parameter2: android.net.Uri;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("revokeUriPermission");

        entermonitor r0;

     label01:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        r16 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord getRecordForAppLocked(android.app.IApplicationThread)>(r14);

     label02:
        if r16 == null goto label11;

        if r1 != null goto label05;

     label03:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", "revokeUriPermission: null uri");

        exitmonitor r0;

     label04:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label05:
        $z0 = staticinvoke <android.content.Intent: boolean isAccessUriMode(int)>(i0);

        if $z0 != 0 goto label07;

        exitmonitor r0;

     label06:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label07:
        $r7 = virtualinvoke r1.<android.net.Uri: java.lang.String getAuthority()>();

        $r8 = specialinvoke r0.<com.android.server.am.ActivityManagerService: android.content.pm.ProviderInfo getProviderInfoLocked(java.lang.String,int,int)>($r7, i1, 786432);

        if $r8 != null goto label09;

        r17 = new java.lang.StringBuilder;

        specialinvoke r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No content provider found for permission revoke: ");

        $r10 = virtualinvoke r1.<android.net.Uri: java.lang.String toSafeString()>();

        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r12);

        exitmonitor r0;

     label08:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label09:
        r18 = r0.<com.android.server.am.ActivityManagerService: com.android.server.uri.UriGrantsManagerInternal mUgmInternal>;

        i2 = r16.<com.android.server.am.ProcessRecord: int uid>;

        r19 = new com.android.server.uri.GrantUri;

        specialinvoke r19.<com.android.server.uri.GrantUri: void <init>(int,android.net.Uri,int)>(i1, r1, i0);

        interfaceinvoke r18.<com.android.server.uri.UriGrantsManagerInternal: void revokeUriPermission(java.lang.String,int,com.android.server.uri.GrantUri,int)>(r15, i2, r19, i0);

        exitmonitor r0;

     label10:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label11:
        r20 = new java.lang.SecurityException;

        r21 = new java.lang.StringBuilder;

        specialinvoke r21.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to find app for caller ");

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r14);

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" when revoking permission to uri ");

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r6 = virtualinvoke r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r20.<java.lang.SecurityException: void <init>(java.lang.String)>($r6);

        throw r20;

     label12:
        $r13 := @caughtexception;

     label13:
        exitmonitor r0;

     label14:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r13;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label07 to label08 with label12;
        catch java.lang.Throwable from label09 to label10 with label12;
        catch java.lang.Throwable from label11 to label12 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    final void rotateBroadcastStatsIfNeededLocked()
    {
        com.android.server.am.ActivityManagerService r0;
        long l0, $l1, $l2, $l3, $l4;
        com.android.server.am.BroadcastStats $r1, $r2, r3, r4;
        byte $b5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastStats mCurBroadcastStats>;

        if r3 == null goto label1;

        $l3 = r3.<com.android.server.am.BroadcastStats: long mStartRealtime>;

        $l4 = $l3 + 86400000L;

        $b5 = $l4 cmp l0;

        if $b5 >= 0 goto label3;

     label1:
        r4 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastStats mCurBroadcastStats>;

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastStats mLastBroadcastStats> = r4;

        if r4 == null goto label2;

        $l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        r4.<com.android.server.am.BroadcastStats: long mEndRealtime> = $l1;

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastStats mLastBroadcastStats>;

        $l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r2.<com.android.server.am.BroadcastStats: long mEndUptime> = $l2;

     label2:
        $r1 = new com.android.server.am.BroadcastStats;

        specialinvoke $r1.<com.android.server.am.BroadcastStats: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastStats mCurBroadcastStats> = $r1;

     label3:
        return;
    }

    final void runInBackgroundDisabled(int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, $i1;
        com.android.server.am.ProcessList $r1;
        boolean $z0;
        java.lang.Throwable $r2;
        com.android.server.am.UidRecord r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        entermonitor r0;

     label01:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        r3 = virtualinvoke $r1.<com.android.server.am.ProcessList: com.android.server.am.UidRecord getUidRecordLocked(int)>(i0);

     label02:
        if r3 == null goto label05;

     label03:
        $z0 = r3.<com.android.server.am.UidRecord: boolean idle>;

        if $z0 == 0 goto label06;

        $i1 = r3.<com.android.server.am.UidRecord: int uid>;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void doStopUidLocked(int,com.android.server.am.UidRecord)>($i1, r3);

     label04:
        goto label06;

     label05:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void doStopUidLocked(int,com.android.server.am.UidRecord)>(i0, null);

     label06:
        exitmonitor r0;

     label07:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label08:
        $r2 := @caughtexception;

     label09:
        exitmonitor r0;

     label10:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r2;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    final void scheduleAppGcLocked(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1;
        long l0, $l1, $l2, $l3;
        com.android.server.am.ActivityManagerConstants $r2;
        byte $b4;
        java.util.ArrayList $r3;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l2 = r1.<com.android.server.am.ProcessRecord: long lastRequestedGc>;

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerConstants mConstants>;

        $l1 = $r2.<com.android.server.am.ActivityManagerConstants: long GC_MIN_INTERVAL>;

        $l3 = $l2 + $l1;

        $b4 = $l3 cmp l0;

        if $b4 <= 0 goto label1;

        return;

     label1:
        $r3 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesToGc>;

        $z0 = virtualinvoke $r3.<java.util.ArrayList: boolean contains(java.lang.Object)>(r1);

        if $z0 != 0 goto label2;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void addProcessToGcListLocked(com.android.server.am.ProcessRecord)>(r1);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void scheduleAppGcsLocked()>();

     label2:
        return;
    }

    final void scheduleAppGcsLocked()
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1;
        android.os.Message r2;
        long l0, l1, $l3, $l4, $l5, $l6, $l8, l9;
        com.android.server.am.ActivityManagerService$MainHandler $r3, $r7, $r10;
        java.util.ArrayList $r4, $r5;
        int $i2;
        java.lang.Object $r6;
        com.android.server.am.ActivityManagerConstants $r8, $r9, $r11;
        byte $b7;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        virtualinvoke $r3.<com.android.server.am.ActivityManagerService$MainHandler: void removeMessages(int)>(5);

        $r4 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesToGc>;

        $i2 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        if $i2 <= 0 goto label2;

        $r5 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesToGc>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(0);

        r1 = (com.android.server.am.ProcessRecord) $r6;

        $r7 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        r2 = virtualinvoke $r7.<com.android.server.am.ActivityManagerService$MainHandler: android.os.Message obtainMessage(int)>(5);

        $l4 = r1.<com.android.server.am.ProcessRecord: long lastRequestedGc>;

        $r8 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerConstants mConstants>;

        $l3 = $r8.<com.android.server.am.ActivityManagerConstants: long GC_MIN_INTERVAL>;

        l0 = $l4 + $l3;

        l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        l9 = l0;

        $r9 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerConstants mConstants>;

        $l5 = $r9.<com.android.server.am.ActivityManagerConstants: long GC_TIMEOUT>;

        $l6 = $l5 + l1;

        $b7 = l0 cmp $l6;

        if $b7 >= 0 goto label1;

        $r11 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerConstants mConstants>;

        $l8 = $r11.<com.android.server.am.ActivityManagerConstants: long GC_TIMEOUT>;

        l9 = l1 + $l8;

     label1:
        $r10 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        virtualinvoke $r10.<com.android.server.am.ActivityManagerService$MainHandler: boolean sendMessageAtTime(android.os.Message,long)>(r2, l9);

     label2:
        return;
    }

    public void scheduleApplicationInfoChanged(java.util.List, int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0;
        long l1;
        java.lang.Throwable $r1, $r2;
        java.util.List r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r3 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.CHANGE_CONFIGURATION", "scheduleApplicationInfoChanged()");

        entermonitor r0;

     label01:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label02:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void updateApplicationInfoLocked(java.util.List,int)>(r3, i0);

     label03:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

     label04:
        exitmonitor r0;

     label05:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label06:
        $r1 := @caughtexception;

     label07:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

     label08:
        throw $r1;

     label09:
        $r2 := @caughtexception;

     label10:
        exitmonitor r0;

     label11:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r2;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label02 to label03 with label06;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label08 to label09 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public void schedulePendingSystemServerWtfs(java.util.LinkedList)
    {
        com.android.server.am.ActivityManagerService r0;
        java.util.LinkedList r1;
        com.android.server.am._$$Lambda$ActivityManagerService$pX_Vr8s3Kipu36jOoNke4LqODY0 $r2;
        com.android.server.am.ActivityManagerService$MainHandler $r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.util.LinkedList;

        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        $r2 = new com.android.server.am._$$Lambda$ActivityManagerService$pX_Vr8s3Kipu36jOoNke4LqODY0;

        specialinvoke $r2.<com.android.server.am._$$Lambda$ActivityManagerService$pX_Vr8s3Kipu36jOoNke4LqODY0: void <init>(com.android.server.am.ActivityManagerService,java.util.LinkedList)>(r0, r1);

        virtualinvoke $r3.<com.android.server.am.ActivityManagerService$MainHandler: boolean post(java.lang.Runnable)>($r2);

        return;
    }

    public void sendIdleJobTrigger()
    {
        com.android.server.am.ActivityManagerService r0;
        long l0;
        int $i1;
        java.lang.SecurityException $r1;
        android.content.Intent $r2, $r3, r5;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $i1 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.SET_ACTIVITY_WATCHER");

        if $i1 != 0 goto label4;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        r5 = new android.content.Intent;

        specialinvoke r5.<android.content.Intent: void <init>(java.lang.String)>("com.android.server.ACTION_TRIGGER_IDLE");

        $r2 = virtualinvoke r5.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>("android");

        $r3 = virtualinvoke $r2.<android.content.Intent: android.content.Intent addFlags(int)>(1073741824);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: int broadcastIntent(android.app.IApplicationThread,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String[],int,android.os.Bundle,boolean,boolean,int)>(null, $r3, null, null, 0, null, null, null, -1, null, 0, 0, -1);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label3:
        $r4 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r4;

     label4:
        $r1 = new java.lang.SecurityException;

        specialinvoke $r1.<java.lang.SecurityException: void <init>(java.lang.String)>("Requires permission android.permission.SET_ACTIVITY_WATCHER");

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public int sendIntentSender(android.content.IIntentSender, android.os.IBinder, int, android.content.Intent, java.lang.String, android.content.IIntentReceiver, java.lang.String, android.os.Bundle)
    {
        com.android.server.am.ActivityManagerService r0;
        android.os.IBinder r1;
        int i0, $i1, $i3;
        java.lang.String r2, r4;
        android.content.IIntentReceiver r3;
        android.os.Bundle r5;
        boolean $z0;
        android.content.Intent $r6, r11;
        com.android.server.am.PendingIntentRecord $r7;
        android.os.RemoteException $r8, $r9;
        android.content.IIntentSender r10;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r10 := @parameter0: android.content.IIntentSender;

        r1 := @parameter1: android.os.IBinder;

        i0 := @parameter2: int;

        r11 := @parameter3: android.content.Intent;

        r2 := @parameter4: java.lang.String;

        r3 := @parameter5: android.content.IIntentReceiver;

        r4 := @parameter6: java.lang.String;

        r5 := @parameter7: android.os.Bundle;

        $z0 = r10 instanceof com.android.server.am.PendingIntentRecord;

        if $z0 == 0 goto label1;

        $r7 = (com.android.server.am.PendingIntentRecord) r10;

        $i3 = virtualinvoke $r7.<com.android.server.am.PendingIntentRecord: int sendWithResult(int,android.content.Intent,java.lang.String,android.os.IBinder,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>(i0, r11, r2, r1, r3, r4, r5);

        return $i3;

     label1:
        if r11 != null goto label2;

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("ActivityManager", "Can\'t use null intent with direct IIntentSender call");

        $r6 = new android.content.Intent;

        specialinvoke $r6.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.MAIN");

        r11 = $r6;

        goto label2;

     label2:
        interfaceinvoke r10.<android.content.IIntentSender: void send(int,android.content.Intent,java.lang.String,android.os.IBinder,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>(i0, r11, r2, r1, null, r4, r5);

     label3:
        goto label5;

     label4:
        $r9 := @caughtexception;

     label5:
        if r3 == null goto label9;

     label6:
        $i1 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        interfaceinvoke r3.<android.content.IIntentReceiver: void performReceive(android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int)>(r11, 0, null, null, 0, 0, $i1);

     label7:
        goto label9;

     label8:
        $r8 := @caughtexception;

     label9:
        return 0;

        catch android.os.RemoteException from label2 to label3 with label4;
        catch android.os.RemoteException from label6 to label7 with label8;
    }

    boolean sendPendingBroadcastsLocked(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1;
        com.android.server.am.BroadcastQueue[] r2;
        int i0, i1;
        com.android.server.am.BroadcastQueue $r3;
        boolean $z0, z1;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        z1 = 0;

        r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastQueue[] mBroadcastQueues>;

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r3 = r2[i1];

        $z0 = virtualinvoke $r3.<com.android.server.am.BroadcastQueue: boolean sendPendingBroadcastsLocked(com.android.server.am.ProcessRecord)>(r1);

        z1 = z1 | $z0;

        i1 = i1 + 1;

        goto label1;

     label2:
        return z1;
    }

    public void serviceDoneExecuting(android.os.IBinder, int, int, int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, i2;
        java.lang.StringBuilder r1;
        boolean $z0;
        java.lang.String $r4;
        com.android.server.am.ServiceRecord $r5;
        com.android.server.am.ActiveServices $r6;
        java.lang.Throwable $r7;
        android.os.IBinder r8;
        java.lang.IllegalArgumentException r9;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r8 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        entermonitor r0;

     label1:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $z0 = r8 instanceof com.android.server.am.ServiceRecord;

        if $z0 == 0 goto label3;

        $r6 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveServices mServices>;

        $r5 = (com.android.server.am.ServiceRecord) r8;

        virtualinvoke $r6.<com.android.server.am.ActiveServices: void serviceDoneExecutingLocked(com.android.server.am.ServiceRecord,int,int,int)>($r5, i0, i1, i2);

        exitmonitor r0;

     label2:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label3:
        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("serviceDoneExecuting: Invalid service token=");

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r8);

        $r4 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ActivityManager", $r4);

        r9 = new java.lang.IllegalArgumentException;

        specialinvoke r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid service token");

        throw r9;

     label4:
        $r7 := @caughtexception;

     label5:
        exitmonitor r0;

     label6:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label3 to label4 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void setActivityController(android.app.IActivityController, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        android.app.IActivityController r1;
        boolean z0;
        com.android.server.wm.ActivityTaskManagerService $r2;
        android.os.IBinder $r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.app.IActivityController;

        z0 := @parameter1: boolean;

        if r1 == null goto label1;

        $r3 = interfaceinvoke r1.<android.app.IActivityController: android.os.IBinder asBinder()>();

        staticinvoke <android.os.Binder: android.os.IBinder allowBlocking(android.os.IBinder)>($r3);

     label1:
        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerService mActivityTaskManager>;

        virtualinvoke $r2.<com.android.server.wm.ActivityTaskManagerService: void setActivityController(android.app.IActivityController,boolean)>(r1, z0);

        return;
    }

    public void setActivityLocusContext(android.content.ComponentName, android.content.LocusId, android.os.IBinder)
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.ComponentName r1;
        android.os.IBinder r2;
        int i0, i1, $i2;
        android.app.usage.UsageStatsManagerInternal r3;
        android.content.pm.PackageManagerInternal $r4;
        java.lang.String $r5, $r10, $r13;
        java.lang.StringBuilder $r6;
        java.lang.SecurityException $r12;
        android.content.LocusId r14;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.content.ComponentName;

        r14 := @parameter1: android.content.LocusId;

        r2 := @parameter2: android.os.IBinder;

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i1 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        $r4 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: android.content.pm.PackageManagerInternal getPackageManagerInternalLocked()>();

        $r5 = virtualinvoke r1.<android.content.ComponentName: java.lang.String getPackageName()>();

        $i2 = virtualinvoke $r4.<android.content.pm.PackageManagerInternal: int getPackageUid(java.lang.String,int,int)>($r5, 0, i1);

        if $i2 != i0 goto label2;

        r3 = r0.<com.android.server.am.ActivityManagerService: android.app.usage.UsageStatsManagerInternal mUsageStatsService>;

        if r3 == null goto label1;

        virtualinvoke r3.<android.app.usage.UsageStatsManagerInternal: void reportLocusUpdate(android.content.ComponentName,int,android.content.LocusId,android.os.IBinder)>(r1, i1, r14, r2);

     label1:
        return;

     label2:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Calling uid ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cannot set locusIdfor package ");

        $r10 = virtualinvoke r1.<android.content.ComponentName: java.lang.String getPackageName()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = new java.lang.SecurityException;

        $r13 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.SecurityException: void <init>(java.lang.String)>($r13);

        throw $r12;
    }

    public void setAgentApp(java.lang.String, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1, $r10, r16;
        int $i0, $i1;
        java.util.Map $r2, $r3, $r4, $r11, $r12, $r14;
        boolean $z0;
        java.lang.Throwable $r15;
        java.util.HashMap r17;
        java.lang.StringBuilder r18;
        java.lang.SecurityException r19;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r16 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        entermonitor r0;

     label01:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $i0 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.SET_ACTIVITY_WATCHER");

        if $i0 != 0 goto label11;

     label02:
        if r1 != null goto label05;

     label03:
        $r11 = r0.<com.android.server.am.ActivityManagerService: java.util.Map mAppAgentMap>;

        if $r11 == null goto label09;

        $r12 = r0.<com.android.server.am.ActivityManagerService: java.util.Map mAppAgentMap>;

        interfaceinvoke $r12.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r16);

        $r14 = r0.<com.android.server.am.ActivityManagerService: java.util.Map mAppAgentMap>;

        $z0 = interfaceinvoke $r14.<java.util.Map: boolean isEmpty()>();

        if $z0 == 0 goto label09;

        r0.<com.android.server.am.ActivityManagerService: java.util.Map mAppAgentMap> = null;

     label04:
        goto label09;

     label05:
        $r2 = r0.<com.android.server.am.ActivityManagerService: java.util.Map mAppAgentMap>;

        if $r2 != null goto label06;

        r17 = new java.util.HashMap;

        specialinvoke r17.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: java.util.Map mAppAgentMap> = r17;

     label06:
        $r3 = r0.<com.android.server.am.ActivityManagerService: java.util.Map mAppAgentMap>;

        $i1 = interfaceinvoke $r3.<java.util.Map: int size()>();

        if $i1 < 100 goto label08;

        r18 = new java.lang.StringBuilder;

        specialinvoke r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("App agent map has too many entries, cannot add ");

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16);

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ActivityManager", $r10);

        exitmonitor r0;

     label07:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label08:
        $r4 = r0.<com.android.server.am.ActivityManagerService: java.util.Map mAppAgentMap>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r16, r1);

     label09:
        exitmonitor r0;

     label10:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label11:
        r19 = new java.lang.SecurityException;

        specialinvoke r19.<java.lang.SecurityException: void <init>(java.lang.String)>("Requires permission android.permission.SET_ACTIVITY_WATCHER");

        throw r19;

     label12:
        $r15 := @caughtexception;

     label13:
        exitmonitor r0;

     label14:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r15;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label09 to label10 with label12;
        catch java.lang.Throwable from label11 to label12 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public void setAlwaysFinish(boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        boolean z0;
        long l0;
        android.content.Context $r1;
        java.lang.Throwable $r2, $r3;
        android.content.ContentResolver r4;
        byte b1;

        r0 := @this: com.android.server.am.ActivityManagerService;

        z0 := @parameter0: boolean;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.SET_ALWAYS_FINISH", "setAlwaysFinish()");

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label01:
        $r1 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        r4 = virtualinvoke $r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

     label02:
        if z0 == 0 goto label03;

        b1 = 1;

        goto label04;

     label03:
        b1 = 0;

     label04:
        staticinvoke <android.provider.Settings$Global: boolean putInt(android.content.ContentResolver,java.lang.String,int)>(r4, "always_finish_activities", b1);

        entermonitor r0;

     label05:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        r0.<com.android.server.am.ActivityManagerService: boolean mAlwaysFinishActivities> = z0;

        exitmonitor r0;

     label06:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

     label07:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label08:
        $r2 := @caughtexception;

     label09:
        exitmonitor r0;

     label10:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r2;

     label11:
        $r3 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r3;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label09 to label10 with label08;
        catch java.lang.Throwable from label10 to label11 with label11;
    }

    final void setAppIdTempWhitelistStateLocked(int, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0;
        boolean z0;
        com.android.server.am.OomAdjuster $r1;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.OomAdjuster mOomAdjuster>;

        virtualinvoke $r1.<com.android.server.am.OomAdjuster: void setAppIdTempWhitelistStateLocked(int,boolean)>(i0, z0);

        return;
    }

    public void setContentCaptureManager(com.android.server.contentcapture.ContentCaptureManagerInternal)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.contentcapture.ContentCaptureManagerInternal r1;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.contentcapture.ContentCaptureManagerInternal;

        r0.<com.android.server.am.ActivityManagerService: com.android.server.contentcapture.ContentCaptureManagerInternal mContentCaptureService> = r1;

        return;
    }

    public void setDebugApp(java.lang.String, boolean, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        boolean z0, $z3, z6, z7;
        long l0;
        android.content.ContentResolver r1;
        java.lang.String $r2, r6;
        android.content.Context $r3;
        java.lang.Throwable $r4, $r5;
        byte b1;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r6 := @parameter0: java.lang.String;

        z6 := @parameter1: boolean;

        z0 := @parameter2: boolean;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.SET_DEBUG_APP", "setDebugApp()");

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        if z0 == 0 goto label05;

     label01:
        $r3 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        r1 = virtualinvoke $r3.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        staticinvoke <android.provider.Settings$Global: boolean putString(android.content.ContentResolver,java.lang.String,java.lang.String)>(r1, "debug_app", r6);

     label02:
        if z6 == 0 goto label03;

        b1 = 1;

        goto label04;

     label03:
        b1 = 0;

     label04:
        staticinvoke <android.provider.Settings$Global: boolean putInt(android.content.ContentResolver,java.lang.String,int)>(r1, "wait_for_debugger", b1);

     label05:
        entermonitor r0;

     label06:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

     label07:
        if z0 != 0 goto label09;

     label08:
        $r2 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mDebugApp>;

        r0.<com.android.server.am.ActivityManagerService: java.lang.String mOrigDebugApp> = $r2;

        $z3 = r0.<com.android.server.am.ActivityManagerService: boolean mWaitForDebugger>;

        r0.<com.android.server.am.ActivityManagerService: boolean mOrigWaitForDebugger> = $z3;

     label09:
        r0.<com.android.server.am.ActivityManagerService: java.lang.String mDebugApp> = r6;

        r0.<com.android.server.am.ActivityManagerService: boolean mWaitForDebugger> = z6;

     label10:
        if z0 != 0 goto label11;

        z7 = 1;

        goto label12;

     label11:
        z7 = 0;

     label12:
        r0.<com.android.server.am.ActivityManagerService: boolean mDebugTransient> = z7;

     label13:
        if r6 == null goto label15;

     label14:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean forceStopPackageLocked(java.lang.String,int,boolean,boolean,boolean,boolean,boolean,int,java.lang.String)>(r6, -1, 0, 0, 1, 1, 0, -1, "set debug app");

     label15:
        exitmonitor r0;

     label16:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

     label17:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label18:
        $r5 := @caughtexception;

     label19:
        exitmonitor r0;

     label20:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r5;

     label21:
        $r4 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r4;

        catch java.lang.Throwable from label01 to label02 with label21;
        catch java.lang.Throwable from label04 to label05 with label21;
        catch java.lang.Throwable from label05 to label06 with label21;
        catch java.lang.Throwable from label06 to label07 with label18;
        catch java.lang.Throwable from label08 to label09 with label18;
        catch java.lang.Throwable from label09 to label10 with label18;
        catch java.lang.Throwable from label12 to label13 with label18;
        catch java.lang.Throwable from label14 to label15 with label18;
        catch java.lang.Throwable from label15 to label16 with label18;
        catch java.lang.Throwable from label16 to label17 with label21;
        catch java.lang.Throwable from label19 to label20 with label18;
        catch java.lang.Throwable from label20 to label21 with label21;
    }

    public void setDumpHeapDebugLimit(java.lang.String, int, long, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        long l0;
        java.lang.SecurityException r1, r26, r31;
        com.android.server.am.ActivityManagerService$PidMap $r2, r24;
        int $i1, $i2, $i3, $i4, i5;
        java.lang.String $r5, $r18, r22, r23;
        boolean $z0, $z1;
        com.android.internal.app.ProcessMap $r6, $r9, r28;
        android.util.ArrayMap $r7;
        java.lang.Long $r11;
        com.android.server.am.ProcessRecord$PackageList $r13;
        android.content.pm.ApplicationInfo $r19;
        java.lang.Throwable $r20, $r21;
        com.android.server.am.ProcessRecord r25;
        java.lang.StringBuilder r27, r32;
        byte $b6;
        android.util.Pair r29;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r22 := @parameter0: java.lang.String;

        i5 := @parameter1: int;

        l0 := @parameter2: long;

        r23 := @parameter3: java.lang.String;

        if r22 == null goto label01;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.SET_DEBUG_APP", "setDumpHeapDebugLimit()");

        goto label13;

     label01:
        r24 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        entermonitor r24;

     label02:
        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        $i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

        r25 = virtualinvoke $r2.<com.android.server.am.ActivityManagerService$PidMap: com.android.server.am.ProcessRecord get(int)>($i1);

     label03:
        if r25 == null goto label27;

     label04:
        $z0 = <android.os.Build: boolean IS_DEBUGGABLE>;

        if $z0 != 0 goto label07;

        $r19 = r25.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i3 = $r19.<android.content.pm.ApplicationInfo: int flags>;

        $i4 = $i3 & 2;

        if $i4 == 0 goto label06;

     label05:
        goto label07;

     label06:
        r26 = new java.lang.SecurityException;

        specialinvoke r26.<java.lang.SecurityException: void <init>(java.lang.String)>("Not running a debuggable build");

        throw r26;

     label07:
        r22 = r25.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        i5 = r25.<com.android.server.am.ProcessRecord: int uid>;

     label08:
        if r23 == null goto label12;

     label09:
        $r13 = r25.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        $z1 = virtualinvoke $r13.<com.android.server.am.ProcessRecord$PackageList: boolean containsKey(java.lang.Object)>(r23);

        if $z1 == 0 goto label11;

     label10:
        goto label12;

     label11:
        r1 = new java.lang.SecurityException;

        r27 = new java.lang.StringBuilder;

        specialinvoke r27.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r23);

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not running in ");

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r25);

        $r18 = virtualinvoke r27.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r1.<java.lang.SecurityException: void <init>(java.lang.String)>($r18);

        throw r1;

     label12:
        exitmonitor r24;

     label13:
        entermonitor r0;

     label14:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

     label15:
        $b6 = l0 cmp 0L;

        if $b6 <= 0 goto label18;

     label16:
        r28 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mMemWatchProcesses>;

        r29 = new android.util.Pair;

        $r11 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        specialinvoke r29.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r11, r23);

        virtualinvoke r28.<com.android.internal.app.ProcessMap: java.lang.Object put(java.lang.String,int,java.lang.Object)>(r22, i5, r29);

     label17:
        goto label22;

     label18:
        if i5 == 0 goto label21;

     label19:
        $r9 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mMemWatchProcesses>;

        virtualinvoke $r9.<com.android.internal.app.ProcessMap: java.lang.Object remove(java.lang.String,int)>(r22, i5);

     label20:
        goto label22;

     label21:
        $r6 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mMemWatchProcesses>;

        $r7 = virtualinvoke $r6.<com.android.internal.app.ProcessMap: android.util.ArrayMap getMap()>();

        virtualinvoke $r7.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r22);

     label22:
        exitmonitor r0;

     label23:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label24:
        $r20 := @caughtexception;

     label25:
        exitmonitor r0;

     label26:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r20;

     label27:
        r31 = new java.lang.SecurityException;

        r32 = new java.lang.StringBuilder;

        specialinvoke r32.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No process found for calling pid ");

        $i2 = staticinvoke <android.os.Binder: int getCallingPid()>();

        virtualinvoke r32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r5 = virtualinvoke r32.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r31.<java.lang.SecurityException: void <init>(java.lang.String)>($r5);

        throw r31;

     label28:
        $r21 := @caughtexception;

     label29:
        exitmonitor r24;

     label30:
        throw $r21;

        catch java.lang.Throwable from label02 to label03 with label28;
        catch java.lang.Throwable from label04 to label05 with label28;
        catch java.lang.Throwable from label06 to label07 with label28;
        catch java.lang.Throwable from label07 to label08 with label28;
        catch java.lang.Throwable from label09 to label10 with label28;
        catch java.lang.Throwable from label11 to label12 with label28;
        catch java.lang.Throwable from label12 to label13 with label28;
        catch java.lang.Throwable from label14 to label15 with label24;
        catch java.lang.Throwable from label16 to label17 with label24;
        catch java.lang.Throwable from label19 to label20 with label24;
        catch java.lang.Throwable from label21 to label22 with label24;
        catch java.lang.Throwable from label22 to label23 with label24;
        catch java.lang.Throwable from label25 to label26 with label24;
        catch java.lang.Throwable from label27 to label28 with label28;
        catch java.lang.Throwable from label29 to label30 with label28;
    }

    public void setFocusedStack(int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0;
        com.android.server.wm.ActivityTaskManagerService $r1;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerService mActivityTaskManager>;

        virtualinvoke $r1.<com.android.server.wm.ActivityTaskManagerService: void setFocusedStack(int)>(i0);

        return;
    }

    public void setHasTopUi(boolean) throws android.os.RemoteException
    {
        com.android.server.am.ActivityManagerService r0;
        boolean z0, $z1, z3;
        int i0, $i2, $i3, $i4;
        long l1;
        java.lang.StringBuilder $r1, r18;
        java.lang.SecurityException $r8;
        com.android.server.am.ActivityManagerService$PidMap $r9, r16;
        java.lang.String $r12, r23;
        java.lang.Throwable $r13, $r14, $r15;
        com.android.server.am.ProcessRecord r17;

        r0 := @this: com.android.server.am.ActivityManagerService;

        z0 := @parameter0: boolean;

        $i2 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.INTERNAL_SYSTEM_WINDOW");

        if $i2 != 0 goto label25;

        i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label01:
        entermonitor r0;

     label02:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

     label03:
        z3 = 0;

     label04:
        r16 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        entermonitor r16;

     label05:
        $r9 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        r17 = virtualinvoke $r9.<com.android.server.am.ActivityManagerService$PidMap: com.android.server.am.ProcessRecord get(int)>(i0);

     label06:
        if r17 != null goto label10;

     label07:
        r18 = new java.lang.StringBuilder;

        specialinvoke r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setHasTopUi called on unknown pid: ");

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r12 = virtualinvoke r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r12);

        exitmonitor r16;

     label08:
        exitmonitor r0;

     label09:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return;

     label10:
        $z1 = virtualinvoke r17.<com.android.server.am.ProcessRecord: boolean hasTopUi()>();

        if $z1 == z0 goto label12;

        virtualinvoke r17.<com.android.server.am.ProcessRecord: void setHasTopUi(boolean)>(z0);

     label11:
        z3 = 1;

     label12:
        exitmonitor r16;

     label13:
        if z3 == 0 goto label15;

     label14:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean updateOomAdjLocked(com.android.server.am.ProcessRecord,boolean,java.lang.String)>(r17, 1, "updateOomAdj_uiVisibility");

     label15:
        exitmonitor r0;

     label16:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

     label17:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return;

     label18:
        $r14 := @caughtexception;

     label19:
        exitmonitor r16;

     label20:
        throw $r14;

     label21:
        $r15 := @caughtexception;

     label22:
        exitmonitor r0;

     label23:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r15;

     label24:
        $r13 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r13;

     label25:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: setHasTopUi() from pid=");

        $i3 = staticinvoke <android.os.Binder: int getCallingPid()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i4 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.INTERNAL_SYSTEM_WINDOW");

        r23 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r23);

        $r8 = new java.lang.SecurityException;

        specialinvoke $r8.<java.lang.SecurityException: void <init>(java.lang.String)>(r23);

        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label24;
        catch java.lang.Throwable from label02 to label03 with label21;
        catch java.lang.Throwable from label04 to label05 with label21;
        catch java.lang.Throwable from label05 to label06 with label18;
        catch java.lang.Throwable from label07 to label08 with label18;
        catch java.lang.Throwable from label08 to label09 with label21;
        catch java.lang.Throwable from label10 to label11 with label18;
        catch java.lang.Throwable from label12 to label13 with label18;
        catch java.lang.Throwable from label14 to label15 with label21;
        catch java.lang.Throwable from label15 to label16 with label21;
        catch java.lang.Throwable from label16 to label17 with label24;
        catch java.lang.Throwable from label19 to label20 with label18;
        catch java.lang.Throwable from label20 to label21 with label21;
        catch java.lang.Throwable from label22 to label23 with label21;
        catch java.lang.Throwable from label23 to label24 with label24;
    }

    public void setInstaller(com.android.server.pm.Installer)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.pm.Installer r1;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.pm.Installer;

        r0.<com.android.server.am.ActivityManagerService: com.android.server.pm.Installer mInstaller> = r1;

        return;
    }

    void setNativeDebuggingAppLocked(android.content.pm.ApplicationInfo, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.pm.ApplicationInfo r1;
        java.lang.String $r2, $r3, $r6, $r9, r10;
        boolean $z0;
        int $i0, $i1;
        java.lang.StringBuilder $r4;
        java.lang.SecurityException $r8;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.content.pm.ApplicationInfo;

        r10 := @parameter1: java.lang.String;

        $r2 = "1";

        $r3 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String,java.lang.String)>("ro.debuggable", "0");

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label2;

        $i0 = r1.<android.content.pm.ApplicationInfo: int flags>;

        $i1 = $i0 & 2;

        if $i1 == 0 goto label1;

        goto label2;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Process not debuggable: ");

        $r6 = r1.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = new java.lang.SecurityException;

        $r9 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.SecurityException: void <init>(java.lang.String)>($r9);

        throw $r8;

     label2:
        r0.<com.android.server.am.ActivityManagerService: java.lang.String mNativeDebuggingApp> = r10;

        return;
    }

    void setOomAdjObserver(int, com.android.server.am.ActivityManagerService$OomAdjObserver)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0;
        java.lang.Throwable $r1;
        com.android.server.am.ActivityManagerService$OomAdjObserver r2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        r2 := @parameter1: com.android.server.am.ActivityManagerService$OomAdjObserver;

        entermonitor r0;

     label1:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        r0.<com.android.server.am.ActivityManagerService: int mCurOomAdjUid> = i0;

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$OomAdjObserver mCurOomAdjObserver> = r2;

        exitmonitor r0;

     label2:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label3:
        $r1 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void setPackageScreenCompatMode(java.lang.String, int)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1;
        int i0;
        com.android.server.wm.ActivityTaskManagerService $r2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerService mActivityTaskManager>;

        virtualinvoke $r2.<com.android.server.wm.ActivityTaskManagerService: void setPackageScreenCompatMode(java.lang.String,int)>(r1, i0);

        return;
    }

    public void setPersistentVrThread(int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0;
        com.android.server.wm.ActivityTaskManagerService $r1;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerService mActivityTaskManager>;

        virtualinvoke $r1.<com.android.server.wm.ActivityTaskManagerService: void setPersistentVrThread(int)>(i0);

        return;
    }

    public void setProcessImportant(android.os.IBinder, int, boolean, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0;
        boolean z0, z2, z3;
        java.lang.String r1, $r12;
        com.android.server.am.ActivityManagerService$PidMap r2, $r4;
        com.android.server.am.ProcessRecord r3;
        android.util.SparseArray $r5, $r7, $r9;
        java.lang.Object $r6;
        android.os.IBinder $r8, r16;
        java.lang.Throwable $r13, $r14;
        android.os.RemoteException $r15;
        java.lang.StringBuilder r17;
        com.android.server.am.ActivityManagerService$ImportanceToken r18;
        com.android.server.am.ActivityManagerService$13 r19;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r16 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        r1 := @parameter3: java.lang.String;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.SET_PROCESS_LIMIT", "setProcessImportant()");

        entermonitor r0;

     label01:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

     label02:
        z2 = 0;

     label03:
        r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        entermonitor r2;

     label04:
        $r4 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        r3 = virtualinvoke $r4.<com.android.server.am.ActivityManagerService$PidMap: com.android.server.am.ProcessRecord get(int)>(i0);

     label05:
        if r3 != null goto label09;

        if z0 == 0 goto label09;

     label06:
        r17 = new java.lang.StringBuilder;

        specialinvoke r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setProcessForeground called on unknown pid: ");

        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r12 = virtualinvoke r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r12);

        exitmonitor r2;

     label07:
        exitmonitor r0;

     label08:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label09:
        $r5 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mImportantProcesses>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r18 = (com.android.server.am.ActivityManagerService$ImportanceToken) $r6;

     label10:
        if r18 == null goto label15;

     label11:
        $r8 = r18.<com.android.server.am.ActivityManagerService$ImportanceToken: android.os.IBinder token>;

        interfaceinvoke $r8.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>(r18, 0);

        $r9 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mImportantProcesses>;

        virtualinvoke $r9.<android.util.SparseArray: void remove(int)>(i0);

     label12:
        if r3 == null goto label14;

     label13:
        r3.<com.android.server.am.ProcessRecord: java.lang.Object forcingToImportant> = null;

     label14:
        z2 = 1;

     label15:
        z3 = z2;

        if z0 == 0 goto label20;

        z3 = z2;

        if r16 == null goto label20;

     label16:
        r19 = new com.android.server.am.ActivityManagerService$13;

        specialinvoke r19.<com.android.server.am.ActivityManagerService$13: void <init>(com.android.server.am.ActivityManagerService,int,android.os.IBinder,java.lang.String)>(r0, i0, r16, r1);

     label17:
        interfaceinvoke r16.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>(r19, 0);

        $r7 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mImportantProcesses>;

        virtualinvoke $r7.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r19);

        r3.<com.android.server.am.ProcessRecord: java.lang.Object forcingToImportant> = r19;

     label18:
        z3 = 1;

        goto label20;

     label19:
        $r15 := @caughtexception;

        z3 = z2;

     label20:
        exitmonitor r2;

     label21:
        if z3 == 0 goto label23;

     label22:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void updateOomAdjLocked(com.android.server.am.ProcessRecord,java.lang.String)>(r3, "updateOomAdj_uiVisibility");

     label23:
        exitmonitor r0;

     label24:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label25:
        $r14 := @caughtexception;

     label26:
        exitmonitor r2;

     label27:
        throw $r14;

     label28:
        $r13 := @caughtexception;

     label29:
        exitmonitor r0;

     label30:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r13;

        catch java.lang.Throwable from label01 to label02 with label28;
        catch java.lang.Throwable from label03 to label04 with label28;
        catch java.lang.Throwable from label04 to label05 with label25;
        catch java.lang.Throwable from label06 to label07 with label25;
        catch java.lang.Throwable from label07 to label08 with label28;
        catch java.lang.Throwable from label09 to label10 with label25;
        catch java.lang.Throwable from label11 to label12 with label25;
        catch java.lang.Throwable from label13 to label14 with label25;
        catch java.lang.Throwable from label16 to label17 with label25;
        catch android.os.RemoteException from label17 to label18 with label19;
        catch java.lang.Throwable from label17 to label18 with label25;
        catch java.lang.Throwable from label20 to label21 with label25;
        catch java.lang.Throwable from label22 to label23 with label28;
        catch java.lang.Throwable from label23 to label24 with label28;
        catch java.lang.Throwable from label26 to label27 with label25;
        catch java.lang.Throwable from label27 to label28 with label28;
        catch java.lang.Throwable from label29 to label30 with label28;
    }

    public void setProcessLimit(int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0;
        com.android.server.am.ActivityManagerConstants $r2;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.SET_PROCESS_LIMIT", "setProcessLimit()");

        entermonitor r0;

     label1:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerConstants mConstants>;

        virtualinvoke $r2.<com.android.server.am.ActivityManagerConstants: void setOverrideMaxCachedProcesses(int)>(i0);

        exitmonitor r0;

     label2:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void trimApplications(java.lang.String)>("updateOomAdj_processEnd");

        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean setProcessMemoryTrimLevel(java.lang.String, int, int) throws android.os.RemoteException
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, $i2, $i3;
        java.lang.StringBuilder r1;
        java.lang.String $r4, r8;
        android.app.IApplicationThread $r5, $r6;
        java.lang.Throwable $r7;
        com.android.server.am.ProcessRecord r9;
        java.lang.IllegalArgumentException r10, r11, r12, r13;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r8 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        entermonitor r0;

     label01:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        r9 = specialinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord findProcessLocked(java.lang.String,int,java.lang.String)>(r8, i0, "setProcessMemoryTrimLevel");

     label02:
        if r9 == null goto label12;

     label03:
        $r5 = r9.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r5 == null goto label11;

        $i2 = r9.<com.android.server.am.ProcessRecord: int trimMemoryLevel>;

        if $i2 >= i1 goto label10;

     label04:
        if i1 < 20 goto label08;

     label05:
        $i3 = virtualinvoke r9.<com.android.server.am.ProcessRecord: int getCurProcState()>();

        if $i3 <= 6 goto label07;

     label06:
        goto label08;

     label07:
        r10 = new java.lang.IllegalArgumentException;

        specialinvoke r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unable to set a background trim level on a foreground process");

        throw r10;

     label08:
        $r6 = r9.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        interfaceinvoke $r6.<android.app.IApplicationThread: void scheduleTrimMemory(int)>(i1);

        r9.<com.android.server.am.ProcessRecord: int trimMemoryLevel> = i1;

        exitmonitor r0;

     label09:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return 1;

     label10:
        r11 = new java.lang.IllegalArgumentException;

        specialinvoke r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unable to set a higher trim level than current level");

        throw r11;

     label11:
        r12 = new java.lang.IllegalArgumentException;

        specialinvoke r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Process has no app thread");

        throw r12;

     label12:
        r13 = new java.lang.IllegalArgumentException;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown process: ");

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        $r4 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw r13;

     label13:
        $r7 := @caughtexception;

     label14:
        exitmonitor r0;

     label15:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label10 to label11 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label12 to label13 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
    }

    public void setProcessStateSummary(byte[])
    {
        com.android.server.am.ActivityManagerService r0;
        byte[] r1;
        com.android.server.am.ProcessList $r2;
        com.android.server.am.AppExitInfoTracker $r3;
        int $i0, $i1, $i2;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: byte[];

        if r1 == null goto label2;

        $i2 = lengthof r1;

        if $i2 > 128 goto label1;

        goto label2;

     label1:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Data size is too large");

        throw $r4;

     label2:
        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r3 = $r2.<com.android.server.am.ProcessList: com.android.server.am.AppExitInfoTracker mAppExitInfoTracker>;

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

        virtualinvoke $r3.<com.android.server.am.AppExitInfoTracker: void setProcessStateSummary(int,int,byte[])>($i0, $i1, r1);

        return;
    }

    final void setProcessTrackerStateLocked(com.android.server.am.ProcessRecord, int, long)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1;
        int i0, i2;
        long l1;
        android.app.IApplicationThread $r2;
        com.android.internal.app.procstats.ProcessState $r3, $r6;
        com.android.server.am.ProcessRecord$PackageList $r4;
        android.util.ArrayMap $r5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        $r2 = r1.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r2 == null goto label1;

        $r3 = r1.<com.android.server.am.ProcessRecord: com.android.internal.app.procstats.ProcessState baseProcessTracker>;

        if $r3 == null goto label1;

        i2 = virtualinvoke r1.<com.android.server.am.ProcessRecord: int getReportedProcState()>();

        if i2 == 20 goto label1;

        $r6 = r1.<com.android.server.am.ProcessRecord: com.android.internal.app.procstats.ProcessState baseProcessTracker>;

        $r4 = r1.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        $r5 = $r4.<com.android.server.am.ProcessRecord$PackageList: android.util.ArrayMap mPkgList>;

        virtualinvoke $r6.<com.android.internal.app.procstats.ProcessState: void setState(int,int,long,android.util.ArrayMap)>(i2, i0, l1, $r5);

     label1:
        return;
    }

    void setProfileApp(android.content.pm.ApplicationInfo, java.lang.String, android.app.ProfilerInfo)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String $r1, $r2, $r12, $r14, r18;
        boolean $z0, $z1;
        com.android.server.am.ActivityManagerService$ProfileData $r3, $r4, $r6, $r8, r24;
        android.app.ProfilerInfo $r5, $r7, $r9, r19, r25;
        android.os.ParcelFileDescriptor $r10, r22;
        java.lang.Throwable $r15, $r16;
        android.content.pm.ApplicationInfo r17;
        java.lang.SecurityException r20;
        java.lang.StringBuilder r21;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r17 := @parameter0: android.content.pm.ApplicationInfo;

        r18 := @parameter1: java.lang.String;

        r19 := @parameter2: android.app.ProfilerInfo;

        entermonitor r0;

     label01:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r1 = "1";

        $r2 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String,java.lang.String)>("ro.debuggable", "0");

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 != 0 goto label04;

        $z1 = virtualinvoke r17.<android.content.pm.ApplicationInfo: boolean isProfileableByShell()>();

        if $z1 == 0 goto label03;

     label02:
        goto label04;

     label03:
        r20 = new java.lang.SecurityException;

        r21 = new java.lang.StringBuilder;

        specialinvoke r21.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Process not debuggable, and not profileable by shell: ");

        $r12 = r17.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r20.<java.lang.SecurityException: void <init>(java.lang.String)>($r14);

        throw r20;

     label04:
        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$ProfileData mProfileData>;

        virtualinvoke $r3.<com.android.server.am.ActivityManagerService$ProfileData: void setProfileApp(java.lang.String)>(r18);

        $r4 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$ProfileData mProfileData>;

        $r5 = virtualinvoke $r4.<com.android.server.am.ActivityManagerService$ProfileData: android.app.ProfilerInfo getProfilerInfo()>();

        if $r5 == null goto label09;

        $r6 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$ProfileData mProfileData>;

        $r7 = virtualinvoke $r6.<com.android.server.am.ActivityManagerService$ProfileData: android.app.ProfilerInfo getProfilerInfo()>();

        r22 = $r7.<android.app.ProfilerInfo: android.os.ParcelFileDescriptor profileFd>;

     label05:
        if r22 == null goto label09;

     label06:
        $r8 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$ProfileData mProfileData>;

        $r9 = virtualinvoke $r8.<com.android.server.am.ActivityManagerService$ProfileData: android.app.ProfilerInfo getProfilerInfo()>();

        $r10 = $r9.<android.app.ProfilerInfo: android.os.ParcelFileDescriptor profileFd>;

        virtualinvoke $r10.<android.os.ParcelFileDescriptor: void close()>();

     label07:
        goto label09;

     label08:
        $r15 := @caughtexception;

     label09:
        r24 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$ProfileData mProfileData>;

        r25 = new android.app.ProfilerInfo;

        specialinvoke r25.<android.app.ProfilerInfo: void <init>(android.app.ProfilerInfo)>(r19);

        virtualinvoke r24.<com.android.server.am.ActivityManagerService$ProfileData: void setProfilerInfo(android.app.ProfilerInfo)>(r25);

        r0.<com.android.server.am.ActivityManagerService: int mProfileType> = 0;

        exitmonitor r0;

     label10:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label11:
        $r16 := @caughtexception;

     label12:
        exitmonitor r0;

     label13:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r16;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.io.IOException from label06 to label07 with label08;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    public void setRenderThread(int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        com.android.server.am.ActivityManagerService$PidMap $r1, r4;
        boolean $z0, $z1;
        java.lang.Throwable $r2, $r3;
        com.android.server.am.ProcessRecord r5;
        java.lang.IllegalArgumentException r6;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        entermonitor r0;

     label01:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i2 = staticinvoke <android.os.Process: int myPid()>();

        if i1 != $i2 goto label03;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void demoteSystemServerRenderThread(int)>(i0);

        exitmonitor r0;

     label02:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label03:
        r4 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        entermonitor r4;

     label04:
        $r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        r5 = virtualinvoke $r1.<com.android.server.am.ActivityManagerService$PidMap: com.android.server.am.ProcessRecord get(int)>(i1);

     label05:
        if r5 == null goto label13;

     label06:
        $i3 = r5.<com.android.server.am.ProcessRecord: int renderThreadTid>;

        if $i3 != 0 goto label13;

     label07:
        if i0 <= 0 goto label13;

     label08:
        $z0 = staticinvoke <android.os.Process: boolean isThreadInProcess(int,int)>(i1, i0);

        if $z0 == 0 goto label12;

        r5.<com.android.server.am.ProcessRecord: int renderThreadTid> = i0;

        $i4 = virtualinvoke r5.<com.android.server.am.ProcessRecord: int getCurrentSchedulingGroup()>();

        if $i4 != 3 goto label13;

        $z1 = r0.<com.android.server.am.ActivityManagerService: boolean mUseFifoUiScheduling>;

        if $z1 == 0 goto label10;

        $i6 = r5.<com.android.server.am.ProcessRecord: int renderThreadTid>;

        staticinvoke <android.os.Process: void setThreadScheduler(int,int,int)>($i6, 1073741825, 1);

     label09:
        goto label13;

     label10:
        $i5 = r5.<com.android.server.am.ProcessRecord: int renderThreadTid>;

        staticinvoke <android.os.Process: void setThreadPriority(int,int)>($i5, -10);

     label11:
        goto label13;

     label12:
        r6 = new java.lang.IllegalArgumentException;

        specialinvoke r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Render thread does not belong to process");

        throw r6;

     label13:
        exitmonitor r4;

     label14:
        exitmonitor r0;

     label15:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label16:
        $r2 := @caughtexception;

     label17:
        exitmonitor r4;

     label18:
        throw $r2;

     label19:
        $r3 := @caughtexception;

     label20:
        exitmonitor r0;

     label21:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r3;

        catch java.lang.Throwable from label01 to label02 with label19;
        catch java.lang.Throwable from label03 to label04 with label19;
        catch java.lang.Throwable from label04 to label05 with label16;
        catch java.lang.Throwable from label06 to label07 with label16;
        catch java.lang.Throwable from label08 to label09 with label16;
        catch java.lang.Throwable from label10 to label11 with label16;
        catch java.lang.Throwable from label12 to label13 with label16;
        catch java.lang.Throwable from label13 to label14 with label16;
        catch java.lang.Throwable from label14 to label15 with label19;
        catch java.lang.Throwable from label17 to label18 with label16;
        catch java.lang.Throwable from label18 to label19 with label19;
        catch java.lang.Throwable from label20 to label21 with label19;
    }

    public void setRequestedOrientation(android.os.IBinder, int)
    {
        com.android.server.am.ActivityManagerService r0;
        android.os.IBinder r1;
        int i0;
        com.android.server.wm.ActivityTaskManagerService $r2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerService mActivityTaskManager>;

        virtualinvoke $r2.<com.android.server.wm.ActivityTaskManagerService: void setRequestedOrientation(android.os.IBinder,int)>(r1, i0);

        return;
    }

    public void setServiceForeground(android.content.ComponentName, android.os.IBinder, int, android.app.Notification, int, int)
    {
        com.android.server.am.ActivityManagerService r0;
        android.os.IBinder r1;
        int i0, i1, i2;
        android.app.Notification r2;
        com.android.server.am.ActiveServices $r3;
        java.lang.Throwable $r4;
        android.content.ComponentName r5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r5 := @parameter0: android.content.ComponentName;

        r1 := @parameter1: android.os.IBinder;

        i0 := @parameter2: int;

        r2 := @parameter3: android.app.Notification;

        i1 := @parameter4: int;

        i2 := @parameter5: int;

        entermonitor r0;

     label1:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveServices mServices>;

        virtualinvoke $r3.<com.android.server.am.ActiveServices: void setServiceForegroundLocked(android.content.ComponentName,android.os.IBinder,int,android.app.Notification,int,int)>(r5, r1, i0, r2, i1, i2);

        exitmonitor r0;

     label2:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void setSystemProcess()
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessList r1, $r13;
        java.lang.String r2;
        com.android.server.am.ProcessStatsService $r3, $r12;
        android.content.Context $r4;
        android.content.pm.PackageManager $r5;
        android.app.ActivityThread $r6, $r10;
        java.lang.Class $r7;
        java.lang.ClassLoader $r8;
        int $i0, $i1;
        com.android.server.wm.WindowProcessController $r9;
        android.app.ActivityThread$ApplicationThread $r11;
        com.android.server.am.ActivityManagerService$6 $r14;
        com.android.server.appop.AppOpsService $r15, r31;
        com.android.server.am.ActivityManagerService$7 $r16;
        int[] $r17;
        java.lang.Throwable $r18;
        android.content.pm.PackageManager$NameNotFoundException $r19;
        java.lang.RuntimeException $r20;
        com.android.server.am.ActivityManagerService$MemBinder r21;
        com.android.server.am.ActivityManagerService$GraphicsBinder r22;
        com.android.server.am.ActivityManagerService$DbBinder r23;
        com.android.server.am.ActivityManagerService$CpuBinder r24;
        com.android.server.am.ActivityManagerService$PermissionController r25;
        com.android.server.am.ActivityManagerService$ProcessInfoService r26;
        com.android.server.am.ActivityManagerService$CacheBinder r27;
        android.content.pm.ApplicationInfo r28;
        com.android.server.am.HostingRecord r29;
        com.android.server.am.ProcessRecord r30;

        r0 := @this: com.android.server.am.ActivityManagerService;

     label1:
        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder,boolean,int)>("activity", r0, 1, 21);

        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>("procstats", $r3);

        r21 = new com.android.server.am.ActivityManagerService$MemBinder;

        specialinvoke r21.<com.android.server.am.ActivityManagerService$MemBinder: void <init>(com.android.server.am.ActivityManagerService)>(r0);

        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder,boolean,int)>("meminfo", r21, 0, 2);

        r22 = new com.android.server.am.ActivityManagerService$GraphicsBinder;

        specialinvoke r22.<com.android.server.am.ActivityManagerService$GraphicsBinder: void <init>(com.android.server.am.ActivityManagerService)>(r0);

        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>("gfxinfo", r22);

        r23 = new com.android.server.am.ActivityManagerService$DbBinder;

        specialinvoke r23.<com.android.server.am.ActivityManagerService$DbBinder: void <init>(com.android.server.am.ActivityManagerService)>(r0);

        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>("dbinfo", r23);

        r24 = new com.android.server.am.ActivityManagerService$CpuBinder;

        specialinvoke r24.<com.android.server.am.ActivityManagerService$CpuBinder: void <init>(com.android.server.am.ActivityManagerService)>(r0);

        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder,boolean,int)>("cpuinfo", r24, 0, 1);

        r25 = new com.android.server.am.ActivityManagerService$PermissionController;

        specialinvoke r25.<com.android.server.am.ActivityManagerService$PermissionController: void <init>(com.android.server.am.ActivityManagerService)>(r0);

        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>("permission", r25);

        r26 = new com.android.server.am.ActivityManagerService$ProcessInfoService;

        specialinvoke r26.<com.android.server.am.ActivityManagerService$ProcessInfoService: void <init>(com.android.server.am.ActivityManagerService)>(r0);

        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>("processinfo", r26);

        r27 = new com.android.server.am.ActivityManagerService$CacheBinder;

        specialinvoke r27.<com.android.server.am.ActivityManagerService$CacheBinder: void <init>(com.android.server.am.ActivityManagerService)>(r0);

        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>("cacheinfo", r27);

        $r4 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r28 = virtualinvoke $r5.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>("android", 1049600);

        $r6 = r0.<com.android.server.am.ActivityManagerService: android.app.ActivityThread mSystemThread>;

        $r7 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        virtualinvoke $r6.<android.app.ActivityThread: void installSystemApplicationInfo(android.content.pm.ApplicationInfo,java.lang.ClassLoader)>(r28, $r8);

        entermonitor r0;

     label2:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        r2 = r28.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        r29 = new com.android.server.am.HostingRecord;

        specialinvoke r29.<com.android.server.am.HostingRecord: void <init>(java.lang.String)>("system");

        r30 = virtualinvoke r1.<com.android.server.am.ProcessList: com.android.server.am.ProcessRecord newProcessRecordLocked(android.content.pm.ApplicationInfo,java.lang.String,boolean,int,com.android.server.am.HostingRecord)>(r28, r2, 0, 0, r29);

        virtualinvoke r30.<com.android.server.am.ProcessRecord: void setPersistent(boolean)>(1);

        $i0 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        r30.<com.android.server.am.ProcessRecord: int pid> = $i0;

        $r9 = virtualinvoke r30.<com.android.server.am.ProcessRecord: com.android.server.wm.WindowProcessController getWindowProcessController()>();

        $i1 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        virtualinvoke $r9.<com.android.server.wm.WindowProcessController: void setPid(int)>($i1);

        r30.<com.android.server.am.ProcessRecord: int maxAdj> = -900;

        $r10 = r0.<com.android.server.am.ActivityManagerService: android.app.ActivityThread mSystemThread>;

        $r11 = virtualinvoke $r10.<android.app.ActivityThread: android.app.ActivityThread$ApplicationThread getApplicationThread()>();

        $r12 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        virtualinvoke r30.<com.android.server.am.ProcessRecord: void makeActive(android.app.IApplicationThread,com.android.server.am.ProcessStatsService)>($r11, $r12);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void addPidLocked(com.android.server.am.ProcessRecord)>(r30);

        $r13 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        virtualinvoke $r13.<com.android.server.am.ProcessList: void updateLruProcessLocked(com.android.server.am.ProcessRecord,boolean,com.android.server.am.ProcessRecord)>(r30, 0, null);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void updateOomAdjLocked(java.lang.String)>("updateOomAdj_meh");

        exitmonitor r0;

     label3:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

     label4:
        $r15 = r0.<com.android.server.am.ActivityManagerService: com.android.server.appop.AppOpsService mAppOpsService>;

        $r14 = new com.android.server.am.ActivityManagerService$6;

        specialinvoke $r14.<com.android.server.am.ActivityManagerService$6: void <init>(com.android.server.am.ActivityManagerService)>(r0);

        virtualinvoke $r15.<com.android.server.appop.AppOpsService: void startWatchingMode(int,java.lang.String,com.android.internal.app.IAppOpsCallback)>(63, null, $r14);

        r31 = r0.<com.android.server.am.ActivityManagerService: com.android.server.appop.AppOpsService mAppOpsService>;

        $r16 = new com.android.server.am.ActivityManagerService$7;

        specialinvoke $r16.<com.android.server.am.ActivityManagerService$7: void <init>(com.android.server.am.ActivityManagerService)>(r0);

        $r17 = newarray (int)[1];

        $r17[0] = 26;

        virtualinvoke r31.<com.android.server.appop.AppOpsService: void startWatchingActive(int[],com.android.internal.app.IAppOpsActiveCallback)>($r17, $r16);

        return;

     label5:
        $r18 := @caughtexception;

     label6:
        exitmonitor r0;

     label7:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r18;

     label8:
        $r19 := @caughtexception;

        $r20 = new java.lang.RuntimeException;

        specialinvoke $r20.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Unable to find android system package", $r19);

        throw $r20;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label8;
        catch java.lang.Throwable from label2 to label3 with label5;
        catch android.content.pm.PackageManager$NameNotFoundException from label3 to label4 with label8;
        catch java.lang.Throwable from label6 to label7 with label5;
        catch android.content.pm.PackageManager$NameNotFoundException from label7 to label8 with label8;
    }

    public void setSystemServiceManager(com.android.server.SystemServiceManager)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.SystemServiceManager r1;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.SystemServiceManager;

        r0.<com.android.server.am.ActivityManagerService: com.android.server.SystemServiceManager mSystemServiceManager> = r1;

        return;
    }

    public void setTaskResizeable(int, int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1;
        com.android.server.wm.ActivityTaskManagerService $r1;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerService mActivityTaskManager>;

        virtualinvoke $r1.<com.android.server.wm.ActivityTaskManagerService: void setTaskResizeable(int,int)>(i0, i1);

        return;
    }

    public void setTestPssMode(boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        boolean z0;
        long $l0;
        java.lang.Throwable $r2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        z0 := @parameter0: boolean;

        entermonitor r0;

     label1:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        r0.<com.android.server.am.ActivityManagerService: boolean mTestPssMode> = z0;

     label2:
        if z0 == 0 goto label4;

     label3:
        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void requestPssAllProcsLocked(long,boolean,boolean)>($l0, 1, 1);

     label4:
        exitmonitor r0;

     label5:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label6:
        $r2 := @caughtexception;

     label7:
        exitmonitor r0;

     label8:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    void setTrackAllocationApp(android.content.pm.ApplicationInfo, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.StringBuilder r1;
        java.lang.String $r2, $r3, $r5, $r7, r10;
        boolean $z0;
        int $i0, $i1;
        java.lang.Throwable $r8;
        android.content.pm.ApplicationInfo r9;
        java.lang.SecurityException r11;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r9 := @parameter0: android.content.pm.ApplicationInfo;

        r10 := @parameter1: java.lang.String;

        entermonitor r0;

     label1:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r2 = "1";

        $r3 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String,java.lang.String)>("ro.debuggable", "0");

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label4;

        $i0 = r9.<android.content.pm.ApplicationInfo: int flags>;

        $i1 = $i0 & 2;

        if $i1 == 0 goto label3;

     label2:
        goto label4;

     label3:
        r11 = new java.lang.SecurityException;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Process not debuggable: ");

        $r5 = r9.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r11.<java.lang.SecurityException: void <init>(java.lang.String)>($r7);

        throw r11;

     label4:
        r0.<com.android.server.am.ActivityManagerService: java.lang.String mTrackAllocationApp> = r10;

        exitmonitor r0;

     label5:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label6:
        $r8 := @caughtexception;

     label7:
        exitmonitor r0;

     label8:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    final void setUidTempWhitelistStateLocked(int, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0;
        boolean z0;
        com.android.server.am.OomAdjuster $r1;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.OomAdjuster mOomAdjuster>;

        virtualinvoke $r1.<com.android.server.am.OomAdjuster: void setUidTempWhitelistStateLocked(int,boolean)>(i0, z0);

        return;
    }

    public void setUsageStatsManager(android.app.usage.UsageStatsManagerInternal)
    {
        com.android.server.am.ActivityManagerService r0;
        android.app.usage.UsageStatsManagerInternal r1;
        com.android.server.wm.ActivityTaskManagerService $r2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.app.usage.UsageStatsManagerInternal;

        r0.<com.android.server.am.ActivityManagerService: android.app.usage.UsageStatsManagerInternal mUsageStatsService> = r1;

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerService mActivityTaskManager>;

        virtualinvoke $r2.<com.android.server.wm.ActivityTaskManagerService: void setUsageStatsManager(android.app.usage.UsageStatsManagerInternal)>(r1);

        return;
    }

    public void setUserIsMonkey(boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        boolean z0;
        int i0;
        java.lang.StringBuilder r1;
        com.android.server.am.ActivityManagerService$PidMap $r2, r11;
        java.lang.String $r5;
        com.android.server.am.ActiveInstrumentation $r6, $r7;
        android.app.IUiAutomationConnection $r8;
        java.lang.Throwable $r9, $r10;
        com.android.server.am.ProcessRecord r12;
        java.lang.SecurityException r13, r14;

        r0 := @this: com.android.server.am.ActivityManagerService;

        z0 := @parameter0: boolean;

        entermonitor r0;

     label01:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        r11 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        entermonitor r11;

     label02:
        i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        r12 = virtualinvoke $r2.<com.android.server.am.ActivityManagerService$PidMap: com.android.server.am.ProcessRecord get(int)>(i0);

     label03:
        if r12 == null goto label08;

     label04:
        $r6 = virtualinvoke r12.<com.android.server.am.ProcessRecord: com.android.server.am.ActiveInstrumentation getActiveInstrumentation()>();

        if $r6 == null goto label07;

        $r7 = virtualinvoke r12.<com.android.server.am.ProcessRecord: com.android.server.am.ActiveInstrumentation getActiveInstrumentation()>();

        $r8 = $r7.<com.android.server.am.ActiveInstrumentation: android.app.IUiAutomationConnection mUiAutomationConnection>;

        if $r8 == null goto label07;

        exitmonitor r11;

     label05:
        r0.<com.android.server.am.ActivityManagerService: boolean mUserIsMonkey> = z0;

        exitmonitor r0;

     label06:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label07:
        r13 = new java.lang.SecurityException;

        specialinvoke r13.<java.lang.SecurityException: void <init>(java.lang.String)>("Only an instrumentation process with a UiAutomation can call setUserIsMonkey");

        throw r13;

     label08:
        r14 = new java.lang.SecurityException;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown process: ");

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r14.<java.lang.SecurityException: void <init>(java.lang.String)>($r5);

        throw r14;

     label09:
        $r9 := @caughtexception;

     label10:
        exitmonitor r11;

     label11:
        throw $r9;

     label12:
        $r10 := @caughtexception;

     label13:
        exitmonitor r0;

     label14:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r10;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label08 to label09 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
        catch java.lang.Throwable from label11 to label12 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public void setWindowManager(com.android.server.wm.WindowManagerService)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.Object $r1;
        com.android.server.wm.WindowManagerInternal $r2;
        com.android.server.wm.ActivityTaskManagerService $r3;
        java.lang.Throwable $r4;
        com.android.server.wm.WindowManagerService r5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r5 := @parameter0: com.android.server.wm.WindowManagerService;

        entermonitor r0;

     label1:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.WindowManagerService mWindowManager> = r5;

        $r1 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Lcom/android/server/wm/WindowManagerInternal;");

        $r2 = (com.android.server.wm.WindowManagerInternal) $r1;

        r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.WindowManagerInternal mWmInternal> = $r2;

        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerService mActivityTaskManager>;

        virtualinvoke $r3.<com.android.server.wm.ActivityTaskManagerService: void setWindowManager(com.android.server.wm.WindowManagerService)>(r5);

        exitmonitor r0;

     label2:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void showBootMessage(java.lang.CharSequence, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.CharSequence r1;
        boolean z0;
        int $i0, $i1;
        java.lang.SecurityException $r2;
        com.android.server.wm.WindowManagerService $r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.CharSequence;

        z0 := @parameter1: boolean;

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i1 = staticinvoke <android.os.Process: int myUid()>();

        if $i0 != $i1 goto label1;

        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.WindowManagerService mWindowManager>;

        virtualinvoke $r3.<com.android.server.wm.WindowManagerService: void showBootMessage(java.lang.CharSequence,boolean)>(r1, z0);

        return;

     label1:
        $r2 = new java.lang.SecurityException;

        specialinvoke $r2.<java.lang.SecurityException: void <init>()>();

        throw $r2;
    }

    public final void showSafeModeOverlay()
    {
        com.android.server.am.ActivityManagerService r0;
        android.view.View r1;
        android.content.Context $r3, $r7;
        android.view.LayoutInflater $r4;
        android.view.WindowManager$LayoutParams $r5;
        android.graphics.drawable.Drawable $r6;
        int $i0, $i1, $i2;
        java.lang.Object $r8;
        android.view.WindowManager $r9;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $r3 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r4 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>($r3);

        r1 = virtualinvoke $r4.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>(17367279, null);

        $r5 = new android.view.WindowManager$LayoutParams;

        specialinvoke $r5.<android.view.WindowManager$LayoutParams: void <init>()>();

        $r5.<android.view.WindowManager$LayoutParams: int type> = 2015;

        $r5.<android.view.WindowManager$LayoutParams: int width> = -2;

        $r5.<android.view.WindowManager$LayoutParams: int height> = -2;

        $r5.<android.view.WindowManager$LayoutParams: int gravity> = 8388691;

        $r6 = virtualinvoke r1.<android.view.View: android.graphics.drawable.Drawable getBackground()>();

        $i0 = virtualinvoke $r6.<android.graphics.drawable.Drawable: int getOpacity()>();

        $r5.<android.view.WindowManager$LayoutParams: int format> = $i0;

        $r5.<android.view.WindowManager$LayoutParams: int flags> = 24;

        $i1 = $r5.<android.view.WindowManager$LayoutParams: int privateFlags>;

        $i2 = $i1 | 16;

        $r5.<android.view.WindowManager$LayoutParams: int privateFlags> = $i2;

        $r7 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r8 = virtualinvoke $r7.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("window");

        $r9 = (android.view.WindowManager) $r8;

        interfaceinvoke $r9.<android.view.WindowManager: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>(r1, $r5);

        return;
    }

    public void showWaitingForDebugger(android.app.IApplicationThread, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        boolean z0;
        android.os.Message r1;
        android.os.Handler $r2;
        java.lang.Throwable $r3;
        android.app.IApplicationThread r4;
        com.android.server.am.ProcessRecord r5;
        byte b0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r4 := @parameter0: android.app.IApplicationThread;

        z0 := @parameter1: boolean;

        entermonitor r0;

     label01:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

     label02:
        if r4 == null goto label05;

     label03:
        r5 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord getRecordForAppLocked(android.app.IApplicationThread)>(r4);

     label04:
        goto label06;

     label05:
        r5 = null;

     label06:
        if r5 != null goto label09;

     label07:
        exitmonitor r0;

     label08:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label09:
        r1 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        r1.<android.os.Message: int what> = 6;

        r1.<android.os.Message: java.lang.Object obj> = r5;

     label10:
        if z0 == 0 goto label11;

        b0 = 1;

        goto label12;

     label11:
        b0 = 0;

     label12:
        r1.<android.os.Message: int arg1> = b0;

        $r2 = r0.<com.android.server.am.ActivityManagerService: android.os.Handler mUiHandler>;

        virtualinvoke $r2.<android.os.Handler: boolean sendMessage(android.os.Message)>(r1);

     label13:
        exitmonitor r0;

     label14:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label15:
        $r3 := @caughtexception;

     label16:
        exitmonitor r0;

     label17:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r3;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Throwable from label07 to label08 with label15;
        catch java.lang.Throwable from label09 to label10 with label15;
        catch java.lang.Throwable from label12 to label13 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label16 to label17 with label15;
    }

    public boolean shutdown(int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, $i1;
        boolean z0, $z1;
        java.lang.SecurityException $r1;
        com.android.server.wm.ActivityTaskManagerInternal $r2;
        com.android.server.appop.AppOpsService $r3;
        com.android.server.am.BatteryStatsService $r4;
        com.android.server.am.ProcessStatsService $r5;
        java.lang.Throwable $r6;
        android.app.usage.UsageStatsManagerInternal r7;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.SHUTDOWN");

        if $i1 != 0 goto label7;

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerInternal mAtmInternal>;

        $z1 = r0.<com.android.server.am.ActivityManagerService: boolean mBooted>;

        z0 = virtualinvoke $r2.<com.android.server.wm.ActivityTaskManagerInternal: boolean shuttingDown(boolean,int)>($z1, i0);

        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.appop.AppOpsService mAppOpsService>;

        virtualinvoke $r3.<com.android.server.appop.AppOpsService: void shutdown()>();

        r7 = r0.<com.android.server.am.ActivityManagerService: android.app.usage.UsageStatsManagerInternal mUsageStatsService>;

        if r7 == null goto label1;

        virtualinvoke r7.<android.app.usage.UsageStatsManagerInternal: void prepareShutdown()>();

     label1:
        $r4 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        virtualinvoke $r4.<com.android.server.am.BatteryStatsService: void shutdown()>();

        entermonitor r0;

     label2:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r5 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        virtualinvoke $r5.<com.android.server.am.ProcessStatsService: void shutdownLocked()>();

        exitmonitor r0;

     label3:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return z0;

     label4:
        $r6 := @caughtexception;

     label5:
        exitmonitor r0;

     label6:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r6;

     label7:
        $r1 = new java.lang.SecurityException;

        specialinvoke $r1.<java.lang.SecurityException: void <init>(java.lang.String)>("Requires permission android.permission.SHUTDOWN");

        throw $r1;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void signalPersistentProcesses(int) throws android.os.RemoteException
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, $i1, $i2, $i3, i4;
        java.lang.SecurityException $r1, r10;
        com.android.server.am.ProcessList $r2, $r4;
        java.util.ArrayList $r3, $r5;
        java.lang.Object $r6;
        android.app.IApplicationThread $r7;
        boolean $z0;
        java.lang.Throwable $r8;
        com.android.server.am.ProcessRecord r9;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        if i0 != 10 goto label11;

        entermonitor r0;

     label01:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $i1 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.SIGNAL_PERSISTENT_PROCESSES");

        if $i1 != 0 goto label07;

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r3 = $r2.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        $i2 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i4 = $i2 - 1;

     label02:
        if i4 < 0 goto label05;

     label03:
        $r4 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r5 = $r4.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        r9 = (com.android.server.am.ProcessRecord) $r6;

        $r7 = r9.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r7 == null goto label04;

        $z0 = virtualinvoke r9.<com.android.server.am.ProcessRecord: boolean isPersistent()>();

        if $z0 == 0 goto label04;

        $i3 = r9.<com.android.server.am.ProcessRecord: int pid>;

        staticinvoke <android.os.Process: void sendSignal(int,int)>($i3, i0);

     label04:
        i4 = i4 + -1;

        goto label02;

     label05:
        exitmonitor r0;

     label06:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label07:
        r10 = new java.lang.SecurityException;

        specialinvoke r10.<java.lang.SecurityException: void <init>(java.lang.String)>("Requires permission android.permission.SIGNAL_PERSISTENT_PROCESSES");

        throw r10;

     label08:
        $r8 := @caughtexception;

     label09:
        exitmonitor r0;

     label10:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r8;

     label11:
        $r1 = new java.lang.SecurityException;

        specialinvoke $r1.<java.lang.SecurityException: void <init>(java.lang.String)>("Only SIGNAL_USR1 is allowed");

        throw $r1;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label07 to label08 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    void skipCurrentReceiverLocked(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1;
        com.android.server.am.BroadcastQueue[] r2;
        int i0, i1;
        com.android.server.am.BroadcastQueue $r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastQueue[] mBroadcastQueues>;

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r3 = r2[i1];

        virtualinvoke $r3.<com.android.server.am.BroadcastQueue: void skipCurrentReceiverLocked(com.android.server.am.ProcessRecord)>(r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    void skipPendingBroadcastLocked(int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, i3;
        com.android.server.am.BroadcastQueue[] r1;
        com.android.server.am.BroadcastQueue $r2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", "Unattached app died before broadcast acknowledged, skipping");

        r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastQueue[] mBroadcastQueues>;

        i1 = lengthof r1;

        i3 = 0;

     label1:
        if i3 >= i1 goto label2;

        $r2 = r1[i3];

        virtualinvoke $r2.<com.android.server.am.BroadcastQueue: void skipPendingBroadcastLocked(int)>(i0);

        i3 = i3 + 1;

        goto label1;

     label2:
        return;
    }

    public int startActivity(android.app.IApplicationThread, java.lang.String, android.content.Intent, java.lang.String, android.os.IBinder, java.lang.String, int, int, android.app.ProfilerInfo, android.os.Bundle)
    {
        com.android.server.am.ActivityManagerService r0;
        android.app.IApplicationThread r1;
        java.lang.String r2, r4, r6;
        android.content.Intent r3;
        android.os.IBinder r5;
        int i0, i1, $i2;
        android.app.ProfilerInfo r7;
        android.os.Bundle r8;
        com.android.server.wm.ActivityTaskManagerService $r9;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.app.IApplicationThread;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.content.Intent;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: android.os.IBinder;

        r6 := @parameter5: java.lang.String;

        i0 := @parameter6: int;

        i1 := @parameter7: int;

        r7 := @parameter8: android.app.ProfilerInfo;

        r8 := @parameter9: android.os.Bundle;

        $r9 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerService mActivityTaskManager>;

        $i2 = virtualinvoke $r9.<com.android.server.wm.ActivityTaskManagerService: int startActivity(android.app.IApplicationThread,java.lang.String,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle)>(r1, r2, null, r3, r4, r5, r6, i0, i1, r7, r8);

        return $i2;
    }

    android.app.WaitResult startActivityAndWait(android.app.IApplicationThread, java.lang.String, java.lang.String, android.content.Intent, java.lang.String, android.os.IBinder, java.lang.String, int, int, android.app.ProfilerInfo, android.os.Bundle, int)
    {
        com.android.server.am.ActivityManagerService r0;
        android.app.IApplicationThread r1;
        java.lang.String r2, r3, r5, r7;
        android.content.Intent r4;
        android.os.IBinder r6;
        int i0, i1, i2;
        android.app.ProfilerInfo r8;
        android.os.Bundle r9;
        com.android.server.wm.ActivityTaskManagerService $r10;
        android.app.WaitResult $r11;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.app.IApplicationThread;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.content.Intent;

        r5 := @parameter4: java.lang.String;

        r6 := @parameter5: android.os.IBinder;

        r7 := @parameter6: java.lang.String;

        i0 := @parameter7: int;

        i1 := @parameter8: int;

        r8 := @parameter9: android.app.ProfilerInfo;

        r9 := @parameter10: android.os.Bundle;

        i2 := @parameter11: int;

        $r10 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerService mActivityTaskManager>;

        $r11 = virtualinvoke $r10.<com.android.server.wm.ActivityTaskManagerService: android.app.WaitResult startActivityAndWait(android.app.IApplicationThread,java.lang.String,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle,int)>(r1, r2, r3, r4, r5, r6, r7, i0, i1, r8, r9, i2);

        return $r11;
    }

    public final int startActivityAsUser(android.app.IApplicationThread, java.lang.String, android.content.Intent, java.lang.String, android.os.IBinder, java.lang.String, int, int, android.app.ProfilerInfo, android.os.Bundle, int)
    {
        com.android.server.am.ActivityManagerService r0;
        android.app.IApplicationThread r1;
        java.lang.String r2, r4, r6;
        android.content.Intent r3;
        android.os.IBinder r5;
        int i0, i1, i2, $i3;
        android.app.ProfilerInfo r7;
        android.os.Bundle r8;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.app.IApplicationThread;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.content.Intent;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: android.os.IBinder;

        r6 := @parameter5: java.lang.String;

        i0 := @parameter6: int;

        i1 := @parameter7: int;

        r7 := @parameter8: android.app.ProfilerInfo;

        r8 := @parameter9: android.os.Bundle;

        i2 := @parameter10: int;

        $i3 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int startActivityAsUserWithFeature(android.app.IApplicationThread,java.lang.String,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle,int)>(r1, r2, null, r3, r4, r5, r6, i0, i1, r7, r8, i2);

        return $i3;
    }

    public final int startActivityAsUserWithFeature(android.app.IApplicationThread, java.lang.String, java.lang.String, android.content.Intent, java.lang.String, android.os.IBinder, java.lang.String, int, int, android.app.ProfilerInfo, android.os.Bundle, int)
    {
        com.android.server.am.ActivityManagerService r0;
        android.app.IApplicationThread r1;
        java.lang.String r2, r3, r5, r7;
        android.content.Intent r4;
        android.os.IBinder r6;
        int i0, i1, i2, $i3;
        android.app.ProfilerInfo r8;
        android.os.Bundle r9;
        com.android.server.wm.ActivityTaskManagerService $r10;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.app.IApplicationThread;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.content.Intent;

        r5 := @parameter4: java.lang.String;

        r6 := @parameter5: android.os.IBinder;

        r7 := @parameter6: java.lang.String;

        i0 := @parameter7: int;

        i1 := @parameter8: int;

        r8 := @parameter9: android.app.ProfilerInfo;

        r9 := @parameter10: android.os.Bundle;

        i2 := @parameter11: int;

        $r10 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerService mActivityTaskManager>;

        $i3 = virtualinvoke $r10.<com.android.server.wm.ActivityTaskManagerService: int startActivityAsUser(android.app.IApplicationThread,java.lang.String,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle,int)>(r1, r2, r3, r4, r5, r6, r7, i0, i1, r8, r9, i2);

        return $i3;
    }

    public final int startActivityFromRecents(int, android.os.Bundle)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, $i1;
        android.os.Bundle r1;
        com.android.server.wm.ActivityTaskManagerService $r2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Bundle;

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerService mActivityTaskManager>;

        $i1 = virtualinvoke $r2.<com.android.server.wm.ActivityTaskManagerService: int startActivityFromRecents(int,android.os.Bundle)>(i0, r1);

        return $i1;
    }

    public int startActivityWithFeature(android.app.IApplicationThread, java.lang.String, java.lang.String, android.content.Intent, java.lang.String, android.os.IBinder, java.lang.String, int, int, android.app.ProfilerInfo, android.os.Bundle)
    {
        com.android.server.am.ActivityManagerService r0;
        android.app.IApplicationThread r1;
        java.lang.String r2, r3, r5, r7;
        android.content.Intent r4;
        android.os.IBinder r6;
        int i0, i1, $i2;
        android.app.ProfilerInfo r8;
        android.os.Bundle r9;
        com.android.server.wm.ActivityTaskManagerService $r10;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.app.IApplicationThread;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.content.Intent;

        r5 := @parameter4: java.lang.String;

        r6 := @parameter5: android.os.IBinder;

        r7 := @parameter6: java.lang.String;

        i0 := @parameter7: int;

        i1 := @parameter8: int;

        r8 := @parameter9: android.app.ProfilerInfo;

        r9 := @parameter10: android.os.Bundle;

        $r10 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerService mActivityTaskManager>;

        $i2 = virtualinvoke $r10.<com.android.server.wm.ActivityTaskManagerService: int startActivity(android.app.IApplicationThread,java.lang.String,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle)>(r1, r2, r3, r4, r5, r6, r7, i0, i1, r8, r9);

        return $i2;
    }

    com.android.server.am.ActivityManagerService$Association startAssociationLocked(int, java.lang.String, int, int, long, android.content.ComponentName, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.String r1, r3;
        android.content.ComponentName r2;
        com.android.server.am.ActivityManagerService$Association r4, $r10, r24;
        boolean $z0;
        android.util.SparseArray $r5, $r13, $r16, r18, r20;
        java.lang.Object $r6, $r7, $r8, $r9;
        android.util.ArrayMap $r12, $r15, r17, r21, r23;
        long l8, l9;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        l8 := @parameter4: long;

        r2 := @parameter5: android.content.ComponentName;

        r3 := @parameter6: java.lang.String;

        $z0 = r0.<com.android.server.am.ActivityManagerService: boolean mTrackingAssociations>;

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r5 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mAssociations>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object get(int)>(i2);

        r17 = (android.util.ArrayMap) $r6;

        if r17 != null goto label2;

        $r15 = new android.util.ArrayMap;

        specialinvoke $r15.<android.util.ArrayMap: void <init>()>();

        r17 = $r15;

        $r16 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mAssociations>;

        virtualinvoke $r16.<android.util.SparseArray: void put(int,java.lang.Object)>(i2, $r15);

        goto label2;

     label2:
        $r7 = virtualinvoke r17.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r2);

        r18 = (android.util.SparseArray) $r7;

        if r18 != null goto label3;

        $r13 = new android.util.SparseArray;

        specialinvoke $r13.<android.util.SparseArray: void <init>()>();

        virtualinvoke r17.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r13);

        r20 = $r13;

        goto label4;

     label3:
        r20 = r18;

     label4:
        $r8 = virtualinvoke r20.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r21 = (android.util.ArrayMap) $r8;

        if r21 != null goto label5;

        $r12 = new android.util.ArrayMap;

        specialinvoke $r12.<android.util.ArrayMap: void <init>()>();

        virtualinvoke r20.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, $r12);

        r23 = $r12;

        goto label6;

     label5:
        r23 = r21;

     label6:
        $r9 = virtualinvoke r23.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (com.android.server.am.ActivityManagerService$Association) $r9;

        r24 = r4;

        if r4 != null goto label7;

        $r10 = new com.android.server.am.ActivityManagerService$Association;

        specialinvoke $r10.<com.android.server.am.ActivityManagerService$Association: void <init>(int,java.lang.String,int,android.content.ComponentName,java.lang.String)>(i0, r1, i2, r2, r3);

        r24 = $r10;

        virtualinvoke r23.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r10);

     label7:
        $i3 = r24.<com.android.server.am.ActivityManagerService$Association: int mCount>;

        $i4 = $i3 + 1;

        r24.<com.android.server.am.ActivityManagerService$Association: int mCount> = $i4;

        $i5 = r24.<com.android.server.am.ActivityManagerService$Association: int mNesting>;

        $i6 = $i5 + 1;

        r24.<com.android.server.am.ActivityManagerService$Association: int mNesting> = $i6;

        $i7 = r24.<com.android.server.am.ActivityManagerService$Association: int mNesting>;

        if $i7 != 1 goto label8;

        l9 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r24.<com.android.server.am.ActivityManagerService$Association: long mLastStateUptime> = l9;

        r24.<com.android.server.am.ActivityManagerService$Association: long mStartTime> = l9;

        r24.<com.android.server.am.ActivityManagerService$Association: int mLastState> = i1;

        goto label8;

     label8:
        return r24;
    }

    public boolean startBinderTracking() throws android.os.RemoteException
    {
        com.android.server.am.ActivityManagerService r0;
        boolean z0;
        int $i0, $i1, i3;
        com.android.server.am.ProcessList $r1, $r3;
        java.util.ArrayList $r2, $r4;
        java.lang.Object $r5;
        android.app.IApplicationThread $r6;
        java.lang.Throwable $r7;
        android.os.RemoteException $r8;
        com.android.server.am.ProcessRecord r9;
        java.lang.SecurityException r11;

        r0 := @this: com.android.server.am.ActivityManagerService;

        entermonitor r0;

     label01:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        r0.<com.android.server.am.ActivityManagerService: boolean mBinderTransactionTrackingEnabled> = 1;

        $i0 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.SET_ACTIVITY_WATCHER");

        if $i0 != 0 goto label12;

     label02:
        i3 = 0;

     label03:
        $r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r2 = $r1.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        $i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if i3 >= $i1 goto label10;

        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r4 = $r3.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r9 = (com.android.server.am.ProcessRecord) $r5;

        z0 = specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean processSanityChecksLocked(com.android.server.am.ProcessRecord)>(r9);

     label04:
        if z0 != 0 goto label05;

        goto label09;

     label05:
        $r6 = r9.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        interfaceinvoke $r6.<android.app.IApplicationThread: void startBinderTracking()>();

     label06:
        goto label09;

     label07:
        $r8 := @caughtexception;

     label08:
        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("ActivityManager", "Process disappared");

     label09:
        i3 = i3 + 1;

        goto label03;

     label10:
        exitmonitor r0;

     label11:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return 1;

     label12:
        r11 = new java.lang.SecurityException;

        specialinvoke r11.<java.lang.SecurityException: void <init>(java.lang.String)>("Requires permission android.permission.SET_ACTIVITY_WATCHER");

        throw r11;

     label13:
        $r7 := @caughtexception;

     label14:
        exitmonitor r0;

     label15:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch android.os.RemoteException from label05 to label06 with label07;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label10 to label11 with label13;
        catch java.lang.Throwable from label12 to label13 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
    }

    public void startConfirmDeviceCredentialIntent(android.content.Intent, android.os.Bundle)
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.Intent r1;
        android.os.Bundle r2;
        com.android.server.wm.ActivityTaskManagerInternal $r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: android.os.Bundle;

        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerInternal mAtmInternal>;

        virtualinvoke $r3.<com.android.server.wm.ActivityTaskManagerInternal: void startConfirmDeviceCredentialIntent(android.content.Intent,android.os.Bundle)>(r1, r2);

        return;
    }

    public void startDelegateShellPermissionIdentity(int, java.lang.String[])
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, $i2, $i3, $i4, $i5, i6;
        com.android.server.am.ActivityManagerService$ShellDelegate r1, r24;
        com.android.server.appop.AppOpsService $r2, $r6, $r15, $r17, $r19;
        android.app.AppOpsManagerInternal$CheckOpsDelegate $r3, $r7, $r18, $r20;
        com.android.server.pm.permission.PermissionManagerServiceInternal $r4, $r16;
        android.permission.PermissionManagerInternal$CheckPermissionDelegate $r5;
        java.util.ArrayList $r8, $r9;
        java.lang.Object $r10;
        android.content.pm.ApplicationInfo $r11, $r13;
        android.app.IUiAutomationConnection $r12;
        java.lang.String $r14;
        boolean $z0;
        java.lang.SecurityException $r21, r25, r28;
        java.lang.Throwable $r22;
        java.lang.String[] r23;
        java.lang.IllegalStateException r26, r29;
        com.android.server.am.ActiveInstrumentation r27;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        r23 := @parameter1: java.lang.String[];

        $i2 = staticinvoke <android.os.UserHandle: int getCallingAppId()>();

        if $i2 == 2000 goto label02;

        $i5 = staticinvoke <android.os.UserHandle: int getCallingAppId()>();

        if $i5 != 0 goto label01;

        goto label02;

     label01:
        $r21 = new java.lang.SecurityException;

        specialinvoke $r21.<java.lang.SecurityException: void <init>(java.lang.String)>("Only the shell can delegate its permissions");

        throw $r21;

     label02:
        entermonitor r0;

     label03:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.appop.AppOpsService mAppOpsService>;

        $r3 = virtualinvoke $r2.<com.android.server.appop.AppOpsService: android.app.AppOpsManagerInternal$CheckOpsDelegate getAppOpsServiceDelegate()>();

        $r4 = specialinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.pm.permission.PermissionManagerServiceInternal getPermissionManagerInternalLocked()>();

        $r5 = virtualinvoke $r4.<com.android.server.pm.permission.PermissionManagerServiceInternal: android.permission.PermissionManagerInternal$CheckPermissionDelegate getCheckPermissionDelegate()>();

        if $r3 != $r5 goto label17;

        $r6 = r0.<com.android.server.am.ActivityManagerService: com.android.server.appop.AppOpsService mAppOpsService>;

        $r7 = virtualinvoke $r6.<com.android.server.appop.AppOpsService: android.app.AppOpsManagerInternal$CheckOpsDelegate getAppOpsServiceDelegate()>();

        if $r7 == null goto label07;

        $r17 = r0.<com.android.server.am.ActivityManagerService: com.android.server.appop.AppOpsService mAppOpsService>;

        $r18 = virtualinvoke $r17.<com.android.server.appop.AppOpsService: android.app.AppOpsManagerInternal$CheckOpsDelegate getAppOpsServiceDelegate()>();

        $z0 = $r18 instanceof com.android.server.am.ActivityManagerService$ShellDelegate;

        if $z0 == 0 goto label06;

        $r19 = r0.<com.android.server.am.ActivityManagerService: com.android.server.appop.AppOpsService mAppOpsService>;

        $r20 = virtualinvoke $r19.<com.android.server.appop.AppOpsService: android.app.AppOpsManagerInternal$CheckOpsDelegate getAppOpsServiceDelegate()>();

        r24 = (com.android.server.am.ActivityManagerService$ShellDelegate) $r20;

        $i4 = virtualinvoke r24.<com.android.server.am.ActivityManagerService$ShellDelegate: int getDelegateUid()>();

        if $i4 != i0 goto label05;

        virtualinvoke r24.<com.android.server.am.ActivityManagerService$ShellDelegate: void setPermissions(java.lang.String[])>(r23);

        exitmonitor r0;

     label04:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label05:
        r25 = new java.lang.SecurityException;

        specialinvoke r25.<java.lang.SecurityException: void <init>(java.lang.String)>("Shell can delegate permissions only to one instrumentation at a time");

        throw r25;

     label06:
        r26 = new java.lang.IllegalStateException;

        specialinvoke r26.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Bad shell delegate state");

        throw r26;

     label07:
        $r8 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mActiveInstrumentation>;

        i1 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

     label08:
        i6 = 0;

     label09:
        if i6 >= i1 goto label15;

     label10:
        $r9 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mActiveInstrumentation>;

        $r10 = virtualinvoke $r9.<java.util.ArrayList: java.lang.Object get(int)>(i6);

        r27 = (com.android.server.am.ActiveInstrumentation) $r10;

        $r11 = r27.<com.android.server.am.ActiveInstrumentation: android.content.pm.ApplicationInfo mTargetInfo>;

        $i3 = $r11.<android.content.pm.ApplicationInfo: int uid>;

        if $i3 == i0 goto label12;

     label11:
        i6 = i6 + 1;

        goto label09;

     label12:
        $r12 = r27.<com.android.server.am.ActiveInstrumentation: android.app.IUiAutomationConnection mUiAutomationConnection>;

        if $r12 == null goto label14;

        r1 = new com.android.server.am.ActivityManagerService$ShellDelegate;

        $r13 = r27.<com.android.server.am.ActiveInstrumentation: android.content.pm.ApplicationInfo mTargetInfo>;

        $r14 = $r13.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        specialinvoke r1.<com.android.server.am.ActivityManagerService$ShellDelegate: void <init>(com.android.server.am.ActivityManagerService,java.lang.String,int,java.lang.String[])>(r0, $r14, i0, r23);

        $r15 = r0.<com.android.server.am.ActivityManagerService: com.android.server.appop.AppOpsService mAppOpsService>;

        virtualinvoke $r15.<com.android.server.appop.AppOpsService: void setAppOpsServiceDelegate(android.app.AppOpsManagerInternal$CheckOpsDelegate)>(r1);

        $r16 = specialinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.pm.permission.PermissionManagerServiceInternal getPermissionManagerInternalLocked()>();

        virtualinvoke $r16.<com.android.server.pm.permission.PermissionManagerServiceInternal: void setCheckPermissionDelegate(android.permission.PermissionManagerInternal$CheckPermissionDelegate)>(r1);

        exitmonitor r0;

     label13:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label14:
        r28 = new java.lang.SecurityException;

        specialinvoke r28.<java.lang.SecurityException: void <init>(java.lang.String)>("Shell can delegate its permissions only to an instrumentation started from the shell");

        throw r28;

     label15:
        exitmonitor r0;

     label16:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label17:
        r29 = new java.lang.IllegalStateException;

        specialinvoke r29.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Bad shell delegate state");

        throw r29;

     label18:
        $r22 := @caughtexception;

     label19:
        exitmonitor r0;

     label20:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r22;

        catch java.lang.Throwable from label03 to label04 with label18;
        catch java.lang.Throwable from label05 to label06 with label18;
        catch java.lang.Throwable from label06 to label07 with label18;
        catch java.lang.Throwable from label07 to label08 with label18;
        catch java.lang.Throwable from label10 to label11 with label18;
        catch java.lang.Throwable from label12 to label13 with label18;
        catch java.lang.Throwable from label14 to label15 with label18;
        catch java.lang.Throwable from label15 to label16 with label18;
        catch java.lang.Throwable from label17 to label18 with label18;
        catch java.lang.Throwable from label19 to label20 with label18;
    }

    public boolean startInstrumentation(android.content.ComponentName, java.lang.String, int, android.os.Bundle, android.app.IInstrumentationWatcher, android.app.IUiAutomationConnection, int, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, i2, i3, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, i14;
        android.os.Bundle r1;
        android.app.IInstrumentationWatcher r2;
        android.app.IUiAutomationConnection r3;
        java.lang.String r4, $r9, $r12, $r13, $r14, $r15, $r20, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, r43, r54, r57, r58, r59, r62;
        long l4;
        com.android.server.am.UserController $r5;
        android.content.Context $r6, $r10;
        android.content.pm.PackageManager $r7, $r11;
        android.content.pm.IPackageManager $r8;
        java.lang.String[] $r16, $r17, $r23, $r24;
        boolean $z0, $z1, $z2, z3, z4, z5, z6, z7, $z8, z9;
        java.util.ArrayList $r18, $r19, $r22;
        com.android.server.appop.AppOpsService $r21;
        java.lang.IllegalArgumentException $r33;
        android.content.pm.PackageManager$NameNotFoundException $r34;
        java.lang.Throwable $r35, $r36, $r37, $r38, $r39, $r40, r49;
        android.os.RemoteException $r41;
        android.content.ComponentName r42;
        android.content.pm.InstrumentationInfo r44, r45, r46;
        android.content.pm.ApplicationInfo r47, r48;
        java.lang.StringBuilder r50, r51, r52, r53;
        java.lang.SecurityException r55;
        com.android.server.am.ActiveInstrumentation r56;
        android.app.usage.UsageStatsManagerInternal r60, r61;
        com.android.server.am.ProcessRecord r63;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r42 := @parameter0: android.content.ComponentName;

        r43 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r1 := @parameter3: android.os.Bundle;

        r2 := @parameter4: android.app.IInstrumentationWatcher;

        r3 := @parameter5: android.app.IUiAutomationConnection;

        i13 := @parameter6: int;

        r4 := @parameter7: java.lang.String;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("startInstrumentation");

        i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i2 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r5 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.UserController mUserController>;

        i3 = virtualinvoke $r5.<com.android.server.am.UserController: int handleIncomingUser(int,int,int,boolean,int,java.lang.String,java.lang.String)>(i2, i1, i13, 0, 2, "startInstrumentation", null);

        if r1 == null goto label02;

        $z2 = virtualinvoke r1.<android.os.Bundle: boolean hasFileDescriptors()>();

        if $z2 != 0 goto label01;

        goto label02;

     label01:
        $r33 = new java.lang.IllegalArgumentException;

        specialinvoke $r33.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("File descriptors passed in Bundle");

        throw $r33;

     label02:
        entermonitor r0;

     label03:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

     label04:
        r44 = null;

        r45 = null;

     label05:
        $r6 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r7 = virtualinvoke $r6.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r46 = virtualinvoke $r7.<android.content.pm.PackageManager: android.content.pm.InstrumentationInfo getInstrumentationInfo(android.content.ComponentName,int)>(r42, 1024);

     label06:
        r45 = r46;

        r44 = r46;

     label07:
        $r8 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        $r9 = r46.<android.content.pm.InstrumentationInfo: java.lang.String targetPackage>;

        r47 = interfaceinvoke $r8.<android.content.pm.IPackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int,int)>($r9, 1024, i3);

     label08:
        r48 = r47;

        r44 = r46;

        goto label12;

     label09:
        $r37 := @caughtexception;

        r49 = $r37;

        goto label65;

     label10:
        $r41 := @caughtexception;

        r44 = r45;

        r48 = null;

        goto label12;

     label11:
        $r34 := @caughtexception;

        r48 = null;

     label12:
        if r44 != null goto label15;

     label13:
        r50 = new java.lang.StringBuilder;

        specialinvoke r50.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to find instrumentation info for: ");

        virtualinvoke r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r42);

        $r32 = virtualinvoke r50.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void reportStartInstrumentationFailureLocked(android.app.IInstrumentationWatcher,android.content.ComponentName,java.lang.String)>(r2, r42, $r32);

        exitmonitor r0;

     label14:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return 0;

     label15:
        if r48 != null goto label18;

     label16:
        r51 = new java.lang.StringBuilder;

        specialinvoke r51.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to find instrumentation target package: ");

        $r30 = r44.<android.content.pm.InstrumentationInfo: java.lang.String targetPackage>;

        virtualinvoke r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r31 = virtualinvoke r51.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void reportStartInstrumentationFailureLocked(android.app.IInstrumentationWatcher,android.content.ComponentName,java.lang.String)>(r2, r42, $r31);

        exitmonitor r0;

     label17:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return 0;

     label18:
        z3 = virtualinvoke r48.<android.content.pm.ApplicationInfo: boolean hasCode()>();

     label19:
        if z3 != 0 goto label22;

     label20:
        r52 = new java.lang.StringBuilder;

        specialinvoke r52.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Instrumentation target has no code: ");

        $r28 = r44.<android.content.pm.InstrumentationInfo: java.lang.String targetPackage>;

        virtualinvoke r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r29 = virtualinvoke r52.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void reportStartInstrumentationFailureLocked(android.app.IInstrumentationWatcher,android.content.ComponentName,java.lang.String)>(r2, r42, $r29);

        exitmonitor r0;

     label21:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return 0;

     label22:
        $r10 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r11 = virtualinvoke $r10.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r13 = r44.<android.content.pm.InstrumentationInfo: java.lang.String targetPackage>;

        $r12 = r44.<android.content.pm.InstrumentationInfo: java.lang.String packageName>;

        i14 = virtualinvoke $r11.<android.content.pm.PackageManager: int checkSignatures(java.lang.String,java.lang.String)>($r13, $r12);

     label23:
        if i14 >= 0 goto label25;

        if i14 != -1 goto label24;

        goto label25;

     label24:
        r53 = new java.lang.StringBuilder;

        specialinvoke r53.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: starting instrumentation ");

        virtualinvoke r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r42);

        virtualinvoke r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from pid=");

        $i11 = staticinvoke <android.os.Binder: int getCallingPid()>();

        virtualinvoke r53.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        virtualinvoke r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i12 = staticinvoke <android.os.Binder: int getCallingPid()>();

        virtualinvoke r53.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12);

        virtualinvoke r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not allowed because package ");

        $r26 = r44.<android.content.pm.InstrumentationInfo: java.lang.String packageName>;

        virtualinvoke r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        virtualinvoke r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not have a signature matching the target ");

        $r27 = r44.<android.content.pm.InstrumentationInfo: java.lang.String targetPackage>;

        virtualinvoke r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        r54 = virtualinvoke r53.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void reportStartInstrumentationFailureLocked(android.app.IInstrumentationWatcher,android.content.ComponentName,java.lang.String)>(r2, r42, r54);

        r55 = new java.lang.SecurityException;

        specialinvoke r55.<java.lang.SecurityException: void <init>(java.lang.String)>(r54);

        throw r55;

     label25:
        r56 = new com.android.server.am.ActiveInstrumentation;

        specialinvoke r56.<com.android.server.am.ActiveInstrumentation: void <init>(com.android.server.am.ActivityManagerService)>(r0);

        r56.<com.android.server.am.ActiveInstrumentation: android.content.ComponentName mClass> = r42;

        r57 = r48.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        r58 = r44.<android.content.pm.InstrumentationInfo: java.lang.String targetProcesses>;

     label26:
        if r58 != null goto label29;

     label27:
        $r24 = newarray (java.lang.String)[1];

        $r25 = r48.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        $r24[0] = $r25;

        r56.<com.android.server.am.ActiveInstrumentation: java.lang.String[] mTargetProcesses> = $r24;

     label28:
        goto label32;

     label29:
        $r14 = r44.<android.content.pm.InstrumentationInfo: java.lang.String targetProcesses>;

        z4 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>("*");

     label30:
        if z4 == 0 goto label33;

     label31:
        $r23 = newarray (java.lang.String)[0];

        r56.<com.android.server.am.ActiveInstrumentation: java.lang.String[] mTargetProcesses> = $r23;

     label32:
        goto label34;

     label33:
        $r15 = r44.<android.content.pm.InstrumentationInfo: java.lang.String targetProcesses>;

        $r16 = virtualinvoke $r15.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        r56.<com.android.server.am.ActiveInstrumentation: java.lang.String[] mTargetProcesses> = $r16;

        $r17 = r56.<com.android.server.am.ActiveInstrumentation: java.lang.String[] mTargetProcesses>;

        r57 = $r17[0];

     label34:
        r56.<com.android.server.am.ActiveInstrumentation: android.content.pm.ApplicationInfo mTargetInfo> = r48;

        r56.<com.android.server.am.ActiveInstrumentation: java.lang.String mProfileFile> = r43;

        r56.<com.android.server.am.ActiveInstrumentation: android.os.Bundle mArguments> = r1;

        r56.<com.android.server.am.ActiveInstrumentation: android.app.IInstrumentationWatcher mWatcher> = r2;

        r56.<com.android.server.am.ActiveInstrumentation: android.app.IUiAutomationConnection mUiAutomationConnection> = r3;

        r56.<com.android.server.am.ActiveInstrumentation: android.content.ComponentName mResultClass> = r42;

        $i5 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkPermission(java.lang.String,int,int)>("android.permission.START_ACTIVITIES_FROM_BACKGROUND", i2, i1);

        if $i5 != 0 goto label36;

     label35:
        z5 = 1;

        goto label37;

     label36:
        z5 = 0;

     label37:
        r56.<com.android.server.am.ActiveInstrumentation: boolean mHasBackgroundActivityStartsPermission> = z5;

        $z0 = virtualinvoke r48.<android.content.pm.ApplicationInfo: boolean usesNonSdkApi()>();

        if $z0 != 0 goto label40;

     label38:
        $i10 = i0 & 1;

        if $i10 == 0 goto label39;

        goto label40;

     label39:
        z6 = 0;

        goto label41;

     label40:
        z6 = 1;

     label41:
        if z6 != 0 goto label43;

        $i9 = i0 & 4;

        if $i9 == 0 goto label42;

        goto label43;

     label42:
        z7 = 0;

        goto label44;

     label43:
        z7 = 1;

     label44:
        if z6 != 0 goto label45;

        if z7 == 0 goto label46;

     label45:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.DISABLE_HIDDEN_API_CHECKS", "disable hidden API checks");

     label46:
        $z8 = specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean isCallerShell()>();

        if $z8 == 0 goto label48;

     label47:
        $i8 = i0 & 2;

        if $i8 == 0 goto label48;

        z9 = 1;

        goto label49;

     label48:
        z9 = 0;

     label49:
        l4 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        r59 = r44.<android.content.pm.InstrumentationInfo: java.lang.String targetPackage>;

     label50:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean forceStopPackageLocked(java.lang.String,int,boolean,boolean,boolean,boolean,boolean,int,java.lang.String)>(r59, -1, 1, 0, 1, 1, 0, i3, "start instr");

        r60 = r0.<com.android.server.am.ActivityManagerService: android.app.usage.UsageStatsManagerInternal mUsageStatsService>;

     label51:
        if r60 == null goto label57;

     label52:
        r61 = r0.<com.android.server.am.ActivityManagerService: android.app.usage.UsageStatsManagerInternal mUsageStatsService>;

        r62 = r44.<android.content.pm.InstrumentationInfo: java.lang.String targetPackage>;

     label53:
        virtualinvoke r61.<android.app.usage.UsageStatsManagerInternal: void reportEvent(java.lang.String,int,int)>(r62, i3, 6);

     label54:
        goto label57;

     label55:
        $r35 := @caughtexception;

        r49 = $r35;

        goto label65;

     label56:
        $r38 := @caughtexception;

        r49 = $r38;

        goto label65;

     label57:
        r63 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord addAppLocked(android.content.pm.ApplicationInfo,java.lang.String,boolean,boolean,boolean,boolean,java.lang.String,int)>(r48, r57, 0, z6, z7, z9, r4, 0);

        virtualinvoke r63.<com.android.server.am.ProcessRecord: void setActiveInstrumentation(com.android.server.am.ActiveInstrumentation)>(r56);

        r56.<com.android.server.am.ActiveInstrumentation: boolean mFinished> = 0;

        r56.<com.android.server.am.ActiveInstrumentation: int mSourceUid> = i1;

        $r18 = r56.<com.android.server.am.ActiveInstrumentation: java.util.ArrayList mRunningProcesses>;

        virtualinvoke $r18.<java.util.ArrayList: boolean add(java.lang.Object)>(r63);

        $r19 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mActiveInstrumentation>;

        $z1 = virtualinvoke $r19.<java.util.ArrayList: boolean contains(java.lang.Object)>(r56);

        if $z1 != 0 goto label58;

        $r22 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mActiveInstrumentation>;

        virtualinvoke $r22.<java.util.ArrayList: boolean add(java.lang.Object)>(r56);

     label58:
        $i6 = i0 & 2;

        if $i6 == 0 goto label61;

     label59:
        $r21 = r0.<com.android.server.am.ActivityManagerService: com.android.server.appop.AppOpsService mAppOpsService>;

        $i7 = r48.<android.content.pm.ApplicationInfo: int uid>;

        $r20 = r44.<android.content.pm.InstrumentationInfo: java.lang.String packageName>;

        virtualinvoke $r21.<com.android.server.appop.AppOpsService: void setMode(int,int,java.lang.String,int)>(99, $i7, $r20, 0);

     label60:
        goto label61;

     label61:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l4);

        exitmonitor r0;

     label62:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return 1;

     label63:
        $r36 := @caughtexception;

        r49 = $r36;

        goto label65;

     label64:
        $r39 := @caughtexception;

        r49 = $r39;

     label65:
        exitmonitor r0;

     label66:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw r49;

     label67:
        $r40 := @caughtexception;

        r49 = $r40;

        goto label65;

        catch java.lang.Throwable from label03 to label04 with label64;
        catch android.content.pm.PackageManager$NameNotFoundException from label05 to label06 with label11;
        catch android.os.RemoteException from label05 to label06 with label10;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch android.content.pm.PackageManager$NameNotFoundException from label07 to label08 with label11;
        catch android.os.RemoteException from label07 to label08 with label10;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label13 to label14 with label09;
        catch java.lang.Throwable from label16 to label17 with label09;
        catch java.lang.Throwable from label18 to label19 with label64;
        catch java.lang.Throwable from label20 to label21 with label09;
        catch java.lang.Throwable from label22 to label23 with label64;
        catch java.lang.Throwable from label24 to label25 with label09;
        catch java.lang.Throwable from label25 to label26 with label64;
        catch java.lang.Throwable from label27 to label28 with label09;
        catch java.lang.Throwable from label29 to label30 with label64;
        catch java.lang.Throwable from label31 to label32 with label09;
        catch java.lang.Throwable from label33 to label34 with label64;
        catch java.lang.Throwable from label34 to label35 with label64;
        catch java.lang.Throwable from label37 to label38 with label64;
        catch java.lang.Throwable from label45 to label46 with label64;
        catch java.lang.Throwable from label46 to label47 with label64;
        catch java.lang.Throwable from label49 to label50 with label64;
        catch java.lang.Throwable from label50 to label51 with label63;
        catch java.lang.Throwable from label52 to label53 with label56;
        catch java.lang.Throwable from label53 to label54 with label55;
        catch java.lang.Throwable from label57 to label58 with label67;
        catch java.lang.Throwable from label59 to label60 with label67;
        catch java.lang.Throwable from label61 to label62 with label67;
        catch java.lang.Throwable from label65 to label66 with label67;
    }

    boolean startIsolatedProcess(java.lang.String, java.lang.String[], java.lang.String, java.lang.String, int, java.lang.Runnable)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String[] r1;
        java.lang.String r2, r3, r10;
        int i0, $i1;
        java.lang.Runnable r4;
        android.content.pm.ApplicationInfo r5;
        com.android.server.am.HostingRecord $r6;
        com.android.server.am.ProcessList $r7;
        com.android.server.am.ProcessRecord $r8;
        java.lang.Throwable $r9;
        boolean z0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r10 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String[];

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        i0 := @parameter4: int;

        r4 := @parameter5: java.lang.Runnable;

        entermonitor r0;

     label1:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        r5 = new android.content.pm.ApplicationInfo;

        specialinvoke r5.<android.content.pm.ApplicationInfo: void <init>()>();

        r5.<android.content.pm.ApplicationInfo: int uid> = 1000;

        r5.<android.content.pm.ApplicationInfo: java.lang.String processName> = r2;

        r5.<android.content.pm.ApplicationInfo: java.lang.String className> = r10;

        r5.<android.content.pm.ApplicationInfo: java.lang.String packageName> = "android";

        r5.<android.content.pm.ApplicationInfo: java.lang.String seInfoUser> = ":complete";

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        r5.<android.content.pm.ApplicationInfo: int targetSdkVersion> = $i1;

        $r7 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r6 = <com.android.server.am.ActivityManagerService: com.android.server.am.HostingRecord sNullHostingRecord>;

        $r8 = virtualinvoke $r7.<com.android.server.am.ProcessList: com.android.server.am.ProcessRecord startProcessLocked(java.lang.String,android.content.pm.ApplicationInfo,boolean,int,com.android.server.am.HostingRecord,int,boolean,boolean,int,boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.Runnable)>(r2, r5, 0, 0, $r6, 0, 1, 1, i0, 1, r3, r10, r1, r4);

        if $r8 == null goto label3;

     label2:
        z0 = 1;

        goto label4;

     label3:
        z0 = 0;

     label4:
        exitmonitor r0;

     label5:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return z0;

     label6:
        $r9 := @caughtexception;

     label7:
        exitmonitor r0;

     label8:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public void startObservingNativeCrashes()
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.NativeCrashListener $r1;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 = new com.android.server.am.NativeCrashListener;

        specialinvoke $r1.<com.android.server.am.NativeCrashListener: void <init>(com.android.server.am.ActivityManagerService)>(r0);

        virtualinvoke $r1.<com.android.server.am.NativeCrashListener: void start()>();

        return;
    }

    void startPersistentApps(int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, $i1, $i2;
        java.util.Iterator r1;
        android.content.pm.IPackageManager $r2;
        android.content.pm.ParceledListSlice $r3;
        java.util.List $r4;
        boolean $z0, $z1;
        java.lang.Object $r5;
        java.lang.String $r6, $r7;
        java.lang.Throwable $r9;
        android.os.RemoteException $r10;
        android.content.pm.ApplicationInfo r11;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        $i1 = r0.<com.android.server.am.ActivityManagerService: int mFactoryTest>;

        if $i1 != 1 goto label01;

        return;

     label01:
        entermonitor r0;

     label02:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r2 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        $i2 = i0 | 1024;

        $r3 = interfaceinvoke $r2.<android.content.pm.IPackageManager: android.content.pm.ParceledListSlice getPersistentApplications(int)>($i2);

        $r4 = virtualinvoke $r3.<android.content.pm.ParceledListSlice: java.util.List getList()>();

        r1 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label03:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label05;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r11 = (android.content.pm.ApplicationInfo) $r5;

        $r7 = "android";

        $r6 = r11.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z1 != 0 goto label04;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord addAppLocked(android.content.pm.ApplicationInfo,java.lang.String,boolean,java.lang.String,int)>(r11, null, 0, null, 2);

     label04:
        goto label03;

     label05:
        goto label08;

     label06:
        $r9 := @caughtexception;

        goto label10;

     label07:
        $r10 := @caughtexception;

     label08:
        exitmonitor r0;

     label09:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label10:
        exitmonitor r0;

     label11:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r9;

        catch android.os.RemoteException from label02 to label03 with label07;
        catch java.lang.Throwable from label02 to label03 with label06;
        catch android.os.RemoteException from label03 to label04 with label07;
        catch java.lang.Throwable from label03 to label04 with label06;
        catch java.lang.Throwable from label08 to label09 with label06;
        catch java.lang.Throwable from label10 to label11 with label06;
    }

    final com.android.server.am.ProcessRecord startProcessLocked(java.lang.String, android.content.pm.ApplicationInfo, boolean, int, com.android.server.am.HostingRecord, int, boolean, boolean, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1;
        android.content.pm.ApplicationInfo r2;
        boolean z0, z1, z2, z3;
        int i0, i1;
        com.android.server.am.HostingRecord r3;
        com.android.server.am.ProcessList $r4;
        com.android.server.am.ProcessRecord $r5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.content.pm.ApplicationInfo;

        z0 := @parameter2: boolean;

        i0 := @parameter3: int;

        r3 := @parameter4: com.android.server.am.HostingRecord;

        i1 := @parameter5: int;

        z1 := @parameter6: boolean;

        z2 := @parameter7: boolean;

        z3 := @parameter8: boolean;

        $r4 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r5 = virtualinvoke $r4.<com.android.server.am.ProcessList: com.android.server.am.ProcessRecord startProcessLocked(java.lang.String,android.content.pm.ApplicationInfo,boolean,int,com.android.server.am.HostingRecord,int,boolean,boolean,int,boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.Runnable)>(r1, r2, z0, i0, r3, i1, z1, z2, 0, z3, null, null, null, null);

        return $r5;
    }

    public void startRecentsActivity(android.content.Intent, android.app.IAssistDataReceiver, android.view.IRecentsAnimationRunner)
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.Intent r1;
        android.app.IAssistDataReceiver r2;
        android.view.IRecentsAnimationRunner r3;
        com.android.server.wm.ActivityTaskManagerService $r4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: android.app.IAssistDataReceiver;

        r3 := @parameter2: android.view.IRecentsAnimationRunner;

        $r4 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerService mActivityTaskManager>;

        virtualinvoke $r4.<com.android.server.wm.ActivityTaskManagerService: void startRecentsActivity(android.content.Intent,android.app.IAssistDataReceiver,android.view.IRecentsAnimationRunner)>(r1, r2, r3);

        return;
    }

    public android.content.ComponentName startService(android.app.IApplicationThread, android.content.Intent, java.lang.String, boolean, java.lang.String, java.lang.String, int) throws android.os.TransactionTooLargeException
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.Intent r1;
        java.lang.String r2, r3, r4;
        boolean z0, $z1;
        int i0, i1, i2;
        long l3;
        java.lang.IllegalArgumentException $r5, $r7;
        com.android.server.am.ActiveServices $r6;
        java.lang.Throwable $r8, $r9;
        android.app.IApplicationThread r10;
        android.content.ComponentName r11;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r10 := @parameter0: android.app.IApplicationThread;

        r1 := @parameter1: android.content.Intent;

        r2 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        r3 := @parameter4: java.lang.String;

        r4 := @parameter5: java.lang.String;

        i0 := @parameter6: int;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("startService");

        if r1 == null goto label02;

        $z1 = virtualinvoke r1.<android.content.Intent: boolean hasFileDescriptors()>();

        if $z1 == 1 goto label01;

        goto label02;

     label01:
        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("File descriptors passed in Intent");

        throw $r7;

     label02:
        if r3 == null goto label14;

        entermonitor r0;

     label03:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

        i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        l3 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label04:
        $r6 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveServices mServices>;

        r11 = virtualinvoke $r6.<com.android.server.am.ActiveServices: android.content.ComponentName startServiceLocked(android.app.IApplicationThread,android.content.Intent,java.lang.String,int,int,boolean,java.lang.String,java.lang.String,int)>(r10, r1, r2, i1, i2, z0, r3, r4, i0);

     label05:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

     label06:
        exitmonitor r0;

     label07:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return r11;

     label08:
        $r8 := @caughtexception;

     label09:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

     label10:
        throw $r8;

     label11:
        $r9 := @caughtexception;

     label12:
        exitmonitor r0;

     label13:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r9;

     label14:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("callingPackage cannot be null");

        throw $r5;

        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label10 to label11 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    public void startSystemLockTaskMode(int) throws android.os.RemoteException
    {
        com.android.server.am.ActivityManagerService r0;
        int i0;
        com.android.server.wm.ActivityTaskManagerService $r1;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerService mActivityTaskManager>;

        virtualinvoke $r1.<com.android.server.wm.ActivityTaskManagerService: void startSystemLockTaskMode(int)>(i0);

        return;
    }

    public boolean startUserInBackground(int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        $z0 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean startUserInBackgroundWithListener(int,android.os.IProgressListener)>(i0, null);

        return $z0;
    }

    public boolean startUserInBackgroundWithListener(int, android.os.IProgressListener)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0;
        android.os.IProgressListener r1;
        com.android.server.am.UserController $r2;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.IProgressListener;

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.UserController mUserController>;

        $z0 = virtualinvoke $r2.<com.android.server.am.UserController: boolean startUser(int,boolean,android.os.IProgressListener)>(i0, 0, r1);

        return $z0;
    }

    public boolean startUserInForegroundWithListener(int, android.os.IProgressListener)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0;
        android.os.IProgressListener r1;
        com.android.server.am.UserController $r2;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.IProgressListener;

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.UserController mUserController>;

        $z0 = virtualinvoke $r2.<com.android.server.am.UserController: boolean startUser(int,boolean,android.os.IProgressListener)>(i0, 1, r1);

        return $z0;
    }

    public void stopAppSwitches()
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.wm.ActivityTaskManagerService $r1;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerService mActivityTaskManager>;

        virtualinvoke $r1.<com.android.server.wm.ActivityTaskManagerService: void stopAppSwitches()>();

        return;
    }

    void stopAssociationLocked(int, java.lang.String, int, long, android.content.ComponentName, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, $i1, $i2, $i3, $i4, $i9, i14, i17;
        boolean $z0;
        android.util.SparseArray $r1, r10;
        java.lang.Object $r2, $r3, $r4, $r5;
        long $l5, $l6, $l7, $l8, $l10, $l11, $l12, $l13, l15, l16;
        java.lang.String r6, r8;
        android.content.ComponentName r7;
        android.util.ArrayMap r9, r11;
        com.android.server.am.ActivityManagerService$Association r12;
        long[] r13;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i14 := @parameter0: int;

        r6 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        l15 := @parameter3: long;

        r7 := @parameter4: android.content.ComponentName;

        r8 := @parameter5: java.lang.String;

        $z0 = r0.<com.android.server.am.ActivityManagerService: boolean mTrackingAssociations>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mAssociations>;

        $r2 = virtualinvoke $r1.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r9 = (android.util.ArrayMap) $r2;

        if r9 != null goto label2;

        return;

     label2:
        $r3 = virtualinvoke r9.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r7);

        r10 = (android.util.SparseArray) $r3;

        if r10 != null goto label3;

        return;

     label3:
        $r4 = virtualinvoke r10.<android.util.SparseArray: java.lang.Object get(int)>(i14);

        r11 = (android.util.ArrayMap) $r4;

        if r11 != null goto label4;

        return;

     label4:
        $r5 = virtualinvoke r11.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r6);

        r12 = (com.android.server.am.ActivityManagerService$Association) $r5;

        if r12 == null goto label7;

        $i1 = r12.<com.android.server.am.ActivityManagerService$Association: int mNesting>;

        if $i1 > 0 goto label5;

        goto label7;

     label5:
        $i2 = r12.<com.android.server.am.ActivityManagerService$Association: int mNesting>;

        $i3 = $i2 - 1;

        r12.<com.android.server.am.ActivityManagerService$Association: int mNesting> = $i3;

        $i4 = r12.<com.android.server.am.ActivityManagerService$Association: int mNesting>;

        if $i4 != 0 goto label6;

        l16 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l7 = r12.<com.android.server.am.ActivityManagerService$Association: long mTime>;

        $l5 = r12.<com.android.server.am.ActivityManagerService$Association: long mStartTime>;

        $l6 = l16 - $l5;

        $l8 = $l7 + $l6;

        r12.<com.android.server.am.ActivityManagerService$Association: long mTime> = $l8;

        r13 = r12.<com.android.server.am.ActivityManagerService$Association: long[] mStateTimes>;

        $i9 = r12.<com.android.server.am.ActivityManagerService$Association: int mLastState>;

        i17 = $i9 + 0;

        $l12 = r13[i17];

        $l10 = r12.<com.android.server.am.ActivityManagerService$Association: long mLastStateUptime>;

        $l11 = l16 - $l10;

        $l13 = $l12 + $l11;

        r13[i17] = $l13;

        r12.<com.android.server.am.ActivityManagerService$Association: int mLastState> = 22;

        goto label6;

     label6:
        return;

     label7:
        return;
    }

    public boolean stopBinderTrackingAndDump(android.os.ParcelFileDescriptor) throws android.os.RemoteException
    {
        com.android.server.am.ActivityManagerService r0;
        java.util.Iterator r1;
        int $i0;
        java.io.FileDescriptor $r2, $r13;
        com.android.server.am.ProcessList $r3;
        java.util.ArrayList $r4;
        java.lang.Object $r6;
        boolean $z0, $z1;
        java.lang.String $r8, $r10, $r23, $r30;
        android.app.IApplicationThread $r11;
        android.os.ParcelFileDescriptor $r12, r31, r32, r33;
        java.lang.Throwable $r14, $r15, $r17, $r24, $r25;
        android.os.RemoteException $r18;
        com.android.internal.util.FastPrintWriter r34;
        java.io.FileOutputStream r35;
        com.android.server.am.ProcessRecord r36;
        java.lang.StringBuilder r37, r41, r43;
        com.android.internal.os.TransferPipe r38;
        java.lang.IllegalArgumentException r45;
        java.lang.SecurityException r46;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r31 := @parameter0: android.os.ParcelFileDescriptor;

        r32 = r31;

     label001:
        entermonitor r0;

     label002:
        r33 = r31;

     label003:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

     label004:
        r33 = r31;

     label005:
        r0.<com.android.server.am.ActivityManagerService: boolean mBinderTransactionTrackingEnabled> = 0;

     label006:
        r33 = r31;

     label007:
        $i0 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.SET_ACTIVITY_WATCHER");

        if $i0 != 0 goto label096;

     label008:
        if r31 == null goto label090;

        r33 = r31;

     label009:
        r34 = new com.android.internal.util.FastPrintWriter;

     label010:
        r33 = r31;

     label011:
        r35 = new java.io.FileOutputStream;

     label012:
        r33 = r31;

     label013:
        $r2 = virtualinvoke r31.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        specialinvoke r35.<java.io.FileOutputStream: void <init>(java.io.FileDescriptor)>($r2);

     label014:
        r33 = r31;

     label015:
        specialinvoke r34.<com.android.internal.util.FastPrintWriter: void <init>(java.io.OutputStream)>(r35);

     label016:
        r33 = r31;

     label017:
        virtualinvoke r34.<java.io.PrintWriter: void println(java.lang.String)>("Binder transaction traces for all processes.\n");

     label018:
        r33 = r31;

     label019:
        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r4 = $r3.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        r1 = virtualinvoke $r4.<java.util.ArrayList: java.util.Iterator iterator()>();

     label020:
        r33 = r31;

     label021:
        $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label086;

     label022:
        r33 = r31;

     label023:
        $r6 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r36 = (com.android.server.am.ProcessRecord) $r6;

     label024:
        r33 = r31;

     label025:
        $z0 = specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean processSanityChecksLocked(com.android.server.am.ProcessRecord)>(r36);

        if $z0 != 0 goto label027;

     label026:
        goto label020;

     label027:
        r33 = r31;

     label028:
        r37 = new java.lang.StringBuilder;

     label029:
        r33 = r31;

     label030:
        specialinvoke r37.<java.lang.StringBuilder: void <init>()>();

     label031:
        r33 = r31;

     label032:
        virtualinvoke r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Traces for process: ");

     label033:
        r33 = r31;

     label034:
        $r8 = r36.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        virtualinvoke r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

     label035:
        r33 = r31;

     label036:
        $r10 = virtualinvoke r37.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r34.<java.io.PrintWriter: void println(java.lang.String)>($r10);

     label037:
        r33 = r31;

     label038:
        virtualinvoke r34.<java.io.PrintWriter: void flush()>();

     label039:
        r33 = r31;

     label040:
        r38 = new com.android.internal.os.TransferPipe;

     label041:
        r33 = r31;

     label042:
        specialinvoke r38.<com.android.internal.os.TransferPipe: void <init>()>();

     label043:
        $r11 = r36.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r12 = virtualinvoke r38.<com.android.internal.os.TransferPipe: android.os.ParcelFileDescriptor getWriteFd()>();

        interfaceinvoke $r11.<android.app.IApplicationThread: void stopBinderTrackingAndDump(android.os.ParcelFileDescriptor)>($r12);

        $r13 = virtualinvoke r31.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        virtualinvoke r38.<com.android.internal.os.TransferPipe: void go(java.io.FileDescriptor)>($r13);

     label044:
        r33 = r31;

     label045:
        virtualinvoke r38.<com.android.internal.os.TransferPipe: void kill()>();

     label046:
        goto label085;

     label047:
        $r15 := @caughtexception;

        r33 = r31;

     label048:
        virtualinvoke r38.<com.android.internal.os.TransferPipe: void kill()>();

     label049:
        r33 = r31;

     label050:
        throw $r15;

     label051:
        $r18 := @caughtexception;

        r33 = r31;

     label052:
        r41 = new java.lang.StringBuilder;

     label053:
        r33 = r31;

     label054:
        specialinvoke r41.<java.lang.StringBuilder: void <init>()>();

     label055:
        r33 = r31;

     label056:
        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got a RemoteException while dumping IPC traces from ");

     label057:
        r33 = r31;

     label058:
        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r36);

     label059:
        r33 = r31;

     label060:
        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".  Exception: ");

     label061:
        r33 = r31;

     label062:
        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18);

     label063:
        r33 = r31;

     label064:
        $r23 = virtualinvoke r41.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r34.<java.io.PrintWriter: void println(java.lang.String)>($r23);

     label065:
        r33 = r31;

     label066:
        virtualinvoke r34.<java.io.PrintWriter: void flush()>();

     label067:
        goto label085;

     label068:
        $r25 := @caughtexception;

        r33 = r31;

     label069:
        r43 = new java.lang.StringBuilder;

     label070:
        r33 = r31;

     label071:
        specialinvoke r43.<java.lang.StringBuilder: void <init>()>();

     label072:
        r33 = r31;

     label073:
        virtualinvoke r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure while dumping IPC traces from ");

     label074:
        r33 = r31;

     label075:
        virtualinvoke r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r36);

     label076:
        r33 = r31;

     label077:
        virtualinvoke r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".  Exception: ");

     label078:
        r33 = r31;

     label079:
        virtualinvoke r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r25);

     label080:
        r33 = r31;

     label081:
        $r30 = virtualinvoke r43.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r34.<java.io.PrintWriter: void println(java.lang.String)>($r30);

     label082:
        r33 = r31;

     label083:
        virtualinvoke r34.<java.io.PrintWriter: void flush()>();

     label084:
        goto label046;

     label085:
        goto label020;

     label086:
        r33 = null;

     label087:
        exitmonitor r0;

     label088:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        goto label089;

     label089:
        return 1;

     label090:
        r33 = r31;

     label091:
        r45 = new java.lang.IllegalArgumentException;

     label092:
        r33 = r31;

     label093:
        specialinvoke r45.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("null fd");

     label094:
        r33 = r31;

     label095:
        throw r45;

     label096:
        r33 = r31;

     label097:
        r46 = new java.lang.SecurityException;

     label098:
        r33 = r31;

     label099:
        specialinvoke r46.<java.lang.SecurityException: void <init>(java.lang.String)>("Requires permission android.permission.SET_ACTIVITY_WATCHER");

     label100:
        r33 = r31;

     label101:
        throw r46;

     label102:
        $r17 := @caughtexception;

     label103:
        exitmonitor r0;

     label104:
        r32 = r33;

     label105:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

     label106:
        r32 = r33;

     label107:
        throw $r17;

     label108:
        $r24 := @caughtexception;

        if r32 == null goto label112;

     label109:
        virtualinvoke r32.<android.os.ParcelFileDescriptor: void close()>();

     label110:
        goto label112;

     label111:
        $r14 := @caughtexception;

     label112:
        throw $r24;

        catch java.lang.Throwable from label001 to label002 with label108;
        catch java.lang.Throwable from label003 to label004 with label102;
        catch java.lang.Throwable from label005 to label006 with label102;
        catch java.lang.Throwable from label007 to label008 with label102;
        catch java.lang.Throwable from label009 to label010 with label102;
        catch java.lang.Throwable from label011 to label012 with label102;
        catch java.lang.Throwable from label013 to label014 with label102;
        catch java.lang.Throwable from label015 to label016 with label102;
        catch java.lang.Throwable from label017 to label018 with label102;
        catch java.lang.Throwable from label019 to label020 with label102;
        catch java.lang.Throwable from label021 to label022 with label102;
        catch java.lang.Throwable from label023 to label024 with label102;
        catch java.lang.Throwable from label025 to label026 with label102;
        catch java.lang.Throwable from label028 to label029 with label102;
        catch java.lang.Throwable from label030 to label031 with label102;
        catch java.lang.Throwable from label032 to label033 with label102;
        catch java.lang.Throwable from label034 to label035 with label102;
        catch java.lang.Throwable from label036 to label037 with label102;
        catch java.lang.Throwable from label038 to label039 with label102;
        catch java.io.IOException from label040 to label041 with label068;
        catch android.os.RemoteException from label040 to label041 with label051;
        catch java.lang.Throwable from label040 to label041 with label102;
        catch java.io.IOException from label042 to label043 with label068;
        catch android.os.RemoteException from label042 to label043 with label051;
        catch java.lang.Throwable from label042 to label043 with label102;
        catch java.lang.Throwable from label043 to label044 with label047;
        catch java.io.IOException from label045 to label046 with label068;
        catch android.os.RemoteException from label045 to label046 with label051;
        catch java.lang.Throwable from label045 to label046 with label102;
        catch java.io.IOException from label048 to label049 with label068;
        catch android.os.RemoteException from label048 to label049 with label051;
        catch java.lang.Throwable from label048 to label049 with label102;
        catch java.io.IOException from label050 to label051 with label068;
        catch android.os.RemoteException from label050 to label051 with label051;
        catch java.lang.Throwable from label050 to label051 with label102;
        catch java.lang.Throwable from label052 to label053 with label102;
        catch java.lang.Throwable from label054 to label055 with label102;
        catch java.lang.Throwable from label056 to label057 with label102;
        catch java.lang.Throwable from label058 to label059 with label102;
        catch java.lang.Throwable from label060 to label061 with label102;
        catch java.lang.Throwable from label062 to label063 with label102;
        catch java.lang.Throwable from label064 to label065 with label102;
        catch java.lang.Throwable from label066 to label067 with label102;
        catch java.lang.Throwable from label069 to label070 with label102;
        catch java.lang.Throwable from label071 to label072 with label102;
        catch java.lang.Throwable from label073 to label074 with label102;
        catch java.lang.Throwable from label075 to label076 with label102;
        catch java.lang.Throwable from label077 to label078 with label102;
        catch java.lang.Throwable from label079 to label080 with label102;
        catch java.lang.Throwable from label081 to label082 with label102;
        catch java.lang.Throwable from label083 to label084 with label102;
        catch java.lang.Throwable from label087 to label088 with label102;
        catch java.lang.Throwable from label091 to label092 with label102;
        catch java.lang.Throwable from label093 to label094 with label102;
        catch java.lang.Throwable from label095 to label096 with label102;
        catch java.lang.Throwable from label097 to label098 with label102;
        catch java.lang.Throwable from label099 to label100 with label102;
        catch java.lang.Throwable from label101 to label102 with label102;
        catch java.lang.Throwable from label103 to label104 with label102;
        catch java.lang.Throwable from label105 to label106 with label108;
        catch java.lang.Throwable from label107 to label108 with label108;
        catch java.io.IOException from label109 to label110 with label111;
    }

    public void stopDelegateShellPermissionIdentity()
    {
        com.android.server.am.ActivityManagerService r0;
        int $i0, $i1;
        com.android.server.appop.AppOpsService $r2;
        com.android.server.pm.permission.PermissionManagerServiceInternal $r3;
        java.lang.SecurityException $r4;
        java.lang.Throwable $r5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $i0 = staticinvoke <android.os.UserHandle: int getCallingAppId()>();

        if $i0 == 2000 goto label2;

        $i1 = staticinvoke <android.os.UserHandle: int getCallingAppId()>();

        if $i1 != 0 goto label1;

        goto label2;

     label1:
        $r4 = new java.lang.SecurityException;

        specialinvoke $r4.<java.lang.SecurityException: void <init>(java.lang.String)>("Only the shell can delegate its permissions");

        throw $r4;

     label2:
        entermonitor r0;

     label3:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.appop.AppOpsService mAppOpsService>;

        virtualinvoke $r2.<com.android.server.appop.AppOpsService: void setAppOpsServiceDelegate(android.app.AppOpsManagerInternal$CheckOpsDelegate)>(null);

        $r3 = specialinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.pm.permission.PermissionManagerServiceInternal getPermissionManagerInternalLocked()>();

        virtualinvoke $r3.<com.android.server.pm.permission.PermissionManagerServiceInternal: void setCheckPermissionDelegate(android.permission.PermissionManagerInternal$CheckPermissionDelegate)>(null);

        exitmonitor r0;

     label4:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label5:
        $r5 := @caughtexception;

     label6:
        exitmonitor r0;

     label7:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r5;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public int stopService(android.app.IApplicationThread, android.content.Intent, java.lang.String, int)
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.Intent r1;
        java.lang.String r2;
        com.android.server.am.ActiveServices $r3;
        boolean $z0;
        java.lang.IllegalArgumentException $r4;
        java.lang.Throwable $r5;
        android.app.IApplicationThread r6;
        int i0, i1;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r6 := @parameter0: android.app.IApplicationThread;

        r1 := @parameter1: android.content.Intent;

        r2 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("stopService");

        if r1 == null goto label2;

        $z0 = virtualinvoke r1.<android.content.Intent: boolean hasFileDescriptors()>();

        if $z0 == 1 goto label1;

        goto label2;

     label1:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("File descriptors passed in Intent");

        throw $r4;

     label2:
        entermonitor r0;

     label3:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveServices mServices>;

        i1 = virtualinvoke $r3.<com.android.server.am.ActiveServices: int stopServiceLocked(android.app.IApplicationThread,android.content.Intent,java.lang.String,int)>(r6, r1, r2, i0);

        exitmonitor r0;

     label4:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return i1;

     label5:
        $r5 := @caughtexception;

     label6:
        exitmonitor r0;

     label7:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r5;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public boolean stopServiceToken(android.content.ComponentName, android.os.IBinder, int)
    {
        com.android.server.am.ActivityManagerService r0;
        android.os.IBinder r1;
        int i0;
        boolean z0;
        com.android.server.am.ActiveServices $r2;
        java.lang.Throwable $r3;
        android.content.ComponentName r4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r4 := @parameter0: android.content.ComponentName;

        r1 := @parameter1: android.os.IBinder;

        i0 := @parameter2: int;

        entermonitor r0;

     label1:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveServices mServices>;

        z0 = virtualinvoke $r2.<com.android.server.am.ActiveServices: boolean stopServiceTokenLocked(android.content.ComponentName,android.os.IBinder,int)>(r4, r1, i0);

        exitmonitor r0;

     label2:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return z0;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public int stopUser(int, boolean, android.app.IStopUserCallback)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, $i1;
        boolean z0;
        android.app.IStopUserCallback r1;
        com.android.server.am.UserController $r2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 := @parameter2: android.app.IStopUserCallback;

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.UserController mUserController>;

        $i1 = virtualinvoke $r2.<com.android.server.am.UserController: int stopUser(int,boolean,boolean,android.app.IStopUserCallback,com.android.server.am.UserState$KeyEvictedCallback)>(i0, z0, 0, r1, null);

        return $i1;
    }

    public int stopUserWithDelayedLocking(int, boolean, android.app.IStopUserCallback)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, $i1;
        boolean z0;
        android.app.IStopUserCallback r1;
        com.android.server.am.UserController $r2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 := @parameter2: android.app.IStopUserCallback;

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.UserController mUserController>;

        $i1 = virtualinvoke $r2.<com.android.server.am.UserController: int stopUser(int,boolean,boolean,android.app.IStopUserCallback,com.android.server.am.UserState$KeyEvictedCallback)>(i0, z0, 1, r1, null);

        return $i1;
    }

    public void suppressResizeConfigChanges(boolean) throws android.os.RemoteException
    {
        com.android.server.am.ActivityManagerService r0;
        boolean z0;
        com.android.server.wm.ActivityTaskManagerService $r1;

        r0 := @this: com.android.server.am.ActivityManagerService;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerService mActivityTaskManager>;

        virtualinvoke $r1.<com.android.server.wm.ActivityTaskManagerService: void suppressResizeConfigChanges(boolean)>(z0);

        return;
    }

    public boolean switchUser(int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0;
        com.android.server.am.UserController $r1;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.UserController mUserController>;

        $z0 = virtualinvoke $r1.<com.android.server.am.UserController: boolean switchUser(int)>(i0);

        return $z0;
    }

    public void systemReady(java.lang.Runnable, com.android.server.utils.TimingsTraceAndSlog)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.utils.TimingsTraceAndSlog r1;
        com.android.server.am.ProcessRecord r2, r92;
        int i0, i1, $i10, i13, i14, i15, i16, i17, i18, i19;
        long l2, $l4;
        com.android.server.SystemServiceManager $r3, $r47;
        boolean $z0, $z2, $z3, $z5, z7, z8, z9;
        java.lang.Object $r4, $r20, $r56;
        com.android.server.DeviceIdleInternal $r5;
        com.android.server.wm.ActivityTaskManagerService $r6;
        com.android.server.am.UserController $r7, $r21, $r36, $r48;
        com.android.server.appop.AppOpsService $r8;
        com.android.server.am.ProcessList $r9, $r60;
        android.os.IBinder $r10;
        android.os.IDeviceIdentifiersPolicyService $r11;
        java.lang.String $r12, $r25, $r27, $r29, $r33, $r53, $r59;
        com.android.server.am.ActivityManagerService$PidMap $r13, $r61, r88;
        com.android.server.wm.ActivityTaskManagerInternal $r14, $r15, $r30, $r34, $r42;
        com.android.server.wm.ActivityMetricsLaunchObserverRegistry $r16;
        com.android.server.wm.ActivityMetricsLaunchObserver $r17;
        android.content.Context $r18, $r43, $r45;
        com.android.server.uri.UriGrantsManagerInternal $r19;
        java.lang.StringBuilder $r22, $r49, r93, r106;
        com.android.server.am.BatteryStatsService $r26, $r28;
        com.android.server.am.ActivityManagerService$MainHandler $r35;
        java.lang.String[] $r41;
        android.content.pm.IPackageManager $r44;
        android.content.ContentResolver $r46;
        java.lang.RuntimeException $r52, $r75;
        com.android.server.am._$$Lambda$ActivityManagerService$eFxS8Z__MXzP9a8ro45rBMHy3bk $r54;
        android.os.PowerSaveState $r55;
        android.content.pm.ApplicationInfo $r62;
        java.lang.Throwable $r63, $r64, $r65, $r67, $r68, $r69, $r70, $r71, $r72, $r73, $r76, $r77, $r78, $r79, $r80, $r81, $r82, $r83, $r84, $r85, r91, r94, r98, r104, r109;
        android.os.RemoteException $r66, $r74;
        java.lang.Runnable r86;
        java.util.ArrayList r89, r90;
        android.os.PowerManagerInternal r95;
        android.content.ComponentName r99;
        android.content.Intent r101, r102;
        com.android.server.am.ActivityManagerService$17 r103;
        com.android.server.am._$$Lambda$ActivityManagerService$fS1_94oynjazWAe2OWfx5p_HXUQ r108;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r86 := @parameter0: java.lang.Runnable;

        r1 := @parameter1: com.android.server.utils.TimingsTraceAndSlog;

        virtualinvoke r1.<com.android.server.utils.TimingsTraceAndSlog: void traceBegin(java.lang.String)>("PhaseActivityManagerReady");

        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.SystemServiceManager mSystemServiceManager>;

        virtualinvoke $r3.<com.android.server.SystemServiceManager: void preSystemReady()>();

        entermonitor r0;

     label001:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $z0 = r0.<com.android.server.am.ActivityManagerService: boolean mSystemReady>;

        if $z0 == 0 goto label006;

     label002:
        if r86 == null goto label004;

     label003:
        interfaceinvoke r86.<java.lang.Runnable: void run()>();

     label004:
        virtualinvoke r1.<com.android.server.utils.TimingsTraceAndSlog: void traceEnd()>();

        exitmonitor r0;

     label005:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label006:
        virtualinvoke r1.<com.android.server.utils.TimingsTraceAndSlog: void traceBegin(java.lang.String)>("controllersReady");

        $r4 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Lcom/android/server/DeviceIdleInternal;");

        $r5 = (com.android.server.DeviceIdleInternal) $r4;

        r0.<com.android.server.am.ActivityManagerService: com.android.server.DeviceIdleInternal mLocalDeviceIdleController> = $r5;

        $r6 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerService mActivityTaskManager>;

        virtualinvoke $r6.<com.android.server.wm.ActivityTaskManagerService: void onSystemReady()>();

        $r7 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.UserController mUserController>;

        virtualinvoke $r7.<com.android.server.am.UserController: void onSystemReady()>();

        $r8 = r0.<com.android.server.am.ActivityManagerService: com.android.server.appop.AppOpsService mAppOpsService>;

        virtualinvoke $r8.<com.android.server.appop.AppOpsService: void systemReady()>();

        $r9 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        virtualinvoke $r9.<com.android.server.am.ProcessList: void onSystemReady()>();

        r0.<com.android.server.am.ActivityManagerService: boolean mSystemReady> = 1;

        virtualinvoke r1.<com.android.server.utils.TimingsTraceAndSlog: void traceEnd()>();

        exitmonitor r0;

     label007:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

     label008:
        $r10 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("device_identifiers");

        $r11 = staticinvoke <android.os.IDeviceIdentifiersPolicyService$Stub: android.os.IDeviceIdentifiersPolicyService asInterface(android.os.IBinder)>($r10);

        $r12 = interfaceinvoke $r11.<android.os.IDeviceIdentifiersPolicyService: java.lang.String getSerial()>();

        <com.android.server.am.ActivityManagerService: java.lang.String sTheRealBuildSerial> = $r12;

     label009:
        goto label011;

     label010:
        $r66 := @caughtexception;

     label011:
        virtualinvoke r1.<com.android.server.utils.TimingsTraceAndSlog: void traceBegin(java.lang.String)>("killProcesses");

        r88 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        entermonitor r88;

     label012:
        $r13 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        i13 = virtualinvoke $r13.<com.android.server.am.ActivityManagerService$PidMap: int size()>();

     label013:
        i14 = i13 + -1;

        r89 = null;

     label014:
        if i14 < 0 goto label026;

     label015:
        $r61 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        r2 = virtualinvoke $r61.<com.android.server.am.ActivityManagerService$PidMap: com.android.server.am.ProcessRecord valueAt(int)>(i14);

     label016:
        r90 = r89;

     label017:
        $r62 = r2.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $z5 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean isAllowedWhileBooting(android.content.pm.ApplicationInfo)>($r62);

        if $z5 != 0 goto label024;

     label018:
        if r89 != null goto label021;

     label019:
        r89 = new java.util.ArrayList;

        specialinvoke r89.<java.util.ArrayList: void <init>()>();

     label020:
        goto label021;

     label021:
        virtualinvoke r89.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

     label022:
        r90 = r89;

        goto label024;

     label023:
        $r72 := @caughtexception;

        r91 = $r72;

        goto label097;

     label024:
        i14 = i14 + -1;

        r89 = r90;

        goto label014;

     label025:
        $r65 := @caughtexception;

        r91 = $r65;

        goto label097;

     label026:
        exitmonitor r88;

     label027:
        entermonitor r0;

     label028:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

     label029:
        if r89 == null goto label035;

     label030:
        $i10 = virtualinvoke r89.<java.util.ArrayList: int size()>();

        i15 = $i10 - 1;

     label031:
        if i15 < 0 goto label035;

     label032:
        $r56 = virtualinvoke r89.<java.util.ArrayList: java.lang.Object get(int)>(i15);

        r92 = (com.android.server.am.ProcessRecord) $r56;

        r93 = new java.lang.StringBuilder;

        specialinvoke r93.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removing system update proc: ");

        virtualinvoke r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r92);

        $r59 = virtualinvoke r93.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", $r59);

        $r60 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        virtualinvoke $r60.<com.android.server.am.ProcessList: boolean removeProcessLocked(com.android.server.am.ProcessRecord,boolean,boolean,int,int,java.lang.String)>(r92, 1, 0, 13, 8, "system update done");

     label033:
        i15 = i15 + -1;

        goto label031;

     label034:
        $r73 := @caughtexception;

        r94 = $r73;

        goto label092;

     label035:
        r0.<com.android.server.am.ActivityManagerService: boolean mProcessesReady> = 1;

        exitmonitor r0;

     label036:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        virtualinvoke r1.<com.android.server.utils.TimingsTraceAndSlog: void traceEnd()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", "System now ready");

        $l4 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        staticinvoke <com.android.server.am.EventLogTags: void writeBootProgressAmsReady(long)>($l4);

        virtualinvoke r1.<com.android.server.utils.TimingsTraceAndSlog: void traceBegin(java.lang.String)>("updateTopComponentForFactoryTest");

        $r14 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerInternal mAtmInternal>;

        virtualinvoke $r14.<com.android.server.wm.ActivityTaskManagerInternal: void updateTopComponentForFactoryTest()>();

        virtualinvoke r1.<com.android.server.utils.TimingsTraceAndSlog: void traceEnd()>();

        virtualinvoke r1.<com.android.server.utils.TimingsTraceAndSlog: void traceBegin(java.lang.String)>("registerActivityLaunchObserver");

        $r15 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerInternal mAtmInternal>;

        $r16 = virtualinvoke $r15.<com.android.server.wm.ActivityTaskManagerInternal: com.android.server.wm.ActivityMetricsLaunchObserverRegistry getLaunchObserverRegistry()>();

        $r17 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityMetricsLaunchObserver mActivityLaunchObserver>;

        interfaceinvoke $r16.<com.android.server.wm.ActivityMetricsLaunchObserverRegistry: void registerLaunchObserver(com.android.server.wm.ActivityMetricsLaunchObserver)>($r17);

        virtualinvoke r1.<com.android.server.utils.TimingsTraceAndSlog: void traceEnd()>();

        virtualinvoke r1.<com.android.server.utils.TimingsTraceAndSlog: void traceBegin(java.lang.String)>("watchDeviceProvisioning");

        $r18 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void watchDeviceProvisioning(android.content.Context)>($r18);

        virtualinvoke r1.<com.android.server.utils.TimingsTraceAndSlog: void traceEnd()>();

        virtualinvoke r1.<com.android.server.utils.TimingsTraceAndSlog: void traceBegin(java.lang.String)>("retrieveSettings");

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void retrieveSettings()>();

        virtualinvoke r1.<com.android.server.utils.TimingsTraceAndSlog: void traceEnd()>();

        virtualinvoke r1.<com.android.server.utils.TimingsTraceAndSlog: void traceBegin(java.lang.String)>("Ugm.onSystemReady");

        $r19 = r0.<com.android.server.am.ActivityManagerService: com.android.server.uri.UriGrantsManagerInternal mUgmInternal>;

        interfaceinvoke $r19.<com.android.server.uri.UriGrantsManagerInternal: void onSystemReady()>();

        virtualinvoke r1.<com.android.server.utils.TimingsTraceAndSlog: void traceEnd()>();

        virtualinvoke r1.<com.android.server.utils.TimingsTraceAndSlog: void traceBegin(java.lang.String)>("updateForceBackgroundCheck");

        $r20 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/os/PowerManagerInternal;");

        r95 = (android.os.PowerManagerInternal) $r20;

        if r95 == null goto label037;

        $r54 = new com.android.server.am._$$Lambda$ActivityManagerService$eFxS8Z__MXzP9a8ro45rBMHy3bk;

        specialinvoke $r54.<com.android.server.am._$$Lambda$ActivityManagerService$eFxS8Z__MXzP9a8ro45rBMHy3bk: void <init>(com.android.server.am.ActivityManagerService)>(r0);

        virtualinvoke r95.<android.os.PowerManagerInternal: void registerLowPowerModeObserver(int,java.util.function.Consumer)>(12, $r54);

        $r55 = virtualinvoke r95.<android.os.PowerManagerInternal: android.os.PowerSaveState getLowPowerState(int)>(12);

        $z3 = $r55.<android.os.PowerSaveState: boolean batterySaverEnabled>;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void updateForceBackgroundCheck(boolean)>($z3);

        goto label038;

     label037:
        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("ActivityManager", "PowerManagerInternal not found.");

     label038:
        virtualinvoke r1.<com.android.server.utils.TimingsTraceAndSlog: void traceEnd()>();

        if r86 == null goto label039;

        interfaceinvoke r86.<java.lang.Runnable: void run()>();

     label039:
        virtualinvoke r1.<com.android.server.utils.TimingsTraceAndSlog: void traceBegin(java.lang.String)>("getCurrentUser");

        $r21 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.UserController mUserController>;

        i0 = virtualinvoke $r21.<com.android.server.am.UserController: int getCurrentUserId()>();

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Current user:");

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", $r25);

        if i0 == 0 goto label041;

        $r48 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.UserController mUserController>;

        $z2 = virtualinvoke $r48.<com.android.server.am.UserController: boolean isSystemUserStarted()>();

        if $z2 == 0 goto label040;

        goto label041;

     label040:
        $r49 = new java.lang.StringBuilder;

        specialinvoke $r49.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("System user not started while current user is:");

        virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r52 = new java.lang.RuntimeException;

        $r53 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r52.<java.lang.RuntimeException: void <init>(java.lang.String)>($r53);

        throw $r52;

     label041:
        virtualinvoke r1.<com.android.server.utils.TimingsTraceAndSlog: void traceEnd()>();

        virtualinvoke r1.<com.android.server.utils.TimingsTraceAndSlog: void traceBegin(java.lang.String)>("ActivityManagerStartApps");

        $r26 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        $r27 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        virtualinvoke $r26.<com.android.server.am.BatteryStatsService: void noteEvent(int,java.lang.String,int)>(32775, $r27, i0);

        $r28 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        $r29 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        virtualinvoke $r28.<com.android.server.am.BatteryStatsService: void noteEvent(int,java.lang.String,int)>(32776, $r29, i0);

        if i0 != 0 goto label042;

        z7 = 1;

        goto label043;

     label042:
        z7 = 0;

     label043:
        if z7 == 0 goto label044;

        $r47 = r0.<com.android.server.am.ActivityManagerService: com.android.server.SystemServiceManager mSystemServiceManager>;

        virtualinvoke $r47.<com.android.server.SystemServiceManager: void startUser(com.android.server.utils.TimingsTraceAndSlog,int)>(r1, i0);

     label044:
        entermonitor r0;

     label045:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        virtualinvoke r1.<com.android.server.utils.TimingsTraceAndSlog: void traceBegin(java.lang.String)>("startPersistentApps");

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void startPersistentApps(int)>(524288);

        virtualinvoke r1.<com.android.server.utils.TimingsTraceAndSlog: void traceEnd()>();

        r0.<com.android.server.am.ActivityManagerService: boolean mBooting> = 1;

        z8 = staticinvoke <android.os.UserManager: boolean isSplitSystemUser()>();

     label046:
        if z8 == 0 goto label050;

     label047:
        $r45 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r46 = virtualinvoke $r45.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        i16 = staticinvoke <android.provider.Settings$Secure: int getInt(android.content.ContentResolver,java.lang.String,int)>($r46, "user_setup_complete", 0);

     label048:
        if i16 != 0 goto label052;

        goto label050;

     label049:
        $r71 := @caughtexception;

        r98 = $r71;

        goto label088;

     label050:
        z9 = staticinvoke <android.os.SystemProperties: boolean getBoolean(java.lang.String,boolean)>("ro.system_user_home_needed", 0);

     label051:
        if z9 == 0 goto label058;

     label052:
        virtualinvoke r1.<com.android.server.utils.TimingsTraceAndSlog: void traceBegin(java.lang.String)>("enableHomeActivity");

        r99 = new android.content.ComponentName;

        $r43 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        specialinvoke r99.<android.content.ComponentName: void <init>(android.content.Context,java.lang.Class)>($r43, class "Lcom/android/internal/app/SystemUserHomeActivity;");

     label053:
        $r44 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        interfaceinvoke $r44.<android.content.pm.IPackageManager: void setComponentEnabledSetting(android.content.ComponentName,int,int,int)>(r99, 1, 0, 0);

     label054:
        virtualinvoke r1.<com.android.server.utils.TimingsTraceAndSlog: void traceEnd()>();

     label055:
        goto label058;

     label056:
        $r74 := @caughtexception;

     label057:
        $r75 = virtualinvoke $r74.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

        throw $r75;

     label058:
        if z7 == 0 goto label060;

     label059:
        virtualinvoke r1.<com.android.server.utils.TimingsTraceAndSlog: void traceBegin(java.lang.String)>("startHomeOnAllDisplays");

        $r42 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerInternal mAtmInternal>;

        virtualinvoke $r42.<com.android.server.wm.ActivityTaskManagerInternal: boolean startHomeOnAllDisplays(int,java.lang.String)>(i0, "systemReady");

        virtualinvoke r1.<com.android.server.utils.TimingsTraceAndSlog: void traceEnd()>();

     label060:
        virtualinvoke r1.<com.android.server.utils.TimingsTraceAndSlog: void traceBegin(java.lang.String)>("showSystemReadyErrorDialogs");

        $r30 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerInternal mAtmInternal>;

        virtualinvoke $r30.<com.android.server.wm.ActivityTaskManagerInternal: void showSystemReadyErrorDialogsIfNeeded()>();

        virtualinvoke r1.<com.android.server.utils.TimingsTraceAndSlog: void traceEnd()>();

     label061:
        if z7 == 0 goto label080;

     label062:
        virtualinvoke r1.<com.android.server.utils.TimingsTraceAndSlog: void traceBegin(java.lang.String)>("sendUserStartBroadcast");

        i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i17 = staticinvoke <android.os.Binder: int getCallingPid()>();

        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label063:
        r101 = new android.content.Intent;

        specialinvoke r101.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.USER_STARTED");

        virtualinvoke r101.<android.content.Intent: android.content.Intent addFlags(int)>(1342177280);

        virtualinvoke r101.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.intent.extra.user_handle", i0);

        i18 = <com.android.server.am.ActivityManagerService: int MY_PID>;

     label064:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: int broadcastIntentLocked(com.android.server.am.ProcessRecord,java.lang.String,java.lang.String,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String[],int,android.os.Bundle,boolean,boolean,int,int,int,int,int)>(null, null, null, r101, null, null, 0, null, null, null, -1, null, 0, 0, i18, 1000, i1, i17, i0);

        r102 = new android.content.Intent;

        specialinvoke r102.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.USER_STARTING");

        virtualinvoke r102.<android.content.Intent: android.content.Intent addFlags(int)>(1073741824);

     label065:
        virtualinvoke r102.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.intent.extra.user_handle", i0);

        r103 = new com.android.server.am.ActivityManagerService$17;

     label066:
        specialinvoke r103.<com.android.server.am.ActivityManagerService$17: void <init>(com.android.server.am.ActivityManagerService)>(r0);

        i19 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        $r41 = newarray (java.lang.String)[1];

        $r41[0] = "android.permission.INTERACT_ACROSS_USERS";

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: int broadcastIntentLocked(com.android.server.am.ProcessRecord,java.lang.String,java.lang.String,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String[],int,android.os.Bundle,boolean,boolean,int,int,int,int,int)>(null, null, null, r102, null, r103, 0, null, null, $r41, -1, null, 1, 0, i19, 1000, i1, i17, -1);

     label067:
        goto label073;

     label068:
        $r78 := @caughtexception;

        r104 = $r78;

        goto label072;

     label069:
        $r68 := @caughtexception;

        r104 = $r68;

        goto label072;

     label070:
        $r69 := @caughtexception;

        r104 = $r69;

        goto label072;

     label071:
        $r76 := @caughtexception;

        r104 = $r76;

     label072:
        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", "Failed sending first user broadcasts", r104);

     label073:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

     label074:
        virtualinvoke r1.<com.android.server.utils.TimingsTraceAndSlog: void traceEnd()>();

     label075:
        goto label081;

     label076:
        $r80 := @caughtexception;

     label077:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

     label078:
        throw $r80;

     label079:
        $r77 := @caughtexception;

        r98 = $r77;

        goto label088;

     label080:
        r106 = new java.lang.StringBuilder;

        specialinvoke r106.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r106.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not sending multi-user broadcasts for non-system user ");

        virtualinvoke r106.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r33 = virtualinvoke r106.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", $r33);

     label081:
        virtualinvoke r1.<com.android.server.utils.TimingsTraceAndSlog: void traceBegin(java.lang.String)>("resumeTopActivities");

        $r34 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerInternal mAtmInternal>;

        virtualinvoke $r34.<com.android.server.wm.ActivityTaskManagerInternal: void resumeTopActivities(boolean)>(0);

        virtualinvoke r1.<com.android.server.utils.TimingsTraceAndSlog: void traceEnd()>();

     label082:
        if z7 == 0 goto label084;

     label083:
        virtualinvoke r1.<com.android.server.utils.TimingsTraceAndSlog: void traceBegin(java.lang.String)>("sendUserSwitchBroadcasts");

        $r36 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.UserController mUserController>;

        virtualinvoke $r36.<com.android.server.am.UserController: void sendUserSwitchBroadcasts(int,int)>(-1, i0);

        virtualinvoke r1.<com.android.server.utils.TimingsTraceAndSlog: void traceEnd()>();

     label084:
        virtualinvoke r1.<com.android.server.utils.TimingsTraceAndSlog: void traceBegin(java.lang.String)>("setBinderProxies");

        staticinvoke <com.android.internal.os.BinderInternal: void nSetBinderProxyCountWatermarks(int,int)>(6000, 5500);

        staticinvoke <com.android.internal.os.BinderInternal: void nSetBinderProxyCountEnabled(boolean)>(1);

        r108 = new com.android.server.am._$$Lambda$ActivityManagerService$fS1_94oynjazWAe2OWfx5p_HXUQ;

        specialinvoke r108.<com.android.server.am._$$Lambda$ActivityManagerService$fS1_94oynjazWAe2OWfx5p_HXUQ: void <init>(com.android.server.am.ActivityManagerService)>(r0);

        $r35 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        staticinvoke <com.android.internal.os.BinderInternal: void setBinderProxyCountCallback(com.android.internal.os.BinderInternal$BinderProxyLimitListener,android.os.Handler)>(r108, $r35);

        virtualinvoke r1.<com.android.server.utils.TimingsTraceAndSlog: void traceEnd()>();

        virtualinvoke r1.<com.android.server.utils.TimingsTraceAndSlog: void traceEnd()>();

        virtualinvoke r1.<com.android.server.utils.TimingsTraceAndSlog: void traceEnd()>();

        exitmonitor r0;

     label085:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label086:
        $r63 := @caughtexception;

        r98 = $r63;

        goto label088;

     label087:
        $r81 := @caughtexception;

        r98 = $r81;

     label088:
        exitmonitor r0;

     label089:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw r98;

     label090:
        $r79 := @caughtexception;

        r98 = $r79;

        goto label088;

     label091:
        $r64 := @caughtexception;

        r94 = $r64;

     label092:
        exitmonitor r0;

     label093:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw r94;

     label094:
        $r85 := @caughtexception;

        r94 = $r85;

        goto label092;

     label095:
        $r70 := @caughtexception;

        r91 = $r70;

        goto label097;

     label096:
        $r82 := @caughtexception;

        r91 = $r82;

     label097:
        exitmonitor r88;

     label098:
        throw r91;

     label099:
        $r83 := @caughtexception;

        r91 = $r83;

        goto label097;

     label100:
        $r84 := @caughtexception;

        r109 = $r84;

     label101:
        exitmonitor r0;

     label102:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw r109;

     label103:
        $r67 := @caughtexception;

        r109 = $r67;

        goto label101;

        catch java.lang.Throwable from label001 to label002 with label100;
        catch java.lang.Throwable from label003 to label004 with label100;
        catch java.lang.Throwable from label004 to label005 with label100;
        catch java.lang.Throwable from label006 to label007 with label100;
        catch android.os.RemoteException from label008 to label009 with label010;
        catch java.lang.Throwable from label012 to label013 with label096;
        catch java.lang.Throwable from label015 to label016 with label025;
        catch java.lang.Throwable from label017 to label018 with label025;
        catch java.lang.Throwable from label019 to label020 with label025;
        catch java.lang.Throwable from label021 to label022 with label023;
        catch java.lang.Throwable from label026 to label027 with label095;
        catch java.lang.Throwable from label028 to label029 with label091;
        catch java.lang.Throwable from label030 to label031 with label034;
        catch java.lang.Throwable from label032 to label033 with label034;
        catch java.lang.Throwable from label035 to label036 with label091;
        catch java.lang.Throwable from label045 to label046 with label087;
        catch java.lang.Throwable from label047 to label048 with label049;
        catch java.lang.Throwable from label050 to label051 with label087;
        catch java.lang.Throwable from label052 to label053 with label049;
        catch android.os.RemoteException from label053 to label054 with label056;
        catch java.lang.Throwable from label053 to label054 with label049;
        catch java.lang.Throwable from label054 to label055 with label049;
        catch java.lang.Throwable from label057 to label058 with label049;
        catch java.lang.Throwable from label059 to label060 with label049;
        catch java.lang.Throwable from label060 to label061 with label087;
        catch java.lang.Throwable from label062 to label063 with label079;
        catch java.lang.Throwable from label063 to label064 with label071;
        catch java.lang.Throwable from label064 to label065 with label070;
        catch java.lang.Throwable from label065 to label066 with label069;
        catch java.lang.Throwable from label066 to label067 with label068;
        catch java.lang.Throwable from label072 to label073 with label076;
        catch java.lang.Throwable from label073 to label074 with label086;
        catch java.lang.Throwable from label074 to label075 with label086;
        catch java.lang.Throwable from label077 to label078 with label086;
        catch java.lang.Throwable from label078 to label079 with label086;
        catch java.lang.Throwable from label080 to label081 with label086;
        catch java.lang.Throwable from label081 to label082 with label090;
        catch java.lang.Throwable from label083 to label084 with label090;
        catch java.lang.Throwable from label084 to label085 with label090;
        catch java.lang.Throwable from label088 to label089 with label090;
        catch java.lang.Throwable from label092 to label093 with label094;
        catch java.lang.Throwable from label097 to label098 with label099;
        catch java.lang.Throwable from label101 to label102 with label103;
    }

    void tempWhitelistForPendingIntentLocked(int, int, int, long, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, i2, $i4;
        long l3;
        com.android.server.am.ActivityManagerService$PidMap r1, $r3;
        com.android.server.am.ProcessRecord r2;
        boolean $z0;
        java.lang.String $r6, r8;
        java.lang.Throwable $r7;
        java.lang.StringBuilder r9;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        l3 := @parameter3: long;

        r8 := @parameter4: java.lang.String;

        r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        entermonitor r1;

     label01:
        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        r2 = virtualinvoke $r3.<com.android.server.am.ActivityManagerService$PidMap: com.android.server.am.ProcessRecord get(int)>(i0);

     label02:
        if r2 != null goto label05;

     label03:
        r9 = new java.lang.StringBuilder;

        specialinvoke r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("tempWhitelistForPendingIntentLocked() no ProcessRecord for pid ");

        virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r6);

        exitmonitor r1;

     label04:
        return;

     label05:
        $z0 = r2.<com.android.server.am.ProcessRecord: boolean whitelistManager>;

        if $z0 != 0 goto label07;

        $i4 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkPermission(java.lang.String,int,int)>("android.permission.CHANGE_DEVICE_IDLE_TEMP_WHITELIST", i0, i1);

        if $i4 == 0 goto label07;

        exitmonitor r1;

     label06:
        return;

     label07:
        exitmonitor r1;

     label08:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void tempWhitelistUidLocked(int,long,java.lang.String)>(i2, l3, r8);

        return;

     label09:
        $r7 := @caughtexception;

     label10:
        exitmonitor r1;

     label11:
        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    void tempWhitelistUidLocked(int, long, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0;
        long l1;
        java.lang.String r1;
        com.android.server.am.ActivityManagerService$PendingTempWhitelist $r2;
        com.android.server.am.PendingTempWhitelists $r3;
        android.os.Handler $r4;
        android.os.Message $r5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        r1 := @parameter2: java.lang.String;

        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.PendingTempWhitelists mPendingTempWhitelist>;

        $r2 = new com.android.server.am.ActivityManagerService$PendingTempWhitelist;

        specialinvoke $r2.<com.android.server.am.ActivityManagerService$PendingTempWhitelist: void <init>(int,long,java.lang.String)>(i0, l1, r1);

        virtualinvoke $r3.<com.android.server.am.PendingTempWhitelists: void put(int,com.android.server.am.ActivityManagerService$PendingTempWhitelist)>(i0, $r2);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void setUidTempWhitelistStateLocked(int,boolean)>(i0, 1);

        $r4 = r0.<com.android.server.am.ActivityManagerService: android.os.Handler mUiHandler>;

        $r5 = virtualinvoke $r4.<android.os.Handler: android.os.Message obtainMessage(int)>(68);

        virtualinvoke $r5.<android.os.Message: void sendToTarget()>();

        return;
    }

    final void trimApplications(java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.Throwable $r1;
        java.lang.String r2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r2 := @parameter0: java.lang.String;

        entermonitor r0;

     label1:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void trimApplicationsLocked(java.lang.String)>(r2);

        exitmonitor r0;

     label2:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label3:
        $r1 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    final void trimApplicationsLocked(java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1, $r12, $r18;
        com.android.server.am.ProcessRecord r2;
        com.android.server.am.ProcessList $r4, $r6, $r28;
        java.util.ArrayList $r5, $r7, $r29;
        int $i0, $i1, $i3, $i4, $i5, i6;
        java.lang.Object $r8;
        boolean $z0, $z1, $z3;
        android.util.ArraySet $r9;
        java.lang.StringBuilder $r10;
        android.app.IApplicationThread $r15, $r19, $r23, $r24;
        android.content.pm.ApplicationInfo $r21;
        java.lang.Exception $r25;
        android.os.IBinder r26;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        $r4 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r5 = $r4.<com.android.server.am.ProcessList: java.util.ArrayList mRemovedProcesses>;

        $i0 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        i6 = $i0 - 1;

     label01:
        if i6 < 0 goto label10;

        $r6 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r7 = $r6.<com.android.server.am.ProcessList: java.util.ArrayList mRemovedProcesses>;

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(i6);

        r2 = (com.android.server.am.ProcessRecord) $r8;

        $z0 = virtualinvoke r2.<com.android.server.am.ProcessRecord: boolean hasActivitiesOrRecentTasks()>();

        if $z0 != 0 goto label09;

        $r9 = r2.<com.android.server.am.ProcessRecord: android.util.ArraySet curReceivers>;

        $z1 = virtualinvoke $r9.<android.util.ArraySet: boolean isEmpty()>();

        if $z1 == 0 goto label09;

        $i1 = virtualinvoke r2.<com.android.server.am.ProcessRecord: int numberOfRunningServices()>();

        if $i1 != 0 goto label09;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exiting empty application process ");

        $r12 = virtualinvoke r2.<com.android.server.am.ProcessRecord: java.lang.String toShortString()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r15 = r2.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r15 == null goto label02;

        $r24 = r2.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        r26 = interfaceinvoke $r24.<android.app.IApplicationThread: android.os.IBinder asBinder()>();

        goto label03;

     label02:
        r26 = null;

     label03:
        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r26);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")\n");

        $r18 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", $r18);

        $i3 = r2.<com.android.server.am.ProcessRecord: int pid>;

        if $i3 <= 0 goto label04;

        $i5 = r2.<com.android.server.am.ProcessRecord: int pid>;

        $i4 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        if $i5 == $i4 goto label04;

        virtualinvoke r2.<com.android.server.am.ProcessRecord: void kill(java.lang.String,int,int,boolean)>("empty", 13, 4, 0);

        goto label08;

     label04:
        $r19 = r2.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r19 == null goto label08;

     label05:
        $r23 = r2.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        interfaceinvoke $r23.<android.app.IApplicationThread: void scheduleExit()>();

     label06:
        goto label08;

     label07:
        $r25 := @caughtexception;

     label08:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean cleanUpApplicationRecordLocked(com.android.server.am.ProcessRecord,boolean,boolean,int,boolean)>(r2, 0, 1, -1, 0);

        $r28 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r29 = $r28.<com.android.server.am.ProcessList: java.util.ArrayList mRemovedProcesses>;

        virtualinvoke $r29.<java.util.ArrayList: java.lang.Object remove(int)>(i6);

        $z3 = virtualinvoke r2.<com.android.server.am.ProcessRecord: boolean isPersistent()>();

        if $z3 == 0 goto label09;

        $r21 = r2.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord addAppLocked(android.content.pm.ApplicationInfo,java.lang.String,boolean,java.lang.String,int)>($r21, null, 0, null, 2);

     label09:
        i6 = i6 + -1;

        goto label01;

     label10:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void updateOomAdjLocked(java.lang.String)>(r1);

        return;

        catch java.lang.Exception from label05 to label06 with label07;
    }

    public void unbindBackupAgent(android.content.pm.ApplicationInfo)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, $i1, i6;
        android.util.SparseArray $r1, $r14, $r15, $r19, $r27;
        java.lang.Object $r2, $r5;
        android.content.pm.ApplicationInfo $r3, $r9, r20;
        java.lang.String $r4, $r13, r22;
        boolean $z0;
        com.android.server.job.JobSchedulerInternal $r6;
        android.app.IApplicationThread $r7, r25;
        android.content.res.CompatibilityInfo $r8;
        java.lang.Exception $r16;
        java.lang.Throwable $r17, $r18;
        com.android.server.am.BackupRecord r21;
        java.lang.StringBuilder r23;
        com.android.server.am.ProcessRecord r24;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r20 := @parameter0: android.content.pm.ApplicationInfo;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.CONFIRM_FULL_BACKUP", "unbindBackupAgent");

        if r20 != null goto label01;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", "unbind backup agent for null app");

        return;

     label01:
        $i1 = r20.<android.content.pm.ApplicationInfo: int uid>;

        i0 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i1);

        entermonitor r0;

     label02:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r1 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mBackupTargets>;

        $r2 = virtualinvoke $r1.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r21 = (com.android.server.am.BackupRecord) $r2;

     label03:
        if r21 != null goto label04;

        r22 = null;

        goto label05;

     label04:
        $r3 = r21.<com.android.server.am.BackupRecord: android.content.pm.ApplicationInfo appInfo>;

        r22 = $r3.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

     label05:
        if r22 != null goto label09;

     label06:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", "Unbinding backup agent with no active backup");

     label07:
        $r15 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mBackupTargets>;

        virtualinvoke $r15.<android.util.SparseArray: void delete(int)>(i0);

        exitmonitor r0;

     label08:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label09:
        $r4 = r20.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $z0 = virtualinvoke r22.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label12;

        r23 = new java.lang.StringBuilder;

        specialinvoke r23.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unbind of ");

        virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r20);

        virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but is not the current backup target");

        $r13 = virtualinvoke r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ActivityManager", $r13);

     label10:
        $r14 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mBackupTargets>;

        virtualinvoke $r14.<android.util.SparseArray: void delete(int)>(i0);

        exitmonitor r0;

     label11:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label12:
        r24 = r21.<com.android.server.am.BackupRecord: com.android.server.am.ProcessRecord app>;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean updateOomAdjLocked(com.android.server.am.ProcessRecord,boolean,java.lang.String)>(r24, 1, "updateOomAdj_meh");

        r24.<com.android.server.am.ProcessRecord: boolean inFullBackup> = 0;

     label13:
        if r21 == null goto label16;

     label14:
        $r9 = r21.<com.android.server.am.BackupRecord: android.content.pm.ApplicationInfo appInfo>;

        i6 = $r9.<android.content.pm.ApplicationInfo: int uid>;

     label15:
        goto label17;

     label16:
        i6 = -1;

     label17:
        r25 = r24.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

     label18:
        if r25 == null goto label23;

     label19:
        $r7 = r24.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r8 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: android.content.res.CompatibilityInfo compatibilityInfoForPackage(android.content.pm.ApplicationInfo)>(r20);

        interfaceinvoke $r7.<android.app.IApplicationThread: void scheduleDestroyBackupAgent(android.content.pm.ApplicationInfo,android.content.res.CompatibilityInfo,int)>(r20, $r8, i0);

     label20:
        goto label23;

     label21:
        $r16 := @caughtexception;

     label22:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ActivityManager", "Exception when unbinding backup agent:");

        virtualinvoke $r16.<java.lang.Exception: void printStackTrace()>();

     label23:
        $r27 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mBackupTargets>;

        virtualinvoke $r27.<android.util.SparseArray: void delete(int)>(i0);

     label24:
        exitmonitor r0;

     label25:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        if i6 == -1 goto label26;

        $r5 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Lcom/android/server/job/JobSchedulerInternal;");

        $r6 = (com.android.server.job.JobSchedulerInternal) $r5;

        interfaceinvoke $r6.<com.android.server.job.JobSchedulerInternal: void removeBackingUpUid(int)>(i6);

     label26:
        return;

     label27:
        $r18 := @caughtexception;

     label28:
        $r19 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mBackupTargets>;

        virtualinvoke $r19.<android.util.SparseArray: void delete(int)>(i0);

     label29:
        throw $r18;

     label30:
        $r17 := @caughtexception;

     label31:
        exitmonitor r0;

     label32:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r17;

        catch java.lang.Throwable from label02 to label03 with label30;
        catch java.lang.Throwable from label04 to label05 with label30;
        catch java.lang.Throwable from label06 to label07 with label27;
        catch java.lang.Throwable from label07 to label08 with label30;
        catch java.lang.Throwable from label09 to label10 with label27;
        catch java.lang.Throwable from label10 to label11 with label30;
        catch java.lang.Throwable from label12 to label13 with label27;
        catch java.lang.Throwable from label14 to label15 with label27;
        catch java.lang.Throwable from label17 to label18 with label27;
        catch java.lang.Exception from label19 to label20 with label21;
        catch java.lang.Throwable from label19 to label20 with label27;
        catch java.lang.Throwable from label22 to label23 with label27;
        catch java.lang.Throwable from label23 to label24 with label30;
        catch java.lang.Throwable from label24 to label25 with label30;
        catch java.lang.Throwable from label28 to label29 with label30;
        catch java.lang.Throwable from label29 to label30 with label30;
        catch java.lang.Throwable from label31 to label32 with label30;
    }

    public void unbindFinished(android.os.IBinder, android.content.Intent, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.Intent r1;
        boolean z0, $z1;
        com.android.server.am.ServiceRecord $r2;
        com.android.server.am.ActiveServices $r3;
        java.lang.IllegalArgumentException $r4;
        java.lang.Throwable $r5;
        android.os.IBinder r6;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r6 := @parameter0: android.os.IBinder;

        r1 := @parameter1: android.content.Intent;

        z0 := @parameter2: boolean;

        if r1 == null goto label2;

        $z1 = virtualinvoke r1.<android.content.Intent: boolean hasFileDescriptors()>();

        if $z1 == 1 goto label1;

        goto label2;

     label1:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("File descriptors passed in Intent");

        throw $r4;

     label2:
        entermonitor r0;

     label3:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveServices mServices>;

        $r2 = (com.android.server.am.ServiceRecord) r6;

        virtualinvoke $r3.<com.android.server.am.ActiveServices: void unbindFinishedLocked(com.android.server.am.ServiceRecord,android.content.Intent,boolean)>($r2, r1, z0);

        exitmonitor r0;

     label4:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label5:
        $r5 := @caughtexception;

     label6:
        exitmonitor r0;

     label7:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r5;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public boolean unbindService(android.app.IServiceConnection)
    {
        com.android.server.am.ActivityManagerService r0;
        boolean z0;
        com.android.server.am.ActiveServices $r1;
        java.lang.Throwable $r2;
        android.app.IServiceConnection r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r3 := @parameter0: android.app.IServiceConnection;

        entermonitor r0;

     label1:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveServices mServices>;

        z0 = virtualinvoke $r1.<com.android.server.am.ActiveServices: boolean unbindServiceLocked(android.app.IServiceConnection)>(r3);

        exitmonitor r0;

     label2:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return z0;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public final void unbroadcastIntent(android.app.IApplicationThread, android.content.Intent, int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i8, i9, i10, $i11;
        java.util.ArrayList r1;
        com.android.server.am.UserController $r2;
        android.util.SparseArray $r9, $r13;
        java.lang.Object $r10, $r12, $r16;
        java.lang.String $r11, $r14, r25;
        android.content.Intent $r17, r22;
        boolean $z0, $z1;
        java.lang.IllegalArgumentException $r19;
        java.lang.Throwable $r20;
        android.app.IApplicationThread r21;
        android.util.ArrayMap r23;
        java.lang.StringBuilder r24;
        java.lang.SecurityException r26;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r21 := @parameter0: android.app.IApplicationThread;

        r22 := @parameter1: android.content.Intent;

        i9 := @parameter2: int;

        if r22 == null goto label02;

        $z1 = virtualinvoke r22.<android.content.Intent: boolean hasFileDescriptors()>();

        if $z1 == 1 goto label01;

        goto label02;

     label01:
        $r19 = new java.lang.IllegalArgumentException;

        specialinvoke $r19.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("File descriptors passed in Intent");

        throw $r19;

     label02:
        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.UserController mUserController>;

        $i2 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i0 = virtualinvoke $r2.<com.android.server.am.UserController: int handleIncomingUser(int,int,int,boolean,int,java.lang.String,java.lang.String)>($i2, $i3, i9, 1, 0, "removeStickyBroadcast", null);

        entermonitor r0;

     label03:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $i4 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.BROADCAST_STICKY");

        if $i4 != 0 goto label17;

        $r9 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mStickyBroadcasts>;

        $r10 = virtualinvoke $r9.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r23 = (android.util.ArrayMap) $r10;

     label04:
        if r23 == null goto label15;

     label05:
        $r11 = virtualinvoke r22.<android.content.Intent: java.lang.String getAction()>();

        $r12 = virtualinvoke r23.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r11);

        r1 = (java.util.ArrayList) $r12;

     label06:
        if r1 == null goto label14;

     label07:
        i1 = virtualinvoke r1.<java.util.ArrayList: int size()>();

     label08:
        i10 = 0;

     label09:
        if i10 >= i1 goto label13;

     label10:
        $r16 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i10);

        $r17 = (android.content.Intent) $r16;

        $z0 = virtualinvoke r22.<android.content.Intent: boolean filterEquals(android.content.Intent)>($r17);

        if $z0 == 0 goto label12;

        virtualinvoke r1.<java.util.ArrayList: java.lang.Object remove(int)>(i10);

     label11:
        goto label13;

     label12:
        i10 = i10 + 1;

        goto label09;

     label13:
        $i8 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if $i8 > 0 goto label14;

        $r14 = virtualinvoke r22.<android.content.Intent: java.lang.String getAction()>();

        virtualinvoke r23.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>($r14);

     label14:
        $i11 = virtualinvoke r23.<android.util.ArrayMap: int size()>();

        if $i11 > 0 goto label15;

        $r13 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mStickyBroadcasts>;

        virtualinvoke $r13.<android.util.SparseArray: void remove(int)>(i0);

     label15:
        exitmonitor r0;

     label16:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label17:
        r24 = new java.lang.StringBuilder;

        specialinvoke r24.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: unbroadcastIntent() from pid=");

        $i5 = staticinvoke <android.os.Binder: int getCallingPid()>();

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i6 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires ");

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.BROADCAST_STICKY");

        r25 = virtualinvoke r24.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r25);

        r26 = new java.lang.SecurityException;

        specialinvoke r26.<java.lang.SecurityException: void <init>(java.lang.String)>(r25);

        throw r26;

     label18:
        $r20 := @caughtexception;

     label19:
        exitmonitor r0;

     label20:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r20;

        catch java.lang.Throwable from label03 to label04 with label18;
        catch java.lang.Throwable from label05 to label06 with label18;
        catch java.lang.Throwable from label07 to label08 with label18;
        catch java.lang.Throwable from label10 to label11 with label18;
        catch java.lang.Throwable from label13 to label14 with label18;
        catch java.lang.Throwable from label14 to label15 with label18;
        catch java.lang.Throwable from label15 to label16 with label18;
        catch java.lang.Throwable from label17 to label18 with label18;
        catch java.lang.Throwable from label19 to label20 with label18;
    }

    public void unhandledBack()
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.wm.ActivityTaskManagerService $r1;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerService mActivityTaskManager>;

        virtualinvoke $r1.<com.android.server.wm.ActivityTaskManagerService: void unhandledBack()>();

        return;
    }

    public boolean unlockUser(int, byte[], byte[], android.os.IProgressListener)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0;
        byte[] r1, r2;
        android.os.IProgressListener r3;
        com.android.server.am.UserController $r4;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: byte[];

        r2 := @parameter2: byte[];

        r3 := @parameter3: android.os.IProgressListener;

        $r4 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.UserController mUserController>;

        $z0 = virtualinvoke $r4.<com.android.server.am.UserController: boolean unlockUser(int,byte[],byte[],android.os.IProgressListener)>(i0, r1, r2, r3);

        return $z0;
    }

    public void unregisterIntentSenderCancelListener(android.content.IIntentSender, com.android.internal.os.IResultReceiver)
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.IIntentSender r1;
        com.android.internal.os.IResultReceiver r2;
        com.android.server.am.PendingIntentController $r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.content.IIntentSender;

        r2 := @parameter1: com.android.internal.os.IResultReceiver;

        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.PendingIntentController mPendingIntentController>;

        virtualinvoke $r3.<com.android.server.am.PendingIntentController: void unregisterIntentSenderCancelListener(android.content.IIntentSender,com.android.internal.os.IResultReceiver)>(r1, r2);

        return;
    }

    public void unregisterProcessObserver(android.app.IProcessObserver)
    {
        com.android.server.am.ActivityManagerService r0;
        android.os.RemoteCallbackList $r1;
        java.lang.Throwable $r2;
        android.app.IProcessObserver r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r3 := @parameter0: android.app.IProcessObserver;

        entermonitor r0;

     label1:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r1 = r0.<com.android.server.am.ActivityManagerService: android.os.RemoteCallbackList mProcessObservers>;

        virtualinvoke $r1.<android.os.RemoteCallbackList: boolean unregister(android.os.IInterface)>(r3);

        exitmonitor r0;

     label2:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void unregisterReceiver(android.content.IIntentReceiver)
    {
        com.android.server.am.ActivityManagerService r0;
        long l0;
        com.android.server.am.BroadcastRecord r1, $r10;
        java.util.HashMap $r2;
        android.os.IBinder $r3, $r6;
        java.lang.Object $r4;
        boolean $z1, $z4, $z5, z6, z7;
        android.content.IIntentReceiver $r5, r17;
        com.android.server.am.ProcessRecord $r7, $r19;
        android.util.ArraySet $r8;
        com.android.server.am.BroadcastQueue $r9, $r13, $r14;
        android.os.Bundle $r11;
        java.lang.String $r12;
        int $i1;
        java.lang.Throwable $r15, $r16;
        com.android.server.am.ReceiverList r18;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r17 := @parameter0: android.content.IIntentReceiver;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        z6 = 0;

     label01:
        entermonitor r0;

     label02:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r2 = r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mRegisteredReceivers>;

        $r3 = interfaceinvoke r17.<android.content.IIntentReceiver: android.os.IBinder asBinder()>();

        $r4 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r3);

        r18 = (com.android.server.am.ReceiverList) $r4;

     label03:
        if r18 == null goto label16;

     label04:
        r1 = r18.<com.android.server.am.ReceiverList: com.android.server.am.BroadcastRecord curBroadcast>;

     label05:
        z7 = 0;

        if r1 == null goto label11;

        z7 = 0;

     label06:
        $r9 = r1.<com.android.server.am.BroadcastRecord: com.android.server.am.BroadcastQueue queue>;

        $r10 = virtualinvoke $r9.<com.android.server.am.BroadcastQueue: com.android.server.am.BroadcastRecord getMatchingOrderedReceiver(android.os.IBinder)>(r1);

        if r1 != $r10 goto label11;

     label07:
        z7 = 0;

     label08:
        $r13 = r1.<com.android.server.am.BroadcastRecord: com.android.server.am.BroadcastQueue queue>;

        $i1 = r1.<com.android.server.am.BroadcastRecord: int resultCode>;

        $r12 = r1.<com.android.server.am.BroadcastRecord: java.lang.String resultData>;

        $r11 = r1.<com.android.server.am.BroadcastRecord: android.os.Bundle resultExtras>;

        $z4 = r1.<com.android.server.am.BroadcastRecord: boolean resultAbort>;

        $z5 = virtualinvoke $r13.<com.android.server.am.BroadcastQueue: boolean finishReceiverLocked(com.android.server.am.BroadcastRecord,int,java.lang.String,android.os.Bundle,boolean,boolean)>(r1, $i1, $r12, $r11, $z4, 0);

        if $z5 == 0 goto label11;

     label09:
        z7 = 1;

     label10:
        $r14 = r1.<com.android.server.am.BroadcastRecord: com.android.server.am.BroadcastQueue queue>;

        virtualinvoke $r14.<com.android.server.am.BroadcastQueue: void processNextBroadcast(boolean)>(0);

     label11:
        $r19 = r18.<com.android.server.am.ReceiverList: com.android.server.am.ProcessRecord app>;

        if $r19 == null goto label12;

        $r7 = r18.<com.android.server.am.ReceiverList: com.android.server.am.ProcessRecord app>;

        $r8 = $r7.<com.android.server.am.ProcessRecord: android.util.ArraySet receivers>;

        virtualinvoke $r8.<android.util.ArraySet: boolean remove(java.lang.Object)>(r18);

     label12:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void removeReceiverLocked(com.android.server.am.ReceiverList)>(r18);

     label13:
        z6 = z7;

     label14:
        $z1 = r18.<com.android.server.am.ReceiverList: boolean linkedToDeath>;

        if $z1 == 0 goto label16;

        r18.<com.android.server.am.ReceiverList: boolean linkedToDeath> = 0;

        $r5 = r18.<com.android.server.am.ReceiverList: android.content.IIntentReceiver receiver>;

        $r6 = interfaceinvoke $r5.<android.content.IIntentReceiver: android.os.IBinder asBinder()>();

        interfaceinvoke $r6.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>(r18, 0);

     label15:
        z6 = z7;

     label16:
        exitmonitor r0;

     label17:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

     label18:
        if z6 == 0 goto label21;

     label19:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void trimApplications(java.lang.String)>("updateOomAdj_finishReceiver");

     label20:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label21:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label22:
        $r15 := @caughtexception;

     label23:
        exitmonitor r0;

     label24:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r15;

     label25:
        $r16 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r16;

        catch java.lang.Throwable from label01 to label02 with label25;
        catch java.lang.Throwable from label02 to label03 with label22;
        catch java.lang.Throwable from label04 to label05 with label22;
        catch java.lang.Throwable from label06 to label07 with label22;
        catch java.lang.Throwable from label08 to label09 with label22;
        catch java.lang.Throwable from label10 to label11 with label22;
        catch java.lang.Throwable from label11 to label12 with label22;
        catch java.lang.Throwable from label12 to label13 with label22;
        catch java.lang.Throwable from label14 to label15 with label22;
        catch java.lang.Throwable from label16 to label17 with label22;
        catch java.lang.Throwable from label17 to label18 with label25;
        catch java.lang.Throwable from label19 to label20 with label25;
        catch java.lang.Throwable from label23 to label24 with label22;
        catch java.lang.Throwable from label24 to label25 with label25;
    }

    public void unregisterTaskStackListener(android.app.ITaskStackListener)
    {
        com.android.server.am.ActivityManagerService r0;
        android.app.ITaskStackListener r1;
        com.android.server.wm.ActivityTaskManagerService $r2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.app.ITaskStackListener;

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerService mActivityTaskManager>;

        virtualinvoke $r2.<com.android.server.wm.ActivityTaskManagerService: void unregisterTaskStackListener(android.app.ITaskStackListener)>(r1);

        return;
    }

    public void unregisterUidObserver(android.app.IUidObserver)
    {
        com.android.server.am.ActivityManagerService r0;
        android.os.RemoteCallbackList $r1;
        java.lang.Throwable $r2;
        android.app.IUidObserver r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r3 := @parameter0: android.app.IUidObserver;

        entermonitor r0;

     label1:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r1 = r0.<com.android.server.am.ActivityManagerService: android.os.RemoteCallbackList mUidObservers>;

        virtualinvoke $r1.<android.os.RemoteCallbackList: boolean unregister(android.os.IInterface)>(r3);

        exitmonitor r0;

     label2:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void unregisterUserSwitchObserver(android.app.IUserSwitchObserver)
    {
        com.android.server.am.ActivityManagerService r0;
        android.app.IUserSwitchObserver r1;
        com.android.server.am.UserController $r2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.app.IUserSwitchObserver;

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.UserController mUserController>;

        virtualinvoke $r2.<com.android.server.am.UserController: void unregisterUserSwitchObserver(android.app.IUserSwitchObserver)>(r1);

        return;
    }

    public void unstableProviderDied(android.os.IBinder)
    {
        com.android.server.am.ActivityManagerService r0;
        long l0;
        java.lang.NullPointerException $r1;
        com.android.server.am.ContentProviderRecord $r2, $r4, $r6;
        android.os.IBinder $r3, r32;
        boolean $z0;
        android.content.IContentProvider $r5, r34;
        android.app.IApplicationThread $r7;
        java.lang.String $r9, $r14, $r21, r44;
        int $i1, $i2, $i3;
        android.content.pm.ApplicationInfo $r15;
        java.lang.ClassCastException $r22;
        java.lang.StringBuilder $r23, r35, r38;
        java.lang.IllegalArgumentException $r27;
        java.lang.Throwable $r28, $r29, $r30, $r31;
        com.android.server.am.ContentProviderConnection r33;
        com.android.server.am.ProcessRecord r37;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r32 := @parameter0: android.os.IBinder;

     label01:
        r33 = (com.android.server.am.ContentProviderConnection) r32;

     label02:
        if r33 == null goto label34;

        entermonitor r0;

     label03:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r2 = r33.<com.android.server.am.ContentProviderConnection: com.android.server.am.ContentProviderRecord provider>;

        r34 = $r2.<com.android.server.am.ContentProviderRecord: android.content.IContentProvider provider>;

        exitmonitor r0;

     label04:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        if r34 != null goto label05;

        return;

     label05:
        $r3 = interfaceinvoke r34.<android.content.IContentProvider: android.os.IBinder asBinder()>();

        $z0 = interfaceinvoke $r3.<android.os.IBinder: boolean pingBinder()>();

        if $z0 == 0 goto label11;

        entermonitor r0;

     label06:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        r35 = new java.lang.StringBuilder;

        specialinvoke r35.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unstableProviderDied: caller ");

        $i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke r35.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        virtualinvoke r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" says ");

        virtualinvoke r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r33);

        virtualinvoke r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" died, but we don\'t agree");

        $r21 = virtualinvoke r35.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r21);

        exitmonitor r0;

     label07:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label08:
        $r31 := @caughtexception;

     label09:
        exitmonitor r0;

     label10:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r31;

     label11:
        entermonitor r0;

     label12:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r4 = r33.<com.android.server.am.ContentProviderConnection: com.android.server.am.ContentProviderRecord provider>;

        $r5 = $r4.<com.android.server.am.ContentProviderRecord: android.content.IContentProvider provider>;

        if $r5 == r34 goto label14;

        exitmonitor r0;

     label13:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label14:
        $r6 = r33.<com.android.server.am.ContentProviderConnection: com.android.server.am.ContentProviderRecord provider>;

        r37 = $r6.<com.android.server.am.ContentProviderRecord: com.android.server.am.ProcessRecord proc>;

     label15:
        if r37 == null goto label26;

     label16:
        $r7 = r37.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r7 != null goto label18;

     label17:
        goto label26;

     label18:
        r38 = new java.lang.StringBuilder;

        specialinvoke r38.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Process ");

        $r9 = r37.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (pid ");

        $i1 = r37.<com.android.server.am.ProcessRecord: int pid>;

        virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") early provider death");

        $r14 = virtualinvoke r38.<java.lang.StringBuilder: java.lang.String toString()>();

        $r15 = r37.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i2 = $r15.<android.content.pm.ApplicationInfo: int uid>;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void reportUidInfoMessageLocked(java.lang.String,java.lang.String,int)>("ActivityManager", $r14, $i2);

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label19:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void appDiedLocked(com.android.server.am.ProcessRecord,java.lang.String)>(r37, "unstable content provider");

     label20:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

     label21:
        exitmonitor r0;

     label22:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label23:
        $r30 := @caughtexception;

     label24:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

     label25:
        throw $r30;

     label26:
        exitmonitor r0;

     label27:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label28:
        $r28 := @caughtexception;

     label29:
        exitmonitor r0;

     label30:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r28;

     label31:
        $r29 := @caughtexception;

     label32:
        exitmonitor r0;

     label33:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r29;

     label34:
        $r1 = new java.lang.NullPointerException;

        specialinvoke $r1.<java.lang.NullPointerException: void <init>(java.lang.String)>("connection is null");

        throw $r1;

     label35:
        $r22 := @caughtexception;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("refContentProvider: ");

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r32);

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not a ContentProviderConnection");

        r44 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r44);

        $r27 = new java.lang.IllegalArgumentException;

        specialinvoke $r27.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(r44);

        throw $r27;

        catch java.lang.ClassCastException from label01 to label02 with label35;
        catch java.lang.Throwable from label03 to label04 with label31;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
        catch java.lang.Throwable from label12 to label13 with label28;
        catch java.lang.Throwable from label14 to label15 with label28;
        catch java.lang.Throwable from label16 to label17 with label28;
        catch java.lang.Throwable from label18 to label19 with label28;
        catch java.lang.Throwable from label19 to label20 with label23;
        catch java.lang.Throwable from label20 to label21 with label28;
        catch java.lang.Throwable from label21 to label22 with label28;
        catch java.lang.Throwable from label24 to label25 with label28;
        catch java.lang.Throwable from label25 to label26 with label28;
        catch java.lang.Throwable from label26 to label27 with label28;
        catch java.lang.Throwable from label29 to label30 with label28;
        catch java.lang.Throwable from label32 to label33 with label31;
    }

    public void updateActivityUsageStats(android.content.ComponentName, int, int, android.os.IBinder, android.content.ComponentName)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, $i2;
        android.os.IBinder r1;
        android.content.ComponentName r2, r7;
        android.app.usage.UsageStatsManagerInternal $r3, $r5;
        com.android.server.contentcapture.ContentCaptureManagerInternal $r4, $r8;
        java.lang.Throwable $r6;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r7 := @parameter0: android.content.ComponentName;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: android.os.IBinder;

        r2 := @parameter4: android.content.ComponentName;

        entermonitor r0;

     label1:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r3 = r0.<com.android.server.am.ActivityManagerService: android.app.usage.UsageStatsManagerInternal mUsageStatsService>;

        if $r3 == null goto label2;

        $r5 = r0.<com.android.server.am.ActivityManagerService: android.app.usage.UsageStatsManagerInternal mUsageStatsService>;

        $i2 = virtualinvoke r1.<java.lang.Object: int hashCode()>();

        virtualinvoke $r5.<android.app.usage.UsageStatsManagerInternal: void reportEvent(android.content.ComponentName,int,int,int,android.content.ComponentName)>(r7, i0, i1, $i2, r2);

     label2:
        exitmonitor r0;

     label3:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        $r4 = r0.<com.android.server.am.ActivityManagerService: com.android.server.contentcapture.ContentCaptureManagerInternal mContentCaptureService>;

        if $r4 == null goto label5;

        if i1 == 2 goto label4;

        if i1 == 1 goto label4;

        if i1 == 23 goto label4;

        if i1 != 24 goto label5;

     label4:
        $r8 = r0.<com.android.server.am.ActivityManagerService: com.android.server.contentcapture.ContentCaptureManagerInternal mContentCaptureService>;

        virtualinvoke $r8.<com.android.server.contentcapture.ContentCaptureManagerInternal: void notifyActivityEvent(int,android.content.ComponentName,int)>(i0, r7, i1);

     label5:
        return;

     label6:
        $r6 := @caughtexception;

     label7:
        exitmonitor r0;

     label8:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public void updateActivityUsageStats(java.lang.String, int, int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1;
        android.app.usage.UsageStatsManagerInternal $r1, $r2;
        java.lang.Throwable $r3;
        java.lang.String r4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r4 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        entermonitor r0;

     label1:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r1 = r0.<com.android.server.am.ActivityManagerService: android.app.usage.UsageStatsManagerInternal mUsageStatsService>;

        if $r1 == null goto label2;

        $r2 = r0.<com.android.server.am.ActivityManagerService: android.app.usage.UsageStatsManagerInternal mUsageStatsService>;

        virtualinvoke $r2.<android.app.usage.UsageStatsManagerInternal: void reportEvent(java.lang.String,int,int)>(r4, i0, i1);

     label2:
        exitmonitor r0;

     label3:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label4:
        $r3 := @caughtexception;

     label5:
        exitmonitor r0;

     label6:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    void updateApplicationInfoLocked(java.util.List, int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0;
        boolean z0;
        com.android.server.am.ProcessList $r1;
        android.app.ActivityThread $r2;
        java.lang.Object $r3;
        com.android.server.am._$$Lambda$5hokEl5hcign5FXeGZdl53qh2zg $r5;
        com.android.server.am._$$Lambda$gATL8uvTPRd405IfefK1RL9bNqA $r7;
        java.util.List r8;
        java.util.concurrent.Executor r9;
        android.hardware.display.DisplayManagerInternal r10;
        com.android.server.wm.WindowManagerService r11;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r8 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        z0 = interfaceinvoke r8.<java.util.List: boolean contains(java.lang.Object)>("android");

        if z0 == 0 goto label1;

        staticinvoke <android.content.pm.PackageParser: void readConfigUseRoundIcon(android.content.res.Resources)>(null);

     label1:
        $r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        virtualinvoke $r1.<com.android.server.am.ProcessList: void updateApplicationInfoLocked(java.util.List,int,boolean)>(r8, i0, z0);

        if z0 == 0 goto label3;

        $r2 = staticinvoke <android.app.ActivityThread: android.app.ActivityThread currentActivityThread()>();

        r9 = virtualinvoke $r2.<android.app.ActivityThread: java.util.concurrent.Executor getExecutor()>();

        $r3 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/hardware/display/DisplayManagerInternal;");

        r10 = (android.hardware.display.DisplayManagerInternal) $r3;

        if r10 == null goto label2;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r10);

        $r7 = new com.android.server.am._$$Lambda$gATL8uvTPRd405IfefK1RL9bNqA;

        specialinvoke $r7.<com.android.server.am._$$Lambda$gATL8uvTPRd405IfefK1RL9bNqA: void <init>(android.hardware.display.DisplayManagerInternal)>(r10);

        interfaceinvoke r9.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r7);

     label2:
        r11 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.WindowManagerService mWindowManager>;

        if r11 == null goto label3;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r11);

        $r5 = new com.android.server.am._$$Lambda$5hokEl5hcign5FXeGZdl53qh2zg;

        specialinvoke $r5.<com.android.server.am._$$Lambda$5hokEl5hcign5FXeGZdl53qh2zg: void <init>(com.android.server.wm.WindowManagerService)>(r11);

        interfaceinvoke r9.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r5);

     label3:
        return;
    }

    void updateBatteryStats(android.content.ComponentName, int, int, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1;
        boolean z0;
        com.android.internal.os.BatteryStatsImpl r1;
        java.lang.String r2, r6;
        com.android.server.am.BatteryStatsService $r3;
        java.lang.Throwable $r4;
        android.content.ComponentName r5;
        byte b2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r5 := @parameter0: android.content.ComponentName;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        r1 = virtualinvoke $r3.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl getActiveStatistics()>();

        r2 = virtualinvoke r5.<android.content.ComponentName: java.lang.String getPackageName()>();

        r6 = virtualinvoke r5.<android.content.ComponentName: java.lang.String getShortClassName()>();

        if z0 == 0 goto label01;

        b2 = 1;

        goto label02;

     label01:
        b2 = 0;

     label02:
        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int,java.lang.String,java.lang.String,int)>(42, i0, r2, r6, b2);

        entermonitor r1;

        if z0 == 0 goto label05;

     label03:
        virtualinvoke r1.<com.android.internal.os.BatteryStatsImpl: void noteActivityResumedLocked(int)>(i0);

     label04:
        goto label06;

     label05:
        virtualinvoke r1.<com.android.internal.os.BatteryStatsImpl: void noteActivityPausedLocked(int)>(i0);

     label06:
        exitmonitor r1;

     label07:
        return;

     label08:
        $r4 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r4;

        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public boolean updateConfiguration(android.content.res.Configuration)
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.res.Configuration r1;
        com.android.server.wm.ActivityTaskManagerService $r2;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.content.res.Configuration;

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerService mActivityTaskManager>;

        $z0 = virtualinvoke $r2.<com.android.server.wm.ActivityTaskManagerService: boolean updateConfiguration(android.content.res.Configuration)>(r1);

        return $z0;
    }

    void updateCpuStats()
    {
        com.android.server.am.ActivityManagerService r0;
        long l0, $l1, $l2;
        java.lang.Thread r1, $r5;
        java.util.concurrent.atomic.AtomicLong $r3;
        byte $b3;
        java.util.concurrent.atomic.AtomicBoolean $r4;
        boolean $z0;
        java.lang.Throwable $r6;

        r0 := @this: com.android.server.am.ActivityManagerService;

        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r3 = r0.<com.android.server.am.ActivityManagerService: java.util.concurrent.atomic.AtomicLong mLastCpuTime>;

        $l1 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicLong: long get()>();

        $l2 = l0 - 5000L;

        $b3 = $l1 cmp $l2;

        if $b3 < 0 goto label1;

        return;

     label1:
        $r4 = r0.<com.android.server.am.ActivityManagerService: java.util.concurrent.atomic.AtomicBoolean mProcessCpuMutexFree>;

        $z0 = virtualinvoke $r4.<java.util.concurrent.atomic.AtomicBoolean: boolean compareAndSet(boolean,boolean)>(1, 0);

        if $z0 == 0 goto label7;

        r1 = r0.<com.android.server.am.ActivityManagerService: java.lang.Thread mProcessCpuThread>;

        entermonitor r1;

     label2:
        $r5 = r0.<com.android.server.am.ActivityManagerService: java.lang.Thread mProcessCpuThread>;

        virtualinvoke $r5.<java.lang.Object: void notify()>();

        exitmonitor r1;

     label3:
        goto label7;

     label4:
        $r6 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r6;

     label7:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    void updateCpuStatsNow()
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.internal.os.ProcessCpuTracker r1, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r20, $r21, $r24, $r25, $r26, $r27, $r28, $r29;
        long l0, l3, l4, $l5, $l6, $l20, $l56, $l57, $l61, $l62;
        int i1, i2, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, i42, i43, i44, i45, i46, i47, i48, i49, i50, $i51, $i52, i53, i54, $i55, $i59, $i60;
        com.android.internal.os.BatteryStatsImpl r2;
        com.android.internal.os.ProcessCpuTracker$Stats r3;
        java.util.concurrent.atomic.AtomicBoolean $r4;
        java.util.concurrent.atomic.AtomicLong $r5, $r19;
        byte $b7, $b58, $b63;
        com.android.server.am.BatteryStatsService $r6, $r34;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, z7;
        com.android.server.am.ActivityManagerService$PidMap $r15, r35, r36, r42, r48;
        java.lang.String $r16, $r18, $r22, $r23;
        android.content.pm.ApplicationInfo $r17;
        java.lang.Throwable $r30, $r31, $r32, $r33, r47;
        com.android.server.am.ProcessRecord r37;
        com.android.internal.os.BatteryStatsImpl$Uid$Proc r38, r39, r40, r44, r45, r46;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.os.ProcessCpuTracker mProcessCpuTracker>;

        entermonitor r1;

     label01:
        $r4 = r0.<com.android.server.am.ActivityManagerService: java.util.concurrent.atomic.AtomicBoolean mProcessCpuMutexFree>;

        virtualinvoke $r4.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(0);

        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

     label02:
        z7 = 0;

     label03:
        $r5 = r0.<com.android.server.am.ActivityManagerService: java.util.concurrent.atomic.AtomicLong mLastCpuTime>;

        $l5 = virtualinvoke $r5.<java.util.concurrent.atomic.AtomicLong: long get()>();

        $l6 = l0 - 5000L;

        $b7 = $l5 cmp $l6;

        if $b7 >= 0 goto label11;

        $r19 = r0.<com.android.server.am.ActivityManagerService: java.util.concurrent.atomic.AtomicLong mLastCpuTime>;

        virtualinvoke $r19.<java.util.concurrent.atomic.AtomicLong: void set(long)>(l0);

        $r20 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.os.ProcessCpuTracker mProcessCpuTracker>;

        virtualinvoke $r20.<com.android.internal.os.ProcessCpuTracker: void update()>();

     label04:
        z7 = 0;

     label05:
        $r21 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.os.ProcessCpuTracker mProcessCpuTracker>;

        $z4 = virtualinvoke $r21.<com.android.internal.os.ProcessCpuTracker: boolean hasGoodLastStats()>();

        if $z4 == 0 goto label11;

     label06:
        z7 = 1;

     label07:
        $r22 = "true";

        $r23 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("events.cpu");

        $z5 = virtualinvoke $r22.<java.lang.String: boolean equals(java.lang.Object)>($r23);

        if $z5 == 0 goto label11;

        $r24 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.os.ProcessCpuTracker mProcessCpuTracker>;

        i42 = virtualinvoke $r24.<com.android.internal.os.ProcessCpuTracker: int getLastUserTime()>();

        $r25 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.os.ProcessCpuTracker mProcessCpuTracker>;

        i43 = virtualinvoke $r25.<com.android.internal.os.ProcessCpuTracker: int getLastSystemTime()>();

        $r26 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.os.ProcessCpuTracker mProcessCpuTracker>;

        i44 = virtualinvoke $r26.<com.android.internal.os.ProcessCpuTracker: int getLastIoWaitTime()>();

        $r27 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.os.ProcessCpuTracker mProcessCpuTracker>;

        i1 = virtualinvoke $r27.<com.android.internal.os.ProcessCpuTracker: int getLastIrqTime()>();

        $r28 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.os.ProcessCpuTracker mProcessCpuTracker>;

        i2 = virtualinvoke $r28.<com.android.internal.os.ProcessCpuTracker: int getLastSoftIrqTime()>();

        $i21 = i42 + i43;

        $i22 = $i21 + i44;

        $i23 = $i22 + i1;

        $i24 = $i23 + i2;

        $r29 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.os.ProcessCpuTracker mProcessCpuTracker>;

        $i25 = virtualinvoke $r29.<com.android.internal.os.ProcessCpuTracker: int getLastIdleTime()>();

        i45 = $i24 + $i25;

     label08:
        i46 = i45;

        if i45 != 0 goto label09;

        i46 = 1;

     label09:
        $i26 = i42 + i43;

        $i27 = $i26 + i44;

        $i28 = $i27 + i1;

        $i29 = $i28 + i2;

        $i30 = $i29 * 100;

        $i41 = $i30 / i46;

        $i31 = i42 * 100;

        $i40 = $i31 / i46;

        $i32 = i43 * 100;

        $i39 = $i32 / i46;

        $i33 = i44 * 100;

        $i38 = $i33 / i46;

        $i34 = i1 * 100;

        $i37 = $i34 / i46;

        $i35 = i2 * 100;

        $i36 = $i35 / i46;

        staticinvoke <com.android.server.am.EventLogTags: void writeCpu(int,int,int,int,int,int)>($i41, $i40, $i39, $i38, $i37, $i36);

     label10:
        z7 = 1;

     label11:
        $r34 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        r2 = virtualinvoke $r34.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl getActiveStatistics()>();

        entermonitor r2;

     label12:
        r35 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        entermonitor r35;

     label13:
        if z7 == 0 goto label68;

        r36 = r35;

     label14:
        $z0 = virtualinvoke r2.<com.android.internal.os.BatteryStatsImpl: boolean startAddingCpuLocked()>();

        if $z0 == 0 goto label66;

     label15:
        i47 = 0;

        r36 = r35;

     label16:
        $r7 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.os.ProcessCpuTracker mProcessCpuTracker>;

        i48 = virtualinvoke $r7.<com.android.internal.os.ProcessCpuTracker: int countStats()>();

     label17:
        i49 = 0;

        i50 = 0;

     label18:
        if i49 >= i48 goto label63;

        r36 = r35;

     label19:
        $r14 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.os.ProcessCpuTracker mProcessCpuTracker>;

        r3 = virtualinvoke $r14.<com.android.internal.os.ProcessCpuTracker: com.android.internal.os.ProcessCpuTracker$Stats getStats(int)>(i49);

     label20:
        r36 = r35;

     label21:
        $z1 = r3.<com.android.internal.os.ProcessCpuTracker$Stats: boolean working>;

        if $z1 != 0 goto label23;

     label22:
        goto label62;

     label23:
        r36 = r35;

     label24:
        $r15 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        $i14 = r3.<com.android.internal.os.ProcessCpuTracker$Stats: int pid>;

        r37 = virtualinvoke $r15.<com.android.server.am.ActivityManagerService$PidMap: com.android.server.am.ProcessRecord get(int)>($i14);

     label25:
        r36 = r35;

     label26:
        $i15 = r3.<com.android.internal.os.ProcessCpuTracker$Stats: int rel_utime>;

        i47 = i47 + $i15;

     label27:
        r36 = r35;

     label28:
        $i16 = r3.<com.android.internal.os.ProcessCpuTracker$Stats: int rel_stime>;

        i50 = i50 + $i16;

     label29:
        if r37 == null goto label52;

        r36 = r35;

     label30:
        r38 = r37.<com.android.server.am.ProcessRecord: com.android.internal.os.BatteryStatsImpl$Uid$Proc curProcBatteryStats>;

     label31:
        if r38 == null goto label33;

        r39 = r38;

        r36 = r35;

     label32:
        $z3 = virtualinvoke r38.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: boolean isActive()>();

        if $z3 != 0 goto label37;

     label33:
        r36 = r35;

     label34:
        $r17 = r37.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i19 = $r17.<android.content.pm.ApplicationInfo: int uid>;

        $r18 = r37.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        r40 = virtualinvoke r2.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid$Proc getProcessStatsLocked(int,java.lang.String)>($i19, $r18);

     label35:
        r39 = r40;

        r36 = r35;

     label36:
        r37.<com.android.server.am.ProcessRecord: com.android.internal.os.BatteryStatsImpl$Uid$Proc curProcBatteryStats> = r40;

     label37:
        r36 = r35;

     label38:
        $i51 = r3.<com.android.internal.os.ProcessCpuTracker$Stats: int rel_utime>;

        $i52 = r3.<com.android.internal.os.ProcessCpuTracker$Stats: int rel_stime>;

        virtualinvoke r39.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: void addCpuTimeLocked(int,int)>($i51, $i52);

     label39:
        r36 = r35;

     label40:
        l3 = r37.<com.android.server.am.ProcessRecord: long curCpuTime>;

     label41:
        r36 = r35;

     label42:
        i53 = r3.<com.android.internal.os.ProcessCpuTracker$Stats: int rel_utime>;

     label43:
        r36 = r35;

     label44:
        i54 = r3.<com.android.internal.os.ProcessCpuTracker$Stats: int rel_stime>;

     label45:
        $i55 = i53 + i54;

        l4 = (long) $i55;

        r42 = r35;

     label46:
        $l56 = l3 + l4;

        r37.<com.android.server.am.ProcessRecord: long curCpuTime> = $l56;

     label47:
        r42 = r35;

     label48:
        $l57 = r37.<com.android.server.am.ProcessRecord: long lastCpuTime>;

        $b58 = $l57 cmp 0L;

        if $b58 != 0 goto label51;

     label49:
        r42 = r35;

     label50:
        $l20 = r37.<com.android.server.am.ProcessRecord: long curCpuTime>;

        r37.<com.android.server.am.ProcessRecord: long lastCpuTime> = $l20;

     label51:
        goto label62;

     label52:
        r42 = r35;

     label53:
        r44 = r3.<com.android.internal.os.ProcessCpuTracker$Stats: com.android.internal.os.BatteryStatsImpl$Uid$Proc batteryStats>;

     label54:
        if r44 == null goto label56;

        r45 = r44;

        r42 = r35;

     label55:
        $z2 = virtualinvoke r44.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: boolean isActive()>();

        if $z2 != 0 goto label60;

     label56:
        r42 = r35;

     label57:
        $i17 = r3.<com.android.internal.os.ProcessCpuTracker$Stats: int uid>;

        $i18 = virtualinvoke r2.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>($i17);

        $r16 = r3.<com.android.internal.os.ProcessCpuTracker$Stats: java.lang.String name>;

        r46 = virtualinvoke r2.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid$Proc getProcessStatsLocked(int,java.lang.String)>($i18, $r16);

     label58:
        r45 = r46;

        r42 = r35;

     label59:
        r3.<com.android.internal.os.ProcessCpuTracker$Stats: com.android.internal.os.BatteryStatsImpl$Uid$Proc batteryStats> = r46;

     label60:
        r42 = r35;

     label61:
        $i59 = r3.<com.android.internal.os.ProcessCpuTracker$Stats: int rel_utime>;

        $i60 = r3.<com.android.internal.os.ProcessCpuTracker$Stats: int rel_stime>;

        virtualinvoke r45.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: void addCpuTimeLocked(int,int)>($i59, $i60);

     label62:
        i49 = i49 + 1;

        goto label18;

     label63:
        r42 = r35;

     label64:
        $r8 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.os.ProcessCpuTracker mProcessCpuTracker>;

        $i8 = virtualinvoke $r8.<com.android.internal.os.ProcessCpuTracker: int getLastUserTime()>();

        $r9 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.os.ProcessCpuTracker mProcessCpuTracker>;

        $i9 = virtualinvoke $r9.<com.android.internal.os.ProcessCpuTracker: int getLastSystemTime()>();

        $r10 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.os.ProcessCpuTracker mProcessCpuTracker>;

        $i10 = virtualinvoke $r10.<com.android.internal.os.ProcessCpuTracker: int getLastIoWaitTime()>();

        $r11 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.os.ProcessCpuTracker mProcessCpuTracker>;

        $i11 = virtualinvoke $r11.<com.android.internal.os.ProcessCpuTracker: int getLastIrqTime()>();

        $r12 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.os.ProcessCpuTracker mProcessCpuTracker>;

        $i12 = virtualinvoke $r12.<com.android.internal.os.ProcessCpuTracker: int getLastSoftIrqTime()>();

        $r13 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.os.ProcessCpuTracker mProcessCpuTracker>;

        $i13 = virtualinvoke $r13.<com.android.internal.os.ProcessCpuTracker: int getLastIdleTime()>();

        virtualinvoke r2.<com.android.internal.os.BatteryStatsImpl: void finishAddingCpuLocked(int,int,int,int,int,int,int,int)>(i47, i50, $i8, $i9, $i10, $i11, $i12, $i13);

     label65:
        goto label68;

     label66:
        goto label68;

     label67:
        $r33 := @caughtexception;

        r47 = $r33;

        r48 = r36;

        goto label75;

     label68:
        r42 = r35;

     label69:
        exitmonitor r35;

     label70:
        $l61 = r0.<com.android.server.am.ActivityManagerService: long mLastWriteTime>;

        $l62 = l0 - 1800000L;

        $b63 = $l61 cmp $l62;

        if $b63 >= 0 goto label71;

        r0.<com.android.server.am.ActivityManagerService: long mLastWriteTime> = l0;

        $r6 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        virtualinvoke $r6.<com.android.server.am.BatteryStatsService: void scheduleWriteToDisk()>();

     label71:
        exitmonitor r2;

     label72:
        exitmonitor r1;

     label73:
        return;

     label74:
        $r30 := @caughtexception;

        r47 = $r30;

        r48 = r42;

     label75:
        r42 = r48;

     label76:
        exitmonitor r48;

     label77:
        throw r47;

     label78:
        $r32 := @caughtexception;

     label79:
        exitmonitor r2;

     label80:
        throw $r32;

     label81:
        $r31 := @caughtexception;

     label82:
        exitmonitor r1;

     label83:
        throw $r31;

        catch java.lang.Throwable from label01 to label02 with label81;
        catch java.lang.Throwable from label03 to label04 with label81;
        catch java.lang.Throwable from label05 to label06 with label81;
        catch java.lang.Throwable from label07 to label08 with label81;
        catch java.lang.Throwable from label09 to label10 with label81;
        catch java.lang.Throwable from label11 to label12 with label81;
        catch java.lang.Throwable from label12 to label13 with label78;
        catch java.lang.Throwable from label14 to label15 with label67;
        catch java.lang.Throwable from label16 to label17 with label67;
        catch java.lang.Throwable from label19 to label20 with label67;
        catch java.lang.Throwable from label21 to label22 with label67;
        catch java.lang.Throwable from label24 to label25 with label67;
        catch java.lang.Throwable from label26 to label27 with label67;
        catch java.lang.Throwable from label28 to label29 with label67;
        catch java.lang.Throwable from label30 to label31 with label67;
        catch java.lang.Throwable from label32 to label33 with label67;
        catch java.lang.Throwable from label34 to label35 with label67;
        catch java.lang.Throwable from label36 to label37 with label67;
        catch java.lang.Throwable from label38 to label39 with label67;
        catch java.lang.Throwable from label40 to label41 with label67;
        catch java.lang.Throwable from label42 to label43 with label67;
        catch java.lang.Throwable from label44 to label45 with label67;
        catch java.lang.Throwable from label46 to label47 with label74;
        catch java.lang.Throwable from label48 to label49 with label74;
        catch java.lang.Throwable from label50 to label51 with label74;
        catch java.lang.Throwable from label53 to label54 with label74;
        catch java.lang.Throwable from label55 to label56 with label74;
        catch java.lang.Throwable from label57 to label58 with label74;
        catch java.lang.Throwable from label59 to label60 with label74;
        catch java.lang.Throwable from label61 to label62 with label74;
        catch java.lang.Throwable from label64 to label65 with label74;
        catch java.lang.Throwable from label69 to label70 with label74;
        catch java.lang.Throwable from label70 to label71 with label78;
        catch java.lang.Throwable from label71 to label72 with label78;
        catch java.lang.Throwable from label72 to label73 with label81;
        catch java.lang.Throwable from label76 to label77 with label74;
        catch java.lang.Throwable from label77 to label78 with label78;
        catch java.lang.Throwable from label79 to label80 with label78;
        catch java.lang.Throwable from label80 to label81 with label81;
        catch java.lang.Throwable from label82 to label83 with label81;
    }

    public void updateDeviceOwner(java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0;
        java.lang.SecurityException $r1;
        java.lang.Throwable $r2;
        java.lang.String r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r3 := @parameter0: java.lang.String;

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if i0 == 0 goto label2;

        if i0 != 1000 goto label1;

        goto label2;

     label1:
        $r1 = new java.lang.SecurityException;

        specialinvoke $r1.<java.lang.SecurityException: void <init>(java.lang.String)>("updateDeviceOwner called from non-system process");

        throw $r1;

     label2:
        entermonitor r0;

     label3:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        r0.<com.android.server.am.ActivityManagerService: java.lang.String mDeviceOwnerName> = r3;

        exitmonitor r0;

     label4:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label5:
        $r2 := @caughtexception;

     label6:
        exitmonitor r0;

     label7:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r2;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    void updateForegroundServiceUsageStats(android.content.ComponentName, int, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0;
        boolean z0;
        android.app.usage.UsageStatsManagerInternal r1, $r2;
        java.lang.Throwable $r3;
        android.content.ComponentName r4;
        byte b1;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r4 := @parameter0: android.content.ComponentName;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        entermonitor r0;

     label1:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r2 = r0.<com.android.server.am.ActivityManagerService: android.app.usage.UsageStatsManagerInternal mUsageStatsService>;

        if $r2 == null goto label5;

        r1 = r0.<com.android.server.am.ActivityManagerService: android.app.usage.UsageStatsManagerInternal mUsageStatsService>;

     label2:
        if z0 == 0 goto label3;

        b1 = 19;

        goto label4;

     label3:
        b1 = 20;

     label4:
        virtualinvoke r1.<android.app.usage.UsageStatsManagerInternal: void reportEvent(android.content.ComponentName,int,int,int,android.content.ComponentName)>(r4, i0, b1, 0, null);

     label5:
        exitmonitor r0;

     label6:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label7:
        $r3 := @caughtexception;

     label8:
        exitmonitor r0;

     label9:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public void updateLockTaskPackages(int, java.lang.String[])
    {
        com.android.server.am.ActivityManagerService r0;
        int i0;
        java.lang.String[] r1;
        com.android.server.wm.ActivityTaskManagerService $r2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String[];

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerService mActivityTaskManager>;

        virtualinvoke $r2.<com.android.server.wm.ActivityTaskManagerService: void updateLockTaskPackages(int,java.lang.String[])>(i0, r1);

        return;
    }

    final boolean updateLowMemStateLocked(int, int, int)
    {
        com.android.server.am.ActivityManagerService r0;
        long l0, l3, $l8, $l9, $l10, $l11;
        int i1, i2, $i4, $i5, $i7, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, i21, i22, i23, i24, i25, i26, $i27, i28, i30, i31, i32, i33, i34, i36, $i37, $i39, i40, $i41;
        com.android.server.am.ProcessList $r1, $r3, $r4, $r11, $r22;
        com.android.server.am.ActivityManagerConstants $r2, $r23;
        byte $b6, $b12, b29, b35, b38;
        java.util.ArrayList $r5, $r12;
        java.lang.Object $r6, $r13;
        boolean $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, z12, z13;
        android.app.IApplicationThread $r7, $r8, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21;
        com.android.server.wm.ActivityTaskManagerInternal $r9, r32, $r34;
        com.android.server.wm.WindowProcessController $r10, $r35;
        com.android.server.am.LowMemDetector $r24, r30;
        android.os.RemoteException $r25, $r26, $r27, $r28, $r29;
        com.android.server.am.ProcessStatsService r31, $r33;
        com.android.server.am.ProcessRecord r36, r41;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i21 := @parameter0: int;

        i22 := @parameter1: int;

        i23 := @parameter2: int;

        $r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        i24 = virtualinvoke $r1.<com.android.server.am.ProcessList: int getLruSizeLocked()>();

        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r30 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.LowMemDetector mLowMemDetector>;

        if r30 == null goto label01;

        $z11 = virtualinvoke r30.<com.android.server.am.LowMemDetector: boolean isAvailable()>();

        if $z11 == 0 goto label01;

        $r24 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.LowMemDetector mLowMemDetector>;

        i25 = virtualinvoke $r24.<com.android.server.am.LowMemDetector: int getMemFactor()>();

        goto label06;

     label01:
        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerConstants mConstants>;

        $i4 = $r2.<com.android.server.am.ActivityManagerConstants: int CUR_TRIM_CACHED_PROCESSES>;

        if i21 > $i4 goto label05;

        $r23 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerConstants mConstants>;

        $i20 = $r23.<com.android.server.am.ActivityManagerConstants: int CUR_TRIM_EMPTY_PROCESSES>;

        if i22 > $i20 goto label05;

        i26 = i21 + i22;

        if i26 > 3 goto label02;

        i25 = 3;

        goto label04;

     label02:
        if i26 > 5 goto label03;

        i25 = 2;

        goto label04;

     label03:
        i25 = 1;

     label04:
        goto label06;

     label05:
        i25 = 0;

     label06:
        $i27 = r0.<com.android.server.am.ActivityManagerService: int mLastMemoryLevel>;

        if i25 <= $i27 goto label08;

        $z10 = r0.<com.android.server.am.ActivityManagerService: boolean mAllowLowerMemLevel>;

        if $z10 == 0 goto label07;

        $r22 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $i18 = virtualinvoke $r22.<com.android.server.am.ProcessList: int getLruSizeLocked()>();

        $i19 = r0.<com.android.server.am.ActivityManagerService: int mLastNumProcesses>;

        if $i18 < $i19 goto label08;

     label07:
        i25 = r0.<com.android.server.am.ActivityManagerService: int mLastMemoryLevel>;

        goto label08;

     label08:
        i28 = r0.<com.android.server.am.ActivityManagerService: int mLastMemoryLevel>;

        if i25 == i28 goto label09;

        staticinvoke <com.android.server.am.EventLogTags: void writeAmMemFactor(int,int)>(i25, i28);

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int)>(15, i25);

     label09:
        r0.<com.android.server.am.ActivityManagerService: int mLastMemoryLevel> = i25;

        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $i5 = virtualinvoke $r3.<com.android.server.am.ProcessList: int getLruSizeLocked()>();

        r0.<com.android.server.am.ActivityManagerService: int mLastNumProcesses> = $i5;

        r31 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        r32 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerInternal mAtmInternal>;

        z12 = 1;

        if r32 == null goto label11;

        $z9 = virtualinvoke r32.<com.android.server.wm.ActivityTaskManagerInternal: boolean isSleeping()>();

        if $z9 != 0 goto label10;

        z12 = 1;

        goto label11;

     label10:
        z12 = 0;

     label11:
        z13 = virtualinvoke r31.<com.android.server.am.ProcessStatsService: boolean setMemFactorLocked(int,boolean,long)>(i25, z12, l0);

        $r33 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        i1 = virtualinvoke $r33.<com.android.server.am.ProcessStatsService: int getMemFactorLocked()>();

        if i25 == 0 goto label48;

        $l11 = r0.<com.android.server.am.ActivityManagerService: long mLowRamStartTime>;

        $b12 = $l11 cmp 0L;

        if $b12 != 0 goto label12;

        r0.<com.android.server.am.ActivityManagerService: long mLowRamStartTime> = l0;

     label12:
        if i25 == 2 goto label14;

        if i25 == 3 goto label13;

        b29 = 5;

        goto label15;

     label13:
        b29 = 15;

        goto label15;

     label14:
        b29 = 10;

     label15:
        i30 = i23 / 3;

        i31 = 2;

        $r34 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerInternal mAtmInternal>;

        $r35 = virtualinvoke $r34.<com.android.server.wm.ActivityTaskManagerInternal: com.android.server.wm.WindowProcessController getHomeProcess()>();

        if $r35 == null goto label16;

        i31 = 2 + 1;

     label16:
        i32 = i31;

        $r9 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerInternal mAtmInternal>;

        $r10 = virtualinvoke $r9.<com.android.server.wm.ActivityTaskManagerInternal: com.android.server.wm.WindowProcessController getPreviousProcess()>();

        if $r10 == null goto label17;

        i32 = i31 + 1;

     label17:
        i33 = i30;

        if i30 >= i32 goto label18;

        i33 = i32;

     label18:
        i34 = i24 - 1;

        b35 = 80;

        i36 = 0;

     label19:
        if i34 < 0 goto label47;

        $r11 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r12 = $r11.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        $r13 = virtualinvoke $r12.<java.util.ArrayList: java.lang.Object get(int)>(i34);

        r36 = (com.android.server.am.ProcessRecord) $r13;

        if z13 != 0 goto label21;

        $z8 = r36.<com.android.server.am.ProcessRecord: boolean procStateChanged>;

        if $z8 == 0 goto label20;

        goto label21;

     label20:
        goto label22;

     label21:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void setProcessTrackerStateLocked(com.android.server.am.ProcessRecord,int,long)>(r36, i1, l0);

        r36.<com.android.server.am.ProcessRecord: boolean procStateChanged> = 0;

     label22:
        $i37 = virtualinvoke r36.<com.android.server.am.ProcessRecord: int getCurProcState()>();

        if $i37 < 14 goto label30;

        $z7 = r36.<com.android.server.am.ProcessRecord: boolean killedByAm>;

        if $z7 != 0 goto label30;

        $i17 = r36.<com.android.server.am.ProcessRecord: int trimMemoryLevel>;

        if $i17 >= b35 goto label26;

        $r20 = r36.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r20 == null goto label26;

     label23:
        $r21 = r36.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        interfaceinvoke $r21.<android.app.IApplicationThread: void scheduleTrimMemory(int)>(b35);

     label24:
        goto label26;

     label25:
        $r29 := @caughtexception;

     label26:
        r36.<com.android.server.am.ProcessRecord: int trimMemoryLevel> = b35;

        i2 = i36 + 1;

        i36 = i2;

        b38 = b35;

        if i2 < i33 goto label46;

        if b35 == 60 goto label28;

        if b35 == 80 goto label27;

        goto label29;

     label27:
        b35 = 60;

        goto label29;

     label28:
        b35 = 40;

     label29:
        i36 = 0;

        b38 = b35;

        goto label46;

     label30:
        $i13 = virtualinvoke r36.<com.android.server.am.ProcessRecord: int getCurProcState()>();

        if $i13 != 13 goto label35;

        $z6 = r36.<com.android.server.am.ProcessRecord: boolean killedByAm>;

        if $z6 != 0 goto label35;

        $i16 = r36.<com.android.server.am.ProcessRecord: int trimMemoryLevel>;

        if $i16 >= 40 goto label34;

        $r18 = r36.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r18 == null goto label34;

     label31:
        $r19 = r36.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        interfaceinvoke $r19.<android.app.IApplicationThread: void scheduleTrimMemory(int)>(40);

     label32:
        goto label34;

     label33:
        $r26 := @caughtexception;

     label34:
        r36.<com.android.server.am.ProcessRecord: int trimMemoryLevel> = 40;

        b38 = b35;

        goto label46;

     label35:
        $i14 = virtualinvoke r36.<com.android.server.am.ProcessRecord: int getCurProcState()>();

        if $i14 >= 7 goto label36;

        $z5 = r36.<com.android.server.am.ProcessRecord: boolean systemNoUi>;

        if $z5 == 0 goto label41;

     label36:
        $z4 = virtualinvoke r36.<com.android.server.am.ProcessRecord: boolean hasPendingUiClean()>();

        if $z4 == 0 goto label41;

        $i15 = r36.<com.android.server.am.ProcessRecord: int trimMemoryLevel>;

        if $i15 >= 20 goto label40;

        $r16 = r36.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r16 == null goto label40;

     label37:
        $r17 = r36.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        interfaceinvoke $r17.<android.app.IApplicationThread: void scheduleTrimMemory(int)>(20);

     label38:
        goto label40;

     label39:
        $r25 := @caughtexception;

     label40:
        virtualinvoke r36.<com.android.server.am.ProcessRecord: void setPendingUiClean(boolean)>(0);

     label41:
        $i39 = r36.<com.android.server.am.ProcessRecord: int trimMemoryLevel>;

        if $i39 >= b29 goto label45;

        $r14 = r36.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r14 == null goto label45;

     label42:
        $r15 = r36.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        interfaceinvoke $r15.<android.app.IApplicationThread: void scheduleTrimMemory(int)>(b29);

     label43:
        goto label45;

     label44:
        $r28 := @caughtexception;

     label45:
        r36.<com.android.server.am.ProcessRecord: int trimMemoryLevel> = b29;

        b38 = b35;

     label46:
        i34 = i34 + -1;

        b35 = b38;

        goto label19;

     label47:
        goto label60;

     label48:
        l3 = r0.<com.android.server.am.ActivityManagerService: long mLowRamStartTime>;

        $b6 = l3 cmp 0L;

        if $b6 == 0 goto label49;

        $l9 = r0.<com.android.server.am.ActivityManagerService: long mLowRamTimeSinceLastIdle>;

        $l8 = l0 - l3;

        $l10 = $l9 + $l8;

        r0.<com.android.server.am.ActivityManagerService: long mLowRamTimeSinceLastIdle> = $l10;

        r0.<com.android.server.am.ActivityManagerService: long mLowRamStartTime> = 0L;

     label49:
        i40 = i24 - 1;

     label50:
        if i40 < 0 goto label60;

        $r4 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r5 = $r4.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i40);

        r41 = (com.android.server.am.ProcessRecord) $r6;

        if z13 != 0 goto label51;

        $z3 = r41.<com.android.server.am.ProcessRecord: boolean procStateChanged>;

        if $z3 == 0 goto label52;

     label51:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void setProcessTrackerStateLocked(com.android.server.am.ProcessRecord,int,long)>(r41, i1, l0);

        r41.<com.android.server.am.ProcessRecord: boolean procStateChanged> = 0;

     label52:
        $i41 = virtualinvoke r41.<com.android.server.am.ProcessRecord: int getCurProcState()>();

        if $i41 >= 7 goto label54;

        $z2 = r41.<com.android.server.am.ProcessRecord: boolean systemNoUi>;

        if $z2 == 0 goto label53;

        goto label54;

     label53:
        goto label59;

     label54:
        $z1 = virtualinvoke r41.<com.android.server.am.ProcessRecord: boolean hasPendingUiClean()>();

        if $z1 == 0 goto label59;

        $i7 = r41.<com.android.server.am.ProcessRecord: int trimMemoryLevel>;

        if $i7 >= 20 goto label58;

        $r7 = r41.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r7 == null goto label58;

     label55:
        $r8 = r41.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        interfaceinvoke $r8.<android.app.IApplicationThread: void scheduleTrimMemory(int)>(20);

     label56:
        goto label58;

     label57:
        $r27 := @caughtexception;

     label58:
        virtualinvoke r41.<com.android.server.am.ProcessRecord: void setPendingUiClean(boolean)>(0);

        goto label59;

     label59:
        r41.<com.android.server.am.ProcessRecord: int trimMemoryLevel> = 0;

        i40 = i40 + -1;

        goto label50;

     label60:
        return z13;

        catch android.os.RemoteException from label23 to label24 with label25;
        catch android.os.RemoteException from label31 to label32 with label33;
        catch android.os.RemoteException from label37 to label38 with label39;
        catch android.os.RemoteException from label42 to label43 with label44;
        catch android.os.RemoteException from label55 to label56 with label57;
    }

    final void updateLruProcessLocked(com.android.server.am.ProcessRecord, boolean, com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1, r2;
        boolean z0;
        com.android.server.am.ProcessList $r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        z0 := @parameter1: boolean;

        r2 := @parameter2: com.android.server.am.ProcessRecord;

        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        virtualinvoke $r3.<com.android.server.am.ProcessList: void updateLruProcessLocked(com.android.server.am.ProcessRecord,boolean,com.android.server.am.ProcessRecord)>(r1, z0, r2);

        return;
    }

    public boolean updateMccMncConfiguration(java.lang.String, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1, $r14, r15;
        int i0, i2;
        android.content.res.Configuration $r4;
        com.android.server.wm.ActivityTaskManagerService $r5;
        boolean $z0;
        java.lang.Throwable $r6;
        java.lang.StringBuilder $r7;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r15 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

     label1:
        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r15);

        i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r1);

     label2:
        $r4 = new android.content.res.Configuration;

        specialinvoke $r4.<android.content.res.Configuration: void <init>()>();

        $r4.<android.content.res.Configuration: int mcc> = i0;

        if i2 != 0 goto label3;

        i2 = 65535;

        goto label3;

     label3:
        $r4.<android.content.res.Configuration: int mnc> = i2;

        $r5 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerService mActivityTaskManager>;

        $z0 = virtualinvoke $r5.<com.android.server.wm.ActivityTaskManagerService: boolean updateConfiguration(android.content.res.Configuration)>($r4);

        return $z0;

     label4:
        $r6 := @caughtexception;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error parsing mcc: ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mnc: ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". ex=");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r14 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ActivityManager", $r14);

        return 0;

        catch java.lang.NumberFormatException from label1 to label2 with label4;
        catch java.lang.StringIndexOutOfBoundsException from label1 to label2 with label4;
    }

    final void updateOomAdjLocked(com.android.server.am.ProcessRecord, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1;
        java.lang.String r2;
        com.android.server.am.OomAdjuster $r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.OomAdjuster mOomAdjuster>;

        virtualinvoke $r3.<com.android.server.am.OomAdjuster: boolean updateOomAdjLocked(com.android.server.am.ProcessRecord,java.lang.String)>(r1, r2);

        return;
    }

    final void updateOomAdjLocked(java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1;
        com.android.server.am.OomAdjuster $r2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.OomAdjuster mOomAdjuster>;

        virtualinvoke $r2.<com.android.server.am.OomAdjuster: void updateOomAdjLocked(java.lang.String)>(r1);

        return;
    }

    final boolean updateOomAdjLocked(com.android.server.am.ProcessRecord, boolean, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1;
        boolean z0, $z1;
        java.lang.String r2;
        com.android.server.am.OomAdjuster $r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        z0 := @parameter1: boolean;

        r2 := @parameter2: java.lang.String;

        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.OomAdjuster mOomAdjuster>;

        $z1 = virtualinvoke $r3.<com.android.server.am.OomAdjuster: boolean updateOomAdjLocked(com.android.server.am.ProcessRecord,boolean,java.lang.String)>(r1, z0, r2);

        return $z1;
    }

    public void updatePersistentConfiguration(android.content.res.Configuration)
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.res.Configuration r1;
        int i0;
        java.lang.NullPointerException $r2;
        com.android.server.wm.ActivityTaskManagerService $r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.content.res.Configuration;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.CHANGE_CONFIGURATION", "updatePersistentConfiguration()");

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void enforceWriteSettingsPermission(java.lang.String)>("updatePersistentConfiguration()");

        if r1 == null goto label1;

        i0 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerService mActivityTaskManager>;

        virtualinvoke $r3.<com.android.server.wm.ActivityTaskManagerService: void updatePersistentConfiguration(android.content.res.Configuration,int)>(r1, i0);

        return;

     label1:
        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("Configuration must not be null");

        throw $r2;
    }

    final void updateProcessForegroundLocked(com.android.server.am.ProcessRecord, boolean, int, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1;
        boolean z0, z1, $z2, $z3, $z4;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        java.util.ArrayList r2, $r21, r27;
        android.content.pm.ApplicationInfo $r3, $r4, $r8, $r9, $r12, $r13, $r17, $r18, $r22, $r23, $r28;
        java.lang.String $r5, $r10, $r14, $r19, $r24;
        com.android.internal.app.ProcessMap $r6, $r15, $r25;
        java.lang.Object $r7;
        com.android.server.am.BatteryStatsService $r11, $r20;
        com.android.server.am.ActivityManagerService$ProcessChangeItem r29;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        z1 := @parameter3: boolean;

        $z2 = virtualinvoke r1.<com.android.server.am.ProcessRecord: boolean hasForegroundServices()>();

        if z0 != $z2 goto label1;

        $i7 = virtualinvoke r1.<com.android.server.am.ProcessRecord: int getForegroundServiceTypes()>();

        if $i7 == i0 goto label5;

     label1:
        virtualinvoke r1.<com.android.server.am.ProcessRecord: void setHasForegroundServices(boolean,int)>(z0, i0);

        $r6 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mForegroundPackages>;

        $r3 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r5 = $r3.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r4 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i1 = $r4.<android.content.pm.ApplicationInfo: int uid>;

        $r7 = virtualinvoke $r6.<com.android.internal.app.ProcessMap: java.lang.Object get(java.lang.String,int)>($r5, $i1);

        r2 = (java.util.ArrayList) $r7;

        if z0 == 0 goto label3;

        r27 = r2;

        if r2 != null goto label2;

        $r21 = new java.util.ArrayList;

        specialinvoke $r21.<java.util.ArrayList: void <init>()>();

        r27 = $r21;

        $r25 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mForegroundPackages>;

        $r22 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r24 = $r22.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r23 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i6 = $r23.<android.content.pm.ApplicationInfo: int uid>;

        virtualinvoke $r25.<com.android.internal.app.ProcessMap: java.lang.Object put(java.lang.String,int,java.lang.Object)>($r24, $i6, $r21);

     label2:
        $z4 = virtualinvoke r27.<java.util.ArrayList: boolean contains(java.lang.Object)>(r1);

        if $z4 != 0 goto label4;

        virtualinvoke r27.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        $r20 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        $r17 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r19 = $r17.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r18 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i5 = $r18.<android.content.pm.ApplicationInfo: int uid>;

        virtualinvoke $r20.<com.android.server.am.BatteryStatsService: void noteEvent(int,java.lang.String,int)>(32770, $r19, $i5);

        goto label4;

     label3:
        if r2 == null goto label4;

        $z3 = virtualinvoke r2.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        if $z3 == 0 goto label4;

        $r11 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        $r8 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r10 = $r8.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r9 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i2 = $r9.<android.content.pm.ApplicationInfo: int uid>;

        virtualinvoke $r11.<com.android.server.am.BatteryStatsService: void noteEvent(int,java.lang.String,int)>(16386, $r10, $i2);

        $i3 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        if $i3 > 0 goto label4;

        $r15 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mForegroundPackages>;

        $r12 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r14 = $r12.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r13 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i4 = $r13.<android.content.pm.ApplicationInfo: int uid>;

        virtualinvoke $r15.<com.android.internal.app.ProcessMap: java.lang.Object remove(java.lang.String,int)>($r14, $i4);

     label4:
        virtualinvoke r1.<com.android.server.am.ProcessRecord: void setReportedForegroundServiceTypes(int)>(i0);

        $i8 = r1.<com.android.server.am.ProcessRecord: int pid>;

        $r28 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i9 = $r28.<android.content.pm.ApplicationInfo: int uid>;

        r29 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$ProcessChangeItem enqueueProcessChangeItemLocked(int,int)>($i8, $i9);

        $i10 = r29.<com.android.server.am.ActivityManagerService$ProcessChangeItem: int changes>;

        $i11 = $i10 | 2;

        r29.<com.android.server.am.ActivityManagerService$ProcessChangeItem: int changes> = $i11;

        r29.<com.android.server.am.ActivityManagerService$ProcessChangeItem: int foregroundServiceTypes> = i0;

     label5:
        if z1 == 0 goto label6;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void updateOomAdjLocked(com.android.server.am.ProcessRecord,java.lang.String)>(r1, "updateOomAdj_uiVisibility");

     label6:
        return;
    }

    public void updateServiceGroup(android.app.IServiceConnection, int, int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1;
        com.android.server.am.ActiveServices $r1;
        java.lang.Throwable $r2;
        android.app.IServiceConnection r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r3 := @parameter0: android.app.IServiceConnection;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        entermonitor r0;

     label1:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveServices mServices>;

        virtualinvoke $r1.<com.android.server.am.ActiveServices: void updateServiceGroupLocked(android.app.IServiceConnection,int,int)>(r3, i0, i1);

        exitmonitor r0;

     label2:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void updateSystemUiContext()
    {
        com.android.server.am.ActivityManagerService r0;
        int $i0;
        android.app.ActivityThread $r1;
        java.lang.Throwable $r2;
        android.content.pm.PackageManagerInternal r3;
        android.content.pm.ApplicationInfo r4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        entermonitor r0;

     label1:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        r3 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: android.content.pm.PackageManagerInternal getPackageManagerInternalLocked()>();

        exitmonitor r0;

     label2:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        r4 = virtualinvoke r3.<android.content.pm.PackageManagerInternal: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int,int,int)>("android", 1024, $i0, 0);

        $r1 = staticinvoke <android.app.ActivityThread: android.app.ActivityThread currentActivityThread()>();

        virtualinvoke $r1.<android.app.ActivityThread: void handleSystemApplicationInfoChanged(android.content.pm.ApplicationInfo)>(r4);

        return;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    boolean validateAssociationAllowedLocked(java.lang.String, int, java.lang.String, int)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1, r7;
        int i0, i1, $i2, $i3;
        com.android.server.am.ActivityManagerService$PackageAssociationInfo r2, r8;
        android.util.ArrayMap $r3, $r5;
        java.lang.Object $r4, $r6;
        boolean $z0, $z1;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r7 := @parameter2: java.lang.String;

        i1 := @parameter3: int;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void ensureAllowedAssociations()>();

        if i0 == i1 goto label4;

        $i2 = staticinvoke <android.os.UserHandle: int getAppId(int)>(i0);

        if $i2 == 1000 goto label4;

        $i3 = staticinvoke <android.os.UserHandle: int getAppId(int)>(i1);

        if $i3 != 1000 goto label1;

        goto label4;

     label1:
        $r3 = r0.<com.android.server.am.ActivityManagerService: android.util.ArrayMap mAllowedAssociations>;

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (com.android.server.am.ActivityManagerService$PackageAssociationInfo) $r4;

        if r2 == null goto label2;

        $z1 = virtualinvoke r2.<com.android.server.am.ActivityManagerService$PackageAssociationInfo: boolean isPackageAssociationAllowed(java.lang.String)>(r7);

        if $z1 != 0 goto label2;

        return 0;

     label2:
        $r5 = r0.<com.android.server.am.ActivityManagerService: android.util.ArrayMap mAllowedAssociations>;

        $r6 = virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r7);

        r8 = (com.android.server.am.ActivityManagerService$PackageAssociationInfo) $r6;

        if r8 == null goto label3;

        $z0 = virtualinvoke r8.<com.android.server.am.ActivityManagerService$PackageAssociationInfo: boolean isPackageAssociationAllowed(java.lang.String)>(r1);

        if $z0 != 0 goto label3;

        return 0;

     label3:
        return 1;

     label4:
        return 1;
    }

    final android.content.Intent verifyBroadcastLocked(android.content.Intent)
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.Intent r1;
        boolean $z0, $z1;
        java.lang.IllegalArgumentException $r2, $r13;
        int $i0, $i1, $i3, $i4, i6, $i7, i8;
        java.lang.StringBuilder $r3, $r7;
        java.lang.String $r6, $r11;
        java.lang.IllegalStateException $r12;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.content.Intent;

        if r1 == null goto label2;

        $z1 = virtualinvoke r1.<android.content.Intent: boolean hasFileDescriptors()>();

        if $z1 == 1 goto label1;

        goto label2;

     label1:
        $r13 = new java.lang.IllegalArgumentException;

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("File descriptors passed in Intent");

        throw $r13;

     label2:
        i6 = virtualinvoke r1.<android.content.Intent: int getFlags()>();

        $z0 = r0.<com.android.server.am.ActivityManagerService: boolean mProcessesReady>;

        if $z0 != 0 goto label5;

        $i3 = 67108864 & i6;

        if $i3 == 0 goto label3;

        goto label5;

     label3:
        $i4 = 1073741824 & i6;

        if $i4 == 0 goto label4;

        goto label5;

     label4:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempt to launch receivers of broadcast intent ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" before boot completion");

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ActivityManager", $r11);

        $r12 = new java.lang.IllegalStateException;

        specialinvoke $r12.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot broadcast before boot completed");

        throw $r12;

     label5:
        $i7 = 33554432 & i6;

        if $i7 != 0 goto label7;

        $i0 = i6 & 4194304;

        if $i0 == 0 goto label6;

        i8 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if i8 == 0 goto label6;

        if i8 == 2000 goto label6;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removing FLAG_RECEIVER_FROM_SHELL because caller is UID ");

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r6);

        virtualinvoke r1.<android.content.Intent: void removeFlags(int)>(4194304);

     label6:
        return r1;

     label7:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t use FLAG_RECEIVER_BOOT_UPGRADE here");

        throw $r2;
    }

    public void waitForBroadcastIdle(java.io.PrintWriter)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.BroadcastQueue[] r1;
        int i0, i3;
        com.android.server.am.BroadcastQueue r2;
        boolean $z0, z1;
        java.lang.String $r6, r10;
        java.lang.Throwable $r7;
        java.io.PrintWriter r8;
        java.lang.StringBuilder r9;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r8 := @parameter0: java.io.PrintWriter;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.DUMP", "waitForBroadcastIdle()");

     label01:
        z1 = 1;

        entermonitor r0;

     label02:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastQueue[] mBroadcastQueues>;

        i0 = lengthof r1;

     label03:
        i3 = 0;

     label04:
        if i3 >= i0 goto label08;

        r2 = r1[i3];

     label05:
        $z0 = virtualinvoke r2.<com.android.server.am.BroadcastQueue: boolean isIdle()>();

        if $z0 != 0 goto label07;

        r9 = new java.lang.StringBuilder;

        specialinvoke r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Waiting for queue ");

        virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to become idle...");

        r10 = virtualinvoke r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r8.<java.io.PrintWriter: void println(java.lang.String)>(r10);

        $r6 = virtualinvoke r2.<com.android.server.am.BroadcastQueue: java.lang.String describeState()>();

        virtualinvoke r8.<java.io.PrintWriter: void println(java.lang.String)>($r6);

        virtualinvoke r8.<java.io.PrintWriter: void flush()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("ActivityManager", r10);

        virtualinvoke r2.<com.android.server.am.BroadcastQueue: void cancelDeferrals()>();

     label06:
        z1 = 0;

     label07:
        i3 = i3 + 1;

        goto label04;

     label08:
        exitmonitor r0;

     label09:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        if z1 == 0 goto label10;

        virtualinvoke r8.<java.io.PrintWriter: void println(java.lang.String)>("All broadcast queues are idle!");

        virtualinvoke r8.<java.io.PrintWriter: void flush()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("ActivityManager", "All broadcast queues are idle!");

        return;

     label10:
        staticinvoke <android.os.SystemClock: void sleep(long)>(1000L);

        goto label01;

     label11:
        $r7 := @caughtexception;

     label12:
        exitmonitor r0;

     label13:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r7;

        catch java.lang.Throwable from label02 to label03 with label11;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label08 to label09 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    public void waitForNetworkStateUpdate(long)
    {
        com.android.server.am.ActivityManagerService r0;
        long l0, $l2, $l4, $l6, $l8, $l9, $l10, l13, l14;
        int i1;
        com.android.server.am.UidRecord r1, $r14;
        com.android.server.am.ProcessList $r2;
        byte $b3, $b5, $b7, $b11;
        java.lang.Object $r3, r21;
        com.android.server.am.ActiveUids $r13;
        java.lang.String $r16;
        java.lang.Throwable $r17, $r19, $r20;
        java.lang.Thread $r18;
        java.lang.StringBuilder r22;

        r0 := @this: com.android.server.am.ActivityManagerService;

        l0 := @parameter0: long;

        i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        entermonitor r0;

     label01:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        r1 = virtualinvoke $r2.<com.android.server.am.ProcessList: com.android.server.am.UidRecord getUidRecordLocked(int)>(i1);

     label02:
        if r1 != null goto label05;

     label03:
        exitmonitor r0;

     label04:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label05:
        exitmonitor r0;

     label06:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        r21 = r1.<com.android.server.am.UidRecord: java.lang.Object networkStateLock>;

        entermonitor r21;

     label07:
        $l2 = r1.<com.android.server.am.UidRecord: long lastDispatchedProcStateSeq>;

        $b3 = $l2 cmp l0;

        if $b3 >= 0 goto label09;

        exitmonitor r21;

     label08:
        return;

     label09:
        $l4 = r1.<com.android.server.am.UidRecord: long curProcStateSeq>;

        $b5 = $l4 cmp l0;

        if $b5 <= 0 goto label11;

        exitmonitor r21;

     label10:
        return;

     label11:
        $l6 = r1.<com.android.server.am.UidRecord: long lastNetworkUpdatedProcStateSeq>;

        $b7 = $l6 cmp l0;

        if $b7 < 0 goto label13;

        exitmonitor r21;

     label12:
        return;

     label13:
        l13 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r1.<com.android.server.am.UidRecord: boolean waitingForNetwork> = 1;

        $r3 = r1.<com.android.server.am.UidRecord: java.lang.Object networkStateLock>;

        $l8 = r0.<com.android.server.am.ActivityManagerService: long mWaitForNetworkTimeoutMs>;

        virtualinvoke $r3.<java.lang.Object: void wait(long)>($l8);

        r1.<com.android.server.am.UidRecord: boolean waitingForNetwork> = 0;

        $l9 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        l14 = $l9 - l13;

        $l10 = r0.<com.android.server.am.ActivityManagerService: long mWaitForNetworkTimeoutMs>;

        $b11 = l14 cmp $l10;

        if $b11 >= 0 goto label15;

     label14:
        goto label16;

     label15:
        r22 = new java.lang.StringBuilder;

        specialinvoke r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Total time waited for network rules to get updated: ");

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l14);

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Uid: ");

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" procStateSeq: ");

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" UidRec: ");

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" validateUidRec: ");

        $r13 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveUids mValidateUids>;

        $r14 = virtualinvoke $r13.<com.android.server.am.ActiveUids: com.android.server.am.UidRecord get(int)>(i1);

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        $r16 = virtualinvoke r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager_Network", $r16);

     label16:
        goto label19;

     label17:
        $r17 := @caughtexception;

     label18:
        $r18 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r18.<java.lang.Thread: void interrupt()>();

     label19:
        exitmonitor r21;

     label20:
        return;

     label21:
        $r20 := @caughtexception;

     label22:
        exitmonitor r21;

     label23:
        throw $r20;

     label24:
        $r19 := @caughtexception;

     label25:
        exitmonitor r0;

     label26:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r19;

        catch java.lang.Throwable from label01 to label02 with label24;
        catch java.lang.Throwable from label03 to label04 with label24;
        catch java.lang.Throwable from label05 to label06 with label24;
        catch java.lang.Throwable from label07 to label08 with label21;
        catch java.lang.Throwable from label09 to label10 with label21;
        catch java.lang.Throwable from label11 to label12 with label21;
        catch java.lang.InterruptedException from label13 to label14 with label17;
        catch java.lang.Throwable from label13 to label14 with label21;
        catch java.lang.InterruptedException from label15 to label16 with label17;
        catch java.lang.Throwable from label15 to label16 with label21;
        catch java.lang.Throwable from label18 to label19 with label21;
        catch java.lang.Throwable from label19 to label20 with label21;
        catch java.lang.Throwable from label22 to label23 with label21;
        catch java.lang.Throwable from label25 to label26 with label24;
    }

    void writeBroadcastsToProtoLocked(android.util.proto.ProtoOutputStream)
    {
        com.android.server.am.ActivityManagerService r0;
        android.util.proto.ProtoOutputStream r1;
        int i0, $i2, $i3, $i4, i5, i6;
        long l1, l7, l8;
        java.util.HashMap $r2, $r22;
        com.android.server.IntentResolver $r3;
        android.util.SparseArray $r4, $r9, $r10;
        com.android.server.am.ActivityManagerService$MainHandler $r5, $r7;
        java.lang.String $r6, $r16;
        android.os.Looper $r8;
        java.lang.Object $r11, $r14, $r15, $r17, $r19, $r24;
        android.util.ArrayMap $r12;
        java.util.Set $r13;
        boolean $z0, $z1, $z2;
        java.util.ArrayList $r18;
        android.content.Intent $r20;
        com.android.server.am.BroadcastQueue $r21;
        java.util.Collection $r23;
        com.android.server.am.ReceiverList $r25;
        java.util.Iterator r26, r28, r30;
        com.android.server.am.BroadcastQueue[] r27;
        java.util.Map$Entry r29;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.util.proto.ProtoOutputStream;

        $r2 = r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mRegisteredReceivers>;

        $i2 = virtualinvoke $r2.<java.util.HashMap: int size()>();

        if $i2 <= 0 goto label02;

        $r22 = r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mRegisteredReceivers>;

        $r23 = virtualinvoke $r22.<java.util.HashMap: java.util.Collection values()>();

        r26 = interfaceinvoke $r23.<java.util.Collection: java.util.Iterator iterator()>();

     label01:
        $z2 = interfaceinvoke r26.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label02;

        $r24 = interfaceinvoke r26.<java.util.Iterator: java.lang.Object next()>();

        $r25 = (com.android.server.am.ReceiverList) $r24;

        virtualinvoke $r25.<com.android.server.am.ReceiverList: void dumpDebug(android.util.proto.ProtoOutputStream,long)>(r1, 2246267895809L);

        goto label01;

     label02:
        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.IntentResolver mReceiverResolver>;

        virtualinvoke $r3.<com.android.server.IntentResolver: void dumpDebug(android.util.proto.ProtoOutputStream,long)>(r1, 1146756268034L);

        r27 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastQueue[] mBroadcastQueues>;

        i0 = lengthof r27;

        i5 = 0;

     label03:
        if i5 >= i0 goto label04;

        $r21 = r27[i5];

        virtualinvoke $r21.<com.android.server.am.BroadcastQueue: void dumpDebug(android.util.proto.ProtoOutputStream,long)>(r1, 2246267895811L);

        i5 = i5 + 1;

        goto label03;

     label04:
        i6 = 0;

     label05:
        $r4 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mStickyBroadcasts>;

        $i3 = virtualinvoke $r4.<android.util.SparseArray: int size()>();

        if i6 >= $i3 goto label10;

        l7 = virtualinvoke r1.<android.util.proto.ProtoOutputStream: long start(long)>(2246267895812L);

        $r9 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mStickyBroadcasts>;

        $i4 = virtualinvoke $r9.<android.util.SparseArray: int keyAt(int)>(i6);

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464257L, $i4);

        $r10 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mStickyBroadcasts>;

        $r11 = virtualinvoke $r10.<android.util.SparseArray: java.lang.Object valueAt(int)>(i6);

        $r12 = (android.util.ArrayMap) $r11;

        $r13 = virtualinvoke $r12.<android.util.ArrayMap: java.util.Set entrySet()>();

        r28 = interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>();

     label06:
        $z0 = interfaceinvoke r28.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label09;

        $r14 = interfaceinvoke r28.<java.util.Iterator: java.lang.Object next()>();

        r29 = (java.util.Map$Entry) $r14;

        l1 = virtualinvoke r1.<android.util.proto.ProtoOutputStream: long start(long)>(2246267895810L);

        $r15 = interfaceinvoke r29.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r16 = (java.lang.String) $r15;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,java.lang.String)>(1138166333441L, $r16);

        $r17 = interfaceinvoke r29.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r18 = (java.util.ArrayList) $r17;

        r30 = virtualinvoke $r18.<java.util.ArrayList: java.util.Iterator iterator()>();

     label07:
        $z1 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label08;

        $r19 = interfaceinvoke r30.<java.util.Iterator: java.lang.Object next()>();

        $r20 = (android.content.Intent) $r19;

        virtualinvoke $r20.<android.content.Intent: void dumpDebug(android.util.proto.ProtoOutputStream,long,boolean,boolean,boolean,boolean)>(r1, 2246267895810L, 0, 1, 1, 0);

        goto label07;

     label08:
        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void end(long)>(l1);

        goto label06;

     label09:
        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void end(long)>(l7);

        i6 = i6 + 1;

        goto label05;

     label10:
        l8 = virtualinvoke r1.<android.util.proto.ProtoOutputStream: long start(long)>(1146756268037L);

        $r5 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        $r6 = virtualinvoke $r5.<com.android.server.am.ActivityManagerService$MainHandler: java.lang.String toString()>();

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,java.lang.String)>(1138166333441L, $r6);

        $r7 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        $r8 = virtualinvoke $r7.<com.android.server.am.ActivityManagerService$MainHandler: android.os.Looper getLooper()>();

        virtualinvoke $r8.<android.os.Looper: void dumpDebug(android.util.proto.ProtoOutputStream,long)>(r1, 1146756268034L);

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void end(long)>(l8);

        return;
    }

    void writeProcessesToGcToProto(android.util.proto.ProtoOutputStream, long, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        android.util.proto.ProtoOutputStream r1;
        long l0, l1, l2, $l5, $l6;
        java.lang.String r2, $r9;
        com.android.server.am.ProcessRecord r3;
        java.util.ArrayList $r4, $r5, $r6;
        int $i3, $i4, i7;
        java.lang.Object $r7;
        boolean $z0, $z1;
        android.content.pm.ApplicationInfo $r8;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.util.proto.ProtoOutputStream;

        l0 := @parameter1: long;

        r2 := @parameter2: java.lang.String;

        $r4 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesToGc>;

        $i3 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        if $i3 <= 0 goto label4;

        l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        i7 = 0;

     label1:
        $r5 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesToGc>;

        $i4 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        if i7 >= $i4 goto label4;

        $r6 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesToGc>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(i7);

        r3 = (com.android.server.am.ProcessRecord) $r7;

        if r2 == null goto label2;

        $r8 = r3.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r9 = $r8.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z1 != 0 goto label2;

        goto label3;

     label2:
        l2 = virtualinvoke r1.<android.util.proto.ProtoOutputStream: long start(long)>(l0);

        virtualinvoke r3.<com.android.server.am.ProcessRecord: void dumpDebug(android.util.proto.ProtoOutputStream,long)>(r1, 1146756268033L);

        $z0 = r3.<com.android.server.am.ProcessRecord: boolean reportLowMemory>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,boolean)>(1133871366146L, $z0);

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529667L, l1);

        $l5 = r3.<com.android.server.am.ProcessRecord: long lastRequestedGc>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529668L, $l5);

        $l6 = r3.<com.android.server.am.ProcessRecord: long lastLowMemory>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529669L, $l6);

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void end(long)>(l2);

     label3:
        i7 = i7 + 1;

        goto label1;

     label4:
        return;
    }

    void writeProcessesToProtoLocked(android.util.proto.ProtoOutputStream, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1, $r21, $r23, $r28, $r30, $r34, $r41, $r45, $r47, $r49, $r56, $r58, $r59, $r60, $r61, $r67, $r72, $r77, $r81, $r101, $r103, $r141, $r142, r146, r148, $r150;
        long l0, $l12, $l15, $l16, $l23, l51, l67, l69, l72, l74, l75, l76;
        android.util.Pair r2;
        com.android.server.am.ProcessList $r3, $r6, $r9, $r12, $r14, $r73, $r90, $r91, $r92, $r93, $r96, $r104, $r107, $r110, $r115;
        com.android.server.am.ProcessList$MyProcessMap $r4, $r111;
        android.util.ArrayMap $r5, $r112, $r144, r145;
        android.util.SparseArray $r7, $r13, $r82, $r83, $r105, r121, r147;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i13, $i14, $i17, $i18, $i19, $i20, $i21, $i22, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, i40, i41, i42, i43, i44, i45, i46, i47, i48, i49, i50, i52, i53, i54, i55, $i56, i57, i58, i59, i60, i61, i63, i64, i65, i66, $i68, i70, i73;
        java.util.ArrayList $r8, $r15, $r16, $r69, $r74, $r78, $r94, $r98, $r108, $r116, $r134;
        com.android.server.am.ActiveUids $r10, $r11, $r95, $r97;
        com.android.server.am.AppErrors $r17;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z24, $z25, $z26, $z27, $z28, $z29, $z30;
        com.android.server.wm.ActivityTaskManagerInternal $r18;
        android.os.RemoteCallbackList $r19, $r65;
        com.android.server.am.PendingTempWhitelists $r20, $r62, $r63;
        com.android.server.am.ActivityManagerService$ProfileData $r22, $r24, $r26, $r31, $r33, $r35, $r37, $r39, $r42, $r149;
        com.android.server.am.ProcessRecord $r25, $r36, r122, r123, r128, r132, r135, r136, r137;
        android.app.ProfilerInfo $r27, $r32, $r38, $r40, $r43;
        com.android.server.am.OomAdjuster $r29;
        android.os.ParcelFileDescriptor $r44;
        com.android.internal.app.ProcessMap $r46, $r143;
        android.net.Uri $r48;
        java.lang.Object $r50, $r51, $r52, $r53, $r57, $r66, $r70, $r75, $r79, $r84, $r99, $r106, $r113, $r114;
        java.lang.Long $r54;
        java.lang.StringBuilder $r55;
        com.android.server.am.ActivityManagerService$PendingTempWhitelist $r64;
        com.android.server.am.UserController $r68;
        android.content.pm.ApplicationInfo $r71, $r76, $r80, $r102;
        com.android.server.am.ActivityManagerService$PidMap $r85, $r87, $r88, r127, r130;
        com.android.server.am.ProcessRecord$PackageList $r86, $r89, $r109, $r117;
        android.content.ComponentName $r100;
        java.lang.Throwable $r118, $r119;
        android.util.proto.ProtoOutputStream r120;
        com.android.server.am.ActiveInstrumentation r124;
        com.android.server.am.UidRecord r125, r126;
        com.android.server.am.ActivityManagerService$ImportanceToken r131;
        com.android.server.am.ActivityManagerService$UidObserverRegistration r138;
        int[] r139, r140;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r120 := @parameter0: android.util.proto.ProtoOutputStream;

        r1 := @parameter1: java.lang.String;

        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r4 = $r3.<com.android.server.am.ProcessList: com.android.server.am.ProcessList$MyProcessMap mProcessNames>;

        $r5 = virtualinvoke $r4.<com.android.server.am.ProcessList$MyProcessMap: android.util.ArrayMap getMap()>();

        i40 = virtualinvoke $r5.<android.util.ArrayMap: int size()>();

        i41 = 0;

        i42 = 0;

     label01:
        if i41 >= i40 goto label06;

        $r110 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r111 = $r110.<com.android.server.am.ProcessList: com.android.server.am.ProcessList$MyProcessMap mProcessNames>;

        $r112 = virtualinvoke $r111.<com.android.server.am.ProcessList$MyProcessMap: android.util.ArrayMap getMap()>();

        $r113 = virtualinvoke $r112.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i41);

        r121 = (android.util.SparseArray) $r113;

        i43 = virtualinvoke r121.<android.util.SparseArray: int size()>();

        i44 = 0;

     label02:
        if i44 >= i43 goto label05;

        $r114 = virtualinvoke r121.<android.util.SparseArray: java.lang.Object valueAt(int)>(i44);

        r122 = (com.android.server.am.ProcessRecord) $r114;

        if r1 == null goto label03;

        $r117 = r122.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        $z28 = virtualinvoke $r117.<com.android.server.am.ProcessRecord$PackageList: boolean containsKey(java.lang.Object)>(r1);

        if $z28 != 0 goto label03;

        i45 = i42;

        goto label04;

     label03:
        $r115 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r116 = $r115.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        $i39 = virtualinvoke $r116.<java.util.ArrayList: int indexOf(java.lang.Object)>(r122);

        virtualinvoke r122.<com.android.server.am.ProcessRecord: void dumpDebug(android.util.proto.ProtoOutputStream,long,int)>(r120, 2246267895809L, $i39);

        i45 = i42;

        $z27 = virtualinvoke r122.<com.android.server.am.ProcessRecord: boolean isPersistent()>();

        if $z27 == 0 goto label04;

        i45 = i42 + 1;

     label04:
        i44 = i44 + 1;

        i42 = i45;

        goto label02;

     label05:
        i41 = i41 + 1;

        goto label01;

     label06:
        i46 = 0;

     label07:
        $r6 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r7 = $r6.<com.android.server.am.ProcessList: android.util.SparseArray mIsolatedProcesses>;

        $i1 = virtualinvoke $r7.<android.util.SparseArray: int size()>();

        if i46 >= $i1 goto label10;

        $r104 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r105 = $r104.<com.android.server.am.ProcessList: android.util.SparseArray mIsolatedProcesses>;

        $r106 = virtualinvoke $r105.<android.util.SparseArray: java.lang.Object valueAt(int)>(i46);

        r123 = (com.android.server.am.ProcessRecord) $r106;

        if r1 == null goto label08;

        $r109 = r123.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        $z26 = virtualinvoke $r109.<com.android.server.am.ProcessRecord$PackageList: boolean containsKey(java.lang.Object)>(r1);

        if $z26 != 0 goto label08;

        goto label09;

     label08:
        $r107 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r108 = $r107.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        $i38 = virtualinvoke $r108.<java.util.ArrayList: int indexOf(java.lang.Object)>(r123);

        virtualinvoke r123.<com.android.server.am.ProcessRecord: void dumpDebug(android.util.proto.ProtoOutputStream,long,int)>(r120, 2246267895810L, $i38);

     label09:
        i46 = i46 + 1;

        goto label07;

     label10:
        i47 = 0;

     label11:
        $r8 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mActiveInstrumentation>;

        $i2 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

        if i47 >= $i2 goto label14;

        $r98 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mActiveInstrumentation>;

        $r99 = virtualinvoke $r98.<java.util.ArrayList: java.lang.Object get(int)>(i47);

        r124 = (com.android.server.am.ActiveInstrumentation) $r99;

        if r1 == null goto label12;

        $r100 = r124.<com.android.server.am.ActiveInstrumentation: android.content.ComponentName mClass>;

        $r101 = virtualinvoke $r100.<android.content.ComponentName: java.lang.String getPackageName()>();

        $z24 = virtualinvoke $r101.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z24 != 0 goto label12;

        $r102 = r124.<com.android.server.am.ActiveInstrumentation: android.content.pm.ApplicationInfo mTargetInfo>;

        $r103 = $r102.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $z25 = virtualinvoke $r103.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z25 != 0 goto label12;

        goto label13;

     label12:
        virtualinvoke r124.<com.android.server.am.ActiveInstrumentation: void dumpDebug(android.util.proto.ProtoOutputStream,long)>(r120, 2246267895811L);

     label13:
        i47 = i47 + 1;

        goto label11;

     label14:
        i48 = specialinvoke r0.<com.android.server.am.ActivityManagerService: int getAppId(java.lang.String)>(r1);

        i49 = 0;

     label15:
        $r9 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r10 = $r9.<com.android.server.am.ProcessList: com.android.server.am.ActiveUids mActiveUids>;

        $i3 = virtualinvoke $r10.<com.android.server.am.ActiveUids: int size()>();

        if i49 >= $i3 goto label18;

        $r96 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r97 = $r96.<com.android.server.am.ProcessList: com.android.server.am.ActiveUids mActiveUids>;

        r125 = virtualinvoke $r97.<com.android.server.am.ActiveUids: com.android.server.am.UidRecord valueAt(int)>(i49);

        if r1 == null goto label16;

        $i36 = r125.<com.android.server.am.UidRecord: int uid>;

        $i37 = staticinvoke <android.os.UserHandle: int getAppId(int)>($i36);

        if $i37 == i48 goto label16;

        goto label17;

     label16:
        virtualinvoke r125.<com.android.server.am.UidRecord: void dumpDebug(android.util.proto.ProtoOutputStream,long)>(r120, 2246267895812L);

     label17:
        i49 = i49 + 1;

        goto label15;

     label18:
        i50 = 0;

     label19:
        $r11 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveUids mValidateUids>;

        $i4 = virtualinvoke $r11.<com.android.server.am.ActiveUids: int size()>();

        if i50 >= $i4 goto label22;

        $r95 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveUids mValidateUids>;

        r126 = virtualinvoke $r95.<com.android.server.am.ActiveUids: com.android.server.am.UidRecord valueAt(int)>(i50);

        if r1 == null goto label20;

        $i34 = r126.<com.android.server.am.UidRecord: int uid>;

        $i35 = staticinvoke <android.os.UserHandle: int getAppId(int)>($i34);

        if $i35 == i48 goto label20;

        goto label21;

     label20:
        virtualinvoke r126.<com.android.server.am.UidRecord: void dumpDebug(android.util.proto.ProtoOutputStream,long)>(r120, 2246267895813L);

     label21:
        i50 = i50 + 1;

        goto label19;

     label22:
        $r12 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $i5 = virtualinvoke $r12.<com.android.server.am.ProcessList: int getLruSizeLocked()>();

        if $i5 <= 0 goto label23;

        l51 = virtualinvoke r120.<android.util.proto.ProtoOutputStream: long start(long)>(1146756268038L);

        $r90 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        i52 = virtualinvoke $r90.<com.android.server.am.ProcessList: int getLruSizeLocked()>();

        virtualinvoke r120.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464257L, i52);

        $r91 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $i30 = $r91.<com.android.server.am.ProcessList: int mLruProcessActivityStart>;

        $i31 = i52 - $i30;

        virtualinvoke r120.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464258L, $i31);

        $r92 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $i32 = $r92.<com.android.server.am.ProcessList: int mLruProcessServiceStart>;

        $i33 = i52 - $i32;

        virtualinvoke r120.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464259L, $i33);

        $r93 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r94 = $r93.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        staticinvoke <com.android.server.am.ActivityManagerService: boolean writeProcessOomListToProto(android.util.proto.ProtoOutputStream,long,com.android.server.am.ActivityManagerService,java.util.List,boolean,java.lang.String)>(r120, 2246267895812L, r0, $r94, 0, r1);

        virtualinvoke r120.<android.util.proto.ProtoOutputStream: void end(long)>(l51);

        goto label23;

     label23:
        if r1 == null goto label33;

        r127 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        entermonitor r127;

        i53 = 0;

     label24:
        $r87 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        $i29 = virtualinvoke $r87.<com.android.server.am.ActivityManagerService$PidMap: int size()>();

        if i53 >= $i29 goto label28;

        $r88 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        r128 = virtualinvoke $r88.<com.android.server.am.ActivityManagerService$PidMap: com.android.server.am.ProcessRecord valueAt(int)>(i53);

        $r89 = r128.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        $z22 = virtualinvoke $r89.<com.android.server.am.ProcessRecord$PackageList: boolean containsKey(java.lang.Object)>(r1);

        if $z22 != 0 goto label26;

     label25:
        goto label27;

     label26:
        virtualinvoke r128.<com.android.server.am.ProcessRecord: void dumpDebug(android.util.proto.ProtoOutputStream,long)>(r120, 2246267895815L);

     label27:
        i53 = i53 + 1;

        goto label24;

     label28:
        exitmonitor r127;

     label29:
        goto label33;

     label30:
        $r119 := @caughtexception;

     label31:
        exitmonitor r127;

     label32:
        throw $r119;

     label33:
        $r13 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mImportantProcesses>;

        $i6 = virtualinvoke $r13.<android.util.SparseArray: int size()>();

        if $i6 <= 0 goto label45;

        r130 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        entermonitor r130;

        i54 = 0;

     label34:
        $r82 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mImportantProcesses>;

        $i27 = virtualinvoke $r82.<android.util.SparseArray: int size()>();

        if i54 >= $i27 goto label40;

        $r83 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mImportantProcesses>;

        $r84 = virtualinvoke $r83.<android.util.SparseArray: java.lang.Object valueAt(int)>(i54);

        r131 = (com.android.server.am.ActivityManagerService$ImportanceToken) $r84;

        $r85 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        $i28 = r131.<com.android.server.am.ActivityManagerService$ImportanceToken: int pid>;

        r132 = virtualinvoke $r85.<com.android.server.am.ActivityManagerService$PidMap: com.android.server.am.ProcessRecord get(int)>($i28);

     label35:
        if r1 == null goto label38;

        if r132 == null goto label39;

     label36:
        $r86 = r132.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        $z21 = virtualinvoke $r86.<com.android.server.am.ProcessRecord$PackageList: boolean containsKey(java.lang.Object)>(r1);

        if $z21 != 0 goto label38;

     label37:
        goto label39;

     label38:
        virtualinvoke r131.<com.android.server.am.ActivityManagerService$ImportanceToken: void dumpDebug(android.util.proto.ProtoOutputStream,long)>(r120, 2246267895816L);

     label39:
        i54 = i54 + 1;

        goto label34;

     label40:
        exitmonitor r130;

     label41:
        goto label45;

     label42:
        $r118 := @caughtexception;

     label43:
        exitmonitor r130;

     label44:
        throw $r118;

     label45:
        i55 = 0;

     label46:
        $r134 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPersistentStartingProcesses>;

        $i56 = virtualinvoke $r134.<java.util.ArrayList: int size()>();

        if i55 >= $i56 goto label49;

        $r78 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPersistentStartingProcesses>;

        $r79 = virtualinvoke $r78.<java.util.ArrayList: java.lang.Object get(int)>(i55);

        r135 = (com.android.server.am.ProcessRecord) $r79;

        if r1 == null goto label47;

        $r80 = r135.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r81 = $r80.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $z20 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r81);

        if $z20 != 0 goto label47;

        goto label48;

     label47:
        virtualinvoke r135.<com.android.server.am.ProcessRecord: void dumpDebug(android.util.proto.ProtoOutputStream,long)>(r120, 2246267895817L);

     label48:
        i55 = i55 + 1;

        goto label46;

     label49:
        i57 = 0;

     label50:
        $r14 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r15 = $r14.<com.android.server.am.ProcessList: java.util.ArrayList mRemovedProcesses>;

        $i7 = virtualinvoke $r15.<java.util.ArrayList: int size()>();

        if i57 >= $i7 goto label53;

        $r73 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r74 = $r73.<com.android.server.am.ProcessList: java.util.ArrayList mRemovedProcesses>;

        $r75 = virtualinvoke $r74.<java.util.ArrayList: java.lang.Object get(int)>(i57);

        r136 = (com.android.server.am.ProcessRecord) $r75;

        if r1 == null goto label51;

        $r76 = r136.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r77 = $r76.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $z19 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r77);

        if $z19 != 0 goto label51;

        goto label52;

     label51:
        virtualinvoke r136.<com.android.server.am.ProcessRecord: void dumpDebug(android.util.proto.ProtoOutputStream,long)>(r120, 2246267895818L);

     label52:
        i57 = i57 + 1;

        goto label50;

     label53:
        i58 = 0;

     label54:
        $r16 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesOnHold>;

        $i8 = virtualinvoke $r16.<java.util.ArrayList: int size()>();

        if i58 >= $i8 goto label57;

        $r69 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesOnHold>;

        $r70 = virtualinvoke $r69.<java.util.ArrayList: java.lang.Object get(int)>(i58);

        r137 = (com.android.server.am.ProcessRecord) $r70;

        if r1 == null goto label55;

        $r71 = r137.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r72 = $r71.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $z18 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r72);

        if $z18 != 0 goto label55;

        goto label56;

     label55:
        virtualinvoke r137.<com.android.server.am.ProcessRecord: void dumpDebug(android.util.proto.ProtoOutputStream,long)>(r120, 2246267895819L);

     label56:
        i58 = i58 + 1;

        goto label54;

     label57:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void writeProcessesToGcToProto(android.util.proto.ProtoOutputStream,long,java.lang.String)>(r120, 2246267895820L, r1);

        $r17 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.AppErrors mAppErrors>;

        virtualinvoke $r17.<com.android.server.am.AppErrors: void dumpDebug(android.util.proto.ProtoOutputStream,long,java.lang.String)>(r120, 1146756268045L, r1);

        $r18 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerInternal mAtmInternal>;

        $i9 = r0.<com.android.server.am.ActivityManagerService: int mWakefulness>;

        $z0 = r0.<com.android.server.am.ActivityManagerService: boolean mTestPssMode>;

        virtualinvoke $r18.<com.android.server.wm.ActivityTaskManagerInternal: void writeProcessesToProto(android.util.proto.ProtoOutputStream,java.lang.String,int,boolean)>(r120, r1, $i9, $z0);

        if r1 != null goto label58;

        $r68 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.UserController mUserController>;

        virtualinvoke $r68.<com.android.server.am.UserController: void dumpDebug(android.util.proto.ProtoOutputStream,long)>(r120, 1146756268046L);

     label58:
        $r19 = r0.<com.android.server.am.ActivityManagerService: android.os.RemoteCallbackList mUidObservers>;

        i59 = virtualinvoke $r19.<android.os.RemoteCallbackList: int getRegisteredCallbackCount()>();

        i60 = 0;

     label59:
        if i60 >= i59 goto label62;

        $r65 = r0.<com.android.server.am.ActivityManagerService: android.os.RemoteCallbackList mUidObservers>;

        $r66 = virtualinvoke $r65.<android.os.RemoteCallbackList: java.lang.Object getRegisteredCallbackCookie(int)>(i60);

        r138 = (com.android.server.am.ActivityManagerService$UidObserverRegistration) $r66;

        if r1 == null goto label60;

        $r67 = r138.<com.android.server.am.ActivityManagerService$UidObserverRegistration: java.lang.String pkg>;

        $z17 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r67);

        if $z17 == 0 goto label61;

     label60:
        virtualinvoke r138.<com.android.server.am.ActivityManagerService$UidObserverRegistration: void dumpDebug(android.util.proto.ProtoOutputStream,long)>(r120, 2246267895831L);

     label61:
        i60 = i60 + 1;

        goto label59;

     label62:
        r139 = r0.<com.android.server.am.ActivityManagerService: int[] mDeviceIdleWhitelist>;

        i61 = lengthof r139;

        i63 = 0;

     label63:
        if i63 >= i61 goto label64;

        $i26 = r139[i63];

        virtualinvoke r120.<android.util.proto.ProtoOutputStream: void write(long,int)>(2220498092056L, $i26);

        i63 = i63 + 1;

        goto label63;

     label64:
        r140 = r0.<com.android.server.am.ActivityManagerService: int[] mDeviceIdleTempWhitelist>;

        i64 = lengthof r140;

        i65 = 0;

     label65:
        if i65 >= i64 goto label66;

        $i25 = r140[i65];

        virtualinvoke r120.<android.util.proto.ProtoOutputStream: void write(long,int)>(2220498092057L, $i25);

        i65 = i65 + 1;

        goto label65;

     label66:
        $r20 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.PendingTempWhitelists mPendingTempWhitelist>;

        $i10 = virtualinvoke $r20.<com.android.server.am.PendingTempWhitelists: int size()>();

        if $i10 <= 0 goto label68;

        i66 = 0;

     label67:
        $r62 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.PendingTempWhitelists mPendingTempWhitelist>;

        $i24 = virtualinvoke $r62.<com.android.server.am.PendingTempWhitelists: int size()>();

        if i66 >= $i24 goto label68;

        $r63 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.PendingTempWhitelists mPendingTempWhitelist>;

        $r64 = virtualinvoke $r63.<com.android.server.am.PendingTempWhitelists: com.android.server.am.ActivityManagerService$PendingTempWhitelist valueAt(int)>(i66);

        virtualinvoke $r64.<com.android.server.am.ActivityManagerService$PendingTempWhitelist: void dumpDebug(android.util.proto.ProtoOutputStream,long)>(r120, 2246267895834L);

        i66 = i66 + 1;

        goto label67;

     label68:
        $r21 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mDebugApp>;

        if $r21 != null goto label69;

        $r61 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mOrigDebugApp>;

        if $r61 != null goto label69;

        $z15 = r0.<com.android.server.am.ActivityManagerService: boolean mDebugTransient>;

        if $z15 != 0 goto label69;

        $z16 = r0.<com.android.server.am.ActivityManagerService: boolean mOrigWaitForDebugger>;

        if $z16 == 0 goto label71;

     label69:
        if r1 == null goto label70;

        $r59 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mDebugApp>;

        $z13 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r59);

        if $z13 != 0 goto label70;

        $r60 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mOrigDebugApp>;

        $z14 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r60);

        if $z14 == 0 goto label71;

     label70:
        l67 = virtualinvoke r120.<android.util.proto.ProtoOutputStream: long start(long)>(1146756268062L);

        $r141 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mDebugApp>;

        virtualinvoke r120.<android.util.proto.ProtoOutputStream: void write(long,java.lang.String)>(1138166333441L, $r141);

        $r142 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mOrigDebugApp>;

        virtualinvoke r120.<android.util.proto.ProtoOutputStream: void write(long,java.lang.String)>(1138166333442L, $r142);

        $z29 = r0.<com.android.server.am.ActivityManagerService: boolean mDebugTransient>;

        virtualinvoke r120.<android.util.proto.ProtoOutputStream: void write(long,boolean)>(1133871366147L, $z29);

        $z30 = r0.<com.android.server.am.ActivityManagerService: boolean mOrigWaitForDebugger>;

        virtualinvoke r120.<android.util.proto.ProtoOutputStream: void write(long,boolean)>(1133871366148L, $z30);

        virtualinvoke r120.<android.util.proto.ProtoOutputStream: void end(long)>(l67);

     label71:
        $r143 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mMemWatchProcesses>;

        $r144 = virtualinvoke $r143.<com.android.internal.app.ProcessMap: android.util.ArrayMap getMap()>();

        $i68 = virtualinvoke $r144.<android.util.ArrayMap: int size()>();

        if $i68 <= 0 goto label76;

        l69 = virtualinvoke r120.<android.util.proto.ProtoOutputStream: long start(long)>(1146756268064L);

        $r46 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mMemWatchProcesses>;

        r145 = virtualinvoke $r46.<com.android.internal.app.ProcessMap: android.util.ArrayMap getMap()>();

        i70 = 0;

     label72:
        $i18 = virtualinvoke r145.<android.util.ArrayMap: int size()>();

        if i70 >= $i18 goto label75;

        $r50 = virtualinvoke r145.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i70);

        r146 = (java.lang.String) $r50;

        $r51 = virtualinvoke r145.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i70);

        r147 = (android.util.SparseArray) $r51;

        l72 = virtualinvoke r120.<android.util.proto.ProtoOutputStream: long start(long)>(2246267895809L);

        virtualinvoke r120.<android.util.proto.ProtoOutputStream: void write(long,java.lang.String)>(1138166333441L, r146);

        i73 = 0;

     label73:
        $i21 = virtualinvoke r147.<android.util.SparseArray: int size()>();

        if i73 >= $i21 goto label74;

        l0 = virtualinvoke r120.<android.util.proto.ProtoOutputStream: long start(long)>(2246267895810L);

        $r52 = virtualinvoke r147.<android.util.SparseArray: java.lang.Object valueAt(int)>(i73);

        r2 = (android.util.Pair) $r52;

        $i22 = virtualinvoke r147.<android.util.SparseArray: int keyAt(int)>(i73);

        virtualinvoke r120.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464257L, $i22);

        $r53 = r2.<android.util.Pair: java.lang.Object first>;

        $r54 = (java.lang.Long) $r53;

        $l23 = virtualinvoke $r54.<java.lang.Long: long longValue()>();

        $r55 = new java.lang.StringBuilder;

        specialinvoke $r55.<java.lang.StringBuilder: void <init>()>();

        $r56 = staticinvoke <android.util.DebugUtils: java.lang.String sizeValueToString(long,java.lang.StringBuilder)>($l23, $r55);

        virtualinvoke r120.<android.util.proto.ProtoOutputStream: void write(long,java.lang.String)>(1138166333442L, $r56);

        $r57 = r2.<android.util.Pair: java.lang.Object second>;

        $r58 = (java.lang.String) $r57;

        virtualinvoke r120.<android.util.proto.ProtoOutputStream: void write(long,java.lang.String)>(1138166333443L, $r58);

        virtualinvoke r120.<android.util.proto.ProtoOutputStream: void end(long)>(l0);

        i73 = i73 + 1;

        goto label73;

     label74:
        virtualinvoke r120.<android.util.proto.ProtoOutputStream: void end(long)>(l72);

        i70 = i70 + 1;

        goto label72;

     label75:
        l74 = virtualinvoke r120.<android.util.proto.ProtoOutputStream: long start(long)>(1146756268034L);

        $r47 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mMemWatchDumpProcName>;

        virtualinvoke r120.<android.util.proto.ProtoOutputStream: void write(long,java.lang.String)>(1138166333441L, $r47);

        $r48 = r0.<com.android.server.am.ActivityManagerService: android.net.Uri mMemWatchDumpUri>;

        $r49 = virtualinvoke $r48.<android.net.Uri: java.lang.String toString()>();

        virtualinvoke r120.<android.util.proto.ProtoOutputStream: void write(long,java.lang.String)>(1138166333446L, $r49);

        $i19 = r0.<com.android.server.am.ActivityManagerService: int mMemWatchDumpPid>;

        virtualinvoke r120.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464259L, $i19);

        $i20 = r0.<com.android.server.am.ActivityManagerService: int mMemWatchDumpUid>;

        virtualinvoke r120.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464260L, $i20);

        $z12 = r0.<com.android.server.am.ActivityManagerService: boolean mMemWatchIsUserInitiated>;

        virtualinvoke r120.<android.util.proto.ProtoOutputStream: void write(long,boolean)>(1133871366149L, $z12);

        virtualinvoke r120.<android.util.proto.ProtoOutputStream: void end(long)>(l74);

        virtualinvoke r120.<android.util.proto.ProtoOutputStream: void end(long)>(l69);

        goto label76;

     label76:
        r148 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mTrackAllocationApp>;

        if r148 == null goto label78;

        if r1 == null goto label77;

        $z11 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>(r148);

        if $z11 == 0 goto label78;

     label77:
        $r45 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mTrackAllocationApp>;

        virtualinvoke r120.<android.util.proto.ProtoOutputStream: void write(long,java.lang.String)>(1138166333473L, $r45);

     label78:
        $r149 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$ProfileData mProfileData>;

        $r150 = virtualinvoke $r149.<com.android.server.am.ActivityManagerService$ProfileData: java.lang.String getProfileApp()>();

        if $r150 != null goto label79;

        $r35 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$ProfileData mProfileData>;

        $r36 = virtualinvoke $r35.<com.android.server.am.ActivityManagerService$ProfileData: com.android.server.am.ProcessRecord getProfileProc()>();

        if $r36 != null goto label79;

        $r37 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$ProfileData mProfileData>;

        $r38 = virtualinvoke $r37.<com.android.server.am.ActivityManagerService$ProfileData: android.app.ProfilerInfo getProfilerInfo()>();

        if $r38 == null goto label82;

        $r39 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$ProfileData mProfileData>;

        $r40 = virtualinvoke $r39.<com.android.server.am.ActivityManagerService$ProfileData: android.app.ProfilerInfo getProfilerInfo()>();

        $r41 = $r40.<android.app.ProfilerInfo: java.lang.String profileFile>;

        if $r41 != null goto label79;

        $r42 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$ProfileData mProfileData>;

        $r43 = virtualinvoke $r42.<com.android.server.am.ActivityManagerService$ProfileData: android.app.ProfilerInfo getProfilerInfo()>();

        $r44 = $r43.<android.app.ProfilerInfo: android.os.ParcelFileDescriptor profileFd>;

        if $r44 == null goto label82;

     label79:
        if r1 == null goto label80;

        $r33 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$ProfileData mProfileData>;

        $r34 = virtualinvoke $r33.<com.android.server.am.ActivityManagerService$ProfileData: java.lang.String getProfileApp()>();

        $z10 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r34);

        if $z10 == 0 goto label82;

     label80:
        l75 = virtualinvoke r120.<android.util.proto.ProtoOutputStream: long start(long)>(1146756268066L);

        $r22 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$ProfileData mProfileData>;

        $r23 = virtualinvoke $r22.<com.android.server.am.ActivityManagerService$ProfileData: java.lang.String getProfileApp()>();

        virtualinvoke r120.<android.util.proto.ProtoOutputStream: void write(long,java.lang.String)>(1138166333441L, $r23);

        $r24 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$ProfileData mProfileData>;

        $r25 = virtualinvoke $r24.<com.android.server.am.ActivityManagerService$ProfileData: com.android.server.am.ProcessRecord getProfileProc()>();

        virtualinvoke $r25.<com.android.server.am.ProcessRecord: void dumpDebug(android.util.proto.ProtoOutputStream,long)>(r120, 1146756268034L);

        $r26 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$ProfileData mProfileData>;

        $r27 = virtualinvoke $r26.<com.android.server.am.ActivityManagerService$ProfileData: android.app.ProfilerInfo getProfilerInfo()>();

        if $r27 == null goto label81;

        $r31 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$ProfileData mProfileData>;

        $r32 = virtualinvoke $r31.<com.android.server.am.ActivityManagerService$ProfileData: android.app.ProfilerInfo getProfilerInfo()>();

        virtualinvoke $r32.<android.app.ProfilerInfo: void dumpDebug(android.util.proto.ProtoOutputStream,long)>(r120, 1146756268035L);

        $i17 = r0.<com.android.server.am.ActivityManagerService: int mProfileType>;

        virtualinvoke r120.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464260L, $i17);

     label81:
        virtualinvoke r120.<android.util.proto.ProtoOutputStream: void end(long)>(l75);

     label82:
        if r1 == null goto label83;

        $r30 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mNativeDebuggingApp>;

        $z9 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r30);

        if $z9 == 0 goto label84;

     label83:
        $r28 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mNativeDebuggingApp>;

        virtualinvoke r120.<android.util.proto.ProtoOutputStream: void write(long,java.lang.String)>(1138166333475L, $r28);

     label84:
        if r1 != null goto label85;

        $z1 = r0.<com.android.server.am.ActivityManagerService: boolean mAlwaysFinishActivities>;

        virtualinvoke r120.<android.util.proto.ProtoOutputStream: void write(long,boolean)>(1133871366180L, $z1);

        virtualinvoke r120.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464294L, i42);

        $z2 = r0.<com.android.server.am.ActivityManagerService: boolean mProcessesReady>;

        virtualinvoke r120.<android.util.proto.ProtoOutputStream: void write(long,boolean)>(1133871366183L, $z2);

        $z3 = r0.<com.android.server.am.ActivityManagerService: boolean mSystemReady>;

        virtualinvoke r120.<android.util.proto.ProtoOutputStream: void write(long,boolean)>(1133871366184L, $z3);

        $z4 = r0.<com.android.server.am.ActivityManagerService: boolean mBooted>;

        virtualinvoke r120.<android.util.proto.ProtoOutputStream: void write(long,boolean)>(1133871366185L, $z4);

        $i11 = r0.<com.android.server.am.ActivityManagerService: int mFactoryTest>;

        virtualinvoke r120.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464298L, $i11);

        $z5 = r0.<com.android.server.am.ActivityManagerService: boolean mBooting>;

        virtualinvoke r120.<android.util.proto.ProtoOutputStream: void write(long,boolean)>(1133871366187L, $z5);

        $z6 = r0.<com.android.server.am.ActivityManagerService: boolean mCallFinishBooting>;

        virtualinvoke r120.<android.util.proto.ProtoOutputStream: void write(long,boolean)>(1133871366188L, $z6);

        $z7 = r0.<com.android.server.am.ActivityManagerService: boolean mBootAnimationComplete>;

        virtualinvoke r120.<android.util.proto.ProtoOutputStream: void write(long,boolean)>(1133871366189L, $z7);

        $l12 = r0.<com.android.server.am.ActivityManagerService: long mLastPowerCheckUptime>;

        virtualinvoke r120.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529710L, $l12);

        $r29 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.OomAdjuster mOomAdjuster>;

        virtualinvoke $r29.<com.android.server.am.OomAdjuster: void dumpProcessListVariablesLocked(android.util.proto.ProtoOutputStream)>(r120);

        $z8 = r0.<com.android.server.am.ActivityManagerService: boolean mAllowLowerMemLevel>;

        virtualinvoke r120.<android.util.proto.ProtoOutputStream: void write(long,boolean)>(1133871366199L, $z8);

        $i13 = r0.<com.android.server.am.ActivityManagerService: int mLastMemoryLevel>;

        virtualinvoke r120.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464312L, $i13);

        $i14 = r0.<com.android.server.am.ActivityManagerService: int mLastNumProcesses>;

        virtualinvoke r120.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464313L, $i14);

        l76 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l15 = r0.<com.android.server.am.ActivityManagerService: long mLastIdleTime>;

        staticinvoke <android.util.proto.ProtoUtils: void toDuration(android.util.proto.ProtoOutputStream,long,long,long)>(r120, 1146756268090L, $l15, l76);

        $l16 = specialinvoke r0.<com.android.server.am.ActivityManagerService: long getLowRamTimeSinceIdle(long)>(l76);

        virtualinvoke r120.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529723L, $l16);

        goto label85;

     label85:
        return;

        catch java.lang.Throwable from label24 to label25 with label30;
        catch java.lang.Throwable from label26 to label27 with label30;
        catch java.lang.Throwable from label28 to label29 with label30;
        catch java.lang.Throwable from label31 to label32 with label30;
        catch java.lang.Throwable from label34 to label35 with label42;
        catch java.lang.Throwable from label36 to label37 with label42;
        catch java.lang.Throwable from label38 to label39 with label42;
        catch java.lang.Throwable from label40 to label41 with label42;
        catch java.lang.Throwable from label43 to label44 with label42;
    }
}
