final class com.android.server.am.ActivityManagerShellCommand$MyActivityController extends android.app.IActivityController$Stub
{
    static final int RESULT_ANR_DIALOG;
    static final int RESULT_ANR_KILL;
    static final int RESULT_ANR_WAIT;
    static final int RESULT_CRASH_DIALOG;
    static final int RESULT_CRASH_KILL;
    static final int RESULT_DEFAULT;
    static final int RESULT_EARLY_ANR_CONTINUE;
    static final int RESULT_EARLY_ANR_KILL;
    static final int STATE_ANR;
    static final int STATE_CRASHED;
    static final int STATE_EARLY_ANR;
    static final int STATE_NORMAL;
    final java.lang.String mGdbPort;
    java.lang.Process mGdbProcess;
    java.lang.Thread mGdbThread;
    boolean mGotGdbPrint;
    final java.io.InputStream mInput;
    final android.app.IActivityManager mInterface;
    final boolean mMonkey;
    final java.io.PrintWriter mPw;
    int mResult;
    int mState;

    void <init>(android.app.IActivityManager, java.io.PrintWriter, java.io.InputStream, java.lang.String, boolean)
    {
        com.android.server.am.ActivityManagerShellCommand$MyActivityController r0;
        android.app.IActivityManager r1;
        java.io.PrintWriter r2;
        java.io.InputStream r3;
        java.lang.String r4;
        boolean z0;

        r0 := @this: com.android.server.am.ActivityManagerShellCommand$MyActivityController;

        r1 := @parameter0: android.app.IActivityManager;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.io.InputStream;

        r4 := @parameter3: java.lang.String;

        z0 := @parameter4: boolean;

        specialinvoke r0.<android.app.IActivityController$Stub: void <init>()>();

        r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: android.app.IActivityManager mInterface> = r1;

        r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: java.io.PrintWriter mPw> = r2;

        r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: java.io.InputStream mInput> = r3;

        r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: java.lang.String mGdbPort> = r4;

        r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: boolean mMonkey> = z0;

        return;
    }

    public boolean activityResuming(java.lang.String)
    {
        com.android.server.am.ActivityManagerShellCommand$MyActivityController r0;
        java.io.PrintWriter r1, $r6;
        java.lang.StringBuilder r2;
        java.lang.String $r5, r8;
        java.lang.Throwable $r7;

        r0 := @this: com.android.server.am.ActivityManagerShellCommand$MyActivityController;

        r8 := @parameter0: java.lang.String;

        entermonitor r0;

     label1:
        r1 = r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: java.io.PrintWriter mPw>;

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("** Activity resuming: ");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        $r5 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r5);

        $r6 = r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: java.io.PrintWriter mPw>;

        virtualinvoke $r6.<java.io.PrintWriter: void flush()>();

        exitmonitor r0;

     label2:
        return 1;

     label3:
        $r7 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean activityStarting(android.content.Intent, java.lang.String)
    {
        com.android.server.am.ActivityManagerShellCommand$MyActivityController r0;
        java.lang.String r1, $r5;
        java.lang.StringBuilder r2;
        java.io.PrintWriter $r6, r9;
        java.lang.Throwable $r7;
        android.content.Intent r8;

        r0 := @this: com.android.server.am.ActivityManagerShellCommand$MyActivityController;

        r8 := @parameter0: android.content.Intent;

        r1 := @parameter1: java.lang.String;

        entermonitor r0;

     label1:
        r9 = r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: java.io.PrintWriter mPw>;

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("** Activity starting: ");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r9.<java.io.PrintWriter: void println(java.lang.String)>($r5);

        $r6 = r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: java.io.PrintWriter mPw>;

        virtualinvoke $r6.<java.io.PrintWriter: void flush()>();

        exitmonitor r0;

     label2:
        return 1;

     label3:
        $r7 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean appCrashed(java.lang.String, int, java.lang.String, java.lang.String, long, java.lang.String)
    {
        com.android.server.am.ActivityManagerShellCommand$MyActivityController r0;
        int i0, $i2;
        java.lang.String r1, r2, $r7, $r10, $r13, $r16, $r19, r25, r26;
        long l1;
        java.lang.StringBuilder r3, r29, r31, r33, r35;
        java.io.PrintWriter $r4, $r20, $r21, $r22, $r23, r27, r28, r30, r32, r34;
        java.lang.Throwable $r24;
        boolean z0;

        r0 := @this: com.android.server.am.ActivityManagerShellCommand$MyActivityController;

        r25 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r26 := @parameter2: java.lang.String;

        r1 := @parameter3: java.lang.String;

        l1 := @parameter4: long;

        r2 := @parameter5: java.lang.String;

        entermonitor r0;

     label1:
        $r4 = r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: java.io.PrintWriter mPw>;

        virtualinvoke $r4.<java.io.PrintWriter: void println(java.lang.String)>("** ERROR: PROCESS CRASHED");

        r27 = r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: java.io.PrintWriter mPw>;

        r3 = new java.lang.StringBuilder;

        specialinvoke r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("processName: ");

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r25);

        $r7 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r27.<java.io.PrintWriter: void println(java.lang.String)>($r7);

        r28 = r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: java.io.PrintWriter mPw>;

        r29 = new java.lang.StringBuilder;

        specialinvoke r29.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("processPid: ");

        virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r10 = virtualinvoke r29.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r28.<java.io.PrintWriter: void println(java.lang.String)>($r10);

        r30 = r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: java.io.PrintWriter mPw>;

        r31 = new java.lang.StringBuilder;

        specialinvoke r31.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("shortMsg: ");

        virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r26);

        $r13 = virtualinvoke r31.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r30.<java.io.PrintWriter: void println(java.lang.String)>($r13);

        r32 = r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: java.io.PrintWriter mPw>;

        r33 = new java.lang.StringBuilder;

        specialinvoke r33.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("longMsg: ");

        virtualinvoke r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r16 = virtualinvoke r33.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r32.<java.io.PrintWriter: void println(java.lang.String)>($r16);

        r34 = r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: java.io.PrintWriter mPw>;

        r35 = new java.lang.StringBuilder;

        specialinvoke r35.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("timeMillis: ");

        virtualinvoke r35.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);

        $r19 = virtualinvoke r35.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r34.<java.io.PrintWriter: void println(java.lang.String)>($r19);

        $r20 = r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: java.io.PrintWriter mPw>;

        virtualinvoke $r20.<java.io.PrintWriter: void println(java.lang.String)>("stack:");

        $r21 = r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: java.io.PrintWriter mPw>;

        virtualinvoke $r21.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        $r22 = r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: java.io.PrintWriter mPw>;

        virtualinvoke $r22.<java.io.PrintWriter: void println(java.lang.String)>("#");

        $r23 = r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: java.io.PrintWriter mPw>;

        virtualinvoke $r23.<java.io.PrintWriter: void flush()>();

     label2:
        z0 = 1;

     label3:
        $i2 = virtualinvoke r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: int waitControllerLocked(int,int)>(i0, 1);

        if $i2 != 1 goto label5;

     label4:
        z0 = 0;

     label5:
        exitmonitor r0;

     label6:
        return z0;

     label7:
        $r24 := @caughtexception;

     label8:
        exitmonitor r0;

     label9:
        throw $r24;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public int appEarlyNotResponding(java.lang.String, int, java.lang.String)
    {
        com.android.server.am.ActivityManagerShellCommand$MyActivityController r0;
        int i0, $i1;
        java.lang.String r1, $r6, $r9, $r12, r15;
        java.io.PrintWriter r2, $r3, $r13, r17, r19;
        java.lang.Throwable $r14;
        java.lang.StringBuilder r16, r18, r20;

        r0 := @this: com.android.server.am.ActivityManagerShellCommand$MyActivityController;

        r15 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        entermonitor r0;

     label1:
        $r3 = r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: java.io.PrintWriter mPw>;

        virtualinvoke $r3.<java.io.PrintWriter: void println(java.lang.String)>("** ERROR: EARLY PROCESS NOT RESPONDING");

        r2 = r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: java.io.PrintWriter mPw>;

        r16 = new java.lang.StringBuilder;

        specialinvoke r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("processName: ");

        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);

        $r6 = virtualinvoke r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r6);

        r17 = r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: java.io.PrintWriter mPw>;

        r18 = new java.lang.StringBuilder;

        specialinvoke r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("processPid: ");

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = virtualinvoke r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r17.<java.io.PrintWriter: void println(java.lang.String)>($r9);

        r19 = r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: java.io.PrintWriter mPw>;

        r20 = new java.lang.StringBuilder;

        specialinvoke r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("annotation: ");

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r12 = virtualinvoke r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r19.<java.io.PrintWriter: void println(java.lang.String)>($r12);

        $r13 = r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: java.io.PrintWriter mPw>;

        virtualinvoke $r13.<java.io.PrintWriter: void flush()>();

        $i1 = virtualinvoke r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: int waitControllerLocked(int,int)>(i0, 2);

        if $i1 != 1 goto label3;

        exitmonitor r0;

     label2:
        return -1;

     label3:
        exitmonitor r0;

     label4:
        return 0;

     label5:
        $r14 := @caughtexception;

     label6:
        exitmonitor r0;

     label7:
        throw $r14;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public int appNotResponding(java.lang.String, int, java.lang.String)
    {
        com.android.server.am.ActivityManagerShellCommand$MyActivityController r0;
        java.lang.String r1, $r6, $r9, r15;
        java.io.PrintWriter r2, $r3, $r10, $r11, $r12, $r13, r17;
        java.lang.Throwable $r14;
        int i0, i1;
        java.lang.StringBuilder r16, r18;

        r0 := @this: com.android.server.am.ActivityManagerShellCommand$MyActivityController;

        r15 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        entermonitor r0;

     label01:
        $r3 = r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: java.io.PrintWriter mPw>;

        virtualinvoke $r3.<java.io.PrintWriter: void println(java.lang.String)>("** ERROR: PROCESS NOT RESPONDING");

        r2 = r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: java.io.PrintWriter mPw>;

        r16 = new java.lang.StringBuilder;

        specialinvoke r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("processName: ");

        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);

        $r6 = virtualinvoke r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r6);

        r17 = r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: java.io.PrintWriter mPw>;

        r18 = new java.lang.StringBuilder;

        specialinvoke r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("processPid: ");

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = virtualinvoke r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r17.<java.io.PrintWriter: void println(java.lang.String)>($r9);

        $r10 = r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: java.io.PrintWriter mPw>;

        virtualinvoke $r10.<java.io.PrintWriter: void println(java.lang.String)>("processStats:");

        $r11 = r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: java.io.PrintWriter mPw>;

        virtualinvoke $r11.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        $r12 = r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: java.io.PrintWriter mPw>;

        virtualinvoke $r12.<java.io.PrintWriter: void println(java.lang.String)>("#");

        $r13 = r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: java.io.PrintWriter mPw>;

        virtualinvoke $r13.<java.io.PrintWriter: void flush()>();

        i1 = virtualinvoke r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: int waitControllerLocked(int,int)>(i0, 3);

     label02:
        if i1 != 1 goto label05;

     label03:
        exitmonitor r0;

     label04:
        return -1;

     label05:
        if i1 != 2 goto label08;

     label06:
        exitmonitor r0;

     label07:
        return 1;

     label08:
        exitmonitor r0;

     label09:
        return 0;

     label10:
        $r14 := @caughtexception;

     label11:
        exitmonitor r0;

     label12:
        throw $r14;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    void killGdbLocked()
    {
        com.android.server.am.ActivityManagerShellCommand$MyActivityController r0;
        java.lang.Thread r1;
        java.lang.Process $r2, $r5;
        java.io.PrintWriter $r3, $r4;

        r0 := @this: com.android.server.am.ActivityManagerShellCommand$MyActivityController;

        r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: boolean mGotGdbPrint> = 0;

        $r2 = r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: java.lang.Process mGdbProcess>;

        if $r2 == null goto label1;

        $r3 = r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: java.io.PrintWriter mPw>;

        virtualinvoke $r3.<java.io.PrintWriter: void println(java.lang.String)>("Stopping gdbserver");

        $r4 = r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: java.io.PrintWriter mPw>;

        virtualinvoke $r4.<java.io.PrintWriter: void flush()>();

        $r5 = r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: java.lang.Process mGdbProcess>;

        virtualinvoke $r5.<java.lang.Process: void destroy()>();

        r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: java.lang.Process mGdbProcess> = null;

     label1:
        r1 = r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: java.lang.Thread mGdbThread>;

        if r1 == null goto label2;

        virtualinvoke r1.<java.lang.Thread: void interrupt()>();

        r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: java.lang.Thread mGdbThread> = null;

     label2:
        return;
    }

    void printMessageForState()
    {
        com.android.server.am.ActivityManagerShellCommand$MyActivityController r0;
        int i0;
        java.io.PrintWriter $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12;

        r0 := @this: com.android.server.am.ActivityManagerShellCommand$MyActivityController;

        i0 = r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: int mState>;

        if i0 == 0 goto label4;

        if i0 == 1 goto label3;

        if i0 == 2 goto label2;

        if i0 == 3 goto label1;

        goto label5;

     label1:
        $r8 = r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: java.io.PrintWriter mPw>;

        virtualinvoke $r8.<java.io.PrintWriter: void println(java.lang.String)>("Waiting after ANR...  available commands:");

        $r9 = r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: java.io.PrintWriter mPw>;

        virtualinvoke $r9.<java.io.PrintWriter: void println(java.lang.String)>("(c)ontinue: show ANR dialog");

        $r10 = r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: java.io.PrintWriter mPw>;

        virtualinvoke $r10.<java.io.PrintWriter: void println(java.lang.String)>("(k)ill: immediately kill app");

        $r11 = r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: java.io.PrintWriter mPw>;

        virtualinvoke $r11.<java.io.PrintWriter: void println(java.lang.String)>("(w)ait: wait some more");

        goto label5;

     label2:
        $r5 = r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: java.io.PrintWriter mPw>;

        virtualinvoke $r5.<java.io.PrintWriter: void println(java.lang.String)>("Waiting after early ANR...  available commands:");

        $r6 = r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: java.io.PrintWriter mPw>;

        virtualinvoke $r6.<java.io.PrintWriter: void println(java.lang.String)>("(c)ontinue: standard ANR processing");

        $r7 = r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: java.io.PrintWriter mPw>;

        virtualinvoke $r7.<java.io.PrintWriter: void println(java.lang.String)>("(k)ill: immediately kill app");

        goto label5;

     label3:
        $r2 = r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: java.io.PrintWriter mPw>;

        virtualinvoke $r2.<java.io.PrintWriter: void println(java.lang.String)>("Waiting after crash...  available commands:");

        $r3 = r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: java.io.PrintWriter mPw>;

        virtualinvoke $r3.<java.io.PrintWriter: void println(java.lang.String)>("(c)ontinue: show crash dialog");

        $r4 = r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: java.io.PrintWriter mPw>;

        virtualinvoke $r4.<java.io.PrintWriter: void println(java.lang.String)>("(k)ill: immediately kill app");

        goto label5;

     label4:
        $r1 = r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: java.io.PrintWriter mPw>;

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>("Monitoring activity manager...  available commands:");

     label5:
        $r12 = r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: java.io.PrintWriter mPw>;

        virtualinvoke $r12.<java.io.PrintWriter: void println(java.lang.String)>("(q)uit: finish monitoring");

        return;
    }

    void resumeController(int)
    {
        com.android.server.am.ActivityManagerShellCommand$MyActivityController r0;
        int i0;
        java.lang.Throwable $r2;

        r0 := @this: com.android.server.am.ActivityManagerShellCommand$MyActivityController;

        i0 := @parameter0: int;

        entermonitor r0;

     label1:
        r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: int mState> = 0;

        r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: int mResult> = i0;

        virtualinvoke r0.<java.lang.Object: void notifyAll()>();

        exitmonitor r0;

     label2:
        return;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    void run() throws android.os.RemoteException
    {
        com.android.server.am.ActivityManagerShellCommand$MyActivityController r0;
        java.io.PrintWriter $r1, $r9, $r10, $r37, $r38, r43, r45, r47, r49;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, z18, $z19;
        android.app.IActivityManager $r2, $r35, $r54;
        java.io.InputStream $r3;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r4, $r5, $r8, $r11, $r12, $r13, $r14, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r26, $r27, $r28, $r29, $r30, $r33, r42;
        java.lang.Throwable $r34, $r36, $r39;
        java.io.InputStreamReader r55;
        java.io.BufferedReader r56;
        java.lang.StringBuilder r57, r58, r59, r60;
        java.io.IOException r61;

        r0 := @this: com.android.server.am.ActivityManagerShellCommand$MyActivityController;

     label01:
        virtualinvoke r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: void printMessageForState()>();

        $r1 = r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: java.io.PrintWriter mPw>;

        virtualinvoke $r1.<java.io.PrintWriter: void flush()>();

        $r2 = r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: android.app.IActivityManager mInterface>;

        $z0 = r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: boolean mMonkey>;

        interfaceinvoke $r2.<android.app.IActivityManager: void setActivityController(android.app.IActivityController,boolean)>(r0, $z0);

        r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: int mState> = 0;

        r55 = new java.io.InputStreamReader;

        $r3 = r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: java.io.InputStream mInput>;

        specialinvoke r55.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r3);

        r56 = new java.io.BufferedReader;

        specialinvoke r56.<java.io.BufferedReader: void <init>(java.io.Reader)>(r55);

     label02:
        r42 = virtualinvoke r56.<java.io.BufferedReader: java.lang.String readLine()>();

     label03:
        if r42 == null goto label56;

        z18 = 1;

     label04:
        $i0 = virtualinvoke r42.<java.lang.String: int length()>();

        if $i0 > 0 goto label06;

     label05:
        z18 = 0;

        goto label43;

     label06:
        $r4 = "q";

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r42);

        if $z1 != 0 goto label51;

        $r5 = "quit";

        $z2 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r42);

        if $z2 == 0 goto label08;

     label07:
        goto label51;

     label08:
        $i1 = r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: int mState>;

        if $i1 != 1 goto label18;

        $r27 = "c";

        $z13 = virtualinvoke $r27.<java.lang.String: boolean equals(java.lang.Object)>(r42);

        if $z13 != 0 goto label16;

        $r28 = "continue";

        $z14 = virtualinvoke $r28.<java.lang.String: boolean equals(java.lang.Object)>(r42);

        if $z14 == 0 goto label10;

     label09:
        goto label16;

     label10:
        $r29 = "k";

        $z15 = virtualinvoke $r29.<java.lang.String: boolean equals(java.lang.Object)>(r42);

        if $z15 != 0 goto label14;

        $r30 = "kill";

        $z16 = virtualinvoke $r30.<java.lang.String: boolean equals(java.lang.Object)>(r42);

        if $z16 == 0 goto label12;

     label11:
        goto label14;

     label12:
        r43 = r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: java.io.PrintWriter mPw>;

        r57 = new java.lang.StringBuilder;

        specialinvoke r57.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid command: ");

        virtualinvoke r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r42);

        $r33 = virtualinvoke r57.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r43.<java.io.PrintWriter: void println(java.lang.String)>($r33);

     label13:
        goto label43;

     label14:
        virtualinvoke r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: void resumeController(int)>(1);

     label15:
        goto label43;

     label16:
        virtualinvoke r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: void resumeController(int)>(0);

     label17:
        goto label43;

     label18:
        $i2 = r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: int mState>;

        if $i2 != 3 goto label32;

        $r18 = "c";

        $z7 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>(r42);

        if $z7 != 0 goto label30;

        $r19 = "continue";

        $z8 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>(r42);

        if $z8 == 0 goto label20;

     label19:
        goto label30;

     label20:
        $r20 = "k";

        $z9 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>(r42);

        if $z9 != 0 goto label28;

        $r21 = "kill";

        $z10 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>(r42);

        if $z10 == 0 goto label22;

     label21:
        goto label28;

     label22:
        $r22 = "w";

        $z11 = virtualinvoke $r22.<java.lang.String: boolean equals(java.lang.Object)>(r42);

        if $z11 != 0 goto label26;

        $r23 = "wait";

        $z12 = virtualinvoke $r23.<java.lang.String: boolean equals(java.lang.Object)>(r42);

        if $z12 == 0 goto label24;

     label23:
        goto label26;

     label24:
        r45 = r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: java.io.PrintWriter mPw>;

        r58 = new java.lang.StringBuilder;

        specialinvoke r58.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid command: ");

        virtualinvoke r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r42);

        $r26 = virtualinvoke r58.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r45.<java.io.PrintWriter: void println(java.lang.String)>($r26);

     label25:
        goto label43;

     label26:
        virtualinvoke r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: void resumeController(int)>(2);

     label27:
        goto label43;

     label28:
        virtualinvoke r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: void resumeController(int)>(1);

     label29:
        goto label43;

     label30:
        virtualinvoke r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: void resumeController(int)>(0);

     label31:
        goto label43;

     label32:
        $i3 = r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: int mState>;

        if $i3 != 2 goto label42;

        $r11 = "c";

        $z3 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r42);

        if $z3 != 0 goto label40;

        $r12 = "continue";

        $z4 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r42);

        if $z4 == 0 goto label34;

     label33:
        goto label40;

     label34:
        $r13 = "k";

        $z5 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r42);

        if $z5 != 0 goto label38;

        $r14 = "kill";

        $z6 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>(r42);

        if $z6 == 0 goto label36;

     label35:
        goto label38;

     label36:
        r47 = r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: java.io.PrintWriter mPw>;

        r59 = new java.lang.StringBuilder;

        specialinvoke r59.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid command: ");

        virtualinvoke r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r42);

        $r17 = virtualinvoke r59.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r47.<java.io.PrintWriter: void println(java.lang.String)>($r17);

     label37:
        goto label43;

     label38:
        virtualinvoke r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: void resumeController(int)>(1);

     label39:
        goto label43;

     label40:
        virtualinvoke r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: void resumeController(int)>(0);

     label41:
        goto label43;

     label42:
        r49 = r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: java.io.PrintWriter mPw>;

        r60 = new java.lang.StringBuilder;

        specialinvoke r60.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid command: ");

        virtualinvoke r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r42);

        $r8 = virtualinvoke r60.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r49.<java.io.PrintWriter: void println(java.lang.String)>($r8);

     label43:
        entermonitor r0;

     label44:
        if z18 == 0 goto label46;

     label45:
        $r10 = r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: java.io.PrintWriter mPw>;

        virtualinvoke $r10.<java.io.PrintWriter: void println(java.lang.String)>("");

     label46:
        virtualinvoke r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: void printMessageForState()>();

        $r9 = r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: java.io.PrintWriter mPw>;

        virtualinvoke $r9.<java.io.PrintWriter: void flush()>();

        exitmonitor r0;

     label47:
        goto label02;

     label48:
        $r39 := @caughtexception;

     label49:
        exitmonitor r0;

     label50:
        throw $r39;

     label51:
        virtualinvoke r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: void resumeController(int)>(0);

     label52:
        goto label56;

     label53:
        $r34 := @caughtexception;

        goto label57;

     label54:
        $r36 := @caughtexception;

     label55:
        $r37 = r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: java.io.PrintWriter mPw>;

        r61 = (java.io.IOException) $r36;

        virtualinvoke r61.<java.io.IOException: void printStackTrace(java.io.PrintWriter)>($r37);

        $r38 = r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: java.io.PrintWriter mPw>;

        virtualinvoke $r38.<java.io.PrintWriter: void flush()>();

     label56:
        $r54 = r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: android.app.IActivityManager mInterface>;

        $z19 = r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: boolean mMonkey>;

        interfaceinvoke $r54.<android.app.IActivityManager: void setActivityController(android.app.IActivityController,boolean)>(null, $z19);

        return;

     label57:
        $r35 = r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: android.app.IActivityManager mInterface>;

        $z17 = r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: boolean mMonkey>;

        interfaceinvoke $r35.<android.app.IActivityManager: void setActivityController(android.app.IActivityController,boolean)>(null, $z17);

        throw $r34;

        catch java.io.IOException from label01 to label02 with label54;
        catch java.lang.Throwable from label01 to label02 with label53;
        catch java.io.IOException from label02 to label03 with label54;
        catch java.lang.Throwable from label02 to label03 with label53;
        catch java.io.IOException from label04 to label05 with label54;
        catch java.lang.Throwable from label04 to label05 with label53;
        catch java.io.IOException from label06 to label07 with label54;
        catch java.lang.Throwable from label06 to label07 with label53;
        catch java.io.IOException from label08 to label09 with label54;
        catch java.lang.Throwable from label08 to label09 with label53;
        catch java.io.IOException from label10 to label11 with label54;
        catch java.lang.Throwable from label10 to label11 with label53;
        catch java.io.IOException from label12 to label13 with label54;
        catch java.lang.Throwable from label12 to label13 with label53;
        catch java.io.IOException from label14 to label15 with label54;
        catch java.lang.Throwable from label14 to label15 with label53;
        catch java.io.IOException from label16 to label17 with label54;
        catch java.lang.Throwable from label16 to label17 with label53;
        catch java.io.IOException from label18 to label19 with label54;
        catch java.lang.Throwable from label18 to label19 with label53;
        catch java.io.IOException from label20 to label21 with label54;
        catch java.lang.Throwable from label20 to label21 with label53;
        catch java.io.IOException from label22 to label23 with label54;
        catch java.lang.Throwable from label22 to label23 with label53;
        catch java.io.IOException from label24 to label25 with label54;
        catch java.lang.Throwable from label24 to label25 with label53;
        catch java.io.IOException from label26 to label27 with label54;
        catch java.lang.Throwable from label26 to label27 with label53;
        catch java.io.IOException from label28 to label29 with label54;
        catch java.lang.Throwable from label28 to label29 with label53;
        catch java.io.IOException from label30 to label31 with label54;
        catch java.lang.Throwable from label30 to label31 with label53;
        catch java.io.IOException from label32 to label33 with label54;
        catch java.lang.Throwable from label32 to label33 with label53;
        catch java.io.IOException from label34 to label35 with label54;
        catch java.lang.Throwable from label34 to label35 with label53;
        catch java.io.IOException from label36 to label37 with label54;
        catch java.lang.Throwable from label36 to label37 with label53;
        catch java.io.IOException from label38 to label39 with label54;
        catch java.lang.Throwable from label38 to label39 with label53;
        catch java.io.IOException from label40 to label41 with label54;
        catch java.lang.Throwable from label40 to label41 with label53;
        catch java.io.IOException from label42 to label43 with label54;
        catch java.lang.Throwable from label42 to label43 with label53;
        catch java.io.IOException from label43 to label44 with label54;
        catch java.lang.Throwable from label43 to label44 with label53;
        catch java.lang.Throwable from label45 to label46 with label48;
        catch java.lang.Throwable from label46 to label47 with label48;
        catch java.lang.Throwable from label49 to label50 with label48;
        catch java.io.IOException from label50 to label51 with label54;
        catch java.lang.Throwable from label50 to label51 with label53;
        catch java.io.IOException from label51 to label52 with label54;
        catch java.lang.Throwable from label51 to label52 with label53;
        catch java.lang.Throwable from label55 to label56 with label53;
    }

    public int systemNotResponding(java.lang.String)
    {
        com.android.server.am.ActivityManagerShellCommand$MyActivityController r0;
        java.io.PrintWriter r1, $r3, $r7, $r8, $r9;
        java.lang.StringBuilder r2;
        java.lang.String $r6, r11;
        java.lang.Throwable $r10;

        r0 := @this: com.android.server.am.ActivityManagerShellCommand$MyActivityController;

        r11 := @parameter0: java.lang.String;

        entermonitor r0;

     label1:
        $r3 = r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: java.io.PrintWriter mPw>;

        virtualinvoke $r3.<java.io.PrintWriter: void println(java.lang.String)>("** ERROR: PROCESS NOT RESPONDING");

        r1 = r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: java.io.PrintWriter mPw>;

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("message: ");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);

        $r6 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r6);

        $r7 = r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: java.io.PrintWriter mPw>;

        virtualinvoke $r7.<java.io.PrintWriter: void println(java.lang.String)>("#");

        $r8 = r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: java.io.PrintWriter mPw>;

        virtualinvoke $r8.<java.io.PrintWriter: void println(java.lang.String)>("Allowing system to die.");

        $r9 = r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: java.io.PrintWriter mPw>;

        virtualinvoke $r9.<java.io.PrintWriter: void flush()>();

        exitmonitor r0;

     label2:
        return -1;

     label3:
        $r10 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        throw $r10;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    int waitControllerLocked(int, int)
    {
        com.android.server.am.ActivityManagerShellCommand$MyActivityController r0;
        int i0, i1, $i2, $i3;
        java.lang.String $r2, $r4, $r6, $r9, $r12, $r14, $r16, $r18, $r21, $r24, $r25, $r35;
        java.io.PrintWriter $r7, $r19, $r36, r37, r39, r41, r49, $r50, $r51;
        java.lang.String[] $r23;
        java.lang.Process $r26, $r27;
        java.io.InputStream $r28;
        java.lang.Throwable $r29, $r30, $r31;
        java.lang.StringBuilder $r32, r38, r40, r42, r44;
        java.lang.Runtime r43;
        java.io.InputStreamReader r45;
        com.android.server.am.ActivityManagerShellCommand$MyActivityController$1 r46;

        r0 := @this: com.android.server.am.ActivityManagerShellCommand$MyActivityController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: java.lang.String mGdbPort>;

        if $r2 == null goto label07;

        virtualinvoke r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: void killGdbLocked()>();

     label01:
        r37 = r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: java.io.PrintWriter mPw>;

        r38 = new java.lang.StringBuilder;

        specialinvoke r38.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Starting gdbserver on port ");

        $r4 = r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: java.lang.String mGdbPort>;

        virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke r38.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r37.<java.io.PrintWriter: void println(java.lang.String)>($r6);

        $r7 = r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: java.io.PrintWriter mPw>;

        virtualinvoke $r7.<java.io.PrintWriter: void println(java.lang.String)>("Do the following:");

        r39 = r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: java.io.PrintWriter mPw>;

        r40 = new java.lang.StringBuilder;

        specialinvoke r40.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  adb forward tcp:");

        $r9 = r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: java.lang.String mGdbPort>;

        virtualinvoke r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" tcp:");

        $r12 = r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: java.lang.String mGdbPort>;

        virtualinvoke r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke r40.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r39.<java.io.PrintWriter: void println(java.lang.String)>($r14);

        r41 = r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: java.io.PrintWriter mPw>;

        r42 = new java.lang.StringBuilder;

        specialinvoke r42.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  gdbclient app_process :");

        $r16 = r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: java.lang.String mGdbPort>;

        virtualinvoke r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke r42.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r41.<java.io.PrintWriter: void println(java.lang.String)>($r18);

        $r19 = r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: java.io.PrintWriter mPw>;

        virtualinvoke $r19.<java.io.PrintWriter: void flush()>();

        r43 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        r44 = new java.lang.StringBuilder;

        specialinvoke r44.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r21 = r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: java.lang.String mGdbPort>;

        virtualinvoke r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = newarray (java.lang.String)[4];

        $r23[0] = "gdbserver";

        $r24 = virtualinvoke r44.<java.lang.StringBuilder: java.lang.String toString()>();

        $r23[1] = $r24;

        $r23[2] = "--attach";

        $r25 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        $r23[3] = $r25;

        $r26 = virtualinvoke r43.<java.lang.Runtime: java.lang.Process exec(java.lang.String[])>($r23);

        r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: java.lang.Process mGdbProcess> = $r26;

        r45 = new java.io.InputStreamReader;

        $r27 = r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: java.lang.Process mGdbProcess>;

        $r28 = virtualinvoke $r27.<java.lang.Process: java.io.InputStream getInputStream()>();

        specialinvoke r45.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r28);

        r46 = new com.android.server.am.ActivityManagerShellCommand$MyActivityController$1;

        specialinvoke r46.<com.android.server.am.ActivityManagerShellCommand$MyActivityController$1: void <init>(com.android.server.am.ActivityManagerShellCommand$MyActivityController,java.io.InputStreamReader)>(r0, r45);

        r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: java.lang.Thread mGdbThread> = r46;

        virtualinvoke r46.<java.lang.Thread: void start()>();

     label02:
        virtualinvoke r0.<java.lang.Object: void wait(long)>(500L);

     label03:
        goto label05;

     label04:
        $r30 := @caughtexception;

     label05:
        goto label07;

     label06:
        $r31 := @caughtexception;

        r49 = r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: java.io.PrintWriter mPw>;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure starting gdbserver: ");

        virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r31);

        $r35 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r49.<java.io.PrintWriter: void println(java.lang.String)>($r35);

        $r36 = r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: java.io.PrintWriter mPw>;

        virtualinvoke $r36.<java.io.PrintWriter: void flush()>();

        virtualinvoke r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: void killGdbLocked()>();

     label07:
        r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: int mState> = i1;

        $r50 = r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: java.io.PrintWriter mPw>;

        virtualinvoke $r50.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: void printMessageForState()>();

        $r51 = r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: java.io.PrintWriter mPw>;

        virtualinvoke $r51.<java.io.PrintWriter: void flush()>();

     label08:
        $i3 = r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: int mState>;

        if $i3 == 0 goto label12;

     label09:
        virtualinvoke r0.<java.lang.Object: void wait()>();

     label10:
        goto label08;

     label11:
        $r29 := @caughtexception;

        goto label10;

     label12:
        virtualinvoke r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: void killGdbLocked()>();

        $i2 = r0.<com.android.server.am.ActivityManagerShellCommand$MyActivityController: int mResult>;

        return $i2;

        catch java.io.IOException from label01 to label02 with label06;
        catch java.lang.InterruptedException from label02 to label03 with label04;
        catch java.io.IOException from label02 to label03 with label06;
        catch java.lang.InterruptedException from label09 to label10 with label11;
    }

    public static void <clinit>()
    {
        <com.android.server.am.ActivityManagerShellCommand$MyActivityController: int STATE_NORMAL> = 0;

        <com.android.server.am.ActivityManagerShellCommand$MyActivityController: int STATE_EARLY_ANR> = 2;

        <com.android.server.am.ActivityManagerShellCommand$MyActivityController: int STATE_CRASHED> = 1;

        <com.android.server.am.ActivityManagerShellCommand$MyActivityController: int STATE_ANR> = 3;

        <com.android.server.am.ActivityManagerShellCommand$MyActivityController: int RESULT_EARLY_ANR_KILL> = 1;

        <com.android.server.am.ActivityManagerShellCommand$MyActivityController: int RESULT_EARLY_ANR_CONTINUE> = 0;

        <com.android.server.am.ActivityManagerShellCommand$MyActivityController: int RESULT_DEFAULT> = 0;

        <com.android.server.am.ActivityManagerShellCommand$MyActivityController: int RESULT_CRASH_KILL> = 1;

        <com.android.server.am.ActivityManagerShellCommand$MyActivityController: int RESULT_CRASH_DIALOG> = 0;

        <com.android.server.am.ActivityManagerShellCommand$MyActivityController: int RESULT_ANR_WAIT> = 2;

        <com.android.server.am.ActivityManagerShellCommand$MyActivityController: int RESULT_ANR_KILL> = 1;

        <com.android.server.am.ActivityManagerShellCommand$MyActivityController: int RESULT_ANR_DIALOG> = 0;

        return;
    }
}
