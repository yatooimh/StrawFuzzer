final class com.android.server.am.ActivityManagerShellCommand$MyUidObserver extends android.app.IUidObserver$Stub implements com.android.server.am.ActivityManagerService$OomAdjObserver
{
    static final int STATE_NORMAL;
    final java.io.InputStream mInput;
    final android.app.IActivityManager mInterface;
    final com.android.server.am.ActivityManagerService mInternal;
    final java.io.PrintWriter mPw;
    int mState;
    final int mUid;

    void <init>(com.android.server.am.ActivityManagerService, java.io.PrintWriter, java.io.InputStream, int)
    {
        com.android.server.am.ActivityManagerShellCommand$MyUidObserver r0;
        com.android.server.am.ActivityManagerService r1;
        java.io.PrintWriter r2;
        java.io.InputStream r3;
        int i0;

        r0 := @this: com.android.server.am.ActivityManagerShellCommand$MyUidObserver;

        r1 := @parameter0: com.android.server.am.ActivityManagerService;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.io.InputStream;

        i0 := @parameter3: int;

        specialinvoke r0.<android.app.IUidObserver$Stub: void <init>()>();

        r0.<com.android.server.am.ActivityManagerShellCommand$MyUidObserver: android.app.IActivityManager mInterface> = r1;

        r0.<com.android.server.am.ActivityManagerShellCommand$MyUidObserver: com.android.server.am.ActivityManagerService mInternal> = r1;

        r0.<com.android.server.am.ActivityManagerShellCommand$MyUidObserver: java.io.PrintWriter mPw> = r2;

        r0.<com.android.server.am.ActivityManagerShellCommand$MyUidObserver: java.io.InputStream mInput> = r3;

        r0.<com.android.server.am.ActivityManagerShellCommand$MyUidObserver: int mUid> = i0;

        return;
    }

    public void onOomAdjMessage(java.lang.String)
    {
        com.android.server.am.ActivityManagerShellCommand$MyUidObserver r0;
        android.os.StrictMode$ThreadPolicy r1;
        java.io.PrintWriter $r2, $r3, $r4;
        java.lang.Throwable $r5, $r6;
        java.lang.String r7;

        r0 := @this: com.android.server.am.ActivityManagerShellCommand$MyUidObserver;

        r7 := @parameter0: java.lang.String;

        entermonitor r0;

     label01:
        r1 = staticinvoke <android.os.StrictMode: android.os.StrictMode$ThreadPolicy allowThreadDiskWrites()>();

     label02:
        $r2 = r0.<com.android.server.am.ActivityManagerShellCommand$MyUidObserver: java.io.PrintWriter mPw>;

        virtualinvoke $r2.<java.io.PrintWriter: void print(java.lang.String)>("# ");

        $r3 = r0.<com.android.server.am.ActivityManagerShellCommand$MyUidObserver: java.io.PrintWriter mPw>;

        virtualinvoke $r3.<java.io.PrintWriter: void println(java.lang.String)>(r7);

        $r4 = r0.<com.android.server.am.ActivityManagerShellCommand$MyUidObserver: java.io.PrintWriter mPw>;

        virtualinvoke $r4.<java.io.PrintWriter: void flush()>();

     label03:
        staticinvoke <android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)>(r1);

     label04:
        exitmonitor r0;

     label05:
        return;

     label06:
        $r5 := @caughtexception;

     label07:
        staticinvoke <android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)>(r1);

     label08:
        throw $r5;

     label09:
        $r6 := @caughtexception;

     label10:
        exitmonitor r0;

     label11:
        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label02 to label03 with label06;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label08 to label09 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public void onUidActive(int) throws android.os.RemoteException
    {
        com.android.server.am.ActivityManagerShellCommand$MyUidObserver r0;
        int i0;
        java.io.PrintWriter $r2, $r3, $r4;
        java.lang.Throwable $r5, $r6;
        android.os.StrictMode$ThreadPolicy r7;

        r0 := @this: com.android.server.am.ActivityManagerShellCommand$MyUidObserver;

        i0 := @parameter0: int;

        entermonitor r0;

     label01:
        r7 = staticinvoke <android.os.StrictMode: android.os.StrictMode$ThreadPolicy allowThreadDiskWrites()>();

     label02:
        $r2 = r0.<com.android.server.am.ActivityManagerShellCommand$MyUidObserver: java.io.PrintWriter mPw>;

        virtualinvoke $r2.<java.io.PrintWriter: void print(int)>(i0);

        $r3 = r0.<com.android.server.am.ActivityManagerShellCommand$MyUidObserver: java.io.PrintWriter mPw>;

        virtualinvoke $r3.<java.io.PrintWriter: void println(java.lang.String)>(" active");

        $r4 = r0.<com.android.server.am.ActivityManagerShellCommand$MyUidObserver: java.io.PrintWriter mPw>;

        virtualinvoke $r4.<java.io.PrintWriter: void flush()>();

     label03:
        staticinvoke <android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)>(r7);

     label04:
        exitmonitor r0;

     label05:
        return;

     label06:
        $r6 := @caughtexception;

     label07:
        staticinvoke <android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)>(r7);

     label08:
        throw $r6;

     label09:
        $r5 := @caughtexception;

     label10:
        exitmonitor r0;

     label11:
        throw $r5;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label02 to label03 with label06;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label08 to label09 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public void onUidCachedChanged(int, boolean) throws android.os.RemoteException
    {
        com.android.server.am.ActivityManagerShellCommand$MyUidObserver r0;
        int i0;
        boolean z0;
        android.os.StrictMode$ThreadPolicy r1;
        java.io.PrintWriter r2, $r3, $r4;
        java.lang.Throwable $r5, $r6;
        java.lang.String r7;

        r0 := @this: com.android.server.am.ActivityManagerShellCommand$MyUidObserver;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        entermonitor r0;

     label01:
        r1 = staticinvoke <android.os.StrictMode: android.os.StrictMode$ThreadPolicy allowThreadDiskWrites()>();

     label02:
        $r3 = r0.<com.android.server.am.ActivityManagerShellCommand$MyUidObserver: java.io.PrintWriter mPw>;

        virtualinvoke $r3.<java.io.PrintWriter: void print(int)>(i0);

        r2 = r0.<com.android.server.am.ActivityManagerShellCommand$MyUidObserver: java.io.PrintWriter mPw>;

     label03:
        if z0 == 0 goto label04;

        r7 = " cached";

        goto label05;

     label04:
        r7 = " uncached";

     label05:
        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>(r7);

        $r4 = r0.<com.android.server.am.ActivityManagerShellCommand$MyUidObserver: java.io.PrintWriter mPw>;

        virtualinvoke $r4.<java.io.PrintWriter: void flush()>();

     label06:
        staticinvoke <android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)>(r1);

     label07:
        exitmonitor r0;

     label08:
        return;

     label09:
        $r5 := @caughtexception;

     label10:
        staticinvoke <android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)>(r1);

     label11:
        throw $r5;

     label12:
        $r6 := @caughtexception;

     label13:
        exitmonitor r0;

     label14:
        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label07 to label08 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label11 to label12 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public void onUidGone(int, boolean) throws android.os.RemoteException
    {
        com.android.server.am.ActivityManagerShellCommand$MyUidObserver r0;
        int i0;
        boolean z0;
        java.io.PrintWriter $r2, $r3, $r4, $r5, $r6;
        java.lang.Throwable $r7, $r8;
        android.os.StrictMode$ThreadPolicy r9;

        r0 := @this: com.android.server.am.ActivityManagerShellCommand$MyUidObserver;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        entermonitor r0;

     label01:
        r9 = staticinvoke <android.os.StrictMode: android.os.StrictMode$ThreadPolicy allowThreadDiskWrites()>();

     label02:
        $r2 = r0.<com.android.server.am.ActivityManagerShellCommand$MyUidObserver: java.io.PrintWriter mPw>;

        virtualinvoke $r2.<java.io.PrintWriter: void print(int)>(i0);

        $r3 = r0.<com.android.server.am.ActivityManagerShellCommand$MyUidObserver: java.io.PrintWriter mPw>;

        virtualinvoke $r3.<java.io.PrintWriter: void print(java.lang.String)>(" gone");

     label03:
        if z0 == 0 goto label05;

     label04:
        $r6 = r0.<com.android.server.am.ActivityManagerShellCommand$MyUidObserver: java.io.PrintWriter mPw>;

        virtualinvoke $r6.<java.io.PrintWriter: void print(java.lang.String)>(" disabled");

     label05:
        $r4 = r0.<com.android.server.am.ActivityManagerShellCommand$MyUidObserver: java.io.PrintWriter mPw>;

        virtualinvoke $r4.<java.io.PrintWriter: void println()>();

        $r5 = r0.<com.android.server.am.ActivityManagerShellCommand$MyUidObserver: java.io.PrintWriter mPw>;

        virtualinvoke $r5.<java.io.PrintWriter: void flush()>();

     label06:
        staticinvoke <android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)>(r9);

     label07:
        exitmonitor r0;

     label08:
        return;

     label09:
        $r7 := @caughtexception;

     label10:
        staticinvoke <android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)>(r9);

     label11:
        throw $r7;

     label12:
        $r8 := @caughtexception;

     label13:
        exitmonitor r0;

     label14:
        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label07 to label08 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label11 to label12 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public void onUidIdle(int, boolean) throws android.os.RemoteException
    {
        com.android.server.am.ActivityManagerShellCommand$MyUidObserver r0;
        int i0;
        boolean z0;
        android.os.StrictMode$ThreadPolicy r1;
        java.io.PrintWriter $r2, $r3, $r4, $r5, $r6;
        java.lang.Throwable $r7, $r8;

        r0 := @this: com.android.server.am.ActivityManagerShellCommand$MyUidObserver;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        entermonitor r0;

     label01:
        r1 = staticinvoke <android.os.StrictMode: android.os.StrictMode$ThreadPolicy allowThreadDiskWrites()>();

     label02:
        $r2 = r0.<com.android.server.am.ActivityManagerShellCommand$MyUidObserver: java.io.PrintWriter mPw>;

        virtualinvoke $r2.<java.io.PrintWriter: void print(int)>(i0);

        $r3 = r0.<com.android.server.am.ActivityManagerShellCommand$MyUidObserver: java.io.PrintWriter mPw>;

        virtualinvoke $r3.<java.io.PrintWriter: void print(java.lang.String)>(" idle");

     label03:
        if z0 == 0 goto label05;

     label04:
        $r6 = r0.<com.android.server.am.ActivityManagerShellCommand$MyUidObserver: java.io.PrintWriter mPw>;

        virtualinvoke $r6.<java.io.PrintWriter: void print(java.lang.String)>(" disabled");

     label05:
        $r4 = r0.<com.android.server.am.ActivityManagerShellCommand$MyUidObserver: java.io.PrintWriter mPw>;

        virtualinvoke $r4.<java.io.PrintWriter: void println()>();

        $r5 = r0.<com.android.server.am.ActivityManagerShellCommand$MyUidObserver: java.io.PrintWriter mPw>;

        virtualinvoke $r5.<java.io.PrintWriter: void flush()>();

     label06:
        staticinvoke <android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)>(r1);

     label07:
        exitmonitor r0;

     label08:
        return;

     label09:
        $r7 := @caughtexception;

     label10:
        staticinvoke <android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)>(r1);

     label11:
        throw $r7;

     label12:
        $r8 := @caughtexception;

     label13:
        exitmonitor r0;

     label14:
        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label07 to label08 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label11 to label12 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public void onUidStateChanged(int, int, long, int) throws android.os.RemoteException
    {
        com.android.server.am.ActivityManagerShellCommand$MyUidObserver r0;
        int i0, i1, i3;
        long l2;
        java.io.PrintWriter $r2, $r3, $r4, $r6, $r7, $r8, $r9, $r10;
        java.lang.String $r5;
        java.lang.Throwable $r11, $r12;
        android.os.StrictMode$ThreadPolicy r13;

        r0 := @this: com.android.server.am.ActivityManagerShellCommand$MyUidObserver;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        l2 := @parameter2: long;

        i3 := @parameter3: int;

        entermonitor r0;

     label01:
        r13 = staticinvoke <android.os.StrictMode: android.os.StrictMode$ThreadPolicy allowThreadDiskWrites()>();

     label02:
        $r2 = r0.<com.android.server.am.ActivityManagerShellCommand$MyUidObserver: java.io.PrintWriter mPw>;

        virtualinvoke $r2.<java.io.PrintWriter: void print(int)>(i0);

        $r3 = r0.<com.android.server.am.ActivityManagerShellCommand$MyUidObserver: java.io.PrintWriter mPw>;

        virtualinvoke $r3.<java.io.PrintWriter: void print(java.lang.String)>(" procstate ");

        $r4 = r0.<com.android.server.am.ActivityManagerShellCommand$MyUidObserver: java.io.PrintWriter mPw>;

        $r5 = staticinvoke <com.android.server.am.ProcessList: java.lang.String makeProcStateString(int)>(i1);

        virtualinvoke $r4.<java.io.PrintWriter: void print(java.lang.String)>($r5);

        $r6 = r0.<com.android.server.am.ActivityManagerShellCommand$MyUidObserver: java.io.PrintWriter mPw>;

        virtualinvoke $r6.<java.io.PrintWriter: void print(java.lang.String)>(" seq ");

        $r7 = r0.<com.android.server.am.ActivityManagerShellCommand$MyUidObserver: java.io.PrintWriter mPw>;

        virtualinvoke $r7.<java.io.PrintWriter: void print(long)>(l2);

        $r8 = r0.<com.android.server.am.ActivityManagerShellCommand$MyUidObserver: java.io.PrintWriter mPw>;

        virtualinvoke $r8.<java.io.PrintWriter: void print(java.lang.String)>(" capability ");

        $r9 = r0.<com.android.server.am.ActivityManagerShellCommand$MyUidObserver: java.io.PrintWriter mPw>;

        virtualinvoke $r9.<java.io.PrintWriter: void println(int)>(i3);

        $r10 = r0.<com.android.server.am.ActivityManagerShellCommand$MyUidObserver: java.io.PrintWriter mPw>;

        virtualinvoke $r10.<java.io.PrintWriter: void flush()>();

     label03:
        staticinvoke <android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)>(r13);

     label04:
        exitmonitor r0;

     label05:
        return;

     label06:
        $r12 := @caughtexception;

     label07:
        staticinvoke <android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)>(r13);

     label08:
        throw $r12;

     label09:
        $r11 := @caughtexception;

     label10:
        exitmonitor r0;

     label11:
        throw $r11;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label02 to label03 with label06;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label08 to label09 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    void printMessageForState()
    {
        com.android.server.am.ActivityManagerShellCommand$MyUidObserver r0;
        int $i0;
        java.io.PrintWriter $r1, $r2;

        r0 := @this: com.android.server.am.ActivityManagerShellCommand$MyUidObserver;

        $i0 = r0.<com.android.server.am.ActivityManagerShellCommand$MyUidObserver: int mState>;

        if $i0 == 0 goto label1;

        goto label2;

     label1:
        $r1 = r0.<com.android.server.am.ActivityManagerShellCommand$MyUidObserver: java.io.PrintWriter mPw>;

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>("Watching uid states...  available commands:");

     label2:
        $r2 = r0.<com.android.server.am.ActivityManagerShellCommand$MyUidObserver: java.io.PrintWriter mPw>;

        virtualinvoke $r2.<java.io.PrintWriter: void println(java.lang.String)>("(q)uit: finish watching");

        return;
    }

    void run() throws android.os.RemoteException
    {
        com.android.server.am.ActivityManagerShellCommand$MyUidObserver r0;
        java.lang.String r1, $r7, $r8, $r11;
        java.io.PrintWriter r2, $r3, $r12, $r13, $r17, $r18;
        android.app.IActivityManager $r4, $r20, $r28;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.io.InputStream $r5;
        com.android.server.am.ActivityManagerService $r6, $r14, $r21;
        boolean $z0, $z1, z2;
        java.lang.Throwable $r15, $r16, $r19;
        java.io.InputStreamReader r29;
        java.io.BufferedReader r30;
        java.lang.StringBuilder r31;
        java.io.IOException r32;

        r0 := @this: com.android.server.am.ActivityManagerShellCommand$MyUidObserver;

     label01:
        virtualinvoke r0.<com.android.server.am.ActivityManagerShellCommand$MyUidObserver: void printMessageForState()>();

        $r3 = r0.<com.android.server.am.ActivityManagerShellCommand$MyUidObserver: java.io.PrintWriter mPw>;

        virtualinvoke $r3.<java.io.PrintWriter: void flush()>();

        $r4 = r0.<com.android.server.am.ActivityManagerShellCommand$MyUidObserver: android.app.IActivityManager mInterface>;

        interfaceinvoke $r4.<android.app.IActivityManager: void registerUidObserver(android.app.IUidObserver,int,int,java.lang.String)>(r0, 31, -1, null);

        $i0 = r0.<com.android.server.am.ActivityManagerShellCommand$MyUidObserver: int mUid>;

        if $i0 < 0 goto label02;

        $r14 = r0.<com.android.server.am.ActivityManagerShellCommand$MyUidObserver: com.android.server.am.ActivityManagerService mInternal>;

        $i2 = r0.<com.android.server.am.ActivityManagerShellCommand$MyUidObserver: int mUid>;

        virtualinvoke $r14.<com.android.server.am.ActivityManagerService: void setOomAdjObserver(int,com.android.server.am.ActivityManagerService$OomAdjObserver)>($i2, r0);

     label02:
        r0.<com.android.server.am.ActivityManagerShellCommand$MyUidObserver: int mState> = 0;

        r29 = new java.io.InputStreamReader;

        $r5 = r0.<com.android.server.am.ActivityManagerShellCommand$MyUidObserver: java.io.InputStream mInput>;

        specialinvoke r29.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r5);

        r30 = new java.io.BufferedReader;

        specialinvoke r30.<java.io.BufferedReader: void <init>(java.io.Reader)>(r29);

     label03:
        r1 = virtualinvoke r30.<java.io.BufferedReader: java.lang.String readLine()>();

     label04:
        if r1 == null goto label18;

        z2 = 1;

     label05:
        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i1 > 0 goto label07;

     label06:
        z2 = 0;

        goto label10;

     label07:
        $r7 = "q";

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 != 0 goto label18;

        $r8 = "quit";

        $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label09;

     label08:
        goto label18;

     label09:
        r2 = r0.<com.android.server.am.ActivityManagerShellCommand$MyUidObserver: java.io.PrintWriter mPw>;

        r31 = new java.lang.StringBuilder;

        specialinvoke r31.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid command: ");

        virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = virtualinvoke r31.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r11);

     label10:
        entermonitor r0;

     label11:
        if z2 == 0 goto label13;

     label12:
        $r13 = r0.<com.android.server.am.ActivityManagerShellCommand$MyUidObserver: java.io.PrintWriter mPw>;

        virtualinvoke $r13.<java.io.PrintWriter: void println(java.lang.String)>("");

     label13:
        virtualinvoke r0.<com.android.server.am.ActivityManagerShellCommand$MyUidObserver: void printMessageForState()>();

        $r12 = r0.<com.android.server.am.ActivityManagerShellCommand$MyUidObserver: java.io.PrintWriter mPw>;

        virtualinvoke $r12.<java.io.PrintWriter: void flush()>();

        exitmonitor r0;

     label14:
        goto label03;

     label15:
        $r15 := @caughtexception;

     label16:
        exitmonitor r0;

     label17:
        throw $r15;

     label18:
        $i5 = r0.<com.android.server.am.ActivityManagerShellCommand$MyUidObserver: int mUid>;

        if $i5 < 0 goto label24;

        goto label23;

     label19:
        $r19 := @caughtexception;

        goto label25;

     label20:
        $r16 := @caughtexception;

     label21:
        $r17 = r0.<com.android.server.am.ActivityManagerShellCommand$MyUidObserver: java.io.PrintWriter mPw>;

        r32 = (java.io.IOException) $r16;

        virtualinvoke r32.<java.io.IOException: void printStackTrace(java.io.PrintWriter)>($r17);

        $r18 = r0.<com.android.server.am.ActivityManagerShellCommand$MyUidObserver: java.io.PrintWriter mPw>;

        virtualinvoke $r18.<java.io.PrintWriter: void flush()>();

     label22:
        $i3 = r0.<com.android.server.am.ActivityManagerShellCommand$MyUidObserver: int mUid>;

        if $i3 < 0 goto label24;

     label23:
        $r6 = r0.<com.android.server.am.ActivityManagerShellCommand$MyUidObserver: com.android.server.am.ActivityManagerService mInternal>;

        virtualinvoke $r6.<com.android.server.am.ActivityManagerService: void clearOomAdjObserver()>();

     label24:
        $r28 = r0.<com.android.server.am.ActivityManagerShellCommand$MyUidObserver: android.app.IActivityManager mInterface>;

        interfaceinvoke $r28.<android.app.IActivityManager: void unregisterUidObserver(android.app.IUidObserver)>(r0);

        return;

     label25:
        $i4 = r0.<com.android.server.am.ActivityManagerShellCommand$MyUidObserver: int mUid>;

        if $i4 < 0 goto label26;

        $r21 = r0.<com.android.server.am.ActivityManagerShellCommand$MyUidObserver: com.android.server.am.ActivityManagerService mInternal>;

        virtualinvoke $r21.<com.android.server.am.ActivityManagerService: void clearOomAdjObserver()>();

     label26:
        $r20 = r0.<com.android.server.am.ActivityManagerShellCommand$MyUidObserver: android.app.IActivityManager mInterface>;

        interfaceinvoke $r20.<android.app.IActivityManager: void unregisterUidObserver(android.app.IUidObserver)>(r0);

        throw $r19;

        catch java.io.IOException from label01 to label02 with label20;
        catch java.lang.Throwable from label01 to label02 with label19;
        catch java.io.IOException from label02 to label03 with label20;
        catch java.lang.Throwable from label02 to label03 with label19;
        catch java.io.IOException from label03 to label04 with label20;
        catch java.lang.Throwable from label03 to label04 with label19;
        catch java.io.IOException from label05 to label06 with label20;
        catch java.lang.Throwable from label05 to label06 with label19;
        catch java.io.IOException from label07 to label08 with label20;
        catch java.lang.Throwable from label07 to label08 with label19;
        catch java.io.IOException from label09 to label10 with label20;
        catch java.lang.Throwable from label09 to label10 with label19;
        catch java.io.IOException from label10 to label11 with label20;
        catch java.lang.Throwable from label10 to label11 with label19;
        catch java.lang.Throwable from label12 to label13 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label16 to label17 with label15;
        catch java.io.IOException from label17 to label18 with label20;
        catch java.lang.Throwable from label17 to label18 with label19;
        catch java.lang.Throwable from label21 to label22 with label19;
    }

    public static void <clinit>()
    {
        <com.android.server.am.ActivityManagerShellCommand$MyUidObserver: int STATE_NORMAL> = 0;

        return;
    }
}
