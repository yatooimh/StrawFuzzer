final class com.android.server.am.ActivityManagerShellCommand$StopUserCallback extends android.app.IStopUserCallback$Stub
{
    private boolean mFinished;

    void <init>()
    {
        com.android.server.am.ActivityManagerShellCommand$StopUserCallback r0;

        r0 := @this: com.android.server.am.ActivityManagerShellCommand$StopUserCallback;

        specialinvoke r0.<android.app.IStopUserCallback$Stub: void <init>()>();

        r0.<com.android.server.am.ActivityManagerShellCommand$StopUserCallback: boolean mFinished> = 0;

        return;
    }

    public void userStopAborted(int)
    {
        com.android.server.am.ActivityManagerShellCommand$StopUserCallback r0;
        int i0;
        java.lang.Throwable $r2;

        r0 := @this: com.android.server.am.ActivityManagerShellCommand$StopUserCallback;

        i0 := @parameter0: int;

        entermonitor r0;

     label1:
        r0.<com.android.server.am.ActivityManagerShellCommand$StopUserCallback: boolean mFinished> = 1;

        virtualinvoke r0.<java.lang.Object: void notifyAll()>();

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void userStopped(int)
    {
        com.android.server.am.ActivityManagerShellCommand$StopUserCallback r0;
        int i0;
        java.lang.Throwable $r2;

        r0 := @this: com.android.server.am.ActivityManagerShellCommand$StopUserCallback;

        i0 := @parameter0: int;

        entermonitor r0;

     label1:
        r0.<com.android.server.am.ActivityManagerShellCommand$StopUserCallback: boolean mFinished> = 1;

        virtualinvoke r0.<java.lang.Object: void notifyAll()>();

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void waitForFinish()
    {
        com.android.server.am.ActivityManagerShellCommand$StopUserCallback r0;
        java.lang.IllegalStateException r1;
        boolean $z0;
        java.lang.Throwable $r2, $r3;

        r0 := @this: com.android.server.am.ActivityManagerShellCommand$StopUserCallback;

        entermonitor r0;

     label1:
        $z0 = r0.<com.android.server.am.ActivityManagerShellCommand$StopUserCallback: boolean mFinished>;

        if $z0 != 0 goto label3;

        virtualinvoke r0.<java.lang.Object: void wait()>();

     label2:
        goto label1;

     label3:
        exitmonitor r0;

        return;

     label4:
        $r2 := @caughtexception;

        goto label7;

     label5:
        $r3 := @caughtexception;

     label6:
        r1 = new java.lang.IllegalStateException;

        specialinvoke r1.<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>($r3);

        throw r1;

     label7:
        exitmonitor r0;

        throw $r2;

        catch java.lang.InterruptedException from label1 to label2 with label5;
        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label6 to label7 with label4;
    }
}
