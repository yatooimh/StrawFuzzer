class com.android.server.am.AnrHelper extends java.lang.Object
{
    private static final long EXPIRED_REPORT_TIME_MS;
    private static final java.lang.String TAG;
    private final java.util.ArrayList mAnrRecords;
    private final java.util.concurrent.atomic.AtomicBoolean mRunning;

    static void <clinit>()
    {
        java.util.concurrent.TimeUnit $r0;
        long $l0;

        <com.android.server.am.AnrHelper: java.lang.String TAG> = "ActivityManager";

        $r0 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MINUTES>;

        $l0 = virtualinvoke $r0.<java.util.concurrent.TimeUnit: long toMillis(long)>(1L);

        <com.android.server.am.AnrHelper: long EXPIRED_REPORT_TIME_MS> = $l0;

        return;
    }

    void <init>()
    {
        com.android.server.am.AnrHelper r0;
        java.util.ArrayList $r1;
        java.util.concurrent.atomic.AtomicBoolean $r2;

        r0 := @this: com.android.server.am.AnrHelper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.AnrHelper: java.util.ArrayList mAnrRecords> = $r1;

        $r2 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r2.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(0);

        r0.<com.android.server.am.AnrHelper: java.util.concurrent.atomic.AtomicBoolean mRunning> = $r2;

        return;
    }

    static java.util.ArrayList access$000(com.android.server.am.AnrHelper)
    {
        com.android.server.am.AnrHelper r0;
        java.util.ArrayList $r1;

        r0 := @parameter0: com.android.server.am.AnrHelper;

        $r1 = r0.<com.android.server.am.AnrHelper: java.util.ArrayList mAnrRecords>;

        return $r1;
    }

    static long access$100()
    {
        long $l0;

        $l0 = <com.android.server.am.AnrHelper: long EXPIRED_REPORT_TIME_MS>;

        return $l0;
    }

    static java.util.concurrent.atomic.AtomicBoolean access$200(com.android.server.am.AnrHelper)
    {
        com.android.server.am.AnrHelper r0;
        java.util.concurrent.atomic.AtomicBoolean $r1;

        r0 := @parameter0: com.android.server.am.AnrHelper;

        $r1 = r0.<com.android.server.am.AnrHelper: java.util.concurrent.atomic.AtomicBoolean mRunning>;

        return $r1;
    }

    static void access$300(com.android.server.am.AnrHelper)
    {
        com.android.server.am.AnrHelper r0;

        r0 := @parameter0: com.android.server.am.AnrHelper;

        specialinvoke r0.<com.android.server.am.AnrHelper: void startAnrConsumerIfNeeded()>();

        return;
    }

    private void startAnrConsumerIfNeeded()
    {
        com.android.server.am.AnrHelper r0;
        java.util.concurrent.atomic.AtomicBoolean $r1;
        boolean $z0;
        com.android.server.am.AnrHelper$AnrConsumerThread $r2;

        r0 := @this: com.android.server.am.AnrHelper;

        $r1 = r0.<com.android.server.am.AnrHelper: java.util.concurrent.atomic.AtomicBoolean mRunning>;

        $z0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: boolean compareAndSet(boolean,boolean)>(0, 1);

        if $z0 == 0 goto label1;

        $r2 = new com.android.server.am.AnrHelper$AnrConsumerThread;

        specialinvoke $r2.<com.android.server.am.AnrHelper$AnrConsumerThread: void <init>(com.android.server.am.AnrHelper)>(r0);

        virtualinvoke $r2.<com.android.server.am.AnrHelper$AnrConsumerThread: void start()>();

     label1:
        return;
    }

    void appNotResponding(com.android.server.am.ProcessRecord, java.lang.String)
    {
        com.android.server.am.AnrHelper r0;
        com.android.server.am.ProcessRecord r1;
        java.lang.String r2;

        r0 := @this: com.android.server.am.AnrHelper;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        r2 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.android.server.am.AnrHelper: void appNotResponding(com.android.server.am.ProcessRecord,java.lang.String,android.content.pm.ApplicationInfo,java.lang.String,com.android.server.wm.WindowProcessController,boolean,java.lang.String)>(r1, null, null, null, null, 0, r2);

        return;
    }

    void appNotResponding(com.android.server.am.ProcessRecord, java.lang.String, android.content.pm.ApplicationInfo, java.lang.String, com.android.server.wm.WindowProcessController, boolean, java.lang.String)
    {
        com.android.server.am.AnrHelper r0;
        java.lang.String r1, r3, r5;
        android.content.pm.ApplicationInfo r2;
        com.android.server.wm.WindowProcessController r4;
        boolean z0;
        java.util.ArrayList r6, r7;
        com.android.server.am.AnrHelper$AnrRecord r8;
        java.lang.Throwable $r9;
        com.android.server.am.ProcessRecord r10;

        r0 := @this: com.android.server.am.AnrHelper;

        r10 := @parameter0: com.android.server.am.ProcessRecord;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.content.pm.ApplicationInfo;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: com.android.server.wm.WindowProcessController;

        z0 := @parameter5: boolean;

        r5 := @parameter6: java.lang.String;

        r6 = r0.<com.android.server.am.AnrHelper: java.util.ArrayList mAnrRecords>;

        entermonitor r6;

     label1:
        r7 = r0.<com.android.server.am.AnrHelper: java.util.ArrayList mAnrRecords>;

        r8 = new com.android.server.am.AnrHelper$AnrRecord;

        specialinvoke r8.<com.android.server.am.AnrHelper$AnrRecord: void <init>(com.android.server.am.ProcessRecord,java.lang.String,android.content.pm.ApplicationInfo,java.lang.String,com.android.server.wm.WindowProcessController,boolean,java.lang.String)>(r10, r1, r2, r3, r4, z0, r5);

        virtualinvoke r7.<java.util.ArrayList: boolean add(java.lang.Object)>(r8);

        exitmonitor r6;

     label2:
        specialinvoke r0.<com.android.server.am.AnrHelper: void startAnrConsumerIfNeeded()>();

        return;

     label3:
        $r9 := @caughtexception;

     label4:
        exitmonitor r6;

     label5:
        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }
}
