class com.android.server.am.AppExitInfoTracker$AppTraceRetriever extends android.app.IAppTraceRetriever$Stub
{
    final com.android.server.am.AppExitInfoTracker this$0;

    void <init>(com.android.server.am.AppExitInfoTracker)
    {
        com.android.server.am.AppExitInfoTracker$AppTraceRetriever r0;
        com.android.server.am.AppExitInfoTracker r1;

        r0 := @this: com.android.server.am.AppExitInfoTracker$AppTraceRetriever;

        r1 := @parameter0: com.android.server.am.AppExitInfoTracker;

        r0.<com.android.server.am.AppExitInfoTracker$AppTraceRetriever: com.android.server.am.AppExitInfoTracker this$0> = r1;

        specialinvoke r0.<android.app.IAppTraceRetriever$Stub: void <init>()>();

        return;
    }

    public android.os.ParcelFileDescriptor getTraceFileDescriptor(java.lang.String, int, int)
    {
        com.android.server.am.AppExitInfoTracker$AppTraceRetriever r0;
        int i0, i1, i2, i3, i4, $i8;
        java.lang.Object r1;
        long l5;
        com.android.server.am.AppExitInfoTracker $r2, $r5, $r8, $r10, $r11;
        com.android.server.am.ActivityManagerService $r3, $r6, $r9;
        boolean $z0;
        java.lang.IllegalArgumentException $r4;
        com.android.server.am.UserController $r7;
        java.lang.Throwable $r12, $r13, $r14;
        java.lang.String r15;
        android.app.ApplicationExitInfo r16;
        java.io.File r17;
        android.os.ParcelFileDescriptor r18;

        r0 := @this: com.android.server.am.AppExitInfoTracker$AppTraceRetriever;

        r15 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<com.android.server.am.AppExitInfoTracker$AppTraceRetriever: com.android.server.am.AppExitInfoTracker this$0>;

        $r3 = staticinvoke <com.android.server.am.AppExitInfoTracker: com.android.server.am.ActivityManagerService access$300(com.android.server.am.AppExitInfoTracker)>($r2);

        virtualinvoke $r3.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("getTraceFileDescriptor");

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r15);

        if $z0 != 0 goto label23;

        i2 = staticinvoke <android.os.Binder: int getCallingPid()>();

        i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        i4 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        $r5 = r0.<com.android.server.am.AppExitInfoTracker$AppTraceRetriever: com.android.server.am.AppExitInfoTracker this$0>;

        $r6 = staticinvoke <com.android.server.am.AppExitInfoTracker: com.android.server.am.ActivityManagerService access$300(com.android.server.am.AppExitInfoTracker)>($r5);

        $r7 = $r6.<com.android.server.am.ActivityManagerService: com.android.server.am.UserController mUserController>;

        virtualinvoke $r7.<com.android.server.am.UserController: int handleIncomingUser(int,int,int,boolean,int,java.lang.String,java.lang.String)>(i2, i3, i4, 1, 0, "getTraceFileDescriptor", null);

        $r8 = r0.<com.android.server.am.AppExitInfoTracker$AppTraceRetriever: com.android.server.am.AppExitInfoTracker this$0>;

        $r9 = staticinvoke <com.android.server.am.AppExitInfoTracker: com.android.server.am.ActivityManagerService access$300(com.android.server.am.AppExitInfoTracker)>($r8);

        $i8 = virtualinvoke $r9.<com.android.server.am.ActivityManagerService: int enforceDumpPermissionForPackage(java.lang.String,int,int,java.lang.String)>(r15, i4, i3, "getTraceFileDescriptor");

        if $i8 == -1 goto label22;

        $r10 = r0.<com.android.server.am.AppExitInfoTracker$AppTraceRetriever: com.android.server.am.AppExitInfoTracker this$0>;

        r1 = staticinvoke <com.android.server.am.AppExitInfoTracker: java.lang.Object access$200(com.android.server.am.AppExitInfoTracker)>($r10);

        entermonitor r1;

     label01:
        $r11 = r0.<com.android.server.am.AppExitInfoTracker$AppTraceRetriever: com.android.server.am.AppExitInfoTracker this$0>;

        r16 = staticinvoke <com.android.server.am.AppExitInfoTracker: android.app.ApplicationExitInfo access$600(com.android.server.am.AppExitInfoTracker,java.lang.String,int,int)>($r11, r15, i0, i1);

     label02:
        if r16 != null goto label05;

     label03:
        exitmonitor r1;

     label04:
        return null;

     label05:
        r17 = virtualinvoke r16.<android.app.ApplicationExitInfo: java.io.File getTraceFile()>();

     label06:
        if r17 != null goto label09;

     label07:
        exitmonitor r1;

     label08:
        return null;

     label09:
        l5 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label10:
        r18 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor open(java.io.File,int)>(r17, 268435456);

     label11:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l5);

        exitmonitor r1;

     label12:
        return r18;

     label13:
        $r13 := @caughtexception;

     label14:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l5);

     label15:
        throw $r13;

     label16:
        $r12 := @caughtexception;

     label17:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l5);

        exitmonitor r1;

     label18:
        return null;

     label19:
        $r14 := @caughtexception;

     label20:
        exitmonitor r1;

     label21:
        throw $r14;

     label22:
        return null;

     label23:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid package name");

        throw $r4;

        catch java.lang.Throwable from label01 to label02 with label19;
        catch java.lang.Throwable from label03 to label04 with label19;
        catch java.lang.Throwable from label05 to label06 with label19;
        catch java.lang.Throwable from label07 to label08 with label19;
        catch java.lang.Throwable from label09 to label10 with label19;
        catch java.io.FileNotFoundException from label10 to label11 with label16;
        catch java.lang.Throwable from label10 to label11 with label13;
        catch java.lang.Throwable from label11 to label12 with label19;
        catch java.lang.Throwable from label14 to label15 with label19;
        catch java.lang.Throwable from label15 to label16 with label19;
        catch java.lang.Throwable from label17 to label18 with label19;
        catch java.lang.Throwable from label20 to label21 with label19;
    }
}
