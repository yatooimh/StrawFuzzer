public final class com.android.server.am.AppExitInfoTracker extends java.lang.Object
{
    static final java.lang.String APP_EXIT_INFO_FILE;
    private static final long APP_EXIT_INFO_PERSIST_INTERVAL;
    private static final int APP_EXIT_RAW_INFO_POOL_SIZE;
    static final java.lang.String APP_EXIT_STORE_DIR;
    private static final java.lang.String APP_TRACE_FILE_SUFFIX;
    private static final int FOREACH_ACTION_NONE;
    private static final int FOREACH_ACTION_REMOVE_ITEM;
    private static final int FOREACH_ACTION_STOP_ITERATION;
    private static final java.lang.String TAG;
    final android.util.SparseArray mActiveAppStateSummary;
    final android.util.SparseArray mActiveAppTraces;
    private int mAppExitInfoHistoryListSize;
    boolean mAppExitInfoLoaded;
    private java.lang.Runnable mAppExitInfoPersistTask;
    final com.android.server.am.AppExitInfoTracker$AppExitInfoExternalSource mAppExitInfoSourceLmkd;
    final com.android.server.am.AppExitInfoTracker$AppExitInfoExternalSource mAppExitInfoSourceZygote;
    final com.android.server.am.AppExitInfoTracker$AppTraceRetriever mAppTraceRetriever;
    private final com.android.internal.app.ProcessMap mData;
    final com.android.server.am.AppExitInfoTracker$IsolatedUidRecords mIsolatedUidRecords;
    private com.android.server.am.AppExitInfoTracker$KillHandler mKillHandler;
    private long mLastAppExitInfoPersistTimestamp;
    private final java.lang.Object mLock;
    java.io.File mProcExitInfoFile;
    java.io.File mProcExitStoreDir;
    private final android.util.Pools$SynchronizedPool mRawRecordsPool;
    private com.android.server.am.ActivityManagerService mService;
    final java.util.ArrayList mTmpInfoList;
    final java.util.ArrayList mTmpInfoList2;

    static void <clinit>()
    {
        java.util.concurrent.TimeUnit $r0;
        long $l0;

        <com.android.server.am.AppExitInfoTracker: java.lang.String TAG> = "ActivityManager";

        <com.android.server.am.AppExitInfoTracker: int FOREACH_ACTION_STOP_ITERATION> = 2;

        <com.android.server.am.AppExitInfoTracker: int FOREACH_ACTION_REMOVE_ITEM> = 1;

        <com.android.server.am.AppExitInfoTracker: int FOREACH_ACTION_NONE> = 0;

        <com.android.server.am.AppExitInfoTracker: java.lang.String APP_TRACE_FILE_SUFFIX> = ".gz";

        <com.android.server.am.AppExitInfoTracker: java.lang.String APP_EXIT_STORE_DIR> = "procexitstore";

        <com.android.server.am.AppExitInfoTracker: int APP_EXIT_RAW_INFO_POOL_SIZE> = 8;

        <com.android.server.am.AppExitInfoTracker: java.lang.String APP_EXIT_INFO_FILE> = "procexitinfo";

        $r0 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MINUTES>;

        $l0 = virtualinvoke $r0.<java.util.concurrent.TimeUnit: long toMillis(long)>(30L);

        <com.android.server.am.AppExitInfoTracker: long APP_EXIT_INFO_PERSIST_INTERVAL> = $l0;

        return;
    }

    void <init>()
    {
        com.android.server.am.AppExitInfoTracker r0;
        java.lang.Object $r1;
        java.util.ArrayList $r2, $r3;
        com.android.server.am.AppExitInfoTracker$IsolatedUidRecords $r4;
        com.android.server.am.AppExitInfoTracker$AppExitInfoExternalSource $r5, $r6;
        java.lang.Integer $r7;
        android.util.SparseArray $r8, $r9;
        com.android.server.am.AppExitInfoTracker$AppTraceRetriever $r10;
        com.android.internal.app.ProcessMap $r11;
        android.util.Pools$SynchronizedPool $r12;

        r0 := @this: com.android.server.am.AppExitInfoTracker;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        r0.<com.android.server.am.AppExitInfoTracker: java.lang.Object mLock> = $r1;

        r0.<com.android.server.am.AppExitInfoTracker: java.lang.Runnable mAppExitInfoPersistTask> = null;

        r0.<com.android.server.am.AppExitInfoTracker: long mLastAppExitInfoPersistTimestamp> = 0L;

        r0.<com.android.server.am.AppExitInfoTracker: boolean mAppExitInfoLoaded> = 0;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.AppExitInfoTracker: java.util.ArrayList mTmpInfoList> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.AppExitInfoTracker: java.util.ArrayList mTmpInfoList2> = $r3;

        $r4 = new com.android.server.am.AppExitInfoTracker$IsolatedUidRecords;

        specialinvoke $r4.<com.android.server.am.AppExitInfoTracker$IsolatedUidRecords: void <init>(com.android.server.am.AppExitInfoTracker)>(r0);

        r0.<com.android.server.am.AppExitInfoTracker: com.android.server.am.AppExitInfoTracker$IsolatedUidRecords mIsolatedUidRecords> = $r4;

        $r5 = new com.android.server.am.AppExitInfoTracker$AppExitInfoExternalSource;

        specialinvoke $r5.<com.android.server.am.AppExitInfoTracker$AppExitInfoExternalSource: void <init>(com.android.server.am.AppExitInfoTracker,java.lang.String,java.lang.Integer)>(r0, "zygote", null);

        r0.<com.android.server.am.AppExitInfoTracker: com.android.server.am.AppExitInfoTracker$AppExitInfoExternalSource mAppExitInfoSourceZygote> = $r5;

        $r6 = new com.android.server.am.AppExitInfoTracker$AppExitInfoExternalSource;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        specialinvoke $r6.<com.android.server.am.AppExitInfoTracker$AppExitInfoExternalSource: void <init>(com.android.server.am.AppExitInfoTracker,java.lang.String,java.lang.Integer)>(r0, "lmkd", $r7);

        r0.<com.android.server.am.AppExitInfoTracker: com.android.server.am.AppExitInfoTracker$AppExitInfoExternalSource mAppExitInfoSourceLmkd> = $r6;

        $r8 = new android.util.SparseArray;

        specialinvoke $r8.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.am.AppExitInfoTracker: android.util.SparseArray mActiveAppStateSummary> = $r8;

        $r9 = new android.util.SparseArray;

        specialinvoke $r9.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.am.AppExitInfoTracker: android.util.SparseArray mActiveAppTraces> = $r9;

        $r10 = new com.android.server.am.AppExitInfoTracker$AppTraceRetriever;

        specialinvoke $r10.<com.android.server.am.AppExitInfoTracker$AppTraceRetriever: void <init>(com.android.server.am.AppExitInfoTracker)>(r0);

        r0.<com.android.server.am.AppExitInfoTracker: com.android.server.am.AppExitInfoTracker$AppTraceRetriever mAppTraceRetriever> = $r10;

        $r11 = new com.android.internal.app.ProcessMap;

        specialinvoke $r11.<com.android.internal.app.ProcessMap: void <init>()>();

        r0.<com.android.server.am.AppExitInfoTracker: com.android.internal.app.ProcessMap mData> = $r11;

        $r12 = new android.util.Pools$SynchronizedPool;

        specialinvoke $r12.<android.util.Pools$SynchronizedPool: void <init>(int)>(8);

        r0.<com.android.server.am.AppExitInfoTracker: android.util.Pools$SynchronizedPool mRawRecordsPool> = $r12;

        return;
    }

    static java.lang.Object access$100(android.util.SparseArray, int, int)
    {
        android.util.SparseArray r0;
        int i0, i1;
        java.lang.Object $r1;

        r0 := @parameter0: android.util.SparseArray;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = staticinvoke <com.android.server.am.AppExitInfoTracker: java.lang.Object findAndRemoveFromSparse2dArray(android.util.SparseArray,int,int)>(r0, i0, i1);

        return $r1;
    }

    static java.lang.Object access$200(com.android.server.am.AppExitInfoTracker)
    {
        com.android.server.am.AppExitInfoTracker r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.server.am.AppExitInfoTracker;

        $r1 = r0.<com.android.server.am.AppExitInfoTracker: java.lang.Object mLock>;

        return $r1;
    }

    static com.android.server.am.ActivityManagerService access$300(com.android.server.am.AppExitInfoTracker)
    {
        com.android.server.am.AppExitInfoTracker r0;
        com.android.server.am.ActivityManagerService $r1;

        r0 := @parameter0: com.android.server.am.AppExitInfoTracker;

        $r1 = r0.<com.android.server.am.AppExitInfoTracker: com.android.server.am.ActivityManagerService mService>;

        return $r1;
    }

    static boolean access$400(long)
    {
        long l0;
        boolean $z0;

        l0 := @parameter0: long;

        $z0 = staticinvoke <com.android.server.am.AppExitInfoTracker: boolean isFresh(long)>(l0);

        return $z0;
    }

    static boolean access$500(com.android.server.am.AppExitInfoTracker, int, int, java.lang.Integer, java.lang.Integer)
    {
        com.android.server.am.AppExitInfoTracker r0;
        int i0, i1;
        java.lang.Integer r1, r2;
        boolean $z0;

        r0 := @parameter0: com.android.server.am.AppExitInfoTracker;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: java.lang.Integer;

        r2 := @parameter4: java.lang.Integer;

        $z0 = specialinvoke r0.<com.android.server.am.AppExitInfoTracker: boolean updateExitInfoIfNecessaryLocked(int,int,java.lang.Integer,java.lang.Integer)>(i0, i1, r1, r2);

        return $z0;
    }

    static android.app.ApplicationExitInfo access$600(com.android.server.am.AppExitInfoTracker, java.lang.String, int, int)
    {
        com.android.server.am.AppExitInfoTracker r0;
        java.lang.String r1;
        int i0, i1;
        android.app.ApplicationExitInfo $r2;

        r0 := @parameter0: com.android.server.am.AppExitInfoTracker;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $r2 = specialinvoke r0.<com.android.server.am.AppExitInfoTracker: android.app.ApplicationExitInfo getExitInfoLocked(java.lang.String,int,int)>(r1, i0, i1);

        return $r2;
    }

    private void addExitInfoInnerLocked(java.lang.String, int, android.app.ApplicationExitInfo)
    {
        com.android.server.am.AppExitInfoTracker r0;
        java.lang.String r1;
        int i0, $i1, $i2, $i3, $i5, $i6;
        android.app.ApplicationExitInfo r2;
        com.android.internal.app.ProcessMap $r3, $r6;
        java.lang.Object $r4;
        com.android.server.am.AppExitInfoTracker$AppExitInfoContainer $r5, r9, r10;
        boolean $z0;
        com.android.server.am.AppExitInfoTracker$IsolatedUidRecords $r8;
        java.lang.Integer r11;

        r0 := @this: com.android.server.am.AppExitInfoTracker;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: android.app.ApplicationExitInfo;

        $r3 = r0.<com.android.server.am.AppExitInfoTracker: com.android.internal.app.ProcessMap mData>;

        $r4 = virtualinvoke $r3.<com.android.internal.app.ProcessMap: java.lang.Object get(java.lang.String,int)>(r1, i0);

        r9 = (com.android.server.am.AppExitInfoTracker$AppExitInfoContainer) $r4;

        r10 = r9;

        if r9 != null goto label4;

        $r5 = new com.android.server.am.AppExitInfoTracker$AppExitInfoContainer;

        $i1 = r0.<com.android.server.am.AppExitInfoTracker: int mAppExitInfoHistoryListSize>;

        specialinvoke $r5.<com.android.server.am.AppExitInfoTracker$AppExitInfoContainer: void <init>(com.android.server.am.AppExitInfoTracker,int)>(r0, $i1);

        r10 = $r5;

        $i2 = virtualinvoke r2.<android.app.ApplicationExitInfo: int getRealUid()>();

        $z0 = staticinvoke <android.os.UserHandle: boolean isIsolated(int)>($i2);

        if $z0 == 0 goto label2;

        $r8 = r0.<com.android.server.am.AppExitInfoTracker: com.android.server.am.AppExitInfoTracker$IsolatedUidRecords mIsolatedUidRecords>;

        $i5 = virtualinvoke r2.<android.app.ApplicationExitInfo: int getRealUid()>();

        r11 = virtualinvoke $r8.<com.android.server.am.AppExitInfoTracker$IsolatedUidRecords: java.lang.Integer getUidByIsolatedUid(int)>($i5);

        if r11 == null goto label1;

        $i6 = virtualinvoke r11.<java.lang.Integer: int intValue()>();

        staticinvoke <com.android.server.am.AppExitInfoTracker$AppExitInfoContainer: int access$002(com.android.server.am.AppExitInfoTracker$AppExitInfoContainer,int)>($r5, $i6);

     label1:
        goto label3;

     label2:
        $i3 = virtualinvoke r2.<android.app.ApplicationExitInfo: int getRealUid()>();

        staticinvoke <com.android.server.am.AppExitInfoTracker$AppExitInfoContainer: int access$002(com.android.server.am.AppExitInfoTracker$AppExitInfoContainer,int)>($r5, $i3);

     label3:
        $r6 = r0.<com.android.server.am.AppExitInfoTracker: com.android.internal.app.ProcessMap mData>;

        virtualinvoke $r6.<com.android.internal.app.ProcessMap: java.lang.Object put(java.lang.String,int,java.lang.Object)>(r1, i0, $r5);

     label4:
        virtualinvoke r10.<com.android.server.am.AppExitInfoTracker$AppExitInfoContainer: void addExitInfoLocked(android.app.ApplicationExitInfo)>(r2);

        return;
    }

    private android.app.ApplicationExitInfo addExitInfoLocked(android.app.ApplicationExitInfo)
    {
        com.android.server.am.AppExitInfoTracker r0;
        android.app.ApplicationExitInfo r1, $r4;
        java.lang.String[] r3;
        int i0, $i1, i3;
        boolean $z0;
        java.lang.String $r5;

        r0 := @this: com.android.server.am.AppExitInfoTracker;

        r1 := @parameter0: android.app.ApplicationExitInfo;

        $z0 = r0.<com.android.server.am.AppExitInfoTracker: boolean mAppExitInfoLoaded>;

        if $z0 != 0 goto label1;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", "Skipping saving the exit info due to ongoing loading from storage");

        return null;

     label1:
        $r4 = new android.app.ApplicationExitInfo;

        specialinvoke $r4.<android.app.ApplicationExitInfo: void <init>(android.app.ApplicationExitInfo)>(r1);

        r3 = virtualinvoke r1.<android.app.ApplicationExitInfo: java.lang.String[] getPackageList()>();

        i0 = virtualinvoke r1.<android.app.ApplicationExitInfo: int getPackageUid()>();

        i3 = 0;

     label2:
        $i1 = lengthof r3;

        if i3 >= $i1 goto label3;

        $r5 = r3[i3];

        specialinvoke r0.<com.android.server.am.AppExitInfoTracker: void addExitInfoInnerLocked(java.lang.String,int,android.app.ApplicationExitInfo)>($r5, i0, $r4);

        i3 = i3 + 1;

        goto label2;

     label3:
        virtualinvoke r0.<com.android.server.am.AppExitInfoTracker: void schedulePersistProcessExitInfo(boolean)>(0);

        return $r4;
    }

    private static boolean copyToGzFile(java.io.File, java.io.File, long, long)
    {
        long l0, $l6, $l7, $l9, l10;
        java.io.BufferedInputStream r0;
        java.io.BufferedOutputStream r1;
        int i1, $i5, $i8;
        byte $b3, $b4;
        boolean $z1, z2;
        java.lang.Throwable $r2, $r3, $r4, $r5, $r6;
        java.io.File r7, r8;
        java.io.FileInputStream r9;
        java.util.zip.GZIPOutputStream r10;
        java.io.FileOutputStream r11;
        byte[] r12;

        r7 := @parameter0: java.io.File;

        r8 := @parameter1: java.io.File;

        l0 := @parameter2: long;

        l10 := @parameter3: long;

     label01:
        r0 = new java.io.BufferedInputStream;

        r9 = new java.io.FileInputStream;

        specialinvoke r9.<java.io.FileInputStream: void <init>(java.io.File)>(r7);

        specialinvoke r0.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>(r9);

     label02:
        r10 = new java.util.zip.GZIPOutputStream;

        r1 = new java.io.BufferedOutputStream;

        r11 = new java.io.FileOutputStream;

        specialinvoke r11.<java.io.FileOutputStream: void <init>(java.io.File)>(r8);

        specialinvoke r1.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>(r11);

        specialinvoke r10.<java.util.zip.GZIPOutputStream: void <init>(java.io.OutputStream)>(r1);

     label03:
        r12 = newarray (byte)[8192];

        virtualinvoke r0.<java.io.BufferedInputStream: long skip(long)>(l0);

     label04:
        $b3 = l10 cmp 0L;

        if $b3 <= 0 goto label09;

     label05:
        $i5 = lengthof r12;

        $l6 = (long) $i5;

        $l7 = staticinvoke <java.lang.Math: long min(long,long)>($l6, l10);

        $i8 = (int) $l7;

        i1 = virtualinvoke r0.<java.io.BufferedInputStream: int read(byte[],int,int)>(r12, 0, $i8);

     label06:
        if i1 >= 0 goto label07;

        goto label09;

     label07:
        virtualinvoke r10.<java.util.zip.GZIPOutputStream: void write(byte[],int,int)>(r12, 0, i1);

     label08:
        $l9 = (long) i1;

        l10 = l10 - $l9;

        goto label04;

     label09:
        virtualinvoke r10.<java.util.zip.GZIPOutputStream: void close()>();

     label10:
        virtualinvoke r0.<java.io.BufferedInputStream: void close()>();

     label11:
        z2 = 0;

        $b4 = l10 cmp 0L;

        if $b4 != 0 goto label12;

        z2 = 0;

        $z1 = virtualinvoke r8.<java.io.File: boolean exists()>();

        if $z1 == 0 goto label12;

        z2 = 1;

     label12:
        return z2;

     label13:
        $r2 := @caughtexception;

     label14:
        virtualinvoke r10.<java.util.zip.GZIPOutputStream: void close()>();

     label15:
        goto label18;

     label16:
        $r6 := @caughtexception;

     label17:
        virtualinvoke $r2.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r6);

     label18:
        throw $r2;

     label19:
        $r3 := @caughtexception;

     label20:
        virtualinvoke r0.<java.io.BufferedInputStream: void close()>();

     label21:
        goto label24;

     label22:
        $r4 := @caughtexception;

     label23:
        virtualinvoke $r3.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r4);

     label24:
        throw $r3;

     label25:
        $r5 := @caughtexception;

        return 0;

        catch java.io.IOException from label01 to label02 with label25;
        catch java.lang.Throwable from label02 to label03 with label19;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.lang.Throwable from label09 to label10 with label19;
        catch java.io.IOException from label10 to label11 with label25;
        catch java.lang.Throwable from label14 to label15 with label16;
        catch java.lang.Throwable from label17 to label18 with label19;
        catch java.lang.Throwable from label18 to label19 with label19;
        catch java.lang.Throwable from label20 to label21 with label22;
        catch java.io.IOException from label23 to label24 with label25;
        catch java.io.IOException from label24 to label25 with label25;
    }

    private void dumpHistoryProcessExitInfoLocked(java.io.PrintWriter, java.lang.String, java.lang.String, android.util.SparseArray, android.icu.text.SimpleDateFormat)
    {
        com.android.server.am.AppExitInfoTracker r0;
        java.io.PrintWriter r1;
        java.lang.String r2, $r9, $r14, $r19, r20;
        android.util.SparseArray r3;
        android.icu.text.SimpleDateFormat r4;
        int i0, $i1, i2;
        java.lang.StringBuilder $r5, $r10, $r16;
        java.lang.Object $r15;
        com.android.server.am.AppExitInfoTracker$AppExitInfoContainer r23;

        r0 := @this: com.android.server.am.AppExitInfoTracker;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: java.lang.String;

        r20 := @parameter2: java.lang.String;

        r3 := @parameter3: android.util.SparseArray;

        r4 := @parameter4: android.icu.text.SimpleDateFormat;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("package: ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r20);

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r9);

        i0 = virtualinvoke r3.<android.util.SparseArray: int size()>();

        i2 = 0;

     label1:
        if i2 >= i0 goto label2;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Historical Process Exit for userId=");

        $i1 = virtualinvoke r3.<android.util.SparseArray: int keyAt(int)>(i2);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r14 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r14);

        $r15 = virtualinvoke r3.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        r23 = (com.android.server.am.AppExitInfoTracker$AppExitInfoContainer) $r15;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r23.<com.android.server.am.AppExitInfoTracker$AppExitInfoContainer: void dumpLocked(java.io.PrintWriter,java.lang.String,android.icu.text.SimpleDateFormat)>(r1, $r19, r4);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    private static java.lang.Object findAndRemoveFromSparse2dArray(android.util.SparseArray, int, int)
    {
        android.util.SparseArray r0, r1;
        java.lang.Object r2, $r3;
        int $i0, i1, i2, i3, i4;

        r0 := @parameter0: android.util.SparseArray;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 = virtualinvoke r0.<android.util.SparseArray: int indexOfKey(int)>(i1);

        if i3 < 0 goto label3;

        $r3 = virtualinvoke r0.<android.util.SparseArray: java.lang.Object valueAt(int)>(i3);

        r1 = (android.util.SparseArray) $r3;

        if r1 != null goto label1;

        return null;

     label1:
        i4 = virtualinvoke r1.<android.util.SparseArray: int indexOfKey(int)>(i2);

        if i4 < 0 goto label3;

        r2 = virtualinvoke r1.<android.util.SparseArray: java.lang.Object valueAt(int)>(i4);

        virtualinvoke r1.<android.util.SparseArray: void removeAt(int)>(i4);

        $i0 = virtualinvoke r1.<android.util.SparseArray: int size()>();

        if $i0 != 0 goto label2;

        virtualinvoke r0.<android.util.SparseArray: void removeAt(int)>(i3);

     label2:
        return r2;

     label3:
        return null;
    }

    private void forEachPackageLocked(java.util.function.BiFunction)
    {
        com.android.server.am.AppExitInfoTracker r0;
        java.util.function.BiFunction r1;
        android.util.ArrayMap r2;
        android.util.SparseArray r3, $r8;
        com.android.internal.app.ProcessMap $r4;
        int $i0, $i1, i2, i3, i4;
        java.lang.Object $r5, $r7, $r9, $r11, $r13;
        java.lang.String $r6;
        java.lang.Integer $r10;
        com.android.server.am.AppExitInfoTracker$AppExitInfoContainer $r14;

        r0 := @this: com.android.server.am.AppExitInfoTracker;

        r1 := @parameter0: java.util.function.BiFunction;

        if r1 == null goto label7;

        $r4 = r0.<com.android.server.am.AppExitInfoTracker: com.android.internal.app.ProcessMap mData>;

        r2 = virtualinvoke $r4.<com.android.internal.app.ProcessMap: android.util.ArrayMap getMap()>();

        $i0 = virtualinvoke r2.<android.util.ArrayMap: int size()>();

        i2 = $i0 - 1;

     label1:
        if i2 < 0 goto label7;

        $r5 = virtualinvoke r2.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i2);

        $r6 = (java.lang.String) $r5;

        $r7 = virtualinvoke r2.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i2);

        $r8 = (android.util.SparseArray) $r7;

        $r9 = interfaceinvoke r1.<java.util.function.BiFunction: java.lang.Object apply(java.lang.Object,java.lang.Object)>($r6, $r8);

        $r10 = (java.lang.Integer) $r9;

        i3 = virtualinvoke $r10.<java.lang.Integer: int intValue()>();

        if i3 == 1 goto label3;

        if i3 == 2 goto label2;

        goto label6;

     label2:
        i2 = 0;

        goto label6;

     label3:
        $r11 = virtualinvoke r2.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i2);

        r3 = (android.util.SparseArray) $r11;

        $i1 = virtualinvoke r3.<android.util.SparseArray: int size()>();

        i4 = $i1 - 1;

     label4:
        if i4 < 0 goto label5;

        $r13 = virtualinvoke r3.<android.util.SparseArray: java.lang.Object valueAt(int)>(i4);

        $r14 = (com.android.server.am.AppExitInfoTracker$AppExitInfoContainer) $r13;

        virtualinvoke $r14.<com.android.server.am.AppExitInfoTracker$AppExitInfoContainer: void destroyLocked()>();

        i4 = i4 + -1;

        goto label4;

     label5:
        virtualinvoke r2.<android.util.ArrayMap: java.lang.Object removeAt(int)>(i2);

     label6:
        i2 = i2 + -1;

        goto label1;

     label7:
        return;
    }

    private static void forEachSparse2dArray(android.util.SparseArray, java.util.function.Consumer)
    {
        android.util.SparseArray r0, r2;
        java.util.function.Consumer r1;
        int $i0, $i1, i2, i3;
        java.lang.Object $r3, $r4;

        r0 := @parameter0: android.util.SparseArray;

        r1 := @parameter1: java.util.function.Consumer;

        if r1 == null goto label5;

        $i0 = virtualinvoke r0.<android.util.SparseArray: int size()>();

        i2 = $i0 - 1;

     label1:
        if i2 < 0 goto label5;

        $r3 = virtualinvoke r0.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        r2 = (android.util.SparseArray) $r3;

        if r2 != null goto label2;

        goto label4;

     label2:
        $i1 = virtualinvoke r2.<android.util.SparseArray: int size()>();

        i3 = $i1 - 1;

     label3:
        if i3 < 0 goto label4;

        $r4 = virtualinvoke r2.<android.util.SparseArray: java.lang.Object valueAt(int)>(i3);

        interfaceinvoke r1.<java.util.function.Consumer: void accept(java.lang.Object)>($r4);

        i3 = i3 + -1;

        goto label3;

     label4:
        i2 = i2 + -1;

        goto label1;

     label5:
        return;
    }

    private android.app.ApplicationExitInfo getExitInfoLocked(java.lang.String, int, int)
    {
        com.android.server.am.AppExitInfoTracker r0;
        int i0, i1, $i2;
        java.util.ArrayList r1;
        java.lang.Object $r2;
        java.lang.String r3;
        android.app.ApplicationExitInfo r4;

        r0 := @this: com.android.server.am.AppExitInfoTracker;

        r3 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 = r0.<com.android.server.am.AppExitInfoTracker: java.util.ArrayList mTmpInfoList>;

        virtualinvoke r1.<java.util.ArrayList: void clear()>();

        virtualinvoke r0.<com.android.server.am.AppExitInfoTracker: void getExitInfo(java.lang.String,int,int,int,java.util.ArrayList)>(r3, i0, i1, 1, r1);

        $i2 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if $i2 <= 0 goto label1;

        $r2 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(0);

        r4 = (android.app.ApplicationExitInfo) $r2;

        goto label2;

     label1:
        r4 = null;

     label2:
        virtualinvoke r1.<java.util.ArrayList: void clear()>();

        return r4;
    }

    private static boolean isFresh(long)
    {
        long l0, $l1, $l2;
        byte $b3;
        boolean z0;

        l0 := @parameter0: long;

        $l1 = 300000L + l0;

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $b3 = $l1 cmp $l2;

        if $b3 < 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    static int lambda$getExitInfo$4(android.app.ApplicationExitInfo, android.app.ApplicationExitInfo)
    {
        android.app.ApplicationExitInfo r0, r1;
        long $l0, $l1, $l2;
        int $i3;

        r0 := @parameter0: android.app.ApplicationExitInfo;

        r1 := @parameter1: android.app.ApplicationExitInfo;

        $l0 = virtualinvoke r1.<android.app.ApplicationExitInfo: long getTimestamp()>();

        $l1 = virtualinvoke r0.<android.app.ApplicationExitInfo: long getTimestamp()>();

        $l2 = $l0 - $l1;

        $i3 = (int) $l2;

        return $i3;
    }

    static void lambda$handleLogAnrTrace$11(java.io.File)
    {
        java.io.File r0;

        r0 := @parameter0: java.io.File;

        virtualinvoke r0.<java.io.File: boolean delete()>();

        return;
    }

    static java.lang.Integer lambda$persistProcessExitInfo$5(android.util.proto.ProtoOutputStream, java.lang.String, android.util.SparseArray)
    {
        android.util.proto.ProtoOutputStream r0;
        java.lang.String r1;
        android.util.SparseArray r2;
        long l0;
        int i1, i2;
        java.lang.Integer $r3;
        java.lang.Object $r4;
        com.android.server.am.AppExitInfoTracker$AppExitInfoContainer $r5;

        r0 := @parameter0: android.util.proto.ProtoOutputStream;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.util.SparseArray;

        l0 = virtualinvoke r0.<android.util.proto.ProtoOutputStream: long start(long)>(2246267895810L);

        virtualinvoke r0.<android.util.proto.ProtoOutputStream: void write(long,java.lang.String)>(1138166333441L, r1);

        i1 = virtualinvoke r2.<android.util.SparseArray: int size()>();

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        $r4 = virtualinvoke r2.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        $r5 = (com.android.server.am.AppExitInfoTracker$AppExitInfoContainer) $r4;

        virtualinvoke $r5.<com.android.server.am.AppExitInfoTracker$AppExitInfoContainer: void writeToProto(android.util.proto.ProtoOutputStream,long)>(r0, 2246267895810L);

        i2 = i2 + 1;

        goto label1;

     label2:
        virtualinvoke r0.<android.util.proto.ProtoOutputStream: void end(long)>(l0);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        return $r3;
    }

    static boolean lambda$pruneAnrTracesIfNecessaryLocked$12(android.util.ArraySet, java.io.File)
    {
        android.util.ArraySet r0;
        boolean $z0, $z2, z3;
        java.io.File r1;
        java.lang.String r2;

        r0 := @parameter0: android.util.ArraySet;

        r1 := @parameter1: java.io.File;

        r2 = virtualinvoke r1.<java.io.File: java.lang.String getName()>();

        $z0 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("anr_");

        if $z0 == 0 goto label1;

        $z2 = virtualinvoke r2.<java.lang.String: boolean endsWith(java.lang.String)>(".gz");

        if $z2 == 0 goto label1;

        z3 = 1;

        goto label2;

     label1:
        z3 = 0;

     label2:
        if z3 == 0 goto label3;

        virtualinvoke r0.<android.util.ArraySet: boolean add(java.lang.Object)>(r2);

     label3:
        return z3;
    }

    static java.lang.Integer lambda$pruneAnrTracesIfNecessaryLocked$13(android.util.ArraySet, java.lang.Integer, android.app.ApplicationExitInfo)
    {
        android.util.ArraySet r0;
        android.app.ApplicationExitInfo r1;
        java.lang.Integer $r2, r4;
        java.lang.String $r3;
        java.io.File r5;

        r0 := @parameter0: android.util.ArraySet;

        r4 := @parameter1: java.lang.Integer;

        r1 := @parameter2: android.app.ApplicationExitInfo;

        r5 = virtualinvoke r1.<android.app.ApplicationExitInfo: java.io.File getTraceFile()>();

        if r5 == null goto label1;

        $r3 = virtualinvoke r5.<java.io.File: java.lang.String getName()>();

        virtualinvoke r0.<android.util.ArraySet: boolean remove(java.lang.Object)>($r3);

     label1:
        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        return $r2;
    }

    static java.lang.Integer lambda$pruneAnrTracesIfNecessaryLocked$14(android.util.ArraySet, java.lang.String, android.util.SparseArray)
    {
        android.util.ArraySet r0;
        java.lang.String r1;
        android.util.SparseArray r2;
        int $i0, i1;
        java.lang.Integer $r3;
        java.lang.Object $r4;
        com.android.server.am._$$Lambda$AppExitInfoTracker$Q3GtkIfPxcC3Upjekif3W0ekKvY $r5;
        com.android.server.am.AppExitInfoTracker$AppExitInfoContainer $r6;

        r0 := @parameter0: android.util.ArraySet;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.util.SparseArray;

        $i0 = virtualinvoke r2.<android.util.SparseArray: int size()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label2;

        $r4 = virtualinvoke r2.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        $r6 = (com.android.server.am.AppExitInfoTracker$AppExitInfoContainer) $r4;

        $r5 = new com.android.server.am._$$Lambda$AppExitInfoTracker$Q3GtkIfPxcC3Upjekif3W0ekKvY;

        specialinvoke $r5.<com.android.server.am._$$Lambda$AppExitInfoTracker$Q3GtkIfPxcC3Upjekif3W0ekKvY: void <init>(android.util.ArraySet)>(r0);

        virtualinvoke $r6.<com.android.server.am.AppExitInfoTracker$AppExitInfoContainer: void forEachRecordLocked(java.util.function.BiFunction)>($r5);

        i1 = i1 + -1;

        goto label1;

     label2:
        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        return $r3;
    }

    static void lambda$pruneAnrTracesIfNecessaryLocked$15(android.util.ArraySet, java.io.File)
    {
        android.util.ArraySet r0;
        java.io.File r1;
        java.lang.String $r2;

        r0 := @parameter0: android.util.ArraySet;

        r1 := @parameter1: java.io.File;

        $r2 = virtualinvoke r1.<java.io.File: java.lang.String getName()>();

        virtualinvoke r0.<android.util.ArraySet: boolean remove(java.lang.Object)>($r2);

        return;
    }

    static java.lang.Integer lambda$removeByUserIdLocked$10(int, java.lang.String, android.util.SparseArray)
    {
        java.lang.String r0;
        android.util.SparseArray r1;
        int $i1, $i2, $i3, i4, i5, i6;
        java.lang.Integer $r2;
        java.lang.Object $r3;
        com.android.server.am.AppExitInfoTracker$AppExitInfoContainer $r4;
        byte b7;

        i4 := @parameter0: int;

        r0 := @parameter1: java.lang.String;

        r1 := @parameter2: android.util.SparseArray;

        i5 = virtualinvoke r1.<android.util.SparseArray: int size()>();

        i6 = i5 + -1;

     label1:
        if i6 < 0 goto label3;

        $i2 = virtualinvoke r1.<android.util.SparseArray: int keyAt(int)>(i6);

        $i3 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i2);

        if $i3 != i4 goto label2;

        $r3 = virtualinvoke r1.<android.util.SparseArray: java.lang.Object valueAt(int)>(i6);

        $r4 = (com.android.server.am.AppExitInfoTracker$AppExitInfoContainer) $r3;

        virtualinvoke $r4.<com.android.server.am.AppExitInfoTracker$AppExitInfoContainer: void destroyLocked()>();

        virtualinvoke r1.<android.util.SparseArray: void removeAt(int)>(i6);

        goto label3;

     label2:
        i6 = i6 + -1;

        goto label1;

     label3:
        $i1 = virtualinvoke r1.<android.util.SparseArray: int size()>();

        if $i1 != 0 goto label4;

        b7 = 1;

        goto label5;

     label4:
        b7 = 0;

     label5:
        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b7);

        return $r2;
    }

    static boolean lambda$removeByUserIdLocked$7(int, java.lang.Integer)
    {
        int i0, $i1, $i2;
        java.lang.Integer r0;
        boolean z0;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.Integer;

        $i1 = virtualinvoke r0.<java.lang.Integer: int intValue()>();

        $i2 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i1);

        if $i2 != i0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    static boolean lambda$removeByUserIdLocked$8(int, java.lang.Integer)
    {
        int i0, $i1, $i2;
        java.lang.Integer r0;
        boolean z0;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.Integer;

        $i1 = virtualinvoke r0.<java.lang.Integer: int intValue()>();

        $i2 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i1);

        if $i2 != i0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    static void lambda$removeByUserIdLocked$9(java.io.File)
    {
        java.io.File r0;

        r0 := @parameter0: java.io.File;

        virtualinvoke r0.<java.io.File: boolean delete()>();

        return;
    }

    static void lambda$setLmkdKillListener$1(com.android.server.am.AppExitInfoTracker$LmkdKillListener, java.lang.Integer, java.lang.Integer)
    {
        com.android.server.am.AppExitInfoTracker$LmkdKillListener r0;
        java.lang.Integer r1, r2;
        int $i0, $i1;

        r0 := @parameter0: com.android.server.am.AppExitInfoTracker$LmkdKillListener;

        r1 := @parameter1: java.lang.Integer;

        r2 := @parameter2: java.lang.Integer;

        $i0 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        $i1 = virtualinvoke r2.<java.lang.Integer: int intValue()>();

        interfaceinvoke r0.<com.android.server.am.AppExitInfoTracker$LmkdKillListener: void onLmkdKillOccurred(int,int)>($i0, $i1);

        return;
    }

    private void loadPackagesFromProto(android.util.proto.ProtoInputStream, long) throws java.io.IOException, android.util.proto.WireTypeMismatchException
    {
        com.android.server.am.AppExitInfoTracker r0;
        java.lang.Object r2;
        com.android.server.am.AppExitInfoTracker$AppExitInfoContainer $r3;
        int $i0, i3, i4;
        com.android.internal.app.ProcessMap $r4;
        java.lang.Throwable $r6;
        android.util.proto.ProtoInputStream r7;
        long l1, l2;
        java.lang.String r8;

        r0 := @this: com.android.server.am.AppExitInfoTracker;

        r7 := @parameter0: android.util.proto.ProtoInputStream;

        l1 := @parameter1: long;

        l2 = virtualinvoke r7.<android.util.proto.ProtoInputStream: long start(long)>(l1);

        r8 = "";

        i3 = virtualinvoke r7.<android.util.proto.ProtoInputStream: int nextField()>();

     label01:
        if i3 == -1 goto label10;

        if i3 == 1 goto label08;

        if i3 == 2 goto label02;

        goto label09;

     label02:
        $r3 = new com.android.server.am.AppExitInfoTracker$AppExitInfoContainer;

        $i0 = r0.<com.android.server.am.AppExitInfoTracker: int mAppExitInfoHistoryListSize>;

        specialinvoke $r3.<com.android.server.am.AppExitInfoTracker$AppExitInfoContainer: void <init>(com.android.server.am.AppExitInfoTracker,int)>(r0, $i0);

        i4 = virtualinvoke $r3.<com.android.server.am.AppExitInfoTracker$AppExitInfoContainer: int readFromProto(android.util.proto.ProtoInputStream,long)>(r7, 2246267895810L);

        r2 = r0.<com.android.server.am.AppExitInfoTracker: java.lang.Object mLock>;

        entermonitor r2;

     label03:
        $r4 = r0.<com.android.server.am.AppExitInfoTracker: com.android.internal.app.ProcessMap mData>;

        virtualinvoke $r4.<com.android.internal.app.ProcessMap: java.lang.Object put(java.lang.String,int,java.lang.Object)>(r8, i4, $r3);

        exitmonitor r2;

     label04:
        goto label09;

     label05:
        $r6 := @caughtexception;

     label06:
        exitmonitor r2;

     label07:
        throw $r6;

     label08:
        r8 = virtualinvoke r7.<android.util.proto.ProtoInputStream: java.lang.String readString(long)>(1138166333441L);

     label09:
        i3 = virtualinvoke r7.<android.util.proto.ProtoInputStream: int nextField()>();

        goto label01;

     label10:
        virtualinvoke r7.<android.util.proto.ProtoInputStream: void end(long)>(l2);

        return;

        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label06 to label07 with label05;
    }

    private void pruneAnrTracesIfNecessaryLocked()
    {
        com.android.server.am.AppExitInfoTracker r0;
        android.util.ArraySet $r2;
        com.android.server.am._$$Lambda$AppExitInfoTracker$JduFGZz0nH2A0BHWR2JObNY_HIA $r3;
        java.io.File $r4, $r9, $r10;
        java.io.File[] $r5;
        boolean $z0;
        com.android.server.am._$$Lambda$AppExitInfoTracker$pGj1RV5EdCXTSGnbNiqDUSduYTk $r6;
        com.android.server.am._$$Lambda$AppExitInfoTracker$Du2pQ0u67kwpa3kgguj5fWqQfXM $r7;
        android.util.SparseArray $r8;
        int $i0, i1;
        java.lang.Object $r11;
        java.lang.String $r12;

        r0 := @this: com.android.server.am.AppExitInfoTracker;

        $r2 = new android.util.ArraySet;

        specialinvoke $r2.<android.util.ArraySet: void <init>()>();

        $r4 = r0.<com.android.server.am.AppExitInfoTracker: java.io.File mProcExitStoreDir>;

        $r3 = new com.android.server.am._$$Lambda$AppExitInfoTracker$JduFGZz0nH2A0BHWR2JObNY_HIA;

        specialinvoke $r3.<com.android.server.am._$$Lambda$AppExitInfoTracker$JduFGZz0nH2A0BHWR2JObNY_HIA: void <init>(android.util.ArraySet)>($r2);

        $r5 = virtualinvoke $r4.<java.io.File: java.io.File[] listFiles(java.io.FileFilter)>($r3);

        $z0 = staticinvoke <com.android.internal.util.ArrayUtils: boolean isEmpty(java.lang.Object[])>($r5);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r6 = new com.android.server.am._$$Lambda$AppExitInfoTracker$pGj1RV5EdCXTSGnbNiqDUSduYTk;

        specialinvoke $r6.<com.android.server.am._$$Lambda$AppExitInfoTracker$pGj1RV5EdCXTSGnbNiqDUSduYTk: void <init>(android.util.ArraySet)>($r2);

        specialinvoke r0.<com.android.server.am.AppExitInfoTracker: void forEachPackageLocked(java.util.function.BiFunction)>($r6);

        $r8 = r0.<com.android.server.am.AppExitInfoTracker: android.util.SparseArray mActiveAppTraces>;

        $r7 = new com.android.server.am._$$Lambda$AppExitInfoTracker$Du2pQ0u67kwpa3kgguj5fWqQfXM;

        specialinvoke $r7.<com.android.server.am._$$Lambda$AppExitInfoTracker$Du2pQ0u67kwpa3kgguj5fWqQfXM: void <init>(android.util.ArraySet)>($r2);

        staticinvoke <com.android.server.am.AppExitInfoTracker: void forEachSparse2dArray(android.util.SparseArray,java.util.function.Consumer)>($r8, $r7);

        $i0 = virtualinvoke $r2.<android.util.ArraySet: int size()>();

        i1 = $i0 - 1;

     label2:
        if i1 < 0 goto label3;

        $r9 = new java.io.File;

        $r10 = r0.<com.android.server.am.AppExitInfoTracker: java.io.File mProcExitStoreDir>;

        $r11 = virtualinvoke $r2.<android.util.ArraySet: java.lang.Object valueAt(int)>(i1);

        $r12 = (java.lang.String) $r11;

        specialinvoke $r9.<java.io.File: void <init>(java.io.File,java.lang.String)>($r10, $r12);

        virtualinvoke $r9.<java.io.File: boolean delete()>();

        i1 = i1 + -1;

        goto label2;

     label3:
        return;
    }

    private static void putToSparse2dArray(android.util.SparseArray, int, int, java.lang.Object, java.util.function.Supplier, java.util.function.Consumer)
    {
        int i0, i1, i2, i3;
        java.lang.Object r0, $r2, $r3, $r4;
        java.util.function.Consumer r1;
        android.util.SparseArray r5, r7, r8;
        java.util.function.Supplier r6;

        r5 := @parameter0: android.util.SparseArray;

        i2 := @parameter1: int;

        i0 := @parameter2: int;

        r0 := @parameter3: java.lang.Object;

        r6 := @parameter4: java.util.function.Supplier;

        r1 := @parameter5: java.util.function.Consumer;

        i1 = virtualinvoke r5.<android.util.SparseArray: int indexOfKey(int)>(i2);

        if i1 >= 0 goto label1;

        $r4 = interfaceinvoke r6.<java.util.function.Supplier: java.lang.Object get()>();

        r7 = (android.util.SparseArray) $r4;

        virtualinvoke r5.<android.util.SparseArray: void put(int,java.lang.Object)>(i2, r7);

        r8 = r7;

        goto label2;

     label1:
        $r2 = virtualinvoke r5.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        r8 = (android.util.SparseArray) $r2;

     label2:
        i3 = virtualinvoke r8.<android.util.SparseArray: int indexOfKey(int)>(i0);

        if i3 < 0 goto label4;

        if r1 == null goto label3;

        $r3 = virtualinvoke r8.<android.util.SparseArray: java.lang.Object valueAt(int)>(i3);

        interfaceinvoke r1.<java.util.function.Consumer: void accept(java.lang.Object)>($r3);

     label3:
        virtualinvoke r8.<android.util.SparseArray: void setValueAt(int,java.lang.Object)>(i3, r0);

        goto label5;

     label4:
        virtualinvoke r8.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r0);

     label5:
        return;
    }

    private void registerForPackageRemoval()
    {
        com.android.server.am.AppExitInfoTracker r0;
        android.content.IntentFilter $r2;
        com.android.server.am.ActivityManagerService $r3;
        com.android.server.am.AppExitInfoTracker$2 $r4;
        android.content.Context $r5;
        com.android.server.am.AppExitInfoTracker$KillHandler $r6;

        r0 := @this: com.android.server.am.AppExitInfoTracker;

        $r2 = new android.content.IntentFilter;

        specialinvoke $r2.<android.content.IntentFilter: void <init>()>();

        virtualinvoke $r2.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.PACKAGE_REMOVED");

        virtualinvoke $r2.<android.content.IntentFilter: void addDataScheme(java.lang.String)>("package");

        $r3 = r0.<com.android.server.am.AppExitInfoTracker: com.android.server.am.ActivityManagerService mService>;

        $r5 = $r3.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r4 = new com.android.server.am.AppExitInfoTracker$2;

        specialinvoke $r4.<com.android.server.am.AppExitInfoTracker$2: void <init>(com.android.server.am.AppExitInfoTracker)>(r0);

        $r6 = r0.<com.android.server.am.AppExitInfoTracker: com.android.server.am.AppExitInfoTracker$KillHandler mKillHandler>;

        virtualinvoke $r5.<android.content.Context: android.content.Intent registerReceiverForAllUsers(android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler)>($r4, $r2, null, $r6);

        return;
    }

    private void registerForUserRemoval()
    {
        com.android.server.am.AppExitInfoTracker r0;
        android.content.IntentFilter $r2;
        com.android.server.am.ActivityManagerService $r3;
        com.android.server.am.AppExitInfoTracker$1 $r4;
        android.content.Context $r5;
        com.android.server.am.AppExitInfoTracker$KillHandler $r6;

        r0 := @this: com.android.server.am.AppExitInfoTracker;

        $r2 = new android.content.IntentFilter;

        specialinvoke $r2.<android.content.IntentFilter: void <init>()>();

        virtualinvoke $r2.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.USER_REMOVED");

        $r3 = r0.<com.android.server.am.AppExitInfoTracker: com.android.server.am.ActivityManagerService mService>;

        $r5 = $r3.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r4 = new com.android.server.am.AppExitInfoTracker$1;

        specialinvoke $r4.<com.android.server.am.AppExitInfoTracker$1: void <init>(com.android.server.am.AppExitInfoTracker)>(r0);

        $r6 = r0.<com.android.server.am.AppExitInfoTracker: com.android.server.am.AppExitInfoTracker$KillHandler mKillHandler>;

        virtualinvoke $r5.<android.content.Context: android.content.Intent registerReceiverForAllUsers(android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler)>($r4, $r2, null, $r6);

        return;
    }

    private void removeByUserIdLocked(int)
    {
        com.android.server.am.AppExitInfoTracker r0;
        int i0;
        android.util.SparseArray $r2, $r4, $r9, $r10;
        com.android.server.am.'-$$Lambda$AppExitInfoTracker$Y37hrsxr0wudP-NPU4f6GLWVNsM' $r5;
        com.android.internal.app.ProcessMap $r7;
        android.util.ArrayMap $r8;
        com.android.server.am._$$Lambda$AppExitInfoTracker$vzdjnEjW_9gbfxjIkvPxuQNiFW0 r11;
        com.android.server.am._$$Lambda$AppExitInfoTracker$XP9Dt_b6q1v_FLyDNEaaEtbN2tI r12;
        com.android.server.am._$$Lambda$AppExitInfoTracker$ZY9TAD2R71ar3yQbfwDIrtpb_VY r13;
        java.util.function.Consumer r14;

        r0 := @this: com.android.server.am.AppExitInfoTracker;

        i0 := @parameter0: int;

        if i0 != -1 goto label1;

        $r7 = r0.<com.android.server.am.AppExitInfoTracker: com.android.internal.app.ProcessMap mData>;

        $r8 = virtualinvoke $r7.<com.android.internal.app.ProcessMap: android.util.ArrayMap getMap()>();

        virtualinvoke $r8.<android.util.ArrayMap: void clear()>();

        $r9 = r0.<com.android.server.am.AppExitInfoTracker: android.util.SparseArray mActiveAppStateSummary>;

        virtualinvoke $r9.<android.util.SparseArray: void clear()>();

        $r10 = r0.<com.android.server.am.AppExitInfoTracker: android.util.SparseArray mActiveAppTraces>;

        virtualinvoke $r10.<android.util.SparseArray: void clear()>();

        specialinvoke r0.<com.android.server.am.AppExitInfoTracker: void pruneAnrTracesIfNecessaryLocked()>();

        return;

     label1:
        $r2 = r0.<com.android.server.am.AppExitInfoTracker: android.util.SparseArray mActiveAppStateSummary>;

        r11 = new com.android.server.am._$$Lambda$AppExitInfoTracker$vzdjnEjW_9gbfxjIkvPxuQNiFW0;

        specialinvoke r11.<com.android.server.am._$$Lambda$AppExitInfoTracker$vzdjnEjW_9gbfxjIkvPxuQNiFW0: void <init>(int)>(i0);

        staticinvoke <com.android.server.am.AppExitInfoTracker: void removeFromSparse2dArray(android.util.SparseArray,java.util.function.Predicate,java.util.function.Predicate,java.util.function.Consumer)>($r2, r11, null, null);

        $r4 = r0.<com.android.server.am.AppExitInfoTracker: android.util.SparseArray mActiveAppTraces>;

        r12 = new com.android.server.am._$$Lambda$AppExitInfoTracker$XP9Dt_b6q1v_FLyDNEaaEtbN2tI;

        specialinvoke r12.<com.android.server.am._$$Lambda$AppExitInfoTracker$XP9Dt_b6q1v_FLyDNEaaEtbN2tI: void <init>(int)>(i0);

        $r5 = <com.android.server.am._$$Lambda$AppExitInfoTracker$Y37hrsxr0wudP_NPU4f6GLWVNsM: com.android.server.am.'-$$Lambda$AppExitInfoTracker$Y37hrsxr0wudP-NPU4f6GLWVNsM' INSTANCE>;

        r14 = (java.util.function.Consumer) $r5;

        staticinvoke <com.android.server.am.AppExitInfoTracker: void removeFromSparse2dArray(android.util.SparseArray,java.util.function.Predicate,java.util.function.Predicate,java.util.function.Consumer)>($r4, r12, null, r14);

        r13 = new com.android.server.am._$$Lambda$AppExitInfoTracker$ZY9TAD2R71ar3yQbfwDIrtpb_VY;

        specialinvoke r13.<com.android.server.am._$$Lambda$AppExitInfoTracker$ZY9TAD2R71ar3yQbfwDIrtpb_VY: void <init>(int)>(i0);

        specialinvoke r0.<com.android.server.am.AppExitInfoTracker: void forEachPackageLocked(java.util.function.BiFunction)>(r13);

        return;
    }

    private static void removeFromSparse2dArray(android.util.SparseArray, java.util.function.Predicate, java.util.function.Predicate, java.util.function.Consumer)
    {
        android.util.SparseArray r0, r4;
        java.util.function.Predicate r1, r2;
        java.util.function.Consumer r3;
        int $i0, $i1, $i2, $i3, $i4, i5, i6;
        java.lang.Object $r5, $r6;
        java.lang.Integer $r7, $r8;
        boolean $z0, $z1;

        r0 := @parameter0: android.util.SparseArray;

        r1 := @parameter1: java.util.function.Predicate;

        r2 := @parameter2: java.util.function.Predicate;

        r3 := @parameter3: java.util.function.Consumer;

        $i0 = virtualinvoke r0.<android.util.SparseArray: int size()>();

        i5 = $i0 - 1;

     label01:
        if i5 < 0 goto label10;

        if r1 == null goto label02;

        $i4 = virtualinvoke r0.<android.util.SparseArray: int keyAt(int)>(i5);

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $z1 = interfaceinvoke r1.<java.util.function.Predicate: boolean test(java.lang.Object)>($r8);

        if $z1 == 0 goto label09;

     label02:
        $r5 = virtualinvoke r0.<android.util.SparseArray: java.lang.Object valueAt(int)>(i5);

        r4 = (android.util.SparseArray) $r5;

        if r4 != null goto label03;

        goto label09;

     label03:
        $i1 = virtualinvoke r4.<android.util.SparseArray: int size()>();

        i6 = $i1 - 1;

     label04:
        if i6 < 0 goto label08;

        if r2 == null goto label05;

        $i3 = virtualinvoke r4.<android.util.SparseArray: int keyAt(int)>(i6);

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $z0 = interfaceinvoke r2.<java.util.function.Predicate: boolean test(java.lang.Object)>($r7);

        if $z0 == 0 goto label07;

     label05:
        if r3 == null goto label06;

        $r6 = virtualinvoke r4.<android.util.SparseArray: java.lang.Object valueAt(int)>(i6);

        interfaceinvoke r3.<java.util.function.Consumer: void accept(java.lang.Object)>($r6);

     label06:
        virtualinvoke r4.<android.util.SparseArray: void removeAt(int)>(i6);

     label07:
        i6 = i6 + -1;

        goto label04;

     label08:
        $i2 = virtualinvoke r4.<android.util.SparseArray: int size()>();

        if $i2 != 0 goto label09;

        virtualinvoke r0.<android.util.SparseArray: void removeAt(int)>(i5);

     label09:
        i5 = i5 + -1;

        goto label01;

     label10:
        return;
    }

    private void removePackageLocked(java.lang.String, int, boolean, int)
    {
        com.android.server.am.AppExitInfoTracker r0;
        java.lang.String r1;
        boolean z0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9, i10, i11;
        android.util.SparseArray r2, $r11, $r12, $r13, $r15, r18;
        java.lang.Object $r4, $r9, $r14, $r16, $r21;
        com.android.server.am.AppExitInfoTracker$AppExitInfoContainer $r5, $r10;
        com.android.internal.app.ProcessMap $r6, $r19;
        android.util.ArrayMap $r7, r20;
        java.io.File $r17;

        r0 := @this: com.android.server.am.AppExitInfoTracker;

        r1 := @parameter0: java.lang.String;

        i8 := @parameter1: int;

        z0 := @parameter2: boolean;

        i0 := @parameter3: int;

        if z0 == 0 goto label03;

        $r11 = r0.<com.android.server.am.AppExitInfoTracker: android.util.SparseArray mActiveAppStateSummary>;

        virtualinvoke $r11.<android.util.SparseArray: void remove(int)>(i8);

        $r12 = r0.<com.android.server.am.AppExitInfoTracker: android.util.SparseArray mActiveAppTraces>;

        i1 = virtualinvoke $r12.<android.util.SparseArray: int indexOfKey(int)>(i8);

        if i1 < 0 goto label03;

        $r13 = r0.<com.android.server.am.AppExitInfoTracker: android.util.SparseArray mActiveAppTraces>;

        $r14 = virtualinvoke $r13.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        r18 = (android.util.SparseArray) $r14;

        $i7 = virtualinvoke r18.<android.util.SparseArray: int size()>();

        i9 = $i7 - 1;

     label01:
        if i9 < 0 goto label02;

        $r16 = virtualinvoke r18.<android.util.SparseArray: java.lang.Object valueAt(int)>(i9);

        $r17 = (java.io.File) $r16;

        virtualinvoke $r17.<java.io.File: boolean delete()>();

        i9 = i9 + -1;

        goto label01;

     label02:
        $r15 = r0.<com.android.server.am.AppExitInfoTracker: android.util.SparseArray mActiveAppTraces>;

        virtualinvoke $r15.<android.util.SparseArray: void removeAt(int)>(i1);

     label03:
        $r19 = r0.<com.android.server.am.AppExitInfoTracker: com.android.internal.app.ProcessMap mData>;

        r20 = virtualinvoke $r19.<com.android.internal.app.ProcessMap: android.util.ArrayMap getMap()>();

        $r21 = virtualinvoke r20.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (android.util.SparseArray) $r21;

        if r2 != null goto label04;

        return;

     label04:
        if i0 != -1 goto label07;

        $i6 = virtualinvoke r2.<android.util.SparseArray: int size()>();

        i10 = $i6 - 1;

     label05:
        if i10 < 0 goto label06;

        $r9 = virtualinvoke r2.<android.util.SparseArray: java.lang.Object valueAt(int)>(i10);

        $r10 = (com.android.server.am.AppExitInfoTracker$AppExitInfoContainer) $r9;

        virtualinvoke $r10.<com.android.server.am.AppExitInfoTracker$AppExitInfoContainer: void destroyLocked()>();

        i10 = i10 + -1;

        goto label05;

     label06:
        $r6 = r0.<com.android.server.am.AppExitInfoTracker: com.android.internal.app.ProcessMap mData>;

        $r7 = virtualinvoke $r6.<com.android.internal.app.ProcessMap: android.util.ArrayMap getMap()>();

        virtualinvoke $r7.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r1);

        goto label11;

     label07:
        $i2 = virtualinvoke r2.<android.util.SparseArray: int size()>();

        i11 = $i2 - 1;

     label08:
        if i11 < 0 goto label10;

        $i4 = virtualinvoke r2.<android.util.SparseArray: int keyAt(int)>(i11);

        $i5 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i4);

        if $i5 != i0 goto label09;

        $r4 = virtualinvoke r2.<android.util.SparseArray: java.lang.Object valueAt(int)>(i11);

        $r5 = (com.android.server.am.AppExitInfoTracker$AppExitInfoContainer) $r4;

        virtualinvoke $r5.<com.android.server.am.AppExitInfoTracker$AppExitInfoContainer: void destroyLocked()>();

        virtualinvoke r2.<android.util.SparseArray: void removeAt(int)>(i11);

        goto label10;

     label09:
        i11 = i11 + -1;

        goto label08;

     label10:
        $i3 = virtualinvoke r2.<android.util.SparseArray: int size()>();

        if $i3 != 0 goto label11;

        virtualinvoke r20.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r1);

     label11:
        return;
    }

    private void scheduleChildProcDied(int, int, int)
    {
        com.android.server.am.AppExitInfoTracker r0;
        int i0, i1, i2;
        com.android.server.am.AppExitInfoTracker$KillHandler $r1;
        java.lang.Integer $r2;
        android.os.Message $r3;

        r0 := @this: com.android.server.am.AppExitInfoTracker;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r1 = r0.<com.android.server.am.AppExitInfoTracker: com.android.server.am.AppExitInfoTracker$KillHandler mKillHandler>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r3 = virtualinvoke $r1.<com.android.server.am.AppExitInfoTracker$KillHandler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(4102, i0, i1, $r2);

        virtualinvoke $r3.<android.os.Message: void sendToTarget()>();

        return;
    }

    private void updateExistingExitInfoRecordLocked(android.app.ApplicationExitInfo, java.lang.Integer, java.lang.Integer)
    {
        com.android.server.am.AppExitInfoTracker r0;
        android.app.ApplicationExitInfo r1;
        java.lang.Integer r2, r3;
        long $l0;
        boolean $z0, $z1, $z2;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;

        r0 := @this: com.android.server.am.AppExitInfoTracker;

        r1 := @parameter0: android.app.ApplicationExitInfo;

        r2 := @parameter1: java.lang.Integer;

        r3 := @parameter2: java.lang.Integer;

        if r1 == null goto label6;

        $l0 = virtualinvoke r1.<android.app.ApplicationExitInfo: long getTimestamp()>();

        $z0 = staticinvoke <com.android.server.am.AppExitInfoTracker: boolean isFresh(long)>($l0);

        if $z0 != 0 goto label1;

        goto label6;

     label1:
        if r2 == null goto label4;

        $i2 = virtualinvoke r2.<java.lang.Integer: int intValue()>();

        $z1 = staticinvoke <android.system.OsConstants: boolean WIFEXITED(int)>($i2);

        if $z1 == 0 goto label2;

        virtualinvoke r1.<android.app.ApplicationExitInfo: void setReason(int)>(1);

        $i10 = virtualinvoke r2.<java.lang.Integer: int intValue()>();

        $i11 = staticinvoke <android.system.OsConstants: int WEXITSTATUS(int)>($i10);

        virtualinvoke r1.<android.app.ApplicationExitInfo: void setStatus(int)>($i11);

        goto label4;

     label2:
        $i3 = virtualinvoke r2.<java.lang.Integer: int intValue()>();

        $z2 = staticinvoke <android.system.OsConstants: boolean WIFSIGNALED(int)>($i3);

        if $z2 == 0 goto label4;

        $i4 = virtualinvoke r1.<android.app.ApplicationExitInfo: int getReason()>();

        if $i4 != 0 goto label3;

        virtualinvoke r1.<android.app.ApplicationExitInfo: void setReason(int)>(2);

        $i8 = virtualinvoke r2.<java.lang.Integer: int intValue()>();

        $i9 = staticinvoke <android.system.OsConstants: int WTERMSIG(int)>($i8);

        virtualinvoke r1.<android.app.ApplicationExitInfo: void setStatus(int)>($i9);

        goto label4;

     label3:
        $i5 = virtualinvoke r1.<android.app.ApplicationExitInfo: int getReason()>();

        if $i5 != 5 goto label4;

        $i6 = virtualinvoke r2.<java.lang.Integer: int intValue()>();

        $i7 = staticinvoke <android.system.OsConstants: int WTERMSIG(int)>($i6);

        virtualinvoke r1.<android.app.ApplicationExitInfo: void setStatus(int)>($i7);

     label4:
        if r3 == null goto label5;

        $i1 = virtualinvoke r3.<java.lang.Integer: int intValue()>();

        virtualinvoke r1.<android.app.ApplicationExitInfo: void setReason(int)>($i1);

     label5:
        return;

     label6:
        return;
    }

    private boolean updateExitInfoIfNecessaryLocked(int, int, java.lang.Integer, java.lang.Integer)
    {
        com.android.server.am.AppExitInfoTracker r0;
        int i0, $i1, i2;
        java.lang.Integer r1, r2, r5;
        com.android.server.am.AppExitInfoTracker$IsolatedUidRecords $r3;
        com.android.server.am._$$Lambda$AppExitInfoTracker$xUd65bpeb_3cGXv8w6rHG0fu89U $r4;
        java.util.ArrayList r6;
        boolean z0;

        r0 := @this: com.android.server.am.AppExitInfoTracker;

        i0 := @parameter0: int;

        i2 := @parameter1: int;

        r1 := @parameter2: java.lang.Integer;

        r2 := @parameter3: java.lang.Integer;

        $r3 = r0.<com.android.server.am.AppExitInfoTracker: com.android.server.am.AppExitInfoTracker$IsolatedUidRecords mIsolatedUidRecords>;

        r5 = virtualinvoke $r3.<com.android.server.am.AppExitInfoTracker$IsolatedUidRecords: java.lang.Integer getUidByIsolatedUid(int)>(i2);

        if r5 == null goto label1;

        i2 = virtualinvoke r5.<java.lang.Integer: int intValue()>();

     label1:
        r6 = r0.<com.android.server.am.AppExitInfoTracker: java.util.ArrayList mTmpInfoList>;

        virtualinvoke r6.<java.util.ArrayList: void clear()>();

        $r4 = new com.android.server.am._$$Lambda$AppExitInfoTracker$xUd65bpeb_3cGXv8w6rHG0fu89U;

        specialinvoke $r4.<com.android.server.am._$$Lambda$AppExitInfoTracker$xUd65bpeb_3cGXv8w6rHG0fu89U: void <init>(com.android.server.am.AppExitInfoTracker,int,java.util.ArrayList,int,java.lang.Integer,java.lang.Integer)>(r0, i2, r6, i0, r1, r2);

        specialinvoke r0.<com.android.server.am.AppExitInfoTracker: void forEachPackageLocked(java.util.function.BiFunction)>($r4);

        $i1 = virtualinvoke r6.<java.util.ArrayList: int size()>();

        if $i1 <= 0 goto label2;

        z0 = 1;

        goto label3;

     label2:
        z0 = 0;

     label3:
        return z0;
    }

    void clearHistoryProcessExitInfo(java.lang.String, int)
    {
        com.android.server.am.AppExitInfoTracker r0;
        int i0, i1;
        boolean $z0;
        com.android.server.am.ActivityManagerService $r1;
        android.content.pm.PackageManagerInternal $r2;
        java.lang.Throwable $r3, $r4;
        java.lang.String r5;
        java.lang.Object r6, r8;

        r0 := @this: com.android.server.am.AppExitInfoTracker;

        r5 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r5);

        if $z0 == 0 goto label06;

        r6 = r0.<com.android.server.am.AppExitInfoTracker: java.lang.Object mLock>;

        entermonitor r6;

     label01:
        specialinvoke r0.<com.android.server.am.AppExitInfoTracker: void removeByUserIdLocked(int)>(i0);

        exitmonitor r6;

     label02:
        goto label08;

     label03:
        $r3 := @caughtexception;

     label04:
        exitmonitor r6;

     label05:
        throw $r3;

     label06:
        $r1 = r0.<com.android.server.am.AppExitInfoTracker: com.android.server.am.ActivityManagerService mService>;

        $r2 = $r1.<com.android.server.am.ActivityManagerService: android.content.pm.PackageManagerInternal mPackageManagerInt>;

        i1 = virtualinvoke $r2.<android.content.pm.PackageManagerInternal: int getPackageUid(java.lang.String,int,int)>(r5, 131072, i0);

        r8 = r0.<com.android.server.am.AppExitInfoTracker: java.lang.Object mLock>;

        entermonitor r8;

     label07:
        specialinvoke r0.<com.android.server.am.AppExitInfoTracker: void removePackageLocked(java.lang.String,int,boolean,int)>(r5, i1, 1, i0);

        exitmonitor r8;

     label08:
        virtualinvoke r0.<com.android.server.am.AppExitInfoTracker: void schedulePersistProcessExitInfo(boolean)>(1);

        return;

     label09:
        $r4 := @caughtexception;

     label10:
        exitmonitor r8;

     label11:
        throw $r4;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label04 to label05 with label03;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    void clearProcessExitInfo(boolean)
    {
        com.android.server.am.AppExitInfoTracker r0;
        boolean z0;
        java.lang.Object r1;
        java.lang.Runnable $r3, $r7;
        java.io.File $r4, $r5;
        android.os.Handler $r6;
        java.lang.Throwable $r8;
        com.android.internal.app.ProcessMap $r9;
        android.util.ArrayMap $r10;
        android.util.SparseArray $r11, $r12;

        r0 := @this: com.android.server.am.AppExitInfoTracker;

        z0 := @parameter0: boolean;

        r1 = r0.<com.android.server.am.AppExitInfoTracker: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.am.AppExitInfoTracker: java.lang.Runnable mAppExitInfoPersistTask>;

        if $r3 == null goto label2;

        $r6 = staticinvoke <com.android.server.IoThread: android.os.Handler getHandler()>();

        $r7 = r0.<com.android.server.am.AppExitInfoTracker: java.lang.Runnable mAppExitInfoPersistTask>;

        virtualinvoke $r6.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r7);

        r0.<com.android.server.am.AppExitInfoTracker: java.lang.Runnable mAppExitInfoPersistTask> = null;

     label2:
        if z0 == 0 goto label4;

     label3:
        $r4 = r0.<com.android.server.am.AppExitInfoTracker: java.io.File mProcExitInfoFile>;

        if $r4 == null goto label4;

        $r5 = r0.<com.android.server.am.AppExitInfoTracker: java.io.File mProcExitInfoFile>;

        virtualinvoke $r5.<java.io.File: boolean delete()>();

     label4:
        $r9 = r0.<com.android.server.am.AppExitInfoTracker: com.android.internal.app.ProcessMap mData>;

        $r10 = virtualinvoke $r9.<com.android.internal.app.ProcessMap: android.util.ArrayMap getMap()>();

        virtualinvoke $r10.<android.util.ArrayMap: void clear()>();

        $r11 = r0.<com.android.server.am.AppExitInfoTracker: android.util.SparseArray mActiveAppStateSummary>;

        virtualinvoke $r11.<android.util.SparseArray: void clear()>();

        $r12 = r0.<com.android.server.am.AppExitInfoTracker: android.util.SparseArray mActiveAppTraces>;

        virtualinvoke $r12.<android.util.SparseArray: void clear()>();

        specialinvoke r0.<com.android.server.am.AppExitInfoTracker: void pruneAnrTracesIfNecessaryLocked()>();

        exitmonitor r1;

     label5:
        return;

     label6:
        $r8 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    void dumpHistoryProcessExitInfo(java.io.PrintWriter, java.lang.String)
    {
        com.android.server.am.AppExitInfoTracker r0;
        java.lang.Object r2, $r11;
        java.util.Date r3;
        android.icu.text.SimpleDateFormat $r4;
        long $l0;
        java.lang.String $r6, $r8, r14;
        boolean $z0;
        com.android.internal.app.ProcessMap $r9;
        android.util.ArrayMap $r10;
        java.lang.Throwable $r12;
        java.io.PrintWriter r13;
        java.lang.StringBuilder r15;
        com.android.server.am._$$Lambda$AppExitInfoTracker$ykvdMbwZILd9oyb6cyIe3GfomwU r16;
        android.util.SparseArray r17;

        r0 := @this: com.android.server.am.AppExitInfoTracker;

        r13 := @parameter0: java.io.PrintWriter;

        r14 := @parameter1: java.lang.String;

        virtualinvoke r13.<java.io.PrintWriter: void println(java.lang.String)>("ACTIVITY MANAGER PROCESS EXIT INFO (dumpsys activity exit-info)");

        $r4 = new android.icu.text.SimpleDateFormat;

        specialinvoke $r4.<android.icu.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyy-MM-dd HH:mm:ss.SSS");

        r2 = r0.<com.android.server.am.AppExitInfoTracker: java.lang.Object mLock>;

        entermonitor r2;

     label01:
        r15 = new java.lang.StringBuilder;

        specialinvoke r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Last Timestamp of Persistence Into Persistent Storage: ");

        r3 = new java.util.Date;

        $l0 = r0.<com.android.server.am.AppExitInfoTracker: long mLastAppExitInfoPersistTimestamp>;

        specialinvoke r3.<java.util.Date: void <init>(long)>($l0);

        $r6 = virtualinvoke $r4.<android.icu.text.SimpleDateFormat: java.lang.String format(java.util.Date)>(r3);

        virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r13.<java.io.PrintWriter: void println(java.lang.String)>($r8);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r14);

        if $z0 == 0 goto label03;

        r16 = new com.android.server.am._$$Lambda$AppExitInfoTracker$ykvdMbwZILd9oyb6cyIe3GfomwU;

        specialinvoke r16.<com.android.server.am._$$Lambda$AppExitInfoTracker$ykvdMbwZILd9oyb6cyIe3GfomwU: void <init>(com.android.server.am.AppExitInfoTracker,java.io.PrintWriter,android.icu.text.SimpleDateFormat)>(r0, r13, $r4);

        specialinvoke r0.<com.android.server.am.AppExitInfoTracker: void forEachPackageLocked(java.util.function.BiFunction)>(r16);

     label02:
        goto label06;

     label03:
        $r9 = r0.<com.android.server.am.AppExitInfoTracker: com.android.internal.app.ProcessMap mData>;

        $r10 = virtualinvoke $r9.<com.android.internal.app.ProcessMap: android.util.ArrayMap getMap()>();

        $r11 = virtualinvoke $r10.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r14);

        r17 = (android.util.SparseArray) $r11;

     label04:
        if r17 == null goto label06;

     label05:
        specialinvoke r0.<com.android.server.am.AppExitInfoTracker: void dumpHistoryProcessExitInfoLocked(java.io.PrintWriter,java.lang.String,java.lang.String,android.util.SparseArray,android.icu.text.SimpleDateFormat)>(r13, "  ", r14, r17, $r4);

     label06:
        exitmonitor r2;

     label07:
        return;

     label08:
        $r12 := @caughtexception;

     label09:
        exitmonitor r2;

     label10:
        throw $r12;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    void getExitInfo(java.lang.String, int, int, int, java.util.ArrayList)
    {
        com.android.server.am.AppExitInfoTracker r0;
        int i0, i2, i3, i4, i5, i6;
        java.util.ArrayList r1, r3;
        long l1;
        java.lang.Object r2, $r5, $r8;
        boolean $z0;
        com.android.server.am.'-$$Lambda$AppExitInfoTracker$DgW09rn1xYgswF2bIX-IptVkNqg' $r4;
        android.app.ApplicationExitInfo $r6;
        com.android.internal.app.ProcessMap $r7;
        java.lang.Throwable $r9, $r10;
        java.lang.String r11;
        com.android.server.am.AppExitInfoTracker$AppExitInfoContainer r12;
        com.android.server.am._$$Lambda$AppExitInfoTracker$eDSFQ6mRzgNt_3VDBtVv4kawCFk r16;
        java.util.Comparator r17;

        r0 := @this: com.android.server.am.AppExitInfoTracker;

        r11 := @parameter0: java.lang.String;

        i2 := @parameter1: int;

        i3 := @parameter2: int;

        i0 := @parameter3: int;

        r1 := @parameter4: java.util.ArrayList;

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label01:
        r2 = r0.<com.android.server.am.AppExitInfoTracker: java.lang.Object mLock>;

        entermonitor r2;

     label02:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r11);

        if $z0 != 0 goto label06;

        $r7 = r0.<com.android.server.am.AppExitInfoTracker: com.android.internal.app.ProcessMap mData>;

        $r8 = virtualinvoke $r7.<com.android.internal.app.ProcessMap: java.lang.Object get(java.lang.String,int)>(r11, i2);

        r12 = (com.android.server.am.AppExitInfoTracker$AppExitInfoContainer) $r8;

     label03:
        if r12 == null goto label05;

     label04:
        virtualinvoke r12.<com.android.server.am.AppExitInfoTracker$AppExitInfoContainer: void getExitInfoLocked(int,int,java.util.ArrayList)>(i3, i0, r1);

     label05:
        goto label14;

     label06:
        r3 = r0.<com.android.server.am.AppExitInfoTracker: java.util.ArrayList mTmpInfoList2>;

        virtualinvoke r3.<java.util.ArrayList: void clear()>();

        r16 = new com.android.server.am._$$Lambda$AppExitInfoTracker$eDSFQ6mRzgNt_3VDBtVv4kawCFk;

        specialinvoke r16.<com.android.server.am._$$Lambda$AppExitInfoTracker$eDSFQ6mRzgNt_3VDBtVv4kawCFk: void <init>(com.android.server.am.AppExitInfoTracker,int,java.util.ArrayList,int)>(r0, i2, r3, i3);

        specialinvoke r0.<com.android.server.am.AppExitInfoTracker: void forEachPackageLocked(java.util.function.BiFunction)>(r16);

        $r4 = <com.android.server.am._$$Lambda$AppExitInfoTracker$DgW09rn1xYgswF2bIX_IptVkNqg: com.android.server.am.'-$$Lambda$AppExitInfoTracker$DgW09rn1xYgswF2bIX-IptVkNqg' INSTANCE>;

        r17 = (java.util.Comparator) $r4;

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r3, r17);

        i4 = virtualinvoke r3.<java.util.ArrayList: int size()>();

     label07:
        i5 = i4;

        if i0 <= 0 goto label09;

     label08:
        i5 = staticinvoke <java.lang.Math: int min(int,int)>(i4, i0);

     label09:
        i6 = 0;

     label10:
        if i6 >= i5 goto label13;

     label11:
        $r5 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i6);

        $r6 = (android.app.ApplicationExitInfo) $r5;

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

     label12:
        i6 = i6 + 1;

        goto label10;

     label13:
        virtualinvoke r3.<java.util.ArrayList: void clear()>();

     label14:
        exitmonitor r2;

     label15:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return;

     label16:
        $r9 := @caughtexception;

     label17:
        exitmonitor r2;

     label18:
        throw $r9;

     label19:
        $r10 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r10;

        catch java.lang.Throwable from label01 to label02 with label19;
        catch java.lang.Throwable from label02 to label03 with label16;
        catch java.lang.Throwable from label04 to label05 with label16;
        catch java.lang.Throwable from label06 to label07 with label16;
        catch java.lang.Throwable from label08 to label09 with label16;
        catch java.lang.Throwable from label11 to label12 with label16;
        catch java.lang.Throwable from label13 to label14 with label16;
        catch java.lang.Throwable from label14 to label15 with label16;
        catch java.lang.Throwable from label17 to label18 with label16;
        catch java.lang.Throwable from label18 to label19 with label19;
    }

    byte[] getProcessStateSummary(int, int)
    {
        com.android.server.am.AppExitInfoTracker r0;
        int i0, i1, i2;
        java.lang.Object r1, $r5, $r7;
        com.android.server.am.AppExitInfoTracker$IsolatedUidRecords $r2;
        android.util.SparseArray $r3, $r4, $r6;
        java.lang.Throwable $r8;
        java.lang.Integer r9;
        byte[] r10;

        r0 := @this: com.android.server.am.AppExitInfoTracker;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        r1 = r0.<com.android.server.am.AppExitInfoTracker: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r2 = r0.<com.android.server.am.AppExitInfoTracker: com.android.server.am.AppExitInfoTracker$IsolatedUidRecords mIsolatedUidRecords>;

        r9 = virtualinvoke $r2.<com.android.server.am.AppExitInfoTracker$IsolatedUidRecords: java.lang.Integer getUidByIsolatedUid(int)>(i1);

     label02:
        if r9 == null goto label04;

     label03:
        i1 = virtualinvoke r9.<java.lang.Integer: int intValue()>();

     label04:
        $r3 = r0.<com.android.server.am.AppExitInfoTracker: android.util.SparseArray mActiveAppStateSummary>;

        i2 = virtualinvoke $r3.<android.util.SparseArray: int indexOfKey(int)>(i1);

     label05:
        if i2 >= 0 goto label08;

     label06:
        exitmonitor r1;

     label07:
        return null;

     label08:
        $r4 = r0.<com.android.server.am.AppExitInfoTracker: android.util.SparseArray mActiveAppStateSummary>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        $r6 = (android.util.SparseArray) $r5;

        $r7 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r10 = (byte[]) $r7;

        exitmonitor r1;

     label09:
        return r10;

     label10:
        $r8 := @caughtexception;

     label11:
        exitmonitor r1;

     label12:
        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    void handleLogAnrTrace(int, int, java.lang.String[], java.io.File, long, long)
    {
        com.android.server.am.AppExitInfoTracker r0;
        int i0, i5, i9, i10;
        long l1, l2, l3, l4;
        boolean z0, $z1, $z2, $z3, z4;
        com.android.server.am.'-$$Lambda$WVd6ghNMbVDukmkxia3ZwNeZzEY' r1;
        byte $b6, $b7, $b8;
        java.lang.String $r3, $r7, $r8;
        com.android.internal.app.ProcessMap $r9;
        java.lang.Object $r10, r24;
        java.lang.Throwable $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, r27;
        java.lang.String[] r19;
        java.io.File r20, r21, r32;
        com.android.server.am.AppExitInfoTracker$IsolatedUidRecords r25;
        java.lang.Integer r26;
        com.android.server.am.AppExitInfoTracker$AppExitInfoContainer r28;
        android.util.SparseArray r29;
        com.android.server.am.'-$$Lambda$AppExitInfoTracker$IvsxxpH-tYhqZSARqXULzKdbmW4' r30;
        java.lang.StringBuilder r31;
        java.util.function.Supplier r33;
        java.util.function.Consumer r34;

        r0 := @this: com.android.server.am.AppExitInfoTracker;

        i0 := @parameter0: int;

        i9 := @parameter1: int;

        r19 := @parameter2: java.lang.String[];

        r20 := @parameter3: java.io.File;

        l1 := @parameter4: long;

        l2 := @parameter5: long;

        $z1 = virtualinvoke r20.<java.io.File: boolean exists()>();

        if $z1 == 0 goto label34;

        $z2 = staticinvoke <com.android.internal.util.ArrayUtils: boolean isEmpty(java.lang.Object[])>(r19);

        if $z2 == 0 goto label01;

        goto label34;

     label01:
        l3 = virtualinvoke r20.<java.io.File: long length()>();

        l4 = l2 - l1;

        $b6 = l1 cmp l3;

        if $b6 >= 0 goto label33;

        $b7 = l2 cmp l3;

        if $b7 > 0 goto label33;

        $b8 = l4 cmp 0L;

        if $b8 > 0 goto label02;

        goto label33;

     label02:
        r21 = r0.<com.android.server.am.AppExitInfoTracker: java.io.File mProcExitStoreDir>;

        r31 = new java.lang.StringBuilder;

        specialinvoke r31.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke r20.<java.io.File: java.lang.String getName()>();

        virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".gz");

        r32 = new java.io.File;

        $r7 = virtualinvoke r31.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r32.<java.io.File: void <init>(java.io.File,java.lang.String)>(r21, $r7);

        $z3 = staticinvoke <com.android.server.am.AppExitInfoTracker: boolean copyToGzFile(java.io.File,java.io.File,long,long)>(r20, r32, l1, l4);

        if $z3 == 0 goto label32;

        r24 = r0.<com.android.server.am.AppExitInfoTracker: java.lang.Object mLock>;

        entermonitor r24;

     label03:
        r25 = r0.<com.android.server.am.AppExitInfoTracker: com.android.server.am.AppExitInfoTracker$IsolatedUidRecords mIsolatedUidRecords>;

     label04:
        r26 = virtualinvoke r25.<com.android.server.am.AppExitInfoTracker$IsolatedUidRecords: java.lang.Integer getUidByIsolatedUid(int)>(i9);

     label05:
        if r26 == null goto label09;

     label06:
        i9 = virtualinvoke r26.<java.lang.Integer: int intValue()>();

     label07:
        goto label09;

     label08:
        $r12 := @caughtexception;

        r27 = $r12;

        goto label29;

     label09:
        z4 = 1;

        i10 = 0;

     label10:
        i5 = lengthof r19;

     label11:
        if i10 >= i5 goto label19;

     label12:
        $r9 = r0.<com.android.server.am.AppExitInfoTracker: com.android.internal.app.ProcessMap mData>;

        $r8 = r19[i10];

        $r10 = virtualinvoke $r9.<com.android.internal.app.ProcessMap: java.lang.Object get(java.lang.String,int)>($r8, i9);

        r28 = (com.android.server.am.AppExitInfoTracker$AppExitInfoContainer) $r10;

     label13:
        if r28 == null goto label17;

     label14:
        z0 = virtualinvoke r28.<com.android.server.am.AppExitInfoTracker$AppExitInfoContainer: boolean appendTraceIfNecessaryLocked(int,java.io.File)>(i0, r32);

     label15:
        if z0 == 0 goto label17;

        z4 = 0;

        goto label17;

     label16:
        $r11 := @caughtexception;

        r27 = $r11;

        goto label29;

     label17:
        i10 = i10 + 1;

        goto label10;

     label18:
        $r13 := @caughtexception;

        r27 = $r13;

        goto label29;

     label19:
        if z4 == 0 goto label24;

     label20:
        r29 = r0.<com.android.server.am.AppExitInfoTracker: android.util.SparseArray mActiveAppTraces>;

        r1 = <com.android.server.am._$$Lambda$WVd6ghNMbVDukmkxia3ZwNeZzEY: com.android.server.am.'-$$Lambda$WVd6ghNMbVDukmkxia3ZwNeZzEY' INSTANCE>;

        r30 = <com.android.server.am._$$Lambda$AppExitInfoTracker$IvsxxpH_tYhqZSARqXULzKdbmW4: com.android.server.am.'-$$Lambda$AppExitInfoTracker$IvsxxpH-tYhqZSARqXULzKdbmW4' INSTANCE>;

     label21:
        r33 = (java.util.function.Supplier) r1;

        r34 = (java.util.function.Consumer) r30;

        staticinvoke <com.android.server.am.AppExitInfoTracker: void putToSparse2dArray(android.util.SparseArray,int,int,java.lang.Object,java.util.function.Supplier,java.util.function.Consumer)>(r29, i9, i0, r32, r33, r34);

     label22:
        goto label24;

     label23:
        $r17 := @caughtexception;

        r27 = $r17;

        goto label29;

     label24:
        exitmonitor r24;

     label25:
        goto label32;

     label26:
        $r18 := @caughtexception;

        r27 = $r18;

        goto label29;

     label27:
        $r16 := @caughtexception;

        r27 = $r16;

        goto label29;

     label28:
        $r14 := @caughtexception;

        r27 = $r14;

     label29:
        exitmonitor r24;

     label30:
        throw r27;

     label31:
        $r15 := @caughtexception;

        r27 = $r15;

        goto label29;

     label32:
        return;

     label33:
        return;

     label34:
        return;

        catch java.lang.Throwable from label03 to label04 with label28;
        catch java.lang.Throwable from label04 to label05 with label27;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label10 to label11 with label26;
        catch java.lang.Throwable from label12 to label13 with label18;
        catch java.lang.Throwable from label14 to label15 with label16;
        catch java.lang.Throwable from label20 to label21 with label23;
        catch java.lang.Throwable from label21 to label22 with label31;
        catch java.lang.Throwable from label24 to label25 with label31;
        catch java.lang.Throwable from label29 to label30 with label31;
    }

    void handleNoteAppKillLocked(android.app.ApplicationExitInfo)
    {
        com.android.server.am.AppExitInfoTracker r0;
        android.app.ApplicationExitInfo r1, r2;
        java.lang.String $r3, $r4;
        int $i0, $i1, $i2, $i3;
        long $l4;

        r0 := @this: com.android.server.am.AppExitInfoTracker;

        r1 := @parameter0: android.app.ApplicationExitInfo;

        $r3 = virtualinvoke r1.<android.app.ApplicationExitInfo: java.lang.String getPackageName()>();

        $i0 = virtualinvoke r1.<android.app.ApplicationExitInfo: int getPackageUid()>();

        $i1 = virtualinvoke r1.<android.app.ApplicationExitInfo: int getPid()>();

        r2 = specialinvoke r0.<com.android.server.am.AppExitInfoTracker: android.app.ApplicationExitInfo getExitInfoLocked(java.lang.String,int,int)>($r3, $i0, $i1);

        if r2 != null goto label1;

        specialinvoke r0.<com.android.server.am.AppExitInfoTracker: android.app.ApplicationExitInfo addExitInfoLocked(android.app.ApplicationExitInfo)>(r1);

        goto label2;

     label1:
        $i2 = virtualinvoke r1.<android.app.ApplicationExitInfo: int getReason()>();

        virtualinvoke r2.<android.app.ApplicationExitInfo: void setReason(int)>($i2);

        $i3 = virtualinvoke r1.<android.app.ApplicationExitInfo: int getSubReason()>();

        virtualinvoke r2.<android.app.ApplicationExitInfo: void setSubReason(int)>($i3);

        virtualinvoke r2.<android.app.ApplicationExitInfo: void setStatus(int)>(0);

        $l4 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        virtualinvoke r2.<android.app.ApplicationExitInfo: void setTimestamp(long)>($l4);

        $r4 = virtualinvoke r1.<android.app.ApplicationExitInfo: java.lang.String getDescription()>();

        virtualinvoke r2.<android.app.ApplicationExitInfo: void setDescription(java.lang.String)>($r4);

     label2:
        return;
    }

    void handleNoteProcessDiedLocked(android.app.ApplicationExitInfo)
    {
        com.android.server.am.AppExitInfoTracker r0;
        android.app.ApplicationExitInfo r1, r2, r12;
        android.util.Pair r3, r4;
        java.lang.String $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        com.android.server.am.AppExitInfoTracker$AppExitInfoExternalSource $r6, $r7;
        com.android.server.am.AppExitInfoTracker$IsolatedUidRecords $r8;
        java.lang.Object $r9;
        java.lang.Integer $r10, $r11;

        r0 := @this: com.android.server.am.AppExitInfoTracker;

        r1 := @parameter0: android.app.ApplicationExitInfo;

        if r1 == null goto label3;

        $r5 = virtualinvoke r1.<android.app.ApplicationExitInfo: java.lang.String getPackageName()>();

        $i0 = virtualinvoke r1.<android.app.ApplicationExitInfo: int getPackageUid()>();

        $i1 = virtualinvoke r1.<android.app.ApplicationExitInfo: int getPid()>();

        r2 = specialinvoke r0.<com.android.server.am.AppExitInfoTracker: android.app.ApplicationExitInfo getExitInfoLocked(java.lang.String,int,int)>($r5, $i0, $i1);

        $r6 = r0.<com.android.server.am.AppExitInfoTracker: com.android.server.am.AppExitInfoTracker$AppExitInfoExternalSource mAppExitInfoSourceZygote>;

        $i2 = virtualinvoke r1.<android.app.ApplicationExitInfo: int getPid()>();

        $i3 = virtualinvoke r1.<android.app.ApplicationExitInfo: int getRealUid()>();

        r3 = virtualinvoke $r6.<com.android.server.am.AppExitInfoTracker$AppExitInfoExternalSource: android.util.Pair remove(int,int)>($i2, $i3);

        $r7 = r0.<com.android.server.am.AppExitInfoTracker: com.android.server.am.AppExitInfoTracker$AppExitInfoExternalSource mAppExitInfoSourceLmkd>;

        $i4 = virtualinvoke r1.<android.app.ApplicationExitInfo: int getPid()>();

        $i5 = virtualinvoke r1.<android.app.ApplicationExitInfo: int getRealUid()>();

        r4 = virtualinvoke $r7.<com.android.server.am.AppExitInfoTracker$AppExitInfoExternalSource: android.util.Pair remove(int,int)>($i4, $i5);

        $r8 = r0.<com.android.server.am.AppExitInfoTracker: com.android.server.am.AppExitInfoTracker$IsolatedUidRecords mIsolatedUidRecords>;

        $i6 = virtualinvoke r1.<android.app.ApplicationExitInfo: int getRealUid()>();

        virtualinvoke $r8.<com.android.server.am.AppExitInfoTracker$IsolatedUidRecords: int removeIsolatedUidLocked(int)>($i6);

        r12 = r2;

        if r2 != null goto label1;

        r12 = specialinvoke r0.<com.android.server.am.AppExitInfoTracker: android.app.ApplicationExitInfo addExitInfoLocked(android.app.ApplicationExitInfo)>(r1);

     label1:
        if r4 == null goto label2;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        specialinvoke r0.<com.android.server.am.AppExitInfoTracker: void updateExistingExitInfoRecordLocked(android.app.ApplicationExitInfo,java.lang.Integer,java.lang.Integer)>(r12, null, $r11);

        goto label3;

     label2:
        if r3 == null goto label3;

        $r9 = r3.<android.util.Pair: java.lang.Object second>;

        $r10 = (java.lang.Integer) $r9;

        specialinvoke r0.<com.android.server.am.AppExitInfoTracker: void updateExistingExitInfoRecordLocked(android.app.ApplicationExitInfo,java.lang.Integer,java.lang.Integer)>(r12, $r10, null);

     label3:
        return;
    }

    void handleZygoteSigChld(int, int, int)
    {
        com.android.server.am.AppExitInfoTracker r0;
        int i0, i1, i2;

        r0 := @this: com.android.server.am.AppExitInfoTracker;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        specialinvoke r0.<com.android.server.am.AppExitInfoTracker: void scheduleChildProcDied(int,int,int)>(i0, i1, i2);

        return;
    }

    void init(com.android.server.am.ActivityManagerService)
    {
        com.android.server.am.AppExitInfoTracker r0;
        com.android.server.ServiceThread $r1;
        com.android.server.am.AppExitInfoTracker$KillHandler $r2;
        android.os.Looper $r3;
        java.io.File $r4, $r5, $r6, $r7, $r12;
        boolean $z0;
        android.content.Context $r8;
        android.content.res.Resources $r9;
        int $i0;
        java.lang.StringBuilder $r10;
        java.lang.String $r14;
        com.android.server.am.ActivityManagerService r15;

        r0 := @this: com.android.server.am.AppExitInfoTracker;

        r15 := @parameter0: com.android.server.am.ActivityManagerService;

        r0.<com.android.server.am.AppExitInfoTracker: com.android.server.am.ActivityManagerService mService> = r15;

        $r1 = new com.android.server.ServiceThread;

        specialinvoke $r1.<com.android.server.ServiceThread: void <init>(java.lang.String,int,boolean)>("ActivityManager:killHandler", 10, 1);

        virtualinvoke $r1.<com.android.server.ServiceThread: void start()>();

        $r2 = new com.android.server.am.AppExitInfoTracker$KillHandler;

        $r3 = virtualinvoke $r1.<com.android.server.ServiceThread: android.os.Looper getLooper()>();

        specialinvoke $r2.<com.android.server.am.AppExitInfoTracker$KillHandler: void <init>(com.android.server.am.AppExitInfoTracker,android.os.Looper)>(r0, $r3);

        r0.<com.android.server.am.AppExitInfoTracker: com.android.server.am.AppExitInfoTracker$KillHandler mKillHandler> = $r2;

        $r4 = new java.io.File;

        $r5 = staticinvoke <com.android.server.SystemServiceManager: java.io.File ensureSystemDir()>();

        specialinvoke $r4.<java.io.File: void <init>(java.io.File,java.lang.String)>($r5, "procexitstore");

        r0.<com.android.server.am.AppExitInfoTracker: java.io.File mProcExitStoreDir> = $r4;

        $z0 = staticinvoke <android.os.FileUtils: boolean createDir(java.io.File)>($r4);

        if $z0 != 0 goto label1;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to create ");

        $r12 = r0.<com.android.server.am.AppExitInfoTracker: java.io.File mProcExitStoreDir>;

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r14 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ActivityManager", $r14);

        return;

     label1:
        $r6 = new java.io.File;

        $r7 = r0.<com.android.server.am.AppExitInfoTracker: java.io.File mProcExitStoreDir>;

        specialinvoke $r6.<java.io.File: void <init>(java.io.File,java.lang.String)>($r7, "procexitinfo");

        r0.<com.android.server.am.AppExitInfoTracker: java.io.File mProcExitInfoFile> = $r6;

        $r8 = r15.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r9 = virtualinvoke $r8.<android.content.Context: android.content.res.Resources getResources()>();

        $i0 = virtualinvoke $r9.<android.content.res.Resources: int getInteger(int)>(17694734);

        r0.<com.android.server.am.AppExitInfoTracker: int mAppExitInfoHistoryListSize> = $i0;

        return;
    }

    public java.lang.Integer lambda$dumpHistoryProcessExitInfo$6$AppExitInfoTracker(java.io.PrintWriter, android.icu.text.SimpleDateFormat, java.lang.String, android.util.SparseArray)
    {
        com.android.server.am.AppExitInfoTracker r0;
        java.io.PrintWriter r1;
        android.icu.text.SimpleDateFormat r2;
        java.lang.String r3;
        android.util.SparseArray r4;
        java.lang.Integer $r5;

        r0 := @this: com.android.server.am.AppExitInfoTracker;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: android.icu.text.SimpleDateFormat;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.util.SparseArray;

        specialinvoke r0.<com.android.server.am.AppExitInfoTracker: void dumpHistoryProcessExitInfoLocked(java.io.PrintWriter,java.lang.String,java.lang.String,android.util.SparseArray,android.icu.text.SimpleDateFormat)>(r1, "  ", r3, r4, r2);

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        return $r5;
    }

    public java.lang.Integer lambda$getExitInfo$3$AppExitInfoTracker(int, java.util.ArrayList, int, java.lang.String, android.util.SparseArray)
    {
        com.android.server.am.AppExitInfoTracker r0;
        int i0, i1;
        java.util.ArrayList r1, $r5, $r6;
        android.util.SparseArray r2;
        java.lang.Object $r3;
        java.lang.Integer $r4;
        java.util.List $r7;
        java.lang.String r8;
        com.android.server.am.AppExitInfoTracker$AppExitInfoContainer r9;

        r0 := @this: com.android.server.am.AppExitInfoTracker;

        i0 := @parameter0: int;

        r1 := @parameter1: java.util.ArrayList;

        i1 := @parameter2: int;

        r8 := @parameter3: java.lang.String;

        r2 := @parameter4: android.util.SparseArray;

        $r3 = virtualinvoke r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r9 = (com.android.server.am.AppExitInfoTracker$AppExitInfoContainer) $r3;

        if r9 == null goto label1;

        $r5 = r0.<com.android.server.am.AppExitInfoTracker: java.util.ArrayList mTmpInfoList>;

        virtualinvoke $r5.<java.util.ArrayList: void clear()>();

        $r6 = r0.<com.android.server.am.AppExitInfoTracker: java.util.ArrayList mTmpInfoList>;

        $r7 = virtualinvoke r9.<com.android.server.am.AppExitInfoTracker$AppExitInfoContainer: java.util.List toListLocked(java.util.List,int)>($r6, i1);

        virtualinvoke r1.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r7);

     label1:
        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        return $r4;
    }

    public void lambda$onSystemReady$0$AppExitInfoTracker()
    {
        com.android.server.am.AppExitInfoTracker r0;
        boolean $z0;
        java.lang.String $r1;

        r0 := @this: com.android.server.am.AppExitInfoTracker;

        $z0 = staticinvoke <android.os.SystemProperties: boolean getBoolean(java.lang.String,boolean)>("sys.lmk.reportkills", 0);

        $r1 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>($z0);

        staticinvoke <android.os.SystemProperties: void set(java.lang.String,java.lang.String)>("persist.sys.lmk.reportkills", $r1);

        virtualinvoke r0.<com.android.server.am.AppExitInfoTracker: void loadExistingProcessExitInfo()>();

        return;
    }

    public java.lang.Integer lambda$updateExitInfoIfNecessaryLocked$2$AppExitInfoTracker(int, java.util.ArrayList, int, java.lang.Integer, java.lang.Integer, java.lang.String, android.util.SparseArray)
    {
        com.android.server.am.AppExitInfoTracker r0;
        int i0, i1, $i2, $i3;
        java.util.ArrayList r1;
        java.lang.Integer r2, r3, $r6, r10;
        java.lang.Object $r4, $r5;
        java.lang.String r7;
        android.util.SparseArray r8;
        com.android.server.am.AppExitInfoTracker$AppExitInfoContainer r9;
        android.app.ApplicationExitInfo r11;

        r0 := @this: com.android.server.am.AppExitInfoTracker;

        i0 := @parameter0: int;

        r1 := @parameter1: java.util.ArrayList;

        i1 := @parameter2: int;

        r2 := @parameter3: java.lang.Integer;

        r3 := @parameter4: java.lang.Integer;

        r7 := @parameter5: java.lang.String;

        r8 := @parameter6: android.util.SparseArray;

        $r4 = virtualinvoke r8.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r9 = (com.android.server.am.AppExitInfoTracker$AppExitInfoContainer) $r4;

        r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        if r9 != null goto label1;

        return r10;

     label1:
        virtualinvoke r1.<java.util.ArrayList: void clear()>();

        virtualinvoke r9.<com.android.server.am.AppExitInfoTracker$AppExitInfoContainer: void getExitInfoLocked(int,int,java.util.ArrayList)>(i1, 1, r1);

        $i2 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if $i2 != 0 goto label2;

        return r10;

     label2:
        $r5 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(0);

        r11 = (android.app.ApplicationExitInfo) $r5;

        $i3 = virtualinvoke r11.<android.app.ApplicationExitInfo: int getRealUid()>();

        if $i3 == i0 goto label3;

        virtualinvoke r1.<java.util.ArrayList: void clear()>();

        return r10;

     label3:
        specialinvoke r0.<com.android.server.am.AppExitInfoTracker: void updateExistingExitInfoRecordLocked(android.app.ApplicationExitInfo,java.lang.Integer,java.lang.Integer)>(r11, r2, r3);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        return $r6;
    }

    void loadExistingProcessExitInfo()
    {
        com.android.server.am.AppExitInfoTracker r0;
        java.io.File $r1, $r2;
        boolean $z0;
        long $l0, $l1;
        java.lang.Throwable $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        java.lang.String $r11;
        java.lang.Object r12, r19, r24;
        java.io.FileInputStream r14, r15, r17;
        android.util.AtomicFile r16;
        android.util.proto.ProtoInputStream r18;
        int i2;
        java.lang.StringBuilder r23;

        r0 := @this: com.android.server.am.AppExitInfoTracker;

        $r1 = r0.<com.android.server.am.AppExitInfoTracker: java.io.File mProcExitInfoFile>;

        $z0 = virtualinvoke $r1.<java.io.File: boolean canRead()>();

        if $z0 != 0 goto label06;

        r12 = r0.<com.android.server.am.AppExitInfoTracker: java.lang.Object mLock>;

        entermonitor r12;

     label01:
        r0.<com.android.server.am.AppExitInfoTracker: boolean mAppExitInfoLoaded> = 1;

        exitmonitor r12;

     label02:
        return;

     label03:
        $r6 := @caughtexception;

     label04:
        exitmonitor r12;

     label05:
        throw $r6;

     label06:
        r14 = null;

        r15 = null;

     label07:
        r16 = new android.util.AtomicFile;

     label08:
        r14 = null;

        r15 = null;

     label09:
        $r2 = r0.<com.android.server.am.AppExitInfoTracker: java.io.File mProcExitInfoFile>;

        specialinvoke r16.<android.util.AtomicFile: void <init>(java.io.File)>($r2);

     label10:
        r14 = null;

        r15 = null;

     label11:
        r17 = virtualinvoke r16.<android.util.AtomicFile: java.io.FileInputStream openRead()>();

     label12:
        r14 = r17;

        r15 = r17;

     label13:
        r18 = new android.util.proto.ProtoInputStream;

     label14:
        r14 = r17;

        r15 = r17;

     label15:
        specialinvoke r18.<android.util.proto.ProtoInputStream: void <init>(java.io.InputStream)>(r17);

     label16:
        r14 = r17;

        r15 = r17;

     label17:
        i2 = virtualinvoke r18.<android.util.proto.ProtoInputStream: int nextField()>();

     label18:
        if i2 == -1 goto label34;

        if i2 == 1 goto label22;

        if i2 == 2 goto label19;

        goto label27;

     label19:
        r14 = r17;

        r15 = r17;

     label20:
        $l1 = (long) i2;

        specialinvoke r0.<com.android.server.am.AppExitInfoTracker: void loadPackagesFromProto(android.util.proto.ProtoInputStream,long)>(r18, $l1);

     label21:
        goto label27;

     label22:
        r14 = r17;

        r15 = r17;

     label23:
        r19 = r0.<com.android.server.am.AppExitInfoTracker: java.lang.Object mLock>;

     label24:
        r14 = r17;

        r15 = r17;

     label25:
        entermonitor r19;

     label26:
        $l0 = virtualinvoke r18.<android.util.proto.ProtoInputStream: long readLong(long)>(1112396529665L);

        r0.<com.android.server.am.AppExitInfoTracker: long mLastAppExitInfoPersistTimestamp> = $l0;

        exitmonitor r19;

     label27:
        r14 = r17;

        r15 = r17;

     label28:
        i2 = virtualinvoke r18.<android.util.proto.ProtoInputStream: int nextField()>();

     label29:
        goto label18;

     label30:
        $r9 := @caughtexception;

     label31:
        exitmonitor r19;

     label32:
        r14 = r17;

        r15 = r17;

     label33:
        throw $r9;

     label34:
        if r17 == null goto label38;

     label35:
        virtualinvoke r17.<java.io.FileInputStream: void close()>();

     label36:
        goto label38;

     label37:
        $r5 := @caughtexception;

        goto label36;

     label38:
        goto label54;

     label39:
        $r7 := @caughtexception;

        goto label60;

     label40:
        $r10 := @caughtexception;

        r14 = r15;

     label41:
        r23 = new java.lang.StringBuilder;

     label42:
        r14 = r15;

     label43:
        specialinvoke r23.<java.lang.StringBuilder: void <init>()>();

     label44:
        r14 = r15;

     label45:
        virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in loading historical app exit info from persistent storage: ");

     label46:
        r14 = r15;

     label47:
        virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

     label48:
        r14 = r15;

     label49:
        $r11 = virtualinvoke r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r11);

     label50:
        if r15 == null goto label38;

     label51:
        virtualinvoke r15.<java.io.FileInputStream: void close()>();

     label52:
        goto label36;

     label53:
        $r8 := @caughtexception;

        goto label36;

     label54:
        r24 = r0.<com.android.server.am.AppExitInfoTracker: java.lang.Object mLock>;

        entermonitor r24;

     label55:
        specialinvoke r0.<com.android.server.am.AppExitInfoTracker: void pruneAnrTracesIfNecessaryLocked()>();

        r0.<com.android.server.am.AppExitInfoTracker: boolean mAppExitInfoLoaded> = 1;

        exitmonitor r24;

     label56:
        return;

     label57:
        $r3 := @caughtexception;

     label58:
        exitmonitor r24;

     label59:
        throw $r3;

     label60:
        if r14 == null goto label64;

     label61:
        virtualinvoke r14.<java.io.FileInputStream: void close()>();

     label62:
        goto label64;

     label63:
        $r4 := @caughtexception;

     label64:
        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label04 to label05 with label03;
        catch java.io.IOException from label07 to label08 with label40;
        catch java.lang.IllegalArgumentException from label07 to label08 with label40;
        catch android.util.proto.WireTypeMismatchException from label07 to label08 with label40;
        catch java.lang.Throwable from label07 to label08 with label39;
        catch java.io.IOException from label09 to label10 with label40;
        catch java.lang.IllegalArgumentException from label09 to label10 with label40;
        catch android.util.proto.WireTypeMismatchException from label09 to label10 with label40;
        catch java.lang.Throwable from label09 to label10 with label39;
        catch java.io.IOException from label11 to label12 with label40;
        catch java.lang.IllegalArgumentException from label11 to label12 with label40;
        catch android.util.proto.WireTypeMismatchException from label11 to label12 with label40;
        catch java.lang.Throwable from label11 to label12 with label39;
        catch java.io.IOException from label13 to label14 with label40;
        catch java.lang.IllegalArgumentException from label13 to label14 with label40;
        catch android.util.proto.WireTypeMismatchException from label13 to label14 with label40;
        catch java.lang.Throwable from label13 to label14 with label39;
        catch java.io.IOException from label15 to label16 with label40;
        catch java.lang.IllegalArgumentException from label15 to label16 with label40;
        catch android.util.proto.WireTypeMismatchException from label15 to label16 with label40;
        catch java.lang.Throwable from label15 to label16 with label39;
        catch java.io.IOException from label17 to label18 with label40;
        catch java.lang.IllegalArgumentException from label17 to label18 with label40;
        catch android.util.proto.WireTypeMismatchException from label17 to label18 with label40;
        catch java.lang.Throwable from label17 to label18 with label39;
        catch java.io.IOException from label20 to label21 with label40;
        catch java.lang.IllegalArgumentException from label20 to label21 with label40;
        catch android.util.proto.WireTypeMismatchException from label20 to label21 with label40;
        catch java.lang.Throwable from label20 to label21 with label39;
        catch java.io.IOException from label23 to label24 with label40;
        catch java.lang.IllegalArgumentException from label23 to label24 with label40;
        catch android.util.proto.WireTypeMismatchException from label23 to label24 with label40;
        catch java.lang.Throwable from label23 to label24 with label39;
        catch java.io.IOException from label25 to label26 with label40;
        catch java.lang.IllegalArgumentException from label25 to label26 with label40;
        catch android.util.proto.WireTypeMismatchException from label25 to label26 with label40;
        catch java.lang.Throwable from label25 to label26 with label39;
        catch java.lang.Throwable from label26 to label27 with label30;
        catch java.io.IOException from label28 to label29 with label40;
        catch java.lang.IllegalArgumentException from label28 to label29 with label40;
        catch android.util.proto.WireTypeMismatchException from label28 to label29 with label40;
        catch java.lang.Throwable from label28 to label29 with label39;
        catch java.lang.Throwable from label31 to label32 with label30;
        catch java.io.IOException from label33 to label34 with label40;
        catch java.lang.IllegalArgumentException from label33 to label34 with label40;
        catch android.util.proto.WireTypeMismatchException from label33 to label34 with label40;
        catch java.lang.Throwable from label33 to label34 with label39;
        catch java.io.IOException from label35 to label36 with label37;
        catch java.lang.Throwable from label41 to label42 with label39;
        catch java.lang.Throwable from label43 to label44 with label39;
        catch java.lang.Throwable from label45 to label46 with label39;
        catch java.lang.Throwable from label47 to label48 with label39;
        catch java.lang.Throwable from label49 to label50 with label39;
        catch java.io.IOException from label51 to label52 with label53;
        catch java.lang.Throwable from label55 to label56 with label57;
        catch java.lang.Throwable from label58 to label59 with label57;
        catch java.io.IOException from label61 to label62 with label63;
    }

    android.app.ApplicationExitInfo obtainRawRecordLocked(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.AppExitInfoTracker r0;
        com.android.server.am.ProcessRecord r1;
        android.app.ApplicationExitInfo r2, $r13, r14;
        android.util.Pools$SynchronizedPool $r3;
        java.lang.Object $r4;
        com.android.server.am.HostingRecord $r5, $r12;
        int $i0, $i1, $i2, $i3, $i4, $i5, i9;
        android.content.pm.ApplicationInfo $r6, $r7, $r9;
        java.lang.String $r8, $r10;
        java.lang.String[] $r11;
        long $l6, $l7, $l8;

        r0 := @this: com.android.server.am.AppExitInfoTracker;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        $r3 = r0.<com.android.server.am.AppExitInfoTracker: android.util.Pools$SynchronizedPool mRawRecordsPool>;

        $r4 = virtualinvoke $r3.<android.util.Pools$SynchronizedPool: java.lang.Object acquire()>();

        r2 = (android.app.ApplicationExitInfo) $r4;

        r14 = r2;

        if r2 != null goto label1;

        $r13 = new android.app.ApplicationExitInfo;

        specialinvoke $r13.<android.app.ApplicationExitInfo: void <init>()>();

        r14 = $r13;

     label1:
        $r5 = r1.<com.android.server.am.ProcessRecord: com.android.server.am.HostingRecord hostingRecord>;

        if $r5 == null goto label2;

        $r12 = r1.<com.android.server.am.ProcessRecord: com.android.server.am.HostingRecord hostingRecord>;

        i9 = virtualinvoke $r12.<com.android.server.am.HostingRecord: int getDefiningUid()>();

        goto label3;

     label2:
        i9 = 0;

     label3:
        $i0 = r1.<com.android.server.am.ProcessRecord: int pid>;

        virtualinvoke r14.<android.app.ApplicationExitInfo: void setPid(int)>($i0);

        $i1 = r1.<com.android.server.am.ProcessRecord: int uid>;

        virtualinvoke r14.<android.app.ApplicationExitInfo: void setRealUid(int)>($i1);

        $r6 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i2 = $r6.<android.content.pm.ApplicationInfo: int uid>;

        virtualinvoke r14.<android.app.ApplicationExitInfo: void setPackageUid(int)>($i2);

        if i9 <= 0 goto label4;

        goto label5;

     label4:
        $r7 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        i9 = $r7.<android.content.pm.ApplicationInfo: int uid>;

     label5:
        virtualinvoke r14.<android.app.ApplicationExitInfo: void setDefiningUid(int)>(i9);

        $r8 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        virtualinvoke r14.<android.app.ApplicationExitInfo: void setProcessName(java.lang.String)>($r8);

        $i3 = r1.<com.android.server.am.ProcessRecord: int connectionGroup>;

        virtualinvoke r14.<android.app.ApplicationExitInfo: void setConnectionGroup(int)>($i3);

        $r9 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r10 = $r9.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        virtualinvoke r14.<android.app.ApplicationExitInfo: void setPackageName(java.lang.String)>($r10);

        $r11 = virtualinvoke r1.<com.android.server.am.ProcessRecord: java.lang.String[] getPackageList()>();

        virtualinvoke r14.<android.app.ApplicationExitInfo: void setPackageList(java.lang.String[])>($r11);

        virtualinvoke r14.<android.app.ApplicationExitInfo: void setReason(int)>(0);

        virtualinvoke r14.<android.app.ApplicationExitInfo: void setStatus(int)>(0);

        $i4 = r1.<com.android.server.am.ProcessRecord: int setProcState>;

        $i5 = staticinvoke <android.app.ActivityManager$RunningAppProcessInfo: int procStateToImportance(int)>($i4);

        virtualinvoke r14.<android.app.ApplicationExitInfo: void setImportance(int)>($i5);

        $l6 = r1.<com.android.server.am.ProcessRecord: long lastPss>;

        virtualinvoke r14.<android.app.ApplicationExitInfo: void setPss(long)>($l6);

        $l7 = r1.<com.android.server.am.ProcessRecord: long mLastRss>;

        virtualinvoke r14.<android.app.ApplicationExitInfo: void setRss(long)>($l7);

        $l8 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        virtualinvoke r14.<android.app.ApplicationExitInfo: void setTimestamp(long)>($l8);

        return r14;
    }

    void onPackageRemoved(java.lang.String, int, boolean)
    {
        com.android.server.am.AppExitInfoTracker r0;
        int i0, i1;
        boolean z0, z1;
        java.lang.Object r1;
        com.android.server.am.ActivityManagerService $r2;
        android.content.pm.PackageManagerInternal $r3;
        java.lang.String $r4, r9;
        com.android.server.am.AppExitInfoTracker$AppExitInfoExternalSource $r5, $r6;
        com.android.server.am.AppExitInfoTracker$IsolatedUidRecords $r7;
        java.lang.Throwable $r8;

        r0 := @this: com.android.server.am.AppExitInfoTracker;

        r9 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        if r9 == null goto label10;

        $r2 = r0.<com.android.server.am.AppExitInfoTracker: com.android.server.am.ActivityManagerService mService>;

        $r3 = $r2.<com.android.server.am.ActivityManagerService: android.content.pm.PackageManagerInternal mPackageManagerInt>;

        $r4 = virtualinvoke $r3.<android.content.pm.PackageManagerInternal: java.lang.String getNameForUid(int)>(i0);

        z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r4);

        r1 = r0.<com.android.server.am.AppExitInfoTracker: java.lang.Object mLock>;

        entermonitor r1;

        if z1 == 0 goto label04;

     label01:
        $r5 = r0.<com.android.server.am.AppExitInfoTracker: com.android.server.am.AppExitInfoTracker$AppExitInfoExternalSource mAppExitInfoSourceZygote>;

        virtualinvoke $r5.<com.android.server.am.AppExitInfoTracker$AppExitInfoExternalSource: void removeByUidLocked(int,boolean)>(i0, z0);

        $r6 = r0.<com.android.server.am.AppExitInfoTracker: com.android.server.am.AppExitInfoTracker$AppExitInfoExternalSource mAppExitInfoSourceLmkd>;

        virtualinvoke $r6.<com.android.server.am.AppExitInfoTracker$AppExitInfoExternalSource: void removeByUidLocked(int,boolean)>(i0, z0);

        $r7 = r0.<com.android.server.am.AppExitInfoTracker: com.android.server.am.AppExitInfoTracker$IsolatedUidRecords mIsolatedUidRecords>;

        virtualinvoke $r7.<com.android.server.am.AppExitInfoTracker$IsolatedUidRecords: void removeAppUid(int,boolean)>(i0, z0);

     label02:
        goto label04;

     label03:
        $r8 := @caughtexception;

        goto label08;

     label04:
        if z0 == 0 goto label05;

        i1 = -1;

        goto label06;

     label05:
        i1 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

     label06:
        specialinvoke r0.<com.android.server.am.AppExitInfoTracker: void removePackageLocked(java.lang.String,int,boolean,int)>(r9, i0, z1, i1);

        virtualinvoke r0.<com.android.server.am.AppExitInfoTracker: void schedulePersistProcessExitInfo(boolean)>(1);

        exitmonitor r1;

     label07:
        goto label10;

     label08:
        exitmonitor r1;

     label09:
        throw $r8;

     label10:
        return;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label05 to label06 with label03;
        catch java.lang.Throwable from label06 to label07 with label03;
        catch java.lang.Throwable from label08 to label09 with label03;
    }

    void onSystemReady()
    {
        com.android.server.am.AppExitInfoTracker r0;
        android.os.Handler $r1;
        com.android.server.am._$$Lambda$AppExitInfoTracker$Yc6vluAEWPBi2TSflPrFu351ztU $r2;

        r0 := @this: com.android.server.am.AppExitInfoTracker;

        specialinvoke r0.<com.android.server.am.AppExitInfoTracker: void registerForUserRemoval()>();

        specialinvoke r0.<com.android.server.am.AppExitInfoTracker: void registerForPackageRemoval()>();

        $r1 = staticinvoke <com.android.server.IoThread: android.os.Handler getHandler()>();

        $r2 = new com.android.server.am._$$Lambda$AppExitInfoTracker$Yc6vluAEWPBi2TSflPrFu351ztU;

        specialinvoke $r2.<com.android.server.am._$$Lambda$AppExitInfoTracker$Yc6vluAEWPBi2TSflPrFu351ztU: void <init>(com.android.server.am.AppExitInfoTracker)>(r0);

        virtualinvoke $r1.<android.os.Handler: boolean post(java.lang.Runnable)>($r2);

        return;
    }

    void onUserRemoved(int)
    {
        com.android.server.am.AppExitInfoTracker r0;
        int i0;
        java.lang.Object r1;
        com.android.server.am.AppExitInfoTracker$AppExitInfoExternalSource $r3, $r4;
        com.android.server.am.AppExitInfoTracker$IsolatedUidRecords $r5;
        java.lang.Throwable $r6;

        r0 := @this: com.android.server.am.AppExitInfoTracker;

        i0 := @parameter0: int;

        $r3 = r0.<com.android.server.am.AppExitInfoTracker: com.android.server.am.AppExitInfoTracker$AppExitInfoExternalSource mAppExitInfoSourceZygote>;

        virtualinvoke $r3.<com.android.server.am.AppExitInfoTracker$AppExitInfoExternalSource: void removeByUserId(int)>(i0);

        $r4 = r0.<com.android.server.am.AppExitInfoTracker: com.android.server.am.AppExitInfoTracker$AppExitInfoExternalSource mAppExitInfoSourceLmkd>;

        virtualinvoke $r4.<com.android.server.am.AppExitInfoTracker$AppExitInfoExternalSource: void removeByUserId(int)>(i0);

        $r5 = r0.<com.android.server.am.AppExitInfoTracker: com.android.server.am.AppExitInfoTracker$IsolatedUidRecords mIsolatedUidRecords>;

        virtualinvoke $r5.<com.android.server.am.AppExitInfoTracker$IsolatedUidRecords: void removeByUserId(int)>(i0);

        r1 = r0.<com.android.server.am.AppExitInfoTracker: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        specialinvoke r0.<com.android.server.am.AppExitInfoTracker: void removeByUserIdLocked(int)>(i0);

        virtualinvoke r0.<com.android.server.am.AppExitInfoTracker: void schedulePersistProcessExitInfo(boolean)>(1);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r6 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    void persistProcessExitInfo()
    {
        com.android.server.am.AppExitInfoTracker r0;
        long l0;
        android.util.AtomicFile $r2;
        java.io.File $r3;
        java.lang.Throwable $r4, $r9, $r10;
        java.lang.StringBuilder $r5;
        java.lang.String $r8;
        java.io.FileOutputStream r11, r12;
        android.util.proto.ProtoOutputStream r13;
        java.lang.Object r14, r19;
        com.android.server.am._$$Lambda$AppExitInfoTracker$M7pmR3pU58DetrzQsI3M2_go5XU r15;

        r0 := @this: com.android.server.am.AppExitInfoTracker;

        $r2 = new android.util.AtomicFile;

        $r3 = r0.<com.android.server.am.AppExitInfoTracker: java.io.File mProcExitInfoFile>;

        specialinvoke $r2.<android.util.AtomicFile: void <init>(java.io.File)>($r3);

        r11 = null;

        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

     label01:
        r12 = virtualinvoke $r2.<android.util.AtomicFile: java.io.FileOutputStream startWrite()>();

     label02:
        r11 = r12;

     label03:
        r13 = new android.util.proto.ProtoOutputStream;

     label04:
        r11 = r12;

     label05:
        specialinvoke r13.<android.util.proto.ProtoOutputStream: void <init>(java.io.OutputStream)>(r12);

     label06:
        r11 = r12;

     label07:
        virtualinvoke r13.<android.util.proto.ProtoOutputStream: void write(long,long)>(1112396529665L, l0);

     label08:
        r11 = r12;

     label09:
        r14 = r0.<com.android.server.am.AppExitInfoTracker: java.lang.Object mLock>;

     label10:
        r11 = r12;

     label11:
        entermonitor r14;

     label12:
        r15 = new com.android.server.am._$$Lambda$AppExitInfoTracker$M7pmR3pU58DetrzQsI3M2_go5XU;

        specialinvoke r15.<com.android.server.am._$$Lambda$AppExitInfoTracker$M7pmR3pU58DetrzQsI3M2_go5XU: void <init>(android.util.proto.ProtoOutputStream)>(r13);

        specialinvoke r0.<com.android.server.am.AppExitInfoTracker: void forEachPackageLocked(java.util.function.BiFunction)>(r15);

        r0.<com.android.server.am.AppExitInfoTracker: long mLastAppExitInfoPersistTimestamp> = l0;

        exitmonitor r14;

     label13:
        r11 = r12;

     label14:
        virtualinvoke r13.<android.util.proto.ProtoOutputStream: void flush()>();

     label15:
        r11 = r12;

     label16:
        virtualinvoke $r2.<android.util.AtomicFile: void finishWrite(java.io.FileOutputStream)>(r12);

     label17:
        goto label23;

     label18:
        $r10 := @caughtexception;

     label19:
        exitmonitor r14;

     label20:
        r11 = r12;

     label21:
        throw $r10;

     label22:
        $r4 := @caughtexception;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to write historical app exit info into persistent storage: ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r8);

        virtualinvoke $r2.<android.util.AtomicFile: void failWrite(java.io.FileOutputStream)>(r11);

     label23:
        r19 = r0.<com.android.server.am.AppExitInfoTracker: java.lang.Object mLock>;

        entermonitor r19;

     label24:
        r0.<com.android.server.am.AppExitInfoTracker: java.lang.Runnable mAppExitInfoPersistTask> = null;

        exitmonitor r19;

     label25:
        return;

     label26:
        $r9 := @caughtexception;

     label27:
        exitmonitor r19;

     label28:
        throw $r9;

        catch java.io.IOException from label01 to label02 with label22;
        catch java.io.IOException from label03 to label04 with label22;
        catch java.io.IOException from label05 to label06 with label22;
        catch java.io.IOException from label07 to label08 with label22;
        catch java.io.IOException from label09 to label10 with label22;
        catch java.io.IOException from label11 to label12 with label22;
        catch java.lang.Throwable from label12 to label13 with label18;
        catch java.io.IOException from label14 to label15 with label22;
        catch java.io.IOException from label16 to label17 with label22;
        catch java.lang.Throwable from label19 to label20 with label18;
        catch java.io.IOException from label21 to label22 with label22;
        catch java.lang.Throwable from label24 to label25 with label26;
        catch java.lang.Throwable from label27 to label28 with label26;
    }

    void recycleRawRecordLocked(android.app.ApplicationExitInfo)
    {
        com.android.server.am.AppExitInfoTracker r0;
        android.app.ApplicationExitInfo r1;
        android.util.Pools$SynchronizedPool $r2;

        r0 := @this: com.android.server.am.AppExitInfoTracker;

        r1 := @parameter0: android.app.ApplicationExitInfo;

        virtualinvoke r1.<android.app.ApplicationExitInfo: void setProcessName(java.lang.String)>(null);

        virtualinvoke r1.<android.app.ApplicationExitInfo: void setDescription(java.lang.String)>(null);

        virtualinvoke r1.<android.app.ApplicationExitInfo: void setPackageList(java.lang.String[])>(null);

        $r2 = r0.<com.android.server.am.AppExitInfoTracker: android.util.Pools$SynchronizedPool mRawRecordsPool>;

        virtualinvoke $r2.<android.util.Pools$SynchronizedPool: boolean release(java.lang.Object)>(r1);

        return;
    }

    void scheduleLogAnrTrace(int, int, java.lang.String[], java.io.File, long, long)
    {
        com.android.server.am.AppExitInfoTracker r0;
        int i0, i1;
        java.lang.String[] r1;
        java.io.File r2;
        long l2, l3;
        com.android.server.am._$$Lambda$VSkN0NYXfJkOHZPqzFU_0f4s4R4 $r3;
        com.android.server.am.AppExitInfoTracker$KillHandler $r4;
        java.lang.Integer $r5, $r6;
        java.lang.Long $r7, $r8;
        android.os.Message $r9;

        r0 := @this: com.android.server.am.AppExitInfoTracker;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String[];

        r2 := @parameter3: java.io.File;

        l2 := @parameter4: long;

        l3 := @parameter5: long;

        $r4 = r0.<com.android.server.am.AppExitInfoTracker: com.android.server.am.AppExitInfoTracker$KillHandler mKillHandler>;

        $r3 = new com.android.server.am._$$Lambda$VSkN0NYXfJkOHZPqzFU_0f4s4R4;

        specialinvoke $r3.<com.android.server.am._$$Lambda$VSkN0NYXfJkOHZPqzFU_0f4s4R4: void <init>(com.android.server.am.AppExitInfoTracker)>(r0);

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l2);

        $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l3);

        $r9 = staticinvoke <com.android.internal.util.function.pooled.PooledLambda: android.os.Message obtainMessage(com.android.internal.util.function.HexConsumer,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r3, $r5, $r6, r1, r2, $r7, $r8);

        virtualinvoke $r4.<com.android.server.am.AppExitInfoTracker$KillHandler: boolean sendMessage(android.os.Message)>($r9);

        return;
    }

    void scheduleNoteAppKill(int, int, int, int, java.lang.String)
    {
        com.android.server.am.AppExitInfoTracker r0;
        int i0, i1, i2, i3;
        java.lang.Object r1;
        com.android.server.am.ActivityManagerService$PidMap r2, $r6;
        com.android.server.am.ProcessRecord r3;
        boolean $z0;
        com.android.server.am.ActivityManagerService $r4, $r5;
        java.lang.Throwable $r7, $r8;
        java.lang.String r9;

        r0 := @this: com.android.server.am.AppExitInfoTracker;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r9 := @parameter4: java.lang.String;

        r1 = r0.<com.android.server.am.AppExitInfoTracker: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $z0 = r0.<com.android.server.am.AppExitInfoTracker: boolean mAppExitInfoLoaded>;

        if $z0 != 0 goto label03;

        exitmonitor r1;

     label02:
        return;

     label03:
        $r4 = r0.<com.android.server.am.AppExitInfoTracker: com.android.server.am.ActivityManagerService mService>;

        r2 = $r4.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        entermonitor r2;

     label04:
        $r5 = r0.<com.android.server.am.AppExitInfoTracker: com.android.server.am.ActivityManagerService mService>;

        $r6 = $r5.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        r3 = virtualinvoke $r6.<com.android.server.am.ActivityManagerService$PidMap: com.android.server.am.ProcessRecord get(int)>(i0);

        exitmonitor r2;

     label05:
        if r3 != null goto label06;

        goto label07;

     label06:
        virtualinvoke r0.<com.android.server.am.AppExitInfoTracker: void scheduleNoteAppKill(com.android.server.am.ProcessRecord,int,int,java.lang.String)>(r3, i2, i3, r9);

     label07:
        exitmonitor r1;

     label08:
        return;

     label09:
        $r7 := @caughtexception;

     label10:
        exitmonitor r2;

     label11:
        throw $r7;

     label12:
        $r8 := @caughtexception;

     label13:
        exitmonitor r1;

     label14:
        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label07 to label08 with label12;
        catch java.lang.Throwable from label10 to label11 with label09;
        catch java.lang.Throwable from label11 to label12 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    void scheduleNoteAppKill(com.android.server.am.ProcessRecord, int, int, java.lang.String)
    {
        com.android.server.am.AppExitInfoTracker r0;
        int i0, i1;
        java.lang.String r1;
        java.lang.Object r2;
        boolean $z0;
        android.content.pm.ApplicationInfo $r3;
        com.android.server.am.AppExitInfoTracker$KillHandler $r4;
        android.os.Message $r5;
        java.lang.Throwable $r6;
        com.android.server.am.ProcessRecord r7;
        android.app.ApplicationExitInfo r8;

        r0 := @this: com.android.server.am.AppExitInfoTracker;

        r7 := @parameter0: com.android.server.am.ProcessRecord;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: java.lang.String;

        r2 = r0.<com.android.server.am.AppExitInfoTracker: java.lang.Object mLock>;

        entermonitor r2;

     label01:
        $z0 = r0.<com.android.server.am.AppExitInfoTracker: boolean mAppExitInfoLoaded>;

        if $z0 != 0 goto label03;

        exitmonitor r2;

     label02:
        return;

     label03:
        if r7 == null goto label08;

     label04:
        $r3 = r7.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        if $r3 != null goto label06;

     label05:
        goto label08;

     label06:
        r8 = virtualinvoke r0.<com.android.server.am.AppExitInfoTracker: android.app.ApplicationExitInfo obtainRawRecordLocked(com.android.server.am.ProcessRecord)>(r7);

        virtualinvoke r8.<android.app.ApplicationExitInfo: void setReason(int)>(i0);

        virtualinvoke r8.<android.app.ApplicationExitInfo: void setSubReason(int)>(i1);

        virtualinvoke r8.<android.app.ApplicationExitInfo: void setDescription(java.lang.String)>(r1);

        $r4 = r0.<com.android.server.am.AppExitInfoTracker: com.android.server.am.AppExitInfoTracker$KillHandler mKillHandler>;

        $r5 = virtualinvoke $r4.<com.android.server.am.AppExitInfoTracker$KillHandler: android.os.Message obtainMessage(int,java.lang.Object)>(4104, r8);

        virtualinvoke $r5.<android.os.Message: void sendToTarget()>();

        exitmonitor r2;

     label07:
        return;

     label08:
        exitmonitor r2;

     label09:
        return;

     label10:
        $r6 := @caughtexception;

     label11:
        exitmonitor r2;

     label12:
        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    void scheduleNoteLmkdProcKilled(int, int)
    {
        com.android.server.am.AppExitInfoTracker r0;
        int i0, i1;
        com.android.server.am.AppExitInfoTracker$KillHandler $r1;
        android.os.Message $r2;

        r0 := @this: com.android.server.am.AppExitInfoTracker;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.server.am.AppExitInfoTracker: com.android.server.am.AppExitInfoTracker$KillHandler mKillHandler>;

        $r2 = virtualinvoke $r1.<com.android.server.am.AppExitInfoTracker$KillHandler: android.os.Message obtainMessage(int,int,int)>(4101, i0, i1);

        virtualinvoke $r2.<android.os.Message: void sendToTarget()>();

        return;
    }

    void scheduleNoteProcessDied(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.AppExitInfoTracker r0;
        java.lang.Object r1;
        android.content.pm.ApplicationInfo $r2;
        boolean $z0;
        com.android.server.am.AppExitInfoTracker$KillHandler $r3;
        android.app.ApplicationExitInfo $r4;
        android.os.Message $r5;
        java.lang.Throwable $r6;
        com.android.server.am.ProcessRecord r7;

        r0 := @this: com.android.server.am.AppExitInfoTracker;

        r7 := @parameter0: com.android.server.am.ProcessRecord;

        if r7 == null goto label9;

        $r2 = r7.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        if $r2 != null goto label1;

        goto label9;

     label1:
        r1 = r0.<com.android.server.am.AppExitInfoTracker: java.lang.Object mLock>;

        entermonitor r1;

     label2:
        $z0 = r0.<com.android.server.am.AppExitInfoTracker: boolean mAppExitInfoLoaded>;

        if $z0 != 0 goto label4;

        exitmonitor r1;

     label3:
        return;

     label4:
        $r3 = r0.<com.android.server.am.AppExitInfoTracker: com.android.server.am.AppExitInfoTracker$KillHandler mKillHandler>;

        $r4 = virtualinvoke r0.<com.android.server.am.AppExitInfoTracker: android.app.ApplicationExitInfo obtainRawRecordLocked(com.android.server.am.ProcessRecord)>(r7);

        $r5 = virtualinvoke $r3.<com.android.server.am.AppExitInfoTracker$KillHandler: android.os.Message obtainMessage(int,java.lang.Object)>(4103, $r4);

        virtualinvoke $r5.<android.os.Message: void sendToTarget()>();

        exitmonitor r1;

     label5:
        return;

     label6:
        $r6 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r6;

     label9:
        return;

        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    void schedulePersistProcessExitInfo(boolean)
    {
        com.android.server.am.AppExitInfoTracker r0;
        boolean z0;
        java.lang.Object r1;
        android.os.Handler r2, $r5;
        java.lang.Runnable $r3, $r4, $r6, r9;
        java.lang.Throwable $r7;
        com.android.server.am._$$Lambda$nvO8eEA3_tju6oGhhJ2BoQfYghg r8;
        long l0;

        r0 := @this: com.android.server.am.AppExitInfoTracker;

        z0 := @parameter0: boolean;

        r1 = r0.<com.android.server.am.AppExitInfoTracker: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r3 = r0.<com.android.server.am.AppExitInfoTracker: java.lang.Runnable mAppExitInfoPersistTask>;

        if $r3 == null goto label03;

     label02:
        if z0 == 0 goto label08;

     label03:
        $r4 = r0.<com.android.server.am.AppExitInfoTracker: java.lang.Runnable mAppExitInfoPersistTask>;

        if $r4 == null goto label04;

        $r5 = staticinvoke <com.android.server.IoThread: android.os.Handler getHandler()>();

        $r6 = r0.<com.android.server.am.AppExitInfoTracker: java.lang.Runnable mAppExitInfoPersistTask>;

        virtualinvoke $r5.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r6);

     label04:
        r8 = new com.android.server.am._$$Lambda$nvO8eEA3_tju6oGhhJ2BoQfYghg;

        specialinvoke r8.<com.android.server.am._$$Lambda$nvO8eEA3_tju6oGhhJ2BoQfYghg: void <init>(com.android.server.am.AppExitInfoTracker)>(r0);

        r0.<com.android.server.am.AppExitInfoTracker: java.lang.Runnable mAppExitInfoPersistTask> = r8;

        r2 = staticinvoke <com.android.server.IoThread: android.os.Handler getHandler()>();

        r9 = r0.<com.android.server.am.AppExitInfoTracker: java.lang.Runnable mAppExitInfoPersistTask>;

     label05:
        if z0 == 0 goto label06;

        l0 = 0L;

        goto label07;

     label06:
        l0 = <com.android.server.am.AppExitInfoTracker: long APP_EXIT_INFO_PERSIST_INTERVAL>;

     label07:
        virtualinvoke r2.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>(r9, l0);

     label08:
        exitmonitor r1;

     label09:
        return;

     label10:
        $r7 := @caughtexception;

     label11:
        exitmonitor r1;

     label12:
        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    void setLmkdKillListener(com.android.server.am.AppExitInfoTracker$LmkdKillListener)
    {
        com.android.server.am.AppExitInfoTracker r0;
        java.lang.Object r1;
        com.android.server.am.AppExitInfoTracker$AppExitInfoExternalSource r2;
        com.android.server.am._$$Lambda$AppExitInfoTracker$LrV5fgRdrB2bonNSZZAbUAXpryI r3;
        java.lang.Throwable $r4;
        com.android.server.am.AppExitInfoTracker$LmkdKillListener r5;

        r0 := @this: com.android.server.am.AppExitInfoTracker;

        r5 := @parameter0: com.android.server.am.AppExitInfoTracker$LmkdKillListener;

        r1 = r0.<com.android.server.am.AppExitInfoTracker: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r2 = r0.<com.android.server.am.AppExitInfoTracker: com.android.server.am.AppExitInfoTracker$AppExitInfoExternalSource mAppExitInfoSourceLmkd>;

        r3 = new com.android.server.am._$$Lambda$AppExitInfoTracker$LrV5fgRdrB2bonNSZZAbUAXpryI;

        specialinvoke r3.<com.android.server.am._$$Lambda$AppExitInfoTracker$LrV5fgRdrB2bonNSZZAbUAXpryI: void <init>(com.android.server.am.AppExitInfoTracker$LmkdKillListener)>(r5);

        virtualinvoke r2.<com.android.server.am.AppExitInfoTracker$AppExitInfoExternalSource: void setOnProcDiedListener(java.util.function.BiConsumer)>(r3);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    void setProcessStateSummary(int, int, byte[])
    {
        com.android.server.am.AppExitInfoTracker r0;
        int i0, i1;
        java.lang.Object r1;
        java.lang.Integer r2;
        com.android.server.am.AppExitInfoTracker$IsolatedUidRecords $r3;
        com.android.server.am.'-$$Lambda$WVd6ghNMbVDukmkxia3ZwNeZzEY' $r4;
        android.util.SparseArray $r5;
        java.lang.Throwable $r6;
        byte[] r7;
        java.util.function.Supplier r9;

        r0 := @this: com.android.server.am.AppExitInfoTracker;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        r7 := @parameter2: byte[];

        r1 = r0.<com.android.server.am.AppExitInfoTracker: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.am.AppExitInfoTracker: com.android.server.am.AppExitInfoTracker$IsolatedUidRecords mIsolatedUidRecords>;

        r2 = virtualinvoke $r3.<com.android.server.am.AppExitInfoTracker$IsolatedUidRecords: java.lang.Integer getUidByIsolatedUid(int)>(i1);

     label2:
        if r2 == null goto label4;

     label3:
        i1 = virtualinvoke r2.<java.lang.Integer: int intValue()>();

     label4:
        $r5 = r0.<com.android.server.am.AppExitInfoTracker: android.util.SparseArray mActiveAppStateSummary>;

        $r4 = <com.android.server.am._$$Lambda$WVd6ghNMbVDukmkxia3ZwNeZzEY: com.android.server.am.'-$$Lambda$WVd6ghNMbVDukmkxia3ZwNeZzEY' INSTANCE>;

        r9 = (java.util.function.Supplier) $r4;

        staticinvoke <com.android.server.am.AppExitInfoTracker: void putToSparse2dArray(android.util.SparseArray,int,int,java.lang.Object,java.util.function.Supplier,java.util.function.Consumer)>($r5, i1, i0, r7, r9, null);

        exitmonitor r1;

     label5:
        return;

     label6:
        $r6 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }
}
