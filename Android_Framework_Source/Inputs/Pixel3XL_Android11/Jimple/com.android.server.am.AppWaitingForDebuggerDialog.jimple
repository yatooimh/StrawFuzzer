final class com.android.server.am.AppWaitingForDebuggerDialog extends com.android.server.am.BaseErrorDialog
{
    private java.lang.CharSequence mAppName;
    private final android.os.Handler mHandler;
    final com.android.server.am.ProcessRecord mProc;
    final com.android.server.am.ActivityManagerService mService;

    public void <init>(com.android.server.am.ActivityManagerService, android.content.Context, com.android.server.am.ProcessRecord)
    {
        com.android.server.am.AppWaitingForDebuggerDialog r0;
        com.android.server.am.ProcessRecord r1;
        com.android.server.am.AppWaitingForDebuggerDialog$1 $r2;
        android.content.pm.PackageManager $r3;
        android.content.pm.ApplicationInfo $r4, $r31;
        java.lang.CharSequence $r5, $r14, r23;
        java.lang.StringBuilder $r6, $r29;
        java.lang.String $r8, $r17, $r24, $r32, $r33;
        int $i0;
        com.android.server.am.ActivityManagerService r20;
        android.content.Context r21;
        android.os.Handler $r25;
        android.os.Message $r26;
        android.view.Window $r27, $r34;
        android.view.WindowManager$LayoutParams r28;

        r0 := @this: com.android.server.am.AppWaitingForDebuggerDialog;

        r20 := @parameter0: com.android.server.am.ActivityManagerService;

        r21 := @parameter1: android.content.Context;

        r1 := @parameter2: com.android.server.am.ProcessRecord;

        specialinvoke r0.<com.android.server.am.BaseErrorDialog: void <init>(android.content.Context)>(r21);

        $r2 = new com.android.server.am.AppWaitingForDebuggerDialog$1;

        specialinvoke $r2.<com.android.server.am.AppWaitingForDebuggerDialog$1: void <init>(com.android.server.am.AppWaitingForDebuggerDialog)>(r0);

        r0.<com.android.server.am.AppWaitingForDebuggerDialog: android.os.Handler mHandler> = $r2;

        r0.<com.android.server.am.AppWaitingForDebuggerDialog: com.android.server.am.ActivityManagerService mService> = r20;

        r0.<com.android.server.am.AppWaitingForDebuggerDialog: com.android.server.am.ProcessRecord mProc> = r1;

        $r3 = virtualinvoke r21.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r4 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r5 = virtualinvoke $r3.<android.content.pm.PackageManager: java.lang.CharSequence getApplicationLabel(android.content.pm.ApplicationInfo)>($r4);

        r0.<com.android.server.am.AppWaitingForDebuggerDialog: java.lang.CharSequence mAppName> = $r5;

        virtualinvoke r0.<com.android.server.am.AppWaitingForDebuggerDialog: void setCancelable(boolean)>(0);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        r23 = r0.<com.android.server.am.AppWaitingForDebuggerDialog: java.lang.CharSequence mAppName>;

        if r23 == null goto label1;

        $i0 = interfaceinvoke r23.<java.lang.CharSequence: int length()>();

        if $i0 <= 0 goto label1;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Application ");

        $r14 = r0.<com.android.server.am.AppWaitingForDebuggerDialog: java.lang.CharSequence mAppName>;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r14);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (process ");

        $r17 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        goto label2;

     label1:
        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Process ");

        $r8 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

     label2:
        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is waiting for the debugger to attach.");

        $r24 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.am.AppWaitingForDebuggerDialog: void setMessage(java.lang.CharSequence)>($r24);

        $r25 = r0.<com.android.server.am.AppWaitingForDebuggerDialog: android.os.Handler mHandler>;

        $r26 = virtualinvoke $r25.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(1, r1);

        virtualinvoke r0.<com.android.server.am.AppWaitingForDebuggerDialog: void setButton(int,java.lang.CharSequence,android.os.Message)>(-1, "Force Close", $r26);

        virtualinvoke r0.<com.android.server.am.AppWaitingForDebuggerDialog: void setTitle(java.lang.CharSequence)>("Waiting For Debugger");

        $r27 = virtualinvoke r0.<com.android.server.am.AppWaitingForDebuggerDialog: android.view.Window getWindow()>();

        r28 = virtualinvoke $r27.<android.view.Window: android.view.WindowManager$LayoutParams getAttributes()>();

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Waiting For Debugger: ");

        $r31 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r32 = $r31.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        $r33 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r28.<android.view.WindowManager$LayoutParams: void setTitle(java.lang.CharSequence)>($r33);

        $r34 = virtualinvoke r0.<com.android.server.am.AppWaitingForDebuggerDialog: android.view.Window getWindow()>();

        virtualinvoke $r34.<android.view.Window: void setAttributes(android.view.WindowManager$LayoutParams)>(r28);

        return;
    }

    public void onStop()
    {
        com.android.server.am.AppWaitingForDebuggerDialog r0;

        r0 := @this: com.android.server.am.AppWaitingForDebuggerDialog;

        return;
    }
}
