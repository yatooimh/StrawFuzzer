public class com.android.server.am.AssistDataRequester extends android.app.IAssistDataReceiver$Stub
{
    public static final java.lang.String KEY_RECEIVER_EXTRA_COUNT;
    public static final java.lang.String KEY_RECEIVER_EXTRA_INDEX;
    public android.app.IActivityTaskManager mActivityTaskManager;
    private android.app.AppOpsManager mAppOpsManager;
    private final java.util.ArrayList mAssistData;
    private final java.util.ArrayList mAssistScreenshot;
    private com.android.server.am.AssistDataRequester$AssistDataRequesterCallbacks mCallbacks;
    private java.lang.Object mCallbacksLock;
    private boolean mCanceled;
    private android.content.Context mContext;
    private int mPendingDataCount;
    private int mPendingScreenshotCount;
    private int mRequestScreenshotAppOps;
    private int mRequestStructureAppOps;
    private android.view.IWindowManager mWindowManager;

    public void <init>(android.content.Context, android.view.IWindowManager, android.app.AppOpsManager, com.android.server.am.AssistDataRequester$AssistDataRequesterCallbacks, java.lang.Object, int, int)
    {
        com.android.server.am.AssistDataRequester r0;
        android.content.Context r1;
        android.view.IWindowManager r2;
        android.app.AppOpsManager r3;
        com.android.server.am.AssistDataRequester$AssistDataRequesterCallbacks r4;
        java.lang.Object r5;
        int i0, i1;
        java.util.ArrayList $r6, $r7;
        android.app.IActivityTaskManager $r8;

        r0 := @this: com.android.server.am.AssistDataRequester;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.view.IWindowManager;

        r3 := @parameter2: android.app.AppOpsManager;

        r4 := @parameter3: com.android.server.am.AssistDataRequester$AssistDataRequesterCallbacks;

        r5 := @parameter4: java.lang.Object;

        i0 := @parameter5: int;

        i1 := @parameter6: int;

        specialinvoke r0.<android.app.IAssistDataReceiver$Stub: void <init>()>();

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.AssistDataRequester: java.util.ArrayList mAssistData> = $r6;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.AssistDataRequester: java.util.ArrayList mAssistScreenshot> = $r7;

        r0.<com.android.server.am.AssistDataRequester: com.android.server.am.AssistDataRequester$AssistDataRequesterCallbacks mCallbacks> = r4;

        r0.<com.android.server.am.AssistDataRequester: java.lang.Object mCallbacksLock> = r5;

        r0.<com.android.server.am.AssistDataRequester: android.view.IWindowManager mWindowManager> = r2;

        $r8 = staticinvoke <android.app.ActivityTaskManager: android.app.IActivityTaskManager getService()>();

        r0.<com.android.server.am.AssistDataRequester: android.app.IActivityTaskManager mActivityTaskManager> = $r8;

        r0.<com.android.server.am.AssistDataRequester: android.content.Context mContext> = r1;

        r0.<com.android.server.am.AssistDataRequester: android.app.AppOpsManager mAppOpsManager> = r3;

        r0.<com.android.server.am.AssistDataRequester: int mRequestStructureAppOps> = i0;

        r0.<com.android.server.am.AssistDataRequester: int mRequestScreenshotAppOps> = i1;

        return;
    }

    private void dispatchAssistDataReceived(android.os.Bundle)
    {
        com.android.server.am.AssistDataRequester r0;
        android.os.Bundle r1, r3;
        com.android.server.am.AssistDataRequester$AssistDataRequesterCallbacks $r2;
        int i0, i1;

        r0 := @this: com.android.server.am.AssistDataRequester;

        r1 := @parameter0: android.os.Bundle;

        i0 = 0;

        i1 = 0;

        if r1 == null goto label1;

        r3 = virtualinvoke r1.<android.os.Bundle: android.os.Bundle getBundle(java.lang.String)>("receiverExtras");

        goto label2;

     label1:
        r3 = null;

     label2:
        if r3 == null goto label3;

        i0 = virtualinvoke r3.<android.os.Bundle: int getInt(java.lang.String)>("index");

        i1 = virtualinvoke r3.<android.os.Bundle: int getInt(java.lang.String)>("count");

     label3:
        $r2 = r0.<com.android.server.am.AssistDataRequester: com.android.server.am.AssistDataRequester$AssistDataRequesterCallbacks mCallbacks>;

        interfaceinvoke $r2.<com.android.server.am.AssistDataRequester$AssistDataRequesterCallbacks: void onAssistDataReceivedLocked(android.os.Bundle,int,int)>(r1, i0, i1);

        return;
    }

    private void dispatchAssistScreenshotReceived(android.graphics.Bitmap)
    {
        com.android.server.am.AssistDataRequester r0;
        android.graphics.Bitmap r1;
        com.android.server.am.AssistDataRequester$AssistDataRequesterCallbacks $r2;

        r0 := @this: com.android.server.am.AssistDataRequester;

        r1 := @parameter0: android.graphics.Bitmap;

        $r2 = r0.<com.android.server.am.AssistDataRequester: com.android.server.am.AssistDataRequester$AssistDataRequesterCallbacks mCallbacks>;

        interfaceinvoke $r2.<com.android.server.am.AssistDataRequester$AssistDataRequesterCallbacks: void onAssistScreenshotReceivedLocked(android.graphics.Bitmap)>(r1);

        return;
    }

    private void flushPendingAssistData()
    {
        com.android.server.am.AssistDataRequester r0;
        java.util.ArrayList $r1, $r2, $r3, $r4, $r5, $r8;
        java.lang.Object $r6, $r9;
        android.graphics.Bitmap $r7;
        android.os.Bundle $r10;
        int i0, i1, i2, i3;

        r0 := @this: com.android.server.am.AssistDataRequester;

        $r1 = r0.<com.android.server.am.AssistDataRequester: java.util.ArrayList mAssistData>;

        i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r8 = r0.<com.android.server.am.AssistDataRequester: java.util.ArrayList mAssistData>;

        $r9 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r10 = (android.os.Bundle) $r9;

        specialinvoke r0.<com.android.server.am.AssistDataRequester: void dispatchAssistDataReceived(android.os.Bundle)>($r10);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r2 = r0.<com.android.server.am.AssistDataRequester: java.util.ArrayList mAssistData>;

        virtualinvoke $r2.<java.util.ArrayList: void clear()>();

        $r3 = r0.<com.android.server.am.AssistDataRequester: java.util.ArrayList mAssistScreenshot>;

        i2 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i3 = 0;

     label3:
        if i3 >= i2 goto label4;

        $r5 = r0.<com.android.server.am.AssistDataRequester: java.util.ArrayList mAssistScreenshot>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        $r7 = (android.graphics.Bitmap) $r6;

        specialinvoke r0.<com.android.server.am.AssistDataRequester: void dispatchAssistScreenshotReceived(android.graphics.Bitmap)>($r7);

        i3 = i3 + 1;

        goto label3;

     label4:
        $r4 = r0.<com.android.server.am.AssistDataRequester: java.util.ArrayList mAssistScreenshot>;

        virtualinvoke $r4.<java.util.ArrayList: void clear()>();

        return;
    }

    private void requestData(java.util.List, boolean, boolean, boolean, boolean, boolean, int, java.lang.String)
    {
        com.android.server.am.AssistDataRequester r0;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6, $z7, z8, z9, z10, z11, z12, z13, z14, z15;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11;
        java.lang.String r1;
        android.os.IBinder r2;
        android.app.IActivityTaskManager r3, $r4, $r17;
        android.app.AppOpsManager $r5, $r10;
        com.android.server.am.AssistDataRequester$AssistDataRequesterCallbacks $r6, $r11, $r15;
        java.util.ArrayList $r7, $r12, $r16, $r24, $r25;
        android.content.Context $r8, $r14;
        android.view.IWindowManager $r9;
        java.lang.Object $r13;
        android.os.RemoteException $r18, $r19, $r20, $r21, $r22;
        java.util.List r23;
        android.os.Bundle r26;

        r0 := @this: com.android.server.am.AssistDataRequester;

        r23 := @parameter0: java.util.List;

        z0 := @parameter1: boolean;

        z8 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        z9 := @parameter4: boolean;

        z2 := @parameter5: boolean;

        i0 := @parameter6: int;

        r1 := @parameter7: java.lang.String;

        $z3 = interfaceinvoke r23.<java.util.List: boolean isEmpty()>();

        if $z3 == 0 goto label01;

        specialinvoke r0.<com.android.server.am.AssistDataRequester: void tryDispatchRequestComplete()>();

        return;

     label01:
        $r4 = r0.<com.android.server.am.AssistDataRequester: android.app.IActivityTaskManager mActivityTaskManager>;

        z10 = interfaceinvoke $r4.<android.app.IActivityTaskManager: boolean isAssistDataAllowedOnCurrentActivity()>();

     label02:
        goto label04;

     label03:
        $r19 := @caughtexception;

        z10 = 0;

     label04:
        if z8 == 0 goto label05;

        if z10 == 0 goto label05;

        $i10 = r0.<com.android.server.am.AssistDataRequester: int mRequestScreenshotAppOps>;

        if $i10 == -1 goto label05;

        z11 = 1;

        goto label06;

     label05:
        z11 = 0;

     label06:
        z12 = z2 & z11;

        r0.<com.android.server.am.AssistDataRequester: boolean mCanceled> = 0;

        r0.<com.android.server.am.AssistDataRequester: int mPendingDataCount> = 0;

        r0.<com.android.server.am.AssistDataRequester: int mPendingScreenshotCount> = 0;

        $r24 = r0.<com.android.server.am.AssistDataRequester: java.util.ArrayList mAssistData>;

        virtualinvoke $r24.<java.util.ArrayList: void clear()>();

        $r25 = r0.<com.android.server.am.AssistDataRequester: java.util.ArrayList mAssistScreenshot>;

        virtualinvoke $r25.<java.util.ArrayList: void clear()>();

        if z8 == 0 goto label35;

        $r10 = r0.<com.android.server.am.AssistDataRequester: android.app.AppOpsManager mAppOpsManager>;

        $i6 = r0.<com.android.server.am.AssistDataRequester: int mRequestStructureAppOps>;

        $i7 = virtualinvoke $r10.<android.app.AppOpsManager: int checkOpNoThrow(int,int,java.lang.String)>($i6, i0, r1);

        if $i7 != 0 goto label32;

        $z6 = z9 & z10;

        if $z6 == 0 goto label32;

        i1 = interfaceinvoke r23.<java.util.List: int size()>();

        i11 = 0;

     label07:
        if i11 >= i1 goto label31;

        $r13 = interfaceinvoke r23.<java.util.List: java.lang.Object get(int)>(i11);

        r2 = (android.os.IBinder) $r13;

     label08:
        $r14 = r0.<com.android.server.am.AssistDataRequester: android.content.Context mContext>;

        staticinvoke <com.android.internal.logging.MetricsLogger: void count(android.content.Context,java.lang.String,int)>($r14, "assist_with_context", 1);

        r26 = new android.os.Bundle;

        specialinvoke r26.<android.os.Bundle: void <init>()>();

        virtualinvoke r26.<android.os.Bundle: void putInt(java.lang.String,int)>("index", i11);

        virtualinvoke r26.<android.os.Bundle: void putInt(java.lang.String,int)>("count", i1);

     label09:
        if z0 == 0 goto label13;

     label10:
        $r17 = r0.<com.android.server.am.AssistDataRequester: android.app.IActivityTaskManager mActivityTaskManager>;

        z13 = interfaceinvoke $r17.<android.app.IActivityTaskManager: boolean requestAutofillData(android.app.IAssistDataReceiver,android.os.Bundle,android.os.IBinder,int)>(r0, r26, r2, 0);

     label11:
        goto label19;

     label12:
        $r21 := @caughtexception;

        goto label30;

     label13:
        r3 = r0.<com.android.server.am.AssistDataRequester: android.app.IActivityTaskManager mActivityTaskManager>;

     label14:
        if i11 != 0 goto label15;

        z14 = 1;

        goto label16;

     label15:
        z14 = 0;

     label16:
        if i11 != 0 goto label17;

        z15 = 1;

        goto label18;

     label17:
        z15 = 0;

     label18:
        z13 = interfaceinvoke r3.<android.app.IActivityTaskManager: boolean requestAssistContextExtras(int,android.app.IAssistDataReceiver,android.os.Bundle,android.os.IBinder,boolean,boolean)>(1, r0, r26, r2, z14, z15);

     label19:
        if z13 == 0 goto label23;

     label20:
        $i8 = r0.<com.android.server.am.AssistDataRequester: int mPendingDataCount>;

        $i9 = $i8 + 1;

        r0.<com.android.server.am.AssistDataRequester: int mPendingDataCount> = $i9;

     label21:
        goto label28;

     label22:
        $r20 := @caughtexception;

        goto label30;

     label23:
        if i11 != 0 goto label28;

     label24:
        $r15 = r0.<com.android.server.am.AssistDataRequester: com.android.server.am.AssistDataRequester$AssistDataRequesterCallbacks mCallbacks>;

        $z7 = interfaceinvoke $r15.<com.android.server.am.AssistDataRequester$AssistDataRequesterCallbacks: boolean canHandleReceivedAssistDataLocked()>();

        if $z7 == 0 goto label26;

        specialinvoke r0.<com.android.server.am.AssistDataRequester: void dispatchAssistDataReceived(android.os.Bundle)>(null);

     label25:
        goto label27;

     label26:
        $r16 = r0.<com.android.server.am.AssistDataRequester: java.util.ArrayList mAssistData>;

        virtualinvoke $r16.<java.util.ArrayList: boolean add(java.lang.Object)>(null);

     label27:
        z12 = 0;

        goto label31;

     label28:
        goto label30;

     label29:
        $r22 := @caughtexception;

     label30:
        i11 = i11 + 1;

        goto label07;

     label31:
        goto label35;

     label32:
        $r11 = r0.<com.android.server.am.AssistDataRequester: com.android.server.am.AssistDataRequester$AssistDataRequesterCallbacks mCallbacks>;

        $z5 = interfaceinvoke $r11.<com.android.server.am.AssistDataRequester$AssistDataRequesterCallbacks: boolean canHandleReceivedAssistDataLocked()>();

        if $z5 == 0 goto label33;

        specialinvoke r0.<com.android.server.am.AssistDataRequester: void dispatchAssistDataReceived(android.os.Bundle)>(null);

        goto label34;

     label33:
        $r12 = r0.<com.android.server.am.AssistDataRequester: java.util.ArrayList mAssistData>;

        virtualinvoke $r12.<java.util.ArrayList: boolean add(java.lang.Object)>(null);

     label34:
        z12 = 0;

        goto label35;

     label35:
        if z1 == 0 goto label42;

        $r5 = r0.<com.android.server.am.AssistDataRequester: android.app.AppOpsManager mAppOpsManager>;

        $i2 = r0.<com.android.server.am.AssistDataRequester: int mRequestScreenshotAppOps>;

        $i3 = virtualinvoke $r5.<android.app.AppOpsManager: int checkOpNoThrow(int,int,java.lang.String)>($i2, i0, r1);

        if $i3 != 0 goto label40;

        if z12 == 0 goto label40;

     label36:
        $r8 = r0.<com.android.server.am.AssistDataRequester: android.content.Context mContext>;

        staticinvoke <com.android.internal.logging.MetricsLogger: void count(android.content.Context,java.lang.String,int)>($r8, "assist_with_screen", 1);

        $i4 = r0.<com.android.server.am.AssistDataRequester: int mPendingScreenshotCount>;

        $i5 = $i4 + 1;

        r0.<com.android.server.am.AssistDataRequester: int mPendingScreenshotCount> = $i5;

        $r9 = r0.<com.android.server.am.AssistDataRequester: android.view.IWindowManager mWindowManager>;

        interfaceinvoke $r9.<android.view.IWindowManager: boolean requestAssistScreenshot(android.app.IAssistDataReceiver)>(r0);

     label37:
        goto label39;

     label38:
        $r18 := @caughtexception;

     label39:
        goto label42;

     label40:
        $r6 = r0.<com.android.server.am.AssistDataRequester: com.android.server.am.AssistDataRequester$AssistDataRequesterCallbacks mCallbacks>;

        $z4 = interfaceinvoke $r6.<com.android.server.am.AssistDataRequester$AssistDataRequesterCallbacks: boolean canHandleReceivedAssistDataLocked()>();

        if $z4 == 0 goto label41;

        specialinvoke r0.<com.android.server.am.AssistDataRequester: void dispatchAssistScreenshotReceived(android.graphics.Bitmap)>(null);

        goto label42;

     label41:
        $r7 = r0.<com.android.server.am.AssistDataRequester: java.util.ArrayList mAssistScreenshot>;

        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>(null);

     label42:
        specialinvoke r0.<com.android.server.am.AssistDataRequester: void tryDispatchRequestComplete()>();

        return;

        catch android.os.RemoteException from label01 to label02 with label03;
        catch android.os.RemoteException from label08 to label09 with label29;
        catch android.os.RemoteException from label10 to label11 with label12;
        catch android.os.RemoteException from label13 to label14 with label29;
        catch android.os.RemoteException from label18 to label19 with label22;
        catch android.os.RemoteException from label20 to label21 with label22;
        catch android.os.RemoteException from label24 to label25 with label22;
        catch android.os.RemoteException from label26 to label27 with label22;
        catch android.os.RemoteException from label36 to label37 with label38;
    }

    private void tryDispatchRequestComplete()
    {
        com.android.server.am.AssistDataRequester r0;
        int $i0, $i1;
        java.util.ArrayList $r1, $r2;
        boolean $z0, $z1;
        com.android.server.am.AssistDataRequester$AssistDataRequesterCallbacks $r3;

        r0 := @this: com.android.server.am.AssistDataRequester;

        $i0 = r0.<com.android.server.am.AssistDataRequester: int mPendingDataCount>;

        if $i0 != 0 goto label1;

        $i1 = r0.<com.android.server.am.AssistDataRequester: int mPendingScreenshotCount>;

        if $i1 != 0 goto label1;

        $r1 = r0.<com.android.server.am.AssistDataRequester: java.util.ArrayList mAssistData>;

        $z0 = virtualinvoke $r1.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<com.android.server.am.AssistDataRequester: java.util.ArrayList mAssistScreenshot>;

        $z1 = virtualinvoke $r2.<java.util.ArrayList: boolean isEmpty()>();

        if $z1 == 0 goto label1;

        $r3 = r0.<com.android.server.am.AssistDataRequester: com.android.server.am.AssistDataRequester$AssistDataRequesterCallbacks mCallbacks>;

        interfaceinvoke $r3.<com.android.server.am.AssistDataRequester$AssistDataRequesterCallbacks: void onAssistRequestCompleted()>();

     label1:
        return;
    }

    public void cancel()
    {
        com.android.server.am.AssistDataRequester r0;
        java.util.ArrayList $r1, $r2;

        r0 := @this: com.android.server.am.AssistDataRequester;

        r0.<com.android.server.am.AssistDataRequester: boolean mCanceled> = 1;

        r0.<com.android.server.am.AssistDataRequester: int mPendingDataCount> = 0;

        r0.<com.android.server.am.AssistDataRequester: int mPendingScreenshotCount> = 0;

        $r1 = r0.<com.android.server.am.AssistDataRequester: java.util.ArrayList mAssistData>;

        virtualinvoke $r1.<java.util.ArrayList: void clear()>();

        $r2 = r0.<com.android.server.am.AssistDataRequester: java.util.ArrayList mAssistScreenshot>;

        virtualinvoke $r2.<java.util.ArrayList: void clear()>();

        return;
    }

    public void dump(java.lang.String, java.io.PrintWriter)
    {
        com.android.server.am.AssistDataRequester r0;
        java.lang.String r1;
        java.io.PrintWriter r2;
        int $i0, $i1;
        java.util.ArrayList $r3, $r4;

        r0 := @this: com.android.server.am.AssistDataRequester;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.io.PrintWriter;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("mPendingDataCount=");

        $i0 = r0.<com.android.server.am.AssistDataRequester: int mPendingDataCount>;

        virtualinvoke r2.<java.io.PrintWriter: void println(int)>($i0);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("mAssistData=");

        $r3 = r0.<com.android.server.am.AssistDataRequester: java.util.ArrayList mAssistData>;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.Object)>($r3);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("mPendingScreenshotCount=");

        $i1 = r0.<com.android.server.am.AssistDataRequester: int mPendingScreenshotCount>;

        virtualinvoke r2.<java.io.PrintWriter: void println(int)>($i1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("mAssistScreenshot=");

        $r4 = r0.<com.android.server.am.AssistDataRequester: java.util.ArrayList mAssistScreenshot>;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.Object)>($r4);

        return;
    }

    public int getPendingDataCount()
    {
        com.android.server.am.AssistDataRequester r0;
        int $i0;

        r0 := @this: com.android.server.am.AssistDataRequester;

        $i0 = r0.<com.android.server.am.AssistDataRequester: int mPendingDataCount>;

        return $i0;
    }

    public int getPendingScreenshotCount()
    {
        com.android.server.am.AssistDataRequester r0;
        int $i0;

        r0 := @this: com.android.server.am.AssistDataRequester;

        $i0 = r0.<com.android.server.am.AssistDataRequester: int mPendingScreenshotCount>;

        return $i0;
    }

    public void onHandleAssistData(android.os.Bundle)
    {
        com.android.server.am.AssistDataRequester r0;
        java.lang.Object r1;
        boolean $z0, $z1;
        int $i0, $i1;
        com.android.server.am.AssistDataRequester$AssistDataRequesterCallbacks $r2;
        java.util.ArrayList $r3;
        java.lang.Throwable $r4;
        android.os.Bundle r5;

        r0 := @this: com.android.server.am.AssistDataRequester;

        r5 := @parameter0: android.os.Bundle;

        r1 = r0.<com.android.server.am.AssistDataRequester: java.lang.Object mCallbacksLock>;

        entermonitor r1;

     label01:
        $z0 = r0.<com.android.server.am.AssistDataRequester: boolean mCanceled>;

        if $z0 == 0 goto label03;

        exitmonitor r1;

     label02:
        return;

     label03:
        $i0 = r0.<com.android.server.am.AssistDataRequester: int mPendingDataCount>;

        $i1 = $i0 - 1;

        r0.<com.android.server.am.AssistDataRequester: int mPendingDataCount> = $i1;

        $r2 = r0.<com.android.server.am.AssistDataRequester: com.android.server.am.AssistDataRequester$AssistDataRequesterCallbacks mCallbacks>;

        $z1 = interfaceinvoke $r2.<com.android.server.am.AssistDataRequester$AssistDataRequesterCallbacks: boolean canHandleReceivedAssistDataLocked()>();

        if $z1 == 0 goto label05;

        specialinvoke r0.<com.android.server.am.AssistDataRequester: void flushPendingAssistData()>();

        specialinvoke r0.<com.android.server.am.AssistDataRequester: void dispatchAssistDataReceived(android.os.Bundle)>(r5);

        specialinvoke r0.<com.android.server.am.AssistDataRequester: void tryDispatchRequestComplete()>();

     label04:
        goto label06;

     label05:
        $r3 = r0.<com.android.server.am.AssistDataRequester: java.util.ArrayList mAssistData>;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);

     label06:
        exitmonitor r1;

     label07:
        return;

     label08:
        $r4 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r4;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public void onHandleAssistScreenshot(android.graphics.Bitmap)
    {
        com.android.server.am.AssistDataRequester r0;
        java.lang.Object r1;
        boolean $z0, $z1;
        int $i0, $i1;
        com.android.server.am.AssistDataRequester$AssistDataRequesterCallbacks $r2;
        java.util.ArrayList $r3;
        java.lang.Throwable $r4;
        android.graphics.Bitmap r5;

        r0 := @this: com.android.server.am.AssistDataRequester;

        r5 := @parameter0: android.graphics.Bitmap;

        r1 = r0.<com.android.server.am.AssistDataRequester: java.lang.Object mCallbacksLock>;

        entermonitor r1;

     label01:
        $z0 = r0.<com.android.server.am.AssistDataRequester: boolean mCanceled>;

        if $z0 == 0 goto label03;

        exitmonitor r1;

     label02:
        return;

     label03:
        $i0 = r0.<com.android.server.am.AssistDataRequester: int mPendingScreenshotCount>;

        $i1 = $i0 - 1;

        r0.<com.android.server.am.AssistDataRequester: int mPendingScreenshotCount> = $i1;

        $r2 = r0.<com.android.server.am.AssistDataRequester: com.android.server.am.AssistDataRequester$AssistDataRequesterCallbacks mCallbacks>;

        $z1 = interfaceinvoke $r2.<com.android.server.am.AssistDataRequester$AssistDataRequesterCallbacks: boolean canHandleReceivedAssistDataLocked()>();

        if $z1 == 0 goto label05;

        specialinvoke r0.<com.android.server.am.AssistDataRequester: void flushPendingAssistData()>();

        specialinvoke r0.<com.android.server.am.AssistDataRequester: void dispatchAssistScreenshotReceived(android.graphics.Bitmap)>(r5);

        specialinvoke r0.<com.android.server.am.AssistDataRequester: void tryDispatchRequestComplete()>();

     label04:
        goto label06;

     label05:
        $r3 = r0.<com.android.server.am.AssistDataRequester: java.util.ArrayList mAssistScreenshot>;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);

     label06:
        exitmonitor r1;

     label07:
        return;

     label08:
        $r4 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r4;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public void processPendingAssistData()
    {
        com.android.server.am.AssistDataRequester r0;

        r0 := @this: com.android.server.am.AssistDataRequester;

        specialinvoke r0.<com.android.server.am.AssistDataRequester: void flushPendingAssistData()>();

        specialinvoke r0.<com.android.server.am.AssistDataRequester: void tryDispatchRequestComplete()>();

        return;
    }

    public void requestAssistData(java.util.List, boolean, boolean, boolean, boolean, int, java.lang.String)
    {
        com.android.server.am.AssistDataRequester r0;
        java.util.List r1;
        boolean z0, z1, z2, z3;
        int i0;
        java.lang.String r2;

        r0 := @this: com.android.server.am.AssistDataRequester;

        r1 := @parameter0: java.util.List;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        z2 := @parameter3: boolean;

        z3 := @parameter4: boolean;

        i0 := @parameter5: int;

        r2 := @parameter6: java.lang.String;

        specialinvoke r0.<com.android.server.am.AssistDataRequester: void requestData(java.util.List,boolean,boolean,boolean,boolean,boolean,int,java.lang.String)>(r1, 0, z0, z1, z2, z3, i0, r2);

        return;
    }

    public void requestAutofillData(java.util.List, int, java.lang.String)
    {
        com.android.server.am.AssistDataRequester r0;
        java.util.List r1;
        int i0;
        java.lang.String r2;

        r0 := @this: com.android.server.am.AssistDataRequester;

        r1 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        specialinvoke r0.<com.android.server.am.AssistDataRequester: void requestData(java.util.List,boolean,boolean,boolean,boolean,boolean,int,java.lang.String)>(r1, 1, 1, 0, 1, 0, i0, r2);

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.am.AssistDataRequester: java.lang.String KEY_RECEIVER_EXTRA_INDEX> = "index";

        <com.android.server.am.AssistDataRequester: java.lang.String KEY_RECEIVER_EXTRA_COUNT> = "count";

        return;
    }
}
