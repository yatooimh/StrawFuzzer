public final class com.android.server.am.BatteryStatsService extends com.android.internal.app.IBatteryStats$Stub implements android.os.PowerManagerInternal$LowPowerModeListener, com.android.internal.os.BatteryStatsImpl$PlatformIdleStateCallback, com.android.internal.os.BatteryStatsImpl$RailEnergyDataCallback
{
    static final boolean DBG;
    private static final int MAX_LOW_POWER_STATS_SIZE;
    static final java.lang.String TAG;
    private static com.android.internal.app.IBatteryStats sService;
    private final android.content.Context mContext;
    private java.nio.charset.CharsetDecoder mDecoderStat;
    final com.android.internal.os.BatteryStatsImpl mStats;
    private final com.android.internal.os.BatteryStatsImpl$UserInfoProvider mUserManagerUserInfoProvider;
    private java.nio.CharBuffer mUtf16BufferStat;
    private java.nio.ByteBuffer mUtf8BufferStat;
    private final com.android.server.am.BatteryExternalStatsWorker mWorker;

    void <init>(android.content.Context, java.io.File, android.os.Handler)
    {
        com.android.server.am.BatteryStatsService r0;
        android.content.Context r1, $r17;
        android.os.Handler r2;
        java.nio.charset.Charset $r3;
        java.nio.charset.CharsetDecoder $r4, $r6, $r8, $r9;
        java.nio.charset.CodingErrorAction $r5, $r7;
        java.nio.ByteBuffer $r10;
        java.nio.CharBuffer $r11;
        com.android.server.am.BatteryStatsService$1 $r12;
        com.android.internal.os.BatteryStatsImpl $r13, $r16, $r18, $r21;
        com.android.internal.os.BatteryStatsImpl$UserInfoProvider $r14;
        com.android.server.am.BatteryExternalStatsWorker $r15;
        android.content.res.Resources $r19;
        int $i0;
        long $l1, $l2;
        com.android.internal.os.PowerProfile $r20;
        java.io.File r22;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r1 := @parameter0: android.content.Context;

        r22 := @parameter1: java.io.File;

        r2 := @parameter2: android.os.Handler;

        specialinvoke r0.<com.android.internal.app.IBatteryStats$Stub: void <init>()>();

        $r3 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r4 = virtualinvoke $r3.<java.nio.charset.Charset: java.nio.charset.CharsetDecoder newDecoder()>();

        $r5 = <java.nio.charset.CodingErrorAction: java.nio.charset.CodingErrorAction REPLACE>;

        $r6 = virtualinvoke $r4.<java.nio.charset.CharsetDecoder: java.nio.charset.CharsetDecoder onMalformedInput(java.nio.charset.CodingErrorAction)>($r5);

        $r7 = <java.nio.charset.CodingErrorAction: java.nio.charset.CodingErrorAction REPLACE>;

        $r8 = virtualinvoke $r6.<java.nio.charset.CharsetDecoder: java.nio.charset.CharsetDecoder onUnmappableCharacter(java.nio.charset.CodingErrorAction)>($r7);

        $r9 = virtualinvoke $r8.<java.nio.charset.CharsetDecoder: java.nio.charset.CharsetDecoder replaceWith(java.lang.String)>("?");

        r0.<com.android.server.am.BatteryStatsService: java.nio.charset.CharsetDecoder mDecoderStat> = $r9;

        $r10 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocateDirect(int)>(4096);

        r0.<com.android.server.am.BatteryStatsService: java.nio.ByteBuffer mUtf8BufferStat> = $r10;

        $r11 = staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer allocate(int)>(4096);

        r0.<com.android.server.am.BatteryStatsService: java.nio.CharBuffer mUtf16BufferStat> = $r11;

        r0.<com.android.server.am.BatteryStatsService: android.content.Context mContext> = r1;

        $r12 = new com.android.server.am.BatteryStatsService$1;

        specialinvoke $r12.<com.android.server.am.BatteryStatsService$1: void <init>(com.android.server.am.BatteryStatsService)>(r0);

        r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl$UserInfoProvider mUserManagerUserInfoProvider> = $r12;

        $r13 = new com.android.internal.os.BatteryStatsImpl;

        $r14 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl$UserInfoProvider mUserManagerUserInfoProvider>;

        specialinvoke $r13.<com.android.internal.os.BatteryStatsImpl: void <init>(java.io.File,android.os.Handler,com.android.internal.os.BatteryStatsImpl$PlatformIdleStateCallback,com.android.internal.os.BatteryStatsImpl$RailEnergyDataCallback,com.android.internal.os.BatteryStatsImpl$UserInfoProvider)>(r22, r2, r0, r0, $r14);

        r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats> = $r13;

        $r15 = new com.android.server.am.BatteryExternalStatsWorker;

        specialinvoke $r15.<com.android.server.am.BatteryExternalStatsWorker: void <init>(android.content.Context,com.android.internal.os.BatteryStatsImpl)>(r1, $r13);

        r0.<com.android.server.am.BatteryStatsService: com.android.server.am.BatteryExternalStatsWorker mWorker> = $r15;

        $r16 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r16.<com.android.internal.os.BatteryStatsImpl: void setExternalStatsSyncLocked(com.android.internal.os.BatteryStatsImpl$ExternalStatsSync)>($r15);

        $r18 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        $r17 = r0.<com.android.server.am.BatteryStatsService: android.content.Context mContext>;

        $r19 = virtualinvoke $r17.<android.content.Context: android.content.res.Resources getResources()>();

        $i0 = virtualinvoke $r19.<android.content.res.Resources: int getInteger(int)>(17694880);

        $l1 = (long) $i0;

        $l2 = $l1 * 1000L;

        virtualinvoke $r18.<com.android.internal.os.BatteryStatsImpl: void setRadioScanningTimeoutLocked(long)>($l2);

        $r21 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        $r20 = new com.android.internal.os.PowerProfile;

        specialinvoke $r20.<com.android.internal.os.PowerProfile: void <init>(android.content.Context)>(r1);

        virtualinvoke $r21.<com.android.internal.os.BatteryStatsImpl: void setPowerProfileLocked(com.android.internal.os.PowerProfile)>($r20);

        return;
    }

    static int access$100(java.nio.ByteBuffer)
    {
        java.nio.ByteBuffer r0;
        int $i0;

        r0 := @parameter0: java.nio.ByteBuffer;

        $i0 = staticinvoke <com.android.server.am.BatteryStatsService: int nativeWaitWakeup(java.nio.ByteBuffer)>(r0);

        return $i0;
    }

    private static void awaitUninterruptibly(java.util.concurrent.Future)
    {
        java.lang.Throwable $r2, $r3;
        java.util.concurrent.Future r4;

        r4 := @parameter0: java.util.concurrent.Future;

     label1:
        interfaceinvoke r4.<java.util.concurrent.Future: java.lang.Object get()>();

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        goto label1;

     label4:
        $r3 := @caughtexception;

        return;

        catch java.util.concurrent.ExecutionException from label1 to label2 with label4;
        catch java.lang.InterruptedException from label1 to label2 with label3;
    }

    private int doEnableOrDisable(java.io.PrintWriter, int, java.lang.String[], boolean)
    {
        com.android.server.am.BatteryStatsService r0;
        boolean z0, $z1, $z2, $z3, $z4;
        int $i0, i1, i2;
        java.lang.String $r1, $r2, $r4, $r5, $r6, $r7, $r8, $r9, $r12, $r14, $r20, r27;
        com.android.internal.os.BatteryStatsImpl $r3, $r15, $r16, r28, r30, r33;
        java.lang.StringBuilder $r10, $r17;
        java.lang.Throwable $r21, $r22, $r23;
        java.io.PrintWriter r24;
        java.lang.String[] r25;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r24 := @parameter0: java.io.PrintWriter;

        i1 := @parameter1: int;

        r25 := @parameter2: java.lang.String[];

        z0 := @parameter3: boolean;

        i2 = i1 + 1;

        $i0 = lengthof r25;

        if i2 < $i0 goto label03;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Missing option argument for ");

        if z0 == 0 goto label01;

        r27 = "--enable";

        goto label02;

     label01:
        r27 = "--disable";

     label02:
        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r27);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r24.<java.io.PrintWriter: void println(java.lang.String)>($r20);

        specialinvoke r0.<com.android.server.am.BatteryStatsService: void dumpHelp(java.io.PrintWriter)>(r24);

        return -1;

     label03:
        $r2 = "full-wake-history";

        $r1 = r25[i2];

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z1 != 0 goto label17;

        $r5 = "full-history";

        $r4 = r25[i2];

        $z2 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z2 == 0 goto label04;

        goto label17;

     label04:
        $r7 = "no-auto-reset";

        $r6 = r25[i2];

        $z3 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z3 == 0 goto label10;

        r28 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r28;

     label05:
        $r16 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r16.<com.android.internal.os.BatteryStatsImpl: void setNoAutoReset(boolean)>(z0);

        exitmonitor r28;

     label06:
        goto label19;

     label07:
        $r23 := @caughtexception;

     label08:
        exitmonitor r28;

     label09:
        throw $r23;

     label10:
        $r9 = "pretend-screen-off";

        $r8 = r25[i2];

        $z4 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z4 == 0 goto label16;

        r30 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r30;

     label11:
        $r15 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r15.<com.android.internal.os.BatteryStatsImpl: void setPretendScreenOff(boolean)>(z0);

        exitmonitor r30;

     label12:
        goto label19;

     label13:
        $r21 := @caughtexception;

     label14:
        exitmonitor r30;

     label15:
        throw $r21;

     label16:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown enable/disable option: ");

        $r12 = r25[i2];

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r24.<java.io.PrintWriter: void println(java.lang.String)>($r14);

        specialinvoke r0.<com.android.server.am.BatteryStatsService: void dumpHelp(java.io.PrintWriter)>(r24);

        return -1;

     label17:
        r33 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r33;

     label18:
        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl: void setRecordAllHistoryLocked(boolean)>(z0);

        exitmonitor r33;

     label19:
        return i2;

     label20:
        $r22 := @caughtexception;

     label21:
        exitmonitor r33;

     label22:
        throw $r22;

        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label08 to label09 with label07;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
        catch java.lang.Throwable from label18 to label19 with label20;
        catch java.lang.Throwable from label21 to label22 with label20;
    }

    private void dumpCpuStats(java.io.PrintWriter)
    {
        com.android.server.am.BatteryStatsService r0;
        com.android.internal.os.BatteryStatsImpl r1, $r2;
        java.lang.Throwable $r3;
        java.io.PrintWriter r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r4 := @parameter0: java.io.PrintWriter;

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl: void dumpCpuStatsLocked(java.io.PrintWriter)>(r4);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private void dumpHelp(java.io.PrintWriter)
    {
        com.android.server.am.BatteryStatsService r0;
        java.io.PrintWriter r1;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r1 := @parameter0: java.io.PrintWriter;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Battery stats (batterystats) dump options:");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  [--checkin] [--proto] [--history] [--history-start] [--charged] [-c]");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  [--daily] [--reset] [--write] [--new-daily] [--read-daily] [-h] [<package.name>]");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  --checkin: generate output for a checkin report; will write (and clear) the");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("             last old completed stats when they had been reset.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  -c: write the current stats in checkin format.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  --proto: write the current aggregate stats (without history) in proto format.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  --history: show only history data.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  --history-start <num>: show only history data starting at given time offset.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  --history-create-events <num>: create <num> of battery history events.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  --charged: only output data since last charged.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  --daily: only output full daily data.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  --reset: reset the stats, clearing all current data.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  --write: force write current collected stats to disk.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  --new-daily: immediately create and write new daily stats record.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  --read-daily: read-load last written daily stats.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  --settings: dump the settings key/values related to batterystats");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  --cpu: dump cpu stats for debugging purpose");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  <package.name>: optional name of package to filter output by.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  -h: print this help text.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Battery stats (batterystats) commands:");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  enable|disable <option>");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Enable or disable a running option.  Option state is not saved across boots.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Options are:");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      full-history: include additional detailed events in battery history:");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("          wake_lock_in, alarms and proc events");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      no-auto-reset: don\'t automatically reset stats when unplugged");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      pretend-screen-off: pretend the screen is off, even if screen state changes");

        return;
    }

    private void dumpSettings(java.io.PrintWriter)
    {
        com.android.server.am.BatteryStatsService r0;
        com.android.internal.os.BatteryStatsImpl r1, $r2;
        java.lang.Throwable $r3;
        java.io.PrintWriter r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r4 := @parameter0: java.io.PrintWriter;

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl: void dumpConstantsLocked(java.io.PrintWriter)>(r4);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private native void getLowPowerStats(com.android.internal.os.RpmStats);

    private native int getPlatformLowPowerStats(java.nio.ByteBuffer);

    private native void getRailEnergyPowerStats(com.android.internal.os.RailStats);

    public static com.android.internal.app.IBatteryStats getService()
    {
        android.os.IBinder $r0;
        com.android.internal.app.IBatteryStats r1, r2;

        r1 = <com.android.server.am.BatteryStatsService: com.android.internal.app.IBatteryStats sService>;

        if r1 == null goto label1;

        return r1;

     label1:
        $r0 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("batterystats");

        r2 = staticinvoke <com.android.server.am.BatteryStatsService: com.android.internal.app.IBatteryStats asInterface(android.os.IBinder)>($r0);

        <com.android.server.am.BatteryStatsService: com.android.internal.app.IBatteryStats sService> = r2;

        return r2;
    }

    private native int getSubsystemLowPowerStats(java.nio.ByteBuffer);

    private static native int nativeWaitWakeup(java.nio.ByteBuffer);

    private static boolean onlyCaller(int[])
    {
        int[] r0;
        int i0, i1, $i2, i3;

        r0 := @parameter0: int[];

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i1 = lengthof r0;

        i3 = 0;

     label1:
        if i3 >= i1 goto label3;

        $i2 = r0[i3];

        if $i2 == i0 goto label2;

        return 0;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return 1;
    }

    private boolean shouldCollectExternalStats()
    {
        com.android.server.am.BatteryStatsService r0;
        long $l0, $l1, $l2, $l3;
        com.android.server.am.BatteryExternalStatsWorker $r1;
        com.android.internal.os.BatteryStatsImpl $r2;
        byte $b4;
        boolean z0;

        r0 := @this: com.android.server.am.BatteryStatsService;

        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r1 = r0.<com.android.server.am.BatteryStatsService: com.android.server.am.BatteryExternalStatsWorker mWorker>;

        $l1 = virtualinvoke $r1.<com.android.server.am.BatteryExternalStatsWorker: long getLastCollectionTimeStamp()>();

        $l2 = $l0 - $l1;

        $r2 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        $l3 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl: long getExternalStatsCollectionRateLimitMs()>();

        $b4 = $l2 cmp $l3;

        if $b4 <= 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private void syncStats(java.lang.String, int)
    {
        com.android.server.am.BatteryStatsService r0;
        java.lang.String r1;
        int i0;
        com.android.server.am.BatteryExternalStatsWorker $r2;
        java.util.concurrent.Future $r3;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.am.BatteryStatsService: com.android.server.am.BatteryExternalStatsWorker mWorker>;

        $r3 = virtualinvoke $r2.<com.android.server.am.BatteryExternalStatsWorker: java.util.concurrent.Future scheduleSync(java.lang.String,int)>(r1, i0);

        staticinvoke <com.android.server.am.BatteryStatsService: void awaitUninterruptibly(java.util.concurrent.Future)>($r3);

        return;
    }

    void addIsolatedUid(int, int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0, i1;
        com.android.internal.os.BatteryStatsImpl r1, $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl: void addIsolatedUidLocked(int,int)>(i0, i1);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public long computeBatteryTimeRemaining()
    {
        com.android.server.am.BatteryStatsService r0;
        com.android.internal.os.BatteryStatsImpl r1, $r3;
        long $l0, l2;
        byte $b1;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l2 = virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl: long computeBatteryTimeRemaining(long)>($l0);

     label2:
        $b1 = l2 cmp 0L;

        if $b1 < 0 goto label5;

     label3:
        l2 = l2 / 1000L;

     label4:
        goto label5;

     label5:
        exitmonitor r1;

     label6:
        return l2;

     label7:
        $r4 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public long computeChargeTimeRemaining()
    {
        com.android.server.am.BatteryStatsService r0;
        com.android.internal.os.BatteryStatsImpl r1, $r3;
        long $l0, l2;
        byte $b1;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l2 = virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl: long computeChargeTimeRemaining(long)>($l0);

     label2:
        $b1 = l2 cmp 0L;

        if $b1 < 0 goto label5;

     label3:
        l2 = l2 / 1000L;

     label4:
        goto label5;

     label5:
        exitmonitor r1;

     label6:
        return l2;

     label7:
        $r4 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    protected void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.am.BatteryStatsService r0;
        java.util.List r1, r132;
        android.content.Context $r2, $r3, $r5, $r18, $r20, $r31, $r64, r146, r155, r162;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, z22, z23, z24, z25, z26, z27, z28, z29, z30, z31, z32;
        com.android.internal.os.BatteryStatsImpl $r4, $r7, $r8, $r9, $r11, $r13, $r16, $r21, $r22, $r23, $r24, $r26, $r28, $r32, $r70, $r71, $r72, $r73, $r77, $r89, $r96, r117, r119, r121, r123, r125, r136, r140, r145, r153, r154, r157, r159, r160, r161, r164, r166;
        android.content.pm.PackageManager $r6, $r19, $r65;
        android.util.AtomicFile $r10, $r12, $r17, $r25, $r27, $r33, $r90, $r97, r133, r142, r148;
        int $i0, $i1, $i4, $i5, $i6, $i8, $i9, i12, i14, i17, i18;
        com.android.internal.os.BatteryStatsImpl$UserInfoProvider $r14, $r29;
        android.os.Handler $r15, $r30;
        byte $b2, $b3, b13, b20;
        java.lang.String $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r49, $r51, $r52, $r53, $r56, $r58, $r59, $r60, $r61, $r62, $r63, $r69, $r76, $r78, $r83, $r93, $r100, r116;
        java.lang.StringBuilder $r47, $r54, $r66, $r80, r138, r151;
        char $c7;
        com.android.server.am.BatteryExternalStatsWorker $r74;
        android.content.pm.PackageManager$NameNotFoundException $r79;
        java.lang.Throwable $r84, $r85, $r86, $r87, $r94, $r101, $r102, $r103, $r104, $r105, $r106, $r107, $r108, $r109, $r110, $r111, $r112, r149, r152, r158, r165;
        java.io.File $r91, $r98;
        java.io.FileDescriptor r113;
        java.io.PrintWriter r114;
        java.lang.String[] r115;
        long l15, l16, l19;
        byte[] r134, r143;
        android.os.Parcel r135, r144;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r113 := @parameter0: java.io.FileDescriptor;

        r114 := @parameter1: java.io.PrintWriter;

        r115 := @parameter2: java.lang.String[];

        $r2 = r0.<com.android.server.am.BatteryStatsService: android.content.Context mContext>;

        $z0 = staticinvoke <com.android.internal.util.DumpUtils: boolean checkDumpAndUsageStatsPermission(android.content.Context,java.lang.String,java.io.PrintWriter)>($r2, "BatteryStatsService", r114);

        if $z0 != 0 goto label001;

        return;

     label001:
        i12 = -1;

        if r115 == null goto label066;

        b13 = 0;

        z22 = 0;

        z23 = 0;

        z24 = 0;

        z25 = 0;

        z26 = 0;

        i14 = 0;

        l15 = -1L;

     label002:
        $i4 = lengthof r115;

        if i14 >= $i4 goto label065;

        r116 = r115[i14];

        $r34 = "--checkin";

        $z2 = virtualinvoke $r34.<java.lang.String: boolean equals(java.lang.Object)>(r116);

        if $z2 == 0 goto label003;

        z22 = 1;

        z24 = 1;

        goto label059;

     label003:
        $r35 = "--history";

        $z3 = virtualinvoke $r35.<java.lang.String: boolean equals(java.lang.Object)>(r116);

        if $z3 == 0 goto label004;

        b13 = b13 | 8;

        goto label059;

     label004:
        $r36 = "--history-start";

        $z4 = virtualinvoke $r36.<java.lang.String: boolean equals(java.lang.Object)>(r116);

        if $z4 == 0 goto label006;

        b13 = b13 | 8;

        i14 = i14 + 1;

        $i9 = lengthof r115;

        if i14 < $i9 goto label005;

        virtualinvoke r114.<java.io.PrintWriter: void println(java.lang.String)>("Missing time argument for --history-since");

        specialinvoke r0.<com.android.server.am.BatteryStatsService: void dumpHelp(java.io.PrintWriter)>(r114);

        return;

     label005:
        $r78 = r115[i14];

        l15 = staticinvoke <com.android.internal.util.ParseUtils: long parseLong(java.lang.String,long)>($r78, 0L);

        z26 = 1;

        goto label059;

     label006:
        $r37 = "--history-create-events";

        $z5 = virtualinvoke $r37.<java.lang.String: boolean equals(java.lang.Object)>(r116);

        if $z5 == 0 goto label015;

        i14 = i14 + 1;

        $i8 = lengthof r115;

        if i14 < $i8 goto label007;

        virtualinvoke r114.<java.io.PrintWriter: void println(java.lang.String)>("Missing events argument for --history-create-events");

        specialinvoke r0.<com.android.server.am.BatteryStatsService: void dumpHelp(java.io.PrintWriter)>(r114);

        return;

     label007:
        $r76 = r115[i14];

        l16 = staticinvoke <com.android.internal.util.ParseUtils: long parseLong(java.lang.String,long)>($r76, 0L);

        r117 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r117;

     label008:
        $r77 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r77.<com.android.internal.os.BatteryStatsImpl: void createFakeHistoryEvents(long)>(l16);

        virtualinvoke r114.<java.io.PrintWriter: void println(java.lang.String)>("Battery history create events started.");

     label009:
        z25 = 1;

     label010:
        exitmonitor r117;

     label011:
        goto label059;

     label012:
        $r108 := @caughtexception;

     label013:
        exitmonitor r117;

     label014:
        throw $r108;

     label015:
        $r38 = "-c";

        $z6 = virtualinvoke $r38.<java.lang.String: boolean equals(java.lang.Object)>(r116);

        if $z6 == 0 goto label016;

        z22 = 1;

        b13 = b13 | 16;

        goto label059;

     label016:
        $r39 = "--proto";

        $z7 = virtualinvoke $r39.<java.lang.String: boolean equals(java.lang.Object)>(r116);

        if $z7 == 0 goto label017;

        z23 = 1;

        goto label059;

     label017:
        $r40 = "--charged";

        $z8 = virtualinvoke $r40.<java.lang.String: boolean equals(java.lang.Object)>(r116);

        if $z8 == 0 goto label018;

        b13 = b13 | 2;

        goto label059;

     label018:
        $r41 = "--daily";

        $z9 = virtualinvoke $r41.<java.lang.String: boolean equals(java.lang.Object)>(r116);

        if $z9 == 0 goto label019;

        b13 = b13 | 4;

        goto label059;

     label019:
        $r42 = "--reset";

        $z10 = virtualinvoke $r42.<java.lang.String: boolean equals(java.lang.Object)>(r116);

        if $z10 == 0 goto label027;

        r119 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r119;

     label020:
        $r73 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r73.<com.android.internal.os.BatteryStatsImpl: void resetAllStatsCmdLocked()>();

        virtualinvoke r114.<java.io.PrintWriter: void println(java.lang.String)>("Battery stats reset.");

     label021:
        z25 = 1;

     label022:
        exitmonitor r119;

     label023:
        $r74 = r0.<com.android.server.am.BatteryStatsService: com.android.server.am.BatteryExternalStatsWorker mWorker>;

        virtualinvoke $r74.<com.android.server.am.BatteryExternalStatsWorker: java.util.concurrent.Future scheduleSync(java.lang.String,int)>("dump", 31);

        goto label059;

     label024:
        $r112 := @caughtexception;

     label025:
        exitmonitor r119;

     label026:
        throw $r112;

     label027:
        $r43 = "--write";

        $z11 = virtualinvoke $r43.<java.lang.String: boolean equals(java.lang.Object)>(r116);

        if $z11 == 0 goto label035;

        specialinvoke r0.<com.android.server.am.BatteryStatsService: void syncStats(java.lang.String,int)>("dump", 31);

        r121 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r121;

     label028:
        $r72 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r72.<com.android.internal.os.BatteryStatsImpl: void writeSyncLocked()>();

        virtualinvoke r114.<java.io.PrintWriter: void println(java.lang.String)>("Battery stats written.");

     label029:
        z25 = 1;

     label030:
        exitmonitor r121;

     label031:
        goto label059;

     label032:
        $r86 := @caughtexception;

     label033:
        exitmonitor r121;

     label034:
        throw $r86;

     label035:
        $r44 = "--new-daily";

        $z12 = virtualinvoke $r44.<java.lang.String: boolean equals(java.lang.Object)>(r116);

        if $z12 == 0 goto label043;

        r123 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r123;

     label036:
        $r71 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r71.<com.android.internal.os.BatteryStatsImpl: void recordDailyStatsLocked()>();

        virtualinvoke r114.<java.io.PrintWriter: void println(java.lang.String)>("New daily stats written.");

     label037:
        z25 = 1;

     label038:
        exitmonitor r123;

     label039:
        goto label059;

     label040:
        $r110 := @caughtexception;

     label041:
        exitmonitor r123;

     label042:
        throw $r110;

     label043:
        $r45 = "--read-daily";

        $z13 = virtualinvoke $r45.<java.lang.String: boolean equals(java.lang.Object)>(r116);

        if $z13 == 0 goto label051;

        r125 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r125;

     label044:
        $r70 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r70.<com.android.internal.os.BatteryStatsImpl: void readDailyStatsLocked()>();

        virtualinvoke r114.<java.io.PrintWriter: void println(java.lang.String)>("Last daily stats read.");

     label045:
        z25 = 1;

     label046:
        exitmonitor r125;

     label047:
        goto label059;

     label048:
        $r85 := @caughtexception;

     label049:
        exitmonitor r125;

     label050:
        throw $r85;

     label051:
        $r46 = "--enable";

        $z14 = virtualinvoke $r46.<java.lang.String: boolean equals(java.lang.Object)>(r116);

        if $z14 != 0 goto label063;

        $r52 = "enable";

        $z15 = virtualinvoke $r52.<java.lang.String: boolean equals(java.lang.Object)>(r116);

        if $z15 == 0 goto label052;

        goto label063;

     label052:
        $r53 = "--disable";

        $z16 = virtualinvoke $r53.<java.lang.String: boolean equals(java.lang.Object)>(r116);

        if $z16 != 0 goto label061;

        $r59 = "disable";

        $z17 = virtualinvoke $r59.<java.lang.String: boolean equals(java.lang.Object)>(r116);

        if $z17 == 0 goto label053;

        goto label061;

     label053:
        $r60 = "-h";

        $z18 = virtualinvoke $r60.<java.lang.String: boolean equals(java.lang.Object)>(r116);

        if $z18 == 0 goto label054;

        specialinvoke r0.<com.android.server.am.BatteryStatsService: void dumpHelp(java.io.PrintWriter)>(r114);

        return;

     label054:
        $r61 = "--settings";

        $z19 = virtualinvoke $r61.<java.lang.String: boolean equals(java.lang.Object)>(r116);

        if $z19 == 0 goto label055;

        specialinvoke r0.<com.android.server.am.BatteryStatsService: void dumpSettings(java.io.PrintWriter)>(r114);

        return;

     label055:
        $r62 = "--cpu";

        $z20 = virtualinvoke $r62.<java.lang.String: boolean equals(java.lang.Object)>(r116);

        if $z20 == 0 goto label056;

        specialinvoke r0.<com.android.server.am.BatteryStatsService: void dumpCpuStats(java.io.PrintWriter)>(r114);

        return;

     label056:
        $r63 = "-a";

        $z21 = virtualinvoke $r63.<java.lang.String: boolean equals(java.lang.Object)>(r116);

        if $z21 == 0 goto label057;

        b13 = b13 | 32;

        goto label059;

     label057:
        $i5 = virtualinvoke r116.<java.lang.String: int length()>();

        if $i5 <= 0 goto label058;

        $c7 = virtualinvoke r116.<java.lang.String: char charAt(int)>(0);

        if $c7 != 45 goto label058;

        $r66 = new java.lang.StringBuilder;

        specialinvoke $r66.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown option: ");

        virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r116);

        $r69 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r114.<java.io.PrintWriter: void println(java.lang.String)>($r69);

        specialinvoke r0.<com.android.server.am.BatteryStatsService: void dumpHelp(java.io.PrintWriter)>(r114);

        return;

     label058:
        $r64 = r0.<com.android.server.am.BatteryStatsService: android.content.Context mContext>;

        $r65 = virtualinvoke $r64.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $i6 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        i12 = virtualinvoke $r65.<android.content.pm.PackageManager: int getPackageUidAsUser(java.lang.String,int)>(r116, $i6);

     label059:
        i14 = i14 + 1;

        goto label002;

     label060:
        $r79 := @caughtexception;

        $r80 = new java.lang.StringBuilder;

        specialinvoke $r80.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown package: ");

        virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r116);

        $r83 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r114.<java.io.PrintWriter: void println(java.lang.String)>($r83);

        specialinvoke r0.<com.android.server.am.BatteryStatsService: void dumpHelp(java.io.PrintWriter)>(r114);

        return;

     label061:
        i17 = specialinvoke r0.<com.android.server.am.BatteryStatsService: int doEnableOrDisable(java.io.PrintWriter,int,java.lang.String[],boolean)>(r114, i14, r115, 0);

        if i17 >= 0 goto label062;

        return;

     label062:
        $r54 = new java.lang.StringBuilder;

        specialinvoke $r54.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Disabled: ");

        $r56 = r115[i17];

        virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r56);

        $r58 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r114.<java.io.PrintWriter: void println(java.lang.String)>($r58);

        return;

     label063:
        i18 = specialinvoke r0.<com.android.server.am.BatteryStatsService: int doEnableOrDisable(java.io.PrintWriter,int,java.lang.String[],boolean)>(r114, i14, r115, 1);

        if i18 >= 0 goto label064;

        return;

     label064:
        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Enabled: ");

        $r49 = r115[i18];

        virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r49);

        $r51 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r114.<java.io.PrintWriter: void println(java.lang.String)>($r51);

        return;

     label065:
        z27 = z25;

        z28 = z24;

        z29 = z26;

        z30 = z22;

        goto label067;

     label066:
        z30 = 0;

        z23 = 0;

        z27 = 0;

        z29 = 0;

        l15 = -1L;

        i12 = -1;

        b13 = 0;

        z28 = 0;

     label067:
        if z27 == 0 goto label068;

        return;

     label068:
        l19 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        b20 = b13;

     label069:
        $r3 = r0.<com.android.server.am.BatteryStatsService: android.content.Context mContext>;

        $z1 = staticinvoke <com.android.internal.os.BatteryStatsHelper: boolean checkWifiOnly(android.content.Context)>($r3);

        if $z1 == 0 goto label071;

     label070:
        b20 = b13 | 64;

     label071:
        specialinvoke r0.<com.android.server.am.BatteryStatsService: void syncStats(java.lang.String,int)>("dump", 31);

     label072:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l19);

        if i12 < 0 goto label073;

        $b2 = b20 & 10;

        if $b2 != 0 goto label073;

        $b3 = b20 | 2;

        b20 = $b3 & -17;

        goto label073;

     label073:
        if z23 == 0 goto label098;

        $r18 = r0.<com.android.server.am.BatteryStatsService: android.content.Context mContext>;

        $r19 = virtualinvoke $r18.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r132 = virtualinvoke $r19.<android.content.pm.PackageManager: java.util.List getInstalledApplications(int)>(4325376);

        if z28 == 0 goto label089;

        $r23 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        r133 = $r23.<com.android.internal.os.BatteryStatsImpl: android.util.AtomicFile mCheckinFile>;

        entermonitor r133;

     label074:
        $r24 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        $r25 = $r24.<com.android.internal.os.BatteryStatsImpl: android.util.AtomicFile mCheckinFile>;

        z31 = virtualinvoke $r25.<android.util.AtomicFile: boolean exists()>();

     label075:
        if z31 == 0 goto label084;

     label076:
        $r26 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        $r27 = $r26.<com.android.internal.os.BatteryStatsImpl: android.util.AtomicFile mCheckinFile>;

        r134 = virtualinvoke $r27.<android.util.AtomicFile: byte[] readFully()>();

     label077:
        if r134 == null goto label081;

     label078:
        r135 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $i1 = lengthof r134;

        virtualinvoke r135.<android.os.Parcel: void unmarshall(byte[],int,int)>(r134, 0, $i1);

        virtualinvoke r135.<android.os.Parcel: void setDataPosition(int)>(0);

        r136 = new com.android.internal.os.BatteryStatsImpl;

        $r28 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        $r30 = $r28.<com.android.internal.os.BatteryStatsImpl: android.os.Handler mHandler>;

        $r29 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl$UserInfoProvider mUserManagerUserInfoProvider>;

        specialinvoke r136.<com.android.internal.os.BatteryStatsImpl: void <init>(java.io.File,android.os.Handler,com.android.internal.os.BatteryStatsImpl$PlatformIdleStateCallback,com.android.internal.os.BatteryStatsImpl$RailEnergyDataCallback,com.android.internal.os.BatteryStatsImpl$UserInfoProvider)>(null, $r30, null, null, $r29);

        virtualinvoke r136.<com.android.internal.os.BatteryStatsImpl: void readSummaryFromParcel(android.os.Parcel)>(r135);

        virtualinvoke r135.<android.os.Parcel: void recycle()>();

        $r31 = r0.<com.android.server.am.BatteryStatsService: android.content.Context mContext>;

        virtualinvoke r136.<com.android.internal.os.BatteryStatsImpl: void dumpProtoLocked(android.content.Context,java.io.FileDescriptor,java.util.List,int,long)>($r31, r113, r132, b20, l15);

        $r32 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        $r33 = $r32.<com.android.internal.os.BatteryStatsImpl: android.util.AtomicFile mCheckinFile>;

        virtualinvoke $r33.<android.util.AtomicFile: void delete()>();

     label079:
        exitmonitor r133;

     label080:
        return;

     label081:
        goto label084;

     label082:
        $r87 := @caughtexception;

     label083:
        r138 = new java.lang.StringBuilder;

        specialinvoke r138.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r138.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure reading checkin file ");

        $r89 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        $r90 = $r89.<com.android.internal.os.BatteryStatsImpl: android.util.AtomicFile mCheckinFile>;

        $r91 = virtualinvoke $r90.<android.util.AtomicFile: java.io.File getBaseFile()>();

        virtualinvoke r138.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r91);

        $r93 = virtualinvoke r138.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("BatteryStatsService", $r93, $r87);

     label084:
        exitmonitor r133;

     label085:
        goto label089;

     label086:
        $r104 := @caughtexception;

     label087:
        exitmonitor r133;

     label088:
        throw $r104;

     label089:
        r140 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r140;

     label090:
        $r21 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        $r20 = r0.<com.android.server.am.BatteryStatsService: android.content.Context mContext>;

        virtualinvoke $r21.<com.android.internal.os.BatteryStatsImpl: void dumpProtoLocked(android.content.Context,java.io.FileDescriptor,java.util.List,int,long)>($r20, r113, r132, b20, l15);

     label091:
        if z29 == 0 goto label093;

     label092:
        $r22 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r22.<com.android.internal.os.BatteryStatsImpl: void writeAsyncLocked()>();

     label093:
        exitmonitor r140;

     label094:
        goto label155;

     label095:
        $r109 := @caughtexception;

     label096:
        exitmonitor r140;

     label097:
        throw $r109;

     label098:
        if z30 == 0 goto label147;

        $r5 = r0.<com.android.server.am.BatteryStatsService: android.content.Context mContext>;

        $r6 = virtualinvoke $r5.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r1 = virtualinvoke $r6.<android.content.pm.PackageManager: java.util.List getInstalledApplications(int)>(4325376);

        if z28 == 0 goto label133;

        $r8 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        r142 = $r8.<com.android.internal.os.BatteryStatsImpl: android.util.AtomicFile mCheckinFile>;

        entermonitor r142;

     label099:
        $r9 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        $r10 = $r9.<com.android.internal.os.BatteryStatsImpl: android.util.AtomicFile mCheckinFile>;

        z32 = virtualinvoke $r10.<android.util.AtomicFile: boolean exists()>();

     label100:
        if z32 == 0 goto label125;

     label101:
        $r11 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        $r12 = $r11.<com.android.internal.os.BatteryStatsImpl: android.util.AtomicFile mCheckinFile>;

        r143 = virtualinvoke $r12.<android.util.AtomicFile: byte[] readFully()>();

     label102:
        if r143 == null goto label112;

     label103:
        r144 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $i0 = lengthof r143;

        virtualinvoke r144.<android.os.Parcel: void unmarshall(byte[],int,int)>(r143, 0, $i0);

        virtualinvoke r144.<android.os.Parcel: void setDataPosition(int)>(0);

        r145 = new com.android.internal.os.BatteryStatsImpl;

        $r13 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        $r15 = $r13.<com.android.internal.os.BatteryStatsImpl: android.os.Handler mHandler>;

        $r14 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl$UserInfoProvider mUserManagerUserInfoProvider>;

        specialinvoke r145.<com.android.internal.os.BatteryStatsImpl: void <init>(java.io.File,android.os.Handler,com.android.internal.os.BatteryStatsImpl$PlatformIdleStateCallback,com.android.internal.os.BatteryStatsImpl$RailEnergyDataCallback,com.android.internal.os.BatteryStatsImpl$UserInfoProvider)>(null, $r15, null, null, $r14);

        virtualinvoke r145.<com.android.internal.os.BatteryStatsImpl: void readSummaryFromParcel(android.os.Parcel)>(r144);

        virtualinvoke r144.<android.os.Parcel: void recycle()>();

        r146 = r0.<com.android.server.am.BatteryStatsService: android.content.Context mContext>;

     label104:
        r148 = r142;

     label105:
        virtualinvoke r145.<com.android.internal.os.BatteryStatsImpl: void dumpCheckinLocked(android.content.Context,java.io.PrintWriter,java.util.List,int,long)>(r146, r114, r1, b20, l15);

     label106:
        r148 = r142;

     label107:
        $r16 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        $r17 = $r16.<com.android.internal.os.BatteryStatsImpl: android.util.AtomicFile mCheckinFile>;

        virtualinvoke $r17.<android.util.AtomicFile: void delete()>();

     label108:
        r148 = r142;

     label109:
        exitmonitor r142;

     label110:
        return;

     label111:
        $r106 := @caughtexception;

        r149 = $r106;

        goto label114;

     label112:
        goto label125;

     label113:
        $r94 := @caughtexception;

        r149 = $r94;

     label114:
        r148 = r142;

     label115:
        r151 = new java.lang.StringBuilder;

     label116:
        r148 = r142;

     label117:
        specialinvoke r151.<java.lang.StringBuilder: void <init>()>();

     label118:
        r148 = r142;

     label119:
        virtualinvoke r151.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure reading checkin file ");

     label120:
        r148 = r142;

     label121:
        $r96 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        $r97 = $r96.<com.android.internal.os.BatteryStatsImpl: android.util.AtomicFile mCheckinFile>;

        $r98 = virtualinvoke $r97.<android.util.AtomicFile: java.io.File getBaseFile()>();

        virtualinvoke r151.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r98);

     label122:
        r148 = r142;

     label123:
        $r100 = virtualinvoke r151.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("BatteryStatsService", $r100, r149);

     label124:
        goto label125;

     label125:
        r148 = r142;

     label126:
        exitmonitor r142;

     label127:
        goto label133;

     label128:
        $r107 := @caughtexception;

        r152 = $r107;

     label129:
        r148 = r142;

     label130:
        exitmonitor r142;

     label131:
        throw r152;

     label132:
        $r84 := @caughtexception;

        r152 = $r84;

        r142 = r148;

        goto label129;

     label133:
        r153 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r153;

     label134:
        r154 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        r155 = r0.<com.android.server.am.BatteryStatsService: android.content.Context mContext>;

     label135:
        r157 = r153;

     label136:
        virtualinvoke r154.<com.android.internal.os.BatteryStatsImpl: void dumpCheckinLocked(android.content.Context,java.io.PrintWriter,java.util.List,int,long)>(r155, r114, r1, b20, l15);

     label137:
        if z29 == 0 goto label139;

        r157 = r153;

     label138:
        $r7 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r7.<com.android.internal.os.BatteryStatsImpl: void writeAsyncLocked()>();

     label139:
        r157 = r153;

     label140:
        exitmonitor r153;

     label141:
        goto label155;

     label142:
        $r111 := @caughtexception;

        r158 = $r111;

        r159 = r153;

     label143:
        r157 = r159;

     label144:
        exitmonitor r159;

     label145:
        throw r158;

     label146:
        $r101 := @caughtexception;

        r158 = $r101;

        r159 = r157;

        goto label143;

     label147:
        r160 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r160;

     label148:
        r161 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        r162 = r0.<com.android.server.am.BatteryStatsService: android.content.Context mContext>;

     label149:
        r164 = r160;

     label150:
        virtualinvoke r161.<com.android.internal.os.BatteryStatsImpl: void dumpLocked(android.content.Context,java.io.PrintWriter,int,int,long)>(r162, r114, b20, i12, l15);

     label151:
        if z29 == 0 goto label153;

        r164 = r160;

     label152:
        $r4 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl: void writeAsyncLocked()>();

     label153:
        r164 = r160;

     label154:
        exitmonitor r160;

     label155:
        return;

     label156:
        $r103 := @caughtexception;

        r165 = $r103;

        r166 = r160;

     label157:
        r164 = r166;

     label158:
        exitmonitor r166;

     label159:
        throw r165;

     label160:
        $r102 := @caughtexception;

        r165 = $r102;

        r166 = r164;

        goto label157;

     label161:
        $r105 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l19);

        throw $r105;

        catch java.lang.Throwable from label008 to label009 with label012;
        catch java.lang.Throwable from label010 to label011 with label012;
        catch java.lang.Throwable from label013 to label014 with label012;
        catch java.lang.Throwable from label020 to label021 with label024;
        catch java.lang.Throwable from label022 to label023 with label024;
        catch java.lang.Throwable from label025 to label026 with label024;
        catch java.lang.Throwable from label028 to label029 with label032;
        catch java.lang.Throwable from label030 to label031 with label032;
        catch java.lang.Throwable from label033 to label034 with label032;
        catch java.lang.Throwable from label036 to label037 with label040;
        catch java.lang.Throwable from label038 to label039 with label040;
        catch java.lang.Throwable from label041 to label042 with label040;
        catch java.lang.Throwable from label044 to label045 with label048;
        catch java.lang.Throwable from label046 to label047 with label048;
        catch java.lang.Throwable from label049 to label050 with label048;
        catch android.content.pm.PackageManager$NameNotFoundException from label058 to label059 with label060;
        catch java.lang.Throwable from label069 to label070 with label161;
        catch java.lang.Throwable from label071 to label072 with label161;
        catch java.lang.Throwable from label074 to label075 with label086;
        catch java.io.IOException from label076 to label077 with label082;
        catch android.os.ParcelFormatException from label076 to label077 with label082;
        catch java.lang.Throwable from label076 to label077 with label086;
        catch java.io.IOException from label078 to label079 with label082;
        catch android.os.ParcelFormatException from label078 to label079 with label082;
        catch java.lang.Throwable from label078 to label079 with label086;
        catch java.lang.Throwable from label079 to label080 with label086;
        catch java.lang.Throwable from label083 to label084 with label086;
        catch java.lang.Throwable from label084 to label085 with label086;
        catch java.lang.Throwable from label087 to label088 with label086;
        catch java.lang.Throwable from label090 to label091 with label095;
        catch java.lang.Throwable from label092 to label093 with label095;
        catch java.lang.Throwable from label093 to label094 with label095;
        catch java.lang.Throwable from label096 to label097 with label095;
        catch java.lang.Throwable from label099 to label100 with label128;
        catch java.io.IOException from label101 to label102 with label113;
        catch android.os.ParcelFormatException from label101 to label102 with label113;
        catch java.lang.Throwable from label101 to label102 with label128;
        catch java.io.IOException from label103 to label104 with label113;
        catch android.os.ParcelFormatException from label103 to label104 with label113;
        catch java.lang.Throwable from label103 to label104 with label128;
        catch java.io.IOException from label105 to label106 with label111;
        catch android.os.ParcelFormatException from label105 to label106 with label111;
        catch java.lang.Throwable from label105 to label106 with label132;
        catch java.io.IOException from label107 to label108 with label111;
        catch android.os.ParcelFormatException from label107 to label108 with label111;
        catch java.lang.Throwable from label107 to label108 with label132;
        catch java.lang.Throwable from label109 to label110 with label132;
        catch java.lang.Throwable from label115 to label116 with label132;
        catch java.lang.Throwable from label117 to label118 with label132;
        catch java.lang.Throwable from label119 to label120 with label132;
        catch java.lang.Throwable from label121 to label122 with label132;
        catch java.lang.Throwable from label123 to label124 with label132;
        catch java.lang.Throwable from label126 to label127 with label132;
        catch java.lang.Throwable from label130 to label131 with label132;
        catch java.lang.Throwable from label134 to label135 with label142;
        catch java.lang.Throwable from label136 to label137 with label146;
        catch java.lang.Throwable from label138 to label139 with label146;
        catch java.lang.Throwable from label140 to label141 with label146;
        catch java.lang.Throwable from label144 to label145 with label146;
        catch java.lang.Throwable from label148 to label149 with label156;
        catch java.lang.Throwable from label150 to label151 with label160;
        catch java.lang.Throwable from label152 to label153 with label160;
        catch java.lang.Throwable from label154 to label155 with label160;
        catch java.lang.Throwable from label158 to label159 with label160;
    }

    public void enforceCallingPermission()
    {
        com.android.server.am.BatteryStatsService r0;
        int $i0, $i1, $i2, $i3;
        android.content.Context $r1;

        r0 := @this: com.android.server.am.BatteryStatsService;

        $i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i1 = staticinvoke <android.os.Process: int myPid()>();

        if $i0 != $i1 goto label1;

        return;

     label1:
        $r1 = r0.<com.android.server.am.BatteryStatsService: android.content.Context mContext>;

        $i2 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke $r1.<android.content.Context: void enforcePermission(java.lang.String,int,int,java.lang.String)>("android.permission.UPDATE_DEVICE_STATS", $i2, $i3, null);

        return;
    }

    public void fillLowPowerStats(com.android.internal.os.RpmStats)
    {
        com.android.server.am.BatteryStatsService r0;
        java.lang.Throwable $r1;
        com.android.internal.os.RpmStats r2;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r2 := @parameter0: com.android.internal.os.RpmStats;

     label1:
        specialinvoke r0.<com.android.server.am.BatteryStatsService: void getLowPowerStats(com.android.internal.os.RpmStats)>(r2);

     label2:
        return;

     label3:
        $r1 := @caughtexception;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void fillRailDataStats(com.android.internal.os.RailStats)
    {
        com.android.server.am.BatteryStatsService r0;
        java.lang.Throwable $r1;
        com.android.internal.os.RailStats r2;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r2 := @parameter0: com.android.internal.os.RailStats;

     label1:
        specialinvoke r0.<com.android.server.am.BatteryStatsService: void getRailEnergyPowerStats(com.android.internal.os.RailStats)>(r2);

     label2:
        return;

     label3:
        $r1 := @caughtexception;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public com.android.internal.os.BatteryStatsImpl getActiveStatistics()
    {
        com.android.server.am.BatteryStatsService r0;
        com.android.internal.os.BatteryStatsImpl $r1;

        r0 := @this: com.android.server.am.BatteryStatsService;

        $r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        return $r1;
    }

    public long getAwakeTimeBattery()
    {
        com.android.server.am.BatteryStatsService r0;
        android.content.Context $r1;
        com.android.internal.os.BatteryStatsImpl $r2;
        long $l0;

        r0 := @this: com.android.server.am.BatteryStatsService;

        $r1 = r0.<com.android.server.am.BatteryStatsService: android.content.Context mContext>;

        virtualinvoke $r1.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BATTERY_STATS", null);

        $r2 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        $l0 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl: long getAwakeTimeBattery()>();

        return $l0;
    }

    public long getAwakeTimePlugged()
    {
        com.android.server.am.BatteryStatsService r0;
        android.content.Context $r1;
        com.android.internal.os.BatteryStatsImpl $r2;
        long $l0;

        r0 := @this: com.android.server.am.BatteryStatsService;

        $r1 = r0.<com.android.server.am.BatteryStatsService: android.content.Context mContext>;

        virtualinvoke $r1.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BATTERY_STATS", null);

        $r2 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        $l0 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl: long getAwakeTimePlugged()>();

        return $l0;
    }

    public android.os.connectivity.CellularBatteryStats getCellularBatteryStats()
    {
        com.android.server.am.BatteryStatsService r0;
        com.android.internal.os.BatteryStatsImpl r1, $r2;
        java.lang.Throwable $r3;
        android.os.connectivity.CellularBatteryStats r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        r4 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl: android.os.connectivity.CellularBatteryStats getCellularBatteryStats()>();

        exitmonitor r1;

     label2:
        return r4;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public android.os.connectivity.GpsBatteryStats getGpsBatteryStats()
    {
        com.android.server.am.BatteryStatsService r0;
        com.android.internal.os.BatteryStatsImpl r1, $r2;
        java.lang.Throwable $r3;
        android.os.connectivity.GpsBatteryStats r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        r4 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl: android.os.connectivity.GpsBatteryStats getGpsBatteryStats()>();

        exitmonitor r1;

     label2:
        return r4;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    android.os.health.HealthStatsParceler getHealthStatsForUidLocked(int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0;
        android.os.BatteryStats$Uid r3;
        com.android.server.am.HealthStatsBatteryStatsWriter $r4;
        android.os.health.HealthStatsWriter $r5;
        android.os.health.HealthKeys$Constants $r6;
        com.android.internal.os.BatteryStatsImpl $r7, $r11;
        android.util.SparseArray $r8;
        java.lang.Object $r9;
        android.os.health.HealthStatsParceler $r10;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        $r4 = new com.android.server.am.HealthStatsBatteryStatsWriter;

        specialinvoke $r4.<com.android.server.am.HealthStatsBatteryStatsWriter: void <init>()>();

        $r5 = new android.os.health.HealthStatsWriter;

        $r6 = <android.os.health.UidHealthStats: android.os.health.HealthKeys$Constants CONSTANTS>;

        specialinvoke $r5.<android.os.health.HealthStatsWriter: void <init>(android.os.health.HealthKeys$Constants)>($r6);

        $r7 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        $r8 = virtualinvoke $r7.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray getUidStats()>();

        $r9 = virtualinvoke $r8.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r3 = (android.os.BatteryStats$Uid) $r9;

        if r3 == null goto label1;

        $r11 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r4.<com.android.server.am.HealthStatsBatteryStatsWriter: void writeUid(android.os.health.HealthStatsWriter,android.os.BatteryStats,android.os.BatteryStats$Uid)>($r5, $r11, r3);

     label1:
        $r10 = new android.os.health.HealthStatsParceler;

        specialinvoke $r10.<android.os.health.HealthStatsParceler: void <init>(android.os.health.HealthStatsWriter)>($r5);

        return $r10;
    }

    public java.lang.String getPlatformLowPowerStats()
    {
        com.android.server.am.BatteryStatsService r0;
        int i0;
        java.nio.ByteBuffer $r1, $r7, $r8, $r11;
        java.nio.CharBuffer $r3, $r10, $r14, $r16;
        java.nio.charset.CharsetDecoder $r5, $r12;
        java.lang.Throwable $r17;
        java.lang.String r18;

        r0 := @this: com.android.server.am.BatteryStatsService;

     label1:
        $r1 = r0.<com.android.server.am.BatteryStatsService: java.nio.ByteBuffer mUtf8BufferStat>;

        virtualinvoke $r1.<java.nio.ByteBuffer: java.nio.Buffer clear()>();

        $r3 = r0.<com.android.server.am.BatteryStatsService: java.nio.CharBuffer mUtf16BufferStat>;

        virtualinvoke $r3.<java.nio.CharBuffer: java.nio.Buffer clear()>();

        $r5 = r0.<com.android.server.am.BatteryStatsService: java.nio.charset.CharsetDecoder mDecoderStat>;

        virtualinvoke $r5.<java.nio.charset.CharsetDecoder: java.nio.charset.CharsetDecoder reset()>();

        $r7 = r0.<com.android.server.am.BatteryStatsService: java.nio.ByteBuffer mUtf8BufferStat>;

        i0 = specialinvoke r0.<com.android.server.am.BatteryStatsService: int getPlatformLowPowerStats(java.nio.ByteBuffer)>($r7);

     label2:
        if i0 >= 0 goto label3;

        return null;

     label3:
        if i0 != 0 goto label4;

        return "Empty";

     label4:
        $r8 = r0.<com.android.server.am.BatteryStatsService: java.nio.ByteBuffer mUtf8BufferStat>;

        virtualinvoke $r8.<java.nio.ByteBuffer: java.nio.Buffer limit(int)>(i0);

        $r12 = r0.<com.android.server.am.BatteryStatsService: java.nio.charset.CharsetDecoder mDecoderStat>;

        $r11 = r0.<com.android.server.am.BatteryStatsService: java.nio.ByteBuffer mUtf8BufferStat>;

        $r10 = r0.<com.android.server.am.BatteryStatsService: java.nio.CharBuffer mUtf16BufferStat>;

        virtualinvoke $r12.<java.nio.charset.CharsetDecoder: java.nio.charset.CoderResult decode(java.nio.ByteBuffer,java.nio.CharBuffer,boolean)>($r11, $r10, 1);

        $r14 = r0.<com.android.server.am.BatteryStatsService: java.nio.CharBuffer mUtf16BufferStat>;

        virtualinvoke $r14.<java.nio.CharBuffer: java.nio.Buffer flip()>();

        $r16 = r0.<com.android.server.am.BatteryStatsService: java.nio.CharBuffer mUtf16BufferStat>;

        r18 = virtualinvoke $r16.<java.nio.CharBuffer: java.lang.String toString()>();

     label5:
        return r18;

     label6:
        $r17 := @caughtexception;

        throw $r17;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public int getServiceType()
    {
        com.android.server.am.BatteryStatsService r0;

        r0 := @this: com.android.server.am.BatteryStatsService;

        return 9;
    }

    public byte[] getStatistics()
    {
        com.android.server.am.BatteryStatsService r0;
        android.content.Context $r1;
        com.android.internal.os.BatteryStatsImpl $r2, r5;
        java.lang.Throwable $r3;
        android.os.Parcel r4;
        byte[] r6;

        r0 := @this: com.android.server.am.BatteryStatsService;

        $r1 = r0.<com.android.server.am.BatteryStatsService: android.content.Context mContext>;

        virtualinvoke $r1.<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.BATTERY_STATS", null);

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        specialinvoke r0.<com.android.server.am.BatteryStatsService: void syncStats(java.lang.String,int)>("get-stats", 31);

        r5 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r5;

     label1:
        $r2 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl: void writeToParcel(android.os.Parcel,int)>(r4, 0);

        exitmonitor r5;

     label2:
        r6 = virtualinvoke r4.<android.os.Parcel: byte[] marshall()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        return r6;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r5;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public android.os.ParcelFileDescriptor getStatisticsStream()
    {
        com.android.server.am.BatteryStatsService r0;
        android.content.Context $r1;
        com.android.internal.os.BatteryStatsImpl $r2, r6;
        java.lang.Throwable $r3, $r4;
        android.os.Parcel r5;
        byte[] r7;
        android.os.ParcelFileDescriptor r8;

        r0 := @this: com.android.server.am.BatteryStatsService;

        $r1 = r0.<com.android.server.am.BatteryStatsService: android.content.Context mContext>;

        virtualinvoke $r1.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BATTERY_STATS", null);

        r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        specialinvoke r0.<com.android.server.am.BatteryStatsService: void syncStats(java.lang.String,int)>("get-stats", 31);

        r6 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r6;

     label1:
        $r2 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl: void writeToParcel(android.os.Parcel,int)>(r5, 0);

        exitmonitor r6;

     label2:
        r7 = virtualinvoke r5.<android.os.Parcel: byte[] marshall()>();

        virtualinvoke r5.<android.os.Parcel: void recycle()>();

     label3:
        r8 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor fromData(byte[],java.lang.String)>(r7, "battery-stats");

     label4:
        return r8;

     label5:
        $r3 := @caughtexception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("BatteryStatsService", "Unable to create shared memory", $r3);

        return null;

     label6:
        $r4 := @caughtexception;

     label7:
        exitmonitor r6;

     label8:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.io.IOException from label3 to label4 with label5;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public java.lang.String getSubsystemLowPowerStats()
    {
        com.android.server.am.BatteryStatsService r0;
        int i0;
        java.nio.ByteBuffer $r1, $r7, $r8, $r11;
        java.nio.CharBuffer $r3, $r10, $r14, $r16;
        java.nio.charset.CharsetDecoder $r5, $r12;
        java.lang.Throwable $r17;
        java.lang.String r18;

        r0 := @this: com.android.server.am.BatteryStatsService;

     label1:
        $r1 = r0.<com.android.server.am.BatteryStatsService: java.nio.ByteBuffer mUtf8BufferStat>;

        virtualinvoke $r1.<java.nio.ByteBuffer: java.nio.Buffer clear()>();

        $r3 = r0.<com.android.server.am.BatteryStatsService: java.nio.CharBuffer mUtf16BufferStat>;

        virtualinvoke $r3.<java.nio.CharBuffer: java.nio.Buffer clear()>();

        $r5 = r0.<com.android.server.am.BatteryStatsService: java.nio.charset.CharsetDecoder mDecoderStat>;

        virtualinvoke $r5.<java.nio.charset.CharsetDecoder: java.nio.charset.CharsetDecoder reset()>();

        $r7 = r0.<com.android.server.am.BatteryStatsService: java.nio.ByteBuffer mUtf8BufferStat>;

        i0 = specialinvoke r0.<com.android.server.am.BatteryStatsService: int getSubsystemLowPowerStats(java.nio.ByteBuffer)>($r7);

     label2:
        if i0 >= 0 goto label3;

        return null;

     label3:
        if i0 != 0 goto label4;

        return "Empty";

     label4:
        $r8 = r0.<com.android.server.am.BatteryStatsService: java.nio.ByteBuffer mUtf8BufferStat>;

        virtualinvoke $r8.<java.nio.ByteBuffer: java.nio.Buffer limit(int)>(i0);

        $r12 = r0.<com.android.server.am.BatteryStatsService: java.nio.charset.CharsetDecoder mDecoderStat>;

        $r11 = r0.<com.android.server.am.BatteryStatsService: java.nio.ByteBuffer mUtf8BufferStat>;

        $r10 = r0.<com.android.server.am.BatteryStatsService: java.nio.CharBuffer mUtf16BufferStat>;

        virtualinvoke $r12.<java.nio.charset.CharsetDecoder: java.nio.charset.CoderResult decode(java.nio.ByteBuffer,java.nio.CharBuffer,boolean)>($r11, $r10, 1);

        $r14 = r0.<com.android.server.am.BatteryStatsService: java.nio.CharBuffer mUtf16BufferStat>;

        virtualinvoke $r14.<java.nio.CharBuffer: java.nio.Buffer flip()>();

        $r16 = r0.<com.android.server.am.BatteryStatsService: java.nio.CharBuffer mUtf16BufferStat>;

        r18 = virtualinvoke $r16.<java.nio.CharBuffer: java.lang.String toString()>();

     label5:
        return r18;

     label6:
        $r17 := @caughtexception;

        throw $r17;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public android.os.connectivity.WifiBatteryStats getWifiBatteryStats()
    {
        com.android.server.am.BatteryStatsService r0;
        com.android.internal.os.BatteryStatsImpl r1, $r2;
        java.lang.Throwable $r3;
        android.os.connectivity.WifiBatteryStats r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        r4 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl: android.os.connectivity.WifiBatteryStats getWifiBatteryStats()>();

        exitmonitor r1;

     label2:
        return r4;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void initPowerManagement()
    {
        com.android.server.am.BatteryStatsService r0;
        com.android.internal.os.BatteryStatsImpl r1, $r3;
        java.lang.Object $r2;
        android.os.PowerSaveState $r4;
        boolean $z0;
        com.android.server.am.BatteryStatsService$WakeupReasonThread $r5;
        java.lang.Throwable $r6;
        android.os.PowerManagerInternal r7;

        r0 := @this: com.android.server.am.BatteryStatsService;

        $r2 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/os/PowerManagerInternal;");

        r7 = (android.os.PowerManagerInternal) $r2;

        virtualinvoke r7.<android.os.PowerManagerInternal: void registerLowPowerModeObserver(android.os.PowerManagerInternal$LowPowerModeListener)>(r0);

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        $r4 = virtualinvoke r7.<android.os.PowerManagerInternal: android.os.PowerSaveState getLowPowerState(int)>(9);

        $z0 = $r4.<android.os.PowerSaveState: boolean batterySaverEnabled>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl: void notePowerSaveModeLocked(boolean)>($z0);

        exitmonitor r1;

     label2:
        $r5 = new com.android.server.am.BatteryStatsService$WakeupReasonThread;

        specialinvoke $r5.<com.android.server.am.BatteryStatsService$WakeupReasonThread: void <init>(com.android.server.am.BatteryStatsService)>(r0);

        virtualinvoke $r5.<com.android.server.am.BatteryStatsService$WakeupReasonThread: void start()>();

        return;

     label3:
        $r6 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean isCharging()
    {
        com.android.server.am.BatteryStatsService r0;
        com.android.internal.os.BatteryStatsImpl r1, $r3;
        boolean z0;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        z0 = virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl: boolean isCharging()>();

        exitmonitor r1;

     label2:
        return z0;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean isOnBattery()
    {
        com.android.server.am.BatteryStatsService r0;
        com.android.internal.os.BatteryStatsImpl $r1;
        boolean $z0;

        r0 := @this: com.android.server.am.BatteryStatsService;

        $r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        $z0 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl: boolean isOnBattery()>();

        return $z0;
    }

    public void lambda$setBatteryState$0$BatteryStatsService(int, int, int, int, int, int, int, int, long)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0, i1, i2, i3, i4, i5, i6, i7;
        long l8;
        com.android.internal.os.BatteryStatsImpl r1, $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        i6 := @parameter6: int;

        i7 := @parameter7: int;

        l8 := @parameter8: long;

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl: void setBatteryStateLocked(int,int,int,int,int,int,int,int,long)>(i0, i1, i2, i3, i4, i5, i6, i7, l8);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void lambda$setBatteryState$1$BatteryStatsService(int, int, int, int, int, int, int, int, long)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0, i1, i2, i3, i4, i5, i6, i7;
        long l8;
        com.android.internal.os.BatteryStatsImpl r1, $r3, $r8;
        boolean z0, $z1;
        com.android.server.am.BatteryExternalStatsWorker $r4, $r7;
        com.android.server.am._$$Lambda$BatteryStatsService$TD8vKX9utneO_PRBBmoRe5zlDH8 $r6;
        java.lang.Throwable $r9;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        i6 := @parameter6: int;

        i7 := @parameter7: int;

        l8 := @parameter8: long;

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        z0 = staticinvoke <com.android.internal.os.BatteryStatsImpl: boolean isOnBattery(int,int)>(i0, i1);

        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        $z1 = virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl: boolean isOnBattery()>();

        if $z1 != z0 goto label3;

        $r8 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r8.<com.android.internal.os.BatteryStatsImpl: void setBatteryStateLocked(int,int,int,int,int,int,int,int,long)>(i1, i2, i0, i3, i4, i5, i6, i7, l8);

        exitmonitor r1;

     label2:
        return;

     label3:
        exitmonitor r1;

     label4:
        $r4 = r0.<com.android.server.am.BatteryStatsService: com.android.server.am.BatteryExternalStatsWorker mWorker>;

        virtualinvoke $r4.<com.android.server.am.BatteryExternalStatsWorker: java.util.concurrent.Future scheduleSync(java.lang.String,int)>("battery-state", 31);

        $r7 = r0.<com.android.server.am.BatteryStatsService: com.android.server.am.BatteryExternalStatsWorker mWorker>;

        $r6 = new com.android.server.am._$$Lambda$BatteryStatsService$TD8vKX9utneO_PRBBmoRe5zlDH8;

        specialinvoke $r6.<com.android.server.am._$$Lambda$BatteryStatsService$TD8vKX9utneO_PRBBmoRe5zlDH8: void <init>(com.android.server.am.BatteryStatsService,int,int,int,int,int,int,int,int,long)>(r0, i1, i2, i0, i3, i4, i5, i6, i7, l8);

        virtualinvoke $r7.<com.android.server.am.BatteryExternalStatsWorker: void scheduleRunnable(java.lang.Runnable)>($r6);

        return;

     label5:
        $r9 := @caughtexception;

     label6:
        exitmonitor r1;

     label7:
        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public void noteAlarmFinish(java.lang.String, android.os.WorkSource, int)
    {
        com.android.server.am.BatteryStatsService r0;
        android.os.WorkSource r1;
        int i0;
        com.android.internal.os.BatteryStatsImpl r2, $r3;
        java.lang.Throwable $r4;
        java.lang.String r5;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r5 := @parameter0: java.lang.String;

        r1 := @parameter1: android.os.WorkSource;

        i0 := @parameter2: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r2 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r2;

     label1:
        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl: void noteAlarmFinishLocked(java.lang.String,android.os.WorkSource,int)>(r5, r1, i0);

        exitmonitor r2;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r2;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteAlarmStart(java.lang.String, android.os.WorkSource, int)
    {
        com.android.server.am.BatteryStatsService r0;
        android.os.WorkSource r1;
        int i0;
        com.android.internal.os.BatteryStatsImpl r2, $r3;
        java.lang.Throwable $r4;
        java.lang.String r5;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r5 := @parameter0: java.lang.String;

        r1 := @parameter1: android.os.WorkSource;

        i0 := @parameter2: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r2 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r2;

     label1:
        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl: void noteAlarmStartLocked(java.lang.String,android.os.WorkSource,int)>(r5, r1, i0);

        exitmonitor r2;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r2;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteBleScanResults(android.os.WorkSource, int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl r1, $r2;
        java.lang.Throwable $r3;
        android.os.WorkSource r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r4 := @parameter0: android.os.WorkSource;

        i0 := @parameter1: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl: void noteBluetoothScanResultsFromSourceLocked(android.os.WorkSource,int)>(r4, i0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteBleScanStarted(android.os.WorkSource, boolean)
    {
        com.android.server.am.BatteryStatsService r0;
        boolean z0;
        com.android.internal.os.BatteryStatsImpl r1, $r2;
        java.lang.Throwable $r3;
        android.os.WorkSource r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r4 := @parameter0: android.os.WorkSource;

        z0 := @parameter1: boolean;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl: void noteBluetoothScanStartedFromSourceLocked(android.os.WorkSource,boolean)>(r4, z0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteBleScanStopped(android.os.WorkSource, boolean)
    {
        com.android.server.am.BatteryStatsService r0;
        boolean z0;
        com.android.internal.os.BatteryStatsImpl r1, $r2;
        java.lang.Throwable $r3;
        android.os.WorkSource r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r4 := @parameter0: android.os.WorkSource;

        z0 := @parameter1: boolean;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl: void noteBluetoothScanStoppedFromSourceLocked(android.os.WorkSource,boolean)>(r4, z0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteBluetoothControllerActivity(android.bluetooth.BluetoothActivityEnergyInfo)
    {
        com.android.server.am.BatteryStatsService r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r4;
        boolean $z0;
        com.android.internal.os.BatteryStatsImpl $r5, r8;
        java.lang.Throwable $r6;
        android.bluetooth.BluetoothActivityEnergyInfo r7;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r7 := @parameter0: android.bluetooth.BluetoothActivityEnergyInfo;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        if r7 == null goto label7;

        $z0 = virtualinvoke r7.<android.bluetooth.BluetoothActivityEnergyInfo: boolean isValid()>();

        if $z0 != 0 goto label1;

        goto label7;

     label1:
        r8 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r8;

     label2:
        $r5 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl: void updateBluetoothStateLocked(android.bluetooth.BluetoothActivityEnergyInfo)>(r7);

        exitmonitor r8;

     label3:
        return;

     label4:
        $r6 := @caughtexception;

     label5:
        exitmonitor r8;

     label6:
        throw $r6;

     label7:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid bluetooth data given: ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("BatteryStatsService", $r4);

        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void noteChangeWakelockFromSource(android.os.WorkSource, int, java.lang.String, java.lang.String, int, android.os.WorkSource, int, java.lang.String, java.lang.String, int, boolean)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0, i1, i2, i3;
        java.lang.String r1, r2, r4, r5;
        android.os.WorkSource r3, r9;
        boolean z0;
        com.android.internal.os.BatteryStatsImpl r6, $r7;
        java.lang.Throwable $r8;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r9 := @parameter0: android.os.WorkSource;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        i1 := @parameter4: int;

        r3 := @parameter5: android.os.WorkSource;

        i2 := @parameter6: int;

        r4 := @parameter7: java.lang.String;

        r5 := @parameter8: java.lang.String;

        i3 := @parameter9: int;

        z0 := @parameter10: boolean;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r6 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r6;

     label1:
        $r7 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r7.<com.android.internal.os.BatteryStatsImpl: void noteChangeWakelockFromSourceLocked(android.os.WorkSource,int,java.lang.String,java.lang.String,int,android.os.WorkSource,int,java.lang.String,java.lang.String,int,boolean)>(r9, i0, r1, r2, i1, r3, i2, r4, r5, i3, z0);

        exitmonitor r6;

     label2:
        return;

     label3:
        $r8 := @caughtexception;

     label4:
        exitmonitor r6;

     label5:
        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteConnectivityChanged(int, java.lang.String)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl r1, $r2;
        java.lang.Throwable $r3;
        java.lang.String r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        r4 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl: void noteConnectivityChangedLocked(int,java.lang.String)>(i0, r4);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteDeviceIdleMode(int, java.lang.String, int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0, i1;
        com.android.internal.os.BatteryStatsImpl r1, $r2;
        java.lang.Throwable $r3;
        java.lang.String r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        r4 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl: void noteDeviceIdleModeLocked(int,java.lang.String,int)>(i0, r4, i1);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteEvent(int, java.lang.String, int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0, i1;
        com.android.internal.os.BatteryStatsImpl r1, $r2;
        java.lang.Throwable $r3;
        java.lang.String r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        r4 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl: void noteEventLocked(int,java.lang.String,int)>(i0, r4, i1);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteFlashlightOff(int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl r1, $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl: void noteFlashlightOffLocked(int)>(i0);

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write_non_chained(int,int,java.lang.String,int)>(26, i0, null, 0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteFlashlightOn(int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl r1, $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl: void noteFlashlightOnLocked(int)>(i0);

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write_non_chained(int,int,java.lang.String,int)>(26, i0, null, 1);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteFullWifiLockAcquired(int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl r1, $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl: void noteFullWifiLockAcquiredLocked(int)>(i0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteFullWifiLockAcquiredFromSource(android.os.WorkSource)
    {
        com.android.server.am.BatteryStatsService r0;
        com.android.internal.os.BatteryStatsImpl r1, $r2;
        java.lang.Throwable $r3;
        android.os.WorkSource r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r4 := @parameter0: android.os.WorkSource;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl: void noteFullWifiLockAcquiredFromSourceLocked(android.os.WorkSource)>(r4);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteFullWifiLockReleased(int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl r1, $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl: void noteFullWifiLockReleasedLocked(int)>(i0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteFullWifiLockReleasedFromSource(android.os.WorkSource)
    {
        com.android.server.am.BatteryStatsService r0;
        com.android.internal.os.BatteryStatsImpl r1, $r2;
        java.lang.Throwable $r3;
        android.os.WorkSource r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r4 := @parameter0: android.os.WorkSource;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl: void noteFullWifiLockReleasedFromSourceLocked(android.os.WorkSource)>(r4);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteGpsChanged(android.os.WorkSource, android.os.WorkSource)
    {
        com.android.server.am.BatteryStatsService r0;
        android.os.WorkSource r1, r5;
        com.android.internal.os.BatteryStatsImpl r2, $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r5 := @parameter0: android.os.WorkSource;

        r1 := @parameter1: android.os.WorkSource;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r2 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r2;

     label1:
        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl: void noteGpsChangedLocked(android.os.WorkSource,android.os.WorkSource)>(r5, r1);

        exitmonitor r2;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r2;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteGpsSignalQuality(int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl r1, $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl: void noteGpsSignalQualityLocked(int)>(i0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteInteractive(boolean)
    {
        com.android.server.am.BatteryStatsService r0;
        boolean z0;
        com.android.internal.os.BatteryStatsImpl r1, $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        z0 := @parameter0: boolean;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl: void noteInteractiveLocked(boolean)>(z0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteJobFinish(java.lang.String, int, int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0, i1;
        com.android.internal.os.BatteryStatsImpl r1, $r2;
        java.lang.Throwable $r3;
        java.lang.String r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r4 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl: void noteJobFinishLocked(java.lang.String,int,int)>(r4, i0, i1);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteJobStart(java.lang.String, int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl r1, $r2;
        java.lang.Throwable $r3;
        java.lang.String r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r4 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl: void noteJobStartLocked(java.lang.String,int)>(r4, i0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    void noteJobsDeferred(int, int, long)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0, i1;
        long l2;
        com.android.internal.os.BatteryStatsImpl r1, $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        l2 := @parameter2: long;

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl: void noteJobsDeferredLocked(int,int,long)>(i0, i1, l2);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteLongPartialWakelockFinish(java.lang.String, java.lang.String, int)
    {
        com.android.server.am.BatteryStatsService r0;
        java.lang.String r1, r5;
        int i0;
        com.android.internal.os.BatteryStatsImpl r2, $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r5 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r2 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r2;

     label1:
        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl: void noteLongPartialWakelockFinish(java.lang.String,java.lang.String,int)>(r5, r1, i0);

        exitmonitor r2;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r2;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteLongPartialWakelockFinishFromSource(java.lang.String, java.lang.String, android.os.WorkSource)
    {
        com.android.server.am.BatteryStatsService r0;
        java.lang.String r1, r6;
        android.os.WorkSource r2;
        com.android.internal.os.BatteryStatsImpl r3, $r4;
        java.lang.Throwable $r5;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r6 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.os.WorkSource;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r3;

     label1:
        $r4 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl: void noteLongPartialWakelockFinishFromSource(java.lang.String,java.lang.String,android.os.WorkSource)>(r6, r1, r2);

        exitmonitor r3;

     label2:
        return;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r3;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteLongPartialWakelockStart(java.lang.String, java.lang.String, int)
    {
        com.android.server.am.BatteryStatsService r0;
        java.lang.String r1, r5;
        int i0;
        com.android.internal.os.BatteryStatsImpl r2, $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r5 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r2 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r2;

     label1:
        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl: void noteLongPartialWakelockStart(java.lang.String,java.lang.String,int)>(r5, r1, i0);

        exitmonitor r2;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r2;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteLongPartialWakelockStartFromSource(java.lang.String, java.lang.String, android.os.WorkSource)
    {
        com.android.server.am.BatteryStatsService r0;
        java.lang.String r1, r6;
        android.os.WorkSource r2;
        com.android.internal.os.BatteryStatsImpl r3, $r4;
        java.lang.Throwable $r5;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r6 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.os.WorkSource;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r3;

     label1:
        $r4 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl: void noteLongPartialWakelockStartFromSource(java.lang.String,java.lang.String,android.os.WorkSource)>(r6, r1, r2);

        exitmonitor r3;

     label2:
        return;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r3;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteMobileRadioPowerState(int, long, int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0, i2;
        long l1;
        com.android.internal.os.BatteryStatsImpl r1, $r3;
        boolean z0;
        com.android.server.am.BatteryExternalStatsWorker $r4;
        java.lang.Throwable $r6;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        i2 := @parameter2: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        z0 = virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl: boolean noteMobileRadioPowerStateLocked(int,long,int)>(i0, l1, i2);

        exitmonitor r1;

     label2:
        if z0 == 0 goto label3;

        $r4 = r0.<com.android.server.am.BatteryStatsService: com.android.server.am.BatteryExternalStatsWorker mWorker>;

        virtualinvoke $r4.<com.android.server.am.BatteryExternalStatsWorker: java.util.concurrent.Future scheduleSync(java.lang.String,int)>("modem-data", 4);

     label3:
        return;

     label4:
        $r6 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void noteModemControllerActivity(android.telephony.ModemActivityInfo)
    {
        com.android.server.am.BatteryStatsService r0;
        android.telephony.ModemActivityInfo r1;
        java.lang.StringBuilder $r3;
        java.lang.String $r6;
        boolean $z0;
        com.android.internal.os.BatteryStatsImpl $r7;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r1 := @parameter0: android.telephony.ModemActivityInfo;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        if r1 == null goto label2;

        $z0 = virtualinvoke r1.<android.telephony.ModemActivityInfo: boolean isValid()>();

        if $z0 != 0 goto label1;

        goto label2;

     label1:
        $r7 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r7.<com.android.internal.os.BatteryStatsImpl: void updateMobileRadioState(android.telephony.ModemActivityInfo)>(r1);

        return;

     label2:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid modem data given: ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("BatteryStatsService", $r6);

        return;
    }

    public void noteNetworkInterfaceType(java.lang.String, int)
    {
        com.android.server.am.BatteryStatsService r0;
        java.lang.String r1;
        int i0;
        com.android.internal.os.BatteryStatsImpl $r2;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r2 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl: void noteNetworkInterfaceType(java.lang.String,int)>(r1, i0);

        return;
    }

    public void noteNetworkStatsEnabled()
    {
        com.android.server.am.BatteryStatsService r0;
        com.android.server.am.BatteryExternalStatsWorker $r1;

        r0 := @this: com.android.server.am.BatteryStatsService;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r1 = r0.<com.android.server.am.BatteryStatsService: com.android.server.am.BatteryExternalStatsWorker mWorker>;

        virtualinvoke $r1.<com.android.server.am.BatteryExternalStatsWorker: java.util.concurrent.Future scheduleSync(java.lang.String,int)>("network-stats-enabled", 6);

        return;
    }

    public void notePackageInstalled(java.lang.String, long)
    {
        com.android.server.am.BatteryStatsService r0;
        long l0;
        com.android.internal.os.BatteryStatsImpl r1, $r2;
        java.lang.Throwable $r3;
        java.lang.String r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r4 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl: void notePackageInstalledLocked(java.lang.String,long)>(r4, l0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void notePackageUninstalled(java.lang.String)
    {
        com.android.server.am.BatteryStatsService r0;
        com.android.internal.os.BatteryStatsImpl r1, $r2;
        java.lang.Throwable $r3;
        java.lang.String r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r4 := @parameter0: java.lang.String;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl: void notePackageUninstalledLocked(java.lang.String)>(r4);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void notePhoneDataConnectionState(int, boolean, int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0, i1;
        boolean z0;
        com.android.internal.os.BatteryStatsImpl r1, $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        i1 := @parameter2: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl: void notePhoneDataConnectionStateLocked(int,boolean,int)>(i0, z0, i1);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void notePhoneOff()
    {
        com.android.server.am.BatteryStatsService r0;
        com.android.internal.os.BatteryStatsImpl r1, $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl: void notePhoneOffLocked()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void notePhoneOn()
    {
        com.android.server.am.BatteryStatsService r0;
        com.android.internal.os.BatteryStatsImpl r1, $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl: void notePhoneOnLocked()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void notePhoneSignalStrength(android.telephony.SignalStrength)
    {
        com.android.server.am.BatteryStatsService r0;
        com.android.internal.os.BatteryStatsImpl r1, $r2;
        java.lang.Throwable $r3;
        android.telephony.SignalStrength r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r4 := @parameter0: android.telephony.SignalStrength;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl: void notePhoneSignalStrengthLocked(android.telephony.SignalStrength)>(r4);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void notePhoneState(int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0, i1;
        com.android.internal.os.BatteryStatsImpl r1, $r6;
        android.content.Context $r3;
        java.lang.Object $r4;
        android.telephony.TelephonyManager $r5;
        java.lang.Throwable $r7;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r3 = r0.<com.android.server.am.BatteryStatsService: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/telephony/TelephonyManager;");

        $r5 = (android.telephony.TelephonyManager) $r4;

        i1 = virtualinvoke $r5.<android.telephony.TelephonyManager: int getSimState()>();

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r6 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r6.<com.android.internal.os.BatteryStatsImpl: void notePhoneStateLocked(int,int)>(i0, i1);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r7 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    void noteProcessAnr(java.lang.String, int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl r1, $r2;
        java.lang.Throwable $r3;
        java.lang.String r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r4 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl: void noteProcessAnrLocked(java.lang.String,int)>(r4, i0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    void noteProcessCrash(java.lang.String, int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl r1, $r2;
        java.lang.Throwable $r3;
        java.lang.String r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r4 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl: void noteProcessCrashLocked(java.lang.String,int)>(r4, i0);

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int,java.lang.String,int)>(28, i0, r4, 2);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    void noteProcessFinish(java.lang.String, int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl r1, $r2;
        java.lang.Throwable $r3;
        java.lang.String r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r4 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl: void noteProcessFinishLocked(java.lang.String,int)>(r4, i0);

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int,java.lang.String,int)>(28, i0, r4, 0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    void noteProcessStart(java.lang.String, int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl r1, $r2;
        java.lang.Throwable $r3;
        java.lang.String r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r4 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl: void noteProcessStartLocked(java.lang.String,int)>(r4, i0);

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int,java.lang.String,int)>(28, i0, r4, 1);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteResetAudio()
    {
        com.android.server.am.BatteryStatsService r0;
        com.android.internal.os.BatteryStatsImpl r1, $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl: void noteResetAudioLocked()>();

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write_non_chained(int,int,java.lang.String,int)>(23, -1, null, 2);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteResetBleScan()
    {
        com.android.server.am.BatteryStatsService r0;
        com.android.internal.os.BatteryStatsImpl r1, $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl: void noteResetBluetoothScanLocked()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteResetCamera()
    {
        com.android.server.am.BatteryStatsService r0;
        com.android.internal.os.BatteryStatsImpl r1, $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl: void noteResetCameraLocked()>();

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write_non_chained(int,int,java.lang.String,int)>(25, -1, null, 2);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteResetFlashlight()
    {
        com.android.server.am.BatteryStatsService r0;
        com.android.internal.os.BatteryStatsImpl r1, $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl: void noteResetFlashlightLocked()>();

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write_non_chained(int,int,java.lang.String,int)>(26, -1, null, 2);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteResetVideo()
    {
        com.android.server.am.BatteryStatsService r0;
        com.android.internal.os.BatteryStatsImpl r1, $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl: void noteResetVideoLocked()>();

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write_non_chained(int,int,java.lang.String,int)>(24, -1, null, 2);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteScreenBrightness(int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl r1, $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int)>(9, i0);

        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl: void noteScreenBrightnessLocked(int)>(i0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteScreenState(int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl r1, $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int)>(29, i0);

        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl: void noteScreenStateLocked(int)>(i0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteStartAudio(int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl r1, $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl: void noteAudioOnLocked(int)>(i0);

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write_non_chained(int,int,java.lang.String,int)>(23, i0, null, 1);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteStartCamera(int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl r1, $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl: void noteCameraOnLocked(int)>(i0);

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write_non_chained(int,int,java.lang.String,int)>(25, i0, null, 1);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteStartSensor(int, int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0, i1;
        com.android.internal.os.BatteryStatsImpl r1, $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl: void noteStartSensorLocked(int,int)>(i0, i1);

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write_non_chained(int,int,java.lang.String,int,int)>(5, i0, null, i1, 1);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteStartVideo(int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl r1, $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl: void noteVideoOnLocked(int)>(i0);

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write_non_chained(int,int,java.lang.String,int)>(24, i0, null, 1);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteStartWakelock(int, int, java.lang.String, java.lang.String, int, boolean)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0, i1, i2;
        java.lang.String r1, r5;
        boolean z0;
        com.android.internal.os.BatteryStatsImpl r2, $r3;
        long $l3, $l4;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r5 := @parameter2: java.lang.String;

        r1 := @parameter3: java.lang.String;

        i2 := @parameter4: int;

        z0 := @parameter5: boolean;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r2 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r2;

     label1:
        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        $l3 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l4 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl: void noteStartWakeLocked(int,int,android.os.WorkSource$WorkChain,java.lang.String,java.lang.String,int,boolean,long,long)>(i0, i1, null, r5, r1, i2, z0, $l3, $l4);

        exitmonitor r2;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r2;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteStartWakelockFromSource(android.os.WorkSource, int, java.lang.String, java.lang.String, int, boolean)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0, i1;
        java.lang.String r1, r2;
        boolean z0;
        com.android.internal.os.BatteryStatsImpl r3, $r4;
        java.lang.Throwable $r5;
        android.os.WorkSource r6;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r6 := @parameter0: android.os.WorkSource;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        i1 := @parameter4: int;

        z0 := @parameter5: boolean;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r3;

     label1:
        $r4 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl: void noteStartWakeFromSourceLocked(android.os.WorkSource,int,java.lang.String,java.lang.String,int,boolean)>(r6, i0, r1, r2, i1, z0);

        exitmonitor r3;

     label2:
        return;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r3;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteStopAudio(int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl r1, $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl: void noteAudioOffLocked(int)>(i0);

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write_non_chained(int,int,java.lang.String,int)>(23, i0, null, 0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteStopCamera(int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl r1, $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl: void noteCameraOffLocked(int)>(i0);

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write_non_chained(int,int,java.lang.String,int)>(25, i0, null, 0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteStopSensor(int, int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0, i1;
        com.android.internal.os.BatteryStatsImpl r1, $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl: void noteStopSensorLocked(int,int)>(i0, i1);

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write_non_chained(int,int,java.lang.String,int,int)>(5, i0, null, i1, 0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteStopVideo(int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl r1, $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl: void noteVideoOffLocked(int)>(i0);

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write_non_chained(int,int,java.lang.String,int)>(24, i0, null, 0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteStopWakelock(int, int, java.lang.String, java.lang.String, int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0, i1, i2;
        java.lang.String r1, r5;
        com.android.internal.os.BatteryStatsImpl r2, $r3;
        long $l3, $l4;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r5 := @parameter2: java.lang.String;

        r1 := @parameter3: java.lang.String;

        i2 := @parameter4: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r2 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r2;

     label1:
        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        $l3 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l4 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl: void noteStopWakeLocked(int,int,android.os.WorkSource$WorkChain,java.lang.String,java.lang.String,int,long,long)>(i0, i1, null, r5, r1, i2, $l3, $l4);

        exitmonitor r2;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r2;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteStopWakelockFromSource(android.os.WorkSource, int, java.lang.String, java.lang.String, int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0, i1;
        java.lang.String r1, r2;
        com.android.internal.os.BatteryStatsImpl r3, $r4;
        java.lang.Throwable $r5;
        android.os.WorkSource r6;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r6 := @parameter0: android.os.WorkSource;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        i1 := @parameter4: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r3;

     label1:
        $r4 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl: void noteStopWakeFromSourceLocked(android.os.WorkSource,int,java.lang.String,java.lang.String,int)>(r6, i0, r1, r2, i1);

        exitmonitor r3;

     label2:
        return;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r3;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteSyncFinish(java.lang.String, int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl r1, $r2;
        java.lang.Throwable $r3;
        java.lang.String r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r4 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl: void noteSyncFinishLocked(java.lang.String,int)>(r4, i0);

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write_non_chained(int,int,java.lang.String,java.lang.String,int)>(7, i0, null, r4, 0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteSyncStart(java.lang.String, int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl r1, $r2;
        java.lang.Throwable $r3;
        java.lang.String r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r4 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl: void noteSyncStartLocked(java.lang.String,int)>(r4, i0);

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write_non_chained(int,int,java.lang.String,java.lang.String,int)>(7, i0, null, r4, 1);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    void noteUidProcessState(int, int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0, i1;
        com.android.internal.os.BatteryStatsImpl r1, $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl: void noteUidProcessStateLocked(int,int)>(i0, i1);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteUserActivity(int, int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0, i1;
        com.android.internal.os.BatteryStatsImpl r1, $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl: void noteUserActivityLocked(int,int)>(i0, i1);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteVibratorOff(int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl r1, $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl: void noteVibratorOffLocked(int)>(i0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteVibratorOn(int, long)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0;
        long l1;
        com.android.internal.os.BatteryStatsImpl r1, $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl: void noteVibratorOnLocked(int,long)>(i0, l1);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteWakeUp(java.lang.String, int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl r1, $r2;
        java.lang.Throwable $r3;
        java.lang.String r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r4 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl: void noteWakeUpLocked(java.lang.String,int)>(r4, i0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteWakupAlarm(java.lang.String, int, android.os.WorkSource, java.lang.String)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0;
        android.os.WorkSource r1;
        java.lang.String r2, r6;
        com.android.internal.os.BatteryStatsImpl r3, $r4;
        java.lang.Throwable $r5;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r6 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 := @parameter2: android.os.WorkSource;

        r2 := @parameter3: java.lang.String;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r3;

     label1:
        $r4 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl: void noteWakupAlarmLocked(java.lang.String,int,android.os.WorkSource,java.lang.String)>(r6, i0, r1, r2);

        exitmonitor r3;

     label2:
        return;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r3;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteWifiBatchedScanStartedFromSource(android.os.WorkSource, int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl r1, $r2;
        java.lang.Throwable $r3;
        android.os.WorkSource r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r4 := @parameter0: android.os.WorkSource;

        i0 := @parameter1: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl: void noteWifiBatchedScanStartedFromSourceLocked(android.os.WorkSource,int)>(r4, i0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteWifiBatchedScanStoppedFromSource(android.os.WorkSource)
    {
        com.android.server.am.BatteryStatsService r0;
        com.android.internal.os.BatteryStatsImpl r1, $r2;
        java.lang.Throwable $r3;
        android.os.WorkSource r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r4 := @parameter0: android.os.WorkSource;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl: void noteWifiBatchedScanStoppedFromSourceLocked(android.os.WorkSource)>(r4);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteWifiControllerActivity(android.os.connectivity.WifiActivityEnergyInfo)
    {
        com.android.server.am.BatteryStatsService r0;
        android.os.connectivity.WifiActivityEnergyInfo r1;
        java.lang.StringBuilder $r3;
        java.lang.String $r6;
        boolean $z0;
        com.android.internal.os.BatteryStatsImpl $r7;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r1 := @parameter0: android.os.connectivity.WifiActivityEnergyInfo;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        if r1 == null goto label2;

        $z0 = virtualinvoke r1.<android.os.connectivity.WifiActivityEnergyInfo: boolean isValid()>();

        if $z0 != 0 goto label1;

        goto label2;

     label1:
        $r7 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r7.<com.android.internal.os.BatteryStatsImpl: void updateWifiState(android.os.connectivity.WifiActivityEnergyInfo)>(r1);

        return;

     label2:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid wifi data given: ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("BatteryStatsService", $r6);

        return;
    }

    public void noteWifiMulticastDisabled(int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl r1, $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl: void noteWifiMulticastDisabledLocked(int)>(i0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteWifiMulticastEnabled(int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl r1, $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl: void noteWifiMulticastEnabledLocked(int)>(i0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteWifiOff()
    {
        com.android.server.am.BatteryStatsService r0;
        com.android.internal.os.BatteryStatsImpl r1, $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl: void noteWifiOffLocked()>();

        exitmonitor r1;

     label2:
        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int)>(113, 0);

        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteWifiOn()
    {
        com.android.server.am.BatteryStatsService r0;
        com.android.internal.os.BatteryStatsImpl r1, $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl: void noteWifiOnLocked()>();

        exitmonitor r1;

     label2:
        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int)>(113, 1);

        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteWifiRadioPowerState(int, long, int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0, i2;
        long l1;
        com.android.internal.os.BatteryStatsImpl r1, $r4, $r11;
        com.android.server.am.BatteryExternalStatsWorker r2;
        java.lang.StringBuilder r3;
        boolean $z0;
        java.lang.Throwable $r8;
        java.lang.String r9, $r10;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        i2 := @parameter2: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label01:
        $r4 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        $z0 = virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl: boolean isOnBattery()>();

        if $z0 == 0 goto label06;

     label02:
        if i0 == 3 goto label04;

        if i0 != 2 goto label03;

        goto label04;

     label03:
        r9 = "inactive";

        goto label05;

     label04:
        r9 = "active";

     label05:
        r2 = r0.<com.android.server.am.BatteryStatsService: com.android.server.am.BatteryExternalStatsWorker mWorker>;

        r3 = new java.lang.StringBuilder;

        specialinvoke r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("wifi-data: ");

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        $r10 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<com.android.server.am.BatteryExternalStatsWorker: java.util.concurrent.Future scheduleSync(java.lang.String,int)>($r10, 2);

     label06:
        $r11 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r11.<com.android.internal.os.BatteryStatsImpl: void noteWifiRadioPowerState(int,long,int)>(i0, l1, i2);

        exitmonitor r1;

     label07:
        return;

     label08:
        $r8 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public void noteWifiRssiChanged(int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl r1, $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl: void noteWifiRssiChangedLocked(int)>(i0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteWifiRunning(android.os.WorkSource)
    {
        com.android.server.am.BatteryStatsService r0;
        com.android.internal.os.BatteryStatsImpl r1, $r2;
        java.lang.Throwable $r3;
        android.os.WorkSource r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r4 := @parameter0: android.os.WorkSource;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl: void noteWifiRunningLocked(android.os.WorkSource)>(r4);

        exitmonitor r1;

     label2:
        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,android.os.WorkSource,int)>(114, r4, 1);

        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteWifiRunningChanged(android.os.WorkSource, android.os.WorkSource)
    {
        com.android.server.am.BatteryStatsService r0;
        android.os.WorkSource r1, r5;
        com.android.internal.os.BatteryStatsImpl r2, $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r5 := @parameter0: android.os.WorkSource;

        r1 := @parameter1: android.os.WorkSource;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r2 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r2;

     label1:
        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl: void noteWifiRunningChangedLocked(android.os.WorkSource,android.os.WorkSource)>(r5, r1);

        exitmonitor r2;

     label2:
        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,android.os.WorkSource,int)>(114, r1, 1);

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,android.os.WorkSource,int)>(114, r5, 0);

        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r2;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteWifiScanStarted(int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl r1, $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl: void noteWifiScanStartedLocked(int)>(i0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteWifiScanStartedFromSource(android.os.WorkSource)
    {
        com.android.server.am.BatteryStatsService r0;
        com.android.internal.os.BatteryStatsImpl r1, $r2;
        java.lang.Throwable $r3;
        android.os.WorkSource r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r4 := @parameter0: android.os.WorkSource;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl: void noteWifiScanStartedFromSourceLocked(android.os.WorkSource)>(r4);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteWifiScanStopped(int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl r1, $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl: void noteWifiScanStoppedLocked(int)>(i0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteWifiScanStoppedFromSource(android.os.WorkSource)
    {
        com.android.server.am.BatteryStatsService r0;
        com.android.internal.os.BatteryStatsImpl r1, $r2;
        java.lang.Throwable $r3;
        android.os.WorkSource r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r4 := @parameter0: android.os.WorkSource;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl: void noteWifiScanStoppedFromSourceLocked(android.os.WorkSource)>(r4);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteWifiState(int, java.lang.String)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl r1, $r2;
        java.lang.Throwable $r3;
        java.lang.String r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        r4 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl: void noteWifiStateLocked(int,java.lang.String)>(i0, r4);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteWifiStopped(android.os.WorkSource)
    {
        com.android.server.am.BatteryStatsService r0;
        com.android.internal.os.BatteryStatsImpl r1, $r2;
        java.lang.Throwable $r3;
        android.os.WorkSource r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r4 := @parameter0: android.os.WorkSource;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl: void noteWifiStoppedLocked(android.os.WorkSource)>(r4);

        exitmonitor r1;

     label2:
        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,android.os.WorkSource,int)>(114, r4, 0);

        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteWifiSupplicantStateChanged(int, boolean)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0;
        boolean z0;
        com.android.internal.os.BatteryStatsImpl r1, $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl: void noteWifiSupplicantStateChangedLocked(int,boolean)>(i0, z0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    void onCleanupUser(int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl r1, $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl: void onCleanupUserLocked(int)>(i0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void onLowPowerModeChanged(android.os.PowerSaveState)
    {
        com.android.server.am.BatteryStatsService r0;
        com.android.internal.os.BatteryStatsImpl r1, $r2;
        boolean $z0;
        java.lang.Throwable $r3;
        android.os.PowerSaveState r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r4 := @parameter0: android.os.PowerSaveState;

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        $z0 = r4.<android.os.PowerSaveState: boolean batterySaverEnabled>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl: void notePowerSaveModeLocked(boolean)>($z0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    void onUserRemoved(int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl r1, $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl: void onUserRemovedLocked(int)>(i0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void publish()
    {
        com.android.server.am.BatteryStatsService r0;
        com.android.server.am.BatteryStatsService$LocalService $r1;
        android.os.IBinder $r2;

        r0 := @this: com.android.server.am.BatteryStatsService;

        $r1 = new com.android.server.am.BatteryStatsService$LocalService;

        specialinvoke $r1.<com.android.server.am.BatteryStatsService$LocalService: void <init>(com.android.server.am.BatteryStatsService,com.android.server.am.BatteryStatsService$1)>(r0, null);

        staticinvoke <com.android.server.LocalServices: void addService(java.lang.Class,java.lang.Object)>(class "Landroid/os/BatteryStatsInternal;", $r1);

        $r2 = virtualinvoke r0.<com.android.server.am.BatteryStatsService: android.os.IBinder asBinder()>();

        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>("batterystats", $r2);

        return;
    }

    void removeIsolatedUid(int, int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0, i1;
        com.android.internal.os.BatteryStatsImpl r1, $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl: void scheduleRemoveIsolatedUidLocked(int,int)>(i0, i1);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    void removeUid(int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl r1, $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl: void removeUidStatsLocked(int)>(i0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void scheduleWriteToDisk()
    {
        com.android.server.am.BatteryStatsService r0;
        com.android.server.am.BatteryExternalStatsWorker $r1;

        r0 := @this: com.android.server.am.BatteryStatsService;

        $r1 = r0.<com.android.server.am.BatteryStatsService: com.android.server.am.BatteryExternalStatsWorker mWorker>;

        virtualinvoke $r1.<com.android.server.am.BatteryExternalStatsWorker: java.util.concurrent.Future scheduleWrite()>();

        return;
    }

    public void setBatteryState(int, int, int, int, int, int, int, int, long)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0, i1, i2, i3, i4, i5, i6, i7;
        long l8;
        com.android.server.am._$$Lambda$BatteryStatsService$Pej9zCsmgLSgNXX_S6WY0nw2EvI $r1;
        com.android.server.am.BatteryExternalStatsWorker $r2;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        i6 := @parameter6: int;

        i7 := @parameter7: int;

        l8 := @parameter8: long;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r2 = r0.<com.android.server.am.BatteryStatsService: com.android.server.am.BatteryExternalStatsWorker mWorker>;

        $r1 = new com.android.server.am._$$Lambda$BatteryStatsService$Pej9zCsmgLSgNXX_S6WY0nw2EvI;

        specialinvoke $r1.<com.android.server.am._$$Lambda$BatteryStatsService$Pej9zCsmgLSgNXX_S6WY0nw2EvI: void <init>(com.android.server.am.BatteryStatsService,int,int,int,int,int,int,int,int,long)>(r0, i2, i0, i1, i3, i4, i5, i6, i7, l8);

        virtualinvoke $r2.<com.android.server.am.BatteryExternalStatsWorker: void scheduleRunnable(java.lang.Runnable)>($r1);

        return;
    }

    public boolean setChargingStateUpdateDelayMillis(int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0;
        long l1, $l2;
        boolean z0;
        android.content.Context $r2, $r3;
        android.content.ContentResolver $r4;
        java.lang.Throwable $r5;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.am.BatteryStatsService: android.content.Context mContext>;

        virtualinvoke $r2.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.POWER_SAVER", null);

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r3 = r0.<com.android.server.am.BatteryStatsService: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $l2 = (long) i0;

        z0 = staticinvoke <android.provider.Settings$Global: boolean putLong(android.content.ContentResolver,java.lang.String,long)>($r4, "battery_charging_state_update_delay", $l2);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return z0;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void shutdown()
    {
        com.android.server.am.BatteryStatsService r0;
        com.android.internal.os.BatteryStatsImpl r1, $r3;
        com.android.server.am.BatteryExternalStatsWorker $r4;
        java.lang.Throwable $r5;

        r0 := @this: com.android.server.am.BatteryStatsService;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BatteryStats", "Writing battery stats before shutdown...");

        specialinvoke r0.<com.android.server.am.BatteryStatsService: void syncStats(java.lang.String,int)>("shutdown", 31);

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl: void shutdownLocked()>();

        exitmonitor r1;

     label2:
        $r4 = r0.<com.android.server.am.BatteryStatsService: com.android.server.am.BatteryExternalStatsWorker mWorker>;

        virtualinvoke $r4.<com.android.server.am.BatteryExternalStatsWorker: void shutdown()>();

        return;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void systemServicesReady()
    {
        com.android.server.am.BatteryStatsService r0;
        android.content.Context $r1;
        com.android.internal.os.BatteryStatsImpl $r2;

        r0 := @this: com.android.server.am.BatteryStatsService;

        $r2 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        $r1 = r0.<com.android.server.am.BatteryStatsService: android.content.Context mContext>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl: void systemServicesReady(android.content.Context)>($r1);

        return;
    }

    public android.os.health.HealthStatsParceler takeUidSnapshot(int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0, $i2;
        long l1;
        boolean $z0;
        android.content.Context $r1;
        java.lang.Throwable $r2, $r8;
        java.lang.Exception $r3;
        java.lang.String $r7;
        com.android.internal.os.BatteryStatsImpl r9;
        android.os.health.HealthStatsParceler r10;
        java.lang.StringBuilder r14;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if i0 == $i2 goto label01;

        $r1 = r0.<com.android.server.am.BatteryStatsService: android.content.Context mContext>;

        virtualinvoke $r1.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BATTERY_STATS", null);

     label01:
        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label02:
        $z0 = specialinvoke r0.<com.android.server.am.BatteryStatsService: boolean shouldCollectExternalStats()>();

        if $z0 == 0 goto label03;

        specialinvoke r0.<com.android.server.am.BatteryStatsService: void syncStats(java.lang.String,int)>("get-health-stats-for-uids", 31);

     label03:
        r9 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r9;

     label04:
        r10 = virtualinvoke r0.<com.android.server.am.BatteryStatsService: android.os.health.HealthStatsParceler getHealthStatsForUidLocked(int)>(i0);

        exitmonitor r9;

     label05:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return r10;

     label06:
        $r8 := @caughtexception;

     label07:
        exitmonitor r9;

     label08:
        throw $r8;

     label09:
        $r2 := @caughtexception;

        goto label13;

     label10:
        $r3 := @caughtexception;

     label11:
        r14 = new java.lang.StringBuilder;

        specialinvoke r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Crashed while writing for takeUidSnapshot(");

        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r7 = virtualinvoke r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("BatteryStatsService", $r7, $r3);

     label12:
        throw $r3;

     label13:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r2;

        catch java.lang.Exception from label02 to label03 with label10;
        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Exception from label03 to label04 with label10;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label07 to label08 with label06;
        catch java.lang.Exception from label08 to label09 with label10;
        catch java.lang.Throwable from label08 to label09 with label09;
        catch java.lang.Throwable from label11 to label12 with label09;
        catch java.lang.Throwable from label12 to label13 with label09;
    }

    public android.os.health.HealthStatsParceler[] takeUidSnapshots(int[])
    {
        com.android.server.am.BatteryStatsService r0;
        long l0;
        com.android.internal.os.BatteryStatsImpl r1;
        int i1, $i2, i3;
        android.os.health.HealthStatsParceler[] r2;
        boolean $z0, $z1;
        android.os.health.HealthStatsParceler $r3;
        android.content.Context $r4;
        java.lang.Throwable $r5, $r7;
        java.lang.Exception $r6;
        int[] r8;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r8 := @parameter0: int[];

        $z0 = staticinvoke <com.android.server.am.BatteryStatsService: boolean onlyCaller(int[])>(r8);

        if $z0 != 0 goto label01;

        $r4 = r0.<com.android.server.am.BatteryStatsService: android.content.Context mContext>;

        virtualinvoke $r4.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BATTERY_STATS", null);

     label01:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label02:
        $z1 = specialinvoke r0.<com.android.server.am.BatteryStatsService: boolean shouldCollectExternalStats()>();

        if $z1 == 0 goto label03;

        specialinvoke r0.<com.android.server.am.BatteryStatsService: void syncStats(java.lang.String,int)>("get-health-stats-for-uids", 31);

     label03:
        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label04:
        i1 = lengthof r8;

        r2 = newarray (android.os.health.HealthStatsParceler)[i1];

     label05:
        i3 = 0;

     label06:
        if i3 >= i1 goto label09;

     label07:
        $i2 = r8[i3];

        $r3 = virtualinvoke r0.<com.android.server.am.BatteryStatsService: android.os.health.HealthStatsParceler getHealthStatsForUidLocked(int)>($i2);

        r2[i3] = $r3;

     label08:
        i3 = i3 + 1;

        goto label06;

     label09:
        exitmonitor r1;

     label10:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return r2;

     label11:
        $r7 := @caughtexception;

     label12:
        exitmonitor r1;

     label13:
        throw $r7;

     label14:
        $r5 := @caughtexception;

        goto label17;

     label15:
        $r6 := @caughtexception;

     label16:
        throw $r6;

     label17:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r5;

        catch java.lang.Exception from label02 to label03 with label15;
        catch java.lang.Throwable from label02 to label03 with label14;
        catch java.lang.Exception from label03 to label04 with label15;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
        catch java.lang.Exception from label13 to label14 with label15;
        catch java.lang.Throwable from label13 to label14 with label14;
        catch java.lang.Throwable from label16 to label17 with label14;
    }

    public static void <clinit>()
    {
        <com.android.server.am.BatteryStatsService: java.lang.String TAG> = "BatteryStatsService";

        <com.android.server.am.BatteryStatsService: int MAX_LOW_POWER_STATS_SIZE> = 4096;

        <com.android.server.am.BatteryStatsService: boolean DBG> = 0;

        return;
    }
}
