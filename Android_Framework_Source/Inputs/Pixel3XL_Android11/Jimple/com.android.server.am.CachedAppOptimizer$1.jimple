class com.android.server.am.CachedAppOptimizer$1 extends java.lang.Object implements android.provider.DeviceConfig$OnPropertiesChangedListener
{
    final com.android.server.am.CachedAppOptimizer this$0;

    void <init>(com.android.server.am.CachedAppOptimizer)
    {
        com.android.server.am.CachedAppOptimizer$1 r0;
        com.android.server.am.CachedAppOptimizer r1;

        r0 := @this: com.android.server.am.CachedAppOptimizer$1;

        r1 := @parameter0: com.android.server.am.CachedAppOptimizer;

        r0.<com.android.server.am.CachedAppOptimizer$1: com.android.server.am.CachedAppOptimizer this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onPropertiesChanged(android.provider.DeviceConfig$Properties)
    {
        com.android.server.am.CachedAppOptimizer$1 r0;
        java.lang.Object r1, $r9;
        java.lang.String r2, $r10, $r11, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22;
        com.android.server.am.CachedAppOptimizer $r3, $r5, $r7, $r12, $r23, $r24, $r25, $r26, $r27, $r28, $r32;
        java.util.Set $r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        com.android.server.am.CachedAppOptimizer$PropertyChangedCallbackForTest $r6, $r8;
        java.lang.Throwable $r29;
        android.provider.DeviceConfig$Properties r30;
        java.util.Iterator r31;

        r0 := @this: com.android.server.am.CachedAppOptimizer$1;

        r30 := @parameter0: android.provider.DeviceConfig$Properties;

        $r3 = r0.<com.android.server.am.CachedAppOptimizer$1: com.android.server.am.CachedAppOptimizer this$0>;

        r1 = staticinvoke <com.android.server.am.CachedAppOptimizer: java.lang.Object access$000(com.android.server.am.CachedAppOptimizer)>($r3);

        entermonitor r1;

     label01:
        $r4 = virtualinvoke r30.<android.provider.DeviceConfig$Properties: java.util.Set getKeyset()>();

        r31 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke r31.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label22;

        $r9 = interfaceinvoke r31.<java.util.Iterator: java.lang.Object next()>();

        r2 = (java.lang.String) $r9;

        $r10 = "use_compaction";

        $z1 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z1 == 0 goto label04;

        $r28 = r0.<com.android.server.am.CachedAppOptimizer$1: com.android.server.am.CachedAppOptimizer this$0>;

        staticinvoke <com.android.server.am.CachedAppOptimizer: void access$100(com.android.server.am.CachedAppOptimizer)>($r28);

     label03:
        goto label21;

     label04:
        $r11 = "compact_action_1";

        $z2 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z2 != 0 goto label20;

        $r13 = "compact_action_2";

        $z3 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z3 == 0 goto label06;

     label05:
        goto label20;

     label06:
        $r14 = "compact_throttle_1";

        $z4 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z4 != 0 goto label18;

        $r15 = "compact_throttle_2";

        $z5 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z5 != 0 goto label18;

        $r16 = "compact_throttle_3";

        $z6 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z6 != 0 goto label18;

        $r17 = "compact_throttle_4";

        $z7 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z7 == 0 goto label08;

     label07:
        goto label18;

     label08:
        $r18 = "compact_statsd_sample_rate";

        $z8 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z8 == 0 goto label10;

        $r27 = r0.<com.android.server.am.CachedAppOptimizer$1: com.android.server.am.CachedAppOptimizer this$0>;

        staticinvoke <com.android.server.am.CachedAppOptimizer: void access$400(com.android.server.am.CachedAppOptimizer)>($r27);

     label09:
        goto label21;

     label10:
        $r19 = "freeze_statsd_sample_rate";

        $z9 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z9 == 0 goto label12;

        $r26 = r0.<com.android.server.am.CachedAppOptimizer$1: com.android.server.am.CachedAppOptimizer this$0>;

        staticinvoke <com.android.server.am.CachedAppOptimizer: void access$500(com.android.server.am.CachedAppOptimizer)>($r26);

     label11:
        goto label21;

     label12:
        $r20 = "compact_full_rss_throttle_kb";

        $z10 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z10 == 0 goto label14;

        $r25 = r0.<com.android.server.am.CachedAppOptimizer$1: com.android.server.am.CachedAppOptimizer this$0>;

        staticinvoke <com.android.server.am.CachedAppOptimizer: void access$600(com.android.server.am.CachedAppOptimizer)>($r25);

     label13:
        goto label21;

     label14:
        $r21 = "compact_full_delta_rss_throttle_kb";

        $z11 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z11 == 0 goto label16;

        $r24 = r0.<com.android.server.am.CachedAppOptimizer$1: com.android.server.am.CachedAppOptimizer this$0>;

        staticinvoke <com.android.server.am.CachedAppOptimizer: void access$700(com.android.server.am.CachedAppOptimizer)>($r24);

     label15:
        goto label21;

     label16:
        $r22 = "compact_proc_state_throttle";

        $z12 = virtualinvoke $r22.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z12 == 0 goto label21;

        $r23 = r0.<com.android.server.am.CachedAppOptimizer$1: com.android.server.am.CachedAppOptimizer this$0>;

        staticinvoke <com.android.server.am.CachedAppOptimizer: void access$800(com.android.server.am.CachedAppOptimizer)>($r23);

     label17:
        goto label21;

     label18:
        $r32 = r0.<com.android.server.am.CachedAppOptimizer$1: com.android.server.am.CachedAppOptimizer this$0>;

        staticinvoke <com.android.server.am.CachedAppOptimizer: void access$300(com.android.server.am.CachedAppOptimizer)>($r32);

     label19:
        goto label21;

     label20:
        $r12 = r0.<com.android.server.am.CachedAppOptimizer$1: com.android.server.am.CachedAppOptimizer this$0>;

        staticinvoke <com.android.server.am.CachedAppOptimizer: void access$200(com.android.server.am.CachedAppOptimizer)>($r12);

     label21:
        goto label02;

     label22:
        exitmonitor r1;

     label23:
        $r5 = r0.<com.android.server.am.CachedAppOptimizer$1: com.android.server.am.CachedAppOptimizer this$0>;

        $r6 = staticinvoke <com.android.server.am.CachedAppOptimizer: com.android.server.am.CachedAppOptimizer$PropertyChangedCallbackForTest access$900(com.android.server.am.CachedAppOptimizer)>($r5);

        if $r6 == null goto label24;

        $r7 = r0.<com.android.server.am.CachedAppOptimizer$1: com.android.server.am.CachedAppOptimizer this$0>;

        $r8 = staticinvoke <com.android.server.am.CachedAppOptimizer: com.android.server.am.CachedAppOptimizer$PropertyChangedCallbackForTest access$900(com.android.server.am.CachedAppOptimizer)>($r7);

        interfaceinvoke $r8.<com.android.server.am.CachedAppOptimizer$PropertyChangedCallbackForTest: void onPropertyChanged()>();

     label24:
        return;

     label25:
        $r29 := @caughtexception;

     label26:
        exitmonitor r1;

     label27:
        throw $r29;

        catch java.lang.Throwable from label01 to label02 with label25;
        catch java.lang.Throwable from label02 to label03 with label25;
        catch java.lang.Throwable from label04 to label05 with label25;
        catch java.lang.Throwable from label06 to label07 with label25;
        catch java.lang.Throwable from label08 to label09 with label25;
        catch java.lang.Throwable from label10 to label11 with label25;
        catch java.lang.Throwable from label12 to label13 with label25;
        catch java.lang.Throwable from label14 to label15 with label25;
        catch java.lang.Throwable from label16 to label17 with label25;
        catch java.lang.Throwable from label18 to label19 with label25;
        catch java.lang.Throwable from label20 to label21 with label25;
        catch java.lang.Throwable from label22 to label23 with label25;
        catch java.lang.Throwable from label26 to label27 with label25;
    }
}
