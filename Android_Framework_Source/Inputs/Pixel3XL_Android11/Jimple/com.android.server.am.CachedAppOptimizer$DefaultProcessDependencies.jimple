final class com.android.server.am.CachedAppOptimizer$DefaultProcessDependencies extends java.lang.Object implements com.android.server.am.CachedAppOptimizer$ProcessDependencies
{

    private void <init>()
    {
        com.android.server.am.CachedAppOptimizer$DefaultProcessDependencies r0;

        r0 := @this: com.android.server.am.CachedAppOptimizer$DefaultProcessDependencies;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    void <init>(com.android.server.am.CachedAppOptimizer$1)
    {
        com.android.server.am.CachedAppOptimizer$DefaultProcessDependencies r0;
        com.android.server.am.CachedAppOptimizer$1 r1;

        r0 := @this: com.android.server.am.CachedAppOptimizer$DefaultProcessDependencies;

        r1 := @parameter0: com.android.server.am.CachedAppOptimizer$1;

        specialinvoke r0.<com.android.server.am.CachedAppOptimizer$DefaultProcessDependencies: void <init>()>();

        return;
    }

    public long[] getRss(int)
    {
        com.android.server.am.CachedAppOptimizer$DefaultProcessDependencies r0;
        int i0;
        long[] $r1;

        r0 := @this: com.android.server.am.CachedAppOptimizer$DefaultProcessDependencies;

        i0 := @parameter0: int;

        $r1 = staticinvoke <android.os.Process: long[] getRss(int)>(i0);

        return $r1;
    }

    public void performCompaction(java.lang.String, int) throws java.io.IOException
    {
        com.android.server.am.CachedAppOptimizer$DefaultProcessDependencies r0;
        int i0;
        java.lang.StringBuilder $r1;
        java.io.FileOutputStream $r5;
        java.lang.String $r6, r10;
        byte[] $r7;
        java.lang.Throwable $r8, $r9;

        r0 := @this: com.android.server.am.CachedAppOptimizer$DefaultProcessDependencies;

        r10 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/proc/");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/reclaim");

        $r5 = new java.io.FileOutputStream;

        $r6 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.io.FileOutputStream: void <init>(java.lang.String)>($r6);

     label1:
        $r7 = virtualinvoke r10.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r5.<java.io.FileOutputStream: void write(byte[])>($r7);

     label2:
        virtualinvoke $r5.<java.io.FileOutputStream: void close()>();

        return;

     label3:
        $r9 := @caughtexception;

     label4:
        virtualinvoke $r5.<java.io.FileOutputStream: void close()>();

     label5:
        goto label7;

     label6:
        $r8 := @caughtexception;

        virtualinvoke $r9.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r8);

     label7:
        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label6;
    }
}
