final class com.android.server.am.CachedAppOptimizer$FreezeHandler extends android.os.Handler
{
    final com.android.server.am.CachedAppOptimizer this$0;

    private void <init>(com.android.server.am.CachedAppOptimizer)
    {
        com.android.server.am.CachedAppOptimizer$FreezeHandler r0;
        com.android.server.am.CachedAppOptimizer r1;
        com.android.server.ServiceThread $r2;
        android.os.Looper $r3;

        r0 := @this: com.android.server.am.CachedAppOptimizer$FreezeHandler;

        r1 := @parameter0: com.android.server.am.CachedAppOptimizer;

        r0.<com.android.server.am.CachedAppOptimizer$FreezeHandler: com.android.server.am.CachedAppOptimizer this$0> = r1;

        $r2 = r1.<com.android.server.am.CachedAppOptimizer: com.android.server.ServiceThread mCachedAppOptimizerThread>;

        $r3 = virtualinvoke $r2.<com.android.server.ServiceThread: android.os.Looper getLooper()>();

        specialinvoke r0.<android.os.Handler: void <init>(android.os.Looper)>($r3);

        return;
    }

    void <init>(com.android.server.am.CachedAppOptimizer, com.android.server.am.CachedAppOptimizer$1)
    {
        com.android.server.am.CachedAppOptimizer$FreezeHandler r0;
        com.android.server.am.CachedAppOptimizer r1;
        com.android.server.am.CachedAppOptimizer$1 r2;

        r0 := @this: com.android.server.am.CachedAppOptimizer$FreezeHandler;

        r1 := @parameter0: com.android.server.am.CachedAppOptimizer;

        r2 := @parameter1: com.android.server.am.CachedAppOptimizer$1;

        specialinvoke r0.<com.android.server.am.CachedAppOptimizer$FreezeHandler: void <init>(com.android.server.am.CachedAppOptimizer)>(r1);

        return;
    }

    private void freezeProcess(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.CachedAppOptimizer$FreezeHandler r0;
        com.android.server.am.ActivityManagerService r1;
        int i0, $i3, $i4, $i6;
        java.lang.String r2, $r12, $r18, $r29;
        long l1, l2, $l7, $l11;
        boolean z0, $z1, $z2, $z3;
        com.android.server.am.CachedAppOptimizer $r3, $r21, $r23;
        java.lang.StringBuilder $r13, r33, r35;
        java.lang.Object[] $r19;
        java.lang.Integer $r20;
        java.util.Random $r22;
        float $f0, $f1;
        byte $b10;
        java.lang.Exception $r24;
        java.lang.Throwable $r30;
        com.android.server.am.ProcessRecord r31;

        r0 := @this: com.android.server.am.CachedAppOptimizer$FreezeHandler;

        r31 := @parameter0: com.android.server.am.ProcessRecord;

        $r3 = r0.<com.android.server.am.CachedAppOptimizer$FreezeHandler: com.android.server.am.CachedAppOptimizer this$0>;

        r1 = staticinvoke <com.android.server.am.CachedAppOptimizer: com.android.server.am.ActivityManagerService access$1300(com.android.server.am.CachedAppOptimizer)>($r3);

        entermonitor r1;

     label01:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        i0 = r31.<com.android.server.am.ProcessRecord: int pid>;

        r2 = r31.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $i3 = r31.<com.android.server.am.ProcessRecord: int curAdj>;

        if $i3 < 900 goto label16;

        $z2 = r31.<com.android.server.am.ProcessRecord: boolean shouldNotFreeze>;

        if $z2 == 0 goto label03;

     label02:
        goto label16;

     label03:
        if i0 == 0 goto label14;

     label04:
        $z3 = r31.<com.android.server.am.ProcessRecord: boolean frozen>;

        if $z3 == 0 goto label06;

     label05:
        goto label14;

     label06:
        l1 = r31.<com.android.server.am.ProcessRecord: long freezeUnfreezeTime>;

     label07:
        $i6 = r31.<com.android.server.am.ProcessRecord: int uid>;

        staticinvoke <android.os.Process: void setProcessFrozen(int,int,boolean)>(i0, $i6, 1);

        $l7 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r31.<com.android.server.am.ProcessRecord: long freezeUnfreezeTime> = $l7;

        r31.<com.android.server.am.ProcessRecord: boolean frozen> = 1;

     label08:
        goto label11;

     label09:
        $r24 := @caughtexception;

     label10:
        r33 = new java.lang.StringBuilder;

        specialinvoke r33.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to freeze ");

        virtualinvoke r33.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        virtualinvoke r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r29 = virtualinvoke r33.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r29);

     label11:
        l2 = r31.<com.android.server.am.ProcessRecord: long freezeUnfreezeTime>;

        z0 = r31.<com.android.server.am.ProcessRecord: boolean frozen>;

        exitmonitor r1;

     label12:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        if z0 == 0 goto label13;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("froze ");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r18 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("ActivityManager", $r18);

        $r19 = newarray (java.lang.Object)[2];

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r19[0] = $r20;

        $r19[1] = r2;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(30068, $r19);

        $r21 = r0.<com.android.server.am.CachedAppOptimizer$FreezeHandler: com.android.server.am.CachedAppOptimizer this$0>;

        $r22 = staticinvoke <com.android.server.am.CachedAppOptimizer: java.util.Random access$2000(com.android.server.am.CachedAppOptimizer)>($r21);

        $f0 = virtualinvoke $r22.<java.util.Random: float nextFloat()>();

        $r23 = r0.<com.android.server.am.CachedAppOptimizer$FreezeHandler: com.android.server.am.CachedAppOptimizer this$0>;

        $f1 = $r23.<com.android.server.am.CachedAppOptimizer: float mFreezerStatsdSampleRate>;

        $b10 = $f0 cmpg $f1;

        if $b10 >= 0 goto label13;

        $l11 = l2 - l1;

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int,int,java.lang.String,long)>(254, 1, i0, r2, $l11);

     label13:
        return;

     label14:
        exitmonitor r1;

     label15:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label16:
        r35 = new java.lang.StringBuilder;

        specialinvoke r35.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skipping freeze for process ");

        virtualinvoke r35.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        virtualinvoke r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" curAdj = ");

        $i4 = r31.<com.android.server.am.ProcessRecord: int curAdj>;

        virtualinvoke r35.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        virtualinvoke r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", shouldNotFreeze = ");

        $z1 = r31.<com.android.server.am.ProcessRecord: boolean shouldNotFreeze>;

        virtualinvoke r35.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r12 = virtualinvoke r35.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("ActivityManager", $r12);

        exitmonitor r1;

     label17:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label18:
        $r30 := @caughtexception;

     label19:
        exitmonitor r1;

     label20:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r30;

        catch java.lang.Throwable from label01 to label02 with label18;
        catch java.lang.Throwable from label04 to label05 with label18;
        catch java.lang.Throwable from label06 to label07 with label18;
        catch java.lang.Exception from label07 to label08 with label09;
        catch java.lang.Throwable from label07 to label08 with label18;
        catch java.lang.Throwable from label10 to label11 with label18;
        catch java.lang.Throwable from label11 to label12 with label18;
        catch java.lang.Throwable from label14 to label15 with label18;
        catch java.lang.Throwable from label16 to label17 with label18;
        catch java.lang.Throwable from label19 to label20 with label18;
    }

    private void reportUnfreeze(int, int, java.lang.String)
    {
        com.android.server.am.CachedAppOptimizer$FreezeHandler r0;
        int i0, i1;
        java.lang.String r1;
        java.lang.Object[] $r2;
        java.lang.Integer $r3;
        com.android.server.am.CachedAppOptimizer $r4, $r6;
        java.util.Random $r5;
        float $f0, $f1;
        byte $b3;

        r0 := @this: com.android.server.am.CachedAppOptimizer$FreezeHandler;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        $r2 = newarray (java.lang.Object)[2];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r2[0] = $r3;

        $r2[1] = r1;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(30069, $r2);

        $r4 = r0.<com.android.server.am.CachedAppOptimizer$FreezeHandler: com.android.server.am.CachedAppOptimizer this$0>;

        $r5 = staticinvoke <com.android.server.am.CachedAppOptimizer: java.util.Random access$2000(com.android.server.am.CachedAppOptimizer)>($r4);

        $f0 = virtualinvoke $r5.<java.util.Random: float nextFloat()>();

        $r6 = r0.<com.android.server.am.CachedAppOptimizer$FreezeHandler: com.android.server.am.CachedAppOptimizer this$0>;

        $f1 = $r6.<com.android.server.am.CachedAppOptimizer: float mFreezerStatsdSampleRate>;

        $b3 = $f0 cmpg $f1;

        if $b3 >= 0 goto label1;

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int,int,java.lang.String,int)>(254, 2, i0, r1, i1);

     label1:
        return;
    }

    public void handleMessage(android.os.Message)
    {
        com.android.server.am.CachedAppOptimizer$FreezeHandler r0;
        android.os.Message r1;
        int i0, $i1, $i2;
        java.lang.Object $r2, $r4;
        com.android.server.am.ProcessRecord $r3;
        java.lang.String $r5;

        r0 := @this: com.android.server.am.CachedAppOptimizer$FreezeHandler;

        r1 := @parameter0: android.os.Message;

        i0 = r1.<android.os.Message: int what>;

        if i0 == 3 goto label2;

        if i0 == 4 goto label1;

        return;

     label1:
        $i2 = r1.<android.os.Message: int arg1>;

        $i1 = r1.<android.os.Message: int arg2>;

        $r4 = r1.<android.os.Message: java.lang.Object obj>;

        $r5 = (java.lang.String) $r4;

        specialinvoke r0.<com.android.server.am.CachedAppOptimizer$FreezeHandler: void reportUnfreeze(int,int,java.lang.String)>($i2, $i1, $r5);

        goto label3;

     label2:
        $r2 = r1.<android.os.Message: java.lang.Object obj>;

        $r3 = (com.android.server.am.ProcessRecord) $r2;

        specialinvoke r0.<com.android.server.am.CachedAppOptimizer$FreezeHandler: void freezeProcess(com.android.server.am.ProcessRecord)>($r3);

     label3:
        return;
    }
}
