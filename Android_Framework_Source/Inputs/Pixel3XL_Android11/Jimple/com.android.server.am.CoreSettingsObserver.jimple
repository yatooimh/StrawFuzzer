final class com.android.server.am.CoreSettingsObserver extends android.database.ContentObserver
{
    private static final java.lang.String LOG_TAG;
    static final java.util.List sDeviceConfigEntries;
    static final java.util.Map sGlobalSettingToTypeMap;
    static final java.util.Map sSecureSettingToTypeMap;
    static final java.util.Map sSystemSettingToTypeMap;
    private final com.android.server.am.ActivityManagerService mActivityManagerService;
    private final android.os.Bundle mCoreSettings;

    static void <clinit>()
    {
        java.util.List r0, $r63, $r67, $r72, $r76, $r81, $r83, $r87;
        java.lang.Class r1, $r3, $r9, $r12, $r17, $r34, $r45, $r64, $r68, $r73, $r77, $r80, $r84, $r88;
        java.lang.Boolean r2, $r65;
        java.lang.String $r4;
        java.util.HashMap $r5, $r6, $r7;
        java.util.ArrayList $r8;
        java.util.Map $r10, $r13, $r15, $r18, $r20, $r22, $r24, $r26, $r28, $r30, $r32, $r35, $r37, $r39, $r41, $r43, $r46, $r48, $r50, $r52, $r54, $r56, $r58, $r60;
        com.android.server.am.CoreSettingsObserver$DeviceConfigEntry $r62, $r66, $r70, $r71, $r75, $r79, $r82, $r86;
        java.lang.Integer $r69, $r74, $r78;
        java.lang.Float $r85, $r89;

        $r3 = class "Lcom/android/server/am/CoreSettingsObserver;";

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.android.server.am.CoreSettingsObserver: java.lang.String LOG_TAG> = $r4;

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        <com.android.server.am.CoreSettingsObserver: java.util.Map sSecureSettingToTypeMap> = $r5;

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        <com.android.server.am.CoreSettingsObserver: java.util.Map sSystemSettingToTypeMap> = $r6;

        $r7 = new java.util.HashMap;

        specialinvoke $r7.<java.util.HashMap: void <init>()>();

        <com.android.server.am.CoreSettingsObserver: java.util.Map sGlobalSettingToTypeMap> = $r7;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        <com.android.server.am.CoreSettingsObserver: java.util.List sDeviceConfigEntries> = $r8;

        $r10 = <com.android.server.am.CoreSettingsObserver: java.util.Map sSecureSettingToTypeMap>;

        $r9 = <java.lang.Integer: java.lang.Class TYPE>;

        interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("long_press_timeout", $r9);

        $r13 = <com.android.server.am.CoreSettingsObserver: java.util.Map sSecureSettingToTypeMap>;

        $r12 = <java.lang.Integer: java.lang.Class TYPE>;

        interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("multi_press_timeout", $r12);

        $r15 = <com.android.server.am.CoreSettingsObserver: java.util.Map sSystemSettingToTypeMap>;

        interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("time_12_24", class "Ljava/lang/String;");

        $r18 = <com.android.server.am.CoreSettingsObserver: java.util.Map sGlobalSettingToTypeMap>;

        $r17 = <java.lang.Integer: java.lang.Class TYPE>;

        interfaceinvoke $r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("debug_view_attributes", $r17);

        $r20 = <com.android.server.am.CoreSettingsObserver: java.util.Map sGlobalSettingToTypeMap>;

        interfaceinvoke $r20.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("debug_view_attributes_application_package", class "Ljava/lang/String;");

        $r22 = <com.android.server.am.CoreSettingsObserver: java.util.Map sGlobalSettingToTypeMap>;

        interfaceinvoke $r22.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("angle_debug_package", class "Ljava/lang/String;");

        $r24 = <com.android.server.am.CoreSettingsObserver: java.util.Map sGlobalSettingToTypeMap>;

        interfaceinvoke $r24.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("angle_gl_driver_all_angle", class "Ljava/lang/String;");

        $r26 = <com.android.server.am.CoreSettingsObserver: java.util.Map sGlobalSettingToTypeMap>;

        interfaceinvoke $r26.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("angle_gl_driver_selection_pkgs", class "Ljava/lang/String;");

        $r28 = <com.android.server.am.CoreSettingsObserver: java.util.Map sGlobalSettingToTypeMap>;

        interfaceinvoke $r28.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("angle_gl_driver_selection_values", class "Ljava/lang/String;");

        $r30 = <com.android.server.am.CoreSettingsObserver: java.util.Map sGlobalSettingToTypeMap>;

        interfaceinvoke $r30.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("angle_whitelist", class "Ljava/lang/String;");

        $r32 = <com.android.server.am.CoreSettingsObserver: java.util.Map sGlobalSettingToTypeMap>;

        interfaceinvoke $r32.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("show_angle_in_use_dialog_box", class "Ljava/lang/String;");

        $r35 = <com.android.server.am.CoreSettingsObserver: java.util.Map sGlobalSettingToTypeMap>;

        $r34 = <java.lang.Integer: java.lang.Class TYPE>;

        interfaceinvoke $r35.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("enable_gpu_debug_layers", $r34);

        $r37 = <com.android.server.am.CoreSettingsObserver: java.util.Map sGlobalSettingToTypeMap>;

        interfaceinvoke $r37.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("gpu_debug_app", class "Ljava/lang/String;");

        $r39 = <com.android.server.am.CoreSettingsObserver: java.util.Map sGlobalSettingToTypeMap>;

        interfaceinvoke $r39.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("gpu_debug_layers", class "Ljava/lang/String;");

        $r41 = <com.android.server.am.CoreSettingsObserver: java.util.Map sGlobalSettingToTypeMap>;

        interfaceinvoke $r41.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("gpu_debug_layers_gles", class "Ljava/lang/String;");

        $r43 = <com.android.server.am.CoreSettingsObserver: java.util.Map sGlobalSettingToTypeMap>;

        interfaceinvoke $r43.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("gpu_debug_layer_app", class "Ljava/lang/String;");

        $r46 = <com.android.server.am.CoreSettingsObserver: java.util.Map sGlobalSettingToTypeMap>;

        $r45 = <java.lang.Integer: java.lang.Class TYPE>;

        interfaceinvoke $r46.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("game_driver_all_apps", $r45);

        $r48 = <com.android.server.am.CoreSettingsObserver: java.util.Map sGlobalSettingToTypeMap>;

        interfaceinvoke $r48.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("game_driver_opt_in_apps", class "Ljava/lang/String;");

        $r50 = <com.android.server.am.CoreSettingsObserver: java.util.Map sGlobalSettingToTypeMap>;

        interfaceinvoke $r50.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("game_driver_prerelease_opt_in_apps", class "Ljava/lang/String;");

        $r52 = <com.android.server.am.CoreSettingsObserver: java.util.Map sGlobalSettingToTypeMap>;

        interfaceinvoke $r52.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("game_driver_opt_out_apps", class "Ljava/lang/String;");

        $r54 = <com.android.server.am.CoreSettingsObserver: java.util.Map sGlobalSettingToTypeMap>;

        interfaceinvoke $r54.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("game_driver_blacklist", class "Ljava/lang/String;");

        $r56 = <com.android.server.am.CoreSettingsObserver: java.util.Map sGlobalSettingToTypeMap>;

        interfaceinvoke $r56.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("game_driver_whitelist", class "Ljava/lang/String;");

        $r58 = <com.android.server.am.CoreSettingsObserver: java.util.Map sGlobalSettingToTypeMap>;

        interfaceinvoke $r58.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("game_driver_blacklists", class "Ljava/lang/String;");

        $r60 = <com.android.server.am.CoreSettingsObserver: java.util.Map sGlobalSettingToTypeMap>;

        interfaceinvoke $r60.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("game_driver_sphal_libraries", class "Ljava/lang/String;");

        $r63 = <com.android.server.am.CoreSettingsObserver: java.util.List sDeviceConfigEntries>;

        $r62 = new com.android.server.am.CoreSettingsObserver$DeviceConfigEntry;

        $r64 = <java.lang.Boolean: java.lang.Class TYPE>;

        $r65 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        specialinvoke $r62.<com.android.server.am.CoreSettingsObserver$DeviceConfigEntry: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.Class,java.lang.Object)>("widget", "CursorControlFeature__enable_cursor_drag_from_anywhere", "widget__enable_cursor_drag_from_anywhere", $r64, $r65);

        interfaceinvoke $r63.<java.util.List: boolean add(java.lang.Object)>($r62);

        $r67 = <com.android.server.am.CoreSettingsObserver: java.util.List sDeviceConfigEntries>;

        $r66 = new com.android.server.am.CoreSettingsObserver$DeviceConfigEntry;

        $r68 = <java.lang.Integer: java.lang.Class TYPE>;

        $r69 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1);

        specialinvoke $r66.<com.android.server.am.CoreSettingsObserver$DeviceConfigEntry: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.Class,java.lang.Object)>("widget", "CursorControlFeature__finger_to_cursor_distance", "widget__finger_to_cursor_distance", $r68, $r69);

        interfaceinvoke $r67.<java.util.List: boolean add(java.lang.Object)>($r66);

        r0 = <com.android.server.am.CoreSettingsObserver: java.util.List sDeviceConfigEntries>;

        r1 = <java.lang.Boolean: java.lang.Class TYPE>;

        r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $r70 = new com.android.server.am.CoreSettingsObserver$DeviceConfigEntry;

        specialinvoke $r70.<com.android.server.am.CoreSettingsObserver$DeviceConfigEntry: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.Class,java.lang.Object)>("widget", "CursorControlFeature__enable_insertion_handle_gestures", "widget__enable_insertion_handle_gestures", r1, r2);

        interfaceinvoke r0.<java.util.List: boolean add(java.lang.Object)>($r70);

        $r72 = <com.android.server.am.CoreSettingsObserver: java.util.List sDeviceConfigEntries>;

        $r71 = new com.android.server.am.CoreSettingsObserver$DeviceConfigEntry;

        $r73 = <java.lang.Integer: java.lang.Class TYPE>;

        $r74 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(25);

        specialinvoke $r71.<com.android.server.am.CoreSettingsObserver$DeviceConfigEntry: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.Class,java.lang.Object)>("widget", "CursorControlFeature__insertion_handle_delta_height", "widget__insertion_handle_delta_height", $r73, $r74);

        interfaceinvoke $r72.<java.util.List: boolean add(java.lang.Object)>($r71);

        $r76 = <com.android.server.am.CoreSettingsObserver: java.util.List sDeviceConfigEntries>;

        $r75 = new com.android.server.am.CoreSettingsObserver$DeviceConfigEntry;

        $r77 = <java.lang.Integer: java.lang.Class TYPE>;

        $r78 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(50);

        specialinvoke $r75.<com.android.server.am.CoreSettingsObserver$DeviceConfigEntry: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.Class,java.lang.Object)>("widget", "CursorControlFeature__insertion_handle_opacity", "widget__insertion_handle_opacity", $r77, $r78);

        interfaceinvoke $r76.<java.util.List: boolean add(java.lang.Object)>($r75);

        $r81 = <com.android.server.am.CoreSettingsObserver: java.util.List sDeviceConfigEntries>;

        $r79 = new com.android.server.am.CoreSettingsObserver$DeviceConfigEntry;

        $r80 = <java.lang.Boolean: java.lang.Class TYPE>;

        specialinvoke $r79.<com.android.server.am.CoreSettingsObserver$DeviceConfigEntry: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.Class,java.lang.Object)>("widget", "CursorControlFeature__enable_new_magnifier", "widget__enable_new_magnifier", $r80, r2);

        interfaceinvoke $r81.<java.util.List: boolean add(java.lang.Object)>($r79);

        $r83 = <com.android.server.am.CoreSettingsObserver: java.util.List sDeviceConfigEntries>;

        $r82 = new com.android.server.am.CoreSettingsObserver$DeviceConfigEntry;

        $r84 = <java.lang.Float: java.lang.Class TYPE>;

        $r85 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(1.5F);

        specialinvoke $r82.<com.android.server.am.CoreSettingsObserver$DeviceConfigEntry: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.Class,java.lang.Object)>("widget", "CursorControlFeature__magnifier_zoom_factor", "widget__magnifier_zoom_factor", $r84, $r85);

        interfaceinvoke $r83.<java.util.List: boolean add(java.lang.Object)>($r82);

        $r87 = <com.android.server.am.CoreSettingsObserver: java.util.List sDeviceConfigEntries>;

        $r86 = new com.android.server.am.CoreSettingsObserver$DeviceConfigEntry;

        $r88 = <java.lang.Float: java.lang.Class TYPE>;

        $r89 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(5.5F);

        specialinvoke $r86.<com.android.server.am.CoreSettingsObserver$DeviceConfigEntry: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.Class,java.lang.Object)>("widget", "CursorControlFeature__magnifier_aspect_ratio", "widget__magnifier_aspect_ratio", $r88, $r89);

        interfaceinvoke $r87.<java.util.List: boolean add(java.lang.Object)>($r86);

        return;
    }

    public void <init>(com.android.server.am.ActivityManagerService)
    {
        com.android.server.am.CoreSettingsObserver r0;
        com.android.server.am.ActivityManagerService r1;
        com.android.server.am.ActivityManagerService$MainHandler $r2;
        android.os.Bundle $r3;

        r0 := @this: com.android.server.am.CoreSettingsObserver;

        r1 := @parameter0: com.android.server.am.ActivityManagerService;

        $r2 = r1.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        specialinvoke r0.<android.database.ContentObserver: void <init>(android.os.Handler)>($r2);

        $r3 = new android.os.Bundle;

        specialinvoke $r3.<android.os.Bundle: void <init>()>();

        r0.<com.android.server.am.CoreSettingsObserver: android.os.Bundle mCoreSettings> = $r3;

        r0.<com.android.server.am.CoreSettingsObserver: com.android.server.am.ActivityManagerService mActivityManagerService> = r1;

        specialinvoke r0.<com.android.server.am.CoreSettingsObserver: void beginObserveCoreSettings()>();

        specialinvoke r0.<com.android.server.am.CoreSettingsObserver: void sendCoreSettings()>();

        return;
    }

    private void beginObserveCoreSettings()
    {
        com.android.server.am.CoreSettingsObserver r0;
        com.android.server.am.CoreSettingsObserver$DeviceConfigEntry r1;
        java.util.Map $r2, $r4, $r6;
        java.util.Set $r3, $r5, $r7;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.HashSet $r8;
        java.util.List $r9;
        java.lang.Object $r10, $r17, $r22, $r27;
        java.lang.String $r11, $r12, $r16, $r18, $r23, $r28;
        android.app.Application $r13;
        java.util.concurrent.Executor $r14;
        com.android.server.am._$$Lambda$CoreSettingsObserver$IEGGdL9JzvkvDo5ePJ2OAMEVAVs $r15;
        com.android.server.am.ActivityManagerService $r19, $r24, $r29;
        android.content.Context $r20, $r25, $r30;
        android.content.ContentResolver $r21, $r26, $r31;
        java.util.Iterator r32, r34, r36, r39;
        android.net.Uri r33, r35, r37;

        r0 := @this: com.android.server.am.CoreSettingsObserver;

        $r2 = <com.android.server.am.CoreSettingsObserver: java.util.Map sSecureSettingToTypeMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set keySet()>();

        r32 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r27 = interfaceinvoke r32.<java.util.Iterator: java.lang.Object next()>();

        $r28 = (java.lang.String) $r27;

        r33 = staticinvoke <android.provider.Settings$Secure: android.net.Uri getUriFor(java.lang.String)>($r28);

        $r29 = r0.<com.android.server.am.CoreSettingsObserver: com.android.server.am.ActivityManagerService mActivityManagerService>;

        $r30 = $r29.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r31 = virtualinvoke $r30.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        virtualinvoke $r31.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver)>(r33, 0, r0);

        goto label1;

     label2:
        $r4 = <com.android.server.am.CoreSettingsObserver: java.util.Map sSystemSettingToTypeMap>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Set keySet()>();

        r34 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r34.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r22 = interfaceinvoke r34.<java.util.Iterator: java.lang.Object next()>();

        $r23 = (java.lang.String) $r22;

        r35 = staticinvoke <android.provider.Settings$System: android.net.Uri getUriFor(java.lang.String)>($r23);

        $r24 = r0.<com.android.server.am.CoreSettingsObserver: com.android.server.am.ActivityManagerService mActivityManagerService>;

        $r25 = $r24.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r26 = virtualinvoke $r25.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        virtualinvoke $r26.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver)>(r35, 0, r0);

        goto label3;

     label4:
        $r6 = <com.android.server.am.CoreSettingsObserver: java.util.Map sGlobalSettingToTypeMap>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.util.Set keySet()>();

        r36 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label5:
        $z2 = interfaceinvoke r36.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label6;

        $r17 = interfaceinvoke r36.<java.util.Iterator: java.lang.Object next()>();

        $r18 = (java.lang.String) $r17;

        r37 = staticinvoke <android.provider.Settings$Global: android.net.Uri getUriFor(java.lang.String)>($r18);

        $r19 = r0.<com.android.server.am.CoreSettingsObserver: com.android.server.am.ActivityManagerService mActivityManagerService>;

        $r20 = $r19.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r21 = virtualinvoke $r20.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        virtualinvoke $r21.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver)>(r37, 0, r0);

        goto label5;

     label6:
        $r8 = new java.util.HashSet;

        specialinvoke $r8.<java.util.HashSet: void <init>()>();

        $r9 = <com.android.server.am.CoreSettingsObserver: java.util.List sDeviceConfigEntries>;

        r39 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

     label7:
        $z3 = interfaceinvoke r39.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label9;

        $r10 = interfaceinvoke r39.<java.util.Iterator: java.lang.Object next()>();

        r1 = (com.android.server.am.CoreSettingsObserver$DeviceConfigEntry) $r10;

        $r11 = r1.<com.android.server.am.CoreSettingsObserver$DeviceConfigEntry: java.lang.String namespace>;

        $z4 = virtualinvoke $r8.<java.util.HashSet: boolean contains(java.lang.Object)>($r11);

        if $z4 != 0 goto label8;

        $r12 = r1.<com.android.server.am.CoreSettingsObserver$DeviceConfigEntry: java.lang.String namespace>;

        $r13 = staticinvoke <android.app.ActivityThread: android.app.Application currentApplication()>();

        $r14 = virtualinvoke $r13.<android.app.Application: java.util.concurrent.Executor getMainExecutor()>();

        $r15 = new com.android.server.am._$$Lambda$CoreSettingsObserver$IEGGdL9JzvkvDo5ePJ2OAMEVAVs;

        specialinvoke $r15.<com.android.server.am._$$Lambda$CoreSettingsObserver$IEGGdL9JzvkvDo5ePJ2OAMEVAVs: void <init>(com.android.server.am.CoreSettingsObserver)>(r0);

        staticinvoke <android.provider.DeviceConfig: void addOnPropertiesChangedListener(java.lang.String,java.util.concurrent.Executor,android.provider.DeviceConfig$OnPropertiesChangedListener)>($r12, $r14, $r15);

        $r16 = r1.<com.android.server.am.CoreSettingsObserver$DeviceConfigEntry: java.lang.String namespace>;

        virtualinvoke $r8.<java.util.HashSet: boolean add(java.lang.Object)>($r16);

     label8:
        goto label7;

     label9:
        return;
    }

    private void populateSettingsFromDeviceConfig()
    {
        com.android.server.am.CoreSettingsObserver r0;
        java.util.Iterator r1;
        com.android.server.am.CoreSettingsObserver$DeviceConfigEntry r2;
        java.lang.String r3, $r17, $r18, $r20, $r23, $r24, $r26, $r29, $r30, $r32, $r35, $r36, $r38, $r40, $r41, $r43, $r44;
        int i0, $i3, i4;
        float f0, $f1;
        long l1, $l2;
        boolean z0, $z1, $z2;
        java.util.List $r4;
        java.lang.Object $r5, $r15, $r21, $r27, $r33, $r39;
        java.lang.Class $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14;
        java.lang.Boolean $r16;
        android.os.Bundle $r19, $r25, $r31, $r37, $r42;
        java.lang.Long $r22;
        java.lang.Float $r28;
        java.lang.Integer $r34;

        r0 := @this: com.android.server.am.CoreSettingsObserver;

        $r4 = <com.android.server.am.CoreSettingsObserver: java.util.List sDeviceConfigEntries>;

        r1 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label7;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.android.server.am.CoreSettingsObserver$DeviceConfigEntry) $r5;

        $r6 = r2.<com.android.server.am.CoreSettingsObserver$DeviceConfigEntry: java.lang.Class type>;

        if $r6 != class "Ljava/lang/String;" goto label2;

        $r39 = r2.<com.android.server.am.CoreSettingsObserver$DeviceConfigEntry: java.lang.Object defaultValue>;

        r3 = (java.lang.String) $r39;

        $r42 = r0.<com.android.server.am.CoreSettingsObserver: android.os.Bundle mCoreSettings>;

        $r43 = r2.<com.android.server.am.CoreSettingsObserver$DeviceConfigEntry: java.lang.String coreSettingKey>;

        $r41 = r2.<com.android.server.am.CoreSettingsObserver$DeviceConfigEntry: java.lang.String namespace>;

        $r40 = r2.<com.android.server.am.CoreSettingsObserver$DeviceConfigEntry: java.lang.String flag>;

        $r44 = staticinvoke <android.provider.DeviceConfig: java.lang.String getString(java.lang.String,java.lang.String,java.lang.String)>($r41, $r40, r3);

        virtualinvoke $r42.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>($r43, $r44);

        goto label6;

     label2:
        $r8 = r2.<com.android.server.am.CoreSettingsObserver$DeviceConfigEntry: java.lang.Class type>;

        $r7 = <java.lang.Integer: java.lang.Class TYPE>;

        if $r8 != $r7 goto label3;

        $r33 = r2.<com.android.server.am.CoreSettingsObserver$DeviceConfigEntry: java.lang.Object defaultValue>;

        $r34 = (java.lang.Integer) $r33;

        i0 = virtualinvoke $r34.<java.lang.Integer: int intValue()>();

        $r37 = r0.<com.android.server.am.CoreSettingsObserver: android.os.Bundle mCoreSettings>;

        $r38 = r2.<com.android.server.am.CoreSettingsObserver$DeviceConfigEntry: java.lang.String coreSettingKey>;

        $r36 = r2.<com.android.server.am.CoreSettingsObserver$DeviceConfigEntry: java.lang.String namespace>;

        $r35 = r2.<com.android.server.am.CoreSettingsObserver$DeviceConfigEntry: java.lang.String flag>;

        $i3 = staticinvoke <android.provider.DeviceConfig: int getInt(java.lang.String,java.lang.String,int)>($r36, $r35, i0);

        virtualinvoke $r37.<android.os.Bundle: void putInt(java.lang.String,int)>($r38, $i3);

        goto label6;

     label3:
        $r10 = r2.<com.android.server.am.CoreSettingsObserver$DeviceConfigEntry: java.lang.Class type>;

        $r9 = <java.lang.Float: java.lang.Class TYPE>;

        if $r10 != $r9 goto label4;

        $r27 = r2.<com.android.server.am.CoreSettingsObserver$DeviceConfigEntry: java.lang.Object defaultValue>;

        $r28 = (java.lang.Float) $r27;

        f0 = virtualinvoke $r28.<java.lang.Float: float floatValue()>();

        $r31 = r0.<com.android.server.am.CoreSettingsObserver: android.os.Bundle mCoreSettings>;

        $r32 = r2.<com.android.server.am.CoreSettingsObserver$DeviceConfigEntry: java.lang.String coreSettingKey>;

        $r30 = r2.<com.android.server.am.CoreSettingsObserver$DeviceConfigEntry: java.lang.String namespace>;

        $r29 = r2.<com.android.server.am.CoreSettingsObserver$DeviceConfigEntry: java.lang.String flag>;

        $f1 = staticinvoke <android.provider.DeviceConfig: float getFloat(java.lang.String,java.lang.String,float)>($r30, $r29, f0);

        virtualinvoke $r31.<android.os.Bundle: void putFloat(java.lang.String,float)>($r32, $f1);

        goto label6;

     label4:
        $r12 = r2.<com.android.server.am.CoreSettingsObserver$DeviceConfigEntry: java.lang.Class type>;

        $r11 = <java.lang.Long: java.lang.Class TYPE>;

        if $r12 != $r11 goto label5;

        $r21 = r2.<com.android.server.am.CoreSettingsObserver$DeviceConfigEntry: java.lang.Object defaultValue>;

        $r22 = (java.lang.Long) $r21;

        l1 = virtualinvoke $r22.<java.lang.Long: long longValue()>();

        $r25 = r0.<com.android.server.am.CoreSettingsObserver: android.os.Bundle mCoreSettings>;

        $r26 = r2.<com.android.server.am.CoreSettingsObserver$DeviceConfigEntry: java.lang.String coreSettingKey>;

        $r24 = r2.<com.android.server.am.CoreSettingsObserver$DeviceConfigEntry: java.lang.String namespace>;

        $r23 = r2.<com.android.server.am.CoreSettingsObserver$DeviceConfigEntry: java.lang.String flag>;

        $l2 = staticinvoke <android.provider.DeviceConfig: long getLong(java.lang.String,java.lang.String,long)>($r24, $r23, l1);

        virtualinvoke $r25.<android.os.Bundle: void putLong(java.lang.String,long)>($r26, $l2);

        goto label6;

     label5:
        $r14 = r2.<com.android.server.am.CoreSettingsObserver$DeviceConfigEntry: java.lang.Class type>;

        $r13 = <java.lang.Boolean: java.lang.Class TYPE>;

        if $r14 != $r13 goto label6;

        $r15 = r2.<com.android.server.am.CoreSettingsObserver$DeviceConfigEntry: java.lang.Object defaultValue>;

        $r16 = (java.lang.Boolean) $r15;

        z0 = virtualinvoke $r16.<java.lang.Boolean: boolean booleanValue()>();

        $r19 = r0.<com.android.server.am.CoreSettingsObserver: android.os.Bundle mCoreSettings>;

        $r20 = r2.<com.android.server.am.CoreSettingsObserver$DeviceConfigEntry: java.lang.String coreSettingKey>;

        $r18 = r2.<com.android.server.am.CoreSettingsObserver$DeviceConfigEntry: java.lang.String namespace>;

        $r17 = r2.<com.android.server.am.CoreSettingsObserver$DeviceConfigEntry: java.lang.String flag>;

        $z2 = staticinvoke <android.provider.DeviceConfig: boolean getBoolean(java.lang.String,java.lang.String,boolean)>($r18, $r17, z0);

        i4 = (int) $z2;

        virtualinvoke $r19.<android.os.Bundle: void putInt(java.lang.String,int)>($r20, i4);

        goto label6;

     label6:
        goto label1;

     label7:
        return;
    }

    private void sendCoreSettings()
    {
        com.android.server.am.CoreSettingsObserver r0;
        java.util.Map $r1, $r3, $r5;
        android.os.Bundle $r2, $r4, $r6, $r7;
        com.android.server.am.ActivityManagerService $r8;

        r0 := @this: com.android.server.am.CoreSettingsObserver;

        $r2 = r0.<com.android.server.am.CoreSettingsObserver: android.os.Bundle mCoreSettings>;

        $r1 = <com.android.server.am.CoreSettingsObserver: java.util.Map sSecureSettingToTypeMap>;

        virtualinvoke r0.<com.android.server.am.CoreSettingsObserver: void populateSettings(android.os.Bundle,java.util.Map)>($r2, $r1);

        $r4 = r0.<com.android.server.am.CoreSettingsObserver: android.os.Bundle mCoreSettings>;

        $r3 = <com.android.server.am.CoreSettingsObserver: java.util.Map sSystemSettingToTypeMap>;

        virtualinvoke r0.<com.android.server.am.CoreSettingsObserver: void populateSettings(android.os.Bundle,java.util.Map)>($r4, $r3);

        $r6 = r0.<com.android.server.am.CoreSettingsObserver: android.os.Bundle mCoreSettings>;

        $r5 = <com.android.server.am.CoreSettingsObserver: java.util.Map sGlobalSettingToTypeMap>;

        virtualinvoke r0.<com.android.server.am.CoreSettingsObserver: void populateSettings(android.os.Bundle,java.util.Map)>($r6, $r5);

        specialinvoke r0.<com.android.server.am.CoreSettingsObserver: void populateSettingsFromDeviceConfig()>();

        $r8 = r0.<com.android.server.am.CoreSettingsObserver: com.android.server.am.ActivityManagerService mActivityManagerService>;

        $r7 = r0.<com.android.server.am.CoreSettingsObserver: android.os.Bundle mCoreSettings>;

        virtualinvoke $r8.<com.android.server.am.ActivityManagerService: void onCoreSettingsChange(android.os.Bundle)>($r7);

        return;
    }

    public android.os.Bundle getCoreSettingsLocked()
    {
        com.android.server.am.CoreSettingsObserver r0;
        android.os.Bundle $r1, $r3;
        java.lang.Object $r2;

        r0 := @this: com.android.server.am.CoreSettingsObserver;

        $r1 = r0.<com.android.server.am.CoreSettingsObserver: android.os.Bundle mCoreSettings>;

        $r2 = virtualinvoke $r1.<android.os.Bundle: java.lang.Object clone()>();

        $r3 = (android.os.Bundle) $r2;

        return $r3;
    }

    public void lambda$beginObserveCoreSettings$0$CoreSettingsObserver(android.provider.DeviceConfig$Properties)
    {
        com.android.server.am.CoreSettingsObserver r0;
        android.provider.DeviceConfig$Properties r1;

        r0 := @this: com.android.server.am.CoreSettingsObserver;

        r1 := @parameter0: android.provider.DeviceConfig$Properties;

        virtualinvoke r0.<com.android.server.am.CoreSettingsObserver: void onChange(boolean)>(0);

        return;
    }

    public void onChange(boolean)
    {
        com.android.server.am.CoreSettingsObserver r0;
        boolean z0;
        com.android.server.am.ActivityManagerService r1;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.am.CoreSettingsObserver;

        z0 := @parameter0: boolean;

        r1 = r0.<com.android.server.am.CoreSettingsObserver: com.android.server.am.ActivityManagerService mActivityManagerService>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        specialinvoke r0.<com.android.server.am.CoreSettingsObserver: void sendCoreSettings()>();

        exitmonitor r1;

     label2:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    void populateSettings(android.os.Bundle, java.util.Map)
    {
        com.android.server.am.CoreSettingsObserver r0;
        android.os.Bundle r1;
        java.util.Map r2, $r10, $r11;
        android.content.Context r3;
        java.util.Iterator r4;
        java.lang.String r5, r20;
        com.android.server.am.ActivityManagerService $r6;
        java.util.Set $r7;
        java.lang.Object $r8, $r9, $r13;
        android.content.ContentResolver $r12, $r17, $r18;
        java.lang.Class $r14, $r15, $r16, r21;
        long $l0;
        float $f0;
        int $i1;
        boolean $z0;
        java.util.Map$Entry r19;

        r0 := @this: com.android.server.am.CoreSettingsObserver;

        r1 := @parameter0: android.os.Bundle;

        r2 := @parameter1: java.util.Map;

        $r6 = r0.<com.android.server.am.CoreSettingsObserver: com.android.server.am.ActivityManagerService mActivityManagerService>;

        r3 = $r6.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r7 = interfaceinvoke r2.<java.util.Map: java.util.Set entrySet()>();

        r4 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label10;

        $r8 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r19 = (java.util.Map$Entry) $r8;

        $r9 = interfaceinvoke r19.<java.util.Map$Entry: java.lang.Object getKey()>();

        r5 = (java.lang.String) $r9;

        $r10 = <com.android.server.am.CoreSettingsObserver: java.util.Map sSecureSettingToTypeMap>;

        if r2 != $r10 goto label02;

        $r18 = virtualinvoke r3.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r20 = staticinvoke <android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r18, r5);

        goto label04;

     label02:
        $r11 = <com.android.server.am.CoreSettingsObserver: java.util.Map sSystemSettingToTypeMap>;

        if r2 != $r11 goto label03;

        $r17 = virtualinvoke r3.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r20 = staticinvoke <android.provider.Settings$System: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r17, r5);

        goto label04;

     label03:
        $r12 = virtualinvoke r3.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r20 = staticinvoke <android.provider.Settings$Global: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r12, r5);

     label04:
        if r20 != null goto label05;

        virtualinvoke r1.<android.os.Bundle: void remove(java.lang.String)>(r5);

        goto label01;

     label05:
        $r13 = interfaceinvoke r19.<java.util.Map$Entry: java.lang.Object getValue()>();

        r21 = (java.lang.Class) $r13;

        if r21 != class "Ljava/lang/String;" goto label06;

        virtualinvoke r1.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>(r5, r20);

        goto label09;

     label06:
        $r14 = <java.lang.Integer: java.lang.Class TYPE>;

        if r21 != $r14 goto label07;

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r20);

        virtualinvoke r1.<android.os.Bundle: void putInt(java.lang.String,int)>(r5, $i1);

        goto label09;

     label07:
        $r15 = <java.lang.Float: java.lang.Class TYPE>;

        if r21 != $r15 goto label08;

        $f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>(r20);

        virtualinvoke r1.<android.os.Bundle: void putFloat(java.lang.String,float)>(r5, $f0);

        goto label09;

     label08:
        $r16 = <java.lang.Long: java.lang.Class TYPE>;

        if r21 != $r16 goto label09;

        $l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r20);

        virtualinvoke r1.<android.os.Bundle: void putLong(java.lang.String,long)>(r5, $l0);

     label09:
        goto label01;

     label10:
        return;
    }
}
