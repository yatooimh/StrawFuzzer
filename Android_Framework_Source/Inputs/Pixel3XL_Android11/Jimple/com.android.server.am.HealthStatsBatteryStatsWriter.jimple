public class com.android.server.am.HealthStatsBatteryStatsWriter extends java.lang.Object
{
    private final long mNowRealtimeMs;
    private final long mNowUptimeMs;

    public void <init>()
    {
        com.android.server.am.HealthStatsBatteryStatsWriter r0;
        long $l0, $l1;

        r0 := @this: com.android.server.am.HealthStatsBatteryStatsWriter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        r0.<com.android.server.am.HealthStatsBatteryStatsWriter: long mNowRealtimeMs> = $l0;

        $l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r0.<com.android.server.am.HealthStatsBatteryStatsWriter: long mNowUptimeMs> = $l1;

        return;
    }

    private void addTimer(android.os.health.HealthStatsWriter, int, android.os.BatteryStats$Timer)
    {
        com.android.server.am.HealthStatsBatteryStatsWriter r0;
        android.os.health.HealthStatsWriter r1;
        int i0, $i1;
        android.os.BatteryStats$Timer r2;
        long $l2, $l3, $l4, $l5;

        r0 := @this: com.android.server.am.HealthStatsBatteryStatsWriter;

        r1 := @parameter0: android.os.health.HealthStatsWriter;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.BatteryStats$Timer;

        if r2 == null goto label1;

        $i1 = virtualinvoke r2.<android.os.BatteryStats$Timer: int getCountLocked(int)>(0);

        $l2 = r0.<com.android.server.am.HealthStatsBatteryStatsWriter: long mNowRealtimeMs>;

        $l3 = $l2 * 1000L;

        $l4 = virtualinvoke r2.<android.os.BatteryStats$Timer: long getTotalTimeLocked(long,int)>($l3, 0);

        $l5 = $l4 / 1000L;

        virtualinvoke r1.<android.os.health.HealthStatsWriter: void addTimer(int,int,long)>(i0, $i1, $l5);

     label1:
        return;
    }

    private void addTimers(android.os.health.HealthStatsWriter, int, java.lang.String, android.os.BatteryStats$Timer)
    {
        com.android.server.am.HealthStatsBatteryStatsWriter r0;
        android.os.health.HealthStatsWriter r1;
        int i0, $i1;
        java.lang.String r2;
        android.os.BatteryStats$Timer r3;
        android.os.health.TimerStat $r4;
        long $l2, $l3, $l4, $l5;

        r0 := @this: com.android.server.am.HealthStatsBatteryStatsWriter;

        r1 := @parameter0: android.os.health.HealthStatsWriter;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: android.os.BatteryStats$Timer;

        if r3 == null goto label1;

        $r4 = new android.os.health.TimerStat;

        $i1 = virtualinvoke r3.<android.os.BatteryStats$Timer: int getCountLocked(int)>(0);

        $l2 = r0.<com.android.server.am.HealthStatsBatteryStatsWriter: long mNowRealtimeMs>;

        $l3 = $l2 * 1000L;

        $l4 = virtualinvoke r3.<android.os.BatteryStats$Timer: long getTotalTimeLocked(long,int)>($l3, 0);

        $l5 = $l4 / 1000L;

        specialinvoke $r4.<android.os.health.TimerStat: void <init>(int,long)>($i1, $l5);

        virtualinvoke r1.<android.os.health.HealthStatsWriter: void addTimers(int,java.lang.String,android.os.health.TimerStat)>(i0, r2, $r4);

     label1:
        return;
    }

    public void writePid(android.os.health.HealthStatsWriter, android.os.BatteryStats$Uid$Pid)
    {
        com.android.server.am.HealthStatsBatteryStatsWriter r0;
        android.os.health.HealthStatsWriter r1;
        android.os.BatteryStats$Uid$Pid r2;
        int $i0;
        long $l1, $l2, $l3;

        r0 := @this: com.android.server.am.HealthStatsBatteryStatsWriter;

        r1 := @parameter0: android.os.health.HealthStatsWriter;

        r2 := @parameter1: android.os.BatteryStats$Uid$Pid;

        if r2 != null goto label1;

        return;

     label1:
        $i0 = r2.<android.os.BatteryStats$Uid$Pid: int mWakeNesting>;

        $l1 = (long) $i0;

        virtualinvoke r1.<android.os.health.HealthStatsWriter: void addMeasurement(int,long)>(20001, $l1);

        $l2 = r2.<android.os.BatteryStats$Uid$Pid: long mWakeSumMs>;

        virtualinvoke r1.<android.os.health.HealthStatsWriter: void addMeasurement(int,long)>(20002, $l2);

        $l3 = r2.<android.os.BatteryStats$Uid$Pid: long mWakeStartMs>;

        virtualinvoke r1.<android.os.health.HealthStatsWriter: void addMeasurement(int,long)>(20002, $l3);

        return;
    }

    public void writePkg(android.os.health.HealthStatsWriter, android.os.BatteryStats$Uid$Pkg)
    {
        com.android.server.am.HealthStatsBatteryStatsWriter r0;
        android.os.health.HealthStatsWriter r1, $r12;
        android.util.ArrayMap $r3, $r5;
        java.util.Set $r4, $r6;
        boolean $z0, $z1;
        java.lang.Object $r7, $r8, $r9, $r11, $r14, $r16;
        java.lang.String $r10, $r17;
        int $i0;
        long $l1;
        android.os.health.HealthKeys$Constants $r13;
        android.os.BatteryStats$Uid$Pkg$Serv $r15;
        android.os.BatteryStats$Uid$Pkg r18;
        java.util.Iterator r19, r21;
        java.util.Map$Entry r20, r22;
        android.os.BatteryStats$Counter r23;

        r0 := @this: com.android.server.am.HealthStatsBatteryStatsWriter;

        r1 := @parameter0: android.os.health.HealthStatsWriter;

        r18 := @parameter1: android.os.BatteryStats$Uid$Pkg;

        $r3 = virtualinvoke r18.<android.os.BatteryStats$Uid$Pkg: android.util.ArrayMap getServiceStats()>();

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.util.Set entrySet()>();

        r19 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r11 = interfaceinvoke r19.<java.util.Iterator: java.lang.Object next()>();

        r20 = (java.util.Map$Entry) $r11;

        $r12 = new android.os.health.HealthStatsWriter;

        $r13 = <android.os.health.ServiceHealthStats: android.os.health.HealthKeys$Constants CONSTANTS>;

        specialinvoke $r12.<android.os.health.HealthStatsWriter: void <init>(android.os.health.HealthKeys$Constants)>($r13);

        $r14 = interfaceinvoke r20.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r15 = (android.os.BatteryStats$Uid$Pkg$Serv) $r14;

        virtualinvoke r0.<com.android.server.am.HealthStatsBatteryStatsWriter: void writeServ(android.os.health.HealthStatsWriter,android.os.BatteryStats$Uid$Pkg$Serv)>($r12, $r15);

        $r16 = interfaceinvoke r20.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r17 = (java.lang.String) $r16;

        virtualinvoke r1.<android.os.health.HealthStatsWriter: void addStats(int,java.lang.String,android.os.health.HealthStatsWriter)>(40001, $r17, $r12);

        goto label1;

     label2:
        $r5 = virtualinvoke r18.<android.os.BatteryStats$Uid$Pkg: android.util.ArrayMap getWakeupAlarmStats()>();

        $r6 = virtualinvoke $r5.<android.util.ArrayMap: java.util.Set entrySet()>();

        r21 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r21.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r7 = interfaceinvoke r21.<java.util.Iterator: java.lang.Object next()>();

        r22 = (java.util.Map$Entry) $r7;

        $r8 = interfaceinvoke r22.<java.util.Map$Entry: java.lang.Object getValue()>();

        r23 = (android.os.BatteryStats$Counter) $r8;

        if r23 == null goto label4;

        $r9 = interfaceinvoke r22.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r10 = (java.lang.String) $r9;

        $i0 = virtualinvoke r23.<android.os.BatteryStats$Counter: int getCountLocked(int)>(0);

        $l1 = (long) $i0;

        virtualinvoke r1.<android.os.health.HealthStatsWriter: void addMeasurements(int,java.lang.String,long)>(40002, $r10, $l1);

     label4:
        goto label3;

     label5:
        return;
    }

    public void writeProc(android.os.health.HealthStatsWriter, android.os.BatteryStats$Uid$Proc)
    {
        com.android.server.am.HealthStatsBatteryStatsWriter r0;
        android.os.health.HealthStatsWriter r1;
        android.os.BatteryStats$Uid$Proc r2;
        long $l0, $l1, $l3, $l5, $l7, $l8;
        int $i2, $i4, $i6;

        r0 := @this: com.android.server.am.HealthStatsBatteryStatsWriter;

        r1 := @parameter0: android.os.health.HealthStatsWriter;

        r2 := @parameter1: android.os.BatteryStats$Uid$Proc;

        $l0 = virtualinvoke r2.<android.os.BatteryStats$Uid$Proc: long getUserTime(int)>(0);

        virtualinvoke r1.<android.os.health.HealthStatsWriter: void addMeasurement(int,long)>(30001, $l0);

        $l1 = virtualinvoke r2.<android.os.BatteryStats$Uid$Proc: long getSystemTime(int)>(0);

        virtualinvoke r1.<android.os.health.HealthStatsWriter: void addMeasurement(int,long)>(30002, $l1);

        $i2 = virtualinvoke r2.<android.os.BatteryStats$Uid$Proc: int getStarts(int)>(0);

        $l3 = (long) $i2;

        virtualinvoke r1.<android.os.health.HealthStatsWriter: void addMeasurement(int,long)>(30003, $l3);

        $i4 = virtualinvoke r2.<android.os.BatteryStats$Uid$Proc: int getNumCrashes(int)>(0);

        $l5 = (long) $i4;

        virtualinvoke r1.<android.os.health.HealthStatsWriter: void addMeasurement(int,long)>(30004, $l5);

        $i6 = virtualinvoke r2.<android.os.BatteryStats$Uid$Proc: int getNumAnrs(int)>(0);

        $l7 = (long) $i6;

        virtualinvoke r1.<android.os.health.HealthStatsWriter: void addMeasurement(int,long)>(30005, $l7);

        $l8 = virtualinvoke r2.<android.os.BatteryStats$Uid$Proc: long getForegroundTime(int)>(0);

        virtualinvoke r1.<android.os.health.HealthStatsWriter: void addMeasurement(int,long)>(30006, $l8);

        return;
    }

    public void writeServ(android.os.health.HealthStatsWriter, android.os.BatteryStats$Uid$Pkg$Serv)
    {
        com.android.server.am.HealthStatsBatteryStatsWriter r0;
        android.os.health.HealthStatsWriter r1;
        android.os.BatteryStats$Uid$Pkg$Serv r2;
        int $i0, $i2;
        long $l1, $l3;

        r0 := @this: com.android.server.am.HealthStatsBatteryStatsWriter;

        r1 := @parameter0: android.os.health.HealthStatsWriter;

        r2 := @parameter1: android.os.BatteryStats$Uid$Pkg$Serv;

        $i0 = virtualinvoke r2.<android.os.BatteryStats$Uid$Pkg$Serv: int getStarts(int)>(0);

        $l1 = (long) $i0;

        virtualinvoke r1.<android.os.health.HealthStatsWriter: void addMeasurement(int,long)>(50001, $l1);

        $i2 = virtualinvoke r2.<android.os.BatteryStats$Uid$Pkg$Serv: int getLaunches(int)>(0);

        $l3 = (long) $i2;

        virtualinvoke r1.<android.os.health.HealthStatsWriter: void addMeasurement(int,long)>(50002, $l3);

        return;
    }

    public void writeUid(android.os.health.HealthStatsWriter, android.os.BatteryStats, android.os.BatteryStats$Uid)
    {
        com.android.server.am.HealthStatsBatteryStatsWriter r0;
        android.os.health.HealthStatsWriter r1, $r39, $r46, $r52;
        android.os.BatteryStats$Uid r2;
        int i0, $i25, $i34, $i36, $i38, $i52, $i70, i71, i72, i73, i74, i76, i77, i79, i80, i82, i83;
        long $l1, $l2, $l3, $l4, $l5, $l6, $l7, $l8, $l9, $l10, $l11, $l12, $l13, $l14, $l15, $l16, $l17, $l18, $l19, $l20, $l21, $l22, $l23, $l24, $l26, $l27, $l28, $l29, $l30, $l31, $l32, $l33, $l35, $l37, $l39, $l40, $l41, $l42, $l43, $l44, $l45, $l46, $l47, $l48, $l49, $l50, $l51, $l53, $l54, $l55, $l56, $l57, $l58, $l59, $l60, $l61, $l62, $l63, $l64, $l65, $l66, $l67, $l68, $l69, l75, l78, l81;
        android.util.ArrayMap $r3, $r5, $r7, $r9, $r11;
        java.util.Set $r4, $r6, $r8, $r10, $r12;
        boolean $z0, $z1, $z2, $z3, $z4;
        android.os.BatteryStats$Timer $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r60, $r63, $r68, $r73, $r77, $r78, $r79, $r80;
        android.os.BatteryStats$LongCounter $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37;
        java.lang.Object $r38, $r41, $r43, $r45, $r48, $r50, $r54, $r58, $r61, $r64, $r65, $r67, $r69, $r70, $r72, $r74, $r75, $r76;
        android.os.health.HealthKeys$Constants $r40, $r47, $r53;
        android.os.BatteryStats$Uid$Pkg $r42;
        java.lang.String $r44, $r51, $r56, $r57, $r66, $r71, r84;
        android.os.BatteryStats$Uid$Proc $r49;
        android.os.BatteryStats$Uid$Pid $r55;
        android.os.BatteryStats$Uid$Sensor $r59, $r62;
        android.os.BatteryStats r81;
        java.util.Iterator r82, r86, r88, r93, r96;
        java.util.Map$Entry r83, r87, r89, r94, r97;
        android.os.BatteryStats$Uid$Wakelock r85;
        android.util.SparseArray r90, r91;
        android.os.BatteryStats$ControllerActivityCounter r99, r101, r103;
        android.os.BatteryStats$LongCounter[] r100, r102, r104;

        r0 := @this: com.android.server.am.HealthStatsBatteryStatsWriter;

        r1 := @parameter0: android.os.health.HealthStatsWriter;

        r81 := @parameter1: android.os.BatteryStats;

        r2 := @parameter2: android.os.BatteryStats$Uid;

        $l1 = r0.<com.android.server.am.HealthStatsBatteryStatsWriter: long mNowRealtimeMs>;

        $l2 = $l1 * 1000L;

        $l3 = virtualinvoke r81.<android.os.BatteryStats: long computeBatteryRealtime(long,int)>($l2, 0);

        $l4 = $l3 / 1000L;

        virtualinvoke r1.<android.os.health.HealthStatsWriter: void addMeasurement(int,long)>(10001, $l4);

        $l5 = r0.<com.android.server.am.HealthStatsBatteryStatsWriter: long mNowUptimeMs>;

        $l6 = $l5 * 1000L;

        $l7 = virtualinvoke r81.<android.os.BatteryStats: long computeBatteryUptime(long,int)>($l6, 0);

        $l8 = $l7 / 1000L;

        virtualinvoke r1.<android.os.health.HealthStatsWriter: void addMeasurement(int,long)>(10002, $l8);

        $l9 = r0.<com.android.server.am.HealthStatsBatteryStatsWriter: long mNowRealtimeMs>;

        $l10 = $l9 * 1000L;

        $l11 = virtualinvoke r81.<android.os.BatteryStats: long computeBatteryScreenOffRealtime(long,int)>($l10, 0);

        $l12 = $l11 / 1000L;

        virtualinvoke r1.<android.os.health.HealthStatsWriter: void addMeasurement(int,long)>(10003, $l12);

        $l13 = r0.<com.android.server.am.HealthStatsBatteryStatsWriter: long mNowUptimeMs>;

        $l14 = $l13 * 1000L;

        $l15 = virtualinvoke r81.<android.os.BatteryStats: long computeBatteryScreenOffUptime(long,int)>($l14, 0);

        $l16 = $l15 / 1000L;

        virtualinvoke r1.<android.os.health.HealthStatsWriter: void addMeasurement(int,long)>(10004, $l16);

        $r3 = virtualinvoke r2.<android.os.BatteryStats$Uid: android.util.ArrayMap getWakelockStats()>();

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.util.Set entrySet()>();

        r82 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke r82.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label02;

        $r74 = interfaceinvoke r82.<java.util.Iterator: java.lang.Object next()>();

        r83 = (java.util.Map$Entry) $r74;

        $r75 = interfaceinvoke r83.<java.util.Map$Entry: java.lang.Object getKey()>();

        r84 = (java.lang.String) $r75;

        $r76 = interfaceinvoke r83.<java.util.Map$Entry: java.lang.Object getValue()>();

        r85 = (android.os.BatteryStats$Uid$Wakelock) $r76;

        $r77 = virtualinvoke r85.<android.os.BatteryStats$Uid$Wakelock: android.os.BatteryStats$Timer getWakeTime(int)>(1);

        specialinvoke r0.<com.android.server.am.HealthStatsBatteryStatsWriter: void addTimers(android.os.health.HealthStatsWriter,int,java.lang.String,android.os.BatteryStats$Timer)>(r1, 10005, r84, $r77);

        $r78 = virtualinvoke r85.<android.os.BatteryStats$Uid$Wakelock: android.os.BatteryStats$Timer getWakeTime(int)>(0);

        specialinvoke r0.<com.android.server.am.HealthStatsBatteryStatsWriter: void addTimers(android.os.health.HealthStatsWriter,int,java.lang.String,android.os.BatteryStats$Timer)>(r1, 10006, r84, $r78);

        $r79 = virtualinvoke r85.<android.os.BatteryStats$Uid$Wakelock: android.os.BatteryStats$Timer getWakeTime(int)>(2);

        specialinvoke r0.<com.android.server.am.HealthStatsBatteryStatsWriter: void addTimers(android.os.health.HealthStatsWriter,int,java.lang.String,android.os.BatteryStats$Timer)>(r1, 10007, r84, $r79);

        $r80 = virtualinvoke r85.<android.os.BatteryStats$Uid$Wakelock: android.os.BatteryStats$Timer getWakeTime(int)>(18);

        specialinvoke r0.<com.android.server.am.HealthStatsBatteryStatsWriter: void addTimers(android.os.health.HealthStatsWriter,int,java.lang.String,android.os.BatteryStats$Timer)>(r1, 10008, r84, $r80);

        goto label01;

     label02:
        $r5 = virtualinvoke r2.<android.os.BatteryStats$Uid: android.util.ArrayMap getSyncStats()>();

        $r6 = virtualinvoke $r5.<android.util.ArrayMap: java.util.Set entrySet()>();

        r86 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label03:
        $z1 = interfaceinvoke r86.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label04;

        $r69 = interfaceinvoke r86.<java.util.Iterator: java.lang.Object next()>();

        r87 = (java.util.Map$Entry) $r69;

        $r70 = interfaceinvoke r87.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r71 = (java.lang.String) $r70;

        $r72 = interfaceinvoke r87.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r73 = (android.os.BatteryStats$Timer) $r72;

        specialinvoke r0.<com.android.server.am.HealthStatsBatteryStatsWriter: void addTimers(android.os.health.HealthStatsWriter,int,java.lang.String,android.os.BatteryStats$Timer)>(r1, 10009, $r71, $r73);

        goto label03;

     label04:
        $r7 = virtualinvoke r2.<android.os.BatteryStats$Uid: android.util.ArrayMap getJobStats()>();

        $r8 = virtualinvoke $r7.<android.util.ArrayMap: java.util.Set entrySet()>();

        r88 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label05:
        $z2 = interfaceinvoke r88.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label06;

        $r64 = interfaceinvoke r88.<java.util.Iterator: java.lang.Object next()>();

        r89 = (java.util.Map$Entry) $r64;

        $r65 = interfaceinvoke r89.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r66 = (java.lang.String) $r65;

        $r67 = interfaceinvoke r89.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r68 = (android.os.BatteryStats$Timer) $r67;

        specialinvoke r0.<com.android.server.am.HealthStatsBatteryStatsWriter: void addTimers(android.os.health.HealthStatsWriter,int,java.lang.String,android.os.BatteryStats$Timer)>(r1, 10010, $r66, $r68);

        goto label05;

     label06:
        r90 = virtualinvoke r2.<android.os.BatteryStats$Uid: android.util.SparseArray getSensorStats()>();

        i71 = virtualinvoke r90.<android.util.SparseArray: int size()>();

        i72 = 0;

     label07:
        if i72 >= i71 goto label10;

        i0 = virtualinvoke r90.<android.util.SparseArray: int keyAt(int)>(i72);

        if i0 != -10000 goto label08;

        $r61 = virtualinvoke r90.<android.util.SparseArray: java.lang.Object valueAt(int)>(i72);

        $r62 = (android.os.BatteryStats$Uid$Sensor) $r61;

        $r63 = virtualinvoke $r62.<android.os.BatteryStats$Uid$Sensor: android.os.BatteryStats$Timer getSensorTime()>();

        specialinvoke r0.<com.android.server.am.HealthStatsBatteryStatsWriter: void addTimer(android.os.health.HealthStatsWriter,int,android.os.BatteryStats$Timer)>(r1, 10011, $r63);

        goto label09;

     label08:
        $r57 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        $r58 = virtualinvoke r90.<android.util.SparseArray: java.lang.Object valueAt(int)>(i72);

        $r59 = (android.os.BatteryStats$Uid$Sensor) $r58;

        $r60 = virtualinvoke $r59.<android.os.BatteryStats$Uid$Sensor: android.os.BatteryStats$Timer getSensorTime()>();

        specialinvoke r0.<com.android.server.am.HealthStatsBatteryStatsWriter: void addTimers(android.os.health.HealthStatsWriter,int,java.lang.String,android.os.BatteryStats$Timer)>(r1, 10012, $r57, $r60);

     label09:
        i72 = i72 + 1;

        goto label07;

     label10:
        r91 = virtualinvoke r2.<android.os.BatteryStats$Uid: android.util.SparseArray getPidStats()>();

        i73 = virtualinvoke r91.<android.util.SparseArray: int size()>();

        i74 = 0;

     label11:
        if i74 >= i73 goto label12;

        $r52 = new android.os.health.HealthStatsWriter;

        $r53 = <android.os.health.PidHealthStats: android.os.health.HealthKeys$Constants CONSTANTS>;

        specialinvoke $r52.<android.os.health.HealthStatsWriter: void <init>(android.os.health.HealthKeys$Constants)>($r53);

        $r54 = virtualinvoke r91.<android.util.SparseArray: java.lang.Object valueAt(int)>(i74);

        $r55 = (android.os.BatteryStats$Uid$Pid) $r54;

        virtualinvoke r0.<com.android.server.am.HealthStatsBatteryStatsWriter: void writePid(android.os.health.HealthStatsWriter,android.os.BatteryStats$Uid$Pid)>($r52, $r55);

        $i70 = virtualinvoke r91.<android.util.SparseArray: int keyAt(int)>(i74);

        $r56 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i70);

        virtualinvoke r1.<android.os.health.HealthStatsWriter: void addStats(int,java.lang.String,android.os.health.HealthStatsWriter)>(10013, $r56, $r52);

        i74 = i74 + 1;

        goto label11;

     label12:
        $r9 = virtualinvoke r2.<android.os.BatteryStats$Uid: android.util.ArrayMap getProcessStats()>();

        $r10 = virtualinvoke $r9.<android.util.ArrayMap: java.util.Set entrySet()>();

        r93 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();

     label13:
        $z3 = interfaceinvoke r93.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label14;

        $r45 = interfaceinvoke r93.<java.util.Iterator: java.lang.Object next()>();

        r94 = (java.util.Map$Entry) $r45;

        $r46 = new android.os.health.HealthStatsWriter;

        $r47 = <android.os.health.ProcessHealthStats: android.os.health.HealthKeys$Constants CONSTANTS>;

        specialinvoke $r46.<android.os.health.HealthStatsWriter: void <init>(android.os.health.HealthKeys$Constants)>($r47);

        $r48 = interfaceinvoke r94.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r49 = (android.os.BatteryStats$Uid$Proc) $r48;

        virtualinvoke r0.<com.android.server.am.HealthStatsBatteryStatsWriter: void writeProc(android.os.health.HealthStatsWriter,android.os.BatteryStats$Uid$Proc)>($r46, $r49);

        $r50 = interfaceinvoke r94.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r51 = (java.lang.String) $r50;

        virtualinvoke r1.<android.os.health.HealthStatsWriter: void addStats(int,java.lang.String,android.os.health.HealthStatsWriter)>(10014, $r51, $r46);

        goto label13;

     label14:
        $r11 = virtualinvoke r2.<android.os.BatteryStats$Uid: android.util.ArrayMap getPackageStats()>();

        $r12 = virtualinvoke $r11.<android.util.ArrayMap: java.util.Set entrySet()>();

        r96 = interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>();

     label15:
        $z4 = interfaceinvoke r96.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label16;

        $r38 = interfaceinvoke r96.<java.util.Iterator: java.lang.Object next()>();

        r97 = (java.util.Map$Entry) $r38;

        $r39 = new android.os.health.HealthStatsWriter;

        $r40 = <android.os.health.PackageHealthStats: android.os.health.HealthKeys$Constants CONSTANTS>;

        specialinvoke $r39.<android.os.health.HealthStatsWriter: void <init>(android.os.health.HealthKeys$Constants)>($r40);

        $r41 = interfaceinvoke r97.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r42 = (android.os.BatteryStats$Uid$Pkg) $r41;

        virtualinvoke r0.<com.android.server.am.HealthStatsBatteryStatsWriter: void writePkg(android.os.health.HealthStatsWriter,android.os.BatteryStats$Uid$Pkg)>($r39, $r42);

        $r43 = interfaceinvoke r97.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r44 = (java.lang.String) $r43;

        virtualinvoke r1.<android.os.health.HealthStatsWriter: void addStats(int,java.lang.String,android.os.health.HealthStatsWriter)>(10015, $r44, $r39);

        goto label15;

     label16:
        r99 = virtualinvoke r2.<android.os.BatteryStats$Uid: android.os.BatteryStats$ControllerActivityCounter getWifiControllerActivity()>();

        if r99 == null goto label19;

        $r34 = virtualinvoke r99.<android.os.BatteryStats$ControllerActivityCounter: android.os.BatteryStats$LongCounter getIdleTimeCounter()>();

        $l66 = virtualinvoke $r34.<android.os.BatteryStats$LongCounter: long getCountLocked(int)>(0);

        virtualinvoke r1.<android.os.health.HealthStatsWriter: void addMeasurement(int,long)>(10016, $l66);

        $r35 = virtualinvoke r99.<android.os.BatteryStats$ControllerActivityCounter: android.os.BatteryStats$LongCounter getRxTimeCounter()>();

        $l67 = virtualinvoke $r35.<android.os.BatteryStats$LongCounter: long getCountLocked(int)>(0);

        virtualinvoke r1.<android.os.health.HealthStatsWriter: void addMeasurement(int,long)>(10017, $l67);

        l75 = 0L;

        r100 = virtualinvoke r99.<android.os.BatteryStats$ControllerActivityCounter: android.os.BatteryStats$LongCounter[] getTxTimeCounters()>();

        i76 = lengthof r100;

        i77 = 0;

     label17:
        if i77 >= i76 goto label18;

        $r37 = r100[i77];

        $l69 = virtualinvoke $r37.<android.os.BatteryStats$LongCounter: long getCountLocked(int)>(0);

        l75 = l75 + $l69;

        i77 = i77 + 1;

        goto label17;

     label18:
        virtualinvoke r1.<android.os.health.HealthStatsWriter: void addMeasurement(int,long)>(10018, l75);

        $r36 = virtualinvoke r99.<android.os.BatteryStats$ControllerActivityCounter: android.os.BatteryStats$LongCounter getPowerCounter()>();

        $l68 = virtualinvoke $r36.<android.os.BatteryStats$LongCounter: long getCountLocked(int)>(0);

        virtualinvoke r1.<android.os.health.HealthStatsWriter: void addMeasurement(int,long)>(10019, $l68);

     label19:
        r101 = virtualinvoke r2.<android.os.BatteryStats$Uid: android.os.BatteryStats$ControllerActivityCounter getBluetoothControllerActivity()>();

        if r101 == null goto label22;

        $r30 = virtualinvoke r101.<android.os.BatteryStats$ControllerActivityCounter: android.os.BatteryStats$LongCounter getIdleTimeCounter()>();

        $l62 = virtualinvoke $r30.<android.os.BatteryStats$LongCounter: long getCountLocked(int)>(0);

        virtualinvoke r1.<android.os.health.HealthStatsWriter: void addMeasurement(int,long)>(10020, $l62);

        $r31 = virtualinvoke r101.<android.os.BatteryStats$ControllerActivityCounter: android.os.BatteryStats$LongCounter getRxTimeCounter()>();

        $l63 = virtualinvoke $r31.<android.os.BatteryStats$LongCounter: long getCountLocked(int)>(0);

        virtualinvoke r1.<android.os.health.HealthStatsWriter: void addMeasurement(int,long)>(10021, $l63);

        l78 = 0L;

        r102 = virtualinvoke r101.<android.os.BatteryStats$ControllerActivityCounter: android.os.BatteryStats$LongCounter[] getTxTimeCounters()>();

        i79 = lengthof r102;

        i80 = 0;

     label20:
        if i80 >= i79 goto label21;

        $r33 = r102[i80];

        $l65 = virtualinvoke $r33.<android.os.BatteryStats$LongCounter: long getCountLocked(int)>(0);

        l78 = l78 + $l65;

        i80 = i80 + 1;

        goto label20;

     label21:
        virtualinvoke r1.<android.os.health.HealthStatsWriter: void addMeasurement(int,long)>(10022, l78);

        $r32 = virtualinvoke r101.<android.os.BatteryStats$ControllerActivityCounter: android.os.BatteryStats$LongCounter getPowerCounter()>();

        $l64 = virtualinvoke $r32.<android.os.BatteryStats$LongCounter: long getCountLocked(int)>(0);

        virtualinvoke r1.<android.os.health.HealthStatsWriter: void addMeasurement(int,long)>(10023, $l64);

     label22:
        r103 = virtualinvoke r2.<android.os.BatteryStats$Uid: android.os.BatteryStats$ControllerActivityCounter getModemControllerActivity()>();

        if r103 == null goto label25;

        $r26 = virtualinvoke r103.<android.os.BatteryStats$ControllerActivityCounter: android.os.BatteryStats$LongCounter getIdleTimeCounter()>();

        $l58 = virtualinvoke $r26.<android.os.BatteryStats$LongCounter: long getCountLocked(int)>(0);

        virtualinvoke r1.<android.os.health.HealthStatsWriter: void addMeasurement(int,long)>(10024, $l58);

        $r27 = virtualinvoke r103.<android.os.BatteryStats$ControllerActivityCounter: android.os.BatteryStats$LongCounter getRxTimeCounter()>();

        $l59 = virtualinvoke $r27.<android.os.BatteryStats$LongCounter: long getCountLocked(int)>(0);

        virtualinvoke r1.<android.os.health.HealthStatsWriter: void addMeasurement(int,long)>(10025, $l59);

        l81 = 0L;

        r104 = virtualinvoke r103.<android.os.BatteryStats$ControllerActivityCounter: android.os.BatteryStats$LongCounter[] getTxTimeCounters()>();

        i82 = lengthof r104;

        i83 = 0;

     label23:
        if i83 >= i82 goto label24;

        $r29 = r104[i83];

        $l61 = virtualinvoke $r29.<android.os.BatteryStats$LongCounter: long getCountLocked(int)>(0);

        l81 = l81 + $l61;

        i83 = i83 + 1;

        goto label23;

     label24:
        virtualinvoke r1.<android.os.health.HealthStatsWriter: void addMeasurement(int,long)>(10026, l81);

        $r28 = virtualinvoke r103.<android.os.BatteryStats$ControllerActivityCounter: android.os.BatteryStats$LongCounter getPowerCounter()>();

        $l60 = virtualinvoke $r28.<android.os.BatteryStats$LongCounter: long getCountLocked(int)>(0);

        virtualinvoke r1.<android.os.health.HealthStatsWriter: void addMeasurement(int,long)>(10027, $l60);

     label25:
        $l17 = r0.<com.android.server.am.HealthStatsBatteryStatsWriter: long mNowRealtimeMs>;

        $l18 = $l17 * 1000L;

        $l19 = virtualinvoke r2.<android.os.BatteryStats$Uid: long getWifiRunningTime(long,int)>($l18, 0);

        $l20 = $l19 / 1000L;

        virtualinvoke r1.<android.os.health.HealthStatsWriter: void addMeasurement(int,long)>(10028, $l20);

        $l21 = r0.<com.android.server.am.HealthStatsBatteryStatsWriter: long mNowRealtimeMs>;

        $l22 = $l21 * 1000L;

        $l23 = virtualinvoke r2.<android.os.BatteryStats$Uid: long getFullWifiLockTime(long,int)>($l22, 0);

        $l24 = $l23 / 1000L;

        virtualinvoke r1.<android.os.health.HealthStatsWriter: void addMeasurement(int,long)>(10029, $l24);

        $i25 = virtualinvoke r2.<android.os.BatteryStats$Uid: int getWifiScanCount(int)>(0);

        $l26 = r0.<com.android.server.am.HealthStatsBatteryStatsWriter: long mNowRealtimeMs>;

        $l27 = $l26 * 1000L;

        $l28 = virtualinvoke r2.<android.os.BatteryStats$Uid: long getWifiScanTime(long,int)>($l27, 0);

        $l29 = $l28 / 1000L;

        virtualinvoke r1.<android.os.health.HealthStatsWriter: void addTimer(int,int,long)>(10030, $i25, $l29);

        $l30 = r0.<com.android.server.am.HealthStatsBatteryStatsWriter: long mNowRealtimeMs>;

        $l31 = $l30 * 1000L;

        $l32 = virtualinvoke r2.<android.os.BatteryStats$Uid: long getWifiMulticastTime(long,int)>($l31, 0);

        $l33 = $l32 / 1000L;

        virtualinvoke r1.<android.os.health.HealthStatsWriter: void addMeasurement(int,long)>(10031, $l33);

        $r13 = virtualinvoke r2.<android.os.BatteryStats$Uid: android.os.BatteryStats$Timer getAudioTurnedOnTimer()>();

        specialinvoke r0.<com.android.server.am.HealthStatsBatteryStatsWriter: void addTimer(android.os.health.HealthStatsWriter,int,android.os.BatteryStats$Timer)>(r1, 10032, $r13);

        $r14 = virtualinvoke r2.<android.os.BatteryStats$Uid: android.os.BatteryStats$Timer getVideoTurnedOnTimer()>();

        specialinvoke r0.<com.android.server.am.HealthStatsBatteryStatsWriter: void addTimer(android.os.health.HealthStatsWriter,int,android.os.BatteryStats$Timer)>(r1, 10033, $r14);

        $r15 = virtualinvoke r2.<android.os.BatteryStats$Uid: android.os.BatteryStats$Timer getFlashlightTurnedOnTimer()>();

        specialinvoke r0.<com.android.server.am.HealthStatsBatteryStatsWriter: void addTimer(android.os.health.HealthStatsWriter,int,android.os.BatteryStats$Timer)>(r1, 10034, $r15);

        $r16 = virtualinvoke r2.<android.os.BatteryStats$Uid: android.os.BatteryStats$Timer getCameraTurnedOnTimer()>();

        specialinvoke r0.<com.android.server.am.HealthStatsBatteryStatsWriter: void addTimer(android.os.health.HealthStatsWriter,int,android.os.BatteryStats$Timer)>(r1, 10035, $r16);

        $r17 = virtualinvoke r2.<android.os.BatteryStats$Uid: android.os.BatteryStats$Timer getForegroundActivityTimer()>();

        specialinvoke r0.<com.android.server.am.HealthStatsBatteryStatsWriter: void addTimer(android.os.health.HealthStatsWriter,int,android.os.BatteryStats$Timer)>(r1, 10036, $r17);

        $r18 = virtualinvoke r2.<android.os.BatteryStats$Uid: android.os.BatteryStats$Timer getBluetoothScanTimer()>();

        specialinvoke r0.<com.android.server.am.HealthStatsBatteryStatsWriter: void addTimer(android.os.health.HealthStatsWriter,int,android.os.BatteryStats$Timer)>(r1, 10037, $r18);

        $r19 = virtualinvoke r2.<android.os.BatteryStats$Uid: android.os.BatteryStats$Timer getProcessStateTimer(int)>(0);

        specialinvoke r0.<com.android.server.am.HealthStatsBatteryStatsWriter: void addTimer(android.os.health.HealthStatsWriter,int,android.os.BatteryStats$Timer)>(r1, 10038, $r19);

        $r20 = virtualinvoke r2.<android.os.BatteryStats$Uid: android.os.BatteryStats$Timer getProcessStateTimer(int)>(1);

        specialinvoke r0.<com.android.server.am.HealthStatsBatteryStatsWriter: void addTimer(android.os.health.HealthStatsWriter,int,android.os.BatteryStats$Timer)>(r1, 10039, $r20);

        $r21 = virtualinvoke r2.<android.os.BatteryStats$Uid: android.os.BatteryStats$Timer getProcessStateTimer(int)>(4);

        specialinvoke r0.<com.android.server.am.HealthStatsBatteryStatsWriter: void addTimer(android.os.health.HealthStatsWriter,int,android.os.BatteryStats$Timer)>(r1, 10040, $r21);

        $r22 = virtualinvoke r2.<android.os.BatteryStats$Uid: android.os.BatteryStats$Timer getProcessStateTimer(int)>(2);

        specialinvoke r0.<com.android.server.am.HealthStatsBatteryStatsWriter: void addTimer(android.os.health.HealthStatsWriter,int,android.os.BatteryStats$Timer)>(r1, 10041, $r22);

        $r23 = virtualinvoke r2.<android.os.BatteryStats$Uid: android.os.BatteryStats$Timer getProcessStateTimer(int)>(3);

        specialinvoke r0.<com.android.server.am.HealthStatsBatteryStatsWriter: void addTimer(android.os.health.HealthStatsWriter,int,android.os.BatteryStats$Timer)>(r1, 10042, $r23);

        $r24 = virtualinvoke r2.<android.os.BatteryStats$Uid: android.os.BatteryStats$Timer getProcessStateTimer(int)>(6);

        specialinvoke r0.<com.android.server.am.HealthStatsBatteryStatsWriter: void addTimer(android.os.health.HealthStatsWriter,int,android.os.BatteryStats$Timer)>(r1, 10043, $r24);

        $r25 = virtualinvoke r2.<android.os.BatteryStats$Uid: android.os.BatteryStats$Timer getVibratorOnTimer()>();

        specialinvoke r0.<com.android.server.am.HealthStatsBatteryStatsWriter: void addTimer(android.os.health.HealthStatsWriter,int,android.os.BatteryStats$Timer)>(r1, 10044, $r25);

        $i34 = virtualinvoke r2.<android.os.BatteryStats$Uid: int getUserActivityCount(int,int)>(0, 0);

        $l35 = (long) $i34;

        virtualinvoke r1.<android.os.health.HealthStatsWriter: void addMeasurement(int,long)>(10045, $l35);

        $i36 = virtualinvoke r2.<android.os.BatteryStats$Uid: int getUserActivityCount(int,int)>(1, 0);

        $l37 = (long) $i36;

        virtualinvoke r1.<android.os.health.HealthStatsWriter: void addMeasurement(int,long)>(10046, $l37);

        $i38 = virtualinvoke r2.<android.os.BatteryStats$Uid: int getUserActivityCount(int,int)>(2, 0);

        $l39 = (long) $i38;

        virtualinvoke r1.<android.os.health.HealthStatsWriter: void addMeasurement(int,long)>(10047, $l39);

        $l40 = virtualinvoke r2.<android.os.BatteryStats$Uid: long getNetworkActivityBytes(int,int)>(0, 0);

        virtualinvoke r1.<android.os.health.HealthStatsWriter: void addMeasurement(int,long)>(10048, $l40);

        $l41 = virtualinvoke r2.<android.os.BatteryStats$Uid: long getNetworkActivityBytes(int,int)>(1, 0);

        virtualinvoke r1.<android.os.health.HealthStatsWriter: void addMeasurement(int,long)>(10049, $l41);

        $l42 = virtualinvoke r2.<android.os.BatteryStats$Uid: long getNetworkActivityBytes(int,int)>(2, 0);

        virtualinvoke r1.<android.os.health.HealthStatsWriter: void addMeasurement(int,long)>(10050, $l42);

        $l43 = virtualinvoke r2.<android.os.BatteryStats$Uid: long getNetworkActivityBytes(int,int)>(3, 0);

        virtualinvoke r1.<android.os.health.HealthStatsWriter: void addMeasurement(int,long)>(10051, $l43);

        $l44 = virtualinvoke r2.<android.os.BatteryStats$Uid: long getNetworkActivityBytes(int,int)>(4, 0);

        virtualinvoke r1.<android.os.health.HealthStatsWriter: void addMeasurement(int,long)>(10052, $l44);

        $l45 = virtualinvoke r2.<android.os.BatteryStats$Uid: long getNetworkActivityBytes(int,int)>(5, 0);

        virtualinvoke r1.<android.os.health.HealthStatsWriter: void addMeasurement(int,long)>(10053, $l45);

        $l46 = virtualinvoke r2.<android.os.BatteryStats$Uid: long getNetworkActivityPackets(int,int)>(0, 0);

        virtualinvoke r1.<android.os.health.HealthStatsWriter: void addMeasurement(int,long)>(10054, $l46);

        $l47 = virtualinvoke r2.<android.os.BatteryStats$Uid: long getNetworkActivityPackets(int,int)>(1, 0);

        virtualinvoke r1.<android.os.health.HealthStatsWriter: void addMeasurement(int,long)>(10055, $l47);

        $l48 = virtualinvoke r2.<android.os.BatteryStats$Uid: long getNetworkActivityPackets(int,int)>(2, 0);

        virtualinvoke r1.<android.os.health.HealthStatsWriter: void addMeasurement(int,long)>(10056, $l48);

        $l49 = virtualinvoke r2.<android.os.BatteryStats$Uid: long getNetworkActivityPackets(int,int)>(3, 0);

        virtualinvoke r1.<android.os.health.HealthStatsWriter: void addMeasurement(int,long)>(10057, $l49);

        $l50 = virtualinvoke r2.<android.os.BatteryStats$Uid: long getNetworkActivityPackets(int,int)>(4, 0);

        virtualinvoke r1.<android.os.health.HealthStatsWriter: void addMeasurement(int,long)>(10058, $l50);

        $l51 = virtualinvoke r2.<android.os.BatteryStats$Uid: long getNetworkActivityPackets(int,int)>(5, 0);

        virtualinvoke r1.<android.os.health.HealthStatsWriter: void addMeasurement(int,long)>(10059, $l51);

        $i52 = virtualinvoke r2.<android.os.BatteryStats$Uid: int getMobileRadioActiveCount(int)>(0);

        $l53 = virtualinvoke r2.<android.os.BatteryStats$Uid: long getMobileRadioActiveTime(int)>(0);

        virtualinvoke r1.<android.os.health.HealthStatsWriter: void addTimer(int,int,long)>(10061, $i52, $l53);

        $l54 = virtualinvoke r2.<android.os.BatteryStats$Uid: long getUserCpuTimeUs(int)>(0);

        $l55 = $l54 / 1000L;

        virtualinvoke r1.<android.os.health.HealthStatsWriter: void addMeasurement(int,long)>(10062, $l55);

        $l56 = virtualinvoke r2.<android.os.BatteryStats$Uid: long getSystemCpuTimeUs(int)>(0);

        $l57 = $l56 / 1000L;

        virtualinvoke r1.<android.os.health.HealthStatsWriter: void addMeasurement(int,long)>(10063, $l57);

        virtualinvoke r1.<android.os.health.HealthStatsWriter: void addMeasurement(int,long)>(10064, 0L);

        return;
    }
}
