public final class com.android.server.am.MemoryStatUtil extends java.lang.Object
{
    private static final java.util.regex.Pattern CACHE_IN_BYTES;
    private static final boolean DEVICE_HAS_PER_APP_MEMCG;
    private static final java.lang.String MEMORY_STAT_FILE_FMT;
    static final int PAGE_SIZE;
    private static final java.util.regex.Pattern PGFAULT;
    private static final int PGFAULT_INDEX;
    private static final java.util.regex.Pattern PGMAJFAULT;
    private static final int PGMAJFAULT_INDEX;
    private static final java.lang.String PROC_STAT_FILE_FMT;
    private static final java.util.regex.Pattern RSS_IN_BYTES;
    private static final int RSS_IN_PAGES_INDEX;
    private static final java.util.regex.Pattern SWAP_IN_BYTES;
    private static final java.lang.String TAG;

    static void <clinit>()
    {
        int $i0, $i2;
        long $l1;
        boolean $z0;
        java.util.regex.Pattern $r0, $r1, $r2, $r3, $r4;

        <com.android.server.am.MemoryStatUtil: java.lang.String TAG> = "ActivityManager";

        <com.android.server.am.MemoryStatUtil: int RSS_IN_PAGES_INDEX> = 23;

        <com.android.server.am.MemoryStatUtil: java.lang.String PROC_STAT_FILE_FMT> = "/proc/%d/stat";

        <com.android.server.am.MemoryStatUtil: int PGMAJFAULT_INDEX> = 11;

        <com.android.server.am.MemoryStatUtil: int PGFAULT_INDEX> = 9;

        <com.android.server.am.MemoryStatUtil: java.lang.String MEMORY_STAT_FILE_FMT> = "/dev/memcg/apps/uid_%d/pid_%d/memory.stat";

        $i0 = <android.system.OsConstants: int _SC_PAGESIZE>;

        $l1 = staticinvoke <android.system.Os: long sysconf(int)>($i0);

        $i2 = (int) $l1;

        <com.android.server.am.MemoryStatUtil: int PAGE_SIZE> = $i2;

        $z0 = staticinvoke <android.os.SystemProperties: boolean getBoolean(java.lang.String,boolean)>("ro.config.per_app_memcg", 0);

        <com.android.server.am.MemoryStatUtil: boolean DEVICE_HAS_PER_APP_MEMCG> = $z0;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("total_pgfault (\\d+)");

        <com.android.server.am.MemoryStatUtil: java.util.regex.Pattern PGFAULT> = $r0;

        $r1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("total_pgmajfault (\\d+)");

        <com.android.server.am.MemoryStatUtil: java.util.regex.Pattern PGMAJFAULT> = $r1;

        $r2 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("total_rss (\\d+)");

        <com.android.server.am.MemoryStatUtil: java.util.regex.Pattern RSS_IN_BYTES> = $r2;

        $r3 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("total_cache (\\d+)");

        <com.android.server.am.MemoryStatUtil: java.util.regex.Pattern CACHE_IN_BYTES> = $r3;

        $r4 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("total_swap (\\d+)");

        <com.android.server.am.MemoryStatUtil: java.util.regex.Pattern SWAP_IN_BYTES> = $r4;

        return;
    }

    private void <init>()
    {
        com.android.server.am.MemoryStatUtil r0;

        r0 := @this: com.android.server.am.MemoryStatUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static boolean hasMemcg()
    {
        boolean $z0;

        $z0 = <com.android.server.am.MemoryStatUtil: boolean DEVICE_HAS_PER_APP_MEMCG>;

        return $z0;
    }

    static com.android.server.am.MemoryStatUtil$MemoryStat parseMemoryStatFromMemcg(java.lang.String)
    {
        java.lang.String r0;
        boolean $z0;
        com.android.server.am.MemoryStatUtil$MemoryStat $r2;
        java.util.regex.Pattern $r3, $r4, $r5, $r6, $r7;
        long $l0, $l1, $l2, $l3, $l4;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label2;

        $z0 = virtualinvoke r0.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        $r2 = new com.android.server.am.MemoryStatUtil$MemoryStat;

        specialinvoke $r2.<com.android.server.am.MemoryStatUtil$MemoryStat: void <init>()>();

        $r3 = <com.android.server.am.MemoryStatUtil: java.util.regex.Pattern PGFAULT>;

        $l0 = staticinvoke <com.android.server.am.MemoryStatUtil: long tryParseLong(java.util.regex.Pattern,java.lang.String)>($r3, r0);

        $r2.<com.android.server.am.MemoryStatUtil$MemoryStat: long pgfault> = $l0;

        $r4 = <com.android.server.am.MemoryStatUtil: java.util.regex.Pattern PGMAJFAULT>;

        $l1 = staticinvoke <com.android.server.am.MemoryStatUtil: long tryParseLong(java.util.regex.Pattern,java.lang.String)>($r4, r0);

        $r2.<com.android.server.am.MemoryStatUtil$MemoryStat: long pgmajfault> = $l1;

        $r5 = <com.android.server.am.MemoryStatUtil: java.util.regex.Pattern RSS_IN_BYTES>;

        $l2 = staticinvoke <com.android.server.am.MemoryStatUtil: long tryParseLong(java.util.regex.Pattern,java.lang.String)>($r5, r0);

        $r2.<com.android.server.am.MemoryStatUtil$MemoryStat: long rssInBytes> = $l2;

        $r6 = <com.android.server.am.MemoryStatUtil: java.util.regex.Pattern CACHE_IN_BYTES>;

        $l3 = staticinvoke <com.android.server.am.MemoryStatUtil: long tryParseLong(java.util.regex.Pattern,java.lang.String)>($r6, r0);

        $r2.<com.android.server.am.MemoryStatUtil$MemoryStat: long cacheInBytes> = $l3;

        $r7 = <com.android.server.am.MemoryStatUtil: java.util.regex.Pattern SWAP_IN_BYTES>;

        $l4 = staticinvoke <com.android.server.am.MemoryStatUtil: long tryParseLong(java.util.regex.Pattern,java.lang.String)>($r7, r0);

        $r2.<com.android.server.am.MemoryStatUtil$MemoryStat: long swapInBytes> = $l4;

        return $r2;

     label2:
        return null;
    }

    static com.android.server.am.MemoryStatUtil$MemoryStat parseMemoryStatFromProcfs(java.lang.String)
    {
        java.lang.String[] r0;
        boolean $z0;
        int $i0, $i4;
        java.lang.String $r1, $r2, $r3, r5;
        long $l1, $l2, $l3, $l5, $l6;
        java.lang.Throwable $r4;
        com.android.server.am.MemoryStatUtil$MemoryStat r6;

        r5 := @parameter0: java.lang.String;

        if r5 == null goto label5;

        $z0 = virtualinvoke r5.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        goto label5;

     label1:
        r0 = virtualinvoke r5.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        $i0 = lengthof r0;

        if $i0 >= 24 goto label2;

        return null;

     label2:
        r6 = new com.android.server.am.MemoryStatUtil$MemoryStat;

        specialinvoke r6.<com.android.server.am.MemoryStatUtil$MemoryStat: void <init>()>();

        $r1 = r0[9];

        $l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r1);

        r6.<com.android.server.am.MemoryStatUtil$MemoryStat: long pgfault> = $l1;

        $r2 = r0[11];

        $l2 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r2);

        r6.<com.android.server.am.MemoryStatUtil$MemoryStat: long pgmajfault> = $l2;

        $r3 = r0[23];

        $l3 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r3);

        $i4 = <com.android.server.am.MemoryStatUtil: int PAGE_SIZE>;

        $l5 = (long) $i4;

        $l6 = $l3 * $l5;

        r6.<com.android.server.am.MemoryStatUtil$MemoryStat: long rssInBytes> = $l6;

     label3:
        return r6;

     label4:
        $r4 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", "Failed to parse value", $r4);

        return null;

     label5:
        return null;

        catch java.lang.NumberFormatException from label2 to label3 with label4;
    }

    private static java.lang.String readFileContents(java.lang.String)
    {
        java.io.File $r0;
        boolean $z0;
        java.lang.Throwable $r1;
        java.lang.String r2, r4;

        r2 := @parameter0: java.lang.String;

        $r0 = new java.io.File;

        specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>(r2);

        $z0 = virtualinvoke $r0.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        r4 = staticinvoke <android.os.FileUtils: java.lang.String readTextFile(java.io.File,int,java.lang.String)>($r0, 0, null);

     label2:
        return r4;

     label3:
        $r1 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", "Failed to read file:", $r1);

        return null;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static com.android.server.am.MemoryStatUtil$MemoryStat readMemoryStatFromFilesystem(int, int)
    {
        int i0, i1;
        boolean $z0;
        com.android.server.am.MemoryStatUtil$MemoryStat r0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z0 = staticinvoke <com.android.server.am.MemoryStatUtil: boolean hasMemcg()>();

        if $z0 == 0 goto label1;

        r0 = staticinvoke <com.android.server.am.MemoryStatUtil: com.android.server.am.MemoryStatUtil$MemoryStat readMemoryStatFromMemcg(int,int)>(i0, i1);

        goto label2;

     label1:
        r0 = staticinvoke <com.android.server.am.MemoryStatUtil: com.android.server.am.MemoryStatUtil$MemoryStat readMemoryStatFromProcfs(int)>(i1);

     label2:
        return r0;
    }

    static com.android.server.am.MemoryStatUtil$MemoryStat readMemoryStatFromMemcg(int, int)
    {
        int i0, i1;
        java.lang.Object[] $r0;
        java.util.Locale $r1;
        java.lang.Integer $r2, $r3;
        java.lang.String $r4, $r5;
        com.android.server.am.MemoryStatUtil$MemoryStat $r6;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = <java.util.Locale: java.util.Locale US>;

        $r0 = newarray (java.lang.Object)[2];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r0[0] = $r2;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r0[1] = $r3;

        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r1, "/dev/memcg/apps/uid_%d/pid_%d/memory.stat", $r0);

        $r5 = staticinvoke <com.android.server.am.MemoryStatUtil: java.lang.String readFileContents(java.lang.String)>($r4);

        $r6 = staticinvoke <com.android.server.am.MemoryStatUtil: com.android.server.am.MemoryStatUtil$MemoryStat parseMemoryStatFromMemcg(java.lang.String)>($r5);

        return $r6;
    }

    public static com.android.server.am.MemoryStatUtil$MemoryStat readMemoryStatFromProcfs(int)
    {
        int i0;
        java.lang.Object[] $r0;
        java.util.Locale $r1;
        java.lang.Integer $r2;
        java.lang.String $r3, $r4;
        com.android.server.am.MemoryStatUtil$MemoryStat $r5;

        i0 := @parameter0: int;

        $r1 = <java.util.Locale: java.util.Locale US>;

        $r0 = newarray (java.lang.Object)[1];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r0[0] = $r2;

        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r1, "/proc/%d/stat", $r0);

        $r4 = staticinvoke <com.android.server.am.MemoryStatUtil: java.lang.String readFileContents(java.lang.String)>($r3);

        $r5 = staticinvoke <com.android.server.am.MemoryStatUtil: com.android.server.am.MemoryStatUtil$MemoryStat parseMemoryStatFromProcfs(java.lang.String)>($r4);

        return $r5;
    }

    private static long tryParseLong(java.util.regex.Pattern, java.lang.String)
    {
        java.lang.String r0, $r1;
        boolean $z0;
        java.lang.Throwable $r2;
        java.util.regex.Pattern r3;
        java.util.regex.Matcher r4;
        long l1;

        r3 := @parameter0: java.util.regex.Pattern;

        r0 := @parameter1: java.lang.String;

        r4 = virtualinvoke r3.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r0);

        l1 = 0L;

     label1:
        $z0 = virtualinvoke r4.<java.util.regex.Matcher: boolean find()>();

        if $z0 == 0 goto label2;

        $r1 = virtualinvoke r4.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r1);

     label2:
        return l1;

     label3:
        $r2 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", "Failed to parse value", $r2);

        return 0L;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }
}
