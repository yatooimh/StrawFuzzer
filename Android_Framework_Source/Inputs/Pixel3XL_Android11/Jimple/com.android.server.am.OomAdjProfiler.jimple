public class com.android.server.am.OomAdjProfiler extends java.lang.Object
{
    private static final int MSG_UPDATE_CPU_TIME;
    private boolean mLastScheduledOnBattery;
    private boolean mLastScheduledScreenOff;
    private long mLastSystemServerCpuTimeMs;
    private boolean mOnBattery;
    private com.android.server.am.OomAdjProfiler$CpuTimes mOomAdjRunTime;
    final com.android.internal.util.RingBuffer mOomAdjRunTimesHist;
    private long mOomAdjStartTimeUs;
    private boolean mOomAdjStarted;
    private final com.android.internal.os.ProcessCpuTracker mProcessCpuTracker;
    private boolean mScreenOff;
    private com.android.server.am.OomAdjProfiler$CpuTimes mSystemServerCpuTime;
    private boolean mSystemServerCpuTimeUpdateScheduled;
    final com.android.internal.util.RingBuffer mSystemServerCpuTimesHist;
    private int mTotalOomAdjCalls;
    private long mTotalOomAdjRunTimeUs;

    public void <init>()
    {
        com.android.server.am.OomAdjProfiler r0;
        com.android.server.am.OomAdjProfiler$CpuTimes $r1, $r2;
        com.android.internal.os.ProcessCpuTracker $r3;
        com.android.internal.util.RingBuffer $r4, $r5;

        r0 := @this: com.android.server.am.OomAdjProfiler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new com.android.server.am.OomAdjProfiler$CpuTimes;

        specialinvoke $r1.<com.android.server.am.OomAdjProfiler$CpuTimes: void <init>(com.android.server.am.OomAdjProfiler,com.android.server.am.OomAdjProfiler$1)>(r0, null);

        r0.<com.android.server.am.OomAdjProfiler: com.android.server.am.OomAdjProfiler$CpuTimes mOomAdjRunTime> = $r1;

        $r2 = new com.android.server.am.OomAdjProfiler$CpuTimes;

        specialinvoke $r2.<com.android.server.am.OomAdjProfiler$CpuTimes: void <init>(com.android.server.am.OomAdjProfiler,com.android.server.am.OomAdjProfiler$1)>(r0, null);

        r0.<com.android.server.am.OomAdjProfiler: com.android.server.am.OomAdjProfiler$CpuTimes mSystemServerCpuTime> = $r2;

        $r3 = new com.android.internal.os.ProcessCpuTracker;

        specialinvoke $r3.<com.android.internal.os.ProcessCpuTracker: void <init>(boolean)>(0);

        r0.<com.android.server.am.OomAdjProfiler: com.android.internal.os.ProcessCpuTracker mProcessCpuTracker> = $r3;

        $r4 = new com.android.internal.util.RingBuffer;

        specialinvoke $r4.<com.android.internal.util.RingBuffer: void <init>(java.lang.Class,int)>(class "Lcom/android/server/am/OomAdjProfiler$CpuTimes;", 10);

        r0.<com.android.server.am.OomAdjProfiler: com.android.internal.util.RingBuffer mOomAdjRunTimesHist> = $r4;

        $r5 = new com.android.internal.util.RingBuffer;

        specialinvoke $r5.<com.android.internal.util.RingBuffer: void <init>(java.lang.Class,int)>(class "Lcom/android/server/am/OomAdjProfiler$CpuTimes;", 10);

        r0.<com.android.server.am.OomAdjProfiler: com.android.internal.util.RingBuffer mSystemServerCpuTimesHist> = $r5;

        return;
    }

    static boolean access$100(com.android.server.am.OomAdjProfiler)
    {
        com.android.server.am.OomAdjProfiler r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.am.OomAdjProfiler;

        $z0 = r0.<com.android.server.am.OomAdjProfiler: boolean mOnBattery>;

        return $z0;
    }

    static boolean access$200(com.android.server.am.OomAdjProfiler)
    {
        com.android.server.am.OomAdjProfiler r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.am.OomAdjProfiler;

        $z0 = r0.<com.android.server.am.OomAdjProfiler: boolean mScreenOff>;

        return $z0;
    }

    public static void lambda$oLbVP84ACmxo_1QlnwlSuhi91W4(com.android.server.am.OomAdjProfiler, boolean, boolean, boolean)
    {
        com.android.server.am.OomAdjProfiler r0;
        boolean z0, z1, z2;

        r0 := @parameter0: com.android.server.am.OomAdjProfiler;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        z2 := @parameter3: boolean;

        specialinvoke r0.<com.android.server.am.OomAdjProfiler: void updateSystemServerCpuTime(boolean,boolean,boolean)>(z0, z1, z2);

        return;
    }

    private void scheduleSystemServerCpuTimeUpdate()
    {
        com.android.server.am.OomAdjProfiler r0;
        boolean $z0, $z1, $z2, $z3, $z4;
        com.android.server.am.'-$$Lambda$OomAdjProfiler$oLbVP84ACmxo_1QlnwlSuhi91W4' $r1;
        java.lang.Boolean $r2, $r3, $r4;
        android.os.Handler $r6;
        java.lang.Throwable $r7;
        android.os.Message r8;
        com.android.internal.util.function.QuadConsumer r10;

        r0 := @this: com.android.server.am.OomAdjProfiler;

        entermonitor r0;

     label1:
        $z0 = r0.<com.android.server.am.OomAdjProfiler: boolean mSystemServerCpuTimeUpdateScheduled>;

        if $z0 == 0 goto label3;

        exitmonitor r0;

     label2:
        return;

     label3:
        $z1 = r0.<com.android.server.am.OomAdjProfiler: boolean mOnBattery>;

        r0.<com.android.server.am.OomAdjProfiler: boolean mLastScheduledOnBattery> = $z1;

        $z2 = r0.<com.android.server.am.OomAdjProfiler: boolean mScreenOff>;

        r0.<com.android.server.am.OomAdjProfiler: boolean mLastScheduledScreenOff> = $z2;

        r0.<com.android.server.am.OomAdjProfiler: boolean mSystemServerCpuTimeUpdateScheduled> = 1;

        $r1 = <com.android.server.am._$$Lambda$OomAdjProfiler$oLbVP84ACmxo_1QlnwlSuhi91W4: com.android.server.am.'-$$Lambda$OomAdjProfiler$oLbVP84ACmxo_1QlnwlSuhi91W4' INSTANCE>;

        $z3 = r0.<com.android.server.am.OomAdjProfiler: boolean mLastScheduledOnBattery>;

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3);

        $z4 = r0.<com.android.server.am.OomAdjProfiler: boolean mLastScheduledScreenOff>;

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z4);

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        r10 = (com.android.internal.util.function.QuadConsumer) $r1;

        r8 = staticinvoke <com.android.internal.util.function.pooled.PooledLambda: android.os.Message obtainMessage(com.android.internal.util.function.QuadConsumer,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(r10, r0, $r2, $r3, $r4);

        virtualinvoke r8.<android.os.Message: android.os.Message setWhat(int)>(42);

        $r6 = staticinvoke <com.android.internal.os.BackgroundThread: android.os.Handler getHandler()>();

        virtualinvoke $r6.<android.os.Handler: boolean sendMessage(android.os.Message)>(r8);

     label4:
        exitmonitor r0;

     label5:
        return;

     label6:
        $r7 := @caughtexception;

     label7:
        exitmonitor r0;

     label8:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    private void updateSystemServerCpuTime(boolean, boolean, boolean)
    {
        com.android.server.am.OomAdjProfiler r0;
        boolean z0, z1, z2, $z3;
        long l0, $l2, $l3;
        com.android.internal.os.ProcessCpuTracker $r2;
        int $i1;
        com.android.server.am.OomAdjProfiler$CpuTimes $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.am.OomAdjProfiler;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        z2 := @parameter2: boolean;

        $r2 = r0.<com.android.server.am.OomAdjProfiler: com.android.internal.os.ProcessCpuTracker mProcessCpuTracker>;

        $i1 = staticinvoke <android.os.Process: int myPid()>();

        l0 = virtualinvoke $r2.<com.android.internal.os.ProcessCpuTracker: long getCpuTimeForPid(int)>($i1);

        entermonitor r0;

        if z2 == 0 goto label3;

     label1:
        $z3 = r0.<com.android.server.am.OomAdjProfiler: boolean mSystemServerCpuTimeUpdateScheduled>;

        if $z3 != 0 goto label3;

        exitmonitor r0;

     label2:
        return;

     label3:
        $r3 = r0.<com.android.server.am.OomAdjProfiler: com.android.server.am.OomAdjProfiler$CpuTimes mSystemServerCpuTime>;

        $l2 = r0.<com.android.server.am.OomAdjProfiler: long mLastSystemServerCpuTimeMs>;

        $l3 = l0 - $l2;

        virtualinvoke $r3.<com.android.server.am.OomAdjProfiler$CpuTimes: void addCpuTimeMs(long,boolean,boolean)>($l3, z0, z1);

        r0.<com.android.server.am.OomAdjProfiler: long mLastSystemServerCpuTimeMs> = l0;

        r0.<com.android.server.am.OomAdjProfiler: boolean mSystemServerCpuTimeUpdateScheduled> = 0;

        exitmonitor r0;

     label4:
        return;

     label5:
        $r4 := @caughtexception;

     label6:
        exitmonitor r0;

     label7:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    void batteryPowerChanged(boolean)
    {
        com.android.server.am.OomAdjProfiler r0;
        boolean z0;
        java.lang.Throwable $r2;

        r0 := @this: com.android.server.am.OomAdjProfiler;

        z0 := @parameter0: boolean;

        entermonitor r0;

     label1:
        specialinvoke r0.<com.android.server.am.OomAdjProfiler: void scheduleSystemServerCpuTimeUpdate()>();

        r0.<com.android.server.am.OomAdjProfiler: boolean mOnBattery> = z0;

        exitmonitor r0;

     label2:
        return;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    void dump(java.io.PrintWriter)
    {
        com.android.server.am.OomAdjProfiler r0;
        com.android.server.am.OomAdjProfiler$CpuTimes[] r1, r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        com.android.server.am.OomAdjProfiler$CpuTimes $r3, $r8, $r9, $r10, $r11;
        com.android.internal.util.RingBuffer $r4, $r6;
        java.lang.Object[] $r5, $r7;
        int $i0, $i1, $i3, $i4, i8;
        long $l2, $l5, $l6, $l7;
        android.os.Handler $r12;
        java.lang.Throwable $r13;
        java.io.PrintWriter r14;

        r0 := @this: com.android.server.am.OomAdjProfiler;

        r14 := @parameter0: java.io.PrintWriter;

        entermonitor r0;

     label01:
        $z0 = r0.<com.android.server.am.OomAdjProfiler: boolean mSystemServerCpuTimeUpdateScheduled>;

        if $z0 == 0 goto label03;

        $r12 = staticinvoke <com.android.internal.os.BackgroundThread: android.os.Handler getHandler()>();

        virtualinvoke $r12.<android.os.Handler: void removeMessages(int)>(42);

        $z5 = r0.<com.android.server.am.OomAdjProfiler: boolean mLastScheduledOnBattery>;

        $z4 = r0.<com.android.server.am.OomAdjProfiler: boolean mLastScheduledScreenOff>;

        specialinvoke r0.<com.android.server.am.OomAdjProfiler: void updateSystemServerCpuTime(boolean,boolean,boolean)>($z5, $z4, 0);

     label02:
        goto label04;

     label03:
        $z2 = r0.<com.android.server.am.OomAdjProfiler: boolean mOnBattery>;

        $z1 = r0.<com.android.server.am.OomAdjProfiler: boolean mScreenOff>;

        specialinvoke r0.<com.android.server.am.OomAdjProfiler: void updateSystemServerCpuTime(boolean,boolean,boolean)>($z2, $z1, 0);

     label04:
        virtualinvoke r14.<java.io.PrintWriter: void println(java.lang.String)>("System server and oomAdj runtimes (ms) in recent battery sessions (most recent first):");

        $r3 = r0.<com.android.server.am.OomAdjProfiler: com.android.server.am.OomAdjProfiler$CpuTimes mSystemServerCpuTime>;

        $z3 = virtualinvoke $r3.<com.android.server.am.OomAdjProfiler$CpuTimes: boolean isEmpty()>();

        if $z3 != 0 goto label05;

        virtualinvoke r14.<java.io.PrintWriter: void print(java.lang.String)>("  ");

        virtualinvoke r14.<java.io.PrintWriter: void print(java.lang.String)>("system_server=");

        $r10 = r0.<com.android.server.am.OomAdjProfiler: com.android.server.am.OomAdjProfiler$CpuTimes mSystemServerCpuTime>;

        virtualinvoke r14.<java.io.PrintWriter: void print(java.lang.Object)>($r10);

        virtualinvoke r14.<java.io.PrintWriter: void print(java.lang.String)>("  ");

        virtualinvoke r14.<java.io.PrintWriter: void print(java.lang.String)>("oom_adj=");

        $r11 = r0.<com.android.server.am.OomAdjProfiler: com.android.server.am.OomAdjProfiler$CpuTimes mOomAdjRunTime>;

        virtualinvoke r14.<java.io.PrintWriter: void println(java.lang.Object)>($r11);

     label05:
        $r4 = r0.<com.android.server.am.OomAdjProfiler: com.android.internal.util.RingBuffer mSystemServerCpuTimesHist>;

        $r5 = virtualinvoke $r4.<com.android.internal.util.RingBuffer: java.lang.Object[] toArray()>();

        r1 = (com.android.server.am.OomAdjProfiler$CpuTimes[]) $r5;

        $r6 = r0.<com.android.server.am.OomAdjProfiler: com.android.internal.util.RingBuffer mOomAdjRunTimesHist>;

        $r7 = virtualinvoke $r6.<com.android.internal.util.RingBuffer: java.lang.Object[] toArray()>();

        r2 = (com.android.server.am.OomAdjProfiler$CpuTimes[]) $r7;

        $i0 = lengthof r2;

        i8 = $i0 - 1;

     label06:
        if i8 < 0 goto label09;

     label07:
        virtualinvoke r14.<java.io.PrintWriter: void print(java.lang.String)>("  ");

        virtualinvoke r14.<java.io.PrintWriter: void print(java.lang.String)>("system_server=");

        $r8 = r1[i8];

        virtualinvoke r14.<java.io.PrintWriter: void print(java.lang.Object)>($r8);

        virtualinvoke r14.<java.io.PrintWriter: void print(java.lang.String)>("  ");

        virtualinvoke r14.<java.io.PrintWriter: void print(java.lang.String)>("oom_adj=");

        $r9 = r2[i8];

        virtualinvoke r14.<java.io.PrintWriter: void println(java.lang.Object)>($r9);

     label08:
        i8 = i8 + -1;

        goto label06;

     label09:
        $i1 = r0.<com.android.server.am.OomAdjProfiler: int mTotalOomAdjCalls>;

        if $i1 == 0 goto label10;

        virtualinvoke r14.<java.io.PrintWriter: void println(java.lang.String)>("System server total oomAdj runtimes (us) since boot:");

        virtualinvoke r14.<java.io.PrintWriter: void print(java.lang.String)>("  cpu time spent=");

        $l2 = r0.<com.android.server.am.OomAdjProfiler: long mTotalOomAdjRunTimeUs>;

        virtualinvoke r14.<java.io.PrintWriter: void print(long)>($l2);

        virtualinvoke r14.<java.io.PrintWriter: void print(java.lang.String)>("  number of calls=");

        $i3 = r0.<com.android.server.am.OomAdjProfiler: int mTotalOomAdjCalls>;

        virtualinvoke r14.<java.io.PrintWriter: void print(int)>($i3);

        virtualinvoke r14.<java.io.PrintWriter: void print(java.lang.String)>("  average=");

        $l6 = r0.<com.android.server.am.OomAdjProfiler: long mTotalOomAdjRunTimeUs>;

        $i4 = r0.<com.android.server.am.OomAdjProfiler: int mTotalOomAdjCalls>;

        $l5 = (long) $i4;

        $l7 = $l6 / $l5;

        virtualinvoke r14.<java.io.PrintWriter: void println(long)>($l7);

     label10:
        exitmonitor r0;

     label11:
        return;

     label12:
        $r13 := @caughtexception;

     label13:
        exitmonitor r0;

     label14:
        throw $r13;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label04 to label05 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label07 to label08 with label12;
        catch java.lang.Throwable from label09 to label10 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    void onWakefulnessChanged(int)
    {
        com.android.server.am.OomAdjProfiler r0;
        int i0;
        java.lang.Throwable $r2;
        boolean z0;

        r0 := @this: com.android.server.am.OomAdjProfiler;

        i0 := @parameter0: int;

        entermonitor r0;

     label1:
        specialinvoke r0.<com.android.server.am.OomAdjProfiler: void scheduleSystemServerCpuTimeUpdate()>();

     label2:
        z0 = 1;

        if i0 == 1 goto label3;

        goto label4;

     label3:
        z0 = 0;

     label4:
        r0.<com.android.server.am.OomAdjProfiler: boolean mScreenOff> = z0;

        exitmonitor r0;

     label5:
        return;

     label6:
        $r2 := @caughtexception;

     label7:
        exitmonitor r0;

     label8:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    void oomAdjEnded()
    {
        com.android.server.am.OomAdjProfiler r0;
        long l0, $l1, $l2, $l3, $l4;
        boolean $z0;
        com.android.server.am.OomAdjProfiler$CpuTimes $r2;
        int $i5, $i6;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.am.OomAdjProfiler;

        entermonitor r0;

     label1:
        $z0 = r0.<com.android.server.am.OomAdjProfiler: boolean mOomAdjStarted>;

        if $z0 != 0 goto label3;

        exitmonitor r0;

     label2:
        return;

     label3:
        $l1 = staticinvoke <android.os.SystemClock: long currentThreadTimeMicro()>();

        $l2 = r0.<com.android.server.am.OomAdjProfiler: long mOomAdjStartTimeUs>;

        l0 = $l1 - $l2;

        $r2 = r0.<com.android.server.am.OomAdjProfiler: com.android.server.am.OomAdjProfiler$CpuTimes mOomAdjRunTime>;

        virtualinvoke $r2.<com.android.server.am.OomAdjProfiler$CpuTimes: void addCpuTimeUs(long)>(l0);

        $l3 = r0.<com.android.server.am.OomAdjProfiler: long mTotalOomAdjRunTimeUs>;

        $l4 = $l3 + l0;

        r0.<com.android.server.am.OomAdjProfiler: long mTotalOomAdjRunTimeUs> = $l4;

        $i5 = r0.<com.android.server.am.OomAdjProfiler: int mTotalOomAdjCalls>;

        $i6 = $i5 + 1;

        r0.<com.android.server.am.OomAdjProfiler: int mTotalOomAdjCalls> = $i6;

        exitmonitor r0;

     label4:
        return;

     label5:
        $r3 := @caughtexception;

     label6:
        exitmonitor r0;

     label7:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    void oomAdjStarted()
    {
        com.android.server.am.OomAdjProfiler r0;
        long $l0;
        java.lang.Throwable $r2;

        r0 := @this: com.android.server.am.OomAdjProfiler;

        entermonitor r0;

     label1:
        $l0 = staticinvoke <android.os.SystemClock: long currentThreadTimeMicro()>();

        r0.<com.android.server.am.OomAdjProfiler: long mOomAdjStartTimeUs> = $l0;

        r0.<com.android.server.am.OomAdjProfiler: boolean mOomAdjStarted> = 1;

        exitmonitor r0;

     label2:
        return;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    void reset()
    {
        com.android.server.am.OomAdjProfiler r0;
        com.android.server.am.OomAdjProfiler$CpuTimes $r1, $r2, $r4, r7, r8;
        boolean $z0;
        com.android.internal.util.RingBuffer $r3, $r5;
        java.lang.Throwable $r6;

        r0 := @this: com.android.server.am.OomAdjProfiler;

        entermonitor r0;

     label1:
        $r1 = r0.<com.android.server.am.OomAdjProfiler: com.android.server.am.OomAdjProfiler$CpuTimes mSystemServerCpuTime>;

        $z0 = virtualinvoke $r1.<com.android.server.am.OomAdjProfiler$CpuTimes: boolean isEmpty()>();

        if $z0 == 0 goto label3;

        exitmonitor r0;

     label2:
        return;

     label3:
        $r3 = r0.<com.android.server.am.OomAdjProfiler: com.android.internal.util.RingBuffer mOomAdjRunTimesHist>;

        $r2 = r0.<com.android.server.am.OomAdjProfiler: com.android.server.am.OomAdjProfiler$CpuTimes mOomAdjRunTime>;

        virtualinvoke $r3.<com.android.internal.util.RingBuffer: void append(java.lang.Object)>($r2);

        $r5 = r0.<com.android.server.am.OomAdjProfiler: com.android.internal.util.RingBuffer mSystemServerCpuTimesHist>;

        $r4 = r0.<com.android.server.am.OomAdjProfiler: com.android.server.am.OomAdjProfiler$CpuTimes mSystemServerCpuTime>;

        virtualinvoke $r5.<com.android.internal.util.RingBuffer: void append(java.lang.Object)>($r4);

        r7 = new com.android.server.am.OomAdjProfiler$CpuTimes;

        specialinvoke r7.<com.android.server.am.OomAdjProfiler$CpuTimes: void <init>(com.android.server.am.OomAdjProfiler,com.android.server.am.OomAdjProfiler$1)>(r0, null);

        r0.<com.android.server.am.OomAdjProfiler: com.android.server.am.OomAdjProfiler$CpuTimes mOomAdjRunTime> = r7;

        r8 = new com.android.server.am.OomAdjProfiler$CpuTimes;

        specialinvoke r8.<com.android.server.am.OomAdjProfiler$CpuTimes: void <init>(com.android.server.am.OomAdjProfiler,com.android.server.am.OomAdjProfiler$1)>(r0, null);

        r0.<com.android.server.am.OomAdjProfiler: com.android.server.am.OomAdjProfiler$CpuTimes mSystemServerCpuTime> = r8;

        exitmonitor r0;

     label4:
        return;

     label5:
        $r6 := @caughtexception;

     label6:
        exitmonitor r0;

     label7:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public static void <clinit>()
    {
        <com.android.server.am.OomAdjProfiler: int MSG_UPDATE_CPU_TIME> = 42;

        return;
    }
}
