final class com.android.server.am.PendingStartActivityUids extends java.lang.Object
{
    static final java.lang.String TAG;
    private android.content.Context mContext;
    private final android.util.SparseArray mPendingUids;

    void <init>(android.content.Context)
    {
        com.android.server.am.PendingStartActivityUids r0;
        android.content.Context r1;
        android.util.SparseArray $r2;

        r0 := @this: com.android.server.am.PendingStartActivityUids;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new android.util.SparseArray;

        specialinvoke $r2.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.am.PendingStartActivityUids: android.util.SparseArray mPendingUids> = $r2;

        r0.<com.android.server.am.PendingStartActivityUids: android.content.Context mContext> = r1;

        return;
    }

    void add(int, int)
    {
        com.android.server.am.PendingStartActivityUids r0;
        int i0, i1;
        android.util.Pair r1;
        android.util.SparseArray $r2, r7;
        java.lang.Object $r3;
        java.lang.Integer $r4;
        long $l2;
        java.lang.Long $r5;
        java.lang.Throwable $r6;

        r0 := @this: com.android.server.am.PendingStartActivityUids;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        entermonitor r0;

     label1:
        $r2 = r0.<com.android.server.am.PendingStartActivityUids: android.util.SparseArray mPendingUids>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        if $r3 != null goto label2;

        r7 = r0.<com.android.server.am.PendingStartActivityUids: android.util.SparseArray mPendingUids>;

        r1 = new android.util.Pair;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $l2 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        specialinvoke r1.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r4, $r5);

        virtualinvoke r7.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r1);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r6 := @caughtexception;

        exitmonitor r0;

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void delete(int)
    {
        com.android.server.am.PendingStartActivityUids r0;
        int i0;
        long l1, $l2, $l3;
        android.util.SparseArray $r1, $r5;
        java.lang.Object $r2, $r3;
        java.lang.Long $r4;
        byte $b4;
        java.lang.String $r10;
        java.lang.Throwable $r11;
        android.util.Pair r12;
        java.lang.StringBuilder r13;

        r0 := @this: com.android.server.am.PendingStartActivityUids;

        i0 := @parameter0: int;

        entermonitor r0;

     label1:
        $r1 = r0.<com.android.server.am.PendingStartActivityUids: android.util.SparseArray mPendingUids>;

        $r2 = virtualinvoke $r1.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r12 = (android.util.Pair) $r2;

     label2:
        if r12 == null goto label7;

     label3:
        $l2 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r3 = r12.<android.util.Pair: java.lang.Object second>;

        $r4 = (java.lang.Long) $r3;

        $l3 = virtualinvoke $r4.<java.lang.Long: long longValue()>();

        l1 = $l2 - $l3;

     label4:
        $b4 = l1 cmp 1000L;

        if $b4 < 0 goto label6;

     label5:
        r13 = new java.lang.StringBuilder;

        specialinvoke r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PendingStartActivityUids startActivity to updateOomAdj delay:");

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms, uid:");

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r10 = virtualinvoke r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", $r10);

     label6:
        $r5 = r0.<com.android.server.am.PendingStartActivityUids: android.util.SparseArray mPendingUids>;

        virtualinvoke $r5.<android.util.SparseArray: void delete(int)>(i0);

     label7:
        exitmonitor r0;

        return;

     label8:
        $r11 := @caughtexception;

        exitmonitor r0;

        throw $r11;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    boolean isPendingTopPid(int, int)
    {
        com.android.server.am.PendingStartActivityUids r0;
        int i0, i1, i2;
        android.util.SparseArray $r1;
        java.lang.Object $r2, $r3;
        java.lang.Integer $r4;
        java.lang.Throwable $r5;
        android.util.Pair r6;
        boolean z0;

        r0 := @this: com.android.server.am.PendingStartActivityUids;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        entermonitor r0;

     label1:
        $r1 = r0.<com.android.server.am.PendingStartActivityUids: android.util.SparseArray mPendingUids>;

        $r2 = virtualinvoke $r1.<android.util.SparseArray: java.lang.Object get(int)>(i1);

        r6 = (android.util.Pair) $r2;

     label2:
        z0 = 0;

        if r6 == null goto label6;

     label3:
        $r3 = r6.<android.util.Pair: java.lang.Object first>;

        $r4 = (java.lang.Integer) $r3;

        i2 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

     label4:
        if i2 != i0 goto label5;

        z0 = 1;

     label5:
        exitmonitor r0;

        return z0;

     label6:
        exitmonitor r0;

        return 0;

     label7:
        $r5 := @caughtexception;

        exitmonitor r0;

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    boolean isPendingTopUid(int)
    {
        com.android.server.am.PendingStartActivityUids r0;
        int i0;
        android.util.SparseArray $r1;
        java.lang.Throwable $r2;
        java.lang.Object r3;
        boolean z0;

        r0 := @this: com.android.server.am.PendingStartActivityUids;

        i0 := @parameter0: int;

        entermonitor r0;

     label1:
        $r1 = r0.<com.android.server.am.PendingStartActivityUids: android.util.SparseArray mPendingUids>;

        r3 = virtualinvoke $r1.<android.util.SparseArray: java.lang.Object get(int)>(i0);

     label2:
        if r3 == null goto label3;

        z0 = 1;

        goto label4;

     label3:
        z0 = 0;

     label4:
        exitmonitor r0;

        return z0;

     label5:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label5;
    }

    public static void <clinit>()
    {
        <com.android.server.am.PendingStartActivityUids: java.lang.String TAG> = "ActivityManager";

        return;
    }
}
