final class com.android.server.am.ProcessList$ImperceptibleKillRunner extends android.app.IUidObserver$Stub
{
    private static final java.lang.String DROPBOX_TAG_IMPERCEPTIBLE_KILL;
    private static final java.lang.String EXTRA_PID;
    private static final java.lang.String EXTRA_REASON;
    private static final java.lang.String EXTRA_REQUESTER;
    private static final java.lang.String EXTRA_TIMESTAMP;
    private static final java.lang.String EXTRA_UID;
    private android.os.Handler mHandler;
    private volatile boolean mIdle;
    private com.android.internal.app.ProcessMap mLastProcessKillTimes;
    private com.android.server.am.ProcessList$ImperceptibleKillRunner$IdlenessReceiver mReceiver;
    private boolean mUidObserverEnabled;
    private android.util.SparseArray mWorkItems;
    final com.android.server.am.ProcessList this$0;

    void <init>(com.android.server.am.ProcessList, android.os.Looper)
    {
        com.android.server.am.ProcessList$ImperceptibleKillRunner r0;
        com.android.server.am.ProcessList r1;
        android.os.Looper r2;
        android.util.SparseArray $r3;
        com.android.internal.app.ProcessMap $r4;
        com.android.server.am.ProcessList$ImperceptibleKillRunner$H $r5;

        r0 := @this: com.android.server.am.ProcessList$ImperceptibleKillRunner;

        r1 := @parameter0: com.android.server.am.ProcessList;

        r2 := @parameter1: android.os.Looper;

        r0.<com.android.server.am.ProcessList$ImperceptibleKillRunner: com.android.server.am.ProcessList this$0> = r1;

        specialinvoke r0.<android.app.IUidObserver$Stub: void <init>()>();

        $r3 = new android.util.SparseArray;

        specialinvoke $r3.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.am.ProcessList$ImperceptibleKillRunner: android.util.SparseArray mWorkItems> = $r3;

        $r4 = new com.android.internal.app.ProcessMap;

        specialinvoke $r4.<com.android.internal.app.ProcessMap: void <init>()>();

        r0.<com.android.server.am.ProcessList$ImperceptibleKillRunner: com.android.internal.app.ProcessMap mLastProcessKillTimes> = $r4;

        $r5 = new com.android.server.am.ProcessList$ImperceptibleKillRunner$H;

        specialinvoke $r5.<com.android.server.am.ProcessList$ImperceptibleKillRunner$H: void <init>(com.android.server.am.ProcessList$ImperceptibleKillRunner,android.os.Looper)>(r0, r2);

        r0.<com.android.server.am.ProcessList$ImperceptibleKillRunner: android.os.Handler mHandler> = $r5;

        return;
    }

    static void access$100(com.android.server.am.ProcessList$ImperceptibleKillRunner)
    {
        com.android.server.am.ProcessList$ImperceptibleKillRunner r0;

        r0 := @parameter0: com.android.server.am.ProcessList$ImperceptibleKillRunner;

        specialinvoke r0.<com.android.server.am.ProcessList$ImperceptibleKillRunner: void handleDeviceIdle()>();

        return;
    }

    static void access$200(com.android.server.am.ProcessList$ImperceptibleKillRunner, int)
    {
        com.android.server.am.ProcessList$ImperceptibleKillRunner r0;
        int i0;

        r0 := @parameter0: com.android.server.am.ProcessList$ImperceptibleKillRunner;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.am.ProcessList$ImperceptibleKillRunner: void handleUidGone(int)>(i0);

        return;
    }

    static void access$300(com.android.server.am.ProcessList$ImperceptibleKillRunner, int, int)
    {
        com.android.server.am.ProcessList$ImperceptibleKillRunner r0;
        int i0, i1;

        r0 := @parameter0: com.android.server.am.ProcessList$ImperceptibleKillRunner;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<com.android.server.am.ProcessList$ImperceptibleKillRunner: void handleUidStateChanged(int,int)>(i0, i1);

        return;
    }

    private void handleDeviceIdle()
    {
        com.android.server.am.ProcessList$ImperceptibleKillRunner r0;
        android.os.DropBoxManager r1;
        com.android.server.am.ActivityManagerService r2, $r5;
        int i0, $i1, $i2, $i3, $i4, $i6, i7, i8;
        android.os.Bundle r3;
        com.android.server.am.ProcessList $r4, $r15;
        android.content.Context $r6;
        java.lang.Object $r7, $r9, $r11;
        android.util.SparseArray $r8, $r10, $r16;
        boolean $z0, $z1, $z2, z3, $z4;
        long $l5;
        java.lang.String $r12;
        java.lang.Throwable $r14;
        java.util.List r17;

        r0 := @this: com.android.server.am.ProcessList$ImperceptibleKillRunner;

        $r4 = r0.<com.android.server.am.ProcessList$ImperceptibleKillRunner: com.android.server.am.ProcessList this$0>;

        $r5 = $r4.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService>;

        $r6 = $r5.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r7 = virtualinvoke $r6.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/os/DropBoxManager;");

        r1 = (android.os.DropBoxManager) $r7;

        if r1 == null goto label01;

        $z2 = virtualinvoke r1.<android.os.DropBoxManager: boolean isTagEnabled(java.lang.String)>("imperceptible_app_kill");

        if $z2 == 0 goto label01;

        z3 = 1;

        goto label02;

     label01:
        z3 = 0;

     label02:
        $r15 = r0.<com.android.server.am.ProcessList$ImperceptibleKillRunner: com.android.server.am.ProcessList this$0>;

        r2 = $r15.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService>;

        entermonitor r2;

     label03:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r16 = r0.<com.android.server.am.ProcessList$ImperceptibleKillRunner: android.util.SparseArray mWorkItems>;

        i0 = virtualinvoke $r16.<android.util.SparseArray: int size()>();

     label04:
        i7 = i0 - 1;

     label05:
        $z4 = r0.<com.android.server.am.ProcessList$ImperceptibleKillRunner: boolean mIdle>;

        if $z4 == 0 goto label14;

     label06:
        if i7 < 0 goto label14;

     label07:
        $r8 = r0.<com.android.server.am.ProcessList$ImperceptibleKillRunner: android.util.SparseArray mWorkItems>;

        $r9 = virtualinvoke $r8.<android.util.SparseArray: java.lang.Object valueAt(int)>(i7);

        r17 = (java.util.List) $r9;

        $i1 = interfaceinvoke r17.<java.util.List: int size()>();

        i8 = $i1 - 1;

     label08:
        $z0 = r0.<com.android.server.am.ProcessList$ImperceptibleKillRunner: boolean mIdle>;

        if $z0 == 0 goto label12;

     label09:
        if i8 < 0 goto label12;

     label10:
        $r11 = interfaceinvoke r17.<java.util.List: java.lang.Object get(int)>(i8);

        r3 = (android.os.Bundle) $r11;

        $i3 = virtualinvoke r3.<android.os.Bundle: int getInt(java.lang.String)>("pid");

        $i4 = virtualinvoke r3.<android.os.Bundle: int getInt(java.lang.String)>("uid");

        $l5 = virtualinvoke r3.<android.os.Bundle: long getLong(java.lang.String)>("timestamp");

        $r12 = virtualinvoke r3.<android.os.Bundle: java.lang.String getString(java.lang.String)>("reason");

        $i6 = virtualinvoke r3.<android.os.Bundle: int getInt(java.lang.String)>("requester");

        $z1 = specialinvoke r0.<com.android.server.am.ProcessList$ImperceptibleKillRunner: boolean killProcessLocked(int,int,long,java.lang.String,int,android.os.DropBoxManager,boolean)>($i3, $i4, $l5, $r12, $i6, r1, z3);

        if $z1 == 0 goto label11;

        interfaceinvoke r17.<java.util.List: java.lang.Object remove(int)>(i8);

     label11:
        i8 = i8 + -1;

        goto label08;

     label12:
        $i2 = interfaceinvoke r17.<java.util.List: int size()>();

        if $i2 != 0 goto label13;

        $r10 = r0.<com.android.server.am.ProcessList$ImperceptibleKillRunner: android.util.SparseArray mWorkItems>;

        virtualinvoke $r10.<android.util.SparseArray: void removeAt(int)>(i7);

     label13:
        i7 = i7 + -1;

        goto label05;

     label14:
        specialinvoke r0.<com.android.server.am.ProcessList$ImperceptibleKillRunner: void registerUidObserverIfNecessaryLocked()>();

        exitmonitor r2;

     label15:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label16:
        $r14 := @caughtexception;

     label17:
        exitmonitor r2;

     label18:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r14;

        catch java.lang.Throwable from label03 to label04 with label16;
        catch java.lang.Throwable from label05 to label06 with label16;
        catch java.lang.Throwable from label07 to label08 with label16;
        catch java.lang.Throwable from label08 to label09 with label16;
        catch java.lang.Throwable from label10 to label11 with label16;
        catch java.lang.Throwable from label12 to label13 with label16;
        catch java.lang.Throwable from label14 to label15 with label16;
        catch java.lang.Throwable from label17 to label18 with label16;
    }

    private void handleUidGone(int)
    {
        com.android.server.am.ProcessList$ImperceptibleKillRunner r0;
        int i0;
        com.android.server.am.ActivityManagerService r1;
        com.android.server.am.ProcessList $r3;
        android.util.SparseArray $r4;
        java.lang.Throwable $r5;

        r0 := @this: com.android.server.am.ProcessList$ImperceptibleKillRunner;

        i0 := @parameter0: int;

        $r3 = r0.<com.android.server.am.ProcessList$ImperceptibleKillRunner: com.android.server.am.ProcessList this$0>;

        r1 = $r3.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r4 = r0.<com.android.server.am.ProcessList$ImperceptibleKillRunner: android.util.SparseArray mWorkItems>;

        virtualinvoke $r4.<android.util.SparseArray: void remove(int)>(i0);

        specialinvoke r0.<com.android.server.am.ProcessList$ImperceptibleKillRunner: void registerUidObserverIfNecessaryLocked()>();

        exitmonitor r1;

     label2:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private void handleUidStateChanged(int, int)
    {
        com.android.server.am.ProcessList$ImperceptibleKillRunner r0;
        int i0, $i1, $i2, $i3, $i4, $i6, i7, i8;
        android.os.DropBoxManager r1;
        com.android.server.am.ActivityManagerService r2, $r5, $r9;
        android.os.Bundle r3;
        com.android.server.am.ProcessList $r4, $r8, $r20;
        android.content.Context $r6;
        java.lang.Object $r7, $r14, $r16;
        com.android.server.am.ActivityManagerConstants $r10;
        android.util.ArraySet $r11;
        java.lang.Integer $r12;
        boolean $z0, $z1, $z2, $z3, z4, $z5;
        android.util.SparseArray $r13, $r15;
        long $l5;
        java.lang.String $r17;
        java.lang.Throwable $r19;
        java.util.List r21;

        r0 := @this: com.android.server.am.ProcessList$ImperceptibleKillRunner;

        i0 := @parameter0: int;

        i7 := @parameter1: int;

        $r4 = r0.<com.android.server.am.ProcessList$ImperceptibleKillRunner: com.android.server.am.ProcessList this$0>;

        $r5 = $r4.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService>;

        $r6 = $r5.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r7 = virtualinvoke $r6.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/os/DropBoxManager;");

        r1 = (android.os.DropBoxManager) $r7;

        if r1 == null goto label01;

        $z3 = virtualinvoke r1.<android.os.DropBoxManager: boolean isTagEnabled(java.lang.String)>("imperceptible_app_kill");

        if $z3 == 0 goto label01;

        z4 = 1;

        goto label02;

     label01:
        z4 = 0;

     label02:
        $r20 = r0.<com.android.server.am.ProcessList$ImperceptibleKillRunner: com.android.server.am.ProcessList this$0>;

        r2 = $r20.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService>;

        entermonitor r2;

     label03:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $z5 = r0.<com.android.server.am.ProcessList$ImperceptibleKillRunner: boolean mIdle>;

        if $z5 == 0 goto label12;

        $r8 = r0.<com.android.server.am.ProcessList$ImperceptibleKillRunner: com.android.server.am.ProcessList this$0>;

        $r9 = $r8.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService>;

        $r10 = $r9.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerConstants mConstants>;

        $r11 = $r10.<com.android.server.am.ActivityManagerConstants: android.util.ArraySet IMPERCEPTIBLE_KILL_EXEMPT_PROC_STATES>;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i7);

        $z0 = virtualinvoke $r11.<android.util.ArraySet: boolean contains(java.lang.Object)>($r12);

        if $z0 != 0 goto label12;

        $r13 = r0.<com.android.server.am.ProcessList$ImperceptibleKillRunner: android.util.SparseArray mWorkItems>;

        $r14 = virtualinvoke $r13.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r21 = (java.util.List) $r14;

     label04:
        if r21 == null goto label12;

     label05:
        $i1 = interfaceinvoke r21.<java.util.List: int size()>();

        i8 = $i1 - 1;

     label06:
        $z1 = r0.<com.android.server.am.ProcessList$ImperceptibleKillRunner: boolean mIdle>;

        if $z1 == 0 goto label10;

     label07:
        if i8 < 0 goto label10;

     label08:
        $r16 = interfaceinvoke r21.<java.util.List: java.lang.Object get(int)>(i8);

        r3 = (android.os.Bundle) $r16;

        $i3 = virtualinvoke r3.<android.os.Bundle: int getInt(java.lang.String)>("pid");

        $i4 = virtualinvoke r3.<android.os.Bundle: int getInt(java.lang.String)>("uid");

        $l5 = virtualinvoke r3.<android.os.Bundle: long getLong(java.lang.String)>("timestamp");

        $r17 = virtualinvoke r3.<android.os.Bundle: java.lang.String getString(java.lang.String)>("reason");

        $i6 = virtualinvoke r3.<android.os.Bundle: int getInt(java.lang.String)>("requester");

        $z2 = specialinvoke r0.<com.android.server.am.ProcessList$ImperceptibleKillRunner: boolean killProcessLocked(int,int,long,java.lang.String,int,android.os.DropBoxManager,boolean)>($i3, $i4, $l5, $r17, $i6, r1, z4);

        if $z2 == 0 goto label09;

        interfaceinvoke r21.<java.util.List: java.lang.Object remove(int)>(i8);

     label09:
        i8 = i8 + -1;

        goto label06;

     label10:
        $i2 = interfaceinvoke r21.<java.util.List: int size()>();

        if $i2 != 0 goto label11;

        $r15 = r0.<com.android.server.am.ProcessList$ImperceptibleKillRunner: android.util.SparseArray mWorkItems>;

        virtualinvoke $r15.<android.util.SparseArray: void remove(int)>(i0);

     label11:
        specialinvoke r0.<com.android.server.am.ProcessList$ImperceptibleKillRunner: void registerUidObserverIfNecessaryLocked()>();

     label12:
        exitmonitor r2;

     label13:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label14:
        $r19 := @caughtexception;

     label15:
        exitmonitor r2;

     label16:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r19;

        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.Throwable from label05 to label06 with label14;
        catch java.lang.Throwable from label06 to label07 with label14;
        catch java.lang.Throwable from label08 to label09 with label14;
        catch java.lang.Throwable from label10 to label11 with label14;
        catch java.lang.Throwable from label11 to label12 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label15 to label16 with label14;
    }

    private boolean killProcessLocked(int, int, long, java.lang.String, int, android.os.DropBoxManager, boolean)
    {
        com.android.server.am.ProcessList$ImperceptibleKillRunner r0;
        long l0, $l4, $l9;
        int i1, $i2, $i3, $i6, $i8, i10, i11, i12, i13;
        android.os.DropBoxManager r1;
        boolean z0, $z1, $z2, $z3;
        com.android.server.am.ProcessList $r2, $r4, $r8, $r14, $r34;
        com.android.server.am.ActivityManagerService $r3, $r5, $r9, $r16, $r35;
        com.android.server.am.ActivityManagerService$PidMap $r6, r43;
        byte $b5;
        com.android.server.am.ProcessRecord$PackageList $r7, $r37;
        com.android.server.am.ActivityManagerConstants $r10, $r36;
        android.util.ArraySet $r11, $r38;
        java.lang.Integer $r12;
        java.lang.StringBuilder $r13, $r17, $r23;
        java.lang.String $r15, $r20, $r26, $r29, $r31, $r39, r42;
        com.android.internal.app.ProcessMap $r30;
        java.lang.Long $r32;
        java.lang.Throwable $r40, $r41, r48;
        com.android.server.am.ProcessRecord r44;

        r0 := @this: com.android.server.am.ProcessList$ImperceptibleKillRunner;

        i10 := @parameter0: int;

        i11 := @parameter1: int;

        l0 := @parameter2: long;

        r42 := @parameter3: java.lang.String;

        i1 := @parameter4: int;

        r1 := @parameter5: android.os.DropBoxManager;

        z0 := @parameter6: boolean;

        $r2 = r0.<com.android.server.am.ProcessList$ImperceptibleKillRunner: com.android.server.am.ProcessList this$0>;

        $r3 = $r2.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService>;

        r43 = $r3.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        entermonitor r43;

     label01:
        $r4 = r0.<com.android.server.am.ProcessList$ImperceptibleKillRunner: com.android.server.am.ProcessList this$0>;

        $r5 = $r4.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService>;

        $r6 = $r5.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        r44 = virtualinvoke $r6.<com.android.server.am.ActivityManagerService$PidMap: com.android.server.am.ProcessRecord get(int)>(i10);

        exitmonitor r43;

     label02:
        if r44 == null goto label10;

        $i2 = r44.<com.android.server.am.ProcessRecord: int pid>;

        if $i2 != i10 goto label10;

        $i3 = r44.<com.android.server.am.ProcessRecord: int uid>;

        if $i3 != i11 goto label10;

        $l4 = r44.<com.android.server.am.ProcessRecord: long startTime>;

        $b5 = $l4 cmp l0;

        if $b5 == 0 goto label03;

        goto label10;

     label03:
        $r7 = r44.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        i12 = virtualinvoke $r7.<com.android.server.am.ProcessRecord$PackageList: int size()>();

        i13 = 0;

     label04:
        if i13 >= i12 goto label06;

        $r34 = r0.<com.android.server.am.ProcessList$ImperceptibleKillRunner: com.android.server.am.ProcessList this$0>;

        $r35 = $r34.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService>;

        $r36 = $r35.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerConstants mConstants>;

        $r38 = $r36.<com.android.server.am.ActivityManagerConstants: android.util.ArraySet IMPERCEPTIBLE_KILL_EXEMPT_PACKAGES>;

        $r37 = r44.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        $r39 = virtualinvoke $r37.<com.android.server.am.ProcessRecord$PackageList: java.lang.String keyAt(int)>(i13);

        $z3 = virtualinvoke $r38.<android.util.ArraySet: boolean contains(java.lang.Object)>($r39);

        if $z3 == 0 goto label05;

        return 1;

     label05:
        i13 = i13 + 1;

        goto label04;

     label06:
        $r8 = r0.<com.android.server.am.ProcessList$ImperceptibleKillRunner: com.android.server.am.ProcessList this$0>;

        $r9 = $r8.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService>;

        $r10 = $r9.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerConstants mConstants>;

        $r11 = $r10.<com.android.server.am.ActivityManagerConstants: android.util.ArraySet IMPERCEPTIBLE_KILL_EXEMPT_PROC_STATES>;

        $i6 = virtualinvoke r44.<com.android.server.am.ProcessRecord: int getReportedProcState()>();

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        $z1 = virtualinvoke $r11.<android.util.ArraySet: boolean contains(java.lang.Object)>($r12);

        if $z1 == 0 goto label07;

        return 0;

     label07:
        virtualinvoke r44.<com.android.server.am.ProcessRecord: void kill(java.lang.String,int,int,boolean)>(r42, 13, 15, 1);

        $z2 = r44.<com.android.server.am.ProcessRecord: boolean isolated>;

        if $z2 != 0 goto label08;

        $r30 = r0.<com.android.server.am.ProcessList$ImperceptibleKillRunner: com.android.internal.app.ProcessMap mLastProcessKillTimes>;

        $r31 = r44.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $i8 = r44.<com.android.server.am.ProcessRecord: int uid>;

        $l9 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r32 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l9);

        virtualinvoke $r30.<com.android.internal.app.ProcessMap: java.lang.Object put(java.lang.String,int,java.lang.Object)>($r31, $i8, $r32);

     label08:
        if z0 == 0 goto label09;

        staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = r0.<com.android.server.am.ProcessList$ImperceptibleKillRunner: com.android.server.am.ProcessList this$0>;

        $r16 = $r14.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService>;

        $r15 = r44.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        virtualinvoke $r16.<com.android.server.am.ActivityManagerService: void appendDropBoxProcessHeaders(com.android.server.am.ProcessRecord,java.lang.String,java.lang.StringBuilder)>(r44, $r15, $r13);

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Reason: ");

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r42);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requester UID: ");

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r29 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<android.os.DropBoxManager: void addText(java.lang.String,java.lang.String)>("imperceptible_app_kill", $r29);

        goto label09;

     label09:
        return 1;

     label10:
        return 1;

     label11:
        $r41 := @caughtexception;

        r48 = $r41;

     label12:
        exitmonitor r43;

     label13:
        throw r48;

     label14:
        $r40 := @caughtexception;

        r48 = $r40;

        goto label12;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label12 to label13 with label14;
    }

    private void registerUidObserverIfNecessaryLocked()
    {
        com.android.server.am.ProcessList$ImperceptibleKillRunner r0;
        boolean $z0, $z1;
        android.util.SparseArray $r1, $r4;
        int $i0, $i1;
        com.android.server.am.ProcessList $r2, $r5;
        com.android.server.am.ActivityManagerService $r3, $r6;

        r0 := @this: com.android.server.am.ProcessList$ImperceptibleKillRunner;

        $z0 = r0.<com.android.server.am.ProcessList$ImperceptibleKillRunner: boolean mUidObserverEnabled>;

        if $z0 != 0 goto label1;

        $r4 = r0.<com.android.server.am.ProcessList$ImperceptibleKillRunner: android.util.SparseArray mWorkItems>;

        $i1 = virtualinvoke $r4.<android.util.SparseArray: int size()>();

        if $i1 <= 0 goto label1;

        r0.<com.android.server.am.ProcessList$ImperceptibleKillRunner: boolean mUidObserverEnabled> = 1;

        $r5 = r0.<com.android.server.am.ProcessList$ImperceptibleKillRunner: com.android.server.am.ProcessList this$0>;

        $r6 = $r5.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService>;

        virtualinvoke $r6.<com.android.server.am.ActivityManagerService: void registerUidObserver(android.app.IUidObserver,int,int,java.lang.String)>(r0, 3, -1, "android");

        goto label2;

     label1:
        $z1 = r0.<com.android.server.am.ProcessList$ImperceptibleKillRunner: boolean mUidObserverEnabled>;

        if $z1 == 0 goto label2;

        $r1 = r0.<com.android.server.am.ProcessList$ImperceptibleKillRunner: android.util.SparseArray mWorkItems>;

        $i0 = virtualinvoke $r1.<android.util.SparseArray: int size()>();

        if $i0 != 0 goto label2;

        r0.<com.android.server.am.ProcessList$ImperceptibleKillRunner: boolean mUidObserverEnabled> = 0;

        $r2 = r0.<com.android.server.am.ProcessList$ImperceptibleKillRunner: com.android.server.am.ProcessList this$0>;

        $r3 = $r2.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService>;

        virtualinvoke $r3.<com.android.server.am.ActivityManagerService: void unregisterUidObserver(android.app.IUidObserver)>(r0);

     label2:
        return;
    }

    boolean enqueueLocked(com.android.server.am.ProcessRecord, java.lang.String, int)
    {
        com.android.server.am.ProcessList$ImperceptibleKillRunner r0;
        int i0, $i1, $i2, $i3, $i5, $i6;
        boolean $z0;
        java.lang.String $r2, r19;
        com.android.internal.app.ProcessMap $r3;
        java.lang.Object $r4, $r7, r22;
        long $l4, $l7, $l8, $l9;
        android.util.SparseArray $r6, $r17;
        com.android.server.am.ProcessList$ImperceptibleKillRunner$IdlenessReceiver $r8, $r13, r26;
        com.android.server.am.ProcessList $r11;
        com.android.server.am.ActivityManagerService $r12;
        android.content.Context $r14;
        byte $b10;
        com.android.server.am.ProcessRecord r18;
        java.lang.Long r20;
        java.util.List r21, r28;
        android.os.Bundle r24;
        java.util.ArrayList r25;
        android.content.IntentFilter r27;

        r0 := @this: com.android.server.am.ProcessList$ImperceptibleKillRunner;

        r18 := @parameter0: com.android.server.am.ProcessRecord;

        r19 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $z0 = r18.<com.android.server.am.ProcessRecord: boolean isolated>;

        if $z0 == 0 goto label1;

        r20 = null;

        goto label2;

     label1:
        $r3 = r0.<com.android.server.am.ProcessList$ImperceptibleKillRunner: com.android.internal.app.ProcessMap mLastProcessKillTimes>;

        $r2 = r18.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $i1 = r18.<com.android.server.am.ProcessRecord: int uid>;

        $r4 = virtualinvoke $r3.<com.android.internal.app.ProcessMap: java.lang.Object get(java.lang.String,int)>($r2, $i1);

        r20 = (java.lang.Long) $r4;

     label2:
        if r20 == null goto label3;

        $l7 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l8 = virtualinvoke r20.<java.lang.Long: long longValue()>();

        $l9 = $l8 + 60000L;

        $b10 = $l7 cmp $l9;

        if $b10 >= 0 goto label3;

        return 0;

     label3:
        r24 = new android.os.Bundle;

        specialinvoke r24.<android.os.Bundle: void <init>()>();

        $i2 = r18.<com.android.server.am.ProcessRecord: int pid>;

        virtualinvoke r24.<android.os.Bundle: void putInt(java.lang.String,int)>("pid", $i2);

        $i3 = r18.<com.android.server.am.ProcessRecord: int uid>;

        virtualinvoke r24.<android.os.Bundle: void putInt(java.lang.String,int)>("uid", $i3);

        $l4 = r18.<com.android.server.am.ProcessRecord: long startTime>;

        virtualinvoke r24.<android.os.Bundle: void putLong(java.lang.String,long)>("timestamp", $l4);

        virtualinvoke r24.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("reason", r19);

        virtualinvoke r24.<android.os.Bundle: void putInt(java.lang.String,int)>("requester", i0);

        $r6 = r0.<com.android.server.am.ProcessList$ImperceptibleKillRunner: android.util.SparseArray mWorkItems>;

        $i5 = r18.<com.android.server.am.ProcessRecord: int uid>;

        $r7 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object get(int)>($i5);

        r21 = (java.util.List) $r7;

        r22 = r21;

        if r21 != null goto label4;

        r25 = new java.util.ArrayList;

        specialinvoke r25.<java.util.ArrayList: void <init>()>();

        r22 = r25;

        $r17 = r0.<com.android.server.am.ProcessList$ImperceptibleKillRunner: android.util.SparseArray mWorkItems>;

        $i6 = r18.<com.android.server.am.ProcessRecord: int uid>;

        virtualinvoke $r17.<android.util.SparseArray: void put(int,java.lang.Object)>($i6, r25);

     label4:
        r28 = (java.util.List) r22;

        interfaceinvoke r28.<java.util.List: boolean add(java.lang.Object)>(r24);

        $r8 = r0.<com.android.server.am.ProcessList$ImperceptibleKillRunner: com.android.server.am.ProcessList$ImperceptibleKillRunner$IdlenessReceiver mReceiver>;

        if $r8 != null goto label5;

        r26 = new com.android.server.am.ProcessList$ImperceptibleKillRunner$IdlenessReceiver;

        specialinvoke r26.<com.android.server.am.ProcessList$ImperceptibleKillRunner$IdlenessReceiver: void <init>(com.android.server.am.ProcessList$ImperceptibleKillRunner,com.android.server.am.ProcessList$1)>(r0, null);

        r0.<com.android.server.am.ProcessList$ImperceptibleKillRunner: com.android.server.am.ProcessList$ImperceptibleKillRunner$IdlenessReceiver mReceiver> = r26;

        r27 = new android.content.IntentFilter;

        specialinvoke r27.<android.content.IntentFilter: void <init>(java.lang.String)>("android.os.action.LIGHT_DEVICE_IDLE_MODE_CHANGED");

        virtualinvoke r27.<android.content.IntentFilter: void addAction(java.lang.String)>("android.os.action.DEVICE_IDLE_MODE_CHANGED");

        $r11 = r0.<com.android.server.am.ProcessList$ImperceptibleKillRunner: com.android.server.am.ProcessList this$0>;

        $r12 = $r11.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService>;

        $r14 = $r12.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r13 = r0.<com.android.server.am.ProcessList$ImperceptibleKillRunner: com.android.server.am.ProcessList$ImperceptibleKillRunner$IdlenessReceiver mReceiver>;

        virtualinvoke $r14.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r13, r27);

     label5:
        return 1;
    }

    void notifyDeviceIdleness(boolean)
    {
        com.android.server.am.ProcessList$ImperceptibleKillRunner r0;
        boolean z0, $z1, z3;
        android.util.SparseArray $r2;
        int $i0;
        android.os.Handler $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.am.ProcessList$ImperceptibleKillRunner;

        z0 := @parameter0: boolean;

        $z1 = r0.<com.android.server.am.ProcessList$ImperceptibleKillRunner: boolean mIdle>;

        if $z1 == z0 goto label1;

        z3 = 1;

        goto label2;

     label1:
        z3 = 0;

     label2:
        r0.<com.android.server.am.ProcessList$ImperceptibleKillRunner: boolean mIdle> = z0;

        if z3 == 0 goto label9;

        if z0 == 0 goto label9;

        entermonitor r0;

     label3:
        $r2 = r0.<com.android.server.am.ProcessList$ImperceptibleKillRunner: android.util.SparseArray mWorkItems>;

        $i0 = virtualinvoke $r2.<android.util.SparseArray: int size()>();

        if $i0 <= 0 goto label4;

        $r3 = r0.<com.android.server.am.ProcessList$ImperceptibleKillRunner: android.os.Handler mHandler>;

        virtualinvoke $r3.<android.os.Handler: boolean sendEmptyMessage(int)>(0);

     label4:
        exitmonitor r0;

     label5:
        goto label9;

     label6:
        $r4 := @caughtexception;

     label7:
        exitmonitor r0;

     label8:
        throw $r4;

     label9:
        return;

        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public void onUidActive(int)
    {
        com.android.server.am.ProcessList$ImperceptibleKillRunner r0;
        int i0;

        r0 := @this: com.android.server.am.ProcessList$ImperceptibleKillRunner;

        i0 := @parameter0: int;

        return;
    }

    public void onUidCachedChanged(int, boolean)
    {
        com.android.server.am.ProcessList$ImperceptibleKillRunner r0;
        int i0;
        boolean z0;

        r0 := @this: com.android.server.am.ProcessList$ImperceptibleKillRunner;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        return;
    }

    public void onUidGone(int, boolean)
    {
        com.android.server.am.ProcessList$ImperceptibleKillRunner r0;
        int i0;
        boolean z0;
        android.os.Handler $r1;
        android.os.Message $r2;

        r0 := @this: com.android.server.am.ProcessList$ImperceptibleKillRunner;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r1 = r0.<com.android.server.am.ProcessList$ImperceptibleKillRunner: android.os.Handler mHandler>;

        $r2 = virtualinvoke $r1.<android.os.Handler: android.os.Message obtainMessage(int,int,int)>(1, i0, 0);

        virtualinvoke $r2.<android.os.Message: void sendToTarget()>();

        return;
    }

    public void onUidIdle(int, boolean)
    {
        com.android.server.am.ProcessList$ImperceptibleKillRunner r0;
        int i0;
        boolean z0;

        r0 := @this: com.android.server.am.ProcessList$ImperceptibleKillRunner;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        return;
    }

    public void onUidStateChanged(int, int, long, int)
    {
        com.android.server.am.ProcessList$ImperceptibleKillRunner r0;
        int i0, i1, i3;
        long l2;
        android.os.Handler $r1;
        android.os.Message $r2;

        r0 := @this: com.android.server.am.ProcessList$ImperceptibleKillRunner;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        l2 := @parameter2: long;

        i3 := @parameter3: int;

        $r1 = r0.<com.android.server.am.ProcessList$ImperceptibleKillRunner: android.os.Handler mHandler>;

        $r2 = virtualinvoke $r1.<android.os.Handler: android.os.Message obtainMessage(int,int,int)>(2, i0, i1);

        virtualinvoke $r2.<android.os.Message: void sendToTarget()>();

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.am.ProcessList$ImperceptibleKillRunner: java.lang.String EXTRA_UID> = "uid";

        <com.android.server.am.ProcessList$ImperceptibleKillRunner: java.lang.String EXTRA_TIMESTAMP> = "timestamp";

        <com.android.server.am.ProcessList$ImperceptibleKillRunner: java.lang.String EXTRA_REQUESTER> = "requester";

        <com.android.server.am.ProcessList$ImperceptibleKillRunner: java.lang.String EXTRA_REASON> = "reason";

        <com.android.server.am.ProcessList$ImperceptibleKillRunner: java.lang.String EXTRA_PID> = "pid";

        <com.android.server.am.ProcessList$ImperceptibleKillRunner: java.lang.String DROPBOX_TAG_IMPERCEPTIBLE_KILL> = "imperceptible_app_kill";

        return;
    }
}
