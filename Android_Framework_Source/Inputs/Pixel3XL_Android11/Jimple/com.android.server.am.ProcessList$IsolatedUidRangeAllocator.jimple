final class com.android.server.am.ProcessList$IsolatedUidRangeAllocator extends java.lang.Object
{
    private final com.android.internal.app.ProcessMap mAppRanges;
    private final java.util.BitSet mAvailableUidRanges;
    private final int mFirstUid;
    private final int mNumUidRanges;
    private final int mNumUidsPerRange;
    final com.android.server.am.ProcessList this$0;

    void <init>(com.android.server.am.ProcessList, int, int, int)
    {
        com.android.server.am.ProcessList$IsolatedUidRangeAllocator r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7;
        com.android.internal.app.ProcessMap $r1;
        java.util.BitSet $r2;
        com.android.server.am.ProcessList r3;

        r0 := @this: com.android.server.am.ProcessList$IsolatedUidRangeAllocator;

        r3 := @parameter0: com.android.server.am.ProcessList;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r0.<com.android.server.am.ProcessList$IsolatedUidRangeAllocator: com.android.server.am.ProcessList this$0> = r3;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new com.android.internal.app.ProcessMap;

        specialinvoke $r1.<com.android.internal.app.ProcessMap: void <init>()>();

        r0.<com.android.server.am.ProcessList$IsolatedUidRangeAllocator: com.android.internal.app.ProcessMap mAppRanges> = $r1;

        r0.<com.android.server.am.ProcessList$IsolatedUidRangeAllocator: int mFirstUid> = i0;

        r0.<com.android.server.am.ProcessList$IsolatedUidRangeAllocator: int mNumUidsPerRange> = i2;

        $i3 = i1 - i0;

        $i4 = $i3 + 1;

        $i5 = $i4 / i2;

        r0.<com.android.server.am.ProcessList$IsolatedUidRangeAllocator: int mNumUidRanges> = $i5;

        $r2 = new java.util.BitSet;

        $i6 = r0.<com.android.server.am.ProcessList$IsolatedUidRangeAllocator: int mNumUidRanges>;

        specialinvoke $r2.<java.util.BitSet: void <init>(int)>($i6);

        r0.<com.android.server.am.ProcessList$IsolatedUidRangeAllocator: java.util.BitSet mAvailableUidRanges> = $r2;

        $i7 = r0.<com.android.server.am.ProcessList$IsolatedUidRangeAllocator: int mNumUidRanges>;

        virtualinvoke $r2.<java.util.BitSet: void set(int,int)>(0, $i7);

        return;
    }

    void freeUidRangeLocked(android.content.pm.ApplicationInfo)
    {
        com.android.server.am.ProcessList$IsolatedUidRangeAllocator r0;
        android.content.pm.ApplicationInfo r1;
        com.android.server.am.ProcessList$IsolatedUidRange r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.String $r3, $r7;
        com.android.internal.app.ProcessMap $r4, $r8;
        java.lang.Object $r5;
        java.util.BitSet $r6;

        r0 := @this: com.android.server.am.ProcessList$IsolatedUidRangeAllocator;

        r1 := @parameter0: android.content.pm.ApplicationInfo;

        $r4 = r0.<com.android.server.am.ProcessList$IsolatedUidRangeAllocator: com.android.internal.app.ProcessMap mAppRanges>;

        $r3 = r1.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        $i1 = r1.<android.content.pm.ApplicationInfo: int uid>;

        $r5 = virtualinvoke $r4.<com.android.internal.app.ProcessMap: java.lang.Object get(java.lang.String,int)>($r3, $i1);

        r2 = (com.android.server.am.ProcessList$IsolatedUidRange) $r5;

        if r2 == null goto label1;

        $i3 = r2.<com.android.server.am.ProcessList$IsolatedUidRange: int mFirstUid>;

        $i2 = r0.<com.android.server.am.ProcessList$IsolatedUidRangeAllocator: int mFirstUid>;

        $i5 = $i3 - $i2;

        $i4 = r0.<com.android.server.am.ProcessList$IsolatedUidRangeAllocator: int mNumUidsPerRange>;

        i0 = $i5 / $i4;

        $r6 = r0.<com.android.server.am.ProcessList$IsolatedUidRangeAllocator: java.util.BitSet mAvailableUidRanges>;

        virtualinvoke $r6.<java.util.BitSet: void set(int)>(i0);

        $r8 = r0.<com.android.server.am.ProcessList$IsolatedUidRangeAllocator: com.android.internal.app.ProcessMap mAppRanges>;

        $r7 = r1.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        $i6 = r1.<android.content.pm.ApplicationInfo: int uid>;

        virtualinvoke $r8.<com.android.internal.app.ProcessMap: java.lang.Object remove(java.lang.String,int)>($r7, $i6);

     label1:
        return;
    }

    com.android.server.am.ProcessList$IsolatedUidRange getIsolatedUidRangeLocked(java.lang.String, int)
    {
        com.android.server.am.ProcessList$IsolatedUidRangeAllocator r0;
        java.lang.String r1;
        int i0;
        com.android.internal.app.ProcessMap $r2;
        java.lang.Object $r3;
        com.android.server.am.ProcessList$IsolatedUidRange $r4;

        r0 := @this: com.android.server.am.ProcessList$IsolatedUidRangeAllocator;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.am.ProcessList$IsolatedUidRangeAllocator: com.android.internal.app.ProcessMap mAppRanges>;

        $r3 = virtualinvoke $r2.<com.android.internal.app.ProcessMap: java.lang.Object get(java.lang.String,int)>(r1, i0);

        $r4 = (com.android.server.am.ProcessList$IsolatedUidRange) $r3;

        return $r4;
    }

    com.android.server.am.ProcessList$IsolatedUidRange getOrCreateIsolatedUidRangeLocked(java.lang.String, int)
    {
        com.android.server.am.ProcessList$IsolatedUidRangeAllocator r0;
        java.lang.String r1;
        int i0, i1, i2, $i3, $i4, $i5, i6, i7;
        com.android.server.am.ProcessList$IsolatedUidRange r2, $r5, r9;
        java.util.BitSet $r3, $r4;
        com.android.server.am.ProcessList $r6;
        com.android.internal.app.ProcessMap $r7;

        r0 := @this: com.android.server.am.ProcessList$IsolatedUidRangeAllocator;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 = virtualinvoke r0.<com.android.server.am.ProcessList$IsolatedUidRangeAllocator: com.android.server.am.ProcessList$IsolatedUidRange getIsolatedUidRangeLocked(java.lang.String,int)>(r1, i0);

        r9 = r2;

        if r2 != null goto label2;

        $r3 = r0.<com.android.server.am.ProcessList$IsolatedUidRangeAllocator: java.util.BitSet mAvailableUidRanges>;

        i1 = virtualinvoke $r3.<java.util.BitSet: int nextSetBit(int)>(0);

        if i1 >= 0 goto label1;

        return null;

     label1:
        $r4 = r0.<com.android.server.am.ProcessList$IsolatedUidRangeAllocator: java.util.BitSet mAvailableUidRanges>;

        virtualinvoke $r4.<java.util.BitSet: void clear(int)>(i1);

        i6 = r0.<com.android.server.am.ProcessList$IsolatedUidRangeAllocator: int mFirstUid>;

        i2 = r0.<com.android.server.am.ProcessList$IsolatedUidRangeAllocator: int mNumUidsPerRange>;

        $i3 = i1 * i2;

        i7 = i6 + $i3;

        $r5 = new com.android.server.am.ProcessList$IsolatedUidRange;

        $r6 = r0.<com.android.server.am.ProcessList$IsolatedUidRangeAllocator: com.android.server.am.ProcessList this$0>;

        $i4 = i2 + i7;

        $i5 = $i4 - 1;

        specialinvoke $r5.<com.android.server.am.ProcessList$IsolatedUidRange: void <init>(com.android.server.am.ProcessList,int,int)>($r6, i7, $i5);

        r9 = $r5;

        $r7 = r0.<com.android.server.am.ProcessList$IsolatedUidRangeAllocator: com.android.internal.app.ProcessMap mAppRanges>;

        virtualinvoke $r7.<com.android.internal.app.ProcessMap: java.lang.Object put(java.lang.String,int,java.lang.Object)>(r1, i0, $r5);

     label2:
        return r9;
    }
}
