public final class com.android.server.am.ProcessList extends java.lang.Object
{
    static final java.lang.String ANDROID_APP_DATA_ISOLATION_ENABLED_PROPERTY;
    static final java.lang.String ANDROID_FUSE_ENABLED;
    static final java.lang.String ANDROID_VOLD_APP_DATA_ISOLATION_ENABLED_PROPERTY;
    private static final long APP_DATA_DIRECTORY_ISOLATION;
    static final int BACKUP_APP_ADJ;
    static final int CACHED_APP_IMPORTANCE_LEVELS;
    static final int CACHED_APP_LMK_FIRST_ADJ;
    static final int CACHED_APP_MAX_ADJ;
    static final int CACHED_APP_MIN_ADJ;
    static final int FOREGROUND_APP_ADJ;
    private static final long GWP_ASAN;
    static final int HEAVY_WEIGHT_APP_ADJ;
    static final int HOME_APP_ADJ;
    static final int INVALID_ADJ;
    private static final long LMKD_RECONNECT_DELAY_MS;
    static final int LMK_ASYNC_EVENT_KILL;
    static final byte LMK_GETKILLCNT;
    static final byte LMK_PROCKILL;
    static final byte LMK_PROCPRIO;
    static final byte LMK_PROCPURGE;
    static final byte LMK_PROCREMOVE;
    static final byte LMK_SUBSCRIBE;
    static final byte LMK_TARGET;
    static final long MAX_EMPTY_TIME;
    private static final int MAX_ZYGOTE_UNSOLICITED_MESSAGE_SIZE;
    static final int MIN_CACHED_APPS;
    static final int MIN_CRASH_INTERVAL;
    static final int NATIVE_ADJ;
    private static final long NATIVE_HEAP_POINTER_TAGGING;
    static final int NETWORK_STATE_BLOCK;
    static final int NETWORK_STATE_NO_CHANGE;
    static final int NETWORK_STATE_UNBLOCK;
    static final int PAGE_SIZE;
    static final int PERCEPTIBLE_APP_ADJ;
    static final int PERCEPTIBLE_LOW_APP_ADJ;
    static final int PERCEPTIBLE_RECENT_FOREGROUND_APP_ADJ;
    static final int PERSISTENT_PROC_ADJ;
    static final int PERSISTENT_SERVICE_ADJ;
    static final int PREVIOUS_APP_ADJ;
    private static final int PROC_KILL_TIMEOUT;
    public static final int PROC_MEM_CACHED;
    public static final int PROC_MEM_IMPORTANT;
    public static final int PROC_MEM_NUM;
    public static final int PROC_MEM_PERSISTENT;
    public static final int PROC_MEM_SERVICE;
    public static final int PROC_MEM_TOP;
    private static final java.lang.String PROPERTY_USE_APP_IMAGE_STARTUP_CACHE;
    public static final int PSS_ALL_INTERVAL;
    private static final int PSS_FIRST_ASLEEP_BACKGROUND_INTERVAL;
    private static final int PSS_FIRST_ASLEEP_CACHED_INTERVAL;
    private static final int PSS_FIRST_ASLEEP_PERSISTENT_INTERVAL;
    private static final int PSS_FIRST_ASLEEP_TOP_INTERVAL;
    private static final int PSS_FIRST_BACKGROUND_INTERVAL;
    private static final int PSS_FIRST_CACHED_INTERVAL;
    private static final int PSS_FIRST_PERSISTENT_INTERVAL;
    private static final int PSS_FIRST_TOP_INTERVAL;
    public static final int PSS_MAX_INTERVAL;
    public static final int PSS_MIN_TIME_FROM_STATE_CHANGE;
    public static final int PSS_SAFE_TIME_FROM_STATE_CHANGE;
    private static final int PSS_SAME_CACHED_INTERVAL;
    private static final int PSS_SAME_IMPORTANT_INTERVAL;
    private static final int PSS_SAME_PERSISTENT_INTERVAL;
    private static final int PSS_SAME_SERVICE_INTERVAL;
    private static final int PSS_SAME_TOP_INTERVAL;
    private static final int PSS_TEST_FIRST_BACKGROUND_INTERVAL;
    private static final int PSS_TEST_FIRST_TOP_INTERVAL;
    public static final int PSS_TEST_MIN_TIME_FROM_STATE_CHANGE;
    private static final int PSS_TEST_SAME_BACKGROUND_INTERVAL;
    private static final int PSS_TEST_SAME_IMPORTANT_INTERVAL;
    static final int SCHED_GROUP_BACKGROUND;
    static final int SCHED_GROUP_DEFAULT;
    static final int SCHED_GROUP_RESTRICTED;
    public static final int SCHED_GROUP_TOP_APP;
    static final int SCHED_GROUP_TOP_APP_BOUND;
    static final int SERVICE_ADJ;
    static final int SERVICE_B_ADJ;
    static final int SYSTEM_ADJ;
    static final java.lang.String TAG;
    static final int TRIM_CRITICAL_THRESHOLD;
    static final int TRIM_LOW_THRESHOLD;
    static final int UNKNOWN_ADJ;
    private static final java.lang.String UNSOL_ZYGOTE_MSG_SOCKET_PATH;
    static final int VISIBLE_APP_ADJ;
    static final int VISIBLE_APP_LAYER_MAX;
    private static final long[] sFirstAsleepPssTimes;
    private static final long[] sFirstAwakePssTimes;
    static com.android.server.am.ProcessList$KillHandler sKillHandler;
    static com.android.server.ServiceThread sKillThread;
    private static com.android.server.am.LmkdConnection sLmkdConnection;
    private static final int[] sProcStateToProcMem;
    private static final long[] sSameAsleepPssTimes;
    private static final long[] sSameAwakePssTimes;
    private static final long[] sTestFirstPssTimes;
    private static final long[] sTestSamePssTimes;
    com.android.server.am.ActiveUids mActiveUids;
    private boolean mAppDataIsolationEnabled;
    private java.util.ArrayList mAppDataIsolationWhitelistedApps;
    final com.android.server.am.AppExitInfoTracker mAppExitInfoTracker;
    com.android.server.am.ProcessList$IsolatedUidRangeAllocator mAppIsolatedUidRangeAllocator;
    final android.util.ArrayMap mAppZygoteProcesses;
    final com.android.internal.app.ProcessMap mAppZygotes;
    private long mCachedRestoreLevel;
    com.android.server.am.ProcessList$IsolatedUidRange mGlobalIsolatedUids;
    private boolean mHaveDisplaySize;
    com.android.server.am.ProcessList$ImperceptibleKillRunner mImperceptibleKillRunner;
    final android.util.SparseArray mIsolatedProcesses;
    int mLruProcessActivityStart;
    int mLruProcessServiceStart;
    final java.util.ArrayList mLruProcesses;
    int mLruSeq;
    private final int[] mOomAdj;
    private boolean mOomLevelsSet;
    private final int[] mOomMinFree;
    private final int[] mOomMinFreeHigh;
    private final int[] mOomMinFreeLow;
    final android.util.LongSparseArray mPendingStarts;
    private com.android.server.compat.PlatformCompat mPlatformCompat;
    private long mProcStartSeqCounter;
    long mProcStateSeqCounter;
    final com.android.server.am.ProcessList$MyProcessMap mProcessNames;
    final java.util.ArrayList mRemovedProcesses;
    com.android.server.am.ActivityManagerService mService;
    final java.lang.StringBuilder mStringBuilder;
    private android.net.LocalSocket mSystemServerSocketForZygote;
    private final long mTotalMemMb;
    private boolean mVoldAppDataIsolationEnabled;
    private final int[] mZygoteSigChldMessage;
    private final byte[] mZygoteUnsolicitedMessage;

    static void <clinit>()
    {
        int[] $r0;
        long[] $r1, $r2, $r3, $r4, $r5, $r6;

        <com.android.server.am.ProcessList: int VISIBLE_APP_LAYER_MAX> = 99;

        <com.android.server.am.ProcessList: int VISIBLE_APP_ADJ> = 100;

        <com.android.server.am.ProcessList: java.lang.String UNSOL_ZYGOTE_MSG_SOCKET_PATH> = "/data/system/unsolzygotesocket";

        <com.android.server.am.ProcessList: int UNKNOWN_ADJ> = 1001;

        <com.android.server.am.ProcessList: int TRIM_LOW_THRESHOLD> = 5;

        <com.android.server.am.ProcessList: int TRIM_CRITICAL_THRESHOLD> = 3;

        <com.android.server.am.ProcessList: java.lang.String TAG> = "ActivityManager";

        <com.android.server.am.ProcessList: int SYSTEM_ADJ> = -900;

        <com.android.server.am.ProcessList: int SERVICE_B_ADJ> = 800;

        <com.android.server.am.ProcessList: int SERVICE_ADJ> = 500;

        <com.android.server.am.ProcessList: int SCHED_GROUP_TOP_APP_BOUND> = 4;

        <com.android.server.am.ProcessList: int SCHED_GROUP_TOP_APP> = 3;

        <com.android.server.am.ProcessList: int SCHED_GROUP_RESTRICTED> = 1;

        <com.android.server.am.ProcessList: int SCHED_GROUP_DEFAULT> = 2;

        <com.android.server.am.ProcessList: int SCHED_GROUP_BACKGROUND> = 0;

        <com.android.server.am.ProcessList: int PSS_TEST_SAME_IMPORTANT_INTERVAL> = 10000;

        <com.android.server.am.ProcessList: int PSS_TEST_SAME_BACKGROUND_INTERVAL> = 15000;

        <com.android.server.am.ProcessList: int PSS_TEST_MIN_TIME_FROM_STATE_CHANGE> = 10000;

        <com.android.server.am.ProcessList: int PSS_TEST_FIRST_TOP_INTERVAL> = 3000;

        <com.android.server.am.ProcessList: int PSS_TEST_FIRST_BACKGROUND_INTERVAL> = 5000;

        <com.android.server.am.ProcessList: int PSS_SAME_TOP_INTERVAL> = 60000;

        <com.android.server.am.ProcessList: int PSS_SAME_SERVICE_INTERVAL> = 300000;

        <com.android.server.am.ProcessList: int PSS_SAME_PERSISTENT_INTERVAL> = 600000;

        <com.android.server.am.ProcessList: int PSS_SAME_IMPORTANT_INTERVAL> = 600000;

        <com.android.server.am.ProcessList: int PSS_SAME_CACHED_INTERVAL> = 600000;

        <com.android.server.am.ProcessList: int PSS_SAFE_TIME_FROM_STATE_CHANGE> = 1000;

        <com.android.server.am.ProcessList: int PSS_MIN_TIME_FROM_STATE_CHANGE> = 15000;

        <com.android.server.am.ProcessList: int PSS_MAX_INTERVAL> = 3600000;

        <com.android.server.am.ProcessList: int PSS_FIRST_TOP_INTERVAL> = 10000;

        <com.android.server.am.ProcessList: int PSS_FIRST_PERSISTENT_INTERVAL> = 30000;

        <com.android.server.am.ProcessList: int PSS_FIRST_CACHED_INTERVAL> = 20000;

        <com.android.server.am.ProcessList: int PSS_FIRST_BACKGROUND_INTERVAL> = 20000;

        <com.android.server.am.ProcessList: int PSS_FIRST_ASLEEP_TOP_INTERVAL> = 20000;

        <com.android.server.am.ProcessList: int PSS_FIRST_ASLEEP_PERSISTENT_INTERVAL> = 60000;

        <com.android.server.am.ProcessList: int PSS_FIRST_ASLEEP_CACHED_INTERVAL> = 60000;

        <com.android.server.am.ProcessList: int PSS_FIRST_ASLEEP_BACKGROUND_INTERVAL> = 30000;

        <com.android.server.am.ProcessList: int PSS_ALL_INTERVAL> = 1200000;

        <com.android.server.am.ProcessList: java.lang.String PROPERTY_USE_APP_IMAGE_STARTUP_CACHE> = "persist.device_config.runtime_native.use_app_image_startup_cache";

        <com.android.server.am.ProcessList: int PROC_MEM_TOP> = 1;

        <com.android.server.am.ProcessList: int PROC_MEM_SERVICE> = 3;

        <com.android.server.am.ProcessList: int PROC_MEM_PERSISTENT> = 0;

        <com.android.server.am.ProcessList: int PROC_MEM_NUM> = 5;

        <com.android.server.am.ProcessList: int PROC_MEM_IMPORTANT> = 2;

        <com.android.server.am.ProcessList: int PROC_MEM_CACHED> = 4;

        <com.android.server.am.ProcessList: int PROC_KILL_TIMEOUT> = 2000;

        <com.android.server.am.ProcessList: int PREVIOUS_APP_ADJ> = 700;

        <com.android.server.am.ProcessList: int PERSISTENT_SERVICE_ADJ> = -700;

        <com.android.server.am.ProcessList: int PERSISTENT_PROC_ADJ> = -800;

        <com.android.server.am.ProcessList: int PERCEPTIBLE_RECENT_FOREGROUND_APP_ADJ> = 50;

        <com.android.server.am.ProcessList: int PERCEPTIBLE_LOW_APP_ADJ> = 250;

        <com.android.server.am.ProcessList: int PERCEPTIBLE_APP_ADJ> = 200;

        <com.android.server.am.ProcessList: int PAGE_SIZE> = 4096;

        <com.android.server.am.ProcessList: int NETWORK_STATE_UNBLOCK> = 2;

        <com.android.server.am.ProcessList: int NETWORK_STATE_NO_CHANGE> = 0;

        <com.android.server.am.ProcessList: int NETWORK_STATE_BLOCK> = 1;

        <com.android.server.am.ProcessList: long NATIVE_HEAP_POINTER_TAGGING> = 135754954L;

        <com.android.server.am.ProcessList: int NATIVE_ADJ> = -1000;

        <com.android.server.am.ProcessList: int MIN_CRASH_INTERVAL> = 60000;

        <com.android.server.am.ProcessList: int MIN_CACHED_APPS> = 2;

        <com.android.server.am.ProcessList: int MAX_ZYGOTE_UNSOLICITED_MESSAGE_SIZE> = 16;

        <com.android.server.am.ProcessList: long MAX_EMPTY_TIME> = 1800000L;

        <com.android.server.am.ProcessList: byte LMK_TARGET> = 0;

        <com.android.server.am.ProcessList: byte LMK_SUBSCRIBE> = 5;

        <com.android.server.am.ProcessList: byte LMK_PROCREMOVE> = 2;

        <com.android.server.am.ProcessList: byte LMK_PROCPURGE> = 3;

        <com.android.server.am.ProcessList: byte LMK_PROCPRIO> = 1;

        <com.android.server.am.ProcessList: byte LMK_PROCKILL> = 6;

        <com.android.server.am.ProcessList: byte LMK_GETKILLCNT> = 4;

        <com.android.server.am.ProcessList: int LMK_ASYNC_EVENT_KILL> = 0;

        <com.android.server.am.ProcessList: long LMKD_RECONNECT_DELAY_MS> = 1000L;

        <com.android.server.am.ProcessList: int INVALID_ADJ> = -10000;

        <com.android.server.am.ProcessList: int HOME_APP_ADJ> = 600;

        <com.android.server.am.ProcessList: int HEAVY_WEIGHT_APP_ADJ> = 400;

        <com.android.server.am.ProcessList: long GWP_ASAN> = 135634846L;

        <com.android.server.am.ProcessList: int FOREGROUND_APP_ADJ> = 0;

        <com.android.server.am.ProcessList: int CACHED_APP_MIN_ADJ> = 900;

        <com.android.server.am.ProcessList: int CACHED_APP_MAX_ADJ> = 999;

        <com.android.server.am.ProcessList: int CACHED_APP_LMK_FIRST_ADJ> = 950;

        <com.android.server.am.ProcessList: int CACHED_APP_IMPORTANCE_LEVELS> = 5;

        <com.android.server.am.ProcessList: int BACKUP_APP_ADJ> = 300;

        <com.android.server.am.ProcessList: long APP_DATA_DIRECTORY_ISOLATION> = 143937733L;

        <com.android.server.am.ProcessList: java.lang.String ANDROID_VOLD_APP_DATA_ISOLATION_ENABLED_PROPERTY> = "persist.sys.vold_app_data_isolation_enabled";

        <com.android.server.am.ProcessList: java.lang.String ANDROID_FUSE_ENABLED> = "persist.sys.fuse";

        <com.android.server.am.ProcessList: java.lang.String ANDROID_APP_DATA_ISOLATION_ENABLED_PROPERTY> = "persist.zygote.app_data_isolation";

        <com.android.server.am.ProcessList: com.android.server.am.ProcessList$KillHandler sKillHandler> = null;

        <com.android.server.am.ProcessList: com.android.server.ServiceThread sKillThread> = null;

        <com.android.server.am.ProcessList: com.android.server.am.LmkdConnection sLmkdConnection> = null;

        $r0 = newarray (int)[20];

        $r0[0] = 0;

        $r0[1] = 0;

        $r0[2] = 1;

        $r0[3] = 2;

        $r0[4] = 1;

        $r0[5] = 2;

        $r0[6] = 2;

        $r0[7] = 2;

        $r0[8] = 2;

        $r0[9] = 2;

        $r0[10] = 3;

        $r0[11] = 4;

        $r0[12] = 1;

        $r0[13] = 2;

        $r0[14] = 4;

        $r0[15] = 4;

        $r0[16] = 4;

        $r0[17] = 4;

        $r0[18] = 4;

        $r0[19] = 4;

        <com.android.server.am.ProcessList: int[] sProcStateToProcMem> = $r0;

        $r1 = newarray (long)[5];

        $r1[0] = 30000L;

        $r1[1] = 10000L;

        $r1[2] = 20000L;

        $r1[3] = 20000L;

        $r1[4] = 20000L;

        <com.android.server.am.ProcessList: long[] sFirstAwakePssTimes> = $r1;

        $r2 = newarray (long)[5];

        $r2[0] = 600000L;

        $r2[1] = 60000L;

        $r2[2] = 600000L;

        $r2[3] = 300000L;

        $r2[4] = 600000L;

        <com.android.server.am.ProcessList: long[] sSameAwakePssTimes> = $r2;

        $r3 = newarray (long)[5];

        $r3[0] = 60000L;

        $r3[1] = 20000L;

        $r3[2] = 30000L;

        $r3[3] = 30000L;

        $r3[4] = 60000L;

        <com.android.server.am.ProcessList: long[] sFirstAsleepPssTimes> = $r3;

        $r4 = newarray (long)[5];

        $r4[0] = 600000L;

        $r4[1] = 60000L;

        $r4[2] = 600000L;

        $r4[3] = 300000L;

        $r4[4] = 600000L;

        <com.android.server.am.ProcessList: long[] sSameAsleepPssTimes> = $r4;

        $r5 = newarray (long)[5];

        $r5[0] = 3000L;

        $r5[1] = 3000L;

        $r5[2] = 5000L;

        $r5[3] = 5000L;

        $r5[4] = 5000L;

        <com.android.server.am.ProcessList: long[] sTestFirstPssTimes> = $r5;

        $r6 = newarray (long)[5];

        $r6[0] = 15000L;

        $r6[1] = 10000L;

        $r6[2] = 10000L;

        $r6[3] = 15000L;

        $r6[4] = 15000L;

        <com.android.server.am.ProcessList: long[] sTestSamePssTimes> = $r6;

        return;
    }

    void <init>()
    {
        com.android.server.am.ProcessList r0;
        int[] $r1, $r2, $r3, $r12, r18;
        int $i0;
        java.lang.StringBuilder $r4;
        android.util.LongSparseArray $r5;
        java.util.ArrayList $r6, $r15;
        android.util.SparseArray $r7;
        com.android.internal.app.ProcessMap $r8;
        com.android.server.am.AppExitInfoTracker $r9;
        android.util.ArrayMap $r10;
        byte[] $r11;
        com.android.server.am.ProcessList$IsolatedUidRange $r13;
        com.android.server.am.ProcessList$IsolatedUidRangeAllocator $r14;
        com.android.server.am.ProcessList$MyProcessMap $r16;
        com.android.internal.util.MemInfoReader $r17;
        long $l1, $l2;

        r0 := @this: com.android.server.am.ProcessList;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService> = null;

        r18 = newarray (int)[6];

        r18[0] = 0;

        r18[1] = 100;

        r18[2] = 200;

        r18[3] = 250;

        r18[4] = 900;

        r18[5] = 950;

        r0.<com.android.server.am.ProcessList: int[] mOomAdj> = r18;

        $r1 = newarray (int)[6];

        $r1[0] = 12288;

        $r1[1] = 18432;

        $r1[2] = 24576;

        $r1[3] = 36864;

        $r1[4] = 43008;

        $r1[5] = 49152;

        r0.<com.android.server.am.ProcessList: int[] mOomMinFreeLow> = $r1;

        $r2 = newarray (int)[6];

        $r2[0] = 73728;

        $r2[1] = 92160;

        $r2[2] = 110592;

        $r2[3] = 129024;

        $r2[4] = 147456;

        $r2[5] = 184320;

        r0.<com.android.server.am.ProcessList: int[] mOomMinFreeHigh> = $r2;

        $i0 = lengthof r18;

        $r3 = newarray (int)[$i0];

        r0.<com.android.server.am.ProcessList: int[] mOomMinFree> = $r3;

        r0.<com.android.server.am.ProcessList: boolean mOomLevelsSet> = 0;

        r0.<com.android.server.am.ProcessList: boolean mAppDataIsolationEnabled> = 0;

        r0.<com.android.server.am.ProcessList: boolean mVoldAppDataIsolationEnabled> = 0;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(int)>(256);

        r0.<com.android.server.am.ProcessList: java.lang.StringBuilder mStringBuilder> = $r4;

        r0.<com.android.server.am.ProcessList: long mProcStateSeqCounter> = 0L;

        r0.<com.android.server.am.ProcessList: long mProcStartSeqCounter> = 0L;

        $r5 = new android.util.LongSparseArray;

        specialinvoke $r5.<android.util.LongSparseArray: void <init>()>();

        r0.<com.android.server.am.ProcessList: android.util.LongSparseArray mPendingStarts> = $r5;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses> = $r6;

        r0.<com.android.server.am.ProcessList: int mLruProcessActivityStart> = 0;

        r0.<com.android.server.am.ProcessList: int mLruProcessServiceStart> = 0;

        r0.<com.android.server.am.ProcessList: int mLruSeq> = 0;

        $r7 = new android.util.SparseArray;

        specialinvoke $r7.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.am.ProcessList: android.util.SparseArray mIsolatedProcesses> = $r7;

        $r8 = new com.android.internal.app.ProcessMap;

        specialinvoke $r8.<com.android.internal.app.ProcessMap: void <init>()>();

        r0.<com.android.server.am.ProcessList: com.android.internal.app.ProcessMap mAppZygotes> = $r8;

        $r9 = new com.android.server.am.AppExitInfoTracker;

        specialinvoke $r9.<com.android.server.am.AppExitInfoTracker: void <init>()>();

        r0.<com.android.server.am.ProcessList: com.android.server.am.AppExitInfoTracker mAppExitInfoTracker> = $r9;

        $r10 = new android.util.ArrayMap;

        specialinvoke $r10.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.am.ProcessList: android.util.ArrayMap mAppZygoteProcesses> = $r10;

        r0.<com.android.server.am.ProcessList: com.android.server.compat.PlatformCompat mPlatformCompat> = null;

        $r11 = newarray (byte)[16];

        r0.<com.android.server.am.ProcessList: byte[] mZygoteUnsolicitedMessage> = $r11;

        $r12 = newarray (int)[3];

        r0.<com.android.server.am.ProcessList: int[] mZygoteSigChldMessage> = $r12;

        $r13 = new com.android.server.am.ProcessList$IsolatedUidRange;

        specialinvoke $r13.<com.android.server.am.ProcessList$IsolatedUidRange: void <init>(com.android.server.am.ProcessList,int,int)>(r0, 99000, 99999);

        r0.<com.android.server.am.ProcessList: com.android.server.am.ProcessList$IsolatedUidRange mGlobalIsolatedUids> = $r13;

        $r14 = new com.android.server.am.ProcessList$IsolatedUidRangeAllocator;

        specialinvoke $r14.<com.android.server.am.ProcessList$IsolatedUidRangeAllocator: void <init>(com.android.server.am.ProcessList,int,int,int)>(r0, 90000, 98999, 100);

        r0.<com.android.server.am.ProcessList: com.android.server.am.ProcessList$IsolatedUidRangeAllocator mAppIsolatedUidRangeAllocator> = $r14;

        $r15 = new java.util.ArrayList;

        specialinvoke $r15.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.ProcessList: java.util.ArrayList mRemovedProcesses> = $r15;

        $r16 = new com.android.server.am.ProcessList$MyProcessMap;

        specialinvoke $r16.<com.android.server.am.ProcessList$MyProcessMap: void <init>(com.android.server.am.ProcessList)>(r0);

        r0.<com.android.server.am.ProcessList: com.android.server.am.ProcessList$MyProcessMap mProcessNames> = $r16;

        $r17 = new com.android.internal.util.MemInfoReader;

        specialinvoke $r17.<com.android.internal.util.MemInfoReader: void <init>()>();

        virtualinvoke $r17.<com.android.internal.util.MemInfoReader: void readMemInfo()>();

        $l1 = virtualinvoke $r17.<com.android.internal.util.MemInfoReader: long getTotalSize()>();

        $l2 = $l1 / 1048576L;

        r0.<com.android.server.am.ProcessList: long mTotalMemMb> = $l2;

        specialinvoke r0.<com.android.server.am.ProcessList: void updateOomLevels(int,int,boolean)>(0, 0, 0);

        return;
    }

    public static void abortNextPssTime(com.android.server.am.ProcessList$ProcStateMemTracker)
    {
        com.android.server.am.ProcessList$ProcStateMemTracker r0;

        r0 := @parameter0: com.android.server.am.ProcessList$ProcStateMemTracker;

        r0.<com.android.server.am.ProcessList$ProcStateMemTracker: int mPendingMemState> = -1;

        return;
    }

    static com.android.server.am.LmkdConnection access$000()
    {
        com.android.server.am.LmkdConnection $r0;

        $r0 = <com.android.server.am.ProcessList: com.android.server.am.LmkdConnection sLmkdConnection>;

        return $r0;
    }

    public static void appendRamKb(java.lang.StringBuilder, long)
    {
        java.lang.StringBuilder r0;
        long l0, $l1;
        byte $b2;
        int i3, i4;

        r0 := @parameter0: java.lang.StringBuilder;

        l0 := @parameter1: long;

        i3 = 0;

        i4 = 10;

     label1:
        if i3 >= 6 goto label3;

        $l1 = (long) i4;

        $b2 = l0 cmp $l1;

        if $b2 >= 0 goto label2;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

     label2:
        i3 = i3 + 1;

        i4 = i4 * 10;

        goto label1;

     label3:
        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        return;
    }

    private static java.lang.String buildOomTag(java.lang.String, java.lang.String, java.lang.String, int, int, boolean)
    {
        int i0, i1, i2;
        boolean z0;
        java.lang.StringBuilder $r0, $r6, $r12;
        java.lang.String $r3, $r5, $r9, $r11, $r15, r16, r17, r18, r22;

        r16 := @parameter0: java.lang.String;

        r17 := @parameter1: java.lang.String;

        r18 := @parameter2: java.lang.String;

        i1 := @parameter3: int;

        i0 := @parameter4: int;

        z0 := @parameter5: boolean;

        i2 = i1 - i0;

        if i2 != 0 goto label3;

        if z0 == 0 goto label1;

        return r17;

     label1:
        if r18 != null goto label2;

        return r16;

     label2:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r15;

     label3:
        if i2 >= 10 goto label6;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16);

        if z0 == 0 goto label4;

        r22 = "+";

        goto label5;

     label4:
        r22 = "+ ";

     label5:
        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r22);

        $r9 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i2);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;

     label6:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("+");

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i2);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    private void checkSlow(long, java.lang.String)
    {
        com.android.server.am.ProcessList r0;
        long l0, l1, $l2, $l4;
        java.lang.String r1, $r8;
        byte $b3;
        java.lang.StringBuilder $r3;

        r0 := @this: com.android.server.am.ProcessList;

        l0 := @parameter0: long;

        r1 := @parameter1: java.lang.String;

        l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l2 = l1 - l0;

        $b3 = $l2 cmp 50L;

        if $b3 <= 0 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Slow operation: ");

        $l4 = l1 - l0;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms so far, now at ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r8);

     label1:
        return;
    }

    public static void commitNextPssTime(com.android.server.am.ProcessList$ProcStateMemTracker)
    {
        com.android.server.am.ProcessList$ProcStateMemTracker r0;
        int $i0, $i1, $i2, $i3, $i4;
        int[] $r1;
        float $f0;
        float[] $r2;

        r0 := @parameter0: com.android.server.am.ProcessList$ProcStateMemTracker;

        $i0 = r0.<com.android.server.am.ProcessList$ProcStateMemTracker: int mPendingMemState>;

        if $i0 < 0 goto label1;

        $r1 = r0.<com.android.server.am.ProcessList$ProcStateMemTracker: int[] mHighestMem>;

        $i2 = r0.<com.android.server.am.ProcessList$ProcStateMemTracker: int mPendingMemState>;

        $i1 = r0.<com.android.server.am.ProcessList$ProcStateMemTracker: int mPendingHighestMemState>;

        $r1[$i2] = $i1;

        $r2 = r0.<com.android.server.am.ProcessList$ProcStateMemTracker: float[] mScalingFactor>;

        $i3 = r0.<com.android.server.am.ProcessList$ProcStateMemTracker: int mPendingMemState>;

        $f0 = r0.<com.android.server.am.ProcessList$ProcStateMemTracker: float mPendingScalingFactor>;

        $r2[$i3] = $f0;

        $i4 = r0.<com.android.server.am.ProcessList$ProcStateMemTracker: int mPendingHighestMemState>;

        r0.<com.android.server.am.ProcessList$ProcStateMemTracker: int mTotalHighestMem> = $i4;

        r0.<com.android.server.am.ProcessList$ProcStateMemTracker: int mPendingMemState> = -1;

     label1:
        return;
    }

    public static int computeEmptyProcessLimit(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        $i1 = i0 / 2;

        return $i1;
    }

    private int[] computeGidsForProcess(int, int, int[])
    {
        com.android.server.am.ProcessList r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, i16, i17, $i18;
        java.util.ArrayList $r2;
        java.lang.Integer $r3, $r4, $r5, $r7, $r8, $r9, $r10, $r11, $r12, $r13;
        java.lang.Object $r6;
        int[] r14, r15;

        r0 := @this: com.android.server.am.ProcessList;

        i15 := @parameter0: int;

        i0 := @parameter1: int;

        r14 := @parameter2: int[];

        $r2 = new java.util.ArrayList;

        $i5 = lengthof r14;

        $i6 = $i5 + 5;

        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>($i6);

        $i7 = staticinvoke <android.os.UserHandle: int getAppId(int)>(i0);

        i1 = staticinvoke <android.os.UserHandle: int getSharedAppGid(int)>($i7);

        $i8 = staticinvoke <android.os.UserHandle: int getAppId(int)>(i0);

        i2 = staticinvoke <android.os.UserHandle: int getCacheAppGid(int)>($i8);

        $i9 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        i3 = staticinvoke <android.os.UserHandle: int getUserGid(int)>($i9);

        i4 = lengthof r14;

        i16 = 0;

     label01:
        if i16 >= i4 goto label02;

        $i14 = r14[i16];

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i14);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r13);

        i16 = i16 + 1;

        goto label01;

     label02:
        if i1 == -1 goto label03;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r12);

     label03:
        if i2 == -1 goto label04;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r11);

     label04:
        if i3 == -1 goto label05;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r10);

     label05:
        if i15 == 8 goto label06;

        if i15 != 7 goto label07;

     label06:
        $i10 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        $i11 = staticinvoke <android.os.UserHandle: int getUid(int,int)>($i10, 1015);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i11);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1078);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1079);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

     label07:
        if i15 != 5 goto label08;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1079);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r9);

     label08:
        if i15 != 7 goto label09;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1023);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r8);

     label09:
        $i12 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        r15 = newarray (int)[$i12];

        i17 = 0;

     label10:
        $i18 = lengthof r15;

        if i17 >= $i18 goto label11;

        $r6 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i17);

        $r7 = (java.lang.Integer) $r6;

        $i13 = virtualinvoke $r7.<java.lang.Integer: int intValue()>();

        r15[i17] = $i13;

        i17 = i17 + 1;

        goto label10;

     label11:
        return r15;
    }

    public static long computeNextPssTime(int, com.android.server.am.ProcessList$ProcStateMemTracker, boolean, boolean, long)
    {
        boolean z0, z1, z2;
        long l0, l2, $l3, $l8, l9;
        int i1, $i4, $i5, i6, i7;
        int[] $r0, $r1;
        float[] $r2;
        float $f0, f1, $f2, $f3;
        com.android.server.am.ProcessList$ProcStateMemTracker r3;
        long[] r4;
        byte $b10;

        i6 := @parameter0: int;

        r3 := @parameter1: com.android.server.am.ProcessList$ProcStateMemTracker;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        l0 := @parameter4: long;

        $r0 = <com.android.server.am.ProcessList: int[] sProcStateToProcMem>;

        i1 = $r0[i6];

        if r3 == null goto label07;

        $i4 = r3.<com.android.server.am.ProcessList$ProcStateMemTracker: int mTotalHighestMem>;

        if i1 >= $i4 goto label01;

        i7 = i1;

        goto label02;

     label01:
        i7 = r3.<com.android.server.am.ProcessList$ProcStateMemTracker: int mTotalHighestMem>;

     label02:
        $r1 = r3.<com.android.server.am.ProcessList$ProcStateMemTracker: int[] mHighestMem>;

        $i5 = $r1[i1];

        if i7 >= $i5 goto label03;

        z2 = 1;

        goto label04;

     label03:
        z2 = 0;

     label04:
        r3.<com.android.server.am.ProcessList$ProcStateMemTracker: int mPendingMemState> = i1;

        r3.<com.android.server.am.ProcessList$ProcStateMemTracker: int mPendingHighestMemState> = i7;

        if z2 == 0 goto label05;

        f1 = 1.0F;

        r3.<com.android.server.am.ProcessList$ProcStateMemTracker: float mPendingScalingFactor> = 1.0F;

        goto label06;

     label05:
        $r2 = r3.<com.android.server.am.ProcessList$ProcStateMemTracker: float[] mScalingFactor>;

        f1 = $r2[i1];

        $f0 = 1.5F * f1;

        r3.<com.android.server.am.ProcessList$ProcStateMemTracker: float mPendingScalingFactor> = $f0;

     label06:
        goto label08;

     label07:
        z2 = 1;

        f1 = 1.0F;

     label08:
        if z0 == 0 goto label10;

        if z2 == 0 goto label09;

        r4 = <com.android.server.am.ProcessList: long[] sTestFirstPssTimes>;

        goto label14;

     label09:
        r4 = <com.android.server.am.ProcessList: long[] sTestSamePssTimes>;

        goto label14;

     label10:
        if z2 == 0 goto label12;

        if z1 == 0 goto label11;

        r4 = <com.android.server.am.ProcessList: long[] sFirstAsleepPssTimes>;

        goto label14;

     label11:
        r4 = <com.android.server.am.ProcessList: long[] sFirstAwakePssTimes>;

        goto label14;

     label12:
        if z1 == 0 goto label13;

        r4 = <com.android.server.am.ProcessList: long[] sSameAsleepPssTimes>;

        goto label14;

     label13:
        r4 = <com.android.server.am.ProcessList: long[] sSameAwakePssTimes>;

     label14:
        $l8 = r4[i1];

        $f2 = (float) $l8;

        $f3 = $f2 * f1;

        l2 = (long) $f3;

        l9 = l2;

        $b10 = l2 cmp 3600000L;

        if $b10 <= 0 goto label15;

        l9 = 3600000L;

     label15:
        $l3 = l0 + l9;

        return $l3;
    }

    private android.os.AppZygote createAppZygoteForProcessIfNeeded(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ProcessList r0;
        com.android.server.am.ActivityManagerService r1, $r7;
        int i0, i1, $i2, $i3, $i4, i5, i6;
        com.android.server.am.HostingRecord $r2, $r12, $r16;
        android.content.pm.ApplicationInfo $r3, $r11, $r15, $r18, r28;
        java.lang.String $r4, $r14, $r17, $r19;
        com.android.internal.app.ProcessMap $r5, $r20;
        java.lang.Object $r6, $r10;
        com.android.server.am.ActivityManagerService$MainHandler $r8;
        android.util.ArrayMap $r9, $r22;
        com.android.server.am.ProcessList$IsolatedUidRangeAllocator $r13;
        java.lang.Throwable $r24;
        com.android.server.am.ProcessRecord r25;
        android.os.AppZygote r26;
        com.android.server.am.ProcessList$IsolatedUidRange r27;
        java.util.ArrayList r29;

        r0 := @this: com.android.server.am.ProcessList;

        r25 := @parameter0: com.android.server.am.ProcessRecord;

        r1 = r0.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService>;

        entermonitor r1;

     label01:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r2 = r25.<com.android.server.am.ProcessRecord: com.android.server.am.HostingRecord hostingRecord>;

        i0 = virtualinvoke $r2.<com.android.server.am.HostingRecord: int getDefiningUid()>();

        $r5 = r0.<com.android.server.am.ProcessList: com.android.internal.app.ProcessMap mAppZygotes>;

        $r3 = r25.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r4 = $r3.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        $r6 = virtualinvoke $r5.<com.android.internal.app.ProcessMap: java.lang.Object get(java.lang.String,int)>($r4, i0);

        r26 = (android.os.AppZygote) $r6;

     label02:
        if r26 != null goto label06;

     label03:
        $r13 = r0.<com.android.server.am.ProcessList: com.android.server.am.ProcessList$IsolatedUidRangeAllocator mAppIsolatedUidRangeAllocator>;

        $r11 = r25.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r14 = $r11.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        $r12 = r25.<com.android.server.am.ProcessRecord: com.android.server.am.HostingRecord hostingRecord>;

        $i2 = virtualinvoke $r12.<com.android.server.am.HostingRecord: int getDefiningUid()>();

        r27 = virtualinvoke $r13.<com.android.server.am.ProcessList$IsolatedUidRangeAllocator: com.android.server.am.ProcessList$IsolatedUidRange getIsolatedUidRangeLocked(java.lang.String,int)>($r14, $i2);

        i5 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        $i3 = r27.<com.android.server.am.ProcessList$IsolatedUidRange: int mFirstUid>;

        i1 = staticinvoke <android.os.UserHandle: int getUid(int,int)>(i5, $i3);

        $i4 = r27.<com.android.server.am.ProcessList$IsolatedUidRange: int mLastUid>;

        i6 = staticinvoke <android.os.UserHandle: int getUid(int,int)>(i5, $i4);

        r28 = new android.content.pm.ApplicationInfo;

        $r15 = r25.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        specialinvoke r28.<android.content.pm.ApplicationInfo: void <init>(android.content.pm.ApplicationInfo)>($r15);

        $r16 = r25.<com.android.server.am.ProcessRecord: com.android.server.am.HostingRecord hostingRecord>;

        $r17 = virtualinvoke $r16.<com.android.server.am.HostingRecord: java.lang.String getDefiningPackageName()>();

        r28.<android.content.pm.ApplicationInfo: java.lang.String packageName> = $r17;

        r28.<android.content.pm.ApplicationInfo: int uid> = i0;

        r26 = new android.os.AppZygote;

        specialinvoke r26.<android.os.AppZygote: void <init>(android.content.pm.ApplicationInfo,int,int,int)>(r28, i0, i1, i6);

     label04:
        $r20 = r0.<com.android.server.am.ProcessList: com.android.internal.app.ProcessMap mAppZygotes>;

        $r18 = r25.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r19 = $r18.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        virtualinvoke $r20.<com.android.internal.app.ProcessMap: java.lang.Object put(java.lang.String,int,java.lang.Object)>($r19, i0, r26);

        r29 = new java.util.ArrayList;

        specialinvoke r29.<java.util.ArrayList: void <init>()>();

        $r22 = r0.<com.android.server.am.ProcessList: android.util.ArrayMap mAppZygoteProcesses>;

        virtualinvoke $r22.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r26, r29);

     label05:
        goto label07;

     label06:
        $r7 = r0.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService>;

        $r8 = $r7.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        virtualinvoke $r8.<com.android.server.am.ActivityManagerService$MainHandler: void removeMessages(int,java.lang.Object)>(71, r26);

        $r9 = r0.<com.android.server.am.ProcessList: android.util.ArrayMap mAppZygoteProcesses>;

        $r10 = virtualinvoke $r9.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r26);

        r29 = (java.util.ArrayList) $r10;

     label07:
        virtualinvoke r29.<java.util.ArrayList: boolean add(java.lang.Object)>(r25);

        exitmonitor r1;

     label08:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return r26;

     label09:
        $r24 := @caughtexception;

     label10:
        exitmonitor r1;

     label11:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r24;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    private android.net.LocalSocket createSystemServerSocketForZygote()
    {
        com.android.server.am.ProcessList r0;
        java.io.File $r1;
        boolean $z0;
        android.net.LocalSocketAddress$Namespace $r2;
        java.lang.Exception $r3;
        java.lang.Throwable $r4;
        android.net.LocalSocket r6, r7, r8;
        android.net.LocalSocketAddress r9;

        r0 := @this: com.android.server.am.ProcessList;

        $r1 = new java.io.File;

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>("/data/system/unsolzygotesocket");

        $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label01;

        virtualinvoke $r1.<java.io.File: boolean delete()>();

     label01:
        r6 = null;

     label02:
        r7 = new android.net.LocalSocket;

     label03:
        r6 = null;

     label04:
        specialinvoke r7.<android.net.LocalSocket: void <init>(int)>(1);

     label05:
        r8 = r7;

        r6 = r7;

     label06:
        r9 = new android.net.LocalSocketAddress;

     label07:
        r6 = r7;

     label08:
        $r2 = <android.net.LocalSocketAddress$Namespace: android.net.LocalSocketAddress$Namespace FILESYSTEM>;

        specialinvoke r9.<android.net.LocalSocketAddress: void <init>(java.lang.String,android.net.LocalSocketAddress$Namespace)>("/data/system/unsolzygotesocket", $r2);

     label09:
        r6 = r7;

     label10:
        virtualinvoke r7.<android.net.LocalSocket: void bind(android.net.LocalSocketAddress)>(r9);

     label11:
        r6 = r7;

     label12:
        staticinvoke <android.system.Os: void chmod(java.lang.String,int)>("/data/system/unsolzygotesocket", 438);

     label13:
        goto label19;

     label14:
        $r3 := @caughtexception;

        r8 = r6;

        if r6 == null goto label19;

     label15:
        virtualinvoke r6.<android.net.LocalSocket: void close()>();

     label16:
        goto label18;

     label17:
        $r4 := @caughtexception;

     label18:
        r8 = null;

     label19:
        return r8;

        catch java.lang.Exception from label02 to label03 with label14;
        catch java.lang.Exception from label04 to label05 with label14;
        catch java.lang.Exception from label06 to label07 with label14;
        catch java.lang.Exception from label08 to label09 with label14;
        catch java.lang.Exception from label10 to label11 with label14;
        catch java.lang.Exception from label12 to label13 with label14;
        catch java.io.IOException from label15 to label16 with label17;
    }

    private int decideGwpAsanLevel(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ProcessList r0;
        com.android.server.am.ProcessRecord r1;
        android.content.pm.ProcessInfo r2, $r8, $r9;
        android.content.pm.ApplicationInfo $r3, $r4, $r6, $r7;
        int $i1, $i2, $i3, $i4, $i5, $i6, i7, i8;
        com.android.server.compat.PlatformCompat $r5;
        boolean $z0;

        r0 := @this: com.android.server.am.ProcessList;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        r2 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ProcessInfo processInfo>;

        i7 = 0;

        if r2 == null goto label2;

        $r8 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ProcessInfo processInfo>;

        $i5 = $r8.<android.content.pm.ProcessInfo: int gwpAsanMode>;

        if $i5 == -1 goto label2;

        $r9 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ProcessInfo processInfo>;

        $i6 = $r9.<android.content.pm.ProcessInfo: int gwpAsanMode>;

        if $i6 != 1 goto label1;

        i7 = 4194304;

        goto label1;

     label1:
        return i7;

     label2:
        $r3 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i1 = virtualinvoke $r3.<android.content.pm.ApplicationInfo: int getGwpAsanMode()>();

        if $i1 == -1 goto label5;

        $r7 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i4 = virtualinvoke $r7.<android.content.pm.ApplicationInfo: int getGwpAsanMode()>();

        if $i4 != 1 goto label3;

        i8 = 4194304;

        goto label4;

     label3:
        i8 = 0;

     label4:
        return i8;

     label5:
        $r5 = r0.<com.android.server.am.ProcessList: com.android.server.compat.PlatformCompat mPlatformCompat>;

        $r4 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $z0 = virtualinvoke $r5.<com.android.server.compat.PlatformCompat: boolean isChangeEnabled(long,android.content.pm.ApplicationInfo)>(135634846L, $r4);

        if $z0 == 0 goto label6;

        return 4194304;

     label6:
        $r6 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i2 = $r6.<android.content.pm.ApplicationInfo: int flags>;

        $i3 = $i2 & 1;

        if $i3 == 0 goto label7;

        return 2097152;

     label7:
        return 0;
    }

    private int decideTaggingLevel(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ProcessList r0;
        com.android.server.am.ProcessRecord r1;
        boolean $z0;

        r0 := @this: com.android.server.am.ProcessList;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        $z0 = specialinvoke r0.<com.android.server.am.ProcessList: boolean shouldEnableTaggedPointers(com.android.server.am.ProcessRecord)>(r1);

        if $z0 == 0 goto label1;

        return 524288;

     label1:
        return 0;
    }

    public static final java.lang.Integer getLmkdKillCount(int, int)
    {
        int i0, i1, $i2, $i3;
        java.nio.ByteBuffer r0, r1;
        boolean $z0;
        java.lang.Integer $r7;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(12);

        r1 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(8);

        virtualinvoke r0.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>(4);

        virtualinvoke r0.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>(i0);

        virtualinvoke r0.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>(i1);

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>(4);

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();

        $z0 = staticinvoke <com.android.server.am.ProcessList: boolean writeLmkd(java.nio.ByteBuffer,java.nio.ByteBuffer)>(r0, r1);

        if $z0 == 0 goto label1;

        $i2 = virtualinvoke r1.<java.nio.ByteBuffer: int getInt()>();

        if $i2 != 4 goto label1;

        $r7 = new java.lang.Integer;

        $i3 = virtualinvoke r1.<java.nio.ByteBuffer: int getInt()>();

        specialinvoke $r7.<java.lang.Integer: void <init>(int)>($i3);

        return $r7;

     label1:
        return null;
    }

    private com.android.server.am.ProcessList$IsolatedUidRange getOrCreateIsolatedUidRangeLocked(android.content.pm.ApplicationInfo, com.android.server.am.HostingRecord)
    {
        com.android.server.am.ProcessList r0;
        android.content.pm.ApplicationInfo r1;
        com.android.server.am.HostingRecord r2;
        com.android.server.am.ProcessList$IsolatedUidRange $r3, $r6;
        boolean $z0;
        com.android.server.am.ProcessList$IsolatedUidRangeAllocator $r4;
        java.lang.String $r5;
        int $i0;

        r0 := @this: com.android.server.am.ProcessList;

        r1 := @parameter0: android.content.pm.ApplicationInfo;

        r2 := @parameter1: com.android.server.am.HostingRecord;

        if r2 == null goto label2;

        $z0 = virtualinvoke r2.<com.android.server.am.HostingRecord: boolean usesAppZygote()>();

        if $z0 != 0 goto label1;

        goto label2;

     label1:
        $r4 = r0.<com.android.server.am.ProcessList: com.android.server.am.ProcessList$IsolatedUidRangeAllocator mAppIsolatedUidRangeAllocator>;

        $r5 = r1.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        $i0 = virtualinvoke r2.<com.android.server.am.HostingRecord: int getDefiningUid()>();

        $r6 = virtualinvoke $r4.<com.android.server.am.ProcessList$IsolatedUidRangeAllocator: com.android.server.am.ProcessList$IsolatedUidRange getOrCreateIsolatedUidRangeLocked(java.lang.String,int)>($r5, $i0);

        return $r6;

     label2:
        $r3 = r0.<com.android.server.am.ProcessList: com.android.server.am.ProcessList$IsolatedUidRange mGlobalIsolatedUids>;

        return $r3;
    }

    private java.util.Map getPackageAppDataInfoMap(android.content.pm.PackageManagerInternal, java.lang.String[], int)
    {
        com.android.server.am.ProcessList r0;
        java.lang.String[] r1;
        int i0, i1, $i3, i7, i8;
        java.lang.String r3, $r11, $r15, r19;
        long l2;
        android.util.ArrayMap $r4;
        byte $b4;
        java.lang.Long $r5;
        android.util.Pair $r6;
        java.lang.StringBuilder $r8, $r12;
        android.content.pm.PackageManagerInternal r16;
        com.android.server.pm.parsing.pkg.AndroidPackage r17;

        r0 := @this: com.android.server.am.ProcessList;

        r16 := @parameter0: android.content.pm.PackageManagerInternal;

        r1 := @parameter1: java.lang.String[];

        i7 := @parameter2: int;

        $r4 = new android.util.ArrayMap;

        $i3 = lengthof r1;

        specialinvoke $r4.<android.util.ArrayMap: void <init>(int)>($i3);

        i0 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i7);

        i1 = lengthof r1;

        i8 = 0;

     label1:
        if i8 >= i1 goto label5;

        r3 = r1[i8];

        r17 = virtualinvoke r16.<android.content.pm.PackageManagerInternal: com.android.server.pm.parsing.pkg.AndroidPackage getPackage(java.lang.String)>(r3);

        if r17 != null goto label2;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown package:");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r15);

        goto label4;

     label2:
        r19 = interfaceinvoke r17.<com.android.server.pm.parsing.pkg.AndroidPackage: java.lang.String getVolumeUuid()>();

        l2 = virtualinvoke r16.<android.content.pm.PackageManagerInternal: long getCeDataInode(java.lang.String,int)>(r3, i0);

        $b4 = l2 cmp 0L;

        if $b4 != 0 goto label3;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" inode == 0 (b/152760674)");

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r11);

        return null;

     label3:
        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l2);

        $r6 = staticinvoke <android.util.Pair: android.util.Pair create(java.lang.Object,java.lang.Object)>(r19, $r5);

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, $r6);

     label4:
        i8 = i8 + 1;

        goto label1;

     label5:
        return $r4;
    }

    private void handleProcessStart(com.android.server.am.ProcessRecord, java.lang.String, int[], int, int, int, java.lang.String, java.lang.String, java.lang.String, long)
    {
        com.android.server.am.ProcessList r0;
        int i0, i1, i2, i11, i13, $i17, $i18, $i19;
        java.lang.String r1, $r5, $r17, $r21, r25, r27, r28, r37, $r52, $r53, $r57;
        long l3, $l4, $l7, l10, l12, l14, l15, l16;
        com.android.server.am.ProcessRecord $r2, r24, r29, $r31, r41, r42;
        byte $b6;
        java.lang.RuntimeException $r6, $r9, $r12, $r13, r45, r46;
        java.lang.Throwable $r10, $r11, $r14, $r22, $r23, r43;
        java.lang.Exception $r15;
        java.lang.StringBuilder $r16, r32, r51;
        int[] r26;
        com.android.server.am.HostingRecord r36;
        android.os.Process$ProcessStartResult r38;
        com.android.server.am.ActivityManagerService r40, r50, $r55;
        android.util.LongSparseArray $r54;
        android.content.pm.ApplicationInfo $r56;

        r0 := @this: com.android.server.am.ProcessList;

        r24 := @parameter0: com.android.server.am.ProcessRecord;

        r25 := @parameter1: java.lang.String;

        r26 := @parameter2: int[];

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        i2 := @parameter5: int;

        r27 := @parameter6: java.lang.String;

        r28 := @parameter7: java.lang.String;

        r1 := @parameter8: java.lang.String;

        l10 := @parameter9: long;

        r29 = r24.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord mPrecedence>;

        if r29 == null goto label14;

        i11 = r29.<com.android.server.am.ProcessRecord: int pid>;

        $l4 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l12 = 2000L + $l4;

     label01:
        staticinvoke <android.os.Process: void waitForProcessDeath(int,int)>(i11, 2000);

        entermonitor r29;

     label02:
        $r2 = r24.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord mPrecedence>;

        if $r2 == null goto label07;

        l3 = staticinvoke <java.lang.System: long currentTimeMillis()>();

     label03:
        $b6 = l3 cmp l12;

        if $b6 >= 0 goto label07;

     label04:
        $l7 = l12 - l3;

        virtualinvoke r29.<java.lang.Object: void wait(long)>($l7);

     label05:
        goto label07;

     label06:
        $r23 := @caughtexception;

     label07:
        $r31 = r24.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord mPrecedence>;

        if $r31 == null goto label08;

        r32 = new java.lang.StringBuilder;

        specialinvoke r32.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r29);

        virtualinvoke r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has died, but its cleanup isn\'t done");

        $r5 = virtualinvoke r32.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r5);

     label08:
        exitmonitor r29;

     label09:
        goto label14;

     label10:
        $r10 := @caughtexception;

     label11:
        exitmonitor r29;

     label12:
        throw $r10;

     label13:
        $r15 := @caughtexception;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke r29.<com.android.server.am.ProcessRecord: java.lang.String toString()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" refused to die, but we need to launch ");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r24);

        $r21 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("ActivityManager", $r21);

     label14:
        r36 = r24.<com.android.server.am.ProcessRecord: com.android.server.am.HostingRecord hostingRecord>;

        i13 = r24.<com.android.server.am.ProcessRecord: int startUid>;

        r37 = r24.<com.android.server.am.ProcessRecord: java.lang.String seInfo>;

        l14 = r24.<com.android.server.am.ProcessRecord: long startTime>;

     label15:
        r38 = specialinvoke r0.<com.android.server.am.ProcessList: android.os.Process$ProcessStartResult startProcess(com.android.server.am.HostingRecord,java.lang.String,com.android.server.am.ProcessRecord,int,int[],int,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)>(r36, r25, r24, i13, r26, i0, i1, i2, r37, r27, r28, r1, l14);

     label16:
        r40 = r0.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService>;

        entermonitor r40;

     label17:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

     label18:
        r41 = r24;

        l15 = l10;

     label19:
        specialinvoke r0.<com.android.server.am.ProcessList: boolean handleProcessStartedLocked(com.android.server.am.ProcessRecord,android.os.Process$ProcessStartResult,long)>(r24, r38, l10);

     label20:
        r41 = r24;

        l15 = l10;

     label21:
        exitmonitor r40;

     label22:
        r42 = r24;

        l16 = l10;

     label23:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

     label24:
        goto label41;

     label25:
        $r14 := @caughtexception;

        r43 = $r14;

        r24 = r41;

        l10 = l15;

        goto label27;

     label26:
        $r22 := @caughtexception;

        r43 = $r22;

     label27:
        r41 = r24;

        l15 = l10;

     label28:
        exitmonitor r40;

     label29:
        r42 = r24;

        l16 = l10;

     label30:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

     label31:
        r42 = r24;

        l16 = l10;

     label32:
        throw r43;

     label33:
        $r6 := @caughtexception;

        r45 = $r6;

        goto label38;

     label34:
        $r13 := @caughtexception;

        r46 = $r13;

        goto label36;

     label35:
        $r12 := @caughtexception;

        r46 = $r12;

     label36:
        r45 = r46;

        r42 = r24;

        l16 = l10;

        goto label38;

     label37:
        $r9 := @caughtexception;

        l16 = l10;

        r42 = r24;

        r45 = $r9;

     label38:
        r50 = r0.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService>;

        entermonitor r50;

     label39:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        r51 = new java.lang.StringBuilder;

        specialinvoke r51.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure starting process ");

        $r52 = r42.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        virtualinvoke r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52);

        $r53 = virtualinvoke r51.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r53, r45);

        $r54 = r0.<com.android.server.am.ProcessList: android.util.LongSparseArray mPendingStarts>;

        virtualinvoke $r54.<android.util.LongSparseArray: void remove(long)>(l16);

        r42.<com.android.server.am.ProcessRecord: boolean pendingStart> = 0;

        $r55 = r0.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService>;

        $r56 = r42.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r57 = $r56.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $i17 = r42.<com.android.server.am.ProcessRecord: int uid>;

        $i18 = staticinvoke <android.os.UserHandle: int getAppId(int)>($i17);

        $i19 = r42.<com.android.server.am.ProcessRecord: int userId>;

        virtualinvoke $r55.<com.android.server.am.ActivityManagerService: boolean forceStopPackageLocked(java.lang.String,int,boolean,boolean,boolean,boolean,boolean,int,java.lang.String)>($r57, $i18, 0, 0, 1, 0, 0, $i19, "start failure");

        exitmonitor r50;

     label40:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

     label41:
        return;

     label42:
        $r11 := @caughtexception;

     label43:
        exitmonitor r50;

     label44:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r11;

        catch java.lang.Exception from label01 to label02 with label13;
        catch java.lang.Throwable from label02 to label03 with label10;
        catch java.lang.InterruptedException from label04 to label05 with label06;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
        catch java.lang.Exception from label12 to label13 with label13;
        catch java.lang.RuntimeException from label14 to label15 with label37;
        catch java.lang.RuntimeException from label15 to label16 with label35;
        catch java.lang.RuntimeException from label16 to label17 with label34;
        catch java.lang.Throwable from label17 to label18 with label26;
        catch java.lang.Throwable from label19 to label20 with label25;
        catch java.lang.Throwable from label21 to label22 with label25;
        catch java.lang.RuntimeException from label23 to label24 with label33;
        catch java.lang.Throwable from label28 to label29 with label25;
        catch java.lang.RuntimeException from label30 to label31 with label33;
        catch java.lang.RuntimeException from label32 to label33 with label33;
        catch java.lang.Throwable from label39 to label40 with label42;
        catch java.lang.Throwable from label43 to label44 with label42;
    }

    private boolean handleProcessStartedLocked(com.android.server.am.ProcessRecord, android.os.Process$ProcessStartResult, long)
    {
        com.android.server.am.ProcessList r0;
        com.android.server.am.ProcessRecord r1;
        android.os.Process$ProcessStartResult r2;
        long l0;
        android.util.LongSparseArray $r3;
        java.lang.Object $r4;
        boolean $z0, $z1, $z2;
        int $i1, $i2, $i3;

        r0 := @this: com.android.server.am.ProcessList;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        r2 := @parameter1: android.os.Process$ProcessStartResult;

        l0 := @parameter2: long;

        $r3 = r0.<com.android.server.am.ProcessList: android.util.LongSparseArray mPendingStarts>;

        $r4 = virtualinvoke $r3.<android.util.LongSparseArray: java.lang.Object get(long)>(l0);

        if $r4 != null goto label2;

        $i3 = r1.<com.android.server.am.ProcessRecord: int pid>;

        $i2 = r2.<android.os.Process$ProcessStartResult: int pid>;

        if $i3 != $i2 goto label1;

        $z2 = r2.<android.os.Process$ProcessStartResult: boolean usingWrapper>;

        virtualinvoke r1.<com.android.server.am.ProcessRecord: void setUsingWrapper(boolean)>($z2);

     label1:
        return 0;

     label2:
        $i1 = r2.<android.os.Process$ProcessStartResult: int pid>;

        $z0 = r2.<android.os.Process$ProcessStartResult: boolean usingWrapper>;

        $z1 = virtualinvoke r0.<com.android.server.am.ProcessList: boolean handleProcessStartedLocked(com.android.server.am.ProcessRecord,int,boolean,long,boolean)>(r1, $i1, $z0, l0, 0);

        return $z1;
    }

    private int handleZygoteMessages(java.io.FileDescriptor, int)
    {
        com.android.server.am.ProcessList r0;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, i9, i10;
        byte[] $r2, $r3, $r6;
        int[] $r4, $r5, $r7, $r8, $r9;
        com.android.server.am.AppExitInfoTracker $r10;
        java.lang.Exception $r11;
        java.lang.StringBuilder $r12;
        java.lang.String $r15;
        java.io.FileDescriptor r16;

        r0 := @this: com.android.server.am.ProcessList;

        r16 := @parameter0: java.io.FileDescriptor;

        i9 := @parameter1: int;

        virtualinvoke r16.<java.io.FileDescriptor: int getInt$()>();

        $i1 = i9 & 1;

        if $i1 == 0 goto label6;

     label1:
        $r3 = r0.<com.android.server.am.ProcessList: byte[] mZygoteUnsolicitedMessage>;

        $r2 = r0.<com.android.server.am.ProcessList: byte[] mZygoteUnsolicitedMessage>;

        $i2 = lengthof $r2;

        i10 = staticinvoke <android.system.Os: int read(java.io.FileDescriptor,byte[],int,int)>(r16, $r3, 0, $i2);

     label2:
        if i10 <= 0 goto label4;

     label3:
        $r4 = r0.<com.android.server.am.ProcessList: int[] mZygoteSigChldMessage>;

        $i3 = lengthof $r4;

        $r6 = r0.<com.android.server.am.ProcessList: byte[] mZygoteUnsolicitedMessage>;

        $r5 = r0.<com.android.server.am.ProcessList: int[] mZygoteSigChldMessage>;

        $i4 = staticinvoke <com.android.internal.os.Zygote: int nativeParseSigChld(byte[],int,int[])>($r6, i10, $r5);

        if $i3 != $i4 goto label4;

        $r10 = r0.<com.android.server.am.ProcessList: com.android.server.am.AppExitInfoTracker mAppExitInfoTracker>;

        $r7 = r0.<com.android.server.am.ProcessList: int[] mZygoteSigChldMessage>;

        $i7 = $r7[0];

        $r8 = r0.<com.android.server.am.ProcessList: int[] mZygoteSigChldMessage>;

        $i6 = $r8[1];

        $r9 = r0.<com.android.server.am.ProcessList: int[] mZygoteSigChldMessage>;

        $i5 = $r9[2];

        virtualinvoke $r10.<com.android.server.am.AppExitInfoTracker: void handleZygoteSigChld(int,int,int)>($i7, $i6, $i5);

     label4:
        goto label6;

     label5:
        $r11 := @caughtexception;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception in reading unsolicited zygote message: ");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r15);

     label6:
        return 1;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    private java.lang.String isProcStartValidLocked(com.android.server.am.ProcessRecord, long)
    {
        com.android.server.am.ProcessList r0;
        long l0, $l1, $l3;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r1, $r3, $r4, $r5, $r6, $r10, r13, r14, r18, r19, r25;
        java.lang.String $r2, $r16, $r23, r26;
        java.lang.Throwable $r7;
        com.android.server.am.ActivityManagerService $r8;
        com.android.server.am.ActivityManagerConstants $r9;
        android.os.RemoteException $r11;
        com.android.server.am.ProcessRecord r12;
        com.android.server.am.ProcessList$MyProcessMap $r15;
        int $i2, $i5;
        java.lang.Object $r17;
        byte $b4;
        android.content.pm.IPackageManager $r21;
        android.content.pm.ApplicationInfo $r22;

        r0 := @this: com.android.server.am.ProcessList;

        r12 := @parameter0: com.android.server.am.ProcessRecord;

        l0 := @parameter1: long;

        r13 = null;

        $z0 = r12.<com.android.server.am.ProcessRecord: boolean killedByAm>;

        if $z0 == 0 goto label01;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        r13 = $r6;

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("killedByAm=true;");

     label01:
        r14 = r13;

        $r15 = r0.<com.android.server.am.ProcessList: com.android.server.am.ProcessList$MyProcessMap mProcessNames>;

        $r16 = r12.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $i2 = r12.<com.android.server.am.ProcessRecord: int uid>;

        $r17 = virtualinvoke $r15.<com.android.server.am.ProcessList$MyProcessMap: java.lang.Object get(java.lang.String,int)>($r16, $i2);

        if $r17 == r12 goto label03;

        r14 = r13;

        if r13 != null goto label02;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        r14 = $r5;

     label02:
        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No entry in mProcessNames;");

     label03:
        r18 = r14;

        $z2 = r12.<com.android.server.am.ProcessRecord: boolean pendingStart>;

        if $z2 != 0 goto label05;

        r18 = r14;

        if r14 != null goto label04;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        r18 = $r4;

     label04:
        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pendingStart=false;");

     label05:
        r19 = r18;

        $l3 = r12.<com.android.server.am.ProcessRecord: long startSeq>;

        $b4 = $l3 cmp l0;

        if $b4 <= 0 goto label07;

        r19 = r18;

        if r18 != null goto label06;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        r19 = $r3;

     label06:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("seq=");

        $l1 = r12.<com.android.server.am.ProcessRecord: long startSeq>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",expected=");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

     label07:
        $r21 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        $r22 = r12.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r23 = $r22.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $i5 = r12.<com.android.server.am.ProcessRecord: int userId>;

        interfaceinvoke $r21.<android.content.pm.IPackageManager: void checkPackageStartable(java.lang.String,int)>($r23, $i5);

     label08:
        goto label13;

     label09:
        $r7 := @caughtexception;

        $r8 = r0.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService>;

        $r9 = $r8.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerConstants mConstants>;

        $z1 = $r9.<com.android.server.am.ActivityManagerConstants: boolean FLAG_PROCESS_START_ASYNC>;

        if $z1 == 0 goto label11;

        r25 = r19;

        if r19 != null goto label10;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        r25 = $r10;

     label10:
        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package is frozen;");

        goto label14;

     label11:
        throw $r7;

     label12:
        $r11 := @caughtexception;

     label13:
        r25 = r19;

     label14:
        if r25 != null goto label15;

        r26 = null;

        goto label16;

     label15:
        r26 = virtualinvoke r25.<java.lang.StringBuilder: java.lang.String toString()>();

     label16:
        return r26;

        catch android.os.RemoteException from label07 to label08 with label12;
        catch java.lang.SecurityException from label07 to label08 with label09;
    }

    static void killProcessGroup(int, int)
    {
        int i0, i1;
        com.android.server.am.ProcessList$KillHandler r0;
        android.os.Message $r1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0 = <com.android.server.am.ProcessList: com.android.server.am.ProcessList$KillHandler sKillHandler>;

        if r0 == null goto label1;

        $r1 = virtualinvoke r0.<com.android.server.am.ProcessList$KillHandler: android.os.Message obtainMessage(int,int,int)>(4000, i0, i1);

        virtualinvoke r0.<com.android.server.am.ProcessList$KillHandler: boolean sendMessage(android.os.Message)>($r1);

        goto label2;

     label1:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", "Asked to kill process group before system bringup!");

        staticinvoke <android.os.Process: int killProcessGroup(int,int)>(i0, i1);

     label2:
        return;
    }

    public static int lambda$hjUwwFAIhoht4KRKnKeUve_Kcto(com.android.server.am.ProcessList, java.io.FileDescriptor, int)
    {
        com.android.server.am.ProcessList r0;
        java.io.FileDescriptor r1;
        int i0, $i1;

        r0 := @parameter0: com.android.server.am.ProcessList;

        r1 := @parameter1: java.io.FileDescriptor;

        i0 := @parameter2: int;

        $i1 = specialinvoke r0.<com.android.server.am.ProcessList: int handleZygoteMessages(java.io.FileDescriptor,int)>(r1, i0);

        return $i1;
    }

    public static java.lang.String makeOomAdjString(int, boolean)
    {
        int i0;
        boolean z0;
        java.lang.String $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        if i0 < 900 goto label01;

        $r15 = staticinvoke <com.android.server.am.ProcessList: java.lang.String buildOomTag(java.lang.String,java.lang.String,java.lang.String,int,int,boolean)>("cch", "cch", "   ", i0, 900, z0);

        return $r15;

     label01:
        if i0 < 800 goto label02;

        $r14 = staticinvoke <com.android.server.am.ProcessList: java.lang.String buildOomTag(java.lang.String,java.lang.String,java.lang.String,int,int,boolean)>("svcb  ", "svcb", null, i0, 800, z0);

        return $r14;

     label02:
        if i0 < 700 goto label03;

        $r13 = staticinvoke <com.android.server.am.ProcessList: java.lang.String buildOomTag(java.lang.String,java.lang.String,java.lang.String,int,int,boolean)>("prev  ", "prev", null, i0, 700, z0);

        return $r13;

     label03:
        if i0 < 600 goto label04;

        $r12 = staticinvoke <com.android.server.am.ProcessList: java.lang.String buildOomTag(java.lang.String,java.lang.String,java.lang.String,int,int,boolean)>("home  ", "home", null, i0, 600, z0);

        return $r12;

     label04:
        if i0 < 500 goto label05;

        $r11 = staticinvoke <com.android.server.am.ProcessList: java.lang.String buildOomTag(java.lang.String,java.lang.String,java.lang.String,int,int,boolean)>("svc   ", "svc", null, i0, 500, z0);

        return $r11;

     label05:
        if i0 < 400 goto label06;

        $r10 = staticinvoke <com.android.server.am.ProcessList: java.lang.String buildOomTag(java.lang.String,java.lang.String,java.lang.String,int,int,boolean)>("hvy   ", "hvy", null, i0, 400, z0);

        return $r10;

     label06:
        if i0 < 300 goto label07;

        $r9 = staticinvoke <com.android.server.am.ProcessList: java.lang.String buildOomTag(java.lang.String,java.lang.String,java.lang.String,int,int,boolean)>("bkup  ", "bkup", null, i0, 300, z0);

        return $r9;

     label07:
        if i0 < 250 goto label08;

        $r8 = staticinvoke <com.android.server.am.ProcessList: java.lang.String buildOomTag(java.lang.String,java.lang.String,java.lang.String,int,int,boolean)>("prcl  ", "prcl", null, i0, 250, z0);

        return $r8;

     label08:
        if i0 < 200 goto label09;

        $r7 = staticinvoke <com.android.server.am.ProcessList: java.lang.String buildOomTag(java.lang.String,java.lang.String,java.lang.String,int,int,boolean)>("prcp  ", "prcp", null, i0, 200, z0);

        return $r7;

     label09:
        if i0 < 100 goto label10;

        $r6 = staticinvoke <com.android.server.am.ProcessList: java.lang.String buildOomTag(java.lang.String,java.lang.String,java.lang.String,int,int,boolean)>("vis", "vis", "   ", i0, 100, z0);

        return $r6;

     label10:
        if i0 < 0 goto label11;

        $r5 = staticinvoke <com.android.server.am.ProcessList: java.lang.String buildOomTag(java.lang.String,java.lang.String,java.lang.String,int,int,boolean)>("fg ", "fg ", "   ", i0, 0, z0);

        return $r5;

     label11:
        if i0 < -700 goto label12;

        $r4 = staticinvoke <com.android.server.am.ProcessList: java.lang.String buildOomTag(java.lang.String,java.lang.String,java.lang.String,int,int,boolean)>("psvc  ", "psvc", null, i0, -700, z0);

        return $r4;

     label12:
        if i0 < -800 goto label13;

        $r3 = staticinvoke <com.android.server.am.ProcessList: java.lang.String buildOomTag(java.lang.String,java.lang.String,java.lang.String,int,int,boolean)>("pers  ", "pers", null, i0, -800, z0);

        return $r3;

     label13:
        if i0 < -900 goto label14;

        $r2 = staticinvoke <com.android.server.am.ProcessList: java.lang.String buildOomTag(java.lang.String,java.lang.String,java.lang.String,int,int,boolean)>("sys   ", "sys", null, i0, -900, z0);

        return $r2;

     label14:
        if i0 < -1000 goto label15;

        $r1 = staticinvoke <com.android.server.am.ProcessList: java.lang.String buildOomTag(java.lang.String,java.lang.String,java.lang.String,int,int,boolean)>("ntv  ", "ntv", null, i0, -1000, z0);

        return $r1;

     label15:
        $r0 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        return $r0;
    }

    public static int makeProcStateProtoEnum(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case -1: goto label23;
            case 0: goto label22;
            case 1: goto label21;
            case 2: goto label20;
            case 3: goto label19;
            case 4: goto label18;
            case 5: goto label17;
            case 6: goto label16;
            case 7: goto label15;
            case 8: goto label14;
            case 9: goto label13;
            case 10: goto label12;
            case 11: goto label11;
            case 12: goto label10;
            case 13: goto label09;
            case 14: goto label08;
            case 15: goto label07;
            case 16: goto label06;
            case 17: goto label05;
            case 18: goto label04;
            case 19: goto label03;
            case 20: goto label02;
            default: goto label01;
        };

     label01:
        return 998;

     label02:
        return 1019;

     label03:
        return 1018;

     label04:
        return 1017;

     label05:
        return 1016;

     label06:
        return 1015;

     label07:
        return 1014;

     label08:
        return 1013;

     label09:
        return 1012;

     label10:
        return 1011;

     label11:
        return 1010;

     label12:
        return 1009;

     label13:
        return 1008;

     label14:
        return 1007;

     label15:
        return 1006;

     label16:
        return 1005;

     label17:
        return 1004;

     label18:
        return 1003;

     label19:
        return 1020;

     label20:
        return 1002;

     label21:
        return 1001;

     label22:
        return 1000;

     label23:
        return 999;
    }

    public static java.lang.String makeProcStateString(int)
    {
        int i0;
        java.lang.String r0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label22;
            case 1: goto label21;
            case 2: goto label20;
            case 3: goto label19;
            case 4: goto label18;
            case 5: goto label17;
            case 6: goto label16;
            case 7: goto label15;
            case 8: goto label14;
            case 9: goto label13;
            case 10: goto label12;
            case 11: goto label11;
            case 12: goto label10;
            case 13: goto label09;
            case 14: goto label08;
            case 15: goto label07;
            case 16: goto label06;
            case 17: goto label05;
            case 18: goto label04;
            case 19: goto label03;
            case 20: goto label02;
            default: goto label01;
        };

     label01:
        r0 = "??";

        goto label23;

     label02:
        r0 = "NONE";

        goto label23;

     label03:
        r0 = "CEM ";

        goto label23;

     label04:
        r0 = "CRE ";

        goto label23;

     label05:
        r0 = "CACC";

        goto label23;

     label06:
        r0 = "CAC ";

        goto label23;

     label07:
        r0 = "LAST";

        goto label23;

     label08:
        r0 = "HOME";

        goto label23;

     label09:
        r0 = "HVY ";

        goto label23;

     label10:
        r0 = "TPSL";

        goto label23;

     label11:
        r0 = "RCVR";

        goto label23;

     label12:
        r0 = "SVC ";

        goto label23;

     label13:
        r0 = "BKUP";

        goto label23;

     label14:
        r0 = "TRNB";

        goto label23;

     label15:
        r0 = "IMPB";

        goto label23;

     label16:
        r0 = "IMPF";

        goto label23;

     label17:
        r0 = "BFGS";

        goto label23;

     label18:
        r0 = "FGS ";

        goto label23;

     label19:
        r0 = "BTOP";

        goto label23;

     label20:
        r0 = "TOP ";

        goto label23;

     label21:
        r0 = "PERU";

        goto label23;

     label22:
        r0 = "PER ";

     label23:
        return r0;
    }

    public static long minTimeFromStateChange(boolean)
    {
        boolean z0;
        long l0;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        l0 = 10000L;

        goto label2;

     label1:
        l0 = 15000L;

     label2:
        return l0;
    }

    private boolean needsStorageDataIsolation(android.os.storage.StorageManagerInternal, com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ProcessList r0;
        android.os.storage.StorageManagerInternal r1;
        com.android.server.am.ProcessRecord r2;
        boolean $z0, $z1, $z2, z3;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: com.android.server.am.ProcessList;

        r1 := @parameter0: android.os.storage.StorageManagerInternal;

        r2 := @parameter1: com.android.server.am.ProcessRecord;

        $z0 = r0.<com.android.server.am.ProcessList: boolean mVoldAppDataIsolationEnabled>;

        if $z0 == 0 goto label1;

        $i0 = r2.<com.android.server.am.ProcessRecord: int uid>;

        $z1 = staticinvoke <android.os.UserHandle: boolean isApp(int)>($i0);

        if $z1 == 0 goto label1;

        $i1 = r2.<com.android.server.am.ProcessRecord: int uid>;

        $z2 = virtualinvoke r1.<android.os.storage.StorageManagerInternal: boolean isExternalStorageService(int)>($i1);

        if $z2 != 0 goto label1;

        $i2 = r2.<com.android.server.am.ProcessRecord: int mountMode>;

        if $i2 == 8 goto label1;

        $i3 = r2.<com.android.server.am.ProcessRecord: int mountMode>;

        if $i3 == 7 goto label1;

        $i4 = r2.<com.android.server.am.ProcessRecord: int mountMode>;

        if $i4 == 5 goto label1;

        z3 = 1;

        goto label2;

     label1:
        z3 = 0;

     label2:
        return z3;
    }

    private static int procStateToImportance(int, int, android.app.ActivityManager$RunningAppProcessInfo, int)
    {
        int i0, i1, i2, i3;
        android.app.ActivityManager$RunningAppProcessInfo r0;

        i2 := @parameter0: int;

        i0 := @parameter1: int;

        r0 := @parameter2: android.app.ActivityManager$RunningAppProcessInfo;

        i1 := @parameter3: int;

        i3 = staticinvoke <android.app.ActivityManager$RunningAppProcessInfo: int procStateToImportanceForTargetSdk(int,int)>(i2, i1);

        if i3 != 400 goto label1;

        r0.<android.app.ActivityManager$RunningAppProcessInfo: int lru> = i0;

        goto label2;

     label1:
        r0.<android.app.ActivityManager$RunningAppProcessInfo: int lru> = 0;

     label2:
        return i3;
    }

    public static boolean procStatesDifferForMem(int, int)
    {
        int i0, i1, $i2, $i3;
        int[] r0;
        boolean z0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0 = <com.android.server.am.ProcessList: int[] sProcStateToProcMem>;

        $i3 = r0[i0];

        $i2 = r0[i1];

        if $i3 == $i2 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public static final void remove(int)
    {
        int i0;
        java.nio.ByteBuffer r0;

        i0 := @parameter0: int;

        if i0 > 0 goto label1;

        return;

     label1:
        r0 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(8);

        virtualinvoke r0.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>(2);

        virtualinvoke r0.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>(i0);

        staticinvoke <com.android.server.am.ProcessList: boolean writeLmkd(java.nio.ByteBuffer,java.nio.ByteBuffer)>(r0, null);

        return;
    }

    private void removeProcessFromAppZygoteLocked(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ProcessList r0;
        java.util.ArrayList r1;
        android.content.pm.ApplicationInfo $r2, $r6;
        com.android.server.am.HostingRecord $r3, $r7;
        com.android.server.am.ProcessList$IsolatedUidRangeAllocator $r4;
        java.lang.String $r5, $r9;
        int $i0, $i1, $i2, $i3;
        com.android.internal.app.ProcessMap $r8;
        java.lang.Object $r10, $r12;
        android.util.ArrayMap $r11;
        com.android.server.am.ActivityManagerService $r13, $r15, $r17;
        com.android.server.am.ActivityManagerService$MainHandler $r14, $r16, $r18;
        boolean $z1;
        com.android.server.am.ProcessRecord r19;
        com.android.server.am.ProcessList$IsolatedUidRange r20;
        android.os.AppZygote r21;
        android.os.Message r22;

        r0 := @this: com.android.server.am.ProcessList;

        r19 := @parameter0: com.android.server.am.ProcessRecord;

        $r4 = r0.<com.android.server.am.ProcessList: com.android.server.am.ProcessList$IsolatedUidRangeAllocator mAppIsolatedUidRangeAllocator>;

        $r2 = r19.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r5 = $r2.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        $r3 = r19.<com.android.server.am.ProcessRecord: com.android.server.am.HostingRecord hostingRecord>;

        $i0 = virtualinvoke $r3.<com.android.server.am.HostingRecord: int getDefiningUid()>();

        r20 = virtualinvoke $r4.<com.android.server.am.ProcessList$IsolatedUidRangeAllocator: com.android.server.am.ProcessList$IsolatedUidRange getIsolatedUidRangeLocked(java.lang.String,int)>($r5, $i0);

        if r20 == null goto label1;

        $i3 = r19.<com.android.server.am.ProcessRecord: int uid>;

        virtualinvoke r20.<com.android.server.am.ProcessList$IsolatedUidRange: void freeIsolatedUidLocked(int)>($i3);

     label1:
        $r8 = r0.<com.android.server.am.ProcessList: com.android.internal.app.ProcessMap mAppZygotes>;

        $r6 = r19.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r9 = $r6.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        $r7 = r19.<com.android.server.am.ProcessRecord: com.android.server.am.HostingRecord hostingRecord>;

        $i1 = virtualinvoke $r7.<com.android.server.am.HostingRecord: int getDefiningUid()>();

        $r10 = virtualinvoke $r8.<com.android.internal.app.ProcessMap: java.lang.Object get(java.lang.String,int)>($r9, $i1);

        r21 = (android.os.AppZygote) $r10;

        if r21 == null goto label3;

        $r11 = r0.<com.android.server.am.ProcessList: android.util.ArrayMap mAppZygoteProcesses>;

        $r12 = virtualinvoke $r11.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r21);

        r1 = (java.util.ArrayList) $r12;

        virtualinvoke r1.<java.util.ArrayList: boolean remove(java.lang.Object)>(r19);

        $i2 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if $i2 != 0 goto label3;

        $r13 = r0.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService>;

        $r14 = $r13.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        virtualinvoke $r14.<com.android.server.am.ActivityManagerService$MainHandler: void removeMessages(int)>(71);

        $z1 = r19.<com.android.server.am.ProcessRecord: boolean removed>;

        if $z1 == 0 goto label2;

        virtualinvoke r0.<com.android.server.am.ProcessList: void killAppZygoteIfNeededLocked(android.os.AppZygote,boolean)>(r21, 0);

        goto label3;

     label2:
        $r15 = r0.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService>;

        $r16 = $r15.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        r22 = virtualinvoke $r16.<com.android.server.am.ActivityManagerService$MainHandler: android.os.Message obtainMessage(int)>(71);

        r22.<android.os.Message: java.lang.Object obj> = r21;

        $r17 = r0.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService>;

        $r18 = $r17.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        virtualinvoke $r18.<com.android.server.am.ActivityManagerService$MainHandler: boolean sendMessageDelayed(android.os.Message,long)>(r22, 5000L);

     label3:
        return;
    }

    public static void setOomAdj(int, int, int)
    {
        int i0, i1, i2;
        long l3, l4, $l5, $l7;
        byte $b6;
        java.lang.StringBuilder $r4;
        java.lang.String $r11;
        java.nio.ByteBuffer r12;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        if i0 > 0 goto label1;

        return;

     label1:
        if i2 != 1001 goto label2;

        return;

     label2:
        l3 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        r12 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(16);

        virtualinvoke r12.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>(1);

        virtualinvoke r12.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>(i0);

        virtualinvoke r12.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>(i1);

        virtualinvoke r12.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>(i2);

        staticinvoke <com.android.server.am.ProcessList: boolean writeLmkd(java.nio.ByteBuffer,java.nio.ByteBuffer)>(r12, null);

        l4 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l5 = l4 - l3;

        $b6 = $l5 cmp 250L;

        if $b6 <= 0 goto label3;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SLOW OOM ADJ: ");

        $l7 = l4 - l3;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l7);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms for pid ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r11 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r11);

     label3:
        return;
    }

    private boolean shouldEnableTaggedPointers(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ProcessList r0;
        com.android.server.am.ProcessRecord r1;
        boolean $z0, $z1, $z2;
        android.content.pm.ApplicationInfo $r2, $r3;
        com.android.server.compat.PlatformCompat $r4;

        r0 := @this: com.android.server.am.ProcessList;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        $z0 = staticinvoke <com.android.internal.os.Zygote: boolean nativeSupportsTaggedPointers()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r2 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $z1 = virtualinvoke $r2.<android.content.pm.ApplicationInfo: boolean allowsNativeHeapPointerTagging()>();

        if $z1 != 0 goto label2;

        return 0;

     label2:
        $r4 = r0.<com.android.server.am.ProcessList: com.android.server.compat.PlatformCompat mPlatformCompat>;

        $r3 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $z2 = virtualinvoke $r4.<com.android.server.compat.PlatformCompat: boolean isChangeEnabled(long,android.content.pm.ApplicationInfo)>(135754954L, $r3);

        if $z2 != 0 goto label3;

        return 0;

     label3:
        return 1;
    }

    private android.os.Process$ProcessStartResult startProcess(com.android.server.am.HostingRecord, java.lang.String, com.android.server.am.ProcessRecord, int, int[], int, int, int, java.lang.String, java.lang.String, java.lang.String, java.lang.String, long)
    {
        com.android.server.am.ProcessList r0;
        java.lang.String r1, r3, r4, r5, $r7, $r9, $r21, $r29, $r37, $r38, $r40, r50, $r55, r63, r64, r65, r68, r72, r73, r74, r77, r78, r79;
        int i0, i1, i2, i4, $i8, $i9, i10, $i11, $i12, i13, i14, i15, i16, i17;
        int[] r2;
        long l3, $l5, $l6, $l7;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z7, $z8, $z9, z10, z11, z12, $z13;
        java.util.ArrayList $r10;
        java.lang.String[] $r11, $r13, $r20, $r28, $r35, r56;
        java.lang.Object[] $r12;
        java.lang.Object $r14;
        android.content.pm.ApplicationInfo $r15, $r16, $r17, $r23, $r24, $r25, $r30, $r31, $r32, $r39, $r41, $r54;
        android.os.AppZygote $r22;
        java.util.Set $r36;
        com.android.server.compat.PlatformCompat $r42;
        java.lang.Throwable $r43, $r44, $r45, $r46, $r47, r70;
        com.android.server.am.HostingRecord r48;
        com.android.server.am.ProcessRecord r49;
        java.lang.StringBuilder r51, r67, r76, r81;
        com.android.server.am.ActivityManagerService $r52;
        android.content.pm.PackageManagerInternal r53;
        java.util.Map r57, r59, r61, r62;
        android.util.ArraySet r58;
        android.os.storage.StorageManagerInternal r60;
        long[] r66, r75, r80;
        android.os.Process$ProcessStartResult r69;
        android.os.ChildZygoteProcess r71;

        r0 := @this: com.android.server.am.ProcessList;

        r48 := @parameter0: com.android.server.am.HostingRecord;

        r1 := @parameter1: java.lang.String;

        r49 := @parameter2: com.android.server.am.ProcessRecord;

        i0 := @parameter3: int;

        r2 := @parameter4: int[];

        i1 := @parameter5: int;

        i10 := @parameter6: int;

        i2 := @parameter7: int;

        r3 := @parameter8: java.lang.String;

        r4 := @parameter9: java.lang.String;

        r5 := @parameter10: java.lang.String;

        r50 := @parameter11: java.lang.String;

        l3 := @parameter12: long;

     label01:
        r51 = new java.lang.StringBuilder;

        specialinvoke r51.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Start proc: ");

        $r7 = r49.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        virtualinvoke r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke r51.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.os.Trace: void traceBegin(long,java.lang.String)>(64L, $r9);

        specialinvoke r0.<com.android.server.am.ProcessList: void checkSlow(long,java.lang.String)>(l3, "startProcess: asking zygote to start proc");

        z0 = virtualinvoke r48.<com.android.server.am.HostingRecord: boolean isTopApp()>();

     label02:
        if z0 == 0 goto label04;

     label03:
        virtualinvoke r49.<com.android.server.am.ProcessRecord: void setHasForegroundActivities(boolean)>(1);

     label04:
        $z2 = r0.<com.android.server.am.ProcessList: boolean mAppDataIsolationEnabled>;

        if $z2 == 0 goto label07;

        $i8 = r49.<com.android.server.am.ProcessRecord: int uid>;

        $z7 = staticinvoke <android.os.UserHandle: boolean isApp(int)>($i8);

        if $z7 != 0 goto label05;

        $i9 = r49.<com.android.server.am.ProcessRecord: int uid>;

        $z9 = staticinvoke <android.os.UserHandle: boolean isIsolated(int)>($i9);

        if $z9 == 0 goto label07;

     label05:
        $r42 = r0.<com.android.server.am.ProcessList: com.android.server.compat.PlatformCompat mPlatformCompat>;

        $r41 = r49.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $z8 = virtualinvoke $r42.<com.android.server.compat.PlatformCompat: boolean isChangeEnabled(long,android.content.pm.ApplicationInfo)>(143937733L, $r41);

        if $z8 == 0 goto label07;

     label06:
        z10 = 1;

        goto label08;

     label07:
        z10 = 0;

     label08:
        $r52 = r0.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService>;

        r53 = virtualinvoke $r52.<com.android.server.am.ActivityManagerService: android.content.pm.PackageManagerInternal getPackageManagerInternalLocked()>();

        $r54 = r49.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r55 = $r54.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $i11 = r49.<com.android.server.am.ProcessRecord: int userId>;

        r56 = virtualinvoke r53.<android.content.pm.PackageManagerInternal: java.lang.String[] getSharedUserPackagesForPackage(java.lang.String,int)>($r55, $i11);

        $i12 = lengthof r56;

        if $i12 != 0 goto label10;

        r56 = newarray (java.lang.String)[1];

        $r39 = r49.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r40 = $r39.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        r56[0] = $r40;

     label09:
        goto label10;

     label10:
        r57 = specialinvoke r0.<com.android.server.am.ProcessList: java.util.Map getPackageAppDataInfoMap(android.content.pm.PackageManagerInternal,java.lang.String[],int)>(r53, r56, i0);

     label11:
        if r57 != null goto label12;

        z10 = 0;

     label12:
        r58 = new android.util.ArraySet;

        $r10 = r0.<com.android.server.am.ProcessList: java.util.ArrayList mAppDataIsolationWhitelistedApps>;

        specialinvoke r58.<android.util.ArraySet: void <init>(java.util.Collection)>($r10);

        i4 = lengthof r56;

     label13:
        i13 = 0;

     label14:
        if i13 >= i4 goto label17;

     label15:
        $r38 = r56[i13];

        interfaceinvoke r58.<java.util.Set: boolean remove(java.lang.Object)>($r38);

     label16:
        i13 = i13 + 1;

        goto label14;

     label17:
        $r11 = newarray (java.lang.String)[0];

        $r12 = interfaceinvoke r58.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($r11);

        $r13 = (java.lang.String[]) $r12;

        r59 = specialinvoke r0.<com.android.server.am.ProcessList: java.util.Map getPackageAppDataInfoMap(android.content.pm.PackageManagerInternal,java.lang.String[],int)>(r53, $r13, i0);

     label18:
        if r59 != null goto label19;

        z11 = 0;

        goto label20;

     label19:
        z11 = z10;

     label20:
        i14 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        $r14 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/os/storage/StorageManagerInternal;");

        r60 = (android.os.storage.StorageManagerInternal) $r14;

        $z3 = specialinvoke r0.<com.android.server.am.ProcessList: boolean needsStorageDataIsolation(android.os.storage.StorageManagerInternal,com.android.server.am.ProcessRecord)>(r60, r49);

        if $z3 == 0 goto label27;

     label21:
        if r57 == null goto label25;

     label22:
        $r36 = interfaceinvoke r57.<java.util.Map: java.util.Set keySet()>();

        $r37 = r49.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $z5 = virtualinvoke r60.<android.os.storage.StorageManagerInternal: boolean prepareStorageDirs(int,java.util.Set,java.lang.String)>(i14, $r36, $r37);

        if $z5 != 0 goto label24;

     label23:
        goto label25;

     label24:
        z12 = 1;

        goto label28;

     label25:
        r49.<com.android.server.am.ProcessRecord: boolean bindMountPending> = 1;

     label26:
        z12 = 0;

        goto label28;

     label27:
        z12 = 0;

     label28:
        $z13 = r49.<com.android.server.am.ProcessRecord: boolean isolated>;

        if $z13 == 0 goto label30;

     label29:
        r61 = null;

        r62 = null;

        goto label31;

     label30:
        r62 = r57;

        r61 = r59;

     label31:
        z1 = virtualinvoke r48.<com.android.server.am.HostingRecord: boolean usesWebviewZygote()>();

     label32:
        if z1 == 0 goto label37;

     label33:
        r63 = r49.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r30 = r49.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        i15 = $r30.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        $r31 = r49.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        r64 = $r31.<android.content.pm.ApplicationInfo: java.lang.String dataDir>;

        $r32 = r49.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        r65 = $r32.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        r66 = r49.<com.android.server.am.ProcessRecord: long[] mDisabledCompatChanges>;

        r67 = new java.lang.StringBuilder;

        specialinvoke r67.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("seq=");

        $l7 = r49.<com.android.server.am.ProcessRecord: long startSeq>;

        virtualinvoke r67.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l7);

        r68 = virtualinvoke r67.<java.lang.StringBuilder: java.lang.String toString()>();

     label34:
        $r35 = newarray (java.lang.String)[1];

        $r35[0] = r68;

        r69 = staticinvoke <android.os.Process: android.os.Process$ProcessStartResult startWebView(java.lang.String,java.lang.String,int,int,int[],int,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long[],java.lang.String[])>(r1, r63, i0, i0, r2, i1, i2, i15, r3, r4, r5, r64, null, r65, r66, $r35);

     label35:
        goto label40;

     label36:
        $r44 := @caughtexception;

        r70 = $r44;

        goto label44;

     label37:
        $z4 = virtualinvoke r48.<com.android.server.am.HostingRecord: boolean usesAppZygote()>();

        if $z4 == 0 goto label39;

        $r22 = specialinvoke r0.<com.android.server.am.ProcessList: android.os.AppZygote createAppZygoteForProcessIfNeeded(com.android.server.am.ProcessRecord)>(r49);

        r71 = virtualinvoke $r22.<android.os.AppZygote: android.os.ChildZygoteProcess getProcess()>();

        r72 = r49.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r23 = r49.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        i16 = $r23.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        $r24 = r49.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        r73 = $r24.<android.content.pm.ApplicationInfo: java.lang.String dataDir>;

        $r25 = r49.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        r74 = $r25.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        r75 = r49.<com.android.server.am.ProcessRecord: long[] mDisabledCompatChanges>;

        r76 = new java.lang.StringBuilder;

        specialinvoke r76.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("seq=");

        $l6 = r49.<com.android.server.am.ProcessRecord: long startSeq>;

        virtualinvoke r76.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l6);

        $r28 = newarray (java.lang.String)[1];

        $r29 = virtualinvoke r76.<java.lang.StringBuilder: java.lang.String toString()>();

        $r28[0] = $r29;

        r69 = virtualinvoke r71.<android.os.ChildZygoteProcess: android.os.Process$ProcessStartResult start(java.lang.String,java.lang.String,int,int,int[],int,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,boolean,long[],java.util.Map,java.util.Map,boolean,boolean,java.lang.String[])>(r1, r72, i0, i0, r2, i1, i2, i16, r3, r4, r5, r73, null, r74, 0, z0, r75, r62, r61, 0, 0, $r28);

     label38:
        goto label40;

     label39:
        r77 = r49.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r15 = r49.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        i17 = $r15.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        $r16 = r49.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        r78 = $r16.<android.content.pm.ApplicationInfo: java.lang.String dataDir>;

        $r17 = r49.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        r79 = $r17.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        r80 = r49.<com.android.server.am.ProcessRecord: long[] mDisabledCompatChanges>;

        r81 = new java.lang.StringBuilder;

        specialinvoke r81.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("seq=");

        $l5 = r49.<com.android.server.am.ProcessRecord: long startSeq>;

        virtualinvoke r81.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l5);

        $r20 = newarray (java.lang.String)[1];

        $r21 = virtualinvoke r81.<java.lang.StringBuilder: java.lang.String toString()>();

        $r20[0] = $r21;

        r69 = staticinvoke <android.os.Process: android.os.Process$ProcessStartResult start(java.lang.String,java.lang.String,int,int,int[],int,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,boolean,long[],java.util.Map,java.util.Map,boolean,boolean,java.lang.String[])>(r1, r77, i0, i0, r2, i1, i2, i17, r3, r4, r5, r78, r50, r79, i10, z0, r80, r62, r61, z11, z12, $r20);

     label40:
        specialinvoke r0.<com.android.server.am.ProcessList: void checkSlow(long,java.lang.String)>(l3, "startProcess: returned from zygote!");

     label41:
        staticinvoke <android.os.Trace: void traceEnd(long)>(64L);

        return r69;

     label42:
        $r47 := @caughtexception;

        r70 = $r47;

        goto label47;

     label43:
        $r45 := @caughtexception;

        r70 = $r45;

     label44:
        goto label47;

     label45:
        $r43 := @caughtexception;

        r70 = $r43;

        goto label47;

     label46:
        $r46 := @caughtexception;

        r70 = $r46;

     label47:
        staticinvoke <android.os.Trace: void traceEnd(long)>(64L);

        throw r70;

        catch java.lang.Throwable from label01 to label02 with label46;
        catch java.lang.Throwable from label03 to label04 with label46;
        catch java.lang.Throwable from label04 to label05 with label46;
        catch java.lang.Throwable from label05 to label06 with label46;
        catch java.lang.Throwable from label08 to label09 with label46;
        catch java.lang.Throwable from label10 to label11 with label46;
        catch java.lang.Throwable from label12 to label13 with label45;
        catch java.lang.Throwable from label15 to label16 with label45;
        catch java.lang.Throwable from label17 to label18 with label45;
        catch java.lang.Throwable from label20 to label21 with label45;
        catch java.lang.Throwable from label22 to label23 with label45;
        catch java.lang.Throwable from label25 to label26 with label45;
        catch java.lang.Throwable from label28 to label29 with label45;
        catch java.lang.Throwable from label31 to label32 with label45;
        catch java.lang.Throwable from label33 to label34 with label36;
        catch java.lang.Throwable from label34 to label35 with label43;
        catch java.lang.Throwable from label37 to label38 with label43;
        catch java.lang.Throwable from label39 to label40 with label43;
        catch java.lang.Throwable from label40 to label41 with label42;
    }

    private void updateClientActivitiesOrdering(com.android.server.am.ProcessRecord, int, int, int)
    {
        com.android.server.am.ProcessList r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16, i17, i18, i19, i20, i21, i22, i23, i24, i25, i26, i27, i28, i29, i30, i31, i32, i33;
        com.android.server.am.ProcessRecord r1, $r13, r33, r34, r35, r36, r37;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, z7, z8, z9;
        android.content.pm.ApplicationInfo $r2, $r5, $r10, $r14, $r20, $r21, $r24;
        java.util.ArrayList $r3, $r6, $r8, $r11, $r15, $r17, $r18, $r22, $r25, $r27, $r28, $r30, $r32;
        java.lang.Object $r4, $r7, $r9, $r12, $r19, $r23, $r29;

        r0 := @this: com.android.server.am.ProcessList;

        r33 := @parameter0: com.android.server.am.ProcessRecord;

        i16 := @parameter1: int;

        i0 := @parameter2: int;

        i17 := @parameter3: int;

        $z0 = virtualinvoke r33.<com.android.server.am.ProcessRecord: boolean hasActivitiesOrRecentTasks()>();

        if $z0 != 0 goto label27;

        $z1 = r33.<com.android.server.am.ProcessRecord: boolean treatLikeActivity>;

        if $z1 != 0 goto label27;

        $z2 = virtualinvoke r33.<com.android.server.am.ProcessRecord: boolean hasClientActivities()>();

        if $z2 != 0 goto label01;

        goto label27;

     label01:
        $r2 = r33.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        i1 = $r2.<android.content.pm.ApplicationInfo: int uid>;

        i18 = i17;

        $i2 = r33.<com.android.server.am.ProcessRecord: int connectionGroup>;

        if $i2 <= 0 goto label08;

        i19 = r33.<com.android.server.am.ProcessRecord: int connectionImportance>;

        i20 = i17;

     label02:
        i18 = i17;

        if i20 < i0 goto label08;

        $r22 = r0.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        $r23 = virtualinvoke $r22.<java.util.ArrayList: java.lang.Object get(int)>(i20);

        r1 = (com.android.server.am.ProcessRecord) $r23;

        i21 = i19;

        i22 = i17;

        $r24 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i10 = $r24.<android.content.pm.ApplicationInfo: int uid>;

        if $i10 != i1 goto label07;

        i21 = i19;

        i22 = i17;

        $i12 = r1.<com.android.server.am.ProcessRecord: int connectionGroup>;

        $i11 = r33.<com.android.server.am.ProcessRecord: int connectionGroup>;

        if $i12 != $i11 goto label07;

        if i20 != i17 goto label03;

        $i15 = r1.<com.android.server.am.ProcessRecord: int connectionImportance>;

        if $i15 < i19 goto label03;

        i22 = i17 - 1;

        i21 = r1.<com.android.server.am.ProcessRecord: int connectionImportance>;

        goto label07;

     label03:
        i23 = i16;

     label04:
        z7 = 0;

        i24 = i17;

        if i23 <= i17 goto label06;

        $r28 = r0.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        $r29 = virtualinvoke $r28.<java.util.ArrayList: java.lang.Object get(int)>(i23);

        r34 = (com.android.server.am.ProcessRecord) $r29;

        $i14 = r1.<com.android.server.am.ProcessRecord: int connectionImportance>;

        $i13 = r34.<com.android.server.am.ProcessRecord: int connectionImportance>;

        if $i14 > $i13 goto label05;

        $r30 = r0.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        virtualinvoke $r30.<java.util.ArrayList: java.lang.Object remove(int)>(i20);

        $r32 = r0.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        virtualinvoke $r32.<java.util.ArrayList: void add(int,java.lang.Object)>(i23, r1);

        z7 = 1;

        i24 = i17 - 1;

        goto label06;

     label05:
        i23 = i23 + -1;

        goto label04;

     label06:
        i21 = i19;

        i22 = i24;

        if z7 != 0 goto label07;

        $r25 = r0.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        virtualinvoke $r25.<java.util.ArrayList: java.lang.Object remove(int)>(i20);

        $r27 = r0.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        virtualinvoke $r27.<java.util.ArrayList: void add(int,java.lang.Object)>(i24, r1);

        i22 = i24 - 1;

        i21 = r1.<com.android.server.am.ProcessRecord: int connectionImportance>;

     label07:
        i20 = i20 + -1;

        i19 = i21;

        i17 = i22;

        goto label02;

     label08:
        i25 = i18;

        i26 = i18;

     label09:
        if i25 < i0 goto label26;

        $r3 = r0.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i25);

        r35 = (com.android.server.am.ProcessRecord) $r4;

        $r5 = r35.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i3 = $r5.<android.content.pm.ApplicationInfo: int uid>;

        if $i3 == i1 goto label24;

        i27 = i26;

        if i25 >= i26 goto label18;

        z8 = 0;

        i28 = 0;

        i29 = 0;

        i30 = i25;

     label10:
        i27 = i26;

        if i30 < i0 goto label18;

        $r15 = r0.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        virtualinvoke $r15.<java.util.ArrayList: java.lang.Object remove(int)>(i30);

        $r17 = r0.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        virtualinvoke $r17.<java.util.ArrayList: void add(int,java.lang.Object)>(i26, r35);

        i30 = i30 + -1;

        if i30 >= i0 goto label11;

        i27 = i26;

        goto label18;

     label11:
        $r18 = r0.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        $r19 = virtualinvoke $r18.<java.util.ArrayList: java.lang.Object get(int)>(i30);

        r35 = (com.android.server.am.ProcessRecord) $r19;

        $z3 = virtualinvoke r35.<com.android.server.am.ProcessRecord: boolean hasActivitiesOrRecentTasks()>();

        if $z3 != 0 goto label15;

        $z4 = r35.<com.android.server.am.ProcessRecord: boolean treatLikeActivity>;

        if $z4 == 0 goto label12;

        goto label15;

     label12:
        z9 = z8;

        i31 = i28;

        i32 = i29;

        $z5 = virtualinvoke r35.<com.android.server.am.ProcessRecord: boolean hasClientActivities()>();

        if $z5 == 0 goto label17;

        if z8 == 0 goto label14;

        i27 = i26;

        if i28 == 0 goto label18;

        $r21 = r35.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i8 = $r21.<android.content.pm.ApplicationInfo: int uid>;

        if i28 == $i8 goto label13;

        i27 = i26;

        goto label18;

     label13:
        i27 = i26;

        if i29 == 0 goto label18;

        z9 = z8;

        i31 = i28;

        i32 = i29;

        $i9 = r35.<com.android.server.am.ProcessRecord: int connectionGroup>;

        if i29 == $i9 goto label17;

        i27 = i26;

        goto label18;

     label14:
        z9 = 1;

        $r20 = r35.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        i31 = $r20.<android.content.pm.ApplicationInfo: int uid>;

        i32 = r35.<com.android.server.am.ProcessRecord: int connectionGroup>;

        goto label17;

     label15:
        if z8 == 0 goto label16;

        i27 = i26;

        goto label18;

     label16:
        z9 = 1;

        i32 = i29;

        i31 = i28;

     label17:
        i26 = i26 + -1;

        z8 = z9;

        i28 = i31;

        i29 = i32;

        goto label10;

     label18:
        i27 = i27 + -1;

        if i27 < i0 goto label20;

        $r11 = r0.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        $r12 = virtualinvoke $r11.<java.util.ArrayList: java.lang.Object get(int)>(i27);

        $r13 = (com.android.server.am.ProcessRecord) $r12;

        $r14 = $r13.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i7 = $r14.<android.content.pm.ApplicationInfo: int uid>;

        if $i7 != i1 goto label19;

        goto label20;

     label19:
        goto label18;

     label20:
        i26 = i27;

        if i27 < i0 goto label23;

        $r6 = r0.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(i27);

        r36 = (com.android.server.am.ProcessRecord) $r7;

        i33 = i27;

     label21:
        i33 = i33 + -1;

        i26 = i33;

        if i33 < i0 goto label23;

        $r8 = r0.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        $r9 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object get(int)>(i33);

        r37 = (com.android.server.am.ProcessRecord) $r9;

        i26 = i33;

        $r10 = r37.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i4 = $r10.<android.content.pm.ApplicationInfo: int uid>;

        if $i4 != i1 goto label23;

        $i6 = r37.<com.android.server.am.ProcessRecord: int connectionGroup>;

        $i5 = r36.<com.android.server.am.ProcessRecord: int connectionGroup>;

        if $i6 == $i5 goto label22;

        i26 = i33;

        goto label23;

     label22:
        goto label21;

     label23:
        i25 = i26;

        goto label25;

     label24:
        i25 = i25 + -1;

     label25:
        goto label09;

     label26:
        return;

     label27:
        return;
    }

    private void updateOomLevels(int, int, boolean)
    {
        com.android.server.am.ProcessList r0;
        boolean z0, z2;
        int i0, i1, i2, i3, $i6, $i7, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, i43, i44, $i45, i46, $i47, i48, $i49, $i50, i51, i52, i53, i54, i55, i56, i57, i58;
        long $l4, $l5, $l11, $l12, $l13;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, f15, f16, f17, $f18, $f19, $f20, $f21;
        byte $b8, $b9, $b10;
        android.content.res.Resources $r1, $r2, $r13, $r14;
        int[] $r3, $r5, $r7, $r9, $r11, $r12, $r16, $r17, r18, r19, r20, r21;
        java.lang.String $r6;
        java.lang.String[] $r15;
        java.nio.ByteBuffer r22;

        r0 := @this: com.android.server.am.ProcessList;

        i43 := @parameter0: int;

        i44 := @parameter1: int;

        z0 := @parameter2: boolean;

        $l4 = r0.<com.android.server.am.ProcessList: long mTotalMemMb>;

        $l5 = $l4 - 350L;

        $f0 = (float) $l5;

        f15 = $f0 / 350.0F;

        $i6 = i43 * i44;

        $f2 = (float) $i6;

        $f1 = (float) 384000;

        $f4 = $f2 - $f1;

        $i7 = 1024000 - 384000;

        $f3 = (float) $i7;

        f16 = $f4 / $f3;

        $b8 = f15 cmpl f16;

        if $b8 <= 0 goto label01;

        f16 = f15;

        goto label01;

     label01:
        $b9 = f16 cmpg 0.0F;

        if $b9 >= 0 goto label02;

        f17 = 0.0F;

        goto label03;

     label02:
        f17 = f16;

        $b10 = f16 cmpl 1.0F;

        if $b10 <= 0 goto label03;

        f17 = 1.0F;

     label03:
        $r13 = staticinvoke <android.content.res.Resources: android.content.res.Resources getSystem()>();

        i0 = virtualinvoke $r13.<android.content.res.Resources: int getInteger(int)>(17694832);

        $r14 = staticinvoke <android.content.res.Resources: android.content.res.Resources getSystem()>();

        i1 = virtualinvoke $r14.<android.content.res.Resources: int getInteger(int)>(17694831);

        $r15 = <android.os.Build: java.lang.String[] SUPPORTED_64_BIT_ABIS>;

        $i45 = lengthof $r15;

        if $i45 <= 0 goto label04;

        z2 = 1;

        goto label05;

     label04:
        z2 = 0;

     label05:
        i46 = 0;

     label06:
        $r16 = r0.<com.android.server.am.ProcessList: int[] mOomAdj>;

        $i47 = lengthof $r16;

        if i46 >= $i47 goto label09;

        $r11 = r0.<com.android.server.am.ProcessList: int[] mOomMinFreeLow>;

        i2 = $r11[i46];

        $r12 = r0.<com.android.server.am.ProcessList: int[] mOomMinFreeHigh>;

        i3 = $r12[i46];

        i48 = i3;

        if z2 == 0 goto label08;

        if i46 != 4 goto label07;

        $i42 = i3 * 3;

        i48 = $i42 / 2;

        goto label08;

     label07:
        i48 = i3;

        if i46 != 5 goto label08;

        $i41 = i3 * 7;

        i48 = $i41 / 4;

     label08:
        $r17 = r0.<com.android.server.am.ProcessList: int[] mOomMinFree>;

        $f18 = (float) i2;

        $i49 = i48 - i2;

        $f19 = (float) $i49;

        $f20 = $f19 * f17;

        $f21 = $f18 + $f20;

        $i50 = (int) $f21;

        $r17[i46] = $i50;

        i46 = i46 + 1;

        goto label06;

     label09:
        if i1 < 0 goto label11;

        i51 = 0;

     label10:
        r18 = r0.<com.android.server.am.ProcessList: int[] mOomAdj>;

        $i35 = lengthof r18;

        if i51 >= $i35 goto label11;

        r19 = r0.<com.android.server.am.ProcessList: int[] mOomMinFree>;

        $f11 = (float) i1;

        $i36 = r19[i51];

        $f10 = (float) $i36;

        $f13 = $f11 * $f10;

        $i37 = lengthof r18;

        $i38 = $i37 - 1;

        $i39 = r19[$i38];

        $f12 = (float) $i39;

        $f14 = $f13 / $f12;

        $i40 = (int) $f14;

        r19[i51] = $i40;

        i51 = i51 + 1;

        goto label10;

     label11:
        if i0 == 0 goto label14;

        i52 = 0;

     label12:
        r20 = r0.<com.android.server.am.ProcessList: int[] mOomAdj>;

        $i26 = lengthof r20;

        if i52 >= $i26 goto label14;

        r21 = r0.<com.android.server.am.ProcessList: int[] mOomMinFree>;

        $i32 = r21[i52];

        $f6 = (float) i0;

        $i27 = r21[i52];

        $f5 = (float) $i27;

        $f8 = $f6 * $f5;

        $i28 = lengthof r20;

        $i29 = $i28 - 1;

        $i30 = r21[$i29];

        $f7 = (float) $i30;

        $f9 = $f8 / $f7;

        $i31 = (int) $f9;

        $i33 = $i32 + $i31;

        r21[i52] = $i33;

        $i34 = r21[i52];

        if $i34 >= 0 goto label13;

        r21[i52] = 0;

     label13:
        i52 = i52 + 1;

        goto label12;

     label14:
        $l11 = virtualinvoke r0.<com.android.server.am.ProcessList: long getMemLevel(int)>(999);

        $l12 = $l11 / 1024L;

        $l13 = $l12 / 3L;

        r0.<com.android.server.am.ProcessList: long mCachedRestoreLevel> = $l13;

        $i14 = i43 * i44;

        $i15 = $i14 * 4;

        $i16 = $i15 * 3;

        i53 = $i16 / 1024;

        $r1 = staticinvoke <android.content.res.Resources: android.content.res.Resources getSystem()>();

        i54 = virtualinvoke $r1.<android.content.res.Resources: int getInteger(int)>(17694812);

        $r2 = staticinvoke <android.content.res.Resources: android.content.res.Resources getSystem()>();

        i55 = virtualinvoke $r2.<android.content.res.Resources: int getInteger(int)>(17694811);

        if i55 < 0 goto label15;

        i53 = i55;

     label15:
        i56 = i53;

        if i54 == 0 goto label16;

        i57 = i53 + i54;

        i56 = i57;

        if i57 >= 0 goto label16;

        i56 = 0;

     label16:
        if z0 == 0 goto label19;

        $r3 = r0.<com.android.server.am.ProcessList: int[] mOomAdj>;

        $i17 = lengthof $r3;

        $i18 = $i17 * 2;

        $i19 = $i18 + 1;

        $i20 = $i19 * 4;

        r22 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>($i20);

        virtualinvoke r22.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>(0);

        i58 = 0;

     label17:
        $r5 = r0.<com.android.server.am.ProcessList: int[] mOomAdj>;

        $i21 = lengthof $r5;

        if i58 >= $i21 goto label18;

        $r7 = r0.<com.android.server.am.ProcessList: int[] mOomMinFree>;

        $i22 = $r7[i58];

        $i23 = $i22 * 1024;

        $i24 = $i23 / 4096;

        virtualinvoke r22.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>($i24);

        $r9 = r0.<com.android.server.am.ProcessList: int[] mOomAdj>;

        $i25 = $r9[i58];

        virtualinvoke r22.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>($i25);

        i58 = i58 + 1;

        goto label17;

     label18:
        staticinvoke <com.android.server.am.ProcessList: boolean writeLmkd(java.nio.ByteBuffer,java.nio.ByteBuffer)>(r22, null);

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i56);

        staticinvoke <android.os.SystemProperties: void set(java.lang.String,java.lang.String)>("sys.sysctl.extra_free_kbytes", $r6);

        r0.<com.android.server.am.ProcessList: boolean mOomLevelsSet> = 1;

     label19:
        return;
    }

    private static boolean writeLmkd(java.nio.ByteBuffer, java.nio.ByteBuffer)
    {
        java.nio.ByteBuffer r0, r1;
        com.android.server.am.ProcessList$KillHandler r2;
        com.android.server.am.LmkdConnection $r3, $r4, $r6;
        boolean $z0, $z1, $z3;
        android.os.Message $r5;

        r0 := @parameter0: java.nio.ByteBuffer;

        r1 := @parameter1: java.nio.ByteBuffer;

        $r3 = <com.android.server.am.ProcessList: com.android.server.am.LmkdConnection sLmkdConnection>;

        $z0 = virtualinvoke $r3.<com.android.server.am.LmkdConnection: boolean isConnected()>();

        if $z0 != 0 goto label1;

        r2 = <com.android.server.am.ProcessList: com.android.server.am.ProcessList$KillHandler sKillHandler>;

        $r5 = virtualinvoke r2.<com.android.server.am.ProcessList$KillHandler: android.os.Message obtainMessage(int)>(4001);

        virtualinvoke r2.<com.android.server.am.ProcessList$KillHandler: boolean sendMessage(android.os.Message)>($r5);

        $r6 = <com.android.server.am.ProcessList: com.android.server.am.LmkdConnection sLmkdConnection>;

        $z3 = virtualinvoke $r6.<com.android.server.am.LmkdConnection: boolean waitForConnection(long)>(3000L);

        if $z3 != 0 goto label1;

        return 0;

     label1:
        $r4 = <com.android.server.am.ProcessList: com.android.server.am.LmkdConnection sLmkdConnection>;

        $z1 = virtualinvoke $r4.<com.android.server.am.LmkdConnection: boolean exchange(java.nio.ByteBuffer,java.nio.ByteBuffer)>(r0, r1);

        return $z1;
    }

    final void addProcessNameLocked(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ProcessList r0;
        com.android.server.am.ProcessRecord r1, r20;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18;
        java.lang.String $r2, $r15, $r19, $r30;
        android.util.SparseArray $r4;
        com.android.server.am.UidRecord $r5, r24, r25;
        com.android.server.am.ActivityManagerService $r6, $r8, $r27;
        int[] $r7;
        com.android.server.am.PendingTempWhitelists $r9;
        java.lang.StringBuilder $r10, $r16;
        boolean $z1, $z2;
        com.android.server.am.ActiveUids $r23, $r26;
        android.util.ArraySet $r28;
        com.android.server.am.ProcessList$MyProcessMap $r29;

        r0 := @this: com.android.server.am.ProcessList;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        $r2 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $i0 = r1.<com.android.server.am.ProcessRecord: int uid>;

        r20 = virtualinvoke r0.<com.android.server.am.ProcessList: com.android.server.am.ProcessRecord removeProcessNameLocked(java.lang.String,int)>($r2, $i0);

        if r20 != r1 goto label1;

        $z1 = virtualinvoke r1.<com.android.server.am.ProcessRecord: boolean isPersistent()>();

        if $z1 == 0 goto label1;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Re-adding persistent process ");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r19);

        goto label2;

     label1:
        if r20 == null goto label2;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Already have existing proc ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r20);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" when adding ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r15 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("ActivityManager", $r15);

     label2:
        $r23 = r0.<com.android.server.am.ProcessList: com.android.server.am.ActiveUids mActiveUids>;

        $i10 = r1.<com.android.server.am.ProcessRecord: int uid>;

        r24 = virtualinvoke $r23.<com.android.server.am.ActiveUids: com.android.server.am.UidRecord get(int)>($i10);

        r25 = r24;

        if r24 != null goto label5;

        $r5 = new com.android.server.am.UidRecord;

        $i2 = r1.<com.android.server.am.ProcessRecord: int uid>;

        specialinvoke $r5.<com.android.server.am.UidRecord: void <init>(int)>($i2);

        r25 = $r5;

        $r6 = r0.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService>;

        $r7 = $r6.<com.android.server.am.ActivityManagerService: int[] mDeviceIdleTempWhitelist>;

        $i3 = r1.<com.android.server.am.ProcessRecord: int uid>;

        $i4 = staticinvoke <android.os.UserHandle: int getAppId(int)>($i3);

        $i5 = staticinvoke <java.util.Arrays: int binarySearch(int[],int)>($r7, $i4);

        if $i5 >= 0 goto label3;

        $r8 = r0.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService>;

        $r9 = $r8.<com.android.server.am.ActivityManagerService: com.android.server.am.PendingTempWhitelists mPendingTempWhitelist>;

        $i6 = r1.<com.android.server.am.ProcessRecord: int uid>;

        $i7 = virtualinvoke $r9.<com.android.server.am.PendingTempWhitelists: int indexOfKey(int)>($i6);

        if $i7 < 0 goto label4;

     label3:
        $r5.<com.android.server.am.UidRecord: boolean curWhitelist> = 1;

        $r5.<com.android.server.am.UidRecord: boolean setWhitelist> = 1;

     label4:
        virtualinvoke $r5.<com.android.server.am.UidRecord: void updateHasInternetPermission()>();

        $r26 = r0.<com.android.server.am.ProcessList: com.android.server.am.ActiveUids mActiveUids>;

        $i11 = r1.<com.android.server.am.ProcessRecord: int uid>;

        virtualinvoke $r26.<com.android.server.am.ActiveUids: void put(int,com.android.server.am.UidRecord)>($i11, $r5);

        $i12 = $r5.<com.android.server.am.UidRecord: int uid>;

        staticinvoke <com.android.server.am.EventLogTags: void writeAmUidRunning(int)>($i12);

        $r27 = r0.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService>;

        $i13 = $r5.<com.android.server.am.UidRecord: int uid>;

        $i14 = virtualinvoke $r5.<com.android.server.am.UidRecord: int getCurProcState()>();

        $i15 = $r5.<com.android.server.am.UidRecord: int curCapability>;

        virtualinvoke $r27.<com.android.server.am.ActivityManagerService: void noteUidProcessState(int,int,int)>($i13, $i14, $i15);

     label5:
        r1.<com.android.server.am.ProcessRecord: com.android.server.am.UidRecord uidRecord> = r25;

        $r28 = r25.<com.android.server.am.UidRecord: android.util.ArraySet procRecords>;

        virtualinvoke $r28.<android.util.ArraySet: boolean add(java.lang.Object)>(r1);

        r1.<com.android.server.am.ProcessRecord: int renderThreadTid> = 0;

        $i16 = r25.<com.android.server.am.UidRecord: int numProcs>;

        $i17 = $i16 + 1;

        r25.<com.android.server.am.UidRecord: int numProcs> = $i17;

        $r29 = r0.<com.android.server.am.ProcessList: com.android.server.am.ProcessList$MyProcessMap mProcessNames>;

        $r30 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $i18 = r1.<com.android.server.am.ProcessRecord: int uid>;

        virtualinvoke $r29.<com.android.server.am.ProcessList$MyProcessMap: com.android.server.am.ProcessRecord put(java.lang.String,int,com.android.server.am.ProcessRecord)>($r30, $i18, r1);

        $z2 = r1.<com.android.server.am.ProcessRecord: boolean isolated>;

        if $z2 == 0 goto label6;

        $r4 = r0.<com.android.server.am.ProcessList: android.util.SparseArray mIsolatedProcesses>;

        $i1 = r1.<com.android.server.am.ProcessRecord: int uid>;

        virtualinvoke $r4.<android.util.SparseArray: void put(int,java.lang.Object)>($i1, r1);

     label6:
        return;
    }

    void applyDisplaySize(com.android.server.wm.WindowManagerService)
    {
        com.android.server.am.ProcessList r0;
        com.android.server.wm.WindowManagerService r1;
        boolean $z0;
        android.graphics.Point $r3;
        int $i0, $i1, $i2, $i3;

        r0 := @this: com.android.server.am.ProcessList;

        r1 := @parameter0: com.android.server.wm.WindowManagerService;

        $z0 = r0.<com.android.server.am.ProcessList: boolean mHaveDisplaySize>;

        if $z0 != 0 goto label1;

        $r3 = new android.graphics.Point;

        specialinvoke $r3.<android.graphics.Point: void <init>()>();

        virtualinvoke r1.<com.android.server.wm.WindowManagerService: void getBaseDisplaySize(int,android.graphics.Point)>(0, $r3);

        $i0 = $r3.<android.graphics.Point: int x>;

        if $i0 == 0 goto label1;

        $i1 = $r3.<android.graphics.Point: int y>;

        if $i1 == 0 goto label1;

        $i3 = $r3.<android.graphics.Point: int x>;

        $i2 = $r3.<android.graphics.Point: int y>;

        specialinvoke r0.<com.android.server.am.ProcessList: void updateOomLevels(int,int,boolean)>($i3, $i2, 1);

        r0.<com.android.server.am.ProcessList: boolean mHaveDisplaySize> = 1;

     label1:
        return;
    }

    void clearAllDnsCacheLocked()
    {
        com.android.server.am.ProcessList r0;
        com.android.server.am.ProcessRecord r1;
        java.util.ArrayList $r2, $r3;
        int $i0, i2;
        java.lang.Object $r4;
        android.app.IApplicationThread $r5, $r6;
        android.os.RemoteException $r7;
        java.lang.StringBuilder $r8;
        android.content.pm.ApplicationInfo $r10;
        java.lang.String $r11, $r13;

        r0 := @this: com.android.server.am.ProcessList;

        $r2 = r0.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i2 = $i0 - 1;

     label1:
        if i2 < 0 goto label6;

        $r3 = r0.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r1 = (com.android.server.am.ProcessRecord) $r4;

        $r5 = r1.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r5 == null goto label5;

     label2:
        $r6 = r1.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        interfaceinvoke $r6.<android.app.IApplicationThread: void clearDnsCache()>();

     label3:
        goto label5;

     label4:
        $r7 := @caughtexception;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to clear dns cache for: ");

        $r10 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r11 = $r10.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r13);

     label5:
        i2 = i2 + -1;

        goto label1;

     label6:
        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    java.util.ArrayList collectProcessesLocked(int, boolean, java.lang.String[])
    {
        com.android.server.am.ProcessList r0;
        int i0, $i1, $i3, $i4, $i5, $i6, i8, i9;
        boolean z0, $z2, $z5;
        java.lang.String $r2, $r4, $r9, $r15, $r16;
        char $c2;
        java.util.ArrayList $r3, $r5, $r6, r17, $r18, $r19;
        java.lang.Object $r7;
        com.android.server.am.ProcessRecord$PackageList $r8, $r10;
        java.lang.Throwable $r11;
        java.lang.String[] r12;
        com.android.server.am.ProcessRecord r14;

        r0 := @this: com.android.server.am.ProcessList;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r12 := @parameter2: java.lang.String[];

        if r12 == null goto label11;

        $i1 = lengthof r12;

        if $i1 <= i0 goto label11;

        $r2 = r12[i0];

        $c2 = virtualinvoke $r2.<java.lang.String: char charAt(int)>(0);

        if $c2 == 45 goto label11;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

     label01:
        $r4 = r12[i0];

        i8 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);

     label02:
        goto label04;

     label03:
        $r11 := @caughtexception;

        i8 = -1;

     label04:
        $r5 = r0.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        $i3 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        i9 = $i3 - 1;

     label05:
        if i9 < 0 goto label09;

        $r6 = r0.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(i9);

        r14 = (com.android.server.am.ProcessRecord) $r7;

        $i5 = r14.<com.android.server.am.ProcessRecord: int pid>;

        if $i5 <= 0 goto label06;

        $i6 = r14.<com.android.server.am.ProcessRecord: int pid>;

        if $i6 != i8 goto label06;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r14);

        goto label08;

     label06:
        if z0 == 0 goto label07;

        $r8 = r14.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        if $r8 == null goto label07;

        $r10 = r14.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        $r9 = r12[i0];

        $z2 = virtualinvoke $r10.<com.android.server.am.ProcessRecord$PackageList: boolean containsKey(java.lang.Object)>($r9);

        if $z2 == 0 goto label07;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r14);

        goto label08;

     label07:
        $r15 = r14.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r16 = r12[i0];

        $z5 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>($r16);

        if $z5 == 0 goto label08;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r14);

     label08:
        i9 = i9 + -1;

        goto label05;

     label09:
        $i4 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if $i4 > 0 goto label10;

        return null;

     label10:
        r17 = $r3;

        goto label12;

     label11:
        $r18 = new java.util.ArrayList;

        $r19 = r0.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        specialinvoke $r18.<java.util.ArrayList: void <init>(java.util.Collection)>($r19);

        r17 = $r18;

     label12:
        return r17;

        catch java.lang.NumberFormatException from label01 to label02 with label03;
    }

    void doStopUidForIdleUidsLocked()
    {
        com.android.server.am.ProcessList r0;
        int i0, $i1, $i2, i3;
        com.android.server.am.UidRecord r1;
        com.android.server.am.ActiveUids $r2, $r3, $r4;
        boolean $z0, $z1;
        com.android.server.am.ActivityManagerService $r5;

        r0 := @this: com.android.server.am.ProcessList;

        $r2 = r0.<com.android.server.am.ProcessList: com.android.server.am.ActiveUids mActiveUids>;

        i0 = virtualinvoke $r2.<com.android.server.am.ActiveUids: int size()>();

        i3 = 0;

     label1:
        if i3 >= i0 goto label5;

        $r3 = r0.<com.android.server.am.ProcessList: com.android.server.am.ActiveUids mActiveUids>;

        $i1 = virtualinvoke $r3.<com.android.server.am.ActiveUids: int keyAt(int)>(i3);

        $z0 = staticinvoke <android.os.UserHandle: boolean isCore(int)>($i1);

        if $z0 == 0 goto label2;

        goto label4;

     label2:
        $r4 = r0.<com.android.server.am.ProcessList: com.android.server.am.ActiveUids mActiveUids>;

        r1 = virtualinvoke $r4.<com.android.server.am.ActiveUids: com.android.server.am.UidRecord valueAt(int)>(i3);

        $z1 = r1.<com.android.server.am.UidRecord: boolean idle>;

        if $z1 != 0 goto label3;

        goto label4;

     label3:
        $r5 = r0.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService>;

        $i2 = r1.<com.android.server.am.UidRecord: int uid>;

        virtualinvoke $r5.<com.android.server.am.ActivityManagerService: void doStopUidLocked(int,com.android.server.am.UidRecord)>($i2, r1);

     label4:
        i3 = i3 + 1;

        goto label1;

     label5:
        return;
    }

    void dumpLruListHeaderLocked(java.io.PrintWriter)
    {
        com.android.server.am.ProcessList r0;
        java.io.PrintWriter r1;
        java.util.ArrayList $r2, $r3, $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;

        r0 := @this: com.android.server.am.ProcessList;

        r1 := @parameter0: java.io.PrintWriter;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  Process LRU list (sorted by oom_adj, ");

        $r2 = r0.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i0);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" total, non-act at ");

        $r3 = r0.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        $i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        $i2 = r0.<com.android.server.am.ProcessList: int mLruProcessActivityStart>;

        $i3 = $i1 - $i2;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i3);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(", non-svc at ");

        $r4 = r0.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        $i4 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        $i5 = r0.<com.android.server.am.ProcessList: int mLruProcessServiceStart>;

        $i6 = $i4 - $i5;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i6);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("):");

        return;
    }

    void fillInProcMemInfoLocked(com.android.server.am.ProcessRecord, android.app.ActivityManager$RunningAppProcessInfo, int)
    {
        com.android.server.am.ProcessList r0;
        com.android.server.am.ProcessRecord r1, $r8;
        android.app.ActivityManager$RunningAppProcessInfo r2;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i10, $i11, $i12, $i13, $i14, $i15;
        boolean z0, $z1, $z2, z3;
        android.content.pm.ApplicationInfo $r3;
        com.android.server.am.ActivityManagerService $r4, $r7;
        com.android.server.wm.ActivityTaskManagerInternal $r5;
        com.android.server.wm.WindowProcessController $r6;
        long $l9;

        r0 := @this: com.android.server.am.ProcessList;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        r2 := @parameter1: android.app.ActivityManager$RunningAppProcessInfo;

        i0 := @parameter2: int;

        $i2 = r1.<com.android.server.am.ProcessRecord: int pid>;

        r2.<android.app.ActivityManager$RunningAppProcessInfo: int pid> = $i2;

        $r3 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i3 = $r3.<android.content.pm.ApplicationInfo: int uid>;

        r2.<android.app.ActivityManager$RunningAppProcessInfo: int uid> = $i3;

        $r4 = r0.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService>;

        $r5 = $r4.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerInternal mAtmInternal>;

        $r6 = virtualinvoke r1.<com.android.server.am.ProcessRecord: com.android.server.wm.WindowProcessController getWindowProcessController()>();

        z0 = virtualinvoke $r5.<com.android.server.wm.ActivityTaskManagerInternal: boolean isHeavyWeightProcess(com.android.server.wm.WindowProcessController)>($r6);

        z3 = 1;

        if z0 == 0 goto label1;

        $i14 = r2.<android.app.ActivityManager$RunningAppProcessInfo: int flags>;

        $i15 = $i14 | 1;

        r2.<android.app.ActivityManager$RunningAppProcessInfo: int flags> = $i15;

     label1:
        $z1 = virtualinvoke r1.<com.android.server.am.ProcessRecord: boolean isPersistent()>();

        if $z1 == 0 goto label2;

        $i12 = r2.<android.app.ActivityManager$RunningAppProcessInfo: int flags>;

        $i13 = $i12 | 2;

        r2.<android.app.ActivityManager$RunningAppProcessInfo: int flags> = $i13;

     label2:
        $z2 = virtualinvoke r1.<com.android.server.am.ProcessRecord: boolean hasActivities()>();

        if $z2 == 0 goto label3;

        $i10 = r2.<android.app.ActivityManager$RunningAppProcessInfo: int flags>;

        $i11 = $i10 | 4;

        r2.<android.app.ActivityManager$RunningAppProcessInfo: int flags> = $i11;

     label3:
        $i4 = r1.<com.android.server.am.ProcessRecord: int trimMemoryLevel>;

        r2.<android.app.ActivityManager$RunningAppProcessInfo: int lastTrimLevel> = $i4;

        i1 = r1.<com.android.server.am.ProcessRecord: int curAdj>;

        $i5 = virtualinvoke r1.<com.android.server.am.ProcessRecord: int getCurProcState()>();

        $i6 = staticinvoke <com.android.server.am.ProcessList: int procStateToImportance(int,int,android.app.ActivityManager$RunningAppProcessInfo,int)>($i5, i1, r2, i0);

        r2.<android.app.ActivityManager$RunningAppProcessInfo: int importance> = $i6;

        $i7 = r1.<com.android.server.am.ProcessRecord: int adjTypeCode>;

        r2.<android.app.ActivityManager$RunningAppProcessInfo: int importanceReasonCode> = $i7;

        $i8 = virtualinvoke r1.<com.android.server.am.ProcessRecord: int getCurProcState()>();

        r2.<android.app.ActivityManager$RunningAppProcessInfo: int processState> = $i8;

        $r7 = r0.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService>;

        $r8 = virtualinvoke $r7.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord getTopAppLocked()>();

        if r1 != $r8 goto label4;

        goto label5;

     label4:
        z3 = 0;

     label5:
        r2.<android.app.ActivityManager$RunningAppProcessInfo: boolean isFocused> = z3;

        $l9 = r1.<com.android.server.am.ProcessRecord: long lastActivityTime>;

        r2.<android.app.ActivityManager$RunningAppProcessInfo: long lastActivityTime> = $l9;

        return;
    }

    com.android.server.am.ProcessRecord findAppProcessLocked(android.os.IBinder, java.lang.String)
    {
        com.android.server.am.ProcessList r0;
        android.os.IBinder r1, $r22;
        java.lang.String r2, $r15;
        int i0, i1, $i2, $i3, i5, i6;
        android.util.SparseArray r3;
        com.android.server.am.ProcessList$MyProcessMap $r4, $r16;
        android.util.ArrayMap $r5, $r17;
        java.lang.StringBuilder $r6;
        java.lang.Object $r18, $r19;
        android.app.IApplicationThread $r20, $r21;
        com.android.server.am.ProcessRecord r23;

        r0 := @this: com.android.server.am.ProcessList;

        r1 := @parameter0: android.os.IBinder;

        r2 := @parameter1: java.lang.String;

        $r4 = r0.<com.android.server.am.ProcessList: com.android.server.am.ProcessList$MyProcessMap mProcessNames>;

        $r5 = virtualinvoke $r4.<com.android.server.am.ProcessList$MyProcessMap: android.util.ArrayMap getMap()>();

        i0 = virtualinvoke $r5.<android.util.ArrayMap: int size()>();

        i5 = 0;

     label1:
        if i5 >= i0 goto label5;

        $r16 = r0.<com.android.server.am.ProcessList: com.android.server.am.ProcessList$MyProcessMap mProcessNames>;

        $r17 = virtualinvoke $r16.<com.android.server.am.ProcessList$MyProcessMap: android.util.ArrayMap getMap()>();

        $r18 = virtualinvoke $r17.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i5);

        r3 = (android.util.SparseArray) $r18;

        i1 = virtualinvoke r3.<android.util.SparseArray: int size()>();

        i6 = 0;

     label2:
        if i6 >= i1 goto label4;

        $r19 = virtualinvoke r3.<android.util.SparseArray: java.lang.Object valueAt(int)>(i6);

        r23 = (com.android.server.am.ProcessRecord) $r19;

        $r20 = r23.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r20 == null goto label3;

        $r21 = r23.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r22 = interfaceinvoke $r21.<android.app.IApplicationThread: android.os.IBinder asBinder()>();

        if $r22 != r1 goto label3;

        return r23;

     label3:
        i6 = i6 + 1;

        goto label2;

     label4:
        i5 = i5 + 1;

        goto label1;

     label5:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t find mystery application for ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from pid=");

        $i2 = staticinvoke <android.os.Binder: int getCallingPid()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" uid=");

        $i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r15 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r15);

        return null;
    }

    int getBlockStateForUid(com.android.server.am.UidRecord)
    {
        com.android.server.am.ProcessList r0;
        com.android.server.am.UidRecord r1;
        int $i0, $i1, $i2, $i3;
        boolean $z0, $z1, $z2, z3, $z4, z5;

        r0 := @this: com.android.server.am.ProcessList;

        r1 := @parameter0: com.android.server.am.UidRecord;

        $i0 = virtualinvoke r1.<com.android.server.am.UidRecord: int getCurProcState()>();

        $z0 = staticinvoke <android.net.NetworkPolicyManager: boolean isProcStateAllowedWhileIdleOrPowerSaveMode(int)>($i0);

        if $z0 != 0 goto label2;

        $i2 = virtualinvoke r1.<com.android.server.am.UidRecord: int getCurProcState()>();

        $z2 = staticinvoke <android.net.NetworkPolicyManager: boolean isProcStateAllowedWhileOnRestrictBackground(int)>($i2);

        if $z2 == 0 goto label1;

        goto label2;

     label1:
        z3 = 0;

        goto label3;

     label2:
        z3 = 1;

     label3:
        $i3 = r1.<com.android.server.am.UidRecord: int setProcState>;

        $z4 = staticinvoke <android.net.NetworkPolicyManager: boolean isProcStateAllowedWhileIdleOrPowerSaveMode(int)>($i3);

        if $z4 != 0 goto label5;

        $i1 = r1.<com.android.server.am.UidRecord: int setProcState>;

        $z1 = staticinvoke <android.net.NetworkPolicyManager: boolean isProcStateAllowedWhileOnRestrictBackground(int)>($i1);

        if $z1 == 0 goto label4;

        goto label5;

     label4:
        z5 = 0;

        goto label6;

     label5:
        z5 = 1;

     label6:
        if z5 != 0 goto label7;

        if z3 == 0 goto label7;

        return 1;

     label7:
        if z5 == 0 goto label8;

        if z3 != 0 goto label8;

        return 2;

     label8:
        return 0;
    }

    long getCachedRestoreThresholdKb()
    {
        com.android.server.am.ProcessList r0;
        long $l0;

        r0 := @this: com.android.server.am.ProcessList;

        $l0 = r0.<com.android.server.am.ProcessList: long mCachedRestoreLevel>;

        return $l0;
    }

    final com.android.server.am.ProcessRecord getLRURecordForAppLocked(android.app.IApplicationThread)
    {
        com.android.server.am.ProcessList r0;
        com.android.server.am.ProcessRecord r1;
        java.util.ArrayList $r2, $r3;
        int $i0, i1;
        java.lang.Object $r4;
        android.app.IApplicationThread $r5, $r6, r8;
        android.os.IBinder $r7, r9;

        r0 := @this: com.android.server.am.ProcessList;

        r8 := @parameter0: android.app.IApplicationThread;

        if r8 != null goto label1;

        return null;

     label1:
        r9 = interfaceinvoke r8.<android.app.IApplicationThread: android.os.IBinder asBinder()>();

        $r2 = r0.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i1 = $i0 - 1;

     label2:
        if i1 < 0 goto label4;

        $r3 = r0.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r1 = (com.android.server.am.ProcessRecord) $r4;

        $r5 = r1.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r5 == null goto label3;

        $r6 = r1.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r7 = interfaceinvoke $r6.<android.app.IApplicationThread: android.os.IBinder asBinder()>();

        if $r7 != r9 goto label3;

        return r1;

     label3:
        i1 = i1 + -1;

        goto label2;

     label4:
        return null;
    }

    int getLruSizeLocked()
    {
        com.android.server.am.ProcessList r0;
        java.util.ArrayList $r1;
        int $i0;

        r0 := @this: com.android.server.am.ProcessList;

        $r1 = r0.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        return $i0;
    }

    long getMemLevel(int)
    {
        com.android.server.am.ProcessList r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i7, $i8, $i9, i11;
        int[] r1, $r2, $r3;
        long $l6, $l10;

        r0 := @this: com.android.server.am.ProcessList;

        i0 := @parameter0: int;

        i11 = 0;

     label1:
        r1 = r0.<com.android.server.am.ProcessList: int[] mOomAdj>;

        $i1 = lengthof r1;

        if i11 >= $i1 goto label3;

        $i7 = r1[i11];

        if i0 > $i7 goto label2;

        $r3 = r0.<com.android.server.am.ProcessList: int[] mOomMinFree>;

        $i8 = $r3[i11];

        $i9 = $i8 * 1024;

        $l10 = (long) $i9;

        return $l10;

     label2:
        i11 = i11 + 1;

        goto label1;

     label3:
        $r2 = r0.<com.android.server.am.ProcessList: int[] mOomMinFree>;

        $i2 = lengthof r1;

        $i3 = $i2 - 1;

        $i4 = $r2[$i3];

        $i5 = $i4 * 1024;

        $l6 = (long) $i5;

        return $l6;
    }

    void getMemoryInfo(android.app.ActivityManager$MemoryInfo)
    {
        com.android.server.am.ProcessList r0;
        android.app.ActivityManager$MemoryInfo r1;
        long l0, l1, $l2, $l3, $l4, $l5, $l6, $l7, $l9, $l10, $l11;
        byte $b8;
        boolean z0;

        r0 := @this: com.android.server.am.ProcessList;

        r1 := @parameter0: android.app.ActivityManager$MemoryInfo;

        l0 = virtualinvoke r0.<com.android.server.am.ProcessList: long getMemLevel(int)>(600);

        l1 = virtualinvoke r0.<com.android.server.am.ProcessList: long getMemLevel(int)>(900);

        $l2 = staticinvoke <android.os.Process: long getFreeMemory()>();

        r1.<android.app.ActivityManager$MemoryInfo: long availMem> = $l2;

        $l3 = staticinvoke <android.os.Process: long getTotalMemory()>();

        r1.<android.app.ActivityManager$MemoryInfo: long totalMem> = $l3;

        r1.<android.app.ActivityManager$MemoryInfo: long threshold> = l0;

        $l7 = r1.<android.app.ActivityManager$MemoryInfo: long availMem>;

        $l4 = l1 - l0;

        $l5 = $l4 / 2L;

        $l6 = $l5 + l0;

        $b8 = $l7 cmp $l6;

        if $b8 >= 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        r1.<android.app.ActivityManager$MemoryInfo: boolean lowMemory> = z0;

        r1.<android.app.ActivityManager$MemoryInfo: long hiddenAppThreshold> = l1;

        $l9 = virtualinvoke r0.<com.android.server.am.ProcessList: long getMemLevel(int)>(500);

        r1.<android.app.ActivityManager$MemoryInfo: long secondaryServerThreshold> = $l9;

        $l10 = virtualinvoke r0.<com.android.server.am.ProcessList: long getMemLevel(int)>(100);

        r1.<android.app.ActivityManager$MemoryInfo: long visibleAppThreshold> = $l10;

        $l11 = virtualinvoke r0.<com.android.server.am.ProcessList: long getMemLevel(int)>(0);

        r1.<android.app.ActivityManager$MemoryInfo: long foregroundAppThreshold> = $l11;

        return;
    }

    final com.android.server.am.ProcessRecord getProcessRecordLocked(java.lang.String, int, boolean)
    {
        com.android.server.am.ProcessList r0;
        boolean z0, $z1, $z2;
        int i0, i1, $i2, $i3, $i9, $i10, i13, i14, i15;
        com.android.server.am.ProcessList$MyProcessMap $r1, $r20;
        java.lang.Object $r2, $r22, $r23;
        com.android.server.am.ActivityManagerService $r3;
        long $l4, $l5, $l7, $l8, $l11, $l12;
        byte $b6;
        com.android.internal.app.procstats.ProcessState $r4, $r12, $r16, $r18;
        java.lang.StringBuilder $r5;
        java.lang.String $r6, $r9, $r17, $r19, r25;
        com.android.server.am.ProcessRecord$PackageList $r10, $r13, $r14;
        android.util.ArrayMap $r11, $r21;
        android.content.pm.ApplicationInfo $r15;
        com.android.server.am.ProcessRecord $r24, r27;
        android.util.SparseArray r26;
        com.android.internal.app.procstats.ProcessStats$ProcessStateHolder r28;

        r0 := @this: com.android.server.am.ProcessList;

        r25 := @parameter0: java.lang.String;

        i13 := @parameter1: int;

        z0 := @parameter2: boolean;

        if i13 != 1000 goto label5;

        $r20 = r0.<com.android.server.am.ProcessList: com.android.server.am.ProcessList$MyProcessMap mProcessNames>;

        $r21 = virtualinvoke $r20.<com.android.server.am.ProcessList$MyProcessMap: android.util.ArrayMap getMap()>();

        $r22 = virtualinvoke $r21.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r25);

        r26 = (android.util.SparseArray) $r22;

        if r26 != null goto label1;

        return null;

     label1:
        i0 = virtualinvoke r26.<android.util.SparseArray: int size()>();

        i14 = 0;

     label2:
        if i14 >= i0 goto label5;

        i1 = virtualinvoke r26.<android.util.SparseArray: int keyAt(int)>(i14);

        $z1 = staticinvoke <android.os.UserHandle: boolean isCore(int)>(i1);

        if $z1 == 0 goto label4;

        $z2 = staticinvoke <android.os.UserHandle: boolean isSameUser(int,int)>(i1, i13);

        if $z2 != 0 goto label3;

        goto label4;

     label3:
        $r23 = virtualinvoke r26.<android.util.SparseArray: java.lang.Object valueAt(int)>(i14);

        $r24 = (com.android.server.am.ProcessRecord) $r23;

        return $r24;

     label4:
        i14 = i14 + 1;

        goto label2;

     label5:
        $r1 = r0.<com.android.server.am.ProcessList: com.android.server.am.ProcessList$MyProcessMap mProcessNames>;

        $r2 = virtualinvoke $r1.<com.android.server.am.ProcessList$MyProcessMap: java.lang.Object get(java.lang.String,int)>(r25, i13);

        r27 = (com.android.server.am.ProcessRecord) $r2;

        if r27 == null goto label8;

        if z0 != 0 goto label8;

        $r3 = r0.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService>;

        $i2 = $r3.<com.android.server.am.ActivityManagerService: int mLastMemoryLevel>;

        if $i2 <= 0 goto label8;

        $i3 = r27.<com.android.server.am.ProcessRecord: int setProcState>;

        if $i3 < 19 goto label8;

        $l4 = r27.<com.android.server.am.ProcessRecord: long lastCachedPss>;

        $l5 = virtualinvoke r0.<com.android.server.am.ProcessList: long getCachedRestoreThresholdKb()>();

        $b6 = $l4 cmp $l5;

        if $b6 < 0 goto label8;

        $r4 = r27.<com.android.server.am.ProcessRecord: com.android.internal.app.procstats.ProcessState baseProcessTracker>;

        if $r4 == null goto label7;

        $r12 = r27.<com.android.server.am.ProcessRecord: com.android.internal.app.procstats.ProcessState baseProcessTracker>;

        $r10 = r27.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        $r11 = $r10.<com.android.server.am.ProcessRecord$PackageList: android.util.ArrayMap mPkgList>;

        $l8 = r27.<com.android.server.am.ProcessRecord: long lastCachedPss>;

        virtualinvoke $r12.<com.android.internal.app.procstats.ProcessState: void reportCachedKill(android.util.ArrayMap,long)>($r11, $l8);

        $r13 = r27.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        $i9 = virtualinvoke $r13.<com.android.server.am.ProcessRecord$PackageList: int size()>();

        i15 = $i9 - 1;

     label6:
        if i15 < 0 goto label7;

        $r14 = r27.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        r28 = virtualinvoke $r14.<com.android.server.am.ProcessRecord$PackageList: com.android.internal.app.procstats.ProcessStats$ProcessStateHolder valueAt(int)>(i15);

        $r15 = r27.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i10 = $r15.<android.content.pm.ApplicationInfo: int uid>;

        $r16 = r28.<com.android.internal.app.procstats.ProcessStats$ProcessStateHolder: com.android.internal.app.procstats.ProcessState state>;

        $r17 = virtualinvoke $r16.<com.android.internal.app.procstats.ProcessState: java.lang.String getName()>();

        $r18 = r28.<com.android.internal.app.procstats.ProcessStats$ProcessStateHolder: com.android.internal.app.procstats.ProcessState state>;

        $r19 = virtualinvoke $r18.<com.android.internal.app.procstats.ProcessState: java.lang.String getPackage()>();

        $l12 = r27.<com.android.server.am.ProcessRecord: long lastCachedPss>;

        $l11 = r28.<com.android.internal.app.procstats.ProcessStats$ProcessStateHolder: long appVersion>;

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int,java.lang.String,java.lang.String,long,long)>(17, $i10, $r17, $r19, $l12, $l11);

        i15 = i15 + -1;

        goto label6;

     label7:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $l7 = r27.<com.android.server.am.ProcessRecord: long lastCachedPss>;

        $r6 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l7);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("k from cached");

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r27.<com.android.server.am.ProcessRecord: void kill(java.lang.String,int,int,boolean)>($r9, 13, 5, 1);

     label8:
        return r27;
    }

    java.util.Map getProcessesWithPendingBindMounts(int)
    {
        com.android.server.am.ProcessList r0;
        int i0, i1, $i2, $i3, i4;
        com.android.server.am.ActivityManagerService r1;
        com.android.server.am.ProcessRecord r2;
        java.util.HashMap $r3;
        java.util.ArrayList $r4, $r5;
        java.lang.Object $r6;
        boolean $z0;
        java.lang.Integer $r7;
        android.content.pm.ApplicationInfo $r8;
        java.lang.String $r9;
        java.lang.Throwable $r11;
        java.lang.IllegalStateException r13;

        r0 := @this: com.android.server.am.ProcessList;

        i0 := @parameter0: int;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r1 = r0.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService>;

        entermonitor r1;

     label01:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r4 = r0.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        $i2 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        i4 = $i2 - 1;

     label02:
        if i4 < 0 goto label11;

     label03:
        $r5 = r0.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        r2 = (com.android.server.am.ProcessRecord) $r6;

        $i3 = r2.<com.android.server.am.ProcessRecord: int userId>;

        if $i3 != i0 goto label10;

        $z0 = r2.<com.android.server.am.ProcessRecord: boolean bindMountPending>;

        if $z0 != 0 goto label05;

     label04:
        goto label10;

     label05:
        i1 = r2.<com.android.server.am.ProcessRecord: int pid>;

     label06:
        if i1 == 0 goto label09;

     label07:
        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r8 = r2.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r9 = $r8.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r9);

     label08:
        goto label10;

     label09:
        r13 = new java.lang.IllegalStateException;

        specialinvoke r13.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Pending process is not started yet,retry later");

        throw r13;

     label10:
        i4 = i4 + -1;

        goto label02;

     label11:
        exitmonitor r1;

     label12:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return $r3;

     label13:
        $r11 := @caughtexception;

     label14:
        exitmonitor r1;

     label15:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r11;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
    }

    java.util.List getRunningAppProcessesLocked(boolean, int, boolean, int, int)
    {
        com.android.server.am.ProcessList r0;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z7;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11;
        com.android.server.am.ProcessRecord r1, $r18;
        java.util.ArrayList $r3, $r4, $r12, r19, r20;
        java.lang.Object $r5, $r10, $r11, $r13, $r15, $r17, $r21;
        android.app.IApplicationThread $r6;
        android.app.ActivityManager$RunningAppProcessInfo $r7;
        java.lang.String $r8;
        java.lang.String[] $r9;
        android.content.ComponentName $r14;
        com.android.server.wm.ActivityServiceConnectionsHolder $r16;

        r0 := @this: com.android.server.am.ProcessList;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        z1 := @parameter2: boolean;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        r19 = null;

        $r3 = r0.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        $i4 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i11 = $i4 - 1;

     label1:
        if i11 < 0 goto label9;

        $r4 = r0.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i11);

        r1 = (com.android.server.am.ProcessRecord) $r5;

        if z0 != 0 goto label2;

        r20 = r19;

        $i10 = r1.<com.android.server.am.ProcessRecord: int userId>;

        if $i10 != i0 goto label8;

     label2:
        if z1 != 0 goto label3;

        $i9 = r1.<com.android.server.am.ProcessRecord: int uid>;

        if $i9 == i1 goto label3;

        r20 = r19;

        goto label8;

     label3:
        r20 = r19;

        $r6 = r1.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r6 == null goto label8;

        r20 = r19;

        $z2 = virtualinvoke r1.<com.android.server.am.ProcessRecord: boolean isCrashing()>();

        if $z2 != 0 goto label8;

        r20 = r19;

        $z3 = virtualinvoke r1.<com.android.server.am.ProcessRecord: boolean isNotResponding()>();

        if $z3 != 0 goto label8;

        $r7 = new android.app.ActivityManager$RunningAppProcessInfo;

        $r8 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $i5 = r1.<com.android.server.am.ProcessRecord: int pid>;

        $r9 = virtualinvoke r1.<com.android.server.am.ProcessRecord: java.lang.String[] getPackageList()>();

        specialinvoke $r7.<android.app.ActivityManager$RunningAppProcessInfo: void <init>(java.lang.String,int,java.lang.String[])>($r8, $i5, $r9);

        virtualinvoke r0.<com.android.server.am.ProcessList: void fillInProcMemInfoLocked(com.android.server.am.ProcessRecord,android.app.ActivityManager$RunningAppProcessInfo,int)>(r1, $r7, i2);

        $r10 = r1.<com.android.server.am.ProcessRecord: java.lang.Object adjSource>;

        $z4 = $r10 instanceof com.android.server.am.ProcessRecord;

        if $z4 == 0 goto label4;

        $r17 = r1.<com.android.server.am.ProcessRecord: java.lang.Object adjSource>;

        $r18 = (com.android.server.am.ProcessRecord) $r17;

        $i6 = $r18.<com.android.server.am.ProcessRecord: int pid>;

        $r7.<android.app.ActivityManager$RunningAppProcessInfo: int importanceReasonPid> = $i6;

        $i7 = r1.<com.android.server.am.ProcessRecord: int adjSourceProcState>;

        $i8 = staticinvoke <android.app.ActivityManager$RunningAppProcessInfo: int procStateToImportance(int)>($i7);

        $r7.<android.app.ActivityManager$RunningAppProcessInfo: int importanceReasonImportance> = $i8;

        goto label5;

     label4:
        $r11 = r1.<com.android.server.am.ProcessRecord: java.lang.Object adjSource>;

        $z5 = $r11 instanceof com.android.server.wm.ActivityServiceConnectionsHolder;

        if $z5 == 0 goto label5;

        $r15 = r1.<com.android.server.am.ProcessRecord: java.lang.Object adjSource>;

        $r16 = (com.android.server.wm.ActivityServiceConnectionsHolder) $r15;

        i3 = virtualinvoke $r16.<com.android.server.wm.ActivityServiceConnectionsHolder: int getActivityPid()>();

        if i3 == -1 goto label5;

        $r7.<android.app.ActivityManager$RunningAppProcessInfo: int importanceReasonPid> = i3;

     label5:
        $r21 = r1.<com.android.server.am.ProcessRecord: java.lang.Object adjTarget>;

        $z7 = $r21 instanceof android.content.ComponentName;

        if $z7 == 0 goto label6;

        $r13 = r1.<com.android.server.am.ProcessRecord: java.lang.Object adjTarget>;

        $r14 = (android.content.ComponentName) $r13;

        $r7.<android.app.ActivityManager$RunningAppProcessInfo: android.content.ComponentName importanceReasonComponent> = $r14;

     label6:
        r20 = r19;

        if r19 != null goto label7;

        $r12 = new java.util.ArrayList;

        specialinvoke $r12.<java.util.ArrayList: void <init>()>();

        r20 = $r12;

     label7:
        interfaceinvoke r20.<java.util.List: boolean add(java.lang.Object)>($r7);

     label8:
        i11 = i11 + -1;

        r19 = r20;

        goto label1;

     label9:
        return r19;
    }

    int getUidProcStateLocked(int)
    {
        com.android.server.am.ProcessList r0;
        com.android.server.am.UidRecord r1;
        com.android.server.am.ActiveUids $r2;
        int i0, i1;

        r0 := @this: com.android.server.am.ProcessList;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.am.ProcessList: com.android.server.am.ActiveUids mActiveUids>;

        r1 = virtualinvoke $r2.<com.android.server.am.ActiveUids: com.android.server.am.UidRecord get(int)>(i0);

        if r1 != null goto label1;

        i1 = 20;

        goto label2;

     label1:
        i1 = virtualinvoke r1.<com.android.server.am.UidRecord: int getCurProcState()>();

     label2:
        return i1;
    }

    com.android.server.am.UidRecord getUidRecordLocked(int)
    {
        com.android.server.am.ProcessList r0;
        int i0;
        com.android.server.am.ActiveUids $r1;
        com.android.server.am.UidRecord $r2;

        r0 := @this: com.android.server.am.ProcessList;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.am.ProcessList: com.android.server.am.ActiveUids mActiveUids>;

        $r2 = virtualinvoke $r1.<com.android.server.am.ActiveUids: com.android.server.am.UidRecord get(int)>(i0);

        return $r2;
    }

    void handleAllTrustStorageUpdateLocked()
    {
        com.android.server.am.ProcessList r0;
        com.android.server.am.ProcessRecord r1;
        java.util.ArrayList $r2, $r3;
        int $i0, i2;
        java.lang.Object $r4;
        android.app.IApplicationThread $r5, $r6;
        android.os.RemoteException $r7;
        java.lang.StringBuilder $r8;
        android.content.pm.ApplicationInfo $r10;
        java.lang.String $r11, $r13;

        r0 := @this: com.android.server.am.ProcessList;

        $r2 = r0.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i2 = $i0 - 1;

     label1:
        if i2 < 0 goto label6;

        $r3 = r0.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r1 = (com.android.server.am.ProcessRecord) $r4;

        $r5 = r1.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r5 == null goto label5;

     label2:
        $r6 = r1.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        interfaceinvoke $r6.<android.app.IApplicationThread: void handleTrustStorageUpdate()>();

     label3:
        goto label5;

     label4:
        $r7 := @caughtexception;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to handle trust storage update for: ");

        $r10 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r11 = $r10.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r13);

     label5:
        i2 = i2 + -1;

        goto label1;

     label6:
        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    boolean handleProcessStartedLocked(com.android.server.am.ProcessRecord, int, boolean, long, boolean)
    {
        com.android.server.am.ProcessList r0;
        int i0, i1, i2, $i3, $i5, $i7, $i9, $i10, $i16, $i17;
        boolean z0, z1, $z3;
        android.util.LongSparseArray $r1;
        com.android.server.am.ActivityManagerService $r2, $r33, $r35, $r36, $r38, $r40, $r55, $r86, $r87;
        android.content.pm.ApplicationInfo $r3, $r14;
        java.lang.String $r4, $r8, $r15, $r16, $r17, $r19, $r23, $r26, $r29, $r32, $r34, $r43, $r50, $r54, $r58, $r61, $r71, r76, r78, r79, r80;
        com.android.server.am.BatteryStatsService $r5;
        long $l4, $l8, $l11, $l12, $l13, l19, l20, $l21;
        com.android.server.am.HostingRecord $r6, $r7, $r28, $r31, $r57, $r64;
        java.lang.Object[] $r9;
        java.lang.Integer $r10, $r11, $r12;
        android.content.pm.IPackageManager $r13;
        com.android.server.Watchdog $r18;
        com.android.server.am.ActivityManagerService$PidMap $r37, r83, r88;
        com.android.server.am.ActivityManagerService$MainHandler $r39, r90;
        java.lang.StringBuilder $r41, $r65, r82;
        android.os.RemoteException $r72;
        java.lang.Throwable $r73, $r74;
        com.android.server.am.ProcessRecord r75, r84;
        android.os.Message r89;

        r0 := @this: com.android.server.am.ProcessList;

        r75 := @parameter0: com.android.server.am.ProcessRecord;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        l19 := @parameter3: long;

        z1 := @parameter4: boolean;

        $r1 = r0.<com.android.server.am.ProcessList: android.util.LongSparseArray mPendingStarts>;

        virtualinvoke $r1.<android.util.LongSparseArray: void remove(long)>(l19);

        r76 = specialinvoke r0.<com.android.server.am.ProcessList: java.lang.String isProcStartValidLocked(com.android.server.am.ProcessRecord,long)>(r75, l19);

        if r76 == null goto label01;

        $r65 = new java.lang.StringBuilder;

        specialinvoke $r65.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r75);

        virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" start not valid, killing pid=");

        virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r76);

        $r71 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r71);

        r75.<com.android.server.am.ProcessRecord: boolean pendingStart> = 0;

        staticinvoke <android.os.Process: void killProcessQuiet(int)>(i0);

        $i17 = r75.<com.android.server.am.ProcessRecord: int uid>;

        $i16 = r75.<com.android.server.am.ProcessRecord: int pid>;

        staticinvoke <android.os.Process: int killProcessGroup(int,int)>($i17, $i16);

        virtualinvoke r0.<com.android.server.am.ProcessList: void noteAppKill(com.android.server.am.ProcessRecord,int,int,java.lang.String)>(r75, 13, 13, r76);

        return 0;

     label01:
        $r2 = r0.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService>;

        $r5 = $r2.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        $r4 = r75.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r3 = r75.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i3 = $r3.<android.content.pm.ApplicationInfo: int uid>;

        virtualinvoke $r5.<com.android.server.am.BatteryStatsService: void noteProcessStart(java.lang.String,int)>($r4, $i3);

        $l4 = r75.<com.android.server.am.ProcessRecord: long startTime>;

        specialinvoke r0.<com.android.server.am.ProcessList: void checkSlow(long,java.lang.String)>($l4, "startProcess: done updating battery stats");

        $i5 = r75.<com.android.server.am.ProcessRecord: int startUid>;

        i1 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i5);

        i2 = r75.<com.android.server.am.ProcessRecord: int startUid>;

        r78 = r75.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r6 = r75.<com.android.server.am.ProcessRecord: com.android.server.am.HostingRecord hostingRecord>;

        r79 = virtualinvoke $r6.<com.android.server.am.HostingRecord: java.lang.String getType()>();

        $r7 = r75.<com.android.server.am.ProcessRecord: com.android.server.am.HostingRecord hostingRecord>;

        $r8 = virtualinvoke $r7.<com.android.server.am.HostingRecord: java.lang.String getName()>();

        if $r8 == null goto label02;

        $r64 = r75.<com.android.server.am.ProcessRecord: com.android.server.am.HostingRecord hostingRecord>;

        r80 = virtualinvoke $r64.<com.android.server.am.HostingRecord: java.lang.String getName()>();

        goto label03;

     label02:
        r80 = "";

     label03:
        $r9 = newarray (java.lang.Object)[6];

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r9[0] = $r10;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r9[1] = $r11;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r9[2] = $r12;

        $r9[3] = r78;

        $r9[4] = r79;

        $r9[5] = r80;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(30014, $r9);

     label04:
        $r13 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        $r17 = r75.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $i7 = r75.<com.android.server.am.ProcessRecord: int uid>;

        $r16 = r75.<com.android.server.am.ProcessRecord: java.lang.String seInfo>;

        $r14 = r75.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r15 = $r14.<android.content.pm.ApplicationInfo: java.lang.String sourceDir>;

        interfaceinvoke $r13.<android.content.pm.IPackageManager: void logAppProcessStartIfNeeded(java.lang.String,int,java.lang.String,java.lang.String,int)>($r17, $i7, $r16, $r15, i0);

     label05:
        goto label07;

     label06:
        $r72 := @caughtexception;

     label07:
        $r18 = staticinvoke <com.android.server.Watchdog: com.android.server.Watchdog getInstance()>();

        $r19 = r75.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        virtualinvoke $r18.<com.android.server.Watchdog: void processStarted(java.lang.String,int)>($r19, i0);

        $l8 = r75.<com.android.server.am.ProcessRecord: long startTime>;

        specialinvoke r0.<com.android.server.am.ProcessList: void checkSlow(long,java.lang.String)>($l8, "startProcess: building log message");

        r82 = r0.<com.android.server.am.ProcessList: java.lang.StringBuilder mStringBuilder>;

        virtualinvoke r82.<java.lang.StringBuilder: void setLength(int)>(0);

        virtualinvoke r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Start proc ");

        virtualinvoke r82.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke r82.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $r23 = r75.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        virtualinvoke r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        virtualinvoke r82.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47);

        $i9 = r75.<com.android.server.am.ProcessRecord: int startUid>;

        staticinvoke <android.os.UserHandle: void formatUid(java.lang.StringBuilder,int)>(r82, $i9);

        $r26 = r75.<com.android.server.am.ProcessRecord: java.lang.String isolatedEntryPoint>;

        if $r26 == null goto label08;

        virtualinvoke r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [");

        $r61 = r75.<com.android.server.am.ProcessRecord: java.lang.String isolatedEntryPoint>;

        virtualinvoke r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r61);

        virtualinvoke r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

     label08:
        virtualinvoke r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        $r28 = r75.<com.android.server.am.ProcessRecord: com.android.server.am.HostingRecord hostingRecord>;

        $r29 = virtualinvoke $r28.<com.android.server.am.HostingRecord: java.lang.String getType()>();

        virtualinvoke r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r31 = r75.<com.android.server.am.ProcessRecord: com.android.server.am.HostingRecord hostingRecord>;

        $r32 = virtualinvoke $r31.<com.android.server.am.HostingRecord: java.lang.String getName()>();

        if $r32 == null goto label09;

        virtualinvoke r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r57 = r75.<com.android.server.am.ProcessRecord: com.android.server.am.HostingRecord hostingRecord>;

        $r58 = virtualinvoke $r57.<com.android.server.am.HostingRecord: java.lang.String getName()>();

        virtualinvoke r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r58);

     label09:
        $r33 = r0.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService>;

        $r34 = virtualinvoke r82.<java.lang.StringBuilder: java.lang.String toString()>();

        $i10 = r75.<com.android.server.am.ProcessRecord: int startUid>;

        virtualinvoke $r33.<com.android.server.am.ActivityManagerService: void reportUidInfoMessageLocked(java.lang.String,java.lang.String,int)>("ActivityManager", $r34, $i10);

        virtualinvoke r75.<com.android.server.am.ProcessRecord: void setPid(int)>(i0);

        virtualinvoke r75.<com.android.server.am.ProcessRecord: void setUsingWrapper(boolean)>(z0);

        r75.<com.android.server.am.ProcessRecord: boolean pendingStart> = 0;

        $l11 = r75.<com.android.server.am.ProcessRecord: long startTime>;

        specialinvoke r0.<com.android.server.am.ProcessList: void checkSlow(long,java.lang.String)>($l11, "startProcess: starting to update pids map");

        $r35 = r0.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService>;

        r83 = $r35.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        entermonitor r83;

     label10:
        $r36 = r0.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService>;

        $r37 = $r36.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        r84 = virtualinvoke $r37.<com.android.server.am.ActivityManagerService$PidMap: com.android.server.am.ProcessRecord get(int)>(i0);

        exitmonitor r83;

     label11:
        if r84 == null goto label12;

        $z3 = r75.<com.android.server.am.ProcessRecord: boolean isolated>;

        if $z3 != 0 goto label12;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handleProcessStartedLocked process:");

        $r43 = r75.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" startSeq:");

        $l12 = r75.<com.android.server.am.ProcessRecord: long startSeq>;

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l12);

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" pid:");

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" belongs to another existing app:");

        $r50 = r84.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r50);

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" startSeq:");

        $l13 = r84.<com.android.server.am.ProcessRecord: long startSeq>;

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l13);

        $r54 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("ActivityManager", $r54);

        $r55 = r0.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService>;

        virtualinvoke $r55.<com.android.server.am.ActivityManagerService: boolean cleanUpApplicationRecordLocked(com.android.server.am.ProcessRecord,boolean,boolean,int,boolean)>(r84, 0, 0, -1, 1);

     label12:
        $r86 = r0.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService>;

        virtualinvoke $r86.<com.android.server.am.ActivityManagerService: void addPidLocked(com.android.server.am.ProcessRecord)>(r75);

        $r87 = r0.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService>;

        r88 = $r87.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        entermonitor r88;

        if z1 != 0 goto label17;

     label13:
        $r38 = r0.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService>;

        $r39 = $r38.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        r89 = virtualinvoke $r39.<com.android.server.am.ActivityManagerService$MainHandler: android.os.Message obtainMessage(int)>(20);

        r89.<android.os.Message: java.lang.Object obj> = r75;

        $r40 = r0.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService>;

        r90 = $r40.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

     label14:
        if z0 == 0 goto label15;

        l20 = 1200000L;

        goto label16;

     label15:
        l20 = 10000L;

     label16:
        virtualinvoke r90.<com.android.server.am.ActivityManagerService$MainHandler: boolean sendMessageDelayed(android.os.Message,long)>(r89, l20);

     label17:
        exitmonitor r88;

     label18:
        $l21 = r75.<com.android.server.am.ProcessRecord: long startTime>;

        specialinvoke r0.<com.android.server.am.ProcessList: void checkSlow(long,java.lang.String)>($l21, "startProcess: done updating pids map");

        return 1;

     label19:
        $r73 := @caughtexception;

     label20:
        exitmonitor r88;

     label21:
        throw $r73;

     label22:
        $r74 := @caughtexception;

     label23:
        exitmonitor r83;

     label24:
        throw $r74;

        catch android.os.RemoteException from label04 to label05 with label06;
        catch java.lang.Throwable from label10 to label11 with label22;
        catch java.lang.Throwable from label13 to label14 with label19;
        catch java.lang.Throwable from label16 to label17 with label19;
        catch java.lang.Throwable from label17 to label18 with label19;
        catch java.lang.Throwable from label20 to label21 with label19;
        catch java.lang.Throwable from label23 to label24 with label22;
    }

    boolean haveBackgroundProcessLocked()
    {
        com.android.server.am.ProcessList r0;
        com.android.server.am.ProcessRecord r1;
        java.util.ArrayList $r2, $r3;
        int $i0, $i1, i2;
        java.lang.Object $r4;
        android.app.IApplicationThread $r5;

        r0 := @this: com.android.server.am.ProcessList;

        $r2 = r0.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i2 = $i0 - 1;

     label1:
        if i2 < 0 goto label3;

        $r3 = r0.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r1 = (com.android.server.am.ProcessRecord) $r4;

        $r5 = r1.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r5 == null goto label2;

        $i1 = r1.<com.android.server.am.ProcessRecord: int setProcState>;

        if $i1 < 16 goto label2;

        return 1;

     label2:
        i2 = i2 + -1;

        goto label1;

     label3:
        return 0;
    }

    void incrementProcStateSeqAndNotifyAppsLocked(com.android.server.am.ActiveUids)
    {
        com.android.server.am.ProcessList r0;
        com.android.server.am.UidRecord r1, r21;
        int i0, $i4, $i5, $i6, $i7, $i9, $i10, $i11, $i12, $i14, i15, i16;
        java.lang.Object r2, $r6, $r12;
        long l1, $l2, $l8, $l13;
        com.android.server.am.ActivityManagerService $r3, $r10;
        byte $b3;
        java.util.ArrayList $r4, $r5, r17, r18;
        java.lang.Integer $r7, $r13;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        android.app.IApplicationThread $r8, $r9;
        com.android.server.am.ActivityManagerService$Injector $r11;
        java.lang.Throwable $r14;
        android.os.RemoteException $r15;
        com.android.server.am.ActiveUids r16;
        com.android.server.am.ProcessRecord r20;

        r0 := @this: com.android.server.am.ProcessList;

        r16 := @parameter0: com.android.server.am.ActiveUids;

        $r3 = r0.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService>;

        $l2 = $r3.<com.android.server.am.ActivityManagerService: long mWaitForNetworkTimeoutMs>;

        $b3 = $l2 cmp 0L;

        if $b3 > 0 goto label01;

        return;

     label01:
        r17 = null;

        $i4 = virtualinvoke r16.<com.android.server.am.ActiveUids: int size()>();

        i15 = $i4 - 1;

     label02:
        if i15 < 0 goto label21;

        r1 = virtualinvoke r16.<com.android.server.am.ActiveUids: com.android.server.am.UidRecord valueAt(int)>(i15);

        $r10 = r0.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService>;

        $r11 = $r10.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$Injector mInjector>;

        $i9 = r1.<com.android.server.am.UidRecord: int uid>;

        $z2 = virtualinvoke $r11.<com.android.server.am.ActivityManagerService$Injector: boolean isNetworkRestrictedForUid(int)>($i9);

        if $z2 != 0 goto label03;

        r18 = r17;

        goto label20;

     label03:
        r18 = r17;

        $i10 = r1.<com.android.server.am.UidRecord: int uid>;

        $z3 = staticinvoke <android.os.UserHandle: boolean isApp(int)>($i10);

        if $z3 == 0 goto label20;

        $z4 = r1.<com.android.server.am.UidRecord: boolean hasInternetPermission>;

        if $z4 != 0 goto label04;

        r18 = r17;

        goto label20;

     label04:
        $i11 = r1.<com.android.server.am.UidRecord: int setProcState>;

        $i12 = virtualinvoke r1.<com.android.server.am.UidRecord: int getCurProcState()>();

        if $i11 != $i12 goto label05;

        r18 = r17;

        goto label20;

     label05:
        i0 = virtualinvoke r0.<com.android.server.am.ProcessList: int getBlockStateForUid(com.android.server.am.UidRecord)>(r1);

        if i0 != 0 goto label06;

        r18 = r17;

        goto label20;

     label06:
        r2 = r1.<com.android.server.am.UidRecord: java.lang.Object networkStateLock>;

        entermonitor r2;

     label07:
        $l13 = r0.<com.android.server.am.ProcessList: long mProcStateSeqCounter>;

        l1 = $l13 + 1L;

        r0.<com.android.server.am.ProcessList: long mProcStateSeqCounter> = l1;

        r1.<com.android.server.am.UidRecord: long curProcStateSeq> = l1;

     label08:
        if i0 != 1 goto label12;

        r18 = r17;

        if r17 != null goto label10;

     label09:
        r18 = new java.util.ArrayList;

        specialinvoke r18.<java.util.ArrayList: void <init>()>();

     label10:
        $i14 = r1.<com.android.server.am.UidRecord: int uid>;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i14);

        virtualinvoke r18.<java.util.ArrayList: boolean add(java.lang.Object)>($r13);

     label11:
        goto label15;

     label12:
        r18 = r17;

     label13:
        $z5 = r1.<com.android.server.am.UidRecord: boolean waitingForNetwork>;

        if $z5 == 0 goto label15;

        $r12 = r1.<com.android.server.am.UidRecord: java.lang.Object networkStateLock>;

        virtualinvoke $r12.<java.lang.Object: void notifyAll()>();

     label14:
        r18 = r17;

     label15:
        exitmonitor r2;

     label16:
        goto label20;

     label17:
        $r14 := @caughtexception;

     label18:
        exitmonitor r2;

     label19:
        throw $r14;

     label20:
        i15 = i15 + -1;

        r17 = r18;

        goto label02;

     label21:
        if r17 != null goto label22;

        return;

     label22:
        $r4 = r0.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        $i5 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        i16 = $i5 - 1;

     label23:
        if i16 < 0 goto label29;

        $r5 = r0.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i16);

        r20 = (com.android.server.am.ProcessRecord) $r6;

        $i6 = r20.<com.android.server.am.ProcessRecord: int uid>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        $z0 = virtualinvoke r17.<java.util.ArrayList: boolean contains(java.lang.Object)>($r7);

        if $z0 != 0 goto label24;

        goto label28;

     label24:
        $z1 = r20.<com.android.server.am.ProcessRecord: boolean killedByAm>;

        if $z1 != 0 goto label28;

        $r8 = r20.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r8 == null goto label28;

        $i7 = r20.<com.android.server.am.ProcessRecord: int uid>;

        r21 = virtualinvoke r0.<com.android.server.am.ProcessList: com.android.server.am.UidRecord getUidRecordLocked(int)>($i7);

        if r21 == null goto label28;

     label25:
        $r9 = r20.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $l8 = r21.<com.android.server.am.UidRecord: long curProcStateSeq>;

        interfaceinvoke $r9.<android.app.IApplicationThread: void setNetworkBlockSeq(long)>($l8);

     label26:
        goto label28;

     label27:
        $r15 := @caughtexception;

     label28:
        i16 = i16 + -1;

        goto label23;

     label29:
        return;

        catch java.lang.Throwable from label07 to label08 with label17;
        catch java.lang.Throwable from label09 to label10 with label17;
        catch java.lang.Throwable from label10 to label11 with label17;
        catch java.lang.Throwable from label13 to label14 with label17;
        catch java.lang.Throwable from label15 to label16 with label17;
        catch java.lang.Throwable from label18 to label19 with label17;
        catch android.os.RemoteException from label25 to label26 with label27;
    }

    void init(com.android.server.am.ActivityManagerService, com.android.server.am.ActiveUids, com.android.server.compat.PlatformCompat)
    {
        com.android.server.am.ProcessList r0;
        com.android.server.am.ActiveUids r1;
        com.android.server.compat.PlatformCompat r2;
        boolean z1, z2, $z3, z4;
        com.android.server.ServiceThread $r3, $r5, $r8, $r15;
        com.android.server.am.ProcessList$KillHandler $r4, $r17, $r27;
        android.os.Looper $r6, $r9, $r16, $r18;
        com.android.server.am.LmkdConnection $r7;
        android.os.MessageQueue $r10, $r19;
        com.android.server.am.ProcessList$1 $r11;
        com.android.server.am.ActivityManagerService $r12, r23;
        com.android.server.am.AppExitInfoTracker $r13;
        com.android.server.am.ProcessList$ImperceptibleKillRunner $r14;
        android.net.LocalSocket $r20, r29;
        java.io.FileDescriptor $r21;
        com.android.server.am._$$Lambda$ProcessList$hjUwwFAIhoht4KRKnKeUve_Kcto $r22;
        java.util.ArrayList $r24;
        com.android.server.SystemConfig $r25;
        android.util.ArraySet $r26;

        r0 := @this: com.android.server.am.ProcessList;

        r23 := @parameter0: com.android.server.am.ActivityManagerService;

        r1 := @parameter1: com.android.server.am.ActiveUids;

        r2 := @parameter2: com.android.server.compat.PlatformCompat;

        r0.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService> = r23;

        r0.<com.android.server.am.ProcessList: com.android.server.am.ActiveUids mActiveUids> = r1;

        r0.<com.android.server.am.ProcessList: com.android.server.compat.PlatformCompat mPlatformCompat> = r2;

        $z3 = staticinvoke <android.os.SystemProperties: boolean getBoolean(java.lang.String,boolean)>("persist.zygote.app_data_isolation", 1);

        r0.<com.android.server.am.ProcessList: boolean mAppDataIsolationEnabled> = $z3;

        z1 = staticinvoke <android.os.SystemProperties: boolean getBoolean(java.lang.String,boolean)>("persist.sys.fuse", 0);

        z2 = staticinvoke <android.os.SystemProperties: boolean getBoolean(java.lang.String,boolean)>("persist.sys.vold_app_data_isolation_enabled", 0);

        if z1 != 0 goto label1;

        if z2 == 0 goto label1;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ActivityManager", "Fuse is not enabled while vold app data isolation is enabled");

     label1:
        z4 = 0;

        if z1 == 0 goto label2;

        z4 = 0;

        if z2 == 0 goto label2;

        z4 = 1;

     label2:
        r0.<com.android.server.am.ProcessList: boolean mVoldAppDataIsolationEnabled> = z4;

        $r24 = new java.util.ArrayList;

        $r25 = staticinvoke <com.android.server.SystemConfig: com.android.server.SystemConfig getInstance()>();

        $r26 = virtualinvoke $r25.<com.android.server.SystemConfig: android.util.ArraySet getAppDataIsolationWhitelistedApps()>();

        specialinvoke $r24.<java.util.ArrayList: void <init>(java.util.Collection)>($r26);

        r0.<com.android.server.am.ProcessList: java.util.ArrayList mAppDataIsolationWhitelistedApps> = $r24;

        $r27 = <com.android.server.am.ProcessList: com.android.server.am.ProcessList$KillHandler sKillHandler>;

        if $r27 != null goto label4;

        $r3 = new com.android.server.ServiceThread;

        specialinvoke $r3.<com.android.server.ServiceThread: void <init>(java.lang.String,int,boolean)>("ActivityManager:kill", 10, 1);

        <com.android.server.am.ProcessList: com.android.server.ServiceThread sKillThread> = $r3;

        virtualinvoke $r3.<com.android.server.ServiceThread: void start()>();

        $r4 = new com.android.server.am.ProcessList$KillHandler;

        $r5 = <com.android.server.am.ProcessList: com.android.server.ServiceThread sKillThread>;

        $r6 = virtualinvoke $r5.<com.android.server.ServiceThread: android.os.Looper getLooper()>();

        specialinvoke $r4.<com.android.server.am.ProcessList$KillHandler: void <init>(com.android.server.am.ProcessList,android.os.Looper)>(r0, $r6);

        <com.android.server.am.ProcessList: com.android.server.am.ProcessList$KillHandler sKillHandler> = $r4;

        $r7 = new com.android.server.am.LmkdConnection;

        $r8 = <com.android.server.am.ProcessList: com.android.server.ServiceThread sKillThread>;

        $r9 = virtualinvoke $r8.<com.android.server.ServiceThread: android.os.Looper getLooper()>();

        $r10 = virtualinvoke $r9.<android.os.Looper: android.os.MessageQueue getQueue()>();

        $r11 = new com.android.server.am.ProcessList$1;

        specialinvoke $r11.<com.android.server.am.ProcessList$1: void <init>(com.android.server.am.ProcessList)>(r0);

        specialinvoke $r7.<com.android.server.am.LmkdConnection: void <init>(android.os.MessageQueue,com.android.server.am.LmkdConnection$LmkdConnectionListener)>($r10, $r11);

        <com.android.server.am.ProcessList: com.android.server.am.LmkdConnection sLmkdConnection> = $r7;

        r29 = specialinvoke r0.<com.android.server.am.ProcessList: android.net.LocalSocket createSystemServerSocketForZygote()>();

        r0.<com.android.server.am.ProcessList: android.net.LocalSocket mSystemServerSocketForZygote> = r29;

        if r29 == null goto label3;

        $r17 = <com.android.server.am.ProcessList: com.android.server.am.ProcessList$KillHandler sKillHandler>;

        $r18 = virtualinvoke $r17.<com.android.server.am.ProcessList$KillHandler: android.os.Looper getLooper()>();

        $r19 = virtualinvoke $r18.<android.os.Looper: android.os.MessageQueue getQueue()>();

        $r20 = r0.<com.android.server.am.ProcessList: android.net.LocalSocket mSystemServerSocketForZygote>;

        $r21 = virtualinvoke $r20.<android.net.LocalSocket: java.io.FileDescriptor getFileDescriptor()>();

        $r22 = new com.android.server.am._$$Lambda$ProcessList$hjUwwFAIhoht4KRKnKeUve_Kcto;

        specialinvoke $r22.<com.android.server.am._$$Lambda$ProcessList$hjUwwFAIhoht4KRKnKeUve_Kcto: void <init>(com.android.server.am.ProcessList)>(r0);

        virtualinvoke $r19.<android.os.MessageQueue: void addOnFileDescriptorEventListener(java.io.FileDescriptor,int,android.os.MessageQueue$OnFileDescriptorEventListener)>($r21, 1, $r22);

     label3:
        $r13 = r0.<com.android.server.am.ProcessList: com.android.server.am.AppExitInfoTracker mAppExitInfoTracker>;

        $r12 = r0.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService>;

        virtualinvoke $r13.<com.android.server.am.AppExitInfoTracker: void init(com.android.server.am.ActivityManagerService)>($r12);

        $r14 = new com.android.server.am.ProcessList$ImperceptibleKillRunner;

        $r15 = <com.android.server.am.ProcessList: com.android.server.ServiceThread sKillThread>;

        $r16 = virtualinvoke $r15.<com.android.server.ServiceThread: android.os.Looper getLooper()>();

        specialinvoke $r14.<com.android.server.am.ProcessList$ImperceptibleKillRunner: void <init>(com.android.server.am.ProcessList,android.os.Looper)>(r0, $r16);

        r0.<com.android.server.am.ProcessList: com.android.server.am.ProcessList$ImperceptibleKillRunner mImperceptibleKillRunner> = $r14;

     label4:
        return;
    }

    void killAllBackgroundProcessesExceptLocked(int, int)
    {
        com.android.server.am.ProcessList r0;
        int i0, i1, $i2, $i3, i4, i5, i6, i7, i8, i9;
        android.util.SparseArray r2;
        com.android.server.am.ProcessRecord r3, $r8;
        java.util.ArrayList $r4;
        com.android.server.am.ProcessList$MyProcessMap $r5, $r9;
        android.util.ArrayMap $r6, $r10;
        java.lang.Object $r7, $r11, $r12;
        boolean $z1;
        android.content.pm.ApplicationInfo $r13;

        r0 := @this: com.android.server.am.ProcessList;

        i4 := @parameter0: int;

        i5 := @parameter1: int;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        $r5 = r0.<com.android.server.am.ProcessList: com.android.server.am.ProcessList$MyProcessMap mProcessNames>;

        $r6 = virtualinvoke $r5.<com.android.server.am.ProcessList$MyProcessMap: android.util.ArrayMap getMap()>();

        i0 = virtualinvoke $r6.<android.util.ArrayMap: int size()>();

        i6 = 0;

     label1:
        if i6 >= i0 goto label7;

        $r9 = r0.<com.android.server.am.ProcessList: com.android.server.am.ProcessList$MyProcessMap mProcessNames>;

        $r10 = virtualinvoke $r9.<com.android.server.am.ProcessList$MyProcessMap: android.util.ArrayMap getMap()>();

        $r11 = virtualinvoke $r10.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i6);

        r2 = (android.util.SparseArray) $r11;

        i1 = virtualinvoke r2.<android.util.SparseArray: int size()>();

        i7 = 0;

     label2:
        if i7 >= i1 goto label6;

        $r12 = virtualinvoke r2.<android.util.SparseArray: java.lang.Object valueAt(int)>(i7);

        r3 = (com.android.server.am.ProcessRecord) $r12;

        $z1 = r3.<com.android.server.am.ProcessRecord: boolean removed>;

        if $z1 != 0 goto label4;

        if i4 < 0 goto label3;

        $r13 = r3.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i3 = $r13.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i3 >= i4 goto label5;

     label3:
        if i5 < 0 goto label4;

        $i2 = r3.<com.android.server.am.ProcessRecord: int setProcState>;

        if $i2 <= i5 goto label5;

     label4:
        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r3);

     label5:
        i7 = i7 + 1;

        goto label2;

     label6:
        i6 = i6 + 1;

        goto label1;

     label7:
        i8 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        i9 = 0;

     label8:
        if i9 >= i8 goto label9;

        $r7 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i9);

        $r8 = (com.android.server.am.ProcessRecord) $r7;

        virtualinvoke r0.<com.android.server.am.ProcessList: boolean removeProcessLocked(com.android.server.am.ProcessRecord,boolean,boolean,int,int,java.lang.String)>($r8, 0, 1, 13, 10, "kill all background except");

        i9 = i9 + 1;

        goto label8;

     label9:
        return;
    }

    public void killAppZygoteIfNeededLocked(android.os.AppZygote, boolean)
    {
        com.android.server.am.ProcessList r0;
        android.os.AppZygote r1;
        boolean z0;
        android.content.pm.ApplicationInfo r2;
        java.util.ArrayList r3;
        android.util.ArrayMap $r4, $r9;
        java.lang.Object $r5;
        int $i0, $i1;
        java.lang.String $r6;
        com.android.internal.app.ProcessMap $r7;
        com.android.server.am.ProcessList$IsolatedUidRangeAllocator $r11;

        r0 := @this: com.android.server.am.ProcessList;

        r1 := @parameter0: android.os.AppZygote;

        z0 := @parameter1: boolean;

        r2 = virtualinvoke r1.<android.os.AppZygote: android.content.pm.ApplicationInfo getAppInfo()>();

        $r4 = r0.<com.android.server.am.ProcessList: android.util.ArrayMap mAppZygoteProcesses>;

        $r5 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (java.util.ArrayList) $r5;

        if r3 == null goto label2;

        if z0 != 0 goto label1;

        $i1 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        if $i1 != 0 goto label2;

     label1:
        $r7 = r0.<com.android.server.am.ProcessList: com.android.internal.app.ProcessMap mAppZygotes>;

        $r6 = r2.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        $i0 = r2.<android.content.pm.ApplicationInfo: int uid>;

        virtualinvoke $r7.<com.android.internal.app.ProcessMap: java.lang.Object remove(java.lang.String,int)>($r6, $i0);

        $r9 = r0.<com.android.server.am.ProcessList: android.util.ArrayMap mAppZygoteProcesses>;

        virtualinvoke $r9.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r1);

        $r11 = r0.<com.android.server.am.ProcessList: com.android.server.am.ProcessList$IsolatedUidRangeAllocator mAppIsolatedUidRangeAllocator>;

        virtualinvoke $r11.<com.android.server.am.ProcessList$IsolatedUidRangeAllocator: void freeUidRangeLocked(android.content.pm.ApplicationInfo)>(r2);

        virtualinvoke r1.<android.os.AppZygote: void stopZygote()>();

     label2:
        return;
    }

    void killAppZygotesLocked(java.lang.String, int, int, boolean)
    {
        com.android.server.am.ProcessList r0;
        int i0, i1, i2, $i3, $i4, $i5, i6;
        boolean z0, $z1, $z2, $z4;
        java.util.Iterator r2, r16;
        android.util.SparseArray r3;
        android.os.AppZygote r4, $r10;
        java.util.ArrayList $r5;
        com.android.internal.app.ProcessMap $r6;
        android.util.ArrayMap $r7;
        java.util.Collection $r8;
        java.lang.Object $r9, $r11, $r12;
        android.content.pm.ApplicationInfo $r13;
        java.lang.String $r14, r15;

        r0 := @this: com.android.server.am.ProcessList;

        r15 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        $r6 = r0.<com.android.server.am.ProcessList: com.android.internal.app.ProcessMap mAppZygotes>;

        $r7 = virtualinvoke $r6.<com.android.internal.app.ProcessMap: android.util.ArrayMap getMap()>();

        $r8 = virtualinvoke $r7.<android.util.ArrayMap: java.util.Collection values()>();

        r2 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();

     label01:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label08;

        $r11 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.util.SparseArray) $r11;

        i6 = 0;

     label02:
        $i3 = virtualinvoke r3.<android.util.SparseArray: int size()>();

        if i6 >= $i3 goto label07;

        i2 = virtualinvoke r3.<android.util.SparseArray: int keyAt(int)>(i6);

        if i1 == -1 goto label03;

        $i5 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i2);

        if $i5 == i1 goto label03;

        goto label06;

     label03:
        if i0 < 0 goto label04;

        $i4 = staticinvoke <android.os.UserHandle: int getAppId(int)>(i2);

        if $i4 == i0 goto label04;

        goto label06;

     label04:
        $r12 = virtualinvoke r3.<android.util.SparseArray: java.lang.Object valueAt(int)>(i6);

        r4 = (android.os.AppZygote) $r12;

        if r15 == null goto label05;

        $r13 = virtualinvoke r4.<android.os.AppZygote: android.content.pm.ApplicationInfo getAppInfo()>();

        $r14 = $r13.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $z4 = virtualinvoke r15.<java.lang.String: boolean equals(java.lang.Object)>($r14);

        if $z4 != 0 goto label05;

        goto label06;

     label05:
        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r4);

     label06:
        i6 = i6 + 1;

        goto label02;

     label07:
        goto label01;

     label08:
        r16 = virtualinvoke $r5.<java.util.ArrayList: java.util.Iterator iterator()>();

     label09:
        $z2 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label10;

        $r9 = interfaceinvoke r16.<java.util.Iterator: java.lang.Object next()>();

        $r10 = (android.os.AppZygote) $r9;

        virtualinvoke r0.<com.android.server.am.ProcessList: void killAppZygoteIfNeededLocked(android.os.AppZygote,boolean)>($r10, z0);

        goto label09;

     label10:
        return;
    }

    boolean killPackageProcessesLocked(java.lang.String, int, int, int, int, int, java.lang.String)
    {
        com.android.server.am.ProcessList r0;
        java.lang.String r1, r2;
        int i0, i1, i2, i3, i4;
        boolean $z0;

        r0 := @this: com.android.server.am.ProcessList;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        r2 := @parameter6: java.lang.String;

        $z0 = virtualinvoke r0.<com.android.server.am.ProcessList: boolean killPackageProcessesLocked(java.lang.String,int,int,int,boolean,boolean,boolean,boolean,boolean,int,int,java.lang.String)>(r1, i0, i1, i2, 0, 1, 1, 0, 0, i3, i4, r2);

        return $z0;
    }

    final boolean killPackageProcessesLocked(java.lang.String, int, int, int, boolean, boolean, boolean, boolean, boolean, int, int, java.lang.String)
    {
        com.android.server.am.ProcessList r0;
        java.lang.String r1, r2;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, i14, i15, i16, i17;
        boolean z0, z1, z2, z3, $z6, $z7, $z8, $z10, z12, z13, z14;
        android.util.SparseArray r4;
        com.android.server.am.ProcessRecord r5, $r11;
        java.util.ArrayList $r6;
        com.android.server.am.ProcessList$MyProcessMap $r7, $r12;
        android.util.ArrayMap $r8, $r13;
        com.android.server.am.ActivityManagerService $r9;
        java.lang.Object $r10, $r14, $r15;
        android.util.ArraySet $r16, $r18;
        com.android.server.am.ProcessRecord$PackageList $r17;

        r0 := @this: com.android.server.am.ProcessList;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i13 := @parameter3: int;

        z12 := @parameter4: boolean;

        z0 := @parameter5: boolean;

        z1 := @parameter6: boolean;

        z2 := @parameter7: boolean;

        z3 := @parameter8: boolean;

        i2 := @parameter9: int;

        i3 := @parameter10: int;

        r2 := @parameter11: java.lang.String;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        $r7 = r0.<com.android.server.am.ProcessList: com.android.server.am.ProcessList$MyProcessMap mProcessNames>;

        $r8 = virtualinvoke $r7.<com.android.server.am.ProcessList$MyProcessMap: android.util.ArrayMap getMap()>();

        i4 = virtualinvoke $r8.<android.util.ArrayMap: int size()>();

        i14 = 0;

     label01:
        if i14 >= i4 goto label18;

        $r12 = r0.<com.android.server.am.ProcessList: com.android.server.am.ProcessList$MyProcessMap mProcessNames>;

        $r13 = virtualinvoke $r12.<com.android.server.am.ProcessList$MyProcessMap: android.util.ArrayMap getMap()>();

        $r14 = virtualinvoke $r13.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i14);

        r4 = (android.util.SparseArray) $r14;

        i5 = virtualinvoke r4.<android.util.SparseArray: int size()>();

        i15 = 0;

     label02:
        if i15 >= i5 goto label17;

        $r15 = virtualinvoke r4.<android.util.SparseArray: java.lang.Object valueAt(int)>(i15);

        r5 = (com.android.server.am.ProcessRecord) $r15;

        $z6 = virtualinvoke r5.<com.android.server.am.ProcessRecord: boolean isPersistent()>();

        if $z6 == 0 goto label03;

        if z2 != 0 goto label03;

        goto label16;

     label03:
        $z7 = r5.<com.android.server.am.ProcessRecord: boolean removed>;

        if $z7 == 0 goto label05;

        if z1 == 0 goto label04;

        virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);

        goto label16;

     label04:
        goto label16;

     label05:
        $i6 = r5.<com.android.server.am.ProcessRecord: int setAdj>;

        if $i6 >= i13 goto label06;

        goto label16;

     label06:
        if r1 != null goto label08;

        if i1 == -1 goto label07;

        $i12 = r5.<com.android.server.am.ProcessRecord: int userId>;

        if $i12 == i1 goto label07;

        goto label16;

     label07:
        if i0 < 0 goto label13;

        $i10 = r5.<com.android.server.am.ProcessRecord: int uid>;

        $i11 = staticinvoke <android.os.UserHandle: int getAppId(int)>($i10);

        if $i11 == i0 goto label13;

        goto label16;

     label08:
        $r16 = r5.<com.android.server.am.ProcessRecord: android.util.ArraySet pkgDeps>;

        if $r16 == null goto label09;

        $r18 = r5.<com.android.server.am.ProcessRecord: android.util.ArraySet pkgDeps>;

        $z10 = virtualinvoke $r18.<android.util.ArraySet: boolean contains(java.lang.Object)>(r1);

        if $z10 == 0 goto label09;

        z13 = 1;

        goto label10;

     label09:
        z13 = 0;

     label10:
        if z13 != 0 goto label11;

        $i8 = r5.<com.android.server.am.ProcessRecord: int uid>;

        $i9 = staticinvoke <android.os.UserHandle: int getAppId(int)>($i8);

        if $i9 == i0 goto label11;

        goto label16;

     label11:
        if i1 == -1 goto label12;

        $i7 = r5.<com.android.server.am.ProcessRecord: int userId>;

        if $i7 == i1 goto label12;

        goto label16;

     label12:
        $r17 = r5.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        $z8 = virtualinvoke $r17.<com.android.server.am.ProcessRecord$PackageList: boolean containsKey(java.lang.Object)>(r1);

        if $z8 != 0 goto label13;

        if z13 != 0 goto label13;

        goto label16;

     label13:
        if z1 != 0 goto label14;

        return 1;

     label14:
        if z3 == 0 goto label15;

        r5.<com.android.server.am.ProcessRecord: boolean removed> = 1;

     label15:
        virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);

     label16:
        i15 = i15 + 1;

        goto label02;

     label17:
        i14 = i14 + 1;

        goto label01;

     label18:
        i16 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        i17 = 0;

     label19:
        if i17 >= i16 goto label20;

        $r10 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(i17);

        $r11 = (com.android.server.am.ProcessRecord) $r10;

        virtualinvoke r0.<com.android.server.am.ProcessList: boolean removeProcessLocked(com.android.server.am.ProcessRecord,boolean,boolean,int,int,java.lang.String)>($r11, z12, z0, i2, i3, r2);

        i17 = i17 + 1;

        goto label19;

     label20:
        virtualinvoke r0.<com.android.server.am.ProcessList: void killAppZygotesLocked(java.lang.String,int,int,boolean)>(r1, i0, i1, 0);

        $r9 = r0.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService>;

        virtualinvoke $r9.<com.android.server.am.ActivityManagerService: void updateOomAdjLocked(java.lang.String)>("updateOomAdj_processEnd");

        if i16 <= 0 goto label21;

        z14 = 1;

        goto label22;

     label21:
        z14 = 0;

     label22:
        return z14;
    }

    void killProcessesWhenImperceptible(int[], java.lang.String, int)
    {
        com.android.server.am.ProcessList r0;
        java.lang.String r1;
        int i0, $i1, $i2, i3;
        com.android.server.am.ActivityManagerService r2, $r5, $r6;
        com.android.server.am.ActivityManagerService$PidMap r3, $r7;
        com.android.server.am.ProcessRecord r4;
        boolean $z0;
        com.android.server.am.ProcessList$ImperceptibleKillRunner $r8;
        java.lang.Throwable $r9, $r10;
        int[] r11;

        r0 := @this: com.android.server.am.ProcessList;

        r11 := @parameter0: int[];

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $z0 = staticinvoke <com.android.internal.util.ArrayUtils: boolean isEmpty(int[])>(r11);

        if $z0 == 0 goto label01;

        return;

     label01:
        r2 = r0.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService>;

        entermonitor r2;

     label02:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

     label03:
        i3 = 0;

     label04:
        $i1 = lengthof r11;

        if i3 >= $i1 goto label12;

        $r5 = r0.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService>;

        r3 = $r5.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        entermonitor r3;

     label05:
        $r6 = r0.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService>;

        $r7 = $r6.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$PidMap mPidsSelfLocked>;

        $i2 = r11[i3];

        r4 = virtualinvoke $r7.<com.android.server.am.ActivityManagerService$PidMap: com.android.server.am.ProcessRecord get(int)>($i2);

        exitmonitor r3;

     label06:
        if r4 == null goto label08;

     label07:
        $r8 = r0.<com.android.server.am.ProcessList: com.android.server.am.ProcessList$ImperceptibleKillRunner mImperceptibleKillRunner>;

        virtualinvoke $r8.<com.android.server.am.ProcessList$ImperceptibleKillRunner: boolean enqueueLocked(com.android.server.am.ProcessRecord,java.lang.String,int)>(r4, r1, i0);

     label08:
        i3 = i3 + 1;

        goto label04;

     label09:
        $r9 := @caughtexception;

     label10:
        exitmonitor r3;

     label11:
        throw $r9;

     label12:
        exitmonitor r2;

     label13:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label14:
        $r10 := @caughtexception;

     label15:
        exitmonitor r2;

     label16:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r10;

        catch java.lang.Throwable from label02 to label03 with label14;
        catch java.lang.Throwable from label04 to label05 with label14;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label14;
        catch java.lang.Throwable from label10 to label11 with label09;
        catch java.lang.Throwable from label11 to label12 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label15 to label16 with label14;
    }

    public void lambda$startProcessLocked$0$ProcessList(com.android.server.am.ProcessRecord, java.lang.String, int[], int, int, int, java.lang.String, java.lang.String, java.lang.String, long)
    {
        com.android.server.am.ProcessList r0;
        com.android.server.am.ProcessRecord r1;
        java.lang.String r2, r4, r5, r6;
        int[] r3;
        int i0, i1, i2;
        long l3;

        r0 := @this: com.android.server.am.ProcessList;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: int[];

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        i2 := @parameter5: int;

        r4 := @parameter6: java.lang.String;

        r5 := @parameter7: java.lang.String;

        r6 := @parameter8: java.lang.String;

        l3 := @parameter9: long;

        specialinvoke r0.<com.android.server.am.ProcessList: void handleProcessStart(com.android.server.am.ProcessRecord,java.lang.String,int[],int,int,int,java.lang.String,java.lang.String,java.lang.String,long)>(r1, r2, r3, i0, i1, i2, r4, r5, r6, l3);

        return;
    }

    final com.android.server.am.ProcessRecord newProcessRecordLocked(android.content.pm.ApplicationInfo, java.lang.String, boolean, int, com.android.server.am.HostingRecord)
    {
        com.android.server.am.ProcessList r0;
        android.content.pm.ApplicationInfo r1;
        boolean z0, $z1, $z2;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9;
        com.android.server.am.ActivityManagerService $r2, $r5, $r7, $r13, $r15;
        com.android.server.am.AppExitInfoTracker $r3;
        com.android.server.am.AppExitInfoTracker$IsolatedUidRecords $r4;
        android.content.pm.PackageManagerInternal $r6;
        com.android.server.am.BatteryStatsService $r8;
        java.lang.String r9;
        com.android.server.am.HostingRecord r10;
        com.android.server.am.ProcessList$IsolatedUidRange r11;
        com.android.server.am.ProcessRecord $r12;

        r0 := @this: com.android.server.am.ProcessList;

        r1 := @parameter0: android.content.pm.ApplicationInfo;

        r9 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        i0 := @parameter3: int;

        r10 := @parameter4: com.android.server.am.HostingRecord;

        if r9 == null goto label1;

        goto label2;

     label1:
        r9 = r1.<android.content.pm.ApplicationInfo: java.lang.String processName>;

     label2:
        $i2 = r1.<android.content.pm.ApplicationInfo: int uid>;

        i1 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i2);

        i9 = r1.<android.content.pm.ApplicationInfo: int uid>;

        if z0 == 0 goto label7;

        if i0 != 0 goto label5;

        r11 = specialinvoke r0.<com.android.server.am.ProcessList: com.android.server.am.ProcessList$IsolatedUidRange getOrCreateIsolatedUidRangeLocked(android.content.pm.ApplicationInfo,com.android.server.am.HostingRecord)>(r1, r10);

        if r11 != null goto label3;

        return null;

     label3:
        i9 = virtualinvoke r11.<com.android.server.am.ProcessList$IsolatedUidRange: int allocateIsolatedUidLocked(int)>(i1);

        if i9 != -1 goto label4;

        return null;

     label4:
        goto label6;

     label5:
        i9 = i0;

     label6:
        $r3 = r0.<com.android.server.am.ProcessList: com.android.server.am.AppExitInfoTracker mAppExitInfoTracker>;

        $r4 = $r3.<com.android.server.am.AppExitInfoTracker: com.android.server.am.AppExitInfoTracker$IsolatedUidRecords mIsolatedUidRecords>;

        $i5 = r1.<android.content.pm.ApplicationInfo: int uid>;

        virtualinvoke $r4.<com.android.server.am.AppExitInfoTracker$IsolatedUidRecords: void addIsolatedUid(int,int)>(i9, $i5);

        $r5 = r0.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService>;

        $r6 = virtualinvoke $r5.<com.android.server.am.ActivityManagerService: android.content.pm.PackageManagerInternal getPackageManagerInternalLocked()>();

        $i6 = r1.<android.content.pm.ApplicationInfo: int uid>;

        virtualinvoke $r6.<android.content.pm.PackageManagerInternal: void addIsolatedUid(int,int)>(i9, $i6);

        $r7 = r0.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService>;

        $r8 = $r7.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        $i7 = r1.<android.content.pm.ApplicationInfo: int uid>;

        virtualinvoke $r8.<com.android.server.am.BatteryStatsService: void addIsolatedUid(int,int)>(i9, $i7);

        $i8 = r1.<android.content.pm.ApplicationInfo: int uid>;

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int,int,int)>(43, $i8, i9, 1);

     label7:
        $r12 = new com.android.server.am.ProcessRecord;

        $r13 = r0.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService>;

        specialinvoke $r12.<com.android.server.am.ProcessRecord: void <init>(com.android.server.am.ActivityManagerService,android.content.pm.ApplicationInfo,java.lang.String,int)>($r13, r1, r9, i9);

        $r15 = r0.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService>;

        $z2 = $r15.<com.android.server.am.ActivityManagerService: boolean mBooted>;

        if $z2 != 0 goto label8;

        $r2 = r0.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService>;

        $z1 = $r2.<com.android.server.am.ActivityManagerService: boolean mBooting>;

        if $z1 != 0 goto label8;

        if i1 != 0 goto label8;

        $i3 = r1.<android.content.pm.ApplicationInfo: int flags>;

        $i4 = $i3 & 9;

        if $i4 != 9 goto label8;

        virtualinvoke $r12.<com.android.server.am.ProcessRecord: void setCurrentSchedulingGroup(int)>(2);

        $r12.<com.android.server.am.ProcessRecord: int setSchedGroup> = 2;

        virtualinvoke $r12.<com.android.server.am.ProcessRecord: void setPersistent(boolean)>(1);

        $r12.<com.android.server.am.ProcessRecord: int maxAdj> = -800;

     label8:
        if z0 == 0 goto label9;

        if i0 == 0 goto label9;

        $r12.<com.android.server.am.ProcessRecord: int maxAdj> = -700;

     label9:
        virtualinvoke r0.<com.android.server.am.ProcessList: void addProcessNameLocked(com.android.server.am.ProcessRecord)>($r12);

        return $r12;
    }

    void noteAppKill(int, int, int, int, java.lang.String)
    {
        com.android.server.am.ProcessList r0;
        int i0, i1, i2, i3;
        java.lang.String r1;
        com.android.server.am.AppExitInfoTracker $r2;

        r0 := @this: com.android.server.am.ProcessList;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r1 := @parameter4: java.lang.String;

        $r2 = r0.<com.android.server.am.ProcessList: com.android.server.am.AppExitInfoTracker mAppExitInfoTracker>;

        virtualinvoke $r2.<com.android.server.am.AppExitInfoTracker: void scheduleNoteAppKill(int,int,int,int,java.lang.String)>(i0, i1, i2, i3, r1);

        return;
    }

    void noteAppKill(com.android.server.am.ProcessRecord, int, int, java.lang.String)
    {
        com.android.server.am.ProcessList r0;
        com.android.server.am.ProcessRecord r1;
        int i0, i1;
        java.lang.String r2;
        com.android.server.am.AppExitInfoTracker $r3;

        r0 := @this: com.android.server.am.ProcessList;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: java.lang.String;

        $r3 = r0.<com.android.server.am.ProcessList: com.android.server.am.AppExitInfoTracker mAppExitInfoTracker>;

        virtualinvoke $r3.<com.android.server.am.AppExitInfoTracker: void scheduleNoteAppKill(com.android.server.am.ProcessRecord,int,int,java.lang.String)>(r1, i0, i1, r2);

        return;
    }

    void noteProcessDiedLocked(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ProcessList r0;
        com.android.server.am.ProcessRecord r1;
        com.android.server.Watchdog $r2;
        int $i0;
        java.lang.String $r3;
        com.android.server.am.AppExitInfoTracker $r4;

        r0 := @this: com.android.server.am.ProcessList;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        $r2 = staticinvoke <com.android.server.Watchdog: com.android.server.Watchdog getInstance()>();

        $r3 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $i0 = r1.<com.android.server.am.ProcessRecord: int pid>;

        virtualinvoke $r2.<com.android.server.Watchdog: void processDied(java.lang.String,int)>($r3, $i0);

        $r4 = r0.<com.android.server.am.ProcessList: com.android.server.am.AppExitInfoTracker mAppExitInfoTracker>;

        virtualinvoke $r4.<com.android.server.am.AppExitInfoTracker: void scheduleNoteProcessDied(com.android.server.am.ProcessRecord)>(r1);

        return;
    }

    public boolean onLmkdConnect(java.io.OutputStream)
    {
        com.android.server.am.ProcessList r0;
        byte[] $r2, $r5, $r9;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12;
        boolean $z0;
        int[] $r6, $r8, $r10, $r12;
        java.lang.Throwable $r14;
        java.io.OutputStream r15;
        java.nio.ByteBuffer r16, r17, r18;

        r0 := @this: com.android.server.am.ProcessList;

        r15 := @parameter0: java.io.OutputStream;

     label1:
        r16 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(4);

        virtualinvoke r16.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>(3);

        $r2 = virtualinvoke r16.<java.nio.ByteBuffer: byte[] array()>();

        $i0 = virtualinvoke r16.<java.nio.ByteBuffer: int position()>();

        virtualinvoke r15.<java.io.OutputStream: void write(byte[],int,int)>($r2, 0, $i0);

        $z0 = r0.<com.android.server.am.ProcessList: boolean mOomLevelsSet>;

        if $z0 == 0 goto label6;

        $r6 = r0.<com.android.server.am.ProcessList: int[] mOomAdj>;

        $i2 = lengthof $r6;

        $i3 = $i2 * 2;

        $i4 = $i3 + 1;

        $i5 = $i4 * 4;

        r17 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>($i5);

        virtualinvoke r17.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>(0);

     label2:
        i12 = 0;

     label3:
        $r8 = r0.<com.android.server.am.ProcessList: int[] mOomAdj>;

        $i6 = lengthof $r8;

        if i12 >= $i6 goto label5;

        $r10 = r0.<com.android.server.am.ProcessList: int[] mOomMinFree>;

        $i8 = $r10[i12];

        $i9 = $i8 * 1024;

        $i10 = $i9 / 4096;

        virtualinvoke r17.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>($i10);

        $r12 = r0.<com.android.server.am.ProcessList: int[] mOomAdj>;

        $i11 = $r12[i12];

        virtualinvoke r17.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>($i11);

     label4:
        i12 = i12 + 1;

        goto label3;

     label5:
        $r9 = virtualinvoke r17.<java.nio.ByteBuffer: byte[] array()>();

        $i7 = virtualinvoke r17.<java.nio.ByteBuffer: int position()>();

        virtualinvoke r15.<java.io.OutputStream: void write(byte[],int,int)>($r9, 0, $i7);

     label6:
        r18 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(8);

        virtualinvoke r18.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>(5);

        virtualinvoke r18.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>(0);

        $r5 = virtualinvoke r18.<java.nio.ByteBuffer: byte[] array()>();

        $i1 = virtualinvoke r18.<java.nio.ByteBuffer: int position()>();

        virtualinvoke r15.<java.io.OutputStream: void write(byte[],int,int)>($r5, 0, $i1);

     label7:
        return 1;

     label8:
        $r14 := @caughtexception;

        return 0;

        catch java.io.IOException from label1 to label2 with label8;
        catch java.io.IOException from label3 to label4 with label8;
        catch java.io.IOException from label5 to label6 with label8;
        catch java.io.IOException from label6 to label7 with label8;
    }

    void onSystemReady()
    {
        com.android.server.am.ProcessList r0;
        com.android.server.am.AppExitInfoTracker $r1;

        r0 := @this: com.android.server.am.ProcessList;

        $r1 = r0.<com.android.server.am.ProcessList: com.android.server.am.AppExitInfoTracker mAppExitInfoTracker>;

        virtualinvoke $r1.<com.android.server.am.AppExitInfoTracker: void onSystemReady()>();

        return;
    }

    final void removeLruProcessLocked(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ProcessList r0;
        com.android.server.am.ProcessRecord r1;
        int i0, $i1, $i2, $i4, $i5, $i6, $i7, i9, i10;
        java.util.ArrayList $r2, $r3;
        boolean $z0, $z1;
        java.lang.StringBuilder $r5, $r9;
        java.lang.String $r8, $r12;

        r0 := @this: com.android.server.am.ProcessList;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        $r2 = r0.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        i0 = virtualinvoke $r2.<java.util.ArrayList: int lastIndexOf(java.lang.Object)>(r1);

        if i0 < 0 goto label6;

        $z0 = r1.<com.android.server.am.ProcessRecord: boolean killed>;

        if $z0 != 0 goto label3;

        $z1 = virtualinvoke r1.<com.android.server.am.ProcessRecord: boolean isPersistent()>();

        if $z1 == 0 goto label1;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removing persistent process that hasn\'t been killed: ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r12);

        goto label3;

     label1:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removing process that hasn\'t been killed: ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtfStack(java.lang.String,java.lang.String)>("ActivityManager", $r8);

        $i4 = r1.<com.android.server.am.ProcessRecord: int pid>;

        if $i4 <= 0 goto label2;

        $i5 = r1.<com.android.server.am.ProcessRecord: int pid>;

        staticinvoke <android.os.Process: void killProcessQuiet(int)>($i5);

        $i7 = r1.<com.android.server.am.ProcessRecord: int uid>;

        $i6 = r1.<com.android.server.am.ProcessRecord: int pid>;

        staticinvoke <com.android.server.am.ProcessList: void killProcessGroup(int,int)>($i7, $i6);

        virtualinvoke r0.<com.android.server.am.ProcessList: void noteAppKill(com.android.server.am.ProcessRecord,int,int,java.lang.String)>(r1, 13, 16, "hasn\'t been killed");

        goto label3;

     label2:
        r1.<com.android.server.am.ProcessRecord: boolean pendingStart> = 0;

     label3:
        i9 = r0.<com.android.server.am.ProcessList: int mLruProcessActivityStart>;

        if i0 >= i9 goto label4;

        $i2 = i9 - 1;

        r0.<com.android.server.am.ProcessList: int mLruProcessActivityStart> = $i2;

     label4:
        i10 = r0.<com.android.server.am.ProcessList: int mLruProcessServiceStart>;

        if i0 >= i10 goto label5;

        $i1 = i10 - 1;

        r0.<com.android.server.am.ProcessList: int mLruProcessServiceStart> = $i1;

     label5:
        $r3 = r0.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        virtualinvoke $r3.<java.util.ArrayList: java.lang.Object remove(int)>(i0);

     label6:
        return;
    }

    boolean removeProcessLocked(com.android.server.am.ProcessRecord, boolean, boolean, int, int, java.lang.String)
    {
        com.android.server.am.ProcessList r0;
        com.android.server.am.ProcessRecord r1, $r5;
        boolean z0, z1, $z5, $z6, $z7, z8, z9, $z10;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        java.lang.String r2, $r19, $r29, r30;
        com.android.server.am.ProcessList$MyProcessMap $r3;
        java.lang.Object $r4;
        com.android.server.am.ActivityManagerService $r7, $r12, $r14, $r15, $r17, $r21, $r24, $r32;
        com.android.server.wm.ActivityTaskManagerInternal $r8;
        com.android.server.wm.WindowProcessController $r9;
        java.util.ArrayList $r10;
        android.content.pm.ApplicationInfo $r11, $r18, $r22;
        com.android.server.am.ActivityManagerService$MainHandler $r16;
        com.android.server.am.BatteryStatsService $r20, $r23;
        android.content.pm.PackageManagerInternal $r25;
        java.lang.StringBuilder $r26;

        r0 := @this: com.android.server.am.ProcessList;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        r30 := @parameter5: java.lang.String;

        r2 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        i2 = r1.<com.android.server.am.ProcessRecord: int uid>;

        $r3 = r0.<com.android.server.am.ProcessList: com.android.server.am.ProcessList$MyProcessMap mProcessNames>;

        $r4 = virtualinvoke $r3.<com.android.server.am.ProcessList$MyProcessMap: java.lang.Object get(java.lang.String,int)>(r2, i2);

        $r5 = (com.android.server.am.ProcessRecord) $r4;

        if $r5 == r1 goto label1;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring remove of inactive process: ");

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r29 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r29);

        return 0;

     label1:
        virtualinvoke r0.<com.android.server.am.ProcessList: com.android.server.am.ProcessRecord removeProcessNameLocked(java.lang.String,int)>(r2, i2);

        $r7 = r0.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService>;

        $r8 = $r7.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerInternal mAtmInternal>;

        $r9 = virtualinvoke r1.<com.android.server.am.ProcessRecord: com.android.server.wm.WindowProcessController getWindowProcessController()>();

        virtualinvoke $r8.<com.android.server.wm.ActivityTaskManagerInternal: void clearHeavyWeightProcessIfEquals(com.android.server.wm.WindowProcessController)>($r9);

        z8 = 0;

        $i3 = r1.<com.android.server.am.ProcessRecord: int pid>;

        if $i3 <= 0 goto label2;

        $i11 = r1.<com.android.server.am.ProcessRecord: int pid>;

        $i10 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        if $i11 != $i10 goto label3;

     label2:
        $i4 = r1.<com.android.server.am.ProcessRecord: int pid>;

        if $i4 != 0 goto label8;

        $z5 = r1.<com.android.server.am.ProcessRecord: boolean pendingStart>;

        if $z5 == 0 goto label8;

     label3:
        $i5 = r1.<com.android.server.am.ProcessRecord: int pid>;

        if $i5 <= 0 goto label4;

        $r14 = r0.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService>;

        virtualinvoke $r14.<com.android.server.am.ActivityManagerService: void removePidLocked(com.android.server.am.ProcessRecord)>(r1);

        r1.<com.android.server.am.ProcessRecord: boolean bindMountPending> = 0;

        $r15 = r0.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService>;

        $r16 = $r15.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        virtualinvoke $r16.<com.android.server.am.ActivityManagerService$MainHandler: void removeMessages(int,java.lang.Object)>(20, r1);

        $r17 = r0.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService>;

        $r20 = $r17.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        $r19 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r18 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i6 = $r18.<android.content.pm.ApplicationInfo: int uid>;

        virtualinvoke $r20.<com.android.server.am.BatteryStatsService: void noteProcessFinish(java.lang.String,int)>($r19, $i6);

        $z7 = r1.<com.android.server.am.ProcessRecord: boolean isolated>;

        if $z7 == 0 goto label4;

        $r21 = r0.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService>;

        $r23 = $r21.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        $i8 = r1.<com.android.server.am.ProcessRecord: int uid>;

        $r22 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i7 = $r22.<android.content.pm.ApplicationInfo: int uid>;

        virtualinvoke $r23.<com.android.server.am.BatteryStatsService: void removeIsolatedUid(int,int)>($i8, $i7);

        $r24 = r0.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService>;

        $r25 = virtualinvoke $r24.<com.android.server.am.ActivityManagerService: android.content.pm.PackageManagerInternal getPackageManagerInternalLocked()>();

        $i9 = r1.<com.android.server.am.ProcessRecord: int uid>;

        virtualinvoke $r25.<android.content.pm.PackageManagerInternal: void removeIsolatedUid(int)>($i9);

     label4:
        z9 = 0;

        z8 = 0;

        $z10 = virtualinvoke r1.<com.android.server.am.ProcessRecord: boolean isPersistent()>();

        if $z10 == 0 goto label6;

        z9 = 0;

        z8 = 0;

        $z6 = r1.<com.android.server.am.ProcessRecord: boolean isolated>;

        if $z6 != 0 goto label6;

        if z0 != 0 goto label5;

        z9 = 1;

        z8 = 0;

        goto label6;

     label5:
        z8 = 1;

        z9 = 0;

     label6:
        virtualinvoke r1.<com.android.server.am.ProcessRecord: void kill(java.lang.String,int,int,boolean)>(r30, i0, i1, 1);

        $r32 = r0.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService>;

        virtualinvoke $r32.<com.android.server.am.ActivityManagerService: void handleAppDiedLocked(com.android.server.am.ProcessRecord,boolean,boolean)>(r1, z9, z1);

        if z9 == 0 goto label7;

        virtualinvoke r0.<com.android.server.am.ProcessList: void removeLruProcessLocked(com.android.server.am.ProcessRecord)>(r1);

        $r12 = r0.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService>;

        $r11 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        virtualinvoke $r12.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord addAppLocked(android.content.pm.ApplicationInfo,java.lang.String,boolean,java.lang.String,int)>($r11, null, 0, null, 0);

     label7:
        goto label9;

     label8:
        $r10 = r0.<com.android.server.am.ProcessList: java.util.ArrayList mRemovedProcesses>;

        virtualinvoke $r10.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

     label9:
        return z8;
    }

    boolean removeProcessLocked(com.android.server.am.ProcessRecord, boolean, boolean, int, java.lang.String)
    {
        com.android.server.am.ProcessList r0;
        com.android.server.am.ProcessRecord r1;
        boolean z0, z1, $z2;
        int i0;
        java.lang.String r2;

        r0 := @this: com.android.server.am.ProcessList;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        i0 := @parameter3: int;

        r2 := @parameter4: java.lang.String;

        $z2 = virtualinvoke r0.<com.android.server.am.ProcessList: boolean removeProcessLocked(com.android.server.am.ProcessRecord,boolean,boolean,int,int,java.lang.String)>(r1, z0, z1, i0, 0, r2);

        return $z2;
    }

    final com.android.server.am.ProcessRecord removeProcessNameLocked(java.lang.String, int)
    {
        com.android.server.am.ProcessList r0;
        java.lang.String r1;
        int i0;
        com.android.server.am.ProcessRecord $r2;

        r0 := @this: com.android.server.am.ProcessList;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r0.<com.android.server.am.ProcessList: com.android.server.am.ProcessRecord removeProcessNameLocked(java.lang.String,int,com.android.server.am.ProcessRecord)>(r1, i0, null);

        return $r2;
    }

    final com.android.server.am.ProcessRecord removeProcessNameLocked(java.lang.String, int, com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ProcessList r0;
        int i0, $i1, $i2, $i3;
        com.android.server.am.ProcessRecord r1, r2, r19;
        com.android.server.am.ProcessList$MyProcessMap $r3, $r5;
        java.lang.Object $r4;
        boolean $z0;
        com.android.server.am.UidRecord $r7, $r8, $r10, $r11, r16;
        android.util.ArraySet $r9;
        com.android.server.am.ActivityManagerService $r12, $r14;
        com.android.server.am.ActiveUids $r13;
        java.lang.String r15;
        android.util.SparseArray $r17;
        com.android.server.am.ProcessList$IsolatedUidRange $r18;

        r0 := @this: com.android.server.am.ProcessList;

        r15 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 := @parameter2: com.android.server.am.ProcessRecord;

        $r3 = r0.<com.android.server.am.ProcessList: com.android.server.am.ProcessList$MyProcessMap mProcessNames>;

        $r4 = virtualinvoke $r3.<com.android.server.am.ProcessList$MyProcessMap: java.lang.Object get(java.lang.String,int)>(r15, i0);

        r2 = (com.android.server.am.ProcessRecord) $r4;

        if r1 == null goto label1;

        if r2 != r1 goto label2;

     label1:
        $r5 = r0.<com.android.server.am.ProcessList: com.android.server.am.ProcessList$MyProcessMap mProcessNames>;

        virtualinvoke $r5.<com.android.server.am.ProcessList$MyProcessMap: com.android.server.am.ProcessRecord remove(java.lang.String,int)>(r15, i0);

     label2:
        if r2 == null goto label4;

        $r7 = r2.<com.android.server.am.ProcessRecord: com.android.server.am.UidRecord uidRecord>;

        if $r7 == null goto label4;

        r16 = r2.<com.android.server.am.ProcessRecord: com.android.server.am.UidRecord uidRecord>;

        $i1 = r16.<com.android.server.am.UidRecord: int numProcs>;

        $i2 = $i1 - 1;

        r16.<com.android.server.am.UidRecord: int numProcs> = $i2;

        $r8 = r2.<com.android.server.am.ProcessRecord: com.android.server.am.UidRecord uidRecord>;

        $r9 = $r8.<com.android.server.am.UidRecord: android.util.ArraySet procRecords>;

        virtualinvoke $r9.<android.util.ArraySet: boolean remove(java.lang.Object)>(r2);

        $r10 = r2.<com.android.server.am.ProcessRecord: com.android.server.am.UidRecord uidRecord>;

        $i3 = $r10.<com.android.server.am.UidRecord: int numProcs>;

        if $i3 != 0 goto label3;

        $r12 = r0.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService>;

        $r11 = r2.<com.android.server.am.ProcessRecord: com.android.server.am.UidRecord uidRecord>;

        virtualinvoke $r12.<com.android.server.am.ActivityManagerService: void enqueueUidChangeLocked(com.android.server.am.UidRecord,int,int)>($r11, -1, 1);

        staticinvoke <com.android.server.am.EventLogTags: void writeAmUidStopped(int)>(i0);

        $r13 = r0.<com.android.server.am.ProcessList: com.android.server.am.ActiveUids mActiveUids>;

        virtualinvoke $r13.<com.android.server.am.ActiveUids: void remove(int)>(i0);

        $r14 = r0.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService>;

        virtualinvoke $r14.<com.android.server.am.ActivityManagerService: void noteUidProcessState(int,int,int)>(i0, 20, 0);

     label3:
        r2.<com.android.server.am.ProcessRecord: com.android.server.am.UidRecord uidRecord> = null;

     label4:
        $r17 = r0.<com.android.server.am.ProcessList: android.util.SparseArray mIsolatedProcesses>;

        virtualinvoke $r17.<android.util.SparseArray: void remove(int)>(i0);

        $r18 = r0.<com.android.server.am.ProcessList: com.android.server.am.ProcessList$IsolatedUidRange mGlobalIsolatedUids>;

        virtualinvoke $r18.<com.android.server.am.ProcessList$IsolatedUidRange: void freeIsolatedUidLocked(int)>(i0);

        if r1 == null goto label5;

        r19 = r1;

        goto label6;

     label5:
        r19 = r2;

     label6:
        if r19 == null goto label7;

        $z0 = r19.<com.android.server.am.ProcessRecord: boolean appZygote>;

        if $z0 == 0 goto label7;

        specialinvoke r0.<com.android.server.am.ProcessList: void removeProcessFromAppZygoteLocked(com.android.server.am.ProcessRecord)>(r19);

     label7:
        return r2;
    }

    void sendPackageBroadcastLocked(int, java.lang.String[], int)
    {
        com.android.server.am.ProcessList r0;
        int i0, i1, $i2, $i3, $i4, i5, i6;
        java.util.ArrayList $r1, $r3;
        android.content.pm.IPackageManager $r2;
        java.lang.Object $r4;
        android.app.IApplicationThread $r5, $r6;
        android.content.pm.ApplicationInfo $r7;
        java.lang.String $r8, $r9;
        boolean $z0, z1, z2, z3;
        android.os.RemoteException $r10, $r11;
        java.lang.String[] r12;
        com.android.server.am.ProcessRecord r13;

        r0 := @this: com.android.server.am.ProcessList;

        i0 := @parameter0: int;

        r12 := @parameter1: java.lang.String[];

        i1 := @parameter2: int;

        z1 = 0;

        $r1 = r0.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        $i2 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        i5 = $i2 - 1;

     label01:
        if i5 < 0 goto label13;

        $r3 = r0.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        r13 = (com.android.server.am.ProcessRecord) $r4;

        z2 = z1;

        $r5 = r13.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r5 == null goto label12;

        if i1 == -1 goto label02;

        z2 = z1;

        $i4 = r13.<com.android.server.am.ProcessRecord: int userId>;

        if $i4 != i1 goto label12;

     label02:
        z2 = z1;

     label03:
        $i3 = lengthof r12;

        i6 = $i3 - 1;

     label04:
        if i6 < 0 goto label08;

        if z1 != 0 goto label08;

        z3 = z1;

        z2 = z1;

     label05:
        $r9 = r12[i6];

        $r7 = r13.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r8 = $r7.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z0 == 0 goto label07;

     label06:
        z3 = 1;

     label07:
        i6 = i6 + -1;

        z1 = z3;

        goto label04;

     label08:
        z2 = z1;

     label09:
        $r6 = r13.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        interfaceinvoke $r6.<android.app.IApplicationThread: void dispatchPackageBroadcast(int,java.lang.String[])>(i0, r12);

     label10:
        z2 = z1;

        goto label12;

     label11:
        $r11 := @caughtexception;

     label12:
        i5 = i5 + -1;

        z1 = z2;

        goto label01;

     label13:
        if z1 != 0 goto label17;

     label14:
        $r2 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        interfaceinvoke $r2.<android.content.pm.IPackageManager: void notifyPackagesReplacedReceived(java.lang.String[])>(r12);

     label15:
        goto label17;

     label16:
        $r10 := @caughtexception;

     label17:
        return;

        catch android.os.RemoteException from label03 to label04 with label11;
        catch android.os.RemoteException from label05 to label06 with label11;
        catch android.os.RemoteException from label09 to label10 with label11;
        catch android.os.RemoteException from label14 to label15 with label16;
    }

    void setAllHttpProxy()
    {
        com.android.server.am.ProcessList r0;
        com.android.server.am.ActivityManagerService r1, $r3;
        boolean z0;
        java.util.ArrayList $r2, $r5;
        int $i0, $i1, $i2, i4;
        android.content.Context $r4;
        java.lang.Object $r6;
        android.app.IApplicationThread $r7, $r8;
        java.lang.Throwable $r9;
        android.os.RemoteException $r10;
        android.content.pm.ApplicationInfo $r12;
        java.lang.String $r13, $r15;
        com.android.server.am.ProcessRecord r16;
        java.lang.StringBuilder r18;

        r0 := @this: com.android.server.am.ProcessList;

        r1 = r0.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService>;

        entermonitor r1;

     label01:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r2 = r0.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i4 = $i0 - 1;

     label02:
        if i4 < 0 goto label10;

     label03:
        $r5 = r0.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        r16 = (com.android.server.am.ProcessRecord) $r6;

        $i2 = r16.<com.android.server.am.ProcessRecord: int pid>;

        $i1 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        if $i2 == $i1 goto label09;

        $r7 = r16.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r7 == null goto label09;

        z0 = r16.<com.android.server.am.ProcessRecord: boolean isolated>;

     label04:
        if z0 != 0 goto label09;

     label05:
        $r8 = r16.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        interfaceinvoke $r8.<android.app.IApplicationThread: void updateHttpProxy()>();

     label06:
        goto label09;

     label07:
        $r10 := @caughtexception;

     label08:
        r18 = new java.lang.StringBuilder;

        specialinvoke r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to update http proxy for: ");

        $r12 = r16.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r13 = $r12.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r15);

     label09:
        i4 = i4 + -1;

        goto label02;

     label10:
        exitmonitor r1;

     label11:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        $r3 = r0.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService>;

        $r4 = $r3.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        staticinvoke <android.app.ActivityThread: void updateHttpProxy(android.content.Context)>($r4);

        return;

     label12:
        $r9 := @caughtexception;

     label13:
        exitmonitor r1;

     label14:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch android.os.RemoteException from label05 to label06 with label07;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    final com.android.server.am.ProcessRecord startProcessLocked(java.lang.String, android.content.pm.ApplicationInfo, boolean, int, com.android.server.am.HostingRecord, int, boolean, boolean, int, boolean, java.lang.String, java.lang.String, java.lang.String[], java.lang.Runnable)
    {
        com.android.server.am.ProcessList r0;
        java.lang.String r1, r3, r4, $r9, $r17, $r20, $r21, $r24, $r32;
        android.content.pm.ApplicationInfo r2;
        int i0, i1, i2, $i5, $i6, $i7, $i8, $i10, $i11, $i12, $i13, $i14;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6, $z7, $z8, z9, z10;
        java.lang.String[] r5;
        java.lang.Runnable r6;
        long l3, $l4, $l9;
        com.android.server.am.ActivityManagerService $r7, $r10, $r11, $r12, $r14, $r22, $r25, $r27, $r33, $r35;
        com.android.server.am.ProcessStatsService $r8, $r23;
        java.util.ArrayList $r13, $r15;
        java.lang.StringBuilder $r16, $r19;
        android.app.IApplicationThread $r18;
        com.android.server.am.AppErrors $r26, $r28, $r34, $r36;
        java.lang.Object[] $r29;
        java.lang.Integer $r30, $r31;
        com.android.server.am.HostingRecord r37;
        com.android.server.am.ProcessRecord r38, r39, r41;

        r0 := @this: com.android.server.am.ProcessList;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.content.pm.ApplicationInfo;

        z9 := @parameter2: boolean;

        i0 := @parameter3: int;

        r37 := @parameter4: com.android.server.am.HostingRecord;

        i1 := @parameter5: int;

        z0 := @parameter6: boolean;

        z1 := @parameter7: boolean;

        i2 := @parameter8: int;

        z2 := @parameter9: boolean;

        r3 := @parameter10: java.lang.String;

        r4 := @parameter11: java.lang.String;

        r5 := @parameter12: java.lang.String[];

        r6 := @parameter13: java.lang.Runnable;

        l3 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        if z1 != 0 goto label02;

        $i10 = r2.<android.content.pm.ApplicationInfo: int uid>;

        r38 = virtualinvoke r0.<com.android.server.am.ProcessList: com.android.server.am.ProcessRecord getProcessRecordLocked(java.lang.String,int,boolean)>(r1, $i10, z2);

        specialinvoke r0.<com.android.server.am.ProcessList: void checkSlow(long,java.lang.String)>(l3, "startProcess: after getProcessRecord");

        $i11 = i0 & 4;

        if $i11 == 0 goto label01;

        r39 = r38;

        $r35 = r0.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService>;

        $r36 = $r35.<com.android.server.am.ActivityManagerService: com.android.server.am.AppErrors mAppErrors>;

        $z8 = virtualinvoke $r36.<com.android.server.am.AppErrors: boolean isBadProcessLocked(android.content.pm.ApplicationInfo)>(r2);

        if $z8 == 0 goto label03;

        return null;

     label01:
        $r25 = r0.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService>;

        $r26 = $r25.<com.android.server.am.ActivityManagerService: com.android.server.am.AppErrors mAppErrors>;

        virtualinvoke $r26.<com.android.server.am.AppErrors: void resetProcessCrashTimeLocked(android.content.pm.ApplicationInfo)>(r2);

        r39 = r38;

        $r27 = r0.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService>;

        $r28 = $r27.<com.android.server.am.ActivityManagerService: com.android.server.am.AppErrors mAppErrors>;

        $z7 = virtualinvoke $r28.<com.android.server.am.AppErrors: boolean isBadProcessLocked(android.content.pm.ApplicationInfo)>(r2);

        if $z7 == 0 goto label03;

        $r29 = newarray (java.lang.Object)[3];

        $i12 = r2.<android.content.pm.ApplicationInfo: int uid>;

        $i13 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i12);

        $r30 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i13);

        $r29[0] = $r30;

        $i14 = r2.<android.content.pm.ApplicationInfo: int uid>;

        $r31 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i14);

        $r29[1] = $r31;

        $r32 = r2.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        $r29[2] = $r32;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(30016, $r29);

        $r33 = r0.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService>;

        $r34 = $r33.<com.android.server.am.ActivityManagerService: com.android.server.am.AppErrors mAppErrors>;

        virtualinvoke $r34.<com.android.server.am.AppErrors: void clearBadProcessLocked(android.content.pm.ApplicationInfo)>(r2);

        r39 = r38;

        if r38 == null goto label03;

        r38.<com.android.server.am.ProcessRecord: boolean bad> = 0;

        r39 = r38;

        goto label03;

     label02:
        r39 = null;

     label03:
        if r39 == null goto label07;

        $i6 = r39.<com.android.server.am.ProcessRecord: int pid>;

        if $i6 <= 0 goto label07;

        if z9 != 0 goto label04;

        $z6 = r39.<com.android.server.am.ProcessRecord: boolean killed>;

        if $z6 == 0 goto label05;

     label04:
        $r18 = r39.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r18 != null goto label06;

     label05:
        $r24 = r2.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $l9 = r2.<android.content.pm.ApplicationInfo: long longVersionCode>;

        $r22 = r0.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService>;

        $r23 = $r22.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        virtualinvoke r39.<com.android.server.am.ProcessRecord: boolean addPackage(java.lang.String,long,com.android.server.am.ProcessStatsService)>($r24, $l9, $r23);

        specialinvoke r0.<com.android.server.am.ProcessList: void checkSlow(long,java.lang.String)>(l3, "startProcess: done, added package to proc");

        return r39;

     label06:
        specialinvoke r0.<com.android.server.am.ProcessList: void checkSlow(long,java.lang.String)>(l3, "startProcess: bad proc running, killing");

        $i8 = r39.<com.android.server.am.ProcessRecord: int uid>;

        $i7 = r39.<com.android.server.am.ProcessRecord: int pid>;

        staticinvoke <com.android.server.am.ProcessList: void killProcessGroup(int,int)>($i8, $i7);

        specialinvoke r0.<com.android.server.am.ProcessList: void checkSlow(long,java.lang.String)>(l3, "startProcess: done killing old proc");

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke r39.<com.android.server.am.ProcessRecord: java.lang.String toString()>();

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is attached to a previous process");

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("ActivityManager", $r21);

        r41 = r39;

        r39 = null;

        goto label08;

     label07:
        r41 = null;

     label08:
        if r39 != null goto label11;

        specialinvoke r0.<com.android.server.am.ProcessList: void checkSlow(long,java.lang.String)>(l3, "startProcess: creating new process record");

        r39 = virtualinvoke r0.<com.android.server.am.ProcessList: com.android.server.am.ProcessRecord newProcessRecordLocked(android.content.pm.ApplicationInfo,java.lang.String,boolean,int,com.android.server.am.HostingRecord)>(r2, r1, z1, i2, r37);

        if r39 != null goto label09;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed making new process record for ");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $i5 = r2.<android.content.pm.ApplicationInfo: int uid>;

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" isolated=");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z1);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r17);

        return null;

     label09:
        r39.<com.android.server.am.ProcessRecord: java.lang.Runnable crashHandler> = r6;

        r39.<com.android.server.am.ProcessRecord: java.lang.String isolatedEntryPoint> = r4;

        r39.<com.android.server.am.ProcessRecord: java.lang.String[] isolatedEntryPointArgs> = r5;

        if r41 == null goto label10;

        r39.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord mPrecedence> = r41;

        r41.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord mSuccessor> = r39;

     label10:
        specialinvoke r0.<com.android.server.am.ProcessList: void checkSlow(long,java.lang.String)>(l3, "startProcess: done creating new process record");

        goto label12;

     label11:
        $r9 = r2.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $l4 = r2.<android.content.pm.ApplicationInfo: long longVersionCode>;

        $r7 = r0.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService>;

        $r8 = $r7.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        virtualinvoke r39.<com.android.server.am.ProcessRecord: boolean addPackage(java.lang.String,long,com.android.server.am.ProcessStatsService)>($r9, $l4, $r8);

        specialinvoke r0.<com.android.server.am.ProcessList: void checkSlow(long,java.lang.String)>(l3, "startProcess: added package to existing proc");

     label12:
        $r10 = r0.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService>;

        $z3 = $r10.<com.android.server.am.ActivityManagerService: boolean mProcessesReady>;

        if $z3 != 0 goto label14;

        $r11 = r0.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService>;

        $z4 = virtualinvoke $r11.<com.android.server.am.ActivityManagerService: boolean isAllowedWhileBooting(android.content.pm.ApplicationInfo)>(r2);

        if $z4 != 0 goto label14;

        if z0 != 0 goto label14;

        $r12 = r0.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService>;

        $r13 = $r12.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesOnHold>;

        $z5 = virtualinvoke $r13.<java.util.ArrayList: boolean contains(java.lang.Object)>(r39);

        if $z5 != 0 goto label13;

        $r14 = r0.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService>;

        $r15 = $r14.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesOnHold>;

        virtualinvoke $r15.<java.util.ArrayList: boolean add(java.lang.Object)>(r39);

     label13:
        specialinvoke r0.<com.android.server.am.ProcessList: void checkSlow(long,java.lang.String)>(l3, "startProcess: returning with proc on hold");

        return r39;

     label14:
        specialinvoke r0.<com.android.server.am.ProcessList: void checkSlow(long,java.lang.String)>(l3, "startProcess: stepping in to startProcess");

        z10 = virtualinvoke r0.<com.android.server.am.ProcessList: boolean startProcessLocked(com.android.server.am.ProcessRecord,com.android.server.am.HostingRecord,int,java.lang.String)>(r39, r37, i1, r3);

        specialinvoke r0.<com.android.server.am.ProcessList: void checkSlow(long,java.lang.String)>(l3, "startProcess: done starting proc!");

        if z10 == 0 goto label15;

        goto label16;

     label15:
        r39 = null;

     label16:
        return r39;
    }

    void startProcessLocked(com.android.server.am.ProcessRecord, com.android.server.am.HostingRecord, int)
    {
        com.android.server.am.ProcessList r0;
        com.android.server.am.ProcessRecord r1;
        com.android.server.am.HostingRecord r2;
        int i0;

        r0 := @this: com.android.server.am.ProcessList;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        r2 := @parameter1: com.android.server.am.HostingRecord;

        i0 := @parameter2: int;

        virtualinvoke r0.<com.android.server.am.ProcessList: boolean startProcessLocked(com.android.server.am.ProcessRecord,com.android.server.am.HostingRecord,int,java.lang.String)>(r1, r2, i0, null);

        return;
    }

    boolean startProcessLocked(com.android.server.am.HostingRecord, java.lang.String, com.android.server.am.ProcessRecord, int, int[], int, int, int, java.lang.String, java.lang.String, java.lang.String, java.lang.String, long)
    {
        com.android.server.am.ProcessList r0;
        com.android.server.am.ProcessRecord r1;
        int i0, i1, i2, i3, $i8, $i10, $i11, $i12, $i17, $i18, $i19;
        int[] r2;
        java.lang.String r3, r4, r5, r6, $r10, $r11, $r16, $r20, $r23, $r27, $r31, $r33, $r36, r38;
        long l4, l5, $l6, $l9, $l14;
        byte $b7;
        boolean $z0, z4, $z5, z6;
        com.android.server.am.ActivityManagerService $r7, $r35, $r43;
        com.android.server.am._$$Lambda$ProcessList$jjoaAPSQT_weAnGqu0R0SCcvKqw $r8;
        android.os.Handler $r9;
        android.content.pm.ApplicationInfo $r12, $r34;
        long[] $r13;
        java.lang.StringBuilder $r14, $r21, $r29;
        java.lang.RuntimeException $r28;
        com.android.server.am.HostingRecord r37;
        com.android.server.compat.PlatformCompat r41;
        android.util.LongSparseArray $r42;
        com.android.server.am.ActivityManagerConstants $r44;
        android.os.Process$ProcessStartResult r45;

        r0 := @this: com.android.server.am.ProcessList;

        r37 := @parameter0: com.android.server.am.HostingRecord;

        r38 := @parameter1: java.lang.String;

        r1 := @parameter2: com.android.server.am.ProcessRecord;

        i0 := @parameter3: int;

        r2 := @parameter4: int[];

        i1 := @parameter5: int;

        i2 := @parameter6: int;

        i3 := @parameter7: int;

        r3 := @parameter8: java.lang.String;

        r4 := @parameter9: java.lang.String;

        r5 := @parameter10: java.lang.String;

        r6 := @parameter11: java.lang.String;

        l4 := @parameter12: long;

        r1.<com.android.server.am.ProcessRecord: boolean pendingStart> = 1;

        r1.<com.android.server.am.ProcessRecord: boolean killedByAm> = 0;

        r1.<com.android.server.am.ProcessRecord: boolean removed> = 0;

        r1.<com.android.server.am.ProcessRecord: boolean killed> = 0;

        $l6 = r1.<com.android.server.am.ProcessRecord: long startSeq>;

        $b7 = $l6 cmp 0L;

        if $b7 == 0 goto label01;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("startProcessLocked processName:");

        $r23 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with non-zero startSeq:");

        $l14 = r1.<com.android.server.am.ProcessRecord: long startSeq>;

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l14);

        $r27 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("ActivityManager", $r27);

     label01:
        $i8 = r1.<com.android.server.am.ProcessRecord: int pid>;

        if $i8 == 0 goto label02;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("startProcessLocked processName:");

        $r16 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with non-zero pid:");

        $i12 = r1.<com.android.server.am.ProcessRecord: int pid>;

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12);

        $r20 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("ActivityManager", $r20);

     label02:
        r1.<com.android.server.am.ProcessRecord: long[] mDisabledCompatChanges> = null;

        r41 = r0.<com.android.server.am.ProcessList: com.android.server.compat.PlatformCompat mPlatformCompat>;

        if r41 == null goto label03;

        $r12 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r13 = virtualinvoke r41.<com.android.server.compat.PlatformCompat: long[] getDisabledChanges(android.content.pm.ApplicationInfo)>($r12);

        r1.<com.android.server.am.ProcessRecord: long[] mDisabledCompatChanges> = $r13;

     label03:
        $l9 = r0.<com.android.server.am.ProcessList: long mProcStartSeqCounter>;

        l5 = $l9 + 1L;

        r0.<com.android.server.am.ProcessList: long mProcStartSeqCounter> = l5;

        r1.<com.android.server.am.ProcessRecord: long startSeq> = l5;

        virtualinvoke r1.<com.android.server.am.ProcessRecord: void setStartParams(int,com.android.server.am.HostingRecord,java.lang.String,long)>(i0, r37, r3, l4);

        if r6 != null goto label05;

        $r10 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r11 = staticinvoke <com.android.internal.os.Zygote: java.lang.String getWrapProperty(java.lang.String)>($r10);

        if $r11 == null goto label04;

        goto label05;

     label04:
        z4 = 0;

        goto label06;

     label05:
        z4 = 1;

     label06:
        virtualinvoke r1.<com.android.server.am.ProcessRecord: void setUsingWrapper(boolean)>(z4);

        $r42 = r0.<com.android.server.am.ProcessList: android.util.LongSparseArray mPendingStarts>;

        virtualinvoke $r42.<android.util.LongSparseArray: void put(long,java.lang.Object)>(l5, r1);

        $r43 = r0.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService>;

        $r44 = $r43.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerConstants mConstants>;

        $z5 = $r44.<com.android.server.am.ActivityManagerConstants: boolean FLAG_PROCESS_START_ASYNC>;

        if $z5 == 0 goto label07;

        $r7 = r0.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService>;

        $r9 = $r7.<com.android.server.am.ActivityManagerService: android.os.Handler mProcStartHandler>;

        $r8 = new com.android.server.am._$$Lambda$ProcessList$jjoaAPSQT_weAnGqu0R0SCcvKqw;

        specialinvoke $r8.<com.android.server.am._$$Lambda$ProcessList$jjoaAPSQT_weAnGqu0R0SCcvKqw: void <init>(com.android.server.am.ProcessList,com.android.server.am.ProcessRecord,java.lang.String,int[],int,int,int,java.lang.String,java.lang.String,java.lang.String,long)>(r0, r1, r38, r2, i1, i2, i3, r4, r5, r6, l5);

        virtualinvoke $r9.<android.os.Handler: boolean post(java.lang.Runnable)>($r8);

        return 1;

     label07:
        r45 = specialinvoke r0.<com.android.server.am.ProcessList: android.os.Process$ProcessStartResult startProcess(com.android.server.am.HostingRecord,java.lang.String,com.android.server.am.ProcessRecord,int,int[],int,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)>(r37, r38, r1, i0, r2, i1, i2, i3, r3, r4, r5, r6, l4);

        $i10 = r45.<android.os.Process$ProcessStartResult: int pid>;

        $z0 = r45.<android.os.Process$ProcessStartResult: boolean usingWrapper>;

        virtualinvoke r0.<com.android.server.am.ProcessList: boolean handleProcessStartedLocked(com.android.server.am.ProcessRecord,int,boolean,long,boolean)>(r1, $i10, $z0, l5, 0);

     label08:
        goto label10;

     label09:
        $r28 := @caughtexception;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure starting process ");

        $r31 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        $r33 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r33, $r28);

        r1.<com.android.server.am.ProcessRecord: boolean pendingStart> = 0;

        $r35 = r0.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService>;

        $r34 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r36 = $r34.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $i17 = r1.<com.android.server.am.ProcessRecord: int uid>;

        $i18 = staticinvoke <android.os.UserHandle: int getAppId(int)>($i17);

        $i19 = r1.<com.android.server.am.ProcessRecord: int userId>;

        virtualinvoke $r35.<com.android.server.am.ActivityManagerService: boolean forceStopPackageLocked(java.lang.String,int,boolean,boolean,boolean,boolean,boolean,int,java.lang.String)>($r36, $i18, 0, 0, 1, 0, 0, $i19, "start failure");

     label10:
        $i11 = r1.<com.android.server.am.ProcessRecord: int pid>;

        if $i11 <= 0 goto label11;

        z6 = 1;

        goto label12;

     label11:
        z6 = 0;

     label12:
        return z6;

        catch java.lang.RuntimeException from label07 to label08 with label09;
    }

    final boolean startProcessLocked(com.android.server.am.ProcessRecord, com.android.server.am.HostingRecord, int, java.lang.String)
    {
        com.android.server.am.ProcessList r0;
        com.android.server.am.ProcessRecord r1;
        com.android.server.am.HostingRecord r2;
        int i0;
        java.lang.String r3;
        boolean $z0;

        r0 := @this: com.android.server.am.ProcessList;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        r2 := @parameter1: com.android.server.am.HostingRecord;

        i0 := @parameter2: int;

        r3 := @parameter3: java.lang.String;

        $z0 = virtualinvoke r0.<com.android.server.am.ProcessList: boolean startProcessLocked(com.android.server.am.ProcessRecord,com.android.server.am.HostingRecord,int,boolean,boolean,boolean,java.lang.String)>(r1, r2, i0, 0, 0, 0, r3);

        return $z0;
    }

    boolean startProcessLocked(com.android.server.am.ProcessRecord, com.android.server.am.HostingRecord, int, boolean, boolean, boolean, java.lang.String)
    {
        com.android.server.am.ProcessList r0;
        com.android.server.am.ProcessRecord r1;
        int i0, $i2, $i3, $i4, $i5, $i7, $i8, $i9, $i10, $i11, $i14, $i16, $i17, $i18, $i19, $i20, $i21, $i23, i24, i25, i26, i27, i28, i29, i30, i32, i34, $i35, $i38, $i39, i45, i46, i47, i48, i49, i50, i51, i52, $i53, i54, i55, $i56, $i57, $i58, $i59;
        boolean z0, z1, $z2, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, z17, z18, z20, z21, z22, z23, z24, $z25, z26, z27, z28, z29, z30;
        long l1;
        com.android.server.am.ActivityManagerService $r2, $r13, $r39, $r41, $r52, $r55, $r58, $r59, $r74, $r80, $r81, $r100, $r102, $r152;
        com.android.server.wm.ActivityTaskManagerInternal $r3;
        com.android.server.wm.WindowProcessController $r4;
        android.content.pm.ApplicationInfo $r5, $r14, $r15, $r16, $r19, $r21, $r24, $r31, $r33, $r43, $r44, $r48, $r65, $r67, $r104, $r117, $r118, $r125, $r130, $r140, $r153;
        java.lang.String $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r17, $r20, $r25, $r30, $r32, $r34, $r47, $r53, $r54, $r56, $r57, $r64, $r68, $r79, r99, $r105, r107, r119, r120, $r121, $r122, $r123, r124, r128, r129, r132, r138, r139, $r141, r145, r146, $r150, $r151, $r154;
        com.android.server.am.ActivityManagerService$HiddenApiSettings $r40, $r42;
        com.android.server.am.ProcessRecord$PackageList $r49;
        android.util.ArrayMap $r50;
        java.util.Set $r51;
        char $c12, $c13, c31, c33, c36, c37, c40, c41, c42, c43, c44;
        android.content.Context $r60;
        android.content.ContentResolver $r61;
        java.lang.Object $r66, $r78;
        android.os.storage.StorageManagerInternal $r69;
        android.content.pm.ProcessInfo $r70, $r72, $r75, $r110;
        android.util.ArraySet $r71, $r73, $r76;
        android.content.pm.PackageManagerInternal $r77;
        com.android.server.am.ActivityManagerService$MainHandler $r82;
        java.lang.RuntimeException $r83, $r86, $r87, $r88, $r90, $r92, $r93, $r95, $r96, $r97, r114;
        android.os.RemoteException $r89, $r94;
        java.lang.Throwable $r91;
        com.android.server.am.HostingRecord r98;
        java.util.ArrayList $r101;
        android.content.pm.IPackageManager $r103, r106;
        int[] r108, r109, r111, r112, r113;
        java.lang.StringBuilder r116, r127, r131, r135, r143, r144, $r148;
        java.lang.IllegalStateException r126, r142;
        android.os.StrictMode$ThreadPolicy r133;
        java.io.File r134;
        java.lang.String[] r137;

        r0 := @this: com.android.server.am.ProcessList;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        r98 := @parameter1: com.android.server.am.HostingRecord;

        i0 := @parameter2: int;

        z17 := @parameter3: boolean;

        z0 := @parameter4: boolean;

        z18 := @parameter5: boolean;

        r99 := @parameter6: java.lang.String;

        $z2 = r1.<com.android.server.am.ProcessRecord: boolean pendingStart>;

        if $z2 == 0 goto label001;

        return 1;

     label001:
        l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $i2 = r1.<com.android.server.am.ProcessRecord: int pid>;

        if $i2 <= 0 goto label002;

        $i21 = r1.<com.android.server.am.ProcessRecord: int pid>;

        $i20 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        if $i21 == $i20 goto label002;

        specialinvoke r0.<com.android.server.am.ProcessList: void checkSlow(long,java.lang.String)>(l1, "startProcess: removing from pids map");

        $r80 = r0.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService>;

        virtualinvoke $r80.<com.android.server.am.ActivityManagerService: void removePidLocked(com.android.server.am.ProcessRecord)>(r1);

        r1.<com.android.server.am.ProcessRecord: boolean bindMountPending> = 0;

        $r81 = r0.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService>;

        $r82 = $r81.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        virtualinvoke $r82.<com.android.server.am.ActivityManagerService$MainHandler: void removeMessages(int,java.lang.Object)>(20, r1);

        specialinvoke r0.<com.android.server.am.ProcessList: void checkSlow(long,java.lang.String)>(l1, "startProcess: done removing from pids map");

        virtualinvoke r1.<com.android.server.am.ProcessRecord: void setPid(int)>(0);

        r1.<com.android.server.am.ProcessRecord: long startSeq> = 0L;

     label002:
        $r100 = r0.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService>;

        $r101 = $r100.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesOnHold>;

        virtualinvoke $r101.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        specialinvoke r0.<com.android.server.am.ProcessList: void checkSlow(long,java.lang.String)>(l1, "startProcess: starting to update cpu stats");

        $r102 = r0.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService>;

        virtualinvoke $r102.<com.android.server.am.ActivityManagerService: void updateCpuStats()>();

        specialinvoke r0.<com.android.server.am.ProcessList: void checkSlow(long,java.lang.String)>(l1, "startProcess: done updating cpu stats");

     label003:
        $i23 = r1.<com.android.server.am.ProcessRecord: int uid>;

        i24 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i23);

        $r103 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        $r104 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r105 = $r104.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        interfaceinvoke $r103.<android.content.pm.IPackageManager: void checkPackageStartable(java.lang.String,int)>($r105, i24);

     label004:
        i25 = r1.<com.android.server.am.ProcessRecord: int uid>;

        z1 = r1.<com.android.server.am.ProcessRecord: boolean isolated>;

     label005:
        if z1 != 0 goto label029;

     label006:
        specialinvoke r0.<com.android.server.am.ProcessList: void checkSlow(long,java.lang.String)>(l1, "startProcess: getting gids from package manager");

        r106 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        $r65 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        r107 = $r65.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

     label007:
        $i16 = r1.<com.android.server.am.ProcessRecord: int userId>;

        r108 = interfaceinvoke r106.<android.content.pm.IPackageManager: int[] getPackageGids(java.lang.String,int,int)>(r107, 268435456, $i16);

        $z15 = staticinvoke <android.os.storage.StorageManager: boolean hasIsolatedStorage()>();

        if $z15 == 0 goto label009;

     label008:
        if z18 == 0 goto label009;

        i26 = 6;

        goto label010;

     label009:
        $r66 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/os/storage/StorageManagerInternal;");

        $r69 = (android.os.storage.StorageManagerInternal) $r66;

        $r67 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r68 = $r67.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        i26 = virtualinvoke $r69.<android.os.storage.StorageManagerInternal: int getExternalStorageMountMode(int,java.lang.String)>(i25, $r68);

     label010:
        r109 = r108;

     label011:
        $r110 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ProcessInfo processInfo>;

        if $r110 == null goto label023;

     label012:
        r109 = r108;

     label013:
        $r70 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ProcessInfo processInfo>;

        $r71 = $r70.<android.content.pm.ProcessInfo: android.util.ArraySet deniedPermissions>;

        if $r71 == null goto label023;

        $r72 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ProcessInfo processInfo>;

        $r73 = $r72.<android.content.pm.ProcessInfo: android.util.ArraySet deniedPermissions>;

        $i17 = virtualinvoke $r73.<android.util.ArraySet: int size()>();

        i27 = $i17 - 1;

     label014:
        r109 = r108;

        if i27 < 0 goto label023;

     label015:
        $r74 = r0.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService>;

        $r77 = $r74.<com.android.server.am.ActivityManagerService: android.content.pm.PackageManagerInternal mPackageManagerInt>;

        $r75 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ProcessInfo processInfo>;

        $r76 = $r75.<android.content.pm.ProcessInfo: android.util.ArraySet deniedPermissions>;

        $r78 = virtualinvoke $r76.<android.util.ArraySet: java.lang.Object valueAt(int)>(i27);

        $r79 = (java.lang.String) $r78;

        $i18 = r1.<com.android.server.am.ProcessRecord: int userId>;

        r111 = virtualinvoke $r77.<android.content.pm.PackageManagerInternal: int[] getPermissionGids(java.lang.String,int)>($r79, $i18);

     label016:
        r112 = r108;

        if r111 == null goto label022;

     label017:
        i28 = lengthof r111;

     label018:
        i29 = 0;

     label019:
        r112 = r108;

        if i29 >= i28 goto label022;

     label020:
        $i19 = r111[i29];

        r108 = staticinvoke <com.android.internal.util.ArrayUtils: int[] removeInt(int[],int)>(r108, $i19);

     label021:
        i29 = i29 + 1;

        goto label019;

     label022:
        i27 = i27 + -1;

        r108 = r112;

        goto label014;

     label023:
        r113 = specialinvoke r0.<com.android.server.am.ProcessList: int[] computeGidsForProcess(int,int,int[])>(i26, i25, r109);

     label024:
        i30 = i26;

        goto label030;

     label025:
        $r88 := @caughtexception;

        r114 = $r88;

        goto label135;

     label026:
        $r94 := @caughtexception;

     label027:
        $r95 = virtualinvoke $r94.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

        throw $r95;

     label028:
        $r96 := @caughtexception;

        r114 = $r96;

        goto label135;

     label029:
        r113 = null;

        i30 = 0;

     label030:
        r1.<com.android.server.am.ProcessRecord: int mountMode> = i30;

        specialinvoke r0.<com.android.server.am.ProcessList: void checkSlow(long,java.lang.String)>(l1, "startProcess: building args");

        $r2 = r0.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService>;

        $r3 = $r2.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerInternal mAtmInternal>;

        $r4 = virtualinvoke r1.<com.android.server.am.ProcessRecord: com.android.server.wm.WindowProcessController getWindowProcessController()>();

        $z4 = virtualinvoke $r3.<com.android.server.wm.ActivityTaskManagerInternal: boolean isFactoryTestProcess(com.android.server.wm.WindowProcessController)>($r4);

        if $z4 == 0 goto label032;

     label031:
        i25 = 0;

        goto label032;

     label032:
        c31 = 0;

     label033:
        $r5 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        i32 = $r5.<android.content.pm.ApplicationInfo: int flags>;

     label034:
        $i3 = i32 & 2;

        if $i3 == 0 goto label038;

        $c12 = 0 | 1;

        $c13 = $c12 | 256;

        c33 = $c13 | 2;

        c31 = c33;

     label035:
        $r59 = r0.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService>;

        $r60 = $r59.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r61 = virtualinvoke $r60.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i14 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>($r61, "art_verifier_verify_debuggable", 1);

        if $i14 != 0 goto label038;

     label036:
        c31 = c33 | 512;

     label037:
        r116 = new java.lang.StringBuilder;

        specialinvoke r116.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r116.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke r116.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ART verification disabled");

        $r64 = virtualinvoke r116.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r64);

     label038:
        $r117 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        i34 = $r117.<android.content.pm.ApplicationInfo: int flags>;

     label039:
        $i35 = i34 & 16384;

        if $i35 != 0 goto label042;

     label040:
        $r58 = r0.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService>;

        z20 = $r58.<com.android.server.am.ActivityManagerService: boolean mSafeMode>;

     label041:
        c36 = c31;

        if z20 == 0 goto label043;

     label042:
        c36 = c31 | 8;

     label043:
        c37 = c36;

     label044:
        $r118 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i38 = $r118.<android.content.pm.ApplicationInfo: int privateFlags>;

        $i39 = $i38 & 8388608;

        if $i39 == 0 goto label046;

     label045:
        c37 = c36 | 32768;

     label046:
        c40 = c37;

     label047:
        $r6 = "1";

        $r7 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("debug.checkjni");

        $z5 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z5 == 0 goto label049;

     label048:
        c40 = c37 | 2;

     label049:
        r119 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("debug.generate-debug-info");

        $r8 = "1";

        z21 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r119);

     label050:
        if z21 != 0 goto label053;

     label051:
        $r57 = "true";

        z22 = virtualinvoke $r57.<java.lang.String: boolean equals(java.lang.Object)>(r119);

     label052:
        c41 = c40;

        if z22 == 0 goto label054;

     label053:
        c41 = c40 | 32;

     label054:
        r120 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("dalvik.vm.minidebuginfo");

        $r121 = "1";

        z23 = virtualinvoke $r121.<java.lang.String: boolean equals(java.lang.Object)>(r120);

     label055:
        if z23 != 0 goto label058;

     label056:
        $r56 = "true";

        z24 = virtualinvoke $r56.<java.lang.String: boolean equals(java.lang.Object)>(r120);

     label057:
        c42 = c41;

        if z24 == 0 goto label059;

     label058:
        c42 = c41 | 2048;

     label059:
        c43 = c42;

     label060:
        $r122 = "1";

        $r123 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("debug.jni.logging");

        $z25 = virtualinvoke $r122.<java.lang.String: boolean equals(java.lang.Object)>($r123);

        if $z25 == 0 goto label062;

     label061:
        c43 = c42 | 16;

     label062:
        c44 = c43;

     label063:
        $r9 = "1";

        $r10 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("debug.assert");

        $z6 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z6 == 0 goto label065;

     label064:
        c44 = c43 | 4;

     label065:
        i45 = c44;

     label066:
        $r11 = "1";

        $r12 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("debug.ignoreappsignalhandler");

        $z7 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r12);

        if $z7 == 0 goto label068;

     label067:
        i45 = c44 | 131072;

     label068:
        $r13 = r0.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService>;

        r124 = $r13.<com.android.server.am.ActivityManagerService: java.lang.String mNativeDebuggingApp>;

     label069:
        i46 = i45;

        if r124 == null goto label073;

        i46 = i45;

     label070:
        $r52 = r0.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService>;

        $r54 = $r52.<com.android.server.am.ActivityManagerService: java.lang.String mNativeDebuggingApp>;

        $r53 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $z14 = virtualinvoke $r54.<java.lang.String: boolean equals(java.lang.Object)>($r53);

        if $z14 == 0 goto label073;

     label071:
        $i10 = i45 | 64;

        $i11 = $i10 | 32;

        i46 = $i11 | 128;

     label072:
        $r55 = r0.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService>;

        $r55.<com.android.server.am.ActivityManagerService: java.lang.String mNativeDebuggingApp> = null;

     label073:
        $r125 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        z26 = virtualinvoke $r125.<android.content.pm.ApplicationInfo: boolean isEmbeddedDexUsed()>();

     label074:
        if z26 != 0 goto label078;

        i47 = i46;

     label075:
        $r48 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $z12 = virtualinvoke $r48.<android.content.pm.ApplicationInfo: boolean isPrivilegedApp()>();

        if $z12 == 0 goto label079;

     label076:
        i47 = i46;

     label077:
        $r49 = r1.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        $r50 = $r49.<com.android.server.am.ProcessRecord$PackageList: android.util.ArrayMap mPkgList>;

        $r51 = virtualinvoke $r50.<android.util.ArrayMap: java.util.Set keySet()>();

        $z13 = staticinvoke <com.android.server.pm.dex.DexManager: boolean isPackageSelectedToRunOob(java.util.Collection)>($r51);

        if $z13 == 0 goto label079;

     label078:
        i47 = i46 | 1024;

     label079:
        i48 = i47;

        if z17 != 0 goto label083;

        i48 = i47;

     label080:
        $r39 = r0.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService>;

        $r40 = $r39.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$HiddenApiSettings mHiddenApiBlacklist>;

        $z11 = virtualinvoke $r40.<com.android.server.am.ActivityManagerService$HiddenApiSettings: boolean isDisabled()>();

        if $z11 != 0 goto label083;

        $r43 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r41 = r0.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService>;

        $r42 = $r41.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$HiddenApiSettings mHiddenApiBlacklist>;

        $i7 = virtualinvoke $r42.<com.android.server.am.ActivityManagerService$HiddenApiSettings: int getPolicy()>();

        virtualinvoke $r43.<android.content.pm.ApplicationInfo: void maybeUpdateHiddenApiEnforcementPolicy(int)>($i7);

        $r44 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        i49 = virtualinvoke $r44.<android.content.pm.ApplicationInfo: int getHiddenApiEnforcementPolicy()>();

        $i8 = <com.android.internal.os.Zygote: int API_ENFORCEMENT_POLICY_SHIFT>;

        i50 = i49 << $i8;

     label081:
        $i9 = i50 & 12288;

        if $i9 != i50 goto label082;

        i51 = i47 | i50;

        i48 = i51;

        if z0 == 0 goto label083;

        i48 = i51 | 262144;

        goto label083;

     label082:
        r126 = new java.lang.IllegalStateException;

        r127 = new java.lang.StringBuilder;

        specialinvoke r127.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r127.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid API policy: ");

        virtualinvoke r127.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i49);

        $r47 = virtualinvoke r127.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r126.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r47);

        throw r126;

     label083:
        r128 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String,java.lang.String)>("persist.device_config.runtime_native.use_app_image_startup_cache", "");

        z27 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r128);

     label084:
        i52 = i48;

        if z27 != 0 goto label087;

     label085:
        z28 = virtualinvoke r128.<java.lang.String: boolean equals(java.lang.Object)>("false");

     label086:
        i52 = i48;

        if z28 != 0 goto label087;

        i52 = i48 | 65536;

     label087:
        $i53 = specialinvoke r0.<com.android.server.am.ProcessList: int decideGwpAsanLevel(com.android.server.am.ProcessRecord)>(r1);

        i54 = $i53 | i52;

     label088:
        r129 = null;

     label089:
        $r130 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        i55 = $r130.<android.content.pm.ApplicationInfo: int flags>;

     label090:
        $i56 = i55 & 2;

        if $i56 == 0 goto label099;

     label091:
        r131 = new java.lang.StringBuilder;

        specialinvoke r131.<java.lang.StringBuilder: void <init>()>();

        $r33 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r34 = $r33.<android.content.pm.ApplicationInfo: java.lang.String nativeLibraryDir>;

        virtualinvoke r131.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        virtualinvoke r131.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/wrap.sh");

        r132 = virtualinvoke r131.<java.lang.StringBuilder: java.lang.String toString()>();

        r133 = staticinvoke <android.os.StrictMode: android.os.StrictMode$ThreadPolicy allowThreadDiskReads()>();

     label092:
        r134 = new java.io.File;

        specialinvoke r134.<java.io.File: void <init>(java.lang.String)>(r132);

        $z10 = virtualinvoke r134.<java.io.File: boolean exists()>();

        if $z10 == 0 goto label094;

        r135 = new java.lang.StringBuilder;

        specialinvoke r135.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r135.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/system/bin/logwrapper ");

        virtualinvoke r135.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r132);

        r129 = virtualinvoke r135.<java.lang.StringBuilder: java.lang.String toString()>();

     label093:
        goto label094;

     label094:
        staticinvoke <android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)>(r133);

     label095:
        goto label100;

     label096:
        $r91 := @caughtexception;

     label097:
        staticinvoke <android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)>(r133);

     label098:
        throw $r91;

     label099:
        r129 = null;

     label100:
        if r99 == null goto label101;

        goto label102;

     label101:
        $r14 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        r99 = $r14.<android.content.pm.ApplicationInfo: java.lang.String primaryCpuAbi>;

     label102:
        if r99 != null goto label108;

     label103:
        r137 = <android.os.Build: java.lang.String[] SUPPORTED_ABIS>;

     label104:
        r99 = r137[0];

        goto label108;

     label105:
        $r83 := @caughtexception;

        r114 = $r83;

        goto label107;

     label106:
        $r86 := @caughtexception;

        r114 = $r86;

     label107:
        goto label135;

     label108:
        $r15 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        r138 = $r15.<android.content.pm.ApplicationInfo: java.lang.String primaryCpuAbi>;

     label109:
        if r138 == null goto label112;

     label110:
        $r31 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r32 = $r31.<android.content.pm.ApplicationInfo: java.lang.String primaryCpuAbi>;

        r139 = staticinvoke <dalvik.system.VMRuntime: java.lang.String getInstructionSet(java.lang.String)>($r32);

     label111:
        goto label113;

     label112:
        r139 = null;

     label113:
        r1.<com.android.server.am.ProcessRecord: int[] gids> = r113;

        virtualinvoke r1.<com.android.server.am.ProcessRecord: void setRequiredAbi(java.lang.String)>(r99);

        r1.<com.android.server.am.ProcessRecord: java.lang.String instructionSet> = r139;

     label114:
        if r139 == null goto label118;

     label115:
        z29 = virtualinvoke r139.<java.lang.String: boolean equals(java.lang.Object)>("arm64");

     label116:
        if z29 == 0 goto label117;

        goto label118;

     label117:
        goto label119;

     label118:
        $i4 = specialinvoke r0.<com.android.server.am.ProcessList: int decideTaggingLevel(com.android.server.am.ProcessRecord)>(r1);

        i54 = i54 | $i4;

     label119:
        $r140 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r141 = $r140.<android.content.pm.ApplicationInfo: java.lang.String seInfoUser>;

        z30 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r141);

     label120:
        if z30 == 0 goto label123;

     label121:
        r142 = new java.lang.IllegalStateException;

        r143 = new java.lang.StringBuilder;

        specialinvoke r143.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r143.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SELinux tag not defined for ");

        $r24 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r25 = $r24.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        virtualinvoke r143.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        virtualinvoke r143.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (uid ");

        $i5 = r1.<com.android.server.am.ProcessRecord: int uid>;

        virtualinvoke r143.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        virtualinvoke r143.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r30 = virtualinvoke r143.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r142.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r30);

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", "SELinux tag not defined", r142);

     label122:
        goto label123;

     label123:
        r144 = new java.lang.StringBuilder;

        specialinvoke r144.<java.lang.StringBuilder: void <init>()>();

        $r16 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r17 = $r16.<android.content.pm.ApplicationInfo: java.lang.String seInfo>;

        virtualinvoke r144.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r20 = $r19.<android.content.pm.ApplicationInfo: java.lang.String seInfoUser>;

        $z8 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r20);

        if $z8 == 0 goto label125;

     label124:
        r145 = "";

        goto label126;

     label125:
        $r21 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        r145 = $r21.<android.content.pm.ApplicationInfo: java.lang.String seInfoUser>;

     label126:
        virtualinvoke r144.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r145);

        r146 = virtualinvoke r144.<java.lang.StringBuilder: java.lang.String toString()>();

     label127:
        $z9 = virtualinvoke r0.<com.android.server.am.ProcessList: boolean startProcessLocked(com.android.server.am.HostingRecord,java.lang.String,com.android.server.am.ProcessRecord,int,int[],int,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)>(r98, "android.app.ActivityThread", r1, i25, r113, i54, i0, i30, r146, r99, r139, r129, l1);

        return $z9;

     label128:
        $r87 := @caughtexception;

        r114 = $r87;

        goto label131;

     label129:
        $r92 := @caughtexception;

        r114 = $r92;

        goto label131;

     label130:
        $r97 := @caughtexception;

        r114 = $r97;

     label131:
        goto label135;

     label132:
        $r89 := @caughtexception;

     label133:
        $r90 = virtualinvoke $r89.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

        throw $r90;

     label134:
        $r93 := @caughtexception;

        r114 = $r93;

     label135:
        $r148 = new java.lang.StringBuilder;

        specialinvoke $r148.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r148.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure starting process ");

        $r150 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        virtualinvoke $r148.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r150);

        $r151 = virtualinvoke $r148.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r151, r114);

        $r152 = r0.<com.android.server.am.ProcessList: com.android.server.am.ActivityManagerService mService>;

        $r153 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r154 = $r153.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $i57 = r1.<com.android.server.am.ProcessRecord: int uid>;

        $i58 = staticinvoke <android.os.UserHandle: int getAppId(int)>($i57);

        $i59 = r1.<com.android.server.am.ProcessRecord: int userId>;

        virtualinvoke $r152.<com.android.server.am.ActivityManagerService: boolean forceStopPackageLocked(java.lang.String,int,boolean,boolean,boolean,boolean,boolean,int,java.lang.String)>($r154, $i58, 0, 0, 1, 0, 0, $i59, "start failure");

        return 0;

        catch android.os.RemoteException from label003 to label004 with label132;
        catch java.lang.RuntimeException from label003 to label004 with label130;
        catch java.lang.RuntimeException from label004 to label005 with label130;
        catch android.os.RemoteException from label006 to label007 with label026;
        catch java.lang.RuntimeException from label006 to label007 with label025;
        catch android.os.RemoteException from label007 to label008 with label026;
        catch java.lang.RuntimeException from label007 to label008 with label028;
        catch android.os.RemoteException from label009 to label010 with label026;
        catch java.lang.RuntimeException from label009 to label010 with label028;
        catch java.lang.RuntimeException from label011 to label012 with label028;
        catch java.lang.RuntimeException from label013 to label014 with label028;
        catch java.lang.RuntimeException from label015 to label016 with label028;
        catch java.lang.RuntimeException from label017 to label018 with label028;
        catch java.lang.RuntimeException from label020 to label021 with label028;
        catch java.lang.RuntimeException from label023 to label024 with label028;
        catch java.lang.RuntimeException from label027 to label028 with label028;
        catch java.lang.RuntimeException from label030 to label031 with label129;
        catch java.lang.RuntimeException from label033 to label034 with label129;
        catch java.lang.RuntimeException from label035 to label036 with label028;
        catch java.lang.RuntimeException from label037 to label038 with label028;
        catch java.lang.RuntimeException from label038 to label039 with label129;
        catch java.lang.RuntimeException from label040 to label041 with label028;
        catch java.lang.RuntimeException from label044 to label045 with label129;
        catch java.lang.RuntimeException from label047 to label048 with label129;
        catch java.lang.RuntimeException from label049 to label050 with label129;
        catch java.lang.RuntimeException from label051 to label052 with label028;
        catch java.lang.RuntimeException from label054 to label055 with label129;
        catch java.lang.RuntimeException from label056 to label057 with label028;
        catch java.lang.RuntimeException from label060 to label061 with label129;
        catch java.lang.RuntimeException from label063 to label064 with label129;
        catch java.lang.RuntimeException from label066 to label067 with label129;
        catch java.lang.RuntimeException from label068 to label069 with label129;
        catch java.lang.RuntimeException from label070 to label071 with label028;
        catch java.lang.RuntimeException from label072 to label073 with label028;
        catch java.lang.RuntimeException from label073 to label074 with label129;
        catch java.lang.RuntimeException from label075 to label076 with label028;
        catch java.lang.RuntimeException from label077 to label078 with label028;
        catch java.lang.RuntimeException from label080 to label081 with label028;
        catch java.lang.RuntimeException from label082 to label083 with label028;
        catch java.lang.RuntimeException from label083 to label084 with label129;
        catch java.lang.RuntimeException from label085 to label086 with label028;
        catch java.lang.RuntimeException from label087 to label088 with label129;
        catch java.lang.RuntimeException from label089 to label090 with label129;
        catch java.lang.RuntimeException from label091 to label092 with label028;
        catch java.lang.Throwable from label092 to label093 with label096;
        catch java.lang.RuntimeException from label094 to label095 with label028;
        catch java.lang.RuntimeException from label097 to label098 with label028;
        catch java.lang.RuntimeException from label098 to label099 with label028;
        catch java.lang.RuntimeException from label101 to label102 with label129;
        catch java.lang.RuntimeException from label103 to label104 with label106;
        catch java.lang.RuntimeException from label108 to label109 with label128;
        catch java.lang.RuntimeException from label110 to label111 with label105;
        catch java.lang.RuntimeException from label113 to label114 with label128;
        catch java.lang.RuntimeException from label115 to label116 with label105;
        catch java.lang.RuntimeException from label118 to label119 with label128;
        catch java.lang.RuntimeException from label119 to label120 with label128;
        catch java.lang.RuntimeException from label121 to label122 with label105;
        catch java.lang.RuntimeException from label123 to label124 with label128;
        catch java.lang.RuntimeException from label125 to label126 with label128;
        catch java.lang.RuntimeException from label126 to label127 with label128;
        catch java.lang.RuntimeException from label127 to label128 with label134;
        catch java.lang.RuntimeException from label133 to label134 with label134;
    }

    void updateAllTimePrefsLocked(int)
    {
        com.android.server.am.ProcessList r0;
        int i0, $i1, i3;
        com.android.server.am.ProcessRecord r1;
        java.util.ArrayList $r2, $r3;
        java.lang.Object $r4;
        android.app.IApplicationThread $r5, $r6;
        android.os.RemoteException $r7;
        java.lang.StringBuilder $r8;
        android.content.pm.ApplicationInfo $r10;
        java.lang.String $r11, $r13;

        r0 := @this: com.android.server.am.ProcessList;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        $i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i3 = $i1 - 1;

     label1:
        if i3 < 0 goto label6;

        $r3 = r0.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r1 = (com.android.server.am.ProcessRecord) $r4;

        $r5 = r1.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r5 == null goto label5;

     label2:
        $r6 = r1.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        interfaceinvoke $r6.<android.app.IApplicationThread: void updateTimePrefs(int)>(i0);

     label3:
        goto label5;

     label4:
        $r7 := @caughtexception;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to update preferences for: ");

        $r10 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r11 = $r10.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r13);

     label5:
        i3 = i3 + -1;

        goto label1;

     label6:
        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    void updateApplicationInfoLocked(java.util.List, int, boolean)
    {
        com.android.server.am.ProcessList r0;
        java.util.List r1;
        int i0, i1, $i2, $i3, $i4, i6, i7;
        boolean z0, $z1, $z2;
        com.android.server.am.ProcessRecord r2;
        java.lang.String r3, $r13, $r14, $r17;
        java.util.ArrayList $r4, $r5;
        java.lang.Object $r6;
        android.app.IApplicationThread $r7, $r11;
        com.android.server.am.ProcessRecord$PackageList $r8, $r9;
        android.content.pm.IPackageManager $r10;
        android.content.pm.ApplicationInfo $r12, r18;
        android.os.RemoteException $r15;
        java.lang.Object[] $r16;

        r0 := @this: com.android.server.am.ProcessList;

        r1 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        $r4 = r0.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        $i2 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        i6 = $i2 - 1;

     label01:
        if i6 < 0 goto label12;

        $r5 = r0.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i6);

        r2 = (com.android.server.am.ProcessRecord) $r6;

        $r7 = r2.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r7 != null goto label02;

        goto label11;

     label02:
        if i0 == -1 goto label03;

        $i4 = r2.<com.android.server.am.ProcessRecord: int userId>;

        if $i4 == i0 goto label03;

        goto label11;

     label03:
        $r8 = r2.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        i1 = virtualinvoke $r8.<com.android.server.am.ProcessRecord$PackageList: int size()>();

        i7 = 0;

     label04:
        if i7 >= i1 goto label11;

        $r9 = r2.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        r3 = virtualinvoke $r9.<com.android.server.am.ProcessRecord$PackageList: java.lang.String keyAt(int)>(i7);

        if z0 != 0 goto label05;

        $z2 = interfaceinvoke r1.<java.util.List: boolean contains(java.lang.Object)>(r3);

        if $z2 != 0 goto label05;

        goto label10;

     label05:
        $r10 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        $i3 = r2.<com.android.server.am.ProcessRecord: int userId>;

        r18 = interfaceinvoke $r10.<android.content.pm.IPackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int,int)>(r3, 1024, $i3);

     label06:
        if r18 != null goto label07;

        goto label10;

     label07:
        $r11 = r2.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        interfaceinvoke $r11.<android.app.IApplicationThread: void scheduleApplicationInfoChanged(android.content.pm.ApplicationInfo)>(r18);

        $r14 = r18.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r12 = r2.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r13 = $r12.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $z1 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        if $z1 == 0 goto label08;

        r2.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info> = r18;

     label08:
        goto label10;

     label09:
        $r15 := @caughtexception;

        $r16 = newarray (java.lang.Object)[2];

        $r16[0] = r3;

        $r16[1] = r2;

        $r17 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Failed to update %s ApplicationInfo for %s", $r16);

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r17);

     label10:
        i7 = i7 + 1;

        goto label04;

     label11:
        i6 = i6 + -1;

        goto label01;

     label12:
        return;

        catch android.os.RemoteException from label05 to label06 with label09;
        catch android.os.RemoteException from label07 to label08 with label09;
    }

    void updateCoreSettingsLocked(android.os.Bundle)
    {
        com.android.server.am.ProcessList r0;
        android.os.Bundle r1;
        java.util.ArrayList $r2, $r3;
        int $i0, i1;
        java.lang.Object $r4;
        android.app.IApplicationThread $r5, $r6;
        android.os.RemoteException $r7;
        com.android.server.am.ProcessRecord r8;

        r0 := @this: com.android.server.am.ProcessList;

        r1 := @parameter0: android.os.Bundle;

        $r2 = r0.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label6;

        $r3 = r0.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r8 = (com.android.server.am.ProcessRecord) $r4;

     label2:
        $r5 = r8.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r5 == null goto label3;

        $r6 = r8.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        interfaceinvoke $r6.<android.app.IApplicationThread: void setCoreSettings(android.os.Bundle)>(r1);

     label3:
        goto label5;

     label4:
        $r7 := @caughtexception;

     label5:
        i1 = i1 + -1;

        goto label1;

     label6:
        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    int updateLruProcessInternalLocked(com.android.server.am.ProcessRecord, long, int, int, java.lang.String, java.lang.Object, com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ProcessList r0;
        com.android.server.am.ProcessRecord r1, r4;
        long l0;
        int i1, i2, i3, i5, i6;
        java.lang.String r2, $r19;
        java.lang.Object r3;
        boolean $z0;
        java.util.ArrayList $r6, $r7, $r9;
        java.lang.StringBuilder $r10;

        r0 := @this: com.android.server.am.ProcessList;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r2 := @parameter4: java.lang.String;

        r3 := @parameter5: java.lang.Object;

        r4 := @parameter6: com.android.server.am.ProcessRecord;

        r1.<com.android.server.am.ProcessRecord: long lastActivityTime> = l0;

        $z0 = virtualinvoke r1.<com.android.server.am.ProcessRecord: boolean hasActivitiesOrRecentTasks()>();

        if $z0 == 0 goto label1;

        return i1;

     label1:
        $r6 = r0.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        i5 = virtualinvoke $r6.<java.util.ArrayList: int lastIndexOf(java.lang.Object)>(r1);

        if i5 >= 0 goto label2;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Adding dependent process ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not on LRU list: ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r19 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("ActivityManager", $r19);

        return i1;

     label2:
        if i5 < i1 goto label3;

        return i1;

     label3:
        i3 = r0.<com.android.server.am.ProcessList: int mLruProcessActivityStart>;

        if i5 < i3 goto label4;

        if i1 >= i3 goto label4;

        return i1;

     label4:
        $r7 = r0.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        virtualinvoke $r7.<java.util.ArrayList: java.lang.Object remove(int)>(i5);

        i6 = i1;

        if i1 <= 0 goto label5;

        i6 = i1 - 1;

     label5:
        $r9 = r0.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        virtualinvoke $r9.<java.util.ArrayList: void add(int,java.lang.Object)>(i6, r1);

        r1.<com.android.server.am.ProcessRecord: int lruSeq> = i2;

        return i6;
    }

    final void updateLruProcessLocked(com.android.server.am.ProcessRecord, boolean, com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ProcessList r0;
        com.android.server.am.ProcessRecord r1, $r6, $r7, $r8, $r9, $r17, $r20, $r23, $r26, $r29, $r32, $r38, r48;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z8, $z9, $z10, z11, $z12;
        long l0;
        int i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, i27, i28, i29, i30, i31, i33, i34, i35, i36, i37, i39, $i40, i41, i42, i43, i44, $i45, $i46, $i47, i48, $i49, i50, i51, i52, i53, i54, i55, i56;
        java.util.ArrayList $r2, $r3, $r33, $r34, $r35, $r36, $r41, $r43, $r45, $r46, $r49, $r50, $r51, $r52;
        java.lang.Object $r4, $r11, $r37, $r44, $r47;
        com.android.server.am.ContentProviderConnection $r5;
        android.util.ArraySet $r10, $r53;
        com.android.server.am.AppBindRecord $r12, $r13, $r15, $r18, $r21, $r24, $r27, $r30;
        com.android.server.am.ServiceRecord $r14, $r16, $r19, $r22, $r25, $r28, $r31;
        android.content.pm.ApplicationInfo $r39, $r40;
        com.android.server.am.ConnectionRecord r54;
        com.android.server.am.ContentProviderRecord r55;

        r0 := @this: com.android.server.am.ProcessList;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        z0 := @parameter1: boolean;

        r48 := @parameter2: com.android.server.am.ProcessRecord;

        $z1 = virtualinvoke r1.<com.android.server.am.ProcessRecord: boolean hasActivitiesOrRecentTasks()>();

        if $z1 != 0 goto label02;

        $z9 = virtualinvoke r1.<com.android.server.am.ProcessRecord: boolean hasClientActivities()>();

        if $z9 != 0 goto label02;

        $z10 = r1.<com.android.server.am.ProcessRecord: boolean treatLikeActivity>;

        if $z10 == 0 goto label01;

        goto label02;

     label01:
        z11 = 0;

        goto label03;

     label02:
        z11 = 1;

     label03:
        if z0 != 0 goto label04;

        if z11 == 0 goto label04;

        return;

     label04:
        $i2 = r0.<com.android.server.am.ProcessList: int mLruSeq>;

        $i3 = $i2 + 1;

        r0.<com.android.server.am.ProcessList: int mLruSeq> = $i3;

        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r1.<com.android.server.am.ProcessRecord: long lastActivityTime> = l0;

        if z11 == 0 goto label06;

        $r45 = r0.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        i27 = virtualinvoke $r45.<java.util.ArrayList: int size()>();

        if i27 <= 0 goto label05;

        $r46 = r0.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        $i26 = i27 - 1;

        $r47 = virtualinvoke $r46.<java.util.ArrayList: java.lang.Object get(int)>($i26);

        if $r47 != r1 goto label05;

        return;

     label05:
        goto label07;

     label06:
        i28 = r0.<com.android.server.am.ProcessList: int mLruProcessServiceStart>;

        if i28 <= 0 goto label07;

        $r43 = r0.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        $i25 = i28 - 1;

        $r44 = virtualinvoke $r43.<java.util.ArrayList: java.lang.Object get(int)>($i25);

        if $r44 != r1 goto label07;

        return;

     label07:
        $r49 = r0.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        i29 = virtualinvoke $r49.<java.util.ArrayList: int lastIndexOf(java.lang.Object)>(r1);

        $z12 = virtualinvoke r1.<com.android.server.am.ProcessRecord: boolean isPersistent()>();

        if $z12 == 0 goto label08;

        if i29 < 0 goto label08;

        return;

     label08:
        if i29 < 0 goto label11;

        i30 = r0.<com.android.server.am.ProcessList: int mLruProcessActivityStart>;

        if i29 >= i30 goto label09;

        $i24 = i30 - 1;

        r0.<com.android.server.am.ProcessList: int mLruProcessActivityStart> = $i24;

     label09:
        i31 = r0.<com.android.server.am.ProcessList: int mLruProcessServiceStart>;

        if i29 >= i31 goto label10;

        $i23 = i31 - 1;

        r0.<com.android.server.am.ProcessList: int mLruProcessServiceStart> = $i23;

     label10:
        $r41 = r0.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        virtualinvoke $r41.<java.util.ArrayList: java.lang.Object remove(int)>(i29);

     label11:
        if z11 == 0 goto label18;

        $r34 = r0.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        i33 = virtualinvoke $r34.<java.util.ArrayList: int size()>();

        i34 = r0.<com.android.server.am.ProcessList: int mLruProcessServiceStart>;

        $z6 = virtualinvoke r1.<com.android.server.am.ProcessRecord: boolean hasActivitiesOrRecentTasks()>();

        if $z6 != 0 goto label16;

        $z8 = r1.<com.android.server.am.ProcessRecord: boolean treatLikeActivity>;

        if $z8 != 0 goto label16;

        $i17 = r0.<com.android.server.am.ProcessList: int mLruProcessActivityStart>;

        $i16 = i33 - 1;

        if $i17 >= $i16 goto label16;

        i35 = i33 - 1;

     label12:
        $i18 = r0.<com.android.server.am.ProcessList: int mLruProcessActivityStart>;

        if i35 <= $i18 goto label14;

        $r36 = r0.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        $r37 = virtualinvoke $r36.<java.util.ArrayList: java.lang.Object get(int)>(i35);

        $r38 = (com.android.server.am.ProcessRecord) $r37;

        $r39 = $r38.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i22 = $r39.<android.content.pm.ApplicationInfo: int uid>;

        $r40 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i21 = $r40.<android.content.pm.ApplicationInfo: int uid>;

        if $i22 != $i21 goto label13;

        goto label14;

     label13:
        i35 = i35 + -1;

        goto label12;

     label14:
        $r35 = r0.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        virtualinvoke $r35.<java.util.ArrayList: void add(int,java.lang.Object)>(i35, r1);

        i36 = i35 - 1;

        i37 = i36;

        $i19 = r0.<com.android.server.am.ProcessList: int mLruProcessActivityStart>;

        if i36 >= $i19 goto label15;

        i37 = r0.<com.android.server.am.ProcessList: int mLruProcessActivityStart>;

     label15:
        $i20 = r0.<com.android.server.am.ProcessList: int mLruProcessActivityStart>;

        specialinvoke r0.<com.android.server.am.ProcessList: void updateClientActivitiesOrdering(com.android.server.am.ProcessRecord,int,int,int)>(r1, i35, $i20, i37);

        i39 = i37;

        goto label17;

     label16:
        $r50 = r0.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        virtualinvoke $r50.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        $r51 = r0.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        $i40 = virtualinvoke $r51.<java.util.ArrayList: int size()>();

        i39 = $i40 - 1;

     label17:
        i41 = i34;

        goto label22;

     label18:
        i1 = r0.<com.android.server.am.ProcessList: int mLruProcessServiceStart>;

        i42 = i1;

        if r48 == null goto label20;

        $r33 = r0.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        i43 = virtualinvoke $r33.<java.util.ArrayList: int lastIndexOf(java.lang.Object)>(r48);

        i44 = i43;

        if i43 > i29 goto label19;

        i44 = i29;

     label19:
        i42 = i1;

        if i44 < 0 goto label20;

        i42 = i1;

        if i1 <= i44 goto label20;

        i42 = i44;

     label20:
        $r52 = r0.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        virtualinvoke $r52.<java.util.ArrayList: void add(int,java.lang.Object)>(i42, r1);

        $i45 = r0.<com.android.server.am.ProcessList: int mLruProcessActivityStart>;

        $i46 = $i45 + 1;

        r0.<com.android.server.am.ProcessList: int mLruProcessActivityStart> = $i46;

        $i47 = r0.<com.android.server.am.ProcessList: int mLruProcessServiceStart>;

        i48 = $i47 + 1;

        r0.<com.android.server.am.ProcessList: int mLruProcessServiceStart> = i48;

        if i42 <= 1 goto label21;

        $i15 = i48 - 1;

        $i14 = i42 - 1;

        specialinvoke r0.<com.android.server.am.ProcessList: void updateClientActivitiesOrdering(com.android.server.am.ProcessRecord,int,int,int)>(r1, $i15, 0, $i14);

     label21:
        i41 = i42 - 1;

        i39 = -1;

     label22:
        $i49 = r0.<com.android.server.am.ProcessList: int mLruSeq>;

        r1.<com.android.server.am.ProcessRecord: int lruSeq> = $i49;

        $r53 = r1.<com.android.server.am.ProcessRecord: android.util.ArraySet connections>;

        i50 = virtualinvoke $r53.<android.util.ArraySet: int size()>();

        i51 = i50 - 1;

        i52 = i39;

        i53 = i51;

     label23:
        if i53 < 0 goto label28;

        $r10 = r1.<com.android.server.am.ProcessRecord: android.util.ArraySet connections>;

        $r11 = virtualinvoke $r10.<android.util.ArraySet: java.lang.Object valueAt(int)>(i53);

        r54 = (com.android.server.am.ConnectionRecord) $r11;

        $r12 = r54.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        if $r12 == null goto label27;

        $z3 = r54.<com.android.server.am.ConnectionRecord: boolean serviceDead>;

        if $z3 != 0 goto label27;

        $r13 = r54.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        $r14 = $r13.<com.android.server.am.AppBindRecord: com.android.server.am.ServiceRecord service>;

        if $r14 == null goto label27;

        $r15 = r54.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        $r16 = $r15.<com.android.server.am.AppBindRecord: com.android.server.am.ServiceRecord service>;

        $r17 = $r16.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r17 == null goto label27;

        $r18 = r54.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        $r19 = $r18.<com.android.server.am.AppBindRecord: com.android.server.am.ServiceRecord service>;

        $r20 = $r19.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $i9 = $r20.<com.android.server.am.ProcessRecord: int lruSeq>;

        $i8 = r0.<com.android.server.am.ProcessList: int mLruSeq>;

        if $i9 == $i8 goto label27;

        $i10 = r54.<com.android.server.am.ConnectionRecord: int flags>;

        $i11 = $i10 & 1073742128;

        if $i11 != 0 goto label27;

        $r21 = r54.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        $r22 = $r21.<com.android.server.am.AppBindRecord: com.android.server.am.ServiceRecord service>;

        $r23 = $r22.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $z4 = virtualinvoke $r23.<com.android.server.am.ProcessRecord: boolean isPersistent()>();

        if $z4 != 0 goto label26;

        $r24 = r54.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        $r25 = $r24.<com.android.server.am.AppBindRecord: com.android.server.am.ServiceRecord service>;

        $r26 = $r25.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $z5 = virtualinvoke $r26.<com.android.server.am.ProcessRecord: boolean hasClientActivities()>();

        if $z5 == 0 goto label25;

        if i52 < 0 goto label24;

        $r30 = r54.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        $r31 = $r30.<com.android.server.am.AppBindRecord: com.android.server.am.ServiceRecord service>;

        $r32 = $r31.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $i13 = r0.<com.android.server.am.ProcessList: int mLruSeq>;

        i52 = virtualinvoke r0.<com.android.server.am.ProcessList: int updateLruProcessInternalLocked(com.android.server.am.ProcessRecord,long,int,int,java.lang.String,java.lang.Object,com.android.server.am.ProcessRecord)>($r32, l0, i52, $i13, "service connection", r54, r1);

        goto label27;

     label24:
        goto label27;

     label25:
        $r27 = r54.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        $r28 = $r27.<com.android.server.am.AppBindRecord: com.android.server.am.ServiceRecord service>;

        $r29 = $r28.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $i12 = r0.<com.android.server.am.ProcessList: int mLruSeq>;

        i41 = virtualinvoke r0.<com.android.server.am.ProcessList: int updateLruProcessInternalLocked(com.android.server.am.ProcessRecord,long,int,int,java.lang.String,java.lang.Object,com.android.server.am.ProcessRecord)>($r29, l0, i41, $i12, "service connection", r54, r1);

        goto label27;

     label26:
        goto label27;

     label27:
        i53 = i53 + -1;

        goto label23;

     label28:
        $r2 = r1.<com.android.server.am.ProcessRecord: java.util.ArrayList conProviders>;

        $i4 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i54 = $i4 - 1;

        i55 = i41;

        i56 = i54;

     label29:
        if i56 < 0 goto label31;

        $r3 = r1.<com.android.server.am.ProcessRecord: java.util.ArrayList conProviders>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i56);

        $r5 = (com.android.server.am.ContentProviderConnection) $r4;

        r55 = $r5.<com.android.server.am.ContentProviderConnection: com.android.server.am.ContentProviderRecord provider>;

        $r6 = r55.<com.android.server.am.ContentProviderRecord: com.android.server.am.ProcessRecord proc>;

        if $r6 == null goto label30;

        $r7 = r55.<com.android.server.am.ContentProviderRecord: com.android.server.am.ProcessRecord proc>;

        $i6 = $r7.<com.android.server.am.ProcessRecord: int lruSeq>;

        $i5 = r0.<com.android.server.am.ProcessList: int mLruSeq>;

        if $i6 == $i5 goto label30;

        $r8 = r55.<com.android.server.am.ContentProviderRecord: com.android.server.am.ProcessRecord proc>;

        $z2 = virtualinvoke $r8.<com.android.server.am.ProcessRecord: boolean isPersistent()>();

        if $z2 != 0 goto label30;

        $r9 = r55.<com.android.server.am.ContentProviderRecord: com.android.server.am.ProcessRecord proc>;

        $i7 = r0.<com.android.server.am.ProcessList: int mLruSeq>;

        i55 = virtualinvoke r0.<com.android.server.am.ProcessList: int updateLruProcessInternalLocked(com.android.server.am.ProcessRecord,long,int,int,java.lang.String,java.lang.Object,com.android.server.am.ProcessRecord)>($r9, l0, i55, $i7, "provider reference", r55, r1);

        goto label30;

     label30:
        i56 = i56 + -1;

        goto label29;

     label31:
        return;
    }
}
