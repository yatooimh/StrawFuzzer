class com.android.server.am.ProcessRecord extends java.lang.Object implements com.android.server.wm.WindowProcessListener
{
    private static final java.lang.String TAG;
    private static final int VALUE_FALSE;
    private static final int VALUE_INVALID;
    private static final int VALUE_TRUE;
    int adjSeq;
    java.lang.Object adjSource;
    int adjSourceProcState;
    java.lang.Object adjTarget;
    java.lang.String adjType;
    int adjTypeCode;
    final boolean appZygote;
    boolean bad;
    com.android.internal.app.procstats.ProcessState baseProcessTracker;
    boolean bindMountPending;
    android.content.res.CompatibilityInfo compat;
    int completedAdjSeq;
    final java.util.ArrayList conProviders;
    int connectionGroup;
    int connectionImportance;
    com.android.server.am.ServiceRecord connectionService;
    final android.util.ArraySet connections;
    boolean containsCycle;
    java.lang.Runnable crashHandler;
    android.app.ActivityManager$ProcessErrorStateInfo crashingReport;
    int curAdj;
    int curCapability;
    long curCpuTime;
    com.android.internal.os.BatteryStatsImpl$Uid$Proc curProcBatteryStats;
    final android.util.ArraySet curReceivers;
    android.os.IBinder$DeathRecipient deathRecipient;
    boolean empty;
    android.content.ComponentName errorReportReceiver;
    boolean execServicesFg;
    final android.util.ArraySet executingServices;
    boolean forceCrashReport;
    java.lang.Object forcingToImportant;
    long freezeUnfreezeTime;
    boolean frozen;
    int[] gids;
    boolean hasAboveClient;
    boolean hasShownUi;
    boolean hasStartedServices;
    com.android.server.am.HostingRecord hostingRecord;
    public boolean inFullBackup;
    volatile android.content.pm.ApplicationInfo info;
    long initialIdlePss;
    java.lang.String instructionSet;
    final boolean isolated;
    java.lang.String isolatedEntryPoint;
    java.lang.String[] isolatedEntryPointArgs;
    boolean killed;
    boolean killedByAm;
    long lastActivityTime;
    long lastCachedPss;
    long lastCachedSwapPss;
    int lastCompactAction;
    long lastCompactTime;
    long lastCpuTime;
    long lastLowMemory;
    android.os.Debug$MemoryInfo lastMemInfo;
    long lastMemInfoTime;
    long lastProviderTime;
    long lastPss;
    long lastPssTime;
    long lastRequestedGc;
    long lastStateTime;
    long lastSwapPss;
    long lastTopTime;
    int lruSeq;
    final android.util.ArraySet mAllowBackgroundActivityStartsTokens;
    private android.util.ArraySet mBoundClientUids;
    private volatile boolean mCached;
    int mCachedAdj;
    boolean mCachedForegroundActivities;
    private int mCachedHasActivities;
    private int mCachedHasRecentTasks;
    private int mCachedHasVisibleActivities;
    private int mCachedIsHeavyWeight;
    private int mCachedIsHomeProcess;
    private int mCachedIsPreviousProcess;
    private int mCachedIsReceivingBroadcast;
    int mCachedProcState;
    int mCachedSchedGroup;
    private boolean mCrashing;
    private int mCurProcState;
    private int mCurRawAdj;
    private int mCurRawProcState;
    private int mCurSchedGroup;
    private boolean mDebugging;
    private final com.android.server.am.ProcessRecord$ErrorDialogController mDialogController;
    long[] mDisabledCompatChanges;
    private long mFgInteractionTime;
    private int mFgServiceTypes;
    private boolean mHasClientActivities;
    private boolean mHasForegroundActivities;
    private boolean mHasForegroundServices;
    private boolean mHasOverlayUi;
    private boolean mHasTopUi;
    private com.android.server.am.ActiveInstrumentation mInstr;
    private long mInteractionEventTime;
    long mLastRss;
    private boolean mNotResponding;
    private boolean mPendingUiClean;
    private boolean mPersistent;
    volatile com.android.server.am.ProcessRecord mPrecedence;
    boolean mReachable;
    private int mRepFgServiceTypes;
    private int mRepProcState;
    private java.lang.String mRequiredAbi;
    private final com.android.server.am.ActivityManagerService mService;
    private final android.util.ArraySet mServices;
    volatile com.android.server.am.ProcessRecord mSuccessor;
    private boolean mUsingWrapper;
    private long mWhenUnimportant;
    private final com.android.server.wm.WindowProcessController mWindowProcessController;
    int maxAdj;
    int mountMode;
    long nextPssTime;
    boolean notCachedSinceIdle;
    android.app.ActivityManager$ProcessErrorStateInfo notRespondingReport;
    boolean pendingStart;
    int pid;
    android.util.ArraySet pkgDeps;
    final com.android.server.am.ProcessRecord$PackageList pkgList;
    java.lang.String procStatFile;
    boolean procStateChanged;
    final com.android.server.am.ProcessList$ProcStateMemTracker procStateMemTracker;
    final android.content.pm.ProcessInfo processInfo;
    final java.lang.String processName;
    int pssProcState;
    int pssStatType;
    final android.util.ArrayMap pubProviders;
    final android.util.ArraySet receivers;
    volatile boolean removed;
    int renderThreadTid;
    boolean repForegroundActivities;
    boolean reportLowMemory;
    boolean reportedInteraction;
    int reqCompactAction;
    boolean runningRemoteAnimation;
    int savedPriority;
    java.lang.String seInfo;
    boolean serviceHighRam;
    boolean serviceb;
    int setAdj;
    int setCapability;
    int setProcState;
    int setRawAdj;
    int setSchedGroup;
    java.lang.String shortStringName;
    boolean shouldNotFreeze;
    long startSeq;
    long startTime;
    int startUid;
    boolean starting;
    java.lang.String stringName;
    boolean systemNoUi;
    android.app.IApplicationThread thread;
    boolean treatLikeActivity;
    int trimMemoryLevel;
    final int uid;
    com.android.server.am.UidRecord uidRecord;
    boolean unlocked;
    final int userId;
    int verifiedAdj;
    boolean waitedForDebugger;
    java.lang.String waitingToKill;
    boolean whitelistManager;

    void <init>(com.android.server.am.ActivityManagerService, android.content.pm.ApplicationInfo, java.lang.String, int)
    {
        com.android.server.am.ProcessRecord r0;
        android.content.pm.ApplicationInfo r1, $r27;
        java.lang.String r2, $r28, $r30;
        int i0, i1, $i3, $i4, $i5, $i6, $i7, $i8;
        long l2, $l9;
        com.android.server.am.ProcessRecord$PackageList $r3, $r29;
        com.android.server.am.ProcessList$ProcStateMemTracker $r4;
        android.util.ArraySet $r5, $r7, $r8, $r9, $r10, $r13, $r14, $r18;
        com.android.server.am.ProcessRecord$ErrorDialogController $r6;
        android.util.ArrayMap $r11, r21;
        java.util.ArrayList $r12;
        android.content.pm.PackageManagerInternal $r15, $r16;
        java.lang.Object $r17;
        com.android.server.am.ActivityManagerService r19, $r25;
        android.content.pm.ProcessInfo r20, r22, r23;
        boolean z0, z1;
        com.android.server.wm.WindowProcessController $r24;
        com.android.server.wm.ActivityTaskManagerService $r26;
        com.android.internal.app.procstats.ProcessStats$ProcessStateHolder $r31;

        r0 := @this: com.android.server.am.ProcessRecord;

        r19 := @parameter0: com.android.server.am.ActivityManagerService;

        r1 := @parameter1: android.content.pm.ApplicationInfo;

        r2 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new com.android.server.am.ProcessRecord$PackageList;

        specialinvoke $r3.<com.android.server.am.ProcessRecord$PackageList: void <init>(com.android.server.am.ProcessRecord)>(r0);

        r0.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList> = $r3;

        $r4 = new com.android.server.am.ProcessList$ProcStateMemTracker;

        specialinvoke $r4.<com.android.server.am.ProcessList$ProcStateMemTracker: void <init>()>();

        r0.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessList$ProcStateMemTracker procStateMemTracker> = $r4;

        r0.<com.android.server.am.ProcessRecord: int mCurProcState> = 20;

        r0.<com.android.server.am.ProcessRecord: int mRepProcState> = 20;

        r0.<com.android.server.am.ProcessRecord: int mCurRawProcState> = 20;

        r0.<com.android.server.am.ProcessRecord: int setProcState> = 20;

        r0.<com.android.server.am.ProcessRecord: int pssProcState> = 20;

        $r5 = new android.util.ArraySet;

        specialinvoke $r5.<android.util.ArraySet: void <init>()>();

        r0.<com.android.server.am.ProcessRecord: android.util.ArraySet curReceivers> = $r5;

        $r6 = new com.android.server.am.ProcessRecord$ErrorDialogController;

        specialinvoke $r6.<com.android.server.am.ProcessRecord$ErrorDialogController: void <init>(com.android.server.am.ProcessRecord)>(r0);

        r0.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$ErrorDialogController mDialogController> = $r6;

        $r7 = new android.util.ArraySet;

        specialinvoke $r7.<android.util.ArraySet: void <init>()>();

        r0.<com.android.server.am.ProcessRecord: android.util.ArraySet mServices> = $r7;

        $r8 = new android.util.ArraySet;

        specialinvoke $r8.<android.util.ArraySet: void <init>()>();

        r0.<com.android.server.am.ProcessRecord: android.util.ArraySet executingServices> = $r8;

        $r9 = new android.util.ArraySet;

        specialinvoke $r9.<android.util.ArraySet: void <init>()>();

        r0.<com.android.server.am.ProcessRecord: android.util.ArraySet connections> = $r9;

        $r10 = new android.util.ArraySet;

        specialinvoke $r10.<android.util.ArraySet: void <init>()>();

        r0.<com.android.server.am.ProcessRecord: android.util.ArraySet receivers> = $r10;

        $r11 = new android.util.ArrayMap;

        specialinvoke $r11.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.am.ProcessRecord: android.util.ArrayMap pubProviders> = $r11;

        $r12 = new java.util.ArrayList;

        specialinvoke $r12.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.ProcessRecord: java.util.ArrayList conProviders> = $r12;

        $r13 = new android.util.ArraySet;

        specialinvoke $r13.<android.util.ArraySet: void <init>()>();

        r0.<com.android.server.am.ProcessRecord: android.util.ArraySet mAllowBackgroundActivityStartsTokens> = $r13;

        $r14 = new android.util.ArraySet;

        specialinvoke $r14.<android.util.ArraySet: void <init>()>();

        r0.<com.android.server.am.ProcessRecord: android.util.ArraySet mBoundClientUids> = $r14;

        r0.<com.android.server.am.ProcessRecord: int mCachedHasActivities> = -1;

        r0.<com.android.server.am.ProcessRecord: int mCachedIsHeavyWeight> = -1;

        r0.<com.android.server.am.ProcessRecord: int mCachedHasVisibleActivities> = -1;

        r0.<com.android.server.am.ProcessRecord: int mCachedIsHomeProcess> = -1;

        r0.<com.android.server.am.ProcessRecord: int mCachedIsPreviousProcess> = -1;

        r0.<com.android.server.am.ProcessRecord: int mCachedHasRecentTasks> = -1;

        r0.<com.android.server.am.ProcessRecord: int mCachedIsReceivingBroadcast> = -1;

        r0.<com.android.server.am.ProcessRecord: int mCachedAdj> = -10000;

        r0.<com.android.server.am.ProcessRecord: boolean mCachedForegroundActivities> = 0;

        r0.<com.android.server.am.ProcessRecord: int mCachedProcState> = 19;

        r0.<com.android.server.am.ProcessRecord: int mCachedSchedGroup> = 0;

        r0.<com.android.server.am.ProcessRecord: com.android.server.am.ActivityManagerService mService> = r19;

        r0.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info> = r1;

        r20 = null;

        $r15 = r19.<com.android.server.am.ActivityManagerService: android.content.pm.PackageManagerInternal mPackageManagerInt>;

        if $r15 == null goto label1;

        $r16 = r19.<com.android.server.am.ActivityManagerService: android.content.pm.PackageManagerInternal mPackageManagerInt>;

        r21 = virtualinvoke $r16.<android.content.pm.PackageManagerInternal: android.util.ArrayMap getProcessesForUid(int)>(i0);

        r20 = null;

        if r21 == null goto label1;

        $r17 = virtualinvoke r21.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r2);

        r22 = (android.content.pm.ProcessInfo) $r17;

        r20 = r22;

        if r22 == null goto label1;

        r20 = r22;

        $r18 = r22.<android.content.pm.ProcessInfo: android.util.ArraySet deniedPermissions>;

        if $r18 != null goto label1;

        r20 = r22;

        $i5 = r22.<android.content.pm.ProcessInfo: int gwpAsanMode>;

        if $i5 != -1 goto label1;

        r23 = null;

        goto label2;

     label1:
        r23 = r20;

     label2:
        r0.<com.android.server.am.ProcessRecord: android.content.pm.ProcessInfo processInfo> = r23;

        i1 = r1.<android.content.pm.ApplicationInfo: int uid>;

        if i1 == i0 goto label3;

        z0 = 1;

        goto label4;

     label3:
        z0 = 0;

     label4:
        r0.<com.android.server.am.ProcessRecord: boolean isolated> = z0;

        $i3 = staticinvoke <android.os.UserHandle: int getAppId(int)>(i0);

        if $i3 < 90000 goto label5;

        $i4 = staticinvoke <android.os.UserHandle: int getAppId(int)>(i0);

        if $i4 > 98999 goto label5;

        z1 = 1;

        goto label6;

     label5:
        z1 = 0;

     label6:
        r0.<com.android.server.am.ProcessRecord: boolean appZygote> = z1;

        r0.<com.android.server.am.ProcessRecord: int uid> = i0;

        $i6 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        r0.<com.android.server.am.ProcessRecord: int userId> = $i6;

        r0.<com.android.server.am.ProcessRecord: java.lang.String processName> = r2;

        r0.<com.android.server.am.ProcessRecord: int maxAdj> = 1001;

        r0.<com.android.server.am.ProcessRecord: int setRawAdj> = -10000;

        r0.<com.android.server.am.ProcessRecord: int mCurRawAdj> = -10000;

        r0.<com.android.server.am.ProcessRecord: int verifiedAdj> = -10000;

        r0.<com.android.server.am.ProcessRecord: int setAdj> = -10000;

        r0.<com.android.server.am.ProcessRecord: int curAdj> = -10000;

        r0.<com.android.server.am.ProcessRecord: boolean mPersistent> = 0;

        r0.<com.android.server.am.ProcessRecord: boolean removed> = 0;

        l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r0.<com.android.server.am.ProcessRecord: long nextPssTime> = l2;

        r0.<com.android.server.am.ProcessRecord: long lastPssTime> = l2;

        r0.<com.android.server.am.ProcessRecord: long lastStateTime> = l2;

        r0.<com.android.server.am.ProcessRecord: long freezeUnfreezeTime> = l2;

        $r24 = new com.android.server.wm.WindowProcessController;

        $r25 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ActivityManagerService mService>;

        $r26 = $r25.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerService mActivityTaskManager>;

        $r27 = r0.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r28 = r0.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $i7 = r0.<com.android.server.am.ProcessRecord: int uid>;

        $i8 = r0.<com.android.server.am.ProcessRecord: int userId>;

        specialinvoke $r24.<com.android.server.wm.WindowProcessController: void <init>(com.android.server.wm.ActivityTaskManagerService,android.content.pm.ApplicationInfo,java.lang.String,int,int,java.lang.Object,com.android.server.wm.WindowProcessListener)>($r26, $r27, $r28, $i7, $i8, r0, r0);

        r0.<com.android.server.am.ProcessRecord: com.android.server.wm.WindowProcessController mWindowProcessController> = $r24;

        $r29 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        $r30 = r1.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r31 = new com.android.internal.app.procstats.ProcessStats$ProcessStateHolder;

        $l9 = r1.<android.content.pm.ApplicationInfo: long longVersionCode>;

        specialinvoke $r31.<com.android.internal.app.procstats.ProcessStats$ProcessStateHolder: void <init>(long)>($l9);

        virtualinvoke $r29.<com.android.server.am.ProcessRecord$PackageList: com.android.internal.app.procstats.ProcessStats$ProcessStateHolder put(java.lang.String,com.android.internal.app.procstats.ProcessStats$ProcessStateHolder)>($r30, $r31);

        return;
    }

    static com.android.server.wm.WindowProcessController access$000(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ProcessRecord r0;
        com.android.server.wm.WindowProcessController $r1;

        r0 := @parameter0: com.android.server.am.ProcessRecord;

        $r1 = r0.<com.android.server.am.ProcessRecord: com.android.server.wm.WindowProcessController mWindowProcessController>;

        return $r1;
    }

    static com.android.server.am.ActivityManagerService access$300(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ProcessRecord r0;
        com.android.server.am.ActivityManagerService $r1;

        r0 := @parameter0: com.android.server.am.ProcessRecord;

        $r1 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ActivityManagerService mService>;

        return $r1;
    }

    private boolean getShowBackground()
    {
        com.android.server.am.ProcessRecord r0;
        android.content.ContentResolver r1;
        com.android.server.am.ActivityManagerService $r2;
        android.content.Context $r3;
        int $i0;
        boolean z0;

        r0 := @this: com.android.server.am.ProcessRecord;

        $r2 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ActivityManagerService mService>;

        $r3 = $r2.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        r1 = virtualinvoke $r3.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        z0 = 0;

        $i0 = staticinvoke <android.provider.Settings$Secure: int getInt(android.content.ContentResolver,java.lang.String,int)>(r1, "anr_show_background", 0);

        if $i0 == 0 goto label1;

        z0 = 1;

     label1:
        return z0;
    }

    private boolean isInterestingForBackgroundTraces()
    {
        com.android.server.am.ProcessRecord r0;
        int i0, i1;
        boolean $z0, $z1, $z2, $z3, z4;
        android.content.pm.ApplicationInfo $r1, $r2;
        java.lang.String $r3, $r4;

        r0 := @this: com.android.server.am.ProcessRecord;

        i0 = r0.<com.android.server.am.ProcessRecord: int pid>;

        i1 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        z4 = 1;

        if i0 != i1 goto label1;

        return 1;

     label1:
        $z0 = virtualinvoke r0.<com.android.server.am.ProcessRecord: boolean isInterestingToUserLocked()>();

        if $z0 != 0 goto label4;

        $r1 = r0.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        if $r1 == null goto label2;

        $r4 = "com.android.systemui";

        $r2 = r0.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r3 = $r2.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $z3 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z3 != 0 goto label4;

     label2:
        $z1 = virtualinvoke r0.<com.android.server.am.ProcessRecord: boolean hasTopUi()>();

        if $z1 != 0 goto label4;

        $z2 = virtualinvoke r0.<com.android.server.am.ProcessRecord: boolean hasOverlayUi()>();

        if $z2 == 0 goto label3;

        goto label4;

     label3:
        z4 = 0;

        goto label4;

     label4:
        return z4;
    }

    private void makeAppNotRespondingLocked(java.lang.String, java.lang.String, java.lang.String)
    {
        com.android.server.am.ProcessRecord r0;
        java.lang.String r1, r2, r3;
        com.android.server.am.ActivityManagerService $r4, $r7;
        com.android.server.am.AppErrors $r5, $r8;
        com.android.server.wm.WindowProcessController $r6;
        android.app.ActivityManager$ProcessErrorStateInfo $r9;

        r0 := @this: com.android.server.am.ProcessRecord;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        virtualinvoke r0.<com.android.server.am.ProcessRecord: void setNotResponding(boolean)>(1);

        $r4 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ActivityManagerService mService>;

        $r5 = $r4.<com.android.server.am.ActivityManagerService: com.android.server.am.AppErrors mAppErrors>;

        if $r5 == null goto label1;

        $r7 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ActivityManagerService mService>;

        $r8 = $r7.<com.android.server.am.ActivityManagerService: com.android.server.am.AppErrors mAppErrors>;

        $r9 = virtualinvoke $r8.<com.android.server.am.AppErrors: android.app.ActivityManager$ProcessErrorStateInfo generateProcessError(com.android.server.am.ProcessRecord,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r0, 2, r1, r2, r3, null);

        r0.<com.android.server.am.ProcessRecord: android.app.ActivityManager$ProcessErrorStateInfo notRespondingReport> = $r9;

     label1:
        virtualinvoke r0.<com.android.server.am.ProcessRecord: void startAppProblemLocked()>();

        $r6 = virtualinvoke r0.<com.android.server.am.ProcessRecord: com.android.server.wm.WindowProcessController getWindowProcessController()>();

        virtualinvoke $r6.<com.android.server.wm.WindowProcessController: void stopFreezingActivities()>();

        return;
    }

    void addAllowBackgroundActivityStartsToken(android.os.Binder)
    {
        com.android.server.am.ProcessRecord r0;
        android.os.Binder r1;
        android.util.ArraySet $r2;
        com.android.server.wm.WindowProcessController $r3;

        r0 := @this: com.android.server.am.ProcessRecord;

        r1 := @parameter0: android.os.Binder;

        if r1 != null goto label1;

        return;

     label1:
        $r2 = r0.<com.android.server.am.ProcessRecord: android.util.ArraySet mAllowBackgroundActivityStartsTokens>;

        virtualinvoke $r2.<android.util.ArraySet: boolean add(java.lang.Object)>(r1);

        $r3 = r0.<com.android.server.am.ProcessRecord: com.android.server.wm.WindowProcessController mWindowProcessController>;

        virtualinvoke $r3.<com.android.server.wm.WindowProcessController: void setAllowBackgroundActivityStarts(boolean)>(1);

        return;
    }

    void addBoundClientUid(int)
    {
        com.android.server.am.ProcessRecord r0;
        int i0;
        android.util.ArraySet $r1, $r3;
        java.lang.Integer $r2;
        com.android.server.wm.WindowProcessController $r4;

        r0 := @this: com.android.server.am.ProcessRecord;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.am.ProcessRecord: android.util.ArraySet mBoundClientUids>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r1.<android.util.ArraySet: boolean add(java.lang.Object)>($r2);

        $r4 = r0.<com.android.server.am.ProcessRecord: com.android.server.wm.WindowProcessController mWindowProcessController>;

        $r3 = r0.<com.android.server.am.ProcessRecord: android.util.ArraySet mBoundClientUids>;

        virtualinvoke $r4.<com.android.server.wm.WindowProcessController: void setBoundClientUids(android.util.ArraySet)>($r3);

        return;
    }

    void addBoundClientUidsOfNewService(com.android.server.am.ServiceRecord)
    {
        com.android.server.am.ProcessRecord r0;
        java.util.ArrayList r1;
        int $i0, $i1, $i2, i3, i4;
        android.util.ArraySet $r2, $r5;
        com.android.server.wm.WindowProcessController $r3;
        java.lang.Object $r4, $r6;
        com.android.server.am.ConnectionRecord $r7;
        java.lang.Integer $r8;
        com.android.server.am.ServiceRecord r9;
        android.util.ArrayMap r10;

        r0 := @this: com.android.server.am.ProcessRecord;

        r9 := @parameter0: com.android.server.am.ServiceRecord;

        if r9 != null goto label1;

        return;

     label1:
        r10 = virtualinvoke r9.<com.android.server.am.ServiceRecord: android.util.ArrayMap getConnections()>();

        $i0 = virtualinvoke r10.<android.util.ArrayMap: int size()>();

        i3 = $i0 - 1;

     label2:
        if i3 < 0 goto label5;

        $r4 = virtualinvoke r10.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i3);

        r1 = (java.util.ArrayList) $r4;

        i4 = 0;

     label3:
        $i1 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if i4 >= $i1 goto label4;

        $r5 = r0.<com.android.server.am.ProcessRecord: android.util.ArraySet mBoundClientUids>;

        $r6 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        $r7 = (com.android.server.am.ConnectionRecord) $r6;

        $i2 = $r7.<com.android.server.am.ConnectionRecord: int clientUid>;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        virtualinvoke $r5.<android.util.ArraySet: boolean add(java.lang.Object)>($r8);

        i4 = i4 + 1;

        goto label3;

     label4:
        i3 = i3 + -1;

        goto label2;

     label5:
        $r3 = r0.<com.android.server.am.ProcessRecord: com.android.server.wm.WindowProcessController mWindowProcessController>;

        $r2 = r0.<com.android.server.am.ProcessRecord: android.util.ArraySet mBoundClientUids>;

        virtualinvoke $r3.<com.android.server.wm.WindowProcessController: void setBoundClientUids(android.util.ArraySet)>($r2);

        return;
    }

    public boolean addPackage(java.lang.String, long, com.android.server.am.ProcessStatsService)
    {
        com.android.server.am.ProcessRecord r0;
        java.lang.String r1, $r10;
        long l0;
        com.android.server.am.ProcessStatsService r2;
        com.android.server.am.ProcessRecord$PackageList $r4, $r7, $r11;
        boolean $z0;
        com.android.internal.app.procstats.ProcessStats$ProcessStateHolder $r5;
        com.android.internal.app.procstats.ProcessState $r6, $r13, $r14, $r15;
        android.content.pm.ApplicationInfo $r9;
        int $i1;

        r0 := @this: com.android.server.am.ProcessRecord;

        r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        r2 := @parameter2: com.android.server.am.ProcessStatsService;

        $r4 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        $z0 = virtualinvoke $r4.<com.android.server.am.ProcessRecord$PackageList: boolean containsKey(java.lang.Object)>(r1);

        if $z0 != 0 goto label3;

        $r5 = new com.android.internal.app.procstats.ProcessStats$ProcessStateHolder;

        specialinvoke $r5.<com.android.internal.app.procstats.ProcessStats$ProcessStateHolder: void <init>(long)>(l0);

        $r6 = r0.<com.android.server.am.ProcessRecord: com.android.internal.app.procstats.ProcessState baseProcessTracker>;

        if $r6 == null goto label1;

        $r9 = r0.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i1 = $r9.<android.content.pm.ApplicationInfo: int uid>;

        $r10 = r0.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        virtualinvoke r2.<com.android.server.am.ProcessStatsService: void updateProcessStateHolderLocked(com.android.internal.app.procstats.ProcessStats$ProcessStateHolder,java.lang.String,int,long,java.lang.String)>($r5, r1, $i1, l0, $r10);

        $r11 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        virtualinvoke $r11.<com.android.server.am.ProcessRecord$PackageList: com.android.internal.app.procstats.ProcessStats$ProcessStateHolder put(java.lang.String,com.android.internal.app.procstats.ProcessStats$ProcessStateHolder)>(r1, $r5);

        $r14 = $r5.<com.android.internal.app.procstats.ProcessStats$ProcessStateHolder: com.android.internal.app.procstats.ProcessState state>;

        $r13 = r0.<com.android.server.am.ProcessRecord: com.android.internal.app.procstats.ProcessState baseProcessTracker>;

        if $r14 == $r13 goto label2;

        $r15 = $r5.<com.android.internal.app.procstats.ProcessStats$ProcessStateHolder: com.android.internal.app.procstats.ProcessState state>;

        virtualinvoke $r15.<com.android.internal.app.procstats.ProcessState: void makeActive()>();

        goto label2;

     label1:
        $r7 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        virtualinvoke $r7.<com.android.server.am.ProcessRecord$PackageList: com.android.internal.app.procstats.ProcessStats$ProcessStateHolder put(java.lang.String,com.android.internal.app.procstats.ProcessStats$ProcessStateHolder)>(r1, $r5);

     label2:
        return 1;

     label3:
        return 0;
    }

    public void appDied(java.lang.String)
    {
        com.android.server.am.ProcessRecord r0;
        com.android.server.am.ActivityManagerService r1, $r2;
        java.lang.Throwable $r3;
        java.lang.String r4;

        r0 := @this: com.android.server.am.ProcessRecord;

        r4 := @parameter0: java.lang.String;

        r1 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ActivityManagerService mService>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r2 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ActivityManagerService mService>;

        virtualinvoke $r2.<com.android.server.am.ActivityManagerService: void appDiedLocked(com.android.server.am.ProcessRecord,java.lang.String)>(r0, r4);

        exitmonitor r1;

     label2:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    void appNotResponding(java.lang.String, android.content.pm.ApplicationInfo, java.lang.String, com.android.server.wm.WindowProcessController, boolean, java.lang.String, boolean)
    {
        com.android.server.am.ProcessRecord r0, r96, r115;
        android.content.pm.ApplicationInfo r1, $r18, $r25, $r26, $r45, $r46;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, z12, z13, z14, z15, z16, z17, $z18;
        java.lang.String r2, $r17, $r23, $r24, $r28, $r29, $r31, $r36, $r42, $r55, $r56, $r60, $r61, $r63, $r72, $r73, $r74, $r75, $r76, r84, r85, $r98, $r100, r112, r113, r114, r118;
        long l0, $l7, $l12, $l13;
        long[] r7;
        int i1, $i2, $i3, $i4, $i5, $i6, $i9, $i10, $i11, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, i24, i25, $i26, $i27, i28, i29, i30, $i31, i32, i33, i35;
        java.util.ArrayList $r8, $r57, r107;
        android.util.SparseArray $r9, r87;
        com.android.server.am._$$Lambda$ProcessRecord$1qn6_pj5yWgiSnKANZpVz3gwd30 $r10;
        com.android.server.wm.WindowProcessController $r11, $r30, r86;
        com.android.server.am.ActivityManagerService $r12, $r27, $r34, $r37, $r39, $r41, $r47, $r51, $r52, $r53, $r77, r88, r116;
        com.android.server.wm.ActivityTaskManagerInternal $r13;
        java.lang.Object[] $r14;
        java.lang.Integer $r15, $r16, $r19, $r20, $r58, $r68, $r69, $r70, $r71;
        java.io.StringWriter $r21;
        java.lang.StringBuffer $r22;
        byte $b8, b34, b36;
        com.android.server.am._$$Lambda$ProcessRecord$Cb3MKja7_iTlaFQrvQTzPvLyoT8 $r32;
        com.android.server.am._$$Lambda$ProcessRecord$2DImTokd0AWNTECl3WgBxJkOOqs $r33;
        com.android.server.am.BatteryStatsService $r35, $r43;
        android.os.Handler $r38, $r40;
        java.lang.Object $r44, $r65;
        com.android.server.am.ProcessList $r48;
        com.android.server.am.AppExitInfoTracker $r49;
        java.lang.String[] $r50, $r59, $r62, r103, $r104;
        com.android.internal.os.ProcessCpuTracker $r54, $r101, r108, r110;
        java.util.List $r64, $r95;
        android.app.IApplicationThread $r66;
        java.lang.Boolean $r67;
        java.lang.Throwable $r78, $r79, $r80, $r81, $r82, $r83, r90, r121;
        java.lang.StringBuilder r89, r91, r92, r93, r94, $r97, $r99, r117;
        int[] r105;
        java.io.File r109;
        android.os.Message r119;
        com.android.server.am.AppNotRespondingDialog$Data r120;

        r0 := @this: com.android.server.am.ProcessRecord;

        r84 := @parameter0: java.lang.String;

        r1 := @parameter1: android.content.pm.ApplicationInfo;

        r85 := @parameter2: java.lang.String;

        r86 := @parameter3: com.android.server.wm.WindowProcessController;

        z0 := @parameter4: boolean;

        r2 := @parameter5: java.lang.String;

        z1 := @parameter6: boolean;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>(int)>(5);

        $r9 = new android.util.SparseArray;

        specialinvoke $r9.<android.util.SparseArray: void <init>(int)>(20);

        r87 = $r9;

        $r11 = r0.<com.android.server.am.ProcessRecord: com.android.server.wm.WindowProcessController mWindowProcessController>;

        $r10 = new com.android.server.am._$$Lambda$ProcessRecord$1qn6_pj5yWgiSnKANZpVz3gwd30;

        specialinvoke $r10.<com.android.server.am._$$Lambda$ProcessRecord$1qn6_pj5yWgiSnKANZpVz3gwd30: void <init>(com.android.server.am.ProcessRecord)>(r0);

        virtualinvoke $r11.<com.android.server.wm.WindowProcessController: void appEarlyNotResponding(java.lang.String,java.lang.Runnable)>(r2, $r10);

        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $z2 = virtualinvoke r0.<com.android.server.am.ProcessRecord: boolean isMonitorCpuUsage()>();

        if $z2 == 0 goto label001;

        $r77 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ActivityManagerService mService>;

        virtualinvoke $r77.<com.android.server.am.ActivityManagerService: void updateCpuStatsNow()>();

     label001:
        r88 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ActivityManagerService mService>;

        entermonitor r88;

     label002:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r12 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ActivityManagerService mService>;

        $r13 = $r12.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerInternal mAtmInternal>;

        z12 = virtualinvoke $r13.<com.android.server.wm.ActivityTaskManagerInternal: boolean isShuttingDown()>();

     label003:
        if z12 == 0 goto label007;

     label004:
        r89 = new java.lang.StringBuilder;

        specialinvoke r89.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("During shutdown skipping ANR: ");

        virtualinvoke r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        virtualinvoke r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        virtualinvoke r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r76 = virtualinvoke r89.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", $r76);

        exitmonitor r88;

     label005:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label006:
        $r79 := @caughtexception;

        r90 = $r79;

        goto label099;

     label007:
        z13 = virtualinvoke r0.<com.android.server.am.ProcessRecord: boolean isNotResponding()>();

     label008:
        if z13 == 0 goto label011;

     label009:
        r91 = new java.lang.StringBuilder;

        specialinvoke r91.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skipping duplicate ANR: ");

        virtualinvoke r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        virtualinvoke r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        virtualinvoke r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r75 = virtualinvoke r91.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", $r75);

        exitmonitor r88;

     label010:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label011:
        z14 = virtualinvoke r0.<com.android.server.am.ProcessRecord: boolean isCrashing()>();

     label012:
        if z14 == 0 goto label015;

     label013:
        r92 = new java.lang.StringBuilder;

        specialinvoke r92.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Crashing app skipping ANR: ");

        virtualinvoke r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        virtualinvoke r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        virtualinvoke r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r74 = virtualinvoke r92.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", $r74);

        exitmonitor r88;

     label014:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label015:
        z15 = r0.<com.android.server.am.ProcessRecord: boolean killedByAm>;

     label016:
        if z15 == 0 goto label019;

     label017:
        r93 = new java.lang.StringBuilder;

        specialinvoke r93.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("App already killed by AM skipping ANR: ");

        virtualinvoke r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        virtualinvoke r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        virtualinvoke r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r73 = virtualinvoke r93.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", $r73);

        exitmonitor r88;

     label018:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label019:
        z16 = r0.<com.android.server.am.ProcessRecord: boolean killed>;

     label020:
        if z16 == 0 goto label023;

     label021:
        r94 = new java.lang.StringBuilder;

        specialinvoke r94.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skipping died app ANR: ");

        virtualinvoke r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        virtualinvoke r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        virtualinvoke r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r72 = virtualinvoke r94.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", $r72);

        exitmonitor r88;

     label022:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label023:
        virtualinvoke r0.<com.android.server.am.ProcessRecord: void setNotResponding(boolean)>(1);

        $r14 = newarray (java.lang.Object)[5];

        $i2 = r0.<com.android.server.am.ProcessRecord: int userId>;

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r14[0] = $r15;

        $i3 = r0.<com.android.server.am.ProcessRecord: int pid>;

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r14[1] = $r16;

        $r17 = r0.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r14[2] = $r17;

        $r18 = r0.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i4 = $r18.<android.content.pm.ApplicationInfo: int flags>;

        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r14[3] = $r19;

        $r14[4] = r2;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(30008, $r14);

        $i5 = r0.<com.android.server.am.ProcessRecord: int pid>;

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        virtualinvoke $r8.<java.util.ArrayList: boolean add(java.lang.Object)>($r20);

        z17 = virtualinvoke r0.<com.android.server.am.ProcessRecord: boolean isSilentAnr()>();

     label024:
        if z17 != 0 goto label044;

        if z1 != 0 goto label044;

     label025:
        i24 = r0.<com.android.server.am.ProcessRecord: int pid>;

     label026:
        i25 = i24;

        if r86 == null goto label028;

        i25 = i24;

     label027:
        $i23 = virtualinvoke r86.<com.android.server.wm.WindowProcessController: int getPid()>();

        if $i23 <= 0 goto label028;

        i25 = virtualinvoke r86.<com.android.server.wm.WindowProcessController: int getPid()>();

     label028:
        $i26 = r0.<com.android.server.am.ProcessRecord: int pid>;

        if i25 == $i26 goto label029;

        $r71 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i25);

        virtualinvoke $r8.<java.util.ArrayList: boolean add(java.lang.Object)>($r71);

     label029:
        $i18 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        $i17 = r0.<com.android.server.am.ProcessRecord: int pid>;

        if $i18 == $i17 goto label030;

        $i21 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        if $i21 == i25 goto label030;

        $i22 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        $r70 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i22);

        virtualinvoke $r8.<java.util.ArrayList: boolean add(java.lang.Object)>($r70);

     label030:
        $r95 = virtualinvoke r0.<com.android.server.am.ProcessRecord: java.util.List getLruProcessList()>();

        $i27 = interfaceinvoke $r95.<java.util.List: int size()>();

        i28 = $i27 - 1;

     label031:
        if i28 < 0 goto label044;

     label032:
        $r64 = virtualinvoke r0.<com.android.server.am.ProcessRecord: java.util.List getLruProcessList()>();

        $r65 = interfaceinvoke $r64.<java.util.List: java.lang.Object get(int)>(i28);

        r96 = (com.android.server.am.ProcessRecord) $r65;

     label033:
        if r96 == null goto label043;

     label034:
        $r66 = r96.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r66 == null goto label043;

        i29 = r96.<com.android.server.am.ProcessRecord: int pid>;

     label035:
        if i29 <= 0 goto label043;

     label036:
        $i19 = r0.<com.android.server.am.ProcessRecord: int pid>;

        if i29 == $i19 goto label043;

     label037:
        if i29 == i25 goto label043;

     label038:
        $i20 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        if i29 == $i20 goto label043;

        $z10 = virtualinvoke r96.<com.android.server.am.ProcessRecord: boolean isPersistent()>();

        if $z10 == 0 goto label040;

        $r69 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i29);

        virtualinvoke $r8.<java.util.ArrayList: boolean add(java.lang.Object)>($r69);

     label039:
        goto label043;

     label040:
        $z11 = r96.<com.android.server.am.ProcessRecord: boolean treatLikeActivity>;

        if $z11 == 0 goto label042;

        $r68 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i29);

        virtualinvoke $r8.<java.util.ArrayList: boolean add(java.lang.Object)>($r68);

     label041:
        goto label043;

     label042:
        $r67 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke $r9.<android.util.SparseArray: void put(int,java.lang.Object)>(i29, $r67);

     label043:
        i28 = i28 + -1;

        goto label031;

     label044:
        exitmonitor r88;

     label045:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        $r97 = new java.lang.StringBuilder;

        specialinvoke $r97.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r97.<java.lang.StringBuilder: void setLength(int)>(0);

        virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ANR in ");

        $r98 = r0.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r98);

        if r84 == null goto label046;

        virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r84);

        virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

     label046:
        virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PID: ");

        $i6 = r0.<com.android.server.am.ProcessRecord: int pid>;

        virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        if r2 == null goto label047;

        virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Reason: ");

        virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

     label047:
        if r85 == null goto label048;

        $z9 = virtualinvoke r85.<java.lang.String: boolean equals(java.lang.Object)>(r84);

        if $z9 == 0 goto label048;

        virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parent: ");

        virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r85);

        virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

     label048:
        $r99 = new java.lang.StringBuilder;

        specialinvoke $r99.<java.lang.StringBuilder: void <init>()>();

        $r100 = staticinvoke <com.android.server.MemoryPressureUtil: java.lang.String currentPsiState()>();

        virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r100);

        $r101 = new com.android.internal.os.ProcessCpuTracker;

        specialinvoke $r101.<com.android.internal.os.ProcessCpuTracker: void <init>(boolean)>(1);

        if z17 != 0 goto label050;

        if z1 == 0 goto label049;

        goto label050;

     label049:
        r103 = <com.android.server.Watchdog: java.lang.String[] NATIVE_STACKS_OF_INTEREST>;

        goto label053;

     label050:
        i30 = 0;

     label051:
        r103 = null;

        $r104 = <com.android.server.Watchdog: java.lang.String[] NATIVE_STACKS_OF_INTEREST>;

        $i31 = lengthof $r104;

        if i30 >= $i31 goto label053;

        $r59 = <com.android.server.Watchdog: java.lang.String[] NATIVE_STACKS_OF_INTEREST>;

        $r61 = $r59[i30];

        $r60 = r0.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $z8 = virtualinvoke $r61.<java.lang.String: boolean equals(java.lang.Object)>($r60);

        if $z8 == 0 goto label052;

        $r62 = newarray (java.lang.String)[1];

        $r63 = r0.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r62[0] = $r63;

        r103 = $r62;

        goto label053;

     label052:
        i30 = i30 + 1;

        goto label051;

     label053:
        if r103 != null goto label054;

        r105 = null;

        goto label055;

     label054:
        r105 = staticinvoke <android.os.Process: int[] getPidsForCommands(java.lang.String[])>(r103);

     label055:
        if r105 == null goto label058;

        $r57 = new java.util.ArrayList;

        $i15 = lengthof r105;

        specialinvoke $r57.<java.util.ArrayList: void <init>(int)>($i15);

        i32 = lengthof r105;

        i33 = 0;

     label056:
        if i33 >= i32 goto label057;

        $i16 = r105[i33];

        $r58 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i16);

        virtualinvoke $r57.<java.util.ArrayList: boolean add(java.lang.Object)>($r58);

        i33 = i33 + 1;

        goto label056;

     label057:
        r107 = $r57;

        goto label059;

     label058:
        r107 = null;

     label059:
        $r21 = new java.io.StringWriter;

        specialinvoke $r21.<java.io.StringWriter: void <init>()>();

        r7 = newarray (long)[2];

        if z17 == 0 goto label060;

        r108 = null;

        goto label061;

     label060:
        r108 = $r101;

     label061:
        if z17 == 0 goto label062;

        r87 = null;

        goto label062;

     label062:
        r109 = staticinvoke <com.android.server.am.ActivityManagerService: java.io.File dumpStackTraces(java.util.ArrayList,com.android.internal.os.ProcessCpuTracker,android.util.SparseArray,java.util.ArrayList,java.io.StringWriter,long[])>($r8, r108, r87, r107, $r21, r7);

        $z3 = virtualinvoke r0.<com.android.server.am.ProcessRecord: boolean isMonitorCpuUsage()>();

        if $z3 == 0 goto label068;

        $r51 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ActivityManagerService mService>;

        virtualinvoke $r51.<com.android.server.am.ActivityManagerService: void updateCpuStatsNow()>();

        $r52 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ActivityManagerService mService>;

        r110 = $r52.<com.android.server.am.ActivityManagerService: com.android.internal.os.ProcessCpuTracker mProcessCpuTracker>;

        entermonitor r110;

     label063:
        $r53 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ActivityManagerService mService>;

        $r54 = $r53.<com.android.server.am.ActivityManagerService: com.android.internal.os.ProcessCpuTracker mProcessCpuTracker>;

        $r55 = virtualinvoke $r54.<com.android.internal.os.ProcessCpuTracker: java.lang.String printCurrentState(long)>(l0);

        virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r55);

        exitmonitor r110;

     label064:
        $r56 = virtualinvoke $r101.<com.android.internal.os.ProcessCpuTracker: java.lang.String printCurrentLoad()>();

        virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r56);

        virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r99);

        goto label068;

     label065:
        $r83 := @caughtexception;

     label066:
        exitmonitor r110;

     label067:
        throw $r83;

     label068:
        $r22 = virtualinvoke $r21.<java.io.StringWriter: java.lang.StringBuffer getBuffer()>();

        virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.StringBuffer)>($r22);

        $r23 = virtualinvoke $r101.<com.android.internal.os.ProcessCpuTracker: java.lang.String printCurrentState(long)>(l0);

        virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r24 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ActivityManager", $r24);

        if r109 != null goto label069;

        $i14 = r0.<com.android.server.am.ProcessRecord: int pid>;

        staticinvoke <android.os.Process: void sendSignal(int,int)>($i14, 3);

        goto label070;

     label069:
        $l7 = r7[1];

        $b8 = $l7 cmp 0L;

        if $b8 <= 0 goto label070;

        $r47 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ActivityManagerService mService>;

        $r48 = $r47.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r49 = $r48.<com.android.server.am.ProcessList: com.android.server.am.AppExitInfoTracker mAppExitInfoTracker>;

        $i10 = r0.<com.android.server.am.ProcessRecord: int pid>;

        $i11 = r0.<com.android.server.am.ProcessRecord: int uid>;

        $r50 = virtualinvoke r0.<com.android.server.am.ProcessRecord: java.lang.String[] getPackageList()>();

        $l13 = r7[0];

        $l12 = r7[1];

        virtualinvoke $r49.<com.android.server.am.AppExitInfoTracker: void scheduleLogAnrTrace(int,int,java.lang.String[],java.io.File,long,long)>($i10, $i11, $r50, r109, $l13, $l12);

        goto label070;

     label070:
        b34 = 0;

        i35 = r0.<com.android.server.am.ProcessRecord: int uid>;

        r112 = r0.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        if r84 != null goto label071;

        r113 = "unknown";

        goto label072;

     label071:
        r113 = r84;

     label072:
        $r25 = r0.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        if $r25 == null goto label074;

        $r46 = r0.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $z7 = virtualinvoke $r46.<android.content.pm.ApplicationInfo: boolean isInstantApp()>();

        if $z7 == 0 goto label073;

        b34 = 2;

        goto label074;

     label073:
        b34 = 1;

        goto label074;

     label074:
        $z18 = virtualinvoke r0.<com.android.server.am.ProcessRecord: boolean isInterestingToUserLocked()>();

        if $z18 == 0 goto label075;

        b36 = 2;

        goto label076;

     label075:
        b36 = 1;

     label076:
        i1 = virtualinvoke r0.<com.android.server.am.ProcessRecord: int getProcessClassEnum()>();

        $r26 = r0.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        if $r26 == null goto label077;

        $r45 = r0.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        r114 = $r45.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        goto label078;

     label077:
        r114 = "";

     label078:
        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int,java.lang.String,java.lang.String,java.lang.String,int,int,int,java.lang.String)>(79, i35, r112, r113, r2, b34, b36, i1, r114);

        if r86 == null goto label079;

        $r44 = r86.<com.android.server.wm.WindowProcessController: java.lang.Object mOwner>;

        r115 = (com.android.server.am.ProcessRecord) $r44;

        goto label080;

     label079:
        r115 = null;

     label080:
        $r27 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ActivityManagerService mService>;

        $r28 = r0.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r29 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r27.<com.android.server.am.ActivityManagerService: void addErrorToDropBox(java.lang.String,com.android.server.am.ProcessRecord,java.lang.String,java.lang.String,java.lang.String,com.android.server.am.ProcessRecord,java.lang.String,java.lang.String,java.io.File,android.app.ApplicationErrorReport$CrashInfo)>("anr", r0, $r28, r84, r85, r115, r2, $r29, r109, null);

        $r30 = r0.<com.android.server.am.ProcessRecord: com.android.server.wm.WindowProcessController mWindowProcessController>;

        $r31 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.String toString()>();

        $r32 = new com.android.server.am._$$Lambda$ProcessRecord$Cb3MKja7_iTlaFQrvQTzPvLyoT8;

        specialinvoke $r32.<com.android.server.am._$$Lambda$ProcessRecord$Cb3MKja7_iTlaFQrvQTzPvLyoT8: void <init>(com.android.server.am.ProcessRecord)>(r0);

        $r33 = new com.android.server.am._$$Lambda$ProcessRecord$2DImTokd0AWNTECl3WgBxJkOOqs;

        specialinvoke $r33.<com.android.server.am._$$Lambda$ProcessRecord$2DImTokd0AWNTECl3WgBxJkOOqs: void <init>(com.android.server.am.ProcessRecord)>(r0);

        $z4 = virtualinvoke $r30.<com.android.server.wm.WindowProcessController: boolean appNotResponding(java.lang.String,java.lang.Runnable,java.lang.Runnable)>($r31, $r32, $r33);

        if $z4 == 0 goto label081;

        return;

     label081:
        r116 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ActivityManagerService mService>;

        entermonitor r116;

     label082:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r34 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ActivityManagerService mService>;

        $r35 = $r34.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        if $r35 == null goto label083;

        $r41 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ActivityManagerService mService>;

        $r43 = $r41.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        $r42 = r0.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $i9 = r0.<com.android.server.am.ProcessRecord: int uid>;

        virtualinvoke $r43.<com.android.server.am.BatteryStatsService: void noteProcessAnr(java.lang.String,int)>($r42, $i9);

     label083:
        $z5 = virtualinvoke r0.<com.android.server.am.ProcessRecord: boolean isSilentAnr()>();

        if $z5 == 0 goto label085;

        $z6 = virtualinvoke r0.<com.android.server.am.ProcessRecord: boolean isDebugging()>();

        if $z6 != 0 goto label085;

        virtualinvoke r0.<com.android.server.am.ProcessRecord: void kill(java.lang.String,int,boolean)>("bg anr", 6, 1);

        exitmonitor r116;

     label084:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label085:
        if r2 == null goto label088;

     label086:
        r117 = new java.lang.StringBuilder;

        specialinvoke r117.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r117.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ANR ");

        virtualinvoke r117.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        r118 = virtualinvoke r117.<java.lang.StringBuilder: java.lang.String toString()>();

     label087:
        goto label089;

     label088:
        r118 = "ANR";

     label089:
        $r36 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.am.ProcessRecord: void makeAppNotRespondingLocked(java.lang.String,java.lang.String,java.lang.String)>(r84, r118, $r36);

        $r37 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ActivityManagerService mService>;

        $r38 = $r37.<com.android.server.am.ActivityManagerService: android.os.Handler mUiHandler>;

        if $r38 == null goto label092;

        r119 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        r119.<android.os.Message: int what> = 2;

        r120 = new com.android.server.am.AppNotRespondingDialog$Data;

     label090:
        specialinvoke r120.<com.android.server.am.AppNotRespondingDialog$Data: void <init>(com.android.server.am.ProcessRecord,android.content.pm.ApplicationInfo,boolean)>(r0, r1, z0);

        r119.<android.os.Message: java.lang.Object obj> = r120;

        $r39 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ActivityManagerService mService>;

        $r40 = $r39.<com.android.server.am.ActivityManagerService: android.os.Handler mUiHandler>;

        virtualinvoke $r40.<android.os.Handler: boolean sendMessage(android.os.Message)>(r119);

     label091:
        goto label092;

     label092:
        exitmonitor r116;

     label093:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label094:
        $r78 := @caughtexception;

        r121 = $r78;

     label095:
        exitmonitor r116;

     label096:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw r121;

     label097:
        $r82 := @caughtexception;

        r121 = $r82;

        goto label095;

     label098:
        $r81 := @caughtexception;

        r90 = $r81;

     label099:
        exitmonitor r88;

     label100:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw r90;

     label101:
        $r80 := @caughtexception;

        r90 = $r80;

        goto label099;

        catch java.lang.Throwable from label002 to label003 with label098;
        catch java.lang.Throwable from label004 to label005 with label006;
        catch java.lang.Throwable from label007 to label008 with label098;
        catch java.lang.Throwable from label009 to label010 with label006;
        catch java.lang.Throwable from label011 to label012 with label098;
        catch java.lang.Throwable from label013 to label014 with label006;
        catch java.lang.Throwable from label015 to label016 with label098;
        catch java.lang.Throwable from label017 to label018 with label006;
        catch java.lang.Throwable from label019 to label020 with label098;
        catch java.lang.Throwable from label021 to label022 with label006;
        catch java.lang.Throwable from label023 to label024 with label098;
        catch java.lang.Throwable from label025 to label026 with label006;
        catch java.lang.Throwable from label027 to label028 with label006;
        catch java.lang.Throwable from label028 to label029 with label006;
        catch java.lang.Throwable from label029 to label030 with label006;
        catch java.lang.Throwable from label030 to label031 with label006;
        catch java.lang.Throwable from label032 to label033 with label006;
        catch java.lang.Throwable from label034 to label035 with label006;
        catch java.lang.Throwable from label036 to label037 with label006;
        catch java.lang.Throwable from label038 to label039 with label006;
        catch java.lang.Throwable from label040 to label041 with label006;
        catch java.lang.Throwable from label042 to label043 with label006;
        catch java.lang.Throwable from label044 to label045 with label098;
        catch java.lang.Throwable from label063 to label064 with label065;
        catch java.lang.Throwable from label066 to label067 with label065;
        catch java.lang.Throwable from label082 to label083 with label094;
        catch java.lang.Throwable from label083 to label084 with label094;
        catch java.lang.Throwable from label086 to label087 with label094;
        catch java.lang.Throwable from label089 to label090 with label094;
        catch java.lang.Throwable from label090 to label091 with label097;
        catch java.lang.Throwable from label092 to label093 with label097;
        catch java.lang.Throwable from label095 to label096 with label097;
        catch java.lang.Throwable from label099 to label100 with label101;
    }

    void clearBoundClientUids()
    {
        com.android.server.am.ProcessRecord r0;
        android.util.ArraySet $r1, $r2;
        com.android.server.wm.WindowProcessController $r3;

        r0 := @this: com.android.server.am.ProcessRecord;

        $r1 = r0.<com.android.server.am.ProcessRecord: android.util.ArraySet mBoundClientUids>;

        virtualinvoke $r1.<android.util.ArraySet: void clear()>();

        $r3 = r0.<com.android.server.am.ProcessRecord: com.android.server.wm.WindowProcessController mWindowProcessController>;

        $r2 = r0.<com.android.server.am.ProcessRecord: android.util.ArraySet mBoundClientUids>;

        virtualinvoke $r3.<com.android.server.wm.WindowProcessController: void setBoundClientUids(android.util.ArraySet)>($r2);

        return;
    }

    public void clearProfilerIfNeeded()
    {
        com.android.server.am.ProcessRecord r0, $r5, $r11;
        com.android.server.am.ActivityManagerService r1, $r3, $r6, $r9, $r12;
        com.android.server.am.ActivityManagerService$ProfileData $r4, $r7, $r10;
        android.app.ProfilerInfo $r8;
        java.lang.Throwable $r13;

        r0 := @this: com.android.server.am.ProcessRecord;

        r1 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ActivityManagerService mService>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r3 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ActivityManagerService mService>;

        $r4 = $r3.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$ProfileData mProfileData>;

        $r5 = virtualinvoke $r4.<com.android.server.am.ActivityManagerService$ProfileData: com.android.server.am.ProcessRecord getProfileProc()>();

        if $r5 == null goto label5;

        $r6 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ActivityManagerService mService>;

        $r7 = $r6.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$ProfileData mProfileData>;

        $r8 = virtualinvoke $r7.<com.android.server.am.ActivityManagerService$ProfileData: android.app.ProfilerInfo getProfilerInfo()>();

        if $r8 == null goto label5;

        $r9 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ActivityManagerService mService>;

        $r10 = $r9.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$ProfileData mProfileData>;

        $r11 = virtualinvoke $r10.<com.android.server.am.ActivityManagerService$ProfileData: com.android.server.am.ProcessRecord getProfileProc()>();

        if $r11 == r0 goto label3;

     label2:
        goto label5;

     label3:
        $r12 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ActivityManagerService mService>;

        virtualinvoke $r12.<com.android.server.am.ActivityManagerService: void clearProfilerLocked()>();

        exitmonitor r1;

     label4:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label5:
        exitmonitor r1;

     label6:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label7:
        $r13 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r13;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    void computeOomAdjFromActivitiesIfNecessary(com.android.server.am.OomAdjuster$ComputeOomAdjWindowCallback, int, boolean, int, int, int, int, int)
    {
        com.android.server.am.ProcessRecord r0;
        com.android.server.am.OomAdjuster$ComputeOomAdjWindowCallback r1;
        boolean z0, $z1;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, i9, i10, i11, i12;
        com.android.server.wm.WindowProcessController $r2;

        r0 := @this: com.android.server.am.ProcessRecord;

        r1 := @parameter0: com.android.server.am.OomAdjuster$ComputeOomAdjWindowCallback;

        i9 := @parameter1: int;

        z0 := @parameter2: boolean;

        i10 := @parameter3: int;

        i0 := @parameter4: int;

        i1 := @parameter5: int;

        i2 := @parameter6: int;

        i3 := @parameter7: int;

        $i4 = r0.<com.android.server.am.ProcessRecord: int mCachedAdj>;

        if $i4 == -10000 goto label1;

        return;

     label1:
        virtualinvoke r1.<com.android.server.am.OomAdjuster$ComputeOomAdjWindowCallback: void initialize(com.android.server.am.ProcessRecord,int,boolean,int,int,int,int,int)>(r0, i9, z0, i10, i0, i1, i2, i3);

        $r2 = virtualinvoke r0.<com.android.server.am.ProcessRecord: com.android.server.wm.WindowProcessController getWindowProcessController()>();

        i11 = virtualinvoke $r2.<com.android.server.wm.WindowProcessController: int computeOomAdjFromActivities(int,com.android.server.wm.WindowProcessController$ComputeOomAdjCallback)>(99, r1);

        $i5 = r1.<com.android.server.am.OomAdjuster$ComputeOomAdjWindowCallback: int adj>;

        r0.<com.android.server.am.ProcessRecord: int mCachedAdj> = $i5;

        $z1 = r1.<com.android.server.am.OomAdjuster$ComputeOomAdjWindowCallback: boolean foregroundActivities>;

        r0.<com.android.server.am.ProcessRecord: boolean mCachedForegroundActivities> = $z1;

        $i6 = r1.<com.android.server.am.OomAdjuster$ComputeOomAdjWindowCallback: int procState>;

        r0.<com.android.server.am.ProcessRecord: int mCachedProcState> = $i6;

        $i7 = r1.<com.android.server.am.OomAdjuster$ComputeOomAdjWindowCallback: int schedGroup>;

        r0.<com.android.server.am.ProcessRecord: int mCachedSchedGroup> = $i7;

        i12 = r0.<com.android.server.am.ProcessRecord: int mCachedAdj>;

        if i12 != 100 goto label2;

        $i8 = i12 + i11;

        r0.<com.android.server.am.ProcessRecord: int mCachedAdj> = $i8;

     label2:
        return;
    }

    void dump(java.io.PrintWriter, java.lang.String)
    {
        com.android.server.am.ProcessRecord r0;
        java.io.PrintWriter r1;
        java.lang.String r2, $r8, $r10, $r12, $r14, $r23, $r34, $r35, $r37, $r58, $r62, $r76, $r79, $r85, $r87, $r89, $r91, $r99, $r105, $r109, $r110, $r112, $r114, $r117, $r122, $r125, $r130, $r133;
        long l0, $l6, $l7, $l9, $l10, $l11, $l12, $l13, $l14, $l15, $l16, $l17, $l18, $l19, $l27, $l36, $l41, $l43, $l45, $l47, $l64, $l65, $l67, $l68, $l69, $l70, $l71, $l72, $l73, $l74, $l75, $l76, $l77, $l78, $l81, $l94, $l96, $l97;
        int $i1, $i2, $i3, $i4, $i5, $i8, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i37, $i38, $i39, $i40, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i80, $i82, $i83, $i84, $i85, $i86, $i87, $i88, i89, i90, i91, $i92, i93, $i98, i99, i100, i101, i102, i103, i104, i105, i106;
        android.content.pm.ApplicationInfo $r3, $r4, $r7, $r9, $r11, $r13, $r88, $r90, $r111;
        int[] $r5, $r106, $r107;
        android.content.pm.ProcessInfo $r6, $r92, $r94, $r97, $r100, $r102;
        android.util.ArraySet $r15, $r38, $r39, $r42, $r43, $r44, $r45, $r46, $r48, $r49, $r51, $r52, $r65, $r66, $r68, $r69, $r71, $r72, $r82, $r83, $r93, $r101, $r103, $r136;
        android.content.res.CompatibilityInfo $r16;
        com.android.server.am.ActiveInstrumentation $r17, $r81;
        android.app.IApplicationThread $r18;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32, $z33, $z34, $z35, $z36, $z37, $z38, $z39, $z40, $z41, $z42, $z43, $z44, $z45, $z46, $z47, $z48, $z49, $z50, $z51, $z52, $z53, $z54, $z55, $z56, $z57, $z58, $z59;
        com.android.server.am.ProcessList$ProcStateMemTracker $r19;
        com.android.server.am.ServiceRecord $r20, $r21;
        java.lang.Object $r22, $r47, $r50, $r53, $r56, $r61, $r64, $r67, $r70, $r73, $r80, $r84, $r104;
        byte $b42, $b44, $b46, $b66, $b79, $b95;
        java.lang.String[] $r36, $r74;
        android.util.ArrayMap $r40, $r59, $r60, $r63;
        java.util.ArrayList $r41, $r54, $r55;
        com.android.server.am.ContentProviderConnection $r57;
        android.content.ComponentName $r75, $r134;
        com.android.server.am.ProcessRecord$ErrorDialogController $r77, $r78, $r120, $r128;
        com.android.server.am.ProcessRecord$PackageList $r86, $r113;
        java.lang.StringBuilder $r95, $r115, $r118, $r123, $r126, $r131;
        java.util.List $r121, $r129;
        com.android.server.wm.WindowProcessController $r135;

        r0 := @this: com.android.server.am.ProcessRecord;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: java.lang.String;

        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("user #");

        $i1 = r0.<com.android.server.am.ProcessRecord: int userId>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i1);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" uid=");

        $r3 = r0.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i2 = $r3.<android.content.pm.ApplicationInfo: int uid>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i2);

        $i4 = r0.<com.android.server.am.ProcessRecord: int uid>;

        $r4 = r0.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i3 = $r4.<android.content.pm.ApplicationInfo: int uid>;

        if $i4 == $i3 goto label01;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" ISOLATED uid=");

        $i88 = r0.<com.android.server.am.ProcessRecord: int uid>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i88);

     label01:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" gids={");

        $r5 = r0.<com.android.server.am.ProcessRecord: int[] gids>;

        if $r5 == null goto label04;

        i89 = 0;

     label02:
        $r106 = r0.<com.android.server.am.ProcessRecord: int[] gids>;

        $i86 = lengthof $r106;

        if i89 >= $i86 goto label04;

        if i89 == 0 goto label03;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(", ");

     label03:
        $r107 = r0.<com.android.server.am.ProcessRecord: int[] gids>;

        $i87 = $r107[i89];

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i87);

        i89 = i89 + 1;

        goto label02;

     label04:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("}");

        $r6 = r0.<com.android.server.am.ProcessRecord: android.content.pm.ProcessInfo processInfo>;

        if $r6 == null goto label07;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("processInfo:");

        $r92 = r0.<com.android.server.am.ProcessRecord: android.content.pm.ProcessInfo processInfo>;

        $r93 = $r92.<android.content.pm.ProcessInfo: android.util.ArraySet deniedPermissions>;

        if $r93 == null goto label06;

        i90 = 0;

     label05:
        $r100 = r0.<com.android.server.am.ProcessRecord: android.content.pm.ProcessInfo processInfo>;

        $r101 = $r100.<android.content.pm.ProcessInfo: android.util.ArraySet deniedPermissions>;

        $i85 = virtualinvoke $r101.<android.util.ArraySet: int size()>();

        if i90 >= $i85 goto label06;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  deny: ");

        $r102 = r0.<com.android.server.am.ProcessRecord: android.content.pm.ProcessInfo processInfo>;

        $r103 = $r102.<android.content.pm.ProcessInfo: android.util.ArraySet deniedPermissions>;

        $r104 = virtualinvoke $r103.<android.util.ArraySet: java.lang.Object valueAt(int)>(i90);

        $r105 = (java.lang.String) $r104;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r105);

        i90 = i90 + 1;

        goto label05;

     label06:
        $r94 = r0.<com.android.server.am.ProcessRecord: android.content.pm.ProcessInfo processInfo>;

        $i83 = $r94.<android.content.pm.ProcessInfo: int gwpAsanMode>;

        if $i83 == -1 goto label07;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        $r95 = new java.lang.StringBuilder;

        specialinvoke $r95.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  gwpAsanMode=");

        $r97 = r0.<com.android.server.am.ProcessRecord: android.content.pm.ProcessInfo processInfo>;

        $i84 = $r97.<android.content.pm.ProcessInfo: int gwpAsanMode>;

        virtualinvoke $r95.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i84);

        $r99 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r99);

     label07:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("mRequiredAbi=");

        $r109 = r0.<com.android.server.am.ProcessRecord: java.lang.String mRequiredAbi>;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r109);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" instructionSet=");

        $r110 = r0.<com.android.server.am.ProcessRecord: java.lang.String instructionSet>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r110);

        $r111 = r0.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r112 = $r111.<android.content.pm.ApplicationInfo: java.lang.String className>;

        if $r112 == null goto label08;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("class=");

        $r90 = r0.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r91 = $r90.<android.content.pm.ApplicationInfo: java.lang.String className>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r91);

     label08:
        $r7 = r0.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r8 = $r7.<android.content.pm.ApplicationInfo: java.lang.String manageSpaceActivityName>;

        if $r8 == null goto label09;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("manageSpaceActivityName=");

        $r88 = r0.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r89 = $r88.<android.content.pm.ApplicationInfo: java.lang.String manageSpaceActivityName>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r89);

     label09:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("dir=");

        $r9 = r0.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r10 = $r9.<android.content.pm.ApplicationInfo: java.lang.String sourceDir>;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r10);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" publicDir=");

        $r11 = r0.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r12 = $r11.<android.content.pm.ApplicationInfo: java.lang.String publicSourceDir>;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r12);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" data=");

        $r13 = r0.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r14 = $r13.<android.content.pm.ApplicationInfo: java.lang.String dataDir>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r14);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("packageList={");

        i91 = 0;

     label10:
        $r113 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        $i92 = virtualinvoke $r113.<com.android.server.am.ProcessRecord$PackageList: int size()>();

        if i91 >= $i92 goto label12;

        if i91 <= 0 goto label11;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(", ");

     label11:
        $r86 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        $r87 = virtualinvoke $r86.<com.android.server.am.ProcessRecord$PackageList: java.lang.String keyAt(int)>(i91);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r87);

        i91 = i91 + 1;

        goto label10;

     label12:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("}");

        $r15 = r0.<com.android.server.am.ProcessRecord: android.util.ArraySet pkgDeps>;

        if $r15 == null goto label16;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("packageDependencies={");

        i93 = 0;

     label13:
        $r82 = r0.<com.android.server.am.ProcessRecord: android.util.ArraySet pkgDeps>;

        $i82 = virtualinvoke $r82.<android.util.ArraySet: int size()>();

        if i93 >= $i82 goto label15;

        if i93 <= 0 goto label14;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(", ");

     label14:
        $r83 = r0.<com.android.server.am.ProcessRecord: android.util.ArraySet pkgDeps>;

        $r84 = virtualinvoke $r83.<android.util.ArraySet: java.lang.Object valueAt(int)>(i93);

        $r85 = (java.lang.String) $r84;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r85);

        i93 = i93 + 1;

        goto label13;

     label15:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("}");

     label16:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("compat=");

        $r16 = r0.<com.android.server.am.ProcessRecord: android.content.res.CompatibilityInfo compat>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>($r16);

        $r17 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ActiveInstrumentation mInstr>;

        if $r17 == null goto label17;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("mInstr=");

        $r81 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ActiveInstrumentation mInstr>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>($r81);

     label17:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("thread=");

        $r18 = r0.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>($r18);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("pid=");

        $i5 = r0.<com.android.server.am.ProcessRecord: int pid>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i5);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" starting=");

        $z0 = r0.<com.android.server.am.ProcessRecord: boolean starting>;

        virtualinvoke r1.<java.io.PrintWriter: void println(boolean)>($z0);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("lastActivityTime=");

        $l6 = r0.<com.android.server.am.ProcessRecord: long lastActivityTime>;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,long,java.io.PrintWriter)>($l6, l0, r1);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" lastPssTime=");

        $l7 = r0.<com.android.server.am.ProcessRecord: long lastPssTime>;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,long,java.io.PrintWriter)>($l7, l0, r1);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" pssStatType=");

        $i8 = r0.<com.android.server.am.ProcessRecord: int pssStatType>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i8);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" nextPssTime=");

        $l9 = r0.<com.android.server.am.ProcessRecord: long nextPssTime>;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,long,java.io.PrintWriter)>($l9, l0, r1);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("lastPss=");

        $l10 = r0.<com.android.server.am.ProcessRecord: long lastPss>;

        $l11 = $l10 * 1024L;

        staticinvoke <android.util.DebugUtils: void printSizeValue(java.io.PrintWriter,long)>(r1, $l11);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" lastSwapPss=");

        $l12 = r0.<com.android.server.am.ProcessRecord: long lastSwapPss>;

        $l13 = $l12 * 1024L;

        staticinvoke <android.util.DebugUtils: void printSizeValue(java.io.PrintWriter,long)>(r1, $l13);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" lastCachedPss=");

        $l14 = r0.<com.android.server.am.ProcessRecord: long lastCachedPss>;

        $l15 = $l14 * 1024L;

        staticinvoke <android.util.DebugUtils: void printSizeValue(java.io.PrintWriter,long)>(r1, $l15);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" lastCachedSwapPss=");

        $l16 = r0.<com.android.server.am.ProcessRecord: long lastCachedSwapPss>;

        $l17 = $l16 * 1024L;

        staticinvoke <android.util.DebugUtils: void printSizeValue(java.io.PrintWriter,long)>(r1, $l17);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" lastRss=");

        $l18 = r0.<com.android.server.am.ProcessRecord: long mLastRss>;

        $l19 = $l18 * 1024L;

        staticinvoke <android.util.DebugUtils: void printSizeValue(java.io.PrintWriter,long)>(r1, $l19);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("procStateMemTracker: ");

        $r19 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessList$ProcStateMemTracker procStateMemTracker>;

        virtualinvoke $r19.<com.android.server.am.ProcessList$ProcStateMemTracker: void dumpLine(java.io.PrintWriter)>(r1);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("adjSeq=");

        $i20 = r0.<com.android.server.am.ProcessRecord: int adjSeq>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i20);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" lruSeq=");

        $i21 = r0.<com.android.server.am.ProcessRecord: int lruSeq>;

        virtualinvoke r1.<java.io.PrintWriter: void println(int)>($i21);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("oom adj: max=");

        $i22 = r0.<com.android.server.am.ProcessRecord: int maxAdj>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i22);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" curRaw=");

        $i23 = r0.<com.android.server.am.ProcessRecord: int mCurRawAdj>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i23);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" setRaw=");

        $i24 = r0.<com.android.server.am.ProcessRecord: int setRawAdj>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i24);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" cur=");

        $i25 = r0.<com.android.server.am.ProcessRecord: int curAdj>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i25);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" set=");

        $i26 = r0.<com.android.server.am.ProcessRecord: int setAdj>;

        virtualinvoke r1.<java.io.PrintWriter: void println(int)>($i26);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("lastCompactTime=");

        $l27 = r0.<com.android.server.am.ProcessRecord: long lastCompactTime>;

        virtualinvoke r1.<java.io.PrintWriter: void print(long)>($l27);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" lastCompactAction=");

        $i28 = r0.<com.android.server.am.ProcessRecord: int lastCompactAction>;

        virtualinvoke r1.<java.io.PrintWriter: void println(int)>($i28);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("mCurSchedGroup=");

        $i29 = r0.<com.android.server.am.ProcessRecord: int mCurSchedGroup>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i29);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" setSchedGroup=");

        $i30 = r0.<com.android.server.am.ProcessRecord: int setSchedGroup>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i30);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" systemNoUi=");

        $z1 = r0.<com.android.server.am.ProcessRecord: boolean systemNoUi>;

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z1);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" trimMemoryLevel=");

        $i31 = r0.<com.android.server.am.ProcessRecord: int trimMemoryLevel>;

        virtualinvoke r1.<java.io.PrintWriter: void println(int)>($i31);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("curProcState=");

        $i32 = virtualinvoke r0.<com.android.server.am.ProcessRecord: int getCurProcState()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i32);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" mRepProcState=");

        $i33 = r0.<com.android.server.am.ProcessRecord: int mRepProcState>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i33);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" pssProcState=");

        $i34 = r0.<com.android.server.am.ProcessRecord: int pssProcState>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i34);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" setProcState=");

        $i35 = r0.<com.android.server.am.ProcessRecord: int setProcState>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i35);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" lastStateTime=");

        $l36 = r0.<com.android.server.am.ProcessRecord: long lastStateTime>;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,long,java.io.PrintWriter)>($l36, l0, r1);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("curCapability=");

        $i37 = r0.<com.android.server.am.ProcessRecord: int curCapability>;

        staticinvoke <android.app.ActivityManager: void printCapabilitiesFull(java.io.PrintWriter,int)>(r1, $i37);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" setCapability=");

        $i38 = r0.<com.android.server.am.ProcessRecord: int setCapability>;

        staticinvoke <android.app.ActivityManager: void printCapabilitiesFull(java.io.PrintWriter,int)>(r1, $i38);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        $z2 = r0.<com.android.server.am.ProcessRecord: boolean hasShownUi>;

        if $z2 != 0 goto label18;

        $z29 = r0.<com.android.server.am.ProcessRecord: boolean mPendingUiClean>;

        if $z29 != 0 goto label18;

        $z30 = r0.<com.android.server.am.ProcessRecord: boolean hasAboveClient>;

        if $z30 != 0 goto label18;

        $z31 = r0.<com.android.server.am.ProcessRecord: boolean treatLikeActivity>;

        if $z31 == 0 goto label19;

     label18:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("hasShownUi=");

        $z32 = r0.<com.android.server.am.ProcessRecord: boolean hasShownUi>;

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z32);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" pendingUiClean=");

        $z33 = r0.<com.android.server.am.ProcessRecord: boolean mPendingUiClean>;

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z33);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" hasAboveClient=");

        $z34 = r0.<com.android.server.am.ProcessRecord: boolean hasAboveClient>;

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z34);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" treatLikeActivity=");

        $z35 = r0.<com.android.server.am.ProcessRecord: boolean treatLikeActivity>;

        virtualinvoke r1.<java.io.PrintWriter: void println(boolean)>($z35);

     label19:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("cached=");

        $z36 = r0.<com.android.server.am.ProcessRecord: boolean mCached>;

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z36);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" empty=");

        $z37 = r0.<com.android.server.am.ProcessRecord: boolean empty>;

        virtualinvoke r1.<java.io.PrintWriter: void println(boolean)>($z37);

        $z38 = r0.<com.android.server.am.ProcessRecord: boolean serviceb>;

        if $z38 == 0 goto label20;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("serviceb=");

        $z27 = r0.<com.android.server.am.ProcessRecord: boolean serviceb>;

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z27);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" serviceHighRam=");

        $z28 = r0.<com.android.server.am.ProcessRecord: boolean serviceHighRam>;

        virtualinvoke r1.<java.io.PrintWriter: void println(boolean)>($z28);

     label20:
        $z3 = r0.<com.android.server.am.ProcessRecord: boolean notCachedSinceIdle>;

        if $z3 == 0 goto label21;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("notCachedSinceIdle=");

        $z26 = r0.<com.android.server.am.ProcessRecord: boolean notCachedSinceIdle>;

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z26);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" initialIdlePss=");

        $l81 = r0.<com.android.server.am.ProcessRecord: long initialIdlePss>;

        virtualinvoke r1.<java.io.PrintWriter: void println(long)>($l81);

     label21:
        $r20 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ServiceRecord connectionService>;

        if $r20 != null goto label22;

        $i80 = r0.<com.android.server.am.ProcessRecord: int connectionGroup>;

        if $i80 == 0 goto label23;

     label22:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("connectionGroup=");

        $i39 = r0.<com.android.server.am.ProcessRecord: int connectionGroup>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i39);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" Importance=");

        $i40 = r0.<com.android.server.am.ProcessRecord: int connectionImportance>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i40);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" Service=");

        $r21 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ServiceRecord connectionService>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>($r21);

     label23:
        $z39 = virtualinvoke r0.<com.android.server.am.ProcessRecord: boolean hasTopUi()>();

        if $z39 != 0 goto label24;

        $z24 = virtualinvoke r0.<com.android.server.am.ProcessRecord: boolean hasOverlayUi()>();

        if $z24 != 0 goto label24;

        $z25 = r0.<com.android.server.am.ProcessRecord: boolean runningRemoteAnimation>;

        if $z25 == 0 goto label25;

     label24:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("hasTopUi=");

        $z40 = virtualinvoke r0.<com.android.server.am.ProcessRecord: boolean hasTopUi()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z40);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" hasOverlayUi=");

        $z41 = virtualinvoke r0.<com.android.server.am.ProcessRecord: boolean hasOverlayUi()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z41);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" runningRemoteAnimation=");

        $z42 = r0.<com.android.server.am.ProcessRecord: boolean runningRemoteAnimation>;

        virtualinvoke r1.<java.io.PrintWriter: void println(boolean)>($z42);

     label25:
        $z43 = r0.<com.android.server.am.ProcessRecord: boolean mHasForegroundServices>;

        if $z43 != 0 goto label26;

        $r80 = r0.<com.android.server.am.ProcessRecord: java.lang.Object forcingToImportant>;

        if $r80 == null goto label27;

     label26:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("mHasForegroundServices=");

        $z4 = r0.<com.android.server.am.ProcessRecord: boolean mHasForegroundServices>;

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z4);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" forcingToImportant=");

        $r22 = r0.<com.android.server.am.ProcessRecord: java.lang.Object forcingToImportant>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>($r22);

     label27:
        $z44 = r0.<com.android.server.am.ProcessRecord: boolean reportedInteraction>;

        if $z44 != 0 goto label28;

        $l78 = r0.<com.android.server.am.ProcessRecord: long mFgInteractionTime>;

        $b79 = $l78 cmp 0L;

        if $b79 == 0 goto label31;

     label28:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("reportedInteraction=");

        $z5 = r0.<com.android.server.am.ProcessRecord: boolean reportedInteraction>;

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z5);

        $l41 = r0.<com.android.server.am.ProcessRecord: long mInteractionEventTime>;

        $b42 = $l41 cmp 0L;

        if $b42 == 0 goto label29;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" time=");

        $l76 = r0.<com.android.server.am.ProcessRecord: long mInteractionEventTime>;

        $l77 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        staticinvoke <android.util.TimeUtils: void formatDuration(long,long,java.io.PrintWriter)>($l76, $l77, r1);

     label29:
        $l43 = r0.<com.android.server.am.ProcessRecord: long mFgInteractionTime>;

        $b44 = $l43 cmp 0L;

        if $b44 == 0 goto label30;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" fgInteractionTime=");

        $l74 = r0.<com.android.server.am.ProcessRecord: long mFgInteractionTime>;

        $l75 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        staticinvoke <android.util.TimeUtils: void formatDuration(long,long,java.io.PrintWriter)>($l74, $l75, r1);

     label30:
        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label31:
        $z45 = r0.<com.android.server.am.ProcessRecord: boolean mPersistent>;

        if $z45 != 0 goto label32;

        $z23 = r0.<com.android.server.am.ProcessRecord: boolean removed>;

        if $z23 == 0 goto label33;

     label32:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("persistent=");

        $z6 = r0.<com.android.server.am.ProcessRecord: boolean mPersistent>;

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z6);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" removed=");

        $z7 = r0.<com.android.server.am.ProcessRecord: boolean removed>;

        virtualinvoke r1.<java.io.PrintWriter: void println(boolean)>($z7);

     label33:
        $z46 = r0.<com.android.server.am.ProcessRecord: boolean mHasClientActivities>;

        if $z46 != 0 goto label34;

        $z21 = r0.<com.android.server.am.ProcessRecord: boolean mHasForegroundActivities>;

        if $z21 != 0 goto label34;

        $z22 = r0.<com.android.server.am.ProcessRecord: boolean repForegroundActivities>;

        if $z22 == 0 goto label35;

     label34:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("hasClientActivities=");

        $z47 = r0.<com.android.server.am.ProcessRecord: boolean mHasClientActivities>;

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z47);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" foregroundActivities=");

        $z48 = r0.<com.android.server.am.ProcessRecord: boolean mHasForegroundActivities>;

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z48);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" (rep=");

        $z49 = r0.<com.android.server.am.ProcessRecord: boolean repForegroundActivities>;

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z49);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(")");

     label35:
        $l94 = r0.<com.android.server.am.ProcessRecord: long lastProviderTime>;

        $b95 = $l94 cmp 0L;

        if $b95 <= 0 goto label36;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("lastProviderTime=");

        $l73 = r0.<com.android.server.am.ProcessRecord: long lastProviderTime>;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,long,java.io.PrintWriter)>($l73, l0, r1);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label36:
        $l45 = r0.<com.android.server.am.ProcessRecord: long lastTopTime>;

        $b46 = $l45 cmp 0L;

        if $b46 <= 0 goto label37;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("lastTopTime=");

        $l72 = r0.<com.android.server.am.ProcessRecord: long lastTopTime>;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,long,java.io.PrintWriter)>($l72, l0, r1);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label37:
        $z8 = r0.<com.android.server.am.ProcessRecord: boolean hasStartedServices>;

        if $z8 == 0 goto label38;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("hasStartedServices=");

        $z20 = r0.<com.android.server.am.ProcessRecord: boolean hasStartedServices>;

        virtualinvoke r1.<java.io.PrintWriter: void println(boolean)>($z20);

     label38:
        $z9 = r0.<com.android.server.am.ProcessRecord: boolean pendingStart>;

        if $z9 == 0 goto label39;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("pendingStart=");

        $z19 = r0.<com.android.server.am.ProcessRecord: boolean pendingStart>;

        virtualinvoke r1.<java.io.PrintWriter: void println(boolean)>($z19);

     label39:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("startSeq=");

        $l47 = r0.<com.android.server.am.ProcessRecord: long startSeq>;

        virtualinvoke r1.<java.io.PrintWriter: void println(long)>($l47);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("mountMode=");

        $i48 = r0.<com.android.server.am.ProcessRecord: int mountMode>;

        $r23 = staticinvoke <android.util.DebugUtils: java.lang.String valueToString(java.lang.Class,java.lang.String,int)>(class "Lcom/android/internal/os/Zygote;", "MOUNT_EXTERNAL_", $i48);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r23);

        $i49 = r0.<com.android.server.am.ProcessRecord: int setProcState>;

        if $i49 <= 10 goto label41;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("lastCpuTime=");

        $l64 = r0.<com.android.server.am.ProcessRecord: long lastCpuTime>;

        virtualinvoke r1.<java.io.PrintWriter: void print(long)>($l64);

        $l65 = r0.<com.android.server.am.ProcessRecord: long lastCpuTime>;

        $b66 = $l65 cmp 0L;

        if $b66 <= 0 goto label40;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" timeUsed=");

        $l70 = r0.<com.android.server.am.ProcessRecord: long curCpuTime>;

        $l69 = r0.<com.android.server.am.ProcessRecord: long lastCpuTime>;

        $l71 = $l70 - $l69;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>($l71, r1);

     label40:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" whenUnimportant=");

        $l67 = r0.<com.android.server.am.ProcessRecord: long mWhenUnimportant>;

        $l68 = $l67 - l0;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>($l68, r1);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label41:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("lastRequestedGc=");

        $l96 = r0.<com.android.server.am.ProcessRecord: long lastRequestedGc>;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,long,java.io.PrintWriter)>($l96, l0, r1);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" lastLowMemory=");

        $l97 = r0.<com.android.server.am.ProcessRecord: long lastLowMemory>;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,long,java.io.PrintWriter)>($l97, l0, r1);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" reportLowMemory=");

        $z50 = r0.<com.android.server.am.ProcessRecord: boolean reportLowMemory>;

        virtualinvoke r1.<java.io.PrintWriter: void println(boolean)>($z50);

        $z51 = r0.<com.android.server.am.ProcessRecord: boolean killed>;

        if $z51 != 0 goto label42;

        $z18 = r0.<com.android.server.am.ProcessRecord: boolean killedByAm>;

        if $z18 != 0 goto label42;

        $r79 = r0.<com.android.server.am.ProcessRecord: java.lang.String waitingToKill>;

        if $r79 == null goto label43;

     label42:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("killed=");

        $z52 = r0.<com.android.server.am.ProcessRecord: boolean killed>;

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z52);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" killedByAm=");

        $z53 = r0.<com.android.server.am.ProcessRecord: boolean killedByAm>;

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z53);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" waitingToKill=");

        $r114 = r0.<com.android.server.am.ProcessRecord: java.lang.String waitingToKill>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r114);

     label43:
        $z54 = r0.<com.android.server.am.ProcessRecord: boolean mDebugging>;

        if $z54 != 0 goto label44;

        $z13 = r0.<com.android.server.am.ProcessRecord: boolean mCrashing>;

        if $z13 != 0 goto label44;

        $r77 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$ErrorDialogController mDialogController>;

        $z14 = virtualinvoke $r77.<com.android.server.am.ProcessRecord$ErrorDialogController: boolean hasCrashDialogs()>();

        if $z14 != 0 goto label44;

        $z15 = r0.<com.android.server.am.ProcessRecord: boolean mNotResponding>;

        if $z15 != 0 goto label44;

        $r78 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$ErrorDialogController mDialogController>;

        $z16 = virtualinvoke $r78.<com.android.server.am.ProcessRecord$ErrorDialogController: boolean hasAnrDialogs()>();

        if $z16 != 0 goto label44;

        $z17 = r0.<com.android.server.am.ProcessRecord: boolean bad>;

        if $z17 == 0 goto label46;

     label44:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("mDebugging=");

        $z55 = r0.<com.android.server.am.ProcessRecord: boolean mDebugging>;

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z55);

        $r115 = new java.lang.StringBuilder;

        specialinvoke $r115.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r115.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mCrashing=");

        $z56 = r0.<com.android.server.am.ProcessRecord: boolean mCrashing>;

        virtualinvoke $r115.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z56);

        $r117 = virtualinvoke $r115.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r117);

        $r118 = new java.lang.StringBuilder;

        specialinvoke $r118.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r118.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r120 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$ErrorDialogController mDialogController>;

        $r121 = staticinvoke <com.android.server.am.ProcessRecord$ErrorDialogController: java.util.List access$100(com.android.server.am.ProcessRecord$ErrorDialogController)>($r120);

        virtualinvoke $r118.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r121);

        $r122 = virtualinvoke $r118.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r122);

        $r123 = new java.lang.StringBuilder;

        specialinvoke $r123.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r123.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mNotResponding=");

        $z57 = r0.<com.android.server.am.ProcessRecord: boolean mNotResponding>;

        virtualinvoke $r123.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z57);

        $r125 = virtualinvoke $r123.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r125);

        $r126 = new java.lang.StringBuilder;

        specialinvoke $r126.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r126.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r128 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$ErrorDialogController mDialogController>;

        $r129 = staticinvoke <com.android.server.am.ProcessRecord$ErrorDialogController: java.util.List access$200(com.android.server.am.ProcessRecord$ErrorDialogController)>($r128);

        virtualinvoke $r126.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r129);

        $r130 = virtualinvoke $r126.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r130);

        $r131 = new java.lang.StringBuilder;

        specialinvoke $r131.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r131.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bad=");

        $z58 = r0.<com.android.server.am.ProcessRecord: boolean bad>;

        virtualinvoke $r131.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z58);

        $r133 = virtualinvoke $r131.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r133);

        $r134 = r0.<com.android.server.am.ProcessRecord: android.content.ComponentName errorReportReceiver>;

        if $r134 == null goto label45;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" errorReportReceiver=");

        $r75 = r0.<com.android.server.am.ProcessRecord: android.content.ComponentName errorReportReceiver>;

        $r76 = virtualinvoke $r75.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r76);

     label45:
        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label46:
        $z59 = r0.<com.android.server.am.ProcessRecord: boolean whitelistManager>;

        if $z59 == 0 goto label47;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("whitelistManager=");

        $z12 = r0.<com.android.server.am.ProcessRecord: boolean whitelistManager>;

        virtualinvoke r1.<java.io.PrintWriter: void println(boolean)>($z12);

     label47:
        $r34 = r0.<com.android.server.am.ProcessRecord: java.lang.String isolatedEntryPoint>;

        if $r34 != null goto label48;

        $r74 = r0.<com.android.server.am.ProcessRecord: java.lang.String[] isolatedEntryPointArgs>;

        if $r74 == null goto label49;

     label48:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("isolatedEntryPoint=");

        $r35 = r0.<com.android.server.am.ProcessRecord: java.lang.String isolatedEntryPoint>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r35);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("isolatedEntryPointArgs=");

        $r36 = r0.<com.android.server.am.ProcessRecord: java.lang.String[] isolatedEntryPointArgs>;

        $r37 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>($r36);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r37);

     label49:
        $r135 = r0.<com.android.server.am.ProcessRecord: com.android.server.wm.WindowProcessController mWindowProcessController>;

        virtualinvoke $r135.<com.android.server.wm.WindowProcessController: void dump(java.io.PrintWriter,java.lang.String)>(r1, r2);

        $r136 = r0.<com.android.server.am.ProcessRecord: android.util.ArraySet mServices>;

        $i98 = virtualinvoke $r136.<android.util.ArraySet: int size()>();

        if $i98 <= 0 goto label51;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Services:");

        i99 = 0;

     label50:
        $r71 = r0.<com.android.server.am.ProcessRecord: android.util.ArraySet mServices>;

        $i63 = virtualinvoke $r71.<android.util.ArraySet: int size()>();

        if i99 >= $i63 goto label51;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  - ");

        $r72 = r0.<com.android.server.am.ProcessRecord: android.util.ArraySet mServices>;

        $r73 = virtualinvoke $r72.<android.util.ArraySet: java.lang.Object valueAt(int)>(i99);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>($r73);

        i99 = i99 + 1;

        goto label50;

     label51:
        $r38 = r0.<com.android.server.am.ProcessRecord: android.util.ArraySet executingServices>;

        $i50 = virtualinvoke $r38.<android.util.ArraySet: int size()>();

        if $i50 <= 0 goto label53;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("Executing Services (fg=");

        $z11 = r0.<com.android.server.am.ProcessRecord: boolean execServicesFg>;

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z11);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(")");

        i100 = 0;

     label52:
        $r68 = r0.<com.android.server.am.ProcessRecord: android.util.ArraySet executingServices>;

        $i62 = virtualinvoke $r68.<android.util.ArraySet: int size()>();

        if i100 >= $i62 goto label53;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  - ");

        $r69 = r0.<com.android.server.am.ProcessRecord: android.util.ArraySet executingServices>;

        $r70 = virtualinvoke $r69.<android.util.ArraySet: java.lang.Object valueAt(int)>(i100);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>($r70);

        i100 = i100 + 1;

        goto label52;

     label53:
        $r39 = r0.<com.android.server.am.ProcessRecord: android.util.ArraySet connections>;

        $i51 = virtualinvoke $r39.<android.util.ArraySet: int size()>();

        if $i51 <= 0 goto label55;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Connections:");

        i101 = 0;

     label54:
        $r65 = r0.<com.android.server.am.ProcessRecord: android.util.ArraySet connections>;

        $i61 = virtualinvoke $r65.<android.util.ArraySet: int size()>();

        if i101 >= $i61 goto label55;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  - ");

        $r66 = r0.<com.android.server.am.ProcessRecord: android.util.ArraySet connections>;

        $r67 = virtualinvoke $r66.<android.util.ArraySet: java.lang.Object valueAt(int)>(i101);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>($r67);

        i101 = i101 + 1;

        goto label54;

     label55:
        $r40 = r0.<com.android.server.am.ProcessRecord: android.util.ArrayMap pubProviders>;

        $i52 = virtualinvoke $r40.<android.util.ArrayMap: int size()>();

        if $i52 <= 0 goto label57;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Published Providers:");

        i102 = 0;

     label56:
        $r59 = r0.<com.android.server.am.ProcessRecord: android.util.ArrayMap pubProviders>;

        $i60 = virtualinvoke $r59.<android.util.ArrayMap: int size()>();

        if i102 >= $i60 goto label57;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  - ");

        $r60 = r0.<com.android.server.am.ProcessRecord: android.util.ArrayMap pubProviders>;

        $r61 = virtualinvoke $r60.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i102);

        $r62 = (java.lang.String) $r61;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r62);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("    -> ");

        $r63 = r0.<com.android.server.am.ProcessRecord: android.util.ArrayMap pubProviders>;

        $r64 = virtualinvoke $r63.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i102);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>($r64);

        i102 = i102 + 1;

        goto label56;

     label57:
        $r41 = r0.<com.android.server.am.ProcessRecord: java.util.ArrayList conProviders>;

        $i53 = virtualinvoke $r41.<java.util.ArrayList: int size()>();

        if $i53 <= 0 goto label59;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Connected Providers:");

        i103 = 0;

     label58:
        $r54 = r0.<com.android.server.am.ProcessRecord: java.util.ArrayList conProviders>;

        $i59 = virtualinvoke $r54.<java.util.ArrayList: int size()>();

        if i103 >= $i59 goto label59;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  - ");

        $r55 = r0.<com.android.server.am.ProcessRecord: java.util.ArrayList conProviders>;

        $r56 = virtualinvoke $r55.<java.util.ArrayList: java.lang.Object get(int)>(i103);

        $r57 = (com.android.server.am.ContentProviderConnection) $r56;

        $r58 = virtualinvoke $r57.<com.android.server.am.ContentProviderConnection: java.lang.String toShortString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r58);

        i103 = i103 + 1;

        goto label58;

     label59:
        $r42 = r0.<com.android.server.am.ProcessRecord: android.util.ArraySet curReceivers>;

        $z10 = virtualinvoke $r42.<android.util.ArraySet: boolean isEmpty()>();

        if $z10 != 0 goto label61;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Current Receivers:");

        i104 = 0;

     label60:
        $r51 = r0.<com.android.server.am.ProcessRecord: android.util.ArraySet curReceivers>;

        $i58 = virtualinvoke $r51.<android.util.ArraySet: int size()>();

        if i104 >= $i58 goto label61;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  - ");

        $r52 = r0.<com.android.server.am.ProcessRecord: android.util.ArraySet curReceivers>;

        $r53 = virtualinvoke $r52.<android.util.ArraySet: java.lang.Object valueAt(int)>(i104);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>($r53);

        i104 = i104 + 1;

        goto label60;

     label61:
        $r43 = r0.<com.android.server.am.ProcessRecord: android.util.ArraySet receivers>;

        $i54 = virtualinvoke $r43.<android.util.ArraySet: int size()>();

        if $i54 <= 0 goto label63;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Receivers:");

        i105 = 0;

     label62:
        $r48 = r0.<com.android.server.am.ProcessRecord: android.util.ArraySet receivers>;

        $i57 = virtualinvoke $r48.<android.util.ArraySet: int size()>();

        if i105 >= $i57 goto label63;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  - ");

        $r49 = r0.<com.android.server.am.ProcessRecord: android.util.ArraySet receivers>;

        $r50 = virtualinvoke $r49.<android.util.ArraySet: java.lang.Object valueAt(int)>(i105);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>($r50);

        i105 = i105 + 1;

        goto label62;

     label63:
        $r44 = r0.<com.android.server.am.ProcessRecord: android.util.ArraySet mAllowBackgroundActivityStartsTokens>;

        $i55 = virtualinvoke $r44.<android.util.ArraySet: int size()>();

        if $i55 <= 0 goto label65;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Background activity start whitelist tokens:");

        i106 = 0;

     label64:
        $r45 = r0.<com.android.server.am.ProcessRecord: android.util.ArraySet mAllowBackgroundActivityStartsTokens>;

        $i56 = virtualinvoke $r45.<android.util.ArraySet: int size()>();

        if i106 >= $i56 goto label65;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  - ");

        $r46 = r0.<com.android.server.am.ProcessRecord: android.util.ArraySet mAllowBackgroundActivityStartsTokens>;

        $r47 = virtualinvoke $r46.<android.util.ArraySet: java.lang.Object valueAt(int)>(i106);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>($r47);

        i106 = i106 + 1;

        goto label64;

     label65:
        return;
    }

    public void dumpDebug(android.util.proto.ProtoOutputStream, long)
    {
        com.android.server.am.ProcessRecord r0;
        android.util.proto.ProtoOutputStream r1;
        long l0;

        r0 := @this: com.android.server.am.ProcessRecord;

        r1 := @parameter0: android.util.proto.ProtoOutputStream;

        l0 := @parameter1: long;

        virtualinvoke r0.<com.android.server.am.ProcessRecord: void dumpDebug(android.util.proto.ProtoOutputStream,long,int)>(r1, l0, -1);

        return;
    }

    public void dumpDebug(android.util.proto.ProtoOutputStream, long, int)
    {
        com.android.server.am.ProcessRecord r0;
        android.util.proto.ProtoOutputStream r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        java.lang.String $r2;
        android.content.pm.ApplicationInfo $r3, $r4, $r5, $r6;
        boolean $z0;
        long l12, l13;

        r0 := @this: com.android.server.am.ProcessRecord;

        r1 := @parameter0: android.util.proto.ProtoOutputStream;

        l12 := @parameter1: long;

        i0 := @parameter2: int;

        l13 = virtualinvoke r1.<android.util.proto.ProtoOutputStream: long start(long)>(l12);

        $i1 = r0.<com.android.server.am.ProcessRecord: int pid>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464257L, $i1);

        $r2 = r0.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,java.lang.String)>(1138166333442L, $r2);

        $r3 = r0.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i2 = $r3.<android.content.pm.ApplicationInfo: int uid>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464259L, $i2);

        $r4 = r0.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i3 = $r4.<android.content.pm.ApplicationInfo: int uid>;

        $i4 = staticinvoke <android.os.UserHandle: int getAppId(int)>($i3);

        if $i4 < 10000 goto label1;

        $i9 = r0.<com.android.server.am.ProcessRecord: int userId>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464260L, $i9);

        $r6 = r0.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i10 = $r6.<android.content.pm.ApplicationInfo: int uid>;

        $i11 = staticinvoke <android.os.UserHandle: int getAppId(int)>($i10);

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464261L, $i11);

     label1:
        $i6 = r0.<com.android.server.am.ProcessRecord: int uid>;

        $r5 = r0.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i5 = $r5.<android.content.pm.ApplicationInfo: int uid>;

        if $i6 == $i5 goto label2;

        $i7 = r0.<com.android.server.am.ProcessRecord: int uid>;

        $i8 = staticinvoke <android.os.UserHandle: int getAppId(int)>($i7);

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464262L, $i8);

     label2:
        $z0 = r0.<com.android.server.am.ProcessRecord: boolean mPersistent>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,boolean)>(1133871366151L, $z0);

        if i0 < 0 goto label3;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464264L, i0);

     label3:
        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void end(long)>(l13);

        return;
    }

    public void forceProcessStateUpTo(int)
    {
        com.android.server.am.ProcessRecord r0;
        int $i0, $i1, $i2, $i3, $i4, i6, i7;
        com.android.server.am.ProcessRecord$PackageList $r1, $r2, $r5;
        java.lang.String $r3, $r4;
        com.android.internal.app.procstats.ProcessStats$ProcessStateHolder $r6;
        long $l5;

        r0 := @this: com.android.server.am.ProcessRecord;

        i6 := @parameter0: int;

        $i0 = r0.<com.android.server.am.ProcessRecord: int mRepProcState>;

        if $i0 <= i6 goto label2;

        r0.<com.android.server.am.ProcessRecord: int mRepProcState> = i6;

        virtualinvoke r0.<com.android.server.am.ProcessRecord: void setCurProcState(int)>(i6);

        virtualinvoke r0.<com.android.server.am.ProcessRecord: void setCurRawProcState(int)>(i6);

        $r1 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        $i1 = virtualinvoke $r1.<com.android.server.am.ProcessRecord$PackageList: int size()>();

        i7 = $i1 - 1;

     label1:
        if i7 < 0 goto label2;

        $i2 = r0.<com.android.server.am.ProcessRecord: int uid>;

        $r3 = r0.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r2 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        $r4 = virtualinvoke $r2.<com.android.server.am.ProcessRecord$PackageList: java.lang.String keyAt(int)>(i7);

        $i3 = r0.<com.android.server.am.ProcessRecord: int mRepProcState>;

        $i4 = staticinvoke <android.app.ActivityManager: int processStateAmToProto(int)>($i3);

        $r5 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        $r6 = virtualinvoke $r5.<com.android.server.am.ProcessRecord$PackageList: com.android.internal.app.procstats.ProcessStats$ProcessStateHolder valueAt(int)>(i7);

        $l5 = $r6.<com.android.internal.app.procstats.ProcessStats$ProcessStateHolder: long appVersion>;

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int,java.lang.String,java.lang.String,int,long)>(3, $i2, $r3, $r4, $i4, $l5);

        i7 = i7 + -1;

        goto label1;

     label2:
        return;
    }

    com.android.server.am.ActiveInstrumentation getActiveInstrumentation()
    {
        com.android.server.am.ProcessRecord r0;
        com.android.server.am.ActiveInstrumentation $r1;

        r0 := @this: com.android.server.am.ProcessRecord;

        $r1 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ActiveInstrumentation mInstr>;

        return $r1;
    }

    boolean getCachedHasActivities()
    {
        com.android.server.am.ProcessRecord r0;
        com.android.server.wm.WindowProcessController $r1;
        boolean $z0, z1;
        int i0, $i2;
        byte b1;

        r0 := @this: com.android.server.am.ProcessRecord;

        i0 = r0.<com.android.server.am.ProcessRecord: int mCachedHasActivities>;

        z1 = 0;

        if i0 != -1 goto label3;

        $r1 = virtualinvoke r0.<com.android.server.am.ProcessRecord: com.android.server.wm.WindowProcessController getWindowProcessController()>();

        $z0 = virtualinvoke $r1.<com.android.server.wm.WindowProcessController: boolean hasActivities()>();

        if $z0 == 0 goto label1;

        b1 = 1;

        goto label2;

     label1:
        b1 = 0;

     label2:
        r0.<com.android.server.am.ProcessRecord: int mCachedHasActivities> = b1;

     label3:
        $i2 = r0.<com.android.server.am.ProcessRecord: int mCachedHasActivities>;

        if $i2 != 1 goto label4;

        z1 = 1;

     label4:
        return z1;
    }

    boolean getCachedHasRecentTasks()
    {
        com.android.server.am.ProcessRecord r0;
        com.android.server.wm.WindowProcessController $r1;
        boolean $z0, z1;
        int i0, $i2;
        byte b1;

        r0 := @this: com.android.server.am.ProcessRecord;

        i0 = r0.<com.android.server.am.ProcessRecord: int mCachedHasRecentTasks>;

        z1 = 0;

        if i0 != -1 goto label3;

        $r1 = virtualinvoke r0.<com.android.server.am.ProcessRecord: com.android.server.wm.WindowProcessController getWindowProcessController()>();

        $z0 = virtualinvoke $r1.<com.android.server.wm.WindowProcessController: boolean hasRecentTasks()>();

        if $z0 == 0 goto label1;

        b1 = 1;

        goto label2;

     label1:
        b1 = 0;

     label2:
        r0.<com.android.server.am.ProcessRecord: int mCachedHasRecentTasks> = b1;

     label3:
        $i2 = r0.<com.android.server.am.ProcessRecord: int mCachedHasRecentTasks>;

        if $i2 != 1 goto label4;

        z1 = 1;

     label4:
        return z1;
    }

    boolean getCachedHasVisibleActivities()
    {
        com.android.server.am.ProcessRecord r0;
        com.android.server.wm.WindowProcessController $r1;
        boolean $z0, z1;
        int i0, $i2;
        byte b1;

        r0 := @this: com.android.server.am.ProcessRecord;

        i0 = r0.<com.android.server.am.ProcessRecord: int mCachedHasVisibleActivities>;

        z1 = 0;

        if i0 != -1 goto label3;

        $r1 = virtualinvoke r0.<com.android.server.am.ProcessRecord: com.android.server.wm.WindowProcessController getWindowProcessController()>();

        $z0 = virtualinvoke $r1.<com.android.server.wm.WindowProcessController: boolean hasVisibleActivities()>();

        if $z0 == 0 goto label1;

        b1 = 1;

        goto label2;

     label1:
        b1 = 0;

     label2:
        r0.<com.android.server.am.ProcessRecord: int mCachedHasVisibleActivities> = b1;

     label3:
        $i2 = r0.<com.android.server.am.ProcessRecord: int mCachedHasVisibleActivities>;

        if $i2 != 1 goto label4;

        z1 = 1;

     label4:
        return z1;
    }

    boolean getCachedIsHeavyWeight()
    {
        com.android.server.am.ProcessRecord r0;
        com.android.server.am.ActivityManagerService $r1;
        com.android.server.wm.ActivityTaskManagerInternal $r2;
        com.android.server.wm.WindowProcessController $r3;
        boolean $z0, z1;
        int i0, $i2;
        byte b1;

        r0 := @this: com.android.server.am.ProcessRecord;

        i0 = r0.<com.android.server.am.ProcessRecord: int mCachedIsHeavyWeight>;

        z1 = 0;

        if i0 != -1 goto label3;

        $r1 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ActivityManagerService mService>;

        $r2 = $r1.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerInternal mAtmInternal>;

        $r3 = virtualinvoke r0.<com.android.server.am.ProcessRecord: com.android.server.wm.WindowProcessController getWindowProcessController()>();

        $z0 = virtualinvoke $r2.<com.android.server.wm.ActivityTaskManagerInternal: boolean isHeavyWeightProcess(com.android.server.wm.WindowProcessController)>($r3);

        if $z0 == 0 goto label1;

        b1 = 1;

        goto label2;

     label1:
        b1 = 0;

     label2:
        r0.<com.android.server.am.ProcessRecord: int mCachedIsHeavyWeight> = b1;

     label3:
        $i2 = r0.<com.android.server.am.ProcessRecord: int mCachedIsHeavyWeight>;

        if $i2 != 1 goto label4;

        z1 = 1;

     label4:
        return z1;
    }

    boolean getCachedIsHomeProcess()
    {
        com.android.server.am.ProcessRecord r0;
        com.android.server.wm.WindowProcessController $r1;
        boolean $z0, z1;
        int i0, $i2;
        byte b1;

        r0 := @this: com.android.server.am.ProcessRecord;

        i0 = r0.<com.android.server.am.ProcessRecord: int mCachedIsHomeProcess>;

        z1 = 0;

        if i0 != -1 goto label3;

        $r1 = virtualinvoke r0.<com.android.server.am.ProcessRecord: com.android.server.wm.WindowProcessController getWindowProcessController()>();

        $z0 = virtualinvoke $r1.<com.android.server.wm.WindowProcessController: boolean isHomeProcess()>();

        if $z0 == 0 goto label1;

        b1 = 1;

        goto label2;

     label1:
        b1 = 0;

     label2:
        r0.<com.android.server.am.ProcessRecord: int mCachedIsHomeProcess> = b1;

     label3:
        $i2 = r0.<com.android.server.am.ProcessRecord: int mCachedIsHomeProcess>;

        if $i2 != 1 goto label4;

        z1 = 1;

     label4:
        return z1;
    }

    boolean getCachedIsPreviousProcess()
    {
        com.android.server.am.ProcessRecord r0;
        com.android.server.wm.WindowProcessController $r1;
        boolean $z0, z1;
        int i0, $i2;
        byte b1;

        r0 := @this: com.android.server.am.ProcessRecord;

        i0 = r0.<com.android.server.am.ProcessRecord: int mCachedIsPreviousProcess>;

        z1 = 0;

        if i0 != -1 goto label3;

        $r1 = virtualinvoke r0.<com.android.server.am.ProcessRecord: com.android.server.wm.WindowProcessController getWindowProcessController()>();

        $z0 = virtualinvoke $r1.<com.android.server.wm.WindowProcessController: boolean isPreviousProcess()>();

        if $z0 == 0 goto label1;

        b1 = 1;

        goto label2;

     label1:
        b1 = 0;

     label2:
        r0.<com.android.server.am.ProcessRecord: int mCachedIsPreviousProcess> = b1;

     label3:
        $i2 = r0.<com.android.server.am.ProcessRecord: int mCachedIsPreviousProcess>;

        if $i2 != 1 goto label4;

        z1 = 1;

     label4:
        return z1;
    }

    boolean getCachedIsReceivingBroadcast(android.util.ArraySet)
    {
        com.android.server.am.ProcessRecord r0;
        android.util.ArraySet r1;
        com.android.server.am.ActivityManagerService $r2, $r3;
        boolean $z0, $z1, z2;
        com.android.server.am.BroadcastQueue $r4;
        int i0, $i3;
        byte b1, b2;

        r0 := @this: com.android.server.am.ProcessRecord;

        r1 := @parameter0: android.util.ArraySet;

        i0 = r0.<com.android.server.am.ProcessRecord: int mCachedIsReceivingBroadcast>;

        z2 = 0;

        if i0 != -1 goto label5;

        virtualinvoke r1.<android.util.ArraySet: void clear()>();

        $r2 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ActivityManagerService mService>;

        $z0 = virtualinvoke $r2.<com.android.server.am.ActivityManagerService: boolean isReceivingBroadcastLocked(com.android.server.am.ProcessRecord,android.util.ArraySet)>(r0, r1);

        if $z0 == 0 goto label1;

        b1 = 1;

        goto label2;

     label1:
        b1 = 0;

     label2:
        r0.<com.android.server.am.ProcessRecord: int mCachedIsReceivingBroadcast> = b1;

        if b1 != 1 goto label5;

        $r3 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ActivityManagerService mService>;

        $r4 = $r3.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastQueue mFgBroadcastQueue>;

        $z1 = virtualinvoke r1.<android.util.ArraySet: boolean contains(java.lang.Object)>($r4);

        if $z1 == 0 goto label3;

        b2 = 2;

        goto label4;

     label3:
        b2 = 0;

     label4:
        r0.<com.android.server.am.ProcessRecord: int mCachedSchedGroup> = b2;

     label5:
        $i3 = r0.<com.android.server.am.ProcessRecord: int mCachedIsReceivingBroadcast>;

        if $i3 != 1 goto label6;

        z2 = 1;

     label6:
        return z2;
    }

    public long getCpuTime()
    {
        com.android.server.am.ProcessRecord r0;
        com.android.server.am.ActivityManagerService $r1;
        int $i0;
        com.android.internal.os.ProcessCpuTracker $r2;
        long $l1;

        r0 := @this: com.android.server.am.ProcessRecord;

        $r1 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ActivityManagerService mService>;

        $r2 = $r1.<com.android.server.am.ActivityManagerService: com.android.internal.os.ProcessCpuTracker mProcessCpuTracker>;

        $i0 = r0.<com.android.server.am.ProcessRecord: int pid>;

        $l1 = virtualinvoke $r2.<com.android.internal.os.ProcessCpuTracker: long getCpuTimeForPid(int)>($i0);

        return $l1;
    }

    int getCurProcState()
    {
        com.android.server.am.ProcessRecord r0;
        int $i0;

        r0 := @this: com.android.server.am.ProcessRecord;

        $i0 = r0.<com.android.server.am.ProcessRecord: int mCurProcState>;

        return $i0;
    }

    int getCurRawAdj()
    {
        com.android.server.am.ProcessRecord r0;
        int $i0;

        r0 := @this: com.android.server.am.ProcessRecord;

        $i0 = r0.<com.android.server.am.ProcessRecord: int mCurRawAdj>;

        return $i0;
    }

    int getCurRawProcState()
    {
        com.android.server.am.ProcessRecord r0;
        int $i0;

        r0 := @this: com.android.server.am.ProcessRecord;

        $i0 = r0.<com.android.server.am.ProcessRecord: int mCurRawProcState>;

        return $i0;
    }

    int getCurrentSchedulingGroup()
    {
        com.android.server.am.ProcessRecord r0;
        int $i0;

        r0 := @this: com.android.server.am.ProcessRecord;

        $i0 = r0.<com.android.server.am.ProcessRecord: int mCurSchedGroup>;

        return $i0;
    }

    com.android.server.am.ProcessRecord$ErrorDialogController getDialogController()
    {
        com.android.server.am.ProcessRecord r0;
        com.android.server.am.ProcessRecord$ErrorDialogController $r1;

        r0 := @this: com.android.server.am.ProcessRecord;

        $r1 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$ErrorDialogController mDialogController>;

        return $r1;
    }

    long getFgInteractionTime()
    {
        com.android.server.am.ProcessRecord r0;
        long $l0;

        r0 := @this: com.android.server.am.ProcessRecord;

        $l0 = r0.<com.android.server.am.ProcessRecord: long mFgInteractionTime>;

        return $l0;
    }

    int getForegroundServiceTypes()
    {
        com.android.server.am.ProcessRecord r0;
        boolean $z0;
        int i0;

        r0 := @this: com.android.server.am.ProcessRecord;

        $z0 = r0.<com.android.server.am.ProcessRecord: boolean mHasForegroundServices>;

        if $z0 == 0 goto label1;

        i0 = r0.<com.android.server.am.ProcessRecord: int mFgServiceTypes>;

        goto label2;

     label1:
        i0 = 0;

     label2:
        return i0;
    }

    public long getInputDispatchingTimeout()
    {
        com.android.server.am.ProcessRecord r0;
        com.android.server.wm.WindowProcessController $r1;
        long $l0;

        r0 := @this: com.android.server.am.ProcessRecord;

        $r1 = r0.<com.android.server.am.ProcessRecord: com.android.server.wm.WindowProcessController mWindowProcessController>;

        $l0 = virtualinvoke $r1.<com.android.server.wm.WindowProcessController: long getInputDispatchingTimeout()>();

        return $l0;
    }

    long getInteractionEventTime()
    {
        com.android.server.am.ProcessRecord r0;
        long $l0;

        r0 := @this: com.android.server.am.ProcessRecord;

        $l0 = r0.<com.android.server.am.ProcessRecord: long mInteractionEventTime>;

        return $l0;
    }

    java.util.List getLruProcessList()
    {
        com.android.server.am.ProcessRecord r0;
        com.android.server.am.ActivityManagerService $r1;
        com.android.server.am.ProcessList $r2;
        java.util.ArrayList $r3;

        r0 := @this: com.android.server.am.ProcessRecord;

        $r1 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ActivityManagerService mService>;

        $r2 = $r1.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r3 = $r2.<com.android.server.am.ProcessList: java.util.ArrayList mLruProcesses>;

        return $r3;
    }

    public java.lang.String[] getPackageList()
    {
        com.android.server.am.ProcessRecord r0;
        java.lang.String[] r1;
        com.android.server.am.ProcessRecord$PackageList $r2, $r3, $r4;
        int $i0, i1, i2;
        java.lang.String $r5;

        r0 := @this: com.android.server.am.ProcessRecord;

        $r2 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        i1 = virtualinvoke $r2.<com.android.server.am.ProcessRecord$PackageList: int size()>();

        if i1 != 0 goto label1;

        return null;

     label1:
        r1 = newarray (java.lang.String)[i1];

        i2 = 0;

     label2:
        $r3 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        $i0 = virtualinvoke $r3.<com.android.server.am.ProcessRecord$PackageList: int size()>();

        if i2 >= $i0 goto label3;

        $r4 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        $r5 = virtualinvoke $r4.<com.android.server.am.ProcessRecord$PackageList: java.lang.String keyAt(int)>(i2);

        r1[i2] = $r5;

        i2 = i2 + 1;

        goto label2;

     label3:
        return r1;
    }

    public java.util.List getPackageListWithVersionCode()
    {
        com.android.server.am.ProcessRecord r0;
        com.android.server.am.ProcessRecord$PackageList $r2, $r4, $r6, $r8;
        int $i0, $i1, i3;
        java.util.ArrayList $r3;
        android.content.pm.VersionedPackage $r5;
        java.lang.String $r7;
        com.android.internal.app.procstats.ProcessStats$ProcessStateHolder $r9;
        long $l2;

        r0 := @this: com.android.server.am.ProcessRecord;

        $r2 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        $i0 = virtualinvoke $r2.<com.android.server.am.ProcessRecord$PackageList: int size()>();

        if $i0 != 0 goto label1;

        return null;

     label1:
        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        i3 = 0;

     label2:
        $r4 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        $i1 = virtualinvoke $r4.<com.android.server.am.ProcessRecord$PackageList: int size()>();

        if i3 >= $i1 goto label3;

        $r5 = new android.content.pm.VersionedPackage;

        $r6 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        $r7 = virtualinvoke $r6.<com.android.server.am.ProcessRecord$PackageList: java.lang.String keyAt(int)>(i3);

        $r8 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        $r9 = virtualinvoke $r8.<com.android.server.am.ProcessRecord$PackageList: com.android.internal.app.procstats.ProcessStats$ProcessStateHolder valueAt(int)>(i3);

        $l2 = $r9.<com.android.internal.app.procstats.ProcessStats$ProcessStateHolder: long appVersion>;

        specialinvoke $r5.<android.content.pm.VersionedPackage: void <init>(java.lang.String,long)>($r7, $l2);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r5);

        i3 = i3 + 1;

        goto label2;

     label3:
        return $r3;
    }

    public int getProcessClassEnum()
    {
        com.android.server.am.ProcessRecord r0;
        int i0, $i1, $i2, $i3;
        android.content.pm.ApplicationInfo $r1, $r2;
        byte b4;

        r0 := @this: com.android.server.am.ProcessRecord;

        $i2 = r0.<com.android.server.am.ProcessRecord: int pid>;

        $i1 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        if $i2 != $i1 goto label1;

        return 3;

     label1:
        $r1 = r0.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        if $r1 != null goto label2;

        return 0;

     label2:
        $r2 = r0.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        i0 = $r2.<android.content.pm.ApplicationInfo: int flags>;

        b4 = 1;

        $i3 = i0 & 1;

        if $i3 == 0 goto label3;

        b4 = 2;

        goto label3;

     label3:
        return b4;
    }

    int getReportedForegroundServiceTypes()
    {
        com.android.server.am.ProcessRecord r0;
        int $i0;

        r0 := @this: com.android.server.am.ProcessRecord;

        $i0 = r0.<com.android.server.am.ProcessRecord: int mRepFgServiceTypes>;

        return $i0;
    }

    int getReportedProcState()
    {
        com.android.server.am.ProcessRecord r0;
        int $i0;

        r0 := @this: com.android.server.am.ProcessRecord;

        $i0 = r0.<com.android.server.am.ProcessRecord: int mRepProcState>;

        return $i0;
    }

    java.lang.String getRequiredAbi()
    {
        com.android.server.am.ProcessRecord r0;
        java.lang.String $r1;

        r0 := @this: com.android.server.am.ProcessRecord;

        $r1 = r0.<com.android.server.am.ProcessRecord: java.lang.String mRequiredAbi>;

        return $r1;
    }

    com.android.server.am.ServiceRecord getRunningServiceAt(int)
    {
        com.android.server.am.ProcessRecord r0;
        int i0;
        android.util.ArraySet $r1;
        java.lang.Object $r2;
        com.android.server.am.ServiceRecord $r3;

        r0 := @this: com.android.server.am.ProcessRecord;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.am.ProcessRecord: android.util.ArraySet mServices>;

        $r2 = virtualinvoke $r1.<android.util.ArraySet: java.lang.Object valueAt(int)>(i0);

        $r3 = (com.android.server.am.ServiceRecord) $r2;

        return $r3;
    }

    public int getSetAdjWithServices()
    {
        com.android.server.am.ProcessRecord r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.android.server.am.ProcessRecord;

        $i0 = r0.<com.android.server.am.ProcessRecord: int setAdj>;

        if $i0 < 900 goto label1;

        $z0 = r0.<com.android.server.am.ProcessRecord: boolean hasStartedServices>;

        if $z0 == 0 goto label1;

        return 800;

     label1:
        $i1 = r0.<com.android.server.am.ProcessRecord: int setAdj>;

        return $i1;
    }

    long getWhenUnimportant()
    {
        com.android.server.am.ProcessRecord r0;
        long $l0;

        r0 := @this: com.android.server.am.ProcessRecord;

        $l0 = r0.<com.android.server.am.ProcessRecord: long mWhenUnimportant>;

        return $l0;
    }

    com.android.server.wm.WindowProcessController getWindowProcessController()
    {
        com.android.server.am.ProcessRecord r0;
        com.android.server.wm.WindowProcessController $r1;

        r0 := @this: com.android.server.am.ProcessRecord;

        $r1 = r0.<com.android.server.am.ProcessRecord: com.android.server.wm.WindowProcessController mWindowProcessController>;

        return $r1;
    }

    boolean hasActivities()
    {
        com.android.server.am.ProcessRecord r0;
        com.android.server.wm.WindowProcessController $r1;
        boolean $z0;

        r0 := @this: com.android.server.am.ProcessRecord;

        $r1 = r0.<com.android.server.am.ProcessRecord: com.android.server.wm.WindowProcessController mWindowProcessController>;

        $z0 = virtualinvoke $r1.<com.android.server.wm.WindowProcessController: boolean hasActivities()>();

        return $z0;
    }

    boolean hasActivitiesOrRecentTasks()
    {
        com.android.server.am.ProcessRecord r0;
        com.android.server.wm.WindowProcessController $r1;
        boolean $z0;

        r0 := @this: com.android.server.am.ProcessRecord;

        $r1 = r0.<com.android.server.am.ProcessRecord: com.android.server.wm.WindowProcessController mWindowProcessController>;

        $z0 = virtualinvoke $r1.<com.android.server.wm.WindowProcessController: boolean hasActivitiesOrRecentTasks()>();

        return $z0;
    }

    boolean hasClientActivities()
    {
        com.android.server.am.ProcessRecord r0;
        boolean $z0;

        r0 := @this: com.android.server.am.ProcessRecord;

        $z0 = r0.<com.android.server.am.ProcessRecord: boolean mHasClientActivities>;

        return $z0;
    }

    boolean hasForegroundActivities()
    {
        com.android.server.am.ProcessRecord r0;
        boolean $z0;

        r0 := @this: com.android.server.am.ProcessRecord;

        $z0 = r0.<com.android.server.am.ProcessRecord: boolean mHasForegroundActivities>;

        return $z0;
    }

    boolean hasForegroundServices()
    {
        com.android.server.am.ProcessRecord r0;
        boolean $z0;

        r0 := @this: com.android.server.am.ProcessRecord;

        $z0 = r0.<com.android.server.am.ProcessRecord: boolean mHasForegroundServices>;

        return $z0;
    }

    boolean hasLocationCapability()
    {
        com.android.server.am.ProcessRecord r0;
        int i0, $i1;
        boolean z0;

        r0 := @this: com.android.server.am.ProcessRecord;

        i0 = r0.<com.android.server.am.ProcessRecord: int setCapability>;

        z0 = 1;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    boolean hasLocationForegroundServices()
    {
        com.android.server.am.ProcessRecord r0;
        boolean $z0, z1;
        int $i0, $i1;

        r0 := @this: com.android.server.am.ProcessRecord;

        $z0 = r0.<com.android.server.am.ProcessRecord: boolean mHasForegroundServices>;

        if $z0 == 0 goto label1;

        $i0 = r0.<com.android.server.am.ProcessRecord: int mFgServiceTypes>;

        $i1 = $i0 & 8;

        if $i1 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    boolean hasOverlayUi()
    {
        com.android.server.am.ProcessRecord r0;
        boolean $z0;

        r0 := @this: com.android.server.am.ProcessRecord;

        $z0 = r0.<com.android.server.am.ProcessRecord: boolean mHasOverlayUi>;

        return $z0;
    }

    boolean hasPendingUiClean()
    {
        com.android.server.am.ProcessRecord r0;
        boolean $z0;

        r0 := @this: com.android.server.am.ProcessRecord;

        $z0 = r0.<com.android.server.am.ProcessRecord: boolean mPendingUiClean>;

        return $z0;
    }

    boolean hasRecentTasks()
    {
        com.android.server.am.ProcessRecord r0;
        com.android.server.wm.WindowProcessController $r1;
        boolean $z0;

        r0 := @this: com.android.server.am.ProcessRecord;

        $r1 = r0.<com.android.server.am.ProcessRecord: com.android.server.wm.WindowProcessController mWindowProcessController>;

        $z0 = virtualinvoke $r1.<com.android.server.wm.WindowProcessController: boolean hasRecentTasks()>();

        return $z0;
    }

    boolean hasTopUi()
    {
        com.android.server.am.ProcessRecord r0;
        boolean $z0;

        r0 := @this: com.android.server.am.ProcessRecord;

        $z0 = r0.<com.android.server.am.ProcessRecord: boolean mHasTopUi>;

        return $z0;
    }

    public boolean isCached()
    {
        com.android.server.am.ProcessRecord r0;
        boolean $z0;

        r0 := @this: com.android.server.am.ProcessRecord;

        $z0 = r0.<com.android.server.am.ProcessRecord: boolean mCached>;

        return $z0;
    }

    boolean isCrashing()
    {
        com.android.server.am.ProcessRecord r0;
        boolean $z0;

        r0 := @this: com.android.server.am.ProcessRecord;

        $z0 = r0.<com.android.server.am.ProcessRecord: boolean mCrashing>;

        return $z0;
    }

    boolean isDebugging()
    {
        com.android.server.am.ProcessRecord r0;
        boolean $z0;

        r0 := @this: com.android.server.am.ProcessRecord;

        $z0 = r0.<com.android.server.am.ProcessRecord: boolean mDebugging>;

        return $z0;
    }

    public boolean isInterestingToUserLocked()
    {
        com.android.server.am.ProcessRecord r0;
        int i0, i1;
        com.android.server.wm.WindowProcessController $r1;
        boolean $z0, $z1;
        android.util.ArraySet $r2, $r3;
        java.lang.Object $r4;
        com.android.server.am.ServiceRecord $r5;

        r0 := @this: com.android.server.am.ProcessRecord;

        $r1 = r0.<com.android.server.am.ProcessRecord: com.android.server.wm.WindowProcessController mWindowProcessController>;

        $z0 = virtualinvoke $r1.<com.android.server.wm.WindowProcessController: boolean isInterestingToUser()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $r2 = r0.<com.android.server.am.ProcessRecord: android.util.ArraySet mServices>;

        i0 = virtualinvoke $r2.<android.util.ArraySet: int size()>();

        i1 = 0;

     label2:
        if i1 >= i0 goto label4;

        $r3 = r0.<com.android.server.am.ProcessRecord: android.util.ArraySet mServices>;

        $r4 = virtualinvoke $r3.<android.util.ArraySet: java.lang.Object valueAt(int)>(i1);

        $r5 = (com.android.server.am.ServiceRecord) $r4;

        $z1 = $r5.<com.android.server.am.ServiceRecord: boolean isForeground>;

        if $z1 == 0 goto label3;

        return 1;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        return 0;
    }

    boolean isMonitorCpuUsage()
    {
        com.android.server.am.ProcessRecord r0;

        r0 := @this: com.android.server.am.ProcessRecord;

        return 1;
    }

    boolean isNotResponding()
    {
        com.android.server.am.ProcessRecord r0;
        boolean $z0;

        r0 := @this: com.android.server.am.ProcessRecord;

        $z0 = r0.<com.android.server.am.ProcessRecord: boolean mNotResponding>;

        return $z0;
    }

    boolean isPersistent()
    {
        com.android.server.am.ProcessRecord r0;
        boolean $z0;

        r0 := @this: com.android.server.am.ProcessRecord;

        $z0 = r0.<com.android.server.am.ProcessRecord: boolean mPersistent>;

        return $z0;
    }

    public boolean isRemoved()
    {
        com.android.server.am.ProcessRecord r0;
        boolean $z0;

        r0 := @this: com.android.server.am.ProcessRecord;

        $z0 = r0.<com.android.server.am.ProcessRecord: boolean removed>;

        return $z0;
    }

    boolean isSilentAnr()
    {
        com.android.server.am.ProcessRecord r0;
        boolean $z0, $z1, z2;

        r0 := @this: com.android.server.am.ProcessRecord;

        $z0 = specialinvoke r0.<com.android.server.am.ProcessRecord: boolean getShowBackground()>();

        if $z0 != 0 goto label1;

        $z1 = specialinvoke r0.<com.android.server.am.ProcessRecord: boolean isInterestingForBackgroundTraces()>();

        if $z1 != 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;
    }

    boolean isUsingWrapper()
    {
        com.android.server.am.ProcessRecord r0;
        boolean $z0;

        r0 := @this: com.android.server.am.ProcessRecord;

        $z0 = r0.<com.android.server.am.ProcessRecord: boolean mUsingWrapper>;

        return $z0;
    }

    void kill(java.lang.String, int, int, boolean)
    {
        com.android.server.am.ProcessRecord r0;
        java.lang.String r1, $r10, $r14, $r20;
        int i0, i1, $i2, $i3, $i4, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        boolean z0, $z1, $z2;
        com.android.server.am.ActivityManagerService r2, $r4, $r5, $r23;
        com.android.server.am.ProcessList $r6;
        java.lang.Object[] $r7;
        java.lang.Integer $r8, $r9, $r11;
        java.lang.StringBuilder $r12;
        android.content.pm.ApplicationInfo $r21, $r22;

        r0 := @this: com.android.server.am.ProcessRecord;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        $z1 = r0.<com.android.server.am.ProcessRecord: boolean killedByAm>;

        if $z1 != 0 goto label6;

        staticinvoke <android.os.Trace: void traceBegin(long,java.lang.String)>(64L, "kill");

        $r4 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ActivityManagerService mService>;

        if $r4 == null goto label2;

        if z0 != 0 goto label1;

        $r22 = r0.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i12 = $r22.<android.content.pm.ApplicationInfo: int uid>;

        $r23 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ActivityManagerService mService>;

        $i11 = $r23.<com.android.server.am.ActivityManagerService: int mCurOomAdjUid>;

        if $i12 != $i11 goto label2;

     label1:
        r2 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ActivityManagerService mService>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Killing ");

        $r14 = virtualinvoke r0.<com.android.server.am.ProcessRecord: java.lang.String toShortString()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (adj ");

        $i9 = r0.<com.android.server.am.ProcessRecord: int setAdj>;

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("): ");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r20 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r21 = r0.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i10 = $r21.<android.content.pm.ApplicationInfo: int uid>;

        virtualinvoke r2.<com.android.server.am.ActivityManagerService: void reportUidInfoMessageLocked(java.lang.String,java.lang.String,int)>("ActivityManager", $r20, $i10);

     label2:
        $i13 = r0.<com.android.server.am.ProcessRecord: int pid>;

        if $i13 <= 0 goto label3;

        $r5 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ActivityManagerService mService>;

        $r6 = $r5.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        virtualinvoke $r6.<com.android.server.am.ProcessList: void noteAppKill(com.android.server.am.ProcessRecord,int,int,java.lang.String)>(r0, i0, i1, r1);

        $r7 = newarray (java.lang.Object)[5];

        $i2 = r0.<com.android.server.am.ProcessRecord: int userId>;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r7[0] = $r8;

        $i3 = r0.<com.android.server.am.ProcessRecord: int pid>;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r7[1] = $r9;

        $r10 = r0.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r7[2] = $r10;

        $i4 = r0.<com.android.server.am.ProcessRecord: int setAdj>;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r7[3] = $r11;

        $r7[4] = r1;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(30023, $r7);

        $i6 = r0.<com.android.server.am.ProcessRecord: int pid>;

        staticinvoke <android.os.Process: void killProcessQuiet(int)>($i6);

        $i8 = r0.<com.android.server.am.ProcessRecord: int uid>;

        $i7 = r0.<com.android.server.am.ProcessRecord: int pid>;

        staticinvoke <com.android.server.am.ProcessList: void killProcessGroup(int,int)>($i8, $i7);

        goto label4;

     label3:
        r0.<com.android.server.am.ProcessRecord: boolean pendingStart> = 0;

     label4:
        $z2 = r0.<com.android.server.am.ProcessRecord: boolean mPersistent>;

        if $z2 != 0 goto label5;

        r0.<com.android.server.am.ProcessRecord: boolean killed> = 1;

        r0.<com.android.server.am.ProcessRecord: boolean killedByAm> = 1;

     label5:
        staticinvoke <android.os.Trace: void traceEnd(long)>(64L);

     label6:
        return;
    }

    void kill(java.lang.String, int, boolean)
    {
        com.android.server.am.ProcessRecord r0;
        java.lang.String r1;
        int i0;
        boolean z0;

        r0 := @this: com.android.server.am.ProcessRecord;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        virtualinvoke r0.<com.android.server.am.ProcessRecord: void kill(java.lang.String,int,int,boolean)>(r1, i0, 0, z0);

        return;
    }

    public void lambda$appNotResponding$0$ProcessRecord()
    {
        com.android.server.am.ProcessRecord r0;

        r0 := @this: com.android.server.am.ProcessRecord;

        virtualinvoke r0.<com.android.server.am.ProcessRecord: void kill(java.lang.String,int,boolean)>("anr", 6, 1);

        return;
    }

    public void lambda$appNotResponding$1$ProcessRecord()
    {
        com.android.server.am.ProcessRecord r0;

        r0 := @this: com.android.server.am.ProcessRecord;

        virtualinvoke r0.<com.android.server.am.ProcessRecord: void kill(java.lang.String,int,boolean)>("anr", 6, 1);

        return;
    }

    public void lambda$appNotResponding$2$ProcessRecord()
    {
        com.android.server.am.ProcessRecord r0;
        com.android.server.am.ActivityManagerService r1, $r3;
        com.android.server.am.ActiveServices $r4;
        java.lang.Throwable $r5;

        r0 := @this: com.android.server.am.ProcessRecord;

        r1 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ActivityManagerService mService>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r3 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ActivityManagerService mService>;

        $r4 = $r3.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveServices mServices>;

        virtualinvoke $r4.<com.android.server.am.ActiveServices: void scheduleServiceTimeoutLocked(com.android.server.am.ProcessRecord)>(r0);

        exitmonitor r1;

     label2:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void makeActive(android.app.IApplicationThread, com.android.server.am.ProcessStatsService)
    {
        com.android.server.am.ProcessRecord r0;
        android.app.IApplicationThread r1, $r4;
        com.android.server.am.ProcessStatsService r2;
        com.android.internal.app.procstats.ProcessState r3, $r12, $r13, $r14, $r15, r24, $r32, $r33;
        com.android.server.wm.WindowProcessController $r5;
        android.content.pm.ApplicationInfo $r6, $r7, $r8, $r29, $r30;
        java.lang.String $r9, $r10, $r20, $r21, $r28, $r31;
        long $l0, $l3, $l7, $l12;
        int $i1, $i2, $i4, $i5, $i6, i8, i9, $i10, $i11;
        com.android.server.am.ProcessRecord$PackageList $r11, $r16, $r18, $r19, $r22, $r25, $r27;
        android.util.ArrayMap $r17;
        com.android.internal.app.procstats.ProcessStats$ProcessStateHolder $r23, r26;

        r0 := @this: com.android.server.am.ProcessRecord;

        r1 := @parameter0: android.app.IApplicationThread;

        r2 := @parameter1: com.android.server.am.ProcessStatsService;

        $r4 = r0.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r4 != null goto label7;

        r3 = r0.<com.android.server.am.ProcessRecord: com.android.internal.app.procstats.ProcessState baseProcessTracker>;

        if r3 == null goto label3;

        $i2 = virtualinvoke r2.<com.android.server.am.ProcessStatsService: int getMemFactorLocked()>();

        $l3 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r16 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        $r17 = $r16.<com.android.server.am.ProcessRecord$PackageList: android.util.ArrayMap mPkgList>;

        virtualinvoke r3.<com.android.internal.app.procstats.ProcessState: void setState(int,int,long,android.util.ArrayMap)>(-1, $i2, $l3, $r17);

        $r18 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        $i4 = virtualinvoke $r18.<com.android.server.am.ProcessRecord$PackageList: int size()>();

        i8 = $i4 - 1;

     label1:
        if i8 < 0 goto label2;

        $i5 = r0.<com.android.server.am.ProcessRecord: int uid>;

        $r20 = r0.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r19 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        $r21 = virtualinvoke $r19.<com.android.server.am.ProcessRecord$PackageList: java.lang.String keyAt(int)>(i8);

        $i6 = staticinvoke <android.app.ActivityManager: int processStateAmToProto(int)>(-1);

        $r22 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        $r23 = virtualinvoke $r22.<com.android.server.am.ProcessRecord$PackageList: com.android.internal.app.procstats.ProcessStats$ProcessStateHolder valueAt(int)>(i8);

        $l7 = $r23.<com.android.internal.app.procstats.ProcessStats$ProcessStateHolder: long appVersion>;

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int,java.lang.String,java.lang.String,int,long)>(3, $i5, $r20, $r21, $i6, $l7);

        i8 = i8 + -1;

        goto label1;

     label2:
        virtualinvoke r3.<com.android.internal.app.procstats.ProcessState: void makeInactive()>();

     label3:
        $r6 = r0.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r10 = $r6.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r7 = r0.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i1 = $r7.<android.content.pm.ApplicationInfo: int uid>;

        $r8 = r0.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $l0 = $r8.<android.content.pm.ApplicationInfo: long longVersionCode>;

        $r9 = r0.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        r24 = virtualinvoke r2.<com.android.server.am.ProcessStatsService: com.android.internal.app.procstats.ProcessState getProcessStateLocked(java.lang.String,int,long,java.lang.String)>($r10, $i1, $l0, $r9);

        r0.<com.android.server.am.ProcessRecord: com.android.internal.app.procstats.ProcessState baseProcessTracker> = r24;

        virtualinvoke r24.<com.android.internal.app.procstats.ProcessState: void makeActive()>();

        i9 = 0;

     label4:
        $r25 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        $i10 = virtualinvoke $r25.<com.android.server.am.ProcessRecord$PackageList: int size()>();

        if i9 >= $i10 goto label7;

        $r11 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        r26 = virtualinvoke $r11.<com.android.server.am.ProcessRecord$PackageList: com.android.internal.app.procstats.ProcessStats$ProcessStateHolder valueAt(int)>(i9);

        $r12 = r26.<com.android.internal.app.procstats.ProcessStats$ProcessStateHolder: com.android.internal.app.procstats.ProcessState state>;

        if $r12 == null goto label5;

        $r14 = r26.<com.android.internal.app.procstats.ProcessStats$ProcessStateHolder: com.android.internal.app.procstats.ProcessState state>;

        if $r14 == r3 goto label5;

        $r15 = r26.<com.android.internal.app.procstats.ProcessStats$ProcessStateHolder: com.android.internal.app.procstats.ProcessState state>;

        virtualinvoke $r15.<com.android.internal.app.procstats.ProcessState: void makeInactive()>();

     label5:
        $r27 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        $r28 = virtualinvoke $r27.<com.android.server.am.ProcessRecord$PackageList: java.lang.String keyAt(int)>(i9);

        $r29 = r0.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i11 = $r29.<android.content.pm.ApplicationInfo: int uid>;

        $r30 = r0.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $l12 = $r30.<android.content.pm.ApplicationInfo: long longVersionCode>;

        $r31 = r0.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        virtualinvoke r2.<com.android.server.am.ProcessStatsService: void updateProcessStateHolderLocked(com.android.internal.app.procstats.ProcessStats$ProcessStateHolder,java.lang.String,int,long,java.lang.String)>(r26, $r28, $i11, $l12, $r31);

        $r32 = r26.<com.android.internal.app.procstats.ProcessStats$ProcessStateHolder: com.android.internal.app.procstats.ProcessState state>;

        $r33 = r0.<com.android.server.am.ProcessRecord: com.android.internal.app.procstats.ProcessState baseProcessTracker>;

        if $r32 == $r33 goto label6;

        $r13 = r26.<com.android.internal.app.procstats.ProcessStats$ProcessStateHolder: com.android.internal.app.procstats.ProcessState state>;

        virtualinvoke $r13.<com.android.internal.app.procstats.ProcessState: void makeActive()>();

     label6:
        i9 = i9 + 1;

        goto label4;

     label7:
        r0.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread> = r1;

        $r5 = r0.<com.android.server.am.ProcessRecord: com.android.server.wm.WindowProcessController mWindowProcessController>;

        virtualinvoke $r5.<com.android.server.wm.WindowProcessController: void setThread(android.app.IApplicationThread)>(r1);

        return;
    }

    public java.lang.String makeAdjReason()
    {
        com.android.server.am.ProcessRecord r0, $r12;
        java.lang.Object $r2, $r11, $r21, r22, r23;
        java.lang.StringBuilder $r3;
        boolean $z0, $z1;
        java.lang.String $r8, $r13, $r16, $r19, $r24;
        android.content.ComponentName $r18;

        r0 := @this: com.android.server.am.ProcessRecord;

        $r2 = r0.<com.android.server.am.ProcessRecord: java.lang.Object adjSource>;

        if $r2 != null goto label2;

        $r21 = r0.<com.android.server.am.ProcessRecord: java.lang.Object adjTarget>;

        if $r21 == null goto label1;

        goto label2;

     label1:
        return null;

     label2:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(int)>(128);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        r22 = r0.<com.android.server.am.ProcessRecord: java.lang.Object adjTarget>;

        $z0 = r22 instanceof android.content.ComponentName;

        if $z0 == 0 goto label3;

        $r18 = (android.content.ComponentName) r22;

        $r19 = virtualinvoke $r18.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        goto label5;

     label3:
        if r22 == null goto label4;

        $r16 = virtualinvoke r22.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        goto label5;

     label4:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{null}");

     label5:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<=");

        r23 = r0.<com.android.server.am.ProcessRecord: java.lang.Object adjSource>;

        $z1 = r23 instanceof com.android.server.am.ProcessRecord;

        if $z1 == 0 goto label6;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Proc{");

        $r11 = r0.<com.android.server.am.ProcessRecord: java.lang.Object adjSource>;

        $r12 = (com.android.server.am.ProcessRecord) $r11;

        $r13 = virtualinvoke $r12.<com.android.server.am.ProcessRecord: java.lang.String toShortString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        goto label8;

     label6:
        if r23 == null goto label7;

        $r8 = virtualinvoke r23.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        goto label8;

     label7:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{null}");

     label8:
        $r24 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r24;
    }

    public void makeInactive(com.android.server.am.ProcessStatsService)
    {
        com.android.server.am.ProcessRecord r0;
        com.android.internal.app.procstats.ProcessState r1, $r4, $r5, $r6;
        com.android.server.wm.WindowProcessController $r2;
        com.android.server.am.ProcessRecord$PackageList $r3, $r7, $r9, $r10, $r13, $r16;
        int $i0, $i2, $i3, $i4, i6, i7, $i8;
        long $l1, $l5;
        android.util.ArrayMap $r8;
        java.lang.String $r11, $r12;
        com.android.internal.app.procstats.ProcessStats$ProcessStateHolder $r14, r17;
        com.android.server.am.ProcessStatsService r15;

        r0 := @this: com.android.server.am.ProcessRecord;

        r15 := @parameter0: com.android.server.am.ProcessStatsService;

        r0.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread> = null;

        $r2 = r0.<com.android.server.am.ProcessRecord: com.android.server.wm.WindowProcessController mWindowProcessController>;

        virtualinvoke $r2.<com.android.server.wm.WindowProcessController: void setThread(android.app.IApplicationThread)>(null);

        r1 = r0.<com.android.server.am.ProcessRecord: com.android.internal.app.procstats.ProcessState baseProcessTracker>;

        if r1 == null goto label6;

        if r1 == null goto label3;

        $i0 = virtualinvoke r15.<com.android.server.am.ProcessStatsService: int getMemFactorLocked()>();

        $l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r7 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        $r8 = $r7.<com.android.server.am.ProcessRecord$PackageList: android.util.ArrayMap mPkgList>;

        virtualinvoke r1.<com.android.internal.app.procstats.ProcessState: void setState(int,int,long,android.util.ArrayMap)>(-1, $i0, $l1, $r8);

        $r9 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        $i2 = virtualinvoke $r9.<com.android.server.am.ProcessRecord$PackageList: int size()>();

        i6 = $i2 - 1;

     label1:
        if i6 < 0 goto label2;

        $i3 = r0.<com.android.server.am.ProcessRecord: int uid>;

        $r11 = r0.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r10 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        $r12 = virtualinvoke $r10.<com.android.server.am.ProcessRecord$PackageList: java.lang.String keyAt(int)>(i6);

        $i4 = staticinvoke <android.app.ActivityManager: int processStateAmToProto(int)>(-1);

        $r13 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        $r14 = virtualinvoke $r13.<com.android.server.am.ProcessRecord$PackageList: com.android.internal.app.procstats.ProcessStats$ProcessStateHolder valueAt(int)>(i6);

        $l5 = $r14.<com.android.internal.app.procstats.ProcessStats$ProcessStateHolder: long appVersion>;

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int,java.lang.String,java.lang.String,int,long)>(3, $i3, $r11, $r12, $i4, $l5);

        i6 = i6 + -1;

        goto label1;

     label2:
        virtualinvoke r1.<com.android.internal.app.procstats.ProcessState: void makeInactive()>();

     label3:
        r0.<com.android.server.am.ProcessRecord: com.android.internal.app.procstats.ProcessState baseProcessTracker> = null;

        i7 = 0;

     label4:
        $r16 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        $i8 = virtualinvoke $r16.<com.android.server.am.ProcessRecord$PackageList: int size()>();

        if i7 >= $i8 goto label6;

        $r3 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        r17 = virtualinvoke $r3.<com.android.server.am.ProcessRecord$PackageList: com.android.internal.app.procstats.ProcessStats$ProcessStateHolder valueAt(int)>(i7);

        $r4 = r17.<com.android.internal.app.procstats.ProcessStats$ProcessStateHolder: com.android.internal.app.procstats.ProcessState state>;

        if $r4 == null goto label5;

        $r5 = r17.<com.android.internal.app.procstats.ProcessStats$ProcessStateHolder: com.android.internal.app.procstats.ProcessState state>;

        if $r5 == r1 goto label5;

        $r6 = r17.<com.android.internal.app.procstats.ProcessStats$ProcessStateHolder: com.android.internal.app.procstats.ProcessState state>;

        virtualinvoke $r6.<com.android.internal.app.procstats.ProcessState: void makeInactive()>();

     label5:
        r17.<com.android.internal.app.procstats.ProcessStats$ProcessStateHolder: com.android.internal.app.procstats.ProcessStats$PackageState pkg> = null;

        r17.<com.android.internal.app.procstats.ProcessStats$ProcessStateHolder: com.android.internal.app.procstats.ProcessState state> = null;

        i7 = i7 + 1;

        goto label4;

     label6:
        return;
    }

    int modifyRawOomAdj(int)
    {
        com.android.server.am.ProcessRecord r0;
        int i0, i1;
        boolean $z0;

        r0 := @this: com.android.server.am.ProcessRecord;

        i0 := @parameter0: int;

        i1 = i0;

        $z0 = r0.<com.android.server.am.ProcessRecord: boolean hasAboveClient>;

        if $z0 == 0 goto label6;

        if i0 >= 0 goto label1;

        i1 = i0;

        goto label6;

     label1:
        if i0 >= 100 goto label2;

        i1 = 100;

        goto label6;

     label2:
        if i0 >= 200 goto label3;

        i1 = 200;

        goto label6;

     label3:
        if i0 >= 250 goto label4;

        i1 = 250;

        goto label6;

     label4:
        if i0 >= 900 goto label5;

        i1 = 900;

        goto label6;

     label5:
        i1 = i0;

        if i0 >= 999 goto label6;

        i1 = i0 + 1;

     label6:
        return i1;
    }

    int numberOfRunningServices()
    {
        com.android.server.am.ProcessRecord r0;
        android.util.ArraySet $r1;
        int $i0;

        r0 := @this: com.android.server.am.ProcessRecord;

        $r1 = r0.<com.android.server.am.ProcessRecord: android.util.ArraySet mServices>;

        $i0 = virtualinvoke $r1.<android.util.ArraySet: int size()>();

        return $i0;
    }

    public void onStartActivity(int, boolean, java.lang.String, long)
    {
        com.android.server.am.ProcessRecord r0;
        int i0;
        boolean z0;
        long l1;
        com.android.server.am.ActivityManagerService r1, $r2, $r4;
        com.android.server.am.ProcessStatsService $r3;
        com.android.server.am.ActivityManagerService$ProfileData $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: com.android.server.am.ProcessRecord;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r7 := @parameter2: java.lang.String;

        l1 := @parameter3: long;

        r1 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ActivityManagerService mService>;

        entermonitor r1;

     label01:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        r0.<com.android.server.am.ProcessRecord: java.lang.String waitingToKill> = null;

     label02:
        if z0 == 0 goto label04;

     label03:
        $r4 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ActivityManagerService mService>;

        $r5 = $r4.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$ProfileData mProfileData>;

        virtualinvoke $r5.<com.android.server.am.ActivityManagerService$ProfileData: void setProfileProc(com.android.server.am.ProcessRecord)>(r0);

     label04:
        if r7 == null goto label06;

     label05:
        $r2 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ActivityManagerService mService>;

        $r3 = $r2.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        virtualinvoke r0.<com.android.server.am.ProcessRecord: boolean addPackage(java.lang.String,long,com.android.server.am.ProcessStatsService)>(r7, l1, $r3);

     label06:
        virtualinvoke r0.<com.android.server.am.ProcessRecord: void updateProcessInfo(boolean,boolean,boolean)>(0, 1, 1);

        r0.<com.android.server.am.ProcessRecord: boolean hasShownUi> = 1;

        virtualinvoke r0.<com.android.server.am.ProcessRecord: void setPendingUiClean(boolean)>(1);

        virtualinvoke r0.<com.android.server.am.ProcessRecord: void forceProcessStateUpTo(int)>(i0);

        exitmonitor r1;

     label07:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label08:
        $r6 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    void removeAllowBackgroundActivityStartsToken(android.os.Binder)
    {
        com.android.server.am.ProcessRecord r0;
        android.os.Binder r1;
        android.util.ArraySet $r2, $r3;
        com.android.server.wm.WindowProcessController $r4;
        boolean $z1, $z2;

        r0 := @this: com.android.server.am.ProcessRecord;

        r1 := @parameter0: android.os.Binder;

        if r1 != null goto label1;

        return;

     label1:
        $r2 = r0.<com.android.server.am.ProcessRecord: android.util.ArraySet mAllowBackgroundActivityStartsTokens>;

        virtualinvoke $r2.<android.util.ArraySet: boolean remove(java.lang.Object)>(r1);

        $r4 = r0.<com.android.server.am.ProcessRecord: com.android.server.wm.WindowProcessController mWindowProcessController>;

        $r3 = r0.<com.android.server.am.ProcessRecord: android.util.ArraySet mAllowBackgroundActivityStartsTokens>;

        $z1 = virtualinvoke $r3.<android.util.ArraySet: boolean isEmpty()>();

        $z2 = $z1 ^ 1;

        virtualinvoke $r4.<com.android.server.wm.WindowProcessController: void setAllowBackgroundActivityStarts(boolean)>($z2);

        return;
    }

    void resetCachedInfo()
    {
        com.android.server.am.ProcessRecord r0;

        r0 := @this: com.android.server.am.ProcessRecord;

        r0.<com.android.server.am.ProcessRecord: int mCachedHasActivities> = -1;

        r0.<com.android.server.am.ProcessRecord: int mCachedIsHeavyWeight> = -1;

        r0.<com.android.server.am.ProcessRecord: int mCachedHasVisibleActivities> = -1;

        r0.<com.android.server.am.ProcessRecord: int mCachedIsHomeProcess> = -1;

        r0.<com.android.server.am.ProcessRecord: int mCachedIsPreviousProcess> = -1;

        r0.<com.android.server.am.ProcessRecord: int mCachedHasRecentTasks> = -1;

        r0.<com.android.server.am.ProcessRecord: int mCachedIsReceivingBroadcast> = -1;

        r0.<com.android.server.am.ProcessRecord: int mCachedAdj> = -10000;

        r0.<com.android.server.am.ProcessRecord: boolean mCachedForegroundActivities> = 0;

        r0.<com.android.server.am.ProcessRecord: int mCachedProcState> = 19;

        r0.<com.android.server.am.ProcessRecord: int mCachedSchedGroup> = 0;

        return;
    }

    public void resetPackageList(com.android.server.am.ProcessStatsService)
    {
        com.android.server.am.ProcessRecord r0;
        com.android.server.am.ProcessStatsService r1;
        int i0, $i3, $i4, $i7, $i8, $i9, i11, i12;
        long l1, $l2, $l5, $l6, $l10;
        com.android.server.am.ProcessRecord$PackageList $r2, $r4, $r8, $r12, $r14, $r15, $r25, $r30, $r35, $r38;
        com.android.internal.app.procstats.ProcessState $r3, $r11, $r27, $r28, $r29, $r31, $r32, $r33, $r34;
        android.content.pm.ApplicationInfo $r5, $r7, $r17, $r18, $r19, $r20, $r23;
        com.android.internal.app.procstats.ProcessStats$ProcessStateHolder $r6, $r16, $r39, r40;
        java.lang.String $r9, $r21, $r22, $r24, $r36, $r37;
        android.util.ArrayMap $r13;

        r0 := @this: com.android.server.am.ProcessRecord;

        r1 := @parameter0: com.android.server.am.ProcessStatsService;

        $r2 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        i0 = virtualinvoke $r2.<com.android.server.am.ProcessRecord$PackageList: int size()>();

        $r3 = r0.<com.android.server.am.ProcessRecord: com.android.internal.app.procstats.ProcessState baseProcessTracker>;

        if $r3 == null goto label6;

        l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r11 = r0.<com.android.server.am.ProcessRecord: com.android.internal.app.procstats.ProcessState baseProcessTracker>;

        $i3 = virtualinvoke r1.<com.android.server.am.ProcessStatsService: int getMemFactorLocked()>();

        $r12 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        $r13 = $r12.<com.android.server.am.ProcessRecord$PackageList: android.util.ArrayMap mPkgList>;

        virtualinvoke $r11.<com.android.internal.app.procstats.ProcessState: void setState(int,int,long,android.util.ArrayMap)>(-1, $i3, l1, $r13);

        $r14 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        $i4 = virtualinvoke $r14.<com.android.server.am.ProcessRecord$PackageList: int size()>();

        i11 = $i4 - 1;

     label1:
        if i11 < 0 goto label2;

        $i8 = r0.<com.android.server.am.ProcessRecord: int uid>;

        $r36 = r0.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r35 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        $r37 = virtualinvoke $r35.<com.android.server.am.ProcessRecord$PackageList: java.lang.String keyAt(int)>(i11);

        $i9 = staticinvoke <android.app.ActivityManager: int processStateAmToProto(int)>(-1);

        $r38 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        $r39 = virtualinvoke $r38.<com.android.server.am.ProcessRecord$PackageList: com.android.internal.app.procstats.ProcessStats$ProcessStateHolder valueAt(int)>(i11);

        $l10 = $r39.<com.android.internal.app.procstats.ProcessStats$ProcessStateHolder: long appVersion>;

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int,java.lang.String,java.lang.String,int,long)>(3, $i8, $r36, $r37, $i9, $l10);

        i11 = i11 + -1;

        goto label1;

     label2:
        if i0 == 1 goto label7;

        i12 = 0;

     label3:
        if i12 >= i0 goto label5;

        $r30 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        r40 = virtualinvoke $r30.<com.android.server.am.ProcessRecord$PackageList: com.android.internal.app.procstats.ProcessStats$ProcessStateHolder valueAt(int)>(i12);

        $r31 = r40.<com.android.internal.app.procstats.ProcessStats$ProcessStateHolder: com.android.internal.app.procstats.ProcessState state>;

        if $r31 == null goto label4;

        $r33 = r40.<com.android.internal.app.procstats.ProcessStats$ProcessStateHolder: com.android.internal.app.procstats.ProcessState state>;

        $r32 = r0.<com.android.server.am.ProcessRecord: com.android.internal.app.procstats.ProcessState baseProcessTracker>;

        if $r33 == $r32 goto label4;

        $r34 = r40.<com.android.internal.app.procstats.ProcessStats$ProcessStateHolder: com.android.internal.app.procstats.ProcessState state>;

        virtualinvoke $r34.<com.android.internal.app.procstats.ProcessState: void makeInactive()>();

     label4:
        i12 = i12 + 1;

        goto label3;

     label5:
        $r15 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        virtualinvoke $r15.<com.android.server.am.ProcessRecord$PackageList: void clear()>();

        $r16 = new com.android.internal.app.procstats.ProcessStats$ProcessStateHolder;

        $r17 = r0.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $l5 = $r17.<android.content.pm.ApplicationInfo: long longVersionCode>;

        specialinvoke $r16.<com.android.internal.app.procstats.ProcessStats$ProcessStateHolder: void <init>(long)>($l5);

        $r18 = r0.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r22 = $r18.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r19 = r0.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i7 = $r19.<android.content.pm.ApplicationInfo: int uid>;

        $r20 = r0.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $l6 = $r20.<android.content.pm.ApplicationInfo: long longVersionCode>;

        $r21 = r0.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        virtualinvoke r1.<com.android.server.am.ProcessStatsService: void updateProcessStateHolderLocked(com.android.internal.app.procstats.ProcessStats$ProcessStateHolder,java.lang.String,int,long,java.lang.String)>($r16, $r22, $i7, $l6, $r21);

        $r25 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        $r23 = r0.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r24 = $r23.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        virtualinvoke $r25.<com.android.server.am.ProcessRecord$PackageList: com.android.internal.app.procstats.ProcessStats$ProcessStateHolder put(java.lang.String,com.android.internal.app.procstats.ProcessStats$ProcessStateHolder)>($r24, $r16);

        $r28 = $r16.<com.android.internal.app.procstats.ProcessStats$ProcessStateHolder: com.android.internal.app.procstats.ProcessState state>;

        $r27 = r0.<com.android.server.am.ProcessRecord: com.android.internal.app.procstats.ProcessState baseProcessTracker>;

        if $r28 == $r27 goto label7;

        $r29 = $r16.<com.android.internal.app.procstats.ProcessStats$ProcessStateHolder: com.android.internal.app.procstats.ProcessState state>;

        virtualinvoke $r29.<com.android.internal.app.procstats.ProcessState: void makeActive()>();

        goto label7;

     label6:
        if i0 == 1 goto label7;

        $r4 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        virtualinvoke $r4.<com.android.server.am.ProcessRecord$PackageList: void clear()>();

        $r8 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        $r5 = r0.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r9 = $r5.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r6 = new com.android.internal.app.procstats.ProcessStats$ProcessStateHolder;

        $r7 = r0.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $l2 = $r7.<android.content.pm.ApplicationInfo: long longVersionCode>;

        specialinvoke $r6.<com.android.internal.app.procstats.ProcessStats$ProcessStateHolder: void <init>(long)>($l2);

        virtualinvoke $r8.<com.android.server.am.ProcessRecord$PackageList: com.android.internal.app.procstats.ProcessStats$ProcessStateHolder put(java.lang.String,com.android.internal.app.procstats.ProcessStats$ProcessStateHolder)>($r9, $r6);

        goto label7;

     label7:
        return;
    }

    void scheduleCrash(java.lang.String)
    {
        com.android.server.am.ProcessRecord r0;
        long l0;
        boolean $z0;
        android.app.IApplicationThread $r1, $r2;
        int $i1, $i2;
        java.lang.Throwable $r3;
        android.os.RemoteException $r4;
        java.lang.String $r8, r9;
        java.lang.StringBuilder r12;

        r0 := @this: com.android.server.am.ProcessRecord;

        r9 := @parameter0: java.lang.String;

        $z0 = r0.<com.android.server.am.ProcessRecord: boolean killedByAm>;

        if $z0 != 0 goto label9;

        $r1 = r0.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r1 == null goto label9;

        $i1 = r0.<com.android.server.am.ProcessRecord: int pid>;

        $i2 = staticinvoke <android.os.Process: int myPid()>();

        if $i1 != $i2 goto label1;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", "scheduleCrash: trying to crash system process!");

        return;

     label1:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label2:
        $r2 = r0.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        interfaceinvoke $r2.<android.app.IApplicationThread: void scheduleCrash(java.lang.String)>(r9);

     label3:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        goto label9;

     label4:
        $r3 := @caughtexception;

        goto label8;

     label5:
        $r4 := @caughtexception;

     label6:
        r12 = new java.lang.StringBuilder;

        specialinvoke r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("scheduleCrash for \'");

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' failed");

        $r8 = virtualinvoke r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.am.ProcessRecord: void kill(java.lang.String,int,boolean)>($r8, 4, 1);

     label7:
        goto label3;

     label8:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r3;

     label9:
        return;

        catch android.os.RemoteException from label2 to label3 with label5;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label6 to label7 with label4;
    }

    void setActiveInstrumentation(com.android.server.am.ActiveInstrumentation)
    {
        com.android.server.am.ProcessRecord r0;
        com.android.server.am.ActiveInstrumentation r1;
        com.android.server.wm.WindowProcessController r2;
        boolean $z0, z1, z2;

        r0 := @this: com.android.server.am.ProcessRecord;

        r1 := @parameter0: com.android.server.am.ActiveInstrumentation;

        r0.<com.android.server.am.ProcessRecord: com.android.server.am.ActiveInstrumentation mInstr> = r1;

        z1 = 1;

        if r1 == null goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        r2 = r0.<com.android.server.am.ProcessRecord: com.android.server.wm.WindowProcessController mWindowProcessController>;

        if z2 == 0 goto label3;

        $z0 = r1.<com.android.server.am.ActiveInstrumentation: boolean mHasBackgroundActivityStartsPermission>;

        if $z0 == 0 goto label3;

        goto label4;

     label3:
        z1 = 0;

     label4:
        virtualinvoke r2.<com.android.server.wm.WindowProcessController: void setInstrumenting(boolean,boolean)>(z2, z1);

        return;
    }

    void setCached(boolean)
    {
        com.android.server.am.ProcessRecord r0;
        boolean z0, $z1;
        com.android.server.wm.WindowProcessController $r1;

        r0 := @this: com.android.server.am.ProcessRecord;

        z0 := @parameter0: boolean;

        $z1 = r0.<com.android.server.am.ProcessRecord: boolean mCached>;

        if $z1 == z0 goto label1;

        r0.<com.android.server.am.ProcessRecord: boolean mCached> = z0;

        $r1 = r0.<com.android.server.am.ProcessRecord: com.android.server.wm.WindowProcessController mWindowProcessController>;

        virtualinvoke $r1.<com.android.server.wm.WindowProcessController: void onProcCachedStateChanged(boolean)>(z0);

     label1:
        return;
    }

    void setCrashing(boolean)
    {
        com.android.server.am.ProcessRecord r0;
        boolean z0;
        com.android.server.wm.WindowProcessController $r1;

        r0 := @this: com.android.server.am.ProcessRecord;

        z0 := @parameter0: boolean;

        r0.<com.android.server.am.ProcessRecord: boolean mCrashing> = z0;

        $r1 = r0.<com.android.server.am.ProcessRecord: com.android.server.wm.WindowProcessController mWindowProcessController>;

        virtualinvoke $r1.<com.android.server.wm.WindowProcessController: void setCrashing(boolean)>(z0);

        return;
    }

    void setCurProcState(int)
    {
        com.android.server.am.ProcessRecord r0;
        int i0;
        com.android.server.wm.WindowProcessController $r1;

        r0 := @this: com.android.server.am.ProcessRecord;

        i0 := @parameter0: int;

        r0.<com.android.server.am.ProcessRecord: int mCurProcState> = i0;

        $r1 = r0.<com.android.server.am.ProcessRecord: com.android.server.wm.WindowProcessController mWindowProcessController>;

        virtualinvoke $r1.<com.android.server.wm.WindowProcessController: void setCurrentProcState(int)>(i0);

        return;
    }

    void setCurRawAdj(int)
    {
        com.android.server.am.ProcessRecord r0;
        int i0;
        com.android.server.wm.WindowProcessController r1;
        boolean z0;

        r0 := @this: com.android.server.am.ProcessRecord;

        i0 := @parameter0: int;

        r0.<com.android.server.am.ProcessRecord: int mCurRawAdj> = i0;

        r1 = r0.<com.android.server.am.ProcessRecord: com.android.server.wm.WindowProcessController mWindowProcessController>;

        if i0 > 200 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        virtualinvoke r1.<com.android.server.wm.WindowProcessController: void setPerceptible(boolean)>(z0);

        return;
    }

    void setCurRawProcState(int)
    {
        com.android.server.am.ProcessRecord r0;
        int i0;

        r0 := @this: com.android.server.am.ProcessRecord;

        i0 := @parameter0: int;

        r0.<com.android.server.am.ProcessRecord: int mCurRawProcState> = i0;

        return;
    }

    void setCurrentSchedulingGroup(int)
    {
        com.android.server.am.ProcessRecord r0;
        int i0;
        com.android.server.wm.WindowProcessController $r1;

        r0 := @this: com.android.server.am.ProcessRecord;

        i0 := @parameter0: int;

        r0.<com.android.server.am.ProcessRecord: int mCurSchedGroup> = i0;

        $r1 = r0.<com.android.server.am.ProcessRecord: com.android.server.wm.WindowProcessController mWindowProcessController>;

        virtualinvoke $r1.<com.android.server.wm.WindowProcessController: void setCurrentSchedulingGroup(int)>(i0);

        return;
    }

    void setDebugging(boolean)
    {
        com.android.server.am.ProcessRecord r0;
        boolean z0;
        com.android.server.wm.WindowProcessController $r1;

        r0 := @this: com.android.server.am.ProcessRecord;

        z0 := @parameter0: boolean;

        r0.<com.android.server.am.ProcessRecord: boolean mDebugging> = z0;

        $r1 = r0.<com.android.server.am.ProcessRecord: com.android.server.wm.WindowProcessController mWindowProcessController>;

        virtualinvoke $r1.<com.android.server.wm.WindowProcessController: void setDebugging(boolean)>(z0);

        return;
    }

    void setFgInteractionTime(long)
    {
        com.android.server.am.ProcessRecord r0;
        long l0;
        com.android.server.wm.WindowProcessController $r1;

        r0 := @this: com.android.server.am.ProcessRecord;

        l0 := @parameter0: long;

        r0.<com.android.server.am.ProcessRecord: long mFgInteractionTime> = l0;

        $r1 = r0.<com.android.server.am.ProcessRecord: com.android.server.wm.WindowProcessController mWindowProcessController>;

        virtualinvoke $r1.<com.android.server.wm.WindowProcessController: void setFgInteractionTime(long)>(l0);

        return;
    }

    void setHasClientActivities(boolean)
    {
        com.android.server.am.ProcessRecord r0;
        boolean z0;
        com.android.server.wm.WindowProcessController $r1;

        r0 := @this: com.android.server.am.ProcessRecord;

        z0 := @parameter0: boolean;

        r0.<com.android.server.am.ProcessRecord: boolean mHasClientActivities> = z0;

        $r1 = r0.<com.android.server.am.ProcessRecord: com.android.server.wm.WindowProcessController mWindowProcessController>;

        virtualinvoke $r1.<com.android.server.wm.WindowProcessController: void setHasClientActivities(boolean)>(z0);

        return;
    }

    void setHasForegroundActivities(boolean)
    {
        com.android.server.am.ProcessRecord r0;
        boolean z0;
        com.android.server.wm.WindowProcessController $r1;

        r0 := @this: com.android.server.am.ProcessRecord;

        z0 := @parameter0: boolean;

        r0.<com.android.server.am.ProcessRecord: boolean mHasForegroundActivities> = z0;

        $r1 = r0.<com.android.server.am.ProcessRecord: com.android.server.wm.WindowProcessController mWindowProcessController>;

        virtualinvoke $r1.<com.android.server.wm.WindowProcessController: void setHasForegroundActivities(boolean)>(z0);

        return;
    }

    void setHasForegroundServices(boolean, int)
    {
        com.android.server.am.ProcessRecord r0;
        boolean z0;
        int i0;
        com.android.server.wm.WindowProcessController $r1;

        r0 := @this: com.android.server.am.ProcessRecord;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        r0.<com.android.server.am.ProcessRecord: boolean mHasForegroundServices> = z0;

        r0.<com.android.server.am.ProcessRecord: int mFgServiceTypes> = i0;

        $r1 = r0.<com.android.server.am.ProcessRecord: com.android.server.wm.WindowProcessController mWindowProcessController>;

        virtualinvoke $r1.<com.android.server.wm.WindowProcessController: void setHasForegroundServices(boolean)>(z0);

        return;
    }

    void setHasOverlayUi(boolean)
    {
        com.android.server.am.ProcessRecord r0;
        boolean z0;
        com.android.server.wm.WindowProcessController $r1;

        r0 := @this: com.android.server.am.ProcessRecord;

        z0 := @parameter0: boolean;

        r0.<com.android.server.am.ProcessRecord: boolean mHasOverlayUi> = z0;

        $r1 = r0.<com.android.server.am.ProcessRecord: com.android.server.wm.WindowProcessController mWindowProcessController>;

        virtualinvoke $r1.<com.android.server.wm.WindowProcessController: void setHasOverlayUi(boolean)>(z0);

        return;
    }

    void setHasTopUi(boolean)
    {
        com.android.server.am.ProcessRecord r0;
        boolean z0;
        com.android.server.wm.WindowProcessController $r1;

        r0 := @this: com.android.server.am.ProcessRecord;

        z0 := @parameter0: boolean;

        r0.<com.android.server.am.ProcessRecord: boolean mHasTopUi> = z0;

        $r1 = r0.<com.android.server.am.ProcessRecord: com.android.server.wm.WindowProcessController mWindowProcessController>;

        virtualinvoke $r1.<com.android.server.wm.WindowProcessController: void setHasTopUi(boolean)>(z0);

        return;
    }

    void setInteractionEventTime(long)
    {
        com.android.server.am.ProcessRecord r0;
        long l0;
        com.android.server.wm.WindowProcessController $r1;

        r0 := @this: com.android.server.am.ProcessRecord;

        l0 := @parameter0: long;

        r0.<com.android.server.am.ProcessRecord: long mInteractionEventTime> = l0;

        $r1 = r0.<com.android.server.am.ProcessRecord: com.android.server.wm.WindowProcessController mWindowProcessController>;

        virtualinvoke $r1.<com.android.server.wm.WindowProcessController: void setInteractionEventTime(long)>(l0);

        return;
    }

    void setNotResponding(boolean)
    {
        com.android.server.am.ProcessRecord r0;
        boolean z0;
        com.android.server.wm.WindowProcessController $r1;

        r0 := @this: com.android.server.am.ProcessRecord;

        z0 := @parameter0: boolean;

        r0.<com.android.server.am.ProcessRecord: boolean mNotResponding> = z0;

        $r1 = r0.<com.android.server.am.ProcessRecord: com.android.server.wm.WindowProcessController mWindowProcessController>;

        virtualinvoke $r1.<com.android.server.wm.WindowProcessController: void setNotResponding(boolean)>(z0);

        return;
    }

    public void setPendingUiClean(boolean)
    {
        com.android.server.am.ProcessRecord r0;
        boolean z0;
        com.android.server.am.ActivityManagerService r1;
        com.android.server.wm.WindowProcessController $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.am.ProcessRecord;

        z0 := @parameter0: boolean;

        r1 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ActivityManagerService mService>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        r0.<com.android.server.am.ProcessRecord: boolean mPendingUiClean> = z0;

        $r3 = r0.<com.android.server.am.ProcessRecord: com.android.server.wm.WindowProcessController mWindowProcessController>;

        virtualinvoke $r3.<com.android.server.wm.WindowProcessController: void setPendingUiClean(boolean)>(z0);

        exitmonitor r1;

     label2:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void setPendingUiCleanAndForceProcessStateUpTo(int)
    {
        com.android.server.am.ProcessRecord r0;
        int i0;
        com.android.server.am.ActivityManagerService r1;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.am.ProcessRecord;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ActivityManagerService mService>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        virtualinvoke r0.<com.android.server.am.ProcessRecord: void setPendingUiClean(boolean)>(1);

        virtualinvoke r0.<com.android.server.am.ProcessRecord: void forceProcessStateUpTo(int)>(i0);

        exitmonitor r1;

     label2:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    void setPersistent(boolean)
    {
        com.android.server.am.ProcessRecord r0;
        boolean z0;
        com.android.server.wm.WindowProcessController $r1;

        r0 := @this: com.android.server.am.ProcessRecord;

        z0 := @parameter0: boolean;

        r0.<com.android.server.am.ProcessRecord: boolean mPersistent> = z0;

        $r1 = r0.<com.android.server.am.ProcessRecord: com.android.server.wm.WindowProcessController mWindowProcessController>;

        virtualinvoke $r1.<com.android.server.wm.WindowProcessController: void setPersistent(boolean)>(z0);

        return;
    }

    public void setPid(int)
    {
        com.android.server.am.ProcessRecord r0;
        int i0;
        com.android.server.wm.WindowProcessController $r1;

        r0 := @this: com.android.server.am.ProcessRecord;

        i0 := @parameter0: int;

        r0.<com.android.server.am.ProcessRecord: int pid> = i0;

        $r1 = r0.<com.android.server.am.ProcessRecord: com.android.server.wm.WindowProcessController mWindowProcessController>;

        virtualinvoke $r1.<com.android.server.wm.WindowProcessController: void setPid(int)>(i0);

        r0.<com.android.server.am.ProcessRecord: java.lang.String procStatFile> = null;

        r0.<com.android.server.am.ProcessRecord: java.lang.String shortStringName> = null;

        r0.<com.android.server.am.ProcessRecord: java.lang.String stringName> = null;

        return;
    }

    void setReportedForegroundServiceTypes(int)
    {
        com.android.server.am.ProcessRecord r0;
        int i0;

        r0 := @this: com.android.server.am.ProcessRecord;

        i0 := @parameter0: int;

        r0.<com.android.server.am.ProcessRecord: int mRepFgServiceTypes> = i0;

        return;
    }

    void setReportedProcState(int)
    {
        com.android.server.am.ProcessRecord r0;
        int i0, $i1, $i2, $i3, $i4, i6;
        com.android.server.am.ProcessRecord$PackageList $r1, $r3, $r6;
        com.android.server.wm.WindowProcessController $r2;
        java.lang.String $r4, $r5;
        com.android.internal.app.procstats.ProcessStats$ProcessStateHolder $r7;
        long $l5;

        r0 := @this: com.android.server.am.ProcessRecord;

        i0 := @parameter0: int;

        r0.<com.android.server.am.ProcessRecord: int mRepProcState> = i0;

        $r1 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        $i1 = virtualinvoke $r1.<com.android.server.am.ProcessRecord$PackageList: int size()>();

        i6 = $i1 - 1;

     label1:
        if i6 < 0 goto label2;

        $i2 = r0.<com.android.server.am.ProcessRecord: int uid>;

        $r4 = r0.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r3 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        $r5 = virtualinvoke $r3.<com.android.server.am.ProcessRecord$PackageList: java.lang.String keyAt(int)>(i6);

        $i3 = r0.<com.android.server.am.ProcessRecord: int mRepProcState>;

        $i4 = staticinvoke <android.app.ActivityManager: int processStateAmToProto(int)>($i3);

        $r6 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ProcessRecord$PackageList pkgList>;

        $r7 = virtualinvoke $r6.<com.android.server.am.ProcessRecord$PackageList: com.android.internal.app.procstats.ProcessStats$ProcessStateHolder valueAt(int)>(i6);

        $l5 = $r7.<com.android.internal.app.procstats.ProcessStats$ProcessStateHolder: long appVersion>;

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int,java.lang.String,java.lang.String,int,long)>(3, $i2, $r4, $r5, $i4, $l5);

        i6 = i6 + -1;

        goto label1;

     label2:
        $r2 = r0.<com.android.server.am.ProcessRecord: com.android.server.wm.WindowProcessController mWindowProcessController>;

        virtualinvoke $r2.<com.android.server.wm.WindowProcessController: void setReportedProcState(int)>(i0);

        return;
    }

    public void setRequiredAbi(java.lang.String)
    {
        com.android.server.am.ProcessRecord r0;
        java.lang.String r1;
        com.android.server.wm.WindowProcessController $r2;

        r0 := @this: com.android.server.am.ProcessRecord;

        r1 := @parameter0: java.lang.String;

        r0.<com.android.server.am.ProcessRecord: java.lang.String mRequiredAbi> = r1;

        $r2 = r0.<com.android.server.am.ProcessRecord: com.android.server.wm.WindowProcessController mWindowProcessController>;

        virtualinvoke $r2.<com.android.server.wm.WindowProcessController: void setRequiredAbi(java.lang.String)>(r1);

        return;
    }

    public void setRunningRemoteAnimation(boolean)
    {
        com.android.server.am.ProcessRecord r0;
        boolean z0, $z1;
        com.android.server.am.ActivityManagerService r1, $r3;
        int $i0, $i1;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.am.ProcessRecord;

        z0 := @parameter0: boolean;

        $i0 = r0.<com.android.server.am.ProcessRecord: int pid>;

        $i1 = staticinvoke <android.os.Process: int myPid()>();

        if $i0 != $i1 goto label1;

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("ActivityManager", "system can\'t run remote animation");

        return;

     label1:
        r1 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ActivityManagerService mService>;

        entermonitor r1;

     label2:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $z1 = r0.<com.android.server.am.ProcessRecord: boolean runningRemoteAnimation>;

        if $z1 != z0 goto label4;

        exitmonitor r1;

     label3:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label4:
        r0.<com.android.server.am.ProcessRecord: boolean runningRemoteAnimation> = z0;

        $r3 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ActivityManagerService mService>;

        virtualinvoke $r3.<com.android.server.am.ActivityManagerService: boolean updateOomAdjLocked(com.android.server.am.ProcessRecord,boolean,java.lang.String)>(r0, 1, "updateOomAdj_uiVisibility");

        exitmonitor r1;

     label5:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label6:
        $r4 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r4;

        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    void setStartParams(int, com.android.server.am.HostingRecord, java.lang.String, long)
    {
        com.android.server.am.ProcessRecord r0;
        int i0;
        com.android.server.am.HostingRecord r1;
        java.lang.String r2;
        long l1;

        r0 := @this: com.android.server.am.ProcessRecord;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.server.am.HostingRecord;

        r2 := @parameter2: java.lang.String;

        l1 := @parameter3: long;

        r0.<com.android.server.am.ProcessRecord: int startUid> = i0;

        r0.<com.android.server.am.ProcessRecord: com.android.server.am.HostingRecord hostingRecord> = r1;

        r0.<com.android.server.am.ProcessRecord: java.lang.String seInfo> = r2;

        r0.<com.android.server.am.ProcessRecord: long startTime> = l1;

        return;
    }

    void setUsingWrapper(boolean)
    {
        com.android.server.am.ProcessRecord r0;
        boolean z0;
        com.android.server.wm.WindowProcessController $r1;

        r0 := @this: com.android.server.am.ProcessRecord;

        z0 := @parameter0: boolean;

        r0.<com.android.server.am.ProcessRecord: boolean mUsingWrapper> = z0;

        $r1 = r0.<com.android.server.am.ProcessRecord: com.android.server.wm.WindowProcessController mWindowProcessController>;

        virtualinvoke $r1.<com.android.server.wm.WindowProcessController: void setUsingWrapper(boolean)>(z0);

        return;
    }

    void setWhenUnimportant(long)
    {
        com.android.server.am.ProcessRecord r0;
        long l0;
        com.android.server.wm.WindowProcessController $r1;

        r0 := @this: com.android.server.am.ProcessRecord;

        l0 := @parameter0: long;

        r0.<com.android.server.am.ProcessRecord: long mWhenUnimportant> = l0;

        $r1 = r0.<com.android.server.am.ProcessRecord: com.android.server.wm.WindowProcessController mWindowProcessController>;

        virtualinvoke $r1.<com.android.server.wm.WindowProcessController: void setWhenUnimportant(long)>(l0);

        return;
    }

    void startAppProblemLocked()
    {
        com.android.server.am.ProcessRecord r0;
        int[] r1;
        int i0, i1, $i2, $i3, i4;
        com.android.server.am.ActivityManagerService $r2, $r4, $r5;
        com.android.server.am.UserController $r3;
        android.content.pm.ApplicationInfo $r6, $r7;
        java.lang.String $r8;
        android.content.Context $r9;
        android.content.ComponentName $r10;

        r0 := @this: com.android.server.am.ProcessRecord;

        r0.<com.android.server.am.ProcessRecord: android.content.ComponentName errorReportReceiver> = null;

        $r2 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ActivityManagerService mService>;

        $r3 = $r2.<com.android.server.am.ActivityManagerService: com.android.server.am.UserController mUserController>;

        r1 = virtualinvoke $r3.<com.android.server.am.UserController: int[] getCurrentProfileIds()>();

        i0 = lengthof r1;

        i4 = 0;

     label1:
        if i4 >= i0 goto label3;

        i1 = r1[i4];

        $i2 = r0.<com.android.server.am.ProcessRecord: int userId>;

        if $i2 != i1 goto label2;

        $r5 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ActivityManagerService mService>;

        $r9 = $r5.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r6 = r0.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r8 = $r6.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r7 = r0.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i3 = $r7.<android.content.pm.ApplicationInfo: int flags>;

        $r10 = staticinvoke <android.app.ApplicationErrorReport: android.content.ComponentName getErrorReportReceiver(android.content.Context,java.lang.String,int)>($r9, $r8, $i3);

        r0.<com.android.server.am.ProcessRecord: android.content.ComponentName errorReportReceiver> = $r10;

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        $r4 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ActivityManagerService mService>;

        virtualinvoke $r4.<com.android.server.am.ActivityManagerService: void skipCurrentReceiverLocked(com.android.server.am.ProcessRecord)>(r0);

        return;
    }

    boolean startService(com.android.server.am.ServiceRecord)
    {
        com.android.server.am.ProcessRecord r0;
        com.android.server.am.ServiceRecord r1;
        boolean z0;
        android.util.ArraySet $r2;
        android.content.pm.ServiceInfo $r3, $r4;
        com.android.server.wm.WindowProcessController $r5;

        r0 := @this: com.android.server.am.ProcessRecord;

        r1 := @parameter0: com.android.server.am.ServiceRecord;

        if r1 != null goto label1;

        return 0;

     label1:
        $r2 = r0.<com.android.server.am.ProcessRecord: android.util.ArraySet mServices>;

        z0 = virtualinvoke $r2.<android.util.ArraySet: boolean add(java.lang.Object)>(r1);

        if z0 == 0 goto label2;

        $r3 = r1.<com.android.server.am.ServiceRecord: android.content.pm.ServiceInfo serviceInfo>;

        if $r3 == null goto label2;

        $r5 = r0.<com.android.server.am.ProcessRecord: com.android.server.wm.WindowProcessController mWindowProcessController>;

        $r4 = r1.<com.android.server.am.ServiceRecord: android.content.pm.ServiceInfo serviceInfo>;

        virtualinvoke $r5.<com.android.server.wm.WindowProcessController: void onServiceStarted(android.content.pm.ServiceInfo)>($r4);

     label2:
        return z0;
    }

    void stopAllServices()
    {
        com.android.server.am.ProcessRecord r0;
        android.util.ArraySet $r1;

        r0 := @this: com.android.server.am.ProcessRecord;

        $r1 = r0.<com.android.server.am.ProcessRecord: android.util.ArraySet mServices>;

        virtualinvoke $r1.<android.util.ArraySet: void clear()>();

        return;
    }

    boolean stopService(com.android.server.am.ServiceRecord)
    {
        com.android.server.am.ProcessRecord r0;
        com.android.server.am.ServiceRecord r1;
        android.util.ArraySet $r2;
        boolean $z0;

        r0 := @this: com.android.server.am.ProcessRecord;

        r1 := @parameter0: com.android.server.am.ServiceRecord;

        $r2 = r0.<com.android.server.am.ProcessRecord: android.util.ArraySet mServices>;

        $z0 = virtualinvoke $r2.<android.util.ArraySet: boolean remove(java.lang.Object)>(r1);

        return $z0;
    }

    public java.lang.String toShortString()
    {
        com.android.server.am.ProcessRecord r0;
        java.lang.StringBuilder $r1;
        java.lang.String r2, r4;

        r0 := @this: com.android.server.am.ProcessRecord;

        r2 = r0.<com.android.server.am.ProcessRecord: java.lang.String shortStringName>;

        if r2 == null goto label1;

        return r2;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>(128);

        virtualinvoke r0.<com.android.server.am.ProcessRecord: void toShortString(java.lang.StringBuilder)>($r1);

        r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.android.server.am.ProcessRecord: java.lang.String shortStringName> = r4;

        return r4;
    }

    void toShortString(java.lang.StringBuilder)
    {
        com.android.server.am.ProcessRecord r0;
        java.lang.StringBuilder r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        java.lang.String $r4;
        android.content.pm.ApplicationInfo $r7, $r10, $r13;

        r0 := @this: com.android.server.am.ProcessRecord;

        r1 := @parameter0: java.lang.StringBuilder;

        $i1 = r0.<com.android.server.am.ProcessRecord: int pid>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $r4 = r0.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47);

        $r7 = r0.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i2 = $r7.<android.content.pm.ApplicationInfo: int uid>;

        if $i2 >= 10000 goto label1;

        $i11 = r0.<com.android.server.am.ProcessRecord: int uid>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        goto label4;

     label1:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(117);

        $i3 = r0.<com.android.server.am.ProcessRecord: int userId>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r10 = r0.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i4 = $r10.<android.content.pm.ApplicationInfo: int uid>;

        i0 = staticinvoke <android.os.UserHandle: int getAppId(int)>($i4);

        if i0 < 10000 goto label2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(97);

        $i10 = i0 - 10000;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        goto label3;

     label2:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(115);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

     label3:
        $i6 = r0.<com.android.server.am.ProcessRecord: int uid>;

        $r13 = r0.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i5 = $r13.<android.content.pm.ApplicationInfo: int uid>;

        if $i6 == $i5 goto label4;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(105);

        $i7 = r0.<com.android.server.am.ProcessRecord: int uid>;

        $i8 = staticinvoke <android.os.UserHandle: int getAppId(int)>($i7);

        $i9 = $i8 - 99000;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

     label4:
        return;
    }

    public java.lang.String toString()
    {
        com.android.server.am.ProcessRecord r0;
        java.lang.StringBuilder $r1;
        int $i0;
        java.lang.String $r3, r7, r9;

        r0 := @this: com.android.server.am.ProcessRecord;

        r7 = r0.<com.android.server.am.ProcessRecord: java.lang.String stringName>;

        if r7 == null goto label1;

        return r7;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>(128);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ProcessRecord{");

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke r0.<com.android.server.am.ProcessRecord: void toShortString(java.lang.StringBuilder)>($r1);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        r9 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.android.server.am.ProcessRecord: java.lang.String stringName> = r9;

        return r9;
    }

    public void unlinkDeathRecipient()
    {
        com.android.server.am.ProcessRecord r0;
        android.app.IApplicationThread r1;
        android.os.IBinder$DeathRecipient $r2, $r4;
        android.os.IBinder $r3;

        r0 := @this: com.android.server.am.ProcessRecord;

        $r2 = r0.<com.android.server.am.ProcessRecord: android.os.IBinder$DeathRecipient deathRecipient>;

        if $r2 == null goto label1;

        r1 = r0.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if r1 == null goto label1;

        $r3 = interfaceinvoke r1.<android.app.IApplicationThread: android.os.IBinder asBinder()>();

        $r4 = r0.<com.android.server.am.ProcessRecord: android.os.IBinder$DeathRecipient deathRecipient>;

        interfaceinvoke $r3.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r4, 0);

     label1:
        r0.<com.android.server.am.ProcessRecord: android.os.IBinder$DeathRecipient deathRecipient> = null;

        return;
    }

    void updateBoundClientUids()
    {
        com.android.server.am.ProcessRecord r0;
        int i0, i1, $i2, $i3, i4, i5, i6;
        android.util.ArrayMap r2;
        java.util.ArrayList r3;
        android.util.ArraySet $r4, $r5, $r6, $r8;
        boolean $z0;
        com.android.server.wm.WindowProcessController $r7;
        java.lang.Object $r9, $r11, $r12;
        com.android.server.am.ServiceRecord $r10;
        com.android.server.am.ConnectionRecord $r13;
        java.lang.Integer $r14;

        r0 := @this: com.android.server.am.ProcessRecord;

        $r4 = r0.<com.android.server.am.ProcessRecord: android.util.ArraySet mServices>;

        $z0 = virtualinvoke $r4.<android.util.ArraySet: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<com.android.server.am.ProcessRecord: void clearBoundClientUids()>();

        return;

     label1:
        $r5 = new android.util.ArraySet;

        specialinvoke $r5.<android.util.ArraySet: void <init>()>();

        $r6 = r0.<com.android.server.am.ProcessRecord: android.util.ArraySet mServices>;

        i0 = virtualinvoke $r6.<android.util.ArraySet: int size()>();

        i4 = 0;

     label2:
        if i4 >= i0 goto label7;

        $r8 = r0.<com.android.server.am.ProcessRecord: android.util.ArraySet mServices>;

        $r9 = virtualinvoke $r8.<android.util.ArraySet: java.lang.Object valueAt(int)>(i4);

        $r10 = (com.android.server.am.ServiceRecord) $r9;

        r2 = virtualinvoke $r10.<com.android.server.am.ServiceRecord: android.util.ArrayMap getConnections()>();

        i1 = virtualinvoke r2.<android.util.ArrayMap: int size()>();

        i5 = 0;

     label3:
        if i5 >= i1 goto label6;

        $r11 = virtualinvoke r2.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i5);

        r3 = (java.util.ArrayList) $r11;

        i6 = 0;

     label4:
        $i2 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        if i6 >= $i2 goto label5;

        $r12 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i6);

        $r13 = (com.android.server.am.ConnectionRecord) $r12;

        $i3 = $r13.<com.android.server.am.ConnectionRecord: int clientUid>;

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        virtualinvoke $r5.<android.util.ArraySet: boolean add(java.lang.Object)>($r14);

        i6 = i6 + 1;

        goto label4;

     label5:
        i5 = i5 + 1;

        goto label3;

     label6:
        i4 = i4 + 1;

        goto label2;

     label7:
        r0.<com.android.server.am.ProcessRecord: android.util.ArraySet mBoundClientUids> = $r5;

        $r7 = r0.<com.android.server.am.ProcessRecord: com.android.server.wm.WindowProcessController mWindowProcessController>;

        virtualinvoke $r7.<com.android.server.wm.WindowProcessController: void setBoundClientUids(android.util.ArraySet)>($r5);

        return;
    }

    void updateHasAboveClientLocked()
    {
        com.android.server.am.ProcessRecord r0;
        android.util.ArraySet $r1, $r2;
        int $i0, $i1, $i2, i3;
        java.lang.Object $r3;
        com.android.server.am.ConnectionRecord $r4;

        r0 := @this: com.android.server.am.ProcessRecord;

        r0.<com.android.server.am.ProcessRecord: boolean hasAboveClient> = 0;

        $r1 = r0.<com.android.server.am.ProcessRecord: android.util.ArraySet connections>;

        $i0 = virtualinvoke $r1.<android.util.ArraySet: int size()>();

        i3 = $i0 - 1;

     label1:
        if i3 < 0 goto label3;

        $r2 = r0.<com.android.server.am.ProcessRecord: android.util.ArraySet connections>;

        $r3 = virtualinvoke $r2.<android.util.ArraySet: java.lang.Object valueAt(int)>(i3);

        $r4 = (com.android.server.am.ConnectionRecord) $r3;

        $i1 = $r4.<com.android.server.am.ConnectionRecord: int flags>;

        $i2 = $i1 & 8;

        if $i2 == 0 goto label2;

        r0.<com.android.server.am.ProcessRecord: boolean hasAboveClient> = 1;

        goto label3;

     label2:
        i3 = i3 + -1;

        goto label1;

     label3:
        return;
    }

    public void updateProcessInfo(boolean, boolean, boolean)
    {
        com.android.server.am.ProcessRecord r0;
        boolean z0, z1, z2;
        com.android.server.am.ActivityManagerService r1, $r3, $r5, $r6;
        com.android.server.am.ProcessList $r4;
        com.android.server.am.ActiveServices $r7;
        java.lang.Throwable $r8;

        r0 := @this: com.android.server.am.ProcessRecord;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        z2 := @parameter2: boolean;

        r1 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ActivityManagerService mService>;

        entermonitor r1;

     label01:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

     label02:
        if z0 == 0 goto label04;

     label03:
        $r6 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ActivityManagerService mService>;

        $r7 = $r6.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveServices mServices>;

        virtualinvoke $r7.<com.android.server.am.ActiveServices: void updateServiceConnectionActivitiesLocked(com.android.server.am.ProcessRecord)>(r0);

     label04:
        $r3 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ActivityManagerService mService>;

        $r4 = $r3.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        virtualinvoke $r4.<com.android.server.am.ProcessList: void updateLruProcessLocked(com.android.server.am.ProcessRecord,boolean,com.android.server.am.ProcessRecord)>(r0, z1, null);

     label05:
        if z2 == 0 goto label07;

     label06:
        $r5 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ActivityManagerService mService>;

        virtualinvoke $r5.<com.android.server.am.ActivityManagerService: void updateOomAdjLocked(com.android.server.am.ProcessRecord,java.lang.String)>(r0, "updateOomAdj_activityChange");

     label07:
        exitmonitor r1;

     label08:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label09:
        $r8 := @caughtexception;

     label10:
        exitmonitor r1;

     label11:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public void updateServiceConnectionActivities()
    {
        com.android.server.am.ProcessRecord r0;
        com.android.server.am.ActivityManagerService r1, $r3;
        com.android.server.am.ActiveServices $r4;
        java.lang.Throwable $r5;

        r0 := @this: com.android.server.am.ProcessRecord;

        r1 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ActivityManagerService mService>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r3 = r0.<com.android.server.am.ProcessRecord: com.android.server.am.ActivityManagerService mService>;

        $r4 = $r3.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveServices mServices>;

        virtualinvoke $r4.<com.android.server.am.ActiveServices: void updateServiceConnectionActivitiesLocked(com.android.server.am.ProcessRecord)>(r0);

        exitmonitor r1;

     label2:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public static void <clinit>()
    {
        <com.android.server.am.ProcessRecord: int VALUE_TRUE> = 1;

        <com.android.server.am.ProcessRecord: int VALUE_INVALID> = -1;

        <com.android.server.am.ProcessRecord: int VALUE_FALSE> = 0;

        <com.android.server.am.ProcessRecord: java.lang.String TAG> = "ActivityManager";

        return;
    }
}
