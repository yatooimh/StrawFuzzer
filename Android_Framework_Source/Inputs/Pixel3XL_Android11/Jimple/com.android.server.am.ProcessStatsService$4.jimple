class com.android.server.am.ProcessStatsService$4 extends java.lang.Thread
{
    final com.android.server.am.ProcessStatsService this$0;
    final android.os.ParcelFileDescriptor[] val$fds;
    final byte[] val$outData;

    void <init>(com.android.server.am.ProcessStatsService, java.lang.String, android.os.ParcelFileDescriptor[], byte[])
    {
        com.android.server.am.ProcessStatsService$4 r0;
        com.android.server.am.ProcessStatsService r1;
        java.lang.String r2;
        android.os.ParcelFileDescriptor[] r3;
        byte[] r4;

        r0 := @this: com.android.server.am.ProcessStatsService$4;

        r1 := @parameter0: com.android.server.am.ProcessStatsService;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.ParcelFileDescriptor[];

        r4 := @parameter3: byte[];

        r0.<com.android.server.am.ProcessStatsService$4: com.android.server.am.ProcessStatsService this$0> = r1;

        r0.<com.android.server.am.ProcessStatsService$4: android.os.ParcelFileDescriptor[] val$fds> = r3;

        r0.<com.android.server.am.ProcessStatsService$4: byte[] val$outData> = r4;

        specialinvoke r0.<java.lang.Thread: void <init>(java.lang.String)>(r2);

        return;
    }

    public void run()
    {
        com.android.server.am.ProcessStatsService$4 r0;
        android.os.ParcelFileDescriptor$AutoCloseOutputStream $r1;
        android.os.ParcelFileDescriptor[] $r2;
        android.os.ParcelFileDescriptor $r3;
        byte[] $r4;
        java.lang.Throwable $r5;

        r0 := @this: com.android.server.am.ProcessStatsService$4;

        $r1 = new android.os.ParcelFileDescriptor$AutoCloseOutputStream;

        $r2 = r0.<com.android.server.am.ProcessStatsService$4: android.os.ParcelFileDescriptor[] val$fds>;

        $r3 = $r2[1];

        specialinvoke $r1.<android.os.ParcelFileDescriptor$AutoCloseOutputStream: void <init>(android.os.ParcelFileDescriptor)>($r3);

     label1:
        $r4 = r0.<com.android.server.am.ProcessStatsService$4: byte[] val$outData>;

        virtualinvoke $r1.<java.io.FileOutputStream: void write(byte[])>($r4);

        virtualinvoke $r1.<java.io.FileOutputStream: void close()>();

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ProcessStatsService", "Failure writing pipe", $r5);

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }
}
