public final class com.android.server.am.ProcessStatsService extends com.android.internal.app.procstats.IProcessStats$Stub
{
    static final boolean DEBUG;
    static final int MAX_HISTORIC_STATES;
    static final java.lang.String STATE_FILE_CHECKIN_SUFFIX;
    static final java.lang.String STATE_FILE_PREFIX;
    static final java.lang.String STATE_FILE_SUFFIX;
    static final java.lang.String TAG;
    static long WRITE_PERIOD;
    final com.android.server.am.ActivityManagerService mAm;
    final java.io.File mBaseDir;
    boolean mCommitPending;
    android.util.AtomicFile mFile;
    java.lang.Boolean mInjectedScreenState;
    int mLastMemOnlyState;
    long mLastWriteTime;
    boolean mMemFactorLowered;
    android.os.Parcel mPendingWrite;
    boolean mPendingWriteCommitted;
    android.util.AtomicFile mPendingWriteFile;
    final java.lang.Object mPendingWriteLock;
    com.android.internal.app.procstats.ProcessStats mProcessStats;
    boolean mShuttingDown;
    final java.util.concurrent.locks.ReentrantLock mWriteLock;

    static void <clinit>()
    {
        <com.android.server.am.ProcessStatsService: java.lang.String TAG> = "ProcessStatsService";

        <com.android.server.am.ProcessStatsService: java.lang.String STATE_FILE_SUFFIX> = ".bin";

        <com.android.server.am.ProcessStatsService: java.lang.String STATE_FILE_PREFIX> = "state-";

        <com.android.server.am.ProcessStatsService: java.lang.String STATE_FILE_CHECKIN_SUFFIX> = ".ci";

        <com.android.server.am.ProcessStatsService: int MAX_HISTORIC_STATES> = 8;

        <com.android.server.am.ProcessStatsService: boolean DEBUG> = 0;

        <com.android.server.am.ProcessStatsService: long WRITE_PERIOD> = 1800000L;

        return;
    }

    public void <init>(com.android.server.am.ActivityManagerService, java.io.File)
    {
        com.android.server.am.ProcessStatsService r0;
        com.android.server.am.ActivityManagerService r1;
        java.io.File r2;
        java.util.concurrent.locks.ReentrantLock $r3;
        java.lang.Object $r4;
        com.android.internal.app.procstats.ProcessStats $r5;
        com.android.server.am.ProcessStatsService$1 $r6;

        r0 := @this: com.android.server.am.ProcessStatsService;

        r1 := @parameter0: com.android.server.am.ActivityManagerService;

        r2 := @parameter1: java.io.File;

        specialinvoke r0.<com.android.internal.app.procstats.IProcessStats$Stub: void <init>()>();

        r0.<com.android.server.am.ProcessStatsService: int mLastMemOnlyState> = -1;

        $r3 = new java.util.concurrent.locks.ReentrantLock;

        specialinvoke $r3.<java.util.concurrent.locks.ReentrantLock: void <init>()>();

        r0.<com.android.server.am.ProcessStatsService: java.util.concurrent.locks.ReentrantLock mWriteLock> = $r3;

        $r4 = new java.lang.Object;

        specialinvoke $r4.<java.lang.Object: void <init>()>();

        r0.<com.android.server.am.ProcessStatsService: java.lang.Object mPendingWriteLock> = $r4;

        r0.<com.android.server.am.ProcessStatsService: com.android.server.am.ActivityManagerService mAm> = r1;

        r0.<com.android.server.am.ProcessStatsService: java.io.File mBaseDir> = r2;

        virtualinvoke r2.<java.io.File: boolean mkdirs()>();

        $r5 = new com.android.internal.app.procstats.ProcessStats;

        specialinvoke $r5.<com.android.internal.app.procstats.ProcessStats: void <init>(boolean)>(1);

        r0.<com.android.server.am.ProcessStatsService: com.android.internal.app.procstats.ProcessStats mProcessStats> = $r5;

        specialinvoke r0.<com.android.server.am.ProcessStatsService: void updateFile()>();

        $r6 = new com.android.server.am.ProcessStatsService$1;

        specialinvoke $r6.<com.android.server.am.ProcessStatsService$1: void <init>(com.android.server.am.ProcessStatsService)>(r0);

        staticinvoke <android.os.SystemProperties: void addChangeCallback(java.lang.Runnable)>($r6);

        return;
    }

    private void dumpAggregatedStats(android.util.proto.ProtoOutputStream, long, int, long)
    {
        com.android.server.am.ProcessStatsService r0;
        android.util.proto.ProtoOutputStream r1;
        int i0, $i2, $i3, $i4;
        long l1, $l5, $l6, $l7, $l8, l9, l10;
        android.os.ParcelFileDescriptor r2;
        com.android.internal.app.procstats.ProcessStats $r4;
        android.os.ParcelFileDescriptor$AutoCloseInputStream $r5;
        java.lang.String $r6;

        r0 := @this: com.android.server.am.ProcessStatsService;

        r1 := @parameter0: android.util.proto.ProtoOutputStream;

        l9 := @parameter1: long;

        i0 := @parameter2: int;

        l1 := @parameter3: long;

        $i2 = i0 * 60;

        $i3 = $i2 * 60;

        $i4 = $i3 * 1000;

        $l7 = (long) $i4;

        $l5 = <com.android.internal.app.procstats.ProcessStats: long COMMIT_PERIOD>;

        $l6 = $l5 / 2L;

        $l8 = $l7 - $l6;

        r2 = virtualinvoke r0.<com.android.server.am.ProcessStatsService: android.os.ParcelFileDescriptor getStatsOverTime(long)>($l8);

        if r2 != null goto label1;

        return;

     label1:
        $r4 = new com.android.internal.app.procstats.ProcessStats;

        specialinvoke $r4.<com.android.internal.app.procstats.ProcessStats: void <init>(boolean)>(0);

        $r5 = new android.os.ParcelFileDescriptor$AutoCloseInputStream;

        specialinvoke $r5.<android.os.ParcelFileDescriptor$AutoCloseInputStream: void <init>(android.os.ParcelFileDescriptor)>(r2);

        virtualinvoke $r4.<com.android.internal.app.procstats.ProcessStats: void read(java.io.InputStream)>($r5);

        $r6 = $r4.<com.android.internal.app.procstats.ProcessStats: java.lang.String mReadError>;

        if $r6 == null goto label2;

        return;

     label2:
        l10 = virtualinvoke r1.<android.util.proto.ProtoOutputStream: long start(long)>(l9);

        virtualinvoke $r4.<com.android.internal.app.procstats.ProcessStats: void dumpDebug(android.util.proto.ProtoOutputStream,long,int)>(r1, l1, 15);

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void end(long)>(l10);

        return;
    }

    private void dumpAggregatedStats(java.io.PrintWriter, long, long, java.lang.String, boolean, boolean, boolean, boolean, boolean, int)
    {
        com.android.server.am.ProcessStatsService r0;
        java.io.PrintWriter r1;
        long l0, l1, $l3, $l4, $l5, $l6, $l7, $l8;
        java.lang.String r2, $r7, $r8;
        boolean z0, z1, z2, z3, z4, $z5;
        int i2;
        android.os.ParcelFileDescriptor r3;
        com.android.internal.app.procstats.ProcessStats $r5;
        android.os.ParcelFileDescriptor$AutoCloseInputStream $r6;

        r0 := @this: com.android.server.am.ProcessStatsService;

        r1 := @parameter0: java.io.PrintWriter;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        r2 := @parameter3: java.lang.String;

        z0 := @parameter4: boolean;

        z1 := @parameter5: boolean;

        z2 := @parameter6: boolean;

        z3 := @parameter7: boolean;

        z4 := @parameter8: boolean;

        i2 := @parameter9: int;

        $l3 = l0 * 60L;

        $l4 = $l3 * 60L;

        $l7 = $l4 * 1000L;

        $l5 = <com.android.internal.app.procstats.ProcessStats: long COMMIT_PERIOD>;

        $l6 = $l5 / 2L;

        $l8 = $l7 - $l6;

        r3 = virtualinvoke r0.<com.android.server.am.ProcessStatsService: android.os.ParcelFileDescriptor getStatsOverTime(long)>($l8);

        if r3 != null goto label1;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Unable to build stats!");

        return;

     label1:
        $r5 = new com.android.internal.app.procstats.ProcessStats;

        specialinvoke $r5.<com.android.internal.app.procstats.ProcessStats: void <init>(boolean)>(0);

        $r6 = new android.os.ParcelFileDescriptor$AutoCloseInputStream;

        specialinvoke $r6.<android.os.ParcelFileDescriptor$AutoCloseInputStream: void <init>(android.os.ParcelFileDescriptor)>(r3);

        virtualinvoke $r5.<com.android.internal.app.procstats.ProcessStats: void read(java.io.InputStream)>($r6);

        $r7 = $r5.<com.android.internal.app.procstats.ProcessStats: java.lang.String mReadError>;

        if $r7 == null goto label2;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("Failure reading: ");

        $r8 = $r5.<com.android.internal.app.procstats.ProcessStats: java.lang.String mReadError>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r8);

        return;

     label2:
        if z0 == 0 goto label3;

        virtualinvoke $r5.<com.android.internal.app.procstats.ProcessStats: void dumpCheckinLocked(java.io.PrintWriter,java.lang.String,int)>(r1, r2, i2);

        goto label6;

     label3:
        if z1 != 0 goto label5;

        if z2 == 0 goto label4;

        goto label5;

     label4:
        virtualinvoke $r5.<com.android.internal.app.procstats.ProcessStats: void dumpSummaryLocked(java.io.PrintWriter,java.lang.String,long,boolean)>(r1, r2, l1, z4);

        goto label6;

     label5:
        $z5 = z2 ^ 1;

        virtualinvoke $r5.<com.android.internal.app.procstats.ProcessStats: void dumpLocked(java.io.PrintWriter,java.lang.String,long,boolean,boolean,boolean,boolean,int)>(r1, r2, l1, $z5, z1, z3, z4, i2);

     label6:
        return;
    }

    private static void dumpHelp(java.io.PrintWriter)
    {
        java.io.PrintWriter r0;

        r0 := @parameter0: java.io.PrintWriter;

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("Process stats (procstats) dump options:");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("    [--checkin|-c|--csv] [--csv-screen] [--csv-proc] [--csv-mem]");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("    [--details] [--full-details] [--current] [--hours N] [--last N]");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("    [--max N] --active] [--commit] [--reset] [--clear] [--write] [-h]");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("    [--start-testing] [--stop-testing] ");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("    [--pretend-screen-on] [--pretend-screen-off] [--stop-pretend-screen]");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("    [<package.name>]");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("  --checkin: perform a checkin: print and delete old committed states.");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("  -c: print only state in checkin format.");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("  --csv: output data suitable for putting in a spreadsheet.");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("  --csv-screen: on, off.");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("  --csv-mem: norm, mod, low, crit.");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("  --csv-proc: pers, top, fore, vis, precept, backup,");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("    service, home, prev, cached");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("  --details: dump per-package details, not just summary.");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("  --full-details: dump all timing and active state details.");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("  --current: only dump current state.");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("  --hours: aggregate over about N last hours.");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("  --last: only show the last committed stats at index N (starting at 1).");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("  --max: for -a, max num of historical batches to print.");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("  --active: only show currently active processes/services.");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("  --commit: commit current stats to disk and reset to start new stats.");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("  --section: proc|pkg-proc|pkg-svc|pkg-asc|pkg-all|all ");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("    options can be combined to select desired stats");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("  --reset: reset current stats, without committing.");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("  --clear: clear all stats; does both --reset and deletes old stats.");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("  --write: write current in-memory stats to disk.");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("  --read: replace current stats with last-written stats.");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("  --start-testing: clear all stats and starting high frequency pss sampling.");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("  --stop-testing: stop high frequency pss sampling.");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("  --pretend-screen-on: pretend screen is on.");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("  --pretend-screen-off: pretend screen is off.");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("  --stop-pretend-screen: forget \"pretend screen\" and use the real state.");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("  -a: print everything.");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("  -h: print this help text.");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("  <package.name>: optional name of package to filter output by.");

        return;
    }

    private void dumpInner(java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.am.ProcessStatsService r0;
        long l0, l1, $l5;
        java.util.ArrayList r1, r197, r203;
        int[] $r2, r148, r149, r150, r191;
        android.util.AtomicFile $r3, $r16, $r25, $r62, r204;
        java.io.File $r4, $r11, $r17, $r22, $r26, r173, r205, r211, r217, r218;
        com.android.internal.app.procstats.ProcessStats $r5, $r6, $r20, $r63, $r64, r169, r206, r225;
        java.util.concurrent.locks.ReentrantLock $r7, $r8, $r145;
        int $i2, $i3, $i4, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, i25, i26, i27, i28, i29, i30, i31, i33, i34, i35, i36, i37, i38, i39, i40, i41;
        java.lang.Object $r9, $r18, $r65, $r200, $r208, $r212, $r220;
        java.lang.String $r10, $r14, $r15, $r19, $r21, $r23, $r24, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r57, $r66, $r67, $r68, $r69, $r70, $r71, $r75, $r78, $r80, $r81, $r85, $r88, $r90, $r91, $r95, $r98, $r100, $r116, $r118, $r130, $r132, $r138, $r140, r151, r152, r190, $r201, $r202, r207, $r209, $r210, $r213, r215, r216, $r221;
        boolean $z6, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32, z36, z37, z38, z39, z40, z41, z42, z43, z44, z45, z46, z47, z48, z49, z50, z51, z52, z53, z54, z55, z56, z57, z58, z60, z62, z63, z64, z65;
        java.lang.String[] $r27, $r72, $r82, $r92, r147, r154, r157, r160;
        char $c14;
        java.lang.StringBuilder $r54, $r73, $r83, $r93, $r114, $r128, $r136, r219;
        java.lang.Boolean $r58, $r59;
        com.android.server.am.ActivityManagerService $r60, $r61, r168, r171, r172, r175, r177, r179, r181, r183, r185, r187, r192, r194, r196, r223;
        java.lang.Throwable $r101, $r102, $r103, $r104, $r105, $r106, $r107, $r108, $r109, $r110, $r111, $r112, $r113, $r119, $r120, $r121, $r122, $r123, $r124, $r125, $r126, $r127, $r133, $r134, $r135, $r141, $r142, $r143, $r144, r174, r195, r214, r224;
        java.io.PrintWriter r146;
        boolean[] r153, r156, r159;

        r0 := @this: com.android.server.am.ProcessStatsService;

        r146 := @parameter0: java.io.PrintWriter;

        r147 := @parameter1: java.lang.String[];

        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        i25 = 0;

        z36 = 0;

        i26 = 0;

        $r2 = newarray (int)[2];

        $r2[0] = 0;

        $r2[1] = 4;

        r148 = $r2;

        r149 = newarray (int)[1];

        z37 = 0;

        r149[0] = 3;

        r150 = <com.android.internal.app.procstats.ProcessStats: int[] ALL_PROC_STATES>;

        if r147 == null goto label109;

        i27 = 0;

        i28 = 15;

        z38 = 1;

        z39 = 0;

        z40 = 0;

        r151 = null;

        z41 = 0;

        i29 = 2;

        i25 = 0;

        z42 = 0;

        z43 = 0;

        z44 = 0;

        z45 = 0;

        z46 = 0;

        z47 = 0;

     label001:
        $i12 = lengthof r147;

        if i27 >= $i12 goto label108;

        r152 = r147[i27];

        $r29 = "--checkin";

        $z8 = virtualinvoke $r29.<java.lang.String: boolean equals(java.lang.Object)>(r152);

        if $z8 == 0 goto label002;

        z36 = 1;

        goto label107;

     label002:
        $r30 = "-c";

        $z9 = virtualinvoke $r30.<java.lang.String: boolean equals(java.lang.Object)>(r152);

        if $z9 == 0 goto label003;

        z47 = 1;

        goto label107;

     label003:
        $r31 = "--csv";

        $z10 = virtualinvoke $r31.<java.lang.String: boolean equals(java.lang.Object)>(r152);

        if $z10 == 0 goto label004;

        z46 = 1;

        goto label107;

     label004:
        $r32 = "--csv-screen";

        $z11 = virtualinvoke $r32.<java.lang.String: boolean equals(java.lang.Object)>(r152);

        if $z11 == 0 goto label007;

        i27 = i27 + 1;

        $i24 = lengthof r147;

        if i27 < $i24 goto label005;

        virtualinvoke r146.<java.io.PrintWriter: void println(java.lang.String)>("Error: argument required for --csv-screen");

        staticinvoke <com.android.server.am.ProcessStatsService: void dumpHelp(java.io.PrintWriter)>(r146);

        return;

     label005:
        r153 = newarray (boolean)[1];

        r154 = newarray (java.lang.String)[1];

        $r92 = <com.android.internal.app.procstats.DumpUtils: java.lang.String[] ADJ_SCREEN_NAMES_CSV>;

        $r91 = r147[i27];

        r148 = staticinvoke <com.android.server.am.ProcessStatsService: int[] parseStateList(java.lang.String[],int,java.lang.String,boolean[],java.lang.String[])>($r92, 4, $r91, r153, r154);

        if r148 != null goto label006;

        $r93 = new java.lang.StringBuilder;

        specialinvoke $r93.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in \"");

        $r95 = r147[i27];

        virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r95);

        virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\": ");

        $r98 = r154[0];

        virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r98);

        $r100 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r146.<java.io.PrintWriter: void println(java.lang.String)>($r100);

        staticinvoke <com.android.server.am.ProcessStatsService: void dumpHelp(java.io.PrintWriter)>(r146);

        return;

     label006:
        z40 = r153[0];

        goto label107;

     label007:
        $r33 = "--csv-mem";

        $z12 = virtualinvoke $r33.<java.lang.String: boolean equals(java.lang.Object)>(r152);

        if $z12 == 0 goto label010;

        i27 = i27 + 1;

        $i23 = lengthof r147;

        if i27 < $i23 goto label008;

        virtualinvoke r146.<java.io.PrintWriter: void println(java.lang.String)>("Error: argument required for --csv-mem");

        staticinvoke <com.android.server.am.ProcessStatsService: void dumpHelp(java.io.PrintWriter)>(r146);

        return;

     label008:
        r156 = newarray (boolean)[1];

        r157 = newarray (java.lang.String)[1];

        $r82 = <com.android.internal.app.procstats.DumpUtils: java.lang.String[] ADJ_MEM_NAMES_CSV>;

        $r81 = r147[i27];

        r149 = staticinvoke <com.android.server.am.ProcessStatsService: int[] parseStateList(java.lang.String[],int,java.lang.String,boolean[],java.lang.String[])>($r82, 1, $r81, r156, r157);

        if r149 != null goto label009;

        $r83 = new java.lang.StringBuilder;

        specialinvoke $r83.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in \"");

        $r85 = r147[i27];

        virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r85);

        virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\": ");

        $r88 = r157[0];

        virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r88);

        $r90 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r146.<java.io.PrintWriter: void println(java.lang.String)>($r90);

        staticinvoke <com.android.server.am.ProcessStatsService: void dumpHelp(java.io.PrintWriter)>(r146);

        return;

     label009:
        z39 = r156[0];

        goto label107;

     label010:
        $r34 = "--csv-proc";

        $z13 = virtualinvoke $r34.<java.lang.String: boolean equals(java.lang.Object)>(r152);

        if $z13 == 0 goto label013;

        i27 = i27 + 1;

        $i22 = lengthof r147;

        if i27 < $i22 goto label011;

        virtualinvoke r146.<java.io.PrintWriter: void println(java.lang.String)>("Error: argument required for --csv-proc");

        staticinvoke <com.android.server.am.ProcessStatsService: void dumpHelp(java.io.PrintWriter)>(r146);

        return;

     label011:
        r159 = newarray (boolean)[1];

        r160 = newarray (java.lang.String)[1];

        $r72 = <com.android.internal.app.procstats.DumpUtils: java.lang.String[] STATE_NAMES_CSV>;

        $r71 = r147[i27];

        r150 = staticinvoke <com.android.server.am.ProcessStatsService: int[] parseStateList(java.lang.String[],int,java.lang.String,boolean[],java.lang.String[])>($r72, 1, $r71, r159, r160);

        if r150 != null goto label012;

        $r73 = new java.lang.StringBuilder;

        specialinvoke $r73.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in \"");

        $r75 = r147[i27];

        virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r75);

        virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\": ");

        $r78 = r160[0];

        virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r78);

        $r80 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r146.<java.io.PrintWriter: void println(java.lang.String)>($r80);

        staticinvoke <com.android.server.am.ProcessStatsService: void dumpHelp(java.io.PrintWriter)>(r146);

        return;

     label012:
        z38 = r159[0];

        goto label107;

     label013:
        $r35 = "--details";

        $z14 = virtualinvoke $r35.<java.lang.String: boolean equals(java.lang.Object)>(r152);

        if $z14 == 0 goto label014;

        z44 = 1;

        goto label107;

     label014:
        $r36 = "--full-details";

        $z15 = virtualinvoke $r36.<java.lang.String: boolean equals(java.lang.Object)>(r152);

        if $z15 == 0 goto label015;

        z43 = 1;

        goto label107;

     label015:
        $r37 = "--hours";

        $z16 = virtualinvoke $r37.<java.lang.String: boolean equals(java.lang.Object)>(r152);

        if $z16 == 0 goto label019;

        i27 = i27 + 1;

        $i21 = lengthof r147;

        if i27 < $i21 goto label016;

        virtualinvoke r146.<java.io.PrintWriter: void println(java.lang.String)>("Error: argument required for --hours");

        staticinvoke <com.android.server.am.ProcessStatsService: void dumpHelp(java.io.PrintWriter)>(r146);

        return;

     label016:
        $r70 = r147[i27];

        i26 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r70);

     label017:
        goto label107;

     label018:
        $r127 := @caughtexception;

        $r128 = new java.lang.StringBuilder;

        specialinvoke $r128.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r128.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: --hours argument not an int -- ");

        $r130 = r147[i27];

        virtualinvoke $r128.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r130);

        $r132 = virtualinvoke $r128.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r146.<java.io.PrintWriter: void println(java.lang.String)>($r132);

        staticinvoke <com.android.server.am.ProcessStatsService: void dumpHelp(java.io.PrintWriter)>(r146);

        return;

     label019:
        $r38 = "--last";

        $z17 = virtualinvoke $r38.<java.lang.String: boolean equals(java.lang.Object)>(r152);

        if $z17 == 0 goto label023;

        i27 = i27 + 1;

        $i20 = lengthof r147;

        if i27 < $i20 goto label020;

        virtualinvoke r146.<java.io.PrintWriter: void println(java.lang.String)>("Error: argument required for --last");

        staticinvoke <com.android.server.am.ProcessStatsService: void dumpHelp(java.io.PrintWriter)>(r146);

        return;

     label020:
        $r69 = r147[i27];

        i25 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r69);

     label021:
        goto label107;

     label022:
        $r113 := @caughtexception;

        $r114 = new java.lang.StringBuilder;

        specialinvoke $r114.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r114.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: --last argument not an int -- ");

        $r116 = r147[i27];

        virtualinvoke $r114.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r116);

        $r118 = virtualinvoke $r114.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r146.<java.io.PrintWriter: void println(java.lang.String)>($r118);

        staticinvoke <com.android.server.am.ProcessStatsService: void dumpHelp(java.io.PrintWriter)>(r146);

        return;

     label023:
        $r39 = "--max";

        $z18 = virtualinvoke $r39.<java.lang.String: boolean equals(java.lang.Object)>(r152);

        if $z18 == 0 goto label027;

        i27 = i27 + 1;

        $i19 = lengthof r147;

        if i27 < $i19 goto label024;

        virtualinvoke r146.<java.io.PrintWriter: void println(java.lang.String)>("Error: argument required for --max");

        staticinvoke <com.android.server.am.ProcessStatsService: void dumpHelp(java.io.PrintWriter)>(r146);

        return;

     label024:
        $r68 = r147[i27];

        i29 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r68);

     label025:
        goto label107;

     label026:
        $r135 := @caughtexception;

        $r136 = new java.lang.StringBuilder;

        specialinvoke $r136.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r136.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: --max argument not an int -- ");

        $r138 = r147[i27];

        virtualinvoke $r136.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r138);

        $r140 = virtualinvoke $r136.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r146.<java.io.PrintWriter: void println(java.lang.String)>($r140);

        staticinvoke <com.android.server.am.ProcessStatsService: void dumpHelp(java.io.PrintWriter)>(r146);

        return;

     label027:
        $r40 = "--active";

        $z19 = virtualinvoke $r40.<java.lang.String: boolean equals(java.lang.Object)>(r152);

        if $z19 == 0 goto label028;

        z41 = 1;

        z45 = 1;

        goto label107;

     label028:
        $r41 = "--current";

        $z20 = virtualinvoke $r41.<java.lang.String: boolean equals(java.lang.Object)>(r152);

        if $z20 == 0 goto label029;

        z45 = 1;

        goto label107;

     label029:
        $r42 = "--commit";

        $z21 = virtualinvoke $r42.<java.lang.String: boolean equals(java.lang.Object)>(r152);

        if $z21 == 0 goto label037;

        r168 = r0.<com.android.server.am.ProcessStatsService: com.android.server.am.ActivityManagerService mAm>;

        entermonitor r168;

     label030:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        r169 = r0.<com.android.server.am.ProcessStatsService: com.android.internal.app.procstats.ProcessStats mProcessStats>;

        $i17 = r169.<com.android.internal.app.procstats.ProcessStats: int mFlags>;

        $i18 = $i17 | 1;

        r169.<com.android.internal.app.procstats.ProcessStats: int mFlags> = $i18;

        virtualinvoke r0.<com.android.server.am.ProcessStatsService: void writeStateLocked(boolean,boolean)>(1, 1);

        virtualinvoke r146.<java.io.PrintWriter: void println(java.lang.String)>("Process stats committed.");

     label031:
        z37 = 1;

     label032:
        exitmonitor r168;

     label033:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        goto label107;

     label034:
        $r126 := @caughtexception;

     label035:
        exitmonitor r168;

     label036:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r126;

     label037:
        $r43 = "--section";

        $z22 = virtualinvoke $r43.<java.lang.String: boolean equals(java.lang.Object)>(r152);

        if $z22 == 0 goto label039;

        i27 = i27 + 1;

        $i16 = lengthof r147;

        if i27 < $i16 goto label038;

        virtualinvoke r146.<java.io.PrintWriter: void println(java.lang.String)>("Error: argument required for --section");

        staticinvoke <com.android.server.am.ProcessStatsService: void dumpHelp(java.io.PrintWriter)>(r146);

        return;

     label038:
        $r67 = r147[i27];

        i28 = staticinvoke <com.android.server.am.ProcessStatsService: int parseSectionOptions(java.lang.String)>($r67);

        goto label107;

     label039:
        $r44 = "--clear";

        $z23 = virtualinvoke $r44.<java.lang.String: boolean equals(java.lang.Object)>(r152);

        if $z23 == 0 goto label053;

        r171 = r0.<com.android.server.am.ProcessStatsService: com.android.server.am.ActivityManagerService mAm>;

        entermonitor r171;

     label040:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r64 = r0.<com.android.server.am.ProcessStatsService: com.android.internal.app.procstats.ProcessStats mProcessStats>;

        virtualinvoke $r64.<com.android.internal.app.procstats.ProcessStats: void resetSafely()>();

        r172 = r0.<com.android.server.am.ProcessStatsService: com.android.server.am.ActivityManagerService mAm>;

        l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

     label041:
        virtualinvoke r172.<com.android.server.am.ActivityManagerService: void requestPssAllProcsLocked(long,boolean,boolean)>(l1, 1, 0);

        r1 = specialinvoke r0.<com.android.server.am.ProcessStatsService: java.util.ArrayList getCommittedFiles(int,boolean,boolean)>(0, 1, 1);

     label042:
        if r1 == null goto label045;

        i30 = 0;

     label043:
        $i15 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if i30 >= $i15 goto label045;

        r173 = new java.io.File;

        $r65 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i30);

        $r66 = (java.lang.String) $r65;

        specialinvoke r173.<java.io.File: void <init>(java.lang.String)>($r66);

        virtualinvoke r173.<java.io.File: boolean delete()>();

     label044:
        i30 = i30 + 1;

        goto label043;

     label045:
        virtualinvoke r146.<java.io.PrintWriter: void println(java.lang.String)>("All process stats cleared.");

     label046:
        z37 = 1;

     label047:
        exitmonitor r171;

     label048:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        goto label107;

     label049:
        $r141 := @caughtexception;

        r174 = $r141;

     label050:
        exitmonitor r171;

     label051:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw r174;

     label052:
        $r133 := @caughtexception;

        r174 = $r133;

        goto label050;

     label053:
        $r45 = "--write";

        $z24 = virtualinvoke $r45.<java.lang.String: boolean equals(java.lang.Object)>(r152);

        if $z24 == 0 goto label061;

        r175 = r0.<com.android.server.am.ProcessStatsService: com.android.server.am.ActivityManagerService mAm>;

        entermonitor r175;

     label054:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        virtualinvoke r0.<com.android.server.am.ProcessStatsService: void writeStateSyncLocked()>();

        virtualinvoke r146.<java.io.PrintWriter: void println(java.lang.String)>("Process stats written.");

     label055:
        z37 = 1;

     label056:
        exitmonitor r175;

     label057:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        goto label107;

     label058:
        $r105 := @caughtexception;

     label059:
        exitmonitor r175;

     label060:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r105;

     label061:
        $r46 = "--read";

        $z25 = virtualinvoke $r46.<java.lang.String: boolean equals(java.lang.Object)>(r152);

        if $z25 == 0 goto label069;

        r177 = r0.<com.android.server.am.ProcessStatsService: com.android.server.am.ActivityManagerService mAm>;

        entermonitor r177;

     label062:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r63 = r0.<com.android.server.am.ProcessStatsService: com.android.internal.app.procstats.ProcessStats mProcessStats>;

        $r62 = r0.<com.android.server.am.ProcessStatsService: android.util.AtomicFile mFile>;

        virtualinvoke r0.<com.android.server.am.ProcessStatsService: boolean readLocked(com.android.internal.app.procstats.ProcessStats,android.util.AtomicFile)>($r63, $r62);

        virtualinvoke r146.<java.io.PrintWriter: void println(java.lang.String)>("Process stats read.");

     label063:
        z37 = 1;

     label064:
        exitmonitor r177;

     label065:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        goto label107;

     label066:
        $r102 := @caughtexception;

     label067:
        exitmonitor r177;

     label068:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r102;

     label069:
        $r47 = "--start-testing";

        $z26 = virtualinvoke $r47.<java.lang.String: boolean equals(java.lang.Object)>(r152);

        if $z26 == 0 goto label077;

        r179 = r0.<com.android.server.am.ProcessStatsService: com.android.server.am.ActivityManagerService mAm>;

        entermonitor r179;

     label070:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r61 = r0.<com.android.server.am.ProcessStatsService: com.android.server.am.ActivityManagerService mAm>;

        virtualinvoke $r61.<com.android.server.am.ActivityManagerService: void setTestPssMode(boolean)>(1);

        virtualinvoke r146.<java.io.PrintWriter: void println(java.lang.String)>("Started high frequency sampling.");

     label071:
        z37 = 1;

     label072:
        exitmonitor r179;

     label073:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        goto label107;

     label074:
        $r125 := @caughtexception;

     label075:
        exitmonitor r179;

     label076:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r125;

     label077:
        $r48 = "--stop-testing";

        $z27 = virtualinvoke $r48.<java.lang.String: boolean equals(java.lang.Object)>(r152);

        if $z27 == 0 goto label085;

        r181 = r0.<com.android.server.am.ProcessStatsService: com.android.server.am.ActivityManagerService mAm>;

        entermonitor r181;

     label078:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r60 = r0.<com.android.server.am.ProcessStatsService: com.android.server.am.ActivityManagerService mAm>;

        virtualinvoke $r60.<com.android.server.am.ActivityManagerService: void setTestPssMode(boolean)>(0);

        virtualinvoke r146.<java.io.PrintWriter: void println(java.lang.String)>("Stopped high frequency sampling.");

     label079:
        z37 = 1;

     label080:
        exitmonitor r181;

     label081:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        goto label107;

     label082:
        $r119 := @caughtexception;

     label083:
        exitmonitor r181;

     label084:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r119;

     label085:
        $r49 = "--pretend-screen-on";

        $z28 = virtualinvoke $r49.<java.lang.String: boolean equals(java.lang.Object)>(r152);

        if $z28 == 0 goto label091;

        r183 = r0.<com.android.server.am.ProcessStatsService: com.android.server.am.ActivityManagerService mAm>;

        entermonitor r183;

     label086:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r59 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        r0.<com.android.server.am.ProcessStatsService: java.lang.Boolean mInjectedScreenState> = $r59;

        exitmonitor r183;

     label087:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        z37 = 1;

        goto label107;

     label088:
        $r120 := @caughtexception;

     label089:
        exitmonitor r183;

     label090:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r120;

     label091:
        $r50 = "--pretend-screen-off";

        $z29 = virtualinvoke $r50.<java.lang.String: boolean equals(java.lang.Object)>(r152);

        if $z29 == 0 goto label097;

        r185 = r0.<com.android.server.am.ProcessStatsService: com.android.server.am.ActivityManagerService mAm>;

        entermonitor r185;

     label092:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r58 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        r0.<com.android.server.am.ProcessStatsService: java.lang.Boolean mInjectedScreenState> = $r58;

        exitmonitor r185;

     label093:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        z37 = 1;

        goto label107;

     label094:
        $r108 := @caughtexception;

     label095:
        exitmonitor r185;

     label096:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r108;

     label097:
        $r51 = "--stop-pretend-screen";

        $z30 = virtualinvoke $r51.<java.lang.String: boolean equals(java.lang.Object)>(r152);

        if $z30 == 0 goto label103;

        r187 = r0.<com.android.server.am.ProcessStatsService: com.android.server.am.ActivityManagerService mAm>;

        entermonitor r187;

     label098:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        r0.<com.android.server.am.ProcessStatsService: java.lang.Boolean mInjectedScreenState> = null;

        exitmonitor r187;

     label099:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        z37 = 1;

        goto label107;

     label100:
        $r142 := @caughtexception;

     label101:
        exitmonitor r187;

     label102:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r142;

     label103:
        $r52 = "-h";

        $z31 = virtualinvoke $r52.<java.lang.String: boolean equals(java.lang.Object)>(r152);

        if $z31 == 0 goto label104;

        staticinvoke <com.android.server.am.ProcessStatsService: void dumpHelp(java.io.PrintWriter)>(r146);

        return;

     label104:
        $r53 = "-a";

        $z32 = virtualinvoke $r53.<java.lang.String: boolean equals(java.lang.Object)>(r152);

        if $z32 == 0 goto label105;

        z44 = 1;

        z42 = 1;

        goto label107;

     label105:
        $i13 = virtualinvoke r152.<java.lang.String: int length()>();

        if $i13 <= 0 goto label106;

        $c14 = virtualinvoke r152.<java.lang.String: char charAt(int)>(0);

        if $c14 != 45 goto label106;

        $r54 = new java.lang.StringBuilder;

        specialinvoke $r54.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown option: ");

        virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r152);

        $r57 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r146.<java.io.PrintWriter: void println(java.lang.String)>($r57);

        staticinvoke <com.android.server.am.ProcessStatsService: void dumpHelp(java.io.PrintWriter)>(r146);

        return;

     label106:
        r151 = r152;

        z44 = 1;

     label107:
        i27 = i27 + 1;

        goto label001;

     label108:
        z48 = z46;

        r190 = r151;

        z49 = z38;

        i31 = i28;

        z50 = z39;

        z51 = z42;

        z52 = z41;

        i33 = i26;

        r191 = r148;

        z53 = z43;

        z54 = z36;

        i34 = i29;

        z55 = z40;

        z56 = z47;

        z57 = z45;

        goto label110;

     label109:
        z56 = 0;

        z48 = 0;

        z57 = 0;

        z44 = 0;

        r190 = null;

        z52 = 0;

        z50 = 0;

        i33 = 0;

        z51 = 0;

        i34 = 2;

        i31 = 15;

        z49 = 1;

        z55 = 0;

        z53 = 0;

        z37 = 0;

        z54 = 0;

        r191 = $r2;

     label110:
        if z37 == 0 goto label111;

        return;

     label111:
        if z48 == 0 goto label129;

        virtualinvoke r146.<java.io.PrintWriter: void print(java.lang.String)>("Processes running summed over");

        if z55 != 0 goto label113;

        i35 = 0;

     label112:
        $i10 = lengthof r191;

        if i35 >= $i10 goto label113;

        virtualinvoke r146.<java.io.PrintWriter: void print(java.lang.String)>(" ");

        $i11 = r191[i35];

        staticinvoke <com.android.internal.app.procstats.DumpUtils: void printScreenLabelCsv(java.io.PrintWriter,int)>(r146, $i11);

        i35 = i35 + 1;

        goto label112;

     label113:
        if z50 != 0 goto label115;

        i36 = 0;

     label114:
        $i8 = lengthof r149;

        if i36 >= $i8 goto label115;

        virtualinvoke r146.<java.io.PrintWriter: void print(java.lang.String)>(" ");

        $i9 = r149[i36];

        staticinvoke <com.android.internal.app.procstats.DumpUtils: void printMemLabelCsv(java.io.PrintWriter,int)>(r146, $i9);

        i36 = i36 + 1;

        goto label114;

     label115:
        if z49 != 0 goto label117;

        i37 = 0;

     label116:
        $i6 = lengthof r150;

        if i37 >= $i6 goto label117;

        virtualinvoke r146.<java.io.PrintWriter: void print(java.lang.String)>(" ");

        $r27 = <com.android.internal.app.procstats.DumpUtils: java.lang.String[] STATE_NAMES_CSV>;

        $i7 = r150[i37];

        $r28 = $r27[$i7];

        virtualinvoke r146.<java.io.PrintWriter: void print(java.lang.String)>($r28);

        i37 = i37 + 1;

        goto label116;

     label117:
        virtualinvoke r146.<java.io.PrintWriter: void println()>();

        r192 = r0.<com.android.server.am.ProcessStatsService: com.android.server.am.ActivityManagerService mAm>;

        entermonitor r192;

     label118:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

     label119:
        r194 = r192;

     label120:
        virtualinvoke r0.<com.android.server.am.ProcessStatsService: boolean dumpFilteredProcessesCsvLocked(java.io.PrintWriter,java.lang.String,boolean,int[],boolean,int[],boolean,int[],long,java.lang.String)>(r146, null, z55, r191, z50, r149, z49, r150, l0, r190);

     label121:
        r194 = r192;

     label122:
        exitmonitor r192;

     label123:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label124:
        $r103 := @caughtexception;

        r195 = $r103;

        r196 = r194;

        goto label126;

     label125:
        $r107 := @caughtexception;

        r195 = $r107;

        r196 = r192;

     label126:
        r194 = r196;

     label127:
        exitmonitor r196;

     label128:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw r195;

     label129:
        if i33 == 0 goto label130;

        virtualinvoke r146.<java.io.PrintWriter: void print(java.lang.String)>("AGGREGATED OVER LAST ");

        virtualinvoke r146.<java.io.PrintWriter: void print(int)>(i33);

        virtualinvoke r146.<java.io.PrintWriter: void println(java.lang.String)>(" HOURS:");

        $l5 = (long) i33;

        specialinvoke r0.<com.android.server.am.ProcessStatsService: void dumpAggregatedStats(java.io.PrintWriter,long,long,java.lang.String,boolean,boolean,boolean,boolean,boolean,int)>(r146, $l5, l0, r190, z56, z44, z53, z51, z52, i31);

        return;

     label130:
        if i25 <= 0 goto label142;

        virtualinvoke r146.<java.io.PrintWriter: void print(java.lang.String)>("LAST STATS AT INDEX ");

        virtualinvoke r146.<java.io.PrintWriter: void print(int)>(i25);

        virtualinvoke r146.<java.io.PrintWriter: void println(java.lang.String)>(":");

        r197 = specialinvoke r0.<com.android.server.am.ProcessStatsService: java.util.ArrayList getCommittedFiles(int,boolean,boolean)>(0, 0, 1);

        $i3 = virtualinvoke r197.<java.util.ArrayList: int size()>();

        if i25 < $i3 goto label131;

        virtualinvoke r146.<java.io.PrintWriter: void print(java.lang.String)>("Only have ");

        $i4 = virtualinvoke r197.<java.util.ArrayList: int size()>();

        virtualinvoke r146.<java.io.PrintWriter: void print(int)>($i4);

        virtualinvoke r146.<java.io.PrintWriter: void println(java.lang.String)>(" data sets");

        return;

     label131:
        $r16 = new android.util.AtomicFile;

        $r17 = new java.io.File;

        $r18 = virtualinvoke r197.<java.util.ArrayList: java.lang.Object get(int)>(i25);

        $r19 = (java.lang.String) $r18;

        specialinvoke $r17.<java.io.File: void <init>(java.lang.String)>($r19);

        specialinvoke $r16.<android.util.AtomicFile: void <init>(java.io.File)>($r17);

        $r20 = new com.android.internal.app.procstats.ProcessStats;

        specialinvoke $r20.<com.android.internal.app.procstats.ProcessStats: void <init>(boolean)>(0);

        virtualinvoke r0.<com.android.server.am.ProcessStatsService: boolean readLocked(com.android.internal.app.procstats.ProcessStats,android.util.AtomicFile)>($r20, $r16);

        $r21 = $r20.<com.android.internal.app.procstats.ProcessStats: java.lang.String mReadError>;

        if $r21 == null goto label134;

        if z54 != 0 goto label132;

        if z56 == 0 goto label133;

     label132:
        virtualinvoke r146.<java.io.PrintWriter: void print(java.lang.String)>("err,");

     label133:
        virtualinvoke r146.<java.io.PrintWriter: void print(java.lang.String)>("Failure reading ");

        $r200 = virtualinvoke r197.<java.util.ArrayList: java.lang.Object get(int)>(i25);

        $r201 = (java.lang.String) $r200;

        virtualinvoke r146.<java.io.PrintWriter: void print(java.lang.String)>($r201);

        virtualinvoke r146.<java.io.PrintWriter: void print(java.lang.String)>("; ");

        $r202 = $r20.<com.android.internal.app.procstats.ProcessStats: java.lang.String mReadError>;

        virtualinvoke r146.<java.io.PrintWriter: void println(java.lang.String)>($r202);

        return;

     label134:
        $r22 = virtualinvoke $r16.<android.util.AtomicFile: java.io.File getBaseFile()>();

        $r23 = virtualinvoke $r22.<java.io.File: java.lang.String getPath()>();

        z58 = virtualinvoke $r23.<java.lang.String: boolean endsWith(java.lang.String)>(".ci");

        if z54 != 0 goto label140;

        if z56 == 0 goto label135;

        goto label140;

     label135:
        virtualinvoke r146.<java.io.PrintWriter: void print(java.lang.String)>("COMMITTED STATS FROM ");

        $r24 = $r20.<com.android.internal.app.procstats.ProcessStats: java.lang.String mTimePeriodStartClockStr>;

        virtualinvoke r146.<java.io.PrintWriter: void print(java.lang.String)>($r24);

        if z58 == 0 goto label136;

        virtualinvoke r146.<java.io.PrintWriter: void print(java.lang.String)>(" (checked in)");

     label136:
        virtualinvoke r146.<java.io.PrintWriter: void println(java.lang.String)>(":");

        if z44 != 0 goto label138;

        if z53 == 0 goto label137;

        goto label138;

     label137:
        virtualinvoke $r20.<com.android.internal.app.procstats.ProcessStats: void dumpSummaryLocked(java.io.PrintWriter,java.lang.String,long,boolean)>(r146, r190, l0, z52);

        goto label141;

     label138:
        $z6 = z53 ^ 1;

        virtualinvoke $r20.<com.android.internal.app.procstats.ProcessStats: void dumpLocked(java.io.PrintWriter,java.lang.String,long,boolean,boolean,boolean,boolean,int)>(r146, r190, l0, $z6, z44, z51, z52, i31);

        if z51 == 0 goto label139;

        virtualinvoke r146.<java.io.PrintWriter: void print(java.lang.String)>("  mFile=");

        $r25 = r0.<com.android.server.am.ProcessStatsService: android.util.AtomicFile mFile>;

        $r26 = virtualinvoke $r25.<android.util.AtomicFile: java.io.File getBaseFile()>();

        virtualinvoke r146.<java.io.PrintWriter: void println(java.lang.Object)>($r26);

        goto label141;

     label139:
        goto label141;

     label140:
        virtualinvoke $r20.<com.android.internal.app.procstats.ProcessStats: void dumpCheckinLocked(java.io.PrintWriter,java.lang.String,int)>(r146, r190, i31);

     label141:
        return;

     label142:
        z60 = 0;

        if z51 != 0 goto label144;

        if z54 == 0 goto label143;

        goto label144;

     label143:
        goto label209;

     label144:
        if z57 != 0 goto label209;

        $r7 = r0.<com.android.server.am.ProcessStatsService: java.util.concurrent.locks.ReentrantLock mWriteLock>;

        virtualinvoke $r7.<java.util.concurrent.locks.ReentrantLock: void lock()>();

        if z54 != 0 goto label145;

        z62 = 1;

        goto label146;

     label145:
        z62 = 0;

     label146:
        r203 = specialinvoke r0.<com.android.server.am.ProcessStatsService: java.util.ArrayList getCommittedFiles(int,boolean,boolean)>(0, 0, z62);

     label147:
        if r203 == null goto label206;

        if z54 == 0 goto label148;

        i38 = 0;

        goto label149;

     label148:
        $i2 = virtualinvoke r203.<java.util.ArrayList: int size()>();

        i38 = $i2 - i34;

     label149:
        if i38 >= 0 goto label150;

        i38 = 0;

        goto label150;

     label150:
        z63 = 1;

        i39 = i38;

        z60 = 0;

     label151:
        i40 = virtualinvoke r203.<java.util.ArrayList: int size()>();

     label152:
        if i39 >= i40 goto label205;

     label153:
        r204 = new android.util.AtomicFile;

        r205 = new java.io.File;

        $r9 = virtualinvoke r203.<java.util.ArrayList: java.lang.Object get(int)>(i39);

        $r10 = (java.lang.String) $r9;

        specialinvoke r205.<java.io.File: void <init>(java.lang.String)>($r10);

        specialinvoke r204.<android.util.AtomicFile: void <init>(java.io.File)>(r205);

        r206 = new com.android.internal.app.procstats.ProcessStats;

     label154:
        specialinvoke r206.<com.android.internal.app.procstats.ProcessStats: void <init>(boolean)>(0);

        virtualinvoke r0.<com.android.server.am.ProcessStatsService: boolean readLocked(com.android.internal.app.procstats.ProcessStats,android.util.AtomicFile)>(r206, r204);

        r207 = r206.<com.android.internal.app.procstats.ProcessStats: java.lang.String mReadError>;

     label155:
        if r207 == null goto label160;

        if z54 != 0 goto label156;

        if z56 == 0 goto label157;

     label156:
        virtualinvoke r146.<java.io.PrintWriter: void print(java.lang.String)>("err,");

     label157:
        virtualinvoke r146.<java.io.PrintWriter: void print(java.lang.String)>("Failure reading ");

        $r208 = virtualinvoke r203.<java.util.ArrayList: java.lang.Object get(int)>(i39);

        $r209 = (java.lang.String) $r208;

        virtualinvoke r146.<java.io.PrintWriter: void print(java.lang.String)>($r209);

        virtualinvoke r146.<java.io.PrintWriter: void print(java.lang.String)>("; ");

        $r210 = r206.<com.android.internal.app.procstats.ProcessStats: java.lang.String mReadError>;

        virtualinvoke r146.<java.io.PrintWriter: void println(java.lang.String)>($r210);

        r211 = new java.io.File;

        $r212 = virtualinvoke r203.<java.util.ArrayList: java.lang.Object get(int)>(i39);

        $r213 = (java.lang.String) $r212;

        specialinvoke r211.<java.io.File: void <init>(java.lang.String)>($r213);

        virtualinvoke r211.<java.io.File: boolean delete()>();

     label158:
        goto label204;

     label159:
        $r104 := @caughtexception;

        r214 = $r104;

        goto label202;

     label160:
        $r11 = virtualinvoke r204.<android.util.AtomicFile: java.io.File getBaseFile()>();

        r215 = virtualinvoke $r11.<java.io.File: java.lang.String getPath()>();

        z64 = virtualinvoke r215.<java.lang.String: boolean endsWith(java.lang.String)>(".ci");

     label161:
        if z54 != 0 goto label179;

        if z56 == 0 goto label162;

        goto label179;

     label162:
        if z60 == 0 goto label165;

     label163:
        virtualinvoke r146.<java.io.PrintWriter: void println()>();

     label164:
        goto label166;

     label165:
        z60 = 1;

     label166:
        virtualinvoke r146.<java.io.PrintWriter: void print(java.lang.String)>("COMMITTED STATS FROM ");

        $r15 = r206.<com.android.internal.app.procstats.ProcessStats: java.lang.String mTimePeriodStartClockStr>;

        virtualinvoke r146.<java.io.PrintWriter: void print(java.lang.String)>($r15);

     label167:
        if z64 == 0 goto label171;

     label168:
        virtualinvoke r146.<java.io.PrintWriter: void print(java.lang.String)>(" (checked in)");

     label169:
        goto label171;

     label170:
        $r112 := @caughtexception;

        r214 = $r112;

        goto label202;

     label171:
        virtualinvoke r146.<java.io.PrintWriter: void println(java.lang.String)>(":");

     label172:
        if z53 == 0 goto label175;

     label173:
        virtualinvoke r206.<com.android.internal.app.procstats.ProcessStats: void dumpLocked(java.io.PrintWriter,java.lang.String,long,boolean,boolean,boolean,boolean,int)>(r146, r190, l0, 0, 0, 0, z52, i31);

     label174:
        goto label176;

     label175:
        virtualinvoke r206.<com.android.internal.app.procstats.ProcessStats: void dumpSummaryLocked(java.io.PrintWriter,java.lang.String,long,boolean)>(r146, r190, l0, z52);

     label176:
        goto label181;

     label177:
        $r123 := @caughtexception;

        r214 = $r123;

        goto label202;

     label178:
        $r110 := @caughtexception;

        r214 = $r110;

        goto label202;

     label179:
        z65 = z60;

        r216 = r190;

        i41 = i31;

     label180:
        virtualinvoke r206.<com.android.internal.app.procstats.ProcessStats: void dumpCheckinLocked(java.io.PrintWriter,java.lang.String,int)>(r146, r190, i31);

     label181:
        if z54 == 0 goto label198;

        z65 = z60;

        r216 = r190;

        i41 = i31;

     label182:
        r217 = virtualinvoke r204.<android.util.AtomicFile: java.io.File getBaseFile()>();

     label183:
        z65 = z60;

        r216 = r190;

        i41 = i31;

     label184:
        r218 = new java.io.File;

     label185:
        z65 = z60;

        r216 = r190;

        i41 = i31;

     label186:
        r219 = new java.lang.StringBuilder;

     label187:
        z65 = z60;

        r216 = r190;

        i41 = i31;

     label188:
        specialinvoke r219.<java.lang.StringBuilder: void <init>()>();

     label189:
        z65 = z60;

        r216 = r190;

        i41 = i31;

     label190:
        virtualinvoke r219.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r215);

     label191:
        z65 = z60;

        r216 = r190;

        i41 = i31;

     label192:
        virtualinvoke r219.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".ci");

     label193:
        z65 = z60;

        r216 = r190;

        i41 = i31;

     label194:
        $r14 = virtualinvoke r219.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r218.<java.io.File: void <init>(java.lang.String)>($r14);

     label195:
        z65 = z60;

        r216 = r190;

        i41 = i31;

     label196:
        virtualinvoke r217.<java.io.File: boolean renameTo(java.io.File)>(r218);

     label197:
        goto label198;

     label198:
        goto label204;

     label199:
        $r101 := @caughtexception;

        r214 = $r101;

        z60 = z65;

        r190 = r216;

        i31 = i41;

        goto label202;

     label200:
        $r124 := @caughtexception;

        r214 = $r124;

        goto label202;

     label201:
        $r134 := @caughtexception;

        r214 = $r134;

     label202:
        virtualinvoke r146.<java.io.PrintWriter: void print(java.lang.String)>("**** FAILURE DUMPING STATE: ");

     label203:
        $r220 = virtualinvoke r203.<java.util.ArrayList: java.lang.Object get(int)>(i39);

        $r221 = (java.lang.String) $r220;

        virtualinvoke r146.<java.io.PrintWriter: void println(java.lang.String)>($r221);

        virtualinvoke r214.<java.lang.Throwable: void printStackTrace(java.io.PrintWriter)>(r146);

     label204:
        i39 = i39 + 1;

        goto label151;

     label205:
        goto label207;

     label206:
        z63 = 1;

     label207:
        $r8 = r0.<com.android.server.am.ProcessStatsService: java.util.concurrent.locks.ReentrantLock mWriteLock>;

        virtualinvoke $r8.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        goto label210;

     label208:
        $r144 := @caughtexception;

        $r145 = r0.<com.android.server.am.ProcessStatsService: java.util.concurrent.locks.ReentrantLock mWriteLock>;

        virtualinvoke $r145.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r144;

     label209:
        z63 = 1;

        z60 = 0;

     label210:
        if z54 != 0 goto label241;

        r223 = r0.<com.android.server.am.ProcessStatsService: com.android.server.am.ActivityManagerService mAm>;

        entermonitor r223;

     label211:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

     label212:
        if z56 == 0 goto label216;

     label213:
        $r6 = r0.<com.android.server.am.ProcessStatsService: com.android.internal.app.procstats.ProcessStats mProcessStats>;

        virtualinvoke $r6.<com.android.internal.app.procstats.ProcessStats: void dumpCheckinLocked(java.io.PrintWriter,java.lang.String,int)>(r146, r190, i31);

     label214:
        goto label231;

     label215:
        $r122 := @caughtexception;

        r224 = $r122;

        goto label238;

     label216:
        if z60 == 0 goto label218;

     label217:
        virtualinvoke r146.<java.io.PrintWriter: void println()>();

     label218:
        virtualinvoke r146.<java.io.PrintWriter: void println(java.lang.String)>("CURRENT STATS:");

     label219:
        if z44 != 0 goto label222;

        if z53 == 0 goto label220;

        goto label222;

     label220:
        $r5 = r0.<com.android.server.am.ProcessStatsService: com.android.internal.app.procstats.ProcessStats mProcessStats>;

        virtualinvoke $r5.<com.android.internal.app.procstats.ProcessStats: void dumpSummaryLocked(java.io.PrintWriter,java.lang.String,long,boolean)>(r146, r190, l0, z52);

     label221:
        goto label230;

     label222:
        r225 = r0.<com.android.server.am.ProcessStatsService: com.android.internal.app.procstats.ProcessStats mProcessStats>;

     label223:
        if z53 != 0 goto label224;

        goto label225;

     label224:
        z63 = 0;

     label225:
        virtualinvoke r225.<com.android.internal.app.procstats.ProcessStats: void dumpLocked(java.io.PrintWriter,java.lang.String,long,boolean,boolean,boolean,boolean,int)>(r146, r190, l0, z63, z44, z51, z52, i31);

     label226:
        if z51 == 0 goto label230;

     label227:
        virtualinvoke r146.<java.io.PrintWriter: void print(java.lang.String)>("  mFile=");

        $r3 = r0.<com.android.server.am.ProcessStatsService: android.util.AtomicFile mFile>;

        $r4 = virtualinvoke $r3.<android.util.AtomicFile: java.io.File getBaseFile()>();

        virtualinvoke r146.<java.io.PrintWriter: void println(java.lang.Object)>($r4);

     label228:
        goto label230;

     label229:
        $r111 := @caughtexception;

        r224 = $r111;

        goto label238;

     label230:
        z60 = 1;

     label231:
        exitmonitor r223;

     label232:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        if z57 != 0 goto label234;

        if z60 == 0 goto label233;

        virtualinvoke r146.<java.io.PrintWriter: void println()>();

     label233:
        virtualinvoke r146.<java.io.PrintWriter: void println(java.lang.String)>("AGGREGATED OVER LAST 24 HOURS:");

        specialinvoke r0.<com.android.server.am.ProcessStatsService: void dumpAggregatedStats(java.io.PrintWriter,long,long,java.lang.String,boolean,boolean,boolean,boolean,boolean,int)>(r146, 24L, l0, r190, z56, z44, z53, z51, z52, i31);

        virtualinvoke r146.<java.io.PrintWriter: void println()>();

        virtualinvoke r146.<java.io.PrintWriter: void println(java.lang.String)>("AGGREGATED OVER LAST 3 HOURS:");

        specialinvoke r0.<com.android.server.am.ProcessStatsService: void dumpAggregatedStats(java.io.PrintWriter,long,long,java.lang.String,boolean,boolean,boolean,boolean,boolean,int)>(r146, 3L, l0, r190, z56, z44, z53, z51, z52, i31);

        goto label234;

     label234:
        goto label241;

     label235:
        $r121 := @caughtexception;

        r224 = $r121;

        goto label238;

     label236:
        $r143 := @caughtexception;

        r224 = $r143;

        goto label238;

     label237:
        $r106 := @caughtexception;

        r224 = $r106;

     label238:
        exitmonitor r223;

     label239:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw r224;

     label240:
        $r109 := @caughtexception;

        r224 = $r109;

        goto label238;

     label241:
        return;

        catch java.lang.NumberFormatException from label016 to label017 with label018;
        catch java.lang.NumberFormatException from label020 to label021 with label022;
        catch java.lang.NumberFormatException from label024 to label025 with label026;
        catch java.lang.Throwable from label030 to label031 with label034;
        catch java.lang.Throwable from label032 to label033 with label034;
        catch java.lang.Throwable from label035 to label036 with label034;
        catch java.lang.Throwable from label040 to label041 with label049;
        catch java.lang.Throwable from label041 to label042 with label052;
        catch java.lang.Throwable from label043 to label044 with label052;
        catch java.lang.Throwable from label045 to label046 with label052;
        catch java.lang.Throwable from label047 to label048 with label052;
        catch java.lang.Throwable from label050 to label051 with label052;
        catch java.lang.Throwable from label054 to label055 with label058;
        catch java.lang.Throwable from label056 to label057 with label058;
        catch java.lang.Throwable from label059 to label060 with label058;
        catch java.lang.Throwable from label062 to label063 with label066;
        catch java.lang.Throwable from label064 to label065 with label066;
        catch java.lang.Throwable from label067 to label068 with label066;
        catch java.lang.Throwable from label070 to label071 with label074;
        catch java.lang.Throwable from label072 to label073 with label074;
        catch java.lang.Throwable from label075 to label076 with label074;
        catch java.lang.Throwable from label078 to label079 with label082;
        catch java.lang.Throwable from label080 to label081 with label082;
        catch java.lang.Throwable from label083 to label084 with label082;
        catch java.lang.Throwable from label086 to label087 with label088;
        catch java.lang.Throwable from label089 to label090 with label088;
        catch java.lang.Throwable from label092 to label093 with label094;
        catch java.lang.Throwable from label095 to label096 with label094;
        catch java.lang.Throwable from label098 to label099 with label100;
        catch java.lang.Throwable from label101 to label102 with label100;
        catch java.lang.Throwable from label118 to label119 with label125;
        catch java.lang.Throwable from label120 to label121 with label124;
        catch java.lang.Throwable from label122 to label123 with label124;
        catch java.lang.Throwable from label127 to label128 with label124;
        catch java.lang.Throwable from label146 to label147 with label208;
        catch java.lang.Throwable from label148 to label149 with label208;
        catch java.lang.Throwable from label151 to label152 with label208;
        catch java.lang.Throwable from label153 to label154 with label201;
        catch java.lang.Throwable from label154 to label155 with label200;
        catch java.lang.Throwable from label156 to label157 with label159;
        catch java.lang.Throwable from label157 to label158 with label159;
        catch java.lang.Throwable from label160 to label161 with label200;
        catch java.lang.Throwable from label163 to label164 with label159;
        catch java.lang.Throwable from label166 to label167 with label178;
        catch java.lang.Throwable from label168 to label169 with label170;
        catch java.lang.Throwable from label171 to label172 with label178;
        catch java.lang.Throwable from label173 to label174 with label177;
        catch java.lang.Throwable from label175 to label176 with label177;
        catch java.lang.Throwable from label180 to label181 with label199;
        catch java.lang.Throwable from label182 to label183 with label199;
        catch java.lang.Throwable from label184 to label185 with label199;
        catch java.lang.Throwable from label186 to label187 with label199;
        catch java.lang.Throwable from label188 to label189 with label199;
        catch java.lang.Throwable from label190 to label191 with label199;
        catch java.lang.Throwable from label192 to label193 with label199;
        catch java.lang.Throwable from label194 to label195 with label199;
        catch java.lang.Throwable from label196 to label197 with label199;
        catch java.lang.Throwable from label202 to label203 with label208;
        catch java.lang.Throwable from label203 to label204 with label208;
        catch java.lang.Throwable from label211 to label212 with label237;
        catch java.lang.Throwable from label213 to label214 with label215;
        catch java.lang.Throwable from label217 to label218 with label215;
        catch java.lang.Throwable from label218 to label219 with label237;
        catch java.lang.Throwable from label220 to label221 with label215;
        catch java.lang.Throwable from label222 to label223 with label237;
        catch java.lang.Throwable from label225 to label226 with label236;
        catch java.lang.Throwable from label227 to label228 with label229;
        catch java.lang.Throwable from label231 to label232 with label235;
        catch java.lang.Throwable from label238 to label239 with label240;
    }

    private void dumpProto(java.io.FileDescriptor)
    {
        com.android.server.am.ProcessStatsService r0;
        long l0, l1;
        android.util.proto.ProtoOutputStream $r1;
        com.android.internal.app.procstats.ProcessStats $r2;
        java.lang.Throwable $r3;
        java.io.FileDescriptor r4;
        com.android.server.am.ActivityManagerService r6;

        r0 := @this: com.android.server.am.ProcessStatsService;

        r4 := @parameter0: java.io.FileDescriptor;

        $r1 = new android.util.proto.ProtoOutputStream;

        specialinvoke $r1.<android.util.proto.ProtoOutputStream: void <init>(java.io.FileDescriptor)>(r4);

        r6 = r0.<com.android.server.am.ProcessStatsService: com.android.server.am.ActivityManagerService mAm>;

        entermonitor r6;

     label1:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        l1 = virtualinvoke $r1.<android.util.proto.ProtoOutputStream: long start(long)>(1146756268033L);

        $r2 = r0.<com.android.server.am.ProcessStatsService: com.android.internal.app.procstats.ProcessStats mProcessStats>;

        virtualinvoke $r2.<com.android.internal.app.procstats.ProcessStats: void dumpDebug(android.util.proto.ProtoOutputStream,long,int)>($r1, l0, 15);

        virtualinvoke $r1.<android.util.proto.ProtoOutputStream: void end(long)>(l1);

        exitmonitor r6;

     label2:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        specialinvoke r0.<com.android.server.am.ProcessStatsService: void dumpAggregatedStats(android.util.proto.ProtoOutputStream,long,int,long)>($r1, 1146756268034L, 3, l0);

        specialinvoke r0.<com.android.server.am.ProcessStatsService: void dumpAggregatedStats(android.util.proto.ProtoOutputStream,long,int,long)>($r1, 1146756268035L, 24, l0);

        virtualinvoke $r1.<android.util.proto.ProtoOutputStream: void flush()>();

        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r6;

     label5:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private void dumpProtoForStatsd(java.io.FileDescriptor)
    {
        com.android.server.am.ProcessStatsService r0;
        android.util.proto.ProtoOutputStream[] r1;
        android.util.proto.ProtoOutputStream $r2, $r4;
        com.android.internal.app.procstats.ProcessStats $r3;
        java.io.FileDescriptor r5;

        r0 := @this: com.android.server.am.ProcessStatsService;

        r5 := @parameter0: java.io.FileDescriptor;

        r1 = newarray (android.util.proto.ProtoOutputStream)[1];

        $r2 = new android.util.proto.ProtoOutputStream;

        specialinvoke $r2.<android.util.proto.ProtoOutputStream: void <init>(java.io.FileDescriptor)>(r5);

        r1[0] = $r2;

        $r3 = new com.android.internal.app.procstats.ProcessStats;

        specialinvoke $r3.<com.android.internal.app.procstats.ProcessStats: void <init>(boolean)>(0);

        virtualinvoke r0.<com.android.server.am.ProcessStatsService: long getCommittedStatsMerged(long,int,boolean,java.util.List,com.android.internal.app.procstats.ProcessStats)>(0L, 0, 1, null, $r3);

        virtualinvoke $r3.<com.android.internal.app.procstats.ProcessStats: void dumpAggregatedProtoForStatsd(android.util.proto.ProtoOutputStream[],long)>(r1, 999999L);

        $r4 = r1[0];

        virtualinvoke $r4.<android.util.proto.ProtoOutputStream: void flush()>();

        return;
    }

    private java.util.ArrayList getCommittedFiles(int, boolean, boolean)
    {
        com.android.server.am.ProcessStatsService r0;
        boolean z0, z1, $z3, $z4;
        java.io.File[] r1;
        java.lang.String r3, r4;
        java.io.File $r5, $r8, $r9;
        int $i0, $i1, $i2, i3, i4;
        java.util.ArrayList $r6;
        android.util.AtomicFile $r7;

        r0 := @this: com.android.server.am.ProcessStatsService;

        i3 := @parameter0: int;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        $r5 = r0.<com.android.server.am.ProcessStatsService: java.io.File mBaseDir>;

        r1 = virtualinvoke $r5.<java.io.File: java.io.File[] listFiles()>();

        if r1 == null goto label7;

        $i0 = lengthof r1;

        if $i0 > i3 goto label1;

        goto label7;

     label1:
        $r6 = new java.util.ArrayList;

        $i1 = lengthof r1;

        specialinvoke $r6.<java.util.ArrayList: void <init>(int)>($i1);

        $r7 = r0.<com.android.server.am.ProcessStatsService: android.util.AtomicFile mFile>;

        $r8 = virtualinvoke $r7.<android.util.AtomicFile: java.io.File getBaseFile()>();

        r3 = virtualinvoke $r8.<java.io.File: java.lang.String getPath()>();

        i4 = 0;

     label2:
        $i2 = lengthof r1;

        if i4 >= $i2 goto label6;

        $r9 = r1[i4];

        r4 = virtualinvoke $r9.<java.io.File: java.lang.String getPath()>();

        if z1 != 0 goto label3;

        $z4 = virtualinvoke r4.<java.lang.String: boolean endsWith(java.lang.String)>(".ci");

        if $z4 == 0 goto label3;

        goto label5;

     label3:
        if z0 != 0 goto label4;

        $z3 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z3 == 0 goto label4;

        goto label5;

     label4:
        virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>(r4);

     label5:
        i4 = i4 + 1;

        goto label2;

     label6:
        staticinvoke <java.util.Collections: void sort(java.util.List)>($r6);

        return $r6;

     label7:
        return null;
    }

    static int parseSectionOptions(java.lang.String)
    {
        java.lang.String[] r0, $r1;
        int i0, i1, $i2, $i3, i4, i5, i6;
        java.lang.String $r2, r4;
        int[] $r3;
        java.util.List r5;

        r4 := @parameter0: java.lang.String;

        r0 = virtualinvoke r4.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        $i2 = lengthof r0;

        if $i2 != 0 goto label1;

        return 15;

     label1:
        i4 = 0;

        $r1 = <com.android.internal.app.procstats.ProcessStats: java.lang.String[] OPTIONS_STR>;

        r5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r1);

        i0 = lengthof r0;

        i5 = 0;

     label2:
        if i5 >= i0 goto label4;

        $r2 = r0[i5];

        i1 = interfaceinvoke r5.<java.util.List: int indexOf(java.lang.Object)>($r2);

        i6 = i4;

        if i1 == -1 goto label3;

        $r3 = <com.android.internal.app.procstats.ProcessStats: int[] OPTIONS>;

        $i3 = $r3[i1];

        i6 = i4 | $i3;

     label3:
        i5 = i5 + 1;

        i4 = i6;

        goto label2;

     label4:
        return i4;
    }

    static int[] parseStateList(java.lang.String[], int, java.lang.String, boolean[], java.lang.String[])
    {
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9, $i11, i12, i13;
        java.lang.String r0, r4, $r12, $r13, r16;
        boolean[] r1;
        java.lang.String[] r2, r15;
        java.util.ArrayList $r5;
        java.lang.Object $r6;
        java.lang.Integer $r7, $r14;
        java.lang.StringBuilder $r8;
        boolean $z0, $z2, z3;
        char c10;
        int[] r18;

        r15 := @parameter0: java.lang.String[];

        i0 := @parameter1: int;

        r0 := @parameter2: java.lang.String;

        r1 := @parameter3: boolean[];

        r2 := @parameter4: java.lang.String[];

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        i8 = 0;

        i9 = 0;

     label01:
        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        if i9 > $i1 goto label14;

        $i6 = virtualinvoke r0.<java.lang.String: int length()>();

        if i9 >= $i6 goto label02;

        c10 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i9);

        goto label03;

     label02:
        c10 = 0;

     label03:
        if c10 == 44 goto label04;

        if c10 == 43 goto label04;

        if c10 == 32 goto label04;

        if c10 == 0 goto label04;

        goto label13;

     label04:
        if c10 != 44 goto label05;

        z3 = 1;

        goto label06;

     label05:
        z3 = 0;

     label06:
        if i8 != 0 goto label07;

        r1[0] = z3;

        goto label08;

     label07:
        if c10 == 0 goto label08;

        $z2 = r1[0];

        if $z2 == z3 goto label08;

        r2[0] = "inconsistent separators (can\'t mix \',\' with \'+\')";

        return null;

     label08:
        $i11 = i9 - 1;

        if i8 >= $i11 goto label12;

        r4 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i8, i9);

        i12 = 0;

     label09:
        r16 = r4;

        $i7 = lengthof r15;

        if i12 >= $i7 goto label11;

        $r13 = r15[i12];

        $z0 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        if $z0 == 0 goto label10;

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i12);

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r14);

        r16 = null;

        goto label11;

     label10:
        i12 = i12 + 1;

        goto label09;

     label11:
        if r16 == null goto label12;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid word \"");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        r2[0] = $r12;

        return null;

     label12:
        i8 = i9 + 1;

     label13:
        i9 = i9 + 1;

        goto label01;

     label14:
        $i2 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        r18 = newarray (int)[$i2];

        i13 = 0;

     label15:
        $i3 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        if i13 >= $i3 goto label16;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i13);

        $r7 = (java.lang.Integer) $r6;

        $i4 = virtualinvoke $r7.<java.lang.Integer: int intValue()>();

        $i5 = $i4 * i0;

        r18[i13] = $i5;

        i13 = i13 + 1;

        goto label15;

     label16:
        return r18;
    }

    private android.os.ParcelFileDescriptor protoToParcelFileDescriptor(com.android.internal.app.procstats.ProcessStats, int) throws java.io.IOException
    {
        com.android.server.am.ProcessStatsService r0;
        com.android.internal.app.procstats.ProcessStats r1;
        int i0;
        android.os.ParcelFileDescriptor[] r2;
        com.android.server.am.ProcessStatsService$3 $r3;
        android.os.ParcelFileDescriptor $r4;

        r0 := @this: com.android.server.am.ProcessStatsService;

        r1 := @parameter0: com.android.internal.app.procstats.ProcessStats;

        i0 := @parameter1: int;

        r2 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor[] createPipe()>();

        $r3 = new com.android.server.am.ProcessStatsService$3;

        specialinvoke $r3.<com.android.server.am.ProcessStatsService$3: void <init>(com.android.server.am.ProcessStatsService,java.lang.String,android.os.ParcelFileDescriptor[],com.android.internal.app.procstats.ProcessStats,int)>(r0, "ProcessStats pipe output", r2, r1, i0);

        virtualinvoke $r3.<java.lang.Thread: void start()>();

        $r4 = r2[0];

        return $r4;
    }

    private void updateFile()
    {
        com.android.server.am.ProcessStatsService r0;
        java.io.File r1, $r10;
        java.lang.StringBuilder $r3;
        com.android.internal.app.procstats.ProcessStats $r5;
        java.lang.String $r6, $r11;
        android.util.AtomicFile $r9;
        long $l0;

        r0 := @this: com.android.server.am.ProcessStatsService;

        r1 = r0.<com.android.server.am.ProcessStatsService: java.io.File mBaseDir>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("state-");

        $r5 = r0.<com.android.server.am.ProcessStatsService: com.android.internal.app.procstats.ProcessStats mProcessStats>;

        $r6 = $r5.<com.android.internal.app.procstats.ProcessStats: java.lang.String mTimePeriodStartClockStr>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".bin");

        $r9 = new android.util.AtomicFile;

        $r10 = new java.io.File;

        $r11 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, $r11);

        specialinvoke $r9.<android.util.AtomicFile: void <init>(java.io.File)>($r10);

        r0.<com.android.server.am.ProcessStatsService: android.util.AtomicFile mFile> = $r9;

        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r0.<com.android.server.am.ProcessStatsService: long mLastWriteTime> = $l0;

        return;
    }

    private void writeStateLocked(boolean)
    {
        com.android.server.am.ProcessStatsService r0;
        boolean z0, z1, $z2;

        r0 := @this: com.android.server.am.ProcessStatsService;

        z0 := @parameter0: boolean;

        $z2 = r0.<com.android.server.am.ProcessStatsService: boolean mShuttingDown>;

        if $z2 == 0 goto label1;

        return;

     label1:
        z1 = r0.<com.android.server.am.ProcessStatsService: boolean mCommitPending>;

        r0.<com.android.server.am.ProcessStatsService: boolean mCommitPending> = 0;

        virtualinvoke r0.<com.android.server.am.ProcessStatsService: void writeStateLocked(boolean,boolean)>(z0, z1);

        return;
    }

    public void addSysMemUsageLocked(long, long, long, long, long)
    {
        com.android.server.am.ProcessStatsService r0;
        long l0, l1, l2, l3, l4;
        com.android.internal.app.procstats.ProcessStats $r1;

        r0 := @this: com.android.server.am.ProcessStatsService;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        l3 := @parameter3: long;

        l4 := @parameter4: long;

        $r1 = r0.<com.android.server.am.ProcessStatsService: com.android.internal.app.procstats.ProcessStats mProcessStats>;

        virtualinvoke $r1.<com.android.internal.app.procstats.ProcessStats: void addSysMemUsage(long,long,long,long,long)>(l0, l1, l2, l3, l4);

        return;
    }

    protected void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.am.ProcessStatsService r0;
        java.io.PrintWriter r1;
        java.lang.String[] r2;
        long l0;
        com.android.server.am.ActivityManagerService $r3;
        android.content.Context $r4;
        boolean $z0, $z1, $z2;
        int $i1;
        java.lang.String $r5, $r6, $r7, $r8;
        java.lang.Throwable $r9;
        java.io.FileDescriptor r10;

        r0 := @this: com.android.server.am.ProcessStatsService;

        r10 := @parameter0: java.io.FileDescriptor;

        r1 := @parameter1: java.io.PrintWriter;

        r2 := @parameter2: java.lang.String[];

        $r3 = r0.<com.android.server.am.ProcessStatsService: com.android.server.am.ActivityManagerService mAm>;

        $r4 = $r3.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $z0 = staticinvoke <com.android.internal.util.DumpUtils: boolean checkDumpAndUsageStatsPermission(android.content.Context,java.lang.String,java.io.PrintWriter)>($r4, "ProcessStatsService", r1);

        if $z0 != 0 goto label1;

        return;

     label1:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label2:
        $i1 = lengthof r2;

        if $i1 <= 0 goto label6;

        $r6 = "--proto";

        $r5 = r2[0];

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z1 == 0 goto label4;

        specialinvoke r0.<com.android.server.am.ProcessStatsService: void dumpProto(java.io.FileDescriptor)>(r10);

     label3:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label4:
        $r8 = "--statsd";

        $r7 = r2[0];

        $z2 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z2 == 0 goto label6;

        specialinvoke r0.<com.android.server.am.ProcessStatsService: void dumpProtoForStatsd(java.io.FileDescriptor)>(r10);

     label5:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label6:
        specialinvoke r0.<com.android.server.am.ProcessStatsService: void dumpInner(java.io.PrintWriter,java.lang.String[])>(r1, r2);

     label7:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label8:
        $r9 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r9;

        catch java.lang.Throwable from label2 to label3 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    boolean dumpFilteredProcessesCsvLocked(java.io.PrintWriter, java.lang.String, boolean, int[], boolean, int[], boolean, int[], long, java.lang.String)
    {
        com.android.server.am.ProcessStatsService r0;
        java.io.PrintWriter r1;
        java.lang.String r2, r7;
        boolean z0, z1, z2;
        int[] r3, r4, r5;
        long l0;
        com.android.internal.app.procstats.ProcessStats $r6;
        int $i1;
        java.util.ArrayList r8;

        r0 := @this: com.android.server.am.ProcessStatsService;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        r3 := @parameter3: int[];

        z1 := @parameter4: boolean;

        r4 := @parameter5: int[];

        z2 := @parameter6: boolean;

        r5 := @parameter7: int[];

        l0 := @parameter8: long;

        r7 := @parameter9: java.lang.String;

        $r6 = r0.<com.android.server.am.ProcessStatsService: com.android.internal.app.procstats.ProcessStats mProcessStats>;

        r8 = virtualinvoke $r6.<com.android.internal.app.procstats.ProcessStats: java.util.ArrayList collectProcessesLocked(int[],int[],int[],int[],long,java.lang.String,boolean)>(r3, r4, r5, r5, l0, r7, 0);

        $i1 = virtualinvoke r8.<java.util.ArrayList: int size()>();

        if $i1 <= 0 goto label2;

        if r2 == null goto label1;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(r2);

     label1:
        staticinvoke <com.android.internal.app.procstats.DumpUtils: void dumpProcessListCsv(java.io.PrintWriter,java.util.ArrayList,boolean,int[],boolean,int[],boolean,int[],long)>(r1, r8, z0, r3, z1, r4, z2, r5, l0);

        return 1;

     label2:
        return 0;
    }

    public long getCommittedStats(long, int, boolean, java.util.List)
    {
        com.android.server.am.ProcessStatsService r0;
        long l0, $l2;
        int i1;
        boolean z0;
        java.util.List r1;
        com.android.internal.app.procstats.ProcessStats $r2;

        r0 := @this: com.android.server.am.ProcessStatsService;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        r1 := @parameter3: java.util.List;

        $r2 = new com.android.internal.app.procstats.ProcessStats;

        specialinvoke $r2.<com.android.internal.app.procstats.ProcessStats: void <init>(boolean)>(0);

        $l2 = virtualinvoke r0.<com.android.server.am.ProcessStatsService: long getCommittedStatsMerged(long,int,boolean,java.util.List,com.android.internal.app.procstats.ProcessStats)>(l0, i1, z0, r1, $r2);

        return $l2;
    }

    public long getCommittedStatsMerged(long, int, boolean, java.util.List, com.android.internal.app.procstats.ProcessStats)
    {
        com.android.server.am.ProcessStatsService r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, i16;
        boolean z0;
        com.android.internal.app.procstats.ProcessStats r1, r5;
        java.lang.String r2, r4, r6, $r14, $r16, $r18, $r39, $r44, $r46;
        java.util.ArrayList r3;
        com.android.server.am.ActivityManagerService $r7;
        android.content.Context $r8;
        java.util.concurrent.locks.ReentrantLock $r9, $r10, $r24, $r47;
        java.lang.CharSequence $r11;
        android.os.ParcelFileDescriptor $r12, $r19, r37;
        java.lang.Object $r13;
        long $l7, l13, l15, l17, l18, l19, l20;
        byte $b8;
        java.lang.Throwable $r20, $r23, $r25, $r26, $r30, $r31, $r33, r42, r48, r49;
        java.lang.IndexOutOfBoundsException $r27, $r32, $r34, r41;
        java.util.List r35;
        java.io.File r36;
        android.os.ParcelFileDescriptor$AutoCloseInputStream r38;
        java.lang.StringBuilder r40, r43, r45;

        r0 := @this: com.android.server.am.ProcessStatsService;

        l13 := @parameter0: long;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        r35 := @parameter3: java.util.List;

        r1 := @parameter4: com.android.internal.app.procstats.ProcessStats;

        r2 = "state-";

        $r7 = r0.<com.android.server.am.ProcessStatsService: com.android.server.am.ActivityManagerService mAm>;

        $r8 = $r7.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        virtualinvoke $r8.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.PACKAGE_USAGE_STATS", null);

        $r9 = r0.<com.android.server.am.ProcessStatsService: java.util.concurrent.locks.ReentrantLock mWriteLock>;

        virtualinvoke $r9.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label01:
        r3 = specialinvoke r0.<com.android.server.am.ProcessStatsService: java.util.ArrayList getCommittedFiles(int,boolean,boolean)>(0, 0, 1);

     label02:
        if r3 == null goto label70;

        l15 = l13;

     label03:
        $r11 = staticinvoke <android.text.format.DateFormat: java.lang.CharSequence format(java.lang.CharSequence,long)>("yyyy-MM-dd-HH-mm-ss", l13);

        r4 = interfaceinvoke $r11.<java.lang.CharSequence: java.lang.String toString()>();

     label04:
        l15 = l13;

     label05:
        r5 = new com.android.internal.app.procstats.ProcessStats;

     label06:
        l15 = l13;

     label07:
        specialinvoke r5.<com.android.internal.app.procstats.ProcessStats: void <init>(boolean)>(0);

     label08:
        l15 = l13;

     label09:
        $i3 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        i16 = $i3 - 1;

     label10:
        l17 = l13;

     label11:
        if i16 < 0 goto label66;

        l15 = l17;

     label12:
        $r13 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i16);

        r6 = (java.lang.String) $r13;

     label13:
        i1 = virtualinvoke r6.<java.lang.String: int lastIndexOf(java.lang.String)>("state-");

        i2 = virtualinvoke r2.<java.lang.String: int length()>();

     label14:
        $i4 = i1 + i2;

        $i5 = virtualinvoke r6.<java.lang.String: int lastIndexOf(java.lang.String)>(".bin");

        $r14 = virtualinvoke r6.<java.lang.String: java.lang.String substring(int,int)>($i4, $i5);

        $i6 = virtualinvoke $r14.<java.lang.String: int compareToIgnoreCase(java.lang.String)>(r4);

        if $i6 <= 0 goto label39;

        r36 = new java.io.File;

        specialinvoke r36.<java.io.File: void <init>(java.lang.String)>(r6);

        r37 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor open(java.io.File,int)>(r36, 268435456);

        r38 = new android.os.ParcelFileDescriptor$AutoCloseInputStream;

        specialinvoke r38.<android.os.ParcelFileDescriptor$AutoCloseInputStream: void <init>(android.os.ParcelFileDescriptor)>(r37);

        virtualinvoke r5.<com.android.internal.app.procstats.ProcessStats: void reset()>();

        virtualinvoke r5.<com.android.internal.app.procstats.ProcessStats: void read(java.io.InputStream)>(r38);

        virtualinvoke r38.<java.io.InputStream: void close()>();

     label15:
        l18 = l17;

        l19 = l17;

        l20 = l17;

     label16:
        $l7 = r5.<com.android.internal.app.procstats.ProcessStats: long mTimePeriodStartClock>;

        $b8 = $l7 cmp l17;

        if $b8 <= 0 goto label19;

     label17:
        l19 = l17;

        l20 = l17;

     label18:
        l18 = r5.<com.android.internal.app.procstats.ProcessStats: long mTimePeriodStartClock>;

     label19:
        if z0 == 0 goto label22;

        l19 = l18;

        l20 = l18;

     label20:
        virtualinvoke r1.<com.android.internal.app.procstats.ProcessStats: void add(com.android.internal.app.procstats.ProcessStats)>(r5);

     label21:
        goto label24;

     label22:
        if r35 == null goto label24;

        l19 = l18;

        l20 = l18;

     label23:
        $r19 = specialinvoke r0.<com.android.server.am.ProcessStatsService: android.os.ParcelFileDescriptor protoToParcelFileDescriptor(com.android.internal.app.procstats.ProcessStats,int)>(r5, i0);

        interfaceinvoke r35.<java.util.List: boolean add(java.lang.Object)>($r19);

     label24:
        l19 = l18;

        l20 = l18;

        l17 = l18;

     label25:
        $r39 = r5.<com.android.internal.app.procstats.ProcessStats: java.lang.String mReadError>;

        if $r39 == null goto label39;

     label26:
        l19 = l18;

        l20 = l18;

     label27:
        r40 = new java.lang.StringBuilder;

     label28:
        l19 = l18;

        l20 = l18;

     label29:
        specialinvoke r40.<java.lang.StringBuilder: void <init>()>();

     label30:
        l19 = l18;

        l20 = l18;

     label31:
        virtualinvoke r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure reading process stats: ");

     label32:
        l19 = l18;

        l20 = l18;

     label33:
        $r16 = r5.<com.android.internal.app.procstats.ProcessStats: java.lang.String mReadError>;

        virtualinvoke r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

     label34:
        l19 = l18;

        l20 = l18;

     label35:
        $r18 = virtualinvoke r40.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ProcessStatsService", $r18);

     label36:
        l17 = l18;

        goto label65;

     label37:
        $r32 := @caughtexception;

        r41 = $r32;

        l17 = l19;

        goto label43;

     label38:
        $r20 := @caughtexception;

        r42 = $r20;

        l17 = l20;

        goto label55;

     label39:
        goto label65;

     label40:
        $r34 := @caughtexception;

        r41 = $r34;

        goto label43;

     label41:
        $r33 := @caughtexception;

        r42 = $r33;

        goto label55;

     label42:
        $r27 := @caughtexception;

        r41 = $r27;

     label43:
        l15 = l17;

     label44:
        r43 = new java.lang.StringBuilder;

     label45:
        l15 = l17;

     label46:
        specialinvoke r43.<java.lang.StringBuilder: void <init>()>();

     label47:
        l15 = l17;

     label48:
        virtualinvoke r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure to read and parse commit file ");

     label49:
        l15 = l17;

     label50:
        virtualinvoke r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

     label51:
        l15 = l17;

     label52:
        $r44 = virtualinvoke r43.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ProcessStatsService", $r44, r41);

     label53:
        goto label65;

     label54:
        $r31 := @caughtexception;

        r42 = $r31;

     label55:
        l15 = l17;

     label56:
        r45 = new java.lang.StringBuilder;

     label57:
        l15 = l17;

     label58:
        specialinvoke r45.<java.lang.StringBuilder: void <init>()>();

     label59:
        l15 = l17;

     label60:
        virtualinvoke r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure opening procstat file ");

     label61:
        l15 = l17;

     label62:
        virtualinvoke r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

     label63:
        l15 = l17;

     label64:
        $r46 = virtualinvoke r45.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ProcessStatsService", $r46, r42);

     label65:
        i16 = i16 + -1;

        goto label11;

     label66:
        if z0 == 0 goto label68;

        if r35 == null goto label68;

        l15 = l17;

     label67:
        $r12 = specialinvoke r0.<com.android.server.am.ProcessStatsService: android.os.ParcelFileDescriptor protoToParcelFileDescriptor(com.android.internal.app.procstats.ProcessStats,int)>(r1, i0);

        interfaceinvoke r35.<java.util.List: boolean add(java.lang.Object)>($r12);

     label68:
        $r47 = r0.<com.android.server.am.ProcessStatsService: java.util.concurrent.locks.ReentrantLock mWriteLock>;

        virtualinvoke $r47.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return l17;

     label69:
        $r26 := @caughtexception;

        r48 = $r26;

        goto label74;

     label70:
        l15 = l13;

     label71:
        $r10 = r0.<com.android.server.am.ProcessStatsService: java.util.concurrent.locks.ReentrantLock mWriteLock>;

        virtualinvoke $r10.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        goto label76;

     label72:
        $r23 := @caughtexception;

        r49 = $r23;

        goto label78;

     label73:
        $r30 := @caughtexception;

        r48 = $r30;

        l15 = l13;

     label74:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ProcessStatsService", "Failure opening procstat file", r48);

     label75:
        goto label71;

     label76:
        return l15;

     label77:
        $r25 := @caughtexception;

        r49 = $r25;

     label78:
        $r24 = r0.<com.android.server.am.ProcessStatsService: java.util.concurrent.locks.ReentrantLock mWriteLock>;

        virtualinvoke $r24.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw r49;

        catch java.io.IOException from label01 to label02 with label73;
        catch java.lang.Throwable from label01 to label02 with label72;
        catch java.io.IOException from label03 to label04 with label69;
        catch java.lang.Throwable from label03 to label04 with label77;
        catch java.io.IOException from label05 to label06 with label69;
        catch java.lang.Throwable from label05 to label06 with label77;
        catch java.io.IOException from label07 to label08 with label69;
        catch java.lang.Throwable from label07 to label08 with label77;
        catch java.io.IOException from label09 to label10 with label69;
        catch java.lang.Throwable from label09 to label10 with label77;
        catch java.io.IOException from label12 to label13 with label69;
        catch java.lang.Throwable from label12 to label13 with label77;
        catch java.io.IOException from label13 to label14 with label54;
        catch java.lang.IndexOutOfBoundsException from label13 to label14 with label42;
        catch java.lang.Throwable from label13 to label14 with label77;
        catch java.io.IOException from label14 to label15 with label41;
        catch java.lang.IndexOutOfBoundsException from label14 to label15 with label40;
        catch java.lang.Throwable from label14 to label15 with label77;
        catch java.io.IOException from label16 to label17 with label38;
        catch java.lang.IndexOutOfBoundsException from label16 to label17 with label37;
        catch java.lang.Throwable from label16 to label17 with label77;
        catch java.io.IOException from label18 to label19 with label38;
        catch java.lang.IndexOutOfBoundsException from label18 to label19 with label37;
        catch java.lang.Throwable from label18 to label19 with label77;
        catch java.io.IOException from label20 to label21 with label38;
        catch java.lang.IndexOutOfBoundsException from label20 to label21 with label37;
        catch java.lang.Throwable from label20 to label21 with label77;
        catch java.io.IOException from label23 to label24 with label38;
        catch java.lang.IndexOutOfBoundsException from label23 to label24 with label37;
        catch java.lang.Throwable from label23 to label24 with label77;
        catch java.io.IOException from label25 to label26 with label38;
        catch java.lang.IndexOutOfBoundsException from label25 to label26 with label37;
        catch java.lang.Throwable from label25 to label26 with label77;
        catch java.io.IOException from label27 to label28 with label38;
        catch java.lang.IndexOutOfBoundsException from label27 to label28 with label37;
        catch java.lang.Throwable from label27 to label28 with label77;
        catch java.io.IOException from label29 to label30 with label38;
        catch java.lang.IndexOutOfBoundsException from label29 to label30 with label37;
        catch java.lang.Throwable from label29 to label30 with label77;
        catch java.io.IOException from label31 to label32 with label38;
        catch java.lang.IndexOutOfBoundsException from label31 to label32 with label37;
        catch java.lang.Throwable from label31 to label32 with label77;
        catch java.io.IOException from label33 to label34 with label38;
        catch java.lang.IndexOutOfBoundsException from label33 to label34 with label37;
        catch java.lang.Throwable from label33 to label34 with label77;
        catch java.io.IOException from label35 to label36 with label38;
        catch java.lang.IndexOutOfBoundsException from label35 to label36 with label37;
        catch java.lang.Throwable from label35 to label36 with label77;
        catch java.io.IOException from label44 to label45 with label69;
        catch java.lang.Throwable from label44 to label45 with label77;
        catch java.io.IOException from label46 to label47 with label69;
        catch java.lang.Throwable from label46 to label47 with label77;
        catch java.io.IOException from label48 to label49 with label69;
        catch java.lang.Throwable from label48 to label49 with label77;
        catch java.io.IOException from label50 to label51 with label69;
        catch java.lang.Throwable from label50 to label51 with label77;
        catch java.io.IOException from label52 to label53 with label69;
        catch java.lang.Throwable from label52 to label53 with label77;
        catch java.io.IOException from label56 to label57 with label69;
        catch java.lang.Throwable from label56 to label57 with label77;
        catch java.io.IOException from label58 to label59 with label69;
        catch java.lang.Throwable from label58 to label59 with label77;
        catch java.io.IOException from label60 to label61 with label69;
        catch java.lang.Throwable from label60 to label61 with label77;
        catch java.io.IOException from label62 to label63 with label69;
        catch java.lang.Throwable from label62 to label63 with label77;
        catch java.io.IOException from label64 to label65 with label69;
        catch java.lang.Throwable from label64 to label65 with label77;
        catch java.io.IOException from label67 to label68 with label69;
        catch java.lang.Throwable from label67 to label68 with label77;
        catch java.lang.Throwable from label74 to label75 with label77;
    }

    public int getCurrentMemoryState()
    {
        com.android.server.am.ProcessStatsService r0;
        com.android.server.am.ActivityManagerService r1;
        int i0;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.am.ProcessStatsService;

        r1 = r0.<com.android.server.am.ProcessStatsService: com.android.server.am.ActivityManagerService mAm>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        i0 = r0.<com.android.server.am.ProcessStatsService: int mLastMemOnlyState>;

        exitmonitor r1;

     label2:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return i0;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public byte[] getCurrentStats(java.util.List)
    {
        com.android.server.am.ProcessStatsService r0;
        android.os.Parcel r1;
        long l0, $l1;
        java.lang.StringBuilder r2;
        com.android.server.am.ActivityManagerService $r3, r22;
        android.content.Context $r4;
        com.android.internal.app.procstats.ProcessStats $r5, $r6, $r7;
        java.util.concurrent.locks.ReentrantLock $r8, $r20, $r27;
        java.lang.Object $r9, $r14;
        java.lang.String $r10, $r15, $r17;
        android.os.ParcelFileDescriptor $r11;
        java.lang.Throwable $r12, $r18, $r19;
        java.util.List r21;
        java.util.ArrayList r23;
        int i3, i4;
        java.io.File r24;
        byte[] $r28;

        r0 := @this: com.android.server.am.ProcessStatsService;

        r21 := @parameter0: java.util.List;

        $r3 = r0.<com.android.server.am.ProcessStatsService: com.android.server.am.ActivityManagerService mAm>;

        $r4 = $r3.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        virtualinvoke $r4.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.PACKAGE_USAGE_STATS", null);

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r22 = r0.<com.android.server.am.ProcessStatsService: com.android.server.am.ActivityManagerService mAm>;

        entermonitor r22;

     label01:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r5 = r0.<com.android.server.am.ProcessStatsService: com.android.internal.app.procstats.ProcessStats mProcessStats>;

        $l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r5.<com.android.internal.app.procstats.ProcessStats: long mTimePeriodEndRealtime> = $l1;

        $r6 = r0.<com.android.server.am.ProcessStatsService: com.android.internal.app.procstats.ProcessStats mProcessStats>;

        $r6.<com.android.internal.app.procstats.ProcessStats: long mTimePeriodEndUptime> = l0;

        $r7 = r0.<com.android.server.am.ProcessStatsService: com.android.internal.app.procstats.ProcessStats mProcessStats>;

        virtualinvoke $r7.<com.android.internal.app.procstats.ProcessStats: void writeToParcel(android.os.Parcel,long,int)>(r1, l0, 0);

        exitmonitor r22;

     label02:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        $r8 = r0.<com.android.server.am.ProcessStatsService: java.util.concurrent.locks.ReentrantLock mWriteLock>;

        virtualinvoke $r8.<java.util.concurrent.locks.ReentrantLock: void lock()>();

        if r21 == null goto label14;

     label03:
        r23 = specialinvoke r0.<com.android.server.am.ProcessStatsService: java.util.ArrayList getCommittedFiles(int,boolean,boolean)>(0, 0, 1);

     label04:
        if r23 == null goto label14;

     label05:
        i3 = virtualinvoke r23.<java.util.ArrayList: int size()>();

     label06:
        i4 = i3 + -1;

     label07:
        if i4 < 0 goto label14;

     label08:
        r24 = new java.io.File;

        $r9 = virtualinvoke r23.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        $r10 = (java.lang.String) $r9;

        specialinvoke r24.<java.io.File: void <init>(java.lang.String)>($r10);

        $r11 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor open(java.io.File,int)>(r24, 268435456);

        interfaceinvoke r21.<java.util.List: boolean add(java.lang.Object)>($r11);

     label09:
        goto label12;

     label10:
        $r12 := @caughtexception;

     label11:
        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure opening procstat file ");

        $r14 = virtualinvoke r23.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        $r15 = (java.lang.String) $r14;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ProcessStatsService", $r17, $r12);

     label12:
        i4 = i4 + -1;

        goto label07;

     label13:
        $r19 := @caughtexception;

        $r20 = r0.<com.android.server.am.ProcessStatsService: java.util.concurrent.locks.ReentrantLock mWriteLock>;

        virtualinvoke $r20.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r19;

     label14:
        $r27 = r0.<com.android.server.am.ProcessStatsService: java.util.concurrent.locks.ReentrantLock mWriteLock>;

        virtualinvoke $r27.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        $r28 = virtualinvoke r1.<android.os.Parcel: byte[] marshall()>();

        return $r28;

     label15:
        $r18 := @caughtexception;

     label16:
        exitmonitor r22;

     label17:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r18;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.io.IOException from label08 to label09 with label10;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label16 to label17 with label15;
    }

    public int getMemFactorLocked()
    {
        com.android.server.am.ProcessStatsService r0;
        com.android.internal.app.procstats.ProcessStats $r1, $r2;
        int $i0, i1;

        r0 := @this: com.android.server.am.ProcessStatsService;

        $r1 = r0.<com.android.server.am.ProcessStatsService: com.android.internal.app.procstats.ProcessStats mProcessStats>;

        $i0 = $r1.<com.android.internal.app.procstats.ProcessStats: int mMemFactor>;

        if $i0 == -1 goto label1;

        $r2 = r0.<com.android.server.am.ProcessStatsService: com.android.internal.app.procstats.ProcessStats mProcessStats>;

        i1 = $r2.<com.android.internal.app.procstats.ProcessStats: int mMemFactor>;

        goto label2;

     label1:
        i1 = 0;

     label2:
        return i1;
    }

    public long getMinAssociationDumpDuration()
    {
        com.android.server.am.ProcessStatsService r0;
        com.android.server.am.ActivityManagerConstants r1;
        com.android.server.am.ActivityManagerService $r2;
        long $l0;

        r0 := @this: com.android.server.am.ProcessStatsService;

        $r2 = r0.<com.android.server.am.ProcessStatsService: com.android.server.am.ActivityManagerService mAm>;

        r1 = $r2.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerConstants mConstants>;

        $l0 = <com.android.server.am.ActivityManagerConstants: long MIN_ASSOC_LOG_DURATION>;

        return $l0;
    }

    public com.android.internal.app.procstats.ProcessState getProcessStateLocked(java.lang.String, int, long, java.lang.String)
    {
        com.android.server.am.ProcessStatsService r0;
        java.lang.String r1, r2;
        int i0;
        long l1;
        com.android.internal.app.procstats.ProcessStats $r3;
        com.android.internal.app.procstats.ProcessState $r4;

        r0 := @this: com.android.server.am.ProcessStatsService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        r2 := @parameter3: java.lang.String;

        $r3 = r0.<com.android.server.am.ProcessStatsService: com.android.internal.app.procstats.ProcessStats mProcessStats>;

        $r4 = virtualinvoke $r3.<com.android.internal.app.procstats.ProcessStats: com.android.internal.app.procstats.ProcessState getProcessStateLocked(java.lang.String,int,long,java.lang.String)>(r1, i0, l1, r2);

        return $r4;
    }

    public com.android.internal.app.procstats.ServiceState getServiceStateLocked(java.lang.String, int, long, java.lang.String, java.lang.String)
    {
        com.android.server.am.ProcessStatsService r0;
        java.lang.String r1, r2, r3;
        int i0;
        long l1;
        com.android.internal.app.procstats.ProcessStats $r4;
        com.android.internal.app.procstats.ServiceState $r5;

        r0 := @this: com.android.server.am.ProcessStatsService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: java.lang.String;

        $r4 = r0.<com.android.server.am.ProcessStatsService: com.android.internal.app.procstats.ProcessStats mProcessStats>;

        $r5 = virtualinvoke $r4.<com.android.internal.app.procstats.ProcessStats: com.android.internal.app.procstats.ServiceState getServiceStateLocked(java.lang.String,int,long,java.lang.String,java.lang.String)>(r1, i0, l1, r2, r3);

        return $r5;
    }

    public android.os.ParcelFileDescriptor getStatsOverTime(long)
    {
        com.android.server.am.ProcessStatsService r0;
        long l0, l1, $l2, $l3, $l7, $l8, $l9, $l13, $l14, $l15, l18, l19;
        java.util.ArrayList r1;
        com.android.server.am.ActivityManagerService $r2, r34;
        android.content.Context $r3;
        com.android.internal.app.procstats.ProcessStats $r4, $r5, $r6, $r7, $r8, r36, r39;
        java.util.concurrent.locks.ReentrantLock $r9, $r29, $r32, $r46;
        byte $b4, $b10;
        int $i5, $i6, $i11, i20;
        android.os.Parcelable$Creator $r10;
        java.lang.Object $r11, $r12, $r16;
        java.lang.String $r13, $r14, $r17, $r20, $r22, $r24, $r27;
        java.lang.Throwable $r28, $r30, $r31;
        android.os.Parcel r33, r35;
        android.util.AtomicFile r37;
        java.io.File r38;
        java.lang.StringBuilder r40, r41;
        byte[] r42;
        android.os.ParcelFileDescriptor[] r43;
        com.android.server.am.ProcessStatsService$4 r44;
        android.os.ParcelFileDescriptor r45;

        r0 := @this: com.android.server.am.ProcessStatsService;

        l0 := @parameter0: long;

        $r2 = r0.<com.android.server.am.ProcessStatsService: com.android.server.am.ActivityManagerService mAm>;

        $r3 = $r2.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        virtualinvoke $r3.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.PACKAGE_USAGE_STATS", null);

        r33 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r34 = r0.<com.android.server.am.ProcessStatsService: com.android.server.am.ActivityManagerService mAm>;

        entermonitor r34;

     label01:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        l18 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r4 = r0.<com.android.server.am.ProcessStatsService: com.android.internal.app.procstats.ProcessStats mProcessStats>;

        $l2 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r4.<com.android.internal.app.procstats.ProcessStats: long mTimePeriodEndRealtime> = $l2;

        $r5 = r0.<com.android.server.am.ProcessStatsService: com.android.internal.app.procstats.ProcessStats mProcessStats>;

        $r5.<com.android.internal.app.procstats.ProcessStats: long mTimePeriodEndUptime> = l18;

        $r6 = r0.<com.android.server.am.ProcessStatsService: com.android.internal.app.procstats.ProcessStats mProcessStats>;

        virtualinvoke $r6.<com.android.internal.app.procstats.ProcessStats: void writeToParcel(android.os.Parcel,long,int)>(r33, l18, 0);

        $r7 = r0.<com.android.server.am.ProcessStatsService: com.android.internal.app.procstats.ProcessStats mProcessStats>;

        l1 = $r7.<com.android.internal.app.procstats.ProcessStats: long mTimePeriodEndRealtime>;

        $r8 = r0.<com.android.server.am.ProcessStatsService: com.android.internal.app.procstats.ProcessStats mProcessStats>;

        l19 = $r8.<com.android.internal.app.procstats.ProcessStats: long mTimePeriodStartRealtime>;

        exitmonitor r34;

     label02:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        $r9 = r0.<com.android.server.am.ProcessStatsService: java.util.concurrent.locks.ReentrantLock mWriteLock>;

        virtualinvoke $r9.<java.util.concurrent.locks.ReentrantLock: void lock()>();

        r35 = r33;

        $l3 = l1 - l19;

        $b4 = $l3 cmp l0;

        if $b4 >= 0 goto label14;

     label03:
        r1 = specialinvoke r0.<com.android.server.am.ProcessStatsService: java.util.ArrayList getCommittedFiles(int,boolean,boolean)>(0, 0, 1);

     label04:
        r35 = r33;

        if r1 == null goto label14;

        r35 = r33;

     label05:
        $i5 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if $i5 <= 0 goto label14;

        virtualinvoke r33.<android.os.Parcel: void setDataPosition(int)>(0);

        $r10 = <com.android.internal.app.procstats.ProcessStats: android.os.Parcelable$Creator CREATOR>;

        $r11 = interfaceinvoke $r10.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r33);

        r36 = (com.android.internal.app.procstats.ProcessStats) $r11;

        virtualinvoke r33.<android.os.Parcel: void recycle()>();

        $i6 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        i20 = $i6 - 1;

     label06:
        if i20 < 0 goto label13;

     label07:
        $l8 = r36.<com.android.internal.app.procstats.ProcessStats: long mTimePeriodEndRealtime>;

        $l7 = r36.<com.android.internal.app.procstats.ProcessStats: long mTimePeriodStartRealtime>;

        $l9 = $l8 - $l7;

        $b10 = $l9 cmp l0;

        if $b10 >= 0 goto label13;

        r37 = new android.util.AtomicFile;

        r38 = new java.io.File;

        $r12 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i20);

        $r13 = (java.lang.String) $r12;

        specialinvoke r38.<java.io.File: void <init>(java.lang.String)>($r13);

        specialinvoke r37.<android.util.AtomicFile: void <init>(java.io.File)>(r38);

     label08:
        i20 = i20 + -1;

     label09:
        r39 = new com.android.internal.app.procstats.ProcessStats;

        specialinvoke r39.<com.android.internal.app.procstats.ProcessStats: void <init>(boolean)>(0);

        virtualinvoke r0.<com.android.server.am.ProcessStatsService: boolean readLocked(com.android.internal.app.procstats.ProcessStats,android.util.AtomicFile)>(r39, r37);

        $r14 = r39.<com.android.internal.app.procstats.ProcessStats: java.lang.String mReadError>;

        if $r14 != null goto label11;

        virtualinvoke r36.<com.android.internal.app.procstats.ProcessStats: void add(com.android.internal.app.procstats.ProcessStats)>(r39);

        r40 = new java.lang.StringBuilder;

        specialinvoke r40.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Added stats: ");

        $r24 = r39.<com.android.internal.app.procstats.ProcessStats: java.lang.String mTimePeriodStartClockStr>;

        virtualinvoke r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        virtualinvoke r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", over ");

        $l14 = r39.<com.android.internal.app.procstats.ProcessStats: long mTimePeriodEndRealtime>;

        $l13 = r39.<com.android.internal.app.procstats.ProcessStats: long mTimePeriodStartRealtime>;

        $l15 = $l14 - $l13;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.lang.StringBuilder)>($l15, r40);

        $r27 = virtualinvoke r40.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ProcessStatsService", $r27);

     label10:
        goto label06;

     label11:
        r41 = new java.lang.StringBuilder;

        specialinvoke r41.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure reading ");

        $i11 = i20 + 1;

        $r16 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>($i11);

        $r17 = (java.lang.String) $r16;

        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; ");

        $r20 = r39.<com.android.internal.app.procstats.ProcessStats: java.lang.String mReadError>;

        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke r41.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ProcessStatsService", $r22);

     label12:
        goto label06;

     label13:
        r35 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        virtualinvoke r36.<com.android.internal.app.procstats.ProcessStats: void writeToParcel(android.os.Parcel,int)>(r35, 0);

     label14:
        r42 = virtualinvoke r35.<android.os.Parcel: byte[] marshall()>();

        virtualinvoke r35.<android.os.Parcel: void recycle()>();

        r43 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor[] createPipe()>();

        r44 = new com.android.server.am.ProcessStatsService$4;

        specialinvoke r44.<com.android.server.am.ProcessStatsService$4: void <init>(com.android.server.am.ProcessStatsService,java.lang.String,android.os.ParcelFileDescriptor[],byte[])>(r0, "ProcessStats pipe output", r43, r42);

        virtualinvoke r44.<java.lang.Thread: void start()>();

     label15:
        r45 = r43[0];

        $r46 = r0.<com.android.server.am.ProcessStatsService: java.util.concurrent.locks.ReentrantLock mWriteLock>;

        virtualinvoke $r46.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return r45;

     label16:
        $r28 := @caughtexception;

        goto label20;

     label17:
        $r31 := @caughtexception;

     label18:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ProcessStatsService", "Failed building output pipe", $r31);

     label19:
        $r32 = r0.<com.android.server.am.ProcessStatsService: java.util.concurrent.locks.ReentrantLock mWriteLock>;

        virtualinvoke $r32.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return null;

     label20:
        $r29 = r0.<com.android.server.am.ProcessStatsService: java.util.concurrent.locks.ReentrantLock mWriteLock>;

        virtualinvoke $r29.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r28;

     label21:
        $r30 := @caughtexception;

     label22:
        exitmonitor r34;

     label23:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r30;

        catch java.lang.Throwable from label01 to label02 with label21;
        catch java.io.IOException from label03 to label04 with label17;
        catch java.lang.Throwable from label03 to label04 with label16;
        catch java.io.IOException from label05 to label06 with label17;
        catch java.lang.Throwable from label05 to label06 with label16;
        catch java.io.IOException from label07 to label08 with label17;
        catch java.lang.Throwable from label07 to label08 with label16;
        catch java.io.IOException from label09 to label10 with label17;
        catch java.lang.Throwable from label09 to label10 with label16;
        catch java.io.IOException from label11 to label12 with label17;
        catch java.lang.Throwable from label11 to label12 with label16;
        catch java.io.IOException from label13 to label14 with label17;
        catch java.lang.Throwable from label13 to label14 with label16;
        catch java.io.IOException from label14 to label15 with label17;
        catch java.lang.Throwable from label14 to label15 with label16;
        catch java.lang.Throwable from label18 to label19 with label16;
        catch java.lang.Throwable from label22 to label23 with label21;
    }

    public boolean isMemFactorLowered()
    {
        com.android.server.am.ProcessStatsService r0;
        boolean $z0;

        r0 := @this: com.android.server.am.ProcessStatsService;

        $z0 = r0.<com.android.server.am.ProcessStatsService: boolean mMemFactorLowered>;

        return $z0;
    }

    public boolean onTransact(int, android.os.Parcel, android.os.Parcel, int) throws android.os.RemoteException
    {
        com.android.server.am.ProcessStatsService r0;
        int i0, i1;
        android.os.Parcel r1, r3;
        boolean z0, $z1;
        java.lang.RuntimeException $r2;

        r0 := @this: com.android.server.am.ProcessStatsService;

        i0 := @parameter0: int;

        r3 := @parameter1: android.os.Parcel;

        r1 := @parameter2: android.os.Parcel;

        i1 := @parameter3: int;

     label1:
        z0 = specialinvoke r0.<com.android.internal.app.procstats.IProcessStats$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>(i0, r3, r1, i1);

     label2:
        return z0;

     label3:
        $r2 := @caughtexception;

        $z1 = $r2 instanceof java.lang.SecurityException;

        if $z1 != 0 goto label4;

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("ProcessStatsService", "Process Stats Crash", $r2);

     label4:
        throw $r2;

        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    void performWriteState(long)
    {
        com.android.server.am.ProcessStatsService r0;
        long l0, l1, $l2, $l3, $l4;
        android.os.Parcel r1;
        android.util.AtomicFile r2;
        java.util.concurrent.locks.ReentrantLock $r3, $r5, $r8;
        byte[] $r4;
        java.lang.Throwable $r6, $r7, $r9;
        java.lang.Object r10;
        java.io.FileOutputStream r11, r12;

        r0 := @this: com.android.server.am.ProcessStatsService;

        l0 := @parameter0: long;

        r10 = r0.<com.android.server.am.ProcessStatsService: java.lang.Object mPendingWriteLock>;

        entermonitor r10;

     label01:
        r1 = r0.<com.android.server.am.ProcessStatsService: android.os.Parcel mPendingWrite>;

        r2 = r0.<com.android.server.am.ProcessStatsService: android.util.AtomicFile mPendingWriteFile>;

        r0.<com.android.server.am.ProcessStatsService: boolean mPendingWriteCommitted> = 0;

     label02:
        if r1 != null goto label05;

     label03:
        exitmonitor r10;

     label04:
        return;

     label05:
        r0.<com.android.server.am.ProcessStatsService: android.os.Parcel mPendingWrite> = null;

        r0.<com.android.server.am.ProcessStatsService: android.util.AtomicFile mPendingWriteFile> = null;

        $r3 = r0.<com.android.server.am.ProcessStatsService: java.util.concurrent.locks.ReentrantLock mWriteLock>;

        virtualinvoke $r3.<java.util.concurrent.locks.ReentrantLock: void lock()>();

        exitmonitor r10;

     label06:
        l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r11 = null;

     label07:
        r12 = virtualinvoke r2.<android.util.AtomicFile: java.io.FileOutputStream startWrite()>();

     label08:
        r11 = r12;

     label09:
        $r4 = virtualinvoke r1.<android.os.Parcel: byte[] marshall()>();

        virtualinvoke r12.<java.io.FileOutputStream: void write(byte[])>($r4);

     label10:
        r11 = r12;

     label11:
        virtualinvoke r12.<java.io.FileOutputStream: void flush()>();

     label12:
        r11 = r12;

     label13:
        virtualinvoke r2.<android.util.AtomicFile: void finishWrite(java.io.FileOutputStream)>(r12);

     label14:
        r11 = r12;

     label15:
        $l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l3 = $l2 - l1;

        $l4 = $l3 + l0;

        staticinvoke <com.android.internal.logging.EventLogTags: void writeCommitSysConfigFile(java.lang.String,long)>("procstats", $l4);

     label16:
        goto label20;

     label17:
        $r7 := @caughtexception;

        goto label21;

     label18:
        $r6 := @caughtexception;

     label19:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ProcessStatsService", "Error writing process statistics", $r6);

        virtualinvoke r2.<android.util.AtomicFile: void failWrite(java.io.FileOutputStream)>(r11);

     label20:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        virtualinvoke r0.<com.android.server.am.ProcessStatsService: void trimHistoricStatesWriteLocked()>();

        $r5 = r0.<com.android.server.am.ProcessStatsService: java.util.concurrent.locks.ReentrantLock mWriteLock>;

        virtualinvoke $r5.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return;

     label21:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        virtualinvoke r0.<com.android.server.am.ProcessStatsService: void trimHistoricStatesWriteLocked()>();

        $r8 = r0.<com.android.server.am.ProcessStatsService: java.util.concurrent.locks.ReentrantLock mWriteLock>;

        virtualinvoke $r8.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r7;

     label22:
        $r9 := @caughtexception;

     label23:
        exitmonitor r10;

     label24:
        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label22;
        catch java.lang.Throwable from label03 to label04 with label22;
        catch java.lang.Throwable from label05 to label06 with label22;
        catch java.io.IOException from label07 to label08 with label18;
        catch java.lang.Throwable from label07 to label08 with label17;
        catch java.io.IOException from label09 to label10 with label18;
        catch java.lang.Throwable from label09 to label10 with label17;
        catch java.io.IOException from label11 to label12 with label18;
        catch java.lang.Throwable from label11 to label12 with label17;
        catch java.io.IOException from label13 to label14 with label18;
        catch java.lang.Throwable from label13 to label14 with label17;
        catch java.io.IOException from label15 to label16 with label18;
        catch java.lang.Throwable from label15 to label16 with label17;
        catch java.lang.Throwable from label19 to label20 with label17;
        catch java.lang.Throwable from label23 to label24 with label22;
    }

    boolean readLocked(com.android.internal.app.procstats.ProcessStats, android.util.AtomicFile)
    {
        com.android.server.am.ProcessStatsService r0;
        com.android.internal.app.procstats.ProcessStats r1;
        java.lang.String $r3, $r5, $r7, $r12;
        java.lang.Throwable $r8;
        java.lang.StringBuilder $r9, r15;
        android.util.AtomicFile r13;
        java.io.FileInputStream r14;

        r0 := @this: com.android.server.am.ProcessStatsService;

        r1 := @parameter0: com.android.internal.app.procstats.ProcessStats;

        r13 := @parameter1: android.util.AtomicFile;

     label1:
        r14 = virtualinvoke r13.<android.util.AtomicFile: java.io.FileInputStream openRead()>();

        virtualinvoke r1.<com.android.internal.app.procstats.ProcessStats: void read(java.io.InputStream)>(r14);

        virtualinvoke r14.<java.io.FileInputStream: void close()>();

        $r3 = r1.<com.android.internal.app.procstats.ProcessStats: java.lang.String mReadError>;

        if $r3 == null goto label3;

        r15 = new java.lang.StringBuilder;

        specialinvoke r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring existing stats; ");

        $r5 = r1.<com.android.internal.app.procstats.ProcessStats: java.lang.String mReadError>;

        virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ProcessStatsService", $r7);

     label2:
        return 0;

     label3:
        return 1;

     label4:
        $r8 := @caughtexception;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("caught exception: ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        r1.<com.android.internal.app.procstats.ProcessStats: java.lang.String mReadError> = $r12;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ProcessStatsService", "Error reading process statistics", $r8);

        return 0;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public boolean setMemFactorLocked(int, boolean, long)
    {
        com.android.server.am.ProcessStatsService r0;
        long l0, $l8, $l9, $l10, $l11;
        android.util.ArrayMap r1, r21;
        android.util.SparseArray r2;
        android.util.LongSparseArray r3;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, i12, i13, i14, i15, i16, i17, i18;
        com.android.internal.app.procstats.ProcessStats $r4, $r5, $r6, $r7, $r8, $r16, $r17, $r18;
        com.android.internal.app.ProcessMap $r9;
        java.lang.Object $r10, $r11, $r12, $r14;
        com.android.internal.app.procstats.ProcessStats$PackageState $r13;
        com.android.internal.app.procstats.ServiceState $r15;
        boolean z0, z1;
        java.lang.Boolean r19;
        long[] r20;

        r0 := @this: com.android.server.am.ProcessStatsService;

        i12 := @parameter0: int;

        z0 := @parameter1: boolean;

        l0 := @parameter2: long;

        $i1 = r0.<com.android.server.am.ProcessStatsService: int mLastMemOnlyState>;

        if i12 >= $i1 goto label01;

        z1 = 1;

        goto label02;

     label01:
        z1 = 0;

     label02:
        r0.<com.android.server.am.ProcessStatsService: boolean mMemFactorLowered> = z1;

        r0.<com.android.server.am.ProcessStatsService: int mLastMemOnlyState> = i12;

        r19 = r0.<com.android.server.am.ProcessStatsService: java.lang.Boolean mInjectedScreenState>;

        if r19 == null goto label03;

        z0 = virtualinvoke r19.<java.lang.Boolean: boolean booleanValue()>();

     label03:
        i13 = i12;

        if z0 == 0 goto label04;

        i13 = i12 + 4;

     label04:
        $r4 = r0.<com.android.server.am.ProcessStatsService: com.android.internal.app.procstats.ProcessStats mProcessStats>;

        $i2 = $r4.<com.android.internal.app.procstats.ProcessStats: int mMemFactor>;

        if i13 == $i2 goto label14;

        $r5 = r0.<com.android.server.am.ProcessStatsService: com.android.internal.app.procstats.ProcessStats mProcessStats>;

        $i3 = $r5.<com.android.internal.app.procstats.ProcessStats: int mMemFactor>;

        if $i3 == -1 goto label05;

        $r16 = r0.<com.android.server.am.ProcessStatsService: com.android.internal.app.procstats.ProcessStats mProcessStats>;

        r20 = $r16.<com.android.internal.app.procstats.ProcessStats: long[] mMemFactorDurations>;

        $r17 = r0.<com.android.server.am.ProcessStatsService: com.android.internal.app.procstats.ProcessStats mProcessStats>;

        i14 = $r17.<com.android.internal.app.procstats.ProcessStats: int mMemFactor>;

        $l10 = r20[i14];

        $r18 = r0.<com.android.server.am.ProcessStatsService: com.android.internal.app.procstats.ProcessStats mProcessStats>;

        $l8 = $r18.<com.android.internal.app.procstats.ProcessStats: long mStartTime>;

        $l9 = l0 - $l8;

        $l11 = $l10 + $l9;

        r20[i14] = $l11;

     label05:
        $r6 = r0.<com.android.server.am.ProcessStatsService: com.android.internal.app.procstats.ProcessStats mProcessStats>;

        $r6.<com.android.internal.app.procstats.ProcessStats: int mMemFactor> = i13;

        $r7 = r0.<com.android.server.am.ProcessStatsService: com.android.internal.app.procstats.ProcessStats mProcessStats>;

        $r7.<com.android.internal.app.procstats.ProcessStats: long mStartTime> = l0;

        $r8 = r0.<com.android.server.am.ProcessStatsService: com.android.internal.app.procstats.ProcessStats mProcessStats>;

        $r9 = $r8.<com.android.internal.app.procstats.ProcessStats: com.android.internal.app.ProcessMap mPackages>;

        r1 = virtualinvoke $r9.<com.android.internal.app.ProcessMap: android.util.ArrayMap getMap()>();

        $i4 = virtualinvoke r1.<android.util.ArrayMap: int size()>();

        i15 = $i4 - 1;

     label06:
        if i15 < 0 goto label13;

        $r10 = virtualinvoke r1.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i15);

        r2 = (android.util.SparseArray) $r10;

        $i5 = virtualinvoke r2.<android.util.SparseArray: int size()>();

        i16 = $i5 - 1;

     label07:
        if i16 < 0 goto label12;

        $r11 = virtualinvoke r2.<android.util.SparseArray: java.lang.Object valueAt(int)>(i16);

        r3 = (android.util.LongSparseArray) $r11;

        $i6 = virtualinvoke r3.<android.util.LongSparseArray: int size()>();

        i17 = $i6 - 1;

     label08:
        if i17 < 0 goto label11;

        $r12 = virtualinvoke r3.<android.util.LongSparseArray: java.lang.Object valueAt(int)>(i17);

        $r13 = (com.android.internal.app.procstats.ProcessStats$PackageState) $r12;

        r21 = $r13.<com.android.internal.app.procstats.ProcessStats$PackageState: android.util.ArrayMap mServices>;

        $i7 = virtualinvoke r21.<android.util.ArrayMap: int size()>();

        i18 = $i7 - 1;

     label09:
        if i18 < 0 goto label10;

        $r14 = virtualinvoke r21.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i18);

        $r15 = (com.android.internal.app.procstats.ServiceState) $r14;

        virtualinvoke $r15.<com.android.internal.app.procstats.ServiceState: void setMemFactor(int,long)>(i13, l0);

        i18 = i18 + -1;

        goto label09;

     label10:
        i17 = i17 + -1;

        goto label08;

     label11:
        i16 = i16 + -1;

        goto label07;

     label12:
        i15 = i15 + -1;

        goto label06;

     label13:
        return 1;

     label14:
        return 0;
    }

    public boolean shouldWriteNowLocked(long)
    {
        com.android.server.am.ProcessStatsService r0;
        long l0, $l1, $l2, $l3, $l5, $l6, $l7, $l8, $l10, $l11, $l12, $l13;
        byte $b4, $b9, $b14;
        com.android.internal.app.procstats.ProcessStats $r1, $r2;

        r0 := @this: com.android.server.am.ProcessStatsService;

        l0 := @parameter0: long;

        $l2 = r0.<com.android.server.am.ProcessStatsService: long mLastWriteTime>;

        $l1 = <com.android.server.am.ProcessStatsService: long WRITE_PERIOD>;

        $l3 = $l2 + $l1;

        $b4 = l0 cmp $l3;

        if $b4 <= 0 goto label2;

        $l5 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r1 = r0.<com.android.server.am.ProcessStatsService: com.android.internal.app.procstats.ProcessStats mProcessStats>;

        $l7 = $r1.<com.android.internal.app.procstats.ProcessStats: long mTimePeriodStartRealtime>;

        $l6 = <com.android.internal.app.procstats.ProcessStats: long COMMIT_PERIOD>;

        $l8 = $l7 + $l6;

        $b9 = $l5 cmp $l8;

        if $b9 <= 0 goto label1;

        $l10 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r2 = r0.<com.android.server.am.ProcessStatsService: com.android.internal.app.procstats.ProcessStats mProcessStats>;

        $l12 = $r2.<com.android.internal.app.procstats.ProcessStats: long mTimePeriodStartUptime>;

        $l11 = <com.android.internal.app.procstats.ProcessStats: long COMMIT_UPTIME_PERIOD>;

        $l13 = $l12 + $l11;

        $b14 = $l10 cmp $l13;

        if $b14 <= 0 goto label1;

        r0.<com.android.server.am.ProcessStatsService: boolean mCommitPending> = 1;

     label1:
        return 1;

     label2:
        return 0;
    }

    public void shutdownLocked()
    {
        com.android.server.am.ProcessStatsService r0;
        com.android.internal.app.procstats.ProcessStats r1;
        int $i1, $i2;

        r0 := @this: com.android.server.am.ProcessStatsService;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ProcessStatsService", "Writing process stats before shutdown...");

        r1 = r0.<com.android.server.am.ProcessStatsService: com.android.internal.app.procstats.ProcessStats mProcessStats>;

        $i1 = r1.<com.android.internal.app.procstats.ProcessStats: int mFlags>;

        $i2 = $i1 | 2;

        r1.<com.android.internal.app.procstats.ProcessStats: int mFlags> = $i2;

        virtualinvoke r0.<com.android.server.am.ProcessStatsService: void writeStateSyncLocked()>();

        r0.<com.android.server.am.ProcessStatsService: boolean mShuttingDown> = 1;

        return;
    }

    public void trimHistoricStatesWriteLocked()
    {
        com.android.server.am.ProcessStatsService r0;
        java.util.ArrayList r1;
        java.lang.String r2, $r8;
        int $i0;
        java.lang.Object $r4;
        java.lang.StringBuilder $r5;
        java.io.File $r9;

        r0 := @this: com.android.server.am.ProcessStatsService;

        r1 = specialinvoke r0.<com.android.server.am.ProcessStatsService: java.util.ArrayList getCommittedFiles(int,boolean,boolean)>(8, 0, 1);

        if r1 != null goto label1;

        return;

     label1:
        $i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if $i0 <= 8 goto label2;

        $r4 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object remove(int)>(0);

        r2 = (java.lang.String) $r4;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Pruning old procstats: ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ProcessStatsService", $r8);

        $r9 = new java.io.File;

        specialinvoke $r9.<java.io.File: void <init>(java.lang.String)>(r2);

        virtualinvoke $r9.<java.io.File: boolean delete()>();

        goto label1;

     label2:
        return;
    }

    public void updateProcessStateHolderLocked(com.android.internal.app.procstats.ProcessStats$ProcessStateHolder, java.lang.String, int, long, java.lang.String)
    {
        com.android.server.am.ProcessStatsService r0;
        com.android.internal.app.procstats.ProcessStats$ProcessStateHolder r1;
        java.lang.String r2, r3;
        int i0;
        long l1;
        com.android.internal.app.procstats.ProcessStats $r4, $r7;
        com.android.internal.app.procstats.ProcessStats$PackageState $r5, $r6;
        com.android.internal.app.procstats.ProcessState $r8;

        r0 := @this: com.android.server.am.ProcessStatsService;

        r1 := @parameter0: com.android.internal.app.procstats.ProcessStats$ProcessStateHolder;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        l1 := @parameter3: long;

        r3 := @parameter4: java.lang.String;

        $r4 = r0.<com.android.server.am.ProcessStatsService: com.android.internal.app.procstats.ProcessStats mProcessStats>;

        $r5 = virtualinvoke $r4.<com.android.internal.app.procstats.ProcessStats: com.android.internal.app.procstats.ProcessStats$PackageState getPackageStateLocked(java.lang.String,int,long)>(r2, i0, l1);

        r1.<com.android.internal.app.procstats.ProcessStats$ProcessStateHolder: com.android.internal.app.procstats.ProcessStats$PackageState pkg> = $r5;

        $r7 = r0.<com.android.server.am.ProcessStatsService: com.android.internal.app.procstats.ProcessStats mProcessStats>;

        $r6 = r1.<com.android.internal.app.procstats.ProcessStats$ProcessStateHolder: com.android.internal.app.procstats.ProcessStats$PackageState pkg>;

        $r8 = virtualinvoke $r7.<com.android.internal.app.procstats.ProcessStats: com.android.internal.app.procstats.ProcessState getProcessStateLocked(com.android.internal.app.procstats.ProcessStats$PackageState,java.lang.String)>($r6, r3);

        r1.<com.android.internal.app.procstats.ProcessStats$ProcessStateHolder: com.android.internal.app.procstats.ProcessState state> = $r8;

        return;
    }

    public void updateTrackingAssociationsLocked(int, long)
    {
        com.android.server.am.ProcessStatsService r0;
        int i0;
        long l1;
        com.android.internal.app.procstats.ProcessStats $r1;

        r0 := @this: com.android.server.am.ProcessStatsService;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        $r1 = r0.<com.android.server.am.ProcessStatsService: com.android.internal.app.procstats.ProcessStats mProcessStats>;

        virtualinvoke $r1.<com.android.internal.app.procstats.ProcessStats: void updateTrackingAssociationsLocked(int,long)>(i0, l1);

        return;
    }

    public void writeStateAsyncLocked()
    {
        com.android.server.am.ProcessStatsService r0;

        r0 := @this: com.android.server.am.ProcessStatsService;

        specialinvoke r0.<com.android.server.am.ProcessStatsService: void writeStateLocked(boolean)>(0);

        return;
    }

    public void writeStateLocked(boolean, boolean)
    {
        com.android.server.am.ProcessStatsService r0;
        boolean z0, z1, $z3;
        java.lang.Object r1;
        android.os.Handler r2;
        android.os.Parcel $r3, $r4, $r7;
        com.android.internal.app.procstats.ProcessStats $r5, $r6, $r8, $r11, r14;
        long $l0, $l1, $l2, $l3, l6, l7;
        android.util.AtomicFile $r9, r15;
        java.io.File $r10;
        com.android.server.am.ActivityManagerService $r12;
        int $i4, $i5;
        java.lang.Throwable $r13;
        com.android.server.am.ProcessStatsService$2 r16;

        r0 := @this: com.android.server.am.ProcessStatsService;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        r1 = r0.<com.android.server.am.ProcessStatsService: java.lang.Object mPendingWriteLock>;

        entermonitor r1;

     label01:
        l6 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r3 = r0.<com.android.server.am.ProcessStatsService: android.os.Parcel mPendingWrite>;

        if $r3 == null goto label02;

        $z3 = r0.<com.android.server.am.ProcessStatsService: boolean mPendingWriteCommitted>;

        if $z3 != 0 goto label06;

     label02:
        $r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r0.<com.android.server.am.ProcessStatsService: android.os.Parcel mPendingWrite> = $r4;

        $r5 = r0.<com.android.server.am.ProcessStatsService: com.android.internal.app.procstats.ProcessStats mProcessStats>;

        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r5.<com.android.internal.app.procstats.ProcessStats: long mTimePeriodEndRealtime> = $l0;

        $r6 = r0.<com.android.server.am.ProcessStatsService: com.android.internal.app.procstats.ProcessStats mProcessStats>;

        $r6.<com.android.internal.app.procstats.ProcessStats: long mTimePeriodEndUptime> = l6;

     label03:
        if z1 == 0 goto label05;

     label04:
        r14 = r0.<com.android.server.am.ProcessStatsService: com.android.internal.app.procstats.ProcessStats mProcessStats>;

        $i4 = r14.<com.android.internal.app.procstats.ProcessStats: int mFlags>;

        $i5 = $i4 | 1;

        r14.<com.android.internal.app.procstats.ProcessStats: int mFlags> = $i5;

     label05:
        $r8 = r0.<com.android.server.am.ProcessStatsService: com.android.internal.app.procstats.ProcessStats mProcessStats>;

        $r7 = r0.<com.android.server.am.ProcessStatsService: android.os.Parcel mPendingWrite>;

        virtualinvoke $r8.<com.android.internal.app.procstats.ProcessStats: void writeToParcel(android.os.Parcel,int)>($r7, 0);

        r15 = new android.util.AtomicFile;

        $r9 = r0.<com.android.server.am.ProcessStatsService: android.util.AtomicFile mFile>;

        $r10 = virtualinvoke $r9.<android.util.AtomicFile: java.io.File getBaseFile()>();

        specialinvoke r15.<android.util.AtomicFile: void <init>(java.io.File)>($r10);

        r0.<com.android.server.am.ProcessStatsService: android.util.AtomicFile mPendingWriteFile> = r15;

        r0.<com.android.server.am.ProcessStatsService: boolean mPendingWriteCommitted> = z1;

     label06:
        if z1 == 0 goto label08;

     label07:
        $r11 = r0.<com.android.server.am.ProcessStatsService: com.android.internal.app.procstats.ProcessStats mProcessStats>;

        virtualinvoke $r11.<com.android.internal.app.procstats.ProcessStats: void resetSafely()>();

        specialinvoke r0.<com.android.server.am.ProcessStatsService: void updateFile()>();

        $r12 = r0.<com.android.server.am.ProcessStatsService: com.android.server.am.ActivityManagerService mAm>;

        $l3 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        virtualinvoke $r12.<com.android.server.am.ActivityManagerService: void requestPssAllProcsLocked(long,boolean,boolean)>($l3, 1, 0);

     label08:
        $l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r0.<com.android.server.am.ProcessStatsService: long mLastWriteTime> = $l1;

        $l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        l7 = $l2 - l6;

     label09:
        if z0 != 0 goto label12;

     label10:
        r2 = staticinvoke <com.android.internal.os.BackgroundThread: android.os.Handler getHandler()>();

        r16 = new com.android.server.am.ProcessStatsService$2;

        specialinvoke r16.<com.android.server.am.ProcessStatsService$2: void <init>(com.android.server.am.ProcessStatsService,long)>(r0, l7);

        virtualinvoke r2.<android.os.Handler: boolean post(java.lang.Runnable)>(r16);

        exitmonitor r1;

     label11:
        return;

     label12:
        exitmonitor r1;

     label13:
        virtualinvoke r0.<com.android.server.am.ProcessStatsService: void performWriteState(long)>(l7);

        return;

     label14:
        $r13 := @caughtexception;

     label15:
        exitmonitor r1;

     label16:
        throw $r13;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label02 to label03 with label14;
        catch java.lang.Throwable from label04 to label05 with label14;
        catch java.lang.Throwable from label05 to label06 with label14;
        catch java.lang.Throwable from label07 to label08 with label14;
        catch java.lang.Throwable from label08 to label09 with label14;
        catch java.lang.Throwable from label10 to label11 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label15 to label16 with label14;
    }

    public void writeStateSyncLocked()
    {
        com.android.server.am.ProcessStatsService r0;

        r0 := @this: com.android.server.am.ProcessStatsService;

        specialinvoke r0.<com.android.server.am.ProcessStatsService: void writeStateLocked(boolean)>(1);

        return;
    }
}
