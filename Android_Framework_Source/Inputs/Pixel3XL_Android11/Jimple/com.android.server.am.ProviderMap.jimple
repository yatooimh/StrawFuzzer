public final class com.android.server.am.ProviderMap extends java.lang.Object
{
    private static final boolean DBG;
    private static final java.lang.String TAG;
    private final com.android.server.am.ActivityManagerService mAm;
    private final android.util.SparseArray mProvidersByClassPerUser;
    private final android.util.SparseArray mProvidersByNamePerUser;
    private final java.util.HashMap mSingletonByClass;
    private final java.util.HashMap mSingletonByName;

    void <init>(com.android.server.am.ActivityManagerService)
    {
        com.android.server.am.ProviderMap r0;
        com.android.server.am.ActivityManagerService r1;
        java.util.HashMap $r2, $r3;
        android.util.SparseArray $r4, $r5;

        r0 := @this: com.android.server.am.ProviderMap;

        r1 := @parameter0: com.android.server.am.ActivityManagerService;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.am.ProviderMap: java.util.HashMap mSingletonByName> = $r2;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.am.ProviderMap: java.util.HashMap mSingletonByClass> = $r3;

        $r4 = new android.util.SparseArray;

        specialinvoke $r4.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.am.ProviderMap: android.util.SparseArray mProvidersByNamePerUser> = $r4;

        $r5 = new android.util.SparseArray;

        specialinvoke $r5.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.am.ProviderMap: android.util.SparseArray mProvidersByClassPerUser> = $r5;

        r0.<com.android.server.am.ProviderMap: com.android.server.am.ActivityManagerService mAm> = r1;

        return;
    }

    private boolean collectPackageProvidersLocked(java.lang.String, java.util.Set, boolean, boolean, java.util.HashMap, java.util.ArrayList)
    {
        com.android.server.am.ProviderMap r0;
        java.lang.String r1, $r10, $r12;
        java.util.Set r2;
        boolean z0, z1, $z2, $z4, $z5, $z6, z7, z8, z9;
        java.util.ArrayList r3;
        java.util.Iterator r4;
        java.util.Collection $r5;
        java.lang.Object $r6;
        com.android.server.am.ProcessRecord $r7, $r8;
        android.content.pm.ProviderInfo $r9;
        android.content.ComponentName $r11;
        java.util.HashMap r13;
        com.android.server.am.ContentProviderRecord r14;

        r0 := @this: com.android.server.am.ProviderMap;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.Set;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        r13 := @parameter4: java.util.HashMap;

        r3 := @parameter5: java.util.ArrayList;

        z7 = 0;

        $r5 = virtualinvoke r13.<java.util.HashMap: java.util.Collection values()>();

        r4 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label8;

        $r6 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r14 = (com.android.server.am.ContentProviderRecord) $r6;

        if r1 == null goto label3;

        $r9 = r14.<com.android.server.am.ContentProviderRecord: android.content.pm.ProviderInfo info>;

        $r10 = $r9.<android.content.pm.ProviderInfo: java.lang.String packageName>;

        $z5 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z5 == 0 goto label2;

        if r2 == null goto label3;

        $r11 = r14.<com.android.server.am.ContentProviderRecord: android.content.ComponentName name>;

        $r12 = virtualinvoke $r11.<android.content.ComponentName: java.lang.String getClassName()>();

        $z6 = interfaceinvoke r2.<java.util.Set: boolean contains(java.lang.Object)>($r12);

        if $z6 == 0 goto label2;

        goto label3;

     label2:
        z8 = 0;

        goto label4;

     label3:
        z8 = 1;

     label4:
        z9 = z7;

        if z8 == 0 goto label7;

        $r7 = r14.<com.android.server.am.ContentProviderRecord: com.android.server.am.ProcessRecord proc>;

        if $r7 == null goto label5;

        if z1 != 0 goto label5;

        z9 = z7;

        $r8 = r14.<com.android.server.am.ContentProviderRecord: com.android.server.am.ProcessRecord proc>;

        $z4 = virtualinvoke $r8.<com.android.server.am.ProcessRecord: boolean isPersistent()>();

        if $z4 != 0 goto label7;

     label5:
        if z0 != 0 goto label6;

        return 1;

     label6:
        z9 = 1;

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r14);

     label7:
        z7 = z9;

        goto label1;

     label8:
        return z7;
    }

    private void dumpProvider(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, com.android.server.am.ContentProviderRecord, java.lang.String[], boolean)
    {
        com.android.server.am.ProviderMap r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        com.android.server.am.ContentProviderRecord r3;
        java.lang.String[] r4;
        boolean z0, $z1;
        int i0, $i1, i2;
        java.lang.String r5, r18, r19;
        java.lang.StringBuilder $r6;
        com.android.server.am.ProcessRecord $r9, $r10, $r11, $r13, $r14, $r15;
        android.app.IApplicationThread $r12, $r16;
        java.lang.Throwable $r17;
        com.android.server.am.ActivityManagerService r21;

        r0 := @this: com.android.server.am.ProviderMap;

        r18 := @parameter0: java.lang.String;

        r1 := @parameter1: java.io.FileDescriptor;

        r2 := @parameter2: java.io.PrintWriter;

        r3 := @parameter3: com.android.server.am.ContentProviderRecord;

        r4 := @parameter4: java.lang.String[];

        z0 := @parameter5: boolean;

        i0 = lengthof r4;

        i2 = 0;

     label01:
        if i2 >= i0 goto label04;

        r19 = r4[i2];

        if z0 != 0 goto label03;

        $z1 = virtualinvoke r19.<java.lang.String: boolean contains(java.lang.CharSequence)>("--proto");

        if $z1 == 0 goto label03;

        $r14 = r3.<com.android.server.am.ContentProviderRecord: com.android.server.am.ProcessRecord proc>;

        if $r14 == null goto label02;

        $r15 = r3.<com.android.server.am.ContentProviderRecord: com.android.server.am.ProcessRecord proc>;

        $r16 = $r15.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r16 == null goto label02;

        specialinvoke r0.<com.android.server.am.ProviderMap: void dumpToTransferPipe(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,com.android.server.am.ContentProviderRecord,java.lang.String[])>(null, r1, r2, r3, r4);

     label02:
        return;

     label03:
        i2 = i2 + 1;

        goto label01;

     label04:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        r5 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        r21 = r0.<com.android.server.am.ProviderMap: com.android.server.am.ActivityManagerService mAm>;

        entermonitor r21;

     label05:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r18);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("PROVIDER ");

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.Object)>(r3);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" pid=");

        $r9 = r3.<com.android.server.am.ContentProviderRecord: com.android.server.am.ProcessRecord proc>;

        if $r9 == null goto label07;

        $r13 = r3.<com.android.server.am.ContentProviderRecord: com.android.server.am.ProcessRecord proc>;

        $i1 = $r13.<com.android.server.am.ProcessRecord: int pid>;

        virtualinvoke r2.<java.io.PrintWriter: void println(int)>($i1);

     label06:
        goto label08;

     label07:
        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("(not running)");

     label08:
        if z0 == 0 goto label10;

     label09:
        virtualinvoke r3.<com.android.server.am.ContentProviderRecord: void dump(java.io.PrintWriter,java.lang.String,boolean)>(r2, r5, 1);

     label10:
        exitmonitor r21;

     label11:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        $r10 = r3.<com.android.server.am.ContentProviderRecord: com.android.server.am.ProcessRecord proc>;

        if $r10 == null goto label12;

        $r11 = r3.<com.android.server.am.ContentProviderRecord: com.android.server.am.ProcessRecord proc>;

        $r12 = $r11.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r12 == null goto label12;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("    Client:");

        virtualinvoke r2.<java.io.PrintWriter: void flush()>();

        specialinvoke r0.<com.android.server.am.ProviderMap: void dumpToTransferPipe(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,com.android.server.am.ContentProviderRecord,java.lang.String[])>("      ", r1, r2, r3, r4);

     label12:
        return;

     label13:
        $r17 := @caughtexception;

     label14:
        exitmonitor r21;

     label15:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r17;

        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label10 to label11 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
    }

    private boolean dumpProvidersByClassLocked(java.io.PrintWriter, boolean, java.lang.String, java.lang.String, boolean, java.util.HashMap)
    {
        com.android.server.am.ProviderMap r0;
        java.io.PrintWriter r1;
        boolean z0, $z1, z2, z3, $z4, z5;
        java.lang.String r2, $r10, r11, r13, r14;
        java.util.Iterator r3;
        com.android.server.am.ContentProviderRecord r4;
        java.util.Set $r5;
        java.lang.Object $r6, $r8;
        java.util.Map$Entry $r7;
        android.content.pm.ApplicationInfo $r9;
        java.util.HashMap r12;

        r0 := @this: com.android.server.am.ProviderMap;

        r1 := @parameter0: java.io.PrintWriter;

        z0 := @parameter1: boolean;

        r2 := @parameter2: java.lang.String;

        r11 := @parameter3: java.lang.String;

        z2 := @parameter4: boolean;

        r12 := @parameter5: java.util.HashMap;

        $r5 = virtualinvoke r12.<java.util.HashMap: java.util.Set entrySet()>();

        r3 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

        z3 = 0;

        r13 = r11;

     label1:
        $z4 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label5;

        $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (java.util.Map$Entry) $r6;

        $r8 = interfaceinvoke $r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        r4 = (com.android.server.am.ContentProviderRecord) $r8;

        if r2 == null goto label2;

        $r9 = r4.<com.android.server.am.ContentProviderRecord: android.content.pm.ApplicationInfo appInfo>;

        $r10 = $r9.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z1 != 0 goto label2;

        goto label1;

     label2:
        z5 = z2;

        if z2 == 0 goto label3;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("");

        z5 = 0;

     label3:
        r14 = r13;

        if r13 == null goto label4;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(r13);

        r14 = null;

     label4:
        z3 = 1;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  * ");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>(r4);

        virtualinvoke r4.<com.android.server.am.ContentProviderRecord: void dump(java.io.PrintWriter,java.lang.String,boolean)>(r1, "    ", z0);

        r13 = r14;

        z2 = z5;

        goto label1;

     label5:
        return z3;
    }

    private boolean dumpProvidersByNameLocked(java.io.PrintWriter, java.lang.String, java.lang.String, boolean, java.util.HashMap)
    {
        com.android.server.am.ProviderMap r0;
        java.io.PrintWriter r1;
        java.lang.String r2, $r10, $r11, $r13, r14, r16;
        java.util.Iterator r3;
        java.util.Map$Entry r4;
        com.android.server.am.ContentProviderRecord r5;
        java.util.Set $r6;
        java.lang.Object $r7, $r8, $r9;
        android.content.pm.ApplicationInfo $r12;
        boolean $z0, z1, z2, $z3, z4;
        java.util.HashMap r15;

        r0 := @this: com.android.server.am.ProviderMap;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: java.lang.String;

        r14 := @parameter2: java.lang.String;

        z1 := @parameter3: boolean;

        r15 := @parameter4: java.util.HashMap;

        $r6 = virtualinvoke r15.<java.util.HashMap: java.util.Set entrySet()>();

        r3 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

        z2 = 0;

     label1:
        $z3 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label5;

        $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r7;

        $r8 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        r5 = (com.android.server.am.ContentProviderRecord) $r8;

        if r2 == null goto label2;

        $r12 = r5.<com.android.server.am.ContentProviderRecord: android.content.pm.ApplicationInfo appInfo>;

        $r13 = $r12.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        if $z0 != 0 goto label2;

        goto label1;

     label2:
        z4 = z1;

        if z1 == 0 goto label3;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("");

        z4 = 0;

     label3:
        r16 = r14;

        if r14 == null goto label4;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(r14);

        r16 = null;

     label4:
        z2 = 1;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  ");

        $r9 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r10 = (java.lang.String) $r9;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r10);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        $r11 = virtualinvoke r5.<com.android.server.am.ContentProviderRecord: java.lang.String toShortString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r11);

        r14 = r16;

        z1 = z4;

        goto label1;

     label5:
        return z2;
    }

    private void dumpToTransferPipe(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, com.android.server.am.ContentProviderRecord, java.lang.String[])
    {
        com.android.server.am.ProviderMap r0;
        java.io.PrintWriter r1;
        com.android.server.am.ContentProviderRecord r2;
        java.lang.String[] r3;
        com.android.internal.os.TransferPipe r4;
        com.android.server.am.ProcessRecord $r5;
        android.app.IApplicationThread $r6;
        android.os.ParcelFileDescriptor $r7;
        android.content.IContentProvider $r8;
        android.os.IBinder $r9;
        android.os.RemoteException $r10;
        java.lang.Throwable $r11, $r12;
        java.lang.StringBuilder $r13;
        java.lang.String $r16, r17;
        java.io.FileDescriptor r18;

        r0 := @this: com.android.server.am.ProviderMap;

        r17 := @parameter0: java.lang.String;

        r18 := @parameter1: java.io.FileDescriptor;

        r1 := @parameter2: java.io.PrintWriter;

        r2 := @parameter3: com.android.server.am.ContentProviderRecord;

        r3 := @parameter4: java.lang.String[];

     label01:
        r4 = new com.android.internal.os.TransferPipe;

        specialinvoke r4.<com.android.internal.os.TransferPipe: void <init>()>();

     label02:
        $r5 = r2.<com.android.server.am.ContentProviderRecord: com.android.server.am.ProcessRecord proc>;

        $r6 = $r5.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r7 = virtualinvoke r4.<com.android.internal.os.TransferPipe: android.os.ParcelFileDescriptor getWriteFd()>();

        $r8 = r2.<com.android.server.am.ContentProviderRecord: android.content.IContentProvider provider>;

        $r9 = interfaceinvoke $r8.<android.content.IContentProvider: android.os.IBinder asBinder()>();

        interfaceinvoke $r6.<android.app.IApplicationThread: void dumpProvider(android.os.ParcelFileDescriptor,android.os.IBinder,java.lang.String[])>($r7, $r9, r3);

        virtualinvoke r4.<com.android.internal.os.TransferPipe: void setBufferPrefix(java.lang.String)>(r17);

        virtualinvoke r4.<com.android.internal.os.TransferPipe: void go(java.io.FileDescriptor,long)>(r18, 2000L);

     label03:
        virtualinvoke r4.<com.android.internal.os.TransferPipe: void kill()>();

     label04:
        goto label10;

     label05:
        $r11 := @caughtexception;

     label06:
        virtualinvoke r4.<com.android.internal.os.TransferPipe: void kill()>();

     label07:
        throw $r11;

     label08:
        $r10 := @caughtexception;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      Got a RemoteException while dumping the service");

        goto label10;

     label09:
        $r12 := @caughtexception;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("      Failure while dumping the provider: ");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r16);

     label10:
        return;

        catch java.io.IOException from label01 to label02 with label09;
        catch android.os.RemoteException from label01 to label02 with label08;
        catch java.lang.Throwable from label02 to label03 with label05;
        catch java.io.IOException from label03 to label04 with label09;
        catch android.os.RemoteException from label03 to label04 with label08;
        catch java.io.IOException from label06 to label07 with label09;
        catch android.os.RemoteException from label06 to label07 with label08;
        catch java.io.IOException from label07 to label08 with label09;
        catch android.os.RemoteException from label07 to label08 with label08;
    }

    private java.util.HashMap getProvidersByName(int)
    {
        com.android.server.am.ProviderMap r0;
        int i0;
        java.lang.StringBuilder $r1;
        java.lang.IllegalArgumentException $r4;
        java.lang.String $r5;
        android.util.SparseArray $r6, $r9;
        java.lang.Object $r7;
        java.util.HashMap $r8, r10;

        r0 := @this: com.android.server.am.ProviderMap;

        i0 := @parameter0: int;

        if i0 < 0 goto label2;

        $r6 = r0.<com.android.server.am.ProviderMap: android.util.SparseArray mProvidersByNamePerUser>;

        $r7 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r10 = (java.util.HashMap) $r7;

        if r10 != null goto label1;

        $r8 = new java.util.HashMap;

        specialinvoke $r8.<java.util.HashMap: void <init>()>();

        $r9 = r0.<com.android.server.am.ProviderMap: android.util.SparseArray mProvidersByNamePerUser>;

        virtualinvoke $r9.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, $r8);

        return $r8;

     label1:
        return r10;

     label2:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad user ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r4;
    }

    private java.util.ArrayList getProvidersForName(java.lang.String)
    {
        com.android.server.am.ProviderMap r0;
        java.util.function.Predicate r2;
        java.util.HashMap $r5, $r12;
        java.util.Collection $r6, $r13;
        android.util.SparseArray $r7, $r10;
        int $i0, i1;
        com.android.server.am.'-$$Lambda$HKoBBTwYfMTyX1rzuzxIXu0s2cc' $r8;
        java.util.Comparator $r9;
        java.lang.Object $r11;
        java.lang.Throwable $r14;
        java.lang.String r15;
        com.android.server.am.ActivityManagerService r17;
        java.util.ArrayList r19, r20;
        java.util.function.Function r21;

        r0 := @this: com.android.server.am.ProviderMap;

        r15 := @parameter0: java.lang.String;

        r19 = new java.util.ArrayList;

        specialinvoke r19.<java.util.ArrayList: void <init>()>();

        r20 = new java.util.ArrayList;

        specialinvoke r20.<java.util.ArrayList: void <init>()>();

        r2 = staticinvoke <com.android.internal.util.DumpUtils: java.util.function.Predicate filterRecord(java.lang.String)>(r15);

        r17 = r0.<com.android.server.am.ProviderMap: com.android.server.am.ActivityManagerService mAm>;

        entermonitor r17;

     label1:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r5 = r0.<com.android.server.am.ProviderMap: java.util.HashMap mSingletonByClass>;

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.util.Collection values()>();

        virtualinvoke r19.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r6);

     label2:
        i1 = 0;

     label3:
        $r7 = r0.<com.android.server.am.ProviderMap: android.util.SparseArray mProvidersByClassPerUser>;

        $i0 = virtualinvoke $r7.<android.util.SparseArray: int size()>();

        if i1 >= $i0 goto label5;

        $r10 = r0.<com.android.server.am.ProviderMap: android.util.SparseArray mProvidersByClassPerUser>;

        $r11 = virtualinvoke $r10.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        $r12 = (java.util.HashMap) $r11;

        $r13 = virtualinvoke $r12.<java.util.HashMap: java.util.Collection values()>();

        virtualinvoke r19.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r13);

     label4:
        i1 = i1 + 1;

        goto label3;

     label5:
        staticinvoke <com.android.internal.util.CollectionUtils: void addIf(java.util.List,java.util.Collection,java.util.function.Predicate)>(r19, r20, r2);

        exitmonitor r17;

     label6:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        $r8 = <com.android.server.am._$$Lambda$HKoBBTwYfMTyX1rzuzxIXu0s2cc: com.android.server.am.'-$$Lambda$HKoBBTwYfMTyX1rzuzxIXu0s2cc' INSTANCE>;

        r21 = (java.util.function.Function) $r8;

        $r9 = staticinvoke <java.util.Comparator: java.util.Comparator comparing(java.util.function.Function)>(r21);

        virtualinvoke r20.<java.util.ArrayList: void sort(java.util.Comparator)>($r9);

        return r20;

     label7:
        $r14 := @caughtexception;

     label8:
        exitmonitor r17;

     label9:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r14;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    boolean collectPackageProvidersLocked(java.lang.String, java.util.Set, boolean, boolean, int, java.util.ArrayList)
    {
        com.android.server.am.ProviderMap r0;
        java.lang.String r1;
        java.util.Set r2;
        boolean z0, z1, $z2, $z3, z4, z5;
        java.util.ArrayList r3;
        java.util.HashMap r4, $r5, $r9;
        android.util.SparseArray $r6, $r7;
        int $i0, i1, i2;
        java.lang.Object $r8;

        r0 := @this: com.android.server.am.ProviderMap;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.Set;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        i1 := @parameter4: int;

        r3 := @parameter5: java.util.ArrayList;

        z4 = 0;

        if i1 == -1 goto label1;

        if i1 != 0 goto label2;

     label1:
        $r5 = r0.<com.android.server.am.ProviderMap: java.util.HashMap mSingletonByClass>;

        z4 = specialinvoke r0.<com.android.server.am.ProviderMap: boolean collectPackageProvidersLocked(java.lang.String,java.util.Set,boolean,boolean,java.util.HashMap,java.util.ArrayList)>(r1, r2, z0, z1, $r5, r3);

     label2:
        if z0 != 0 goto label3;

        if z4 == 0 goto label3;

        return 1;

     label3:
        if i1 != -1 goto label8;

        i2 = 0;

     label4:
        $r6 = r0.<com.android.server.am.ProviderMap: android.util.SparseArray mProvidersByClassPerUser>;

        $i0 = virtualinvoke $r6.<android.util.SparseArray: int size()>();

        if i2 >= $i0 goto label7;

        $r7 = r0.<com.android.server.am.ProviderMap: android.util.SparseArray mProvidersByClassPerUser>;

        $r8 = virtualinvoke $r7.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        $r9 = (java.util.HashMap) $r8;

        $z3 = specialinvoke r0.<com.android.server.am.ProviderMap: boolean collectPackageProvidersLocked(java.lang.String,java.util.Set,boolean,boolean,java.util.HashMap,java.util.ArrayList)>(r1, r2, z0, z1, $r9, r3);

        if $z3 == 0 goto label6;

        if z0 != 0 goto label5;

        return 1;

     label5:
        z4 = 1;

     label6:
        i2 = i2 + 1;

        goto label4;

     label7:
        z5 = z4;

        goto label9;

     label8:
        r4 = virtualinvoke r0.<com.android.server.am.ProviderMap: java.util.HashMap getProvidersByClass(int)>(i1);

        z5 = z4;

        if r4 == null goto label9;

        $z2 = specialinvoke r0.<com.android.server.am.ProviderMap: boolean collectPackageProvidersLocked(java.lang.String,java.util.Set,boolean,boolean,java.util.HashMap,java.util.ArrayList)>(r1, r2, z0, z1, r4, r3);

        z5 = z4 | $z2;

     label9:
        return z5;
    }

    protected boolean dumpProvider(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String, java.lang.String[], int, boolean)
    {
        com.android.server.am.ProviderMap r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        boolean z0, z1;
        int $i0, $i1, i2, i3;
        java.lang.Object $r4;
        com.android.server.am.ContentProviderRecord $r5;
        java.lang.String r6;
        java.util.ArrayList r7;

        r0 := @this: com.android.server.am.ProviderMap;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r6 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String[];

        i2 := @parameter4: int;

        z0 := @parameter5: boolean;

        r7 = specialinvoke r0.<com.android.server.am.ProviderMap: java.util.ArrayList getProvidersForName(java.lang.String)>(r6);

        $i0 = virtualinvoke r7.<java.util.ArrayList: int size()>();

        if $i0 > 0 goto label1;

        return 0;

     label1:
        z1 = 0;

        i3 = 0;

     label2:
        $i1 = virtualinvoke r7.<java.util.ArrayList: int size()>();

        if i3 >= $i1 goto label4;

        if z1 == 0 goto label3;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label3:
        $r4 = virtualinvoke r7.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        $r5 = (com.android.server.am.ContentProviderRecord) $r4;

        specialinvoke r0.<com.android.server.am.ProviderMap: void dumpProvider(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,com.android.server.am.ContentProviderRecord,java.lang.String[],boolean)>("", r1, r2, $r5, r3, z0);

        i3 = i3 + 1;

        z1 = 1;

        goto label2;

     label4:
        return 1;
    }

    protected boolean dumpProviderProto(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String, java.lang.String[])
    {
        com.android.server.am.ProviderMap r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3, r10;
        int $i0, $i1, $i2, $i3, $i4, i5;
        java.lang.Object[] $r4;
        java.lang.Object $r5;
        com.android.server.am.ProcessRecord $r6, $r7;
        android.app.IApplicationThread $r8;
        java.lang.String r9;
        java.util.ArrayList r11;
        com.android.server.am.ContentProviderRecord r12;

        r0 := @this: com.android.server.am.ProviderMap;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r9 := @parameter2: java.lang.String;

        r10 := @parameter3: java.lang.String[];

        $i0 = lengthof r10;

        $i1 = $i0 + 1;

        $r4 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>(r10, $i1);

        r3 = (java.lang.String[]) $r4;

        $i2 = lengthof r10;

        r3[$i2] = "--proto";

        r11 = specialinvoke r0.<com.android.server.am.ProviderMap: java.util.ArrayList getProvidersForName(java.lang.String)>(r9);

        $i3 = virtualinvoke r11.<java.util.ArrayList: int size()>();

        if $i3 > 0 goto label1;

        return 0;

     label1:
        i5 = 0;

     label2:
        $i4 = virtualinvoke r11.<java.util.ArrayList: int size()>();

        if i5 >= $i4 goto label4;

        $r5 = virtualinvoke r11.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        r12 = (com.android.server.am.ContentProviderRecord) $r5;

        $r6 = r12.<com.android.server.am.ContentProviderRecord: com.android.server.am.ProcessRecord proc>;

        if $r6 == null goto label3;

        $r7 = r12.<com.android.server.am.ContentProviderRecord: com.android.server.am.ProcessRecord proc>;

        $r8 = $r7.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r8 == null goto label3;

        specialinvoke r0.<com.android.server.am.ProviderMap: void dumpToTransferPipe(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,com.android.server.am.ContentProviderRecord,java.lang.String[])>(null, r1, r2, r12, r3);

        return 1;

     label3:
        i5 = i5 + 1;

        goto label2;

     label4:
        return 0;
    }

    boolean dumpProvidersLocked(java.io.PrintWriter, boolean, java.lang.String)
    {
        com.android.server.am.ProviderMap r0;
        java.io.PrintWriter r1;
        java.lang.String r2, $r12, $r23;
        java.util.HashMap $r4, $r5, $r15, $r24, r26;
        int $i0, $i1, $i2, $i3, i4, $i5, i6;
        android.util.SparseArray $r6, $r9, $r13, $r16, $r20, $r25;
        java.lang.StringBuilder $r7, $r18;
        java.lang.Object $r14, $r17;
        boolean $z0, $z1, $z2, z3, z4, z5, z6, z7;

        r0 := @this: com.android.server.am.ProviderMap;

        r1 := @parameter0: java.io.PrintWriter;

        z3 := @parameter1: boolean;

        r2 := @parameter2: java.lang.String;

        z4 = 0;

        $r4 = r0.<com.android.server.am.ProviderMap: java.util.HashMap mSingletonByClass>;

        $i0 = virtualinvoke $r4.<java.util.HashMap: int size()>();

        if $i0 <= 0 goto label1;

        $r24 = r0.<com.android.server.am.ProviderMap: java.util.HashMap mSingletonByClass>;

        $z2 = specialinvoke r0.<com.android.server.am.ProviderMap: boolean dumpProvidersByClassLocked(java.io.PrintWriter,boolean,java.lang.String,java.lang.String,boolean,java.util.HashMap)>(r1, z3, r2, "  Published single-user content providers (by class):", 0, $r24);

        z4 = 0 | $z2;

     label1:
        i4 = 0;

     label2:
        $r25 = r0.<com.android.server.am.ProviderMap: android.util.SparseArray mProvidersByClassPerUser>;

        $i5 = virtualinvoke $r25.<android.util.SparseArray: int size()>();

        if i4 >= $i5 goto label3;

        $r16 = r0.<com.android.server.am.ProviderMap: android.util.SparseArray mProvidersByClassPerUser>;

        $r17 = virtualinvoke $r16.<android.util.SparseArray: java.lang.Object valueAt(int)>(i4);

        r26 = (java.util.HashMap) $r17;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Published user ");

        $r20 = r0.<com.android.server.am.ProviderMap: android.util.SparseArray mProvidersByClassPerUser>;

        $i3 = virtualinvoke $r20.<android.util.SparseArray: int keyAt(int)>(i4);

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" content providers (by class):");

        $r23 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        $z1 = specialinvoke r0.<com.android.server.am.ProviderMap: boolean dumpProvidersByClassLocked(java.io.PrintWriter,boolean,java.lang.String,java.lang.String,boolean,java.util.HashMap)>(r1, z3, r2, $r23, z4, r26);

        z4 = z4 | $z1;

        i4 = i4 + 1;

        goto label2;

     label3:
        z5 = z4;

        if z3 == 0 goto label5;

        $r5 = r0.<com.android.server.am.ProviderMap: java.util.HashMap mSingletonByName>;

        z6 = specialinvoke r0.<com.android.server.am.ProviderMap: boolean dumpProvidersByNameLocked(java.io.PrintWriter,java.lang.String,java.lang.String,boolean,java.util.HashMap)>(r1, r2, "  Single-user authority to provider mappings:", z4, $r5);

        i6 = 0;

        z7 = z6 | z4;

     label4:
        z5 = z7;

        $r6 = r0.<com.android.server.am.ProviderMap: android.util.SparseArray mProvidersByNamePerUser>;

        $i1 = virtualinvoke $r6.<android.util.SparseArray: int size()>();

        if i6 >= $i1 goto label5;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  User ");

        $r9 = r0.<com.android.server.am.ProviderMap: android.util.SparseArray mProvidersByNamePerUser>;

        $i2 = virtualinvoke $r9.<android.util.SparseArray: int keyAt(int)>(i6);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" authority to provider mappings:");

        $r12 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = r0.<com.android.server.am.ProviderMap: android.util.SparseArray mProvidersByNamePerUser>;

        $r14 = virtualinvoke $r13.<android.util.SparseArray: java.lang.Object valueAt(int)>(i6);

        $r15 = (java.util.HashMap) $r14;

        $z0 = specialinvoke r0.<com.android.server.am.ProviderMap: boolean dumpProvidersByNameLocked(java.io.PrintWriter,java.lang.String,java.lang.String,boolean,java.util.HashMap)>(r1, r2, $r12, z7, $r15);

        z7 = z7 | $z0;

        i6 = i6 + 1;

        goto label4;

     label5:
        return z5;
    }

    com.android.server.am.ContentProviderRecord getProviderByClass(android.content.ComponentName)
    {
        com.android.server.am.ProviderMap r0;
        android.content.ComponentName r1;
        com.android.server.am.ContentProviderRecord $r2;

        r0 := @this: com.android.server.am.ProviderMap;

        r1 := @parameter0: android.content.ComponentName;

        $r2 = virtualinvoke r0.<com.android.server.am.ProviderMap: com.android.server.am.ContentProviderRecord getProviderByClass(android.content.ComponentName,int)>(r1, -1);

        return $r2;
    }

    com.android.server.am.ContentProviderRecord getProviderByClass(android.content.ComponentName, int)
    {
        com.android.server.am.ProviderMap r0;
        android.content.ComponentName r1;
        int i0;
        com.android.server.am.ContentProviderRecord r2, $r7;
        java.util.HashMap $r3, $r5;
        java.lang.Object $r4, $r6;

        r0 := @this: com.android.server.am.ProviderMap;

        r1 := @parameter0: android.content.ComponentName;

        i0 := @parameter1: int;

        $r3 = r0.<com.android.server.am.ProviderMap: java.util.HashMap mSingletonByClass>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (com.android.server.am.ContentProviderRecord) $r4;

        if r2 == null goto label1;

        return r2;

     label1:
        $r5 = virtualinvoke r0.<com.android.server.am.ProviderMap: java.util.HashMap getProvidersByClass(int)>(i0);

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        $r7 = (com.android.server.am.ContentProviderRecord) $r6;

        return $r7;
    }

    com.android.server.am.ContentProviderRecord getProviderByName(java.lang.String)
    {
        com.android.server.am.ProviderMap r0;
        java.lang.String r1;
        com.android.server.am.ContentProviderRecord $r2;

        r0 := @this: com.android.server.am.ProviderMap;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.android.server.am.ProviderMap: com.android.server.am.ContentProviderRecord getProviderByName(java.lang.String,int)>(r1, -1);

        return $r2;
    }

    com.android.server.am.ContentProviderRecord getProviderByName(java.lang.String, int)
    {
        com.android.server.am.ProviderMap r0;
        java.lang.String r1;
        int i0;
        com.android.server.am.ContentProviderRecord r2, $r7;
        java.util.HashMap $r3, $r5;
        java.lang.Object $r4, $r6;

        r0 := @this: com.android.server.am.ProviderMap;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r3 = r0.<com.android.server.am.ProviderMap: java.util.HashMap mSingletonByName>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (com.android.server.am.ContentProviderRecord) $r4;

        if r2 == null goto label1;

        return r2;

     label1:
        $r5 = specialinvoke r0.<com.android.server.am.ProviderMap: java.util.HashMap getProvidersByName(int)>(i0);

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        $r7 = (com.android.server.am.ContentProviderRecord) $r6;

        return $r7;
    }

    java.util.HashMap getProvidersByClass(int)
    {
        com.android.server.am.ProviderMap r0;
        int i0;
        java.lang.StringBuilder $r1;
        java.lang.IllegalArgumentException $r4;
        java.lang.String $r5;
        android.util.SparseArray $r6, $r9;
        java.lang.Object $r7;
        java.util.HashMap $r8, r10;

        r0 := @this: com.android.server.am.ProviderMap;

        i0 := @parameter0: int;

        if i0 < 0 goto label2;

        $r6 = r0.<com.android.server.am.ProviderMap: android.util.SparseArray mProvidersByClassPerUser>;

        $r7 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r10 = (java.util.HashMap) $r7;

        if r10 != null goto label1;

        $r8 = new java.util.HashMap;

        specialinvoke $r8.<java.util.HashMap: void <init>()>();

        $r9 = r0.<com.android.server.am.ProviderMap: android.util.SparseArray mProvidersByClassPerUser>;

        virtualinvoke $r9.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, $r8);

        return $r8;

     label1:
        return r10;

     label2:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad user ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r4;
    }

    void putProviderByClass(android.content.ComponentName, com.android.server.am.ContentProviderRecord)
    {
        com.android.server.am.ProviderMap r0;
        android.content.ComponentName r1;
        com.android.server.am.ContentProviderRecord r2;
        boolean $z0;
        android.content.pm.ApplicationInfo $r3;
        int $i0, $i1;
        java.util.HashMap $r4, $r6;

        r0 := @this: com.android.server.am.ProviderMap;

        r1 := @parameter0: android.content.ComponentName;

        r2 := @parameter1: com.android.server.am.ContentProviderRecord;

        $z0 = r2.<com.android.server.am.ContentProviderRecord: boolean singleton>;

        if $z0 == 0 goto label1;

        $r6 = r0.<com.android.server.am.ProviderMap: java.util.HashMap mSingletonByClass>;

        virtualinvoke $r6.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        goto label2;

     label1:
        $r3 = r2.<com.android.server.am.ContentProviderRecord: android.content.pm.ApplicationInfo appInfo>;

        $i0 = $r3.<android.content.pm.ApplicationInfo: int uid>;

        $i1 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i0);

        $r4 = virtualinvoke r0.<com.android.server.am.ProviderMap: java.util.HashMap getProvidersByClass(int)>($i1);

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

     label2:
        return;
    }

    void putProviderByName(java.lang.String, com.android.server.am.ContentProviderRecord)
    {
        com.android.server.am.ProviderMap r0;
        java.lang.String r1;
        com.android.server.am.ContentProviderRecord r2;
        boolean $z0;
        android.content.pm.ApplicationInfo $r3;
        int $i0, $i1;
        java.util.HashMap $r4, $r6;

        r0 := @this: com.android.server.am.ProviderMap;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.android.server.am.ContentProviderRecord;

        $z0 = r2.<com.android.server.am.ContentProviderRecord: boolean singleton>;

        if $z0 == 0 goto label1;

        $r6 = r0.<com.android.server.am.ProviderMap: java.util.HashMap mSingletonByName>;

        virtualinvoke $r6.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        goto label2;

     label1:
        $r3 = r2.<com.android.server.am.ContentProviderRecord: android.content.pm.ApplicationInfo appInfo>;

        $i0 = $r3.<android.content.pm.ApplicationInfo: int uid>;

        $i1 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i0);

        $r4 = specialinvoke r0.<com.android.server.am.ProviderMap: java.util.HashMap getProvidersByName(int)>($i1);

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

     label2:
        return;
    }

    void removeProviderByClass(android.content.ComponentName, int)
    {
        com.android.server.am.ProviderMap r0;
        int i0, $i1;
        java.util.HashMap r1, $r2, $r10;
        boolean $z0;
        java.lang.StringBuilder $r3;
        java.lang.IllegalArgumentException $r6;
        java.lang.String $r7;
        android.util.SparseArray $r9;
        android.content.ComponentName r12;

        r0 := @this: com.android.server.am.ProviderMap;

        r12 := @parameter0: android.content.ComponentName;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.am.ProviderMap: java.util.HashMap mSingletonByClass>;

        $z0 = virtualinvoke $r2.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r12);

        if $z0 == 0 goto label1;

        $r10 = r0.<com.android.server.am.ProviderMap: java.util.HashMap mSingletonByClass>;

        virtualinvoke $r10.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r12);

        goto label2;

     label1:
        if i0 < 0 goto label3;

        r1 = virtualinvoke r0.<com.android.server.am.ProviderMap: java.util.HashMap getProvidersByClass(int)>(i0);

        virtualinvoke r1.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r12);

        $i1 = virtualinvoke r1.<java.util.HashMap: int size()>();

        if $i1 != 0 goto label2;

        $r9 = r0.<com.android.server.am.ProviderMap: android.util.SparseArray mProvidersByClassPerUser>;

        virtualinvoke $r9.<android.util.SparseArray: void remove(int)>(i0);

     label2:
        return;

     label3:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad user ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r6;
    }

    void removeProviderByName(java.lang.String, int)
    {
        com.android.server.am.ProviderMap r0;
        int i0, $i1;
        java.util.HashMap r1, $r2, $r10;
        boolean $z0;
        java.lang.StringBuilder $r3;
        java.lang.IllegalArgumentException $r6;
        java.lang.String $r7, r12;
        android.util.SparseArray $r9;

        r0 := @this: com.android.server.am.ProviderMap;

        r12 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.am.ProviderMap: java.util.HashMap mSingletonByName>;

        $z0 = virtualinvoke $r2.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r12);

        if $z0 == 0 goto label1;

        $r10 = r0.<com.android.server.am.ProviderMap: java.util.HashMap mSingletonByName>;

        virtualinvoke $r10.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r12);

        goto label2;

     label1:
        if i0 < 0 goto label3;

        r1 = specialinvoke r0.<com.android.server.am.ProviderMap: java.util.HashMap getProvidersByName(int)>(i0);

        virtualinvoke r1.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r12);

        $i1 = virtualinvoke r1.<java.util.HashMap: int size()>();

        if $i1 != 0 goto label2;

        $r9 = r0.<com.android.server.am.ProviderMap: android.util.SparseArray mProvidersByNamePerUser>;

        virtualinvoke $r9.<android.util.SparseArray: void remove(int)>(i0);

     label2:
        return;

     label3:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad user ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r6;
    }

    public static void <clinit>()
    {
        <com.android.server.am.ProviderMap: java.lang.String TAG> = "ProviderMap";

        <com.android.server.am.ProviderMap: boolean DBG> = 0;

        return;
    }
}
