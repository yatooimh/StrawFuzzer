class com.android.server.am.UserController$Injector extends java.lang.Object
{
    private final com.android.server.am.ActivityManagerService mService;
    private com.android.server.pm.UserManagerService mUserManager;
    private android.os.UserManagerInternal mUserManagerInternal;

    void <init>(com.android.server.am.ActivityManagerService)
    {
        com.android.server.am.UserController$Injector r0;
        com.android.server.am.ActivityManagerService r1;

        r0 := @this: com.android.server.am.UserController$Injector;

        r1 := @parameter0: com.android.server.am.ActivityManagerService;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.am.UserController$Injector: com.android.server.am.ActivityManagerService mService> = r1;

        return;
    }

    static void lambda$startUserWidgets$0(android.appwidget.AppWidgetManagerInternal, int)
    {
        android.appwidget.AppWidgetManagerInternal r0;
        int i0;

        r0 := @parameter0: android.appwidget.AppWidgetManagerInternal;

        i0 := @parameter1: int;

        virtualinvoke r0.<android.appwidget.AppWidgetManagerInternal: void unlockUser(int)>(i0);

        return;
    }

    void activityManagerForceStopPackage(int, java.lang.String)
    {
        com.android.server.am.UserController$Injector r0;
        int i0;
        com.android.server.am.ActivityManagerService r1, $r2;
        java.lang.Throwable $r3;
        java.lang.String r4;

        r0 := @this: com.android.server.am.UserController$Injector;

        i0 := @parameter0: int;

        r4 := @parameter1: java.lang.String;

        r1 = r0.<com.android.server.am.UserController$Injector: com.android.server.am.ActivityManagerService mService>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r2 = r0.<com.android.server.am.UserController$Injector: com.android.server.am.ActivityManagerService mService>;

        virtualinvoke $r2.<com.android.server.am.ActivityManagerService: boolean forceStopPackageLocked(java.lang.String,int,boolean,boolean,boolean,boolean,boolean,int,java.lang.String)>(null, -1, 0, 0, 1, 0, 0, i0, r4);

        exitmonitor r1;

     label2:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    void activityManagerOnUserStopped(int)
    {
        com.android.server.am.UserController$Injector r0;
        int i0;
        java.lang.Object $r1;
        com.android.server.wm.ActivityTaskManagerInternal $r2;

        r0 := @this: com.android.server.am.UserController$Injector;

        i0 := @parameter0: int;

        $r1 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Lcom/android/server/wm/ActivityTaskManagerInternal;");

        $r2 = (com.android.server.wm.ActivityTaskManagerInternal) $r1;

        virtualinvoke $r2.<com.android.server.wm.ActivityTaskManagerInternal: void onUserStopped(int)>(i0);

        return;
    }

    void batteryStatsServiceNoteEvent(int, java.lang.String, int)
    {
        com.android.server.am.UserController$Injector r0;
        int i0, i1;
        java.lang.String r1;
        com.android.server.am.ActivityManagerService $r2;
        com.android.server.am.BatteryStatsService $r3;

        r0 := @this: com.android.server.am.UserController$Injector;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        $r2 = r0.<com.android.server.am.UserController$Injector: com.android.server.am.ActivityManagerService mService>;

        $r3 = $r2.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        virtualinvoke $r3.<com.android.server.am.BatteryStatsService: void noteEvent(int,java.lang.String,int)>(i0, r1, i1);

        return;
    }

    protected int broadcastIntent(android.content.Intent, java.lang.String, android.content.IIntentReceiver, int, java.lang.String, android.os.Bundle, java.lang.String[], int, android.os.Bundle, boolean, boolean, int, int, int, int, int)
    {
        com.android.server.am.UserController$Injector r0;
        android.content.IIntentReceiver r1;
        java.lang.String r2, $r10, r14;
        android.os.Bundle r3, r5;
        java.lang.String[] r4;
        int i0, i1, i2, i3, i4, i5, i7, i8, i9;
        boolean z0, z1;
        com.android.server.am.ActivityManagerService r6, r15, r16, r18;
        java.lang.Object[] $r8;
        java.lang.Integer $r9;
        java.lang.Throwable $r11, $r12, r17;
        android.content.Intent r13;

        r0 := @this: com.android.server.am.UserController$Injector;

        r13 := @parameter0: android.content.Intent;

        r14 := @parameter1: java.lang.String;

        r1 := @parameter2: android.content.IIntentReceiver;

        i7 := @parameter3: int;

        r2 := @parameter4: java.lang.String;

        r3 := @parameter5: android.os.Bundle;

        r4 := @parameter6: java.lang.String[];

        i0 := @parameter7: int;

        r5 := @parameter8: android.os.Bundle;

        z0 := @parameter9: boolean;

        z1 := @parameter10: boolean;

        i1 := @parameter11: int;

        i2 := @parameter12: int;

        i3 := @parameter13: int;

        i4 := @parameter14: int;

        i5 := @parameter15: int;

        i8 = virtualinvoke r13.<android.content.Intent: int getIntExtra(java.lang.String,int)>("android.intent.extra.user_handle", -10000);

        if i8 != -10000 goto label01;

        i8 = i5;

        goto label01;

     label01:
        $r8 = newarray (java.lang.Object)[2];

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i8);

        $r8[0] = $r9;

        $r10 = virtualinvoke r13.<android.content.Intent: java.lang.String getAction()>();

        $r8[1] = $r10;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(30081, $r8);

        r15 = r0.<com.android.server.am.UserController$Injector: com.android.server.am.ActivityManagerService mService>;

        entermonitor r15;

     label02:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        r6 = r0.<com.android.server.am.UserController$Injector: com.android.server.am.ActivityManagerService mService>;

     label03:
        r16 = r15;

     label04:
        i9 = virtualinvoke r6.<com.android.server.am.ActivityManagerService: int broadcastIntentLocked(com.android.server.am.ProcessRecord,java.lang.String,java.lang.String,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String[],int,android.os.Bundle,boolean,boolean,int,int,int,int,int)>(null, null, null, r13, r14, r1, i7, r2, r3, r4, i0, r5, z0, z1, i1, i2, i3, i4, i5);

     label05:
        r16 = r15;

     label06:
        exitmonitor r15;

     label07:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return i9;

     label08:
        $r11 := @caughtexception;

        r17 = $r11;

        r18 = r15;

     label09:
        r16 = r18;

     label10:
        exitmonitor r18;

     label11:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw r17;

     label12:
        $r12 := @caughtexception;

        r17 = $r12;

        r18 = r16;

        goto label09;

        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label04 to label05 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
    }

    int checkCallingPermission(java.lang.String)
    {
        com.android.server.am.UserController$Injector r0;
        java.lang.String r1;
        com.android.server.am.ActivityManagerService $r2;
        int $i0;

        r0 := @this: com.android.server.am.UserController$Injector;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.am.UserController$Injector: com.android.server.am.ActivityManagerService mService>;

        $i0 = virtualinvoke $r2.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>(r1);

        return $i0;
    }

    int checkComponentPermission(java.lang.String, int, int, int, boolean)
    {
        com.android.server.am.UserController$Injector r0;
        java.lang.String r1;
        int i0, i1, i2, $i3;
        boolean z0;

        r0 := @this: com.android.server.am.UserController$Injector;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        z0 := @parameter4: boolean;

        $i3 = staticinvoke <com.android.server.am.ActivityManagerService: int checkComponentPermission(java.lang.String,int,int,int,boolean)>(r1, i0, i1, i2, z0);

        return $i3;
    }

    protected void clearAllLockedTasks(java.lang.String)
    {
        com.android.server.am.UserController$Injector r0;
        java.lang.String r1;
        com.android.server.am.ActivityManagerService $r2;
        com.android.server.wm.ActivityTaskManagerInternal $r3;

        r0 := @this: com.android.server.am.UserController$Injector;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.am.UserController$Injector: com.android.server.am.ActivityManagerService mService>;

        $r3 = $r2.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerInternal mAtmInternal>;

        virtualinvoke $r3.<com.android.server.wm.ActivityTaskManagerInternal: void clearLockedTasks(java.lang.String)>(r1);

        return;
    }

    void clearBroadcastQueueForUser(int)
    {
        com.android.server.am.UserController$Injector r0;
        int i0;
        com.android.server.am.ActivityManagerService r1, $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.am.UserController$Injector;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.am.UserController$Injector: com.android.server.am.ActivityManagerService mService>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r3 = r0.<com.android.server.am.UserController$Injector: com.android.server.am.ActivityManagerService mService>;

        virtualinvoke $r3.<com.android.server.am.ActivityManagerService: boolean clearBroadcastQueueForUserLocked(int)>(i0);

        exitmonitor r1;

     label2:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    protected android.content.Context getContext()
    {
        com.android.server.am.UserController$Injector r0;
        com.android.server.am.ActivityManagerService $r1;
        android.content.Context $r2;

        r0 := @this: com.android.server.am.UserController$Injector;

        $r1 = r0.<com.android.server.am.UserController$Injector: com.android.server.am.ActivityManagerService mService>;

        $r2 = $r1.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        return $r2;
    }

    protected android.os.Handler getHandler(android.os.Handler$Callback)
    {
        com.android.server.am.UserController$Injector r0;
        android.os.Handler$Callback r1;
        android.os.Handler $r2;
        com.android.server.am.ActivityManagerService $r3;
        com.android.server.ServiceThread $r4;
        android.os.Looper $r5;

        r0 := @this: com.android.server.am.UserController$Injector;

        r1 := @parameter0: android.os.Handler$Callback;

        $r2 = new android.os.Handler;

        $r3 = r0.<com.android.server.am.UserController$Injector: com.android.server.am.ActivityManagerService mService>;

        $r4 = $r3.<com.android.server.am.ActivityManagerService: com.android.server.ServiceThread mHandlerThread>;

        $r5 = virtualinvoke $r4.<com.android.server.ServiceThread: android.os.Looper getLooper()>();

        specialinvoke $r2.<android.os.Handler: void <init>(android.os.Looper,android.os.Handler$Callback)>($r5, r1);

        return $r2;
    }

    android.app.KeyguardManager getKeyguardManager()
    {
        com.android.server.am.UserController$Injector r0;
        com.android.server.am.ActivityManagerService $r1;
        android.content.Context $r2;
        java.lang.Object $r3;
        android.app.KeyguardManager $r4;

        r0 := @this: com.android.server.am.UserController$Injector;

        $r1 = r0.<com.android.server.am.UserController$Injector: com.android.server.am.ActivityManagerService mService>;

        $r2 = $r1.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/app/KeyguardManager;");

        $r4 = (android.app.KeyguardManager) $r3;

        return $r4;
    }

    protected com.android.internal.widget.LockPatternUtils getLockPatternUtils()
    {
        com.android.server.am.UserController$Injector r0;
        com.android.internal.widget.LockPatternUtils $r1;
        android.content.Context $r2;

        r0 := @this: com.android.server.am.UserController$Injector;

        $r1 = new com.android.internal.widget.LockPatternUtils;

        $r2 = virtualinvoke r0.<com.android.server.am.UserController$Injector: android.content.Context getContext()>();

        specialinvoke $r1.<com.android.internal.widget.LockPatternUtils: void <init>(android.content.Context)>($r2);

        return $r1;
    }

    protected android.os.storage.IStorageManager getStorageManager()
    {
        com.android.server.am.UserController$Injector r0;
        android.os.IBinder $r1;
        android.os.storage.IStorageManager $r2;

        r0 := @this: com.android.server.am.UserController$Injector;

        $r1 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("mount");

        $r2 = staticinvoke <android.os.storage.IStorageManager$Stub: android.os.storage.IStorageManager asInterface(android.os.IBinder)>($r1);

        return $r2;
    }

    com.android.server.SystemServiceManager getSystemServiceManager()
    {
        com.android.server.am.UserController$Injector r0;
        com.android.server.am.ActivityManagerService $r1;
        com.android.server.SystemServiceManager $r2;

        r0 := @this: com.android.server.am.UserController$Injector;

        $r1 = r0.<com.android.server.am.UserController$Injector: com.android.server.am.ActivityManagerService mService>;

        $r2 = $r1.<com.android.server.am.ActivityManagerService: com.android.server.SystemServiceManager mSystemServiceManager>;

        return $r2;
    }

    protected android.os.Handler getUiHandler(android.os.Handler$Callback)
    {
        com.android.server.am.UserController$Injector r0;
        android.os.Handler$Callback r1;
        android.os.Handler $r2, $r4;
        com.android.server.am.ActivityManagerService $r3;
        android.os.Looper $r5;

        r0 := @this: com.android.server.am.UserController$Injector;

        r1 := @parameter0: android.os.Handler$Callback;

        $r2 = new android.os.Handler;

        $r3 = r0.<com.android.server.am.UserController$Injector: com.android.server.am.ActivityManagerService mService>;

        $r4 = $r3.<com.android.server.am.ActivityManagerService: android.os.Handler mUiHandler>;

        $r5 = virtualinvoke $r4.<android.os.Handler: android.os.Looper getLooper()>();

        specialinvoke $r2.<android.os.Handler: void <init>(android.os.Looper,android.os.Handler$Callback)>($r5, r1);

        return $r2;
    }

    protected com.android.server.pm.UserManagerService getUserManager()
    {
        com.android.server.am.UserController$Injector r0;
        com.android.server.pm.UserManagerService $r1, $r2, $r5;
        android.os.IBinder $r3;
        android.os.IUserManager $r4;

        r0 := @this: com.android.server.am.UserController$Injector;

        $r1 = r0.<com.android.server.am.UserController$Injector: com.android.server.pm.UserManagerService mUserManager>;

        if $r1 != null goto label1;

        $r3 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("user");

        $r4 = staticinvoke <android.os.IUserManager$Stub: android.os.IUserManager asInterface(android.os.IBinder)>($r3);

        $r5 = (com.android.server.pm.UserManagerService) $r4;

        r0.<com.android.server.am.UserController$Injector: com.android.server.pm.UserManagerService mUserManager> = $r5;

     label1:
        $r2 = r0.<com.android.server.am.UserController$Injector: com.android.server.pm.UserManagerService mUserManager>;

        return $r2;
    }

    android.os.UserManagerInternal getUserManagerInternal()
    {
        com.android.server.am.UserController$Injector r0;
        android.os.UserManagerInternal $r1, $r2, $r4;
        java.lang.Object $r3;

        r0 := @this: com.android.server.am.UserController$Injector;

        $r1 = r0.<com.android.server.am.UserController$Injector: android.os.UserManagerInternal mUserManagerInternal>;

        if $r1 != null goto label1;

        $r3 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/os/UserManagerInternal;");

        $r4 = (android.os.UserManagerInternal) $r3;

        r0.<com.android.server.am.UserController$Injector: android.os.UserManagerInternal mUserManagerInternal> = $r4;

     label1:
        $r2 = r0.<com.android.server.am.UserController$Injector: android.os.UserManagerInternal mUserManagerInternal>;

        return $r2;
    }

    com.android.server.wm.WindowManagerService getWindowManager()
    {
        com.android.server.am.UserController$Injector r0;
        com.android.server.am.ActivityManagerService $r1;
        com.android.server.wm.WindowManagerService $r2;

        r0 := @this: com.android.server.am.UserController$Injector;

        $r1 = r0.<com.android.server.am.UserController$Injector: com.android.server.am.ActivityManagerService mService>;

        $r2 = $r1.<com.android.server.am.ActivityManagerService: com.android.server.wm.WindowManagerService mWindowManager>;

        return $r2;
    }

    void installEncryptionUnawareProviders(int)
    {
        com.android.server.am.UserController$Injector r0;
        int i0;
        com.android.server.am.ActivityManagerService $r1;

        r0 := @this: com.android.server.am.UserController$Injector;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.am.UserController$Injector: com.android.server.am.ActivityManagerService mService>;

        virtualinvoke $r1.<com.android.server.am.ActivityManagerService: void installEncryptionUnawareProviders(int)>(i0);

        return;
    }

    protected boolean isCallerRecents(int)
    {
        com.android.server.am.UserController$Injector r0;
        int i0;
        com.android.server.am.ActivityManagerService $r1;
        com.android.server.wm.ActivityTaskManagerInternal $r2;
        boolean $z0;

        r0 := @this: com.android.server.am.UserController$Injector;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.am.UserController$Injector: com.android.server.am.ActivityManagerService mService>;

        $r2 = $r1.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerInternal mAtmInternal>;

        $z0 = virtualinvoke $r2.<com.android.server.wm.ActivityTaskManagerInternal: boolean isCallerRecents(int)>(i0);

        return $z0;
    }

    boolean isFirstBootOrUpgrade()
    {
        com.android.server.am.UserController$Injector r0;
        boolean $z0, z1, z2;
        android.os.RemoteException $r1;
        java.lang.RuntimeException $r2;
        android.content.pm.IPackageManager r3;

        r0 := @this: com.android.server.am.UserController$Injector;

        r3 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

     label1:
        $z0 = interfaceinvoke r3.<android.content.pm.IPackageManager: boolean isFirstBoot()>();

        if $z0 != 0 goto label4;

        z1 = interfaceinvoke r3.<android.content.pm.IPackageManager: boolean isDeviceUpgrading()>();

     label2:
        if z1 == 0 goto label3;

        goto label4;

     label3:
        z2 = 0;

        goto label5;

     label4:
        z2 = 1;

     label5:
        return z2;

     label6:
        $r1 := @caughtexception;

        $r2 = virtualinvoke $r1.<android.os.RemoteException: java.lang.RuntimeException rethrowFromSystemServer()>();

        throw $r2;

        catch android.os.RemoteException from label1 to label2 with label6;
    }

    boolean isRuntimeRestarted()
    {
        com.android.server.am.UserController$Injector r0;
        com.android.server.am.ActivityManagerService $r1;
        com.android.server.SystemServiceManager $r2;
        boolean $z0;

        r0 := @this: com.android.server.am.UserController$Injector;

        $r1 = r0.<com.android.server.am.UserController$Injector: com.android.server.am.ActivityManagerService mService>;

        $r2 = $r1.<com.android.server.am.ActivityManagerService: com.android.server.SystemServiceManager mSystemServiceManager>;

        $z0 = virtualinvoke $r2.<com.android.server.SystemServiceManager: boolean isRuntimeRestarted()>();

        return $z0;
    }

    void loadUserRecents(int)
    {
        com.android.server.am.UserController$Injector r0;
        int i0;
        com.android.server.am.ActivityManagerService $r1;
        com.android.server.wm.ActivityTaskManagerInternal $r2;

        r0 := @this: com.android.server.am.UserController$Injector;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.am.UserController$Injector: com.android.server.am.ActivityManagerService mService>;

        $r2 = $r1.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerInternal mAtmInternal>;

        virtualinvoke $r2.<com.android.server.wm.ActivityTaskManagerInternal: void loadRecentTasksForUser(int)>(i0);

        return;
    }

    void reportCurWakefulnessUsageEvent()
    {
        com.android.server.am.UserController$Injector r0;
        com.android.server.am.ActivityManagerService r1, $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.am.UserController$Injector;

        r1 = r0.<com.android.server.am.UserController$Injector: com.android.server.am.ActivityManagerService mService>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r3 = r0.<com.android.server.am.UserController$Injector: com.android.server.am.ActivityManagerService mService>;

        virtualinvoke $r3.<com.android.server.am.ActivityManagerService: void reportCurWakefulnessUsageEventLocked()>();

        exitmonitor r1;

     label2:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    void reportGlobalUsageEventLocked(int)
    {
        com.android.server.am.UserController$Injector r0;
        int i0;
        com.android.server.am.ActivityManagerService r1, $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.am.UserController$Injector;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.am.UserController$Injector: com.android.server.am.ActivityManagerService mService>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>();

        $r3 = r0.<com.android.server.am.UserController$Injector: com.android.server.am.ActivityManagerService mService>;

        virtualinvoke $r3.<com.android.server.am.ActivityManagerService: void reportGlobalUsageEventLocked(int)>(i0);

        exitmonitor r1;

     label2:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        staticinvoke <com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    void sendPreBootBroadcast(int, boolean, java.lang.Runnable)
    {
        com.android.server.am.UserController$Injector r0;
        int i0;
        boolean z0;
        java.lang.Runnable r1;
        java.lang.Object[] $r2;
        java.lang.Integer $r3;
        com.android.server.am.UserController$Injector$1 $r4;
        com.android.server.am.ActivityManagerService $r5;

        r0 := @this: com.android.server.am.UserController$Injector;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 := @parameter2: java.lang.Runnable;

        $r2 = newarray (java.lang.Object)[2];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r2[0] = $r3;

        $r2[1] = "android.intent.action.PRE_BOOT_COMPLETED";

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(30081, $r2);

        $r4 = new com.android.server.am.UserController$Injector$1;

        $r5 = r0.<com.android.server.am.UserController$Injector: com.android.server.am.ActivityManagerService mService>;

        specialinvoke $r4.<com.android.server.am.UserController$Injector$1: void <init>(com.android.server.am.UserController$Injector,com.android.server.am.ActivityManagerService,int,com.android.internal.util.ProgressReporter,boolean,java.lang.Runnable)>(r0, $r5, i0, null, z0, r1);

        virtualinvoke $r4.<com.android.server.am.UserController$Injector$1: void sendNext()>();

        return;
    }

    void showUserSwitchingDialog(android.content.pm.UserInfo, android.content.pm.UserInfo, java.lang.String, java.lang.String)
    {
        com.android.server.am.UserController$Injector r0;
        android.content.pm.UserInfo r1, r2;
        java.lang.String r3, r4;
        com.android.server.am.ActivityManagerService r5, $r6;
        android.content.Context $r7, $r10;
        android.content.pm.PackageManager $r8;
        boolean $z0;
        com.android.server.am.UserSwitchingDialog $r9;

        r0 := @this: com.android.server.am.UserController$Injector;

        r1 := @parameter0: android.content.pm.UserInfo;

        r2 := @parameter1: android.content.pm.UserInfo;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        $r6 = r0.<com.android.server.am.UserController$Injector: com.android.server.am.ActivityManagerService mService>;

        $r7 = $r6.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r8 = virtualinvoke $r7.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $z0 = virtualinvoke $r8.<android.content.pm.PackageManager: boolean hasSystemFeature(java.lang.String)>("android.hardware.type.automotive");

        if $z0 != 0 goto label1;

        r5 = r0.<com.android.server.am.UserController$Injector: com.android.server.am.ActivityManagerService mService>;

        $r9 = new com.android.server.am.UserSwitchingDialog;

        $r10 = r5.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        specialinvoke $r9.<com.android.server.am.UserSwitchingDialog: void <init>(com.android.server.am.ActivityManagerService,android.content.Context,android.content.pm.UserInfo,android.content.pm.UserInfo,boolean,java.lang.String,java.lang.String)>(r5, $r10, r1, r2, 1, r3, r4);

        virtualinvoke $r9.<android.app.Dialog: void show()>();

     label1:
        return;
    }

    void stackSupervisorRemoveUser(int)
    {
        com.android.server.am.UserController$Injector r0;
        int i0;
        com.android.server.am.ActivityManagerService $r1;
        com.android.server.wm.ActivityTaskManagerInternal $r2;

        r0 := @this: com.android.server.am.UserController$Injector;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.am.UserController$Injector: com.android.server.am.ActivityManagerService mService>;

        $r2 = $r1.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerInternal mAtmInternal>;

        virtualinvoke $r2.<com.android.server.wm.ActivityTaskManagerInternal: void removeUser(int)>(i0);

        return;
    }

    protected void stackSupervisorResumeFocusedStackTopActivity()
    {
        com.android.server.am.UserController$Injector r0;
        com.android.server.am.ActivityManagerService $r1;
        com.android.server.wm.ActivityTaskManagerInternal $r2;

        r0 := @this: com.android.server.am.UserController$Injector;

        $r1 = r0.<com.android.server.am.UserController$Injector: com.android.server.am.ActivityManagerService mService>;

        $r2 = $r1.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerInternal mAtmInternal>;

        virtualinvoke $r2.<com.android.server.wm.ActivityTaskManagerInternal: void resumeTopActivities(boolean)>(0);

        return;
    }

    protected boolean stackSupervisorSwitchUser(int, com.android.server.am.UserState)
    {
        com.android.server.am.UserController$Injector r0;
        int i0;
        com.android.server.am.UserState r1;
        com.android.server.am.ActivityManagerService $r2;
        com.android.server.wm.ActivityTaskManagerInternal $r3;
        boolean $z0;

        r0 := @this: com.android.server.am.UserController$Injector;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.server.am.UserState;

        $r2 = r0.<com.android.server.am.UserController$Injector: com.android.server.am.ActivityManagerService mService>;

        $r3 = $r2.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerInternal mAtmInternal>;

        $z0 = virtualinvoke $r3.<com.android.server.wm.ActivityTaskManagerInternal: boolean switchUser(int,com.android.server.am.UserState)>(i0, r1);

        return $z0;
    }

    protected void startHomeActivity(int, java.lang.String)
    {
        com.android.server.am.UserController$Injector r0;
        int i0;
        java.lang.String r1;
        com.android.server.am.ActivityManagerService $r2;
        com.android.server.wm.ActivityTaskManagerInternal $r3;

        r0 := @this: com.android.server.am.UserController$Injector;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r2 = r0.<com.android.server.am.UserController$Injector: com.android.server.am.ActivityManagerService mService>;

        $r3 = $r2.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerInternal mAtmInternal>;

        virtualinvoke $r3.<com.android.server.wm.ActivityTaskManagerInternal: boolean startHomeActivity(int,java.lang.String)>(i0, r1);

        return;
    }

    void startPersistentApps(int)
    {
        com.android.server.am.UserController$Injector r0;
        int i0;
        com.android.server.am.ActivityManagerService $r1;

        r0 := @this: com.android.server.am.UserController$Injector;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.am.UserController$Injector: com.android.server.am.ActivityManagerService mService>;

        virtualinvoke $r1.<com.android.server.am.ActivityManagerService: void startPersistentApps(int)>(i0);

        return;
    }

    void startUserWidgets(int)
    {
        com.android.server.am.UserController$Injector r0;
        int i0;
        android.appwidget.AppWidgetManagerInternal r1;
        java.lang.Object $r2;
        android.os.Handler $r3;
        com.android.server.am._$$Lambda$UserController$Injector$MYTLl7MOQKjyMJknWdxPeBLoPCc $r4;

        r0 := @this: com.android.server.am.UserController$Injector;

        i0 := @parameter0: int;

        $r2 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/appwidget/AppWidgetManagerInternal;");

        r1 = (android.appwidget.AppWidgetManagerInternal) $r2;

        if r1 == null goto label1;

        $r3 = staticinvoke <com.android.server.FgThread: android.os.Handler getHandler()>();

        $r4 = new com.android.server.am._$$Lambda$UserController$Injector$MYTLl7MOQKjyMJknWdxPeBLoPCc;

        specialinvoke $r4.<com.android.server.am._$$Lambda$UserController$Injector$MYTLl7MOQKjyMJknWdxPeBLoPCc: void <init>(android.appwidget.AppWidgetManagerInternal,int)>(r1, i0);

        virtualinvoke $r3.<android.os.Handler: boolean post(java.lang.Runnable)>($r4);

     label1:
        return;
    }

    void systemServiceManagerCleanupUser(int)
    {
        com.android.server.am.UserController$Injector r0;
        int i0;
        com.android.server.am.ActivityManagerService $r1;
        com.android.server.SystemServiceManager $r2;

        r0 := @this: com.android.server.am.UserController$Injector;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.am.UserController$Injector: com.android.server.am.ActivityManagerService mService>;

        $r2 = $r1.<com.android.server.am.ActivityManagerService: com.android.server.SystemServiceManager mSystemServiceManager>;

        virtualinvoke $r2.<com.android.server.SystemServiceManager: void cleanupUser(int)>(i0);

        return;
    }

    void updateUserConfiguration()
    {
        com.android.server.am.UserController$Injector r0;
        com.android.server.am.ActivityManagerService $r1;
        com.android.server.wm.ActivityTaskManagerInternal $r2;

        r0 := @this: com.android.server.am.UserController$Injector;

        $r1 = r0.<com.android.server.am.UserController$Injector: com.android.server.am.ActivityManagerService mService>;

        $r2 = $r1.<com.android.server.am.ActivityManagerService: com.android.server.wm.ActivityTaskManagerInternal mAtmInternal>;

        virtualinvoke $r2.<com.android.server.wm.ActivityTaskManagerInternal: void updateUserConfiguration()>();

        return;
    }
}
