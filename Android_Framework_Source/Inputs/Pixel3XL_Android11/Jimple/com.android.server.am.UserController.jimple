class com.android.server.am.UserController extends java.lang.Object implements android.os.Handler$Callback
{
    private static final int CLEAR_USER_JOURNEY_SESSION_MSG;
    static final int CONTINUE_USER_SWITCH_MSG;
    static final int FOREGROUND_PROFILE_CHANGED_MSG;
    private static final long INVALID_SESSION_ID;
    static final int REPORT_LOCKED_BOOT_COMPLETE_MSG;
    static final int REPORT_USER_SWITCH_COMPLETE_MSG;
    static final int REPORT_USER_SWITCH_MSG;
    static final int START_PROFILES_MSG;
    static final int START_USER_SWITCH_FG_MSG;
    static final int START_USER_SWITCH_UI_MSG;
    private static final java.lang.String TAG;
    static final int USER_CURRENT_MSG;
    private static final int USER_JOURNEY_TIMEOUT_MS;
    private static final int USER_JOURNEY_UNKNOWN;
    private static final int USER_JOURNEY_USER_CREATE;
    private static final int USER_JOURNEY_USER_START;
    private static final int USER_JOURNEY_USER_SWITCH_FG;
    private static final int USER_JOURNEY_USER_SWITCH_UI;
    private static final int USER_LIFECYCLE_EVENT_CREATE_USER;
    private static final int USER_LIFECYCLE_EVENT_START_USER;
    private static final int USER_LIFECYCLE_EVENT_STATE_BEGIN;
    private static final int USER_LIFECYCLE_EVENT_STATE_FINISH;
    private static final int USER_LIFECYCLE_EVENT_STATE_NONE;
    private static final int USER_LIFECYCLE_EVENT_SWITCH_USER;
    private static final int USER_LIFECYCLE_EVENT_UNKNOWN;
    private static final int USER_LIFECYCLE_EVENT_UNLOCKED_USER;
    private static final int USER_LIFECYCLE_EVENT_UNLOCKING_USER;
    private static final int USER_LIFECYCLE_EVENT_USER_RUNNING_LOCKED;
    static final int USER_START_MSG;
    private static final int USER_SWITCH_CALLBACKS_TIMEOUT_MS;
    static final int USER_SWITCH_CALLBACKS_TIMEOUT_MSG;
    static final int USER_SWITCH_TIMEOUT_MS;
    static final int USER_SWITCH_TIMEOUT_MSG;
    private static final int USER_SWITCH_WARNING_TIMEOUT_MS;
    static final int USER_UNLOCKED_MSG;
    static final int USER_UNLOCK_MSG;
    volatile boolean mBootCompleted;
    private volatile android.util.ArraySet mCurWaitingUserSwitchCallbacks;
    private int[] mCurrentProfileIds;
    private volatile int mCurrentUserId;
    private boolean mDelayUserDataLocking;
    private final android.os.Handler mHandler;
    private boolean mInitialized;
    private final com.android.server.am.UserController$Injector mInjector;
    private final java.util.ArrayList mLastActiveUsers;
    private final java.lang.Object mLock;
    private final com.android.internal.widget.LockPatternUtils mLockPatternUtils;
    private int mMaxRunningUsers;
    private int[] mStartedUserArray;
    private final android.util.SparseArray mStartedUsers;
    private java.lang.String mSwitchingFromSystemUserMessage;
    private java.lang.String mSwitchingToSystemUserMessage;
    private volatile int mTargetUserId;
    private android.util.ArraySet mTimeoutUserSwitchCallbacks;
    private final android.os.Handler mUiHandler;
    private final android.util.SparseArray mUserIdToUserJourneyMap;
    private final java.util.ArrayList mUserLru;
    private final android.util.SparseIntArray mUserProfileGroupIds;
    private final android.os.RemoteCallbackList mUserSwitchObservers;
    private boolean mUserSwitchUiEnabled;

    void <init>(com.android.server.am.ActivityManagerService)
    {
        com.android.server.am.UserController r0;
        com.android.server.am.ActivityManagerService r1;
        com.android.server.am.UserController$Injector $r2;

        r0 := @this: com.android.server.am.UserController;

        r1 := @parameter0: com.android.server.am.ActivityManagerService;

        $r2 = new com.android.server.am.UserController$Injector;

        specialinvoke $r2.<com.android.server.am.UserController$Injector: void <init>(com.android.server.am.ActivityManagerService)>(r1);

        specialinvoke r0.<com.android.server.am.UserController: void <init>(com.android.server.am.UserController$Injector)>($r2);

        return;
    }

    void <init>(com.android.server.am.UserController$Injector)
    {
        com.android.server.am.UserController r0;
        java.lang.Object $r1;
        android.util.SparseArray $r2, $r9, $r17;
        java.util.ArrayList $r3, $r8, $r18;
        int[] $r4, $r5;
        android.util.SparseIntArray $r6;
        android.os.RemoteCallbackList $r7;
        android.os.Handler $r10, $r12;
        com.android.server.am.UserController$Injector $r11, $r20, r22;
        com.android.server.am.UserState $r13;
        android.os.UserHandle $r14;
        com.android.server.am.UserController$UserProgressListener $r15;
        com.android.internal.util.ProgressReporter $r16;
        java.lang.Integer $r19;
        com.android.internal.widget.LockPatternUtils $r21;

        r0 := @this: com.android.server.am.UserController;

        r22 := @parameter0: com.android.server.am.UserController$Injector;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        r0.<com.android.server.am.UserController: java.lang.Object mLock> = $r1;

        r0.<com.android.server.am.UserController: int mCurrentUserId> = 0;

        r0.<com.android.server.am.UserController: int mTargetUserId> = -10000;

        $r2 = new android.util.SparseArray;

        specialinvoke $r2.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.am.UserController: android.util.SparseArray mStartedUsers> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.UserController: java.util.ArrayList mUserLru> = $r3;

        $r4 = newarray (int)[1];

        $r4[0] = 0;

        r0.<com.android.server.am.UserController: int[] mStartedUserArray> = $r4;

        $r5 = newarray (int)[0];

        r0.<com.android.server.am.UserController: int[] mCurrentProfileIds> = $r5;

        $r6 = new android.util.SparseIntArray;

        specialinvoke $r6.<android.util.SparseIntArray: void <init>()>();

        r0.<com.android.server.am.UserController: android.util.SparseIntArray mUserProfileGroupIds> = $r6;

        $r7 = new android.os.RemoteCallbackList;

        specialinvoke $r7.<android.os.RemoteCallbackList: void <init>()>();

        r0.<com.android.server.am.UserController: android.os.RemoteCallbackList mUserSwitchObservers> = $r7;

        r0.<com.android.server.am.UserController: boolean mUserSwitchUiEnabled> = 1;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.UserController: java.util.ArrayList mLastActiveUsers> = $r8;

        $r9 = new android.util.SparseArray;

        specialinvoke $r9.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.am.UserController: android.util.SparseArray mUserIdToUserJourneyMap> = $r9;

        r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector> = r22;

        $r10 = virtualinvoke r22.<com.android.server.am.UserController$Injector: android.os.Handler getHandler(android.os.Handler$Callback)>(r0);

        r0.<com.android.server.am.UserController: android.os.Handler mHandler> = $r10;

        $r11 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        $r12 = virtualinvoke $r11.<com.android.server.am.UserController$Injector: android.os.Handler getUiHandler(android.os.Handler$Callback)>(r0);

        r0.<com.android.server.am.UserController: android.os.Handler mUiHandler> = $r12;

        $r13 = new com.android.server.am.UserState;

        $r14 = <android.os.UserHandle: android.os.UserHandle SYSTEM>;

        specialinvoke $r13.<com.android.server.am.UserState: void <init>(android.os.UserHandle)>($r14);

        $r16 = $r13.<com.android.server.am.UserState: com.android.internal.util.ProgressReporter mUnlockProgress>;

        $r15 = new com.android.server.am.UserController$UserProgressListener;

        specialinvoke $r15.<com.android.server.am.UserController$UserProgressListener: void <init>(com.android.server.am.UserController$1)>(null);

        virtualinvoke $r16.<com.android.internal.util.ProgressReporter: void addListener(android.os.IProgressListener)>($r15);

        $r17 = r0.<com.android.server.am.UserController: android.util.SparseArray mStartedUsers>;

        virtualinvoke $r17.<android.util.SparseArray: void put(int,java.lang.Object)>(0, $r13);

        $r18 = r0.<com.android.server.am.UserController: java.util.ArrayList mUserLru>;

        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        virtualinvoke $r18.<java.util.ArrayList: boolean add(java.lang.Object)>($r19);

        $r20 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        $r21 = virtualinvoke $r20.<com.android.server.am.UserController$Injector: com.android.internal.widget.LockPatternUtils getLockPatternUtils()>();

        r0.<com.android.server.am.UserController: com.android.internal.widget.LockPatternUtils mLockPatternUtils> = $r21;

        specialinvoke r0.<com.android.server.am.UserController: void updateStartedUserArrayLU()>();

        return;
    }

    static com.android.server.am.UserController$Injector access$100(com.android.server.am.UserController)
    {
        com.android.server.am.UserController r0;
        com.android.server.am.UserController$Injector $r1;

        r0 := @parameter0: com.android.server.am.UserController;

        $r1 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        return $r1;
    }

    static android.os.Handler access$200(com.android.server.am.UserController)
    {
        com.android.server.am.UserController r0;
        android.os.Handler $r1;

        r0 := @parameter0: com.android.server.am.UserController;

        $r1 = r0.<com.android.server.am.UserController: android.os.Handler mHandler>;

        return $r1;
    }

    static java.lang.Object access$300(com.android.server.am.UserController)
    {
        com.android.server.am.UserController r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.server.am.UserController;

        $r1 = r0.<com.android.server.am.UserController: java.lang.Object mLock>;

        return $r1;
    }

    static android.util.ArraySet access$400(com.android.server.am.UserController)
    {
        com.android.server.am.UserController r0;
        android.util.ArraySet $r1;

        r0 := @parameter0: com.android.server.am.UserController;

        $r1 = r0.<com.android.server.am.UserController: android.util.ArraySet mCurWaitingUserSwitchCallbacks>;

        return $r1;
    }

    private boolean canInteractWithAcrossProfilesPermission(int, boolean, int, int, java.lang.String)
    {
        com.android.server.am.UserController r0;
        int i0, i1, i2, $i3;
        java.lang.String r1;
        com.android.server.am.UserController$Injector $r2;
        android.content.Context $r3;
        boolean z1, z2;

        r0 := @this: com.android.server.am.UserController;

        i0 := @parameter0: int;

        z1 := @parameter1: boolean;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r1 := @parameter4: java.lang.String;

        if i0 == 3 goto label1;

        return 0;

     label1:
        if z1 != 0 goto label2;

        return 0;

     label2:
        z2 = 0;

        $r2 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        $r3 = virtualinvoke $r2.<com.android.server.am.UserController$Injector: android.content.Context getContext()>();

        $i3 = staticinvoke <android.content.PermissionChecker: int checkPermissionForPreflight(android.content.Context,java.lang.String,int,int,java.lang.String)>($r3, "android.permission.INTERACT_ACROSS_PROFILES", i1, i2, r1);

        if $i3 != 0 goto label3;

        z2 = 1;

     label3:
        return z2;
    }

    private void checkCallingPermission(java.lang.String, java.lang.String)
    {
        com.android.server.am.UserController r0;
        java.lang.String r1, r14, r15;
        com.android.server.am.UserController$Injector $r3;
        int $i0, $i1, $i2;
        java.lang.StringBuilder $r4;
        java.lang.SecurityException $r13;

        r0 := @this: com.android.server.am.UserController;

        r14 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r3 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        $i0 = virtualinvoke $r3.<com.android.server.am.UserController$Injector: int checkCallingPermission(java.lang.String)>(r14);

        if $i0 != 0 goto label1;

        return;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission denial: ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("() from pid=");

        $i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r14);

        r15 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r15);

        $r13 = new java.lang.SecurityException;

        specialinvoke $r13.<java.lang.SecurityException: void <init>(java.lang.String)>(r15);

        throw $r13;
    }

    private void clearSessionId(int)
    {
        com.android.server.am.UserController r0;
        int i0;
        android.util.SparseArray r1, $r4;
        android.os.Handler $r3;
        java.lang.Throwable $r5;

        r0 := @this: com.android.server.am.UserController;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.am.UserController: android.util.SparseArray mUserIdToUserJourneyMap>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.am.UserController: android.os.Handler mHandler>;

        virtualinvoke $r3.<android.os.Handler: void removeMessages(int)>(200);

        $r4 = r0.<com.android.server.am.UserController: android.util.SparseArray mUserIdToUserJourneyMap>;

        virtualinvoke $r4.<android.util.SparseArray: void delete(int)>(i0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private void clearSessionId(int, int)
    {
        com.android.server.am.UserController r0;
        int i0, i1, $i2;
        android.util.SparseArray r1, $r2;
        java.lang.Object $r3;
        java.lang.Throwable $r4;
        com.android.server.am.UserController$UserJourneySession r5;

        r0 := @this: com.android.server.am.UserController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = r0.<com.android.server.am.UserController: android.util.SparseArray mUserIdToUserJourneyMap>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.am.UserController: android.util.SparseArray mUserIdToUserJourneyMap>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r5 = (com.android.server.am.UserController$UserJourneySession) $r3;

     label2:
        if r5 == null goto label4;

     label3:
        $i2 = r5.<com.android.server.am.UserController$UserJourneySession: int mJourney>;

        if $i2 != i1 goto label4;

        specialinvoke r0.<com.android.server.am.UserController: void clearSessionId(int)>(i0);

     label4:
        exitmonitor r1;

     label5:
        return;

     label6:
        $r4 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    private void dispatchForegroundProfileChanged(int)
    {
        com.android.server.am.UserController r0;
        int i0, i1, i2;
        android.os.RemoteCallbackList $r2, $r3, $r4;
        android.os.IInterface $r5;
        android.app.IUserSwitchObserver $r6;
        android.os.RemoteException $r7;

        r0 := @this: com.android.server.am.UserController;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.am.UserController: android.os.RemoteCallbackList mUserSwitchObservers>;

        i1 = virtualinvoke $r2.<android.os.RemoteCallbackList: int beginBroadcast()>();

        i2 = 0;

     label1:
        if i2 >= i1 goto label6;

     label2:
        $r4 = r0.<com.android.server.am.UserController: android.os.RemoteCallbackList mUserSwitchObservers>;

        $r5 = virtualinvoke $r4.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>(i2);

        $r6 = (android.app.IUserSwitchObserver) $r5;

        interfaceinvoke $r6.<android.app.IUserSwitchObserver: void onForegroundProfileSwitch(int)>(i0);

     label3:
        goto label5;

     label4:
        $r7 := @caughtexception;

     label5:
        i2 = i2 + 1;

        goto label1;

     label6:
        $r3 = r0.<com.android.server.am.UserController: android.os.RemoteCallbackList mUserSwitchObservers>;

        virtualinvoke $r3.<android.os.RemoteCallbackList: void finishBroadcast()>();

        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    private void dispatchLockedBootComplete(int)
    {
        com.android.server.am.UserController r0;
        int i0, i1, i2;
        android.os.RemoteCallbackList $r2, $r3, $r4;
        android.os.IInterface $r5;
        android.app.IUserSwitchObserver $r6;
        android.os.RemoteException $r7;

        r0 := @this: com.android.server.am.UserController;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.am.UserController: android.os.RemoteCallbackList mUserSwitchObservers>;

        i1 = virtualinvoke $r2.<android.os.RemoteCallbackList: int beginBroadcast()>();

        i2 = 0;

     label1:
        if i2 >= i1 goto label6;

     label2:
        $r4 = r0.<com.android.server.am.UserController: android.os.RemoteCallbackList mUserSwitchObservers>;

        $r5 = virtualinvoke $r4.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>(i2);

        $r6 = (android.app.IUserSwitchObserver) $r5;

        interfaceinvoke $r6.<android.app.IUserSwitchObserver: void onLockedBootComplete(int)>(i0);

     label3:
        goto label5;

     label4:
        $r7 := @caughtexception;

     label5:
        i2 = i2 + 1;

        goto label1;

     label6:
        $r3 = r0.<com.android.server.am.UserController: android.os.RemoteCallbackList mUserSwitchObservers>;

        virtualinvoke $r3.<android.os.RemoteCallbackList: void finishBroadcast()>();

        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    private void dispatchUserLocking(int, java.util.List)
    {
        com.android.server.am.UserController r0;
        int i0;
        java.util.List r1;
        android.os.Handler $r2;
        com.android.server.am._$$Lambda$UserController$2SW3yysxmLLBBPZQ1P_qHVFL46g $r3;

        r0 := @this: com.android.server.am.UserController;

        i0 := @parameter0: int;

        r1 := @parameter1: java.util.List;

        $r2 = staticinvoke <com.android.server.FgThread: android.os.Handler getHandler()>();

        $r3 = new com.android.server.am._$$Lambda$UserController$2SW3yysxmLLBBPZQ1P_qHVFL46g;

        specialinvoke $r3.<com.android.server.am._$$Lambda$UserController$2SW3yysxmLLBBPZQ1P_qHVFL46g: void <init>(com.android.server.am.UserController,int,java.util.List)>(r0, i0, r1);

        virtualinvoke $r2.<android.os.Handler: boolean post(java.lang.Runnable)>($r3);

        return;
    }

    private void enforceShellRestriction(java.lang.String, int)
    {
        com.android.server.am.UserController r0;
        int i0, $i1;
        java.lang.StringBuilder $r1;
        java.lang.SecurityException $r4;
        java.lang.String $r5, r6;
        boolean $z0;

        r0 := @this: com.android.server.am.UserController;

        r6 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if $i1 != 2000 goto label2;

        if i0 < 0 goto label1;

        $z0 = virtualinvoke r0.<com.android.server.am.UserController: boolean hasUserRestriction(java.lang.String,int)>(r6, i0);

        if $z0 != 0 goto label1;

        goto label2;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Shell does not have permission to access user ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = new java.lang.SecurityException;

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.SecurityException: void <init>(java.lang.String)>($r5);

        throw $r4;

     label2:
        return;
    }

    private void finishUserBoot(com.android.server.am.UserState)
    {
        com.android.server.am.UserController r0;
        com.android.server.am.UserState r1;

        r0 := @this: com.android.server.am.UserController;

        r1 := @parameter0: com.android.server.am.UserState;

        specialinvoke r0.<com.android.server.am.UserController: void finishUserBoot(com.android.server.am.UserState,android.content.IIntentReceiver)>(r1, null);

        return;
    }

    private void finishUserBoot(com.android.server.am.UserState, android.content.IIntentReceiver)
    {
        com.android.server.am.UserController r0;
        int i0, i2, i3, i4, $i6, $i8, $i9, $i11;
        java.lang.Object r1, r38;
        long l1;
        android.os.UserHandle $r2;
        android.util.SparseArray $r3;
        boolean $z0, $z2, $z5, $z6, $z7, $z8;
        com.android.server.am.UserController$Injector $r4, $r20, $r27, $r28, $r41, r45, $r46;
        com.android.server.pm.UserManagerService $r5, $r42, $r47;
        java.lang.StringBuilder $r6, $r13, $r29;
        java.lang.String $r12, $r19, $r32, r50;
        android.os.UserManagerInternal $r21;
        android.os.Message $r22;
        android.content.Intent $r23;
        java.lang.String[] $r26;
        byte $b13;
        java.lang.Throwable $r33, $r34, $r35, r39;
        com.android.server.am.UserState r36;
        android.content.IIntentReceiver r37;
        android.os.Handler r43;
        android.content.pm.UserInfo r48;

        r0 := @this: com.android.server.am.UserController;

        r36 := @parameter0: com.android.server.am.UserState;

        r37 := @parameter1: android.content.IIntentReceiver;

        $r2 = r36.<com.android.server.am.UserState: android.os.UserHandle mHandle>;

        i0 = virtualinvoke $r2.<android.os.UserHandle: int getIdentifier()>();

        staticinvoke <android.util.EventLog: int writeEvent(int,int)>(30078, i0);

        r38 = r0.<com.android.server.am.UserController: java.lang.Object mLock>;

        entermonitor r38;

     label01:
        $r3 = r0.<com.android.server.am.UserController: android.util.SparseArray mStartedUsers>;

        r1 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i0);

     label02:
        if r1 == r36 goto label06;

     label03:
        exitmonitor r38;

     label04:
        return;

     label05:
        $r33 := @caughtexception;

        r39 = $r33;

        goto label18;

     label06:
        exitmonitor r38;

     label07:
        $z0 = virtualinvoke r36.<com.android.server.am.UserState: boolean setState(int,int)>(0, 1);

        if $z0 == 0 goto label10;

        specialinvoke r0.<com.android.server.am.UserController: void logUserLifecycleEvent(int,int,int)>(i0, 4, 0);

        $r20 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        $r21 = virtualinvoke $r20.<com.android.server.am.UserController$Injector: android.os.UserManagerInternal getUserManagerInternal()>();

        $i11 = r36.<com.android.server.am.UserState: int state>;

        virtualinvoke $r21.<android.os.UserManagerInternal: void setUserState(int,int)>(i0, $i11);

        if i0 != 0 goto label08;

        $r27 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        $z5 = virtualinvoke $r27.<com.android.server.am.UserController$Injector: boolean isRuntimeRestarted()>();

        if $z5 != 0 goto label08;

        $r28 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        $z6 = virtualinvoke $r28.<com.android.server.am.UserController$Injector: boolean isFirstBootOrUpgrade()>();

        if $z6 != 0 goto label08;

        l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int,long)>(240, 12, l1);

        $b13 = l1 cmp 120000L;

        if $b13 <= 0 goto label08;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("finishUserBoot took too long. elapsedTimeMs=");

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);

        $r32 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("SystemServerTiming", $r32);

     label08:
        $r41 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        $r42 = virtualinvoke $r41.<com.android.server.am.UserController$Injector: com.android.server.pm.UserManagerService getUserManager()>();

        $z7 = virtualinvoke $r42.<com.android.server.pm.UserManagerService: boolean isPreCreated(int)>(i0);

        if $z7 != 0 goto label09;

        r43 = r0.<com.android.server.am.UserController: android.os.Handler mHandler>;

        $r22 = virtualinvoke r43.<android.os.Handler: android.os.Message obtainMessage(int,int,int)>(110, i0, 0);

        virtualinvoke r43.<android.os.Handler: boolean sendMessage(android.os.Message)>($r22);

        $r23 = new android.content.Intent;

        specialinvoke $r23.<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>("android.intent.action.LOCKED_BOOT_COMPLETED", null);

        virtualinvoke $r23.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.intent.extra.user_handle", i0);

        virtualinvoke $r23.<android.content.Intent: android.content.Intent addFlags(int)>(-1996488704);

        r45 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        i2 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i4 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r26 = newarray (java.lang.String)[1];

        $r26[0] = "android.permission.RECEIVE_BOOT_COMPLETED";

        virtualinvoke r45.<com.android.server.am.UserController$Injector: int broadcastIntent(android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String[],int,android.os.Bundle,boolean,boolean,int,int,int,int,int)>($r23, null, r37, 0, null, null, $r26, -1, null, 1, 0, i2, 1000, i3, i4, i0);

        goto label10;

     label09:
        goto label10;

     label10:
        $r46 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        $r47 = virtualinvoke $r46.<com.android.server.am.UserController$Injector: com.android.server.pm.UserManagerService getUserManager()>();

        $z8 = virtualinvoke $r47.<com.android.server.pm.UserManagerService: boolean isProfile(int)>(i0);

        if $z8 == 0 goto label15;

        $r4 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        $r5 = virtualinvoke $r4.<com.android.server.am.UserController$Injector: com.android.server.pm.UserManagerService getUserManager()>();

        r48 = virtualinvoke $r5.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getProfileParent(int)>(i0);

        if r48 == null goto label11;

        $i8 = r48.<android.content.pm.UserInfo: int id>;

        $z2 = virtualinvoke r0.<com.android.server.am.UserController: boolean isUserRunning(int,int)>($i8, 4);

        if $z2 == 0 goto label11;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("User ");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (parent ");

        $i9 = r48.<android.content.pm.UserInfo: int id>;

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("): attempting unlock because parent is unlocked");

        $r19 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("ActivityManager", $r19);

        specialinvoke r0.<com.android.server.am.UserController: boolean maybeUnlockUser(int)>(i0);

        goto label14;

     label11:
        if r48 != null goto label12;

        r50 = "<null>";

        goto label13;

     label12:
        $i6 = r48.<android.content.pm.UserInfo: int id>;

        r50 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i6);

     label13:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("User ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (parent ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r50);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("): delaying unlock because parent is locked");

        $r12 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("ActivityManager", $r12);

     label14:
        goto label16;

     label15:
        specialinvoke r0.<com.android.server.am.UserController: boolean maybeUnlockUser(int)>(i0);

     label16:
        return;

     label17:
        $r35 := @caughtexception;

        r39 = $r35;

     label18:
        exitmonitor r38;

     label19:
        throw r39;

     label20:
        $r34 := @caughtexception;

        r39 = $r34;

        goto label18;

        catch java.lang.Throwable from label01 to label02 with label17;
        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label06 to label07 with label17;
        catch java.lang.Throwable from label18 to label19 with label20;
    }

    private void finishUserUnlockedCompleted(com.android.server.am.UserState)
    {
        com.android.server.am.UserController r0;
        int i0, i1, i2, $i4, $i8, $i11, $i12, $i13;
        java.lang.Object r1, r35;
        android.os.UserHandle $r2, $r3;
        android.util.SparseArray $r4;
        boolean $z0, $z1, $z3, $z4, $z5;
        com.android.server.am.UserController$Injector $r5, $r7, $r16, $r17, $r30;
        com.android.server.pm.UserManagerService $r6;
        android.os.Handler $r8, $r44;
        android.os.Message $r9;
        java.lang.StringBuilder $r10, $r18, $r23;
        java.lang.String $r13, $r20, $r22, $r26;
        long $l6;
        android.content.Intent $r27, $r42;
        com.android.server.am.UserController$1 $r29;
        java.lang.Throwable $r31, $r32, $r33, r36;
        com.android.server.am.UserState r34;
        android.content.pm.UserInfo r37;
        com.android.server.am._$$Lambda$UserController$I0p0bKjuvsSPLZB71mKQFfdUjZ4 $r45;

        r0 := @this: com.android.server.am.UserController;

        r34 := @parameter0: com.android.server.am.UserState;

        $r2 = r34.<com.android.server.am.UserState: android.os.UserHandle mHandle>;

        i0 = virtualinvoke $r2.<android.os.UserHandle: int getIdentifier()>();

        staticinvoke <android.util.EventLog: int writeEvent(int,int)>(30072, i0);

        r35 = r0.<com.android.server.am.UserController: java.lang.Object mLock>;

        entermonitor r35;

     label01:
        $r4 = r0.<com.android.server.am.UserController: android.util.SparseArray mStartedUsers>;

        $r3 = r34.<com.android.server.am.UserState: android.os.UserHandle mHandle>;

        $i4 = virtualinvoke $r3.<android.os.UserHandle: int getIdentifier()>();

        r1 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object get(int)>($i4);

     label02:
        if r1 == r34 goto label06;

     label03:
        exitmonitor r35;

     label04:
        return;

     label05:
        $r33 := @caughtexception;

        r36 = $r33;

        goto label14;

     label06:
        exitmonitor r35;

     label07:
        r37 = specialinvoke r0.<com.android.server.am.UserController: android.content.pm.UserInfo getUserInfo(int)>(i0);

        if r37 != null goto label08;

        return;

     label08:
        $z0 = staticinvoke <android.os.storage.StorageManager: boolean isUserKeyUnlocked(int)>(i0);

        if $z0 != 0 goto label09;

        return;

     label09:
        $r5 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        $r6 = virtualinvoke $r5.<com.android.server.am.UserController$Injector: com.android.server.pm.UserManagerService getUserManager()>();

        virtualinvoke $r6.<com.android.server.pm.UserManagerService: void onUserLoggedIn(int)>(i0);

        $z1 = virtualinvoke r37.<android.content.pm.UserInfo: boolean isInitialized()>();

        if $z1 != 0 goto label10;

        if i0 == 0 goto label10;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Initializing user #");

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("ActivityManager", $r26);

        $r27 = new android.content.Intent;

        specialinvoke $r27.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.USER_INITIALIZE");

        virtualinvoke $r27.<android.content.Intent: android.content.Intent addFlags(int)>(285212672);

        $r30 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        $r29 = new com.android.server.am.UserController$1;

        specialinvoke $r29.<com.android.server.am.UserController$1: void <init>(com.android.server.am.UserController,android.content.pm.UserInfo)>(r0, r37);

        $i11 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        $i12 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i13 = staticinvoke <android.os.Binder: int getCallingPid()>();

        virtualinvoke $r30.<com.android.server.am.UserController$Injector: int broadcastIntent(android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String[],int,android.os.Bundle,boolean,boolean,int,int,int,int,int)>($r27, null, $r29, 0, null, null, null, -1, null, 1, 0, $i11, 1000, $i12, $i13, i0);

     label10:
        $z5 = r37.<android.content.pm.UserInfo: boolean preCreated>;

        if $z5 == 0 goto label11;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Stopping pre-created user ");

        $r20 = virtualinvoke r37.<android.content.pm.UserInfo: java.lang.String toFullString()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", $r22);

        $i8 = r37.<android.content.pm.UserInfo: int id>;

        virtualinvoke r0.<com.android.server.am.UserController: int stopUser(int,boolean,boolean,android.app.IStopUserCallback,com.android.server.am.UserState$KeyEvictedCallback)>($i8, 1, 0, null, null);

        return;

     label11:
        $r7 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        virtualinvoke $r7.<com.android.server.am.UserController$Injector: void startUserWidgets(int)>(i0);

        $r8 = r0.<com.android.server.am.UserController: android.os.Handler mHandler>;

        $r9 = virtualinvoke $r8.<android.os.Handler: android.os.Message obtainMessage(int,int,int)>(105, i0, 0);

        virtualinvoke $r9.<android.os.Message: void sendToTarget()>();

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Posting BOOT_COMPLETED user #");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", $r13);

        if i0 != 0 goto label12;

        $r16 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        $z3 = virtualinvoke $r16.<com.android.server.am.UserController$Injector: boolean isRuntimeRestarted()>();

        if $z3 != 0 goto label12;

        $r17 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        $z4 = virtualinvoke $r17.<com.android.server.am.UserController$Injector: boolean isFirstBootOrUpgrade()>();

        if $z4 != 0 goto label12;

        $l6 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int,long)>(240, 13, $l6);

     label12:
        $r42 = new android.content.Intent;

        specialinvoke $r42.<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>("android.intent.action.BOOT_COMPLETED", null);

        virtualinvoke $r42.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.intent.extra.user_handle", i0);

        virtualinvoke $r42.<android.content.Intent: android.content.Intent addFlags(int)>(-1996488704);

        i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i2 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r44 = staticinvoke <com.android.server.FgThread: android.os.Handler getHandler()>();

        $r45 = new com.android.server.am._$$Lambda$UserController$I0p0bKjuvsSPLZB71mKQFfdUjZ4;

        specialinvoke $r45.<com.android.server.am._$$Lambda$UserController$I0p0bKjuvsSPLZB71mKQFfdUjZ4: void <init>(com.android.server.am.UserController,android.content.Intent,int,int,int)>(r0, $r42, i0, i1, i2);

        virtualinvoke $r44.<android.os.Handler: boolean post(java.lang.Runnable)>($r45);

        return;

     label13:
        $r32 := @caughtexception;

        r36 = $r32;

     label14:
        exitmonitor r35;

     label15:
        throw r36;

     label16:
        $r31 := @caughtexception;

        r36 = $r31;

        goto label14;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label14 to label15 with label16;
    }

    private boolean finishUserUnlocking(com.android.server.am.UserState)
    {
        com.android.server.am.UserController r0;
        int i0, $i2;
        java.lang.Object r1, $r4;
        android.os.UserHandle $r2;
        boolean $z0;
        android.util.SparseArray $r3;
        com.android.internal.util.ProgressReporter $r5, $r7;
        com.android.server.am.UserController$Injector $r6;
        android.content.Context $r8;
        java.lang.String $r9;
        android.os.Handler $r10;
        com.android.server.am._$$Lambda$UserController$stQk1028ON105v_u_VMykVjcxLk $r11;
        java.lang.Throwable $r12;
        com.android.server.am.UserState r13;

        r0 := @this: com.android.server.am.UserController;

        r13 := @parameter0: com.android.server.am.UserState;

        $r2 = r13.<com.android.server.am.UserState: android.os.UserHandle mHandle>;

        i0 = virtualinvoke $r2.<android.os.UserHandle: int getIdentifier()>();

        staticinvoke <android.util.EventLog: int writeEvent(int,int)>(30070, i0);

        specialinvoke r0.<com.android.server.am.UserController: void logUserLifecycleEvent(int,int,int)>(i0, 5, 1);

        $z0 = staticinvoke <android.os.storage.StorageManager: boolean isUserKeyUnlocked(int)>(i0);

        if $z0 != 0 goto label01;

        return 0;

     label01:
        r1 = r0.<com.android.server.am.UserController: java.lang.Object mLock>;

        entermonitor r1;

     label02:
        $r3 = r0.<com.android.server.am.UserController: android.util.SparseArray mStartedUsers>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        if $r4 != r13 goto label06;

        $i2 = r13.<com.android.server.am.UserState: int state>;

        if $i2 == 1 goto label04;

     label03:
        goto label06;

     label04:
        exitmonitor r1;

     label05:
        $r5 = r13.<com.android.server.am.UserState: com.android.internal.util.ProgressReporter mUnlockProgress>;

        virtualinvoke $r5.<com.android.internal.util.ProgressReporter: void start()>();

        $r7 = r13.<com.android.server.am.UserState: com.android.internal.util.ProgressReporter mUnlockProgress>;

        $r6 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        $r8 = virtualinvoke $r6.<com.android.server.am.UserController$Injector: android.content.Context getContext()>();

        $r9 = virtualinvoke $r8.<android.content.Context: java.lang.String getString(int)>(17039630);

        virtualinvoke $r7.<com.android.internal.util.ProgressReporter: void setProgress(int,java.lang.CharSequence)>(5, $r9);

        $r10 = staticinvoke <com.android.server.FgThread: android.os.Handler getHandler()>();

        $r11 = new com.android.server.am._$$Lambda$UserController$stQk1028ON105v_u_VMykVjcxLk;

        specialinvoke $r11.<com.android.server.am._$$Lambda$UserController$stQk1028ON105v_u_VMykVjcxLk: void <init>(com.android.server.am.UserController,int,com.android.server.am.UserState)>(r0, i0, r13);

        virtualinvoke $r10.<android.os.Handler: boolean post(java.lang.Runnable)>($r11);

        return 1;

     label06:
        exitmonitor r1;

     label07:
        return 0;

     label08:
        $r12 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r12;

        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    private void forceStopUser(int, java.lang.String)
    {
        com.android.server.am.UserController r0;
        int i0, $i1, $i2, $i3;
        com.android.server.am.UserController$Injector $r1, $r5;
        android.content.Intent $r2;
        java.lang.String r6;

        r0 := @this: com.android.server.am.UserController;

        i0 := @parameter0: int;

        r6 := @parameter1: java.lang.String;

        $r1 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        virtualinvoke $r1.<com.android.server.am.UserController$Injector: void activityManagerForceStopPackage(int,java.lang.String)>(i0, r6);

        $r2 = new android.content.Intent;

        specialinvoke $r2.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.USER_STOPPED");

        virtualinvoke $r2.<android.content.Intent: android.content.Intent addFlags(int)>(1342177280);

        virtualinvoke $r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.intent.extra.user_handle", i0);

        $r5 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        $i1 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i3 = staticinvoke <android.os.Binder: int getCallingPid()>();

        virtualinvoke $r5.<com.android.server.am.UserController$Injector: int broadcastIntent(android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String[],int,android.os.Bundle,boolean,boolean,int,int,int,int,int)>($r2, null, null, 0, null, null, null, -1, null, 0, 0, $i1, 1000, $i2, $i3, -1);

        return;
    }

    private java.lang.String getSwitchingFromSystemUserMessage()
    {
        com.android.server.am.UserController r0;
        java.lang.Object r1;
        java.lang.Throwable $r2;
        java.lang.String r3;

        r0 := @this: com.android.server.am.UserController;

        r1 = r0.<com.android.server.am.UserController: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r3 = r0.<com.android.server.am.UserController: java.lang.String mSwitchingFromSystemUserMessage>;

        exitmonitor r1;

     label2:
        return r3;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private java.lang.String getSwitchingToSystemUserMessage()
    {
        com.android.server.am.UserController r0;
        java.lang.Object r1;
        java.lang.Throwable $r2;
        java.lang.String r3;

        r0 := @this: com.android.server.am.UserController;

        r1 = r0.<com.android.server.am.UserController: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r3 = r0.<com.android.server.am.UserController: java.lang.String mSwitchingToSystemUserMessage>;

        exitmonitor r1;

     label2:
        return r3;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private android.content.pm.UserInfo getUserInfo(int)
    {
        com.android.server.am.UserController r0;
        int i0;
        com.android.server.am.UserController$Injector $r1;
        com.android.server.pm.UserManagerService $r2;
        android.content.pm.UserInfo $r3;

        r0 := @this: com.android.server.am.UserController;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        $r2 = virtualinvoke $r1.<com.android.server.am.UserController$Injector: com.android.server.pm.UserManagerService getUserManager()>();

        $r3 = virtualinvoke $r2.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getUserInfo(int)>(i0);

        return $r3;
    }

    private int[] getUsersToStopLU(int)
    {
        com.android.server.am.UserController r0;
        int i0, i1, i2, i3, i4, i5;
        android.util.SparseArray $r2, $r6;
        android.util.IntArray $r3;
        android.util.SparseIntArray $r4, $r10;
        int[] $r5;
        java.lang.Object $r7;
        com.android.server.am.UserState $r8;
        android.os.UserHandle $r9;
        boolean z0, z1;

        r0 := @this: com.android.server.am.UserController;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.am.UserController: android.util.SparseArray mStartedUsers>;

        i1 = virtualinvoke $r2.<android.util.SparseArray: int size()>();

        $r3 = new android.util.IntArray;

        specialinvoke $r3.<android.util.IntArray: void <init>()>();

        virtualinvoke $r3.<android.util.IntArray: void add(int)>(i0);

        $r4 = r0.<com.android.server.am.UserController: android.util.SparseIntArray mUserProfileGroupIds>;

        i2 = virtualinvoke $r4.<android.util.SparseIntArray: int get(int,int)>(i0, -10000);

        i4 = 0;

     label1:
        if i4 >= i1 goto label7;

        $r6 = r0.<com.android.server.am.UserController: android.util.SparseArray mStartedUsers>;

        $r7 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object valueAt(int)>(i4);

        $r8 = (com.android.server.am.UserState) $r7;

        $r9 = $r8.<com.android.server.am.UserState: android.os.UserHandle mHandle>;

        i3 = virtualinvoke $r9.<android.os.UserHandle: int getIdentifier()>();

        $r10 = r0.<com.android.server.am.UserController: android.util.SparseIntArray mUserProfileGroupIds>;

        i5 = virtualinvoke $r10.<android.util.SparseIntArray: int get(int,int)>(i3, -10000);

        z0 = 0;

        if i2 == -10000 goto label2;

        if i2 != i5 goto label2;

        z1 = 1;

        goto label3;

     label2:
        z1 = 0;

     label3:
        if i3 != i0 goto label4;

        z0 = 1;

     label4:
        if z1 == 0 goto label6;

        if z0 == 0 goto label5;

        goto label6;

     label5:
        virtualinvoke $r3.<android.util.IntArray: void add(int)>(i3);

     label6:
        i4 = i4 + 1;

        goto label1;

     label7:
        $r5 = virtualinvoke $r3.<android.util.IntArray: int[] toArray()>();

        return $r5;
    }

    private boolean isCallingOnHandlerThread()
    {
        com.android.server.am.UserController r0;
        android.os.Looper $r1, $r3;
        android.os.Handler $r2;
        boolean z0;

        r0 := @this: com.android.server.am.UserController;

        $r1 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        $r2 = r0.<com.android.server.am.UserController: android.os.Handler mHandler>;

        $r3 = virtualinvoke $r2.<android.os.Handler: android.os.Looper getLooper()>();

        if $r1 != $r3 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private boolean isCurrentUserLU(int)
    {
        com.android.server.am.UserController r0;
        int i0, $i1;
        boolean z0;

        r0 := @this: com.android.server.am.UserController;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<com.android.server.am.UserController: int getCurrentOrTargetUserIdLU()>();

        if i0 != $i1 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private boolean isDelayUserDataLockingEnabled()
    {
        com.android.server.am.UserController r0;
        java.lang.Object r1;
        boolean z0;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.am.UserController;

        r1 = r0.<com.android.server.am.UserController: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        z0 = r0.<com.android.server.am.UserController: boolean mDelayUserDataLocking>;

        exitmonitor r1;

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private boolean isUserSwitchUiEnabled()
    {
        com.android.server.am.UserController r0;
        java.lang.Object r1;
        boolean z0;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.am.UserController;

        r1 = r0.<com.android.server.am.UserController: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        z0 = r0.<com.android.server.am.UserController: boolean mUserSwitchUiEnabled>;

        exitmonitor r1;

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    static void lambda$stopSingleUserLU$4(android.app.IStopUserCallback, int)
    {
        int i0;
        android.os.RemoteException $r0;
        android.app.IStopUserCallback r1;

        r1 := @parameter0: android.app.IStopUserCallback;

        i0 := @parameter1: int;

     label1:
        interfaceinvoke r1.<android.app.IStopUserCallback: void userStopped(int)>(i0);

     label2:
        goto label4;

     label3:
        $r0 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private void logAndClearSessionId(int)
    {
        com.android.server.am.UserController r0;
        int i0;
        android.util.SparseArray r1, $r2;
        java.lang.Object $r3;
        long $l1;
        java.lang.Throwable $r4;
        com.android.server.am.UserController$UserJourneySession r5;

        r0 := @this: com.android.server.am.UserController;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.am.UserController: android.util.SparseArray mUserIdToUserJourneyMap>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.am.UserController: android.util.SparseArray mUserIdToUserJourneyMap>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r5 = (com.android.server.am.UserController$UserJourneySession) $r3;

     label2:
        if r5 == null goto label4;

     label3:
        $l1 = r5.<com.android.server.am.UserController$UserJourneySession: long mSessionId>;

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,long,int,int,int)>(265, $l1, i0, 0, 0);

     label4:
        specialinvoke r0.<com.android.server.am.UserController: void clearSessionId(int)>(i0);

        exitmonitor r1;

     label5:
        return;

     label6:
        $r4 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    private void logUserJourneyInfo(android.content.pm.UserInfo, android.content.pm.UserInfo, int)
    {
        com.android.server.am.UserController r0;
        android.content.pm.UserInfo r1, r8;
        int i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i10, $i11, i12;
        long l1, $l9;
        android.util.SparseArray r2, $r4, $r11;
        java.util.concurrent.ThreadLocalRandom $r3;
        java.lang.Object $r5;
        java.lang.String $r6;
        java.lang.Throwable $r7;
        com.android.server.am.UserController$UserJourneySession r9, r10;
        android.os.Handler $r12, $r13, $r14;
        java.lang.Integer $r15;
        android.os.Message $r16;

        r0 := @this: com.android.server.am.UserController;

        r8 := @parameter0: android.content.pm.UserInfo;

        r1 := @parameter1: android.content.pm.UserInfo;

        i0 := @parameter2: int;

        $r3 = staticinvoke <java.util.concurrent.ThreadLocalRandom: java.util.concurrent.ThreadLocalRandom current()>();

        l1 = virtualinvoke $r3.<java.util.concurrent.ThreadLocalRandom: long nextLong(long,long)>(1L, 9223372036854775807L);

        r2 = r0.<com.android.server.am.UserController: android.util.SparseArray mUserIdToUserJourneyMap>;

        entermonitor r2;

     label01:
        $r4 = r0.<com.android.server.am.UserController: android.util.SparseArray mUserIdToUserJourneyMap>;

        $i2 = r1.<android.content.pm.UserInfo: int id>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object get(int)>($i2);

        r9 = (com.android.server.am.UserController$UserJourneySession) $r5;

     label02:
        if r9 == null goto label10;

     label03:
        $i6 = r9.<com.android.server.am.UserController$UserJourneySession: int mJourney>;

        if $i6 != 1 goto label05;

     label04:
        if i0 == 3 goto label07;

     label05:
        $i7 = r9.<com.android.server.am.UserController$UserJourneySession: int mJourney>;

        if $i7 != 2 goto label09;

     label06:
        if i0 != 3 goto label09;

     label07:
        exitmonitor r2;

     label08:
        return;

     label09:
        $l9 = r9.<com.android.server.am.UserController$UserJourneySession: long mSessionId>;

        $i8 = r1.<android.content.pm.UserInfo: int id>;

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,long,int,int,int)>(265, $l9, $i8, 0, 0);

     label10:
        r10 = new com.android.server.am.UserController$UserJourneySession;

        specialinvoke r10.<com.android.server.am.UserController$UserJourneySession: void <init>(long,int)>(l1, i0);

        $r11 = r0.<com.android.server.am.UserController: android.util.SparseArray mUserIdToUserJourneyMap>;

        $i10 = r1.<android.content.pm.UserInfo: int id>;

        virtualinvoke $r11.<android.util.SparseArray: void put(int,java.lang.Object)>($i10, r10);

        $r12 = r0.<com.android.server.am.UserController: android.os.Handler mHandler>;

        virtualinvoke $r12.<android.os.Handler: void removeMessages(int)>(200);

        $r13 = r0.<com.android.server.am.UserController: android.os.Handler mHandler>;

        $r14 = r0.<com.android.server.am.UserController: android.os.Handler mHandler>;

        $i11 = r1.<android.content.pm.UserInfo: int id>;

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i11);

        $r16 = virtualinvoke $r14.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(200, $r15);

        virtualinvoke $r13.<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>($r16, 90000L);

     label11:
        exitmonitor r2;

     label12:
        if r8 == null goto label13;

        i12 = r8.<android.content.pm.UserInfo: int id>;

        goto label14;

     label13:
        i12 = -1;

     label14:
        $i3 = r1.<android.content.pm.UserInfo: int id>;

        $r6 = r1.<android.content.pm.UserInfo: java.lang.String userType>;

        $i4 = staticinvoke <android.os.UserManager: int getUserTypeForStatsd(java.lang.String)>($r6);

        $i5 = r1.<android.content.pm.UserInfo: int flags>;

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,long,int,int,int,int,int)>(264, l1, i0, i12, $i3, $i4, $i5);

        return;

     label15:
        $r7 := @caughtexception;

     label16:
        exitmonitor r2;

     label17:
        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Throwable from label05 to label06 with label15;
        catch java.lang.Throwable from label07 to label08 with label15;
        catch java.lang.Throwable from label09 to label10 with label15;
        catch java.lang.Throwable from label10 to label11 with label15;
        catch java.lang.Throwable from label11 to label12 with label15;
        catch java.lang.Throwable from label16 to label17 with label15;
    }

    private void logUserLifecycleEvent(int, int, int)
    {
        com.android.server.am.UserController r0;
        int i0, i1, i2;
        android.util.SparseArray r1, $r2;
        long l3, $l5;
        java.lang.Object $r3;
        java.lang.String $r7;
        byte $b6;
        java.lang.Throwable $r8;
        com.android.server.am.UserController$UserJourneySession r9;
        java.lang.StringBuilder r10;

        r0 := @this: com.android.server.am.UserController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 = r0.<com.android.server.am.UserController: android.util.SparseArray mUserIdToUserJourneyMap>;

        entermonitor r1;

     label01:
        $r2 = r0.<com.android.server.am.UserController: android.util.SparseArray mUserIdToUserJourneyMap>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r9 = (com.android.server.am.UserController$UserJourneySession) $r3;

     label02:
        if r9 == null goto label07;

     label03:
        $l5 = r9.<com.android.server.am.UserController$UserJourneySession: long mSessionId>;

        $b6 = $l5 cmp 0L;

        if $b6 != 0 goto label05;

     label04:
        goto label07;

     label05:
        l3 = r9.<com.android.server.am.UserController$UserJourneySession: long mSessionId>;

        exitmonitor r1;

     label06:
        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,long,int,int,int)>(265, l3, i0, i1, i2);

        return;

     label07:
        r10 = new java.lang.StringBuilder;

        specialinvoke r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("UserLifecycleEvent ");

        virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" received without an active userJourneySession.");

        $r7 = virtualinvoke r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r7);

        exitmonitor r1;

     label08:
        return;

     label09:
        $r8 := @caughtexception;

     label10:
        exitmonitor r1;

     label11:
        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    private boolean maybeUnlockUser(int)
    {
        com.android.server.am.UserController r0;
        int i0;
        boolean $z0;

        r0 := @this: com.android.server.am.UserController;

        i0 := @parameter0: int;

        $z0 = specialinvoke r0.<com.android.server.am.UserController: boolean unlockUserCleared(int,byte[],byte[],android.os.IProgressListener)>(i0, null, null, null);

        return $z0;
    }

    private void moveUserToForeground(com.android.server.am.UserState, int, int)
    {
        com.android.server.am.UserController r0;
        com.android.server.am.UserState r1;
        int i0, i1;
        com.android.server.am.UserController$Injector $r2, $r3, $r4;
        boolean $z0;

        r0 := @this: com.android.server.am.UserController;

        r1 := @parameter0: com.android.server.am.UserState;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        $z0 = virtualinvoke $r2.<com.android.server.am.UserController$Injector: boolean stackSupervisorSwitchUser(int,com.android.server.am.UserState)>(i1, r1);

        if $z0 == 0 goto label1;

        $r4 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        virtualinvoke $r4.<com.android.server.am.UserController$Injector: void startHomeActivity(int,java.lang.String)>(i1, "moveUserToForeground");

        goto label2;

     label1:
        $r3 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        virtualinvoke $r3.<com.android.server.am.UserController$Injector: void stackSupervisorResumeFocusedStackTopActivity()>();

     label2:
        staticinvoke <com.android.server.am.EventLogTags: void writeAmSwitchUser(int)>(i1);

        virtualinvoke r0.<com.android.server.am.UserController: void sendUserSwitchBroadcasts(int,int)>(i0, i1);

        return;
    }

    private static void notifyFinished(int, android.os.IProgressListener)
    {
        int i0;
        android.os.RemoteException $r0;
        android.os.IProgressListener r1;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.IProgressListener;

        if r1 != null goto label1;

        return;

     label1:
        interfaceinvoke r1.<android.os.IProgressListener: void onFinished(int,android.os.Bundle)>(i0, null);

     label2:
        goto label4;

     label3:
        $r0 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private void showUserSwitchDialog(android.util.Pair)
    {
        com.android.server.am.UserController r0;
        android.util.Pair r1;
        java.lang.Object $r2, $r3;
        com.android.server.am.UserController$Injector $r4;
        android.content.pm.UserInfo $r5, $r6;
        java.lang.String $r7, $r8;

        r0 := @this: com.android.server.am.UserController;

        r1 := @parameter0: android.util.Pair;

        $r4 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        $r2 = r1.<android.util.Pair: java.lang.Object first>;

        $r5 = (android.content.pm.UserInfo) $r2;

        $r3 = r1.<android.util.Pair: java.lang.Object second>;

        $r6 = (android.content.pm.UserInfo) $r3;

        $r7 = specialinvoke r0.<com.android.server.am.UserController: java.lang.String getSwitchingFromSystemUserMessage()>();

        $r8 = specialinvoke r0.<com.android.server.am.UserController: java.lang.String getSwitchingToSystemUserMessage()>();

        virtualinvoke $r4.<com.android.server.am.UserController$Injector: void showUserSwitchingDialog(android.content.pm.UserInfo,android.content.pm.UserInfo,java.lang.String,java.lang.String)>($r5, $r6, $r7, $r8);

        return;
    }

    private boolean startUserInternal(int, boolean, android.os.IProgressListener, com.android.server.utils.TimingsTraceAndSlog)
    {
        com.android.server.am.UserController r0;
        boolean z0, z1, $z6, $z11, $z13, $z14, $z15, z16, z17;
        int i0, i1, i3, $i5, $i6, $i7, $i9, $i11, $i12, $i13, $i14, $i19, $i20, i22, i23, $i24, i25;
        long l2;
        com.android.internal.util.ProgressReporter r1, $r45;
        com.android.server.am.UserController$Injector $r2, $r12, $r24, $r29, $r31, $r33, $r34, $r35, $r38, $r39, $r41, $r43, $r52, $r65, r107;
        com.android.server.wm.WindowManagerService $r3, $r36, $r40, $r42, $r53;
        int[] $r4, $r37;
        java.util.ArrayList $r5, $r6, $r94, $r95;
        java.lang.String[] $r9;
        android.os.Handler $r13, $r14, $r16, $r17, $r18, $r19, $r21, $r22, $r26, $r27, r91;
        android.os.Message $r15, $r20, $r23, $r28;
        com.android.server.pm.UserManagerService $r25;
        android.os.UserManagerInternal $r30, $r32, $r44;
        java.lang.String $r49, $r57, $r61, $r64;
        android.os.UserHandle $r50;
        android.util.SparseArray $r51, $r85;
        java.lang.Throwable $r66, $r67, $r68, $r69, $r70, $r71, $r72, $r73, $r74, $r75, $r76, r89, r105, r109;
        android.os.IProgressListener r77;
        com.android.server.utils.TimingsTraceAndSlog r78;
        com.android.server.am.UserState r79, r87;
        android.content.pm.UserInfo r80;
        java.lang.StringBuilder r81, r82, r83, r90;
        java.lang.Object r84, $r86, r96, r99, r100, r102;
        com.android.server.am.UserController$UserProgressListener r88;
        com.android.server.am._$$Lambda$UserController$5_I_mDc6HrA5Dg_nAZlw5yKDAA0 r92;
        java.lang.Integer r93, r98;
        android.content.Intent r104, r106;
        com.android.server.am.UserController$6 r108;

        r0 := @this: com.android.server.am.UserController;

        i22 := @parameter0: int;

        z0 := @parameter1: boolean;

        r77 := @parameter2: android.os.IProgressListener;

        r78 := @parameter3: com.android.server.utils.TimingsTraceAndSlog;

        staticinvoke <android.util.EventLog: int writeEvent(int,int)>(30076, i22);

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label001:
        virtualinvoke r78.<com.android.server.utils.TimingsTraceAndSlog: void traceBegin(java.lang.String)>("getStartedUserState");

        i3 = virtualinvoke r0.<com.android.server.am.UserController: int getCurrentUserId()>();

     label002:
        if i3 != i22 goto label013;

     label003:
        r79 = virtualinvoke r0.<com.android.server.am.UserController: com.android.server.am.UserState getStartedUserState(int)>(i22);

     label004:
        if r79 != null goto label007;

     label005:
        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("ActivityManager", "Current user has no UserState");

     label006:
        goto label013;

     label007:
        if i22 != 0 goto label010;

     label008:
        $i20 = r79.<com.android.server.am.UserState: int state>;

        if $i20 != 0 goto label010;

     label009:
        goto label013;

     label010:
        $i19 = r79.<com.android.server.am.UserState: int state>;

        if $i19 != 3 goto label011;

        staticinvoke <com.android.server.am.UserController: void notifyFinished(int,android.os.IProgressListener)>(i22, r77);

     label011:
        virtualinvoke r78.<com.android.server.utils.TimingsTraceAndSlog: void traceEnd()>();

     label012:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        return 1;

     label013:
        virtualinvoke r78.<com.android.server.utils.TimingsTraceAndSlog: void traceEnd()>();

     label014:
        if z0 == 0 goto label016;

     label015:
        virtualinvoke r78.<com.android.server.utils.TimingsTraceAndSlog: void traceBegin(java.lang.String)>("clearAllLockedTasks");

        $r65 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        virtualinvoke $r65.<com.android.server.am.UserController$Injector: void clearAllLockedTasks(java.lang.String)>("startUser");

        virtualinvoke r78.<com.android.server.utils.TimingsTraceAndSlog: void traceEnd()>();

     label016:
        virtualinvoke r78.<com.android.server.utils.TimingsTraceAndSlog: void traceBegin(java.lang.String)>("getUserInfo");

        r80 = specialinvoke r0.<com.android.server.am.UserController: android.content.pm.UserInfo getUserInfo(int)>(i22);

        virtualinvoke r78.<com.android.server.utils.TimingsTraceAndSlog: void traceEnd()>();

     label017:
        if r80 != null goto label020;

     label018:
        r81 = new java.lang.StringBuilder;

        specialinvoke r81.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No user info for user #");

        virtualinvoke r81.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i22);

        $r64 = virtualinvoke r81.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r64);

     label019:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        return 0;

     label020:
        if z0 == 0 goto label023;

     label021:
        $z15 = virtualinvoke r80.<android.content.pm.UserInfo: boolean isManagedProfile()>();

        if $z15 == 0 goto label023;

        r82 = new java.lang.StringBuilder;

        specialinvoke r82.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot switch to User #");

        virtualinvoke r82.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i22);

        virtualinvoke r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": not a full user");

        $r61 = virtualinvoke r82.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r61);

     label022:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        return 0;

     label023:
        if z0 == 0 goto label026;

     label024:
        $z14 = r80.<android.content.pm.UserInfo: boolean preCreated>;

        if $z14 == 0 goto label026;

        r83 = new java.lang.StringBuilder;

        specialinvoke r83.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot start pre-created user #");

        virtualinvoke r83.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i22);

        virtualinvoke r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" as foreground");

        $r57 = virtualinvoke r83.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r57);

     label025:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        return 0;

     label026:
        if z0 == 0 goto label028;

     label027:
        $z13 = specialinvoke r0.<com.android.server.am.UserController: boolean isUserSwitchUiEnabled()>();

        if $z13 == 0 goto label028;

        virtualinvoke r78.<com.android.server.utils.TimingsTraceAndSlog: void traceBegin(java.lang.String)>("startFreezingScreen");

        $r52 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        $r53 = virtualinvoke $r52.<com.android.server.am.UserController$Injector: com.android.server.wm.WindowManagerService getWindowManager()>();

        virtualinvoke $r53.<com.android.server.wm.WindowManagerService: void startFreezingScreen(int,int)>(17432730, 17432729);

        virtualinvoke r78.<com.android.server.utils.TimingsTraceAndSlog: void traceEnd()>();

     label028:
        z16 = 0;

     label029:
        virtualinvoke r78.<com.android.server.utils.TimingsTraceAndSlog: void traceBegin(java.lang.String)>("updateStartedUserArrayStarting");

        r84 = r0.<com.android.server.am.UserController: java.lang.Object mLock>;

        entermonitor r84;

     label030:
        $r85 = r0.<com.android.server.am.UserController: android.util.SparseArray mStartedUsers>;

        $r86 = virtualinvoke $r85.<android.util.SparseArray: java.lang.Object get(int)>(i22);

        r87 = (com.android.server.am.UserState) $r86;

     label031:
        if r87 != null goto label036;

     label032:
        r87 = new com.android.server.am.UserState;

        $r50 = staticinvoke <android.os.UserHandle: android.os.UserHandle of(int)>(i22);

        specialinvoke r87.<com.android.server.am.UserState: void <init>(android.os.UserHandle)>($r50);

     label033:
        r1 = r87.<com.android.server.am.UserState: com.android.internal.util.ProgressReporter mUnlockProgress>;

        r88 = new com.android.server.am.UserController$UserProgressListener;

        specialinvoke r88.<com.android.server.am.UserController$UserProgressListener: void <init>(com.android.server.am.UserController$1)>(null);

        virtualinvoke r1.<com.android.internal.util.ProgressReporter: void addListener(android.os.IProgressListener)>(r88);

        $r51 = r0.<com.android.server.am.UserController: android.util.SparseArray mStartedUsers>;

        virtualinvoke $r51.<android.util.SparseArray: void put(int,java.lang.Object)>(i22, r87);

        specialinvoke r0.<com.android.server.am.UserController: void updateStartedUserArrayLU()>();

     label034:
        z16 = 1;

        z17 = 1;

        goto label041;

     label035:
        $r66 := @caughtexception;

        r89 = $r66;

        goto label103;

     label036:
        i23 = r87.<com.android.server.am.UserState: int state>;

     label037:
        if i23 != 5 goto label040;

     label038:
        $z11 = specialinvoke r0.<com.android.server.am.UserController: boolean isCallingOnHandlerThread()>();

        if $z11 != 0 goto label040;

        r90 = new java.lang.StringBuilder;

        specialinvoke r90.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("User #");

        virtualinvoke r90.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i22);

        virtualinvoke r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is shutting down - will start after full stop");

        $r49 = virtualinvoke r90.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", $r49);

        r91 = r0.<com.android.server.am.UserController: android.os.Handler mHandler>;

        r92 = new com.android.server.am._$$Lambda$UserController$5_I_mDc6HrA5Dg_nAZlw5yKDAA0;

        specialinvoke r92.<com.android.server.am._$$Lambda$UserController$5_I_mDc6HrA5Dg_nAZlw5yKDAA0: void <init>(com.android.server.am.UserController,int,boolean,android.os.IProgressListener)>(r0, i22, z0, r77);

        virtualinvoke r91.<android.os.Handler: boolean post(java.lang.Runnable)>(r92);

        virtualinvoke r78.<com.android.server.utils.TimingsTraceAndSlog: void traceEnd()>();

        exitmonitor r84;

     label039:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        return 1;

     label040:
        z17 = 0;

     label041:
        r93 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i22);

        $r94 = r0.<com.android.server.am.UserController: java.util.ArrayList mUserLru>;

        virtualinvoke $r94.<java.util.ArrayList: boolean remove(java.lang.Object)>(r93);

        $r95 = r0.<com.android.server.am.UserController: java.util.ArrayList mUserLru>;

        virtualinvoke $r95.<java.util.ArrayList: boolean add(java.lang.Object)>(r93);

     label042:
        exitmonitor r84;

     label043:
        if r77 == null goto label045;

     label044:
        $r45 = r87.<com.android.server.am.UserState: com.android.internal.util.ProgressReporter mUnlockProgress>;

        virtualinvoke $r45.<com.android.internal.util.ProgressReporter: void addListener(android.os.IProgressListener)>(r77);

     label045:
        virtualinvoke r78.<com.android.server.utils.TimingsTraceAndSlog: void traceEnd()>();

     label046:
        if z17 == 0 goto label048;

     label047:
        virtualinvoke r78.<com.android.server.utils.TimingsTraceAndSlog: void traceBegin(java.lang.String)>("setUserState");

        $r43 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        $r44 = virtualinvoke $r43.<com.android.server.am.UserController$Injector: android.os.UserManagerInternal getUserManagerInternal()>();

        $i14 = r87.<com.android.server.am.UserState: int state>;

        virtualinvoke $r44.<android.os.UserManagerInternal: void setUserState(int,int)>(i22, $i14);

        virtualinvoke r78.<com.android.server.utils.TimingsTraceAndSlog: void traceEnd()>();

     label048:
        virtualinvoke r78.<com.android.server.utils.TimingsTraceAndSlog: void traceBegin(java.lang.String)>("updateConfigurationAndProfileIds");

     label049:
        if z0 == 0 goto label059;

     label050:
        $r33 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        virtualinvoke $r33.<com.android.server.am.UserController$Injector: void reportGlobalUsageEventLocked(int)>(16);

        r96 = r0.<com.android.server.am.UserController: java.lang.Object mLock>;

        entermonitor r96;

     label051:
        r0.<com.android.server.am.UserController: int mCurrentUserId> = i22;

        r0.<com.android.server.am.UserController: int mTargetUserId> = -10000;

        z1 = r0.<com.android.server.am.UserController: boolean mUserSwitchUiEnabled>;

        exitmonitor r96;

     label052:
        $r34 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        virtualinvoke $r34.<com.android.server.am.UserController$Injector: void updateUserConfiguration()>();

        specialinvoke r0.<com.android.server.am.UserController: void updateCurrentProfileIds()>();

        $r35 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        $r36 = virtualinvoke $r35.<com.android.server.am.UserController$Injector: com.android.server.wm.WindowManagerService getWindowManager()>();

        $r37 = virtualinvoke r0.<com.android.server.am.UserController: int[] getCurrentProfileIds()>();

        virtualinvoke $r36.<com.android.server.wm.WindowManagerService: void setCurrentUser(int,int[])>(i22, $r37);

        $r38 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        virtualinvoke $r38.<com.android.server.am.UserController$Injector: void reportCurWakefulnessUsageEvent()>();

     label053:
        if z1 == 0 goto label055;

     label054:
        $r39 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        $r40 = virtualinvoke $r39.<com.android.server.am.UserController$Injector: com.android.server.wm.WindowManagerService getWindowManager()>();

        virtualinvoke $r40.<com.android.server.wm.WindowManagerService: void setSwitchingUser(boolean)>(1);

        $r41 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        $r42 = virtualinvoke $r41.<com.android.server.am.UserController$Injector: com.android.server.wm.WindowManagerService getWindowManager()>();

        virtualinvoke $r42.<com.android.server.wm.WindowManagerService: void lockNow(android.os.Bundle)>(null);

     label055:
        goto label061;

     label056:
        $r69 := @caughtexception;

     label057:
        exitmonitor r96;

     label058:
        throw $r69;

     label059:
        $i5 = r0.<com.android.server.am.UserController: int mCurrentUserId>;

        r98 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        specialinvoke r0.<com.android.server.am.UserController: void updateCurrentProfileIds()>();

        $r2 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        $r3 = virtualinvoke $r2.<com.android.server.am.UserController$Injector: com.android.server.wm.WindowManagerService getWindowManager()>();

        $r4 = virtualinvoke r0.<com.android.server.am.UserController: int[] getCurrentProfileIds()>();

        virtualinvoke $r3.<com.android.server.wm.WindowManagerService: void setCurrentProfileIds(int[])>($r4);

        r99 = r0.<com.android.server.am.UserController: java.lang.Object mLock>;

        entermonitor r99;

     label060:
        $r5 = r0.<com.android.server.am.UserController: java.util.ArrayList mUserLru>;

        virtualinvoke $r5.<java.util.ArrayList: boolean remove(java.lang.Object)>(r98);

        $r6 = r0.<com.android.server.am.UserController: java.util.ArrayList mUserLru>;

        virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>(r98);

        exitmonitor r99;

     label061:
        virtualinvoke r78.<com.android.server.utils.TimingsTraceAndSlog: void traceEnd()>();

        $i6 = r87.<com.android.server.am.UserState: int state>;

        if $i6 != 4 goto label069;

        virtualinvoke r78.<com.android.server.utils.TimingsTraceAndSlog: void traceBegin(java.lang.String)>("updateStateStopping");

        $i12 = r87.<com.android.server.am.UserState: int lastState>;

        virtualinvoke r87.<com.android.server.am.UserState: void setState(int)>($i12);

        $r31 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        $r32 = virtualinvoke $r31.<com.android.server.am.UserController$Injector: android.os.UserManagerInternal getUserManagerInternal()>();

        $i13 = r87.<com.android.server.am.UserState: int state>;

        virtualinvoke $r32.<android.os.UserManagerInternal: void setUserState(int,int)>(i22, $i13);

        r100 = r0.<com.android.server.am.UserController: java.lang.Object mLock>;

        entermonitor r100;

     label062:
        specialinvoke r0.<com.android.server.am.UserController: void updateStartedUserArrayLU()>();

        exitmonitor r100;

     label063:
        z16 = 1;

     label064:
        virtualinvoke r78.<com.android.server.utils.TimingsTraceAndSlog: void traceEnd()>();

     label065:
        goto label077;

     label066:
        $r70 := @caughtexception;

     label067:
        exitmonitor r100;

     label068:
        throw $r70;

     label069:
        $i7 = r87.<com.android.server.am.UserState: int state>;

        if $i7 != 5 goto label077;

        virtualinvoke r78.<com.android.server.utils.TimingsTraceAndSlog: void traceBegin(java.lang.String)>("updateStateShutdown");

        virtualinvoke r87.<com.android.server.am.UserState: void setState(int)>(0);

        $r29 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        $r30 = virtualinvoke $r29.<com.android.server.am.UserController$Injector: android.os.UserManagerInternal getUserManagerInternal()>();

        $i11 = r87.<com.android.server.am.UserState: int state>;

        virtualinvoke $r30.<android.os.UserManagerInternal: void setUserState(int,int)>(i22, $i11);

        r102 = r0.<com.android.server.am.UserController: java.lang.Object mLock>;

        entermonitor r102;

     label070:
        specialinvoke r0.<com.android.server.am.UserController: void updateStartedUserArrayLU()>();

        exitmonitor r102;

     label071:
        z16 = 1;

     label072:
        virtualinvoke r78.<com.android.server.utils.TimingsTraceAndSlog: void traceEnd()>();

     label073:
        goto label077;

     label074:
        $r73 := @caughtexception;

     label075:
        exitmonitor r102;

     label076:
        throw $r73;

     label077:
        $i24 = r87.<com.android.server.am.UserState: int state>;

        if $i24 != 0 goto label078;

        virtualinvoke r78.<com.android.server.utils.TimingsTraceAndSlog: void traceBegin(java.lang.String)>("updateStateBooting");

        $r24 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        $r25 = virtualinvoke $r24.<com.android.server.am.UserController$Injector: com.android.server.pm.UserManagerService getUserManager()>();

        virtualinvoke $r25.<com.android.server.pm.UserManagerService: void onBeforeStartUser(int)>(i22);

        $r27 = r0.<com.android.server.am.UserController: android.os.Handler mHandler>;

        $r26 = r0.<com.android.server.am.UserController: android.os.Handler mHandler>;

        $r28 = virtualinvoke $r26.<android.os.Handler: android.os.Message obtainMessage(int,int,int)>(50, i22, 0);

        virtualinvoke $r27.<android.os.Handler: boolean sendMessage(android.os.Message)>($r28);

        virtualinvoke r78.<com.android.server.utils.TimingsTraceAndSlog: void traceEnd()>();

     label078:
        virtualinvoke r78.<com.android.server.utils.TimingsTraceAndSlog: void traceBegin(java.lang.String)>("sendMessages");

     label079:
        if z0 == 0 goto label081;

     label080:
        $r14 = r0.<com.android.server.am.UserController: android.os.Handler mHandler>;

        $r13 = r0.<com.android.server.am.UserController: android.os.Handler mHandler>;

        $r15 = virtualinvoke $r13.<android.os.Handler: android.os.Message obtainMessage(int,int,int)>(60, i22, i3);

        virtualinvoke $r14.<android.os.Handler: boolean sendMessage(android.os.Message)>($r15);

        $r16 = r0.<com.android.server.am.UserController: android.os.Handler mHandler>;

        virtualinvoke $r16.<android.os.Handler: void removeMessages(int)>(10);

        $r17 = r0.<com.android.server.am.UserController: android.os.Handler mHandler>;

        virtualinvoke $r17.<android.os.Handler: void removeMessages(int)>(30);

        $r19 = r0.<com.android.server.am.UserController: android.os.Handler mHandler>;

        $r18 = r0.<com.android.server.am.UserController: android.os.Handler mHandler>;

        $r20 = virtualinvoke $r18.<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(10, i3, i22, r87);

        virtualinvoke $r19.<android.os.Handler: boolean sendMessage(android.os.Message)>($r20);

        $r22 = r0.<com.android.server.am.UserController: android.os.Handler mHandler>;

        $r21 = r0.<com.android.server.am.UserController: android.os.Handler mHandler>;

        $r23 = virtualinvoke $r21.<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(30, i3, i22, r87);

        virtualinvoke $r22.<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>($r23, 3000L);

     label081:
        $z6 = r80.<android.content.pm.UserInfo: boolean preCreated>;

        if $z6 == 0 goto label083;

     label082:
        z16 = 0;

        goto label083;

     label083:
        if z16 == 0 goto label086;

     label084:
        r104 = new android.content.Intent;

        specialinvoke r104.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.USER_STARTED");

        virtualinvoke r104.<android.content.Intent: android.content.Intent addFlags(int)>(1342177280);

        virtualinvoke r104.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.intent.extra.user_handle", i22);

        $r12 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        $i9 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        virtualinvoke $r12.<com.android.server.am.UserController$Injector: int broadcastIntent(android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String[],int,android.os.Bundle,boolean,boolean,int,int,int,int,int)>(r104, null, null, 0, null, null, null, -1, null, 0, 0, $i9, 1000, i0, i1, i22);

     label085:
        goto label086;

     label086:
        virtualinvoke r78.<com.android.server.utils.TimingsTraceAndSlog: void traceEnd()>();

     label087:
        if z0 == 0 goto label092;

     label088:
        virtualinvoke r78.<com.android.server.utils.TimingsTraceAndSlog: void traceBegin(java.lang.String)>("moveUserToForeground");

     label089:
        specialinvoke r0.<com.android.server.am.UserController: void moveUserToForeground(com.android.server.am.UserState,int,int)>(r87, i3, i22);

        virtualinvoke r78.<com.android.server.utils.TimingsTraceAndSlog: void traceEnd()>();

     label090:
        goto label093;

     label091:
        $r76 := @caughtexception;

        r105 = $r76;

        goto label107;

     label092:
        virtualinvoke r78.<com.android.server.utils.TimingsTraceAndSlog: void traceBegin(java.lang.String)>("finishUserBoot");

        specialinvoke r0.<com.android.server.am.UserController: void finishUserBoot(com.android.server.am.UserState)>(r87);

        virtualinvoke r78.<com.android.server.utils.TimingsTraceAndSlog: void traceEnd()>();

     label093:
        if z16 == 0 goto label096;

     label094:
        virtualinvoke r78.<com.android.server.utils.TimingsTraceAndSlog: void traceBegin(java.lang.String)>("sendRestartBroadcast");

        r106 = new android.content.Intent;

        specialinvoke r106.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.USER_STARTING");

        virtualinvoke r106.<android.content.Intent: android.content.Intent addFlags(int)>(1073741824);

        virtualinvoke r106.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.intent.extra.user_handle", i22);

        r107 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        r108 = new com.android.server.am.UserController$6;

        specialinvoke r108.<com.android.server.am.UserController$6: void <init>(com.android.server.am.UserController)>(r0);

        i25 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        $r9 = newarray (java.lang.String)[1];

        $r9[0] = "android.permission.INTERACT_ACROSS_USERS";

        virtualinvoke r107.<com.android.server.am.UserController$Injector: int broadcastIntent(android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String[],int,android.os.Bundle,boolean,boolean,int,int,int,int,int)>(r106, null, r108, 0, null, null, $r9, -1, null, 1, 0, i25, 1000, i0, i1, -1);

        virtualinvoke r78.<com.android.server.utils.TimingsTraceAndSlog: void traceEnd()>();

     label095:
        goto label096;

     label096:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        return 1;

     label097:
        $r75 := @caughtexception;

        r109 = $r75;

     label098:
        exitmonitor r99;

     label099:
        throw r109;

     label100:
        $r71 := @caughtexception;

        r109 = $r71;

        goto label098;

     label101:
        $r68 := @caughtexception;

        r89 = $r68;

        goto label103;

     label102:
        $r67 := @caughtexception;

        r89 = $r67;

     label103:
        exitmonitor r84;

     label104:
        throw r89;

     label105:
        $r72 := @caughtexception;

        r89 = $r72;

        goto label103;

     label106:
        $r74 := @caughtexception;

        r105 = $r74;

     label107:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw r105;

        catch java.lang.Throwable from label001 to label002 with label106;
        catch java.lang.Throwable from label003 to label004 with label106;
        catch java.lang.Throwable from label005 to label006 with label106;
        catch java.lang.Throwable from label008 to label009 with label106;
        catch java.lang.Throwable from label010 to label011 with label106;
        catch java.lang.Throwable from label011 to label012 with label106;
        catch java.lang.Throwable from label013 to label014 with label106;
        catch java.lang.Throwable from label015 to label016 with label106;
        catch java.lang.Throwable from label016 to label017 with label106;
        catch java.lang.Throwable from label018 to label019 with label106;
        catch java.lang.Throwable from label021 to label022 with label106;
        catch java.lang.Throwable from label024 to label025 with label106;
        catch java.lang.Throwable from label027 to label028 with label106;
        catch java.lang.Throwable from label029 to label030 with label106;
        catch java.lang.Throwable from label030 to label031 with label102;
        catch java.lang.Throwable from label032 to label033 with label035;
        catch java.lang.Throwable from label033 to label034 with label035;
        catch java.lang.Throwable from label036 to label037 with label102;
        catch java.lang.Throwable from label038 to label039 with label035;
        catch java.lang.Throwable from label041 to label042 with label101;
        catch java.lang.Throwable from label042 to label043 with label101;
        catch java.lang.Throwable from label044 to label045 with label106;
        catch java.lang.Throwable from label045 to label046 with label106;
        catch java.lang.Throwable from label047 to label048 with label106;
        catch java.lang.Throwable from label048 to label049 with label106;
        catch java.lang.Throwable from label050 to label051 with label106;
        catch java.lang.Throwable from label051 to label052 with label056;
        catch java.lang.Throwable from label052 to label053 with label106;
        catch java.lang.Throwable from label054 to label055 with label106;
        catch java.lang.Throwable from label057 to label058 with label056;
        catch java.lang.Throwable from label058 to label059 with label106;
        catch java.lang.Throwable from label059 to label060 with label106;
        catch java.lang.Throwable from label060 to label061 with label097;
        catch java.lang.Throwable from label061 to label062 with label106;
        catch java.lang.Throwable from label062 to label063 with label066;
        catch java.lang.Throwable from label064 to label065 with label106;
        catch java.lang.Throwable from label067 to label068 with label066;
        catch java.lang.Throwable from label068 to label069 with label106;
        catch java.lang.Throwable from label069 to label070 with label106;
        catch java.lang.Throwable from label070 to label071 with label074;
        catch java.lang.Throwable from label072 to label073 with label106;
        catch java.lang.Throwable from label075 to label076 with label074;
        catch java.lang.Throwable from label076 to label077 with label106;
        catch java.lang.Throwable from label077 to label078 with label106;
        catch java.lang.Throwable from label078 to label079 with label106;
        catch java.lang.Throwable from label080 to label081 with label106;
        catch java.lang.Throwable from label081 to label082 with label106;
        catch java.lang.Throwable from label084 to label085 with label106;
        catch java.lang.Throwable from label086 to label087 with label106;
        catch java.lang.Throwable from label088 to label089 with label091;
        catch java.lang.Throwable from label089 to label090 with label106;
        catch java.lang.Throwable from label092 to label093 with label106;
        catch java.lang.Throwable from label094 to label095 with label106;
        catch java.lang.Throwable from label098 to label099 with label100;
        catch java.lang.Throwable from label099 to label100 with label106;
        catch java.lang.Throwable from label103 to label104 with label105;
        catch java.lang.Throwable from label104 to label105 with label106;
    }

    private void stopBackgroundUsersIfEnforced(int)
    {
        com.android.server.am.UserController r0;
        int i0;
        java.lang.Object r1;
        boolean $z0, $z1, z2;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.am.UserController;

        i0 := @parameter0: int;

        if i0 != 0 goto label01;

        return;

     label01:
        $z0 = virtualinvoke r0.<com.android.server.am.UserController: boolean hasUserRestriction(java.lang.String,int)>("no_run_in_background", i0);

        if $z0 != 0 goto label03;

        $z1 = specialinvoke r0.<com.android.server.am.UserController: boolean isDelayUserDataLockingEnabled()>();

        if $z1 == 0 goto label02;

        goto label03;

     label02:
        z2 = 0;

        goto label04;

     label03:
        z2 = 1;

     label04:
        if z2 != 0 goto label05;

        return;

     label05:
        r1 = r0.<com.android.server.am.UserController: java.lang.Object mLock>;

        entermonitor r1;

     label06:
        specialinvoke r0.<com.android.server.am.UserController: int stopUsersLU(int,boolean,boolean,android.app.IStopUserCallback,com.android.server.am.UserState$KeyEvictedCallback)>(i0, 0, 1, null, null);

        exitmonitor r1;

     label07:
        return;

     label08:
        $r3 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r3;

        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    private void stopGuestOrEphemeralUserIfBackground(int)
    {
        com.android.server.am.UserController r0;
        int i0, $i1, $i2, $i3;
        android.util.SparseArray $r1;
        java.lang.Object $r2, $r3, r7, r10;
        boolean $z0, $z1, $z2;
        android.os.UserManagerInternal $r4;
        java.lang.Throwable $r5, $r6;
        com.android.server.am.UserState r8;
        android.content.pm.UserInfo r9;

        r0 := @this: com.android.server.am.UserController;

        i0 := @parameter0: int;

        r7 = r0.<com.android.server.am.UserController: java.lang.Object mLock>;

        entermonitor r7;

     label01:
        $r1 = r0.<com.android.server.am.UserController: android.util.SparseArray mStartedUsers>;

        $r2 = virtualinvoke $r1.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r8 = (com.android.server.am.UserState) $r2;

     label02:
        if i0 == 0 goto label16;

     label03:
        $i1 = r0.<com.android.server.am.UserController: int mCurrentUserId>;

        if i0 == $i1 goto label16;

     label04:
        if r8 == null goto label16;

     label05:
        $i2 = r8.<com.android.server.am.UserState: int state>;

        if $i2 == 4 goto label16;

        $i3 = r8.<com.android.server.am.UserState: int state>;

        if $i3 != 5 goto label07;

     label06:
        goto label16;

     label07:
        exitmonitor r7;

     label08:
        r9 = specialinvoke r0.<com.android.server.am.UserController: android.content.pm.UserInfo getUserInfo(int)>(i0);

        $z0 = virtualinvoke r9.<android.content.pm.UserInfo: boolean isEphemeral()>();

        if $z0 == 0 goto label09;

        $r3 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/os/UserManagerInternal;");

        $r4 = (android.os.UserManagerInternal) $r3;

        virtualinvoke $r4.<android.os.UserManagerInternal: void onEphemeralUserStop(int)>(i0);

     label09:
        $z1 = virtualinvoke r9.<android.content.pm.UserInfo: boolean isGuest()>();

        if $z1 != 0 goto label10;

        $z2 = virtualinvoke r9.<android.content.pm.UserInfo: boolean isEphemeral()>();

        if $z2 == 0 goto label12;

     label10:
        r10 = r0.<com.android.server.am.UserController: java.lang.Object mLock>;

        entermonitor r10;

     label11:
        specialinvoke r0.<com.android.server.am.UserController: int stopUsersLU(int,boolean,boolean,android.app.IStopUserCallback,com.android.server.am.UserState$KeyEvictedCallback)>(i0, 1, 0, null, null);

        exitmonitor r10;

     label12:
        return;

     label13:
        $r5 := @caughtexception;

     label14:
        exitmonitor r10;

     label15:
        throw $r5;

     label16:
        exitmonitor r7;

     label17:
        return;

     label18:
        $r6 := @caughtexception;

     label19:
        exitmonitor r7;

     label20:
        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label18;
        catch java.lang.Throwable from label03 to label04 with label18;
        catch java.lang.Throwable from label05 to label06 with label18;
        catch java.lang.Throwable from label07 to label08 with label18;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
        catch java.lang.Throwable from label16 to label17 with label18;
        catch java.lang.Throwable from label19 to label20 with label18;
    }

    private void stopSingleUserLU(int, boolean, android.app.IStopUserCallback, com.android.server.am.UserState$KeyEvictedCallback)
    {
        com.android.server.am.UserController r0;
        int i0, $i1, $i2, $i3;
        boolean z0, $z4, $z6, z8;
        android.app.IStopUserCallback r1;
        android.util.SparseArray $r2;
        java.lang.Object $r3;
        com.android.server.am.UserController$Injector $r4;
        android.os.UserManagerInternal $r5;
        com.android.server.am._$$Lambda$UserController$TdNZVHdOPNd598N3S_XTdc7pt7o $r6;
        android.os.Handler $r7, $r11;
        java.util.ArrayList $r8, $r9, $r12, $r14, r24;
        com.android.server.am._$$Lambda$UserController$QAvDazb_bK3Biqbrt7rtbU_i_EQ $r10;
        java.lang.Integer $r13;
        java.lang.StringBuilder $r15;
        java.lang.String $r18;
        java.lang.RuntimeException $r19;
        com.android.server.am.UserState$KeyEvictedCallback r20;
        com.android.server.am.UserState r21;

        r0 := @this: com.android.server.am.UserController;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 := @parameter2: android.app.IStopUserCallback;

        r20 := @parameter3: com.android.server.am.UserState$KeyEvictedCallback;

        $r2 = r0.<com.android.server.am.UserController: android.util.SparseArray mStartedUsers>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r21 = (com.android.server.am.UserState) $r3;

        if r21 != null goto label6;

        $z4 = r0.<com.android.server.am.UserController: boolean mDelayUserDataLocking>;

        if $z4 == 0 goto label4;

        z8 = z0;

        if z0 == 0 goto label1;

        z8 = z0;

        if r20 == null goto label1;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("allowDelayedLocking set with KeyEvictedCallback, ignore it and lock user:");

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        $r19 = new java.lang.RuntimeException;

        specialinvoke $r19.<java.lang.RuntimeException: void <init>()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r18, $r19);

        z8 = 0;

     label1:
        if z8 != 0 goto label4;

        $r12 = r0.<com.android.server.am.UserController: java.util.ArrayList mLastActiveUsers>;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $z6 = virtualinvoke $r12.<java.util.ArrayList: boolean remove(java.lang.Object)>($r13);

        if $z6 == 0 goto label4;

        if r20 == null goto label2;

        $r14 = new java.util.ArrayList;

        specialinvoke $r14.<java.util.ArrayList: void <init>(int)>(1);

        virtualinvoke $r14.<java.util.ArrayList: boolean add(java.lang.Object)>(r20);

        r24 = $r14;

        goto label3;

     label2:
        r24 = null;

     label3:
        specialinvoke r0.<com.android.server.am.UserController: void dispatchUserLocking(int,java.util.List)>(i0, r24);

     label4:
        if r1 == null goto label5;

        $r11 = r0.<com.android.server.am.UserController: android.os.Handler mHandler>;

        $r10 = new com.android.server.am._$$Lambda$UserController$QAvDazb_bK3Biqbrt7rtbU_i_EQ;

        specialinvoke $r10.<com.android.server.am._$$Lambda$UserController$QAvDazb_bK3Biqbrt7rtbU_i_EQ: void <init>(android.app.IStopUserCallback,int)>(r1, i0);

        virtualinvoke $r11.<android.os.Handler: boolean post(java.lang.Runnable)>($r10);

     label5:
        return;

     label6:
        if r1 == null goto label7;

        $r9 = r21.<com.android.server.am.UserState: java.util.ArrayList mStopCallbacks>;

        virtualinvoke $r9.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

     label7:
        if r20 == null goto label8;

        $r8 = r21.<com.android.server.am.UserState: java.util.ArrayList mKeyEvictedCallbacks>;

        virtualinvoke $r8.<java.util.ArrayList: boolean add(java.lang.Object)>(r20);

     label8:
        $i1 = r21.<com.android.server.am.UserState: int state>;

        if $i1 == 4 goto label9;

        $i2 = r21.<com.android.server.am.UserState: int state>;

        if $i2 == 5 goto label9;

        virtualinvoke r21.<com.android.server.am.UserState: void setState(int)>(4);

        $r4 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        $r5 = virtualinvoke $r4.<com.android.server.am.UserController$Injector: android.os.UserManagerInternal getUserManagerInternal()>();

        $i3 = r21.<com.android.server.am.UserState: int state>;

        virtualinvoke $r5.<android.os.UserManagerInternal: void setUserState(int,int)>(i0, $i3);

        specialinvoke r0.<com.android.server.am.UserController: void updateStartedUserArrayLU()>();

        $r7 = r0.<com.android.server.am.UserController: android.os.Handler mHandler>;

        $r6 = new com.android.server.am._$$Lambda$UserController$TdNZVHdOPNd598N3S_XTdc7pt7o;

        specialinvoke $r6.<com.android.server.am._$$Lambda$UserController$TdNZVHdOPNd598N3S_XTdc7pt7o: void <init>(com.android.server.am.UserController,int,com.android.server.am.UserState,boolean)>(r0, i0, r21, z0);

        virtualinvoke $r7.<android.os.Handler: boolean post(java.lang.Runnable)>($r6);

     label9:
        return;
    }

    private int stopUsersLU(int, boolean, boolean, android.app.IStopUserCallback, com.android.server.am.UserState$KeyEvictedCallback)
    {
        com.android.server.am.UserController r0;
        int i0, i1, $i2, i4, i5, i6, i7;
        boolean z0, z1, $z2, $z3;
        android.app.IStopUserCallback r1, r11;
        com.android.server.am.UserState$KeyEvictedCallback r2, r10;
        int[] r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r8;

        r0 := @this: com.android.server.am.UserController;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        r1 := @parameter3: android.app.IStopUserCallback;

        r2 := @parameter4: com.android.server.am.UserState$KeyEvictedCallback;

        if i0 != 0 goto label01;

        return -3;

     label01:
        $z2 = specialinvoke r0.<com.android.server.am.UserController: boolean isCurrentUserLU(int)>(i0);

        if $z2 == 0 goto label02;

        return -2;

     label02:
        r3 = specialinvoke r0.<com.android.server.am.UserController: int[] getUsersToStopLU(int)>(i0);

        i4 = 0;

     label03:
        $i2 = lengthof r3;

        if i4 >= $i2 goto label07;

        i5 = r3[i4];

        if i5 == 0 goto label05;

        $z3 = specialinvoke r0.<com.android.server.am.UserController: boolean isCurrentUserLU(int)>(i5);

        if $z3 == 0 goto label04;

        goto label05;

     label04:
        i4 = i4 + 1;

        goto label03;

     label05:
        if z0 == 0 goto label06;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Force stop user ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Related users will not be stopped");

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", $r8);

        specialinvoke r0.<com.android.server.am.UserController: void stopSingleUserLU(int,boolean,android.app.IStopUserCallback,com.android.server.am.UserState$KeyEvictedCallback)>(i0, z1, r1, r2);

        return 0;

     label06:
        return -4;

     label07:
        i6 = lengthof r3;

        i7 = 0;

     label08:
        if i7 >= i6 goto label12;

        i1 = r3[i7];

        r10 = null;

        if i1 != i0 goto label09;

        r11 = r1;

        goto label10;

     label09:
        r11 = null;

     label10:
        if i1 != i0 goto label11;

        r10 = r2;

     label11:
        specialinvoke r0.<com.android.server.am.UserController: void stopSingleUserLU(int,boolean,android.app.IStopUserCallback,com.android.server.am.UserState$KeyEvictedCallback)>(i1, z1, r11, r10);

        i7 = i7 + 1;

        goto label08;

     label12:
        return 0;
    }

    private void timeoutUserSwitch(com.android.server.am.UserState, int, int)
    {
        com.android.server.am.UserController r0;
        int i0, i1;
        java.lang.Object r1;
        java.lang.StringBuilder r2;
        java.lang.String $r7;
        android.util.ArraySet $r8;
        android.os.Handler $r9, $r10, $r11;
        android.os.Message $r12;
        java.lang.Throwable $r13;
        com.android.server.am.UserState r14;

        r0 := @this: com.android.server.am.UserController;

        r14 := @parameter0: com.android.server.am.UserState;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 = r0.<com.android.server.am.UserController: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("User switch timeout: from ");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r7 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ActivityManager", $r7);

        $r8 = r0.<com.android.server.am.UserController: android.util.ArraySet mCurWaitingUserSwitchCallbacks>;

        r0.<com.android.server.am.UserController: android.util.ArraySet mTimeoutUserSwitchCallbacks> = $r8;

        $r9 = r0.<com.android.server.am.UserController: android.os.Handler mHandler>;

        virtualinvoke $r9.<android.os.Handler: void removeMessages(int)>(90);

        virtualinvoke r0.<com.android.server.am.UserController: void sendContinueUserSwitchLU(com.android.server.am.UserState,int,int)>(r14, i0, i1);

        $r11 = r0.<com.android.server.am.UserController: android.os.Handler mHandler>;

        $r10 = r0.<com.android.server.am.UserController: android.os.Handler mHandler>;

        $r12 = virtualinvoke $r10.<android.os.Handler: android.os.Message obtainMessage(int,int,int)>(90, i0, i1);

        virtualinvoke $r11.<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>($r12, 5000L);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r13 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r13;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private void timeoutUserSwitchCallbacks(int, int)
    {
        com.android.server.am.UserController r0;
        int i0, i1;
        java.lang.Object r1;
        android.util.ArraySet $r2, $r3, $r9;
        boolean $z0;
        java.lang.String $r11;
        java.lang.Throwable $r12;
        java.lang.StringBuilder r13;

        r0 := @this: com.android.server.am.UserController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = r0.<com.android.server.am.UserController: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.am.UserController: android.util.ArraySet mTimeoutUserSwitchCallbacks>;

        if $r2 == null goto label2;

        $r3 = r0.<com.android.server.am.UserController: android.util.ArraySet mTimeoutUserSwitchCallbacks>;

        $z0 = virtualinvoke $r3.<android.util.ArraySet: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        r13 = new java.lang.StringBuilder;

        specialinvoke r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("User switch timeout: from ");

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Observers that didn\'t respond: ");

        $r9 = r0.<com.android.server.am.UserController: android.util.ArraySet mTimeoutUserSwitchCallbacks>;

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("ActivityManager", $r11);

        r0.<com.android.server.am.UserController: android.util.ArraySet mTimeoutUserSwitchCallbacks> = null;

     label2:
        exitmonitor r1;

     label3:
        return;

     label4:
        $r12 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r12;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    private boolean unlockUserCleared(int, byte[], byte[], android.os.IProgressListener)
    {
        com.android.server.am.UserController r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i7, $i8, i11, i12, i13;
        android.os.storage.IStorageManager r1;
        boolean $z0, $z1, z3;
        android.util.SparseArray $r2, $r12, $r30;
        com.android.server.am.UserController$Injector $r3, $r14;
        com.android.server.pm.UserManagerService $r4;
        java.lang.StringBuilder $r5, $r17;
        java.lang.String $r11, $r19, $r21;
        com.android.internal.util.ProgressReporter $r13;
        java.lang.Throwable $r15, $r22;
        java.lang.Exception $r16;
        byte[] r23, r24;
        android.os.IProgressListener r25;
        android.content.pm.UserInfo r26, r35;
        java.lang.Object r29, $r31, r33;
        com.android.server.am.UserState r32;
        int[] r34;

        r0 := @this: com.android.server.am.UserController;

        i0 := @parameter0: int;

        r23 := @parameter1: byte[];

        r24 := @parameter2: byte[];

        r25 := @parameter3: android.os.IProgressListener;

        $z0 = staticinvoke <android.os.storage.StorageManager: boolean isUserKeyUnlocked(int)>(i0);

        if $z0 != 0 goto label04;

        r26 = specialinvoke r0.<com.android.server.am.UserController: android.content.pm.UserInfo getUserInfo(int)>(i0);

        $r14 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        r1 = virtualinvoke $r14.<com.android.server.am.UserController$Injector: android.os.storage.IStorageManager getStorageManager()>();

     label01:
        $i8 = r26.<android.content.pm.UserInfo: int serialNumber>;

        interfaceinvoke r1.<android.os.storage.IStorageManager: void unlockUserKey(int,int,byte[],byte[])>(i0, $i8, r23, r24);

     label02:
        goto label04;

     label03:
        $r16 := @caughtexception;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to unlock: ");

        $r19 = virtualinvoke $r16.<java.lang.Exception: java.lang.String getMessage()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r21);

     label04:
        r29 = r0.<com.android.server.am.UserController: java.lang.Object mLock>;

        entermonitor r29;

     label05:
        $r30 = r0.<com.android.server.am.UserController: android.util.SparseArray mStartedUsers>;

        $r31 = virtualinvoke $r30.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r32 = (com.android.server.am.UserState) $r31;

     label06:
        if r32 == null goto label11;

     label07:
        $r13 = r32.<com.android.server.am.UserState: com.android.internal.util.ProgressReporter mUnlockProgress>;

        virtualinvoke $r13.<com.android.internal.util.ProgressReporter: void addListener(android.os.IProgressListener)>(r25);

     label08:
        if r23 == null goto label09;

        z3 = 1;

        goto label10;

     label09:
        z3 = 0;

     label10:
        r32.<com.android.server.am.UserState: boolean tokenProvided> = z3;

     label11:
        exitmonitor r29;

     label12:
        if r32 != null goto label13;

        staticinvoke <com.android.server.am.UserController: void notifyFinished(int,android.os.IProgressListener)>(i0, r25);

        return 0;

     label13:
        $z1 = specialinvoke r0.<com.android.server.am.UserController: boolean finishUserUnlocking(com.android.server.am.UserState)>(r32);

        if $z1 != 0 goto label14;

        staticinvoke <com.android.server.am.UserController: void notifyFinished(int,android.os.IProgressListener)>(i0, r25);

        return 0;

     label14:
        r33 = r0.<com.android.server.am.UserController: java.lang.Object mLock>;

        entermonitor r33;

     label15:
        $r2 = r0.<com.android.server.am.UserController: android.util.SparseArray mStartedUsers>;

        $i2 = virtualinvoke $r2.<android.util.SparseArray: int size()>();

        r34 = newarray (int)[$i2];

     label16:
        i11 = 0;

     label17:
        $i3 = lengthof r34;

        if i11 >= $i3 goto label19;

        $r12 = r0.<com.android.server.am.UserController: android.util.SparseArray mStartedUsers>;

        $i7 = virtualinvoke $r12.<android.util.SparseArray: int keyAt(int)>(i11);

        r34[i11] = $i7;

     label18:
        i11 = i11 + 1;

        goto label17;

     label19:
        exitmonitor r33;

     label20:
        i1 = lengthof r34;

        i12 = 0;

     label21:
        if i12 >= i1 goto label23;

        i13 = r34[i12];

        $r3 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        $r4 = virtualinvoke $r3.<com.android.server.am.UserController$Injector: com.android.server.pm.UserManagerService getUserManager()>();

        r35 = virtualinvoke $r4.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getProfileParent(int)>(i13);

        if r35 == null goto label22;

        $i4 = r35.<android.content.pm.UserInfo: int id>;

        if $i4 != i0 goto label22;

        if i13 == i0 goto label22;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("User ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i13);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (parent ");

        $i5 = r35.<android.content.pm.UserInfo: int id>;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("): attempting unlock because parent was just unlocked");

        $r11 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("ActivityManager", $r11);

        specialinvoke r0.<com.android.server.am.UserController: boolean maybeUnlockUser(int)>(i13);

     label22:
        i12 = i12 + 1;

        goto label21;

     label23:
        return 1;

     label24:
        $r15 := @caughtexception;

     label25:
        exitmonitor r33;

     label26:
        throw $r15;

     label27:
        $r22 := @caughtexception;

     label28:
        exitmonitor r29;

     label29:
        throw $r22;

        catch android.os.RemoteException from label01 to label02 with label03;
        catch java.lang.RuntimeException from label01 to label02 with label03;
        catch java.lang.Throwable from label05 to label06 with label27;
        catch java.lang.Throwable from label07 to label08 with label27;
        catch java.lang.Throwable from label10 to label11 with label27;
        catch java.lang.Throwable from label11 to label12 with label27;
        catch java.lang.Throwable from label15 to label16 with label24;
        catch java.lang.Throwable from label17 to label18 with label24;
        catch java.lang.Throwable from label19 to label20 with label24;
        catch java.lang.Throwable from label25 to label26 with label24;
        catch java.lang.Throwable from label28 to label29 with label27;
    }

    private void updateCurrentProfileIds()
    {
        com.android.server.am.UserController r0;
        com.android.server.am.UserController$Injector $r1, $r3;
        com.android.server.pm.UserManagerService $r2, $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9;
        android.util.SparseIntArray $r5, $r7;
        java.lang.Object $r6, $r8, r14;
        android.content.pm.UserInfo $r9, r15;
        java.lang.Throwable $r10;
        java.util.List r11, r13;
        int[] r12;

        r0 := @this: com.android.server.am.UserController;

        $r1 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        $r2 = virtualinvoke $r1.<com.android.server.am.UserController$Injector: com.android.server.pm.UserManagerService getUserManager()>();

        $i0 = virtualinvoke r0.<com.android.server.am.UserController: int getCurrentUserId()>();

        r11 = virtualinvoke $r2.<com.android.server.pm.UserManagerService: java.util.List getProfiles(int,boolean)>($i0, 0);

        $i1 = interfaceinvoke r11.<java.util.List: int size()>();

        r12 = newarray (int)[$i1];

        i8 = 0;

     label01:
        $i2 = lengthof r12;

        if i8 >= $i2 goto label02;

        $r8 = interfaceinvoke r11.<java.util.List: java.lang.Object get(int)>(i8);

        $r9 = (android.content.pm.UserInfo) $r8;

        $i7 = $r9.<android.content.pm.UserInfo: int id>;

        r12[i8] = $i7;

        i8 = i8 + 1;

        goto label01;

     label02:
        $r3 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        $r4 = virtualinvoke $r3.<com.android.server.am.UserController$Injector: com.android.server.pm.UserManagerService getUserManager()>();

        r13 = virtualinvoke $r4.<com.android.server.pm.UserManagerService: java.util.List getUsers(boolean)>(0);

        r14 = r0.<com.android.server.am.UserController: java.lang.Object mLock>;

        entermonitor r14;

     label03:
        r0.<com.android.server.am.UserController: int[] mCurrentProfileIds> = r12;

        $r5 = r0.<com.android.server.am.UserController: android.util.SparseIntArray mUserProfileGroupIds>;

        virtualinvoke $r5.<android.util.SparseIntArray: void clear()>();

     label04:
        i9 = 0;

     label05:
        $i3 = interfaceinvoke r13.<java.util.List: int size()>();

        if i9 >= $i3 goto label07;

        $r6 = interfaceinvoke r13.<java.util.List: java.lang.Object get(int)>(i9);

        r15 = (android.content.pm.UserInfo) $r6;

        $i4 = r15.<android.content.pm.UserInfo: int profileGroupId>;

        if $i4 == -10000 goto label06;

        $r7 = r0.<com.android.server.am.UserController: android.util.SparseIntArray mUserProfileGroupIds>;

        $i6 = r15.<android.content.pm.UserInfo: int id>;

        $i5 = r15.<android.content.pm.UserInfo: int profileGroupId>;

        virtualinvoke $r7.<android.util.SparseIntArray: void put(int,int)>($i6, $i5);

     label06:
        i9 = i9 + 1;

        goto label05;

     label07:
        exitmonitor r14;

     label08:
        return;

     label09:
        $r10 := @caughtexception;

     label10:
        exitmonitor r14;

     label11:
        throw $r10;

        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    private void updateStartedUserArrayLU()
    {
        com.android.server.am.UserController r0;
        android.util.SparseArray $r1, $r3, $r4, $r6, $r8;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, i8, i9, i10, i11, i12;
        int[] $r2, $r7;
        java.lang.Object $r5, $r9;
        com.android.server.am.UserState r10, r11;

        r0 := @this: com.android.server.am.UserController;

        i7 = 0;

        i8 = 0;

     label1:
        $r1 = r0.<com.android.server.am.UserController: android.util.SparseArray mStartedUsers>;

        $i0 = virtualinvoke $r1.<android.util.SparseArray: int size()>();

        if i8 >= $i0 goto label3;

        $r8 = r0.<com.android.server.am.UserController: android.util.SparseArray mStartedUsers>;

        $r9 = virtualinvoke $r8.<android.util.SparseArray: java.lang.Object valueAt(int)>(i8);

        r10 = (com.android.server.am.UserState) $r9;

        i9 = i7;

        $i5 = r10.<com.android.server.am.UserState: int state>;

        if $i5 == 4 goto label2;

        i9 = i7;

        $i6 = r10.<com.android.server.am.UserState: int state>;

        if $i6 == 5 goto label2;

        i9 = i7 + 1;

     label2:
        i8 = i8 + 1;

        i7 = i9;

        goto label1;

     label3:
        $r2 = newarray (int)[i7];

        r0.<com.android.server.am.UserController: int[] mStartedUserArray> = $r2;

        i10 = 0;

        i11 = 0;

     label4:
        $r3 = r0.<com.android.server.am.UserController: android.util.SparseArray mStartedUsers>;

        $i1 = virtualinvoke $r3.<android.util.SparseArray: int size()>();

        if i11 >= $i1 goto label6;

        $r4 = r0.<com.android.server.am.UserController: android.util.SparseArray mStartedUsers>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object valueAt(int)>(i11);

        r11 = (com.android.server.am.UserState) $r5;

        i12 = i10;

        $i2 = r11.<com.android.server.am.UserState: int state>;

        if $i2 == 4 goto label5;

        i12 = i10;

        $i3 = r11.<com.android.server.am.UserState: int state>;

        if $i3 == 5 goto label5;

        $r7 = r0.<com.android.server.am.UserController: int[] mStartedUserArray>;

        $r6 = r0.<com.android.server.am.UserController: android.util.SparseArray mStartedUsers>;

        $i4 = virtualinvoke $r6.<android.util.SparseArray: int keyAt(int)>(i11);

        $r7[i10] = $i4;

        i12 = i10 + 1;

     label5:
        i11 = i11 + 1;

        i10 = i12;

        goto label4;

     label6:
        return;
    }

    private int updateUserToLockLU(int, boolean)
    {
        com.android.server.am.UserController r0;
        int i0, $i2, $i3, $i4, $i5, $i7, $i8, $i9, $i10, i12;
        boolean z0, $z1, $z2, $z3;
        android.content.pm.UserInfo $r1;
        java.util.ArrayList $r2, $r4, $r7, r22, r23;
        java.lang.Integer $r3, $r5, $r14;
        android.util.SparseArray $r6;
        java.lang.StringBuilder $r8, $r16;
        java.lang.String $r12, $r21;
        java.lang.Object $r13;

        r0 := @this: com.android.server.am.UserController;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        i12 = i0;

        $z1 = r0.<com.android.server.am.UserController: boolean mDelayUserDataLocking>;

        if $z1 == 0 goto label2;

        i12 = i0;

        if z0 == 0 goto label2;

        i12 = i0;

        $r1 = specialinvoke r0.<com.android.server.am.UserController: android.content.pm.UserInfo getUserInfo(int)>(i0);

        $z2 = virtualinvoke $r1.<android.content.pm.UserInfo: boolean isEphemeral()>();

        if $z2 != 0 goto label2;

        i12 = i0;

        $z3 = virtualinvoke r0.<com.android.server.am.UserController: boolean hasUserRestriction(java.lang.String,int)>("no_run_in_background", i0);

        if $z3 != 0 goto label2;

        $r2 = r0.<com.android.server.am.UserController: java.util.ArrayList mLastActiveUsers>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r2.<java.util.ArrayList: boolean remove(java.lang.Object)>($r3);

        $r4 = r0.<com.android.server.am.UserController: java.util.ArrayList mLastActiveUsers>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r4.<java.util.ArrayList: void add(int,java.lang.Object)>(0, $r5);

        $r6 = r0.<com.android.server.am.UserController: android.util.SparseArray mStartedUsers>;

        $i2 = virtualinvoke $r6.<android.util.SparseArray: int size()>();

        $r7 = r0.<com.android.server.am.UserController: java.util.ArrayList mLastActiveUsers>;

        $i3 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        $i5 = $i2 + $i3;

        $i4 = r0.<com.android.server.am.UserController: int mMaxRunningUsers>;

        if $i5 <= $i4 goto label1;

        r22 = r0.<com.android.server.am.UserController: java.util.ArrayList mLastActiveUsers>;

        $i7 = virtualinvoke r22.<java.util.ArrayList: int size()>();

        $i8 = $i7 - 1;

        $r13 = virtualinvoke r22.<java.util.ArrayList: java.lang.Object get(int)>($i8);

        $r14 = (java.lang.Integer) $r13;

        i12 = virtualinvoke $r14.<java.lang.Integer: int intValue()>();

        r23 = r0.<com.android.server.am.UserController: java.util.ArrayList mLastActiveUsers>;

        $i9 = virtualinvoke r23.<java.util.ArrayList: int size()>();

        $i10 = $i9 - 1;

        virtualinvoke r23.<java.util.ArrayList: java.lang.Object remove(int)>($i10);

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("finishUserStopped, stopping user:");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" lock user:");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i12);

        $r21 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", $r21);

        goto label2;

     label1:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("finishUserStopped, user:");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",skip locking");

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", $r12);

        i12 = -10000;

     label2:
        return i12;
    }

    boolean canStartMoreUsers()
    {
        com.android.server.am.UserController r0;
        java.lang.Object r1;
        java.util.List $r3;
        int $i0, $i1;
        java.lang.Throwable $r4;
        boolean z0;

        r0 := @this: com.android.server.am.UserController;

        r1 = r0.<com.android.server.am.UserController: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = virtualinvoke r0.<com.android.server.am.UserController: java.util.List getRunningUsersLU()>();

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        $i1 = r0.<com.android.server.am.UserController: int mMaxRunningUsers>;

        if $i0 >= $i1 goto label3;

     label2:
        z0 = 1;

        goto label4;

     label3:
        z0 = 0;

     label4:
        exitmonitor r1;

     label5:
        return z0;

     label6:
        $r4 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    void continueUserSwitch(com.android.server.am.UserState, int, int)
    {
        com.android.server.am.UserController r0;
        int i0, i1;
        java.lang.Object[] $r1;
        java.lang.Integer $r2, $r3;
        boolean $z0;
        android.os.Handler $r4, r9;
        android.os.Message $r5;
        com.android.server.am.UserController$Injector $r6;
        com.android.server.wm.WindowManagerService $r7;
        com.android.server.am.UserState r8;

        r0 := @this: com.android.server.am.UserController;

        r8 := @parameter0: com.android.server.am.UserState;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = newarray (java.lang.Object)[2];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r1[0] = $r2;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r1[1] = $r3;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(30080, $r1);

        $z0 = specialinvoke r0.<com.android.server.am.UserController: boolean isUserSwitchUiEnabled()>();

        if $z0 == 0 goto label1;

        $r6 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        $r7 = virtualinvoke $r6.<com.android.server.am.UserController$Injector: com.android.server.wm.WindowManagerService getWindowManager()>();

        virtualinvoke $r7.<com.android.server.wm.WindowManagerService: void stopFreezingScreen()>();

     label1:
        r8.<com.android.server.am.UserState: boolean switching> = 0;

        $r4 = r0.<com.android.server.am.UserController: android.os.Handler mHandler>;

        virtualinvoke $r4.<android.os.Handler: void removeMessages(int)>(80);

        r9 = r0.<com.android.server.am.UserController: android.os.Handler mHandler>;

        $r5 = virtualinvoke r9.<android.os.Handler: android.os.Message obtainMessage(int,int,int)>(80, i1, 0);

        virtualinvoke r9.<android.os.Handler: boolean sendMessage(android.os.Message)>($r5);

        specialinvoke r0.<com.android.server.am.UserController: void stopGuestOrEphemeralUserIfBackground(int)>(i0);

        specialinvoke r0.<com.android.server.am.UserController: void stopBackgroundUsersIfEnforced(int)>(i0);

        return;
    }

    void dispatchUserSwitch(com.android.server.am.UserState, int, int)
    {
        com.android.server.am.UserController r0;
        int i0, i1, i2, i5;
        long l3;
        java.lang.String r3;
        java.lang.Object[] $r4;
        java.lang.Integer $r5, $r6;
        android.os.RemoteCallbackList $r7, $r8, $r14, $r17;
        android.util.ArraySet $r9;
        java.util.concurrent.atomic.AtomicInteger $r10;
        java.lang.Object $r15, r28, r30, r38;
        android.os.IInterface $r18;
        java.lang.Throwable $r19, $r21, $r23, $r25, $r26, r34, r37;
        android.os.RemoteException $r20, $r22, $r24;
        com.android.server.am.UserState r27;
        java.lang.StringBuilder r29;
        com.android.server.am.UserController$7 r31;
        android.app.IUserSwitchObserver r32;

        r0 := @this: com.android.server.am.UserController;

        r27 := @parameter0: com.android.server.am.UserState;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r4 = newarray (java.lang.Object)[2];

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r4[0] = $r5;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r4[1] = $r6;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(30079, $r4);

        $r7 = r0.<com.android.server.am.UserController: android.os.RemoteCallbackList mUserSwitchObservers>;

        i2 = virtualinvoke $r7.<android.os.RemoteCallbackList: int beginBroadcast()>();

        if i2 <= 0 goto label23;

        $r9 = new android.util.ArraySet;

        specialinvoke $r9.<android.util.ArraySet: void <init>()>();

        r28 = r0.<com.android.server.am.UserController: java.lang.Object mLock>;

        entermonitor r28;

     label01:
        r27.<com.android.server.am.UserState: boolean switching> = 1;

        r0.<com.android.server.am.UserController: android.util.ArraySet mCurWaitingUserSwitchCallbacks> = $r9;

        exitmonitor r28;

     label02:
        $r10 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r10.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>(i2);

        l3 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        i5 = 0;

     label03:
        if i5 >= i2 goto label18;

     label04:
        r29 = new java.lang.StringBuilder;

        specialinvoke r29.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("#");

        virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r14 = r0.<com.android.server.am.UserController: android.os.RemoteCallbackList mUserSwitchObservers>;

        $r15 = virtualinvoke $r14.<android.os.RemoteCallbackList: java.lang.Object getBroadcastCookie(int)>(i5);

        virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15);

        r3 = virtualinvoke r29.<java.lang.StringBuilder: java.lang.String toString()>();

        r30 = r0.<com.android.server.am.UserController: java.lang.Object mLock>;

        entermonitor r30;

     label05:
        virtualinvoke $r9.<android.util.ArraySet: boolean add(java.lang.Object)>(r3);

        exitmonitor r30;

     label06:
        r31 = new com.android.server.am.UserController$7;

     label07:
        specialinvoke r31.<com.android.server.am.UserController$7: void <init>(com.android.server.am.UserController,long,java.lang.String,android.util.ArraySet,java.util.concurrent.atomic.AtomicInteger,com.android.server.am.UserState,int,int)>(r0, l3, r3, $r9, $r10, r27, i0, i1);

        $r17 = r0.<com.android.server.am.UserController: android.os.RemoteCallbackList mUserSwitchObservers>;

        $r18 = virtualinvoke $r17.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>(i5);

        r32 = (android.app.IUserSwitchObserver) $r18;

     label08:
        interfaceinvoke r32.<android.app.IUserSwitchObserver: void onUserSwitching(int,android.os.IRemoteCallback)>(i1, r31);

     label09:
        goto label17;

     label10:
        $r24 := @caughtexception;

        goto label17;

     label11:
        $r19 := @caughtexception;

        r34 = $r19;

     label12:
        exitmonitor r30;

     label13:
        throw r34;

     label14:
        $r22 := @caughtexception;

        goto label17;

     label15:
        $r25 := @caughtexception;

        r34 = $r25;

        goto label12;

     label16:
        $r20 := @caughtexception;

     label17:
        i5 = i5 + 1;

        goto label03;

     label18:
        goto label25;

     label19:
        $r26 := @caughtexception;

        r37 = $r26;

     label20:
        exitmonitor r28;

     label21:
        throw r37;

     label22:
        $r21 := @caughtexception;

        r37 = $r21;

        goto label20;

     label23:
        r38 = r0.<com.android.server.am.UserController: java.lang.Object mLock>;

        entermonitor r38;

     label24:
        virtualinvoke r0.<com.android.server.am.UserController: void sendContinueUserSwitchLU(com.android.server.am.UserState,int,int)>(r27, i0, i1);

        exitmonitor r38;

     label25:
        $r8 = r0.<com.android.server.am.UserController: android.os.RemoteCallbackList mUserSwitchObservers>;

        virtualinvoke $r8.<android.os.RemoteCallbackList: void finishBroadcast()>();

        return;

     label26:
        $r23 := @caughtexception;

     label27:
        exitmonitor r38;

     label28:
        throw $r23;

        catch java.lang.Throwable from label01 to label02 with label19;
        catch android.os.RemoteException from label04 to label05 with label16;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch android.os.RemoteException from label06 to label07 with label16;
        catch android.os.RemoteException from label07 to label08 with label10;
        catch android.os.RemoteException from label08 to label09 with label14;
        catch java.lang.Throwable from label12 to label13 with label15;
        catch android.os.RemoteException from label13 to label14 with label14;
        catch java.lang.Throwable from label20 to label21 with label22;
        catch java.lang.Throwable from label24 to label25 with label26;
        catch java.lang.Throwable from label27 to label28 with label26;
    }

    void dispatchUserSwitchComplete(int)
    {
        com.android.server.am.UserController r0;
        int i0, i1, i2;
        com.android.server.am.UserController$Injector $r2;
        com.android.server.wm.WindowManagerService $r3;
        android.os.RemoteCallbackList $r4, $r5, $r6;
        android.os.IInterface $r7;
        android.app.IUserSwitchObserver $r8;
        android.os.RemoteException $r9;

        r0 := @this: com.android.server.am.UserController;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        $r3 = virtualinvoke $r2.<com.android.server.am.UserController$Injector: com.android.server.wm.WindowManagerService getWindowManager()>();

        virtualinvoke $r3.<com.android.server.wm.WindowManagerService: void setSwitchingUser(boolean)>(0);

        $r4 = r0.<com.android.server.am.UserController: android.os.RemoteCallbackList mUserSwitchObservers>;

        i1 = virtualinvoke $r4.<android.os.RemoteCallbackList: int beginBroadcast()>();

        i2 = 0;

     label1:
        if i2 >= i1 goto label6;

     label2:
        $r6 = r0.<com.android.server.am.UserController: android.os.RemoteCallbackList mUserSwitchObservers>;

        $r7 = virtualinvoke $r6.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>(i2);

        $r8 = (android.app.IUserSwitchObserver) $r7;

        interfaceinvoke $r8.<android.app.IUserSwitchObserver: void onUserSwitchComplete(int)>(i0);

     label3:
        goto label5;

     label4:
        $r9 := @caughtexception;

     label5:
        i2 = i2 + 1;

        goto label1;

     label6:
        $r5 = r0.<com.android.server.am.UserController: android.os.RemoteCallbackList mUserSwitchObservers>;

        virtualinvoke $r5.<android.os.RemoteCallbackList: void finishBroadcast()>();

        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    void dump(java.io.PrintWriter)
    {
        com.android.server.am.UserController r0;
        java.lang.Object r1, $r32, $r35;
        android.util.SparseArray $r2, $r34;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, i13, i14, i15;
        int[] $r3, $r33;
        java.util.ArrayList $r4, $r13, $r31;
        android.util.SparseIntArray $r5, $r28, $r29, $r30;
        java.lang.String $r8, $r11, $r15, $r18, $r21, $r24, $r27;
        boolean $z0, $z1, $z2;
        android.os.UserHandle $r36;
        java.lang.Throwable $r37;
        java.io.PrintWriter r38;
        com.android.server.am.UserState r39;
        java.lang.StringBuilder r40, r41, r42, r43, r44, r45, r46;

        r0 := @this: com.android.server.am.UserController;

        r38 := @parameter0: java.io.PrintWriter;

        r1 = r0.<com.android.server.am.UserController: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        virtualinvoke r38.<java.io.PrintWriter: void println(java.lang.String)>("  mStartedUsers:");

     label02:
        i12 = 0;

     label03:
        $r2 = r0.<com.android.server.am.UserController: android.util.SparseArray mStartedUsers>;

        $i0 = virtualinvoke $r2.<android.util.SparseArray: int size()>();

        if i12 >= $i0 goto label05;

        $r34 = r0.<com.android.server.am.UserController: android.util.SparseArray mStartedUsers>;

        $r35 = virtualinvoke $r34.<android.util.SparseArray: java.lang.Object valueAt(int)>(i12);

        r39 = (com.android.server.am.UserState) $r35;

        virtualinvoke r38.<java.io.PrintWriter: void print(java.lang.String)>("    User #");

        $r36 = r39.<com.android.server.am.UserState: android.os.UserHandle mHandle>;

        $i11 = virtualinvoke $r36.<android.os.UserHandle: int getIdentifier()>();

        virtualinvoke r38.<java.io.PrintWriter: void print(int)>($i11);

        virtualinvoke r38.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        virtualinvoke r39.<com.android.server.am.UserState: void dump(java.lang.String,java.io.PrintWriter)>("", r38);

     label04:
        i12 = i12 + 1;

        goto label03;

     label05:
        virtualinvoke r38.<java.io.PrintWriter: void print(java.lang.String)>("  mStartedUserArray: [");

     label06:
        i13 = 0;

     label07:
        $r3 = r0.<com.android.server.am.UserController: int[] mStartedUserArray>;

        $i1 = lengthof $r3;

        if i13 >= $i1 goto label12;

     label08:
        if i13 <= 0 goto label10;

     label09:
        virtualinvoke r38.<java.io.PrintWriter: void print(java.lang.String)>(", ");

     label10:
        $r33 = r0.<com.android.server.am.UserController: int[] mStartedUserArray>;

        $i10 = $r33[i13];

        virtualinvoke r38.<java.io.PrintWriter: void print(int)>($i10);

     label11:
        i13 = i13 + 1;

        goto label07;

     label12:
        virtualinvoke r38.<java.io.PrintWriter: void println(java.lang.String)>("]");

        virtualinvoke r38.<java.io.PrintWriter: void print(java.lang.String)>("  mUserLru: [");

     label13:
        i14 = 0;

     label14:
        $r4 = r0.<com.android.server.am.UserController: java.util.ArrayList mUserLru>;

        $i2 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        if i14 >= $i2 goto label19;

     label15:
        if i14 <= 0 goto label17;

     label16:
        virtualinvoke r38.<java.io.PrintWriter: void print(java.lang.String)>(", ");

     label17:
        $r31 = r0.<com.android.server.am.UserController: java.util.ArrayList mUserLru>;

        $r32 = virtualinvoke $r31.<java.util.ArrayList: java.lang.Object get(int)>(i14);

        virtualinvoke r38.<java.io.PrintWriter: void print(java.lang.Object)>($r32);

     label18:
        i14 = i14 + 1;

        goto label14;

     label19:
        virtualinvoke r38.<java.io.PrintWriter: void println(java.lang.String)>("]");

        $r5 = r0.<com.android.server.am.UserController: android.util.SparseIntArray mUserProfileGroupIds>;

        $i3 = virtualinvoke $r5.<android.util.SparseIntArray: int size()>();

        if $i3 <= 0 goto label23;

        virtualinvoke r38.<java.io.PrintWriter: void println(java.lang.String)>("  mUserProfileGroupIds:");

     label20:
        i15 = 0;

     label21:
        $r28 = r0.<com.android.server.am.UserController: android.util.SparseIntArray mUserProfileGroupIds>;

        $i7 = virtualinvoke $r28.<android.util.SparseIntArray: int size()>();

        if i15 >= $i7 goto label23;

        virtualinvoke r38.<java.io.PrintWriter: void print(java.lang.String)>("    User #");

        $r29 = r0.<com.android.server.am.UserController: android.util.SparseIntArray mUserProfileGroupIds>;

        $i8 = virtualinvoke $r29.<android.util.SparseIntArray: int keyAt(int)>(i15);

        virtualinvoke r38.<java.io.PrintWriter: void print(int)>($i8);

        virtualinvoke r38.<java.io.PrintWriter: void print(java.lang.String)>(" -> profile #");

        $r30 = r0.<com.android.server.am.UserController: android.util.SparseIntArray mUserProfileGroupIds>;

        $i9 = virtualinvoke $r30.<android.util.SparseIntArray: int valueAt(int)>(i15);

        virtualinvoke r38.<java.io.PrintWriter: void println(int)>($i9);

     label22:
        i15 = i15 + 1;

        goto label21;

     label23:
        r40 = new java.lang.StringBuilder;

        specialinvoke r40.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mCurrentUserId:");

        $i4 = r0.<com.android.server.am.UserController: int mCurrentUserId>;

        virtualinvoke r40.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r8 = virtualinvoke r40.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r38.<java.io.PrintWriter: void println(java.lang.String)>($r8);

        r41 = new java.lang.StringBuilder;

        specialinvoke r41.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mTargetUserId:");

        $i5 = r0.<com.android.server.am.UserController: int mTargetUserId>;

        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r11 = virtualinvoke r41.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r38.<java.io.PrintWriter: void println(java.lang.String)>($r11);

        r42 = new java.lang.StringBuilder;

        specialinvoke r42.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mLastActiveUsers:");

        $r13 = r0.<com.android.server.am.UserController: java.util.ArrayList mLastActiveUsers>;

        virtualinvoke r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r15 = virtualinvoke r42.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r38.<java.io.PrintWriter: void println(java.lang.String)>($r15);

        r43 = new java.lang.StringBuilder;

        specialinvoke r43.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mDelayUserDataLocking:");

        $z0 = r0.<com.android.server.am.UserController: boolean mDelayUserDataLocking>;

        virtualinvoke r43.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r18 = virtualinvoke r43.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r38.<java.io.PrintWriter: void println(java.lang.String)>($r18);

        r44 = new java.lang.StringBuilder;

        specialinvoke r44.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mMaxRunningUsers:");

        $i6 = r0.<com.android.server.am.UserController: int mMaxRunningUsers>;

        virtualinvoke r44.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r21 = virtualinvoke r44.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r38.<java.io.PrintWriter: void println(java.lang.String)>($r21);

        r45 = new java.lang.StringBuilder;

        specialinvoke r45.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mUserSwitchUiEnabled:");

        $z1 = r0.<com.android.server.am.UserController: boolean mUserSwitchUiEnabled>;

        virtualinvoke r45.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r24 = virtualinvoke r45.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r38.<java.io.PrintWriter: void println(java.lang.String)>($r24);

        r46 = new java.lang.StringBuilder;

        specialinvoke r46.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mInitialized:");

        $z2 = r0.<com.android.server.am.UserController: boolean mInitialized>;

        virtualinvoke r46.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        $r27 = virtualinvoke r46.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r38.<java.io.PrintWriter: void println(java.lang.String)>($r27);

        exitmonitor r1;

     label24:
        return;

     label25:
        $r37 := @caughtexception;

     label26:
        exitmonitor r1;

     label27:
        throw $r37;

        catch java.lang.Throwable from label01 to label02 with label25;
        catch java.lang.Throwable from label03 to label04 with label25;
        catch java.lang.Throwable from label05 to label06 with label25;
        catch java.lang.Throwable from label07 to label08 with label25;
        catch java.lang.Throwable from label09 to label10 with label25;
        catch java.lang.Throwable from label10 to label11 with label25;
        catch java.lang.Throwable from label12 to label13 with label25;
        catch java.lang.Throwable from label14 to label15 with label25;
        catch java.lang.Throwable from label16 to label17 with label25;
        catch java.lang.Throwable from label17 to label18 with label25;
        catch java.lang.Throwable from label19 to label20 with label25;
        catch java.lang.Throwable from label21 to label22 with label25;
        catch java.lang.Throwable from label23 to label24 with label25;
        catch java.lang.Throwable from label26 to label27 with label25;
    }

    void dumpDebug(android.util.proto.ProtoOutputStream, long)
    {
        com.android.server.am.UserController r0;
        java.lang.Object r1, $r11, $r15;
        com.android.server.am.UserState r2;
        android.util.SparseArray $r3, $r14;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i12, i14, i15, i16;
        int[] $r4, $r13;
        java.util.ArrayList $r5, $r10;
        android.util.SparseIntArray $r6, $r7, $r8, $r9;
        java.lang.Integer $r12;
        android.os.UserHandle $r16;
        java.lang.Throwable $r17;
        android.util.proto.ProtoOutputStream r18;
        long l10, l11, l13, l17;

        r0 := @this: com.android.server.am.UserController;

        r18 := @parameter0: android.util.proto.ProtoOutputStream;

        l10 := @parameter1: long;

        r1 = r0.<com.android.server.am.UserController: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        l11 = virtualinvoke r18.<android.util.proto.ProtoOutputStream: long start(long)>(l10);

     label02:
        i12 = 0;

     label03:
        $r3 = r0.<com.android.server.am.UserController: android.util.SparseArray mStartedUsers>;

        $i0 = virtualinvoke $r3.<android.util.SparseArray: int size()>();

        if i12 >= $i0 goto label05;

        $r14 = r0.<com.android.server.am.UserController: android.util.SparseArray mStartedUsers>;

        $r15 = virtualinvoke $r14.<android.util.SparseArray: java.lang.Object valueAt(int)>(i12);

        r2 = (com.android.server.am.UserState) $r15;

        l13 = virtualinvoke r18.<android.util.proto.ProtoOutputStream: long start(long)>(2246267895809L);

        $r16 = r2.<com.android.server.am.UserState: android.os.UserHandle mHandle>;

        $i9 = virtualinvoke $r16.<android.os.UserHandle: int getIdentifier()>();

        virtualinvoke r18.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464257L, $i9);

        virtualinvoke r2.<com.android.server.am.UserState: void dumpDebug(android.util.proto.ProtoOutputStream,long)>(r18, 1146756268034L);

        virtualinvoke r18.<android.util.proto.ProtoOutputStream: void end(long)>(l13);

     label04:
        i12 = i12 + 1;

        goto label03;

     label05:
        i14 = 0;

     label06:
        $r4 = r0.<com.android.server.am.UserController: int[] mStartedUserArray>;

        $i1 = lengthof $r4;

        if i14 >= $i1 goto label08;

        $r13 = r0.<com.android.server.am.UserController: int[] mStartedUserArray>;

        $i8 = $r13[i14];

        virtualinvoke r18.<android.util.proto.ProtoOutputStream: void write(long,int)>(2220498092034L, $i8);

     label07:
        i14 = i14 + 1;

        goto label06;

     label08:
        i15 = 0;

     label09:
        $r5 = r0.<com.android.server.am.UserController: java.util.ArrayList mUserLru>;

        $i2 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        if i15 >= $i2 goto label11;

        $r10 = r0.<com.android.server.am.UserController: java.util.ArrayList mUserLru>;

        $r11 = virtualinvoke $r10.<java.util.ArrayList: java.lang.Object get(int)>(i15);

        $r12 = (java.lang.Integer) $r11;

        $i7 = virtualinvoke $r12.<java.lang.Integer: int intValue()>();

        virtualinvoke r18.<android.util.proto.ProtoOutputStream: void write(long,int)>(2220498092035L, $i7);

     label10:
        i15 = i15 + 1;

        goto label09;

     label11:
        $r6 = r0.<com.android.server.am.UserController: android.util.SparseIntArray mUserProfileGroupIds>;

        $i3 = virtualinvoke $r6.<android.util.SparseIntArray: int size()>();

        if $i3 <= 0 goto label15;

     label12:
        i16 = 0;

     label13:
        $r7 = r0.<com.android.server.am.UserController: android.util.SparseIntArray mUserProfileGroupIds>;

        $i4 = virtualinvoke $r7.<android.util.SparseIntArray: int size()>();

        if i16 >= $i4 goto label15;

        l17 = virtualinvoke r18.<android.util.proto.ProtoOutputStream: long start(long)>(2246267895812L);

        $r8 = r0.<com.android.server.am.UserController: android.util.SparseIntArray mUserProfileGroupIds>;

        $i5 = virtualinvoke $r8.<android.util.SparseIntArray: int keyAt(int)>(i16);

        virtualinvoke r18.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464257L, $i5);

        $r9 = r0.<com.android.server.am.UserController: android.util.SparseIntArray mUserProfileGroupIds>;

        $i6 = virtualinvoke $r9.<android.util.SparseIntArray: int valueAt(int)>(i16);

        virtualinvoke r18.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464258L, $i6);

        virtualinvoke r18.<android.util.proto.ProtoOutputStream: void end(long)>(l17);

     label14:
        i16 = i16 + 1;

        goto label13;

     label15:
        virtualinvoke r18.<android.util.proto.ProtoOutputStream: void end(long)>(l11);

        exitmonitor r1;

     label16:
        return;

     label17:
        $r17 := @caughtexception;

     label18:
        exitmonitor r1;

     label19:
        throw $r17;

        catch java.lang.Throwable from label01 to label02 with label17;
        catch java.lang.Throwable from label03 to label04 with label17;
        catch java.lang.Throwable from label06 to label07 with label17;
        catch java.lang.Throwable from label09 to label10 with label17;
        catch java.lang.Throwable from label11 to label12 with label17;
        catch java.lang.Throwable from label13 to label14 with label17;
        catch java.lang.Throwable from label15 to label16 with label17;
        catch java.lang.Throwable from label18 to label19 with label17;
    }

    void ensureNotSpecialUser(int)
    {
        com.android.server.am.UserController r0;
        int i0;
        java.lang.StringBuilder $r2;
        java.lang.IllegalArgumentException $r5;
        java.lang.String $r6;

        r0 := @this: com.android.server.am.UserController;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        return;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Call does not support special user #");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r5;
    }

    boolean exists(int)
    {
        com.android.server.am.UserController r0;
        int i0;
        com.android.server.am.UserController$Injector $r1;
        com.android.server.pm.UserManagerService $r2;
        boolean $z0;

        r0 := @this: com.android.server.am.UserController;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        $r2 = virtualinvoke $r1.<com.android.server.am.UserController$Injector: com.android.server.pm.UserManagerService getUserManager()>();

        $z0 = virtualinvoke $r2.<com.android.server.pm.UserManagerService: boolean exists(int)>(i0);

        return $z0;
    }

    int[] expandUserId(int)
    {
        com.android.server.am.UserController r0;
        int i0;
        int[] $r1, $r2;

        r0 := @this: com.android.server.am.UserController;

        i0 := @parameter0: int;

        if i0 == -1 goto label1;

        $r2 = newarray (int)[1];

        $r2[0] = i0;

        return $r2;

     label1:
        $r1 = virtualinvoke r0.<com.android.server.am.UserController: int[] getUsers()>();

        return $r1;
    }

    void finishUserStopped(com.android.server.am.UserState, boolean)
    {
        com.android.server.am.UserController r0;
        boolean z0, $z2, $z3, $z6, z7, z8, z9, $z10;
        int i0, i1, $i3, i5;
        java.util.ArrayList r1, r2, $r4, $r5, $r17;
        android.os.UserHandle $r3;
        android.util.SparseArray $r6, $r16;
        java.lang.Object $r7, $r12, r27;
        com.android.server.am.UserController$Injector $r8, $r9, $r10, $r13, $r15;
        com.android.server.pm.UserManagerService $r11;
        android.os.UserManagerInternal $r14;
        java.lang.Integer $r18;
        java.lang.String $r23;
        java.lang.Throwable $r24;
        android.os.RemoteException $r25;
        com.android.server.am.UserState r26;
        java.lang.StringBuilder r28;
        java.util.Iterator r29;
        android.app.IStopUserCallback r30;
        android.content.pm.UserInfo r32;

        r0 := @this: com.android.server.am.UserController;

        r26 := @parameter0: com.android.server.am.UserState;

        z0 := @parameter1: boolean;

        $r3 = r26.<com.android.server.am.UserState: android.os.UserHandle mHandle>;

        i0 = virtualinvoke $r3.<android.os.UserHandle: int getIdentifier()>();

        staticinvoke <android.util.EventLog: int writeEvent(int,int)>(30074, i0);

        z7 = 1;

        i5 = i0;

        r27 = r0.<com.android.server.am.UserController: java.lang.Object mLock>;

        entermonitor r27;

     label01:
        r1 = new java.util.ArrayList;

        $r4 = r26.<com.android.server.am.UserState: java.util.ArrayList mStopCallbacks>;

        specialinvoke r1.<java.util.ArrayList: void <init>(java.util.Collection)>($r4);

        r2 = new java.util.ArrayList;

        $r5 = r26.<com.android.server.am.UserState: java.util.ArrayList mKeyEvictedCallbacks>;

        specialinvoke r2.<java.util.ArrayList: void <init>(java.util.Collection)>($r5);

        $r6 = r0.<com.android.server.am.UserController: android.util.SparseArray mStartedUsers>;

        $r7 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        if $r7 != r26 goto label09;

        $i3 = r26.<com.android.server.am.UserState: int state>;

        if $i3 == 5 goto label03;

     label02:
        goto label09;

     label03:
        $r16 = r0.<com.android.server.am.UserController: android.util.SparseArray mStartedUsers>;

        virtualinvoke $r16.<android.util.SparseArray: void remove(int)>(i0);

        $r17 = r0.<com.android.server.am.UserController: java.util.ArrayList mUserLru>;

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r17.<java.util.ArrayList: boolean remove(java.lang.Object)>($r18);

        specialinvoke r0.<com.android.server.am.UserController: void updateStartedUserArrayLU()>();

     label04:
        z8 = z0;

        if z0 == 0 goto label07;

        z8 = z0;

     label05:
        $z6 = virtualinvoke r2.<java.util.ArrayList: boolean isEmpty()>();

        if $z6 != 0 goto label07;

        r28 = new java.lang.StringBuilder;

        specialinvoke r28.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Delayed locking enabled while KeyEvictedCallbacks not empty, userId:");

        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" callbacks:");

        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r23 = virtualinvoke r28.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("ActivityManager", $r23);

     label06:
        z8 = 0;

     label07:
        i1 = specialinvoke r0.<com.android.server.am.UserController: int updateUserToLockLU(int,boolean)>(i0, z8);

     label08:
        i5 = i1;

        z9 = 1;

        if i1 != -10000 goto label10;

        z7 = 0;

        i5 = i1;

        z9 = 1;

        goto label10;

     label09:
        z9 = 0;

     label10:
        exitmonitor r27;

     label11:
        if z9 == 0 goto label12;

        $r13 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        $r14 = virtualinvoke $r13.<com.android.server.am.UserController$Injector: android.os.UserManagerInternal getUserManagerInternal()>();

        virtualinvoke $r14.<android.os.UserManagerInternal: void removeUserState(int)>(i0);

        $r15 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        virtualinvoke $r15.<com.android.server.am.UserController$Injector: void activityManagerOnUserStopped(int)>(i0);

        specialinvoke r0.<com.android.server.am.UserController: void forceStopUser(int,java.lang.String)>(i0, "finish user");

     label12:
        r29 = virtualinvoke r1.<java.util.ArrayList: java.util.Iterator iterator()>();

     label13:
        $z10 = interfaceinvoke r29.<java.util.Iterator: boolean hasNext()>();

        if $z10 == 0 goto label20;

        $r12 = interfaceinvoke r29.<java.util.Iterator: java.lang.Object next()>();

        r30 = (android.app.IStopUserCallback) $r12;

        if z9 == 0 goto label16;

     label14:
        interfaceinvoke r30.<android.app.IStopUserCallback: void userStopped(int)>(i0);

     label15:
        goto label17;

     label16:
        interfaceinvoke r30.<android.app.IStopUserCallback: void userStopAborted(int)>(i0);

     label17:
        goto label19;

     label18:
        $r25 := @caughtexception;

     label19:
        goto label13;

     label20:
        if z9 == 0 goto label23;

        $r8 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        virtualinvoke $r8.<com.android.server.am.UserController$Injector: void systemServiceManagerCleanupUser(int)>(i0);

        $r9 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        virtualinvoke $r9.<com.android.server.am.UserController$Injector: void stackSupervisorRemoveUser(int)>(i0);

        r32 = specialinvoke r0.<com.android.server.am.UserController: android.content.pm.UserInfo getUserInfo(int)>(i0);

        $z2 = virtualinvoke r32.<android.content.pm.UserInfo: boolean isEphemeral()>();

        if $z2 == 0 goto label21;

        $z3 = r32.<android.content.pm.UserInfo: boolean preCreated>;

        if $z3 != 0 goto label21;

        $r10 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        $r11 = virtualinvoke $r10.<com.android.server.am.UserController$Injector: com.android.server.pm.UserManagerService getUserManager()>();

        virtualinvoke $r11.<com.android.server.pm.UserManagerService: boolean removeUserEvenWhenDisallowed(int)>(i0);

     label21:
        if z7 != 0 goto label22;

        return;

     label22:
        specialinvoke r0.<com.android.server.am.UserController: void dispatchUserLocking(int,java.util.List)>(i5, r2);

     label23:
        return;

     label24:
        $r24 := @caughtexception;

     label25:
        exitmonitor r27;

     label26:
        throw $r24;

        catch java.lang.Throwable from label01 to label02 with label24;
        catch java.lang.Throwable from label03 to label04 with label24;
        catch java.lang.Throwable from label05 to label06 with label24;
        catch java.lang.Throwable from label07 to label08 with label24;
        catch java.lang.Throwable from label10 to label11 with label24;
        catch android.os.RemoteException from label14 to label15 with label18;
        catch android.os.RemoteException from label16 to label17 with label18;
        catch java.lang.Throwable from label25 to label26 with label24;
    }

    void finishUserStopping(int, com.android.server.am.UserState, boolean)
    {
        com.android.server.am.UserController r0;
        int i0, $i2, $i3, $i4, $i5, $i6;
        boolean z0;
        java.lang.Object r3;
        android.content.Intent $r4;
        com.android.server.am.UserController$5 $r5;
        com.android.server.am.UserController$Injector $r6, $r8, $r10, $r12;
        android.os.UserManagerInternal $r7;
        java.lang.String $r9;
        com.android.server.SystemServiceManager $r11;
        java.lang.Throwable $r13;
        com.android.server.am.UserState r14;

        r0 := @this: com.android.server.am.UserController;

        i0 := @parameter0: int;

        r14 := @parameter1: com.android.server.am.UserState;

        z0 := @parameter2: boolean;

        staticinvoke <android.util.EventLog: int writeEvent(int,int)>(30073, i0);

        $r4 = new android.content.Intent;

        specialinvoke $r4.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.ACTION_SHUTDOWN");

        $r5 = new com.android.server.am.UserController$5;

        specialinvoke $r5.<com.android.server.am.UserController$5: void <init>(com.android.server.am.UserController,com.android.server.am.UserState,boolean)>(r0, r14, z0);

        r3 = r0.<com.android.server.am.UserController: java.lang.Object mLock>;

        entermonitor r3;

     label1:
        $i2 = r14.<com.android.server.am.UserState: int state>;

        if $i2 == 4 goto label3;

        exitmonitor r3;

     label2:
        return;

     label3:
        virtualinvoke r14.<com.android.server.am.UserState: void setState(int)>(5);

        exitmonitor r3;

     label4:
        $r6 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        $r7 = virtualinvoke $r6.<com.android.server.am.UserController$Injector: android.os.UserManagerInternal getUserManagerInternal()>();

        $i3 = r14.<com.android.server.am.UserState: int state>;

        virtualinvoke $r7.<android.os.UserManagerInternal: void setUserState(int,int)>(i0, $i3);

        $r8 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        $r9 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        virtualinvoke $r8.<com.android.server.am.UserController$Injector: void batteryStatsServiceNoteEvent(int,java.lang.String,int)>(16391, $r9, i0);

        $r10 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        $r11 = virtualinvoke $r10.<com.android.server.am.UserController$Injector: com.android.server.SystemServiceManager getSystemServiceManager()>();

        virtualinvoke $r11.<com.android.server.SystemServiceManager: void stopUser(int)>(i0);

        $r12 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        $i4 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        $i5 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i6 = staticinvoke <android.os.Binder: int getCallingPid()>();

        virtualinvoke $r12.<com.android.server.am.UserController$Injector: int broadcastIntent(android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String[],int,android.os.Bundle,boolean,boolean,int,int,int,int,int)>($r4, null, $r5, 0, null, null, null, -1, null, 1, 0, $i4, 1000, $i5, $i6, i0);

        return;

     label5:
        $r13 := @caughtexception;

     label6:
        exitmonitor r3;

     label7:
        throw $r13;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    void finishUserSwitch(com.android.server.am.UserState)
    {
        com.android.server.am.UserController r0;
        com.android.server.am.UserState r1;
        com.android.server.am._$$Lambda$UserController$f2F3ceAG58MOmBJm9cmZ7HhYcmE $r2;
        android.os.Handler $r3;

        r0 := @this: com.android.server.am.UserController;

        r1 := @parameter0: com.android.server.am.UserState;

        $r3 = r0.<com.android.server.am.UserController: android.os.Handler mHandler>;

        $r2 = new com.android.server.am._$$Lambda$UserController$f2F3ceAG58MOmBJm9cmZ7HhYcmE;

        specialinvoke $r2.<com.android.server.am._$$Lambda$UserController$f2F3ceAG58MOmBJm9cmZ7HhYcmE: void <init>(com.android.server.am.UserController,com.android.server.am.UserState)>(r0, r1);

        virtualinvoke $r3.<android.os.Handler: boolean post(java.lang.Runnable)>($r2);

        return;
    }

    void finishUserUnlocked(com.android.server.am.UserState)
    {
        com.android.server.am.UserController r0;
        int i0, $i2, $i3, $i4, $i5, $i6, $i8, $i9, $i10, $i11;
        android.os.UserHandle $r1, $r2, $r19;
        boolean $z0, $z1, $z2, $z3, $z4, z5, $z6, z7;
        android.util.SparseArray $r3;
        com.android.server.am.UserController$Injector $r4, $r7, $r11, $r14, $r16, $r22, $r23;
        android.os.UserManagerInternal $r5;
        com.android.internal.util.ProgressReporter $r6;
        android.content.Intent $r8, $r18;
        android.content.pm.UserInfo $r12, r32, r34;
        com.android.server.am._$$Lambda$UserController$K71HFCIuD0iCwrDTKYnIUDyAeWg $r13;
        com.android.internal.widget.LockPatternUtils $r15;
        com.android.server.pm.UserManagerService $r17;
        java.lang.Throwable $r24, $r25, $r26, r30;
        com.android.server.am.UserState r27;
        java.lang.Object r28, r29;
        java.lang.String $r35, $r36;

        r0 := @this: com.android.server.am.UserController;

        r27 := @parameter0: com.android.server.am.UserState;

        $r1 = r27.<com.android.server.am.UserState: android.os.UserHandle mHandle>;

        i0 = virtualinvoke $r1.<android.os.UserHandle: int getIdentifier()>();

        staticinvoke <android.util.EventLog: int writeEvent(int,int)>(30071, i0);

        $z0 = staticinvoke <android.os.storage.StorageManager: boolean isUserKeyUnlocked(int)>(i0);

        if $z0 != 0 goto label01;

        return;

     label01:
        r28 = r0.<com.android.server.am.UserController: java.lang.Object mLock>;

        entermonitor r28;

     label02:
        $r3 = r0.<com.android.server.am.UserController: android.util.SparseArray mStartedUsers>;

        $r2 = r27.<com.android.server.am.UserState: android.os.UserHandle mHandle>;

        $i2 = virtualinvoke $r2.<android.os.UserHandle: int getIdentifier()>();

        r29 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>($i2);

     label03:
        if r29 == r27 goto label07;

     label04:
        exitmonitor r28;

     label05:
        return;

     label06:
        $r25 := @caughtexception;

        r30 = $r25;

        goto label23;

     label07:
        z5 = virtualinvoke r27.<com.android.server.am.UserState: boolean setState(int,int)>(2, 3);

     label08:
        if z5 != 0 goto label11;

     label09:
        exitmonitor r28;

     label10:
        return;

     label11:
        exitmonitor r28;

     label12:
        $r4 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        $r5 = virtualinvoke $r4.<com.android.server.am.UserController$Injector: android.os.UserManagerInternal getUserManagerInternal()>();

        $i3 = r27.<com.android.server.am.UserState: int state>;

        virtualinvoke $r5.<android.os.UserManagerInternal: void setUserState(int,int)>(i0, $i3);

        $r6 = r27.<com.android.server.am.UserState: com.android.internal.util.ProgressReporter mUnlockProgress>;

        virtualinvoke $r6.<com.android.internal.util.ProgressReporter: void finish()>();

        if i0 != 0 goto label13;

        $r23 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        virtualinvoke $r23.<com.android.server.am.UserController$Injector: void startPersistentApps(int)>(262144);

     label13:
        $r7 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        virtualinvoke $r7.<com.android.server.am.UserController$Injector: void installEncryptionUnawareProviders(int)>(i0);

        $r8 = new android.content.Intent;

        specialinvoke $r8.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.USER_UNLOCKED");

        virtualinvoke $r8.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.intent.extra.user_handle", i0);

        virtualinvoke $r8.<android.content.Intent: android.content.Intent addFlags(int)>(1342177280);

        $r11 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        $i4 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        $i5 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i6 = staticinvoke <android.os.Binder: int getCallingPid()>();

        virtualinvoke $r11.<com.android.server.am.UserController$Injector: int broadcastIntent(android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String[],int,android.os.Bundle,boolean,boolean,int,int,int,int,int)>($r8, null, null, 0, null, null, null, -1, null, 0, 0, $i4, 1000, $i5, $i6, i0);

        $r12 = specialinvoke r0.<com.android.server.am.UserController: android.content.pm.UserInfo getUserInfo(int)>(i0);

        $z1 = virtualinvoke $r12.<android.content.pm.UserInfo: boolean isManagedProfile()>();

        if $z1 == 0 goto label14;

        $r16 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        $r17 = virtualinvoke $r16.<com.android.server.am.UserController$Injector: com.android.server.pm.UserManagerService getUserManager()>();

        r32 = virtualinvoke $r17.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getProfileParent(int)>(i0);

        if r32 == null goto label14;

        $r18 = new android.content.Intent;

        specialinvoke $r18.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.MANAGED_PROFILE_UNLOCKED");

        $r19 = staticinvoke <android.os.UserHandle: android.os.UserHandle of(int)>(i0);

        virtualinvoke $r18.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("android.intent.extra.USER", $r19);

        virtualinvoke $r18.<android.content.Intent: android.content.Intent addFlags(int)>(1342177280);

        $r22 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        $i8 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        $i9 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i10 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i11 = r32.<android.content.pm.UserInfo: int id>;

        virtualinvoke $r22.<com.android.server.am.UserController$Injector: int broadcastIntent(android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String[],int,android.os.Bundle,boolean,boolean,int,int,int,int,int)>($r18, null, null, 0, null, null, null, -1, null, 0, 0, $i8, 1000, $i9, $i10, $i11);

     label14:
        r34 = specialinvoke r0.<com.android.server.am.UserController: android.content.pm.UserInfo getUserInfo(int)>(i0);

        $r35 = r34.<android.content.pm.UserInfo: java.lang.String lastLoggedInFingerprint>;

        $r36 = <android.os.Build: java.lang.String FINGERPRINT>;

        $z6 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r35, $r36);

        if $z6 != 0 goto label20;

        $z2 = virtualinvoke r34.<android.content.pm.UserInfo: boolean isManagedProfile()>();

        if $z2 == 0 goto label18;

        $z3 = r27.<com.android.server.am.UserState: boolean tokenProvided>;

        if $z3 == 0 goto label16;

        $r15 = r0.<com.android.server.am.UserController: com.android.internal.widget.LockPatternUtils mLockPatternUtils>;

        $z4 = virtualinvoke $r15.<com.android.internal.widget.LockPatternUtils: boolean isSeparateProfileChallengeEnabled(int)>(i0);

        if $z4 != 0 goto label15;

        goto label16;

     label15:
        z7 = 0;

        goto label17;

     label16:
        z7 = 1;

     label17:
        goto label19;

     label18:
        z7 = 0;

     label19:
        $r14 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        $r13 = new com.android.server.am._$$Lambda$UserController$K71HFCIuD0iCwrDTKYnIUDyAeWg;

        specialinvoke $r13.<com.android.server.am._$$Lambda$UserController$K71HFCIuD0iCwrDTKYnIUDyAeWg: void <init>(com.android.server.am.UserController,com.android.server.am.UserState)>(r0, r27);

        virtualinvoke $r14.<com.android.server.am.UserController$Injector: void sendPreBootBroadcast(int,boolean,java.lang.Runnable)>(i0, z7, $r13);

        goto label21;

     label20:
        specialinvoke r0.<com.android.server.am.UserController: void finishUserUnlockedCompleted(com.android.server.am.UserState)>(r27);

     label21:
        return;

     label22:
        $r26 := @caughtexception;

        r30 = $r26;

     label23:
        exitmonitor r28;

     label24:
        throw r30;

     label25:
        $r24 := @caughtexception;

        r30 = $r24;

        goto label23;

        catch java.lang.Throwable from label02 to label03 with label22;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label07 to label08 with label22;
        catch java.lang.Throwable from label09 to label10 with label06;
        catch java.lang.Throwable from label11 to label12 with label22;
        catch java.lang.Throwable from label23 to label24 with label25;
    }

    int getCurrentOrTargetUserId()
    {
        com.android.server.am.UserController r0;
        java.lang.Object r1;
        int i0;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.am.UserController;

        r1 = r0.<com.android.server.am.UserController: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        i0 = virtualinvoke r0.<com.android.server.am.UserController: int getCurrentOrTargetUserIdLU()>();

        exitmonitor r1;

     label2:
        return i0;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    int getCurrentOrTargetUserIdLU()
    {
        com.android.server.am.UserController r0;
        int $i0, i1;

        r0 := @this: com.android.server.am.UserController;

        $i0 = r0.<com.android.server.am.UserController: int mTargetUserId>;

        if $i0 == -10000 goto label1;

        i1 = r0.<com.android.server.am.UserController: int mTargetUserId>;

        goto label2;

     label1:
        i1 = r0.<com.android.server.am.UserController: int mCurrentUserId>;

     label2:
        return i1;
    }

    int[] getCurrentProfileIds()
    {
        com.android.server.am.UserController r0;
        java.lang.Object r1;
        java.lang.Throwable $r2;
        int[] r3;

        r0 := @this: com.android.server.am.UserController;

        r1 = r0.<com.android.server.am.UserController: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r3 = r0.<com.android.server.am.UserController: int[] mCurrentProfileIds>;

        exitmonitor r1;

     label2:
        return r3;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    android.content.pm.UserInfo getCurrentUser()
    {
        com.android.server.am.UserController r0;
        com.android.server.am.UserController$Injector $r1, $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.content.pm.UserInfo $r2, r16;
        java.lang.StringBuilder $r4;
        java.lang.SecurityException $r11;
        java.lang.Throwable $r12;
        java.lang.String r14;
        java.lang.Object r15;

        r0 := @this: com.android.server.am.UserController;

        $r1 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        $i0 = virtualinvoke $r1.<com.android.server.am.UserController$Injector: int checkCallingPermission(java.lang.String)>("android.permission.INTERACT_ACROSS_USERS");

        if $i0 == 0 goto label2;

        $r3 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        $i3 = virtualinvoke $r3.<com.android.server.am.UserController$Injector: int checkCallingPermission(java.lang.String)>("android.permission.INTERACT_ACROSS_USERS_FULL");

        if $i3 != 0 goto label1;

        goto label2;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: getCurrentUser() from pid=");

        $i4 = staticinvoke <android.os.Binder: int getCallingPid()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i5 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.INTERACT_ACROSS_USERS");

        r14 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r14);

        $r11 = new java.lang.SecurityException;

        specialinvoke $r11.<java.lang.SecurityException: void <init>(java.lang.String)>(r14);

        throw $r11;

     label2:
        $i1 = r0.<com.android.server.am.UserController: int mTargetUserId>;

        if $i1 != -10000 goto label3;

        $i2 = r0.<com.android.server.am.UserController: int mCurrentUserId>;

        $r2 = specialinvoke r0.<com.android.server.am.UserController: android.content.pm.UserInfo getUserInfo(int)>($i2);

        return $r2;

     label3:
        r15 = r0.<com.android.server.am.UserController: java.lang.Object mLock>;

        entermonitor r15;

     label4:
        r16 = virtualinvoke r0.<com.android.server.am.UserController: android.content.pm.UserInfo getCurrentUserLU()>();

        exitmonitor r15;

     label5:
        return r16;

     label6:
        $r12 := @caughtexception;

     label7:
        exitmonitor r15;

     label8:
        throw $r12;

        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    int getCurrentUserId()
    {
        com.android.server.am.UserController r0;
        java.lang.Object r1;
        int i0;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.am.UserController;

        r1 = r0.<com.android.server.am.UserController: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        i0 = r0.<com.android.server.am.UserController: int mCurrentUserId>;

        exitmonitor r1;

     label2:
        return i0;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    int getCurrentUserIdLU()
    {
        com.android.server.am.UserController r0;
        int $i0;

        r0 := @this: com.android.server.am.UserController;

        $i0 = r0.<com.android.server.am.UserController: int mCurrentUserId>;

        return $i0;
    }

    android.content.pm.UserInfo getCurrentUserLU()
    {
        com.android.server.am.UserController r0;
        int $i0, i1;
        android.content.pm.UserInfo $r1;

        r0 := @this: com.android.server.am.UserController;

        $i0 = r0.<com.android.server.am.UserController: int mTargetUserId>;

        if $i0 == -10000 goto label1;

        i1 = r0.<com.android.server.am.UserController: int mTargetUserId>;

        goto label2;

     label1:
        i1 = r0.<com.android.server.am.UserController: int mCurrentUserId>;

     label2:
        $r1 = specialinvoke r0.<com.android.server.am.UserController: android.content.pm.UserInfo getUserInfo(int)>(i1);

        return $r1;
    }

    int getMaxRunningUsers()
    {
        com.android.server.am.UserController r0;
        java.lang.Object r1;
        int i0;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.am.UserController;

        r1 = r0.<com.android.server.am.UserController: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        i0 = r0.<com.android.server.am.UserController: int mMaxRunningUsers>;

        exitmonitor r1;

     label2:
        return i0;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    java.util.List getRunningUsersLU()
    {
        com.android.server.am.UserController r0;
        java.util.Iterator r2;
        java.lang.Integer r3;
        com.android.server.am.UserState r4;
        java.util.ArrayList $r5, $r6;
        java.lang.Object $r7, $r9;
        android.util.SparseArray $r8;
        int $i0, $i1, $i2, $i3, $i4;
        boolean $z1, $z2;

        r0 := @this: com.android.server.am.UserController;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        $r6 = r0.<com.android.server.am.UserController: java.util.ArrayList mUserLru>;

        r2 = virtualinvoke $r6.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label5;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.Integer) $r7;

        $r8 = r0.<com.android.server.am.UserController: android.util.SparseArray mStartedUsers>;

        $i0 = virtualinvoke r3.<java.lang.Integer: int intValue()>();

        $r9 = virtualinvoke $r8.<android.util.SparseArray: java.lang.Object get(int)>($i0);

        r4 = (com.android.server.am.UserState) $r9;

        if r4 != null goto label2;

        goto label1;

     label2:
        $i1 = r4.<com.android.server.am.UserState: int state>;

        if $i1 == 4 goto label1;

        $i2 = r4.<com.android.server.am.UserState: int state>;

        if $i2 != 5 goto label3;

        goto label1;

     label3:
        $i3 = virtualinvoke r3.<java.lang.Integer: int intValue()>();

        if $i3 != 0 goto label4;

        $i4 = virtualinvoke r3.<java.lang.Integer: int intValue()>();

        $z1 = staticinvoke <android.content.pm.UserInfo: boolean isSystemOnly(int)>($i4);

        if $z1 == 0 goto label4;

        goto label1;

     label4:
        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r3);

        goto label1;

     label5:
        return $r5;
    }

    int[] getStartedUserArray()
    {
        com.android.server.am.UserController r0;
        java.lang.Object r1;
        java.lang.Throwable $r2;
        int[] r3;

        r0 := @this: com.android.server.am.UserController;

        r1 = r0.<com.android.server.am.UserController: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r3 = r0.<com.android.server.am.UserController: int[] mStartedUserArray>;

        exitmonitor r1;

     label2:
        return r3;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    com.android.server.am.UserState getStartedUserState(int)
    {
        com.android.server.am.UserController r0;
        int i0;
        java.lang.Object r1, $r3;
        android.util.SparseArray $r2;
        java.lang.Throwable $r4;
        com.android.server.am.UserState r5;

        r0 := @this: com.android.server.am.UserController;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.am.UserController: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.am.UserController: android.util.SparseArray mStartedUsers>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r5 = (com.android.server.am.UserState) $r3;

        exitmonitor r1;

     label2:
        return r5;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    int[] getUserIds()
    {
        com.android.server.am.UserController r0;
        com.android.server.am.UserController$Injector $r1;
        com.android.server.pm.UserManagerService $r2;
        int[] $r3;

        r0 := @this: com.android.server.am.UserController;

        $r1 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        $r2 = virtualinvoke $r1.<com.android.server.am.UserController$Injector: com.android.server.pm.UserManagerService getUserManager()>();

        $r3 = virtualinvoke $r2.<com.android.server.pm.UserManagerService: int[] getUserIds()>();

        return $r3;
    }

    int[] getUsers()
    {
        com.android.server.am.UserController r0;
        com.android.server.am.UserController$Injector $r1;
        com.android.server.pm.UserManagerService r2;
        int[] r3;

        r0 := @this: com.android.server.am.UserController;

        $r1 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        r2 = virtualinvoke $r1.<com.android.server.am.UserController$Injector: com.android.server.pm.UserManagerService getUserManager()>();

        if r2 == null goto label1;

        r3 = virtualinvoke r2.<com.android.server.pm.UserManagerService: int[] getUserIds()>();

        goto label2;

     label1:
        r3 = newarray (int)[1];

        r3[0] = 0;

     label2:
        return r3;
    }

    int handleIncomingUser(int, int, int, boolean, int, java.lang.String, java.lang.String)
    {
        com.android.server.am.UserController r0;
        int i0, i1, i2, i3, i4, $i5, $i6, i8, i9;
        boolean z0, z1, $z2, $z3, $z4, $z5, z6;
        java.lang.String r1, $r7, $r10, $r32, r33, r35;
        java.lang.StringBuilder $r3, $r14, $r28;
        java.lang.SecurityException $r9, $r36;
        com.android.server.am.UserController$Injector $r11, $r12, $r13;
        java.lang.IllegalArgumentException $r31;

        r0 := @this: com.android.server.am.UserController;

        i8 := @parameter0: int;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        i2 := @parameter4: int;

        r33 := @parameter5: java.lang.String;

        r1 := @parameter6: java.lang.String;

        i3 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        if i3 != i1 goto label01;

        return i1;

     label01:
        i4 = virtualinvoke r0.<com.android.server.am.UserController: int unsafeConvertIncomingUser(int)>(i1);

        if i0 == 0 goto label17;

        if i0 == 1000 goto label17;

        z1 = virtualinvoke r0.<com.android.server.am.UserController: boolean isSameProfileGroup(int,int)>(i3, i4);

        $r11 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        $z3 = virtualinvoke $r11.<com.android.server.am.UserController$Injector: boolean isCallerRecents(int)>(i0);

        if $z3 == 0 goto label02;

        $z5 = virtualinvoke r0.<com.android.server.am.UserController: boolean isSameProfileGroup(int,int)>(i3, i4);

        if $z5 == 0 goto label02;

        z6 = 1;

        goto label10;

     label02:
        $r12 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        $i5 = virtualinvoke $r12.<com.android.server.am.UserController$Injector: int checkComponentPermission(java.lang.String,int,int,int,boolean)>("android.permission.INTERACT_ACROSS_USERS_FULL", i8, i0, -1, 1);

        if $i5 != 0 goto label03;

        z6 = 1;

        goto label10;

     label03:
        if i2 != 2 goto label04;

        z6 = 0;

        goto label10;

     label04:
        $z4 = specialinvoke r0.<com.android.server.am.UserController: boolean canInteractWithAcrossProfilesPermission(int,boolean,int,int,java.lang.String)>(i2, z1, i8, i0, r1);

        if $z4 == 0 goto label05;

        z6 = 1;

        goto label10;

     label05:
        $r13 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        $i6 = virtualinvoke $r13.<com.android.server.am.UserController$Injector: int checkComponentPermission(java.lang.String,int,int,int,boolean)>("android.permission.INTERACT_ACROSS_USERS", i8, i0, -1, 1);

        if $i6 == 0 goto label06;

        z6 = 0;

        goto label10;

     label06:
        if i2 != 0 goto label07;

        z6 = 1;

        goto label10;

     label07:
        if i2 == 1 goto label09;

        if i2 != 3 goto label08;

        goto label09;

     label08:
        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown mode: ");

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r31 = new java.lang.IllegalArgumentException;

        $r32 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r31.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r32);

        throw $r31;

     label09:
        z6 = z1;

     label10:
        if z6 != 0 goto label16;

        if i1 != -3 goto label11;

        i9 = i3;

        goto label18;

     label11:
        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>(int)>(128);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: ");

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r33);

        if r1 == null goto label12;

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from ");

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

     label12:
        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" asks to run as user ");

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but is calling from uid ");

        staticinvoke <android.os.UserHandle: void formatUid(java.lang.StringBuilder,int)>($r14, i0);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; this requires ");

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.INTERACT_ACROSS_USERS_FULL");

        if i2 == 2 goto label15;

        if i2 == 0 goto label13;

        if z1 == 0 goto label14;

     label13:
        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" or ");

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.INTERACT_ACROSS_USERS");

     label14:
        if z1 == 0 goto label15;

        if i2 != 3 goto label15;

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" or ");

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.INTERACT_ACROSS_PROFILES");

     label15:
        r35 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r35);

        $r36 = new java.lang.SecurityException;

        specialinvoke $r36.<java.lang.SecurityException: void <init>(java.lang.String)>(r35);

        throw $r36;

     label16:
        i9 = i4;

        goto label18;

     label17:
        i9 = i4;

     label18:
        if z0 != 0 goto label19;

        virtualinvoke r0.<com.android.server.am.UserController: void ensureNotSpecialUser(int)>(i9);

     label19:
        if i0 != 2000 goto label21;

        if i9 < 0 goto label21;

        $z2 = virtualinvoke r0.<com.android.server.am.UserController: boolean hasUserRestriction(java.lang.String,int)>("no_debugging_features", i9);

        if $z2 != 0 goto label20;

        goto label21;

     label20:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Shell does not have permission to access user ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i9);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n ");

        $r7 = staticinvoke <android.os.Debug: java.lang.String getCallers(int)>(3);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = new java.lang.SecurityException;

        $r10 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.SecurityException: void <init>(java.lang.String)>($r10);

        throw $r9;

     label21:
        return i9;
    }

    public boolean handleMessage(android.os.Message)
    {
        com.android.server.am.UserController r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37;
        java.lang.Object $r1, $r2, $r3, $r6, $r16, $r30, $r32, $r34;
        android.content.pm.UserInfo $r4, $r5, $r7, $r8, $r9, $r26;
        com.android.server.am.UserController$Injector $r10, $r12, $r18, $r20, $r22, $r24, $r27;
        com.android.server.SystemServiceManager $r11, $r13, $r23, $r28;
        android.os.Handler $r14;
        com.android.server.am._$$Lambda$UserController$avTAix2Aub5zSKSBBofMYY2qXyk $r15;
        com.android.server.am.UserState $r17, $r31, $r33, $r35;
        java.lang.String $r19, $r21, $r25;
        com.android.server.utils.TimingsTraceAndSlog $r29;
        android.os.Message r36;
        android.util.Pair r37;

        r0 := @this: com.android.server.am.UserController;

        r36 := @parameter0: android.os.Message;

        $i1 = r36.<android.os.Message: int what>;

        lookupswitch($i1)
        {
            case 10: goto label16;
            case 20: goto label15;
            case 30: goto label14;
            case 40: goto label13;
            case 50: goto label12;
            case 60: goto label11;
            case 70: goto label10;
            case 80: goto label09;
            case 90: goto label08;
            case 100: goto label07;
            case 105: goto label06;
            case 110: goto label05;
            case 120: goto label04;
            case 200: goto label03;
            case 1000: goto label02;
            default: goto label01;
        };

     label01:
        goto label17;

     label02:
        $r1 = r36.<android.os.Message: java.lang.Object obj>;

        r37 = (android.util.Pair) $r1;

        $r2 = r37.<android.util.Pair: java.lang.Object first>;

        $r5 = (android.content.pm.UserInfo) $r2;

        $r3 = r37.<android.util.Pair: java.lang.Object second>;

        $r4 = (android.content.pm.UserInfo) $r3;

        specialinvoke r0.<com.android.server.am.UserController: void logUserJourneyInfo(android.content.pm.UserInfo,android.content.pm.UserInfo,int)>($r5, $r4, 1);

        $r6 = r37.<android.util.Pair: java.lang.Object second>;

        $r7 = (android.content.pm.UserInfo) $r6;

        $i2 = $r7.<android.content.pm.UserInfo: int id>;

        specialinvoke r0.<com.android.server.am.UserController: void logUserLifecycleEvent(int,int,int)>($i2, 1, 1);

        specialinvoke r0.<com.android.server.am.UserController: void showUserSwitchDialog(android.util.Pair)>(r37);

        goto label17;

     label03:
        $i3 = r36.<android.os.Message: int arg1>;

        specialinvoke r0.<com.android.server.am.UserController: void logAndClearSessionId(int)>($i3);

        goto label17;

     label04:
        $i4 = virtualinvoke r0.<com.android.server.am.UserController: int getCurrentUserId()>();

        $r8 = specialinvoke r0.<com.android.server.am.UserController: android.content.pm.UserInfo getUserInfo(int)>($i4);

        $i5 = r36.<android.os.Message: int arg1>;

        $r9 = specialinvoke r0.<com.android.server.am.UserController: android.content.pm.UserInfo getUserInfo(int)>($i5);

        specialinvoke r0.<com.android.server.am.UserController: void logUserJourneyInfo(android.content.pm.UserInfo,android.content.pm.UserInfo,int)>($r8, $r9, 2);

        $i6 = r36.<android.os.Message: int arg1>;

        specialinvoke r0.<com.android.server.am.UserController: void logUserLifecycleEvent(int,int,int)>($i6, 1, 1);

        $i7 = r36.<android.os.Message: int arg1>;

        virtualinvoke r0.<com.android.server.am.UserController: void startUserInForeground(int)>($i7);

        goto label17;

     label05:
        $i8 = r36.<android.os.Message: int arg1>;

        specialinvoke r0.<com.android.server.am.UserController: void dispatchLockedBootComplete(int)>($i8);

        goto label17;

     label06:
        $r10 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        $r11 = virtualinvoke $r10.<com.android.server.am.UserController$Injector: com.android.server.SystemServiceManager getSystemServiceManager()>();

        $i9 = r36.<android.os.Message: int arg1>;

        virtualinvoke $r11.<com.android.server.SystemServiceManager: void onUserUnlocked(int)>($i9);

        $i10 = r36.<android.os.Message: int arg1>;

        specialinvoke r0.<com.android.server.am.UserController: void logUserLifecycleEvent(int,int,int)>($i10, 6, 2);

        $i11 = r36.<android.os.Message: int arg1>;

        specialinvoke r0.<com.android.server.am.UserController: void clearSessionId(int)>($i11);

        goto label17;

     label07:
        i0 = r36.<android.os.Message: int arg1>;

        $r12 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        $r13 = virtualinvoke $r12.<com.android.server.am.UserController$Injector: com.android.server.SystemServiceManager getSystemServiceManager()>();

        virtualinvoke $r13.<com.android.server.SystemServiceManager: void unlockUser(int)>(i0);

        $r14 = staticinvoke <com.android.server.FgThread: android.os.Handler getHandler()>();

        $r15 = new com.android.server.am._$$Lambda$UserController$avTAix2Aub5zSKSBBofMYY2qXyk;

        specialinvoke $r15.<com.android.server.am._$$Lambda$UserController$avTAix2Aub5zSKSBBofMYY2qXyk: void <init>(com.android.server.am.UserController,int)>(r0, i0);

        virtualinvoke $r14.<android.os.Handler: boolean post(java.lang.Runnable)>($r15);

        $i12 = r36.<android.os.Message: int arg1>;

        specialinvoke r0.<com.android.server.am.UserController: void logUserLifecycleEvent(int,int,int)>($i12, 5, 2);

        $i13 = r36.<android.os.Message: int arg1>;

        specialinvoke r0.<com.android.server.am.UserController: void logUserLifecycleEvent(int,int,int)>($i13, 6, 1);

        $r16 = r36.<android.os.Message: java.lang.Object obj>;

        $r17 = (com.android.server.am.UserState) $r16;

        virtualinvoke r0.<com.android.server.am.UserController: void finishUserUnlocked(com.android.server.am.UserState)>($r17);

        goto label17;

     label08:
        $i15 = r36.<android.os.Message: int arg1>;

        $i14 = r36.<android.os.Message: int arg2>;

        specialinvoke r0.<com.android.server.am.UserController: void timeoutUserSwitchCallbacks(int,int)>($i15, $i14);

        goto label17;

     label09:
        $i16 = r36.<android.os.Message: int arg1>;

        virtualinvoke r0.<com.android.server.am.UserController: void dispatchUserSwitchComplete(int)>($i16);

        $i17 = r36.<android.os.Message: int arg1>;

        specialinvoke r0.<com.android.server.am.UserController: void logUserLifecycleEvent(int,int,int)>($i17, 1, 2);

        goto label17;

     label10:
        $i18 = r36.<android.os.Message: int arg1>;

        specialinvoke r0.<com.android.server.am.UserController: void dispatchForegroundProfileChanged(int)>($i18);

        goto label17;

     label11:
        $r18 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        $i19 = r36.<android.os.Message: int arg2>;

        $r19 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i19);

        $i20 = r36.<android.os.Message: int arg2>;

        virtualinvoke $r18.<com.android.server.am.UserController$Injector: void batteryStatsServiceNoteEvent(int,java.lang.String,int)>(16392, $r19, $i20);

        $r20 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        $i21 = r36.<android.os.Message: int arg1>;

        $r21 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i21);

        $i22 = r36.<android.os.Message: int arg1>;

        virtualinvoke $r20.<com.android.server.am.UserController$Injector: void batteryStatsServiceNoteEvent(int,java.lang.String,int)>(32776, $r21, $i22);

        $r22 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        $r23 = virtualinvoke $r22.<com.android.server.am.UserController$Injector: com.android.server.SystemServiceManager getSystemServiceManager()>();

        $i24 = r36.<android.os.Message: int arg2>;

        $i23 = r36.<android.os.Message: int arg1>;

        virtualinvoke $r23.<com.android.server.SystemServiceManager: void switchUser(int,int)>($i24, $i23);

        goto label17;

     label12:
        $r24 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        $i25 = r36.<android.os.Message: int arg1>;

        $r25 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i25);

        $i26 = r36.<android.os.Message: int arg1>;

        virtualinvoke $r24.<com.android.server.am.UserController$Injector: void batteryStatsServiceNoteEvent(int,java.lang.String,int)>(32775, $r25, $i26);

        $i27 = r36.<android.os.Message: int arg1>;

        $r26 = specialinvoke r0.<com.android.server.am.UserController: android.content.pm.UserInfo getUserInfo(int)>($i27);

        specialinvoke r0.<com.android.server.am.UserController: void logUserJourneyInfo(android.content.pm.UserInfo,android.content.pm.UserInfo,int)>(null, $r26, 3);

        $i28 = r36.<android.os.Message: int arg1>;

        specialinvoke r0.<com.android.server.am.UserController: void logUserLifecycleEvent(int,int,int)>($i28, 2, 1);

        $r27 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        $r28 = virtualinvoke $r27.<com.android.server.am.UserController$Injector: com.android.server.SystemServiceManager getSystemServiceManager()>();

        $r29 = staticinvoke <com.android.server.utils.TimingsTraceAndSlog: com.android.server.utils.TimingsTraceAndSlog newAsyncLog()>();

        $i29 = r36.<android.os.Message: int arg1>;

        virtualinvoke $r28.<com.android.server.SystemServiceManager: void startUser(com.android.server.utils.TimingsTraceAndSlog,int)>($r29, $i29);

        $i30 = r36.<android.os.Message: int arg1>;

        specialinvoke r0.<com.android.server.am.UserController: void logUserLifecycleEvent(int,int,int)>($i30, 2, 2);

        $i31 = r36.<android.os.Message: int arg1>;

        specialinvoke r0.<com.android.server.am.UserController: void clearSessionId(int,int)>($i31, 3);

        goto label17;

     label13:
        virtualinvoke r0.<com.android.server.am.UserController: void startProfiles()>();

        goto label17;

     label14:
        $r30 = r36.<android.os.Message: java.lang.Object obj>;

        $r31 = (com.android.server.am.UserState) $r30;

        $i33 = r36.<android.os.Message: int arg1>;

        $i32 = r36.<android.os.Message: int arg2>;

        specialinvoke r0.<com.android.server.am.UserController: void timeoutUserSwitch(com.android.server.am.UserState,int,int)>($r31, $i33, $i32);

        goto label17;

     label15:
        $r32 = r36.<android.os.Message: java.lang.Object obj>;

        $r33 = (com.android.server.am.UserState) $r32;

        $i35 = r36.<android.os.Message: int arg1>;

        $i34 = r36.<android.os.Message: int arg2>;

        virtualinvoke r0.<com.android.server.am.UserController: void continueUserSwitch(com.android.server.am.UserState,int,int)>($r33, $i35, $i34);

        goto label17;

     label16:
        $r34 = r36.<android.os.Message: java.lang.Object obj>;

        $r35 = (com.android.server.am.UserState) $r34;

        $i37 = r36.<android.os.Message: int arg1>;

        $i36 = r36.<android.os.Message: int arg2>;

        virtualinvoke r0.<com.android.server.am.UserController: void dispatchUserSwitch(com.android.server.am.UserState,int,int)>($r35, $i37, $i36);

     label17:
        return 0;
    }

    boolean hasStartedUserState(int)
    {
        com.android.server.am.UserController r0;
        int i0;
        java.lang.Object r1, $r4;
        android.util.SparseArray $r3;
        java.lang.Throwable $r5;
        boolean z0;

        r0 := @this: com.android.server.am.UserController;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.am.UserController: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.am.UserController: android.util.SparseArray mStartedUsers>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        if $r4 == null goto label3;

     label2:
        z0 = 1;

        goto label4;

     label3:
        z0 = 0;

     label4:
        exitmonitor r1;

     label5:
        return z0;

     label6:
        $r5 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    boolean hasUserRestriction(java.lang.String, int)
    {
        com.android.server.am.UserController r0;
        java.lang.String r1;
        int i0;
        com.android.server.am.UserController$Injector $r2;
        com.android.server.pm.UserManagerService $r3;
        boolean $z0;

        r0 := @this: com.android.server.am.UserController;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        $r3 = virtualinvoke $r2.<com.android.server.am.UserController$Injector: com.android.server.pm.UserManagerService getUserManager()>();

        $z0 = virtualinvoke $r3.<com.android.server.pm.UserManagerService: boolean hasUserRestriction(java.lang.String,int)>(r1, i0);

        return $z0;
    }

    boolean isCurrentProfile(int)
    {
        com.android.server.am.UserController r0;
        int i0;
        java.lang.Object r1;
        boolean z0;
        int[] $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.am.UserController;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.am.UserController: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.am.UserController: int[] mCurrentProfileIds>;

        z0 = staticinvoke <com.android.internal.util.ArrayUtils: boolean contains(int[],int)>($r3, i0);

        exitmonitor r1;

     label2:
        return z0;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    boolean isLockScreenDisabled(int)
    {
        com.android.server.am.UserController r0;
        int i0;
        com.android.internal.widget.LockPatternUtils $r1;
        boolean $z0;

        r0 := @this: com.android.server.am.UserController;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.am.UserController: com.android.internal.widget.LockPatternUtils mLockPatternUtils>;

        $z0 = virtualinvoke $r1.<com.android.internal.widget.LockPatternUtils: boolean isLockScreenDisabled(int)>(i0);

        return $z0;
    }

    boolean isSameProfileGroup(int, int)
    {
        com.android.server.am.UserController r0;
        java.lang.Object r1;
        android.util.SparseIntArray $r3, $r4;
        java.lang.Throwable $r5;
        int i0, i1, i2, i3;
        boolean z0;

        r0 := @this: com.android.server.am.UserController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 = 1;

        if i0 != i1 goto label1;

        return 1;

     label1:
        r1 = r0.<com.android.server.am.UserController: java.lang.Object mLock>;

        entermonitor r1;

     label2:
        $r3 = r0.<com.android.server.am.UserController: android.util.SparseIntArray mUserProfileGroupIds>;

        i2 = virtualinvoke $r3.<android.util.SparseIntArray: int get(int,int)>(i0, -10000);

        $r4 = r0.<com.android.server.am.UserController: android.util.SparseIntArray mUserProfileGroupIds>;

        i3 = virtualinvoke $r4.<android.util.SparseIntArray: int get(int,int)>(i1, -10000);

     label3:
        if i2 == -10000 goto label4;

        if i2 != i3 goto label4;

        goto label5;

     label4:
        z0 = 0;

     label5:
        exitmonitor r1;

     label6:
        return z0;

     label7:
        $r5 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r5;

        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    boolean isSystemUserStarted()
    {
        com.android.server.am.UserController r0;
        java.lang.Object r1, $r2;
        int $i0, $i1, $i2;
        java.lang.Throwable $r3;
        android.util.SparseArray r4;
        boolean z0;
        com.android.server.am.UserState r5;

        r0 := @this: com.android.server.am.UserController;

        r1 = r0.<com.android.server.am.UserController: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        r4 = r0.<com.android.server.am.UserController: android.util.SparseArray mStartedUsers>;

     label02:
        z0 = 0;

     label03:
        $r2 = virtualinvoke r4.<android.util.SparseArray: java.lang.Object get(int)>(0);

        r5 = (com.android.server.am.UserState) $r2;

     label04:
        if r5 != null goto label07;

     label05:
        exitmonitor r1;

     label06:
        return 0;

     label07:
        $i0 = r5.<com.android.server.am.UserState: int state>;

        if $i0 == 1 goto label09;

        $i1 = r5.<com.android.server.am.UserState: int state>;

        if $i1 == 2 goto label09;

     label08:
        $i2 = r5.<com.android.server.am.UserState: int state>;

        if $i2 != 3 goto label10;

     label09:
        z0 = 1;

     label10:
        exitmonitor r1;

     label11:
        return z0;

     label12:
        $r3 := @caughtexception;

     label13:
        exitmonitor r1;

     label14:
        throw $r3;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label07 to label08 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    boolean isUserOrItsParentRunning(int)
    {
        com.android.server.am.UserController r0;
        java.lang.Object r1;
        boolean z0, $z1;
        android.util.SparseIntArray $r3;
        java.lang.Throwable $r4;
        int i0, i1;

        r0 := @this: com.android.server.am.UserController;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.am.UserController: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $z1 = virtualinvoke r0.<com.android.server.am.UserController: boolean isUserRunning(int,int)>(i0, 0);

        if $z1 == 0 goto label03;

        exitmonitor r1;

     label02:
        return 1;

     label03:
        $r3 = r0.<com.android.server.am.UserController: android.util.SparseIntArray mUserProfileGroupIds>;

        i1 = virtualinvoke $r3.<android.util.SparseIntArray: int get(int,int)>(i0, -10000);

     label04:
        if i1 != -10000 goto label07;

     label05:
        exitmonitor r1;

     label06:
        return 0;

     label07:
        z0 = virtualinvoke r0.<com.android.server.am.UserController: boolean isUserRunning(int,int)>(i1, 0);

        exitmonitor r1;

     label08:
        return z0;

     label09:
        $r4 := @caughtexception;

     label10:
        exitmonitor r1;

     label11:
        throw $r4;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    boolean isUserRunning(int, int)
    {
        com.android.server.am.UserController r0;
        com.android.server.am.UserState r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7, i8, i9, i10;
        boolean $z1, $z2, z3;

        r0 := @this: com.android.server.am.UserController;

        i6 := @parameter0: int;

        i7 := @parameter1: int;

        r1 = virtualinvoke r0.<com.android.server.am.UserController: com.android.server.am.UserState getStartedUserState(int)>(i6);

        if r1 != null goto label01;

        return 0;

     label01:
        $i0 = i7 & 1;

        if $i0 == 0 goto label02;

        return 1;

     label02:
        $i1 = i7 & 2;

        if $i1 == 0 goto label04;

        i8 = r1.<com.android.server.am.UserState: int state>;

        if i8 == 0 goto label03;

        if i8 == 1 goto label03;

        return 0;

     label03:
        return 1;

     label04:
        $i2 = i7 & 8;

        if $i2 == 0 goto label07;

        i9 = r1.<com.android.server.am.UserState: int state>;

        if i9 == 2 goto label06;

        if i9 == 3 goto label06;

        if i9 == 4 goto label05;

        if i9 == 5 goto label05;

        return 0;

     label05:
        $z2 = staticinvoke <android.os.storage.StorageManager: boolean isUserKeyUnlocked(int)>(i6);

        return $z2;

     label06:
        return 1;

     label07:
        $i3 = i7 & 4;

        if $i3 == 0 goto label10;

        i10 = r1.<com.android.server.am.UserState: int state>;

        if i10 == 3 goto label09;

        if i10 == 4 goto label08;

        if i10 == 5 goto label08;

        return 0;

     label08:
        $z1 = staticinvoke <android.os.storage.StorageManager: boolean isUserKeyUnlocked(int)>(i6);

        return $z1;

     label09:
        return 1;

     label10:
        z3 = 0;

        $i4 = r1.<com.android.server.am.UserState: int state>;

        if $i4 == 4 goto label11;

        z3 = 0;

        $i5 = r1.<com.android.server.am.UserState: int state>;

        if $i5 == 5 goto label11;

        z3 = 1;

     label11:
        return z3;
    }

    public void lambda$dispatchUserLocking$6$UserController(int, java.util.List)
    {
        com.android.server.am.UserController r0;
        int i0, $i1, i3;
        java.lang.Object r1, $r3, $r6;
        android.util.SparseArray $r2;
        com.android.server.am.UserController$Injector $r4;
        android.os.storage.IStorageManager $r5;
        com.android.server.am.UserState$KeyEvictedCallback $r7;
        android.os.RemoteException $r8;
        java.lang.RuntimeException $r9;
        java.lang.Throwable $r10;
        java.util.List r11;

        r0 := @this: com.android.server.am.UserController;

        i0 := @parameter0: int;

        r11 := @parameter1: java.util.List;

        r1 = r0.<com.android.server.am.UserController: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r2 = r0.<com.android.server.am.UserController: android.util.SparseArray mStartedUsers>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        if $r3 == null goto label03;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", "User was restarted, skipping key eviction");

        exitmonitor r1;

     label02:
        return;

     label03:
        exitmonitor r1;

     label04:
        $r4 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        $r5 = virtualinvoke $r4.<com.android.server.am.UserController$Injector: android.os.storage.IStorageManager getStorageManager()>();

        interfaceinvoke $r5.<android.os.storage.IStorageManager: void lockUserKey(int)>(i0);

     label05:
        if r11 != null goto label06;

        return;

     label06:
        i3 = 0;

     label07:
        $i1 = interfaceinvoke r11.<java.util.List: int size()>();

        if i3 >= $i1 goto label08;

        $r6 = interfaceinvoke r11.<java.util.List: java.lang.Object get(int)>(i3);

        $r7 = (com.android.server.am.UserState$KeyEvictedCallback) $r6;

        interfaceinvoke $r7.<com.android.server.am.UserState$KeyEvictedCallback: void keyEvicted(int)>(i0);

        i3 = i3 + 1;

        goto label07;

     label08:
        return;

     label09:
        $r8 := @caughtexception;

        $r9 = virtualinvoke $r8.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

        throw $r9;

     label10:
        $r10 := @caughtexception;

     label11:
        exitmonitor r1;

     label12:
        throw $r10;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch android.os.RemoteException from label04 to label05 with label09;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public void lambda$finishUserSwitch$0$UserController(com.android.server.am.UserState)
    {
        com.android.server.am.UserController r0;
        int $i0;
        java.lang.Throwable $r2;
        com.android.server.am.UserState r3;
        java.lang.Object r4;

        r0 := @this: com.android.server.am.UserController;

        r3 := @parameter0: com.android.server.am.UserState;

        specialinvoke r0.<com.android.server.am.UserController: void finishUserBoot(com.android.server.am.UserState)>(r3);

        virtualinvoke r0.<com.android.server.am.UserController: void startProfiles()>();

        r4 = r0.<com.android.server.am.UserController: java.lang.Object mLock>;

        entermonitor r4;

     label1:
        $i0 = r0.<com.android.server.am.UserController: int mMaxRunningUsers>;

        virtualinvoke r0.<com.android.server.am.UserController: void stopRunningUsersLU(int)>($i0);

        exitmonitor r4;

     label2:
        return;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r4;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void lambda$finishUserUnlocked$2$UserController(com.android.server.am.UserState)
    {
        com.android.server.am.UserController r0;
        com.android.server.am.UserState r1;

        r0 := @this: com.android.server.am.UserController;

        r1 := @parameter0: com.android.server.am.UserState;

        specialinvoke r0.<com.android.server.am.UserController: void finishUserUnlockedCompleted(com.android.server.am.UserState)>(r1);

        return;
    }

    public void lambda$finishUserUnlockedCompleted$3$UserController(android.content.Intent, int, int, int)
    {
        com.android.server.am.UserController r0;
        android.content.Intent r1;
        int i0, i1, i2, i3;
        com.android.server.am.UserController$Injector r2;
        com.android.server.am.UserController$2 $r4;
        java.lang.String[] $r5;

        r0 := @this: com.android.server.am.UserController;

        r1 := @parameter0: android.content.Intent;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r2 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        $r4 = new com.android.server.am.UserController$2;

        specialinvoke $r4.<com.android.server.am.UserController$2: void <init>(com.android.server.am.UserController,int)>(r0, i0);

        i3 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        $r5 = newarray (java.lang.String)[1];

        $r5[0] = "android.permission.RECEIVE_BOOT_COMPLETED";

        virtualinvoke r2.<com.android.server.am.UserController$Injector: int broadcastIntent(android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String[],int,android.os.Bundle,boolean,boolean,int,int,int,int,int)>(r1, null, $r4, 0, null, null, $r5, -1, null, 1, 0, i3, 1000, i1, i2, i0);

        return;
    }

    public void lambda$finishUserUnlocking$1$UserController(int, com.android.server.am.UserState)
    {
        com.android.server.am.UserController r0;
        int i0, $i1;
        java.lang.Object r1;
        boolean $z0, $z1;
        com.android.server.am.UserController$Injector $r2, $r4;
        com.android.server.pm.UserManagerService $r3;
        android.os.UserManagerInternal $r5;
        com.android.internal.util.ProgressReporter $r6;
        android.os.Handler $r7;
        android.os.Message $r8;
        java.lang.Throwable $r9;
        com.android.server.am.UserState r10;

        r0 := @this: com.android.server.am.UserController;

        i0 := @parameter0: int;

        r10 := @parameter1: com.android.server.am.UserState;

        $z0 = staticinvoke <android.os.storage.StorageManager: boolean isUserKeyUnlocked(int)>(i0);

        if $z0 != 0 goto label1;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", "User key got locked unexpectedly, leaving user locked.");

        return;

     label1:
        $r2 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        $r3 = virtualinvoke $r2.<com.android.server.am.UserController$Injector: com.android.server.pm.UserManagerService getUserManager()>();

        virtualinvoke $r3.<com.android.server.pm.UserManagerService: void onBeforeUnlockUser(int)>(i0);

        r1 = r0.<com.android.server.am.UserController: java.lang.Object mLock>;

        entermonitor r1;

     label2:
        $z1 = virtualinvoke r10.<com.android.server.am.UserState: boolean setState(int,int)>(1, 2);

        if $z1 != 0 goto label4;

        exitmonitor r1;

     label3:
        return;

     label4:
        exitmonitor r1;

     label5:
        $r4 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        $r5 = virtualinvoke $r4.<com.android.server.am.UserController$Injector: android.os.UserManagerInternal getUserManagerInternal()>();

        $i1 = r10.<com.android.server.am.UserState: int state>;

        virtualinvoke $r5.<android.os.UserManagerInternal: void setUserState(int,int)>(i0, $i1);

        $r6 = r10.<com.android.server.am.UserState: com.android.internal.util.ProgressReporter mUnlockProgress>;

        virtualinvoke $r6.<com.android.internal.util.ProgressReporter: void setProgress(int)>(20);

        $r7 = r0.<com.android.server.am.UserController: android.os.Handler mHandler>;

        $r8 = virtualinvoke $r7.<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(100, i0, 0, r10);

        virtualinvoke $r8.<android.os.Message: void sendToTarget()>();

        return;

     label6:
        $r9 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r9;

        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public void lambda$handleMessage$9$UserController(int)
    {
        com.android.server.am.UserController r0;
        int i0;
        com.android.server.am.UserController$Injector $r1;

        r0 := @this: com.android.server.am.UserController;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        virtualinvoke $r1.<com.android.server.am.UserController$Injector: void loadUserRecents(int)>(i0);

        return;
    }

    public void lambda$scheduleStartProfiles$7$UserController()
    {
        com.android.server.am.UserController r0;
        android.os.Handler r1, $r2;
        boolean $z0;
        android.os.Message $r3;

        r0 := @this: com.android.server.am.UserController;

        $r2 = r0.<com.android.server.am.UserController: android.os.Handler mHandler>;

        $z0 = virtualinvoke $r2.<android.os.Handler: boolean hasMessages(int)>(40);

        if $z0 != 0 goto label1;

        r1 = r0.<com.android.server.am.UserController: android.os.Handler mHandler>;

        $r3 = virtualinvoke r1.<android.os.Handler: android.os.Message obtainMessage(int)>(40);

        virtualinvoke r1.<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>($r3, 1000L);

     label1:
        return;
    }

    public void lambda$startUserInternal$8$UserController(int, boolean, android.os.IProgressListener)
    {
        com.android.server.am.UserController r0;
        int i0;
        boolean z0;
        android.os.IProgressListener r1;

        r0 := @this: com.android.server.am.UserController;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 := @parameter2: android.os.IProgressListener;

        virtualinvoke r0.<com.android.server.am.UserController: boolean startUser(int,boolean,android.os.IProgressListener)>(i0, z0, r1);

        return;
    }

    public void lambda$stopSingleUserLU$5$UserController(int, com.android.server.am.UserState, boolean)
    {
        com.android.server.am.UserController r0;
        boolean z0;
        com.android.server.am.UserController$Injector r2, $r8;
        int i0, i1, i3, i4;
        android.content.Intent $r3;
        com.android.server.am.UserController$4 $r7;
        java.lang.String[] $r9;
        com.android.server.am.UserState r10;

        r0 := @this: com.android.server.am.UserController;

        i3 := @parameter0: int;

        r10 := @parameter1: com.android.server.am.UserState;

        z0 := @parameter2: boolean;

        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.USER_STOPPING");

        virtualinvoke $r3.<android.content.Intent: android.content.Intent addFlags(int)>(1073741824);

        virtualinvoke $r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.intent.extra.user_handle", i3);

        virtualinvoke $r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("android.intent.extra.SHUTDOWN_USERSPACE_ONLY", 1);

        $r7 = new com.android.server.am.UserController$4;

        specialinvoke $r7.<com.android.server.am.UserController$4: void <init>(com.android.server.am.UserController,int,com.android.server.am.UserState,boolean)>(r0, i3, r10, z0);

        $r8 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        virtualinvoke $r8.<com.android.server.am.UserController$Injector: void clearBroadcastQueueForUser(int)>(i3);

        r2 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        i4 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r9 = newarray (java.lang.String)[1];

        $r9[0] = "android.permission.INTERACT_ACROSS_USERS";

        virtualinvoke r2.<com.android.server.am.UserController$Injector: int broadcastIntent(android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String[],int,android.os.Bundle,boolean,boolean,int,int,int,int,int)>($r3, null, $r7, 0, null, null, $r9, -1, null, 1, 0, i4, 1000, i0, i1, -1);

        return;
    }

    void onSystemReady()
    {
        com.android.server.am.UserController r0;
        com.android.server.am.UserController$Injector $r1;

        r0 := @this: com.android.server.am.UserController;

        specialinvoke r0.<com.android.server.am.UserController: void updateCurrentProfileIds()>();

        $r1 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        virtualinvoke $r1.<com.android.server.am.UserController$Injector: void reportCurWakefulnessUsageEvent()>();

        return;
    }

    void onUserRemoved(int)
    {
        com.android.server.am.UserController r0;
        int i0, $i1, $i2, $i3, i4;
        java.lang.Object r1;
        android.util.SparseIntArray $r3, $r6, $r7, $r8;
        int[] $r4, $r5;
        java.lang.Throwable $r9;

        r0 := @this: com.android.server.am.UserController;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.am.UserController: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r3 = r0.<com.android.server.am.UserController: android.util.SparseIntArray mUserProfileGroupIds>;

        $i1 = virtualinvoke $r3.<android.util.SparseIntArray: int size()>();

        i4 = $i1 - 1;

     label02:
        if i4 < 0 goto label06;

     label03:
        $r6 = r0.<com.android.server.am.UserController: android.util.SparseIntArray mUserProfileGroupIds>;

        $i2 = virtualinvoke $r6.<android.util.SparseIntArray: int keyAt(int)>(i4);

        if $i2 == i0 goto label04;

        $r8 = r0.<com.android.server.am.UserController: android.util.SparseIntArray mUserProfileGroupIds>;

        $i3 = virtualinvoke $r8.<android.util.SparseIntArray: int valueAt(int)>(i4);

        if $i3 != i0 goto label05;

     label04:
        $r7 = r0.<com.android.server.am.UserController: android.util.SparseIntArray mUserProfileGroupIds>;

        virtualinvoke $r7.<android.util.SparseIntArray: void removeAt(int)>(i4);

     label05:
        i4 = i4 + -1;

        goto label02;

     label06:
        $r4 = r0.<com.android.server.am.UserController: int[] mCurrentProfileIds>;

        $r5 = staticinvoke <com.android.internal.util.ArrayUtils: int[] removeInt(int[],int)>($r4, i0);

        r0.<com.android.server.am.UserController: int[] mCurrentProfileIds> = $r5;

        exitmonitor r1;

     label07:
        return;

     label08:
        $r9 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    void registerUserSwitchObserver(android.app.IUserSwitchObserver, java.lang.String)
    {
        com.android.server.am.UserController r0;
        android.app.IUserSwitchObserver r1;
        java.lang.String r2;
        android.os.RemoteCallbackList $r4;

        r0 := @this: com.android.server.am.UserController;

        r1 := @parameter0: android.app.IUserSwitchObserver;

        r2 := @parameter1: java.lang.String;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r2, "Observer name cannot be null");

        specialinvoke r0.<com.android.server.am.UserController: void checkCallingPermission(java.lang.String,java.lang.String)>("android.permission.INTERACT_ACROSS_USERS_FULL", "registerUserSwitchObserver");

        $r4 = r0.<com.android.server.am.UserController: android.os.RemoteCallbackList mUserSwitchObservers>;

        virtualinvoke $r4.<android.os.RemoteCallbackList: boolean register(android.os.IInterface,java.lang.Object)>(r1, r2);

        return;
    }

    int restartUser(int, boolean)
    {
        com.android.server.am.UserController r0;
        int i0, $i1;
        boolean z0;
        com.android.server.am.UserController$3 $r1;

        r0 := @this: com.android.server.am.UserController;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r1 = new com.android.server.am.UserController$3;

        specialinvoke $r1.<com.android.server.am.UserController$3: void <init>(com.android.server.am.UserController,boolean)>(r0, z0);

        $i1 = virtualinvoke r0.<com.android.server.am.UserController: int stopUser(int,boolean,boolean,android.app.IStopUserCallback,com.android.server.am.UserState$KeyEvictedCallback)>(i0, 1, 0, null, $r1);

        return $i1;
    }

    void scheduleStartProfiles()
    {
        com.android.server.am.UserController r0;
        android.os.Handler $r1;
        com.android.server.am._$$Lambda$UserController$G0WJmqt4X_QG30fRlvXobn18mrE $r2;

        r0 := @this: com.android.server.am.UserController;

        $r1 = staticinvoke <com.android.server.FgThread: android.os.Handler getHandler()>();

        $r2 = new com.android.server.am._$$Lambda$UserController$G0WJmqt4X_QG30fRlvXobn18mrE;

        specialinvoke $r2.<com.android.server.am._$$Lambda$UserController$G0WJmqt4X_QG30fRlvXobn18mrE: void <init>(com.android.server.am.UserController)>(r0);

        virtualinvoke $r1.<android.os.Handler: boolean post(java.lang.Runnable)>($r2);

        return;
    }

    void sendBootCompleted(android.content.IIntentReceiver)
    {
        com.android.server.am.UserController r0;
        android.util.SparseArray r1, $r2;
        int $i0, i2, $i3;
        java.lang.Object $r3, r7;
        android.os.UserHandle $r4;
        boolean $z0, z1;
        java.lang.Throwable $r5;
        android.content.IIntentReceiver r6;
        com.android.server.am.UserState r8;

        r0 := @this: com.android.server.am.UserController;

        r6 := @parameter0: android.content.IIntentReceiver;

        r7 = r0.<com.android.server.am.UserController: java.lang.Object mLock>;

        entermonitor r7;

     label01:
        $i0 = r0.<com.android.server.am.UserController: int mCurrentUserId>;

        if $i0 == 0 goto label03;

     label02:
        z1 = 1;

        goto label04;

     label03:
        z1 = 0;

     label04:
        $r2 = r0.<com.android.server.am.UserController: android.util.SparseArray mStartedUsers>;

        r1 = virtualinvoke $r2.<android.util.SparseArray: android.util.SparseArray clone()>();

        exitmonitor r7;

     label05:
        i2 = 0;

     label06:
        $i3 = virtualinvoke r1.<android.util.SparseArray: int size()>();

        if i2 >= $i3 goto label09;

        $r3 = virtualinvoke r1.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        r8 = (com.android.server.am.UserState) $r3;

        if z1 == 0 goto label07;

        $r4 = r8.<com.android.server.am.UserState: android.os.UserHandle mHandle>;

        $z0 = virtualinvoke $r4.<android.os.UserHandle: boolean isSystem()>();

        if $z0 == 0 goto label07;

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("ActivityManager", "sendBootCompleted(): skipping on non-current system user");

        goto label08;

     label07:
        specialinvoke r0.<com.android.server.am.UserController: void finishUserBoot(com.android.server.am.UserState,android.content.IIntentReceiver)>(r8, r6);

     label08:
        i2 = i2 + 1;

        goto label06;

     label09:
        return;

     label10:
        $r5 := @caughtexception;

     label11:
        exitmonitor r7;

     label12:
        throw $r5;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    void sendContinueUserSwitchLU(com.android.server.am.UserState, int, int)
    {
        com.android.server.am.UserController r0;
        com.android.server.am.UserState r1;
        int i0, i1;
        android.os.Handler r2, $r3;
        android.os.Message $r4;

        r0 := @this: com.android.server.am.UserController;

        r1 := @parameter0: com.android.server.am.UserState;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r0.<com.android.server.am.UserController: android.util.ArraySet mCurWaitingUserSwitchCallbacks> = null;

        $r3 = r0.<com.android.server.am.UserController: android.os.Handler mHandler>;

        virtualinvoke $r3.<android.os.Handler: void removeMessages(int)>(30);

        r2 = r0.<com.android.server.am.UserController: android.os.Handler mHandler>;

        $r4 = virtualinvoke r2.<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(20, i0, i1, r1);

        virtualinvoke r2.<android.os.Handler: boolean sendMessage(android.os.Message)>($r4);

        return;
    }

    void sendForegroundProfileChanged(int)
    {
        com.android.server.am.UserController r0;
        int i0;
        android.os.Handler $r1, $r2;
        android.os.Message $r3;

        r0 := @this: com.android.server.am.UserController;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.am.UserController: android.os.Handler mHandler>;

        virtualinvoke $r1.<android.os.Handler: void removeMessages(int)>(70);

        $r2 = r0.<com.android.server.am.UserController: android.os.Handler mHandler>;

        $r3 = virtualinvoke $r2.<android.os.Handler: android.os.Message obtainMessage(int,int,int)>(70, i0, 0);

        virtualinvoke $r3.<android.os.Message: void sendToTarget()>();

        return;
    }

    void sendUserSwitchBroadcasts(int, int)
    {
        com.android.server.am.UserController r0;
        int i0, i1, i2, $i5, $i7, i9, i10, i11, i12, i13, i14, i15, i16;
        long l3;
        com.android.server.am.UserController$Injector $r1, $r14, $r15, $r23, r36;
        com.android.server.pm.UserManagerService $r2, $r16;
        android.os.UserHandle $r5, $r12, $r21;
        java.lang.String[] $r7;
        java.lang.Object $r8, $r17;
        android.content.pm.UserInfo $r9, $r18;
        java.lang.Throwable $r24;
        java.util.List r27, r33;
        android.content.Intent r28, r34, r35;

        r0 := @this: com.android.server.am.UserController;

        i9 := @parameter0: int;

        i0 := @parameter1: int;

        i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i2 = staticinvoke <android.os.Binder: int getCallingPid()>();

        l3 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        if i9 < 0 goto label08;

     label01:
        $r15 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        $r16 = virtualinvoke $r15.<com.android.server.am.UserController$Injector: com.android.server.pm.UserManagerService getUserManager()>();

        r27 = virtualinvoke $r16.<com.android.server.pm.UserManagerService: java.util.List getProfiles(int,boolean)>(i9, 0);

        i10 = interfaceinvoke r27.<java.util.List: int size()>();

     label02:
        i11 = 0;

     label03:
        if i11 >= i10 goto label06;

     label04:
        $r17 = interfaceinvoke r27.<java.util.List: java.lang.Object get(int)>(i11);

        $r18 = (android.content.pm.UserInfo) $r17;

        i12 = $r18.<android.content.pm.UserInfo: int id>;

        r28 = new android.content.Intent;

        specialinvoke r28.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.USER_BACKGROUND");

        virtualinvoke r28.<android.content.Intent: android.content.Intent addFlags(int)>(1342177280);

        virtualinvoke r28.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.intent.extra.user_handle", i12);

        $r21 = staticinvoke <android.os.UserHandle: android.os.UserHandle of(int)>(i12);

        virtualinvoke r28.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("android.intent.extra.USER", $r21);

        $r23 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        $i7 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        virtualinvoke $r23.<com.android.server.am.UserController$Injector: int broadcastIntent(android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String[],int,android.os.Bundle,boolean,boolean,int,int,int,int,int)>(r28, null, null, 0, null, null, null, -1, null, 0, 0, $i7, 1000, i1, i2, i12);

     label05:
        i11 = i11 + 1;

        goto label03;

     label06:
        goto label08;

     label07:
        $r24 := @caughtexception;

        goto label16;

     label08:
        if i0 < 0 goto label17;

     label09:
        $r1 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        $r2 = virtualinvoke $r1.<com.android.server.am.UserController$Injector: com.android.server.pm.UserManagerService getUserManager()>();

        r33 = virtualinvoke $r2.<com.android.server.pm.UserManagerService: java.util.List getProfiles(int,boolean)>(i0, 0);

        i13 = interfaceinvoke r33.<java.util.List: int size()>();

     label10:
        i14 = 0;

     label11:
        if i14 >= i13 goto label14;

     label12:
        $r8 = interfaceinvoke r33.<java.util.List: java.lang.Object get(int)>(i14);

        $r9 = (android.content.pm.UserInfo) $r8;

        i15 = $r9.<android.content.pm.UserInfo: int id>;

        r34 = new android.content.Intent;

        specialinvoke r34.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.USER_FOREGROUND");

        virtualinvoke r34.<android.content.Intent: android.content.Intent addFlags(int)>(1342177280);

        virtualinvoke r34.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.intent.extra.user_handle", i15);

        $r12 = staticinvoke <android.os.UserHandle: android.os.UserHandle of(int)>(i15);

        virtualinvoke r34.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("android.intent.extra.USER", $r12);

        $r14 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        $i5 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        virtualinvoke $r14.<com.android.server.am.UserController$Injector: int broadcastIntent(android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String[],int,android.os.Bundle,boolean,boolean,int,int,int,int,int)>(r34, null, null, 0, null, null, null, -1, null, 0, 0, $i5, 1000, i1, i2, i15);

     label13:
        i14 = i14 + 1;

        goto label11;

     label14:
        r35 = new android.content.Intent;

        specialinvoke r35.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.USER_SWITCHED");

        virtualinvoke r35.<android.content.Intent: android.content.Intent addFlags(int)>(1342177280);

        virtualinvoke r35.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.intent.extra.user_handle", i0);

        $r5 = staticinvoke <android.os.UserHandle: android.os.UserHandle of(int)>(i0);

        virtualinvoke r35.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("android.intent.extra.USER", $r5);

        r36 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        i16 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        $r7 = newarray (java.lang.String)[1];

        $r7[0] = "android.permission.MANAGE_USERS";

        virtualinvoke r36.<com.android.server.am.UserController$Injector: int broadcastIntent(android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String[],int,android.os.Bundle,boolean,boolean,int,int,int,int,int)>(r35, null, null, 0, null, null, $r7, -1, null, 0, 0, i16, 1000, i1, i2, -1);

     label15:
        goto label17;

     label16:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

        throw $r24;

     label17:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

        return;

        catch java.lang.Throwable from label01 to label02 with label07;
        catch java.lang.Throwable from label04 to label05 with label07;
        catch java.lang.Throwable from label09 to label10 with label07;
        catch java.lang.Throwable from label12 to label13 with label07;
        catch java.lang.Throwable from label14 to label15 with label07;
    }

    void setInitialConfig(boolean, int, boolean)
    {
        com.android.server.am.UserController r0;
        boolean z0, z1;
        int i0;
        java.lang.Object r1;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.am.UserController;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        z1 := @parameter2: boolean;

        r1 = r0.<com.android.server.am.UserController: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r0.<com.android.server.am.UserController: boolean mUserSwitchUiEnabled> = z0;

        r0.<com.android.server.am.UserController: int mMaxRunningUsers> = i0;

        r0.<com.android.server.am.UserController: boolean mDelayUserDataLocking> = z1;

        r0.<com.android.server.am.UserController: boolean mInitialized> = 1;

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    void setSwitchingFromSystemUserMessage(java.lang.String)
    {
        com.android.server.am.UserController r0;
        java.lang.Object r1;
        java.lang.Throwable $r2;
        java.lang.String r3;

        r0 := @this: com.android.server.am.UserController;

        r3 := @parameter0: java.lang.String;

        r1 = r0.<com.android.server.am.UserController: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r0.<com.android.server.am.UserController: java.lang.String mSwitchingFromSystemUserMessage> = r3;

        exitmonitor r1;

     label2:
        return;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    void setSwitchingToSystemUserMessage(java.lang.String)
    {
        com.android.server.am.UserController r0;
        java.lang.Object r1;
        java.lang.Throwable $r2;
        java.lang.String r3;

        r0 := @this: com.android.server.am.UserController;

        r3 := @parameter0: java.lang.String;

        r1 = r0.<com.android.server.am.UserController: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r0.<com.android.server.am.UserController: java.lang.String mSwitchingToSystemUserMessage> = r3;

        exitmonitor r1;

     label2:
        return;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    protected boolean shouldConfirmCredentials(int)
    {
        com.android.server.am.UserController r0;
        int i0;
        android.content.pm.UserInfo $r1;
        boolean $z1, $z2, $z3, $z4, $z5, z6;
        com.android.internal.widget.LockPatternUtils $r2;
        com.android.server.am.UserController$Injector $r3;
        com.android.server.am.UserState r4;
        android.app.KeyguardManager r5;

        r0 := @this: com.android.server.am.UserController;

        i0 := @parameter0: int;

        r4 = virtualinvoke r0.<com.android.server.am.UserController: com.android.server.am.UserState getStartedUserState(int)>(i0);

        if r4 != null goto label1;

        return 0;

     label1:
        $r1 = specialinvoke r0.<com.android.server.am.UserController: android.content.pm.UserInfo getUserInfo(int)>(i0);

        $z1 = virtualinvoke $r1.<android.content.pm.UserInfo: boolean isManagedProfile()>();

        if $z1 != 0 goto label2;

        return 0;

     label2:
        $r2 = r0.<com.android.server.am.UserController: com.android.internal.widget.LockPatternUtils mLockPatternUtils>;

        $z2 = virtualinvoke $r2.<com.android.internal.widget.LockPatternUtils: boolean isSeparateProfileChallengeEnabled(int)>(i0);

        if $z2 == 0 goto label4;

        $r3 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        r5 = virtualinvoke $r3.<com.android.server.am.UserController$Injector: android.app.KeyguardManager getKeyguardManager()>();

        z6 = 0;

        $z4 = virtualinvoke r5.<android.app.KeyguardManager: boolean isDeviceLocked(int)>(i0);

        if $z4 == 0 goto label3;

        z6 = 0;

        $z5 = virtualinvoke r5.<android.app.KeyguardManager: boolean isDeviceSecure(int)>(i0);

        if $z5 == 0 goto label3;

        z6 = 1;

     label3:
        return z6;

     label4:
        $z3 = virtualinvoke r0.<com.android.server.am.UserController: boolean isUserRunning(int,int)>(i0, 2);

        return $z3;
    }

    void startProfiles()
    {
        com.android.server.am.UserController r0;
        android.content.pm.UserInfo r2, $r7;
        int i0, $i1, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10;
        com.android.server.am.UserController$Injector $r3;
        com.android.server.pm.UserManagerService $r4;
        java.util.ArrayList $r5;
        boolean $z0, $z2;
        java.lang.Object $r6, $r8;
        java.util.List r9;
        java.util.Iterator r10;

        r0 := @this: com.android.server.am.UserController;

        i9 = virtualinvoke r0.<com.android.server.am.UserController: int getCurrentUserId()>();

        $r3 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        $r4 = virtualinvoke $r3.<com.android.server.am.UserController$Injector: com.android.server.pm.UserManagerService getUserManager()>();

        r9 = virtualinvoke $r4.<com.android.server.pm.UserManagerService: java.util.List getProfiles(int,boolean)>(i9, 0);

        $r5 = new java.util.ArrayList;

        $i1 = interfaceinvoke r9.<java.util.List: int size()>();

        specialinvoke $r5.<java.util.ArrayList: void <init>(int)>($i1);

        r10 = interfaceinvoke r9.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r8 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.content.pm.UserInfo) $r8;

        $i6 = r2.<android.content.pm.UserInfo: int flags>;

        $i7 = $i6 & 16;

        if $i7 != 16 goto label2;

        $i8 = r2.<android.content.pm.UserInfo: int id>;

        if $i8 == i9 goto label2;

        $z2 = virtualinvoke r2.<android.content.pm.UserInfo: boolean isQuietModeEnabled()>();

        if $z2 != 0 goto label2;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r2);

     label2:
        goto label1;

     label3:
        i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        i10 = 0;

     label4:
        if i10 >= i0 goto label5;

        $i3 = virtualinvoke r0.<com.android.server.am.UserController: int getMaxRunningUsers()>();

        $i4 = $i3 - 1;

        if i10 >= $i4 goto label5;

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i10);

        $r7 = (android.content.pm.UserInfo) $r6;

        $i5 = $r7.<android.content.pm.UserInfo: int id>;

        virtualinvoke r0.<com.android.server.am.UserController: boolean startUser(int,boolean)>($i5, 0);

        i10 = i10 + 1;

        goto label4;

     label5:
        if i10 >= i0 goto label6;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", "More profiles than MAX_RUNNING_USERS");

     label6:
        return;
    }

    boolean startUser(int, boolean)
    {
        com.android.server.am.UserController r0;
        int i0;
        boolean z0, $z1;

        r0 := @this: com.android.server.am.UserController;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $z1 = virtualinvoke r0.<com.android.server.am.UserController: boolean startUser(int,boolean,android.os.IProgressListener)>(i0, z0, null);

        return $z1;
    }

    boolean startUser(int, boolean, android.os.IProgressListener)
    {
        com.android.server.am.UserController r0;
        int i0;
        com.android.server.utils.TimingsTraceAndSlog $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r9, r12;
        java.lang.Throwable $r10;
        boolean z0, z1;
        android.os.IProgressListener r11;

        r0 := @this: com.android.server.am.UserController;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r11 := @parameter2: android.os.IProgressListener;

        specialinvoke r0.<com.android.server.am.UserController: void checkCallingPermission(java.lang.String,java.lang.String)>("android.permission.INTERACT_ACROSS_USERS_FULL", "startUser");

        $r3 = new com.android.server.utils.TimingsTraceAndSlog;

        specialinvoke $r3.<com.android.server.utils.TimingsTraceAndSlog: void <init>()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("startUser-");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        if z0 == 0 goto label1;

        r12 = "fg";

        goto label2;

     label1:
        r12 = "bg";

     label2:
        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12);

        $r9 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<com.android.server.utils.TimingsTraceAndSlog: void traceBegin(java.lang.String)>($r9);

     label3:
        z1 = specialinvoke r0.<com.android.server.am.UserController: boolean startUserInternal(int,boolean,android.os.IProgressListener,com.android.server.utils.TimingsTraceAndSlog)>(i0, z0, r11, $r3);

     label4:
        virtualinvoke $r3.<com.android.server.utils.TimingsTraceAndSlog: void traceEnd()>();

        return z1;

     label5:
        $r10 := @caughtexception;

        virtualinvoke $r3.<com.android.server.utils.TimingsTraceAndSlog: void traceEnd()>();

        throw $r10;

        catch java.lang.Throwable from label3 to label4 with label5;
    }

    void startUserInForeground(int)
    {
        com.android.server.am.UserController r0;
        int i0;
        boolean $z0;
        com.android.server.am.UserController$Injector $r1;
        com.android.server.wm.WindowManagerService $r2;

        r0 := @this: com.android.server.am.UserController;

        i0 := @parameter0: int;

        $z0 = virtualinvoke r0.<com.android.server.am.UserController: boolean startUser(int,boolean)>(i0, 1);

        if $z0 != 0 goto label1;

        $r1 = r0.<com.android.server.am.UserController: com.android.server.am.UserController$Injector mInjector>;

        $r2 = virtualinvoke $r1.<com.android.server.am.UserController$Injector: com.android.server.wm.WindowManagerService getWindowManager()>();

        virtualinvoke $r2.<com.android.server.wm.WindowManagerService: void setSwitchingUser(boolean)>(0);

     label1:
        return;
    }

    void stopRunningUsersLU(int)
    {
        com.android.server.am.UserController r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.util.List r1;
        java.util.Iterator r2;
        java.lang.Integer r3;
        boolean $z0;
        java.lang.Object $r4;

        r0 := @this: com.android.server.am.UserController;

        i0 := @parameter0: int;

        r1 = virtualinvoke r0.<com.android.server.am.UserController: java.util.List getRunningUsersLU()>();

        r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $i6 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i6 <= i0 goto label4;

        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.Integer) $r4;

        $i1 = virtualinvoke r3.<java.lang.Integer: int intValue()>();

        if $i1 == 0 goto label1;

        $i2 = virtualinvoke r3.<java.lang.Integer: int intValue()>();

        $i3 = r0.<com.android.server.am.UserController: int mCurrentUserId>;

        if $i2 != $i3 goto label2;

        goto label1;

     label2:
        $i4 = virtualinvoke r3.<java.lang.Integer: int intValue()>();

        $i5 = specialinvoke r0.<com.android.server.am.UserController: int stopUsersLU(int,boolean,boolean,android.app.IStopUserCallback,com.android.server.am.UserState$KeyEvictedCallback)>($i4, 0, 1, null, null);

        if $i5 != 0 goto label3;

        interfaceinvoke r2.<java.util.Iterator: void remove()>();

     label3:
        goto label1;

     label4:
        return;
    }

    int stopUser(int, boolean, boolean, android.app.IStopUserCallback, com.android.server.am.UserState$KeyEvictedCallback)
    {
        com.android.server.am.UserController r0;
        boolean z0, z1;
        com.android.server.am.UserState$KeyEvictedCallback r1;
        java.lang.Object r2;
        java.lang.StringBuilder $r3;
        java.lang.IllegalArgumentException $r6;
        java.lang.String $r7;
        java.lang.Throwable $r8;
        int i0, i1;
        android.app.IStopUserCallback r9;

        r0 := @this: com.android.server.am.UserController;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        r9 := @parameter3: android.app.IStopUserCallback;

        r1 := @parameter4: com.android.server.am.UserState$KeyEvictedCallback;

        specialinvoke r0.<com.android.server.am.UserController: void checkCallingPermission(java.lang.String,java.lang.String)>("android.permission.INTERACT_ACROSS_USERS_FULL", "stopUser");

        if i0 < 0 goto label6;

        if i0 == 0 goto label6;

        specialinvoke r0.<com.android.server.am.UserController: void enforceShellRestriction(java.lang.String,int)>("no_debugging_features", i0);

        r2 = r0.<com.android.server.am.UserController: java.lang.Object mLock>;

        entermonitor r2;

     label1:
        i1 = specialinvoke r0.<com.android.server.am.UserController: int stopUsersLU(int,boolean,boolean,android.app.IStopUserCallback,com.android.server.am.UserState$KeyEvictedCallback)>(i0, z0, z1, r9, r1);

        exitmonitor r2;

     label2:
        return i1;

     label3:
        $r8 := @caughtexception;

     label4:
        exitmonitor r2;

     label5:
        throw $r8;

     label6:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t stop system user ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    boolean switchUser(int)
    {
        com.android.server.am.UserController r0;
        int i0, i1;
        boolean z0, $z1, $z2, $z3;
        android.os.Handler $r1, $r5, $r6, $r7, r41;
        android.os.Message $r2, $r8;
        android.util.Pair $r3;
        android.content.pm.UserInfo $r4, r33;
        java.lang.String $r12, $r17, $r22, $r26, $r31;
        java.lang.StringBuilder $r13, $r18, $r23, $r27, r39;
        java.lang.Throwable $r32;
        java.lang.Object r38;

        r0 := @this: com.android.server.am.UserController;

        i0 := @parameter0: int;

        specialinvoke r0.<com.android.server.am.UserController: void enforceShellRestriction(java.lang.String,int)>("no_debugging_features", i0);

        staticinvoke <android.util.EventLog: int writeEvent(int,int)>(30075, i0);

        i1 = virtualinvoke r0.<com.android.server.am.UserController: int getCurrentUserId()>();

        r33 = specialinvoke r0.<com.android.server.am.UserController: android.content.pm.UserInfo getUserInfo(int)>(i0);

        if i0 != i1 goto label01;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("user #");

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is already the current user");

        $r31 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", $r31);

        return 1;

     label01:
        if r33 != null goto label02;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No user info for user #");

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r26);

        return 0;

     label02:
        $z1 = virtualinvoke r33.<android.content.pm.UserInfo: boolean supportsSwitchTo()>();

        if $z1 != 0 goto label03;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot switch to User #");

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": not supported");

        $r22 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r22);

        return 0;

     label03:
        $z2 = virtualinvoke r33.<android.content.pm.UserInfo: boolean isManagedProfile()>();

        if $z2 == 0 goto label04;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot switch to User #");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": not a full user");

        $r17 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r17);

        return 0;

     label04:
        r38 = r0.<com.android.server.am.UserController: java.lang.Object mLock>;

        entermonitor r38;

     label05:
        $z3 = r0.<com.android.server.am.UserController: boolean mInitialized>;

        if $z3 != 0 goto label07;

        r39 = new java.lang.StringBuilder;

        specialinvoke r39.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot switch to User #");

        virtualinvoke r39.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": UserController not ready yet");

        $r12 = virtualinvoke r39.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ActivityManager", $r12);

        exitmonitor r38;

     label06:
        return 0;

     label07:
        r0.<com.android.server.am.UserController: int mTargetUserId> = i0;

        z0 = r0.<com.android.server.am.UserController: boolean mUserSwitchUiEnabled>;

        exitmonitor r38;

     label08:
        if z0 == 0 goto label09;

        $r3 = new android.util.Pair;

        $r4 = specialinvoke r0.<com.android.server.am.UserController: android.content.pm.UserInfo getUserInfo(int)>(i1);

        specialinvoke $r3.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r4, r33);

        $r5 = r0.<com.android.server.am.UserController: android.os.Handler mUiHandler>;

        virtualinvoke $r5.<android.os.Handler: void removeMessages(int)>(1000);

        $r7 = r0.<com.android.server.am.UserController: android.os.Handler mUiHandler>;

        $r6 = r0.<com.android.server.am.UserController: android.os.Handler mHandler>;

        $r8 = virtualinvoke $r6.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(1000, $r3);

        virtualinvoke $r7.<android.os.Handler: boolean sendMessage(android.os.Message)>($r8);

        goto label10;

     label09:
        $r1 = r0.<com.android.server.am.UserController: android.os.Handler mHandler>;

        virtualinvoke $r1.<android.os.Handler: void removeMessages(int)>(120);

        r41 = r0.<com.android.server.am.UserController: android.os.Handler mHandler>;

        $r2 = virtualinvoke r41.<android.os.Handler: android.os.Message obtainMessage(int,int,int)>(120, i0, 0);

        virtualinvoke r41.<android.os.Handler: boolean sendMessage(android.os.Message)>($r2);

     label10:
        return 1;

     label11:
        $r32 := @caughtexception;

     label12:
        exitmonitor r38;

     label13:
        throw $r32;

        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    boolean unlockUser(int, byte[], byte[], android.os.IProgressListener)
    {
        com.android.server.am.UserController r0;
        int i0;
        byte[] r1, r4;
        android.os.IProgressListener r2;
        long l1;
        boolean z0;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.am.UserController;

        i0 := @parameter0: int;

        r4 := @parameter1: byte[];

        r1 := @parameter2: byte[];

        r2 := @parameter3: android.os.IProgressListener;

        specialinvoke r0.<com.android.server.am.UserController: void checkCallingPermission(java.lang.String,java.lang.String)>("android.permission.INTERACT_ACROSS_USERS_FULL", "unlockUser");

        staticinvoke <android.util.EventLog: int writeEvent(int,int)>(30077, i0);

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        z0 = specialinvoke r0.<com.android.server.am.UserController: boolean unlockUserCleared(int,byte[],byte[],android.os.IProgressListener)>(i0, r4, r1, r2);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return z0;

     label3:
        $r3 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void unregisterUserSwitchObserver(android.app.IUserSwitchObserver)
    {
        com.android.server.am.UserController r0;
        android.app.IUserSwitchObserver r1;
        android.os.RemoteCallbackList $r2;

        r0 := @this: com.android.server.am.UserController;

        r1 := @parameter0: android.app.IUserSwitchObserver;

        $r2 = r0.<com.android.server.am.UserController: android.os.RemoteCallbackList mUserSwitchObservers>;

        virtualinvoke $r2.<android.os.RemoteCallbackList: boolean unregister(android.os.IInterface)>(r1);

        return;
    }

    int unsafeConvertIncomingUser(int)
    {
        com.android.server.am.UserController r0;
        int i0;

        r0 := @this: com.android.server.am.UserController;

        i0 := @parameter0: int;

        if i0 == -2 goto label2;

        if i0 != -3 goto label1;

        goto label2;

     label1:
        goto label3;

     label2:
        i0 = virtualinvoke r0.<com.android.server.am.UserController: int getCurrentUserId()>();

     label3:
        return i0;
    }

    public static void <clinit>()
    {
        <com.android.server.am.UserController: int USER_UNLOCK_MSG> = 100;

        <com.android.server.am.UserController: int USER_UNLOCKED_MSG> = 105;

        <com.android.server.am.UserController: int USER_SWITCH_WARNING_TIMEOUT_MS> = 500;

        <com.android.server.am.UserController: int USER_SWITCH_TIMEOUT_MSG> = 30;

        <com.android.server.am.UserController: int USER_SWITCH_TIMEOUT_MS> = 3000;

        <com.android.server.am.UserController: int USER_SWITCH_CALLBACKS_TIMEOUT_MSG> = 90;

        <com.android.server.am.UserController: int USER_SWITCH_CALLBACKS_TIMEOUT_MS> = 5000;

        <com.android.server.am.UserController: int USER_START_MSG> = 50;

        <com.android.server.am.UserController: int USER_LIFECYCLE_EVENT_USER_RUNNING_LOCKED> = 4;

        <com.android.server.am.UserController: int USER_LIFECYCLE_EVENT_UNLOCKING_USER> = 5;

        <com.android.server.am.UserController: int USER_LIFECYCLE_EVENT_UNLOCKED_USER> = 6;

        <com.android.server.am.UserController: int USER_LIFECYCLE_EVENT_UNKNOWN> = 0;

        <com.android.server.am.UserController: int USER_LIFECYCLE_EVENT_SWITCH_USER> = 1;

        <com.android.server.am.UserController: int USER_LIFECYCLE_EVENT_STATE_NONE> = 0;

        <com.android.server.am.UserController: int USER_LIFECYCLE_EVENT_STATE_FINISH> = 2;

        <com.android.server.am.UserController: int USER_LIFECYCLE_EVENT_STATE_BEGIN> = 1;

        <com.android.server.am.UserController: int USER_LIFECYCLE_EVENT_START_USER> = 2;

        <com.android.server.am.UserController: int USER_LIFECYCLE_EVENT_CREATE_USER> = 3;

        <com.android.server.am.UserController: int USER_JOURNEY_USER_SWITCH_UI> = 1;

        <com.android.server.am.UserController: int USER_JOURNEY_USER_SWITCH_FG> = 2;

        <com.android.server.am.UserController: int USER_JOURNEY_USER_START> = 3;

        <com.android.server.am.UserController: int USER_JOURNEY_USER_CREATE> = 4;

        <com.android.server.am.UserController: int USER_JOURNEY_UNKNOWN> = 0;

        <com.android.server.am.UserController: int USER_JOURNEY_TIMEOUT_MS> = 90000;

        <com.android.server.am.UserController: int USER_CURRENT_MSG> = 60;

        <com.android.server.am.UserController: java.lang.String TAG> = "ActivityManager";

        <com.android.server.am.UserController: int START_USER_SWITCH_UI_MSG> = 1000;

        <com.android.server.am.UserController: int START_USER_SWITCH_FG_MSG> = 120;

        <com.android.server.am.UserController: int START_PROFILES_MSG> = 40;

        <com.android.server.am.UserController: int REPORT_USER_SWITCH_MSG> = 10;

        <com.android.server.am.UserController: int REPORT_USER_SWITCH_COMPLETE_MSG> = 80;

        <com.android.server.am.UserController: int REPORT_LOCKED_BOOT_COMPLETE_MSG> = 110;

        <com.android.server.am.UserController: long INVALID_SESSION_ID> = 0L;

        <com.android.server.am.UserController: int FOREGROUND_PROFILE_CHANGED_MSG> = 70;

        <com.android.server.am.UserController: int CONTINUE_USER_SWITCH_MSG> = 20;

        <com.android.server.am.UserController: int CLEAR_USER_JOURNEY_SESSION_MSG> = 200;

        return;
    }
}
