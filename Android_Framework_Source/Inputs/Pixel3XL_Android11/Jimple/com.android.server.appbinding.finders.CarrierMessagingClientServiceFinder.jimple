public class com.android.server.appbinding.finders.CarrierMessagingClientServiceFinder extends com.android.server.appbinding.finders.AppServiceFinder
{
    private final android.app.role.OnRoleHoldersChangedListener mRoleHolderChangedListener;
    private final android.app.role.RoleManager mRoleManager;

    public void <init>(android.content.Context, java.util.function.BiConsumer, android.os.Handler)
    {
        com.android.server.appbinding.finders.CarrierMessagingClientServiceFinder r0;
        android.content.Context r1;
        java.util.function.BiConsumer r2;
        android.os.Handler r3;
        com.android.server.appbinding.finders._$$Lambda$CarrierMessagingClientServiceFinder$HEVyQ3IEZ8Eseze74Vyp3NHEREg $r4;
        java.lang.Object $r5;
        android.app.role.RoleManager $r6;

        r0 := @this: com.android.server.appbinding.finders.CarrierMessagingClientServiceFinder;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.util.function.BiConsumer;

        r3 := @parameter2: android.os.Handler;

        specialinvoke r0.<com.android.server.appbinding.finders.AppServiceFinder: void <init>(android.content.Context,java.util.function.BiConsumer,android.os.Handler)>(r1, r2, r3);

        $r4 = new com.android.server.appbinding.finders._$$Lambda$CarrierMessagingClientServiceFinder$HEVyQ3IEZ8Eseze74Vyp3NHEREg;

        specialinvoke $r4.<com.android.server.appbinding.finders._$$Lambda$CarrierMessagingClientServiceFinder$HEVyQ3IEZ8Eseze74Vyp3NHEREg: void <init>(com.android.server.appbinding.finders.CarrierMessagingClientServiceFinder)>(r0);

        r0.<com.android.server.appbinding.finders.CarrierMessagingClientServiceFinder: android.app.role.OnRoleHoldersChangedListener mRoleHolderChangedListener> = $r4;

        $r5 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/app/role/RoleManager;");

        $r6 = (android.app.role.RoleManager) $r5;

        r0.<com.android.server.appbinding.finders.CarrierMessagingClientServiceFinder: android.app.role.RoleManager mRoleManager> = $r6;

        return;
    }

    public volatile android.os.IInterface asInterface(android.os.IBinder)
    {
        com.android.server.appbinding.finders.CarrierMessagingClientServiceFinder r0;
        android.os.IBinder r1;
        android.service.carrier.ICarrierMessagingClientService $r2;

        r0 := @this: com.android.server.appbinding.finders.CarrierMessagingClientServiceFinder;

        r1 := @parameter0: android.os.IBinder;

        $r2 = virtualinvoke r0.<com.android.server.appbinding.finders.CarrierMessagingClientServiceFinder: android.service.carrier.ICarrierMessagingClientService asInterface(android.os.IBinder)>(r1);

        return $r2;
    }

    public android.service.carrier.ICarrierMessagingClientService asInterface(android.os.IBinder)
    {
        com.android.server.appbinding.finders.CarrierMessagingClientServiceFinder r0;
        android.os.IBinder r1;
        android.service.carrier.ICarrierMessagingClientService $r2;

        r0 := @this: com.android.server.appbinding.finders.CarrierMessagingClientServiceFinder;

        r1 := @parameter0: android.os.IBinder;

        $r2 = staticinvoke <android.service.carrier.ICarrierMessagingClientService$Stub: android.service.carrier.ICarrierMessagingClientService asInterface(android.os.IBinder)>(r1);

        return $r2;
    }

    public java.lang.String getAppDescription()
    {
        com.android.server.appbinding.finders.CarrierMessagingClientServiceFinder r0;

        r0 := @this: com.android.server.appbinding.finders.CarrierMessagingClientServiceFinder;

        return "[Default SMS app]";
    }

    public int getBindFlags(com.android.server.appbinding.AppBindingConstants)
    {
        com.android.server.appbinding.finders.CarrierMessagingClientServiceFinder r0;
        com.android.server.appbinding.AppBindingConstants r1;
        int $i0;

        r0 := @this: com.android.server.appbinding.finders.CarrierMessagingClientServiceFinder;

        r1 := @parameter0: com.android.server.appbinding.AppBindingConstants;

        $i0 = r1.<com.android.server.appbinding.AppBindingConstants: int SMS_APP_BIND_FLAGS>;

        return $i0;
    }

    protected java.lang.String getServiceAction()
    {
        com.android.server.appbinding.finders.CarrierMessagingClientServiceFinder r0;

        r0 := @this: com.android.server.appbinding.finders.CarrierMessagingClientServiceFinder;

        return "android.telephony.action.CARRIER_MESSAGING_CLIENT_SERVICE";
    }

    protected java.lang.Class getServiceClass()
    {
        com.android.server.appbinding.finders.CarrierMessagingClientServiceFinder r0;

        r0 := @this: com.android.server.appbinding.finders.CarrierMessagingClientServiceFinder;

        return class "Landroid/service/carrier/CarrierMessagingClientService;";
    }

    protected java.lang.String getServicePermission()
    {
        com.android.server.appbinding.finders.CarrierMessagingClientServiceFinder r0;

        r0 := @this: com.android.server.appbinding.finders.CarrierMessagingClientServiceFinder;

        return "android.permission.BIND_CARRIER_MESSAGING_CLIENT_SERVICE";
    }

    public java.lang.String getTargetPackage(int)
    {
        com.android.server.appbinding.finders.CarrierMessagingClientServiceFinder r0;
        int i0;
        android.app.role.RoleManager $r1;
        android.os.UserHandle $r2;
        java.util.List $r3;
        java.lang.Object $r4;
        java.lang.String $r5;

        r0 := @this: com.android.server.appbinding.finders.CarrierMessagingClientServiceFinder;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.appbinding.finders.CarrierMessagingClientServiceFinder: android.app.role.RoleManager mRoleManager>;

        $r2 = staticinvoke <android.os.UserHandle: android.os.UserHandle of(int)>(i0);

        $r3 = virtualinvoke $r1.<android.app.role.RoleManager: java.util.List getRoleHoldersAsUser(java.lang.String,android.os.UserHandle)>("android.app.role.SMS", $r2);

        $r4 = staticinvoke <com.android.internal.util.CollectionUtils: java.lang.Object firstOrNull(java.util.List)>($r3);

        $r5 = (java.lang.String) $r4;

        return $r5;
    }

    protected boolean isEnabled(com.android.server.appbinding.AppBindingConstants)
    {
        com.android.server.appbinding.finders.CarrierMessagingClientServiceFinder r0;
        com.android.server.appbinding.AppBindingConstants r1;
        boolean $z0, $z1, z2;
        android.content.Context $r2;
        android.content.res.Resources $r3;

        r0 := @this: com.android.server.appbinding.finders.CarrierMessagingClientServiceFinder;

        r1 := @parameter0: com.android.server.appbinding.AppBindingConstants;

        $z0 = r1.<com.android.server.appbinding.AppBindingConstants: boolean SMS_SERVICE_ENABLED>;

        if $z0 == 0 goto label1;

        $r2 = r0.<com.android.server.appbinding.finders.CarrierMessagingClientServiceFinder: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.res.Resources getResources()>();

        $z1 = virtualinvoke $r3.<android.content.res.Resources: boolean getBoolean(int)>(17891573);

        if $z1 == 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;
    }

    public void lambda$new$0$CarrierMessagingClientServiceFinder(java.lang.String, android.os.UserHandle)
    {
        com.android.server.appbinding.finders.CarrierMessagingClientServiceFinder r0;
        java.lang.String r1, $r3;
        android.os.UserHandle r2;
        boolean $z0;
        java.util.function.BiConsumer $r4;
        int $i0;
        java.lang.Integer $r5;

        r0 := @this: com.android.server.appbinding.finders.CarrierMessagingClientServiceFinder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.UserHandle;

        $r3 = "android.app.role.SMS";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r4 = r0.<com.android.server.appbinding.finders.CarrierMessagingClientServiceFinder: java.util.function.BiConsumer mListener>;

        $i0 = virtualinvoke r2.<android.os.UserHandle: int getIdentifier()>();

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke $r4.<java.util.function.BiConsumer: void accept(java.lang.Object,java.lang.Object)>(r0, $r5);

     label1:
        return;
    }

    public void startMonitoring()
    {
        com.android.server.appbinding.finders.CarrierMessagingClientServiceFinder r0;
        android.app.role.RoleManager $r1;
        java.util.concurrent.Executor $r2;
        android.os.UserHandle $r3;
        android.app.role.OnRoleHoldersChangedListener $r4;

        r0 := @this: com.android.server.appbinding.finders.CarrierMessagingClientServiceFinder;

        $r1 = r0.<com.android.server.appbinding.finders.CarrierMessagingClientServiceFinder: android.app.role.RoleManager mRoleManager>;

        $r2 = staticinvoke <com.android.internal.os.BackgroundThread: java.util.concurrent.Executor getExecutor()>();

        $r4 = r0.<com.android.server.appbinding.finders.CarrierMessagingClientServiceFinder: android.app.role.OnRoleHoldersChangedListener mRoleHolderChangedListener>;

        $r3 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r1.<android.app.role.RoleManager: void addOnRoleHoldersChangedListenerAsUser(java.util.concurrent.Executor,android.app.role.OnRoleHoldersChangedListener,android.os.UserHandle)>($r2, $r4, $r3);

        return;
    }

    protected java.lang.String validateService(android.content.pm.ServiceInfo)
    {
        com.android.server.appbinding.finders.CarrierMessagingClientServiceFinder r0;
        java.lang.String r1, r3;
        boolean $z0;
        android.content.pm.ServiceInfo r2;

        r0 := @this: com.android.server.appbinding.finders.CarrierMessagingClientServiceFinder;

        r2 := @parameter0: android.content.pm.ServiceInfo;

        r1 = r2.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        r3 = r2.<android.content.pm.ServiceInfo: java.lang.String processName>;

        if r3 == null goto label2;

        $z0 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>(r1, r3);

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        return null;

     label2:
        return "Service must not run on the main process";
    }
}
