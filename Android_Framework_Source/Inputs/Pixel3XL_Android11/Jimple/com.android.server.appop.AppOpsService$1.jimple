class com.android.server.appop.AppOpsService$1 extends java.lang.Object implements java.lang.Runnable
{
    final com.android.server.appop.AppOpsService this$0;

    void <init>(com.android.server.appop.AppOpsService)
    {
        com.android.server.appop.AppOpsService$1 r0;
        com.android.server.appop.AppOpsService r1;

        r0 := @this: com.android.server.appop.AppOpsService$1;

        r1 := @parameter0: com.android.server.appop.AppOpsService;

        r0.<com.android.server.appop.AppOpsService$1: com.android.server.appop.AppOpsService this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        com.android.server.appop.AppOpsService$1 r0;
        com.android.server.appop.AppOpsService r1, $r2, $r3;
        java.lang.Void[] $r4;
        java.util.concurrent.Executor $r5;
        java.lang.Throwable $r7;
        com.android.server.appop.AppOpsService$1$1 r8;

        r0 := @this: com.android.server.appop.AppOpsService$1;

        r1 = r0.<com.android.server.appop.AppOpsService$1: com.android.server.appop.AppOpsService this$0>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.appop.AppOpsService$1: com.android.server.appop.AppOpsService this$0>;

        $r2.<com.android.server.appop.AppOpsService: boolean mWriteScheduled> = 0;

        $r3 = r0.<com.android.server.appop.AppOpsService$1: com.android.server.appop.AppOpsService this$0>;

        $r3.<com.android.server.appop.AppOpsService: boolean mFastWriteScheduled> = 0;

        r8 = new com.android.server.appop.AppOpsService$1$1;

        specialinvoke r8.<com.android.server.appop.AppOpsService$1$1: void <init>(com.android.server.appop.AppOpsService$1)>(r0);

        $r5 = <android.os.AsyncTask: java.util.concurrent.Executor THREAD_POOL_EXECUTOR>;

        $r4 = (java.lang.Void[]) null;

        virtualinvoke r8.<android.os.AsyncTask: android.os.AsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>($r5, $r4);

     label2:
        exitmonitor r1;

     label3:
        return;

     label4:
        $r7 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }
}
