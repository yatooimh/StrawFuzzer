public class com.android.server.appop.AppOpsService extends com.android.internal.app.IAppOpsService$Stub
{
    private static final int CURRENT_VERSION;
    static final boolean DEBUG;
    private static final int DEBUG_FGS_ALLOW_WHILE_IN_USE;
    private static final int DEBUG_FGS_ENFORCE_TYPE;
    private static final int MAX_UNFORWARDED_OPS;
    private static final int MAX_UNUSED_POOLED_OBJECTS;
    private static final int NO_VERSION;
    private static final int[] OPS_RESTRICTED_ON_SUSPEND;
    private static final int[] PROCESS_STATE_TO_UID_STATE;
    private static final int RARELY_USED_PACKAGES_INITIALIZATION_DELAY_MILLIS;
    static final java.lang.String TAG;
    private static final int UID_ANY;
    static final long WRITE_DELAY;
    private int mAcceptableLeftDistance;
    final android.util.ArrayMap mActiveWatchers;
    private android.app.ActivityManagerInternal mActivityManagerInternal;
    private final com.android.server.appop.AppOpsService$AppOpsManagerInternalImpl mAppOpsManagerInternal;
    private final android.util.ArrayMap mAsyncOpWatchers;
    final com.android.server.appop.AudioRestrictionManager mAudioRestrictionManager;
    private android.app.AppOpsManagerInternal$CheckOpsDelegate mCheckOpsDelegate;
    private android.app.RuntimeAppOpAccessMessage mCollectedRuntimePermissionMessage;
    final com.android.server.appop.AppOpsService$Constants mConstants;
    final android.content.Context mContext;
    boolean mFastWriteScheduled;
    final android.util.AtomicFile mFile;
    final android.os.Handler mHandler;
    volatile com.android.server.appop.HistoricalRegistry mHistoricalRegistry;
    private final com.android.server.appop.AppOpsService$InProgressStartOpEventPool mInProgressStartOpEventPool;
    long mLastRealtime;
    private float mMessagesCollectedCount;
    final android.util.ArrayMap mModeWatchers;
    private final android.util.ArraySet mNoteOpCallerStacktraces;
    private final java.io.File mNoteOpCallerStacktracesFile;
    final android.util.ArrayMap mNotedWatchers;
    private android.content.BroadcastReceiver mOnPackageUpdatedReceiver;
    private final com.android.server.appop.AppOpsService$OpEventProxyInfoPool mOpEventProxyInfoPool;
    final android.util.SparseArray mOpModeWatchers;
    private final android.util.ArrayMap mOpUserRestrictions;
    final android.util.ArrayMap mPackageModeWatchers;
    android.util.SparseIntArray mProfileOwners;
    private android.util.ArraySet mRarelyUsedPackages;
    private int mSampledAppOpCode;
    private java.lang.String mSampledPackage;
    private int mSamplingStrategy;
    final android.util.ArrayMap mStartedWatchers;
    private final android.util.SparseArray mSwitchedOps;
    final android.util.SparseArray mUidStates;
    private final android.util.ArrayMap mUnforwardedAsyncNotedOps;
    boolean mWriteNoteOpsScheduled;
    final java.lang.Runnable mWriteRunner;
    boolean mWriteScheduled;

    static void <clinit>()
    {
        int[] $r0, $r1;

        <com.android.server.appop.AppOpsService: long WRITE_DELAY> = 1800000L;

        <com.android.server.appop.AppOpsService: int UID_ANY> = -2;

        <com.android.server.appop.AppOpsService: java.lang.String TAG> = "AppOps";

        <com.android.server.appop.AppOpsService: int RARELY_USED_PACKAGES_INITIALIZATION_DELAY_MILLIS> = 300000;

        <com.android.server.appop.AppOpsService: int NO_VERSION> = -1;

        <com.android.server.appop.AppOpsService: int MAX_UNUSED_POOLED_OBJECTS> = 3;

        <com.android.server.appop.AppOpsService: int MAX_UNFORWARDED_OPS> = 10;

        <com.android.server.appop.AppOpsService: int DEBUG_FGS_ENFORCE_TYPE> = 1;

        <com.android.server.appop.AppOpsService: int DEBUG_FGS_ALLOW_WHILE_IN_USE> = 0;

        <com.android.server.appop.AppOpsService: boolean DEBUG> = 0;

        <com.android.server.appop.AppOpsService: int CURRENT_VERSION> = 1;

        $r0 = newarray (int)[21];

        $r0[0] = 100;

        $r0[1] = 100;

        $r0[2] = 200;

        $r0[3] = 500;

        $r0[4] = 400;

        $r0[5] = 500;

        $r0[6] = 600;

        $r0[7] = 600;

        $r0[8] = 600;

        $r0[9] = 600;

        $r0[10] = 600;

        $r0[11] = 600;

        $r0[12] = 700;

        $r0[13] = 700;

        $r0[14] = 700;

        $r0[15] = 700;

        $r0[16] = 700;

        $r0[17] = 700;

        $r0[18] = 700;

        $r0[19] = 700;

        $r0[20] = 700;

        <com.android.server.appop.AppOpsService: int[] PROCESS_STATE_TO_UID_STATE> = $r0;

        $r1 = newarray (int)[3];

        $r1[0] = 28;

        $r1[1] = 27;

        $r1[2] = 26;

        <com.android.server.appop.AppOpsService: int[] OPS_RESTRICTED_ON_SUSPEND> = $r1;

        return;
    }

    public void <init>(java.io.File, android.os.Handler, android.content.Context)
    {
        com.android.server.appop.AppOpsService r0;
        android.os.Handler r1, $r26;
        android.content.Context r2;
        int i0, i1;
        android.util.ArraySet $r3, $r14;
        com.android.server.appop.AppOpsService$OpEventProxyInfoPool $r4;
        com.android.server.appop.AppOpsService$InProgressStartOpEventPool $r5;
        com.android.server.appop.AppOpsService$AppOpsManagerInternalImpl $r6;
        android.util.ArrayMap $r7, $r8, $r12, $r16, $r17, $r18, $r19, $r20;
        com.android.server.appop.AppOpsService$1 $r9;
        android.util.SparseArray $r10, $r13, $r15, r31;
        com.android.server.appop.HistoricalRegistry $r11;
        com.android.server.appop.AudioRestrictionManager $r21;
        com.android.server.appop.AppOpsService$2 $r22;
        android.util.AtomicFile $r24;
        com.android.server.appop.AppOpsService$Constants $r25;
        java.lang.Object $r27;
        int[] $r28, $r29;
        java.io.File r30;

        r0 := @this: com.android.server.appop.AppOpsService;

        r30 := @parameter0: java.io.File;

        r1 := @parameter1: android.os.Handler;

        r2 := @parameter2: android.content.Context;

        specialinvoke r0.<com.android.internal.app.IAppOpsService$Stub: void <init>()>();

        $r3 = new android.util.ArraySet;

        specialinvoke $r3.<android.util.ArraySet: void <init>()>();

        r0.<com.android.server.appop.AppOpsService: android.util.ArraySet mNoteOpCallerStacktraces> = $r3;

        $r4 = new com.android.server.appop.AppOpsService$OpEventProxyInfoPool;

        specialinvoke $r4.<com.android.server.appop.AppOpsService$OpEventProxyInfoPool: void <init>(com.android.server.appop.AppOpsService)>(r0);

        r0.<com.android.server.appop.AppOpsService: com.android.server.appop.AppOpsService$OpEventProxyInfoPool mOpEventProxyInfoPool> = $r4;

        $r5 = new com.android.server.appop.AppOpsService$InProgressStartOpEventPool;

        specialinvoke $r5.<com.android.server.appop.AppOpsService$InProgressStartOpEventPool: void <init>(com.android.server.appop.AppOpsService)>(r0);

        r0.<com.android.server.appop.AppOpsService: com.android.server.appop.AppOpsService$InProgressStartOpEventPool mInProgressStartOpEventPool> = $r5;

        $r6 = new com.android.server.appop.AppOpsService$AppOpsManagerInternalImpl;

        specialinvoke $r6.<com.android.server.appop.AppOpsService$AppOpsManagerInternalImpl: void <init>(com.android.server.appop.AppOpsService,com.android.server.appop.AppOpsService$1)>(r0, null);

        r0.<com.android.server.appop.AppOpsService: com.android.server.appop.AppOpsService$AppOpsManagerInternalImpl mAppOpsManagerInternal> = $r6;

        $r7 = new android.util.ArrayMap;

        specialinvoke $r7.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.appop.AppOpsService: android.util.ArrayMap mAsyncOpWatchers> = $r7;

        $r8 = new android.util.ArrayMap;

        specialinvoke $r8.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.appop.AppOpsService: android.util.ArrayMap mUnforwardedAsyncNotedOps> = $r8;

        $r9 = new com.android.server.appop.AppOpsService$1;

        specialinvoke $r9.<com.android.server.appop.AppOpsService$1: void <init>(com.android.server.appop.AppOpsService)>(r0);

        r0.<com.android.server.appop.AppOpsService: java.lang.Runnable mWriteRunner> = $r9;

        $r10 = new android.util.SparseArray;

        specialinvoke $r10.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.appop.AppOpsService: android.util.SparseArray mUidStates> = $r10;

        $r11 = new com.android.server.appop.HistoricalRegistry;

        specialinvoke $r11.<com.android.server.appop.HistoricalRegistry: void <init>(java.lang.Object)>(r0);

        r0.<com.android.server.appop.AppOpsService: com.android.server.appop.HistoricalRegistry mHistoricalRegistry> = $r11;

        $r12 = new android.util.ArrayMap;

        specialinvoke $r12.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.appop.AppOpsService: android.util.ArrayMap mOpUserRestrictions> = $r12;

        $r13 = new android.util.SparseArray;

        specialinvoke $r13.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.appop.AppOpsService: android.util.SparseArray mSwitchedOps> = $r13;

        r0.<com.android.server.appop.AppOpsService: java.lang.String mSampledPackage> = null;

        r0.<com.android.server.appop.AppOpsService: int mSampledAppOpCode> = -1;

        r0.<com.android.server.appop.AppOpsService: int mAcceptableLeftDistance> = 0;

        $r14 = new android.util.ArraySet;

        specialinvoke $r14.<android.util.ArraySet: void <init>()>();

        r0.<com.android.server.appop.AppOpsService: android.util.ArraySet mRarelyUsedPackages> = $r14;

        $r15 = new android.util.SparseArray;

        specialinvoke $r15.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.appop.AppOpsService: android.util.SparseArray mOpModeWatchers> = $r15;

        $r16 = new android.util.ArrayMap;

        specialinvoke $r16.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.appop.AppOpsService: android.util.ArrayMap mPackageModeWatchers> = $r16;

        $r17 = new android.util.ArrayMap;

        specialinvoke $r17.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.appop.AppOpsService: android.util.ArrayMap mModeWatchers> = $r17;

        $r18 = new android.util.ArrayMap;

        specialinvoke $r18.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.appop.AppOpsService: android.util.ArrayMap mActiveWatchers> = $r18;

        $r19 = new android.util.ArrayMap;

        specialinvoke $r19.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.appop.AppOpsService: android.util.ArrayMap mStartedWatchers> = $r19;

        $r20 = new android.util.ArrayMap;

        specialinvoke $r20.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.appop.AppOpsService: android.util.ArrayMap mNotedWatchers> = $r20;

        $r21 = new com.android.server.appop.AudioRestrictionManager;

        specialinvoke $r21.<com.android.server.appop.AudioRestrictionManager: void <init>()>();

        r0.<com.android.server.appop.AppOpsService: com.android.server.appop.AudioRestrictionManager mAudioRestrictionManager> = $r21;

        $r22 = new com.android.server.appop.AppOpsService$2;

        specialinvoke $r22.<com.android.server.appop.AppOpsService$2: void <init>(com.android.server.appop.AppOpsService)>(r0);

        r0.<com.android.server.appop.AppOpsService: android.content.BroadcastReceiver mOnPackageUpdatedReceiver> = $r22;

        r0.<com.android.server.appop.AppOpsService: android.content.Context mContext> = r2;

        staticinvoke <com.android.server.LockGuard: java.lang.Object installLock(java.lang.Object,int)>(r0, 0);

        $r24 = new android.util.AtomicFile;

        specialinvoke $r24.<android.util.AtomicFile: void <init>(java.io.File,java.lang.String)>(r30, "appops");

        r0.<com.android.server.appop.AppOpsService: android.util.AtomicFile mFile> = $r24;

        r0.<com.android.server.appop.AppOpsService: java.io.File mNoteOpCallerStacktracesFile> = null;

        r0.<com.android.server.appop.AppOpsService: android.os.Handler mHandler> = r1;

        $r25 = new com.android.server.appop.AppOpsService$Constants;

        $r26 = r0.<com.android.server.appop.AppOpsService: android.os.Handler mHandler>;

        specialinvoke $r25.<com.android.server.appop.AppOpsService$Constants: void <init>(com.android.server.appop.AppOpsService,android.os.Handler)>(r0, $r26);

        r0.<com.android.server.appop.AppOpsService: com.android.server.appop.AppOpsService$Constants mConstants> = $r25;

        virtualinvoke r0.<com.android.server.appop.AppOpsService: void readState()>();

        i1 = 0;

     label1:
        if i1 >= 100 goto label2;

        i0 = staticinvoke <android.app.AppOpsManager: int opToSwitch(int)>(i1);

        r31 = r0.<com.android.server.appop.AppOpsService: android.util.SparseArray mSwitchedOps>;

        $r27 = virtualinvoke r31.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        $r28 = (int[]) $r27;

        $r29 = staticinvoke <com.android.internal.util.ArrayUtils: int[] appendInt(int[],int)>($r28, i1);

        virtualinvoke r31.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, $r29);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    static int[] access$1100()
    {
        int[] $r0;

        $r0 = <com.android.server.appop.AppOpsService: int[] OPS_RESTRICTED_ON_SUSPEND>;

        return $r0;
    }

    static void access$1200(com.android.server.appop.AppOpsService, android.util.ArraySet, int, int, java.lang.String)
    {
        com.android.server.appop.AppOpsService r0;
        android.util.ArraySet r1;
        int i0, i1;
        java.lang.String r2;

        r0 := @parameter0: com.android.server.appop.AppOpsService;

        r1 := @parameter1: android.util.ArraySet;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r2 := @parameter4: java.lang.String;

        specialinvoke r0.<com.android.server.appop.AppOpsService: void notifyOpChanged(android.util.ArraySet,int,int,java.lang.String)>(r1, i0, i1, r2);

        return;
    }

    static boolean access$1300(com.android.server.appop.AppOpsService, android.content.pm.PackageInfo)
    {
        com.android.server.appop.AppOpsService r0;
        android.content.pm.PackageInfo r1;
        boolean $z0;

        r0 := @parameter0: com.android.server.appop.AppOpsService;

        r1 := @parameter1: android.content.pm.PackageInfo;

        $z0 = specialinvoke r0.<com.android.server.appop.AppOpsService: boolean isSamplingTarget(android.content.pm.PackageInfo)>(r1);

        return $z0;
    }

    static android.util.ArraySet access$1400(com.android.server.appop.AppOpsService)
    {
        com.android.server.appop.AppOpsService r0;
        android.util.ArraySet $r1;

        r0 := @parameter0: com.android.server.appop.AppOpsService;

        $r1 = r0.<com.android.server.appop.AppOpsService: android.util.ArraySet mRarelyUsedPackages>;

        return $r1;
    }

    static android.util.ArraySet access$1402(com.android.server.appop.AppOpsService, android.util.ArraySet)
    {
        com.android.server.appop.AppOpsService r0;
        android.util.ArraySet r1;

        r0 := @parameter0: com.android.server.appop.AppOpsService;

        r1 := @parameter1: android.util.ArraySet;

        r0.<com.android.server.appop.AppOpsService: android.util.ArraySet mRarelyUsedPackages> = r1;

        return r1;
    }

    static java.util.List access$1500(com.android.server.appop.AppOpsService)
    {
        com.android.server.appop.AppOpsService r0;
        java.util.List $r1;

        r0 := @parameter0: com.android.server.appop.AppOpsService;

        $r1 = specialinvoke r0.<com.android.server.appop.AppOpsService: java.util.List getPackageListAndResample()>();

        return $r1;
    }

    static void access$1600(com.android.server.appop.AppOpsService, android.util.ArraySet)
    {
        com.android.server.appop.AppOpsService r0;
        android.util.ArraySet r1;

        r0 := @parameter0: com.android.server.appop.AppOpsService;

        r1 := @parameter1: android.util.ArraySet;

        specialinvoke r0.<com.android.server.appop.AppOpsService: void initializeRarelyUsedPackagesList(android.util.ArraySet)>(r1);

        return;
    }

    static android.util.ArrayMap access$1800(com.android.server.appop.AppOpsService)
    {
        com.android.server.appop.AppOpsService r0;
        android.util.ArrayMap $r1;

        r0 := @parameter0: com.android.server.appop.AppOpsService;

        $r1 = r0.<com.android.server.appop.AppOpsService: android.util.ArrayMap mAsyncOpWatchers>;

        return $r1;
    }

    static int access$1900(java.lang.String)
    {
        java.lang.String r0;
        int $i0;

        r0 := @parameter0: java.lang.String;

        $i0 = staticinvoke <com.android.server.appop.AppOpsService: int resolveUid(java.lang.String)>(r0);

        return $i0;
    }

    static android.app.ActivityManagerInternal access$200(com.android.server.appop.AppOpsService)
    {
        com.android.server.appop.AppOpsService r0;
        android.app.ActivityManagerInternal $r1;

        r0 := @parameter0: com.android.server.appop.AppOpsService;

        $r1 = r0.<com.android.server.appop.AppOpsService: android.app.ActivityManagerInternal mActivityManagerInternal>;

        return $r1;
    }

    static android.util.ArrayMap access$2100(com.android.server.appop.AppOpsService)
    {
        com.android.server.appop.AppOpsService r0;
        android.util.ArrayMap $r1;

        r0 := @parameter0: com.android.server.appop.AppOpsService;

        $r1 = r0.<com.android.server.appop.AppOpsService: android.util.ArrayMap mOpUserRestrictions>;

        return $r1;
    }

    static void access$2200(com.android.server.appop.AppOpsService, int, int)
    {
        com.android.server.appop.AppOpsService r0;
        int i0, i1;

        r0 := @parameter0: com.android.server.appop.AppOpsService;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<com.android.server.appop.AppOpsService: void notifyWatchersOfChange(int,int)>(i0, i1);

        return;
    }

    static void access$2300(com.android.server.appop.AppOpsService, android.util.SparseArray, boolean)
    {
        com.android.server.appop.AppOpsService r0;
        android.util.SparseArray r1;
        boolean z0;

        r0 := @parameter0: com.android.server.appop.AppOpsService;

        r1 := @parameter1: android.util.SparseArray;

        z0 := @parameter2: boolean;

        specialinvoke r0.<com.android.server.appop.AppOpsService: void updateAppWidgetVisibility(android.util.SparseArray,boolean)>(r1, z0);

        return;
    }

    static void access$2400(com.android.server.appop.AppOpsService, int, int, int, com.android.internal.app.IAppOpsCallback)
    {
        com.android.server.appop.AppOpsService r0;
        int i0, i1, i2;
        com.android.internal.app.IAppOpsCallback r1;

        r0 := @parameter0: com.android.server.appop.AppOpsService;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r1 := @parameter4: com.android.internal.app.IAppOpsCallback;

        specialinvoke r0.<com.android.server.appop.AppOpsService: void setUidMode(int,int,int,com.android.internal.app.IAppOpsCallback)>(i0, i1, i2, r1);

        return;
    }

    static void access$2500(com.android.server.appop.AppOpsService, int, int, java.lang.String, int, com.android.internal.app.IAppOpsCallback)
    {
        com.android.server.appop.AppOpsService r0;
        int i0, i1, i2;
        java.lang.String r1;
        com.android.internal.app.IAppOpsCallback r2;

        r0 := @parameter0: com.android.server.appop.AppOpsService;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: java.lang.String;

        i2 := @parameter4: int;

        r2 := @parameter5: com.android.internal.app.IAppOpsCallback;

        specialinvoke r0.<com.android.server.appop.AppOpsService: void setMode(int,int,java.lang.String,int,com.android.internal.app.IAppOpsCallback)>(i0, i1, r1, i2, r2);

        return;
    }

    static com.android.server.appop.AppOpsService$OpEventProxyInfoPool access$400(com.android.server.appop.AppOpsService)
    {
        com.android.server.appop.AppOpsService r0;
        com.android.server.appop.AppOpsService$OpEventProxyInfoPool $r1;

        r0 := @parameter0: com.android.server.appop.AppOpsService;

        $r1 = r0.<com.android.server.appop.AppOpsService: com.android.server.appop.AppOpsService$OpEventProxyInfoPool mOpEventProxyInfoPool>;

        return $r1;
    }

    static void access$500(com.android.server.appop.AppOpsService, int, int, java.lang.String, boolean)
    {
        com.android.server.appop.AppOpsService r0;
        int i0, i1;
        java.lang.String r1;
        boolean z0;

        r0 := @parameter0: com.android.server.appop.AppOpsService;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: java.lang.String;

        z0 := @parameter4: boolean;

        specialinvoke r0.<com.android.server.appop.AppOpsService: void scheduleOpActiveChangedIfNeededLocked(int,int,java.lang.String,boolean)>(i0, i1, r1, z0);

        return;
    }

    static com.android.server.appop.AppOpsService$InProgressStartOpEventPool access$600(com.android.server.appop.AppOpsService)
    {
        com.android.server.appop.AppOpsService r0;
        com.android.server.appop.AppOpsService$InProgressStartOpEventPool $r1;

        r0 := @parameter0: com.android.server.appop.AppOpsService;

        $r1 = r0.<com.android.server.appop.AppOpsService: com.android.server.appop.AppOpsService$InProgressStartOpEventPool mInProgressStartOpEventPool>;

        return $r1;
    }

    static void access$800(com.android.server.appop.AppOpsService$AttributedOp, android.os.IBinder)
    {
        com.android.server.appop.AppOpsService$AttributedOp r0;
        android.os.IBinder r1;

        r0 := @parameter0: com.android.server.appop.AppOpsService$AttributedOp;

        r1 := @parameter1: android.os.IBinder;

        staticinvoke <com.android.server.appop.AppOpsService: void onClientDeath(com.android.server.appop.AppOpsService$AttributedOp,android.os.IBinder)>(r0, r1);

        return;
    }

    static void access$900(com.android.server.appop.AppOpsService)
    {
        com.android.server.appop.AppOpsService r0;

        r0 := @parameter0: com.android.server.appop.AppOpsService;

        specialinvoke r0.<com.android.server.appop.AppOpsService: void scheduleFastWriteLocked()>();

        return;
    }

    private static java.util.HashMap addCallbacks(java.util.HashMap, int, int, java.lang.String, android.util.ArraySet)
    {
        int i0, i1, i2, i3;
        java.lang.String r0;
        android.util.ArraySet r1;
        com.android.server.appop.AppOpsService$ModeCallback r2;
        java.util.ArrayList r3, r10;
        java.lang.Object $r4, $r5;
        java.util.HashMap $r7, r8, r9;

        r8 := @parameter0: java.util.HashMap;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r0 := @parameter3: java.lang.String;

        r1 := @parameter4: android.util.ArraySet;

        if r1 != null goto label1;

        return r8;

     label1:
        r9 = r8;

        if r8 != null goto label2;

        $r7 = new java.util.HashMap;

        specialinvoke $r7.<java.util.HashMap: void <init>()>();

        r9 = $r7;

     label2:
        i2 = virtualinvoke r1.<android.util.ArraySet: int size()>();

        i3 = 0;

     label3:
        if i3 >= i2 goto label5;

        $r4 = virtualinvoke r1.<android.util.ArraySet: java.lang.Object valueAt(int)>(i3);

        r2 = (com.android.server.appop.AppOpsService$ModeCallback) $r4;

        $r5 = virtualinvoke r9.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r2);

        r10 = (java.util.ArrayList) $r5;

        r3 = staticinvoke <com.android.server.appop.AppOpsService: java.util.ArrayList addChange(java.util.ArrayList,int,int,java.lang.String)>(r10, i0, i1, r0);

        if r3 == r10 goto label4;

        virtualinvoke r9.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r3);

     label4:
        i3 = i3 + 1;

        goto label3;

     label5:
        return r9;
    }

    private static java.util.ArrayList addChange(java.util.ArrayList, int, int, java.lang.String)
    {
        java.util.ArrayList r0, $r5, r6;
        int i0, i1, i2, $i3, i4;
        java.lang.String r1, $r4;
        com.android.server.appop.AppOpsService$ChangeRec $r2, r7;
        java.lang.Object $r3;
        boolean $z2, z3;

        r0 := @parameter0: java.util.ArrayList;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: java.lang.String;

        if r0 != null goto label1;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r6 = $r5;

        z3 = 0;

        goto label4;

     label1:
        i2 = virtualinvoke r0.<java.util.ArrayList: int size()>();

        i4 = 0;

     label2:
        z3 = 0;

        r6 = r0;

        if i4 >= i2 goto label4;

        $r3 = virtualinvoke r0.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        r7 = (com.android.server.appop.AppOpsService$ChangeRec) $r3;

        $i3 = r7.<com.android.server.appop.AppOpsService$ChangeRec: int op>;

        if $i3 != i0 goto label3;

        $r4 = r7.<com.android.server.appop.AppOpsService$ChangeRec: java.lang.String pkg>;

        $z2 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z2 == 0 goto label3;

        z3 = 1;

        r6 = r0;

        goto label4;

     label3:
        i4 = i4 + 1;

        goto label2;

     label4:
        if z3 != 0 goto label5;

        $r2 = new com.android.server.appop.AppOpsService$ChangeRec;

        specialinvoke $r2.<com.android.server.appop.AppOpsService$ChangeRec: void <init>(int,int,java.lang.String)>(i0, i1, r1);

        virtualinvoke r6.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

     label5:
        return r6;
    }

    private int checkAudioOperationImpl(int, int, int, java.lang.String)
    {
        com.android.server.appop.AppOpsService r0;
        int i0, i1, $i2, i3, i4;
        java.lang.String r1;
        com.android.server.appop.AudioRestrictionManager $r2;

        r0 := @this: com.android.server.appop.AppOpsService;

        i0 := @parameter0: int;

        i3 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: java.lang.String;

        $r2 = r0.<com.android.server.appop.AppOpsService: com.android.server.appop.AudioRestrictionManager mAudioRestrictionManager>;

        i4 = virtualinvoke $r2.<com.android.server.appop.AudioRestrictionManager: int checkAudioOperation(int,int,int,java.lang.String)>(i0, i3, i1, r1);

        if i4 == 0 goto label1;

        return i4;

     label1:
        $i2 = virtualinvoke r0.<com.android.server.appop.AppOpsService: int checkOperation(int,int,java.lang.String)>(i0, i1, r1);

        return $i2;
    }

    private int checkOperationImpl(int, int, java.lang.String, boolean)
    {
        com.android.server.appop.AppOpsService r0;
        int i0, i1, $i2;
        boolean z0;
        java.lang.String r1, r2;

        r0 := @this: com.android.server.appop.AppOpsService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        specialinvoke r0.<com.android.server.appop.AppOpsService: void verifyIncomingOp(int)>(i0);

        r2 = staticinvoke <com.android.server.appop.AppOpsService: java.lang.String resolvePackageName(int,java.lang.String)>(i1, r1);

        if r2 != null goto label1;

        return 1;

     label1:
        $i2 = specialinvoke r0.<com.android.server.appop.AppOpsService: int checkOperationUnchecked(int,int,java.lang.String,boolean)>(i0, i1, r2, z0);

        return $i2;
    }

    private int checkOperationInternal(int, int, java.lang.String, boolean)
    {
        com.android.server.appop.AppOpsService r0;
        int i0, i1, $i2, $i3;
        boolean z0;
        android.app.AppOpsManagerInternal$CheckOpsDelegate r1;
        com.android.server.appop._$$Lambda$AppOpsService$gQy7GOuCV6GbjQtdNhNG6xld8I4 $r2;
        java.lang.Throwable $r3;
        java.lang.String r4;

        r0 := @this: com.android.server.appop.AppOpsService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r4 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        entermonitor r0;

     label1:
        r1 = r0.<com.android.server.appop.AppOpsService: android.app.AppOpsManagerInternal$CheckOpsDelegate mCheckOpsDelegate>;

        exitmonitor r0;

     label2:
        if r1 != null goto label3;

        $i3 = specialinvoke r0.<com.android.server.appop.AppOpsService: int checkOperationImpl(int,int,java.lang.String,boolean)>(i0, i1, r4, z0);

        return $i3;

     label3:
        $r2 = new com.android.server.appop._$$Lambda$AppOpsService$gQy7GOuCV6GbjQtdNhNG6xld8I4;

        specialinvoke $r2.<com.android.server.appop._$$Lambda$AppOpsService$gQy7GOuCV6GbjQtdNhNG6xld8I4: void <init>(com.android.server.appop.AppOpsService)>(r0);

        $i2 = interfaceinvoke r1.<android.app.AppOpsManagerInternal$CheckOpsDelegate: int checkOperation(int,int,java.lang.String,boolean,com.android.internal.util.function.QuadFunction)>(i0, i1, r4, z0, $r2);

        return $i2;

     label4:
        $r3 := @caughtexception;

     label5:
        exitmonitor r0;

     label6:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    private int checkOperationUnchecked(int, int, java.lang.String, boolean)
    {
        com.android.server.appop.AppOpsService r0;
        int i0, i1, $i2, $i4, i5, i6, i7, i8;
        boolean z0, $z1, $z2;
        android.app.AppOpsManager$RestrictionBypass r1;
        com.android.server.appop.AppOpsService$UidState r2;
        android.util.SparseIntArray $r3, $r4, $r5;
        java.lang.Throwable $r6, $r7;
        java.lang.String r8;
        com.android.server.appop.AppOpsService$Op r9;

        r0 := @this: com.android.server.appop.AppOpsService;

        i5 := @parameter0: int;

        i0 := @parameter1: int;

        r8 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

     label01:
        r1 = specialinvoke r0.<com.android.server.appop.AppOpsService: android.app.AppOpsManager$RestrictionBypass verifyAndGetBypass(int,java.lang.String,java.lang.String)>(i0, r8, null);

     label02:
        $z1 = specialinvoke r0.<com.android.server.appop.AppOpsService: boolean isOpRestrictedDueToSuspend(int,java.lang.String,int)>(i5, r8, i0);

        if $z1 == 0 goto label03;

        return 1;

     label03:
        entermonitor r0;

     label04:
        $z2 = specialinvoke r0.<com.android.server.appop.AppOpsService: boolean isOpRestrictedLocked(int,int,java.lang.String,android.app.AppOpsManager$RestrictionBypass)>(i0, i5, r8, r1);

        if $z2 == 0 goto label06;

        exitmonitor r0;

     label05:
        return 1;

     label06:
        i1 = staticinvoke <android.app.AppOpsManager: int opToSwitch(int)>(i5);

        r2 = specialinvoke r0.<com.android.server.appop.AppOpsService: com.android.server.appop.AppOpsService$UidState getUidStateLocked(int,boolean)>(i0, 0);

     label07:
        if r2 == null goto label13;

     label08:
        $r3 = r2.<com.android.server.appop.AppOpsService$UidState: android.util.SparseIntArray opModes>;

        if $r3 == null goto label13;

        $r4 = r2.<com.android.server.appop.AppOpsService$UidState: android.util.SparseIntArray opModes>;

        $i2 = virtualinvoke $r4.<android.util.SparseIntArray: int indexOfKey(int)>(i1);

        if $i2 < 0 goto label13;

        $r5 = r2.<com.android.server.appop.AppOpsService$UidState: android.util.SparseIntArray opModes>;

        i6 = virtualinvoke $r5.<android.util.SparseIntArray: int get(int)>(i1);

     label09:
        if z0 == 0 goto label10;

        goto label11;

     label10:
        i6 = virtualinvoke r2.<com.android.server.appop.AppOpsService$UidState: int evalMode(int,int)>(i1, i6);

     label11:
        exitmonitor r0;

     label12:
        return i6;

     label13:
        r9 = specialinvoke r0.<com.android.server.appop.AppOpsService: com.android.server.appop.AppOpsService$Op getOpLocked(int,int,java.lang.String,java.lang.String,android.app.AppOpsManager$RestrictionBypass,boolean)>(i1, i0, r8, null, r1, 0);

     label14:
        if r9 != null goto label17;

     label15:
        i7 = staticinvoke <android.app.AppOpsManager: int opToDefaultMode(int)>(i1);

        exitmonitor r0;

     label16:
        return i7;

     label17:
        if z0 == 0 goto label20;

     label18:
        i8 = staticinvoke <com.android.server.appop.AppOpsService$Op: int access$300(com.android.server.appop.AppOpsService$Op)>(r9);

     label19:
        goto label21;

     label20:
        i8 = virtualinvoke r9.<com.android.server.appop.AppOpsService$Op: int evalMode()>();

     label21:
        exitmonitor r0;

     label22:
        return i8;

     label23:
        $r6 := @caughtexception;

     label24:
        exitmonitor r0;

     label25:
        throw $r6;

     label26:
        $r7 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("AppOps", "checkOperation", $r7);

        $i4 = staticinvoke <android.app.AppOpsManager: int opToDefaultMode(int)>(i5);

        return $i4;

        catch java.lang.SecurityException from label01 to label02 with label26;
        catch java.lang.Throwable from label04 to label05 with label23;
        catch java.lang.Throwable from label06 to label07 with label23;
        catch java.lang.Throwable from label08 to label09 with label23;
        catch java.lang.Throwable from label10 to label11 with label23;
        catch java.lang.Throwable from label11 to label12 with label23;
        catch java.lang.Throwable from label13 to label14 with label23;
        catch java.lang.Throwable from label15 to label16 with label23;
        catch java.lang.Throwable from label18 to label19 with label23;
        catch java.lang.Throwable from label20 to label21 with label23;
        catch java.lang.Throwable from label21 to label22 with label23;
        catch java.lang.Throwable from label24 to label25 with label23;
    }

    private void checkSystemUid(java.lang.String)
    {
        com.android.server.appop.AppOpsService r0;
        java.lang.String r1, $r7;
        int $i0;
        java.lang.StringBuilder $r3;
        java.lang.SecurityException $r6;

        r0 := @this: com.android.server.appop.AppOpsService;

        r1 := @parameter0: java.lang.String;

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if $i0 != 1000 goto label1;

        return;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" must by called by the system");

        $r6 = new java.lang.SecurityException;

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.SecurityException: void <init>(java.lang.String)>($r7);

        throw $r6;
    }

    private void collectAsyncNotedOp(int, java.lang.String, int, java.lang.String, int, java.lang.String, boolean)
    {
        com.android.server.appop.AppOpsService r0;
        int i0, i1, i2, i3, $i6, $i7;
        boolean z0, $z1;
        long l4, $l5;
        android.util.Pair r1;
        android.app.AsyncNotedAppOp r2;
        boolean[] r3;
        android.util.ArrayMap $r5, $r7, $r10;
        java.lang.Object $r6, $r8;
        java.lang.Throwable $r12, $r13;
        java.lang.String r14, r15, r16;
        android.os.RemoteCallbackList r17;
        com.android.server.appop._$$Lambda$AppOpsService$mWtZBFm5Ggi69Tx6HVKXLYiPWt4 r19;
        java.util.ArrayList r20, r21;

        r0 := @this: com.android.server.appop.AppOpsService;

        i0 := @parameter0: int;

        r14 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        r15 := @parameter3: java.lang.String;

        i2 := @parameter4: int;

        r16 := @parameter5: java.lang.String;

        z0 := @parameter6: boolean;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r16);

        i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        l4 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label01:
        entermonitor r0;

     label02:
        r1 = specialinvoke r0.<com.android.server.appop.AppOpsService: android.util.Pair getAsyncNotedOpsKey(java.lang.String,int)>(r14, i0);

        $r5 = r0.<com.android.server.appop.AppOpsService: android.util.ArrayMap mAsyncOpWatchers>;

        $r6 = virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r17 = (android.os.RemoteCallbackList) $r6;

        r2 = new android.app.AsyncNotedAppOp;

        $l5 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        specialinvoke r2.<android.app.AsyncNotedAppOp: void <init>(int,int,java.lang.String,java.lang.String,long)>(i1, i3, r15, r16, $l5);

        r3 = newarray (boolean)[1];

     label03:
        r3[0] = 0;

        $i6 = i2 & 9;

        if $i6 == 0 goto label06;

        if z0 == 0 goto label06;

     label04:
        specialinvoke r0.<com.android.server.appop.AppOpsService: void reportRuntimeAppOpAccessMessageAsyncLocked(int,java.lang.String,int,java.lang.String,java.lang.String)>(i0, r14, i1, r15, r16);

     label05:
        goto label06;

     label06:
        if r17 == null goto label09;

     label07:
        r19 = new com.android.server.appop._$$Lambda$AppOpsService$mWtZBFm5Ggi69Tx6HVKXLYiPWt4;

        specialinvoke r19.<com.android.server.appop._$$Lambda$AppOpsService$mWtZBFm5Ggi69Tx6HVKXLYiPWt4: void <init>(android.app.AsyncNotedAppOp,boolean[],int,java.lang.String,int,java.lang.String)>(r2, r3, i1, r14, i0, r15);

        virtualinvoke r17.<android.os.RemoteCallbackList: void broadcast(java.util.function.Consumer)>(r19);

     label08:
        goto label09;

     label09:
        $z1 = r3[0];

        if $z1 != 0 goto label15;

     label10:
        $r7 = r0.<com.android.server.appop.AppOpsService: android.util.ArrayMap mUnforwardedAsyncNotedOps>;

        $r8 = virtualinvoke $r7.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r20 = (java.util.ArrayList) $r8;

     label11:
        r21 = r20;

        if r20 != null goto label14;

     label12:
        r21 = new java.util.ArrayList;

        specialinvoke r21.<java.util.ArrayList: void <init>(int)>(1);

     label13:
        $r10 = r0.<com.android.server.appop.AppOpsService: android.util.ArrayMap mUnforwardedAsyncNotedOps>;

        virtualinvoke $r10.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r21);

     label14:
        virtualinvoke r21.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

        $i7 = virtualinvoke r21.<java.util.ArrayList: int size()>();

        if $i7 <= 10 goto label15;

        virtualinvoke r21.<java.util.ArrayList: java.lang.Object remove(int)>(0);

     label15:
        exitmonitor r0;

     label16:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l4);

        return;

     label17:
        $r12 := @caughtexception;

     label18:
        exitmonitor r0;

     label19:
        throw $r12;

     label20:
        $r13 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l4);

        throw $r13;

        catch java.lang.Throwable from label01 to label02 with label20;
        catch java.lang.Throwable from label02 to label03 with label17;
        catch java.lang.Throwable from label04 to label05 with label17;
        catch java.lang.Throwable from label07 to label08 with label17;
        catch java.lang.Throwable from label10 to label11 with label17;
        catch java.lang.Throwable from label12 to label13 with label17;
        catch java.lang.Throwable from label13 to label14 with label17;
        catch java.lang.Throwable from label14 to label15 with label17;
        catch java.lang.Throwable from label15 to label16 with label17;
        catch java.lang.Throwable from label18 to label19 with label17;
        catch java.lang.Throwable from label19 to label20 with label20;
    }

    private java.util.ArrayList collectOps(com.android.server.appop.AppOpsService$Ops, int[])
    {
        com.android.server.appop.AppOpsService r0;
        com.android.server.appop.AppOpsService$Ops r1;
        int[] r2;
        long l0;
        com.android.server.appop.AppOpsService$Op r3, $r9;
        int $i1, $i2, $i3, i4, i5;
        java.lang.Object $r4, $r8;
        android.app.AppOpsManager$OpEntry $r5, $r10;
        java.util.ArrayList $r6, $r7, r11, r12, r13;

        r0 := @this: com.android.server.appop.AppOpsService;

        r1 := @parameter0: com.android.server.appop.AppOpsService$Ops;

        r2 := @parameter1: int[];

        r11 = null;

        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        if r2 != null goto label3;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r12 = $r7;

        i4 = 0;

     label1:
        $i3 = virtualinvoke r1.<com.android.server.appop.AppOpsService$Ops: int size()>();

        if i4 >= $i3 goto label2;

        $r8 = virtualinvoke r1.<com.android.server.appop.AppOpsService$Ops: java.lang.Object valueAt(int)>(i4);

        $r9 = (com.android.server.appop.AppOpsService$Op) $r8;

        $r10 = staticinvoke <com.android.server.appop.AppOpsService: android.app.AppOpsManager$OpEntry getOpEntryForResult(com.android.server.appop.AppOpsService$Op,long)>($r9, l0);

        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>($r10);

        i4 = i4 + 1;

        goto label1;

     label2:
        goto label7;

     label3:
        i5 = 0;

     label4:
        r12 = r11;

        $i1 = lengthof r2;

        if i5 >= $i1 goto label7;

        $i2 = r2[i5];

        $r4 = virtualinvoke r1.<com.android.server.appop.AppOpsService$Ops: java.lang.Object get(int)>($i2);

        r3 = (com.android.server.appop.AppOpsService$Op) $r4;

        r13 = r11;

        if r3 == null goto label6;

        r13 = r11;

        if r11 != null goto label5;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r13 = $r6;

     label5:
        $r5 = staticinvoke <com.android.server.appop.AppOpsService: android.app.AppOpsManager$OpEntry getOpEntryForResult(com.android.server.appop.AppOpsService$Op,long)>(r3, l0);

        virtualinvoke r13.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

     label6:
        i5 = i5 + 1;

        r11 = r13;

        goto label4;

     label7:
        return r12;
    }

    private java.util.ArrayList collectUidOps(com.android.server.appop.AppOpsService$UidState, int[])
    {
        com.android.server.appop.AppOpsService r0;
        com.android.server.appop.AppOpsService$UidState r1;
        int[] r2;
        int i0, $i1, $i2, $i3, $i4, i5, i6, i7, i8;
        android.util.SparseIntArray $r3, $r4, $r5, $r7, $r11, $r13;
        android.app.AppOpsManager$OpEntry $r6, $r12;
        java.util.Map $r8, $r14;
        java.util.ArrayList $r9, $r10, r15, r16, r17;

        r0 := @this: com.android.server.appop.AppOpsService;

        r1 := @parameter0: com.android.server.appop.AppOpsService$UidState;

        r2 := @parameter1: int[];

        $r3 = r1.<com.android.server.appop.AppOpsService$UidState: android.util.SparseIntArray opModes>;

        if $r3 != null goto label1;

        return null;

     label1:
        $r4 = r1.<com.android.server.appop.AppOpsService$UidState: android.util.SparseIntArray opModes>;

        i5 = virtualinvoke $r4.<android.util.SparseIntArray: int size()>();

        if i5 != 0 goto label2;

        return null;

     label2:
        r15 = null;

        if r2 != null goto label5;

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        r16 = $r10;

        i6 = 0;

     label3:
        if i6 >= i5 goto label4;

        $r11 = r1.<com.android.server.appop.AppOpsService$UidState: android.util.SparseIntArray opModes>;

        i0 = virtualinvoke $r11.<android.util.SparseIntArray: int keyAt(int)>(i6);

        $r12 = new android.app.AppOpsManager$OpEntry;

        $r13 = r1.<com.android.server.appop.AppOpsService$UidState: android.util.SparseIntArray opModes>;

        $i4 = virtualinvoke $r13.<android.util.SparseIntArray: int get(int)>(i0);

        $r14 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        specialinvoke $r12.<android.app.AppOpsManager$OpEntry: void <init>(int,int,java.util.Map)>(i0, $i4, $r14);

        virtualinvoke $r10.<java.util.ArrayList: boolean add(java.lang.Object)>($r12);

        i6 = i6 + 1;

        goto label3;

     label4:
        goto label9;

     label5:
        i7 = 0;

     label6:
        r16 = r15;

        $i1 = lengthof r2;

        if i7 >= $i1 goto label9;

        i8 = r2[i7];

        r17 = r15;

        $r5 = r1.<com.android.server.appop.AppOpsService$UidState: android.util.SparseIntArray opModes>;

        $i2 = virtualinvoke $r5.<android.util.SparseIntArray: int indexOfKey(int)>(i8);

        if $i2 < 0 goto label8;

        r17 = r15;

        if r15 != null goto label7;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r17 = $r9;

     label7:
        $r6 = new android.app.AppOpsManager$OpEntry;

        $r7 = r1.<com.android.server.appop.AppOpsService$UidState: android.util.SparseIntArray opModes>;

        $i3 = virtualinvoke $r7.<android.util.SparseIntArray: int get(int)>(i8);

        $r8 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        specialinvoke $r6.<android.app.AppOpsManager$OpEntry: void <init>(int,int,java.util.Map)>(i8, $i3, $r8);

        virtualinvoke r17.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

     label8:
        i7 = i7 + 1;

        r15 = r17;

        goto label6;

     label9:
        return r16;
    }

    private void commitUidPendingStateLocked(com.android.server.appop.AppOpsService$UidState)
    {
        com.android.server.appop.AppOpsService r0;
        com.android.server.appop.AppOpsService$UidState r1;
        int i0, $i3, $i4, $i5, $i6, $i7, $i9, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, i24, i25, i26;
        long l1, l2, $l10;
        com.android.server.appop.AppOpsService$ModeCallback r2;
        com.android.server.appop.AppOpsService$Op r3;
        boolean $z0, $z1, $z2, $z3, $z6, $z7, z8, z9;
        android.util.SparseBooleanArray $r4, $r5, $r6;
        byte $b8, $b11;
        android.util.SparseArray $r7;
        java.lang.Object $r8, $r9, $r12, $r14, $r20;
        android.util.ArrayMap $r10, $r11, $r19, $r33;
        com.android.server.appop.AppOpsService$Ops $r13;
        android.os.Handler $r15, $r25;
        com.android.server.appop.'-$$Lambda$AppOpsService$FYLTtxqrHmv8Y5UdZ9ybXKsSJhs' $r16;
        java.lang.Integer $r17, $r18, $r27, $r28;
        java.lang.String $r21;
        android.os.Message $r22, $r30;
        android.util.SparseIntArray $r23, $r24, $r32;
        com.android.server.appop.'-$$Lambda$AppOpsService$1CB62TNmPVdrHvls01D5LKYSp4w' $r26;
        java.lang.Boolean $r29;
        android.util.ArraySet r34;
        com.android.internal.util.function.QuintConsumer r35, r36;

        r0 := @this: com.android.server.appop.AppOpsService;

        r1 := @parameter0: com.android.server.appop.AppOpsService$UidState;

        $z0 = r1.<com.android.server.appop.AppOpsService$UidState: boolean hasForegroundWatchers>;

        if $z0 == 0 goto label17;

        $r4 = r1.<com.android.server.appop.AppOpsService$UidState: android.util.SparseBooleanArray foregroundOps>;

        $i5 = virtualinvoke $r4.<android.util.SparseBooleanArray: int size()>();

        i24 = $i5 - 1;

     label01:
        if i24 < 0 goto label17;

        $r5 = r1.<com.android.server.appop.AppOpsService$UidState: android.util.SparseBooleanArray foregroundOps>;

        $z2 = virtualinvoke $r5.<android.util.SparseBooleanArray: boolean valueAt(int)>(i24);

        if $z2 != 0 goto label02;

        goto label16;

     label02:
        $r6 = r1.<com.android.server.appop.AppOpsService$UidState: android.util.SparseBooleanArray foregroundOps>;

        i0 = virtualinvoke $r6.<android.util.SparseBooleanArray: int keyAt(int)>(i24);

        $i6 = staticinvoke <android.app.AppOpsManager: int resolveFirstUnrestrictedUidState(int)>(i0);

        l1 = (long) $i6;

        $i7 = r1.<com.android.server.appop.AppOpsService$UidState: int state>;

        l2 = (long) $i7;

        z8 = 0;

        $b8 = l2 cmp l1;

        if $b8 > 0 goto label03;

        z9 = 1;

        goto label04;

     label03:
        z9 = 0;

     label04:
        $i9 = r1.<com.android.server.appop.AppOpsService$UidState: int pendingState>;

        $l10 = (long) $i9;

        $b11 = $l10 cmp l1;

        if $b11 > 0 goto label05;

        z8 = 1;

     label05:
        if z9 != z8 goto label06;

        $i23 = r1.<com.android.server.appop.AppOpsService$UidState: int capability>;

        $i22 = r1.<com.android.server.appop.AppOpsService$UidState: int pendingCapability>;

        if $i23 != $i22 goto label06;

        $z7 = r1.<com.android.server.appop.AppOpsService$UidState: boolean appWidgetVisible>;

        $z6 = r1.<com.android.server.appop.AppOpsService$UidState: boolean pendingAppWidgetVisible>;

        if $z7 != $z6 goto label06;

        goto label16;

     label06:
        $r32 = r1.<com.android.server.appop.AppOpsService$UidState: android.util.SparseIntArray opModes>;

        if $r32 == null goto label07;

        $r23 = r1.<com.android.server.appop.AppOpsService$UidState: android.util.SparseIntArray opModes>;

        $i19 = virtualinvoke $r23.<android.util.SparseIntArray: int indexOfKey(int)>(i0);

        if $i19 < 0 goto label07;

        $r24 = r1.<com.android.server.appop.AppOpsService$UidState: android.util.SparseIntArray opModes>;

        $i20 = virtualinvoke $r24.<android.util.SparseIntArray: int get(int)>(i0);

        if $i20 != 4 goto label07;

        $r25 = r0.<com.android.server.appop.AppOpsService: android.os.Handler mHandler>;

        $r26 = <com.android.server.appop._$$Lambda$AppOpsService$1CB62TNmPVdrHvls01D5LKYSp4w: com.android.server.appop.'-$$Lambda$AppOpsService$1CB62TNmPVdrHvls01D5LKYSp4w' INSTANCE>;

        $r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $i21 = r1.<com.android.server.appop.AppOpsService$UidState: int uid>;

        $r28 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i21);

        $r29 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        r35 = (com.android.internal.util.function.QuintConsumer) $r26;

        $r30 = staticinvoke <com.android.internal.util.function.pooled.PooledLambda: android.os.Message obtainMessage(com.android.internal.util.function.QuintConsumer,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(r35, r0, $r27, $r28, $r29, null);

        virtualinvoke $r25.<android.os.Handler: boolean sendMessage(android.os.Message)>($r30);

        goto label16;

     label07:
        $r33 = r1.<com.android.server.appop.AppOpsService$UidState: android.util.ArrayMap pkgOps>;

        if $r33 == null goto label16;

        $r7 = r0.<com.android.server.appop.AppOpsService: android.util.SparseArray mOpModeWatchers>;

        $r8 = virtualinvoke $r7.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r34 = (android.util.ArraySet) $r8;

        if r34 == null goto label16;

        $i12 = virtualinvoke r34.<android.util.ArraySet: int size()>();

        i25 = $i12 - 1;

     label08:
        if i25 < 0 goto label15;

        $r9 = virtualinvoke r34.<android.util.ArraySet: java.lang.Object valueAt(int)>(i25);

        r2 = (com.android.server.appop.AppOpsService$ModeCallback) $r9;

        $i13 = r2.<com.android.server.appop.AppOpsService$ModeCallback: int mFlags>;

        $i14 = $i13 & 1;

        if $i14 == 0 goto label14;

        $i15 = r1.<com.android.server.appop.AppOpsService$UidState: int uid>;

        $z3 = virtualinvoke r2.<com.android.server.appop.AppOpsService$ModeCallback: boolean isWatchingUid(int)>($i15);

        if $z3 != 0 goto label09;

        goto label14;

     label09:
        $r10 = r1.<com.android.server.appop.AppOpsService$UidState: android.util.ArrayMap pkgOps>;

        $i16 = virtualinvoke $r10.<android.util.ArrayMap: int size()>();

        i26 = $i16 - 1;

     label10:
        if i26 < 0 goto label13;

        $r11 = r1.<com.android.server.appop.AppOpsService$UidState: android.util.ArrayMap pkgOps>;

        $r12 = virtualinvoke $r11.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i26);

        $r13 = (com.android.server.appop.AppOpsService$Ops) $r12;

        $r14 = virtualinvoke $r13.<com.android.server.appop.AppOpsService$Ops: java.lang.Object get(int)>(i0);

        r3 = (com.android.server.appop.AppOpsService$Op) $r14;

        if r3 != null goto label11;

        goto label12;

     label11:
        $i17 = staticinvoke <com.android.server.appop.AppOpsService$Op: int access$300(com.android.server.appop.AppOpsService$Op)>(r3);

        if $i17 != 4 goto label12;

        $r15 = r0.<com.android.server.appop.AppOpsService: android.os.Handler mHandler>;

        $r16 = <com.android.server.appop._$$Lambda$AppOpsService$FYLTtxqrHmv8Y5UdZ9ybXKsSJhs: com.android.server.appop.'-$$Lambda$AppOpsService$FYLTtxqrHmv8Y5UdZ9ybXKsSJhs' INSTANCE>;

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $i18 = r1.<com.android.server.appop.AppOpsService$UidState: int uid>;

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i18);

        $r19 = r1.<com.android.server.appop.AppOpsService$UidState: android.util.ArrayMap pkgOps>;

        $r20 = virtualinvoke $r19.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i26);

        $r21 = (java.lang.String) $r20;

        r36 = (com.android.internal.util.function.QuintConsumer) $r16;

        $r22 = staticinvoke <com.android.internal.util.function.pooled.PooledLambda: android.os.Message obtainMessage(com.android.internal.util.function.QuintConsumer,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(r36, r0, r2, $r17, $r18, $r21);

        virtualinvoke $r15.<android.os.Handler: boolean sendMessage(android.os.Message)>($r22);

        goto label12;

     label12:
        i26 = i26 + -1;

        goto label10;

     label13:
        goto label14;

     label14:
        i25 = i25 + -1;

        goto label08;

     label15:
        goto label16;

     label16:
        i24 = i24 + -1;

        goto label01;

     label17:
        $i3 = r1.<com.android.server.appop.AppOpsService$UidState: int pendingState>;

        r1.<com.android.server.appop.AppOpsService$UidState: int state> = $i3;

        $i4 = r1.<com.android.server.appop.AppOpsService$UidState: int pendingCapability>;

        r1.<com.android.server.appop.AppOpsService$UidState: int capability> = $i4;

        $z1 = r1.<com.android.server.appop.AppOpsService$UidState: boolean pendingAppWidgetVisible>;

        r1.<com.android.server.appop.AppOpsService$UidState: boolean appWidgetVisible> = $z1;

        r1.<com.android.server.appop.AppOpsService$UidState: long pendingStateCommitTime> = 0L;

        return;
    }

    static void dumpCommandHelp(java.io.PrintWriter)
    {
        java.io.PrintWriter r0;

        r0 := @parameter0: java.io.PrintWriter;

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("AppOps service (appops) commands:");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("  help");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("    Print this help text.");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("  start [--user <USER_ID>] [--attribution <ATTRIBUTION_TAG>] <PACKAGE | UID> <OP> ");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("    Starts a given operation for a particular application.");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("  stop [--user <USER_ID>] [--attribution <ATTRIBUTION_TAG>] <PACKAGE | UID> <OP> ");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("    Stops a given operation for a particular application.");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("  set [--user <USER_ID>] <[--uid] PACKAGE | UID> <OP> <MODE>");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("    Set the mode for a particular application and operation.");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("  get [--user <USER_ID>] [--attribution <ATTRIBUTION_TAG>] <PACKAGE | UID> [<OP>]");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("    Return the mode for a particular application and optional operation.");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("  query-op [--user <USER_ID>] <OP> [<MODE>]");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("    Print all packages that currently have the given op in the given mode.");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("  reset [--user <USER_ID>] [<PACKAGE>]");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("    Reset the given application or all applications to default modes.");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("  write-settings");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("    Immediately write pending changes to storage.");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("  read-settings");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("    Read the last written settings, replacing current state in RAM.");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("  options:");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("    <PACKAGE> an Android package name or its UID if prefixed by --uid");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("    <OP>      an AppOps operation.");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("    <MODE>    one of allow, ignore, deny, or default");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("    <USER_ID> the user id under which the package is installed. If --user is");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("              not specified, the current user is assumed.");

        return;
    }

    private void dumpHelp(java.io.PrintWriter)
    {
        com.android.server.appop.AppOpsService r0;
        java.io.PrintWriter r1;

        r0 := @this: com.android.server.appop.AppOpsService;

        r1 := @parameter0: java.io.PrintWriter;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("AppOps service (appops) dump options:");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  -h");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Print this help text.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  --op [OP]");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Limit output to data associated with the given app op code.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  --mode [MODE]");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Limit output to data associated with the given app op mode.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  --package [PACKAGE]");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Limit output to data associated with the given package name.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  --attributionTag [attributionTag]");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Limit output to data associated with the given attribution tag.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  --watchers");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Only output the watcher sections.");

        return;
    }

    private void dumpStatesLocked(java.io.PrintWriter, long, com.android.server.appop.AppOpsService$Op, java.lang.String, long, java.text.SimpleDateFormat, java.util.Date, java.lang.String)
    {
        com.android.server.appop.AppOpsService r0;
        java.io.PrintWriter r1;
        long l0, l1, l3, l4, $l5, $l7, $l9, $l12, $l13, l15, l19, l21, l22;
        java.text.SimpleDateFormat r2;
        java.util.Date r3;
        java.lang.String r4, r7, $r17, $r21, $r26, $r27, $r28, $r29, r31, r32, r34, r35, r36;
        android.app.AppOpsManager$AttributedOpEntry r5;
        android.util.ArraySet r6;
        int i2, $i8, i16, i17, i18, i20, i23, i24;
        android.app.AppOpsManager$OpEntry $r8;
        java.util.Map $r9;
        java.lang.Object $r10, $r12, $r23, $r24;
        android.util.ArrayMap $r11, $r13, $r22;
        boolean $z0;
        java.lang.StringBuilder $r14, $r18;
        byte $b6, $b10, $b11, $b14;
        java.lang.Long $r25;
        com.android.server.appop.AppOpsService$Op r30;
        android.app.AppOpsManager$OpEventProxyInfo r33;
        com.android.server.appop.AppOpsService$AttributedOp r37;
        com.android.server.appop.AppOpsService$InProgressStartOpEvent r38;

        r0 := @this: com.android.server.appop.AppOpsService;

        r1 := @parameter0: java.io.PrintWriter;

        l0 := @parameter1: long;

        r30 := @parameter2: com.android.server.appop.AppOpsService$Op;

        r31 := @parameter3: java.lang.String;

        l15 := @parameter4: long;

        r2 := @parameter5: java.text.SimpleDateFormat;

        r3 := @parameter6: java.util.Date;

        r4 := @parameter7: java.lang.String;

        r32 = r4;

        $r8 = virtualinvoke r30.<com.android.server.appop.AppOpsService$Op: android.app.AppOpsManager$OpEntry createSingleAttributionEntryLocked(java.lang.String)>(r31);

        $r9 = virtualinvoke $r8.<android.app.AppOpsManager$OpEntry: java.util.Map getAttributedOpEntries()>();

        $r10 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>(r31);

        r5 = (android.app.AppOpsManager$AttributedOpEntry) $r10;

        r6 = virtualinvoke r5.<android.app.AppOpsManager$AttributedOpEntry: android.util.ArraySet collectKeys()>();

        i16 = virtualinvoke r6.<android.util.ArraySet: int size()>();

        i17 = 0;

     label01:
        if i17 >= i16 goto label09;

        $r24 = virtualinvoke r6.<android.util.ArraySet: java.lang.Object valueAt(int)>(i17);

        $r25 = (java.lang.Long) $r24;

        l1 = virtualinvoke $r25.<java.lang.Long: long longValue()>();

        i2 = staticinvoke <android.app.AppOpsManager: int extractUidStateFromKey(long)>(l1);

        i18 = staticinvoke <android.app.AppOpsManager: int extractFlagsFromKey(long)>(l1);

        l3 = virtualinvoke r5.<android.app.AppOpsManager$AttributedOpEntry: long getLastAccessTime(int,int,int)>(i2, i2, i18);

        l4 = virtualinvoke r5.<android.app.AppOpsManager$AttributedOpEntry: long getLastRejectTime(int,int,int)>(i2, i2, i18);

        l19 = virtualinvoke r5.<android.app.AppOpsManager$AttributedOpEntry: long getLastDuration(int,int,int)>(i2, i2, i18);

        r33 = virtualinvoke r5.<android.app.AppOpsManager$AttributedOpEntry: android.app.AppOpsManager$OpEventProxyInfo getLastProxyInfo(int,int,int)>(i2, i2, i18);

        if r33 == null goto label02;

        r34 = virtualinvoke r33.<android.app.AppOpsManager$OpEventProxyInfo: java.lang.String getPackageName()>();

        r7 = virtualinvoke r33.<android.app.AppOpsManager$OpEventProxyInfo: java.lang.String getAttributionTag()>();

        i20 = virtualinvoke r33.<android.app.AppOpsManager$OpEventProxyInfo: int getUid()>();

        r35 = r34;

        r36 = r7;

        goto label03;

     label02:
        r35 = null;

        r36 = null;

        i20 = -1;

     label03:
        $b10 = l3 cmp 0L;

        if $b10 <= 0 goto label06;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r32);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("Access: ");

        $r28 = staticinvoke <android.app.AppOpsManager: java.lang.String keyToString(long)>(l1);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r28);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" ");

        virtualinvoke r3.<java.util.Date: void setTime(long)>(l3);

        $r29 = virtualinvoke r2.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>(r3);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r29);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" (");

        $l13 = l3 - l15;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>($l13, r1);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(")");

        $b14 = l19 cmp 0L;

        if $b14 <= 0 goto label04;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" duration=");

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>(l19, r1);

     label04:
        if i20 < 0 goto label05;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" proxy[");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("uid=");

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>(i20);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(", pkg=");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r35);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(", attributionTag=");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r36);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("]");

        goto label05;

     label05:
        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        goto label06;

     label06:
        $b11 = l4 cmp 0L;

        if $b11 <= 0 goto label08;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r4);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("Reject: ");

        $r26 = staticinvoke <android.app.AppOpsManager: java.lang.String keyToString(long)>(l1);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r26);

        virtualinvoke r3.<java.util.Date: void setTime(long)>(l4);

        $r27 = virtualinvoke r2.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>(r3);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r27);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" (");

        $l12 = l4 - l15;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>($l12, r1);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(")");

        if i20 < 0 goto label07;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" proxy[");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("uid=");

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>(i20);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(", pkg=");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r35);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(", attributionTag=");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r36);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("]");

     label07:
        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        goto label08;

     label08:
        i17 = i17 + 1;

        r32 = r4;

        goto label01;

     label09:
        $r11 = r30.<com.android.server.appop.AppOpsService$Op: android.util.ArrayMap mAttributions>;

        $r12 = virtualinvoke $r11.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r31);

        r37 = (com.android.server.appop.AppOpsService$AttributedOp) $r12;

        $z0 = virtualinvoke r37.<com.android.server.appop.AppOpsService$AttributedOp: boolean isRunning()>();

        if $z0 == 0 goto label12;

        l21 = 9223372036854775807L;

        l22 = 0L;

        $r13 = staticinvoke <com.android.server.appop.AppOpsService$AttributedOp: android.util.ArrayMap access$1700(com.android.server.appop.AppOpsService$AttributedOp)>(r37);

        i23 = virtualinvoke $r13.<android.util.ArrayMap: int size()>();

        i24 = 0;

     label10:
        if i24 >= i23 goto label11;

        $r22 = staticinvoke <com.android.server.appop.AppOpsService$AttributedOp: android.util.ArrayMap access$1700(com.android.server.appop.AppOpsService$AttributedOp)>(r37);

        $r23 = virtualinvoke $r22.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i24);

        r38 = (com.android.server.appop.AppOpsService$InProgressStartOpEvent) $r23;

        $l7 = virtualinvoke r38.<com.android.server.appop.AppOpsService$InProgressStartOpEvent: long getStartElapsedTime()>();

        l21 = staticinvoke <java.lang.Math: long min(long,long)>(l21, $l7);

        $i8 = r38.<com.android.server.appop.AppOpsService$InProgressStartOpEvent: int numUnfinishedStarts>;

        $l9 = (long) $i8;

        l22 = staticinvoke <java.lang.Math: long max(long,long)>(l22, $l9);

        i24 = i24 + 1;

        goto label10;

     label11:
        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r32);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Running start at: ");

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r17);

        $l5 = l0 - l21;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>($l5, r1);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        $b6 = l22 cmp 1L;

        if $b6 <= 0 goto label12;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r32);

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("startNesting=");

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r21);

        virtualinvoke r1.<java.io.PrintWriter: void println(long)>(l22);

     label12:
        return;
    }

    private void dumpStatesLocked(java.io.PrintWriter, java.lang.String, int, long, com.android.server.appop.AppOpsService$Op, long, java.text.SimpleDateFormat, java.util.Date, java.lang.String)
    {
        com.android.server.appop.AppOpsService r0;
        java.io.PrintWriter r1;
        java.lang.String r2, r6, $r13, $r16, $r22, $r26, r30;
        int i0, i3, $i4, i5;
        long l1, l2;
        com.android.server.appop.AppOpsService$Op r3;
        java.text.SimpleDateFormat r4;
        java.util.Date r5;
        android.util.ArrayMap $r8, $r11, $r17, $r27;
        java.lang.StringBuilder $r9, $r19, $r23;
        java.lang.Object $r12, $r18, $r28;
        boolean $z0;

        r0 := @this: com.android.server.appop.AppOpsService;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        l1 := @parameter3: long;

        r3 := @parameter4: com.android.server.appop.AppOpsService$Op;

        l2 := @parameter5: long;

        r4 := @parameter6: java.text.SimpleDateFormat;

        r5 := @parameter7: java.util.Date;

        r6 := @parameter8: java.lang.String;

        $r8 = r3.<com.android.server.appop.AppOpsService$Op: android.util.ArrayMap mAttributions>;

        i3 = virtualinvoke $r8.<android.util.ArrayMap: int size()>();

        i5 = 0;

     label1:
        if i5 >= i3 goto label4;

        $i4 = i0 & 4;

        if $i4 == 0 goto label2;

        $r27 = r3.<com.android.server.appop.AppOpsService$Op: android.util.ArrayMap mAttributions>;

        $r28 = virtualinvoke $r27.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i5);

        $z0 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r28, r2);

        if $z0 != 0 goto label2;

        goto label3;

     label2:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r11 = r3.<com.android.server.appop.AppOpsService$Op: android.util.ArrayMap mAttributions>;

        $r12 = virtualinvoke $r11.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i5);

        $r13 = (java.lang.String) $r12;

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=[\n");

        $r16 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r16);

        $r17 = r3.<com.android.server.appop.AppOpsService$Op: android.util.ArrayMap mAttributions>;

        $r18 = virtualinvoke $r17.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i5);

        r30 = (java.lang.String) $r18;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.appop.AppOpsService: void dumpStatesLocked(java.io.PrintWriter,long,com.android.server.appop.AppOpsService$Op,java.lang.String,long,java.text.SimpleDateFormat,java.util.Date,java.lang.String)>(r1, l1, r3, r30, l2, r4, r5, $r22);

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]\n");

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r26);

     label3:
        i5 = i5 + 1;

        goto label1;

     label4:
        return;
    }

    private void enforceManageAppOpsModes(int, int, int)
    {
        com.android.server.appop.AppOpsService r0;
        int i0, i1, $i2, $i3, $i4, i5, i6, $i7, $i8;
        android.util.SparseIntArray $r2, $r3;
        java.lang.Throwable $r4;
        android.content.Context $r5;

        r0 := @this: com.android.server.appop.AppOpsService;

        i5 := @parameter0: int;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i2 = staticinvoke <android.os.Process: int myPid()>();

        if i5 != $i2 goto label01;

        return;

     label01:
        i6 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        entermonitor r0;

     label02:
        $r2 = r0.<com.android.server.appop.AppOpsService: android.util.SparseIntArray mProfileOwners>;

        if $r2 == null goto label06;

        $r3 = r0.<com.android.server.appop.AppOpsService: android.util.SparseIntArray mProfileOwners>;

        $i3 = virtualinvoke $r3.<android.util.SparseIntArray: int get(int,int)>(i6, -1);

        if $i3 != i0 goto label06;

     label03:
        if i1 < 0 goto label06;

     label04:
        $i4 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i1);

        if i6 != $i4 goto label06;

        exitmonitor r0;

     label05:
        return;

     label06:
        exitmonitor r0;

     label07:
        $r5 = r0.<com.android.server.appop.AppOpsService: android.content.Context mContext>;

        $i7 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i8 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke $r5.<android.content.Context: void enforcePermission(java.lang.String,int,int,java.lang.String)>("android.permission.MANAGE_APP_OPS_MODES", $i7, $i8, null);

        return;

     label08:
        $r4 := @caughtexception;

     label09:
        exitmonitor r0;

     label10:
        throw $r4;

        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    private void ensureHistoricalOpRequestIsValid(int, java.lang.String, java.lang.String, java.util.List, int, long, long, int)
    {
        com.android.server.appop.AppOpsService r0;
        int i0, i1, i4, $i5, $i9, $i10, $i11;
        java.lang.String r1, r2;
        java.util.List r3;
        long l2, l3;
        boolean z1, z2, z3, z4, z5, z6;
        byte $b12;

        r0 := @this: com.android.server.appop.AppOpsService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.util.List;

        i1 := @parameter4: int;

        l2 := @parameter5: long;

        l3 := @parameter6: long;

        i4 := @parameter7: int;

        $i5 = i1 & 1;

        if $i5 == 0 goto label03;

        if i0 == -1 goto label01;

        z1 = 1;

        goto label02;

     label01:
        z1 = 0;

     label02:
        staticinvoke <com.android.internal.util.Preconditions: void checkArgument(boolean)>(z1);

        goto label06;

     label03:
        if i0 != -1 goto label04;

        z2 = 1;

        goto label05;

     label04:
        z2 = 0;

     label05:
        staticinvoke <com.android.internal.util.Preconditions: void checkArgument(boolean)>(z2);

     label06:
        $i9 = i1 & 2;

        if $i9 == 0 goto label07;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        goto label10;

     label07:
        if r1 != null goto label08;

        z3 = 1;

        goto label09;

     label08:
        z3 = 0;

     label09:
        staticinvoke <com.android.internal.util.Preconditions: void checkArgument(boolean)>(z3);

     label10:
        $i10 = i1 & 4;

        if $i10 != 0 goto label13;

        if r2 != null goto label11;

        z4 = 1;

        goto label12;

     label11:
        z4 = 0;

     label12:
        staticinvoke <com.android.internal.util.Preconditions: void checkArgument(boolean)>(z4);

     label13:
        $i11 = i1 & 8;

        if $i11 == 0 goto label14;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r3);

        goto label17;

     label14:
        if r3 != null goto label15;

        z5 = 1;

        goto label16;

     label15:
        z5 = 0;

     label16:
        staticinvoke <com.android.internal.util.Preconditions: void checkArgument(boolean)>(z5);

     label17:
        staticinvoke <com.android.internal.util.Preconditions: int checkFlagsArgument(int,int)>(i1, 15);

        staticinvoke <com.android.internal.util.Preconditions: long checkArgumentNonnegative(long)>(l2);

        z6 = 0;

        $b12 = l3 cmp l2;

        if $b12 <= 0 goto label18;

        z6 = 1;

     label18:
        staticinvoke <com.android.internal.util.Preconditions: void checkArgument(boolean)>(z6);

        staticinvoke <com.android.internal.util.Preconditions: int checkFlagsArgument(int,int)>(i4, 31);

        return;
    }

    private void evalAllForegroundOpsLocked()
    {
        com.android.server.appop.AppOpsService r0;
        com.android.server.appop.AppOpsService$UidState r1;
        android.util.SparseArray $r2, $r3, $r6;
        int $i0, i1;
        java.lang.Object $r4;
        android.util.SparseBooleanArray $r5;

        r0 := @this: com.android.server.appop.AppOpsService;

        $r2 = r0.<com.android.server.appop.AppOpsService: android.util.SparseArray mUidStates>;

        $i0 = virtualinvoke $r2.<android.util.SparseArray: int size()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label3;

        $r3 = r0.<com.android.server.appop.AppOpsService: android.util.SparseArray mUidStates>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        r1 = (com.android.server.appop.AppOpsService$UidState) $r4;

        $r5 = r1.<com.android.server.appop.AppOpsService$UidState: android.util.SparseBooleanArray foregroundOps>;

        if $r5 == null goto label2;

        $r6 = r0.<com.android.server.appop.AppOpsService: android.util.SparseArray mOpModeWatchers>;

        virtualinvoke r1.<com.android.server.appop.AppOpsService$UidState: void evalForegroundOps(android.util.SparseArray)>($r6);

     label2:
        i1 = i1 + -1;

        goto label1;

     label3:
        return;
    }

    private android.util.Pair getAsyncNotedOpsKey(java.lang.String, int)
    {
        com.android.server.appop.AppOpsService r0;
        java.lang.String r1;
        int i0;
        android.util.Pair $r2;
        java.lang.Integer $r3;

        r0 := @this: com.android.server.appop.AppOpsService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = new android.util.Pair;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        specialinvoke $r2.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>(r1, $r3);

        return $r2;
    }

    private android.app.AppOpsManager$RestrictionBypass getBypassforPackage(com.android.server.pm.parsing.pkg.AndroidPackage)
    {
        com.android.server.appop.AppOpsService r0;
        com.android.server.pm.parsing.pkg.AndroidPackage r1;
        boolean z0, z1;
        android.content.Context $r2;
        int $i0, $i1;
        android.app.AppOpsManager$RestrictionBypass $r3;

        r0 := @this: com.android.server.appop.AppOpsService;

        r1 := @parameter0: com.android.server.pm.parsing.pkg.AndroidPackage;

        z0 = interfaceinvoke r1.<com.android.server.pm.parsing.pkg.AndroidPackage: boolean isPrivileged()>();

        $r2 = r0.<com.android.server.appop.AppOpsService: android.content.Context mContext>;

        $i0 = interfaceinvoke r1.<com.android.server.pm.parsing.pkg.AndroidPackage: int getUid()>();

        $i1 = virtualinvoke $r2.<android.content.Context: int checkPermission(java.lang.String,int,int)>("android.permission.EXEMPT_FROM_AUDIO_RECORD_RESTRICTIONS", -1, $i0);

        if $i1 != 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        $r3 = new android.app.AppOpsManager$RestrictionBypass;

        specialinvoke $r3.<android.app.AppOpsManager$RestrictionBypass: void <init>(boolean,boolean)>(z0, z1);

        return $r3;
    }

    private static android.app.AppOpsManager$OpEntry getOpEntryForResult(com.android.server.appop.AppOpsService$Op, long)
    {
        com.android.server.appop.AppOpsService$Op r0;
        long l0;
        android.app.AppOpsManager$OpEntry $r1;

        r0 := @parameter0: com.android.server.appop.AppOpsService$Op;

        l0 := @parameter1: long;

        $r1 = virtualinvoke r0.<com.android.server.appop.AppOpsService$Op: android.app.AppOpsManager$OpEntry createEntryLocked()>();

        return $r1;
    }

    private com.android.server.appop.AppOpsService$Op getOpLocked(int, int, java.lang.String, java.lang.String, android.app.AppOpsManager$RestrictionBypass, boolean)
    {
        com.android.server.appop.AppOpsService r0;
        int i0, i1;
        java.lang.String r1, r4;
        android.app.AppOpsManager$RestrictionBypass r2;
        boolean z0;
        com.android.server.appop.AppOpsService$Op $r3;
        com.android.server.appop.AppOpsService$Ops r5;

        r0 := @this: com.android.server.appop.AppOpsService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r4 := @parameter2: java.lang.String;

        r1 := @parameter3: java.lang.String;

        r2 := @parameter4: android.app.AppOpsManager$RestrictionBypass;

        z0 := @parameter5: boolean;

        r5 = specialinvoke r0.<com.android.server.appop.AppOpsService: com.android.server.appop.AppOpsService$Ops getOpsLocked(int,java.lang.String,java.lang.String,android.app.AppOpsManager$RestrictionBypass,boolean)>(i1, r4, r1, r2, z0);

        if r5 != null goto label1;

        return null;

     label1:
        $r3 = specialinvoke r0.<com.android.server.appop.AppOpsService: com.android.server.appop.AppOpsService$Op getOpLocked(com.android.server.appop.AppOpsService$Ops,int,int,boolean)>(r5, i0, i1, z0);

        return $r3;
    }

    private com.android.server.appop.AppOpsService$Op getOpLocked(com.android.server.appop.AppOpsService$Ops, int, int, boolean)
    {
        com.android.server.appop.AppOpsService r0;
        com.android.server.appop.AppOpsService$Ops r1;
        int i0, i1;
        boolean z0;
        com.android.server.appop.AppOpsService$Op r2, $r4, r7;
        java.lang.Object $r3;
        java.lang.String $r5;
        com.android.server.appop.AppOpsService$UidState $r6;

        r0 := @this: com.android.server.appop.AppOpsService;

        r1 := @parameter0: com.android.server.appop.AppOpsService$Ops;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        $r3 = virtualinvoke r1.<com.android.server.appop.AppOpsService$Ops: java.lang.Object get(int)>(i0);

        r2 = (com.android.server.appop.AppOpsService$Op) $r3;

        r7 = r2;

        if r2 != null goto label2;

        if z0 != 0 goto label1;

        return null;

     label1:
        $r4 = new com.android.server.appop.AppOpsService$Op;

        $r6 = r1.<com.android.server.appop.AppOpsService$Ops: com.android.server.appop.AppOpsService$UidState uidState>;

        $r5 = r1.<com.android.server.appop.AppOpsService$Ops: java.lang.String packageName>;

        specialinvoke $r4.<com.android.server.appop.AppOpsService$Op: void <init>(com.android.server.appop.AppOpsService,com.android.server.appop.AppOpsService$UidState,java.lang.String,int,int)>(r0, $r6, $r5, i0, i1);

        r7 = $r4;

        virtualinvoke r1.<com.android.server.appop.AppOpsService$Ops: void put(int,java.lang.Object)>(i0, $r4);

     label2:
        if z0 == 0 goto label3;

        specialinvoke r0.<com.android.server.appop.AppOpsService: void scheduleWriteLocked()>();

     label3:
        return r7;
    }

    private com.android.server.appop.AppOpsService$Ops getOpsLocked(int, java.lang.String, java.lang.String, android.app.AppOpsManager$RestrictionBypass, boolean)
    {
        com.android.server.appop.AppOpsService r0;
        int i0;
        java.lang.String r1, r2;
        android.app.AppOpsManager$RestrictionBypass r3;
        boolean z0;
        com.android.server.appop.AppOpsService$UidState r4;
        com.android.server.appop.AppOpsService$Ops r5, $r10, r14;
        android.util.ArrayMap $r6, $r7, $r11, $r13;
        java.lang.Object $r8;
        android.util.ArraySet $r9;

        r0 := @this: com.android.server.appop.AppOpsService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: android.app.AppOpsManager$RestrictionBypass;

        z0 := @parameter4: boolean;

        r4 = specialinvoke r0.<com.android.server.appop.AppOpsService: com.android.server.appop.AppOpsService$UidState getUidStateLocked(int,boolean)>(i0, z0);

        if r4 != null goto label1;

        return null;

     label1:
        $r6 = r4.<com.android.server.appop.AppOpsService$UidState: android.util.ArrayMap pkgOps>;

        if $r6 != null goto label3;

        if z0 != 0 goto label2;

        return null;

     label2:
        $r13 = new android.util.ArrayMap;

        specialinvoke $r13.<android.util.ArrayMap: void <init>()>();

        r4.<com.android.server.appop.AppOpsService$UidState: android.util.ArrayMap pkgOps> = $r13;

     label3:
        $r7 = r4.<com.android.server.appop.AppOpsService$UidState: android.util.ArrayMap pkgOps>;

        $r8 = virtualinvoke $r7.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r5 = (com.android.server.appop.AppOpsService$Ops) $r8;

        r14 = r5;

        if r5 != null goto label5;

        if z0 != 0 goto label4;

        return null;

     label4:
        $r10 = new com.android.server.appop.AppOpsService$Ops;

        specialinvoke $r10.<com.android.server.appop.AppOpsService$Ops: void <init>(java.lang.String,com.android.server.appop.AppOpsService$UidState)>(r1, r4);

        r14 = $r10;

        $r11 = r4.<com.android.server.appop.AppOpsService$UidState: android.util.ArrayMap pkgOps>;

        virtualinvoke $r11.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r10);

     label5:
        if z0 == 0 goto label7;

        if r3 == null goto label6;

        r14.<com.android.server.appop.AppOpsService$Ops: android.app.AppOpsManager$RestrictionBypass bypass> = r3;

     label6:
        if r2 == null goto label7;

        $r9 = r14.<com.android.server.appop.AppOpsService$Ops: android.util.ArraySet knownAttributionTags>;

        virtualinvoke $r9.<android.util.ArraySet: boolean add(java.lang.Object)>(r2);

     label7:
        return r14;
    }

    private java.util.List getPackageListAndResample()
    {
        com.android.server.appop.AppOpsService r0;
        java.lang.Throwable $r1;
        java.util.List r2;

        r0 := @this: com.android.server.appop.AppOpsService;

        r2 = specialinvoke r0.<com.android.server.appop.AppOpsService: java.util.List getPackageNamesForSampling()>();

        entermonitor r0;

     label1:
        specialinvoke r0.<com.android.server.appop.AppOpsService: void resamplePackageAndAppOpLocked(java.util.List)>(r2);

        exitmonitor r0;

     label2:
        return r2;

     label3:
        $r1 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private java.util.List getPackageNamesForSampling()
    {
        com.android.server.appop.AppOpsService r0;
        android.content.pm.PackageManagerInternal r2;
        java.util.Iterator r3;
        android.content.pm.PackageInfo r4;
        java.util.ArrayList $r5;
        java.lang.Object $r6, $r9;
        com.android.server.pm.PackageList $r7;
        java.util.List $r8;
        boolean $z0, $z1;
        java.lang.String $r10, $r12;
        int $i0, $i1;
        android.content.Context $r11;

        r0 := @this: com.android.server.appop.AppOpsService;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        $r6 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/content/pm/PackageManagerInternal;");

        r2 = (android.content.pm.PackageManagerInternal) $r6;

        $r7 = virtualinvoke r2.<android.content.pm.PackageManagerInternal: com.android.server.pm.PackageList getPackageList()>();

        $r8 = virtualinvoke $r7.<com.android.server.pm.PackageList: java.util.List getPackageNames()>();

        r3 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r9 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        $r10 = (java.lang.String) $r9;

        $i0 = staticinvoke <android.os.Process: int myUid()>();

        $r11 = r0.<com.android.server.appop.AppOpsService: android.content.Context mContext>;

        $i1 = virtualinvoke $r11.<android.content.Context: int getUserId()>();

        r4 = virtualinvoke r2.<android.content.pm.PackageManagerInternal: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int,int,int)>($r10, 4096, $i0, $i1);

        $z1 = specialinvoke r0.<com.android.server.appop.AppOpsService: boolean isSamplingTarget(android.content.pm.PackageInfo)>(r4);

        if $z1 == 0 goto label2;

        $r12 = r4.<android.content.pm.PackageInfo: java.lang.String packageName>;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r12);

     label2:
        goto label1;

     label3:
        return $r5;
    }

    private static java.lang.String[] getPackagesForUid(int)
    {
        int i0;
        android.content.pm.IPackageManager $r0, $r2;
        java.lang.String[] $r1, r4;
        android.os.RemoteException $r3;

        i0 := @parameter0: int;

        r4 = null;

        $r0 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        if $r0 == null goto label4;

     label1:
        $r2 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        r4 = interfaceinvoke $r2.<android.content.pm.IPackageManager: java.lang.String[] getPackagesForUid(int)>(i0);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        r4 = null;

     label4:
        if r4 != null goto label5;

        $r1 = <libcore.util.EmptyArray: java.lang.String[] STRING>;

        return $r1;

     label5:
        return r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private java.util.List getRuntimeAppOpsList()
    {
        com.android.server.appop.AppOpsService r0;
        java.util.ArrayList $r2;
        boolean $z0;
        java.lang.String $r3;
        int i0;

        r0 := @this: com.android.server.appop.AppOpsService;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        i0 = 0;

     label1:
        if i0 >= 100 goto label3;

        $z0 = virtualinvoke r0.<com.android.server.appop.AppOpsService: boolean shouldCollectNotes(int)>(i0);

        if $z0 == 0 goto label2;

        $r3 = staticinvoke <android.app.AppOpsManager: java.lang.String opToPublicName(int)>(i0);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return $r2;
    }

    private com.android.server.appop.AppOpsService$UidState getUidStateLocked(int, boolean)
    {
        com.android.server.appop.AppOpsService r0;
        int i0;
        boolean z0;
        android.util.SparseArray $r1, $r4;
        java.lang.Object $r2;
        com.android.server.appop.AppOpsService$UidState $r3, r5;

        r0 := @this: com.android.server.appop.AppOpsService;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r1 = r0.<com.android.server.appop.AppOpsService: android.util.SparseArray mUidStates>;

        $r2 = virtualinvoke $r1.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r5 = (com.android.server.appop.AppOpsService$UidState) $r2;

        if r5 != null goto label2;

        if z0 != 0 goto label1;

        return null;

     label1:
        $r3 = new com.android.server.appop.AppOpsService$UidState;

        specialinvoke $r3.<com.android.server.appop.AppOpsService$UidState: void <init>(com.android.server.appop.AppOpsService,int)>(r0, i0);

        r5 = $r3;

        $r4 = r0.<com.android.server.appop.AppOpsService: android.util.SparseArray mUidStates>;

        virtualinvoke $r4.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, $r3);

        goto label3;

     label2:
        specialinvoke r0.<com.android.server.appop.AppOpsService: void updatePendingStateIfNeededLocked(com.android.server.appop.AppOpsService$UidState)>(r5);

     label3:
        return r5;
    }

    private void initializeRarelyUsedPackagesList(android.util.ArraySet)
    {
        com.android.server.appop.AppOpsService r0;
        android.util.ArraySet r1;
        android.app.AppOpsManager r2;
        java.util.List r3;
        android.content.Context $r4;
        java.lang.Object $r5;
        android.app.AppOpsManager$HistoricalOpsRequest$Builder $r6, $r10, $r11;
        java.time.Instant $r7, $r9;
        java.time.temporal.ChronoUnit $r8;
        long $l0, $l1;
        android.app.AppOpsManager$HistoricalOpsRequest $r12;
        com.android.server.appop.AppOpsService$9 $r13;
        java.util.concurrent.Executor $r14;

        r0 := @this: com.android.server.appop.AppOpsService;

        r1 := @parameter0: android.util.ArraySet;

        $r4 = r0.<com.android.server.appop.AppOpsService: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/app/AppOpsManager;");

        r2 = (android.app.AppOpsManager) $r5;

        r3 = specialinvoke r0.<com.android.server.appop.AppOpsService: java.util.List getRuntimeAppOpsList()>();

        $r6 = new android.app.AppOpsManager$HistoricalOpsRequest$Builder;

        $r7 = staticinvoke <java.time.Instant: java.time.Instant now()>();

        $r8 = <java.time.temporal.ChronoUnit: java.time.temporal.ChronoUnit DAYS>;

        $r9 = virtualinvoke $r7.<java.time.Instant: java.time.Instant minus(long,java.time.temporal.TemporalUnit)>(7L, $r8);

        $l0 = virtualinvoke $r9.<java.time.Instant: long toEpochMilli()>();

        $l1 = staticinvoke <java.lang.Math: long max(long,long)>($l0, 0L);

        specialinvoke $r6.<android.app.AppOpsManager$HistoricalOpsRequest$Builder: void <init>(long,long)>($l1, 9223372036854775807L);

        $r10 = virtualinvoke $r6.<android.app.AppOpsManager$HistoricalOpsRequest$Builder: android.app.AppOpsManager$HistoricalOpsRequest$Builder setOpNames(java.util.List)>(r3);

        $r11 = virtualinvoke $r10.<android.app.AppOpsManager$HistoricalOpsRequest$Builder: android.app.AppOpsManager$HistoricalOpsRequest$Builder setFlags(int)>(9);

        $r12 = virtualinvoke $r11.<android.app.AppOpsManager$HistoricalOpsRequest$Builder: android.app.AppOpsManager$HistoricalOpsRequest build()>();

        $r14 = <android.os.AsyncTask: java.util.concurrent.Executor THREAD_POOL_EXECUTOR>;

        $r13 = new com.android.server.appop.AppOpsService$9;

        specialinvoke $r13.<com.android.server.appop.AppOpsService$9: void <init>(com.android.server.appop.AppOpsService,android.util.ArraySet)>(r0, r1);

        virtualinvoke r2.<android.app.AppOpsManager: void getHistoricalOps(android.app.AppOpsManager$HistoricalOpsRequest,java.util.concurrent.Executor,java.util.function.Consumer)>($r12, $r14, $r13);

        return;
    }

    private boolean isOpRestrictedDueToSuspend(int, java.lang.String, int)
    {
        com.android.server.appop.AppOpsService r0;
        int i0, i1, $i2;
        java.lang.String r1;
        int[] $r2;
        boolean $z0, $z1;
        java.lang.Object $r3;
        android.content.pm.PackageManagerInternal $r4;

        r0 := @this: com.android.server.appop.AppOpsService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        $r2 = <com.android.server.appop.AppOpsService: int[] OPS_RESTRICTED_ON_SUSPEND>;

        $z0 = staticinvoke <com.android.internal.util.ArrayUtils: boolean contains(int[],int)>($r2, i0);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r3 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/content/pm/PackageManagerInternal;");

        $r4 = (android.content.pm.PackageManagerInternal) $r3;

        $i2 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i1);

        $z1 = virtualinvoke $r4.<android.content.pm.PackageManagerInternal: boolean isPackageSuspended(java.lang.String,int)>(r1, $i2);

        return $z1;
    }

    private boolean isOpRestrictedLocked(int, int, java.lang.String, android.app.AppOpsManager$RestrictionBypass)
    {
        com.android.server.appop.AppOpsService r0;
        int i0, i1, i2, i3, i4;
        android.app.AppOpsManager$RestrictionBypass r1, r8;
        android.util.ArrayMap $r2, $r3;
        java.lang.Object $r4;
        com.android.server.appop.AppOpsService$ClientRestrictionState $r5;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: com.android.server.appop.AppOpsService;

        i3 := @parameter0: int;

        i0 := @parameter1: int;

        r7 := @parameter2: java.lang.String;

        r1 := @parameter3: android.app.AppOpsManager$RestrictionBypass;

        i1 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i3);

        $r2 = r0.<com.android.server.appop.AppOpsService: android.util.ArrayMap mOpUserRestrictions>;

        i2 = virtualinvoke $r2.<android.util.ArrayMap: int size()>();

        i4 = 0;

     label01:
        if i4 >= i2 goto label17;

        $r3 = r0.<com.android.server.appop.AppOpsService: android.util.ArrayMap mOpUserRestrictions>;

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i4);

        $r5 = (com.android.server.appop.AppOpsService$ClientRestrictionState) $r4;

        $z0 = virtualinvoke $r5.<com.android.server.appop.AppOpsService$ClientRestrictionState: boolean hasRestriction(int,java.lang.String,int)>(i0, r7, i1);

        if $z0 == 0 goto label16;

        r8 = staticinvoke <android.app.AppOpsManager: android.app.AppOpsManager$RestrictionBypass opAllowSystemBypassRestriction(int)>(i0);

        if r8 == null goto label15;

        entermonitor r0;

     label02:
        $z1 = r8.<android.app.AppOpsManager$RestrictionBypass: boolean isPrivileged>;

        if $z1 == 0 goto label06;

     label03:
        if r1 == null goto label06;

     label04:
        $z3 = r1.<android.app.AppOpsManager$RestrictionBypass: boolean isPrivileged>;

        if $z3 == 0 goto label06;

        exitmonitor r0;

     label05:
        return 0;

     label06:
        $z4 = r8.<android.app.AppOpsManager$RestrictionBypass: boolean isRecordAudioRestrictionExcept>;

        if $z4 == 0 goto label10;

     label07:
        if r1 == null goto label10;

     label08:
        $z2 = r1.<android.app.AppOpsManager$RestrictionBypass: boolean isRecordAudioRestrictionExcept>;

        if $z2 == 0 goto label10;

        exitmonitor r0;

     label09:
        return 0;

     label10:
        exitmonitor r0;

     label11:
        goto label15;

     label12:
        $r6 := @caughtexception;

     label13:
        exitmonitor r0;

     label14:
        throw $r6;

     label15:
        return 1;

     label16:
        i4 = i4 + 1;

        goto label01;

     label17:
        return 0;

        catch java.lang.Throwable from label02 to label03 with label12;
        catch java.lang.Throwable from label04 to label05 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    private boolean isSamplingTarget(android.content.pm.PackageInfo)
    {
        com.android.server.appop.AppOpsService r0;
        int i0, $i1, i2;
        android.content.Context $r1;
        android.content.pm.PackageManager $r2;
        android.content.pm.PackageManager$NameNotFoundException $r3;
        android.content.pm.PackageInfo r4;
        java.lang.String[] r5;
        java.lang.String r6;
        android.content.pm.PermissionInfo r7;

        r0 := @this: com.android.server.appop.AppOpsService;

        r4 := @parameter0: android.content.pm.PackageInfo;

        if r4 != null goto label1;

        return 0;

     label1:
        r5 = r4.<android.content.pm.PackageInfo: java.lang.String[] requestedPermissions>;

        if r5 != null goto label2;

        return 0;

     label2:
        i0 = lengthof r5;

        i2 = 0;

     label3:
        if i2 >= i0 goto label8;

        r6 = r5[i2];

     label4:
        $r1 = r0.<com.android.server.appop.AppOpsService: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r7 = virtualinvoke $r2.<android.content.pm.PackageManager: android.content.pm.PermissionInfo getPermissionInfo(java.lang.String,int)>(r6, 0);

     label5:
        $i1 = virtualinvoke r7.<android.content.pm.PermissionInfo: int getProtection()>();

        if $i1 != 1 goto label7;

        return 1;

     label6:
        $r3 := @caughtexception;

     label7:
        i2 = i2 + 1;

        goto label3;

     label8:
        return 0;

        catch android.content.pm.PackageManager$NameNotFoundException from label4 to label5 with label6;
    }

    public static void lambda$1CB62TNmPVdrHvls01D5LKYSp4w(com.android.server.appop.AppOpsService, int, int, boolean, com.android.internal.app.IAppOpsCallback)
    {
        com.android.server.appop.AppOpsService r0;
        int i0, i1;
        boolean z0;
        com.android.internal.app.IAppOpsCallback r1;

        r0 := @parameter0: com.android.server.appop.AppOpsService;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        r1 := @parameter4: com.android.internal.app.IAppOpsCallback;

        specialinvoke r0.<com.android.server.appop.AppOpsService: void notifyOpChangedForAllPkgsInUid(int,int,boolean,com.android.internal.app.IAppOpsCallback)>(i0, i1, z0, r1);

        return;
    }

    public static void lambda$7TpfX4NXXUoI4jqIGxhEk65lHLs(com.android.server.appop.AppOpsService, android.util.ArraySet, int, int, java.lang.String, int)
    {
        com.android.server.appop.AppOpsService r0;
        android.util.ArraySet r1;
        int i0, i1, i2;
        java.lang.String r2;

        r0 := @parameter0: com.android.server.appop.AppOpsService;

        r1 := @parameter1: android.util.ArraySet;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r2 := @parameter4: java.lang.String;

        i2 := @parameter5: int;

        specialinvoke r0.<com.android.server.appop.AppOpsService: void notifyOpStarted(android.util.ArraySet,int,int,java.lang.String,int)>(r1, i0, i1, r2, i2);

        return;
    }

    public static void lambda$AfBLuTvVESlqN91IyRX84hMV5nE(com.android.server.appop.AppOpsService, android.util.ArraySet, int, int, java.lang.String, int)
    {
        com.android.server.appop.AppOpsService r0;
        android.util.ArraySet r1;
        int i0, i1, i2;
        java.lang.String r2;

        r0 := @parameter0: com.android.server.appop.AppOpsService;

        r1 := @parameter1: android.util.ArraySet;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r2 := @parameter4: java.lang.String;

        i2 := @parameter5: int;

        specialinvoke r0.<com.android.server.appop.AppOpsService: void notifyOpChecked(android.util.ArraySet,int,int,java.lang.String,int)>(r1, i0, i1, r2, i2);

        return;
    }

    public static void lambda$CVMS-lLMRyZYA1tmqvyuOloKBu0(com.android.server.appop.AppOpsService, long, int)
    {
        com.android.server.appop.AppOpsService r0;
        long l0;
        int i1;

        r0 := @parameter0: com.android.server.appop.AppOpsService;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        specialinvoke r0.<com.android.server.appop.AppOpsService: void updatePendingState(long,int)>(l0, i1);

        return;
    }

    public static void lambda$FYLTtxqrHmv8Y5UdZ9ybXKsSJhs(com.android.server.appop.AppOpsService, com.android.server.appop.AppOpsService$ModeCallback, int, int, java.lang.String)
    {
        com.android.server.appop.AppOpsService r0;
        com.android.server.appop.AppOpsService$ModeCallback r1;
        int i0, i1;
        java.lang.String r2;

        r0 := @parameter0: com.android.server.appop.AppOpsService;

        r1 := @parameter1: com.android.server.appop.AppOpsService$ModeCallback;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r2 := @parameter4: java.lang.String;

        specialinvoke r0.<com.android.server.appop.AppOpsService: void notifyOpChanged(com.android.server.appop.AppOpsService$ModeCallback,int,int,java.lang.String)>(r1, i0, i1, r2);

        return;
    }

    public static void lambda$GUeKjlbzT65s86vaxy5gvOajuhw(com.android.server.appop.AppOpsService, int, int)
    {
        com.android.server.appop.AppOpsService r0;
        int i0, i1;

        r0 := @parameter0: com.android.server.appop.AppOpsService;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<com.android.server.appop.AppOpsService: void notifyWatchersOfChange(int,int)>(i0, i1);

        return;
    }

    public static void lambda$NDUi03ZZuuR42-RDEIQ0UELKycc(com.android.server.appop.AppOpsService, android.util.ArraySet, int, int, java.lang.String)
    {
        com.android.server.appop.AppOpsService r0;
        android.util.ArraySet r1;
        int i0, i1;
        java.lang.String r2;

        r0 := @parameter0: com.android.server.appop.AppOpsService;

        r1 := @parameter1: android.util.ArraySet;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r2 := @parameter4: java.lang.String;

        specialinvoke r0.<com.android.server.appop.AppOpsService: void notifyOpChanged(android.util.ArraySet,int,int,java.lang.String)>(r1, i0, i1, r2);

        return;
    }

    public static void lambda$ac4Ra3Yhj0OQzvkaL2dLbsuLAmQ(com.android.server.appop.AppOpsService, android.util.ArraySet, int, int, java.lang.String, boolean)
    {
        com.android.server.appop.AppOpsService r0;
        android.util.ArraySet r1;
        int i0, i1;
        java.lang.String r2;
        boolean z0;

        r0 := @parameter0: com.android.server.appop.AppOpsService;

        r1 := @parameter1: android.util.ArraySet;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r2 := @parameter4: java.lang.String;

        z0 := @parameter5: boolean;

        specialinvoke r0.<com.android.server.appop.AppOpsService: void notifyOpActiveChanged(android.util.ArraySet,int,int,java.lang.String,boolean)>(r1, i0, i1, r2, z0);

        return;
    }

    static void lambda$collectAsyncNotedOp$2(android.app.AsyncNotedAppOp, boolean[], int, java.lang.String, int, java.lang.String, com.android.internal.app.IAppOpsAsyncNotedCallback)
    {
        int i0, i1;
        java.lang.String r0, r1, $r14;
        com.android.internal.app.IAppOpsAsyncNotedCallback r2;
        android.os.RemoteException $r3;
        java.lang.StringBuilder $r4;
        android.app.AsyncNotedAppOp r15;
        boolean[] r16;

        r15 := @parameter0: android.app.AsyncNotedAppOp;

        r16 := @parameter1: boolean[];

        i0 := @parameter2: int;

        r0 := @parameter3: java.lang.String;

        i1 := @parameter4: int;

        r1 := @parameter5: java.lang.String;

        r2 := @parameter6: com.android.internal.app.IAppOpsAsyncNotedCallback;

     label1:
        interfaceinvoke r2.<com.android.internal.app.IAppOpsAsyncNotedCallback: void opNoted(android.app.AsyncNotedAppOp)>(r15);

     label2:
        r16[0] = 1;

        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not forward noteOp of ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r14 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("AppOps", $r14, $r3);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    static void lambda$collectNoteOpCallsForValidation$3(com.android.server.appop.AppOpsService)
    {
        com.android.server.appop.AppOpsService r0;

        r0 := @parameter0: com.android.server.appop.AppOpsService;

        specialinvoke r0.<com.android.server.appop.AppOpsService: void writeNoteOps()>();

        return;
    }

    private static void lambda$collectNoteOpCallsForValidation$4(com.android.server.appop.AppOpsService)
    {
        com.android.server.appop.AppOpsService r0;
        com.android.server.appop._$$Lambda$AppOpsService$IcRpnjSl3QKeLKuAUwu4sWn4PL4 $r1;

        r0 := @parameter0: com.android.server.appop.AppOpsService;

        $r1 = new com.android.server.appop._$$Lambda$AppOpsService$IcRpnjSl3QKeLKuAUwu4sWn4PL4;

        specialinvoke $r1.<com.android.server.appop._$$Lambda$AppOpsService$IcRpnjSl3QKeLKuAUwu4sWn4PL4: void <init>(com.android.server.appop.AppOpsService)>(r0);

        staticinvoke <android.os.AsyncTask: void execute(java.lang.Runnable)>($r1);

        return;
    }

    public static int lambda$gQy7GOuCV6GbjQtdNhNG6xld8I4(com.android.server.appop.AppOpsService, int, int, java.lang.String, boolean)
    {
        com.android.server.appop.AppOpsService r0;
        int i0, i1, $i2;
        java.lang.String r1;
        boolean z0;

        r0 := @parameter0: com.android.server.appop.AppOpsService;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: java.lang.String;

        z0 := @parameter4: boolean;

        $i2 = specialinvoke r0.<com.android.server.appop.AppOpsService: int checkOperationImpl(int,int,java.lang.String,boolean)>(i0, i1, r1, z0);

        return $i2;
    }

    static void lambda$getHistoricalOps$1(android.os.RemoteCallback)
    {
        android.os.RemoteCallback r0;
        android.os.Bundle $r1;

        r0 := @parameter0: android.os.RemoteCallback;

        $r1 = new android.os.Bundle;

        specialinvoke $r1.<android.os.Bundle: void <init>()>();

        virtualinvoke r0.<android.os.RemoteCallback: void sendResult(android.os.Bundle)>($r1);

        return;
    }

    public static java.util.List lambda$m04KE9D7Jmkj_GEr7pcdIY29xtA(com.android.server.appop.AppOpsService)
    {
        com.android.server.appop.AppOpsService r0;
        java.util.List $r1;

        r0 := @parameter0: com.android.server.appop.AppOpsService;

        $r1 = specialinvoke r0.<com.android.server.appop.AppOpsService: java.util.List getPackageListAndResample()>();

        return $r1;
    }

    public static int lambda$mfUWTdGevxEoIUv1cEPEFG0qAaI(com.android.server.appop.AppOpsService, int, int, int, java.lang.String)
    {
        com.android.server.appop.AppOpsService r0;
        int i0, i1, i2, $i3;
        java.lang.String r1;

        r0 := @parameter0: com.android.server.appop.AppOpsService;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r1 := @parameter4: java.lang.String;

        $i3 = specialinvoke r0.<com.android.server.appop.AppOpsService: int checkAudioOperationImpl(int,int,int,java.lang.String)>(i0, i1, i2, r1);

        return $i3;
    }

    public static int lambda$p0ZLmKR_KoZGKlw2X3zSLMlh_MU(com.android.server.appop.AppOpsService, int, int, java.lang.String, java.lang.String, boolean, java.lang.String, boolean)
    {
        com.android.server.appop.AppOpsService r0;
        int i0, i1, $i2;
        java.lang.String r1, r2, r3;
        boolean z0, z1;

        r0 := @parameter0: com.android.server.appop.AppOpsService;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: java.lang.String;

        r2 := @parameter4: java.lang.String;

        z0 := @parameter5: boolean;

        r3 := @parameter6: java.lang.String;

        z1 := @parameter7: boolean;

        $i2 = specialinvoke r0.<com.android.server.appop.AppOpsService: int noteOperationImpl(int,int,java.lang.String,java.lang.String,boolean,java.lang.String,boolean)>(i0, i1, r1, r2, z0, r3, z1);

        return $i2;
    }

    private int noteOperationImpl(int, int, java.lang.String, java.lang.String, boolean, java.lang.String, boolean)
    {
        com.android.server.appop.AppOpsService r0;
        int i0, i1, $i2;
        java.lang.String r1, r2, r3, r4;
        boolean z0, z1;

        r0 := @this: com.android.server.appop.AppOpsService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r3 := @parameter2: java.lang.String;

        r1 := @parameter3: java.lang.String;

        z0 := @parameter4: boolean;

        r2 := @parameter5: java.lang.String;

        z1 := @parameter6: boolean;

        specialinvoke r0.<com.android.server.appop.AppOpsService: void verifyIncomingUid(int)>(i1);

        specialinvoke r0.<com.android.server.appop.AppOpsService: void verifyIncomingOp(int)>(i0);

        r4 = staticinvoke <com.android.server.appop.AppOpsService: java.lang.String resolvePackageName(int,java.lang.String)>(i1, r3);

        if r4 != null goto label1;

        return 1;

     label1:
        $i2 = specialinvoke r0.<com.android.server.appop.AppOpsService: int noteOperationUnchecked(int,int,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,int,boolean,java.lang.String,boolean)>(i0, i1, r4, r1, -1, null, null, 1, z0, r2, z1);

        return $i2;
    }

    private int noteOperationUnchecked(int, int, java.lang.String, java.lang.String, int, java.lang.String, java.lang.String, int, boolean, java.lang.String, boolean)
    {
        com.android.server.appop.AppOpsService r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, i12, i13, i14;
        java.lang.String r1, r2, r3, r4, $r20, r23;
        boolean z0, z1, $z2, $z3;
        com.android.server.appop.AppOpsService$Ops r5;
        android.util.SparseIntArray $r6, $r7, $r8;
        android.util.ArrayMap $r16;
        java.lang.Object $r17;
        com.android.server.appop.AppOpsService$InProgressStartOpEvent $r18;
        long $l9;
        java.lang.Throwable $r21, $r22;
        android.app.AppOpsManager$RestrictionBypass r24;
        com.android.server.appop.AppOpsService$Op r25;
        com.android.server.appop.AppOpsService$AttributedOp r26;
        java.lang.StringBuilder r27;
        com.android.server.appop.AppOpsService$UidState r28;

        r0 := @this: com.android.server.appop.AppOpsService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r23 := @parameter2: java.lang.String;

        r1 := @parameter3: java.lang.String;

        i2 := @parameter4: int;

        r2 := @parameter5: java.lang.String;

        r3 := @parameter6: java.lang.String;

        i3 := @parameter7: int;

        z0 := @parameter8: boolean;

        r4 := @parameter9: java.lang.String;

        z1 := @parameter10: boolean;

     label01:
        r24 = specialinvoke r0.<com.android.server.appop.AppOpsService: android.app.AppOpsManager$RestrictionBypass verifyAndGetBypass(int,java.lang.String,java.lang.String)>(i1, r23, r1);

     label02:
        entermonitor r0;

     label03:
        r5 = specialinvoke r0.<com.android.server.appop.AppOpsService: com.android.server.appop.AppOpsService$Ops getOpsLocked(int,java.lang.String,java.lang.String,android.app.AppOpsManager$RestrictionBypass,boolean)>(i1, r23, r1, r24, 1);

     label04:
        if r5 != null goto label07;

     label05:
        specialinvoke r0.<com.android.server.appop.AppOpsService: void scheduleOpNotedIfNeededLocked(int,int,java.lang.String,int)>(i0, i1, r23, 1);

        exitmonitor r0;

     label06:
        return 2;

     label07:
        r25 = specialinvoke r0.<com.android.server.appop.AppOpsService: com.android.server.appop.AppOpsService$Op getOpLocked(com.android.server.appop.AppOpsService$Ops,int,int,boolean)>(r5, i0, i1, 1);

        $z2 = specialinvoke r0.<com.android.server.appop.AppOpsService: boolean isOpRestrictedLocked(int,int,java.lang.String,android.app.AppOpsManager$RestrictionBypass)>(i1, i0, r23, r24);

        if $z2 == 0 goto label09;

        specialinvoke r0.<com.android.server.appop.AppOpsService: void scheduleOpNotedIfNeededLocked(int,int,java.lang.String,int)>(i0, i1, r23, 1);

        exitmonitor r0;

     label08:
        return 1;

     label09:
        r26 = staticinvoke <com.android.server.appop.AppOpsService$Op: com.android.server.appop.AppOpsService$AttributedOp access$1000(com.android.server.appop.AppOpsService$Op,com.android.server.appop.AppOpsService$Op,java.lang.String)>(r25, r25, r1);

        $z3 = virtualinvoke r26.<com.android.server.appop.AppOpsService$AttributedOp: boolean isRunning()>();

        if $z3 == 0 goto label10;

        r27 = new java.lang.StringBuilder;

        specialinvoke r27.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Noting op not finished: uid ");

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" pkg ");

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r23);

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" code ");

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" startTime of in progress event=");

        $r16 = staticinvoke <com.android.server.appop.AppOpsService$AttributedOp: android.util.ArrayMap access$1700(com.android.server.appop.AppOpsService$AttributedOp)>(r26);

        $r17 = virtualinvoke $r16.<android.util.ArrayMap: java.lang.Object valueAt(int)>(0);

        $r18 = (com.android.server.appop.AppOpsService$InProgressStartOpEvent) $r17;

        $l9 = virtualinvoke $r18.<com.android.server.appop.AppOpsService$InProgressStartOpEvent: long getStartTime()>();

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l9);

        $r20 = virtualinvoke r27.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AppOps", $r20);

     label10:
        i12 = staticinvoke <android.app.AppOpsManager: int opToSwitch(int)>(i0);

        r28 = r5.<com.android.server.appop.AppOpsService$Ops: com.android.server.appop.AppOpsService$UidState uidState>;

        $r6 = r28.<com.android.server.appop.AppOpsService$UidState: android.util.SparseIntArray opModes>;

        if $r6 == null goto label15;

        $r7 = r28.<com.android.server.appop.AppOpsService$UidState: android.util.SparseIntArray opModes>;

        $i6 = virtualinvoke $r7.<android.util.SparseIntArray: int indexOfKey(int)>(i12);

        if $i6 < 0 goto label15;

        $r8 = r28.<com.android.server.appop.AppOpsService$UidState: android.util.SparseIntArray opModes>;

        $i7 = virtualinvoke $r8.<android.util.SparseIntArray: int get(int)>(i12);

        i13 = virtualinvoke r28.<com.android.server.appop.AppOpsService$UidState: int evalMode(int,int)>(i0, $i7);

     label11:
        if i13 == 0 goto label14;

     label12:
        $i8 = r28.<com.android.server.appop.AppOpsService$UidState: int state>;

        virtualinvoke r26.<com.android.server.appop.AppOpsService$AttributedOp: void rejected(int,int)>($i8, i3);

        specialinvoke r0.<com.android.server.appop.AppOpsService: void scheduleOpNotedIfNeededLocked(int,int,java.lang.String,int)>(i0, i1, r23, i13);

        exitmonitor r0;

     label13:
        return i13;

     label14:
        goto label22;

     label15:
        if i12 == i0 goto label18;

     label16:
        r25 = specialinvoke r0.<com.android.server.appop.AppOpsService: com.android.server.appop.AppOpsService$Op getOpLocked(com.android.server.appop.AppOpsService$Ops,int,int,boolean)>(r5, i12, i1, 1);

     label17:
        goto label18;

     label18:
        i14 = virtualinvoke r25.<com.android.server.appop.AppOpsService$Op: int evalMode()>();

     label19:
        if i14 == 0 goto label22;

     label20:
        $i5 = r28.<com.android.server.appop.AppOpsService$UidState: int state>;

        virtualinvoke r26.<com.android.server.appop.AppOpsService$AttributedOp: void rejected(int,int)>($i5, i3);

        specialinvoke r0.<com.android.server.appop.AppOpsService: void scheduleOpNotedIfNeededLocked(int,int,java.lang.String,int)>(i0, i1, r23, i14);

        exitmonitor r0;

     label21:
        return i14;

     label22:
        specialinvoke r0.<com.android.server.appop.AppOpsService: void scheduleOpNotedIfNeededLocked(int,int,java.lang.String,int)>(i0, i1, r23, 0);

        $i4 = r28.<com.android.server.appop.AppOpsService$UidState: int state>;

        virtualinvoke r26.<com.android.server.appop.AppOpsService$AttributedOp: void accessed(int,java.lang.String,java.lang.String,int,int)>(i2, r2, r3, $i4, i3);

     label23:
        if z0 == 0 goto label26;

     label24:
        specialinvoke r0.<com.android.server.appop.AppOpsService: void collectAsyncNotedOp(int,java.lang.String,int,java.lang.String,int,java.lang.String,boolean)>(i1, r23, i0, r1, i3, r4, z1);

     label25:
        goto label26;

     label26:
        exitmonitor r0;

     label27:
        return 0;

     label28:
        $r22 := @caughtexception;

     label29:
        exitmonitor r0;

     label30:
        throw $r22;

     label31:
        $r21 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("AppOps", "noteOperation", $r21);

        return 2;

        catch java.lang.SecurityException from label01 to label02 with label31;
        catch java.lang.Throwable from label03 to label04 with label28;
        catch java.lang.Throwable from label05 to label06 with label28;
        catch java.lang.Throwable from label07 to label08 with label28;
        catch java.lang.Throwable from label09 to label10 with label28;
        catch java.lang.Throwable from label10 to label11 with label28;
        catch java.lang.Throwable from label12 to label13 with label28;
        catch java.lang.Throwable from label16 to label17 with label28;
        catch java.lang.Throwable from label18 to label19 with label28;
        catch java.lang.Throwable from label20 to label21 with label28;
        catch java.lang.Throwable from label22 to label23 with label28;
        catch java.lang.Throwable from label24 to label25 with label28;
        catch java.lang.Throwable from label26 to label27 with label28;
        catch java.lang.Throwable from label29 to label30 with label28;
    }

    private void notifyOpActiveChanged(android.util.ArraySet, int, int, java.lang.String, boolean)
    {
        com.android.server.appop.AppOpsService r0;
        int i0, i1, i3, i4;
        java.lang.String r1;
        boolean z0;
        long l2;
        java.lang.Object $r2;
        com.android.internal.app.IAppOpsActiveCallback $r3;
        android.os.RemoteException $r4;
        java.lang.Throwable $r5;
        android.util.ArraySet r6;
        com.android.server.appop.AppOpsService$ActiveCallback r7;

        r0 := @this: com.android.server.appop.AppOpsService;

        r6 := @parameter0: android.util.ArraySet;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: java.lang.String;

        z0 := @parameter4: boolean;

        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label01:
        i3 = virtualinvoke r6.<android.util.ArraySet: int size()>();

     label02:
        i4 = 0;

     label03:
        if i4 >= i3 goto label09;

     label04:
        $r2 = virtualinvoke r6.<android.util.ArraySet: java.lang.Object valueAt(int)>(i4);

        r7 = (com.android.server.appop.AppOpsService$ActiveCallback) $r2;

     label05:
        $r3 = r7.<com.android.server.appop.AppOpsService$ActiveCallback: com.android.internal.app.IAppOpsActiveCallback mCallback>;

        interfaceinvoke $r3.<com.android.internal.app.IAppOpsActiveCallback: void opActiveChanged(int,int,java.lang.String,boolean)>(i0, i1, r1, z0);

     label06:
        goto label08;

     label07:
        $r4 := @caughtexception;

     label08:
        i4 = i4 + 1;

        goto label03;

     label09:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        return;

     label10:
        $r5 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw $r5;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch android.os.RemoteException from label05 to label06 with label07;
        catch java.lang.Throwable from label05 to label06 with label10;
    }

    private void notifyOpChanged(android.util.ArraySet, int, int, java.lang.String)
    {
        com.android.server.appop.AppOpsService r0;
        android.util.ArraySet r1;
        int i0, i1, $i2, i3;
        java.lang.String r2;
        java.lang.Object $r3;
        com.android.server.appop.AppOpsService$ModeCallback $r4;

        r0 := @this: com.android.server.appop.AppOpsService;

        r1 := @parameter0: android.util.ArraySet;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: java.lang.String;

        i3 = 0;

     label1:
        $i2 = virtualinvoke r1.<android.util.ArraySet: int size()>();

        if i3 >= $i2 goto label2;

        $r3 = virtualinvoke r1.<android.util.ArraySet: java.lang.Object valueAt(int)>(i3);

        $r4 = (com.android.server.appop.AppOpsService$ModeCallback) $r3;

        specialinvoke r0.<com.android.server.appop.AppOpsService: void notifyOpChanged(com.android.server.appop.AppOpsService$ModeCallback,int,int,java.lang.String)>($r4, i0, i1, r2);

        i3 = i3 + 1;

        goto label1;

     label2:
        return;
    }

    private void notifyOpChanged(com.android.server.appop.AppOpsService$ModeCallback, int, int, java.lang.String)
    {
        com.android.server.appop.AppOpsService r0;
        int i0, $i2, $i3, $i4, $i5, i6, i7, i9, i10, i11;
        java.lang.String r1;
        long l1;
        com.android.internal.app.IAppOpsCallback $r3;
        android.util.SparseArray $r4;
        java.lang.Object $r5;
        android.os.RemoteException $r6;
        java.lang.Throwable $r7;
        com.android.server.appop.AppOpsService$ModeCallback r8;
        int[] r9;

        r0 := @this: com.android.server.appop.AppOpsService;

        r8 := @parameter0: com.android.server.appop.AppOpsService$ModeCallback;

        i6 := @parameter1: int;

        i0 := @parameter2: int;

        r1 := @parameter3: java.lang.String;

        if i0 == -2 goto label01;

        $i4 = r8.<com.android.server.appop.AppOpsService$ModeCallback: int mWatchingUid>;

        if $i4 < 0 goto label01;

        $i5 = r8.<com.android.server.appop.AppOpsService$ModeCallback: int mWatchingUid>;

        if $i5 == i0 goto label01;

        return;

     label01:
        i7 = r8.<com.android.server.appop.AppOpsService$ModeCallback: int mWatchedOpCode>;

        if i7 != -2 goto label02;

        $r4 = r0.<com.android.server.appop.AppOpsService: android.util.SparseArray mSwitchedOps>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object get(int)>(i6);

        r9 = (int[]) $r5;

        goto label04;

     label02:
        $i2 = r8.<com.android.server.appop.AppOpsService$ModeCallback: int mWatchedOpCode>;

        if $i2 != -1 goto label03;

        r9 = newarray (int)[1];

        r9[0] = i6;

        goto label04;

     label03:
        r9 = newarray (int)[1];

        $i3 = r8.<com.android.server.appop.AppOpsService$ModeCallback: int mWatchedOpCode>;

        r9[0] = $i3;

     label04:
        i9 = lengthof r9;

        i10 = 0;

     label05:
        if i10 >= i9 goto label11;

        i11 = r9[i10];

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label06:
        $r3 = r8.<com.android.server.appop.AppOpsService$ModeCallback: com.android.internal.app.IAppOpsCallback mCallback>;

        interfaceinvoke $r3.<com.android.internal.app.IAppOpsCallback: void opChanged(int,int,java.lang.String)>(i11, i0, r1);

     label07:
        goto label10;

     label08:
        $r7 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r7;

     label09:
        $r6 := @caughtexception;

     label10:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        i10 = i10 + 1;

        goto label05;

     label11:
        return;

        catch android.os.RemoteException from label06 to label07 with label09;
        catch java.lang.Throwable from label06 to label07 with label08;
    }

    private void notifyOpChangedForAllPkgsInUid(int, int, boolean, com.android.internal.app.IAppOpsCallback)
    {
        com.android.server.appop.AppOpsService r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, i8, i9, i10, i11, i12, i13, i14, i15;
        boolean z0;
        com.android.server.appop.AppOpsService$ModeCallback r1, r41, r52;
        java.lang.Object $r2, $r3, $r4, $r5, $r19, $r22, $r23, $r24, $r26;
        android.os.Handler $r6, $r11;
        com.android.server.appop.'-$$Lambda$AppOpsService$FYLTtxqrHmv8Y5UdZ9ybXKsSJhs' $r7, $r12;
        java.lang.Integer $r8, $r9, $r13, $r14;
        android.os.Message $r10, $r16;
        java.lang.String $r15, r46, r54;
        android.util.ArrayMap $r17, $r21, r37, r38, r43, r45, r48, r56, r57;
        android.os.IBinder $r18;
        java.lang.Throwable $r28, $r29, $r30, $r31, $r32, $r33, $r34, r44;
        com.android.internal.app.IAppOpsCallback r35;
        java.lang.String[] r36;
        android.util.SparseArray r39;
        android.util.ArraySet r40, r47, r49, r50, r53, r55, r58;
        com.android.internal.util.function.QuintConsumer r59, r60;

        r0 := @this: com.android.server.appop.AppOpsService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        r35 := @parameter3: com.android.internal.app.IAppOpsCallback;

        r36 = staticinvoke <com.android.server.appop.AppOpsService: java.lang.String[] getPackagesForUid(int)>(i1);

        r37 = null;

        r38 = null;

        entermonitor r0;

     label01:
        r39 = r0.<com.android.server.appop.AppOpsService: android.util.SparseArray mOpModeWatchers>;

     label02:
        $r2 = virtualinvoke r39.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r40 = (android.util.ArraySet) $r2;

     label03:
        if r40 == null goto label18;

     label04:
        i8 = virtualinvoke r40.<android.util.ArraySet: int size()>();

     label05:
        i9 = 0;

     label06:
        r37 = r38;

        if i9 >= i8 goto label18;

     label07:
        $r26 = virtualinvoke r40.<android.util.ArraySet: java.lang.Object valueAt(int)>(i9);

        r41 = (com.android.server.appop.AppOpsService$ModeCallback) $r26;

     label08:
        if z0 == 0 goto label11;

     label09:
        $i6 = r41.<com.android.server.appop.AppOpsService$ModeCallback: int mFlags>;

        $i7 = $i6 & 1;

        if $i7 != 0 goto label11;

     label10:
        goto label16;

     label11:
        r55 = new android.util.ArraySet;

        specialinvoke r55.<android.util.ArraySet: void <init>()>();

        staticinvoke <java.util.Collections: boolean addAll(java.util.Collection,java.lang.Object[])>(r55, r36);

     label12:
        r43 = r38;

        if r38 != null goto label14;

     label13:
        r56 = new android.util.ArrayMap;

        r43 = r56;

        specialinvoke r56.<android.util.ArrayMap: void <init>()>();

     label14:
        virtualinvoke r43.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r41, r55);

     label15:
        r38 = r43;

     label16:
        i9 = i9 + 1;

        goto label06;

     label17:
        $r29 := @caughtexception;

        r44 = $r29;

        goto label55;

     label18:
        i10 = lengthof r36;

     label19:
        i11 = 0;

        r45 = r37;

     label20:
        if i11 >= i10 goto label42;

        r46 = r36[i11];

     label21:
        $r21 = r0.<com.android.server.appop.AppOpsService: android.util.ArrayMap mPackageModeWatchers>;

        $r22 = virtualinvoke $r21.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r46);

        r47 = (android.util.ArraySet) $r22;

     label22:
        r48 = r45;

        if r47 == null goto label40;

        if r45 != null goto label25;

     label23:
        r57 = new android.util.ArrayMap;

        r45 = r57;

        specialinvoke r57.<android.util.ArrayMap: void <init>()>();

     label24:
        goto label25;

     label25:
        i2 = virtualinvoke r47.<android.util.ArraySet: int size()>();

     label26:
        i12 = 0;

     label27:
        if i12 >= i2 goto label38;

     label28:
        $r23 = virtualinvoke r47.<android.util.ArraySet: java.lang.Object valueAt(int)>(i12);

        r1 = (com.android.server.appop.AppOpsService$ModeCallback) $r23;

     label29:
        if z0 == 0 goto label32;

     label30:
        $i4 = r1.<com.android.server.appop.AppOpsService$ModeCallback: int mFlags>;

        $i5 = $i4 & 1;

        if $i5 != 0 goto label32;

     label31:
        goto label37;

     label32:
        $r24 = virtualinvoke r45.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r49 = (android.util.ArraySet) $r24;

     label33:
        r50 = r49;

        if r49 != null goto label36;

     label34:
        r58 = new android.util.ArraySet;

        r50 = r58;

        specialinvoke r58.<android.util.ArraySet: void <init>()>();

     label35:
        virtualinvoke r45.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r58);

     label36:
        virtualinvoke r50.<android.util.ArraySet: boolean add(java.lang.Object)>(r46);

     label37:
        i12 = i12 + 1;

        goto label27;

     label38:
        r48 = r45;

        goto label40;

     label39:
        $r28 := @caughtexception;

        r44 = $r28;

        goto label55;

     label40:
        i11 = i11 + 1;

        r45 = r48;

        goto label20;

     label41:
        $r31 := @caughtexception;

        r44 = $r31;

        goto label55;

     label42:
        if r45 == null goto label44;

        if r35 == null goto label44;

     label43:
        $r17 = r0.<com.android.server.appop.AppOpsService: android.util.ArrayMap mModeWatchers>;

        $r18 = interfaceinvoke r35.<com.android.internal.app.IAppOpsCallback: android.os.IBinder asBinder()>();

        $r19 = virtualinvoke $r17.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r18);

        virtualinvoke r45.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>($r19);

     label44:
        exitmonitor r0;

     label45:
        if r45 != null goto label46;

        return;

     label46:
        i13 = 0;

     label47:
        $i3 = virtualinvoke r45.<android.util.ArrayMap: int size()>();

        if i13 >= $i3 goto label51;

        $r3 = virtualinvoke r45.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i13);

        r52 = (com.android.server.appop.AppOpsService$ModeCallback) $r3;

        $r4 = virtualinvoke r45.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i13);

        r53 = (android.util.ArraySet) $r4;

        if r53 != null goto label48;

        $r11 = r0.<com.android.server.appop.AppOpsService: android.os.Handler mHandler>;

        $r12 = <com.android.server.appop._$$Lambda$AppOpsService$FYLTtxqrHmv8Y5UdZ9ybXKsSJhs: com.android.server.appop.'-$$Lambda$AppOpsService$FYLTtxqrHmv8Y5UdZ9ybXKsSJhs' INSTANCE>;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r15 = (java.lang.String) null;

        r59 = (com.android.internal.util.function.QuintConsumer) $r12;

        $r16 = staticinvoke <com.android.internal.util.function.pooled.PooledLambda: android.os.Message obtainMessage(com.android.internal.util.function.QuintConsumer,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(r59, r0, r52, $r13, $r14, $r15);

        virtualinvoke $r11.<android.os.Handler: boolean sendMessage(android.os.Message)>($r16);

        goto label50;

     label48:
        i14 = virtualinvoke r53.<android.util.ArraySet: int size()>();

        i15 = 0;

     label49:
        if i15 >= i14 goto label50;

        $r5 = virtualinvoke r53.<android.util.ArraySet: java.lang.Object valueAt(int)>(i15);

        r54 = (java.lang.String) $r5;

        $r6 = r0.<com.android.server.appop.AppOpsService: android.os.Handler mHandler>;

        $r7 = <com.android.server.appop._$$Lambda$AppOpsService$FYLTtxqrHmv8Y5UdZ9ybXKsSJhs: com.android.server.appop.'-$$Lambda$AppOpsService$FYLTtxqrHmv8Y5UdZ9ybXKsSJhs' INSTANCE>;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        r60 = (com.android.internal.util.function.QuintConsumer) $r7;

        $r10 = staticinvoke <com.android.internal.util.function.pooled.PooledLambda: android.os.Message obtainMessage(com.android.internal.util.function.QuintConsumer,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(r60, r0, r52, $r8, $r9, r54);

        virtualinvoke $r6.<android.os.Handler: boolean sendMessage(android.os.Message)>($r10);

        i15 = i15 + 1;

        goto label49;

     label50:
        i13 = i13 + 1;

        goto label47;

     label51:
        return;

     label52:
        $r32 := @caughtexception;

        r44 = $r32;

        goto label55;

     label53:
        $r34 := @caughtexception;

        r44 = $r34;

        goto label55;

     label54:
        $r30 := @caughtexception;

        r44 = $r30;

     label55:
        exitmonitor r0;

     label56:
        throw r44;

     label57:
        $r33 := @caughtexception;

        r44 = $r33;

        goto label55;

        catch java.lang.Throwable from label01 to label02 with label54;
        catch java.lang.Throwable from label02 to label03 with label53;
        catch java.lang.Throwable from label04 to label05 with label17;
        catch java.lang.Throwable from label07 to label08 with label17;
        catch java.lang.Throwable from label09 to label10 with label17;
        catch java.lang.Throwable from label11 to label12 with label17;
        catch java.lang.Throwable from label13 to label14 with label17;
        catch java.lang.Throwable from label14 to label15 with label17;
        catch java.lang.Throwable from label18 to label19 with label53;
        catch java.lang.Throwable from label21 to label22 with label41;
        catch java.lang.Throwable from label23 to label24 with label41;
        catch java.lang.Throwable from label25 to label26 with label39;
        catch java.lang.Throwable from label28 to label29 with label39;
        catch java.lang.Throwable from label30 to label31 with label39;
        catch java.lang.Throwable from label32 to label33 with label39;
        catch java.lang.Throwable from label34 to label35 with label39;
        catch java.lang.Throwable from label35 to label36 with label39;
        catch java.lang.Throwable from label36 to label37 with label39;
        catch java.lang.Throwable from label43 to label44 with label41;
        catch java.lang.Throwable from label44 to label45 with label52;
        catch java.lang.Throwable from label55 to label56 with label57;
    }

    private void notifyOpChangedSync(int, int, java.lang.String, int)
    {
        com.android.server.appop.AppOpsService r0;
        int i0, i1, i2;
        java.lang.String r1;
        android.os.storage.StorageManagerInternal r2;
        java.lang.Object $r3;

        r0 := @this: com.android.server.appop.AppOpsService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        i2 := @parameter3: int;

        $r3 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/os/storage/StorageManagerInternal;");

        r2 = (android.os.storage.StorageManagerInternal) $r3;

        if r2 == null goto label1;

        virtualinvoke r2.<android.os.storage.StorageManagerInternal: void onAppOpsChanged(int,int,java.lang.String,int)>(i0, i1, r1, i2);

     label1:
        return;
    }

    private void notifyOpChecked(android.util.ArraySet, int, int, java.lang.String, int)
    {
        com.android.server.appop.AppOpsService r0;
        int i0, i1, i2, i4, i5;
        java.lang.String r1;
        long l3;
        java.lang.Object $r2;
        com.android.internal.app.IAppOpsNotedCallback $r3;
        java.lang.Throwable $r4;
        android.os.RemoteException $r5;
        android.util.ArraySet r6;
        com.android.server.appop.AppOpsService$NotedCallback r7;

        r0 := @this: com.android.server.appop.AppOpsService;

        r6 := @parameter0: android.util.ArraySet;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: java.lang.String;

        i2 := @parameter4: int;

        l3 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label01:
        i4 = virtualinvoke r6.<android.util.ArraySet: int size()>();

     label02:
        i5 = 0;

     label03:
        if i5 >= i4 goto label09;

     label04:
        $r2 = virtualinvoke r6.<android.util.ArraySet: java.lang.Object valueAt(int)>(i5);

        r7 = (com.android.server.appop.AppOpsService$NotedCallback) $r2;

     label05:
        $r3 = r7.<com.android.server.appop.AppOpsService$NotedCallback: com.android.internal.app.IAppOpsNotedCallback mCallback>;

        interfaceinvoke $r3.<com.android.internal.app.IAppOpsNotedCallback: void opNoted(int,int,java.lang.String,int)>(i0, i1, r1, i2);

     label06:
        goto label08;

     label07:
        $r5 := @caughtexception;

     label08:
        i5 = i5 + 1;

        goto label03;

     label09:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

        return;

     label10:
        $r4 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

        throw $r4;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch android.os.RemoteException from label05 to label06 with label07;
        catch java.lang.Throwable from label05 to label06 with label10;
    }

    private void notifyOpStarted(android.util.ArraySet, int, int, java.lang.String, int)
    {
        com.android.server.appop.AppOpsService r0;
        int i0, i1, i2, i4, i5;
        java.lang.String r1;
        long l3;
        java.lang.Object $r2;
        com.android.internal.app.IAppOpsStartedCallback $r3;
        android.os.RemoteException $r4;
        java.lang.Throwable $r5;
        android.util.ArraySet r6;
        com.android.server.appop.AppOpsService$StartedCallback r7;

        r0 := @this: com.android.server.appop.AppOpsService;

        r6 := @parameter0: android.util.ArraySet;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: java.lang.String;

        i2 := @parameter4: int;

        l3 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label01:
        i4 = virtualinvoke r6.<android.util.ArraySet: int size()>();

     label02:
        i5 = 0;

     label03:
        if i5 >= i4 goto label09;

     label04:
        $r2 = virtualinvoke r6.<android.util.ArraySet: java.lang.Object valueAt(int)>(i5);

        r7 = (com.android.server.appop.AppOpsService$StartedCallback) $r2;

     label05:
        $r3 = r7.<com.android.server.appop.AppOpsService$StartedCallback: com.android.internal.app.IAppOpsStartedCallback mCallback>;

        interfaceinvoke $r3.<com.android.internal.app.IAppOpsStartedCallback: void opStarted(int,int,java.lang.String,int)>(i0, i1, r1, i2);

     label06:
        goto label08;

     label07:
        $r4 := @caughtexception;

     label08:
        i5 = i5 + 1;

        goto label03;

     label09:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

        return;

     label10:
        $r5 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

        throw $r5;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch android.os.RemoteException from label05 to label06 with label07;
        catch java.lang.Throwable from label05 to label06 with label10;
    }

    private void notifyWatchersOfChange(int, int)
    {
        com.android.server.appop.AppOpsService r0;
        int i0, i1;
        android.util.ArraySet r1, r5;
        android.util.SparseArray $r2;
        java.lang.Object $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.appop.AppOpsService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        entermonitor r0;

     label1:
        $r2 = r0.<com.android.server.appop.AppOpsService: android.util.SparseArray mOpModeWatchers>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r5 = (android.util.ArraySet) $r3;

     label2:
        if r5 != null goto label5;

     label3:
        exitmonitor r0;

     label4:
        return;

     label5:
        r1 = new android.util.ArraySet;

        specialinvoke r1.<android.util.ArraySet: void <init>(android.util.ArraySet)>(r5);

        exitmonitor r0;

     label6:
        specialinvoke r0.<com.android.server.appop.AppOpsService: void notifyOpChanged(android.util.ArraySet,int,int,java.lang.String)>(r1, i0, i1, null);

        return;

     label7:
        $r4 := @caughtexception;

     label8:
        exitmonitor r0;

     label9:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    private static void onClientDeath(com.android.server.appop.AppOpsService$AttributedOp, android.os.IBinder)
    {
        com.android.server.appop.AppOpsService$AttributedOp r0;
        android.os.IBinder r1;

        r0 := @parameter0: com.android.server.appop.AppOpsService$AttributedOp;

        r1 := @parameter1: android.os.IBinder;

        virtualinvoke r0.<com.android.server.appop.AppOpsService$AttributedOp: void onClientDeath(android.os.IBinder)>(r1);

        return;
    }

    static int onShellCommand(com.android.server.appop.AppOpsService$Shell, java.lang.String)
    {
        java.io.PrintWriter r0, r60;
        com.android.internal.app.IAppOpsService r1, $r6, $r11, $r20, $r25, $r42, $r47, $r50, r75, r82;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, i61, i62, i63, i66, i67, i68, i69, i70, i71, i72, i73, i74, i76, i77, $i78, i79, i80, i81;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, z13;
        java.lang.String $r2, $r3, $r4, $r7, $r8, $r9, $r21, $r22, $r23, $r29, $r31, $r32, $r34, $r36, $r37, $r38, $r40, $r46, $r48, $r49, $r53, r59, r65, r66, r73, r78, r88, r89;
        android.os.IBinder $r5, $r10;
        com.android.server.appop.AppOpsService $r12, $r13, $r14, $r15, $r16, $r19, $r43, r62;
        java.lang.Runnable $r17;
        android.os.Handler $r18;
        int[] $r24, r74, r76, r79;
        java.lang.Object $r26, $r27, $r30, $r33, $r35, $r41, r81;
        android.app.AppOpsManager$PackageOps $r28, r69, r83;
        java.util.Map $r39;
        long $l26, $l28, $l30, $l32, $l33, $l34, $l35, $l36, $l37, $l39, $l41, $l43, $l44, $l45, $l46, $l47, l64, l65, l75;
        byte $b27, $b29, $b31, $b38, $b40, $b42, b60;
        android.content.Context $r44;
        android.content.pm.PackageManager $r45;
        android.os.RemoteException $r51;
        java.lang.Throwable $r54, $r55, $r57;
        android.content.pm.PackageManager$NameNotFoundException $r56;
        com.android.server.appop.AppOpsService$Shell r58;
        java.util.List r68, r70, r77, r80, r84, r96, r97, r98;
        android.app.AppOpsManager$OpEntry r71, r85;
        android.app.AppOpsManager$AttributedOpEntry r86;
        java.lang.StringBuilder r92, r94, r95;
        java.util.ArrayList r93;

        r58 := @parameter0: com.android.server.appop.AppOpsService$Shell;

        r59 := @parameter1: java.lang.String;

        if r59 != null goto label001;

        $i59 = virtualinvoke r58.<com.android.server.appop.AppOpsService$Shell: int handleDefaultCommands(java.lang.String)>(r59);

        return $i59;

     label001:
        r0 = virtualinvoke r58.<com.android.server.appop.AppOpsService$Shell: java.io.PrintWriter getOutPrintWriter()>();

        r60 = virtualinvoke r58.<com.android.server.appop.AppOpsService$Shell: java.io.PrintWriter getErrPrintWriter()>();

     label002:
        $i0 = virtualinvoke r59.<java.lang.String: int hashCode()>();

        lookupswitch($i0)
        {
            case -1703718319: goto label018;
            case -1166702330: goto label016;
            case 102230: goto label014;
            case 113762: goto label012;
            case 3540994: goto label010;
            case 108404047: goto label008;
            case 109757538: goto label006;
            case 2085703290: goto label004;
            default: goto label003;
        };

     label003:
        goto label020;

     label004:
        $z0 = virtualinvoke r59.<java.lang.String: boolean equals(java.lang.Object)>("read-settings");

        if $z0 == 0 goto label003;

     label005:
        b60 = 5;

        goto label021;

     label006:
        $z6 = virtualinvoke r59.<java.lang.String: boolean equals(java.lang.Object)>("start");

        if $z6 == 0 goto label003;

     label007:
        b60 = 6;

        goto label021;

     label008:
        $z7 = virtualinvoke r59.<java.lang.String: boolean equals(java.lang.Object)>("reset");

        if $z7 == 0 goto label003;

     label009:
        b60 = 3;

        goto label021;

     label010:
        $z8 = virtualinvoke r59.<java.lang.String: boolean equals(java.lang.Object)>("stop");

        if $z8 == 0 goto label003;

     label011:
        b60 = 7;

        goto label021;

     label012:
        $z9 = virtualinvoke r59.<java.lang.String: boolean equals(java.lang.Object)>("set");

        if $z9 == 0 goto label003;

     label013:
        b60 = 0;

        goto label021;

     label014:
        $z10 = virtualinvoke r59.<java.lang.String: boolean equals(java.lang.Object)>("get");

        if $z10 == 0 goto label003;

     label015:
        b60 = 1;

        goto label021;

     label016:
        $z11 = virtualinvoke r59.<java.lang.String: boolean equals(java.lang.Object)>("query-op");

        if $z11 == 0 goto label003;

     label017:
        b60 = 2;

        goto label021;

     label018:
        $z12 = virtualinvoke r59.<java.lang.String: boolean equals(java.lang.Object)>("write-settings");

        if $z12 == 0 goto label003;

     label019:
        b60 = 4;

        goto label021;

     label020:
        b60 = -1;

     label021:
        tableswitch(b60)
        {
            case 0: goto label150;
            case 1: goto label094;
            case 2: goto label074;
            case 3: goto label053;
            case 4: goto label041;
            case 5: goto label034;
            case 6: goto label029;
            case 7: goto label024;
            default: goto label022;
        };

     label022:
        i61 = virtualinvoke r58.<com.android.server.appop.AppOpsService$Shell: int handleDefaultCommands(java.lang.String)>(r59);

     label023:
        goto label167;

     label024:
        i62 = virtualinvoke r58.<com.android.server.appop.AppOpsService$Shell: int parseUserPackageOp(boolean,java.io.PrintWriter)>(1, r60);

     label025:
        if i62 >= 0 goto label026;

        return i62;

     label026:
        $r2 = r58.<com.android.server.appop.AppOpsService$Shell: java.lang.String packageName>;

        if $r2 == null goto label028;

        $r6 = r58.<com.android.server.appop.AppOpsService$Shell: com.android.internal.app.IAppOpsService mInterface>;

        $r5 = r58.<com.android.server.appop.AppOpsService$Shell: android.os.IBinder mToken>;

        $i2 = r58.<com.android.server.appop.AppOpsService$Shell: int op>;

        $i1 = r58.<com.android.server.appop.AppOpsService$Shell: int packageUid>;

        $r4 = r58.<com.android.server.appop.AppOpsService$Shell: java.lang.String packageName>;

        $r3 = r58.<com.android.server.appop.AppOpsService$Shell: java.lang.String attributionTag>;

        interfaceinvoke $r6.<com.android.internal.app.IAppOpsService: void finishOperation(android.os.IBinder,int,int,java.lang.String,java.lang.String)>($r5, $i2, $i1, $r4, $r3);

     label027:
        return 0;

     label028:
        return -1;

     label029:
        i63 = virtualinvoke r58.<com.android.server.appop.AppOpsService$Shell: int parseUserPackageOp(boolean,java.io.PrintWriter)>(1, r60);

     label030:
        if i63 >= 0 goto label031;

        return i63;

     label031:
        $r7 = r58.<com.android.server.appop.AppOpsService$Shell: java.lang.String packageName>;

        if $r7 == null goto label033;

        $r11 = r58.<com.android.server.appop.AppOpsService$Shell: com.android.internal.app.IAppOpsService mInterface>;

        $r10 = r58.<com.android.server.appop.AppOpsService$Shell: android.os.IBinder mToken>;

        $i4 = r58.<com.android.server.appop.AppOpsService$Shell: int op>;

        $i3 = r58.<com.android.server.appop.AppOpsService$Shell: int packageUid>;

        $r9 = r58.<com.android.server.appop.AppOpsService$Shell: java.lang.String packageName>;

        $r8 = r58.<com.android.server.appop.AppOpsService$Shell: java.lang.String attributionTag>;

        interfaceinvoke $r11.<com.android.internal.app.IAppOpsService: int startOperation(android.os.IBinder,int,int,java.lang.String,java.lang.String,boolean,boolean,java.lang.String,boolean)>($r10, $i4, $i3, $r9, $r8, 1, 1, "appops start shell command", 1);

     label032:
        return 0;

     label033:
        return -1;

     label034:
        $r12 = r58.<com.android.server.appop.AppOpsService$Shell: com.android.server.appop.AppOpsService mInternal>;

        $i5 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i6 = staticinvoke <android.os.Binder: int getCallingUid()>();

        specialinvoke $r12.<com.android.server.appop.AppOpsService: void enforceManageAppOpsModes(int,int,int)>($i5, $i6, -1);

        l64 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label035:
        $r13 = r58.<com.android.server.appop.AppOpsService$Shell: com.android.server.appop.AppOpsService mInternal>;

        virtualinvoke $r13.<com.android.server.appop.AppOpsService: void readState()>();

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("Last settings read.");

     label036:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l64);

     label037:
        return 0;

     label038:
        $r57 := @caughtexception;

     label039:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l64);

     label040:
        throw $r57;

     label041:
        $r14 = r58.<com.android.server.appop.AppOpsService$Shell: com.android.server.appop.AppOpsService mInternal>;

        $i7 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i8 = staticinvoke <android.os.Binder: int getCallingUid()>();

        specialinvoke $r14.<com.android.server.appop.AppOpsService: void enforceManageAppOpsModes(int,int,int)>($i7, $i8, -1);

        l65 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label042:
        r62 = r58.<com.android.server.appop.AppOpsService$Shell: com.android.server.appop.AppOpsService mInternal>;

        entermonitor r62;

     label043:
        $r15 = r58.<com.android.server.appop.AppOpsService$Shell: com.android.server.appop.AppOpsService mInternal>;

        $r18 = $r15.<com.android.server.appop.AppOpsService: android.os.Handler mHandler>;

        $r16 = r58.<com.android.server.appop.AppOpsService$Shell: com.android.server.appop.AppOpsService mInternal>;

        $r17 = $r16.<com.android.server.appop.AppOpsService: java.lang.Runnable mWriteRunner>;

        virtualinvoke $r18.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r17);

        exitmonitor r62;

     label044:
        $r19 = r58.<com.android.server.appop.AppOpsService$Shell: com.android.server.appop.AppOpsService mInternal>;

        virtualinvoke $r19.<com.android.server.appop.AppOpsService: void writeState()>();

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("Current settings written.");

     label045:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l65);

     label046:
        return 0;

     label047:
        $r55 := @caughtexception;

     label048:
        exitmonitor r62;

     label049:
        throw $r55;

     label050:
        $r54 := @caughtexception;

     label051:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l65);

     label052:
        throw $r54;

     label053:
        r65 = null;

        i66 = -2;

     label054:
        r66 = virtualinvoke r58.<com.android.server.appop.AppOpsService$Shell: java.lang.String getNextArg()>();

     label055:
        if r66 == null goto label061;

     label056:
        $r21 = "--user";

        $z1 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>(r66);

        if $z1 == 0 goto label058;

        $r23 = virtualinvoke r58.<com.android.server.appop.AppOpsService$Shell: java.lang.String getNextArgRequired()>();

        i66 = staticinvoke <android.os.UserHandle: int parseUserArg(java.lang.String)>($r23);

     label057:
        goto label054;

     label058:
        if r65 != null goto label059;

        r65 = r66;

        goto label054;

     label059:
        r92 = new java.lang.StringBuilder;

        specialinvoke r92.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: Unsupported argument: ");

        virtualinvoke r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r66);

        $r22 = virtualinvoke r92.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r60.<java.io.PrintWriter: void println(java.lang.String)>($r22);

     label060:
        return -1;

     label061:
        i67 = i66;

        if i66 != -2 goto label063;

     label062:
        i67 = staticinvoke <android.app.ActivityManager: int getCurrentUser()>();

     label063:
        $r20 = r58.<com.android.server.appop.AppOpsService$Shell: com.android.internal.app.IAppOpsService mInterface>;

        interfaceinvoke $r20.<com.android.internal.app.IAppOpsService: void resetAllModes(int,java.lang.String)>(i67, r65);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("Reset all modes for: ");

     label064:
        if i67 != -1 goto label067;

     label065:
        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("all users");

     label066:
        goto label068;

     label067:
        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("user ");

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>(i67);

     label068:
        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(", ");

     label069:
        if r65 != null goto label072;

     label070:
        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("all packages");

     label071:
        goto label073;

     label072:
        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("package ");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>(r65);

     label073:
        return 0;

     label074:
        i68 = virtualinvoke r58.<com.android.server.appop.AppOpsService$Shell: int parseUserOpMode(int,java.io.PrintWriter)>(1, r60);

     label075:
        if i68 >= 0 goto label076;

        return i68;

     label076:
        $r25 = r58.<com.android.server.appop.AppOpsService$Shell: com.android.internal.app.IAppOpsService mInterface>;

        $r24 = newarray (int)[1];

        $i9 = r58.<com.android.server.appop.AppOpsService$Shell: int op>;

        $r24[0] = $i9;

        r68 = interfaceinvoke $r25.<com.android.internal.app.IAppOpsService: java.util.List getPackagesForOps(int[])>($r24);

     label077:
        if r68 == null goto label092;

     label078:
        $i10 = interfaceinvoke r68.<java.util.List: int size()>();

        if $i10 > 0 goto label080;

     label079:
        goto label092;

     label080:
        i69 = 0;

     label081:
        $i11 = interfaceinvoke r68.<java.util.List: int size()>();

        if i69 >= $i11 goto label091;

        $r26 = interfaceinvoke r68.<java.util.List: java.lang.Object get(int)>(i69);

        r69 = (android.app.AppOpsManager$PackageOps) $r26;

     label082:
        $r27 = interfaceinvoke r68.<java.util.List: java.lang.Object get(int)>(i69);

        $r28 = (android.app.AppOpsManager$PackageOps) $r27;

        r70 = virtualinvoke $r28.<android.app.AppOpsManager$PackageOps: java.util.List getOps()>();

     label083:
        i70 = 0;

     label084:
        z13 = 0;

     label085:
        $i12 = interfaceinvoke r70.<java.util.List: int size()>();

        if i70 >= $i12 goto label088;

        $r30 = interfaceinvoke r70.<java.util.List: java.lang.Object get(int)>(i70);

        r71 = (android.app.AppOpsManager$OpEntry) $r30;

        $i13 = virtualinvoke r71.<android.app.AppOpsManager$OpEntry: int getOp()>();

        $i14 = r58.<com.android.server.appop.AppOpsService$Shell: int op>;

        if $i13 != $i14 goto label087;

        $i15 = virtualinvoke r71.<android.app.AppOpsManager$OpEntry: int getMode()>();

        $i16 = r58.<com.android.server.appop.AppOpsService$Shell: int mode>;

        if $i15 != $i16 goto label087;

     label086:
        z13 = 1;

        goto label088;

     label087:
        i70 = i70 + 1;

        goto label084;

     label088:
        if z13 == 0 goto label090;

     label089:
        $r29 = virtualinvoke r69.<android.app.AppOpsManager$PackageOps: java.lang.String getPackageName()>();

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r29);

     label090:
        i69 = i69 + 1;

        goto label081;

     label091:
        return 0;

     label092:
        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("No operations.");

     label093:
        return 0;

     label094:
        i71 = virtualinvoke r58.<com.android.server.appop.AppOpsService$Shell: int parseUserPackageOp(boolean,java.io.PrintWriter)>(0, r60);

     label095:
        if i71 >= 0 goto label096;

        return i71;

     label096:
        r93 = new java.util.ArrayList;

        specialinvoke r93.<java.util.ArrayList: void <init>()>();

        r73 = r58.<com.android.server.appop.AppOpsService$Shell: java.lang.String packageName>;

     label097:
        r74 = null;

        if r73 == null goto label111;

     label098:
        r75 = r58.<com.android.server.appop.AppOpsService$Shell: com.android.internal.app.IAppOpsService mInterface>;

        i72 = r58.<com.android.server.appop.AppOpsService$Shell: int packageUid>;

        $i49 = r58.<com.android.server.appop.AppOpsService$Shell: int op>;

        if $i49 == -1 goto label100;

        r76 = newarray (int)[1];

        $i52 = r58.<com.android.server.appop.AppOpsService$Shell: int op>;

        r76[0] = $i52;

     label099:
        goto label101;

     label100:
        r76 = null;

     label101:
        r77 = interfaceinvoke r75.<com.android.internal.app.IAppOpsService: java.util.List getUidOps(int,int[])>(i72, r76);

     label102:
        if r77 == null goto label104;

     label103:
        interfaceinvoke r93.<java.util.List: boolean addAll(java.util.Collection)>(r77);

     label104:
        r1 = r58.<com.android.server.appop.AppOpsService$Shell: com.android.internal.app.IAppOpsService mInterface>;

        i73 = r58.<com.android.server.appop.AppOpsService$Shell: int packageUid>;

        r78 = r58.<com.android.server.appop.AppOpsService$Shell: java.lang.String packageName>;

     label105:
        r79 = null;

     label106:
        $i50 = r58.<com.android.server.appop.AppOpsService$Shell: int op>;

        if $i50 == -1 goto label107;

        r79 = newarray (int)[1];

        $i51 = r58.<com.android.server.appop.AppOpsService$Shell: int op>;

        r79[0] = $i51;

     label107:
        r80 = interfaceinvoke r1.<com.android.internal.app.IAppOpsService: java.util.List getOpsForPackage(int,java.lang.String,int[])>(i73, r78, r79);

     label108:
        if r80 == null goto label110;

     label109:
        interfaceinvoke r93.<java.util.List: boolean addAll(java.util.Collection)>(r80);

     label110:
        r81 = r93;

        goto label114;

     label111:
        r82 = r58.<com.android.server.appop.AppOpsService$Shell: com.android.internal.app.IAppOpsService mInterface>;

        i74 = r58.<com.android.server.appop.AppOpsService$Shell: int nonpackageUid>;

     label112:
        $i17 = r58.<com.android.server.appop.AppOpsService$Shell: int op>;

        if $i17 == -1 goto label113;

        r74 = newarray (int)[1];

        $i48 = r58.<com.android.server.appop.AppOpsService$Shell: int op>;

        r74[0] = $i48;

     label113:
        r81 = interfaceinvoke r82.<com.android.internal.app.IAppOpsService: java.util.List getUidOps(int,int[])>(i74, r74);

     label114:
        if r81 == null goto label148;

     label115:
        r96 = (java.util.List) r81;

        $i22 = interfaceinvoke r96.<java.util.List: int size()>();

        if $i22 > 0 goto label117;

     label116:
        goto label148;

     label117:
        l75 = staticinvoke <java.lang.System: long currentTimeMillis()>();

     label118:
        i76 = 0;

     label119:
        r97 = (java.util.List) r81;

        $i23 = interfaceinvoke r97.<java.util.List: int size()>();

        if i76 >= $i23 goto label147;

        r98 = (java.util.List) r81;

        $r33 = interfaceinvoke r98.<java.util.List: java.lang.Object get(int)>(i76);

        r83 = (android.app.AppOpsManager$PackageOps) $r33;

        $r34 = virtualinvoke r83.<android.app.AppOpsManager$PackageOps: java.lang.String getPackageName()>();

        if $r34 != null goto label120;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("Uid mode: ");

     label120:
        r84 = virtualinvoke r83.<android.app.AppOpsManager$PackageOps: java.util.List getOps()>();

     label121:
        i77 = 0;

     label122:
        $i78 = interfaceinvoke r84.<java.util.List: int size()>();

        if i77 >= $i78 goto label146;

        $r35 = interfaceinvoke r84.<java.util.List: java.lang.Object get(int)>(i77);

        r85 = (android.app.AppOpsManager$OpEntry) $r35;

        $i24 = virtualinvoke r85.<android.app.AppOpsManager$OpEntry: int getOp()>();

        $r36 = staticinvoke <android.app.AppOpsManager: java.lang.String opToName(int)>($i24);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>($r36);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        $i25 = virtualinvoke r85.<android.app.AppOpsManager$OpEntry: int getMode()>();

        $r37 = staticinvoke <android.app.AppOpsManager: java.lang.String modeToName(int)>($i25);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>($r37);

        $r38 = r58.<com.android.server.appop.AppOpsService$Shell: java.lang.String attributionTag>;

        if $r38 != null goto label132;

        $l37 = virtualinvoke r85.<android.app.AppOpsManager$OpEntry: long getLastAccessTime(int)>(31);

        $b38 = $l37 cmp -1L;

        if $b38 == 0 goto label125;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("; time=");

     label123:
        $l46 = virtualinvoke r85.<android.app.AppOpsManager$OpEntry: long getLastAccessTime(int)>(31);

        $l47 = l75 - $l46;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>($l47, r0);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(" ago");

     label124:
        goto label125;

     label125:
        $l39 = virtualinvoke r85.<android.app.AppOpsManager$OpEntry: long getLastRejectTime(int)>(31);

        $b40 = $l39 cmp -1L;

        if $b40 == 0 goto label127;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("; rejectTime=");

     label126:
        $l44 = virtualinvoke r85.<android.app.AppOpsManager$OpEntry: long getLastRejectTime(int)>(31);

        $l45 = l75 - $l44;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>($l45, r0);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(" ago");

     label127:
        $z3 = virtualinvoke r85.<android.app.AppOpsManager$OpEntry: boolean isRunning()>();

        if $z3 == 0 goto label129;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(" (running)");

     label128:
        goto label144;

     label129:
        $l41 = virtualinvoke r85.<android.app.AppOpsManager$OpEntry: long getLastDuration(int)>(31);

        $b42 = $l41 cmp -1L;

        if $b42 == 0 goto label131;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("; duration=");

        $l43 = virtualinvoke r85.<android.app.AppOpsManager$OpEntry: long getLastDuration(int)>(31);

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>($l43, r0);

     label130:
        goto label144;

     label131:
        goto label144;

     label132:
        $r39 = virtualinvoke r85.<android.app.AppOpsManager$OpEntry: java.util.Map getAttributedOpEntries()>();

        $r40 = r58.<com.android.server.appop.AppOpsService$Shell: java.lang.String attributionTag>;

        $r41 = interfaceinvoke $r39.<java.util.Map: java.lang.Object get(java.lang.Object)>($r40);

        r86 = (android.app.AppOpsManager$AttributedOpEntry) $r41;

     label133:
        if r86 == null goto label144;

     label134:
        $l26 = virtualinvoke r86.<android.app.AppOpsManager$AttributedOpEntry: long getLastAccessTime(int)>(31);

        $b27 = $l26 cmp -1L;

        if $b27 == 0 goto label137;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("; time=");

     label135:
        $l35 = virtualinvoke r86.<android.app.AppOpsManager$AttributedOpEntry: long getLastAccessTime(int)>(31);

        $l36 = l75 - $l35;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>($l36, r0);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(" ago");

     label136:
        goto label137;

     label137:
        $l28 = virtualinvoke r86.<android.app.AppOpsManager$AttributedOpEntry: long getLastRejectTime(int)>(31);

        $b29 = $l28 cmp -1L;

        if $b29 == 0 goto label139;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("; rejectTime=");

     label138:
        $l33 = virtualinvoke r86.<android.app.AppOpsManager$AttributedOpEntry: long getLastRejectTime(int)>(31);

        $l34 = l75 - $l33;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>($l34, r0);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(" ago");

     label139:
        $z2 = virtualinvoke r86.<android.app.AppOpsManager$AttributedOpEntry: boolean isRunning()>();

        if $z2 == 0 goto label141;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(" (running)");

     label140:
        goto label144;

     label141:
        $l30 = virtualinvoke r86.<android.app.AppOpsManager$AttributedOpEntry: long getLastDuration(int)>(31);

        $b31 = $l30 cmp -1L;

        if $b31 == 0 goto label144;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("; duration=");

     label142:
        $l32 = virtualinvoke r86.<android.app.AppOpsManager$AttributedOpEntry: long getLastDuration(int)>(31);

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>($l32, r0);

     label143:
        goto label144;

     label144:
        virtualinvoke r0.<java.io.PrintWriter: void println()>();

     label145:
        i77 = i77 + 1;

        goto label122;

     label146:
        i76 = i76 + 1;

        goto label119;

     label147:
        return 0;

     label148:
        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("No operations.");

        $i18 = r58.<com.android.server.appop.AppOpsService$Shell: int op>;

        if $i18 <= -1 goto label149;

        $i19 = r58.<com.android.server.appop.AppOpsService$Shell: int op>;

        if $i19 >= 100 goto label149;

        r94 = new java.lang.StringBuilder;

        specialinvoke r94.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Default mode: ");

        $i20 = r58.<com.android.server.appop.AppOpsService$Shell: int op>;

        $i21 = staticinvoke <android.app.AppOpsManager: int opToDefaultMode(int)>($i20);

        $r31 = staticinvoke <android.app.AppOpsManager: java.lang.String modeToName(int)>($i21);

        virtualinvoke r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        $r32 = virtualinvoke r94.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r32);

     label149:
        return 0;

     label150:
        i79 = virtualinvoke r58.<com.android.server.appop.AppOpsService$Shell: int parseUserPackageOp(boolean,java.io.PrintWriter)>(1, r60);

     label151:
        if i79 >= 0 goto label152;

        return i79;

     label152:
        r88 = virtualinvoke r58.<com.android.server.appop.AppOpsService$Shell: java.lang.String getNextArg()>();

     label153:
        if r88 != null goto label156;

     label154:
        virtualinvoke r60.<java.io.PrintWriter: void println(java.lang.String)>("Error: Mode not specified.");

     label155:
        return -1;

     label156:
        i80 = staticinvoke <com.android.server.appop.AppOpsService$Shell: int strModeToMode(java.lang.String,java.io.PrintWriter)>(r88, r60);

     label157:
        if i80 >= 0 goto label158;

        return -1;

     label158:
        $z4 = r58.<com.android.server.appop.AppOpsService$Shell: boolean targetsUid>;

        if $z4 != 0 goto label160;

        $r48 = r58.<com.android.server.appop.AppOpsService$Shell: java.lang.String packageName>;

        if $r48 == null goto label160;

        $r50 = r58.<com.android.server.appop.AppOpsService$Shell: com.android.internal.app.IAppOpsService mInterface>;

        $i58 = r58.<com.android.server.appop.AppOpsService$Shell: int op>;

        $i57 = r58.<com.android.server.appop.AppOpsService$Shell: int packageUid>;

        $r49 = r58.<com.android.server.appop.AppOpsService$Shell: java.lang.String packageName>;

        interfaceinvoke $r50.<com.android.internal.app.IAppOpsService: void setMode(int,int,java.lang.String,int)>($i58, $i57, $r49, i80);

     label159:
        goto label166;

     label160:
        $z5 = r58.<com.android.server.appop.AppOpsService$Shell: boolean targetsUid>;

        if $z5 == 0 goto label165;

        r89 = r58.<com.android.server.appop.AppOpsService$Shell: java.lang.String packageName>;

     label161:
        if r89 == null goto label165;

     label162:
        $r43 = r58.<com.android.server.appop.AppOpsService$Shell: com.android.server.appop.AppOpsService mInternal>;

        $r44 = $r43.<com.android.server.appop.AppOpsService: android.content.Context mContext>;

        $r45 = virtualinvoke $r44.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r46 = r58.<com.android.server.appop.AppOpsService$Shell: java.lang.String packageName>;

        $i55 = r58.<com.android.server.appop.AppOpsService$Shell: int userId>;

        i81 = virtualinvoke $r45.<android.content.pm.PackageManager: int getPackageUidAsUser(java.lang.String,int)>($r46, $i55);

        $r47 = r58.<com.android.server.appop.AppOpsService$Shell: com.android.internal.app.IAppOpsService mInterface>;

        $i56 = r58.<com.android.server.appop.AppOpsService$Shell: int op>;

        interfaceinvoke $r47.<com.android.internal.app.IAppOpsService: void setUidMode(int,int,int)>($i56, i81, i80);

     label163:
        goto label166;

     label164:
        $r56 := @caughtexception;

        return -1;

     label165:
        $r42 = r58.<com.android.server.appop.AppOpsService$Shell: com.android.internal.app.IAppOpsService mInterface>;

        $i54 = r58.<com.android.server.appop.AppOpsService$Shell: int op>;

        $i53 = r58.<com.android.server.appop.AppOpsService$Shell: int nonpackageUid>;

        interfaceinvoke $r42.<com.android.internal.app.IAppOpsService: void setUidMode(int,int,int)>($i54, $i53, i80);

     label166:
        return 0;

     label167:
        return i61;

     label168:
        $r51 := @caughtexception;

        r95 = new java.lang.StringBuilder;

        specialinvoke r95.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Remote exception: ");

        virtualinvoke r95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r51);

        $r53 = virtualinvoke r95.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r53);

        return -1;

        catch android.os.RemoteException from label002 to label003 with label168;
        catch android.os.RemoteException from label004 to label005 with label168;
        catch android.os.RemoteException from label006 to label007 with label168;
        catch android.os.RemoteException from label008 to label009 with label168;
        catch android.os.RemoteException from label010 to label011 with label168;
        catch android.os.RemoteException from label012 to label013 with label168;
        catch android.os.RemoteException from label014 to label015 with label168;
        catch android.os.RemoteException from label016 to label017 with label168;
        catch android.os.RemoteException from label018 to label019 with label168;
        catch android.os.RemoteException from label022 to label023 with label168;
        catch android.os.RemoteException from label024 to label025 with label168;
        catch android.os.RemoteException from label026 to label027 with label168;
        catch android.os.RemoteException from label029 to label030 with label168;
        catch android.os.RemoteException from label031 to label032 with label168;
        catch android.os.RemoteException from label034 to label035 with label168;
        catch java.lang.Throwable from label035 to label036 with label038;
        catch android.os.RemoteException from label036 to label037 with label168;
        catch android.os.RemoteException from label039 to label040 with label168;
        catch android.os.RemoteException from label040 to label041 with label168;
        catch android.os.RemoteException from label041 to label042 with label168;
        catch java.lang.Throwable from label042 to label043 with label050;
        catch java.lang.Throwable from label043 to label044 with label047;
        catch java.lang.Throwable from label044 to label045 with label050;
        catch android.os.RemoteException from label045 to label046 with label168;
        catch java.lang.Throwable from label048 to label049 with label047;
        catch java.lang.Throwable from label049 to label050 with label050;
        catch android.os.RemoteException from label051 to label052 with label168;
        catch android.os.RemoteException from label052 to label053 with label168;
        catch android.os.RemoteException from label054 to label055 with label168;
        catch android.os.RemoteException from label056 to label057 with label168;
        catch android.os.RemoteException from label059 to label060 with label168;
        catch android.os.RemoteException from label062 to label063 with label168;
        catch android.os.RemoteException from label063 to label064 with label168;
        catch android.os.RemoteException from label065 to label066 with label168;
        catch android.os.RemoteException from label067 to label068 with label168;
        catch android.os.RemoteException from label068 to label069 with label168;
        catch android.os.RemoteException from label070 to label071 with label168;
        catch android.os.RemoteException from label072 to label073 with label168;
        catch android.os.RemoteException from label074 to label075 with label168;
        catch android.os.RemoteException from label076 to label077 with label168;
        catch android.os.RemoteException from label078 to label079 with label168;
        catch android.os.RemoteException from label081 to label082 with label168;
        catch android.os.RemoteException from label082 to label083 with label168;
        catch android.os.RemoteException from label085 to label086 with label168;
        catch android.os.RemoteException from label089 to label090 with label168;
        catch android.os.RemoteException from label092 to label093 with label168;
        catch android.os.RemoteException from label094 to label095 with label168;
        catch android.os.RemoteException from label096 to label097 with label168;
        catch android.os.RemoteException from label098 to label099 with label168;
        catch android.os.RemoteException from label101 to label102 with label168;
        catch android.os.RemoteException from label103 to label104 with label168;
        catch android.os.RemoteException from label104 to label105 with label168;
        catch android.os.RemoteException from label106 to label107 with label168;
        catch android.os.RemoteException from label107 to label108 with label168;
        catch android.os.RemoteException from label109 to label110 with label168;
        catch android.os.RemoteException from label111 to label112 with label168;
        catch android.os.RemoteException from label112 to label113 with label168;
        catch android.os.RemoteException from label113 to label114 with label168;
        catch android.os.RemoteException from label115 to label116 with label168;
        catch android.os.RemoteException from label117 to label118 with label168;
        catch android.os.RemoteException from label119 to label120 with label168;
        catch android.os.RemoteException from label120 to label121 with label168;
        catch android.os.RemoteException from label122 to label123 with label168;
        catch android.os.RemoteException from label123 to label124 with label168;
        catch android.os.RemoteException from label125 to label126 with label168;
        catch android.os.RemoteException from label126 to label127 with label168;
        catch android.os.RemoteException from label127 to label128 with label168;
        catch android.os.RemoteException from label129 to label130 with label168;
        catch android.os.RemoteException from label132 to label133 with label168;
        catch android.os.RemoteException from label134 to label135 with label168;
        catch android.os.RemoteException from label135 to label136 with label168;
        catch android.os.RemoteException from label137 to label138 with label168;
        catch android.os.RemoteException from label138 to label139 with label168;
        catch android.os.RemoteException from label139 to label140 with label168;
        catch android.os.RemoteException from label141 to label142 with label168;
        catch android.os.RemoteException from label142 to label143 with label168;
        catch android.os.RemoteException from label144 to label145 with label168;
        catch android.os.RemoteException from label148 to label149 with label168;
        catch android.os.RemoteException from label150 to label151 with label168;
        catch android.os.RemoteException from label152 to label153 with label168;
        catch android.os.RemoteException from label154 to label155 with label168;
        catch android.os.RemoteException from label156 to label157 with label168;
        catch android.os.RemoteException from label158 to label159 with label168;
        catch android.os.RemoteException from label160 to label161 with label168;
        catch android.content.pm.PackageManager$NameNotFoundException from label162 to label163 with label164;
        catch android.os.RemoteException from label162 to label163 with label168;
        catch android.os.RemoteException from label165 to label166 with label168;
    }

    private void pruneOpLocked(com.android.server.appop.AppOpsService$Op, int, java.lang.String)
    {
        com.android.server.appop.AppOpsService r0;
        int i0, $i1, $i2;
        com.android.server.appop.AppOpsService$UidState r1;
        android.util.ArrayMap $r2, r9;
        boolean $z0, $z1, $z2;
        java.lang.String $r3, r7;
        android.util.SparseArray $r5;
        com.android.server.appop.AppOpsService$Op r6;
        com.android.server.appop.AppOpsService$Ops r8;

        r0 := @this: com.android.server.appop.AppOpsService;

        r6 := @parameter0: com.android.server.appop.AppOpsService$Op;

        i0 := @parameter1: int;

        r7 := @parameter2: java.lang.String;

        virtualinvoke r6.<com.android.server.appop.AppOpsService$Op: void removeAttributionsWithNoTime()>();

        $r2 = r6.<com.android.server.appop.AppOpsService$Op: android.util.ArrayMap mAttributions>;

        $z0 = virtualinvoke $r2.<android.util.ArrayMap: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        r8 = specialinvoke r0.<com.android.server.appop.AppOpsService: com.android.server.appop.AppOpsService$Ops getOpsLocked(int,java.lang.String,java.lang.String,android.app.AppOpsManager$RestrictionBypass,boolean)>(i0, r7, null, null, 0);

        if r8 == null goto label2;

        $i1 = r6.<com.android.server.appop.AppOpsService$Op: int op>;

        virtualinvoke r8.<com.android.server.appop.AppOpsService$Ops: void remove(int)>($i1);

        $i2 = virtualinvoke r8.<com.android.server.appop.AppOpsService$Ops: int size()>();

        if $i2 > 0 goto label2;

        r1 = r8.<com.android.server.appop.AppOpsService$Ops: com.android.server.appop.AppOpsService$UidState uidState>;

        r9 = r1.<com.android.server.appop.AppOpsService$UidState: android.util.ArrayMap pkgOps>;

        if r9 == null goto label2;

        $r3 = r8.<com.android.server.appop.AppOpsService$Ops: java.lang.String packageName>;

        virtualinvoke r9.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>($r3);

        $z1 = virtualinvoke r9.<android.util.ArrayMap: boolean isEmpty()>();

        if $z1 == 0 goto label1;

        r1.<com.android.server.appop.AppOpsService$UidState: android.util.ArrayMap pkgOps> = null;

     label1:
        $z2 = virtualinvoke r1.<com.android.server.appop.AppOpsService$UidState: boolean isDefault()>();

        if $z2 == 0 goto label2;

        $r5 = r0.<com.android.server.appop.AppOpsService: android.util.SparseArray mUidStates>;

        virtualinvoke $r5.<android.util.SparseArray: void remove(int)>(i0);

     label2:
        return;
    }

    private void readAttributionOp(org.xmlpull.v1.XmlPullParser, com.android.server.appop.AppOpsService$Op, java.lang.String) throws java.lang.NumberFormatException, java.io.IOException
    {
        com.android.server.appop.AppOpsService r0;
        int i0, i1, i4;
        long l2, l3, l7, l8;
        byte $b5, $b6;
        org.xmlpull.v1.XmlPullParser r1;
        com.android.server.appop.AppOpsService$Op r2;
        java.lang.String r3, r5, r6;
        com.android.server.appop.AppOpsService$AttributedOp r4;

        r0 := @this: com.android.server.appop.AppOpsService;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter1: com.android.server.appop.AppOpsService$Op;

        r3 := @parameter2: java.lang.String;

        r4 = staticinvoke <com.android.server.appop.AppOpsService$Op: com.android.server.appop.AppOpsService$AttributedOp access$1000(com.android.server.appop.AppOpsService$Op,com.android.server.appop.AppOpsService$Op,java.lang.String)>(r2, r2, r3);

        l7 = staticinvoke <com.android.internal.util.XmlUtils: long readLongAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "n");

        i0 = staticinvoke <android.app.AppOpsManager: int extractUidStateFromKey(long)>(l7);

        i1 = staticinvoke <android.app.AppOpsManager: int extractFlagsFromKey(long)>(l7);

        l2 = staticinvoke <com.android.internal.util.XmlUtils: long readLongAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String,long)>(r1, "t", 0L);

        l8 = staticinvoke <com.android.internal.util.XmlUtils: long readLongAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String,long)>(r1, "r", 0L);

        l3 = staticinvoke <com.android.internal.util.XmlUtils: long readLongAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String,long)>(r1, "d", -1L);

        r5 = staticinvoke <com.android.internal.util.XmlUtils: java.lang.String readStringAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "pp");

        i4 = staticinvoke <com.android.internal.util.XmlUtils: int readIntAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r1, "pu", -1);

        r6 = staticinvoke <com.android.internal.util.XmlUtils: java.lang.String readStringAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "pc");

        $b5 = l2 cmp 0L;

        if $b5 <= 0 goto label1;

        virtualinvoke r4.<com.android.server.appop.AppOpsService$AttributedOp: void accessed(long,long,int,java.lang.String,java.lang.String,int,int)>(l2, l3, i4, r5, r6, i0, i1);

        goto label1;

     label1:
        $b6 = l8 cmp 0L;

        if $b6 <= 0 goto label2;

        virtualinvoke r4.<com.android.server.appop.AppOpsService$AttributedOp: void rejected(long,int,int)>(l8, i0, i1);

        goto label2;

     label2:
        return;
    }

    private void readNoteOpCallerStackTraces()
    {
        com.android.server.appop.AppOpsService r0;
        java.io.File $r1, $r2, $r6;
        boolean $z0, $z1;
        android.util.ArraySet $r4;
        com.android.server.appop.AppOpsService$NoteOpTrace $r5;
        java.lang.Exception $r7;
        java.lang.Throwable $r8, $r9;
        java.util.Scanner r10;
        java.lang.String r11;

        r0 := @this: com.android.server.appop.AppOpsService;

     label01:
        $r1 = r0.<com.android.server.appop.AppOpsService: java.io.File mNoteOpCallerStacktracesFile>;

        $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label03;

        $r6 = r0.<com.android.server.appop.AppOpsService: java.io.File mNoteOpCallerStacktracesFile>;

        virtualinvoke $r6.<java.io.File: boolean createNewFile()>();

     label02:
        return;

     label03:
        r10 = new java.util.Scanner;

        $r2 = r0.<com.android.server.appop.AppOpsService: java.io.File mNoteOpCallerStacktracesFile>;

        specialinvoke r10.<java.util.Scanner: void <init>(java.io.File)>($r2);

     label04:
        virtualinvoke r10.<java.util.Scanner: java.util.Scanner useDelimiter(java.lang.String)>("\\},");

     label05:
        $z1 = virtualinvoke r10.<java.util.Scanner: boolean hasNext()>();

        if $z1 == 0 goto label07;

        r11 = virtualinvoke r10.<java.util.Scanner: java.lang.String next()>();

        $r4 = r0.<com.android.server.appop.AppOpsService: android.util.ArraySet mNoteOpCallerStacktraces>;

        $r5 = staticinvoke <com.android.server.appop.AppOpsService$NoteOpTrace: com.android.server.appop.AppOpsService$NoteOpTrace fromJson(java.lang.String)>(r11);

        virtualinvoke $r4.<android.util.ArraySet: boolean add(java.lang.Object)>($r5);

     label06:
        goto label05;

     label07:
        virtualinvoke r10.<java.util.Scanner: void close()>();

     label08:
        goto label16;

     label09:
        $r9 := @caughtexception;

     label10:
        virtualinvoke r10.<java.util.Scanner: void close()>();

     label11:
        goto label14;

     label12:
        $r8 := @caughtexception;

     label13:
        virtualinvoke $r9.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r8);

     label14:
        throw $r9;

     label15:
        $r7 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("AppOps", "Cannot parse traces noteOps", $r7);

     label16:
        return;

        catch java.lang.Exception from label01 to label02 with label15;
        catch java.lang.Exception from label03 to label04 with label15;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Exception from label07 to label08 with label15;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Exception from label13 to label14 with label15;
        catch java.lang.Exception from label14 to label15 with label15;
    }

    private void readOp(org.xmlpull.v1.XmlPullParser, com.android.server.appop.AppOpsService$UidState, java.lang.String) throws java.lang.NumberFormatException, org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        com.android.server.appop.AppOpsService r0;
        com.android.server.appop.AppOpsService$UidState r1;
        java.lang.String r2, $r5, $r13, $r16, $r18, $r19;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i8, $i10;
        com.android.server.appop.AppOpsService$Op $r4;
        android.util.ArrayMap $r6, $r7, $r10, $r12;
        java.lang.Object $r8;
        com.android.server.appop.AppOpsService$Ops $r9, r22, r23;
        boolean $z0;
        java.lang.StringBuilder $r14;
        org.xmlpull.v1.XmlPullParser r20;

        r0 := @this: com.android.server.appop.AppOpsService;

        r20 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: com.android.server.appop.AppOpsService$UidState;

        r2 := @parameter2: java.lang.String;

        $r4 = new com.android.server.appop.AppOpsService$Op;

        $r5 = interfaceinvoke r20.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "n");

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r5);

        $i3 = r1.<com.android.server.appop.AppOpsService$UidState: int uid>;

        specialinvoke $r4.<com.android.server.appop.AppOpsService$Op: void <init>(com.android.server.appop.AppOpsService,com.android.server.appop.AppOpsService$UidState,java.lang.String,int,int)>(r0, r1, r2, $i2, $i3);

        $i4 = $r4.<com.android.server.appop.AppOpsService$Op: int op>;

        $i5 = staticinvoke <android.app.AppOpsManager: int opToDefaultMode(int)>($i4);

        $i6 = staticinvoke <com.android.internal.util.XmlUtils: int readIntAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r20, "m", $i5);

        staticinvoke <com.android.server.appop.AppOpsService$Op: int access$302(com.android.server.appop.AppOpsService$Op,int)>($r4, $i6);

        i0 = interfaceinvoke r20.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label1:
        i1 = interfaceinvoke r20.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i1 == 1 goto label6;

        if i1 != 3 goto label2;

        $i10 = interfaceinvoke r20.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i10 <= i0 goto label6;

     label2:
        if i1 == 3 goto label1;

        if i1 != 4 goto label3;

        goto label1;

     label3:
        $r13 = interfaceinvoke r20.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>("st");

        if $z0 == 0 goto label4;

        $r19 = staticinvoke <com.android.internal.util.XmlUtils: java.lang.String readStringAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r20, "id");

        specialinvoke r0.<com.android.server.appop.AppOpsService: void readAttributionOp(org.xmlpull.v1.XmlPullParser,com.android.server.appop.AppOpsService$Op,java.lang.String)>(r20, $r4, $r19);

        goto label5;

     label4:
        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element under <op>: ");

        $r16 = interfaceinvoke r20.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AppOps", $r18);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r20);

     label5:
        goto label1;

     label6:
        $r6 = r1.<com.android.server.appop.AppOpsService$UidState: android.util.ArrayMap pkgOps>;

        if $r6 != null goto label7;

        $r12 = new android.util.ArrayMap;

        specialinvoke $r12.<android.util.ArrayMap: void <init>()>();

        r1.<com.android.server.appop.AppOpsService$UidState: android.util.ArrayMap pkgOps> = $r12;

     label7:
        $r7 = r1.<com.android.server.appop.AppOpsService$UidState: android.util.ArrayMap pkgOps>;

        $r8 = virtualinvoke $r7.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r2);

        r22 = (com.android.server.appop.AppOpsService$Ops) $r8;

        r23 = r22;

        if r22 != null goto label8;

        $r9 = new com.android.server.appop.AppOpsService$Ops;

        specialinvoke $r9.<com.android.server.appop.AppOpsService$Ops: void <init>(java.lang.String,com.android.server.appop.AppOpsService$UidState)>(r2, r1);

        r23 = $r9;

        $r10 = r1.<com.android.server.appop.AppOpsService$UidState: android.util.ArrayMap pkgOps>;

        virtualinvoke $r10.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r9);

     label8:
        $i8 = $r4.<com.android.server.appop.AppOpsService$Op: int op>;

        virtualinvoke r23.<com.android.server.appop.AppOpsService$Ops: void put(int,java.lang.Object)>($i8, $r4);

        return;
    }

    private void readPackage(org.xmlpull.v1.XmlPullParser) throws java.lang.NumberFormatException, org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        com.android.server.appop.AppOpsService r0;
        org.xmlpull.v1.XmlPullParser r1;
        java.lang.String r2, $r4, $r7, $r9;
        int i0, i1, $i3;
        boolean $z0;
        java.lang.StringBuilder $r5;

        r0 := @this: com.android.server.appop.AppOpsService;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "n");

        i0 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label1:
        i1 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i1 == 1 goto label6;

        if i1 != 3 goto label2;

        $i3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i3 <= i0 goto label6;

     label2:
        if i1 == 3 goto label1;

        if i1 != 4 goto label3;

        goto label1;

     label3:
        $r4 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("uid");

        if $z0 == 0 goto label4;

        specialinvoke r0.<com.android.server.appop.AppOpsService: void readUid(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, r2);

        goto label5;

     label4:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element under <pkg>: ");

        $r7 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AppOps", $r9);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r1);

     label5:
        goto label1;

     label6:
        return;
    }

    private void readUid(org.xmlpull.v1.XmlPullParser, java.lang.String) throws java.lang.NumberFormatException, org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        com.android.server.appop.AppOpsService r0;
        org.xmlpull.v1.XmlPullParser r1;
        java.lang.String r2, $r5, $r7, $r10, $r12;
        com.android.server.appop.AppOpsService$UidState r3;
        int i0, i1, $i2, $i4;
        android.util.SparseArray $r6;
        boolean $z0;
        java.lang.StringBuilder $r8;

        r0 := @this: com.android.server.appop.AppOpsService;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter1: java.lang.String;

        $r5 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "n");

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r5);

        r3 = specialinvoke r0.<com.android.server.appop.AppOpsService: com.android.server.appop.AppOpsService$UidState getUidStateLocked(int,boolean)>($i2, 1);

        i0 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label1:
        i1 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i1 == 1 goto label6;

        if i1 != 3 goto label2;

        $i4 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i4 <= i0 goto label6;

     label2:
        if i1 == 3 goto label1;

        if i1 != 4 goto label3;

        goto label1;

     label3:
        $r7 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("op");

        if $z0 == 0 goto label4;

        specialinvoke r0.<com.android.server.appop.AppOpsService: void readOp(org.xmlpull.v1.XmlPullParser,com.android.server.appop.AppOpsService$UidState,java.lang.String)>(r1, r3, r2);

        goto label5;

     label4:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element under <pkg>: ");

        $r10 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AppOps", $r12);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r1);

     label5:
        goto label1;

     label6:
        $r6 = r0.<com.android.server.appop.AppOpsService: android.util.SparseArray mOpModeWatchers>;

        virtualinvoke r3.<com.android.server.appop.AppOpsService$UidState: void evalForegroundOps(android.util.SparseArray)>($r6);

        return;
    }

    private void readUidOps(org.xmlpull.v1.XmlPullParser) throws java.lang.NumberFormatException, org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        com.android.server.appop.AppOpsService r0;
        org.xmlpull.v1.XmlPullParser r1;
        int i0, i1, i2, $i4, $i5, $i6;
        java.lang.String $r3, $r4, $r7, $r9, $r10, $r11;
        boolean $z0;
        java.lang.StringBuilder $r5;

        r0 := @this: com.android.server.appop.AppOpsService;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $r3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "n");

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3);

        i1 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label1:
        i2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i2 == 1 goto label6;

        if i2 != 3 goto label2;

        $i6 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i6 <= i1 goto label6;

     label2:
        if i2 == 3 goto label1;

        if i2 != 4 goto label3;

        goto label1;

     label3:
        $r4 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("op");

        if $z0 == 0 goto label4;

        $r10 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "n");

        $i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r10);

        $r11 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "m");

        $i5 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r11);

        virtualinvoke r0.<com.android.server.appop.AppOpsService: void setUidMode(int,int,int)>($i4, i0, $i5);

        goto label5;

     label4:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element under <uid-ops>: ");

        $r7 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AppOps", $r9);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r1);

     label5:
        goto label1;

     label6:
        return;
    }

    private void removeUidsForUserLocked(int)
    {
        com.android.server.appop.AppOpsService r0;
        int i0, $i1, $i2, $i3, i4;
        android.util.SparseArray $r1, $r2, $r3;

        r0 := @this: com.android.server.appop.AppOpsService;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.appop.AppOpsService: android.util.SparseArray mUidStates>;

        $i1 = virtualinvoke $r1.<android.util.SparseArray: int size()>();

        i4 = $i1 - 1;

     label1:
        if i4 < 0 goto label3;

        $r2 = r0.<com.android.server.appop.AppOpsService: android.util.SparseArray mUidStates>;

        $i2 = virtualinvoke $r2.<android.util.SparseArray: int keyAt(int)>(i4);

        $i3 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i2);

        if $i3 != i0 goto label2;

        $r3 = r0.<com.android.server.appop.AppOpsService: android.util.SparseArray mUidStates>;

        virtualinvoke $r3.<android.util.SparseArray: void removeAt(int)>(i4);

     label2:
        i4 = i4 + -1;

        goto label1;

     label3:
        return;
    }

    private void reportRuntimeAppOpAccessMessageAsyncLocked(int, java.lang.String, int, java.lang.String, java.lang.String)
    {
        com.android.server.appop.AppOpsService r0;
        int i0, i1;
        java.lang.String r1, r2, r3, $r4;
        boolean $z0;

        r0 := @this: com.android.server.appop.AppOpsService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: java.lang.String;

        specialinvoke r0.<com.android.server.appop.AppOpsService: void switchPackageIfBootTimeOrRarelyUsedLocked(java.lang.String)>(r1);

        $r4 = r0.<com.android.server.appop.AppOpsService: java.lang.String mSampledPackage>;

        $z0 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r4, r1);

        if $z0 != 0 goto label1;

        return;

     label1:
        specialinvoke r0.<com.android.server.appop.AppOpsService: void reportRuntimeAppOpAccessMessageInternalLocked(int,java.lang.String,int,java.lang.String,java.lang.String)>(i0, r1, i1, r2, r3);

        return;
    }

    private void reportRuntimeAppOpAccessMessageInternalLocked(int, java.lang.String, int, java.lang.String, java.lang.String)
    {
        com.android.server.appop.AppOpsService r0;
        int i0, i1, i2, i3, $i4, $i6;
        java.lang.String r1, r2, r3;
        float $f0, $f1, $f2, $f3, $f4;
        java.util.concurrent.ThreadLocalRandom $r4;
        byte $b5;
        android.app.RuntimeAppOpAccessMessage $r5;

        r0 := @this: com.android.server.appop.AppOpsService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: java.lang.String;

        $i4 = r0.<com.android.server.appop.AppOpsService: int mSampledAppOpCode>;

        i2 = staticinvoke <android.app.AppOpsManager: int leftCircularDistance(int,int,int)>(i1, $i4, 100);

        i3 = r0.<com.android.server.appop.AppOpsService: int mAcceptableLeftDistance>;

        if i3 >= i2 goto label1;

        return;

     label1:
        if i3 <= i2 goto label2;

        r0.<com.android.server.appop.AppOpsService: int mAcceptableLeftDistance> = i2;

        r0.<com.android.server.appop.AppOpsService: float mMessagesCollectedCount> = 0.0F;

     label2:
        $f0 = r0.<com.android.server.appop.AppOpsService: float mMessagesCollectedCount>;

        $f1 = $f0 + 1.0F;

        r0.<com.android.server.appop.AppOpsService: float mMessagesCollectedCount> = $f1;

        $r4 = staticinvoke <java.util.concurrent.ThreadLocalRandom: java.util.concurrent.ThreadLocalRandom current()>();

        $f2 = virtualinvoke $r4.<java.util.concurrent.ThreadLocalRandom: float nextFloat()>();

        $f3 = r0.<com.android.server.appop.AppOpsService: float mMessagesCollectedCount>;

        $f4 = 1.0F / $f3;

        $b5 = $f2 cmpg $f4;

        if $b5 > 0 goto label3;

        $r5 = new android.app.RuntimeAppOpAccessMessage;

        $i6 = r0.<com.android.server.appop.AppOpsService: int mSamplingStrategy>;

        specialinvoke $r5.<android.app.RuntimeAppOpAccessMessage: void <init>(int,int,java.lang.String,java.lang.String,java.lang.String,int)>(i0, i1, r1, r2, r3, $i6);

        r0.<com.android.server.appop.AppOpsService: android.app.RuntimeAppOpAccessMessage mCollectedRuntimePermissionMessage> = $r5;

     label3:
        return;
    }

    private void resampleAppOpForPackageLocked(java.lang.String)
    {
        com.android.server.appop.AppOpsService r0;
        java.lang.String r1;
        java.util.concurrent.ThreadLocalRandom $r2;
        int $i0;

        r0 := @this: com.android.server.appop.AppOpsService;

        r1 := @parameter0: java.lang.String;

        r0.<com.android.server.appop.AppOpsService: float mMessagesCollectedCount> = 0.0F;

        $r2 = staticinvoke <java.util.concurrent.ThreadLocalRandom: java.util.concurrent.ThreadLocalRandom current()>();

        $i0 = virtualinvoke $r2.<java.util.concurrent.ThreadLocalRandom: int nextInt(int)>(100);

        r0.<com.android.server.appop.AppOpsService: int mSampledAppOpCode> = $i0;

        r0.<com.android.server.appop.AppOpsService: int mAcceptableLeftDistance> = 100;

        r0.<com.android.server.appop.AppOpsService: java.lang.String mSampledPackage> = r1;

        return;
    }

    private void resamplePackageAndAppOpLocked(java.util.List)
    {
        com.android.server.appop.AppOpsService r0;
        java.util.List r1;
        boolean $z0;
        java.util.concurrent.ThreadLocalRandom $r2;
        int $i0, $i1;
        java.lang.Object $r3;
        java.lang.String $r4;

        r0 := @this: com.android.server.appop.AppOpsService;

        r1 := @parameter0: java.util.List;

        $z0 = interfaceinvoke r1.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        r0.<com.android.server.appop.AppOpsService: int mSamplingStrategy> = 1;

        $r2 = staticinvoke <java.util.concurrent.ThreadLocalRandom: java.util.concurrent.ThreadLocalRandom current()>();

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        $i1 = virtualinvoke $r2.<java.util.concurrent.ThreadLocalRandom: int nextInt(int)>($i0);

        $r3 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>($i1);

        $r4 = (java.lang.String) $r3;

        specialinvoke r0.<com.android.server.appop.AppOpsService: void resampleAppOpForPackageLocked(java.lang.String)>($r4);

     label1:
        return;
    }

    private static java.lang.String resolvePackageName(int, java.lang.String)
    {
        int i0;
        java.lang.String r0;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.String;

        if i0 != 0 goto label1;

        return "root";

     label1:
        if i0 != 2000 goto label2;

        return "com.android.shell";

     label2:
        if i0 != 1013 goto label3;

        return "media";

     label3:
        if i0 != 1041 goto label4;

        return "audioserver";

     label4:
        if i0 != 1047 goto label5;

        return "cameraserver";

     label5:
        if i0 != 1000 goto label6;

        if r0 != null goto label6;

        return "android";

     label6:
        return r0;
    }

    private static int resolveUid(java.lang.String)
    {
        java.lang.String r0;
        int $i0;
        boolean $z0, $z1, $z2, $z3, $z4;
        byte b1;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label01;

        return -1;

     label01:
        $i0 = virtualinvoke r0.<java.lang.String: int hashCode()>();

        lookupswitch($i0)
        {
            case -31178072: goto label07;
            case 3506402: goto label06;
            case 103772132: goto label05;
            case 109403696: goto label04;
            case 1344606873: goto label03;
            default: goto label02;
        };

     label02:
        goto label08;

     label03:
        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("audioserver");

        if $z0 == 0 goto label02;

        b1 = 3;

        goto label09;

     label04:
        $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("shell");

        if $z1 == 0 goto label02;

        b1 = 1;

        goto label09;

     label05:
        $z2 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("media");

        if $z2 == 0 goto label02;

        b1 = 2;

        goto label09;

     label06:
        $z3 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("root");

        if $z3 == 0 goto label02;

        b1 = 0;

        goto label09;

     label07:
        $z4 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("cameraserver");

        if $z4 == 0 goto label02;

        b1 = 4;

        goto label09;

     label08:
        b1 = -1;

     label09:
        if b1 == 0 goto label14;

        if b1 == 1 goto label13;

        if b1 == 2 goto label12;

        if b1 == 3 goto label11;

        if b1 == 4 goto label10;

        return -1;

     label10:
        return 1047;

     label11:
        return 1041;

     label12:
        return 1013;

     label13:
        return 2000;

     label14:
        return 0;
    }

    private void scheduleFastWriteLocked()
    {
        com.android.server.appop.AppOpsService r0;
        boolean $z0;
        java.lang.Runnable $r1, $r3;
        android.os.Handler $r2, $r4;

        r0 := @this: com.android.server.appop.AppOpsService;

        $z0 = r0.<com.android.server.appop.AppOpsService: boolean mFastWriteScheduled>;

        if $z0 != 0 goto label1;

        r0.<com.android.server.appop.AppOpsService: boolean mWriteScheduled> = 1;

        r0.<com.android.server.appop.AppOpsService: boolean mFastWriteScheduled> = 1;

        $r2 = r0.<com.android.server.appop.AppOpsService: android.os.Handler mHandler>;

        $r1 = r0.<com.android.server.appop.AppOpsService: java.lang.Runnable mWriteRunner>;

        virtualinvoke $r2.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r1);

        $r4 = r0.<com.android.server.appop.AppOpsService: android.os.Handler mHandler>;

        $r3 = r0.<com.android.server.appop.AppOpsService: java.lang.Runnable mWriteRunner>;

        virtualinvoke $r4.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r3, 10000L);

     label1:
        return;
    }

    private void scheduleOpActiveChangedIfNeededLocked(int, int, java.lang.String, boolean)
    {
        com.android.server.appop.AppOpsService r0;
        int i0, i1, i2, $i3, $i4, i5;
        java.lang.String r1;
        boolean z0;
        com.android.server.appop.AppOpsService$ActiveCallback r2;
        android.util.ArrayMap $r3, $r10;
        android.os.Handler $r4;
        com.android.server.appop.'-$$Lambda$AppOpsService$ac4Ra3Yhj0OQzvkaL2dLbsuLAmQ' $r5;
        java.lang.Integer $r6, $r7;
        java.lang.Boolean $r8;
        android.os.Message $r9;
        java.lang.Object $r11, $r13;
        android.util.SparseArray $r12;
        android.util.ArraySet r15, r16, r17;
        com.android.internal.util.function.HexConsumer r18;

        r0 := @this: com.android.server.appop.AppOpsService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        r15 = null;

        $r3 = r0.<com.android.server.appop.AppOpsService: android.util.ArrayMap mActiveWatchers>;

        i2 = virtualinvoke $r3.<android.util.ArrayMap: int size()>();

        i5 = 0;

     label1:
        if i5 >= i2 goto label5;

        $r10 = r0.<com.android.server.appop.AppOpsService: android.util.ArrayMap mActiveWatchers>;

        $r11 = virtualinvoke $r10.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i5);

        $r12 = (android.util.SparseArray) $r11;

        $r13 = virtualinvoke $r12.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r2 = (com.android.server.appop.AppOpsService$ActiveCallback) $r13;

        r16 = r15;

        if r2 == null goto label4;

        $i3 = r2.<com.android.server.appop.AppOpsService$ActiveCallback: int mWatchingUid>;

        if $i3 < 0 goto label2;

        $i4 = r2.<com.android.server.appop.AppOpsService$ActiveCallback: int mWatchingUid>;

        if $i4 == i1 goto label2;

        r16 = r15;

        goto label4;

     label2:
        r16 = r15;

        if r15 != null goto label3;

        r17 = new android.util.ArraySet;

        specialinvoke r17.<android.util.ArraySet: void <init>()>();

        r16 = r17;

     label3:
        virtualinvoke r16.<android.util.ArraySet: boolean add(java.lang.Object)>(r2);

     label4:
        i5 = i5 + 1;

        r15 = r16;

        goto label1;

     label5:
        if r15 != null goto label6;

        return;

     label6:
        $r4 = r0.<com.android.server.appop.AppOpsService: android.os.Handler mHandler>;

        $r5 = <com.android.server.appop._$$Lambda$AppOpsService$ac4Ra3Yhj0OQzvkaL2dLbsuLAmQ: com.android.server.appop.'-$$Lambda$AppOpsService$ac4Ra3Yhj0OQzvkaL2dLbsuLAmQ' INSTANCE>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        r18 = (com.android.internal.util.function.HexConsumer) $r5;

        $r9 = staticinvoke <com.android.internal.util.function.pooled.PooledLambda: android.os.Message obtainMessage(com.android.internal.util.function.HexConsumer,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(r18, r0, r15, $r6, $r7, r1, $r8);

        virtualinvoke $r4.<android.os.Handler: boolean sendMessage(android.os.Message)>($r9);

        return;
    }

    private void scheduleOpNotedIfNeededLocked(int, int, java.lang.String, int)
    {
        com.android.server.appop.AppOpsService r0;
        int i0, i1, i2, i3, $i4, $i5, i6;
        java.lang.String r1;
        com.android.server.appop.AppOpsService$NotedCallback r2;
        android.util.ArrayMap $r3, $r10;
        android.os.Handler $r4;
        com.android.server.appop.'-$$Lambda$AppOpsService$AfBLuTvVESlqN91IyRX84hMV5nE' $r5;
        java.lang.Integer $r6, $r7, $r8;
        android.os.Message $r9;
        java.lang.Object $r11, $r13;
        android.util.SparseArray $r12;
        android.util.ArraySet r15, r16, r17;
        com.android.internal.util.function.HexConsumer r18;

        r0 := @this: com.android.server.appop.AppOpsService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        i2 := @parameter3: int;

        r15 = null;

        $r3 = r0.<com.android.server.appop.AppOpsService: android.util.ArrayMap mNotedWatchers>;

        i3 = virtualinvoke $r3.<android.util.ArrayMap: int size()>();

        i6 = 0;

     label1:
        if i6 >= i3 goto label5;

        $r10 = r0.<com.android.server.appop.AppOpsService: android.util.ArrayMap mNotedWatchers>;

        $r11 = virtualinvoke $r10.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i6);

        $r12 = (android.util.SparseArray) $r11;

        $r13 = virtualinvoke $r12.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r2 = (com.android.server.appop.AppOpsService$NotedCallback) $r13;

        r16 = r15;

        if r2 == null goto label4;

        $i4 = r2.<com.android.server.appop.AppOpsService$NotedCallback: int mWatchingUid>;

        if $i4 < 0 goto label2;

        $i5 = r2.<com.android.server.appop.AppOpsService$NotedCallback: int mWatchingUid>;

        if $i5 == i1 goto label2;

        r16 = r15;

        goto label4;

     label2:
        r16 = r15;

        if r15 != null goto label3;

        r17 = new android.util.ArraySet;

        specialinvoke r17.<android.util.ArraySet: void <init>()>();

        r16 = r17;

     label3:
        virtualinvoke r16.<android.util.ArraySet: boolean add(java.lang.Object)>(r2);

     label4:
        i6 = i6 + 1;

        r15 = r16;

        goto label1;

     label5:
        if r15 != null goto label6;

        return;

     label6:
        $r4 = r0.<com.android.server.appop.AppOpsService: android.os.Handler mHandler>;

        $r5 = <com.android.server.appop._$$Lambda$AppOpsService$AfBLuTvVESlqN91IyRX84hMV5nE: com.android.server.appop.'-$$Lambda$AppOpsService$AfBLuTvVESlqN91IyRX84hMV5nE' INSTANCE>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        r18 = (com.android.internal.util.function.HexConsumer) $r5;

        $r9 = staticinvoke <com.android.internal.util.function.pooled.PooledLambda: android.os.Message obtainMessage(com.android.internal.util.function.HexConsumer,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(r18, r0, r15, $r6, $r7, r1, $r8);

        virtualinvoke $r4.<android.os.Handler: boolean sendMessage(android.os.Message)>($r9);

        return;
    }

    private void scheduleOpStartedIfNeededLocked(int, int, java.lang.String, int)
    {
        com.android.server.appop.AppOpsService r0;
        int i0, i1, i2, i3, $i4, $i5, i6;
        java.lang.String r1;
        com.android.server.appop.AppOpsService$StartedCallback r2;
        android.util.ArrayMap $r3, $r10;
        android.os.Handler $r4;
        com.android.server.appop.'-$$Lambda$AppOpsService$7TpfX4NXXUoI4jqIGxhEk65lHLs' $r5;
        java.lang.Integer $r6, $r7, $r8;
        android.os.Message $r9;
        java.lang.Object $r11, $r13;
        android.util.SparseArray $r12;
        android.util.ArraySet r15, r16, r17;
        com.android.internal.util.function.HexConsumer r18;

        r0 := @this: com.android.server.appop.AppOpsService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        i2 := @parameter3: int;

        r15 = null;

        $r3 = r0.<com.android.server.appop.AppOpsService: android.util.ArrayMap mStartedWatchers>;

        i3 = virtualinvoke $r3.<android.util.ArrayMap: int size()>();

        i6 = 0;

     label1:
        if i6 >= i3 goto label5;

        $r10 = r0.<com.android.server.appop.AppOpsService: android.util.ArrayMap mStartedWatchers>;

        $r11 = virtualinvoke $r10.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i6);

        $r12 = (android.util.SparseArray) $r11;

        $r13 = virtualinvoke $r12.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r2 = (com.android.server.appop.AppOpsService$StartedCallback) $r13;

        r16 = r15;

        if r2 == null goto label4;

        $i4 = r2.<com.android.server.appop.AppOpsService$StartedCallback: int mWatchingUid>;

        if $i4 < 0 goto label2;

        $i5 = r2.<com.android.server.appop.AppOpsService$StartedCallback: int mWatchingUid>;

        if $i5 == i1 goto label2;

        r16 = r15;

        goto label4;

     label2:
        r16 = r15;

        if r15 != null goto label3;

        r17 = new android.util.ArraySet;

        specialinvoke r17.<android.util.ArraySet: void <init>()>();

        r16 = r17;

     label3:
        virtualinvoke r16.<android.util.ArraySet: boolean add(java.lang.Object)>(r2);

     label4:
        i6 = i6 + 1;

        r15 = r16;

        goto label1;

     label5:
        if r15 != null goto label6;

        return;

     label6:
        $r4 = r0.<com.android.server.appop.AppOpsService: android.os.Handler mHandler>;

        $r5 = <com.android.server.appop._$$Lambda$AppOpsService$7TpfX4NXXUoI4jqIGxhEk65lHLs: com.android.server.appop.'-$$Lambda$AppOpsService$7TpfX4NXXUoI4jqIGxhEk65lHLs' INSTANCE>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        r18 = (com.android.internal.util.function.HexConsumer) $r5;

        $r9 = staticinvoke <com.android.internal.util.function.pooled.PooledLambda: android.os.Message obtainMessage(com.android.internal.util.function.HexConsumer,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(r18, r0, r15, $r6, $r7, r1, $r8);

        virtualinvoke $r4.<android.os.Handler: boolean sendMessage(android.os.Message)>($r9);

        return;
    }

    private void scheduleWriteLocked()
    {
        com.android.server.appop.AppOpsService r0;
        boolean $z0;
        java.lang.Runnable $r1;
        android.os.Handler $r2;

        r0 := @this: com.android.server.appop.AppOpsService;

        $z0 = r0.<com.android.server.appop.AppOpsService: boolean mWriteScheduled>;

        if $z0 != 0 goto label1;

        r0.<com.android.server.appop.AppOpsService: boolean mWriteScheduled> = 1;

        $r2 = r0.<com.android.server.appop.AppOpsService: android.os.Handler mHandler>;

        $r1 = r0.<com.android.server.appop.AppOpsService: java.lang.Runnable mWriteRunner>;

        virtualinvoke $r2.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r1, 1800000L);

     label1:
        return;
    }

    private void setMode(int, int, java.lang.String, int, com.android.internal.app.IAppOpsCallback)
    {
        com.android.server.appop.AppOpsService r0;
        int i0, i1, $i2, $i3, $i4, i5, i6, $i7, $i8;
        com.android.internal.app.IAppOpsCallback r1;
        android.os.Handler $r2;
        com.android.server.appop.'-$$Lambda$AppOpsService$NDUi03ZZuuR42-RDEIQ0UELKycc' $r3;
        java.lang.Integer $r4, $r5;
        android.os.Message $r6;
        android.util.SparseArray $r7, $r12;
        java.lang.Object $r8, $r11, $r25;
        android.util.ArrayMap $r9, $r24;
        android.os.IBinder $r10;
        java.lang.Throwable $r13, $r14, $r15, $r16, $r17, r28;
        java.lang.String r18;
        android.util.ArraySet r19, r23, r26, r27, r30, r31;
        android.app.AppOpsManager$RestrictionBypass r20;
        com.android.server.appop.AppOpsService$UidState r21;
        com.android.server.appop.AppOpsService$Op r22;
        com.android.internal.util.function.QuintConsumer r32;

        r0 := @this: com.android.server.appop.AppOpsService;

        i5 := @parameter0: int;

        i0 := @parameter1: int;

        r18 := @parameter2: java.lang.String;

        i1 := @parameter3: int;

        r1 := @parameter4: com.android.internal.app.IAppOpsCallback;

        $i2 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        specialinvoke r0.<com.android.server.appop.AppOpsService: void enforceManageAppOpsModes(int,int,int)>($i2, $i3, i0);

        specialinvoke r0.<com.android.server.appop.AppOpsService: void verifyIncomingOp(int)>(i5);

        r19 = null;

        i6 = staticinvoke <android.app.AppOpsManager: int opToSwitch(int)>(i5);

     label01:
        r20 = specialinvoke r0.<com.android.server.appop.AppOpsService: android.app.AppOpsManager$RestrictionBypass verifyAndGetBypass(int,java.lang.String,java.lang.String)>(i0, r18, null);

     label02:
        entermonitor r0;

     label03:
        r21 = specialinvoke r0.<com.android.server.appop.AppOpsService: com.android.server.appop.AppOpsService$UidState getUidStateLocked(int,boolean)>(i0, 0);

        r22 = specialinvoke r0.<com.android.server.appop.AppOpsService: com.android.server.appop.AppOpsService$Op getOpLocked(int,int,java.lang.String,java.lang.String,android.app.AppOpsManager$RestrictionBypass,boolean)>(i6, i0, r18, null, r20, 1);

     label04:
        if r22 == null goto label22;

     label05:
        $i4 = staticinvoke <com.android.server.appop.AppOpsService$Op: int access$300(com.android.server.appop.AppOpsService$Op)>(r22);

        if $i4 == i1 goto label22;

        staticinvoke <com.android.server.appop.AppOpsService$Op: int access$302(com.android.server.appop.AppOpsService$Op,int)>(r22, i1);

     label06:
        if r21 == null goto label08;

     label07:
        $r12 = r0.<com.android.server.appop.AppOpsService: android.util.SparseArray mOpModeWatchers>;

        virtualinvoke r21.<com.android.server.appop.AppOpsService$UidState: void evalForegroundOps(android.util.SparseArray)>($r12);

     label08:
        $r7 = r0.<com.android.server.appop.AppOpsService: android.util.SparseArray mOpModeWatchers>;

        $r8 = virtualinvoke $r7.<android.util.SparseArray: java.lang.Object get(int)>(i6);

        r23 = (android.util.ArraySet) $r8;

     label09:
        if r23 == null goto label12;

     label10:
        r30 = new android.util.ArraySet;

        r19 = r30;

        specialinvoke r30.<android.util.ArraySet: void <init>()>();

     label11:
        virtualinvoke r19.<android.util.ArraySet: void addAll(android.util.ArraySet)>(r23);

     label12:
        $r24 = r0.<com.android.server.appop.AppOpsService: android.util.ArrayMap mPackageModeWatchers>;

        $r25 = virtualinvoke $r24.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r18);

        r26 = (android.util.ArraySet) $r25;

     label13:
        r27 = r19;

        if r26 == null goto label16;

        r27 = r19;

        if r19 != null goto label15;

     label14:
        r31 = new android.util.ArraySet;

        r27 = r31;

        specialinvoke r31.<android.util.ArraySet: void <init>()>();

     label15:
        virtualinvoke r27.<android.util.ArraySet: void addAll(android.util.ArraySet)>(r26);

     label16:
        if r27 == null goto label18;

        if r1 == null goto label18;

     label17:
        $r9 = r0.<com.android.server.appop.AppOpsService: android.util.ArrayMap mModeWatchers>;

        $r10 = interfaceinvoke r1.<com.android.internal.app.IAppOpsCallback: android.os.IBinder asBinder()>();

        $r11 = virtualinvoke $r9.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r10);

        virtualinvoke r27.<android.util.ArraySet: boolean remove(java.lang.Object)>($r11);

     label18:
        $i7 = r22.<com.android.server.appop.AppOpsService$Op: int op>;

        $i8 = staticinvoke <android.app.AppOpsManager: int opToDefaultMode(int)>($i7);

        if i1 != $i8 goto label19;

        specialinvoke r0.<com.android.server.appop.AppOpsService: void pruneOpLocked(com.android.server.appop.AppOpsService$Op,int,java.lang.String)>(r22, i0, r18);

     label19:
        specialinvoke r0.<com.android.server.appop.AppOpsService: void scheduleFastWriteLocked()>();

     label20:
        goto label23;

     label21:
        $r15 := @caughtexception;

        r28 = $r15;

        goto label28;

     label22:
        r27 = null;

     label23:
        exitmonitor r0;

     label24:
        if r27 == null goto label25;

        $r2 = r0.<com.android.server.appop.AppOpsService: android.os.Handler mHandler>;

        $r3 = <com.android.server.appop._$$Lambda$AppOpsService$NDUi03ZZuuR42_RDEIQ0UELKycc: com.android.server.appop.'-$$Lambda$AppOpsService$NDUi03ZZuuR42-RDEIQ0UELKycc' INSTANCE>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6);

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        r32 = (com.android.internal.util.function.QuintConsumer) $r3;

        $r6 = staticinvoke <com.android.internal.util.function.pooled.PooledLambda: android.os.Message obtainMessage(com.android.internal.util.function.QuintConsumer,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(r32, r0, r27, $r4, $r5, r18);

        virtualinvoke $r2.<android.os.Handler: boolean sendMessage(android.os.Message)>($r6);

        goto label25;

     label25:
        specialinvoke r0.<com.android.server.appop.AppOpsService: void notifyOpChangedSync(int,int,java.lang.String,int)>(i6, i0, r18, i1);

        return;

     label26:
        $r14 := @caughtexception;

        r28 = $r14;

        goto label28;

     label27:
        $r13 := @caughtexception;

        r28 = $r13;

     label28:
        exitmonitor r0;

     label29:
        throw r28;

     label30:
        $r16 := @caughtexception;

        r28 = $r16;

        goto label28;

     label31:
        $r17 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("AppOps", "Cannot setMode", $r17);

        return;

        catch java.lang.SecurityException from label01 to label02 with label31;
        catch java.lang.Throwable from label03 to label04 with label27;
        catch java.lang.Throwable from label05 to label06 with label21;
        catch java.lang.Throwable from label07 to label08 with label21;
        catch java.lang.Throwable from label08 to label09 with label21;
        catch java.lang.Throwable from label10 to label11 with label21;
        catch java.lang.Throwable from label11 to label12 with label21;
        catch java.lang.Throwable from label12 to label13 with label21;
        catch java.lang.Throwable from label14 to label15 with label21;
        catch java.lang.Throwable from label15 to label16 with label21;
        catch java.lang.Throwable from label17 to label18 with label21;
        catch java.lang.Throwable from label18 to label19 with label21;
        catch java.lang.Throwable from label19 to label20 with label21;
        catch java.lang.Throwable from label23 to label24 with label26;
        catch java.lang.Throwable from label28 to label29 with label30;
    }

    private void setUidMode(int, int, int, com.android.internal.app.IAppOpsCallback)
    {
        com.android.server.appop.AppOpsService r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, i8, i9;
        android.util.SparseIntArray $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, r14, r15;
        android.util.SparseArray $r9, $r16;
        java.lang.Throwable $r10;
        com.android.internal.app.IAppOpsCallback r11;
        com.android.server.appop.AppOpsService$UidState r12, r13;

        r0 := @this: com.android.server.appop.AppOpsService;

        i8 := @parameter0: int;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r11 := @parameter3: com.android.internal.app.IAppOpsCallback;

        $i3 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i4 = staticinvoke <android.os.Binder: int getCallingUid()>();

        specialinvoke r0.<com.android.server.appop.AppOpsService: void enforceManageAppOpsModes(int,int,int)>($i3, $i4, i0);

        specialinvoke r0.<com.android.server.appop.AppOpsService: void verifyIncomingOp(int)>(i8);

        i2 = staticinvoke <android.app.AppOpsManager: int opToSwitch(int)>(i8);

        if r11 != null goto label01;

        specialinvoke r0.<com.android.server.appop.AppOpsService: void updatePermissionRevokedCompat(int,int,int)>(i0, i2, i1);

     label01:
        entermonitor r0;

     label02:
        i9 = staticinvoke <android.app.AppOpsManager: int opToDefaultMode(int)>(i2);

        r12 = specialinvoke r0.<com.android.server.appop.AppOpsService: com.android.server.appop.AppOpsService$UidState getUidStateLocked(int,boolean)>(i0, 0);

     label03:
        if r12 != null goto label09;

        if i1 != i9 goto label06;

     label04:
        exitmonitor r0;

     label05:
        return;

     label06:
        r13 = new com.android.server.appop.AppOpsService$UidState;

        specialinvoke r13.<com.android.server.appop.AppOpsService$UidState: void <init>(com.android.server.appop.AppOpsService,int)>(r0, i0);

     label07:
        r14 = new android.util.SparseIntArray;

        specialinvoke r14.<android.util.SparseIntArray: void <init>()>();

        r13.<com.android.server.appop.AppOpsService$UidState: android.util.SparseIntArray opModes> = r14;

        $r8 = r13.<com.android.server.appop.AppOpsService$UidState: android.util.SparseIntArray opModes>;

        virtualinvoke $r8.<android.util.SparseIntArray: void put(int,int)>(i2, i1);

        $r9 = r0.<com.android.server.appop.AppOpsService: android.util.SparseArray mUidStates>;

        virtualinvoke $r9.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r13);

        specialinvoke r0.<com.android.server.appop.AppOpsService: void scheduleWriteLocked()>();

     label08:
        goto label21;

     label09:
        $r1 = r12.<com.android.server.appop.AppOpsService$UidState: android.util.SparseIntArray opModes>;

        if $r1 != null goto label13;

     label10:
        r13 = r12;

        if i1 == i9 goto label21;

     label11:
        r15 = new android.util.SparseIntArray;

        specialinvoke r15.<android.util.SparseIntArray: void <init>()>();

        r12.<com.android.server.appop.AppOpsService$UidState: android.util.SparseIntArray opModes> = r15;

        $r7 = r12.<com.android.server.appop.AppOpsService$UidState: android.util.SparseIntArray opModes>;

        virtualinvoke $r7.<android.util.SparseIntArray: void put(int,int)>(i2, i1);

        specialinvoke r0.<com.android.server.appop.AppOpsService: void scheduleWriteLocked()>();

     label12:
        r13 = r12;

        goto label21;

     label13:
        $r2 = r12.<com.android.server.appop.AppOpsService$UidState: android.util.SparseIntArray opModes>;

        $i5 = virtualinvoke $r2.<android.util.SparseIntArray: int indexOfKey(int)>(i2);

        if $i5 < 0 goto label15;

        $r6 = r12.<com.android.server.appop.AppOpsService$UidState: android.util.SparseIntArray opModes>;

        $i7 = virtualinvoke $r6.<android.util.SparseIntArray: int get(int)>(i2);

        if $i7 != i1 goto label15;

        exitmonitor r0;

     label14:
        return;

     label15:
        if i1 != i9 goto label18;

     label16:
        $r4 = r12.<com.android.server.appop.AppOpsService$UidState: android.util.SparseIntArray opModes>;

        virtualinvoke $r4.<android.util.SparseIntArray: void delete(int)>(i2);

        $r5 = r12.<com.android.server.appop.AppOpsService$UidState: android.util.SparseIntArray opModes>;

        $i6 = virtualinvoke $r5.<android.util.SparseIntArray: int size()>();

        if $i6 > 0 goto label19;

        r12.<com.android.server.appop.AppOpsService$UidState: android.util.SparseIntArray opModes> = null;

     label17:
        goto label19;

     label18:
        $r3 = r12.<com.android.server.appop.AppOpsService$UidState: android.util.SparseIntArray opModes>;

        virtualinvoke $r3.<android.util.SparseIntArray: void put(int,int)>(i2, i1);

     label19:
        specialinvoke r0.<com.android.server.appop.AppOpsService: void scheduleWriteLocked()>();

     label20:
        r13 = r12;

     label21:
        $r16 = r0.<com.android.server.appop.AppOpsService: android.util.SparseArray mOpModeWatchers>;

        virtualinvoke r13.<com.android.server.appop.AppOpsService$UidState: void evalForegroundOps(android.util.SparseArray)>($r16);

        exitmonitor r0;

     label22:
        specialinvoke r0.<com.android.server.appop.AppOpsService: void notifyOpChangedForAllPkgsInUid(int,int,boolean,com.android.internal.app.IAppOpsCallback)>(i2, i0, 0, r11);

        specialinvoke r0.<com.android.server.appop.AppOpsService: void notifyOpChangedSync(int,int,java.lang.String,int)>(i2, i0, null, i1);

        return;

     label23:
        $r10 := @caughtexception;

     label24:
        exitmonitor r0;

     label25:
        throw $r10;

        catch java.lang.Throwable from label02 to label03 with label23;
        catch java.lang.Throwable from label04 to label05 with label23;
        catch java.lang.Throwable from label06 to label07 with label23;
        catch java.lang.Throwable from label07 to label08 with label23;
        catch java.lang.Throwable from label09 to label10 with label23;
        catch java.lang.Throwable from label11 to label12 with label23;
        catch java.lang.Throwable from label13 to label14 with label23;
        catch java.lang.Throwable from label16 to label17 with label23;
        catch java.lang.Throwable from label18 to label19 with label23;
        catch java.lang.Throwable from label19 to label20 with label23;
        catch java.lang.Throwable from label21 to label22 with label23;
        catch java.lang.Throwable from label24 to label25 with label23;
    }

    private void setUserRestrictionNoCheck(int, boolean, android.os.IBinder, int, java.lang.String[])
    {
        com.android.server.appop.AppOpsService r0;
        int i0, i1;
        boolean z0, $z1, $z2;
        java.lang.String[] r1;
        com.android.server.appop.AppOpsService$ClientRestrictionState r2, r17, r20;
        android.util.ArrayMap $r3, $r5, $r12;
        java.lang.Object $r4;
        android.os.Handler $r7;
        com.android.server.appop.'-$$Lambda$AppOpsService$GUeKjlbzT65s86vaxy5gvOajuhw' $r8;
        java.lang.Integer $r9, $r10;
        android.os.Message $r11;
        java.lang.Throwable $r14;
        android.os.RemoteException $r15;
        android.os.IBinder r16;
        com.android.internal.util.function.TriConsumer r21;

        r0 := @this: com.android.server.appop.AppOpsService;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r16 := @parameter2: android.os.IBinder;

        i1 := @parameter3: int;

        r1 := @parameter4: java.lang.String[];

        entermonitor r0;

     label01:
        $r3 = r0.<com.android.server.appop.AppOpsService: android.util.ArrayMap mOpUserRestrictions>;

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r16);

        r2 = (com.android.server.appop.AppOpsService$ClientRestrictionState) $r4;

     label02:
        r17 = r2;

        if r2 != null goto label09;

     label03:
        r20 = new com.android.server.appop.AppOpsService$ClientRestrictionState;

        r17 = r20;

        specialinvoke r20.<com.android.server.appop.AppOpsService$ClientRestrictionState: void <init>(com.android.server.appop.AppOpsService,android.os.IBinder)>(r0, r16);

     label04:
        $r12 = r0.<com.android.server.appop.AppOpsService: android.util.ArrayMap mOpUserRestrictions>;

        virtualinvoke $r12.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r16, r20);

     label05:
        goto label09;

     label06:
        $r15 := @caughtexception;

     label07:
        exitmonitor r0;

     label08:
        return;

     label09:
        $z1 = virtualinvoke r17.<com.android.server.appop.AppOpsService$ClientRestrictionState: boolean setRestriction(int,boolean,java.lang.String[],int)>(i0, z0, r1, i1);

        if $z1 == 0 goto label10;

        $r7 = r0.<com.android.server.appop.AppOpsService: android.os.Handler mHandler>;

        $r8 = <com.android.server.appop._$$Lambda$AppOpsService$GUeKjlbzT65s86vaxy5gvOajuhw: com.android.server.appop.'-$$Lambda$AppOpsService$GUeKjlbzT65s86vaxy5gvOajuhw' INSTANCE>;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-2);

        r21 = (com.android.internal.util.function.TriConsumer) $r8;

        $r11 = staticinvoke <com.android.internal.util.function.pooled.PooledLambda: android.os.Message obtainMessage(com.android.internal.util.function.TriConsumer,java.lang.Object,java.lang.Object,java.lang.Object)>(r21, r0, $r9, $r10);

        virtualinvoke $r7.<android.os.Handler: boolean sendMessage(android.os.Message)>($r11);

     label10:
        $z2 = virtualinvoke r17.<com.android.server.appop.AppOpsService$ClientRestrictionState: boolean isDefault()>();

        if $z2 == 0 goto label11;

        $r5 = r0.<com.android.server.appop.AppOpsService: android.util.ArrayMap mOpUserRestrictions>;

        virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r16);

        virtualinvoke r17.<com.android.server.appop.AppOpsService$ClientRestrictionState: void destroy()>();

     label11:
        exitmonitor r0;

     label12:
        return;

     label13:
        $r14 := @caughtexception;

     label14:
        exitmonitor r0;

     label15:
        throw $r14;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch android.os.RemoteException from label03 to label04 with label06;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label04 to label05 with label13;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label10 to label11 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
    }

    private void switchPackageIfBootTimeOrRarelyUsedLocked(java.lang.String)
    {
        com.android.server.appop.AppOpsService r0;
        java.lang.String r1, $r2;
        android.util.ArraySet $r3, $r4;
        boolean $z0;
        java.util.concurrent.ThreadLocalRandom $r5, $r6;
        float $f0, $f1;
        byte $b0, $b1;

        r0 := @this: com.android.server.appop.AppOpsService;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.appop.AppOpsService: java.lang.String mSampledPackage>;

        if $r2 != null goto label1;

        $r6 = staticinvoke <java.util.concurrent.ThreadLocalRandom: java.util.concurrent.ThreadLocalRandom current()>();

        $f1 = virtualinvoke $r6.<java.util.concurrent.ThreadLocalRandom: float nextFloat()>();

        $b1 = $f1 cmpg 0.5F;

        if $b1 >= 0 goto label2;

        r0.<com.android.server.appop.AppOpsService: int mSamplingStrategy> = 3;

        specialinvoke r0.<com.android.server.appop.AppOpsService: void resampleAppOpForPackageLocked(java.lang.String)>(r1);

        goto label2;

     label1:
        $r3 = r0.<com.android.server.appop.AppOpsService: android.util.ArraySet mRarelyUsedPackages>;

        $z0 = virtualinvoke $r3.<android.util.ArraySet: boolean contains(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        $r4 = r0.<com.android.server.appop.AppOpsService: android.util.ArraySet mRarelyUsedPackages>;

        virtualinvoke $r4.<android.util.ArraySet: boolean remove(java.lang.Object)>(r1);

        $r5 = staticinvoke <java.util.concurrent.ThreadLocalRandom: java.util.concurrent.ThreadLocalRandom current()>();

        $f0 = virtualinvoke $r5.<java.util.concurrent.ThreadLocalRandom: float nextFloat()>();

        $b0 = $f0 cmpg 0.5F;

        if $b0 >= 0 goto label2;

        r0.<com.android.server.appop.AppOpsService: int mSamplingStrategy> = 2;

        specialinvoke r0.<com.android.server.appop.AppOpsService: void resampleAppOpForPackageLocked(java.lang.String)>(r1);

     label2:
        return;
    }

    private void updateAppWidgetVisibility(android.util.SparseArray, boolean)
    {
        com.android.server.appop.AppOpsService r0;
        boolean z0, $z1, $z2, $z3;
        com.android.server.appop.AppOpsService$UidState r1;
        int $i0, $i1, i2;
        java.lang.Throwable $r2;
        android.util.SparseArray r3;

        r0 := @this: com.android.server.appop.AppOpsService;

        r3 := @parameter0: android.util.SparseArray;

        z0 := @parameter1: boolean;

        entermonitor r0;

     label01:
        $i0 = virtualinvoke r3.<android.util.SparseArray: int size()>();

        i2 = $i0 - 1;

     label02:
        if i2 < 0 goto label07;

     label03:
        $i1 = virtualinvoke r3.<android.util.SparseArray: int keyAt(int)>(i2);

        r1 = specialinvoke r0.<com.android.server.appop.AppOpsService: com.android.server.appop.AppOpsService$UidState getUidStateLocked(int,boolean)>($i1, 1);

     label04:
        if r1 == null goto label06;

     label05:
        $z1 = r1.<com.android.server.appop.AppOpsService$UidState: boolean pendingAppWidgetVisible>;

        if $z1 == z0 goto label06;

        r1.<com.android.server.appop.AppOpsService$UidState: boolean pendingAppWidgetVisible> = z0;

        $z3 = r1.<com.android.server.appop.AppOpsService$UidState: boolean pendingAppWidgetVisible>;

        $z2 = r1.<com.android.server.appop.AppOpsService$UidState: boolean appWidgetVisible>;

        if $z3 == $z2 goto label06;

        specialinvoke r0.<com.android.server.appop.AppOpsService: void commitUidPendingStateLocked(com.android.server.appop.AppOpsService$UidState)>(r1);

     label06:
        i2 = i2 + -1;

        goto label02;

     label07:
        exitmonitor r0;

     label08:
        return;

     label09:
        $r2 := @caughtexception;

     label10:
        exitmonitor r0;

     label11:
        throw $r2;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    private void updatePendingState(long, int)
    {
        com.android.server.appop.AppOpsService r0;
        long l0, $l2, $l3;
        int i1;
        android.util.SparseArray $r2;
        java.lang.Object $r3;
        com.android.server.appop.AppOpsService$UidState $r4;
        java.lang.Throwable $r5;

        r0 := @this: com.android.server.appop.AppOpsService;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        entermonitor r0;

     label1:
        $l2 = r0.<com.android.server.appop.AppOpsService: long mLastRealtime>;

        $l3 = staticinvoke <java.lang.Long: long max(long,long)>(l0, $l2);

        r0.<com.android.server.appop.AppOpsService: long mLastRealtime> = $l3;

        $r2 = r0.<com.android.server.appop.AppOpsService: android.util.SparseArray mUidStates>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i1);

        $r4 = (com.android.server.appop.AppOpsService$UidState) $r3;

        specialinvoke r0.<com.android.server.appop.AppOpsService: void updatePendingStateIfNeededLocked(com.android.server.appop.AppOpsService$UidState)>($r4);

        exitmonitor r0;

     label2:
        return;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private void updatePendingStateIfNeededLocked(com.android.server.appop.AppOpsService$UidState)
    {
        com.android.server.appop.AppOpsService r0;
        com.android.server.appop.AppOpsService$UidState r1;
        long $l0, $l2, $l3, $l5, $l6, $l7;
        byte $b1, $b4, $b8;

        r0 := @this: com.android.server.appop.AppOpsService;

        r1 := @parameter0: com.android.server.appop.AppOpsService$UidState;

        if r1 == null goto label2;

        $l0 = r1.<com.android.server.appop.AppOpsService$UidState: long pendingStateCommitTime>;

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label2;

        $l3 = r1.<com.android.server.appop.AppOpsService$UidState: long pendingStateCommitTime>;

        $l2 = r0.<com.android.server.appop.AppOpsService: long mLastRealtime>;

        $b4 = $l3 cmp $l2;

        if $b4 >= 0 goto label1;

        specialinvoke r0.<com.android.server.appop.AppOpsService: void commitUidPendingStateLocked(com.android.server.appop.AppOpsService$UidState)>(r1);

        goto label2;

     label1:
        $l5 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        r0.<com.android.server.appop.AppOpsService: long mLastRealtime> = $l5;

        $l7 = r1.<com.android.server.appop.AppOpsService$UidState: long pendingStateCommitTime>;

        $l6 = r0.<com.android.server.appop.AppOpsService: long mLastRealtime>;

        $b8 = $l7 cmp $l6;

        if $b8 >= 0 goto label2;

        specialinvoke r0.<com.android.server.appop.AppOpsService: void commitUidPendingStateLocked(com.android.server.appop.AppOpsService$UidState)>(r1);

     label2:
        return;
    }

    private void updatePermissionRevokedCompat(int, int, int)
    {
        com.android.server.appop.AppOpsService r0;
        int i0, i1, i2, i3, $i4, $i5, $i7, i9, i10;
        android.content.pm.PackageManager r1;
        java.lang.String[] r2;
        java.lang.String r3, r5, $r12, $r22, $r23, $r32, $r34, r41;
        int[] r4;
        android.os.UserHandle r6;
        android.content.Context $r7;
        boolean $z1, $z2, z3, z4, z5;
        android.util.SparseArray $r8;
        java.lang.Object $r9, $r10;
        android.content.pm.PackageManagerInternal $r11;
        java.lang.StringBuilder $r13, $r24;
        java.lang.Throwable $r35, $r36, $r37, r43;
        android.content.pm.PackageManager$NameNotFoundException $r38;
        android.content.pm.PermissionInfo r39;
        long l11, l13;
        byte b12, b14;

        r0 := @this: com.android.server.appop.AppOpsService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r7 = r0.<com.android.server.appop.AppOpsService: android.content.Context mContext>;

        r1 = virtualinvoke $r7.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        if r1 != null goto label01;

        return;

     label01:
        r2 = virtualinvoke r1.<android.content.pm.PackageManager: java.lang.String[] getPackagesForUid(int)>(i0);

        $z1 = staticinvoke <com.android.internal.util.ArrayUtils: boolean isEmpty(java.lang.Object[])>(r2);

        if $z1 == 0 goto label02;

        return;

     label02:
        r3 = r2[0];

        $r8 = r0.<com.android.server.appop.AppOpsService: android.util.SparseArray mSwitchedOps>;

        $r9 = virtualinvoke $r8.<android.util.SparseArray: java.lang.Object get(int)>(i1);

        r4 = (int[]) $r9;

        i3 = lengthof r4;

        i9 = 0;

     label03:
        if i9 >= i3 goto label34;

        $i4 = r4[i9];

        r5 = staticinvoke <android.app.AppOpsManager: java.lang.String opToPermission(int)>($i4);

        if r5 != null goto label04;

        goto label33;

     label04:
        $i5 = virtualinvoke r1.<android.content.pm.PackageManager: int checkPermission(java.lang.String,java.lang.String)>(r5, r3);

        if $i5 == 0 goto label05;

        goto label33;

     label05:
        r39 = virtualinvoke r1.<android.content.pm.PackageManager: android.content.pm.PermissionInfo getPermissionInfo(java.lang.String,int)>(r5, 0);

     label06:
        $z2 = virtualinvoke r39.<android.content.pm.PermissionInfo: boolean isRuntime()>();

        if $z2 != 0 goto label07;

        goto label33;

     label07:
        $r10 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/content/pm/PackageManagerInternal;");

        $r11 = (android.content.pm.PackageManagerInternal) $r10;

        i10 = virtualinvoke $r11.<android.content.pm.PackageManagerInternal: int getUidTargetSdkVersion(int)>(i0);

        z3 = 1;

        if i10 < 23 goto label08;

        z4 = 1;

        goto label09;

     label08:
        z4 = 0;

     label09:
        r6 = staticinvoke <android.os.UserHandle: android.os.UserHandle getUserHandleForUid(int)>(i0);

        $r12 = r39.<android.content.pm.PermissionInfo: java.lang.String backgroundPermission>;

        if $r12 == null goto label24;

        $r23 = r39.<android.content.pm.PermissionInfo: java.lang.String backgroundPermission>;

        $i7 = virtualinvoke r1.<android.content.pm.PackageManager: int checkPermission(java.lang.String,java.lang.String)>($r23, r3);

        if $i7 != 0 goto label21;

        if i2 == 0 goto label10;

        z5 = 1;

        goto label11;

     label10:
        z5 = 0;

     label11:
        if z5 == 0 goto label12;

        if z4 == 0 goto label12;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setUidMode() called with a mode inconsistent with runtime permission state, this is discouraged and you should revoke the runtime permission instead: uid=");

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", switchCode=");

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mode=");

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", permission=");

        $r32 = r39.<android.content.pm.PermissionInfo: java.lang.String backgroundPermission>;

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        $r34 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AppOps", $r34);

        goto label12;

     label12:
        l11 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label13:
        r41 = r39.<android.content.pm.PermissionInfo: java.lang.String backgroundPermission>;

     label14:
        if z5 == 0 goto label15;

        b12 = 8;

        goto label16;

     label15:
        b12 = 0;

     label16:
        virtualinvoke r1.<android.content.pm.PackageManager: void updatePermissionFlags(java.lang.String,java.lang.String,int,int,android.os.UserHandle)>(r41, r3, 8, b12, r6);

     label17:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l11);

        goto label21;

     label18:
        $r35 := @caughtexception;

        r43 = $r35;

        goto label20;

     label19:
        $r37 := @caughtexception;

        r43 = $r37;

     label20:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l11);

        throw r43;

     label21:
        if i2 == 0 goto label22;

        if i2 == 4 goto label22;

        z3 = 1;

        goto label23;

     label22:
        z3 = 0;

     label23:
        goto label26;

     label24:
        if i2 == 0 goto label25;

        goto label26;

     label25:
        z3 = 0;

     label26:
        if z3 == 0 goto label27;

        if z4 == 0 goto label27;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setUidMode() called with a mode inconsistent with runtime permission state, this is discouraged and you should revoke the runtime permission instead: uid=");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", switchCode=");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mode=");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", permission=");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r22 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AppOps", $r22);

     label27:
        l13 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        if z3 == 0 goto label28;

        b14 = 8;

        goto label29;

     label28:
        b14 = 0;

     label29:
        virtualinvoke r1.<android.content.pm.PackageManager: void updatePermissionFlags(java.lang.String,java.lang.String,int,int,android.os.UserHandle)>(r5, r3, 8, b14, r6);

     label30:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l13);

        goto label33;

     label31:
        $r36 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l13);

        throw $r36;

     label32:
        $r38 := @caughtexception;

        virtualinvoke $r38.<android.content.pm.PackageManager$NameNotFoundException: void printStackTrace()>();

     label33:
        i9 = i9 + 1;

        goto label03;

     label34:
        return;

        catch android.content.pm.PackageManager$NameNotFoundException from label05 to label06 with label32;
        catch java.lang.Throwable from label13 to label14 with label19;
        catch java.lang.Throwable from label16 to label17 with label18;
        catch java.lang.Throwable from label29 to label30 with label31;
    }

    private void upgradeLocked(int)
    {
        com.android.server.appop.AppOpsService r0;
        int i0;
        java.lang.StringBuilder $r2;
        java.lang.String $r7;

        r0 := @this: com.android.server.appop.AppOpsService;

        i0 := @parameter0: int;

        if i0 < 1 goto label1;

        return;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Upgrading app-ops xml from version ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(1);

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("AppOps", $r7);

        if i0 == -1 goto label2;

        goto label3;

     label2:
        specialinvoke r0.<com.android.server.appop.AppOpsService: void upgradeRunAnyInBackgroundLocked()>();

     label3:
        specialinvoke r0.<com.android.server.appop.AppOpsService: void scheduleFastWriteLocked()>();

        return;
    }

    private void upgradeRunAnyInBackgroundLocked()
    {
        com.android.server.appop.AppOpsService r0;
        com.android.server.appop.AppOpsService$UidState r1, $r16;
        com.android.server.appop.AppOpsService$Ops r2;
        com.android.server.appop.AppOpsService$Op r3, $r14;
        android.util.SparseArray $r5, $r6, $r10;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i8, i9, i10, i11;
        java.lang.Object $r7, $r12, $r13;
        android.util.SparseIntArray $r8, $r17, $r18, $r19;
        android.util.ArrayMap $r9, $r11, $r20;
        java.lang.String $r15;
        boolean z0, z1;

        r0 := @this: com.android.server.appop.AppOpsService;

        i9 = 0;

     label1:
        $r5 = r0.<com.android.server.appop.AppOpsService: android.util.SparseArray mUidStates>;

        $i0 = virtualinvoke $r5.<android.util.SparseArray: int size()>();

        if i9 >= $i0 goto label9;

        $r6 = r0.<com.android.server.appop.AppOpsService: android.util.SparseArray mUidStates>;

        $r7 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object valueAt(int)>(i9);

        r1 = (com.android.server.appop.AppOpsService$UidState) $r7;

        if r1 != null goto label2;

        goto label8;

     label2:
        $r8 = r1.<com.android.server.appop.AppOpsService$UidState: android.util.SparseIntArray opModes>;

        if $r8 == null goto label3;

        $r17 = r1.<com.android.server.appop.AppOpsService$UidState: android.util.SparseIntArray opModes>;

        i10 = virtualinvoke $r17.<android.util.SparseIntArray: int indexOfKey(int)>(63);

        if i10 < 0 goto label3;

        $r19 = r1.<com.android.server.appop.AppOpsService$UidState: android.util.SparseIntArray opModes>;

        $r18 = r1.<com.android.server.appop.AppOpsService$UidState: android.util.SparseIntArray opModes>;

        $i8 = virtualinvoke $r18.<android.util.SparseIntArray: int valueAt(int)>(i10);

        virtualinvoke $r19.<android.util.SparseIntArray: void put(int,int)>(70, $i8);

     label3:
        $r20 = r1.<com.android.server.appop.AppOpsService$UidState: android.util.ArrayMap pkgOps>;

        if $r20 != null goto label4;

        goto label8;

     label4:
        z0 = 0;

        i11 = 0;

     label5:
        $r9 = r1.<com.android.server.appop.AppOpsService$UidState: android.util.ArrayMap pkgOps>;

        $i1 = virtualinvoke $r9.<android.util.ArrayMap: int size()>();

        if i11 >= $i1 goto label7;

        $r11 = r1.<com.android.server.appop.AppOpsService$UidState: android.util.ArrayMap pkgOps>;

        $r12 = virtualinvoke $r11.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i11);

        r2 = (com.android.server.appop.AppOpsService$Ops) $r12;

        z1 = z0;

        if r2 == null goto label6;

        $r13 = virtualinvoke r2.<com.android.server.appop.AppOpsService$Ops: java.lang.Object get(int)>(63);

        r3 = (com.android.server.appop.AppOpsService$Op) $r13;

        z1 = z0;

        if r3 == null goto label6;

        z1 = z0;

        $i2 = staticinvoke <com.android.server.appop.AppOpsService$Op: int access$300(com.android.server.appop.AppOpsService$Op)>(r3);

        $i3 = r3.<com.android.server.appop.AppOpsService$Op: int op>;

        $i4 = staticinvoke <android.app.AppOpsManager: int opToDefaultMode(int)>($i3);

        if $i2 == $i4 goto label6;

        $r14 = new com.android.server.appop.AppOpsService$Op;

        $r16 = r3.<com.android.server.appop.AppOpsService$Op: com.android.server.appop.AppOpsService$UidState uidState>;

        $r15 = r3.<com.android.server.appop.AppOpsService$Op: java.lang.String packageName>;

        $i5 = r1.<com.android.server.appop.AppOpsService$UidState: int uid>;

        specialinvoke $r14.<com.android.server.appop.AppOpsService$Op: void <init>(com.android.server.appop.AppOpsService,com.android.server.appop.AppOpsService$UidState,java.lang.String,int,int)>(r0, $r16, $r15, 70, $i5);

        $i6 = staticinvoke <com.android.server.appop.AppOpsService$Op: int access$300(com.android.server.appop.AppOpsService$Op)>(r3);

        staticinvoke <com.android.server.appop.AppOpsService$Op: int access$302(com.android.server.appop.AppOpsService$Op,int)>($r14, $i6);

        virtualinvoke r2.<com.android.server.appop.AppOpsService$Ops: void put(int,java.lang.Object)>(70, $r14);

        z1 = 1;

     label6:
        i11 = i11 + 1;

        z0 = z1;

        goto label5;

     label7:
        if z0 == 0 goto label8;

        $r10 = r0.<com.android.server.appop.AppOpsService: android.util.SparseArray mOpModeWatchers>;

        virtualinvoke r1.<com.android.server.appop.AppOpsService$UidState: void evalForegroundOps(android.util.SparseArray)>($r10);

     label8:
        i9 = i9 + 1;

        goto label1;

     label9:
        return;
    }

    private android.app.AppOpsManager$RestrictionBypass verifyAndGetBypass(int, java.lang.String, java.lang.String)
    {
        com.android.server.appop.AppOpsService r0;
        int i0, i3, i4, $i5, $i6, $i7, i8, i9;
        long l1;
        android.util.SparseArray $r1;
        java.lang.Object $r2, $r18, $r23, $r34;
        java.lang.String $r9, $r14, $r20, r28, r29;
        java.util.List $r15, $r16, $r17;
        android.content.pm.parsing.component.ParsedAttribution $r19;
        boolean $z0, $z1, z2, z3;
        android.util.ArrayMap $r21, $r22;
        android.app.AppOpsManager$RestrictionBypass $r24, r32, r33;
        android.util.ArraySet $r25;
        java.lang.Throwable $r26, $r27;
        com.android.server.appop.AppOpsService$UidState r30;
        com.android.server.appop.AppOpsService$Ops r31;
        android.content.pm.PackageManagerInternal $r35;
        com.android.server.pm.parsing.pkg.AndroidPackage r36;
        java.lang.StringBuilder r37, r39;
        java.lang.SecurityException r38;

        r0 := @this: com.android.server.appop.AppOpsService;

        i0 := @parameter0: int;

        r28 := @parameter1: java.lang.String;

        r29 := @parameter2: java.lang.String;

        if i0 != 0 goto label01;

        return null;

     label01:
        entermonitor r0;

     label02:
        $r1 = r0.<com.android.server.appop.AppOpsService: android.util.SparseArray mUidStates>;

        $r2 = virtualinvoke $r1.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r30 = (com.android.server.appop.AppOpsService$UidState) $r2;

     label03:
        if r30 == null goto label09;

     label04:
        $r21 = r30.<com.android.server.appop.AppOpsService$UidState: android.util.ArrayMap pkgOps>;

        if $r21 == null goto label09;

        $r22 = r30.<com.android.server.appop.AppOpsService$UidState: android.util.ArrayMap pkgOps>;

        $r23 = virtualinvoke $r22.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r28);

        r31 = (com.android.server.appop.AppOpsService$Ops) $r23;

     label05:
        if r31 == null goto label09;

        if r29 == null goto label07;

     label06:
        $r25 = r31.<com.android.server.appop.AppOpsService$Ops: android.util.ArraySet knownAttributionTags>;

        $z1 = virtualinvoke $r25.<android.util.ArraySet: boolean contains(java.lang.Object)>(r29);

        if $z1 == 0 goto label09;

     label07:
        $r24 = r31.<com.android.server.appop.AppOpsService$Ops: android.app.AppOpsManager$RestrictionBypass bypass>;

        if $r24 == null goto label09;

        r32 = r31.<com.android.server.appop.AppOpsService$Ops: android.app.AppOpsManager$RestrictionBypass bypass>;

        exitmonitor r0;

     label08:
        return r32;

     label09:
        exitmonitor r0;

     label10:
        r33 = null;

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label11:
        $r34 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/content/pm/PackageManagerInternal;");

        $r35 = (android.content.pm.PackageManagerInternal) $r34;

        r36 = virtualinvoke $r35.<android.content.pm.PackageManagerInternal: com.android.server.pm.parsing.pkg.AndroidPackage getPackage(java.lang.String)>(r28);

     label12:
        z2 = 0;

        z3 = 0;

        if r36 == null goto label21;

        if r29 != null goto label13;

        z2 = 1;

        goto label19;

     label13:
        $r15 = interfaceinvoke r36.<com.android.server.pm.parsing.pkg.AndroidPackage: java.util.List getAttributions()>();

        if $r15 == null goto label19;

        $r16 = interfaceinvoke r36.<com.android.server.pm.parsing.pkg.AndroidPackage: java.util.List getAttributions()>();

        i3 = interfaceinvoke $r16.<java.util.List: int size()>();

     label14:
        i4 = 0;

     label15:
        z2 = z3;

        if i4 >= i3 goto label19;

     label16:
        $r17 = interfaceinvoke r36.<com.android.server.pm.parsing.pkg.AndroidPackage: java.util.List getAttributions()>();

        $r18 = interfaceinvoke $r17.<java.util.List: java.lang.Object get(int)>(i4);

        $r19 = (android.content.pm.parsing.component.ParsedAttribution) $r18;

        $r20 = $r19.<android.content.pm.parsing.component.ParsedAttribution: java.lang.String tag>;

        $z0 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>(r29);

        if $z0 == 0 goto label18;

     label17:
        z3 = 1;

     label18:
        i4 = i4 + 1;

        goto label15;

     label19:
        $i5 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        $i6 = interfaceinvoke r36.<com.android.server.pm.parsing.pkg.AndroidPackage: int getUid()>();

        $i7 = staticinvoke <android.os.UserHandle: int getAppId(int)>($i6);

        i8 = staticinvoke <android.os.UserHandle: int getUid(int,int)>($i5, $i7);

        r33 = specialinvoke r0.<com.android.server.appop.AppOpsService: android.app.AppOpsManager$RestrictionBypass getBypassforPackage(com.android.server.pm.parsing.pkg.AndroidPackage)>(r36);

     label20:
        goto label25;

     label21:
        i9 = staticinvoke <com.android.server.appop.AppOpsService: int resolveUid(java.lang.String)>(r28);

     label22:
        z2 = 1;

        i8 = i9;

        if i9 < 0 goto label25;

     label23:
        r33 = <android.app.AppOpsManager$RestrictionBypass: android.app.AppOpsManager$RestrictionBypass UNRESTRICTED>;

     label24:
        i8 = i9;

        z2 = 1;

     label25:
        if i8 != i0 goto label28;

        if z2 != 0 goto label27;

     label26:
        r37 = new java.lang.StringBuilder;

        specialinvoke r37.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("attributionTag ");

        virtualinvoke r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r29);

        virtualinvoke r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not declared in manifest of ");

        virtualinvoke r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r28);

        $r14 = virtualinvoke r37.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("AppOps", $r14);

     label27:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return r33;

     label28:
        r38 = new java.lang.SecurityException;

        r39 = new java.lang.StringBuilder;

        specialinvoke r39.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Specified package ");

        virtualinvoke r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r28);

        virtualinvoke r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" under uid ");

        virtualinvoke r39.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but it is really ");

        virtualinvoke r39.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i8);

        $r9 = virtualinvoke r39.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r38.<java.lang.SecurityException: void <init>(java.lang.String)>($r9);

        throw r38;

     label29:
        $r26 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r26;

     label30:
        $r27 := @caughtexception;

     label31:
        exitmonitor r0;

     label32:
        throw $r27;

        catch java.lang.Throwable from label02 to label03 with label30;
        catch java.lang.Throwable from label04 to label05 with label30;
        catch java.lang.Throwable from label06 to label07 with label30;
        catch java.lang.Throwable from label07 to label08 with label30;
        catch java.lang.Throwable from label09 to label10 with label30;
        catch java.lang.Throwable from label11 to label12 with label29;
        catch java.lang.Throwable from label13 to label14 with label29;
        catch java.lang.Throwable from label16 to label17 with label29;
        catch java.lang.Throwable from label19 to label20 with label29;
        catch java.lang.Throwable from label21 to label22 with label29;
        catch java.lang.Throwable from label23 to label24 with label29;
        catch java.lang.Throwable from label26 to label27 with label29;
        catch java.lang.Throwable from label28 to label29 with label29;
        catch java.lang.Throwable from label31 to label32 with label30;
    }

    private void verifyIncomingOp(int)
    {
        com.android.server.appop.AppOpsService r0;
        int i0;
        java.lang.StringBuilder $r2;
        java.lang.IllegalArgumentException $r5;
        java.lang.String $r6;

        r0 := @this: com.android.server.appop.AppOpsService;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        if i0 >= 100 goto label1;

        return;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad operation #");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r5;
    }

    private void verifyIncomingUid(int)
    {
        com.android.server.appop.AppOpsService r0;
        int i0, $i1, $i2, $i3, $i4, $i5;
        android.content.Context $r1;

        r0 := @this: com.android.server.appop.AppOpsService;

        i0 := @parameter0: int;

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if i0 != $i1 goto label1;

        return;

     label1:
        $i2 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i3 = staticinvoke <android.os.Process: int myPid()>();

        if $i2 != $i3 goto label2;

        return;

     label2:
        $r1 = r0.<com.android.server.appop.AppOpsService: android.content.Context mContext>;

        $i4 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i5 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke $r1.<android.content.Context: void enforcePermission(java.lang.String,int,int,java.lang.String)>("android.permission.UPDATE_APP_OPS_STATS", $i4, $i5, null);

        return;
    }

    private void writeNoteOps()
    {
        com.android.server.appop.AppOpsService r0;
        int i0, i2;
        java.io.File $r1, r12;
        android.util.ArraySet $r2, $r3;
        java.lang.Object $r4;
        com.android.server.appop.AppOpsService$NoteOpTrace $r5;
        java.lang.String $r6;
        java.lang.Throwable $r7, $r8, $r9, $r10, $r11;
        java.io.FileWriter r13;

        r0 := @this: com.android.server.appop.AppOpsService;

        entermonitor r0;

     label01:
        r0.<com.android.server.appop.AppOpsService: boolean mWriteNoteOpsScheduled> = 0;

        exitmonitor r0;

     label02:
        r12 = r0.<com.android.server.appop.AppOpsService: java.io.File mNoteOpCallerStacktracesFile>;

        entermonitor r12;

     label03:
        r13 = new java.io.FileWriter;

        $r1 = r0.<com.android.server.appop.AppOpsService: java.io.File mNoteOpCallerStacktracesFile>;

        specialinvoke r13.<java.io.FileWriter: void <init>(java.io.File)>($r1);

     label04:
        $r2 = r0.<com.android.server.appop.AppOpsService: android.util.ArraySet mNoteOpCallerStacktraces>;

        i0 = virtualinvoke $r2.<android.util.ArraySet: int size()>();

     label05:
        i2 = 0;

     label06:
        if i2 >= i0 goto label09;

     label07:
        $r3 = r0.<com.android.server.appop.AppOpsService: android.util.ArraySet mNoteOpCallerStacktraces>;

        $r4 = virtualinvoke $r3.<android.util.ArraySet: java.lang.Object valueAt(int)>(i2);

        $r5 = (com.android.server.appop.AppOpsService$NoteOpTrace) $r4;

        $r6 = virtualinvoke $r5.<com.android.server.appop.AppOpsService$NoteOpTrace: java.lang.String asJson()>();

        virtualinvoke r13.<java.io.FileWriter: void write(java.lang.String)>($r6);

        virtualinvoke r13.<java.io.FileWriter: void write(java.lang.String)>(",");

     label08:
        i2 = i2 + 1;

        goto label06;

     label09:
        virtualinvoke r13.<java.io.FileWriter: void close()>();

     label10:
        goto label20;

     label11:
        $r11 := @caughtexception;

     label12:
        virtualinvoke r13.<java.io.FileWriter: void close()>();

     label13:
        goto label16;

     label14:
        $r7 := @caughtexception;

     label15:
        virtualinvoke $r11.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r7);

     label16:
        throw $r11;

     label17:
        $r8 := @caughtexception;

        goto label22;

     label18:
        $r9 := @caughtexception;

     label19:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("AppOps", "Failed to load opsValidation file for FileWriter", $r9);

     label20:
        exitmonitor r12;

     label21:
        return;

     label22:
        exitmonitor r12;

     label23:
        throw $r8;

     label24:
        $r10 := @caughtexception;

     label25:
        exitmonitor r0;

     label26:
        throw $r10;

        catch java.lang.Throwable from label01 to label02 with label24;
        catch java.io.IOException from label03 to label04 with label18;
        catch java.lang.Throwable from label03 to label04 with label17;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.io.IOException from label09 to label10 with label18;
        catch java.lang.Throwable from label09 to label10 with label17;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.io.IOException from label15 to label16 with label18;
        catch java.lang.Throwable from label15 to label16 with label17;
        catch java.io.IOException from label16 to label17 with label18;
        catch java.lang.Throwable from label16 to label17 with label17;
        catch java.lang.Throwable from label19 to label20 with label17;
        catch java.lang.Throwable from label20 to label21 with label17;
        catch java.lang.Throwable from label22 to label23 with label17;
        catch java.lang.Throwable from label25 to label26 with label24;
    }

    public void addHistoricalOps(android.app.AppOpsManager$HistoricalOps)
    {
        com.android.server.appop.AppOpsService r0;
        android.app.AppOpsManager$HistoricalOps r1;
        android.content.Context $r2;
        com.android.server.appop.HistoricalRegistry $r3;

        r0 := @this: com.android.server.appop.AppOpsService;

        r1 := @parameter0: android.app.AppOpsManager$HistoricalOps;

        $r2 = r0.<com.android.server.appop.AppOpsService: android.content.Context mContext>;

        virtualinvoke $r2.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.MANAGE_APPOPS", "addHistoricalOps");

        $r3 = r0.<com.android.server.appop.AppOpsService: com.android.server.appop.HistoricalRegistry mHistoricalRegistry>;

        virtualinvoke $r3.<com.android.server.appop.HistoricalRegistry: void addHistoricalOps(android.app.AppOpsManager$HistoricalOps)>(r1);

        return;
    }

    public int checkAudioOperation(int, int, int, java.lang.String)
    {
        com.android.server.appop.AppOpsService r0;
        int i0, i1, i2, $i3, $i4;
        android.app.AppOpsManagerInternal$CheckOpsDelegate r1;
        com.android.server.appop._$$Lambda$AppOpsService$mfUWTdGevxEoIUv1cEPEFG0qAaI $r2;
        java.lang.Throwable $r3;
        java.lang.String r4;

        r0 := @this: com.android.server.appop.AppOpsService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r4 := @parameter3: java.lang.String;

        entermonitor r0;

     label1:
        r1 = r0.<com.android.server.appop.AppOpsService: android.app.AppOpsManagerInternal$CheckOpsDelegate mCheckOpsDelegate>;

        exitmonitor r0;

     label2:
        if r1 != null goto label3;

        $i4 = specialinvoke r0.<com.android.server.appop.AppOpsService: int checkAudioOperationImpl(int,int,int,java.lang.String)>(i0, i1, i2, r4);

        return $i4;

     label3:
        $r2 = new com.android.server.appop._$$Lambda$AppOpsService$mfUWTdGevxEoIUv1cEPEFG0qAaI;

        specialinvoke $r2.<com.android.server.appop._$$Lambda$AppOpsService$mfUWTdGevxEoIUv1cEPEFG0qAaI: void <init>(com.android.server.appop.AppOpsService)>(r0);

        $i3 = interfaceinvoke r1.<android.app.AppOpsManagerInternal$CheckOpsDelegate: int checkAudioOperation(int,int,int,java.lang.String,com.android.internal.util.function.QuadFunction)>(i0, i1, i2, r4, $r2);

        return $i3;

     label4:
        $r3 := @caughtexception;

     label5:
        exitmonitor r0;

     label6:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public int checkOperation(int, int, java.lang.String)
    {
        com.android.server.appop.AppOpsService r0;
        int i0, i1, $i2;
        java.lang.String r1;

        r0 := @this: com.android.server.appop.AppOpsService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        $i2 = specialinvoke r0.<com.android.server.appop.AppOpsService: int checkOperationInternal(int,int,java.lang.String,boolean)>(i0, i1, r1, 0);

        return $i2;
    }

    public int checkOperationRaw(int, int, java.lang.String)
    {
        com.android.server.appop.AppOpsService r0;
        int i0, i1, $i2;
        java.lang.String r1;

        r0 := @this: com.android.server.appop.AppOpsService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        $i2 = specialinvoke r0.<com.android.server.appop.AppOpsService: int checkOperationInternal(int,int,java.lang.String,boolean)>(i0, i1, r1, 1);

        return $i2;
    }

    public int checkPackage(int, java.lang.String)
    {
        com.android.server.appop.AppOpsService r0;
        int i0;
        java.lang.Throwable $r3;
        java.lang.String r4;

        r0 := @this: com.android.server.appop.AppOpsService;

        i0 := @parameter0: int;

        r4 := @parameter1: java.lang.String;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r4);

     label1:
        specialinvoke r0.<com.android.server.appop.AppOpsService: android.app.AppOpsManager$RestrictionBypass verifyAndGetBypass(int,java.lang.String,java.lang.String)>(i0, r4, null);

     label2:
        return 0;

     label3:
        $r3 := @caughtexception;

        return 2;

        catch java.lang.SecurityException from label1 to label2 with label3;
    }

    public void clearHistory()
    {
        com.android.server.appop.AppOpsService r0;
        android.content.Context $r1;
        com.android.server.appop.HistoricalRegistry $r2;

        r0 := @this: com.android.server.appop.AppOpsService;

        $r1 = r0.<com.android.server.appop.AppOpsService: android.content.Context mContext>;

        virtualinvoke $r1.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.MANAGE_APPOPS", "clearHistory");

        $r2 = r0.<com.android.server.appop.AppOpsService: com.android.server.appop.HistoricalRegistry mHistoricalRegistry>;

        virtualinvoke $r2.<com.android.server.appop.HistoricalRegistry: void clearHistory()>();

        return;
    }

    public void collectNoteOpCallsForValidation(java.lang.String, int, java.lang.String, long)
    {
        com.android.server.appop.AppOpsService r0;
        java.lang.String r1, r2;
        int i0;
        long l1;

        r0 := @this: com.android.server.appop.AppOpsService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        l1 := @parameter3: long;

        return;
    }

    public android.app.RuntimeAppOpAccessMessage collectRuntimeAppOpAccessMessage()
    {
        com.android.server.appop.AppOpsService r0;
        android.content.Context $r1;
        int $i0, $i1;
        com.android.server.appop.'-$$Lambda$AppOpsService$m04KE9D7Jmkj_GEr7pcdIY29xtA' $r2;
        android.os.Handler $r3;
        android.os.Message $r4;
        java.lang.Throwable $r5;
        android.app.RuntimeAppOpAccessMessage r6;
        java.util.function.Consumer r8;

        r0 := @this: com.android.server.appop.AppOpsService;

        $r1 = r0.<com.android.server.appop.AppOpsService: android.content.Context mContext>;

        $i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke $r1.<android.content.Context: void enforcePermission(java.lang.String,int,int,java.lang.String)>("android.permission.GET_APP_OPS_STATS", $i0, $i1, null);

        entermonitor r0;

     label1:
        r6 = r0.<com.android.server.appop.AppOpsService: android.app.RuntimeAppOpAccessMessage mCollectedRuntimePermissionMessage>;

        r0.<com.android.server.appop.AppOpsService: android.app.RuntimeAppOpAccessMessage mCollectedRuntimePermissionMessage> = null;

        exitmonitor r0;

     label2:
        $r3 = r0.<com.android.server.appop.AppOpsService: android.os.Handler mHandler>;

        $r2 = <com.android.server.appop._$$Lambda$AppOpsService$m04KE9D7Jmkj_GEr7pcdIY29xtA: com.android.server.appop.'-$$Lambda$AppOpsService$m04KE9D7Jmkj_GEr7pcdIY29xtA' INSTANCE>;

        r8 = (java.util.function.Consumer) $r2;

        $r4 = staticinvoke <com.android.internal.util.function.pooled.PooledLambda: android.os.Message obtainMessage(java.util.function.Consumer,java.lang.Object)>(r8, r0);

        virtualinvoke $r3.<android.os.Handler: boolean sendMessage(android.os.Message)>($r4);

        return r6;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    protected void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.appop.AppOpsService r0;
        java.io.PrintWriter r1;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, z17, z18, z19, z20, z22, z23, z24, z25, z26, z27, z28, z29, z30, z32, z33, z34, z36, z37, z38, z39, z40, z42, z43, z44, z45, z46, z47, z48, z49, z50, z51, z52, z53, z54, z56, z57, z58, z59, z60, z61, z62, z63, z64, z65, z66, z67, z68, z70, z71, z72, z73, z75, z76, z77;
        com.android.server.appop.AppOpsService$Op r2, r3, $r56;
        android.content.Context $r4;
        android.util.ArrayMap $r5, $r7, $r9, $r61, $r62, $r65, $r69, $r70, $r73, $r77, $r78, $r81, $r85, $r86, $r88, $r91, $r92, $r95, $r98, $r199, $r214, $r225, $r247, $r269, r300, r378;
        java.lang.Object $r8, $r10, $r13, $r23, $r34, $r36, $r37, $r41, $r53, $r55, $r63, $r64, $r66, $r71, $r72, $r74, $r79, $r80, $r82, $r87, $r89, $r93, $r96, $r97, $r99, $r102, $r103;
        android.util.SparseArray $r11, $r12, $r20, $r21, $r22, $r32, $r33, $r57, $r100, $r101, $r104, $r106, $r181, r228, r250, r272, $r297, r413, $r447;
        java.lang.String $r14, $r18, $r19, $r26, $r35, $r38, $r39, $r40, $r42, $r43, $r44, $r45, $r46, $r48, $r51, $r54, $r67, $r68, $r75, $r76, $r83, $r84, $r90, $r94, $r105, $r112, $r113, $r114, $r115, $r116, $r117, $r118, $r122, $r126, $r127, $r132, $r133, r149, r150, r151, r156, r157, r354, r376, r411, r426;
        int $i1, $i2, $i3, $i4, $i5, $i7, $i8, $i9, $i10, $i11, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i60, $i61, $i62, $i63, $i64, i65, i66, i67, i68, i69, i70, i71, i72, i73, i74, i75, i76, i77, i78, i80, i81, i82, i121, i146, i147, i157, $i161, i195, i196, i218, $i222, i238, i239, i267, i268, i305, i307, i329, i333, i334, i368, i369, i391, i392, i429, i431, i459, i460, i464, i465, i475, i476, i481, $i484, i489, i490, i501, i514, i517, i530, i533, i565, $i568, i587, i588, i591, i594, i606, i608, i609, i619, i621, i622, $i625, i630, i649, i658, i677, i678, i679, i680, i681, i682, i683, i684, i685, i686, i687, i688, i689, i690;
        byte $b6;
        android.util.SparseBooleanArray $r47, $r49, $r50, $r52, r314, r345, $r348;
        long $l12, l95, l99, l554, l605, l607, l618, l620;
        android.util.SparseIntArray $r58, $r59, $r107, $r108, $r109, $r110, r299;
        com.android.server.appop.AudioRestrictionManager $r60, $r291;
        com.android.server.appop.AppOpsService$Constants $r111;
        java.lang.StringBuilder $r119, $r123, $r129, r420, r432, r456;
        char $c59;
        android.content.pm.IPackageManager $r128;
        java.lang.Throwable $r134, $r136, $r137, $r138, $r139, $r140, $r141, $r142, $r143, $r144, $r145, r160;
        android.os.RemoteException $r135;
        java.io.FileDescriptor r146;
        java.lang.String[] r147, r452;
        java.text.SimpleDateFormat r166, r339, r366, r379;
        java.util.Date r169, r294, r365, r374;
        android.util.ArraySet r185, r207;
        com.android.server.appop.AppOpsService$ModeCallback r188, r217;
        com.android.server.appop.AppOpsService$ActiveCallback r231;
        com.android.server.appop.AppOpsService$StartedCallback r253;
        com.android.server.appop.AppOpsService$NotedCallback r275;
        com.android.server.appop.AppOpsService$UidState r298;
        com.android.server.appop.AppOpsService$Ops r308, r370;
        android.os.IBinder r408;
        com.android.server.appop.AppOpsService$ClientRestrictionState r410;
        boolean[] r417;

        r0 := @this: com.android.server.appop.AppOpsService;

        r146 := @parameter0: java.io.FileDescriptor;

        r1 := @parameter1: java.io.PrintWriter;

        r147 := @parameter2: java.lang.String[];

        $r4 = r0.<com.android.server.appop.AppOpsService: android.content.Context mContext>;

        $z1 = staticinvoke <com.android.internal.util.DumpUtils: boolean checkDumpAndUsageStatsPermission(android.content.Context,java.lang.String,java.io.PrintWriter)>($r4, "AppOps", r1);

        if $z1 != 0 goto label001;

        return;

     label001:
        r149 = null;

        i65 = -1;

        i66 = -1;

        z17 = 0;

        i67 = 0;

        if r147 == null goto label022;

        i68 = 0;

        i69 = -1;

        r150 = null;

     label002:
        $i57 = lengthof r147;

        if i68 >= $i57 goto label021;

        r151 = r147[i68];

        $r112 = "-h";

        $z10 = virtualinvoke $r112.<java.lang.String: boolean equals(java.lang.Object)>(r151);

        if $z10 == 0 goto label003;

        specialinvoke r0.<com.android.server.appop.AppOpsService: void dumpHelp(java.io.PrintWriter)>(r1);

        return;

     label003:
        $r113 = "-a";

        $z11 = virtualinvoke $r113.<java.lang.String: boolean equals(java.lang.Object)>(r151);

        if $z11 == 0 goto label004;

        z18 = z17;

        i70 = i68;

        goto label018;

     label004:
        $r114 = "--op";

        $z12 = virtualinvoke $r114.<java.lang.String: boolean equals(java.lang.Object)>(r151);

        if $z12 == 0 goto label006;

        i71 = i68 + 1;

        $i64 = lengthof r147;

        if i71 < $i64 goto label005;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("No argument for --op option");

        return;

     label005:
        $r133 = r147[i71];

        i72 = staticinvoke <com.android.server.appop.AppOpsService$Shell: int access$2000(java.lang.String,java.io.PrintWriter)>($r133, r1);

        i67 = i67 | 8;

        i69 = i72;

        z18 = z17;

        i70 = i71;

        if i72 >= 0 goto label018;

        return;

     label006:
        $r115 = "--package";

        $z13 = virtualinvoke $r115.<java.lang.String: boolean equals(java.lang.Object)>(r151);

        if $z13 == 0 goto label013;

        i73 = i68 + 1;

        $i62 = lengthof r147;

        if i73 < $i62 goto label007;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("No argument for --package option");

        return;

     label007:
        r150 = r147[i73];

     label008:
        $r128 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        i74 = interfaceinvoke $r128.<android.content.pm.IPackageManager: int getPackageUid(java.lang.String,int,int)>(r150, 12591104, 0);

     label009:
        i65 = i74;

        goto label011;

     label010:
        $r135 := @caughtexception;

     label011:
        if i65 >= 0 goto label012;

        $r129 = new java.lang.StringBuilder;

        specialinvoke $r129.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r129.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown package: ");

        virtualinvoke $r129.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r150);

        $r132 = virtualinvoke $r129.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r132);

        return;

     label012:
        i65 = staticinvoke <android.os.UserHandle: int getAppId(int)>(i65);

        $i63 = i67 | 2;

        i67 = $i63 | 1;

        z18 = z17;

        i70 = i73;

        goto label018;

     label013:
        $r116 = "--attributionTag";

        $z14 = virtualinvoke $r116.<java.lang.String: boolean equals(java.lang.Object)>(r151);

        if $z14 == 0 goto label015;

        i75 = i68 + 1;

        $i61 = lengthof r147;

        if i75 < $i61 goto label014;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("No argument for --attributionTag option");

        return;

     label014:
        r149 = r147[i75];

        i67 = i67 | 4;

        z18 = z17;

        i70 = i75;

        goto label018;

     label015:
        $r117 = "--mode";

        $z15 = virtualinvoke $r117.<java.lang.String: boolean equals(java.lang.Object)>(r151);

        if $z15 == 0 goto label017;

        i76 = i68 + 1;

        $i60 = lengthof r147;

        if i76 < $i60 goto label016;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("No argument for --mode option");

        return;

     label016:
        $r127 = r147[i76];

        i77 = staticinvoke <com.android.server.appop.AppOpsService$Shell: int strModeToMode(java.lang.String,java.io.PrintWriter)>($r127, r1);

        i66 = i77;

        z18 = z17;

        i70 = i76;

        if i77 >= 0 goto label018;

        return;

     label017:
        $r118 = "--watchers";

        $z16 = virtualinvoke $r118.<java.lang.String: boolean equals(java.lang.Object)>(r151);

        if $z16 == 0 goto label019;

        z18 = 1;

        i70 = i68;

     label018:
        i68 = i70 + 1;

        z17 = z18;

        goto label002;

     label019:
        $i58 = virtualinvoke r151.<java.lang.String: int length()>();

        if $i58 <= 0 goto label020;

        $c59 = virtualinvoke r151.<java.lang.String: char charAt(int)>(0);

        if $c59 != 45 goto label020;

        $r123 = new java.lang.StringBuilder;

        specialinvoke $r123.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r123.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown option: ");

        virtualinvoke $r123.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r151);

        $r126 = virtualinvoke $r123.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r126);

        return;

     label020:
        $r119 = new java.lang.StringBuilder;

        specialinvoke $r119.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r119.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown command: ");

        virtualinvoke $r119.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r151);

        $r122 = virtualinvoke $r119.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r122);

        return;

     label021:
        r156 = r149;

        z19 = z17;

        r157 = r150;

        i78 = i69;

        i80 = i66;

        i81 = i65;

        i82 = i67;

        goto label023;

     label022:
        r156 = null;

        z19 = 0;

        i82 = 0;

        i78 = -1;

        r157 = null;

        i81 = -1;

        i80 = -1;

     label023:
        entermonitor r0;

     label024:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Current AppOps Service state:");

     label025:
        if z19 != 0 goto label029;

     label026:
        $r111 = r0.<com.android.server.appop.AppOpsService: com.android.server.appop.AppOpsService$Constants mConstants>;

        virtualinvoke $r111.<com.android.server.appop.AppOpsService$Constants: void dump(java.io.PrintWriter)>(r1);

     label027:
        goto label029;

     label028:
        $r136 := @caughtexception;

        r160 = $r136;

        goto label502;

     label029:
        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label030:
        l95 = staticinvoke <java.lang.System: long currentTimeMillis()>();

     label031:
        l99 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

     label032:
        staticinvoke <android.os.SystemClock: long uptimeMillis()>();

     label033:
        r166 = new java.text.SimpleDateFormat;

     label034:
        specialinvoke r166.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyy-MM-dd HH:mm:ss.SSS");

     label035:
        r169 = new java.util.Date;

     label036:
        specialinvoke r169.<java.util.Date: void <init>()>();

     label037:
        z20 = 0;

        if i82 != 0 goto label050;

        if i80 >= 0 goto label050;

     label038:
        $r107 = r0.<com.android.server.appop.AppOpsService: android.util.SparseIntArray mProfileOwners>;

        if $r107 == null goto label050;

     label039:
        if z19 != 0 goto label050;

     label040:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  Profile owners:");

     label041:
        i121 = 0;

     label042:
        $r108 = r0.<com.android.server.appop.AppOpsService: android.util.SparseIntArray mProfileOwners>;

        $i54 = virtualinvoke $r108.<android.util.SparseIntArray: int size()>();

        if i121 >= $i54 goto label049;

     label043:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("    User #");

     label044:
        $r109 = r0.<com.android.server.appop.AppOpsService: android.util.SparseIntArray mProfileOwners>;

        $i55 = virtualinvoke $r109.<android.util.SparseIntArray: int keyAt(int)>(i121);

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i55);

     label045:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(": ");

     label046:
        $r110 = r0.<com.android.server.appop.AppOpsService: android.util.SparseIntArray mProfileOwners>;

        $i56 = virtualinvoke $r110.<android.util.SparseIntArray: int valueAt(int)>(i121);

        staticinvoke <android.os.UserHandle: void formatUid(java.io.PrintWriter,int)>(r1, $i56);

     label047:
        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label048:
        i121 = i121 + 1;

        goto label042;

     label049:
        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label050:
        $r181 = r0.<com.android.server.appop.AppOpsService: android.util.SparseArray mOpModeWatchers>;

        i146 = virtualinvoke $r181.<android.util.SparseArray: int size()>();

     label051:
        if i146 <= 0 goto label081;

        z22 = 0;

        i147 = 0;

        z23 = 0;

     label052:
        $r100 = r0.<com.android.server.appop.AppOpsService: android.util.SparseArray mOpModeWatchers>;

        $i49 = virtualinvoke $r100.<android.util.SparseArray: int size()>();

        if i147 >= $i49 goto label080;

     label053:
        if i78 < 0 goto label056;

     label054:
        $r106 = r0.<com.android.server.appop.AppOpsService: android.util.SparseArray mOpModeWatchers>;

        $i53 = virtualinvoke $r106.<android.util.SparseArray: int keyAt(int)>(i147);

        if i78 == $i53 goto label056;

     label055:
        goto label079;

     label056:
        z24 = 0;

     label057:
        $r101 = r0.<com.android.server.appop.AppOpsService: android.util.SparseArray mOpModeWatchers>;

        $r102 = virtualinvoke $r101.<android.util.SparseArray: java.lang.Object valueAt(int)>(i147);

        r185 = (android.util.ArraySet) $r102;

     label058:
        i157 = 0;

        z25 = z23;

        z26 = z22;

     label059:
        $i161 = virtualinvoke r185.<android.util.ArraySet: int size()>();

        if i157 >= $i161 goto label078;

     label060:
        $r103 = virtualinvoke r185.<android.util.ArraySet: java.lang.Object valueAt(int)>(i157);

        r188 = (com.android.server.appop.AppOpsService$ModeCallback) $r103;

     label061:
        if r157 == null goto label064;

     label062:
        $i51 = r188.<com.android.server.appop.AppOpsService$ModeCallback: int mWatchingUid>;

        $i52 = staticinvoke <android.os.UserHandle: int getAppId(int)>($i51);

        if i81 == $i52 goto label064;

     label063:
        z27 = z24;

        goto label077;

     label064:
        if z26 != 0 goto label067;

     label065:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  Op mode watchers:");

     label066:
        z26 = 1;

        goto label067;

     label067:
        z27 = z24;

        if z24 != 0 goto label072;

     label068:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("    Op ");

     label069:
        $r104 = r0.<com.android.server.appop.AppOpsService: android.util.SparseArray mOpModeWatchers>;

        $i50 = virtualinvoke $r104.<android.util.SparseArray: int keyAt(int)>(i147);

        $r105 = staticinvoke <android.app.AppOpsManager: java.lang.String opToName(int)>($i50);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r105);

     label070:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(":");

     label071:
        z27 = 1;

     label072:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("      #");

     label073:
        virtualinvoke r1.<java.io.PrintWriter: void print(int)>(i157);

     label074:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(": ");

     label075:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>(r188);

     label076:
        z25 = 1;

     label077:
        i157 = i157 + 1;

        z24 = z27;

        goto label059;

     label078:
        z22 = z26;

        z23 = z25;

     label079:
        i147 = i147 + 1;

        goto label052;

     label080:
        z20 = z23;

        goto label081;

     label081:
        $r199 = r0.<com.android.server.appop.AppOpsService: android.util.ArrayMap mPackageModeWatchers>;

        i195 = virtualinvoke $r199.<android.util.ArrayMap: int size()>();

     label082:
        z28 = z20;

        if i195 <= 0 goto label104;

        z28 = z20;

        if i78 >= 0 goto label104;

        z29 = 0;

        i196 = 0;

     label083:
        z28 = z20;

     label084:
        $r91 = r0.<com.android.server.appop.AppOpsService: android.util.ArrayMap mPackageModeWatchers>;

        $i48 = virtualinvoke $r91.<android.util.ArrayMap: int size()>();

        if i196 >= $i48 goto label104;

     label085:
        if r157 == null goto label088;

     label086:
        $r98 = r0.<com.android.server.appop.AppOpsService: android.util.ArrayMap mPackageModeWatchers>;

        $r99 = virtualinvoke $r98.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i196);

        $z9 = virtualinvoke r157.<java.lang.String: boolean equals(java.lang.Object)>($r99);

        if $z9 != 0 goto label088;

     label087:
        z30 = z20;

        goto label103;

     label088:
        z32 = z29;

        if z29 != 0 goto label091;

     label089:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  Package mode watchers:");

     label090:
        z32 = 1;

     label091:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("    Pkg ");

     label092:
        $r92 = r0.<com.android.server.appop.AppOpsService: android.util.ArrayMap mPackageModeWatchers>;

        $r93 = virtualinvoke $r92.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i196);

        $r94 = (java.lang.String) $r93;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r94);

     label093:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(":");

     label094:
        $r95 = r0.<com.android.server.appop.AppOpsService: android.util.ArrayMap mPackageModeWatchers>;

        $r96 = virtualinvoke $r95.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i196);

        r207 = (android.util.ArraySet) $r96;

     label095:
        i218 = 0;

     label096:
        z30 = 1;

        z29 = z32;

     label097:
        $i222 = virtualinvoke r207.<android.util.ArraySet: int size()>();

        if i218 >= $i222 goto label103;

     label098:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("      #");

     label099:
        virtualinvoke r1.<java.io.PrintWriter: void print(int)>(i218);

     label100:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(": ");

     label101:
        $r97 = virtualinvoke r207.<android.util.ArraySet: java.lang.Object valueAt(int)>(i218);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>($r97);

     label102:
        i218 = i218 + 1;

        goto label096;

     label103:
        i196 = i196 + 1;

        z20 = z30;

        goto label083;

     label104:
        $r214 = r0.<com.android.server.appop.AppOpsService: android.util.ArrayMap mModeWatchers>;

        i238 = virtualinvoke $r214.<android.util.ArrayMap: int size()>();

     label105:
        z33 = z28;

        if i238 <= 0 goto label121;

        z33 = z28;

        if i78 >= 0 goto label121;

        z34 = 0;

        i239 = 0;

     label106:
        z33 = z28;

     label107:
        $r85 = r0.<com.android.server.appop.AppOpsService: android.util.ArrayMap mModeWatchers>;

        $i44 = virtualinvoke $r85.<android.util.ArrayMap: int size()>();

        if i239 >= $i44 goto label121;

     label108:
        $r86 = r0.<com.android.server.appop.AppOpsService: android.util.ArrayMap mModeWatchers>;

        $r87 = virtualinvoke $r86.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i239);

        r217 = (com.android.server.appop.AppOpsService$ModeCallback) $r87;

     label109:
        if r157 == null goto label112;

     label110:
        $i46 = r217.<com.android.server.appop.AppOpsService$ModeCallback: int mWatchingUid>;

        $i47 = staticinvoke <android.os.UserHandle: int getAppId(int)>($i46);

        if i81 == $i47 goto label112;

     label111:
        goto label120;

     label112:
        z36 = z34;

        if z34 != 0 goto label115;

     label113:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  All op mode watchers:");

     label114:
        z36 = 1;

     label115:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("    ");

     label116:
        $r88 = r0.<com.android.server.appop.AppOpsService: android.util.ArrayMap mModeWatchers>;

        $r89 = virtualinvoke $r88.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i239);

        $i45 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>($r89);

        $r90 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i45);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r90);

     label117:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(": ");

     label118:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>(r217);

     label119:
        z34 = z36;

        z28 = 1;

     label120:
        i239 = i239 + 1;

        goto label106;

     label121:
        $r225 = r0.<com.android.server.appop.AppOpsService: android.util.ArrayMap mActiveWatchers>;

        i267 = virtualinvoke $r225.<android.util.ArrayMap: int size()>();

     label122:
        z37 = z33;

        if i267 <= 0 goto label154;

        z37 = z33;

        if i80 >= 0 goto label154;

        z37 = 1;

        z38 = 0;

        i268 = 0;

     label123:
        $r77 = r0.<com.android.server.appop.AppOpsService: android.util.ArrayMap mActiveWatchers>;

        $i36 = virtualinvoke $r77.<android.util.ArrayMap: int size()>();

        if i268 >= $i36 goto label154;

     label124:
        $r78 = r0.<com.android.server.appop.AppOpsService: android.util.ArrayMap mActiveWatchers>;

        $r79 = virtualinvoke $r78.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i268);

        r228 = (android.util.SparseArray) $r79;

     label125:
        $i37 = virtualinvoke r228.<android.util.SparseArray: int size()>();

        if $i37 > 0 goto label127;

     label126:
        goto label133;

     label127:
        $r80 = virtualinvoke r228.<android.util.SparseArray: java.lang.Object valueAt(int)>(0);

        r231 = (com.android.server.appop.AppOpsService$ActiveCallback) $r80;

     label128:
        if i78 < 0 goto label131;

     label129:
        $i43 = virtualinvoke r228.<android.util.SparseArray: int indexOfKey(int)>(i78);

        if $i43 >= 0 goto label131;

     label130:
        goto label133;

     label131:
        if r157 == null goto label134;

     label132:
        $i41 = r231.<com.android.server.appop.AppOpsService$ActiveCallback: int mWatchingUid>;

        $i42 = staticinvoke <android.os.UserHandle: int getAppId(int)>($i41);

        if i81 == $i42 goto label134;

     label133:
        goto label153;

     label134:
        z39 = z38;

        if z38 != 0 goto label137;

     label135:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  All op active watchers:");

     label136:
        z39 = 1;

     label137:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("    ");

     label138:
        $r81 = r0.<com.android.server.appop.AppOpsService: android.util.ArrayMap mActiveWatchers>;

        $r82 = virtualinvoke $r81.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i268);

        $i38 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>($r82);

        $r83 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i38);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r83);

     label139:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(" ->");

     label140:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("        [");

     label141:
        i305 = virtualinvoke r228.<android.util.SparseArray: int size()>();

     label142:
        z38 = z39;

        i307 = 0;

     label143:
        if i307 >= i305 goto label150;

        if i307 <= 0 goto label146;

     label144:
        virtualinvoke r1.<java.io.PrintWriter: void print(char)>(32);

     label145:
        goto label146;

     label146:
        $i39 = virtualinvoke r228.<android.util.SparseArray: int keyAt(int)>(i307);

        $r84 = staticinvoke <android.app.AppOpsManager: java.lang.String opToName(int)>($i39);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r84);

     label147:
        $i40 = i305 - 1;

        if i307 >= $i40 goto label149;

     label148:
        virtualinvoke r1.<java.io.PrintWriter: void print(char)>(44);

     label149:
        i307 = i307 + 1;

        goto label143;

     label150:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("]");

     label151:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("        ");

     label152:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>(r231);

     label153:
        i268 = i268 + 1;

        goto label123;

     label154:
        $r247 = r0.<com.android.server.appop.AppOpsService: android.util.ArrayMap mStartedWatchers>;

        i329 = virtualinvoke $r247.<android.util.ArrayMap: int size()>();

     label155:
        z40 = z37;

        if i329 <= 0 goto label191;

        z40 = z37;

        if i80 >= 0 goto label191;

        z42 = 0;

     label156:
        $r69 = r0.<com.android.server.appop.AppOpsService: android.util.ArrayMap mStartedWatchers>;

        i333 = virtualinvoke $r69.<android.util.ArrayMap: int size()>();

     label157:
        i334 = 0;

     label158:
        if i334 >= i333 goto label190;

     label159:
        $r70 = r0.<com.android.server.appop.AppOpsService: android.util.ArrayMap mStartedWatchers>;

        $r71 = virtualinvoke $r70.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i334);

        r250 = (android.util.SparseArray) $r71;

     label160:
        $i29 = virtualinvoke r250.<android.util.SparseArray: int size()>();

        if $i29 > 0 goto label162;

     label161:
        goto label168;

     label162:
        $r72 = virtualinvoke r250.<android.util.SparseArray: java.lang.Object valueAt(int)>(0);

        r253 = (com.android.server.appop.AppOpsService$StartedCallback) $r72;

     label163:
        if i78 < 0 goto label166;

     label164:
        $i35 = virtualinvoke r250.<android.util.SparseArray: int indexOfKey(int)>(i78);

        if $i35 >= 0 goto label166;

     label165:
        goto label168;

     label166:
        if r157 == null goto label169;

     label167:
        $i33 = r253.<com.android.server.appop.AppOpsService$StartedCallback: int mWatchingUid>;

        $i34 = staticinvoke <android.os.UserHandle: int getAppId(int)>($i33);

        if i81 == $i34 goto label169;

     label168:
        goto label189;

     label169:
        z43 = z42;

        if z42 != 0 goto label172;

     label170:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  All op started watchers:");

     label171:
        z43 = 1;

     label172:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("    ");

     label173:
        $r73 = r0.<com.android.server.appop.AppOpsService: android.util.ArrayMap mStartedWatchers>;

        $r74 = virtualinvoke $r73.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i334);

        $i30 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>($r74);

        $r75 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i30);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r75);

     label174:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(" ->");

     label175:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("        [");

     label176:
        i368 = virtualinvoke r250.<android.util.SparseArray: int size()>();

     label177:
        i369 = 0;

     label178:
        if i369 >= i368 goto label185;

        if i369 <= 0 goto label181;

     label179:
        virtualinvoke r1.<java.io.PrintWriter: void print(char)>(32);

     label180:
        goto label181;

     label181:
        $i31 = virtualinvoke r250.<android.util.SparseArray: int keyAt(int)>(i369);

        $r76 = staticinvoke <android.app.AppOpsManager: java.lang.String opToName(int)>($i31);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r76);

     label182:
        $i32 = i368 - 1;

        if i369 >= $i32 goto label184;

     label183:
        virtualinvoke r1.<java.io.PrintWriter: void print(char)>(44);

     label184:
        i369 = i369 + 1;

        goto label178;

     label185:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("]");

     label186:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("        ");

     label187:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>(r253);

     label188:
        z42 = z43;

     label189:
        i334 = i334 + 1;

        goto label158;

     label190:
        z40 = 1;

     label191:
        $r269 = r0.<com.android.server.appop.AppOpsService: android.util.ArrayMap mNotedWatchers>;

        i391 = virtualinvoke $r269.<android.util.ArrayMap: int size()>();

     label192:
        z44 = z40;

        if i391 <= 0 goto label225;

        z44 = z40;

        if i80 >= 0 goto label225;

        z44 = 1;

        z45 = 0;

        i392 = 0;

     label193:
        $r61 = r0.<com.android.server.appop.AppOpsService: android.util.ArrayMap mNotedWatchers>;

        $i21 = virtualinvoke $r61.<android.util.ArrayMap: int size()>();

        if i392 >= $i21 goto label225;

     label194:
        $r62 = r0.<com.android.server.appop.AppOpsService: android.util.ArrayMap mNotedWatchers>;

        $r63 = virtualinvoke $r62.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i392);

        r272 = (android.util.SparseArray) $r63;

     label195:
        $i22 = virtualinvoke r272.<android.util.SparseArray: int size()>();

        if $i22 > 0 goto label197;

     label196:
        goto label203;

     label197:
        $r64 = virtualinvoke r272.<android.util.SparseArray: java.lang.Object valueAt(int)>(0);

        r275 = (com.android.server.appop.AppOpsService$NotedCallback) $r64;

     label198:
        if i78 < 0 goto label201;

     label199:
        $i28 = virtualinvoke r272.<android.util.SparseArray: int indexOfKey(int)>(i78);

        if $i28 >= 0 goto label201;

     label200:
        goto label203;

     label201:
        if r157 == null goto label204;

     label202:
        $i26 = r275.<com.android.server.appop.AppOpsService$NotedCallback: int mWatchingUid>;

        $i27 = staticinvoke <android.os.UserHandle: int getAppId(int)>($i26);

        if i81 == $i27 goto label204;

     label203:
        goto label224;

     label204:
        z46 = z45;

        if z45 != 0 goto label207;

     label205:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  All op noted watchers:");

     label206:
        z46 = 1;

     label207:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("    ");

     label208:
        $r65 = r0.<com.android.server.appop.AppOpsService: android.util.ArrayMap mNotedWatchers>;

        $r66 = virtualinvoke $r65.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i392);

        $i23 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>($r66);

        $r67 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i23);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r67);

     label209:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(" ->");

     label210:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("        [");

     label211:
        i429 = virtualinvoke r272.<android.util.SparseArray: int size()>();

     label212:
        z45 = z46;

        i431 = 0;

     label213:
        if i431 >= i429 goto label221;

        if i431 <= 0 goto label216;

     label214:
        virtualinvoke r1.<java.io.PrintWriter: void print(char)>(32);

     label215:
        goto label216;

     label216:
        $i24 = virtualinvoke r272.<android.util.SparseArray: int keyAt(int)>(i431);

        $r68 = staticinvoke <android.app.AppOpsManager: java.lang.String opToName(int)>($i24);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r68);

     label217:
        $i25 = i429 - 1;

        if i431 >= $i25 goto label220;

     label218:
        virtualinvoke r1.<java.io.PrintWriter: void print(char)>(44);

     label219:
        goto label220;

     label220:
        i431 = i431 + 1;

        goto label213;

     label221:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("]");

     label222:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("        ");

     label223:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>(r275);

     label224:
        i392 = i392 + 1;

        goto label193;

     label225:
        $r291 = r0.<com.android.server.appop.AppOpsService: com.android.server.appop.AudioRestrictionManager mAudioRestrictionManager>;

        z47 = virtualinvoke $r291.<com.android.server.appop.AudioRestrictionManager: boolean hasActiveRestrictions()>();

     label226:
        z48 = z44;

        if z47 == 0 goto label228;

        z48 = z44;

        if i78 >= 0 goto label228;

        z48 = z44;

        if r157 == null goto label228;

        z48 = z44;

        if i80 >= 0 goto label228;

        z48 = z44;

        if z19 != 0 goto label228;

        z48 = z44;

        if z19 != 0 goto label228;

     label227:
        $r60 = r0.<com.android.server.appop.AppOpsService: com.android.server.appop.AudioRestrictionManager mAudioRestrictionManager>;

        $z8 = virtualinvoke $r60.<com.android.server.appop.AudioRestrictionManager: boolean dump(java.io.PrintWriter)>(r1);

        z48 = z44 | $z8;

     label228:
        if z48 == 0 goto label230;

     label229:
        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label230:
        i459 = 0;

        r294 = r169;

        i460 = i81;

        z49 = z48;

     label231:
        $r297 = r0.<com.android.server.appop.AppOpsService: android.util.SparseArray mUidStates>;

        i464 = virtualinvoke $r297.<android.util.SparseArray: int size()>();

     label232:
        if i459 >= i464 goto label396;

     label233:
        $r33 = r0.<com.android.server.appop.AppOpsService: android.util.SparseArray mUidStates>;

        $r34 = virtualinvoke $r33.<android.util.SparseArray: java.lang.Object valueAt(int)>(i459);

        r298 = (com.android.server.appop.AppOpsService$UidState) $r34;

        r299 = r298.<com.android.server.appop.AppOpsService$UidState: android.util.SparseIntArray opModes>;

        r300 = r298.<com.android.server.appop.AppOpsService$UidState: android.util.ArrayMap pkgOps>;

     label234:
        if z19 != 0 goto label393;

        goto label235;

     label235:
        if i78 >= 0 goto label237;

        if r157 != null goto label237;

        if i80 < 0 goto label236;

        goto label237;

     label236:
        i465 = i459;

        goto label285;

     label237:
        if i78 < 0 goto label242;

     label238:
        $r58 = r298.<com.android.server.appop.AppOpsService$UidState: android.util.SparseIntArray opModes>;

        if $r58 == null goto label241;

     label239:
        $r59 = r298.<com.android.server.appop.AppOpsService$UidState: android.util.SparseIntArray opModes>;

        $i20 = virtualinvoke $r59.<android.util.SparseIntArray: int indexOfKey(int)>(i78);

        if $i20 < 0 goto label241;

     label240:
        goto label242;

     label241:
        z50 = 0;

        goto label243;

     label242:
        z50 = 1;

     label243:
        if r157 == null goto label247;

     label244:
        $r57 = r0.<com.android.server.appop.AppOpsService: android.util.SparseArray mUidStates>;

        i475 = virtualinvoke $r57.<android.util.SparseArray: int keyAt(int)>(i459);

     label245:
        if i460 != i475 goto label246;

        goto label247;

     label246:
        z51 = 0;

        goto label248;

     label247:
        z51 = 1;

     label248:
        if i80 >= 0 goto label249;

        z52 = 1;

        goto label250;

     label249:
        z52 = 0;

     label250:
        if z52 != 0 goto label257;

        if r299 == null goto label257;

        i476 = 0;

        z53 = z52;

     label251:
        if z53 != 0 goto label256;

        z54 = z51;

        z52 = z53;

     label252:
        $i18 = virtualinvoke r299.<android.util.SparseIntArray: int size()>();

        if i476 >= $i18 goto label257;

     label253:
        $i19 = virtualinvoke r299.<android.util.SparseIntArray: int valueAt(int)>(i476);

        if $i19 != i80 goto label255;

     label254:
        z53 = 1;

     label255:
        i476 = i476 + 1;

        z51 = z54;

        goto label251;

     label256:
        z52 = z53;

        goto label257;

     label257:
        if r300 == null goto label279;

        i481 = 0;

        z56 = z51;

        z57 = z52;

        z58 = z50;

     label258:
        if z58 == 0 goto label260;

        if z56 == 0 goto label260;

        if z57 != 0 goto label259;

        goto label260;

     label259:
        z59 = z58;

        z60 = z57;

        z51 = z56;

        goto label280;

     label260:
        $i484 = virtualinvoke r300.<android.util.ArrayMap: int size()>();

        if i481 >= $i484 goto label277;

     label261:
        $r53 = virtualinvoke r300.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i481);

        r308 = (com.android.server.appop.AppOpsService$Ops) $r53;

     label262:
        z61 = z58;

        if z58 != 0 goto label265;

        z61 = z58;

        if r308 == null goto label265;

        z61 = z58;

     label263:
        $i17 = virtualinvoke r308.<com.android.server.appop.AppOpsService$Ops: int indexOfKey(int)>(i78);

        if $i17 < 0 goto label265;

     label264:
        z61 = 1;

     label265:
        if z57 != 0 goto label272;

        i489 = 0;

     label266:
        if z57 != 0 goto label271;

        i490 = i459;

        z62 = z57;

     label267:
        $i15 = virtualinvoke r308.<com.android.server.appop.AppOpsService$Ops: int size()>();

        if i489 >= $i15 goto label273;

     label268:
        $r55 = virtualinvoke r308.<com.android.server.appop.AppOpsService$Ops: java.lang.Object valueAt(int)>(i489);

        $r56 = (com.android.server.appop.AppOpsService$Op) $r55;

        $i16 = staticinvoke <com.android.server.appop.AppOpsService$Op: int access$300(com.android.server.appop.AppOpsService$Op)>($r56);

        if $i16 != i80 goto label270;

     label269:
        z57 = 1;

     label270:
        i489 = i489 + 1;

        i459 = i490;

        goto label266;

     label271:
        z62 = z57;

        goto label273;

     label272:
        z62 = z57;

     label273:
        z63 = z56;

        if z56 != 0 goto label276;

     label274:
        $r54 = r308.<com.android.server.appop.AppOpsService$Ops: java.lang.String packageName>;

        z64 = virtualinvoke r157.<java.lang.String: boolean equals(java.lang.Object)>($r54);

     label275:
        z63 = z56;

        if z64 == 0 goto label276;

        z63 = 1;

     label276:
        i481 = i481 + 1;

        z58 = z61;

        z57 = z62;

        z56 = z63;

        goto label258;

     label277:
        z59 = z58;

        z60 = z57;

        z51 = z56;

        goto label280;

     label278:
        $r145 := @caughtexception;

        r160 = $r145;

        goto label502;

     label279:
        z60 = z52;

        z59 = z50;

     label280:
        r314 = r298.<com.android.server.appop.AppOpsService$UidState: android.util.SparseBooleanArray foregroundOps>;

     label281:
        z65 = z59;

        if r314 == null goto label284;

        z65 = z59;

        if z59 != 0 goto label284;

     label282:
        $r52 = r298.<com.android.server.appop.AppOpsService$UidState: android.util.SparseBooleanArray foregroundOps>;

        i501 = virtualinvoke $r52.<android.util.SparseBooleanArray: int indexOfKey(int)>(i78);

     label283:
        z65 = z59;

        if i501 <= 0 goto label284;

        z65 = 1;

     label284:
        if z65 == 0 goto label392;

        if z51 == 0 goto label392;

        i465 = i459;

        if z60 != 0 goto label285;

        goto label393;

     label285:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  Uid ");

     label286:
        $i3 = r298.<com.android.server.appop.AppOpsService$UidState: int uid>;

        staticinvoke <android.os.UserHandle: void formatUid(java.io.PrintWriter,int)>(r1, $i3);

     label287:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(":");

     label288:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("    state=");

     label289:
        $i4 = r298.<com.android.server.appop.AppOpsService$UidState: int state>;

        $r35 = staticinvoke <android.app.AppOpsManager: java.lang.String getUidStateName(int)>($i4);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r35);

     label290:
        i514 = r298.<com.android.server.appop.AppOpsService$UidState: int state>;

     label291:
        i517 = r298.<com.android.server.appop.AppOpsService$UidState: int pendingState>;

     label292:
        if i514 == i517 goto label295;

     label293:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("    pendingState=");

     label294:
        $i14 = r298.<com.android.server.appop.AppOpsService$UidState: int pendingState>;

        $r51 = staticinvoke <android.app.AppOpsManager: java.lang.String getUidStateName(int)>($i14);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r51);

     label295:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("    capability=");

     label296:
        $i5 = r298.<com.android.server.appop.AppOpsService$UidState: int capability>;

        staticinvoke <android.app.ActivityManager: void printCapabilitiesFull(java.io.PrintWriter,int)>(r1, $i5);

     label297:
        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label298:
        i530 = r298.<com.android.server.appop.AppOpsService$UidState: int capability>;

     label299:
        i533 = r298.<com.android.server.appop.AppOpsService$UidState: int pendingCapability>;

     label300:
        if i530 == i533 goto label304;

     label301:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("    pendingCapability=");

     label302:
        $i13 = r298.<com.android.server.appop.AppOpsService$UidState: int pendingCapability>;

        staticinvoke <android.app.ActivityManager: void printCapabilitiesFull(java.io.PrintWriter,int)>(r1, $i13);

     label303:
        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label304:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("    appWidgetVisible=");

     label305:
        $z4 = r298.<com.android.server.appop.AppOpsService$UidState: boolean appWidgetVisible>;

        virtualinvoke r1.<java.io.PrintWriter: void println(boolean)>($z4);

     label306:
        z66 = r298.<com.android.server.appop.AppOpsService$UidState: boolean appWidgetVisible>;

     label307:
        z0 = r298.<com.android.server.appop.AppOpsService$UidState: boolean pendingAppWidgetVisible>;

     label308:
        if z66 == z0 goto label311;

     label309:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("    pendingAppWidgetVisible=");

     label310:
        $z7 = r298.<com.android.server.appop.AppOpsService$UidState: boolean pendingAppWidgetVisible>;

        virtualinvoke r1.<java.io.PrintWriter: void println(boolean)>($z7);

     label311:
        r339 = r166;

     label312:
        l554 = r298.<com.android.server.appop.AppOpsService$UidState: long pendingStateCommitTime>;

     label313:
        $b6 = l554 cmp 0L;

        if $b6 == 0 goto label317;

     label314:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("    pendingStateCommitTime=");

     label315:
        $l12 = r298.<com.android.server.appop.AppOpsService$UidState: long pendingStateCommitTime>;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,long,java.io.PrintWriter)>($l12, l99, r1);

     label316:
        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label317:
        r345 = r298.<com.android.server.appop.AppOpsService$UidState: android.util.SparseBooleanArray foregroundOps>;

     label318:
        if r345 == null goto label335;

        if i80 < 0 goto label319;

        if i80 != 4 goto label335;

     label319:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    foregroundOps:");

     label320:
        i565 = 0;

     label321:
        $r348 = r298.<com.android.server.appop.AppOpsService$UidState: android.util.SparseBooleanArray foregroundOps>;

        $i568 = virtualinvoke $r348.<android.util.SparseBooleanArray: int size()>();

        if i565 >= $i568 goto label333;

     label322:
        if i78 < 0 goto label325;

     label323:
        $r50 = r298.<com.android.server.appop.AppOpsService$UidState: android.util.SparseBooleanArray foregroundOps>;

        $i11 = virtualinvoke $r50.<android.util.SparseBooleanArray: int keyAt(int)>(i565);

        if i78 == $i11 goto label325;

     label324:
        goto label332;

     label325:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("      ");

     label326:
        $r47 = r298.<com.android.server.appop.AppOpsService$UidState: android.util.SparseBooleanArray foregroundOps>;

        $i10 = virtualinvoke $r47.<android.util.SparseBooleanArray: int keyAt(int)>(i565);

        $r48 = staticinvoke <android.app.AppOpsManager: java.lang.String opToName(int)>($i10);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r48);

     label327:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(": ");

     label328:
        $r49 = r298.<com.android.server.appop.AppOpsService$UidState: android.util.SparseBooleanArray foregroundOps>;

        $z6 = virtualinvoke $r49.<android.util.SparseBooleanArray: boolean valueAt(int)>(i565);

        if $z6 == 0 goto label330;

     label329:
        r354 = "WATCHER";

        goto label331;

     label330:
        r354 = "SILENT";

     label331:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(r354);

     label332:
        i565 = i565 + 1;

        goto label321;

     label333:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("    hasForegroundWatchers=");

     label334:
        $z5 = r298.<com.android.server.appop.AppOpsService$UidState: boolean hasForegroundWatchers>;

        virtualinvoke r1.<java.io.PrintWriter: void println(boolean)>($z5);

     label335:
        if r299 == null goto label348;

     label336:
        i587 = virtualinvoke r299.<android.util.SparseIntArray: int size()>();

     label337:
        i588 = 0;

     label338:
        if i588 >= i587 goto label348;

     label339:
        i591 = virtualinvoke r299.<android.util.SparseIntArray: int keyAt(int)>(i588);

     label340:
        i594 = virtualinvoke r299.<android.util.SparseIntArray: int valueAt(int)>(i588);

     label341:
        if i78 < 0 goto label342;

        if i78 == i591 goto label342;

        goto label347;

     label342:
        if i80 < 0 goto label343;

        if i80 == i594 goto label343;

        goto label347;

     label343:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("      ");

     label344:
        $r45 = staticinvoke <android.app.AppOpsManager: java.lang.String opToName(int)>(i591);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r45);

     label345:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(": mode=");

     label346:
        $r46 = staticinvoke <android.app.AppOpsManager: java.lang.String modeToName(int)>(i594);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r46);

     label347:
        i588 = i588 + 1;

        goto label338;

     label348:
        if r300 != null goto label349;

        r166 = r339;

        l605 = l95;

        i606 = i78;

        l607 = l99;

        i608 = i80;

        goto label390;

     label349:
        i609 = 0;

        r365 = r294;

        r366 = r339;

     label350:
        $i7 = virtualinvoke r300.<android.util.ArrayMap: int size()>();

        if i609 >= $i7 goto label389;

     label351:
        $r36 = virtualinvoke r300.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i609);

        r370 = (com.android.server.appop.AppOpsService$Ops) $r36;

     label352:
        if r157 == null goto label355;

     label353:
        $r44 = r370.<com.android.server.appop.AppOpsService$Ops: java.lang.String packageName>;

        z67 = virtualinvoke r157.<java.lang.String: boolean equals(java.lang.Object)>($r44);

     label354:
        if z67 != 0 goto label355;

        r374 = r365;

        l618 = l95;

        r376 = r157;

        i619 = i78;

        l620 = l99;

        i621 = i80;

        r378 = r300;

        goto label388;

     label355:
        z68 = 0;

        i622 = 0;

        r379 = r366;

     label356:
        $i625 = virtualinvoke r370.<com.android.server.appop.AppOpsService$Ops: int size()>();

        if i622 >= $i625 goto label387;

     label357:
        $r37 = virtualinvoke r370.<com.android.server.appop.AppOpsService$Ops: java.lang.Object valueAt(int)>(i622);

        r2 = (com.android.server.appop.AppOpsService$Op) $r37;

     label358:
        i630 = r2.<com.android.server.appop.AppOpsService$Op: int op>;

     label359:
        if i78 < 0 goto label360;

        if i78 == i630 goto label360;

        goto label362;

     label360:
        if i80 < 0 goto label363;

     label361:
        $i9 = staticinvoke <com.android.server.appop.AppOpsService$Op: int access$300(com.android.server.appop.AppOpsService$Op)>(r2);

        if i80 == $i9 goto label363;

     label362:
        goto label386;

     label363:
        if z68 != 0 goto label368;

     label364:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("    Package ");

     label365:
        $r43 = r370.<com.android.server.appop.AppOpsService$Ops: java.lang.String packageName>;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r43);

     label366:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(":");

     label367:
        z68 = 1;

        goto label368;

     label368:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("      ");

     label369:
        $r38 = staticinvoke <android.app.AppOpsManager: java.lang.String opToName(int)>(i630);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r38);

     label370:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" (");

     label371:
        $i8 = staticinvoke <com.android.server.appop.AppOpsService$Op: int access$300(com.android.server.appop.AppOpsService$Op)>(r2);

        $r39 = staticinvoke <android.app.AppOpsManager: java.lang.String modeToName(int)>($i8);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r39);

     label372:
        i649 = staticinvoke <android.app.AppOpsManager: int opToSwitch(int)>(i630);

     label373:
        if i649 == i630 goto label384;

     label374:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" / switch ");

     label375:
        $r40 = staticinvoke <android.app.AppOpsManager: java.lang.String opToName(int)>(i649);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r40);

     label376:
        $r41 = virtualinvoke r370.<com.android.server.appop.AppOpsService$Ops: java.lang.Object get(int)>(i649);

        r3 = (com.android.server.appop.AppOpsService$Op) $r41;

     label377:
        if r3 == null goto label380;

     label378:
        i658 = staticinvoke <com.android.server.appop.AppOpsService$Op: int access$300(com.android.server.appop.AppOpsService$Op)>(r3);

     label379:
        goto label381;

     label380:
        i658 = staticinvoke <android.app.AppOpsManager: int opToDefaultMode(int)>(i649);

     label381:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("=");

     label382:
        $r42 = staticinvoke <android.app.AppOpsManager: java.lang.String modeToName(int)>(i658);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r42);

     label383:
        goto label384;

     label384:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("): ");

     label385:
        specialinvoke r0.<com.android.server.appop.AppOpsService: void dumpStatesLocked(java.io.PrintWriter,java.lang.String,int,long,com.android.server.appop.AppOpsService$Op,long,java.text.SimpleDateFormat,java.util.Date,java.lang.String)>(r1, r156, i82, l99, r2, l95, r379, r365, "        ");

     label386:
        i622 = i622 + 1;

        goto label356;

     label387:
        i619 = i78;

        r366 = r379;

        r378 = r300;

        i621 = i80;

        l620 = l99;

        r376 = r157;

        r374 = r365;

        l618 = l95;

     label388:
        r300 = r378;

        r365 = r374;

        i609 = i609 + 1;

        l99 = l620;

        i80 = i621;

        i78 = i619;

        r157 = r376;

        l95 = l618;

        goto label350;

     label389:
        l605 = l95;

        r166 = r366;

        i606 = i78;

        i608 = i80;

        l607 = l99;

        r294 = r365;

     label390:
        z49 = 1;

        i459 = i465;

        goto label394;

     label391:
        $r138 := @caughtexception;

        r160 = $r138;

        goto label502;

     label392:
        goto label393;

     label393:
        i606 = i78;

        i608 = i80;

        l607 = l99;

        l605 = l95;

     label394:
        i459 = i459 + 1;

        l99 = l607;

        i80 = i608;

        i78 = i606;

        l95 = l605;

        goto label231;

     label395:
        $r144 := @caughtexception;

        r160 = $r144;

        goto label502;

     label396:
        if z49 == 0 goto label400;

     label397:
        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label398:
        goto label400;

     label399:
        $r142 := @caughtexception;

        r160 = $r142;

        goto label502;

     label400:
        $r5 = r0.<com.android.server.appop.AppOpsService: android.util.ArrayMap mOpUserRestrictions>;

        i677 = virtualinvoke $r5.<android.util.ArrayMap: int size()>();

     label401:
        i678 = 0;

     label402:
        if i678 >= i677 goto label496;

     label403:
        $r7 = r0.<com.android.server.appop.AppOpsService: android.util.ArrayMap mOpUserRestrictions>;

        $r8 = virtualinvoke $r7.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i678);

        r408 = (android.os.IBinder) $r8;

     label404:
        $r9 = r0.<com.android.server.appop.AppOpsService: android.util.ArrayMap mOpUserRestrictions>;

        $r10 = virtualinvoke $r9.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i678);

        r410 = (com.android.server.appop.AppOpsService$ClientRestrictionState) $r10;

     label405:
        z70 = 0;

        if i80 >= 0 goto label493;

        if z19 != 0 goto label493;

        goto label406;

     label406:
        r413 = r410.<com.android.server.appop.AppOpsService$ClientRestrictionState: android.util.SparseArray perUserRestrictions>;

     label407:
        if r413 == null goto label410;

     label408:
        $r32 = r410.<com.android.server.appop.AppOpsService$ClientRestrictionState: android.util.SparseArray perUserRestrictions>;

        i679 = virtualinvoke $r32.<android.util.SparseArray: int size()>();

     label409:
        goto label411;

     label410:
        i679 = 0;

     label411:
        i680 = i679;

        if i679 <= 0 goto label451;

        if r157 != null goto label451;

        z71 = 0;

        i681 = 0;

     label412:
        if i681 >= i680 goto label450;

     label413:
        $r21 = r410.<com.android.server.appop.AppOpsService$ClientRestrictionState: android.util.SparseArray perUserRestrictions>;

        i682 = virtualinvoke $r21.<android.util.SparseArray: int keyAt(int)>(i681);

     label414:
        $r22 = r410.<com.android.server.appop.AppOpsService$ClientRestrictionState: android.util.SparseArray perUserRestrictions>;

        $r23 = virtualinvoke $r22.<android.util.SparseArray: java.lang.Object valueAt(int)>(i681);

        r417 = (boolean[]) $r23;

     label415:
        if r417 != null goto label416;

        goto label419;

     label416:
        if i78 < 0 goto label420;

     label417:
        $i2 = lengthof r417;

        if i78 >= $i2 goto label419;

     label418:
        z72 = r417[i78];

        if z72 != 0 goto label420;

     label419:
        goto label449;

     label420:
        if z70 != 0 goto label429;

     label421:
        r420 = new java.lang.StringBuilder;

     label422:
        specialinvoke r420.<java.lang.StringBuilder: void <init>()>();

     label423:
        virtualinvoke r420.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  User restrictions for token ");

     label424:
        virtualinvoke r420.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r408);

     label425:
        virtualinvoke r420.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

     label426:
        r426 = virtualinvoke r420.<java.lang.StringBuilder: java.lang.String toString()>();

     label427:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(r426);

     label428:
        z70 = 1;

        goto label429;

     label429:
        if z71 != 0 goto label432;

     label430:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      Restricted ops:");

     label431:
        z71 = 1;

        goto label432;

     label432:
        r432 = new java.lang.StringBuilder;

     label433:
        specialinvoke r432.<java.lang.StringBuilder: void <init>()>();

     label434:
        virtualinvoke r432.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

     label435:
        i683 = lengthof r417;

     label436:
        i684 = 0;

     label437:
        if i684 >= i683 goto label443;

        $z3 = r417[i684];

        if $z3 == 0 goto label442;

     label438:
        $i1 = virtualinvoke r432.<java.lang.StringBuilder: int length()>();

        if $i1 <= 1 goto label440;

     label439:
        virtualinvoke r432.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label440:
        $r26 = staticinvoke <android.app.AppOpsManager: java.lang.String opToName(int)>(i684);

        virtualinvoke r432.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

     label441:
        goto label442;

     label442:
        i684 = i684 + 1;

        goto label437;

     label443:
        virtualinvoke r432.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

     label444:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("        ");

     label445:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("user: ");

     label446:
        virtualinvoke r1.<java.io.PrintWriter: void print(int)>(i682);

     label447:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" restricted ops: ");

     label448:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>(r432);

     label449:
        i681 = i681 + 1;

        goto label412;

     label450:
        r411 = r157;

        goto label452;

     label451:
        r411 = r157;

        z70 = 0;

     label452:
        $r447 = r410.<com.android.server.appop.AppOpsService$ClientRestrictionState: android.util.SparseArray perUserExcludedPackages>;

        if $r447 == null goto label455;

     label453:
        $r20 = r410.<com.android.server.appop.AppOpsService$ClientRestrictionState: android.util.SparseArray perUserExcludedPackages>;

        i685 = virtualinvoke $r20.<android.util.SparseArray: int size()>();

     label454:
        goto label456;

     label455:
        i685 = 0;

     label456:
        i686 = i685;

        if i685 <= 0 goto label491;

        if i78 >= 0 goto label491;

        z73 = 0;

        i687 = 0;

     label457:
        if i687 >= i686 goto label490;

     label458:
        $r11 = r410.<com.android.server.appop.AppOpsService$ClientRestrictionState: android.util.SparseArray perUserExcludedPackages>;

        i688 = virtualinvoke $r11.<android.util.SparseArray: int keyAt(int)>(i687);

     label459:
        $r12 = r410.<com.android.server.appop.AppOpsService$ClientRestrictionState: android.util.SparseArray perUserExcludedPackages>;

        $r13 = virtualinvoke $r12.<android.util.SparseArray: java.lang.Object valueAt(int)>(i687);

        r452 = (java.lang.String[]) $r13;

     label460:
        if r452 != null goto label461;

        goto label489;

     label461:
        if r411 == null goto label470;

     label462:
        i689 = lengthof r452;

     label463:
        i690 = 0;

     label464:
        if i690 >= i689 goto label468;

     label465:
        $r19 = r452[i690];

        $z2 = virtualinvoke r411.<java.lang.String: boolean equals(java.lang.Object)>($r19);

        if $z2 == 0 goto label467;

     label466:
        z75 = 1;

        goto label469;

     label467:
        i690 = i690 + 1;

        goto label464;

     label468:
        z75 = 0;

     label469:
        goto label471;

     label470:
        z75 = 1;

     label471:
        if z75 != 0 goto label472;

        goto label489;

     label472:
        z76 = z70;

        if z70 != 0 goto label480;

     label473:
        r456 = new java.lang.StringBuilder;

     label474:
        specialinvoke r456.<java.lang.StringBuilder: void <init>()>();

     label475:
        virtualinvoke r456.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  User restrictions for token ");

     label476:
        virtualinvoke r456.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r408);

     label477:
        virtualinvoke r456.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

     label478:
        $r18 = virtualinvoke r456.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r18);

     label479:
        z76 = 1;

     label480:
        z77 = z73;

        if z73 != 0 goto label483;

     label481:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      Excluded packages:");

     label482:
        z77 = 1;

     label483:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("        ");

     label484:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("user: ");

     label485:
        virtualinvoke r1.<java.io.PrintWriter: void print(int)>(i688);

     label486:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" packages: ");

     label487:
        $r14 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(r452);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r14);

     label488:
        z73 = z77;

        z70 = z76;

     label489:
        i687 = i687 + 1;

        goto label457;

     label490:
        goto label494;

     label491:
        goto label494;

     label492:
        $r143 := @caughtexception;

        r160 = $r143;

        goto label502;

     label493:
        r411 = r157;

     label494:
        i678 = i678 + 1;

        r157 = r411;

        goto label402;

     label495:
        $r134 := @caughtexception;

        r160 = $r134;

        goto label502;

     label496:
        exitmonitor r0;

     label497:
        goto label498;

     label498:
        return;

     label499:
        $r139 := @caughtexception;

        r160 = $r139;

        goto label502;

     label500:
        $r140 := @caughtexception;

        r160 = $r140;

        goto label502;

     label501:
        $r137 := @caughtexception;

        r160 = $r137;

     label502:
        exitmonitor r0;

     label503:
        throw r160;

     label504:
        $r141 := @caughtexception;

        r160 = $r141;

        goto label502;

        catch android.os.RemoteException from label008 to label009 with label010;
        catch java.lang.Throwable from label024 to label025 with label501;
        catch java.lang.Throwable from label026 to label027 with label028;
        catch java.lang.Throwable from label029 to label030 with label501;
        catch java.lang.Throwable from label030 to label031 with label501;
        catch java.lang.Throwable from label031 to label032 with label501;
        catch java.lang.Throwable from label032 to label033 with label501;
        catch java.lang.Throwable from label033 to label034 with label501;
        catch java.lang.Throwable from label034 to label035 with label501;
        catch java.lang.Throwable from label035 to label036 with label501;
        catch java.lang.Throwable from label036 to label037 with label501;
        catch java.lang.Throwable from label038 to label039 with label028;
        catch java.lang.Throwable from label040 to label041 with label028;
        catch java.lang.Throwable from label042 to label043 with label028;
        catch java.lang.Throwable from label043 to label044 with label028;
        catch java.lang.Throwable from label044 to label045 with label028;
        catch java.lang.Throwable from label045 to label046 with label028;
        catch java.lang.Throwable from label046 to label047 with label028;
        catch java.lang.Throwable from label047 to label048 with label028;
        catch java.lang.Throwable from label049 to label050 with label028;
        catch java.lang.Throwable from label050 to label051 with label501;
        catch java.lang.Throwable from label052 to label053 with label028;
        catch java.lang.Throwable from label054 to label055 with label028;
        catch java.lang.Throwable from label057 to label058 with label028;
        catch java.lang.Throwable from label059 to label060 with label028;
        catch java.lang.Throwable from label060 to label061 with label028;
        catch java.lang.Throwable from label062 to label063 with label028;
        catch java.lang.Throwable from label065 to label066 with label028;
        catch java.lang.Throwable from label068 to label069 with label028;
        catch java.lang.Throwable from label069 to label070 with label028;
        catch java.lang.Throwable from label070 to label071 with label028;
        catch java.lang.Throwable from label072 to label073 with label028;
        catch java.lang.Throwable from label073 to label074 with label028;
        catch java.lang.Throwable from label074 to label075 with label028;
        catch java.lang.Throwable from label075 to label076 with label028;
        catch java.lang.Throwable from label081 to label082 with label501;
        catch java.lang.Throwable from label084 to label085 with label028;
        catch java.lang.Throwable from label086 to label087 with label028;
        catch java.lang.Throwable from label089 to label090 with label028;
        catch java.lang.Throwable from label091 to label092 with label028;
        catch java.lang.Throwable from label092 to label093 with label028;
        catch java.lang.Throwable from label093 to label094 with label028;
        catch java.lang.Throwable from label094 to label095 with label028;
        catch java.lang.Throwable from label097 to label098 with label028;
        catch java.lang.Throwable from label098 to label099 with label028;
        catch java.lang.Throwable from label099 to label100 with label028;
        catch java.lang.Throwable from label100 to label101 with label028;
        catch java.lang.Throwable from label101 to label102 with label028;
        catch java.lang.Throwable from label104 to label105 with label501;
        catch java.lang.Throwable from label107 to label108 with label028;
        catch java.lang.Throwable from label108 to label109 with label028;
        catch java.lang.Throwable from label110 to label111 with label028;
        catch java.lang.Throwable from label113 to label114 with label028;
        catch java.lang.Throwable from label115 to label116 with label028;
        catch java.lang.Throwable from label116 to label117 with label028;
        catch java.lang.Throwable from label117 to label118 with label028;
        catch java.lang.Throwable from label118 to label119 with label028;
        catch java.lang.Throwable from label121 to label122 with label501;
        catch java.lang.Throwable from label123 to label124 with label028;
        catch java.lang.Throwable from label124 to label125 with label028;
        catch java.lang.Throwable from label125 to label126 with label028;
        catch java.lang.Throwable from label127 to label128 with label028;
        catch java.lang.Throwable from label129 to label130 with label028;
        catch java.lang.Throwable from label132 to label133 with label028;
        catch java.lang.Throwable from label135 to label136 with label028;
        catch java.lang.Throwable from label137 to label138 with label028;
        catch java.lang.Throwable from label138 to label139 with label028;
        catch java.lang.Throwable from label139 to label140 with label028;
        catch java.lang.Throwable from label140 to label141 with label028;
        catch java.lang.Throwable from label141 to label142 with label028;
        catch java.lang.Throwable from label144 to label145 with label028;
        catch java.lang.Throwable from label146 to label147 with label028;
        catch java.lang.Throwable from label148 to label149 with label028;
        catch java.lang.Throwable from label150 to label151 with label028;
        catch java.lang.Throwable from label151 to label152 with label028;
        catch java.lang.Throwable from label152 to label153 with label028;
        catch java.lang.Throwable from label154 to label155 with label501;
        catch java.lang.Throwable from label156 to label157 with label028;
        catch java.lang.Throwable from label159 to label160 with label028;
        catch java.lang.Throwable from label160 to label161 with label028;
        catch java.lang.Throwable from label162 to label163 with label028;
        catch java.lang.Throwable from label164 to label165 with label028;
        catch java.lang.Throwable from label167 to label168 with label028;
        catch java.lang.Throwable from label170 to label171 with label028;
        catch java.lang.Throwable from label172 to label173 with label028;
        catch java.lang.Throwable from label173 to label174 with label028;
        catch java.lang.Throwable from label174 to label175 with label028;
        catch java.lang.Throwable from label175 to label176 with label028;
        catch java.lang.Throwable from label176 to label177 with label028;
        catch java.lang.Throwable from label179 to label180 with label028;
        catch java.lang.Throwable from label181 to label182 with label028;
        catch java.lang.Throwable from label183 to label184 with label028;
        catch java.lang.Throwable from label185 to label186 with label028;
        catch java.lang.Throwable from label186 to label187 with label028;
        catch java.lang.Throwable from label187 to label188 with label028;
        catch java.lang.Throwable from label191 to label192 with label501;
        catch java.lang.Throwable from label193 to label194 with label028;
        catch java.lang.Throwable from label194 to label195 with label028;
        catch java.lang.Throwable from label195 to label196 with label028;
        catch java.lang.Throwable from label197 to label198 with label028;
        catch java.lang.Throwable from label199 to label200 with label028;
        catch java.lang.Throwable from label202 to label203 with label028;
        catch java.lang.Throwable from label205 to label206 with label028;
        catch java.lang.Throwable from label207 to label208 with label028;
        catch java.lang.Throwable from label208 to label209 with label028;
        catch java.lang.Throwable from label209 to label210 with label028;
        catch java.lang.Throwable from label210 to label211 with label028;
        catch java.lang.Throwable from label211 to label212 with label028;
        catch java.lang.Throwable from label214 to label215 with label028;
        catch java.lang.Throwable from label216 to label217 with label028;
        catch java.lang.Throwable from label218 to label219 with label028;
        catch java.lang.Throwable from label221 to label222 with label028;
        catch java.lang.Throwable from label222 to label223 with label028;
        catch java.lang.Throwable from label223 to label224 with label028;
        catch java.lang.Throwable from label225 to label226 with label501;
        catch java.lang.Throwable from label227 to label228 with label028;
        catch java.lang.Throwable from label229 to label230 with label028;
        catch java.lang.Throwable from label231 to label232 with label501;
        catch java.lang.Throwable from label233 to label234 with label395;
        catch java.lang.Throwable from label238 to label239 with label028;
        catch java.lang.Throwable from label239 to label240 with label028;
        catch java.lang.Throwable from label244 to label245 with label028;
        catch java.lang.Throwable from label252 to label253 with label278;
        catch java.lang.Throwable from label253 to label254 with label278;
        catch java.lang.Throwable from label260 to label261 with label278;
        catch java.lang.Throwable from label261 to label262 with label278;
        catch java.lang.Throwable from label263 to label264 with label278;
        catch java.lang.Throwable from label267 to label268 with label278;
        catch java.lang.Throwable from label268 to label269 with label278;
        catch java.lang.Throwable from label274 to label275 with label278;
        catch java.lang.Throwable from label280 to label281 with label391;
        catch java.lang.Throwable from label282 to label283 with label278;
        catch java.lang.Throwable from label285 to label286 with label391;
        catch java.lang.Throwable from label286 to label287 with label391;
        catch java.lang.Throwable from label287 to label288 with label391;
        catch java.lang.Throwable from label288 to label289 with label391;
        catch java.lang.Throwable from label289 to label290 with label391;
        catch java.lang.Throwable from label290 to label291 with label391;
        catch java.lang.Throwable from label291 to label292 with label391;
        catch java.lang.Throwable from label293 to label294 with label278;
        catch java.lang.Throwable from label294 to label295 with label278;
        catch java.lang.Throwable from label295 to label296 with label391;
        catch java.lang.Throwable from label296 to label297 with label391;
        catch java.lang.Throwable from label297 to label298 with label391;
        catch java.lang.Throwable from label298 to label299 with label391;
        catch java.lang.Throwable from label299 to label300 with label391;
        catch java.lang.Throwable from label301 to label302 with label278;
        catch java.lang.Throwable from label302 to label303 with label278;
        catch java.lang.Throwable from label303 to label304 with label278;
        catch java.lang.Throwable from label304 to label305 with label391;
        catch java.lang.Throwable from label305 to label306 with label391;
        catch java.lang.Throwable from label306 to label307 with label391;
        catch java.lang.Throwable from label307 to label308 with label391;
        catch java.lang.Throwable from label309 to label310 with label278;
        catch java.lang.Throwable from label310 to label311 with label278;
        catch java.lang.Throwable from label312 to label313 with label391;
        catch java.lang.Throwable from label314 to label315 with label278;
        catch java.lang.Throwable from label315 to label316 with label278;
        catch java.lang.Throwable from label316 to label317 with label278;
        catch java.lang.Throwable from label317 to label318 with label391;
        catch java.lang.Throwable from label319 to label320 with label278;
        catch java.lang.Throwable from label321 to label322 with label278;
        catch java.lang.Throwable from label323 to label324 with label278;
        catch java.lang.Throwable from label325 to label326 with label278;
        catch java.lang.Throwable from label326 to label327 with label278;
        catch java.lang.Throwable from label327 to label328 with label278;
        catch java.lang.Throwable from label328 to label329 with label278;
        catch java.lang.Throwable from label331 to label332 with label278;
        catch java.lang.Throwable from label333 to label334 with label278;
        catch java.lang.Throwable from label334 to label335 with label278;
        catch java.lang.Throwable from label336 to label337 with label278;
        catch java.lang.Throwable from label339 to label340 with label278;
        catch java.lang.Throwable from label340 to label341 with label278;
        catch java.lang.Throwable from label343 to label344 with label278;
        catch java.lang.Throwable from label344 to label345 with label278;
        catch java.lang.Throwable from label345 to label346 with label278;
        catch java.lang.Throwable from label346 to label347 with label278;
        catch java.lang.Throwable from label350 to label351 with label391;
        catch java.lang.Throwable from label351 to label352 with label391;
        catch java.lang.Throwable from label353 to label354 with label278;
        catch java.lang.Throwable from label356 to label357 with label391;
        catch java.lang.Throwable from label357 to label358 with label391;
        catch java.lang.Throwable from label358 to label359 with label391;
        catch java.lang.Throwable from label361 to label362 with label278;
        catch java.lang.Throwable from label364 to label365 with label278;
        catch java.lang.Throwable from label365 to label366 with label278;
        catch java.lang.Throwable from label366 to label367 with label278;
        catch java.lang.Throwable from label368 to label369 with label391;
        catch java.lang.Throwable from label369 to label370 with label391;
        catch java.lang.Throwable from label370 to label371 with label391;
        catch java.lang.Throwable from label371 to label372 with label391;
        catch java.lang.Throwable from label372 to label373 with label391;
        catch java.lang.Throwable from label374 to label375 with label278;
        catch java.lang.Throwable from label375 to label376 with label278;
        catch java.lang.Throwable from label376 to label377 with label278;
        catch java.lang.Throwable from label378 to label379 with label278;
        catch java.lang.Throwable from label380 to label381 with label278;
        catch java.lang.Throwable from label381 to label382 with label278;
        catch java.lang.Throwable from label382 to label383 with label278;
        catch java.lang.Throwable from label384 to label385 with label391;
        catch java.lang.Throwable from label385 to label386 with label399;
        catch java.lang.Throwable from label397 to label398 with label399;
        catch java.lang.Throwable from label400 to label401 with label500;
        catch java.lang.Throwable from label403 to label404 with label495;
        catch java.lang.Throwable from label404 to label405 with label495;
        catch java.lang.Throwable from label406 to label407 with label495;
        catch java.lang.Throwable from label408 to label409 with label399;
        catch java.lang.Throwable from label413 to label414 with label495;
        catch java.lang.Throwable from label414 to label415 with label495;
        catch java.lang.Throwable from label417 to label418 with label399;
        catch java.lang.Throwable from label421 to label422 with label495;
        catch java.lang.Throwable from label422 to label423 with label495;
        catch java.lang.Throwable from label423 to label424 with label495;
        catch java.lang.Throwable from label424 to label425 with label495;
        catch java.lang.Throwable from label425 to label426 with label495;
        catch java.lang.Throwable from label426 to label427 with label495;
        catch java.lang.Throwable from label427 to label428 with label492;
        catch java.lang.Throwable from label430 to label431 with label492;
        catch java.lang.Throwable from label432 to label433 with label492;
        catch java.lang.Throwable from label433 to label434 with label492;
        catch java.lang.Throwable from label434 to label435 with label492;
        catch java.lang.Throwable from label435 to label436 with label492;
        catch java.lang.Throwable from label438 to label439 with label492;
        catch java.lang.Throwable from label439 to label440 with label492;
        catch java.lang.Throwable from label440 to label441 with label492;
        catch java.lang.Throwable from label443 to label444 with label492;
        catch java.lang.Throwable from label444 to label445 with label492;
        catch java.lang.Throwable from label445 to label446 with label492;
        catch java.lang.Throwable from label446 to label447 with label492;
        catch java.lang.Throwable from label447 to label448 with label492;
        catch java.lang.Throwable from label448 to label449 with label492;
        catch java.lang.Throwable from label452 to label453 with label492;
        catch java.lang.Throwable from label453 to label454 with label492;
        catch java.lang.Throwable from label458 to label459 with label492;
        catch java.lang.Throwable from label459 to label460 with label492;
        catch java.lang.Throwable from label462 to label463 with label492;
        catch java.lang.Throwable from label465 to label466 with label492;
        catch java.lang.Throwable from label473 to label474 with label492;
        catch java.lang.Throwable from label474 to label475 with label492;
        catch java.lang.Throwable from label475 to label476 with label492;
        catch java.lang.Throwable from label476 to label477 with label492;
        catch java.lang.Throwable from label477 to label478 with label492;
        catch java.lang.Throwable from label478 to label479 with label492;
        catch java.lang.Throwable from label481 to label482 with label492;
        catch java.lang.Throwable from label483 to label484 with label492;
        catch java.lang.Throwable from label484 to label485 with label492;
        catch java.lang.Throwable from label485 to label486 with label492;
        catch java.lang.Throwable from label486 to label487 with label492;
        catch java.lang.Throwable from label487 to label488 with label492;
        catch java.lang.Throwable from label496 to label497 with label499;
        catch java.lang.Throwable from label502 to label503 with label504;
    }

    public java.util.List extractAsyncOps(java.lang.String)
    {
        com.android.server.appop.AppOpsService r0;
        int i0;
        android.util.ArrayMap $r3;
        android.util.Pair $r4;
        java.lang.Object $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;
        java.util.List r8;

        r0 := @this: com.android.server.appop.AppOpsService;

        r7 := @parameter0: java.lang.String;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r7);

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        specialinvoke r0.<com.android.server.appop.AppOpsService: android.app.AppOpsManager$RestrictionBypass verifyAndGetBypass(int,java.lang.String,java.lang.String)>(i0, r7, null);

        entermonitor r0;

     label1:
        $r3 = r0.<com.android.server.appop.AppOpsService: android.util.ArrayMap mUnforwardedAsyncNotedOps>;

        $r4 = specialinvoke r0.<com.android.server.appop.AppOpsService: android.util.Pair getAsyncNotedOpsKey(java.lang.String,int)>(r7, i0);

        $r5 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>($r4);

        r8 = (java.util.List) $r5;

        exitmonitor r0;

     label2:
        return r8;

     label3:
        $r6 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void finishOperation(android.os.IBinder, int, int, java.lang.String, java.lang.String)
    {
        com.android.server.appop.AppOpsService r0;
        int i0, i1;
        java.lang.String r1, r2, r3, $r13, $r15, $r23, $r25, $r33, $r35;
        android.util.ArrayMap $r4;
        java.lang.Object $r5;
        boolean $z0;
        java.lang.Throwable $r36, $r37;
        android.os.IBinder r38;
        android.app.AppOpsManager$RestrictionBypass r39;
        com.android.server.appop.AppOpsService$Op r40;
        java.lang.StringBuilder r41, r43, r44;
        com.android.server.appop.AppOpsService$AttributedOp r42;

        r0 := @this: com.android.server.appop.AppOpsService;

        r38 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: java.lang.String;

        r2 := @parameter4: java.lang.String;

        specialinvoke r0.<com.android.server.appop.AppOpsService: void verifyIncomingUid(int)>(i1);

        specialinvoke r0.<com.android.server.appop.AppOpsService: void verifyIncomingOp(int)>(i0);

        r3 = staticinvoke <com.android.server.appop.AppOpsService: java.lang.String resolvePackageName(int,java.lang.String)>(i1, r1);

        if r3 != null goto label01;

        return;

     label01:
        r39 = specialinvoke r0.<com.android.server.appop.AppOpsService: android.app.AppOpsManager$RestrictionBypass verifyAndGetBypass(int,java.lang.String,java.lang.String)>(i1, r1, r2);

     label02:
        entermonitor r0;

     label03:
        r40 = specialinvoke r0.<com.android.server.appop.AppOpsService: com.android.server.appop.AppOpsService$Op getOpLocked(int,int,java.lang.String,java.lang.String,android.app.AppOpsManager$RestrictionBypass,boolean)>(i0, i1, r3, r2, r39, 1);

     label04:
        if r40 != null goto label07;

     label05:
        r41 = new java.lang.StringBuilder;

        specialinvoke r41.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Operation not found: uid=");

        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" pkg=");

        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") op=");

        $r33 = staticinvoke <android.app.AppOpsManager: java.lang.String opToName(int)>(i0);

        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        $r35 = virtualinvoke r41.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("AppOps", $r35);

        exitmonitor r0;

     label06:
        return;

     label07:
        $r4 = r40.<com.android.server.appop.AppOpsService$Op: android.util.ArrayMap mAttributions>;

        $r5 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r2);

        r42 = (com.android.server.appop.AppOpsService$AttributedOp) $r5;

     label08:
        if r42 != null goto label11;

     label09:
        r43 = new java.lang.StringBuilder;

        specialinvoke r43.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attribution not found: uid=");

        virtualinvoke r43.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" pkg=");

        virtualinvoke r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        virtualinvoke r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") op=");

        $r23 = staticinvoke <android.app.AppOpsManager: java.lang.String opToName(int)>(i0);

        virtualinvoke r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = virtualinvoke r43.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("AppOps", $r25);

        exitmonitor r0;

     label10:
        return;

     label11:
        $z0 = virtualinvoke r42.<com.android.server.appop.AppOpsService$AttributedOp: boolean isRunning()>();

        if $z0 == 0 goto label13;

        virtualinvoke r42.<com.android.server.appop.AppOpsService$AttributedOp: void finished(android.os.IBinder)>(r38);

     label12:
        goto label14;

     label13:
        r44 = new java.lang.StringBuilder;

        specialinvoke r44.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Operation not started: uid=");

        virtualinvoke r44.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" pkg=");

        virtualinvoke r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        virtualinvoke r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") op=");

        $r13 = staticinvoke <android.app.AppOpsManager: java.lang.String opToName(int)>(i0);

        virtualinvoke r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke r44.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("AppOps", $r15);

     label14:
        exitmonitor r0;

     label15:
        return;

     label16:
        $r36 := @caughtexception;

     label17:
        exitmonitor r0;

     label18:
        throw $r36;

     label19:
        $r37 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("AppOps", "Cannot finishOperation", $r37);

        return;

        catch java.lang.SecurityException from label01 to label02 with label19;
        catch java.lang.Throwable from label03 to label04 with label16;
        catch java.lang.Throwable from label05 to label06 with label16;
        catch java.lang.Throwable from label07 to label08 with label16;
        catch java.lang.Throwable from label09 to label10 with label16;
        catch java.lang.Throwable from label11 to label12 with label16;
        catch java.lang.Throwable from label13 to label14 with label16;
        catch java.lang.Throwable from label14 to label15 with label16;
        catch java.lang.Throwable from label17 to label18 with label16;
    }

    public android.app.AppOpsManagerInternal$CheckOpsDelegate getAppOpsServiceDelegate()
    {
        com.android.server.appop.AppOpsService r0;
        java.lang.Throwable $r1;
        android.app.AppOpsManagerInternal$CheckOpsDelegate r2;

        r0 := @this: com.android.server.appop.AppOpsService;

        entermonitor r0;

     label1:
        r2 = r0.<com.android.server.appop.AppOpsService: android.app.AppOpsManagerInternal$CheckOpsDelegate mCheckOpsDelegate>;

        exitmonitor r0;

     label2:
        return r2;

     label3:
        $r1 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void getHistoricalOps(int, java.lang.String, java.lang.String, java.util.List, int, long, long, int, android.os.RemoteCallback)
    {
        com.android.server.appop.AppOpsService r0;
        int i0, i1, i4, $i5, $i6, $i7, $i8, $i9, $i10;
        java.lang.String r1, r2;
        long l2, l3;
        android.os.RemoteCallback r3;
        boolean z0, z3;
        java.lang.Object $r5;
        android.app.ActivityManagerInternal $r6;
        android.content.Context $r7;
        android.os.Handler $r8, $r21;
        com.android.server.appop.'-$$Lambda$9PbhNRcJKpFejdnfSDhPa_VHrMY' $r9;
        com.android.server.appop.HistoricalRegistry $r10;
        java.lang.Integer $r11, $r12, $r15;
        java.lang.Long $r13, $r14;
        com.android.internal.util.function.pooled.PooledRunnable $r16, $r17;
        java.lang.String[] $r18, r23;
        java.lang.Object[] $r19;
        java.util.List r22;
        com.android.server.appop._$$Lambda$AppOpsService$JHjaGTUaQHugMX7TLydyaTrbPFw r24;
        com.android.internal.util.function.DecConsumer r25;

        r0 := @this: com.android.server.appop.AppOpsService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r22 := @parameter3: java.util.List;

        i1 := @parameter4: int;

        l2 := @parameter5: long;

        l3 := @parameter6: long;

        i4 := @parameter7: int;

        r3 := @parameter8: android.os.RemoteCallback;

        specialinvoke r0.<com.android.server.appop.AppOpsService: void ensureHistoricalOpRequestIsValid(int,java.lang.String,java.lang.String,java.util.List,int,long,long,int)>(i0, r1, r2, r22, i1, l2, l3, i4);

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r3, "callback cannot be null");

        $r5 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/app/ActivityManagerInternal;");

        $r6 = (android.app.ActivityManagerInternal) $r5;

        $i5 = staticinvoke <android.os.Binder: int getCallingUid()>();

        z0 = virtualinvoke $r6.<android.app.ActivityManagerInternal: boolean isUidCurrentlyInstrumented(int)>($i5);

        $i6 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i7 = staticinvoke <android.os.Process: int myPid()>();

        if $i6 != $i7 goto label1;

        z3 = 1;

        goto label2;

     label1:
        z3 = 0;

     label2:
        if z3 != 0 goto label3;

        if z0 != 0 goto label3;

        $r21 = r0.<com.android.server.appop.AppOpsService: android.os.Handler mHandler>;

        r24 = new com.android.server.appop._$$Lambda$AppOpsService$JHjaGTUaQHugMX7TLydyaTrbPFw;

        specialinvoke r24.<com.android.server.appop._$$Lambda$AppOpsService$JHjaGTUaQHugMX7TLydyaTrbPFw: void <init>(android.os.RemoteCallback)>(r3);

        virtualinvoke $r21.<android.os.Handler: boolean post(java.lang.Runnable)>(r24);

        return;

     label3:
        $r7 = r0.<com.android.server.appop.AppOpsService: android.content.Context mContext>;

        $i8 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i9 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke $r7.<android.content.Context: void enforcePermission(java.lang.String,int,int,java.lang.String)>("android.permission.GET_APP_OPS_STATS", $i8, $i9, "getHistoricalOps");

        if r22 == null goto label4;

        $i10 = interfaceinvoke r22.<java.util.List: int size()>();

        $r18 = newarray (java.lang.String)[$i10];

        $r19 = interfaceinvoke r22.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r18);

        r23 = (java.lang.String[]) $r19;

        goto label5;

     label4:
        r23 = null;

     label5:
        $r8 = r0.<com.android.server.appop.AppOpsService: android.os.Handler mHandler>;

        $r9 = <com.android.server.appop._$$Lambda$9PbhNRcJKpFejdnfSDhPa_VHrMY: com.android.server.appop.'-$$Lambda$9PbhNRcJKpFejdnfSDhPa_VHrMY' INSTANCE>;

        $r10 = r0.<com.android.server.appop.AppOpsService: com.android.server.appop.HistoricalRegistry mHistoricalRegistry>;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r13 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l2);

        $r14 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l3);

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i4);

        r25 = (com.android.internal.util.function.DecConsumer) $r9;

        $r16 = staticinvoke <com.android.internal.util.function.pooled.PooledLambda: com.android.internal.util.function.pooled.PooledRunnable obtainRunnable(com.android.internal.util.function.DecConsumer,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(r25, $r10, $r11, r1, r2, r23, $r12, $r13, $r14, $r15, r3);

        $r17 = interfaceinvoke $r16.<com.android.internal.util.function.pooled.PooledRunnable: com.android.internal.util.function.pooled.PooledRunnable recycleOnUse()>();

        virtualinvoke $r8.<android.os.Handler: boolean post(java.lang.Runnable)>($r17);

        return;
    }

    public void getHistoricalOpsFromDiskRaw(int, java.lang.String, java.lang.String, java.util.List, int, long, long, int, android.os.RemoteCallback)
    {
        com.android.server.appop.AppOpsService r0;
        int i0, i1, i4, $i5, $i6, $i7;
        java.lang.String r1, r2;
        long l2, l3;
        android.os.RemoteCallback r3;
        android.content.Context $r5;
        android.os.Handler $r6;
        com.android.server.appop.'-$$Lambda$ztf_FWUCLkjfRoVMTTWb7ZsjhNk' $r7;
        com.android.server.appop.HistoricalRegistry $r8;
        java.lang.Integer $r9, $r10, $r13;
        java.lang.Long $r11, $r12;
        com.android.internal.util.function.pooled.PooledRunnable $r14, $r15;
        java.lang.String[] $r16, r19;
        java.lang.Object[] $r17;
        java.util.List r18;
        com.android.internal.util.function.DecConsumer r20;

        r0 := @this: com.android.server.appop.AppOpsService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r18 := @parameter3: java.util.List;

        i1 := @parameter4: int;

        l2 := @parameter5: long;

        l3 := @parameter6: long;

        i4 := @parameter7: int;

        r3 := @parameter8: android.os.RemoteCallback;

        specialinvoke r0.<com.android.server.appop.AppOpsService: void ensureHistoricalOpRequestIsValid(int,java.lang.String,java.lang.String,java.util.List,int,long,long,int)>(i0, r1, r2, r18, i1, l2, l3, i4);

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r3, "callback cannot be null");

        $r5 = r0.<com.android.server.appop.AppOpsService: android.content.Context mContext>;

        $i5 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i6 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke $r5.<android.content.Context: void enforcePermission(java.lang.String,int,int,java.lang.String)>("android.permission.MANAGE_APPOPS", $i5, $i6, "getHistoricalOps");

        if r18 == null goto label1;

        $i7 = interfaceinvoke r18.<java.util.List: int size()>();

        $r16 = newarray (java.lang.String)[$i7];

        $r17 = interfaceinvoke r18.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r16);

        r19 = (java.lang.String[]) $r17;

        goto label2;

     label1:
        r19 = null;

     label2:
        $r6 = r0.<com.android.server.appop.AppOpsService: android.os.Handler mHandler>;

        $r7 = <com.android.server.appop._$$Lambda$ztf_FWUCLkjfRoVMTTWb7ZsjhNk: com.android.server.appop.'-$$Lambda$ztf_FWUCLkjfRoVMTTWb7ZsjhNk' INSTANCE>;

        $r8 = r0.<com.android.server.appop.AppOpsService: com.android.server.appop.HistoricalRegistry mHistoricalRegistry>;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r11 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l2);

        $r12 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l3);

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i4);

        r20 = (com.android.internal.util.function.DecConsumer) $r7;

        $r14 = staticinvoke <com.android.internal.util.function.pooled.PooledLambda: com.android.internal.util.function.pooled.PooledRunnable obtainRunnable(com.android.internal.util.function.DecConsumer,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(r20, $r8, $r9, r1, r2, r19, $r10, $r11, $r12, $r13, r3);

        $r15 = interfaceinvoke $r14.<com.android.internal.util.function.pooled.PooledRunnable: com.android.internal.util.function.pooled.PooledRunnable recycleOnUse()>();

        virtualinvoke $r6.<android.os.Handler: boolean post(java.lang.Runnable)>($r15);

        return;
    }

    public java.util.List getOpsForPackage(int, java.lang.String, int[])
    {
        com.android.server.appop.AppOpsService r0;
        int i0, $i1, $i2, $i3;
        java.util.ArrayList r1, r2;
        android.content.Context $r3;
        com.android.server.appop.AppOpsService$UidState $r4;
        java.lang.String $r5, r8, r10;
        java.util.List $r6;
        java.lang.Throwable $r7;
        int[] r9;
        com.android.server.appop.AppOpsService$Ops r11;
        android.app.AppOpsManager$PackageOps r12;

        r0 := @this: com.android.server.appop.AppOpsService;

        i0 := @parameter0: int;

        r8 := @parameter1: java.lang.String;

        r9 := @parameter2: int[];

        $r3 = r0.<com.android.server.appop.AppOpsService: android.content.Context mContext>;

        $i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke $r3.<android.content.Context: void enforcePermission(java.lang.String,int,int,java.lang.String)>("android.permission.GET_APP_OPS_STATS", $i1, $i2, null);

        r10 = staticinvoke <com.android.server.appop.AppOpsService: java.lang.String resolvePackageName(int,java.lang.String)>(i0, r8);

        if r10 != null goto label01;

        $r6 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r6;

     label01:
        entermonitor r0;

     label02:
        r11 = specialinvoke r0.<com.android.server.appop.AppOpsService: com.android.server.appop.AppOpsService$Ops getOpsLocked(int,java.lang.String,java.lang.String,android.app.AppOpsManager$RestrictionBypass,boolean)>(i0, r10, null, null, 0);

     label03:
        if r11 != null goto label06;

     label04:
        exitmonitor r0;

     label05:
        return null;

     label06:
        r1 = specialinvoke r0.<com.android.server.appop.AppOpsService: java.util.ArrayList collectOps(com.android.server.appop.AppOpsService$Ops,int[])>(r11, r9);

     label07:
        if r1 != null goto label10;

     label08:
        exitmonitor r0;

     label09:
        return null;

     label10:
        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

        r12 = new android.app.AppOpsManager$PackageOps;

        $r5 = r11.<com.android.server.appop.AppOpsService$Ops: java.lang.String packageName>;

        $r4 = r11.<com.android.server.appop.AppOpsService$Ops: com.android.server.appop.AppOpsService$UidState uidState>;

        $i3 = $r4.<com.android.server.appop.AppOpsService$UidState: int uid>;

        specialinvoke r12.<android.app.AppOpsManager$PackageOps: void <init>(java.lang.String,int,java.util.List)>($r5, $i3, r1);

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r12);

        exitmonitor r0;

     label11:
        return r2;

     label12:
        $r7 := @caughtexception;

     label13:
        exitmonitor r0;

     label14:
        throw $r7;

        catch java.lang.Throwable from label02 to label03 with label12;
        catch java.lang.Throwable from label04 to label05 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public java.util.List getPackagesForOps(int[])
    {
        com.android.server.appop.AppOpsService r0;
        int i0, i1, $i2, $i3, $i4, i5, i6;
        com.android.server.appop.AppOpsService$Ops r1;
        java.util.ArrayList r2, r14, r16, r18;
        android.content.Context $r3;
        android.util.SparseArray $r4, $r5;
        java.lang.Object $r6, $r9;
        android.util.ArrayMap $r7, $r8, r17;
        boolean $z0;
        com.android.server.appop.AppOpsService$UidState $r10, r15;
        java.lang.String $r11;
        java.lang.Throwable $r12;
        int[] r13;
        android.app.AppOpsManager$PackageOps r19;

        r0 := @this: com.android.server.appop.AppOpsService;

        r13 := @parameter0: int[];

        $r3 = r0.<com.android.server.appop.AppOpsService: android.content.Context mContext>;

        $i2 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke $r3.<android.content.Context: void enforcePermission(java.lang.String,int,int,java.lang.String)>("android.permission.GET_APP_OPS_STATS", $i2, $i3, null);

        r14 = null;

        entermonitor r0;

     label01:
        $r4 = r0.<com.android.server.appop.AppOpsService: android.util.SparseArray mUidStates>;

        i0 = virtualinvoke $r4.<android.util.SparseArray: int size()>();

     label02:
        i5 = 0;

     label03:
        if i5 >= i0 goto label17;

     label04:
        $r5 = r0.<com.android.server.appop.AppOpsService: android.util.SparseArray mUidStates>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object valueAt(int)>(i5);

        r15 = (com.android.server.appop.AppOpsService$UidState) $r6;

     label05:
        r16 = r14;

     label06:
        $r7 = r15.<com.android.server.appop.AppOpsService$UidState: android.util.ArrayMap pkgOps>;

        if $r7 == null goto label16;

        $r8 = r15.<com.android.server.appop.AppOpsService$UidState: android.util.ArrayMap pkgOps>;

        $z0 = virtualinvoke $r8.<android.util.ArrayMap: boolean isEmpty()>();

        if $z0 == 0 goto label08;

     label07:
        r16 = r14;

        goto label16;

     label08:
        r17 = r15.<com.android.server.appop.AppOpsService$UidState: android.util.ArrayMap pkgOps>;

        i1 = virtualinvoke r17.<android.util.ArrayMap: int size()>();

     label09:
        i6 = 0;

     label10:
        r16 = r14;

        if i6 >= i1 goto label16;

     label11:
        $r9 = virtualinvoke r17.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i6);

        r1 = (com.android.server.appop.AppOpsService$Ops) $r9;

        r2 = specialinvoke r0.<com.android.server.appop.AppOpsService: java.util.ArrayList collectOps(com.android.server.appop.AppOpsService$Ops,int[])>(r1, r13);

     label12:
        r18 = r14;

        if r2 == null goto label15;

        r18 = r14;

        if r14 != null goto label14;

     label13:
        r18 = new java.util.ArrayList;

        specialinvoke r18.<java.util.ArrayList: void <init>()>();

     label14:
        r19 = new android.app.AppOpsManager$PackageOps;

        $r11 = r1.<com.android.server.appop.AppOpsService$Ops: java.lang.String packageName>;

        $r10 = r1.<com.android.server.appop.AppOpsService$Ops: com.android.server.appop.AppOpsService$UidState uidState>;

        $i4 = $r10.<com.android.server.appop.AppOpsService$UidState: int uid>;

        specialinvoke r19.<android.app.AppOpsManager$PackageOps: void <init>(java.lang.String,int,java.util.List)>($r11, $i4, r2);

        virtualinvoke r18.<java.util.ArrayList: boolean add(java.lang.Object)>(r19);

     label15:
        i6 = i6 + 1;

        r14 = r18;

        goto label10;

     label16:
        i5 = i5 + 1;

        r14 = r16;

        goto label03;

     label17:
        exitmonitor r0;

     label18:
        return r14;

     label19:
        $r12 := @caughtexception;

     label20:
        exitmonitor r0;

     label21:
        throw $r12;

        catch java.lang.Throwable from label01 to label02 with label19;
        catch java.lang.Throwable from label04 to label05 with label19;
        catch java.lang.Throwable from label06 to label07 with label19;
        catch java.lang.Throwable from label08 to label09 with label19;
        catch java.lang.Throwable from label11 to label12 with label19;
        catch java.lang.Throwable from label13 to label14 with label19;
        catch java.lang.Throwable from label14 to label15 with label19;
        catch java.lang.Throwable from label17 to label18 with label19;
        catch java.lang.Throwable from label20 to label21 with label19;
    }

    public java.util.List getUidOps(int, int[])
    {
        com.android.server.appop.AppOpsService r0;
        int i0, $i1, $i2, $i3;
        com.android.server.appop.AppOpsService$UidState r1;
        java.util.ArrayList r2, r7;
        android.app.AppOpsManager$PackageOps r3;
        android.content.Context $r4;
        java.lang.Throwable $r5;
        int[] r6;

        r0 := @this: com.android.server.appop.AppOpsService;

        i0 := @parameter0: int;

        r6 := @parameter1: int[];

        $r4 = r0.<com.android.server.appop.AppOpsService: android.content.Context mContext>;

        $i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke $r4.<android.content.Context: void enforcePermission(java.lang.String,int,int,java.lang.String)>("android.permission.GET_APP_OPS_STATS", $i1, $i2, null);

        entermonitor r0;

     label01:
        r1 = specialinvoke r0.<com.android.server.appop.AppOpsService: com.android.server.appop.AppOpsService$UidState getUidStateLocked(int,boolean)>(i0, 0);

     label02:
        if r1 != null goto label05;

     label03:
        exitmonitor r0;

     label04:
        return null;

     label05:
        r2 = specialinvoke r0.<com.android.server.appop.AppOpsService: java.util.ArrayList collectUidOps(com.android.server.appop.AppOpsService$UidState,int[])>(r1, r6);

     label06:
        if r2 != null goto label09;

     label07:
        exitmonitor r0;

     label08:
        return null;

     label09:
        r7 = new java.util.ArrayList;

        specialinvoke r7.<java.util.ArrayList: void <init>()>();

        r3 = new android.app.AppOpsManager$PackageOps;

        $i3 = r1.<com.android.server.appop.AppOpsService$UidState: int uid>;

        specialinvoke r3.<android.app.AppOpsManager$PackageOps: void <init>(java.lang.String,int,java.util.List)>(null, $i3, r2);

        virtualinvoke r7.<java.util.ArrayList: boolean add(java.lang.Object)>(r3);

        exitmonitor r0;

     label10:
        return r7;

     label11:
        $r5 := @caughtexception;

     label12:
        exitmonitor r0;

     label13:
        throw $r5;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    public boolean isOperationActive(int, int, java.lang.String)
    {
        com.android.server.appop.AppOpsService r0;
        int i0, i1, $i2, $i3;
        boolean z0;
        java.lang.Object $r1;
        android.content.Context $r2;
        java.lang.Throwable $r3;
        java.lang.String r4, r5;
        com.android.server.appop.AppOpsService$Ops r6;
        com.android.server.appop.AppOpsService$Op r7;

        r0 := @this: com.android.server.appop.AppOpsService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r4 := @parameter2: java.lang.String;

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if $i2 == i1 goto label01;

        $r2 = r0.<com.android.server.appop.AppOpsService: android.content.Context mContext>;

        $i3 = virtualinvoke $r2.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.WATCH_APPOPS");

        if $i3 == 0 goto label01;

        return 0;

     label01:
        specialinvoke r0.<com.android.server.appop.AppOpsService: void verifyIncomingOp(int)>(i0);

        r5 = staticinvoke <com.android.server.appop.AppOpsService: java.lang.String resolvePackageName(int,java.lang.String)>(i1, r4);

        if r5 != null goto label02;

        return 0;

     label02:
        entermonitor r0;

     label03:
        r6 = specialinvoke r0.<com.android.server.appop.AppOpsService: com.android.server.appop.AppOpsService$Ops getOpsLocked(int,java.lang.String,java.lang.String,android.app.AppOpsManager$RestrictionBypass,boolean)>(i1, r5, null, null, 0);

     label04:
        if r6 != null goto label07;

     label05:
        exitmonitor r0;

     label06:
        return 0;

     label07:
        $r1 = virtualinvoke r6.<com.android.server.appop.AppOpsService$Ops: java.lang.Object get(int)>(i0);

        r7 = (com.android.server.appop.AppOpsService$Op) $r1;

     label08:
        if r7 != null goto label11;

     label09:
        exitmonitor r0;

     label10:
        return 0;

     label11:
        z0 = virtualinvoke r7.<com.android.server.appop.AppOpsService$Op: boolean isRunning()>();

        exitmonitor r0;

     label12:
        return z0;

     label13:
        $r3 := @caughtexception;

     label14:
        exitmonitor r0;

     label15:
        throw $r3;

        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
    }

    public void lambda$systemReady$0$AppOpsService(java.lang.String, java.lang.String, int)
    {
        com.android.server.appop.AppOpsService r0;
        java.lang.String r1, r2;
        int i0;
        android.content.Intent $r3, $r7, $r8;
        android.content.BroadcastReceiver $r4;
        android.content.Context $r5;
        android.net.Uri $r6;

        r0 := @this: com.android.server.appop.AppOpsService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r4 = r0.<com.android.server.appop.AppOpsService: android.content.BroadcastReceiver mOnPackageUpdatedReceiver>;

        $r5 = r0.<com.android.server.appop.AppOpsService: android.content.Context mContext>;

        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>(java.lang.String)>(r1);

        $r6 = staticinvoke <android.net.Uri: android.net.Uri fromParts(java.lang.String,java.lang.String,java.lang.String)>("package", r2, null);

        $r7 = virtualinvoke $r3.<android.content.Intent: android.content.Intent setData(android.net.Uri)>($r6);

        $r8 = virtualinvoke $r7.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.intent.extra.UID", i0);

        virtualinvoke $r4.<android.content.BroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>($r5, $r8);

        return;
    }

    public int noteOperation(int, int, java.lang.String, java.lang.String, boolean, java.lang.String, boolean)
    {
        com.android.server.appop.AppOpsService r0;
        int i0, i1, $i2, $i3;
        java.lang.String r1, r2, r6;
        boolean z0, z1;
        android.app.AppOpsManagerInternal$CheckOpsDelegate r3;
        com.android.server.appop._$$Lambda$AppOpsService$p0ZLmKR_KoZGKlw2X3zSLMlh_MU $r4;
        java.lang.Throwable $r5;

        r0 := @this: com.android.server.appop.AppOpsService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r6 := @parameter2: java.lang.String;

        r1 := @parameter3: java.lang.String;

        z0 := @parameter4: boolean;

        r2 := @parameter5: java.lang.String;

        z1 := @parameter6: boolean;

        entermonitor r0;

     label1:
        r3 = r0.<com.android.server.appop.AppOpsService: android.app.AppOpsManagerInternal$CheckOpsDelegate mCheckOpsDelegate>;

        exitmonitor r0;

     label2:
        if r3 != null goto label3;

        $i3 = specialinvoke r0.<com.android.server.appop.AppOpsService: int noteOperationImpl(int,int,java.lang.String,java.lang.String,boolean,java.lang.String,boolean)>(i0, i1, r6, r1, z0, r2, z1);

        return $i3;

     label3:
        $r4 = new com.android.server.appop._$$Lambda$AppOpsService$p0ZLmKR_KoZGKlw2X3zSLMlh_MU;

        specialinvoke $r4.<com.android.server.appop._$$Lambda$AppOpsService$p0ZLmKR_KoZGKlw2X3zSLMlh_MU: void <init>(com.android.server.appop.AppOpsService)>(r0);

        $i2 = interfaceinvoke r3.<android.app.AppOpsManagerInternal$CheckOpsDelegate: int noteOperation(int,int,java.lang.String,java.lang.String,boolean,java.lang.String,boolean,com.android.internal.util.function.HeptFunction)>(i0, i1, r6, r1, z0, r2, z1, $r4);

        return $i2;

     label4:
        $r5 := @caughtexception;

     label5:
        exitmonitor r0;

     label6:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public int noteProxyOperation(int, int, java.lang.String, java.lang.String, int, java.lang.String, java.lang.String, boolean, java.lang.String, boolean)
    {
        com.android.server.appop.AppOpsService r0;
        int i0, i1, i2, $i3, $i4, $i5, i7;
        java.lang.String r1, r2, r3, $r9, r10, r11, r12, r13;
        boolean z0, z1, z2, z3;
        android.content.Context $r5;
        java.lang.StringBuilder $r6;
        byte b6, b8;

        r0 := @this: com.android.server.appop.AppOpsService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r10 := @parameter2: java.lang.String;

        r1 := @parameter3: java.lang.String;

        i2 := @parameter4: int;

        r11 := @parameter5: java.lang.String;

        r2 := @parameter6: java.lang.String;

        z0 := @parameter7: boolean;

        r3 := @parameter8: java.lang.String;

        z1 := @parameter9: boolean;

        specialinvoke r0.<com.android.server.appop.AppOpsService: void verifyIncomingUid(int)>(i2);

        specialinvoke r0.<com.android.server.appop.AppOpsService: void verifyIncomingOp(int)>(i0);

        r12 = staticinvoke <com.android.server.appop.AppOpsService: java.lang.String resolvePackageName(int,java.lang.String)>(i2, r11);

        if r12 != null goto label01;

        return 1;

     label01:
        $r5 = r0.<com.android.server.appop.AppOpsService: android.content.Context mContext>;

        $i3 = virtualinvoke $r5.<android.content.Context: int checkPermission(java.lang.String,int,int)>("android.permission.UPDATE_APP_OPS_STATS", -1, i2);

        if $i3 != 0 goto label02;

        z2 = 1;

        goto label03;

     label02:
        z2 = 0;

     label03:
        if z2 == 0 goto label04;

        b6 = 2;

        goto label05;

     label04:
        b6 = 4;

     label05:
        if z2 != 0 goto label06;

        z3 = 1;

        goto label07;

     label06:
        z3 = 0;

     label07:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("proxy ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        i7 = specialinvoke r0.<com.android.server.appop.AppOpsService: int noteOperationUnchecked(int,int,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,int,boolean,java.lang.String,boolean)>(i0, i2, r12, r2, -1, null, null, b6, z3, $r9, z1);

        if i7 != 0 goto label12;

        $i4 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if $i4 != i1 goto label08;

        goto label12;

     label08:
        r13 = staticinvoke <com.android.server.appop.AppOpsService: java.lang.String resolvePackageName(int,java.lang.String)>(i1, r10);

        if r13 != null goto label09;

        return 1;

     label09:
        if z2 == 0 goto label10;

        b8 = 8;

        goto label11;

     label10:
        b8 = 16;

     label11:
        $i5 = specialinvoke r0.<com.android.server.appop.AppOpsService: int noteOperationUnchecked(int,int,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,int,boolean,java.lang.String,boolean)>(i0, i1, r13, r1, i2, r12, r2, b8, z0, r3, z1);

        return $i5;

     label12:
        return i7;
    }

    public void offsetHistory(long)
    {
        com.android.server.appop.AppOpsService r0;
        long l0;
        android.content.Context $r1;
        com.android.server.appop.HistoricalRegistry $r2;

        r0 := @this: com.android.server.appop.AppOpsService;

        l0 := @parameter0: long;

        $r1 = r0.<com.android.server.appop.AppOpsService: android.content.Context mContext>;

        virtualinvoke $r1.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.MANAGE_APPOPS", "offsetHistory");

        $r2 = r0.<com.android.server.appop.AppOpsService: com.android.server.appop.HistoricalRegistry mHistoricalRegistry>;

        virtualinvoke $r2.<com.android.server.appop.HistoricalRegistry: void offsetHistory(long)>(l0);

        return;
    }

    public void onShellCommand(java.io.FileDescriptor, java.io.FileDescriptor, java.io.FileDescriptor, java.lang.String[], android.os.ShellCallback, android.os.ResultReceiver)
    {
        com.android.server.appop.AppOpsService r0;
        java.io.FileDescriptor r1, r2, r3;
        java.lang.String[] r4;
        android.os.ShellCallback r5;
        android.os.ResultReceiver r6;
        com.android.server.appop.AppOpsService$Shell $r7;

        r0 := @this: com.android.server.appop.AppOpsService;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.FileDescriptor;

        r3 := @parameter2: java.io.FileDescriptor;

        r4 := @parameter3: java.lang.String[];

        r5 := @parameter4: android.os.ShellCallback;

        r6 := @parameter5: android.os.ResultReceiver;

        $r7 = new com.android.server.appop.AppOpsService$Shell;

        specialinvoke $r7.<com.android.server.appop.AppOpsService$Shell: void <init>(com.android.internal.app.IAppOpsService,com.android.server.appop.AppOpsService)>(r0, r0);

        virtualinvoke $r7.<com.android.server.appop.AppOpsService$Shell: int exec(android.os.Binder,java.io.FileDescriptor,java.io.FileDescriptor,java.io.FileDescriptor,java.lang.String[],android.os.ShellCallback,android.os.ResultReceiver)>(r0, r1, r2, r3, r4, r5, r6);

        return;
    }

    public void packageRemoved(int, java.lang.String)
    {
        com.android.server.appop.AppOpsService r0;
        int i0, i1, i2, $i3, i4, i5;
        com.android.server.appop.AppOpsService$AttributedOp r1;
        android.util.SparseArray $r2, $r16;
        java.lang.Object $r3, $r6, $r9, $r12, $r18;
        android.util.ArrayMap $r4, $r7, $r8, $r10, $r11, $r14, $r17;
        com.android.server.appop.HistoricalRegistry $r5;
        android.os.IBinder $r13;
        boolean $z0;
        java.lang.String[] $r15;
        java.lang.Throwable $r19;
        java.lang.String r20;
        com.android.server.appop.AppOpsService$UidState r21;
        com.android.server.appop.AppOpsService$Ops r22;
        com.android.server.appop.AppOpsService$Op r23;

        r0 := @this: com.android.server.appop.AppOpsService;

        i0 := @parameter0: int;

        r20 := @parameter1: java.lang.String;

        entermonitor r0;

     label01:
        $r2 = r0.<com.android.server.appop.AppOpsService: android.util.SparseArray mUidStates>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r21 = (com.android.server.appop.AppOpsService$UidState) $r3;

     label02:
        if r21 != null goto label05;

     label03:
        exitmonitor r0;

     label04:
        return;

     label05:
        r22 = null;

     label06:
        $r4 = r21.<com.android.server.appop.AppOpsService$UidState: android.util.ArrayMap pkgOps>;

        if $r4 == null goto label07;

        $r17 = r21.<com.android.server.appop.AppOpsService$UidState: android.util.ArrayMap pkgOps>;

        $r18 = virtualinvoke $r17.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r20);

        r22 = (com.android.server.appop.AppOpsService$Ops) $r18;

     label07:
        if r22 == null goto label09;

     label08:
        $r14 = r21.<com.android.server.appop.AppOpsService$UidState: android.util.ArrayMap pkgOps>;

        $z0 = virtualinvoke $r14.<android.util.ArrayMap: boolean isEmpty()>();

        if $z0 == 0 goto label09;

        $r15 = staticinvoke <com.android.server.appop.AppOpsService: java.lang.String[] getPackagesForUid(int)>(i0);

        $i3 = lengthof $r15;

        if $i3 > 0 goto label09;

        $r16 = r0.<com.android.server.appop.AppOpsService: android.util.SparseArray mUidStates>;

        virtualinvoke $r16.<android.util.SparseArray: void remove(int)>(i0);

     label09:
        if r22 == null goto label21;

     label10:
        specialinvoke r0.<com.android.server.appop.AppOpsService: void scheduleFastWriteLocked()>();

        i1 = virtualinvoke r22.<com.android.server.appop.AppOpsService$Ops: int size()>();

     label11:
        i4 = 0;

     label12:
        if i4 >= i1 goto label21;

     label13:
        $r6 = virtualinvoke r22.<com.android.server.appop.AppOpsService$Ops: java.lang.Object valueAt(int)>(i4);

        r23 = (com.android.server.appop.AppOpsService$Op) $r6;

        $r7 = r23.<com.android.server.appop.AppOpsService$Op: android.util.ArrayMap mAttributions>;

        i2 = virtualinvoke $r7.<android.util.ArrayMap: int size()>();

     label14:
        i5 = 0;

     label15:
        if i5 >= i2 goto label20;

     label16:
        $r8 = r23.<com.android.server.appop.AppOpsService$Op: android.util.ArrayMap mAttributions>;

        $r9 = virtualinvoke $r8.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i5);

        r1 = (com.android.server.appop.AppOpsService$AttributedOp) $r9;

     label17:
        $r10 = staticinvoke <com.android.server.appop.AppOpsService$AttributedOp: android.util.ArrayMap access$1700(com.android.server.appop.AppOpsService$AttributedOp)>(r1);

        if $r10 == null goto label19;

        $r11 = staticinvoke <com.android.server.appop.AppOpsService$AttributedOp: android.util.ArrayMap access$1700(com.android.server.appop.AppOpsService$AttributedOp)>(r1);

        $r12 = virtualinvoke $r11.<android.util.ArrayMap: java.lang.Object keyAt(int)>(0);

        $r13 = (android.os.IBinder) $r12;

        virtualinvoke r1.<com.android.server.appop.AppOpsService$AttributedOp: void finished(android.os.IBinder)>($r13);

     label18:
        goto label17;

     label19:
        i5 = i5 + 1;

        goto label15;

     label20:
        i4 = i4 + 1;

        goto label12;

     label21:
        $r5 = r0.<com.android.server.appop.AppOpsService: com.android.server.appop.HistoricalRegistry mHistoricalRegistry>;

        virtualinvoke $r5.<com.android.server.appop.HistoricalRegistry: void clearHistory(int,java.lang.String)>(i0, r20);

        exitmonitor r0;

     label22:
        return;

     label23:
        $r19 := @caughtexception;

     label24:
        exitmonitor r0;

     label25:
        throw $r19;

        catch java.lang.Throwable from label01 to label02 with label23;
        catch java.lang.Throwable from label03 to label04 with label23;
        catch java.lang.Throwable from label06 to label07 with label23;
        catch java.lang.Throwable from label08 to label09 with label23;
        catch java.lang.Throwable from label10 to label11 with label23;
        catch java.lang.Throwable from label13 to label14 with label23;
        catch java.lang.Throwable from label16 to label17 with label23;
        catch java.lang.Throwable from label17 to label18 with label23;
        catch java.lang.Throwable from label21 to label22 with label23;
        catch java.lang.Throwable from label24 to label25 with label23;
    }

    public int permissionToOpCode(java.lang.String)
    {
        com.android.server.appop.AppOpsService r0;
        java.lang.String r1;
        int $i0;

        r0 := @this: com.android.server.appop.AppOpsService;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        return -1;

     label1:
        $i0 = staticinvoke <android.app.AppOpsManager: int permissionToOpCode(java.lang.String)>(r1);

        return $i0;
    }

    public void publish()
    {
        com.android.server.appop.AppOpsService r0;
        android.os.IBinder $r1;
        com.android.server.appop.AppOpsService$AppOpsManagerInternalImpl $r2;

        r0 := @this: com.android.server.appop.AppOpsService;

        $r1 = virtualinvoke r0.<com.android.server.appop.AppOpsService: android.os.IBinder asBinder()>();

        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>("appops", $r1);

        $r2 = r0.<com.android.server.appop.AppOpsService: com.android.server.appop.AppOpsService$AppOpsManagerInternalImpl mAppOpsManagerInternal>;

        staticinvoke <com.android.server.LocalServices: void addService(java.lang.Class,java.lang.Object)>(class "Landroid/app/AppOpsManagerInternal;", $r2);

        return;
    }

    void readState()
    {
        com.android.server.appop.AppOpsService r0;
        int i0, $i2, i11, i12, i13, i14, i15, i16, i17, i18, i19, i20;
        android.util.AtomicFile $r1, $r12, r54;
        android.util.SparseArray $r2, $r23, $r25, $r30, $r36, $r42, $r48, $r53;
        java.nio.charset.Charset $r3;
        java.lang.String $r4, $r7, $r9, $r16, $r22, $r29, $r35, $r41, $r47, $r52, r57, r58;
        boolean $z0, $z1;
        java.lang.Throwable $r10, $r17, $r18, $r19, $r24, $r31, $r32, $r37, $r38, $r43, $r44;
        java.io.File $r13;
        java.lang.IndexOutOfBoundsException $r26;
        java.lang.NullPointerException $r49;
        java.io.FileInputStream r55;
        org.xmlpull.v1.XmlPullParser r56;
        java.lang.StringBuilder r59, r64, r66, r68, r70, r72, r74, r79;
        java.lang.IllegalStateException r61;

        r0 := @this: com.android.server.appop.AppOpsService;

        r54 = r0.<com.android.server.appop.AppOpsService: android.util.AtomicFile mFile>;

        entermonitor r54;

     label001:
        entermonitor r0;

     label002:
        $r1 = r0.<com.android.server.appop.AppOpsService: android.util.AtomicFile mFile>;

        r55 = virtualinvoke $r1.<android.util.AtomicFile: java.io.FileInputStream openRead()>();

     label003:
        $r2 = r0.<com.android.server.appop.AppOpsService: android.util.SparseArray mUidStates>;

        virtualinvoke $r2.<android.util.SparseArray: void clear()>();

     label004:
        i11 = -1;

        i12 = -1;

        i13 = -1;

        i14 = -1;

        i15 = -1;

        i16 = -1;

     label005:
        r56 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

     label006:
        i11 = -1;

        i12 = -1;

        i13 = -1;

        i14 = -1;

        i15 = -1;

        i16 = -1;

     label007:
        $r3 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r4 = virtualinvoke $r3.<java.nio.charset.Charset: java.lang.String name()>();

        interfaceinvoke r56.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>(r55, $r4);

     label008:
        i11 = -1;

        i12 = -1;

        i13 = -1;

        i14 = -1;

        i15 = -1;

        i16 = -1;

     label009:
        i17 = interfaceinvoke r56.<org.xmlpull.v1.XmlPullParser: int next()>();

     label010:
        if i17 == 2 goto label011;

        if i17 == 1 goto label011;

        goto label008;

     label011:
        if i17 != 2 goto label052;

        i11 = -1;

        i12 = -1;

        i13 = -1;

        i14 = -1;

        i15 = -1;

        i16 = -1;

     label012:
        r57 = interfaceinvoke r56.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "v");

     label013:
        i18 = -1;

        if r57 == null goto label015;

        i11 = -1;

        i12 = -1;

        i13 = -1;

        i14 = -1;

        i15 = -1;

        i16 = -1;

     label014:
        i18 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r57);

     label015:
        i11 = i18;

        i12 = i18;

        i13 = i18;

        i14 = i18;

        i15 = i18;

        i16 = i18;

     label016:
        i19 = interfaceinvoke r56.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label017:
        i11 = i18;

        i12 = i18;

        i13 = i18;

        i14 = i18;

        i15 = i18;

        i16 = i18;

     label018:
        i0 = interfaceinvoke r56.<org.xmlpull.v1.XmlPullParser: int next()>();

     label019:
        if i0 == 1 goto label047;

        if i0 != 3 goto label021;

        i11 = i18;

        i12 = i18;

        i13 = i18;

        i14 = i18;

        i15 = i18;

        i16 = i18;

     label020:
        $i2 = interfaceinvoke r56.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i2 <= i19 goto label047;

     label021:
        if i0 == 3 goto label017;

        if i0 != 4 goto label022;

        goto label017;

     label022:
        i11 = i18;

        i12 = i18;

        i13 = i18;

        i14 = i18;

        i15 = i18;

        i16 = i18;

     label023:
        r58 = interfaceinvoke r56.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

     label024:
        i11 = i18;

        i12 = i18;

        i13 = i18;

        i14 = i18;

        i15 = i18;

        i16 = i18;

     label025:
        $z0 = virtualinvoke r58.<java.lang.String: boolean equals(java.lang.Object)>("pkg");

        if $z0 == 0 goto label029;

     label026:
        i11 = i18;

        i12 = i18;

        i13 = i18;

        i14 = i18;

        i15 = i18;

        i16 = i18;

     label027:
        specialinvoke r0.<com.android.server.appop.AppOpsService: void readPackage(org.xmlpull.v1.XmlPullParser)>(r56);

     label028:
        goto label046;

     label029:
        i11 = i18;

        i12 = i18;

        i13 = i18;

        i14 = i18;

        i15 = i18;

        i16 = i18;

     label030:
        $z1 = virtualinvoke r58.<java.lang.String: boolean equals(java.lang.Object)>("uid");

        if $z1 == 0 goto label034;

     label031:
        i11 = i18;

        i12 = i18;

        i13 = i18;

        i14 = i18;

        i15 = i18;

        i16 = i18;

     label032:
        specialinvoke r0.<com.android.server.appop.AppOpsService: void readUidOps(org.xmlpull.v1.XmlPullParser)>(r56);

     label033:
        goto label046;

     label034:
        i11 = i18;

        i12 = i18;

        i13 = i18;

        i14 = i18;

        i15 = i18;

        i16 = i18;

     label035:
        r59 = new java.lang.StringBuilder;

     label036:
        i11 = i18;

        i12 = i18;

        i13 = i18;

        i14 = i18;

        i15 = i18;

        i16 = i18;

     label037:
        specialinvoke r59.<java.lang.StringBuilder: void <init>()>();

     label038:
        i11 = i18;

        i12 = i18;

        i13 = i18;

        i14 = i18;

        i15 = i18;

        i16 = i18;

     label039:
        virtualinvoke r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element under <app-ops>: ");

     label040:
        i11 = i18;

        i12 = i18;

        i13 = i18;

        i14 = i18;

        i15 = i18;

        i16 = i18;

     label041:
        $r7 = interfaceinvoke r56.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        virtualinvoke r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

     label042:
        i11 = i18;

        i12 = i18;

        i13 = i18;

        i14 = i18;

        i15 = i18;

        i16 = i18;

     label043:
        $r9 = virtualinvoke r59.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AppOps", $r9);

     label044:
        i11 = i18;

        i12 = i18;

        i13 = i18;

        i14 = i18;

        i15 = i18;

        i16 = i18;

     label045:
        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r56);

     label046:
        goto label017;

     label047:
        goto label048;

     label048:
        i20 = i18;

     label049:
        virtualinvoke r55.<java.io.FileInputStream: void close()>();

     label050:
        goto label095;

     label051:
        $r37 := @caughtexception;

        i18 = i20;

        goto label095;

     label052:
        i11 = -1;

        i12 = -1;

        i13 = -1;

        i14 = -1;

        i15 = -1;

        i16 = -1;

     label053:
        r61 = new java.lang.IllegalStateException;

     label054:
        i11 = -1;

        i12 = -1;

        i13 = -1;

        i14 = -1;

        i15 = -1;

        i16 = -1;

     label055:
        specialinvoke r61.<java.lang.IllegalStateException: void <init>(java.lang.String)>("no start tag found");

     label056:
        i11 = -1;

        i12 = -1;

        i13 = -1;

        i14 = -1;

        i15 = -1;

        i16 = -1;

     label057:
        throw r61;

     label058:
        $r24 := @caughtexception;

        goto label103;

     label059:
        $r26 := @caughtexception;

     label060:
        r64 = new java.lang.StringBuilder;

        specialinvoke r64.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed parsing ");

        virtualinvoke r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r26);

        $r29 = virtualinvoke r64.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AppOps", $r29);

     label061:
        $r30 = r0.<com.android.server.appop.AppOpsService: android.util.SparseArray mUidStates>;

        virtualinvoke $r30.<android.util.SparseArray: void clear()>();

     label062:
        i20 = i11;

     label063:
        virtualinvoke r55.<java.io.FileInputStream: void close()>();

     label064:
        i18 = i11;

        goto label050;

     label065:
        $r38 := @caughtexception;

     label066:
        r66 = new java.lang.StringBuilder;

        specialinvoke r66.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed parsing ");

        virtualinvoke r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r38);

        $r41 = virtualinvoke r66.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AppOps", $r41);

     label067:
        $r42 = r0.<com.android.server.appop.AppOpsService: android.util.SparseArray mUidStates>;

        virtualinvoke $r42.<android.util.SparseArray: void clear()>();

     label068:
        i20 = i12;

     label069:
        virtualinvoke r55.<java.io.FileInputStream: void close()>();

     label070:
        i18 = i12;

        goto label050;

     label071:
        $r19 := @caughtexception;

     label072:
        r68 = new java.lang.StringBuilder;

        specialinvoke r68.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed parsing ");

        virtualinvoke r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19);

        $r22 = virtualinvoke r68.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AppOps", $r22);

     label073:
        $r23 = r0.<com.android.server.appop.AppOpsService: android.util.SparseArray mUidStates>;

        virtualinvoke $r23.<android.util.SparseArray: void clear()>();

     label074:
        i20 = i13;

     label075:
        virtualinvoke r55.<java.io.FileInputStream: void close()>();

     label076:
        i18 = i13;

        goto label050;

     label077:
        $r44 := @caughtexception;

     label078:
        r70 = new java.lang.StringBuilder;

        specialinvoke r70.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed parsing ");

        virtualinvoke r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r44);

        $r47 = virtualinvoke r70.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AppOps", $r47);

     label079:
        $r48 = r0.<com.android.server.appop.AppOpsService: android.util.SparseArray mUidStates>;

        virtualinvoke $r48.<android.util.SparseArray: void clear()>();

     label080:
        i20 = i14;

     label081:
        virtualinvoke r55.<java.io.FileInputStream: void close()>();

     label082:
        i18 = i14;

        goto label050;

     label083:
        $r49 := @caughtexception;

     label084:
        r72 = new java.lang.StringBuilder;

        specialinvoke r72.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed parsing ");

        virtualinvoke r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r49);

        $r52 = virtualinvoke r72.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AppOps", $r52);

     label085:
        $r53 = r0.<com.android.server.appop.AppOpsService: android.util.SparseArray mUidStates>;

        virtualinvoke $r53.<android.util.SparseArray: void clear()>();

     label086:
        i20 = i15;

     label087:
        virtualinvoke r55.<java.io.FileInputStream: void close()>();

     label088:
        i18 = i15;

        goto label050;

     label089:
        $r32 := @caughtexception;

     label090:
        r74 = new java.lang.StringBuilder;

        specialinvoke r74.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed parsing ");

        virtualinvoke r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r32);

        $r35 = virtualinvoke r74.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AppOps", $r35);

     label091:
        $r36 = r0.<com.android.server.appop.AppOpsService: android.util.SparseArray mUidStates>;

        virtualinvoke $r36.<android.util.SparseArray: void clear()>();

     label092:
        i20 = i16;

     label093:
        virtualinvoke r55.<java.io.FileInputStream: void close()>();

     label094:
        i18 = i16;

        goto label050;

     label095:
        exitmonitor r0;

     label096:
        exitmonitor r54;

     label097:
        entermonitor r0;

     label098:
        specialinvoke r0.<com.android.server.appop.AppOpsService: void upgradeLocked(int)>(i18);

        exitmonitor r0;

     label099:
        return;

     label100:
        $r18 := @caughtexception;

     label101:
        exitmonitor r0;

     label102:
        throw $r18;

     label103:
        $r25 = r0.<com.android.server.appop.AppOpsService: android.util.SparseArray mUidStates>;

        virtualinvoke $r25.<android.util.SparseArray: void clear()>();

     label104:
        virtualinvoke r55.<java.io.FileInputStream: void close()>();

     label105:
        goto label107;

     label106:
        $r43 := @caughtexception;

     label107:
        throw $r24;

     label108:
        $r31 := @caughtexception;

        goto label113;

     label109:
        $r10 := @caughtexception;

     label110:
        r79 = new java.lang.StringBuilder;

        specialinvoke r79.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No existing app ops ");

        $r12 = r0.<com.android.server.appop.AppOpsService: android.util.AtomicFile mFile>;

        $r13 = virtualinvoke $r12.<android.util.AtomicFile: java.io.File getBaseFile()>();

        virtualinvoke r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        virtualinvoke r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; starting empty");

        $r16 = virtualinvoke r79.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("AppOps", $r16);

        exitmonitor r0;

     label111:
        exitmonitor r54;

     label112:
        return;

     label113:
        exitmonitor r0;

     label114:
        throw $r31;

     label115:
        $r17 := @caughtexception;

     label116:
        exitmonitor r54;

     label117:
        throw $r17;

        catch java.lang.Throwable from label001 to label002 with label115;
        catch java.io.FileNotFoundException from label002 to label003 with label109;
        catch java.lang.Throwable from label002 to label003 with label108;
        catch java.lang.Throwable from label003 to label004 with label108;
        catch java.lang.IllegalStateException from label005 to label006 with label089;
        catch java.lang.NullPointerException from label005 to label006 with label083;
        catch java.lang.NumberFormatException from label005 to label006 with label077;
        catch org.xmlpull.v1.XmlPullParserException from label005 to label006 with label071;
        catch java.io.IOException from label005 to label006 with label065;
        catch java.lang.IndexOutOfBoundsException from label005 to label006 with label059;
        catch java.lang.Throwable from label005 to label006 with label058;
        catch java.lang.IllegalStateException from label007 to label008 with label089;
        catch java.lang.NullPointerException from label007 to label008 with label083;
        catch java.lang.NumberFormatException from label007 to label008 with label077;
        catch org.xmlpull.v1.XmlPullParserException from label007 to label008 with label071;
        catch java.io.IOException from label007 to label008 with label065;
        catch java.lang.IndexOutOfBoundsException from label007 to label008 with label059;
        catch java.lang.Throwable from label007 to label008 with label058;
        catch java.lang.IllegalStateException from label009 to label010 with label089;
        catch java.lang.NullPointerException from label009 to label010 with label083;
        catch java.lang.NumberFormatException from label009 to label010 with label077;
        catch org.xmlpull.v1.XmlPullParserException from label009 to label010 with label071;
        catch java.io.IOException from label009 to label010 with label065;
        catch java.lang.IndexOutOfBoundsException from label009 to label010 with label059;
        catch java.lang.Throwable from label009 to label010 with label058;
        catch java.lang.IllegalStateException from label012 to label013 with label089;
        catch java.lang.NullPointerException from label012 to label013 with label083;
        catch java.lang.NumberFormatException from label012 to label013 with label077;
        catch org.xmlpull.v1.XmlPullParserException from label012 to label013 with label071;
        catch java.io.IOException from label012 to label013 with label065;
        catch java.lang.IndexOutOfBoundsException from label012 to label013 with label059;
        catch java.lang.Throwable from label012 to label013 with label058;
        catch java.lang.IllegalStateException from label014 to label015 with label089;
        catch java.lang.NullPointerException from label014 to label015 with label083;
        catch java.lang.NumberFormatException from label014 to label015 with label077;
        catch org.xmlpull.v1.XmlPullParserException from label014 to label015 with label071;
        catch java.io.IOException from label014 to label015 with label065;
        catch java.lang.IndexOutOfBoundsException from label014 to label015 with label059;
        catch java.lang.Throwable from label014 to label015 with label058;
        catch java.lang.IllegalStateException from label016 to label017 with label089;
        catch java.lang.NullPointerException from label016 to label017 with label083;
        catch java.lang.NumberFormatException from label016 to label017 with label077;
        catch org.xmlpull.v1.XmlPullParserException from label016 to label017 with label071;
        catch java.io.IOException from label016 to label017 with label065;
        catch java.lang.IndexOutOfBoundsException from label016 to label017 with label059;
        catch java.lang.Throwable from label016 to label017 with label058;
        catch java.lang.IllegalStateException from label018 to label019 with label089;
        catch java.lang.NullPointerException from label018 to label019 with label083;
        catch java.lang.NumberFormatException from label018 to label019 with label077;
        catch org.xmlpull.v1.XmlPullParserException from label018 to label019 with label071;
        catch java.io.IOException from label018 to label019 with label065;
        catch java.lang.IndexOutOfBoundsException from label018 to label019 with label059;
        catch java.lang.Throwable from label018 to label019 with label058;
        catch java.lang.IllegalStateException from label020 to label021 with label089;
        catch java.lang.NullPointerException from label020 to label021 with label083;
        catch java.lang.NumberFormatException from label020 to label021 with label077;
        catch org.xmlpull.v1.XmlPullParserException from label020 to label021 with label071;
        catch java.io.IOException from label020 to label021 with label065;
        catch java.lang.IndexOutOfBoundsException from label020 to label021 with label059;
        catch java.lang.Throwable from label020 to label021 with label058;
        catch java.lang.IllegalStateException from label023 to label024 with label089;
        catch java.lang.NullPointerException from label023 to label024 with label083;
        catch java.lang.NumberFormatException from label023 to label024 with label077;
        catch org.xmlpull.v1.XmlPullParserException from label023 to label024 with label071;
        catch java.io.IOException from label023 to label024 with label065;
        catch java.lang.IndexOutOfBoundsException from label023 to label024 with label059;
        catch java.lang.Throwable from label023 to label024 with label058;
        catch java.lang.IllegalStateException from label025 to label026 with label089;
        catch java.lang.NullPointerException from label025 to label026 with label083;
        catch java.lang.NumberFormatException from label025 to label026 with label077;
        catch org.xmlpull.v1.XmlPullParserException from label025 to label026 with label071;
        catch java.io.IOException from label025 to label026 with label065;
        catch java.lang.IndexOutOfBoundsException from label025 to label026 with label059;
        catch java.lang.Throwable from label025 to label026 with label058;
        catch java.lang.IllegalStateException from label027 to label028 with label089;
        catch java.lang.NullPointerException from label027 to label028 with label083;
        catch java.lang.NumberFormatException from label027 to label028 with label077;
        catch org.xmlpull.v1.XmlPullParserException from label027 to label028 with label071;
        catch java.io.IOException from label027 to label028 with label065;
        catch java.lang.IndexOutOfBoundsException from label027 to label028 with label059;
        catch java.lang.Throwable from label027 to label028 with label058;
        catch java.lang.IllegalStateException from label030 to label031 with label089;
        catch java.lang.NullPointerException from label030 to label031 with label083;
        catch java.lang.NumberFormatException from label030 to label031 with label077;
        catch org.xmlpull.v1.XmlPullParserException from label030 to label031 with label071;
        catch java.io.IOException from label030 to label031 with label065;
        catch java.lang.IndexOutOfBoundsException from label030 to label031 with label059;
        catch java.lang.Throwable from label030 to label031 with label058;
        catch java.lang.IllegalStateException from label032 to label033 with label089;
        catch java.lang.NullPointerException from label032 to label033 with label083;
        catch java.lang.NumberFormatException from label032 to label033 with label077;
        catch org.xmlpull.v1.XmlPullParserException from label032 to label033 with label071;
        catch java.io.IOException from label032 to label033 with label065;
        catch java.lang.IndexOutOfBoundsException from label032 to label033 with label059;
        catch java.lang.Throwable from label032 to label033 with label058;
        catch java.lang.IllegalStateException from label035 to label036 with label089;
        catch java.lang.NullPointerException from label035 to label036 with label083;
        catch java.lang.NumberFormatException from label035 to label036 with label077;
        catch org.xmlpull.v1.XmlPullParserException from label035 to label036 with label071;
        catch java.io.IOException from label035 to label036 with label065;
        catch java.lang.IndexOutOfBoundsException from label035 to label036 with label059;
        catch java.lang.Throwable from label035 to label036 with label058;
        catch java.lang.IllegalStateException from label037 to label038 with label089;
        catch java.lang.NullPointerException from label037 to label038 with label083;
        catch java.lang.NumberFormatException from label037 to label038 with label077;
        catch org.xmlpull.v1.XmlPullParserException from label037 to label038 with label071;
        catch java.io.IOException from label037 to label038 with label065;
        catch java.lang.IndexOutOfBoundsException from label037 to label038 with label059;
        catch java.lang.Throwable from label037 to label038 with label058;
        catch java.lang.IllegalStateException from label039 to label040 with label089;
        catch java.lang.NullPointerException from label039 to label040 with label083;
        catch java.lang.NumberFormatException from label039 to label040 with label077;
        catch org.xmlpull.v1.XmlPullParserException from label039 to label040 with label071;
        catch java.io.IOException from label039 to label040 with label065;
        catch java.lang.IndexOutOfBoundsException from label039 to label040 with label059;
        catch java.lang.Throwable from label039 to label040 with label058;
        catch java.lang.IllegalStateException from label041 to label042 with label089;
        catch java.lang.NullPointerException from label041 to label042 with label083;
        catch java.lang.NumberFormatException from label041 to label042 with label077;
        catch org.xmlpull.v1.XmlPullParserException from label041 to label042 with label071;
        catch java.io.IOException from label041 to label042 with label065;
        catch java.lang.IndexOutOfBoundsException from label041 to label042 with label059;
        catch java.lang.Throwable from label041 to label042 with label058;
        catch java.lang.IllegalStateException from label043 to label044 with label089;
        catch java.lang.NullPointerException from label043 to label044 with label083;
        catch java.lang.NumberFormatException from label043 to label044 with label077;
        catch org.xmlpull.v1.XmlPullParserException from label043 to label044 with label071;
        catch java.io.IOException from label043 to label044 with label065;
        catch java.lang.IndexOutOfBoundsException from label043 to label044 with label059;
        catch java.lang.Throwable from label043 to label044 with label058;
        catch java.lang.IllegalStateException from label045 to label046 with label089;
        catch java.lang.NullPointerException from label045 to label046 with label083;
        catch java.lang.NumberFormatException from label045 to label046 with label077;
        catch org.xmlpull.v1.XmlPullParserException from label045 to label046 with label071;
        catch java.io.IOException from label045 to label046 with label065;
        catch java.lang.IndexOutOfBoundsException from label045 to label046 with label059;
        catch java.lang.Throwable from label045 to label046 with label058;
        catch java.lang.Throwable from label048 to label048 with label108;
        catch java.io.IOException from label049 to label050 with label051;
        catch java.lang.Throwable from label049 to label050 with label108;
        catch java.lang.IllegalStateException from label053 to label054 with label089;
        catch java.lang.NullPointerException from label053 to label054 with label083;
        catch java.lang.NumberFormatException from label053 to label054 with label077;
        catch org.xmlpull.v1.XmlPullParserException from label053 to label054 with label071;
        catch java.io.IOException from label053 to label054 with label065;
        catch java.lang.IndexOutOfBoundsException from label053 to label054 with label059;
        catch java.lang.Throwable from label053 to label054 with label058;
        catch java.lang.IllegalStateException from label055 to label056 with label089;
        catch java.lang.NullPointerException from label055 to label056 with label083;
        catch java.lang.NumberFormatException from label055 to label056 with label077;
        catch org.xmlpull.v1.XmlPullParserException from label055 to label056 with label071;
        catch java.io.IOException from label055 to label056 with label065;
        catch java.lang.IndexOutOfBoundsException from label055 to label056 with label059;
        catch java.lang.Throwable from label055 to label056 with label058;
        catch java.lang.IllegalStateException from label057 to label058 with label089;
        catch java.lang.NullPointerException from label057 to label058 with label083;
        catch java.lang.NumberFormatException from label057 to label058 with label077;
        catch org.xmlpull.v1.XmlPullParserException from label057 to label058 with label071;
        catch java.io.IOException from label057 to label058 with label065;
        catch java.lang.IndexOutOfBoundsException from label057 to label058 with label059;
        catch java.lang.Throwable from label057 to label058 with label058;
        catch java.lang.Throwable from label060 to label061 with label058;
        catch java.lang.Throwable from label061 to label062 with label108;
        catch java.io.IOException from label063 to label064 with label051;
        catch java.lang.Throwable from label063 to label064 with label108;
        catch java.lang.Throwable from label066 to label067 with label058;
        catch java.lang.Throwable from label067 to label068 with label108;
        catch java.io.IOException from label069 to label070 with label051;
        catch java.lang.Throwable from label069 to label070 with label108;
        catch java.lang.Throwable from label072 to label073 with label058;
        catch java.lang.Throwable from label073 to label074 with label108;
        catch java.io.IOException from label075 to label076 with label051;
        catch java.lang.Throwable from label075 to label076 with label108;
        catch java.lang.Throwable from label078 to label079 with label058;
        catch java.lang.Throwable from label079 to label080 with label108;
        catch java.io.IOException from label081 to label082 with label051;
        catch java.lang.Throwable from label081 to label082 with label108;
        catch java.lang.Throwable from label084 to label085 with label058;
        catch java.lang.Throwable from label085 to label086 with label108;
        catch java.io.IOException from label087 to label088 with label051;
        catch java.lang.Throwable from label087 to label088 with label108;
        catch java.lang.Throwable from label090 to label091 with label058;
        catch java.lang.Throwable from label091 to label092 with label108;
        catch java.io.IOException from label093 to label094 with label051;
        catch java.lang.Throwable from label093 to label094 with label108;
        catch java.lang.Throwable from label095 to label096 with label108;
        catch java.lang.Throwable from label096 to label097 with label115;
        catch java.lang.Throwable from label098 to label099 with label100;
        catch java.lang.Throwable from label101 to label102 with label100;
        catch java.lang.Throwable from label103 to label104 with label108;
        catch java.io.IOException from label104 to label105 with label106;
        catch java.lang.Throwable from label104 to label105 with label108;
        catch java.lang.Throwable from label107 to label108 with label108;
        catch java.lang.Throwable from label110 to label111 with label108;
        catch java.lang.Throwable from label111 to label112 with label115;
        catch java.lang.Throwable from label113 to label114 with label108;
        catch java.lang.Throwable from label114 to label115 with label115;
        catch java.lang.Throwable from label116 to label117 with label115;
    }

    public void rebootHistory(long)
    {
        com.android.server.appop.AppOpsService r0;
        long l0;
        android.content.Context $r1, $r5;
        byte $b1, $b2;
        com.android.server.appop.HistoricalRegistry $r2, $r3, $r4, $r6, $r8;
        android.content.ContentResolver $r7;
        boolean z0;

        r0 := @this: com.android.server.appop.AppOpsService;

        l0 := @parameter0: long;

        $r1 = r0.<com.android.server.appop.AppOpsService: android.content.Context mContext>;

        virtualinvoke $r1.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.MANAGE_APPOPS", "rebootHistory");

        $b1 = l0 cmp 0L;

        if $b1 < 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        staticinvoke <com.android.internal.util.Preconditions: void checkArgument(boolean)>(z0);

        $r2 = r0.<com.android.server.appop.AppOpsService: com.android.server.appop.HistoricalRegistry mHistoricalRegistry>;

        virtualinvoke $r2.<com.android.server.appop.HistoricalRegistry: void shutdown()>();

        $b2 = l0 cmp 0L;

        if $b2 <= 0 goto label3;

        staticinvoke <android.os.SystemClock: void sleep(long)>(l0);

     label3:
        $r3 = new com.android.server.appop.HistoricalRegistry;

        $r4 = r0.<com.android.server.appop.AppOpsService: com.android.server.appop.HistoricalRegistry mHistoricalRegistry>;

        specialinvoke $r3.<com.android.server.appop.HistoricalRegistry: void <init>(com.android.server.appop.HistoricalRegistry)>($r4);

        r0.<com.android.server.appop.AppOpsService: com.android.server.appop.HistoricalRegistry mHistoricalRegistry> = $r3;

        $r6 = r0.<com.android.server.appop.AppOpsService: com.android.server.appop.HistoricalRegistry mHistoricalRegistry>;

        $r5 = r0.<com.android.server.appop.AppOpsService: android.content.Context mContext>;

        $r7 = virtualinvoke $r5.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        virtualinvoke $r6.<com.android.server.appop.HistoricalRegistry: void systemReady(android.content.ContentResolver)>($r7);

        $r8 = r0.<com.android.server.appop.AppOpsService: com.android.server.appop.HistoricalRegistry mHistoricalRegistry>;

        virtualinvoke $r8.<com.android.server.appop.HistoricalRegistry: void persistPendingHistory()>();

        return;
    }

    public void reloadNonHistoricalState()
    {
        com.android.server.appop.AppOpsService r0;
        android.content.Context $r1;
        int $i0, $i1;

        r0 := @this: com.android.server.appop.AppOpsService;

        $r1 = r0.<com.android.server.appop.AppOpsService: android.content.Context mContext>;

        $i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke $r1.<android.content.Context: void enforcePermission(java.lang.String,int,int,java.lang.String)>("android.permission.MANAGE_APPOPS", $i0, $i1, "reloadNonHistoricalState");

        virtualinvoke r0.<com.android.server.appop.AppOpsService: void writeState()>();

        virtualinvoke r0.<com.android.server.appop.AppOpsService: void readState()>();

        return;
    }

    public void removeUser(int) throws android.os.RemoteException
    {
        com.android.server.appop.AppOpsService r0;
        int i0, $i1, i2;
        android.util.ArrayMap $r2, $r3;
        java.lang.Object $r4;
        com.android.server.appop.AppOpsService$ClientRestrictionState $r5;
        java.lang.Throwable $r6;

        r0 := @this: com.android.server.appop.AppOpsService;

        i0 := @parameter0: int;

        specialinvoke r0.<com.android.server.appop.AppOpsService: void checkSystemUid(java.lang.String)>("removeUser");

        entermonitor r0;

     label1:
        $r2 = r0.<com.android.server.appop.AppOpsService: android.util.ArrayMap mOpUserRestrictions>;

        $i1 = virtualinvoke $r2.<android.util.ArrayMap: int size()>();

        i2 = $i1 - 1;

     label2:
        if i2 < 0 goto label5;

     label3:
        $r3 = r0.<com.android.server.appop.AppOpsService: android.util.ArrayMap mOpUserRestrictions>;

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i2);

        $r5 = (com.android.server.appop.AppOpsService$ClientRestrictionState) $r4;

        virtualinvoke $r5.<com.android.server.appop.AppOpsService$ClientRestrictionState: void removeUser(int)>(i0);

     label4:
        i2 = i2 + -1;

        goto label2;

     label5:
        specialinvoke r0.<com.android.server.appop.AppOpsService: void removeUidsForUserLocked(int)>(i0);

        exitmonitor r0;

     label6:
        return;

     label7:
        $r6 := @caughtexception;

     label8:
        exitmonitor r0;

     label9:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public com.android.internal.app.MessageSamplingConfig reportRuntimeAppOpAccessMessageAndGetConfig(java.lang.String, android.app.SyncNotedAppOp, java.lang.String)
    {
        com.android.server.appop.AppOpsService r0;
        android.app.SyncNotedAppOp r1;
        java.lang.String r2, $r4, $r7, $r8, r16;
        int i0, $i1, $i2, $i3;
        boolean $z0;
        java.time.Instant $r9, $r11, $r12, $r14;
        java.time.temporal.ChronoUnit $r10, $r13;
        long $l4, $l5;
        java.lang.Throwable $r15;
        com.android.internal.app.MessageSamplingConfig r17, r18;

        r0 := @this: com.android.server.appop.AppOpsService;

        r16 := @parameter0: java.lang.String;

        r1 := @parameter1: android.app.SyncNotedAppOp;

        r2 := @parameter2: java.lang.String;

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r16);

        entermonitor r0;

     label1:
        specialinvoke r0.<com.android.server.appop.AppOpsService: void switchPackageIfBootTimeOrRarelyUsedLocked(java.lang.String)>(r16);

        $r4 = r0.<com.android.server.appop.AppOpsService: java.lang.String mSampledPackage>;

        $z0 = virtualinvoke r16.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label3;

        r17 = new com.android.internal.app.MessageSamplingConfig;

        $r12 = staticinvoke <java.time.Instant: java.time.Instant now()>();

        $r13 = <java.time.temporal.ChronoUnit: java.time.temporal.ChronoUnit HOURS>;

        $r14 = virtualinvoke $r12.<java.time.Instant: java.time.Instant plus(long,java.time.temporal.TemporalUnit)>(1L, $r13);

        $l5 = virtualinvoke $r14.<java.time.Instant: long toEpochMilli()>();

        specialinvoke r17.<com.android.internal.app.MessageSamplingConfig: void <init>(int,int,long)>(-1, 0, $l5);

        exitmonitor r0;

     label2:
        return r17;

     label3:
        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r2);

     label4:
        $r7 = virtualinvoke r1.<android.app.SyncNotedAppOp: java.lang.String getOp()>();

        $i1 = staticinvoke <android.app.AppOpsManager: int strOpToOp(java.lang.String)>($r7);

        $r8 = virtualinvoke r1.<android.app.SyncNotedAppOp: java.lang.String getAttributionTag()>();

        specialinvoke r0.<com.android.server.appop.AppOpsService: void reportRuntimeAppOpAccessMessageInternalLocked(int,java.lang.String,int,java.lang.String,java.lang.String)>(i0, r16, $i1, $r8, r2);

        r18 = new com.android.internal.app.MessageSamplingConfig;

        $i2 = r0.<com.android.server.appop.AppOpsService: int mSampledAppOpCode>;

        $i3 = r0.<com.android.server.appop.AppOpsService: int mAcceptableLeftDistance>;

        $r9 = staticinvoke <java.time.Instant: java.time.Instant now()>();

        $r10 = <java.time.temporal.ChronoUnit: java.time.temporal.ChronoUnit HOURS>;

        $r11 = virtualinvoke $r9.<java.time.Instant: java.time.Instant plus(long,java.time.temporal.TemporalUnit)>(1L, $r10);

        $l4 = virtualinvoke $r11.<java.time.Instant: long toEpochMilli()>();

        specialinvoke r18.<com.android.internal.app.MessageSamplingConfig: void <init>(int,int,long)>($i2, $i3, $l4);

        exitmonitor r0;

     label5:
        return r18;

     label6:
        $r15 := @caughtexception;

     label7:
        exitmonitor r0;

     label8:
        throw $r15;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public void resetAllModes(int, java.lang.String)
    {
        com.android.server.appop.AppOpsService r0;
        com.android.server.appop.AppOpsService$UidState r1, $r25;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, i28, i29, i30, i31, i32, i33, i34, i39, i48, i53, i54, i59, i68, i74, i76, i78, i79, i80;
        boolean z0, $z1, $z3, $z4, $z5, $z6, z7, z8, z9, $z10;
        android.util.SparseArray r2, $r16, $r19, $r20, $r32, $r58;
        java.lang.Object $r3, $r6, $r7, $r8, $r9, $r17, $r21, $r22, $r23, $r24, $r26, $r29, $r33, $r35;
        java.lang.String $r4, $r14, r53, r83, r104;
        java.util.Set $r5, $r18;
        android.os.Handler $r10;
        com.android.server.appop.'-$$Lambda$AppOpsService$FYLTtxqrHmv8Y5UdZ9ybXKsSJhs' $r11;
        java.lang.Integer $r12, $r13;
        android.os.Message $r15;
        android.util.ArraySet $r27, $r30, $r36, r84;
        android.util.ArrayMap $r28, $r31, $r34, r91, r95;
        android.content.pm.IPackageManager $r37;
        java.lang.Throwable $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r48, $r49, $r50, $r51, $r52, r76;
        android.os.RemoteException $r47;
        java.util.ArrayList r57, r65, r88, r93, r98, r134, r137;
        java.util.HashMap r59, r66, r86, r119, r121;
        android.util.SparseIntArray r60;
        java.lang.String[] r79;
        java.util.Iterator r97, r131;
        java.util.Map$Entry r102, r132;
        com.android.server.appop.AppOpsService$Ops r107;
        com.android.server.appop.AppOpsService$Op r111;
        com.android.server.appop.AppOpsService$ModeCallback r133;
        com.android.server.appop.AppOpsService$ChangeRec r135, r136;
        com.android.internal.util.function.QuintConsumer r138;

        r0 := @this: com.android.server.appop.AppOpsService;

        i28 := @parameter0: int;

        r53 := @parameter1: java.lang.String;

        i29 = staticinvoke <android.os.Binder: int getCallingPid()>();

        i30 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i31 = staticinvoke <android.app.ActivityManager: int handleIncomingUser(int,int,int,boolean,boolean,java.lang.String,java.lang.String)>(i29, i30, i28, 1, 1, "resetAllModes", null);

        if r53 == null goto label004;

     label001:
        $r37 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        i32 = interfaceinvoke $r37.<android.content.pm.IPackageManager: int getPackageUid(java.lang.String,int,int)>(r53, 8192, i31);

     label002:
        goto label005;

     label003:
        $r47 := @caughtexception;

     label004:
        i32 = -1;

     label005:
        specialinvoke r0.<com.android.server.appop.AppOpsService: void enforceManageAppOpsModes(int,int,int)>(i29, i30, i32);

        r137 = new java.util.ArrayList;

        specialinvoke r137.<java.util.ArrayList: void <init>()>();

        r57 = r137;

        entermonitor r0;

        z7 = 0;

     label006:
        $r58 = r0.<com.android.server.appop.AppOpsService: android.util.SparseArray mUidStates>;

        i33 = virtualinvoke $r58.<android.util.SparseArray: int size()>();

     label007:
        i34 = i33 - 1;

        r59 = null;

     label008:
        if i34 < 0 goto label090;

     label009:
        $r16 = r0.<com.android.server.appop.AppOpsService: android.util.SparseArray mUidStates>;

        $r17 = virtualinvoke $r16.<android.util.SparseArray: java.lang.Object valueAt(int)>(i34);

        r1 = (com.android.server.appop.AppOpsService$UidState) $r17;

        r60 = r1.<com.android.server.appop.AppOpsService$UidState: android.util.SparseIntArray opModes>;

     label010:
        if r60 == null goto label041;

     label011:
        $i23 = r1.<com.android.server.appop.AppOpsService$UidState: int uid>;

        if $i23 == i32 goto label014;

     label012:
        if i32 != -1 goto label013;

        goto label014;

     label013:
        goto label041;

     label014:
        $i24 = virtualinvoke r60.<android.util.SparseIntArray: int size()>();

        i39 = $i24 - 1;

     label015:
        r65 = r57;

        r66 = r59;

     label016:
        if i39 < 0 goto label039;

     label017:
        i0 = virtualinvoke r60.<android.util.SparseIntArray: int keyAt(int)>(i39);

     label018:
        $z6 = staticinvoke <android.app.AppOpsManager: boolean opAllowsReset(int)>(i0);

        if $z6 == 0 goto label038;

     label019:
        virtualinvoke r60.<android.util.SparseIntArray: void removeAt(int)>(i39);

     label020:
        i48 = virtualinvoke r60.<android.util.SparseIntArray: int size()>();

     label021:
        if i48 > 0 goto label025;

     label022:
        r1.<com.android.server.appop.AppOpsService$UidState: android.util.SparseIntArray opModes> = null;

     label023:
        goto label025;

     label024:
        $r51 := @caughtexception;

        r76 = $r51;

        goto label105;

     label025:
        $i25 = r1.<com.android.server.appop.AppOpsService$UidState: int uid>;

        r79 = staticinvoke <com.android.server.appop.AppOpsService: java.lang.String[] getPackagesForUid(int)>($i25);

     label026:
        i53 = lengthof r79;

     label027:
        i54 = 0;

     label028:
        if i54 >= i53 goto label037;

        r83 = r79[i54];

     label029:
        i1 = r1.<com.android.server.appop.AppOpsService$UidState: int uid>;

        $r32 = r0.<com.android.server.appop.AppOpsService: android.util.SparseArray mOpModeWatchers>;

        $r33 = virtualinvoke $r32.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r84 = (android.util.ArraySet) $r33;

     label030:
        r86 = staticinvoke <com.android.server.appop.AppOpsService: java.util.HashMap addCallbacks(java.util.HashMap,int,int,java.lang.String,android.util.ArraySet)>(r66, i0, i1, r83, r84);

     label031:
        $i26 = r1.<com.android.server.appop.AppOpsService$UidState: int uid>;

        $r34 = r0.<com.android.server.appop.AppOpsService: android.util.ArrayMap mPackageModeWatchers>;

        $r35 = virtualinvoke $r34.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r83);

        $r36 = (android.util.ArraySet) $r35;

        r66 = staticinvoke <com.android.server.appop.AppOpsService: java.util.HashMap addCallbacks(java.util.HashMap,int,int,java.lang.String,android.util.ArraySet)>(r86, i0, $i26, r83, $r36);

     label032:
        $i27 = r1.<com.android.server.appop.AppOpsService$UidState: int uid>;

        r65 = staticinvoke <com.android.server.appop.AppOpsService: java.util.ArrayList addChange(java.util.ArrayList,int,int,java.lang.String)>(r65, i0, $i27, r83);

     label033:
        i54 = i54 + 1;

        goto label028;

     label034:
        $r38 := @caughtexception;

        r76 = $r38;

        goto label105;

     label035:
        $r45 := @caughtexception;

        r76 = $r45;

        goto label105;

     label036:
        $r46 := @caughtexception;

        r76 = $r46;

        goto label105;

     label037:
        goto label038;

     label038:
        i39 = i39 + -1;

        goto label016;

     label039:
        r88 = r65;

        goto label042;

     label040:
        $r43 := @caughtexception;

        r76 = $r43;

        goto label105;

     label041:
        r66 = r59;

        r88 = r57;

     label042:
        r91 = r1.<com.android.server.appop.AppOpsService$UidState: android.util.ArrayMap pkgOps>;

     label043:
        if r91 != null goto label044;

        goto label047;

     label044:
        if i31 == -1 goto label049;

     label045:
        $i22 = r1.<com.android.server.appop.AppOpsService$UidState: int uid>;

        i59 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i22);

     label046:
        if i31 == i59 goto label049;

     label047:
        z8 = z7;

        r93 = r88;

        goto label086;

     label048:
        $r44 := @caughtexception;

        r76 = $r44;

        goto label105;

     label049:
        r95 = r1.<com.android.server.appop.AppOpsService$UidState: android.util.ArrayMap pkgOps>;

     label050:
        $r18 = interfaceinvoke r95.<java.util.Map: java.util.Set entrySet()>();

        r97 = interfaceinvoke $r18.<java.util.Set: java.util.Iterator iterator()>();

     label051:
        z9 = 0;

        r98 = r88;

        z8 = z7;

     label052:
        $z10 = interfaceinvoke r97.<java.util.Iterator: boolean hasNext()>();

        if $z10 == 0 goto label081;

     label053:
        $r21 = interfaceinvoke r97.<java.util.Iterator: java.lang.Object next()>();

        r102 = (java.util.Map$Entry) $r21;

     label054:
        $r22 = interfaceinvoke r102.<java.util.Map$Entry: java.lang.Object getKey()>();

        r104 = (java.lang.String) $r22;

     label055:
        if r53 == null goto label058;

     label056:
        z0 = virtualinvoke r53.<java.lang.String: boolean equals(java.lang.Object)>(r104);

     label057:
        if z0 != 0 goto label058;

        goto label052;

     label058:
        $r23 = interfaceinvoke r102.<java.util.Map$Entry: java.lang.Object getValue()>();

        r107 = (com.android.server.appop.AppOpsService$Ops) $r23;

     label059:
        $i10 = virtualinvoke r107.<com.android.server.appop.AppOpsService$Ops: int size()>();

        i68 = $i10 - 1;

     label060:
        if i68 < 0 goto label078;

     label061:
        $r24 = virtualinvoke r107.<com.android.server.appop.AppOpsService$Ops: java.lang.Object valueAt(int)>(i68);

        r111 = (com.android.server.appop.AppOpsService$Op) $r24;

     label062:
        $i12 = r111.<com.android.server.appop.AppOpsService$Op: int op>;

        $z4 = staticinvoke <android.app.AppOpsManager: boolean opAllowsReset(int)>($i12);

        if $z4 == 0 goto label077;

     label063:
        $i13 = staticinvoke <com.android.server.appop.AppOpsService$Op: int access$300(com.android.server.appop.AppOpsService$Op)>(r111);

        $i14 = r111.<com.android.server.appop.AppOpsService$Op: int op>;

        $i15 = staticinvoke <android.app.AppOpsManager: int opToDefaultMode(int)>($i14);

        if $i13 == $i15 goto label076;

     label064:
        $i16 = r111.<com.android.server.appop.AppOpsService$Op: int op>;

        $i17 = staticinvoke <android.app.AppOpsManager: int opToDefaultMode(int)>($i16);

        staticinvoke <com.android.server.appop.AppOpsService$Op: int access$302(com.android.server.appop.AppOpsService$Op,int)>(r111, $i17);

     label065:
        $r25 = r111.<com.android.server.appop.AppOpsService$Op: com.android.server.appop.AppOpsService$UidState uidState>;

        i74 = $r25.<com.android.server.appop.AppOpsService$UidState: int uid>;

     label066:
        i76 = r111.<com.android.server.appop.AppOpsService$Op: int op>;

     label067:
        r2 = r0.<com.android.server.appop.AppOpsService: android.util.SparseArray mOpModeWatchers>;

     label068:
        $i19 = r111.<com.android.server.appop.AppOpsService$Op: int op>;

        $r26 = virtualinvoke r2.<android.util.SparseArray: java.lang.Object get(int)>($i19);

        $r27 = (android.util.ArraySet) $r26;

        r119 = staticinvoke <com.android.server.appop.AppOpsService: java.util.HashMap addCallbacks(java.util.HashMap,int,int,java.lang.String,android.util.ArraySet)>(r66, i76, i74, r104, $r27);

     label069:
        $i20 = r111.<com.android.server.appop.AppOpsService$Op: int op>;

        $r28 = r0.<com.android.server.appop.AppOpsService: android.util.ArrayMap mPackageModeWatchers>;

        $r29 = virtualinvoke $r28.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r104);

        $r30 = (android.util.ArraySet) $r29;

        r121 = staticinvoke <com.android.server.appop.AppOpsService: java.util.HashMap addCallbacks(java.util.HashMap,int,int,java.lang.String,android.util.ArraySet)>(r119, $i20, i74, r104, $r30);

     label070:
        $i21 = r111.<com.android.server.appop.AppOpsService$Op: int op>;

        r98 = staticinvoke <com.android.server.appop.AppOpsService: java.util.ArrayList addChange(java.util.ArrayList,int,int,java.lang.String)>(r98, $i21, i74, r104);

     label071:
        virtualinvoke r111.<com.android.server.appop.AppOpsService$Op: void removeAttributionsWithNoTime()>();

     label072:
        $r31 = r111.<com.android.server.appop.AppOpsService$Op: android.util.ArrayMap mAttributions>;

        $z5 = virtualinvoke $r31.<android.util.ArrayMap: boolean isEmpty()>();

        if $z5 == 0 goto label074;

     label073:
        virtualinvoke r107.<com.android.server.appop.AppOpsService$Ops: void removeAt(int)>(i68);

     label074:
        r66 = r121;

        z8 = 1;

        z9 = 1;

        goto label077;

     label075:
        $r49 := @caughtexception;

        r76 = $r49;

        goto label105;

     label076:
        goto label077;

     label077:
        i68 = i68 + -1;

        goto label060;

     label078:
        $i11 = virtualinvoke r107.<com.android.server.appop.AppOpsService$Ops: int size()>();

        if $i11 != 0 goto label080;

     label079:
        interfaceinvoke r97.<java.util.Iterator: void remove()>();

     label080:
        goto label052;

     label081:
        $z3 = virtualinvoke r1.<com.android.server.appop.AppOpsService$UidState: boolean isDefault()>();

        if $z3 == 0 goto label083;

     label082:
        $r20 = r0.<com.android.server.appop.AppOpsService: android.util.SparseArray mUidStates>;

        $i9 = r1.<com.android.server.appop.AppOpsService$UidState: int uid>;

        virtualinvoke $r20.<android.util.SparseArray: void remove(int)>($i9);

     label083:
        if z9 == 0 goto label085;

     label084:
        $r19 = r0.<com.android.server.appop.AppOpsService: android.util.SparseArray mOpModeWatchers>;

        virtualinvoke r1.<com.android.server.appop.AppOpsService$UidState: void evalForegroundOps(android.util.SparseArray)>($r19);

     label085:
        r93 = r98;

     label086:
        i34 = i34 + -1;

        z7 = z8;

        r59 = r66;

        r57 = r93;

        goto label008;

     label087:
        $r40 := @caughtexception;

        r76 = $r40;

        goto label105;

     label088:
        $r48 := @caughtexception;

        r76 = $r48;

        goto label105;

     label089:
        $r50 := @caughtexception;

        r76 = $r50;

        goto label105;

     label090:
        if z7 == 0 goto label094;

     label091:
        specialinvoke r0.<com.android.server.appop.AppOpsService: void scheduleFastWriteLocked()>();

     label092:
        goto label094;

     label093:
        $r42 := @caughtexception;

        r76 = $r42;

        goto label105;

     label094:
        exitmonitor r0;

     label095:
        if r59 == null goto label100;

        $r5 = virtualinvoke r59.<java.util.HashMap: java.util.Set entrySet()>();

        r131 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label096:
        $z1 = interfaceinvoke r131.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label099;

        $r6 = interfaceinvoke r131.<java.util.Iterator: java.lang.Object next()>();

        r132 = (java.util.Map$Entry) $r6;

        $r7 = interfaceinvoke r132.<java.util.Map$Entry: java.lang.Object getKey()>();

        r133 = (com.android.server.appop.AppOpsService$ModeCallback) $r7;

        $r8 = interfaceinvoke r132.<java.util.Map$Entry: java.lang.Object getValue()>();

        r134 = (java.util.ArrayList) $r8;

        i78 = 0;

     label097:
        $i6 = virtualinvoke r134.<java.util.ArrayList: int size()>();

        if i78 >= $i6 goto label098;

        $r9 = virtualinvoke r134.<java.util.ArrayList: java.lang.Object get(int)>(i78);

        r135 = (com.android.server.appop.AppOpsService$ChangeRec) $r9;

        $r10 = r0.<com.android.server.appop.AppOpsService: android.os.Handler mHandler>;

        $r11 = <com.android.server.appop._$$Lambda$AppOpsService$FYLTtxqrHmv8Y5UdZ9ybXKsSJhs: com.android.server.appop.'-$$Lambda$AppOpsService$FYLTtxqrHmv8Y5UdZ9ybXKsSJhs' INSTANCE>;

        $i7 = r135.<com.android.server.appop.AppOpsService$ChangeRec: int op>;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);

        $i8 = r135.<com.android.server.appop.AppOpsService$ChangeRec: int uid>;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i8);

        $r14 = r135.<com.android.server.appop.AppOpsService$ChangeRec: java.lang.String pkg>;

        r138 = (com.android.internal.util.function.QuintConsumer) $r11;

        $r15 = staticinvoke <com.android.internal.util.function.pooled.PooledLambda: android.os.Message obtainMessage(com.android.internal.util.function.QuintConsumer,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(r138, r0, r133, $r12, $r13, $r14);

        virtualinvoke $r10.<android.os.Handler: boolean sendMessage(android.os.Message)>($r15);

        i78 = i78 + 1;

        goto label097;

     label098:
        goto label096;

     label099:
        goto label100;

     label100:
        if r57 == null goto label102;

        i79 = virtualinvoke r57.<java.util.ArrayList: int size()>();

        i80 = 0;

     label101:
        if i80 >= i79 goto label102;

        $r3 = virtualinvoke r57.<java.util.ArrayList: java.lang.Object get(int)>(i80);

        r136 = (com.android.server.appop.AppOpsService$ChangeRec) $r3;

        $i3 = r136.<com.android.server.appop.AppOpsService$ChangeRec: int op>;

        $i4 = r136.<com.android.server.appop.AppOpsService$ChangeRec: int uid>;

        $r4 = r136.<com.android.server.appop.AppOpsService$ChangeRec: java.lang.String pkg>;

        $i2 = r136.<com.android.server.appop.AppOpsService$ChangeRec: int op>;

        $i5 = staticinvoke <android.app.AppOpsManager: int opToDefaultMode(int)>($i2);

        specialinvoke r0.<com.android.server.appop.AppOpsService: void notifyOpChangedSync(int,int,java.lang.String,int)>($i3, $i4, $r4, $i5);

        i80 = i80 + 1;

        goto label101;

     label102:
        return;

     label103:
        $r52 := @caughtexception;

        r76 = $r52;

        goto label105;

     label104:
        $r39 := @caughtexception;

        r76 = $r39;

     label105:
        exitmonitor r0;

     label106:
        throw r76;

     label107:
        $r41 := @caughtexception;

        r76 = $r41;

        goto label105;

        catch android.os.RemoteException from label001 to label002 with label003;
        catch java.lang.Throwable from label006 to label007 with label104;
        catch java.lang.Throwable from label009 to label010 with label089;
        catch java.lang.Throwable from label011 to label012 with label040;
        catch java.lang.Throwable from label014 to label015 with label040;
        catch java.lang.Throwable from label017 to label018 with label040;
        catch java.lang.Throwable from label018 to label019 with label040;
        catch java.lang.Throwable from label019 to label020 with label040;
        catch java.lang.Throwable from label020 to label021 with label040;
        catch java.lang.Throwable from label022 to label023 with label024;
        catch java.lang.Throwable from label025 to label026 with label040;
        catch java.lang.Throwable from label026 to label027 with label040;
        catch java.lang.Throwable from label029 to label030 with label036;
        catch java.lang.Throwable from label030 to label031 with label035;
        catch java.lang.Throwable from label031 to label032 with label034;
        catch java.lang.Throwable from label032 to label033 with label035;
        catch java.lang.Throwable from label042 to label043 with label088;
        catch java.lang.Throwable from label045 to label046 with label048;
        catch java.lang.Throwable from label049 to label050 with label088;
        catch java.lang.Throwable from label050 to label051 with label088;
        catch java.lang.Throwable from label052 to label053 with label088;
        catch java.lang.Throwable from label053 to label054 with label088;
        catch java.lang.Throwable from label054 to label055 with label088;
        catch java.lang.Throwable from label056 to label057 with label048;
        catch java.lang.Throwable from label058 to label059 with label088;
        catch java.lang.Throwable from label059 to label060 with label088;
        catch java.lang.Throwable from label061 to label062 with label088;
        catch java.lang.Throwable from label062 to label063 with label088;
        catch java.lang.Throwable from label063 to label064 with label088;
        catch java.lang.Throwable from label064 to label065 with label088;
        catch java.lang.Throwable from label065 to label066 with label088;
        catch java.lang.Throwable from label066 to label067 with label088;
        catch java.lang.Throwable from label067 to label068 with label088;
        catch java.lang.Throwable from label068 to label069 with label087;
        catch java.lang.Throwable from label069 to label070 with label075;
        catch java.lang.Throwable from label070 to label071 with label075;
        catch java.lang.Throwable from label071 to label072 with label075;
        catch java.lang.Throwable from label072 to label073 with label075;
        catch java.lang.Throwable from label073 to label074 with label075;
        catch java.lang.Throwable from label078 to label079 with label087;
        catch java.lang.Throwable from label079 to label080 with label087;
        catch java.lang.Throwable from label081 to label082 with label087;
        catch java.lang.Throwable from label082 to label083 with label087;
        catch java.lang.Throwable from label084 to label085 with label087;
        catch java.lang.Throwable from label091 to label092 with label093;
        catch java.lang.Throwable from label094 to label095 with label103;
        catch java.lang.Throwable from label105 to label106 with label107;
    }

    public void resetHistoryParameters()
    {
        com.android.server.appop.AppOpsService r0;
        android.content.Context $r1;
        com.android.server.appop.HistoricalRegistry $r2;

        r0 := @this: com.android.server.appop.AppOpsService;

        $r1 = r0.<com.android.server.appop.AppOpsService: android.content.Context mContext>;

        virtualinvoke $r1.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.MANAGE_APPOPS", "resetHistoryParameters");

        $r2 = r0.<com.android.server.appop.AppOpsService: com.android.server.appop.HistoricalRegistry mHistoricalRegistry>;

        virtualinvoke $r2.<com.android.server.appop.HistoricalRegistry: void resetHistoryParameters()>();

        return;
    }

    public void setAppOpsServiceDelegate(android.app.AppOpsManagerInternal$CheckOpsDelegate)
    {
        com.android.server.appop.AppOpsService r0;
        java.lang.Throwable $r1;
        android.app.AppOpsManagerInternal$CheckOpsDelegate r2;

        r0 := @this: com.android.server.appop.AppOpsService;

        r2 := @parameter0: android.app.AppOpsManagerInternal$CheckOpsDelegate;

        entermonitor r0;

     label1:
        r0.<com.android.server.appop.AppOpsService: android.app.AppOpsManagerInternal$CheckOpsDelegate mCheckOpsDelegate> = r2;

        exitmonitor r0;

     label2:
        return;

     label3:
        $r1 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void setAudioRestriction(int, int, int, int, java.lang.String[])
    {
        com.android.server.appop.AppOpsService r0;
        int i0, i1, i2, i3, $i4, $i5;
        java.lang.String[] r1;
        com.android.server.appop.AudioRestrictionManager $r2;
        android.os.Handler $r3;
        com.android.server.appop.'-$$Lambda$AppOpsService$GUeKjlbzT65s86vaxy5gvOajuhw' $r4;
        java.lang.Integer $r5, $r6;
        android.os.Message $r7;
        com.android.internal.util.function.TriConsumer r8;

        r0 := @this: com.android.server.appop.AppOpsService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r1 := @parameter4: java.lang.String[];

        $i4 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i5 = staticinvoke <android.os.Binder: int getCallingUid()>();

        specialinvoke r0.<com.android.server.appop.AppOpsService: void enforceManageAppOpsModes(int,int,int)>($i4, $i5, i2);

        specialinvoke r0.<com.android.server.appop.AppOpsService: void verifyIncomingUid(int)>(i2);

        specialinvoke r0.<com.android.server.appop.AppOpsService: void verifyIncomingOp(int)>(i0);

        $r2 = r0.<com.android.server.appop.AppOpsService: com.android.server.appop.AudioRestrictionManager mAudioRestrictionManager>;

        virtualinvoke $r2.<com.android.server.appop.AudioRestrictionManager: void setZenModeAudioRestriction(int,int,int,int,java.lang.String[])>(i0, i1, i2, i3, r1);

        $r3 = r0.<com.android.server.appop.AppOpsService: android.os.Handler mHandler>;

        $r4 = <com.android.server.appop._$$Lambda$AppOpsService$GUeKjlbzT65s86vaxy5gvOajuhw: com.android.server.appop.'-$$Lambda$AppOpsService$GUeKjlbzT65s86vaxy5gvOajuhw' INSTANCE>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-2);

        r8 = (com.android.internal.util.function.TriConsumer) $r4;

        $r7 = staticinvoke <com.android.internal.util.function.pooled.PooledLambda: android.os.Message obtainMessage(com.android.internal.util.function.TriConsumer,java.lang.Object,java.lang.Object,java.lang.Object)>(r8, r0, $r5, $r6);

        virtualinvoke $r3.<android.os.Handler: boolean sendMessage(android.os.Message)>($r7);

        return;
    }

    public void setCameraAudioRestriction(int)
    {
        com.android.server.appop.AppOpsService r0;
        int i0, $i1, $i2;
        android.os.Handler r1, $r7;
        com.android.server.appop.'-$$Lambda$AppOpsService$GUeKjlbzT65s86vaxy5gvOajuhw' r2, $r8;
        java.lang.Integer r3, $r5, $r9;
        com.android.server.appop.AudioRestrictionManager $r4;
        android.os.Message $r6, $r10;
        com.android.internal.util.function.TriConsumer r11, r12;

        r0 := @this: com.android.server.appop.AppOpsService;

        i0 := @parameter0: int;

        $i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        specialinvoke r0.<com.android.server.appop.AppOpsService: void enforceManageAppOpsModes(int,int,int)>($i1, $i2, -1);

        $r4 = r0.<com.android.server.appop.AppOpsService: com.android.server.appop.AudioRestrictionManager mAudioRestrictionManager>;

        virtualinvoke $r4.<com.android.server.appop.AudioRestrictionManager: void setCameraAudioRestriction(int)>(i0);

        r1 = r0.<com.android.server.appop.AppOpsService: android.os.Handler mHandler>;

        r2 = <com.android.server.appop._$$Lambda$AppOpsService$GUeKjlbzT65s86vaxy5gvOajuhw: com.android.server.appop.'-$$Lambda$AppOpsService$GUeKjlbzT65s86vaxy5gvOajuhw' INSTANCE>;

        r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-2);

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(28);

        r11 = (com.android.internal.util.function.TriConsumer) r2;

        $r6 = staticinvoke <com.android.internal.util.function.pooled.PooledLambda: android.os.Message obtainMessage(com.android.internal.util.function.TriConsumer,java.lang.Object,java.lang.Object,java.lang.Object)>(r11, r0, $r5, r3);

        virtualinvoke r1.<android.os.Handler: boolean sendMessage(android.os.Message)>($r6);

        $r7 = r0.<com.android.server.appop.AppOpsService: android.os.Handler mHandler>;

        $r8 = <com.android.server.appop._$$Lambda$AppOpsService$GUeKjlbzT65s86vaxy5gvOajuhw: com.android.server.appop.'-$$Lambda$AppOpsService$GUeKjlbzT65s86vaxy5gvOajuhw' INSTANCE>;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        r12 = (com.android.internal.util.function.TriConsumer) $r8;

        $r10 = staticinvoke <com.android.internal.util.function.pooled.PooledLambda: android.os.Message obtainMessage(com.android.internal.util.function.TriConsumer,java.lang.Object,java.lang.Object,java.lang.Object)>(r12, r0, $r9, r3);

        virtualinvoke $r7.<android.os.Handler: boolean sendMessage(android.os.Message)>($r10);

        return;
    }

    public void setHistoryParameters(int, long, int)
    {
        com.android.server.appop.AppOpsService r0;
        int i0, i2;
        long l1, $l3;
        android.content.Context $r1;
        com.android.server.appop.HistoricalRegistry $r2;

        r0 := @this: com.android.server.appop.AppOpsService;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        i2 := @parameter2: int;

        $r1 = r0.<com.android.server.appop.AppOpsService: android.content.Context mContext>;

        virtualinvoke $r1.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.MANAGE_APPOPS", "setHistoryParameters");

        $r2 = r0.<com.android.server.appop.AppOpsService: com.android.server.appop.HistoricalRegistry mHistoricalRegistry>;

        $l3 = (long) i2;

        virtualinvoke $r2.<com.android.server.appop.HistoricalRegistry: void setHistoryParameters(int,long,long)>(i0, l1, $l3);

        return;
    }

    public void setMode(int, int, java.lang.String, int)
    {
        com.android.server.appop.AppOpsService r0;
        int i0, i1, i2;
        java.lang.String r1;

        r0 := @this: com.android.server.appop.AppOpsService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        i2 := @parameter3: int;

        specialinvoke r0.<com.android.server.appop.AppOpsService: void setMode(int,int,java.lang.String,int,com.android.internal.app.IAppOpsCallback)>(i0, i1, r1, i2, null);

        return;
    }

    public void setUidMode(int, int, int)
    {
        com.android.server.appop.AppOpsService r0;
        int i0, i1, i2;

        r0 := @this: com.android.server.appop.AppOpsService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        specialinvoke r0.<com.android.server.appop.AppOpsService: void setUidMode(int,int,int,com.android.internal.app.IAppOpsCallback)>(i0, i1, i2, null);

        return;
    }

    public void setUserRestriction(int, boolean, android.os.IBinder, int, java.lang.String[])
    {
        com.android.server.appop.AppOpsService r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        boolean z0;
        android.os.IBinder r1;
        java.lang.String[] r2;
        android.content.Context $r4, $r5, $r7;
        java.lang.SecurityException $r6;

        r0 := @this: com.android.server.appop.AppOpsService;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 := @parameter2: android.os.IBinder;

        i1 := @parameter3: int;

        r2 := @parameter4: java.lang.String[];

        $i2 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i3 = staticinvoke <android.os.Process: int myPid()>();

        if $i2 == $i3 goto label1;

        $r7 = r0.<com.android.server.appop.AppOpsService: android.content.Context mContext>;

        $i7 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i8 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke $r7.<android.content.Context: void enforcePermission(java.lang.String,int,int,java.lang.String)>("android.permission.MANAGE_APP_OPS_RESTRICTIONS", $i7, $i8, null);

     label1:
        $i4 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        if i1 == $i4 goto label3;

        $r4 = r0.<com.android.server.appop.AppOpsService: android.content.Context mContext>;

        $i5 = virtualinvoke $r4.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.INTERACT_ACROSS_USERS_FULL");

        if $i5 == 0 goto label3;

        $r5 = r0.<com.android.server.appop.AppOpsService: android.content.Context mContext>;

        $i6 = virtualinvoke $r5.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.INTERACT_ACROSS_USERS");

        if $i6 != 0 goto label2;

        goto label3;

     label2:
        $r6 = new java.lang.SecurityException;

        specialinvoke $r6.<java.lang.SecurityException: void <init>(java.lang.String)>("Need INTERACT_ACROSS_USERS_FULL or INTERACT_ACROSS_USERS to interact cross user ");

        throw $r6;

     label3:
        specialinvoke r0.<com.android.server.appop.AppOpsService: void verifyIncomingOp(int)>(i0);

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        specialinvoke r0.<com.android.server.appop.AppOpsService: void setUserRestrictionNoCheck(int,boolean,android.os.IBinder,int,java.lang.String[])>(i0, z0, r1, i1, r2);

        return;
    }

    public void setUserRestrictions(android.os.Bundle, android.os.IBinder, int)
    {
        com.android.server.appop.AppOpsService r0;
        android.os.Bundle r1;
        android.os.IBinder r2;
        int i0, i1;
        java.lang.String r3;
        boolean $z0;

        r0 := @this: com.android.server.appop.AppOpsService;

        r1 := @parameter0: android.os.Bundle;

        r2 := @parameter1: android.os.IBinder;

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.server.appop.AppOpsService: void checkSystemUid(java.lang.String)>("setUserRestrictions");

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r2);

        i1 = 0;

     label1:
        if i1 >= 100 goto label3;

        r3 = staticinvoke <android.app.AppOpsManager: java.lang.String opToRestriction(int)>(i1);

        if r3 == null goto label2;

        $z0 = virtualinvoke r1.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>(r3, 0);

        specialinvoke r0.<com.android.server.appop.AppOpsService: void setUserRestrictionNoCheck(int,boolean,android.os.IBinder,int,java.lang.String[])>(i1, $z0, r2, i0, null);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    public boolean shouldCollectNotes(int)
    {
        com.android.server.appop.AppOpsService r0;
        int i0, $i2, $i3, $i4;
        android.content.Context $r1;
        android.content.pm.PackageManager $r2;
        android.content.pm.PackageManager$NameNotFoundException $r3;
        boolean z0;
        java.lang.String r4;
        android.content.pm.PermissionInfo r5;

        r0 := @this: com.android.server.appop.AppOpsService;

        i0 := @parameter0: int;

        z0 = 0;

        staticinvoke <com.android.internal.util.Preconditions: int checkArgumentInRange(int,int,int,java.lang.String)>(i0, 0, 99, "opCode");

        r4 = staticinvoke <android.app.AppOpsManager: java.lang.String opToPermission(int)>(i0);

        if r4 != null goto label1;

        return 0;

     label1:
        $r1 = r0.<com.android.server.appop.AppOpsService: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r5 = virtualinvoke $r2.<android.content.pm.PackageManager: android.content.pm.PermissionInfo getPermissionInfo(java.lang.String,int)>(r4, 0);

     label2:
        $i2 = virtualinvoke r5.<android.content.pm.PermissionInfo: int getProtection()>();

        if $i2 == 1 goto label3;

        $i3 = virtualinvoke r5.<android.content.pm.PermissionInfo: int getProtectionFlags()>();

        $i4 = $i3 & 64;

        if $i4 == 0 goto label4;

     label3:
        z0 = 1;

     label4:
        return z0;

     label5:
        $r3 := @caughtexception;

        return 0;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label5;
    }

    public void shutdown()
    {
        com.android.server.appop.AppOpsService r0;
        boolean $z0, z1;
        com.android.server.appop.HistoricalRegistry $r2;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.appop.AppOpsService;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AppOps", "Writing app ops before shutdown...");

        z1 = 0;

        entermonitor r0;

     label1:
        $z0 = r0.<com.android.server.appop.AppOpsService: boolean mWriteScheduled>;

        if $z0 == 0 goto label3;

        r0.<com.android.server.appop.AppOpsService: boolean mWriteScheduled> = 0;

     label2:
        z1 = 1;

     label3:
        exitmonitor r0;

     label4:
        if z1 == 0 goto label5;

        virtualinvoke r0.<com.android.server.appop.AppOpsService: void writeState()>();

     label5:
        $r2 = r0.<com.android.server.appop.AppOpsService: com.android.server.appop.HistoricalRegistry mHistoricalRegistry>;

        virtualinvoke $r2.<com.android.server.appop.HistoricalRegistry: void shutdown()>();

        return;

     label6:
        $r3 := @caughtexception;

     label7:
        exitmonitor r0;

     label8:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public int startOperation(android.os.IBinder, int, int, java.lang.String, java.lang.String, boolean, boolean, java.lang.String, boolean)
    {
        com.android.server.appop.AppOpsService r0;
        int i0, i1, $i2, $i3, $i4, $i5, i7, i8, i9, $i10;
        java.lang.String r1, r2, r11, r12;
        boolean z0, z1, z2, $z3;
        com.android.server.appop.AppOpsService$Ops r3;
        android.util.SparseIntArray $r4, $r5, $r6;
        java.lang.Throwable $r7, $r8;
        android.os.RemoteException $r9;
        android.os.IBinder r10;
        android.app.AppOpsManager$RestrictionBypass r13;
        com.android.server.appop.AppOpsService$Op r14;
        com.android.server.appop.AppOpsService$AttributedOp r15;
        com.android.server.appop.AppOpsService$UidState r16;
        java.lang.RuntimeException r18;

        r0 := @this: com.android.server.appop.AppOpsService;

        r10 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r11 := @parameter3: java.lang.String;

        r1 := @parameter4: java.lang.String;

        z0 := @parameter5: boolean;

        z1 := @parameter6: boolean;

        r2 := @parameter7: java.lang.String;

        z2 := @parameter8: boolean;

        specialinvoke r0.<com.android.server.appop.AppOpsService: void verifyIncomingUid(int)>(i1);

        specialinvoke r0.<com.android.server.appop.AppOpsService: void verifyIncomingOp(int)>(i0);

        r12 = staticinvoke <com.android.server.appop.AppOpsService: java.lang.String resolvePackageName(int,java.lang.String)>(i1, r11);

        if r12 != null goto label01;

        return 1;

     label01:
        r13 = specialinvoke r0.<com.android.server.appop.AppOpsService: android.app.AppOpsManager$RestrictionBypass verifyAndGetBypass(int,java.lang.String,java.lang.String)>(i1, r11, r1);

     label02:
        entermonitor r0;

     label03:
        r3 = specialinvoke r0.<com.android.server.appop.AppOpsService: com.android.server.appop.AppOpsService$Ops getOpsLocked(int,java.lang.String,java.lang.String,android.app.AppOpsManager$RestrictionBypass,boolean)>(i1, r12, r1, r13, 1);

     label04:
        if r3 != null goto label07;

     label05:
        specialinvoke r0.<com.android.server.appop.AppOpsService: void scheduleOpStartedIfNeededLocked(int,int,java.lang.String,int)>(i0, i1, r11, 1);

        exitmonitor r0;

     label06:
        return 2;

     label07:
        r14 = specialinvoke r0.<com.android.server.appop.AppOpsService: com.android.server.appop.AppOpsService$Op getOpLocked(com.android.server.appop.AppOpsService$Ops,int,int,boolean)>(r3, i0, i1, 1);

        $z3 = specialinvoke r0.<com.android.server.appop.AppOpsService: boolean isOpRestrictedLocked(int,int,java.lang.String,android.app.AppOpsManager$RestrictionBypass)>(i1, i0, r12, r13);

        if $z3 == 0 goto label09;

        specialinvoke r0.<com.android.server.appop.AppOpsService: void scheduleOpStartedIfNeededLocked(int,int,java.lang.String,int)>(i0, i1, r11, 1);

        exitmonitor r0;

     label08:
        return 1;

     label09:
        r15 = staticinvoke <com.android.server.appop.AppOpsService$Op: com.android.server.appop.AppOpsService$AttributedOp access$1000(com.android.server.appop.AppOpsService$Op,com.android.server.appop.AppOpsService$Op,java.lang.String)>(r14, r14, r1);

        i7 = staticinvoke <android.app.AppOpsManager: int opToSwitch(int)>(i0);

        r16 = r3.<com.android.server.appop.AppOpsService$Ops: com.android.server.appop.AppOpsService$UidState uidState>;

        $r4 = r16.<com.android.server.appop.AppOpsService$UidState: android.util.SparseIntArray opModes>;

        if $r4 == null goto label14;

        $r5 = r16.<com.android.server.appop.AppOpsService$UidState: android.util.SparseIntArray opModes>;

        $i3 = virtualinvoke $r5.<android.util.SparseIntArray: int indexOfKey(int)>(i7);

        if $i3 < 0 goto label14;

        $r6 = r16.<com.android.server.appop.AppOpsService$UidState: android.util.SparseIntArray opModes>;

        $i4 = virtualinvoke $r6.<android.util.SparseIntArray: int get(int)>(i7);

        i8 = virtualinvoke r16.<com.android.server.appop.AppOpsService$UidState: int evalMode(int,int)>(i0, $i4);

     label10:
        if i8 == 0 goto label13;

        if z0 == 0 goto label11;

        if i8 == 3 goto label13;

     label11:
        $i5 = r16.<com.android.server.appop.AppOpsService$UidState: int state>;

        virtualinvoke r15.<com.android.server.appop.AppOpsService$AttributedOp: void rejected(int,int)>($i5, 1);

        specialinvoke r0.<com.android.server.appop.AppOpsService: void scheduleOpStartedIfNeededLocked(int,int,java.lang.String,int)>(i0, i1, r11, i8);

        exitmonitor r0;

     label12:
        return i8;

     label13:
        goto label21;

     label14:
        if i7 == i0 goto label17;

     label15:
        r14 = specialinvoke r0.<com.android.server.appop.AppOpsService: com.android.server.appop.AppOpsService$Op getOpLocked(com.android.server.appop.AppOpsService$Ops,int,int,boolean)>(r3, i7, i1, 1);

     label16:
        goto label17;

     label17:
        i9 = virtualinvoke r14.<com.android.server.appop.AppOpsService$Op: int evalMode()>();

     label18:
        if i9 == 0 goto label21;

        if z0 == 0 goto label19;

        if i9 == 3 goto label21;

     label19:
        $i2 = r16.<com.android.server.appop.AppOpsService$UidState: int state>;

        virtualinvoke r15.<com.android.server.appop.AppOpsService$AttributedOp: void rejected(int,int)>($i2, 1);

        specialinvoke r0.<com.android.server.appop.AppOpsService: void scheduleOpStartedIfNeededLocked(int,int,java.lang.String,int)>(i0, i1, r11, i9);

        exitmonitor r0;

     label20:
        return i9;

     label21:
        specialinvoke r0.<com.android.server.appop.AppOpsService: void scheduleOpStartedIfNeededLocked(int,int,java.lang.String,int)>(i0, i1, r11, 0);

     label22:
        $i10 = r16.<com.android.server.appop.AppOpsService$UidState: int state>;

        virtualinvoke r15.<com.android.server.appop.AppOpsService$AttributedOp: void started(android.os.IBinder,int)>(r10, $i10);

     label23:
        exitmonitor r0;

     label24:
        if z1 == 0 goto label25;

        specialinvoke r0.<com.android.server.appop.AppOpsService: void collectAsyncNotedOp(int,java.lang.String,int,java.lang.String,int,java.lang.String,boolean)>(i1, r11, i0, r1, 1, r2, z2);

     label25:
        return 0;

     label26:
        $r9 := @caughtexception;

     label27:
        r18 = new java.lang.RuntimeException;

        specialinvoke r18.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r9);

        throw r18;

     label28:
        $r7 := @caughtexception;

     label29:
        exitmonitor r0;

     label30:
        throw $r7;

     label31:
        $r8 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("AppOps", "startOperation", $r8);

        return 2;

        catch java.lang.SecurityException from label01 to label02 with label31;
        catch java.lang.Throwable from label03 to label04 with label28;
        catch java.lang.Throwable from label05 to label06 with label28;
        catch java.lang.Throwable from label07 to label08 with label28;
        catch java.lang.Throwable from label09 to label10 with label28;
        catch java.lang.Throwable from label11 to label12 with label28;
        catch java.lang.Throwable from label15 to label16 with label28;
        catch java.lang.Throwable from label17 to label18 with label28;
        catch java.lang.Throwable from label19 to label20 with label28;
        catch java.lang.Throwable from label21 to label22 with label28;
        catch android.os.RemoteException from label22 to label23 with label26;
        catch java.lang.Throwable from label22 to label23 with label28;
        catch java.lang.Throwable from label23 to label24 with label28;
        catch java.lang.Throwable from label27 to label28 with label28;
        catch java.lang.Throwable from label29 to label30 with label28;
    }

    public void startWatchingActive(int[], com.android.internal.app.IAppOpsActiveCallback)
    {
        com.android.server.appop.AppOpsService r0;
        com.android.internal.app.IAppOpsActiveCallback r1;
        int i0, $i2, $i3, i4, i5, i6, i7;
        com.android.server.appop.AppOpsService$ActiveCallback r2;
        android.content.Context $r3;
        android.util.ArrayMap $r4, $r7;
        android.os.IBinder $r5, $r8;
        java.lang.Object $r6;
        java.lang.StringBuilder $r10;
        java.lang.String $r12, $r14;
        java.lang.Throwable $r16;
        int[] r17;
        android.util.SparseArray r19;

        r0 := @this: com.android.server.appop.AppOpsService;

        r17 := @parameter0: int[];

        r1 := @parameter1: com.android.internal.app.IAppOpsActiveCallback;

        i4 = -1;

        i5 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r3 = r0.<com.android.server.appop.AppOpsService: android.content.Context mContext>;

        $i2 = virtualinvoke $r3.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.WATCH_APPOPS");

        if $i2 == 0 goto label01;

        i4 = i5;

     label01:
        if r17 == null goto label02;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid op code in: ");

        $r12 = staticinvoke <java.util.Arrays: java.lang.String toString(int[])>(r17);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.internal.util.Preconditions: int[] checkArrayElementsInRange(int[],int,int,java.lang.String)>(r17, 0, 99, $r14);

     label02:
        if r1 != null goto label03;

        return;

     label03:
        entermonitor r0;

     label04:
        $r4 = r0.<com.android.server.appop.AppOpsService: android.util.ArrayMap mActiveWatchers>;

        $r5 = interfaceinvoke r1.<com.android.internal.app.IAppOpsActiveCallback: android.os.IBinder asBinder()>();

        $r6 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r5);

        r19 = (android.util.SparseArray) $r6;

     label05:
        if r19 != null goto label08;

     label06:
        r19 = new android.util.SparseArray;

        specialinvoke r19.<android.util.SparseArray: void <init>()>();

        $r7 = r0.<com.android.server.appop.AppOpsService: android.util.ArrayMap mActiveWatchers>;

        $r8 = interfaceinvoke r1.<com.android.internal.app.IAppOpsActiveCallback: android.os.IBinder asBinder()>();

        virtualinvoke $r7.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, r19);

     label07:
        goto label08;

     label08:
        r2 = new com.android.server.appop.AppOpsService$ActiveCallback;

        specialinvoke r2.<com.android.server.appop.AppOpsService$ActiveCallback: void <init>(com.android.server.appop.AppOpsService,com.android.internal.app.IAppOpsActiveCallback,int,int,int)>(r0, r1, i4, i5, i0);

        i6 = lengthof r17;

     label09:
        i7 = 0;

     label10:
        if i7 >= i6 goto label13;

     label11:
        $i3 = r17[i7];

        virtualinvoke r19.<android.util.SparseArray: void put(int,java.lang.Object)>($i3, r2);

     label12:
        i7 = i7 + 1;

        goto label10;

     label13:
        exitmonitor r0;

     label14:
        return;

     label15:
        $r16 := @caughtexception;

     label16:
        exitmonitor r0;

     label17:
        throw $r16;

        catch java.lang.Throwable from label04 to label05 with label15;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch java.lang.Throwable from label08 to label09 with label15;
        catch java.lang.Throwable from label11 to label12 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label16 to label17 with label15;
    }

    public void startWatchingAsyncNoted(java.lang.String, com.android.internal.app.IAppOpsAsyncNotedCallback)
    {
        com.android.server.appop.AppOpsService r0;
        com.android.internal.app.IAppOpsAsyncNotedCallback r1;
        int i0;
        android.util.Pair r2;
        android.os.RemoteCallbackList r3, r13;
        android.util.ArrayMap $r7, $r9;
        java.lang.Object $r8;
        java.lang.Throwable $r11;
        java.lang.String r12;
        com.android.server.appop.AppOpsService$8 r15;

        r0 := @this: com.android.server.appop.AppOpsService;

        r12 := @parameter0: java.lang.String;

        r1 := @parameter1: com.android.internal.app.IAppOpsAsyncNotedCallback;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r12);

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        r2 = specialinvoke r0.<com.android.server.appop.AppOpsService: android.util.Pair getAsyncNotedOpsKey(java.lang.String,int)>(r12, i0);

        specialinvoke r0.<com.android.server.appop.AppOpsService: android.app.AppOpsManager$RestrictionBypass verifyAndGetBypass(int,java.lang.String,java.lang.String)>(i0, r12, null);

        entermonitor r0;

     label01:
        $r7 = r0.<com.android.server.appop.AppOpsService: android.util.ArrayMap mAsyncOpWatchers>;

        $r8 = virtualinvoke $r7.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r2);

        r3 = (android.os.RemoteCallbackList) $r8;

     label02:
        r13 = r3;

        if r3 != null goto label05;

     label03:
        r15 = new com.android.server.appop.AppOpsService$8;

        r13 = r15;

        specialinvoke r15.<com.android.server.appop.AppOpsService$8: void <init>(com.android.server.appop.AppOpsService,android.util.Pair)>(r0, r2);

     label04:
        $r9 = r0.<com.android.server.appop.AppOpsService: android.util.ArrayMap mAsyncOpWatchers>;

        virtualinvoke $r9.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r15);

     label05:
        virtualinvoke r13.<android.os.RemoteCallbackList: boolean register(android.os.IInterface)>(r1);

     label06:
        exitmonitor r0;

     label07:
        return;

     label08:
        $r11 := @caughtexception;

     label09:
        exitmonitor r0;

     label10:
        throw $r11;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public void startWatchingMode(int, java.lang.String, com.android.internal.app.IAppOpsCallback)
    {
        com.android.server.appop.AppOpsService r0;
        int i0;
        java.lang.String r1;
        com.android.internal.app.IAppOpsCallback r2;

        r0 := @this: com.android.server.appop.AppOpsService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: com.android.internal.app.IAppOpsCallback;

        virtualinvoke r0.<com.android.server.appop.AppOpsService: void startWatchingModeWithFlags(int,java.lang.String,int,com.android.internal.app.IAppOpsCallback)>(i0, r1, 0, r2);

        return;
    }

    public void startWatchingModeWithFlags(int, java.lang.String, int, com.android.internal.app.IAppOpsCallback)
    {
        com.android.server.appop.AppOpsService r0;
        int i0, i1, i2, $i4, i5, i6;
        java.lang.StringBuilder $r1;
        java.lang.String $r4, r16;
        android.util.ArrayMap $r5, $r7, $r12, $r20;
        java.lang.Object $r6, $r10, $r22;
        android.util.SparseArray $r9, $r11;
        android.os.IBinder $r13, $r21;
        java.lang.Throwable $r15;
        com.android.internal.app.IAppOpsCallback r17;
        com.android.server.appop.AppOpsService$ModeCallback r23, r24, r25;
        android.util.ArraySet r26, r27, r28, r29;

        r0 := @this: com.android.server.appop.AppOpsService;

        i5 := @parameter0: int;

        r16 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r17 := @parameter3: com.android.internal.app.IAppOpsCallback;

        i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i2 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid op code: ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.internal.util.Preconditions: int checkArgumentInRange(int,int,int,java.lang.String)>(i5, -1, 99, $r4);

        if r17 != null goto label01;

        return;

     label01:
        entermonitor r0;

        if i5 == -1 goto label05;

     label02:
        i6 = staticinvoke <android.app.AppOpsManager: int opToSwitch(int)>(i5);

     label03:
        goto label06;

     label04:
        $r15 := @caughtexception;

        goto label29;

     label05:
        i6 = i5;

     label06:
        $i4 = i0 & 2;

        if $i4 != 0 goto label08;

        if i5 != -1 goto label07;

        i5 = -2;

        goto label09;

     label07:
        goto label09;

     label08:
        i5 = i6;

     label09:
        $r20 = r0.<com.android.server.appop.AppOpsService: android.util.ArrayMap mModeWatchers>;

        $r21 = interfaceinvoke r17.<com.android.internal.app.IAppOpsCallback: android.os.IBinder asBinder()>();

        $r22 = virtualinvoke $r20.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r21);

        r23 = (com.android.server.appop.AppOpsService$ModeCallback) $r22;

     label10:
        if r23 != null goto label14;

     label11:
        r24 = new com.android.server.appop.AppOpsService$ModeCallback;

        specialinvoke r24.<com.android.server.appop.AppOpsService$ModeCallback: void <init>(com.android.server.appop.AppOpsService,com.android.internal.app.IAppOpsCallback,int,int,int,int,int)>(r0, r17, -1, i0, i5, i1, i2);

     label12:
        $r12 = r0.<com.android.server.appop.AppOpsService: android.util.ArrayMap mModeWatchers>;

        $r13 = interfaceinvoke r17.<com.android.internal.app.IAppOpsCallback: android.os.IBinder asBinder()>();

        virtualinvoke $r12.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r13, r24);

     label13:
        r25 = r24;

        goto label15;

     label14:
        r25 = r23;

     label15:
        if i6 == -1 goto label21;

     label16:
        $r9 = r0.<com.android.server.appop.AppOpsService: android.util.SparseArray mOpModeWatchers>;

        $r10 = virtualinvoke $r9.<android.util.SparseArray: java.lang.Object get(int)>(i6);

        r26 = (android.util.ArraySet) $r10;

     label17:
        r27 = r26;

        if r26 != null goto label20;

     label18:
        r27 = new android.util.ArraySet;

        specialinvoke r27.<android.util.ArraySet: void <init>()>();

     label19:
        $r11 = r0.<com.android.server.appop.AppOpsService: android.util.SparseArray mOpModeWatchers>;

        virtualinvoke $r11.<android.util.SparseArray: void put(int,java.lang.Object)>(i6, r27);

     label20:
        virtualinvoke r27.<android.util.ArraySet: boolean add(java.lang.Object)>(r25);

     label21:
        if r16 == null goto label27;

     label22:
        $r5 = r0.<com.android.server.appop.AppOpsService: android.util.ArrayMap mPackageModeWatchers>;

        $r6 = virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r16);

        r28 = (android.util.ArraySet) $r6;

     label23:
        r29 = r28;

        if r28 != null goto label26;

     label24:
        r29 = new android.util.ArraySet;

        specialinvoke r29.<android.util.ArraySet: void <init>()>();

     label25:
        $r7 = r0.<com.android.server.appop.AppOpsService: android.util.ArrayMap mPackageModeWatchers>;

        virtualinvoke $r7.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r16, r29);

     label26:
        virtualinvoke r29.<android.util.ArraySet: boolean add(java.lang.Object)>(r25);

     label27:
        specialinvoke r0.<com.android.server.appop.AppOpsService: void evalAllForegroundOpsLocked()>();

        exitmonitor r0;

     label28:
        return;

     label29:
        exitmonitor r0;

     label30:
        throw $r15;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label09 to label10 with label04;
        catch java.lang.Throwable from label11 to label12 with label04;
        catch java.lang.Throwable from label12 to label13 with label04;
        catch java.lang.Throwable from label16 to label17 with label04;
        catch java.lang.Throwable from label18 to label19 with label04;
        catch java.lang.Throwable from label19 to label20 with label04;
        catch java.lang.Throwable from label20 to label21 with label04;
        catch java.lang.Throwable from label22 to label23 with label04;
        catch java.lang.Throwable from label24 to label25 with label04;
        catch java.lang.Throwable from label25 to label26 with label04;
        catch java.lang.Throwable from label26 to label27 with label04;
        catch java.lang.Throwable from label27 to label28 with label04;
        catch java.lang.Throwable from label29 to label30 with label04;
    }

    public void startWatchingNoted(int[], com.android.internal.app.IAppOpsNotedCallback)
    {
        com.android.server.appop.AppOpsService r0;
        com.android.internal.app.IAppOpsNotedCallback r1;
        int i0, $i2, $i3, i4, i5, i6, i7;
        com.android.server.appop.AppOpsService$NotedCallback r2;
        android.content.Context $r3;
        boolean $z0, $z1;
        java.lang.StringBuilder $r4;
        java.lang.String $r6, r19;
        android.util.ArrayMap $r10, $r13;
        android.os.IBinder $r11, $r14;
        java.lang.Object $r12;
        java.lang.Throwable $r16;
        int[] r17;
        android.util.SparseArray r20;

        r0 := @this: com.android.server.appop.AppOpsService;

        r17 := @parameter0: int[];

        r1 := @parameter1: com.android.internal.app.IAppOpsNotedCallback;

        i4 = -1;

        i5 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r3 = r0.<com.android.server.appop.AppOpsService: android.content.Context mContext>;

        $i2 = virtualinvoke $r3.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.WATCH_APPOPS");

        if $i2 == 0 goto label01;

        i4 = i5;

     label01:
        $z0 = staticinvoke <com.android.internal.util.ArrayUtils: boolean isEmpty(int[])>(r17);

        $z1 = $z0 ^ 1;

        staticinvoke <com.android.internal.util.Preconditions: void checkArgument(boolean,java.lang.Object)>($z1, "Ops cannot be null or empty");

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid op code in: ");

        $r6 = staticinvoke <java.util.Arrays: java.lang.String toString(int[])>(r17);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        r19 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.internal.util.Preconditions: int[] checkArrayElementsInRange(int[],int,int,java.lang.String)>(r17, 0, 99, r19);

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, "Callback cannot be null");

        entermonitor r0;

     label02:
        $r10 = r0.<com.android.server.appop.AppOpsService: android.util.ArrayMap mNotedWatchers>;

        $r11 = interfaceinvoke r1.<com.android.internal.app.IAppOpsNotedCallback: android.os.IBinder asBinder()>();

        $r12 = virtualinvoke $r10.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r11);

        r20 = (android.util.SparseArray) $r12;

     label03:
        if r20 != null goto label06;

     label04:
        r20 = new android.util.SparseArray;

        specialinvoke r20.<android.util.SparseArray: void <init>()>();

        $r13 = r0.<com.android.server.appop.AppOpsService: android.util.ArrayMap mNotedWatchers>;

        $r14 = interfaceinvoke r1.<com.android.internal.app.IAppOpsNotedCallback: android.os.IBinder asBinder()>();

        virtualinvoke $r13.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, r20);

     label05:
        goto label06;

     label06:
        r2 = new com.android.server.appop.AppOpsService$NotedCallback;

        specialinvoke r2.<com.android.server.appop.AppOpsService$NotedCallback: void <init>(com.android.server.appop.AppOpsService,com.android.internal.app.IAppOpsNotedCallback,int,int,int)>(r0, r1, i4, i5, i0);

        i6 = lengthof r17;

     label07:
        i7 = 0;

     label08:
        if i7 >= i6 goto label11;

     label09:
        $i3 = r17[i7];

        virtualinvoke r20.<android.util.SparseArray: void put(int,java.lang.Object)>($i3, r2);

     label10:
        i7 = i7 + 1;

        goto label08;

     label11:
        exitmonitor r0;

     label12:
        return;

     label13:
        $r16 := @caughtexception;

     label14:
        exitmonitor r0;

     label15:
        throw $r16;

        catch java.lang.Throwable from label02 to label03 with label13;
        catch java.lang.Throwable from label04 to label05 with label13;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
    }

    public void startWatchingStarted(int[], com.android.internal.app.IAppOpsStartedCallback)
    {
        com.android.server.appop.AppOpsService r0;
        com.android.internal.app.IAppOpsStartedCallback r1;
        int i0, $i2, $i3, i4, i5, i6, i7;
        com.android.server.appop.AppOpsService$StartedCallback r2;
        android.content.Context $r3;
        boolean $z0, $z1;
        java.lang.StringBuilder $r4;
        java.lang.String $r6, r19;
        android.util.ArrayMap $r10, $r13;
        android.os.IBinder $r11, $r14;
        java.lang.Object $r12;
        java.lang.Throwable $r16;
        int[] r17;
        android.util.SparseArray r20;

        r0 := @this: com.android.server.appop.AppOpsService;

        r17 := @parameter0: int[];

        r1 := @parameter1: com.android.internal.app.IAppOpsStartedCallback;

        i4 = -1;

        i5 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r3 = r0.<com.android.server.appop.AppOpsService: android.content.Context mContext>;

        $i2 = virtualinvoke $r3.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.WATCH_APPOPS");

        if $i2 == 0 goto label01;

        i4 = i5;

     label01:
        $z0 = staticinvoke <com.android.internal.util.ArrayUtils: boolean isEmpty(int[])>(r17);

        $z1 = $z0 ^ 1;

        staticinvoke <com.android.internal.util.Preconditions: void checkArgument(boolean,java.lang.Object)>($z1, "Ops cannot be null or empty");

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid op code in: ");

        $r6 = staticinvoke <java.util.Arrays: java.lang.String toString(int[])>(r17);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        r19 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.internal.util.Preconditions: int[] checkArrayElementsInRange(int[],int,int,java.lang.String)>(r17, 0, 99, r19);

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, "Callback cannot be null");

        entermonitor r0;

     label02:
        $r10 = r0.<com.android.server.appop.AppOpsService: android.util.ArrayMap mStartedWatchers>;

        $r11 = interfaceinvoke r1.<com.android.internal.app.IAppOpsStartedCallback: android.os.IBinder asBinder()>();

        $r12 = virtualinvoke $r10.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r11);

        r20 = (android.util.SparseArray) $r12;

     label03:
        if r20 != null goto label06;

     label04:
        r20 = new android.util.SparseArray;

        specialinvoke r20.<android.util.SparseArray: void <init>()>();

        $r13 = r0.<com.android.server.appop.AppOpsService: android.util.ArrayMap mStartedWatchers>;

        $r14 = interfaceinvoke r1.<com.android.internal.app.IAppOpsStartedCallback: android.os.IBinder asBinder()>();

        virtualinvoke $r13.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, r20);

     label05:
        goto label06;

     label06:
        r2 = new com.android.server.appop.AppOpsService$StartedCallback;

        specialinvoke r2.<com.android.server.appop.AppOpsService$StartedCallback: void <init>(com.android.server.appop.AppOpsService,com.android.internal.app.IAppOpsStartedCallback,int,int,int)>(r0, r1, i4, i5, i0);

        i6 = lengthof r17;

     label07:
        i7 = 0;

     label08:
        if i7 >= i6 goto label11;

     label09:
        $i3 = r17[i7];

        virtualinvoke r20.<android.util.SparseArray: void put(int,java.lang.Object)>($i3, r2);

     label10:
        i7 = i7 + 1;

        goto label08;

     label11:
        exitmonitor r0;

     label12:
        return;

     label13:
        $r16 := @caughtexception;

     label14:
        exitmonitor r0;

     label15:
        throw $r16;

        catch java.lang.Throwable from label02 to label03 with label13;
        catch java.lang.Throwable from label04 to label05 with label13;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
    }

    public void stopWatchingActive(com.android.internal.app.IAppOpsActiveCallback)
    {
        com.android.server.appop.AppOpsService r0;
        int i0, i1;
        android.util.ArrayMap $r1;
        android.os.IBinder $r2;
        java.lang.Object $r3, $r4;
        com.android.server.appop.AppOpsService$ActiveCallback $r5;
        java.lang.Throwable $r6;
        com.android.internal.app.IAppOpsActiveCallback r7;
        android.util.SparseArray r8;

        r0 := @this: com.android.server.appop.AppOpsService;

        r7 := @parameter0: com.android.internal.app.IAppOpsActiveCallback;

        if r7 != null goto label01;

        return;

     label01:
        entermonitor r0;

     label02:
        $r1 = r0.<com.android.server.appop.AppOpsService: android.util.ArrayMap mActiveWatchers>;

        $r2 = interfaceinvoke r7.<com.android.internal.app.IAppOpsActiveCallback: android.os.IBinder asBinder()>();

        $r3 = virtualinvoke $r1.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>($r2);

        r8 = (android.util.SparseArray) $r3;

     label03:
        if r8 != null goto label06;

     label04:
        exitmonitor r0;

     label05:
        return;

     label06:
        i0 = virtualinvoke r8.<android.util.SparseArray: int size()>();

     label07:
        i1 = 0;

     label08:
        if i1 >= i0 goto label11;

     label09:
        $r4 = virtualinvoke r8.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        $r5 = (com.android.server.appop.AppOpsService$ActiveCallback) $r4;

        virtualinvoke $r5.<com.android.server.appop.AppOpsService$ActiveCallback: void destroy()>();

     label10:
        i1 = i1 + 1;

        goto label08;

     label11:
        exitmonitor r0;

     label12:
        return;

     label13:
        $r6 := @caughtexception;

     label14:
        exitmonitor r0;

     label15:
        throw $r6;

        catch java.lang.Throwable from label02 to label03 with label13;
        catch java.lang.Throwable from label04 to label05 with label13;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
    }

    public void stopWatchingAsyncNoted(java.lang.String, com.android.internal.app.IAppOpsAsyncNotedCallback)
    {
        com.android.server.appop.AppOpsService r0;
        com.android.internal.app.IAppOpsAsyncNotedCallback r1;
        int i0, $i1;
        android.util.Pair r2;
        android.util.ArrayMap $r6, $r8;
        java.lang.Object $r7;
        java.lang.Throwable $r10;
        java.lang.String r11;
        android.os.RemoteCallbackList r12;

        r0 := @this: com.android.server.appop.AppOpsService;

        r11 := @parameter0: java.lang.String;

        r1 := @parameter1: com.android.internal.app.IAppOpsAsyncNotedCallback;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r11);

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        r2 = specialinvoke r0.<com.android.server.appop.AppOpsService: android.util.Pair getAsyncNotedOpsKey(java.lang.String,int)>(r11, i0);

        specialinvoke r0.<com.android.server.appop.AppOpsService: android.app.AppOpsManager$RestrictionBypass verifyAndGetBypass(int,java.lang.String,java.lang.String)>(i0, r11, null);

        entermonitor r0;

     label1:
        $r6 = r0.<com.android.server.appop.AppOpsService: android.util.ArrayMap mAsyncOpWatchers>;

        $r7 = virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r2);

        r12 = (android.os.RemoteCallbackList) $r7;

     label2:
        if r12 == null goto label4;

     label3:
        virtualinvoke r12.<android.os.RemoteCallbackList: boolean unregister(android.os.IInterface)>(r1);

        $i1 = virtualinvoke r12.<android.os.RemoteCallbackList: int getRegisteredCallbackCount()>();

        if $i1 != 0 goto label4;

        $r8 = r0.<com.android.server.appop.AppOpsService: android.util.ArrayMap mAsyncOpWatchers>;

        virtualinvoke $r8.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r2);

     label4:
        exitmonitor r0;

     label5:
        return;

     label6:
        $r10 := @caughtexception;

     label7:
        exitmonitor r0;

     label8:
        throw $r10;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public void stopWatchingMode(com.android.internal.app.IAppOpsCallback)
    {
        com.android.server.appop.AppOpsService r0;
        android.util.ArrayMap $r1, $r5, $r6, $r8;
        android.os.IBinder $r2;
        java.lang.Object $r3, $r7, $r11;
        android.util.SparseArray $r4, $r10, $r12;
        int $i0, $i1, $i2, $i3, i4, i5;
        java.lang.Throwable $r13;
        com.android.internal.app.IAppOpsCallback r14;
        com.android.server.appop.AppOpsService$ModeCallback r15;
        android.util.ArraySet r16, r17;

        r0 := @this: com.android.server.appop.AppOpsService;

        r14 := @parameter0: com.android.internal.app.IAppOpsCallback;

        if r14 != null goto label01;

        return;

     label01:
        entermonitor r0;

     label02:
        $r1 = r0.<com.android.server.appop.AppOpsService: android.util.ArrayMap mModeWatchers>;

        $r2 = interfaceinvoke r14.<com.android.internal.app.IAppOpsCallback: android.os.IBinder asBinder()>();

        $r3 = virtualinvoke $r1.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>($r2);

        r15 = (com.android.server.appop.AppOpsService$ModeCallback) $r3;

     label03:
        if r15 == null goto label12;

     label04:
        virtualinvoke r15.<com.android.server.appop.AppOpsService$ModeCallback: void unlinkToDeath()>();

        $r4 = r0.<com.android.server.appop.AppOpsService: android.util.SparseArray mOpModeWatchers>;

        $i0 = virtualinvoke $r4.<android.util.SparseArray: int size()>();

        i4 = $i0 - 1;

     label05:
        if i4 < 0 goto label08;

     label06:
        $r10 = r0.<com.android.server.appop.AppOpsService: android.util.SparseArray mOpModeWatchers>;

        $r11 = virtualinvoke $r10.<android.util.SparseArray: java.lang.Object valueAt(int)>(i4);

        r16 = (android.util.ArraySet) $r11;

        virtualinvoke r16.<android.util.ArraySet: boolean remove(java.lang.Object)>(r15);

        $i3 = virtualinvoke r16.<android.util.ArraySet: int size()>();

        if $i3 > 0 goto label07;

        $r12 = r0.<com.android.server.appop.AppOpsService: android.util.SparseArray mOpModeWatchers>;

        virtualinvoke $r12.<android.util.SparseArray: void removeAt(int)>(i4);

     label07:
        i4 = i4 + -1;

        goto label05;

     label08:
        $r5 = r0.<com.android.server.appop.AppOpsService: android.util.ArrayMap mPackageModeWatchers>;

        $i1 = virtualinvoke $r5.<android.util.ArrayMap: int size()>();

        i5 = $i1 - 1;

     label09:
        if i5 < 0 goto label12;

     label10:
        $r6 = r0.<com.android.server.appop.AppOpsService: android.util.ArrayMap mPackageModeWatchers>;

        $r7 = virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i5);

        r17 = (android.util.ArraySet) $r7;

        virtualinvoke r17.<android.util.ArraySet: boolean remove(java.lang.Object)>(r15);

        $i2 = virtualinvoke r17.<android.util.ArraySet: int size()>();

        if $i2 > 0 goto label11;

        $r8 = r0.<com.android.server.appop.AppOpsService: android.util.ArrayMap mPackageModeWatchers>;

        virtualinvoke $r8.<android.util.ArrayMap: java.lang.Object removeAt(int)>(i5);

     label11:
        i5 = i5 + -1;

        goto label09;

     label12:
        specialinvoke r0.<com.android.server.appop.AppOpsService: void evalAllForegroundOpsLocked()>();

        exitmonitor r0;

     label13:
        return;

     label14:
        $r13 := @caughtexception;

     label15:
        exitmonitor r0;

     label16:
        throw $r13;

        catch java.lang.Throwable from label02 to label03 with label14;
        catch java.lang.Throwable from label04 to label05 with label14;
        catch java.lang.Throwable from label06 to label07 with label14;
        catch java.lang.Throwable from label08 to label09 with label14;
        catch java.lang.Throwable from label10 to label11 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label15 to label16 with label14;
    }

    public void stopWatchingNoted(com.android.internal.app.IAppOpsNotedCallback)
    {
        com.android.server.appop.AppOpsService r0;
        int i0, i1;
        android.util.ArrayMap $r2;
        android.os.IBinder $r3;
        java.lang.Object $r4, $r5;
        com.android.server.appop.AppOpsService$NotedCallback $r6;
        java.lang.Throwable $r7;
        com.android.internal.app.IAppOpsNotedCallback r8;
        android.util.SparseArray r9;

        r0 := @this: com.android.server.appop.AppOpsService;

        r8 := @parameter0: com.android.internal.app.IAppOpsNotedCallback;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r8, "Callback cannot be null");

        entermonitor r0;

     label01:
        $r2 = r0.<com.android.server.appop.AppOpsService: android.util.ArrayMap mNotedWatchers>;

        $r3 = interfaceinvoke r8.<com.android.internal.app.IAppOpsNotedCallback: android.os.IBinder asBinder()>();

        $r4 = virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>($r3);

        r9 = (android.util.SparseArray) $r4;

     label02:
        if r9 != null goto label05;

     label03:
        exitmonitor r0;

     label04:
        return;

     label05:
        i0 = virtualinvoke r9.<android.util.SparseArray: int size()>();

     label06:
        i1 = 0;

     label07:
        if i1 >= i0 goto label10;

     label08:
        $r5 = virtualinvoke r9.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        $r6 = (com.android.server.appop.AppOpsService$NotedCallback) $r5;

        virtualinvoke $r6.<com.android.server.appop.AppOpsService$NotedCallback: void destroy()>();

     label09:
        i1 = i1 + 1;

        goto label07;

     label10:
        exitmonitor r0;

     label11:
        return;

     label12:
        $r7 := @caughtexception;

     label13:
        exitmonitor r0;

     label14:
        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public void stopWatchingStarted(com.android.internal.app.IAppOpsStartedCallback)
    {
        com.android.server.appop.AppOpsService r0;
        int i0, i1;
        android.util.ArrayMap $r2;
        android.os.IBinder $r3;
        java.lang.Object $r4, $r5;
        com.android.server.appop.AppOpsService$StartedCallback $r6;
        java.lang.Throwable $r7;
        com.android.internal.app.IAppOpsStartedCallback r8;
        android.util.SparseArray r9;

        r0 := @this: com.android.server.appop.AppOpsService;

        r8 := @parameter0: com.android.internal.app.IAppOpsStartedCallback;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r8, "Callback cannot be null");

        entermonitor r0;

     label01:
        $r2 = r0.<com.android.server.appop.AppOpsService: android.util.ArrayMap mStartedWatchers>;

        $r3 = interfaceinvoke r8.<com.android.internal.app.IAppOpsStartedCallback: android.os.IBinder asBinder()>();

        $r4 = virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>($r3);

        r9 = (android.util.SparseArray) $r4;

     label02:
        if r9 != null goto label05;

     label03:
        exitmonitor r0;

     label04:
        return;

     label05:
        i0 = virtualinvoke r9.<android.util.SparseArray: int size()>();

     label06:
        i1 = 0;

     label07:
        if i1 >= i0 goto label10;

     label08:
        $r5 = virtualinvoke r9.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        $r6 = (com.android.server.appop.AppOpsService$StartedCallback) $r5;

        virtualinvoke $r6.<com.android.server.appop.AppOpsService$StartedCallback: void destroy()>();

     label09:
        i1 = i1 + 1;

        goto label07;

     label10:
        exitmonitor r0;

     label11:
        return;

     label12:
        $r7 := @caughtexception;

     label13:
        exitmonitor r0;

     label14:
        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public void systemReady()
    {
        com.android.server.appop.AppOpsService r0;
        int i0, i1, $i2, $i3, i4, i5;
        java.lang.String[] r1;
        android.util.ArrayMap r2;
        java.lang.String r3, $r43, r49;
        com.android.server.appop._$$Lambda$AppOpsService$zN6prp9KCBI96qJ_QVmqGh_kpB8 r4;
        android.content.Context $r5, $r8, $r14, $r19, $r24;
        com.android.server.appop.AppOpsService$Constants $r6;
        android.content.ContentResolver $r7, $r10;
        com.android.server.appop.HistoricalRegistry $r9;
        android.content.IntentFilter $r11, $r17, $r22;
        android.os.UserHandle $r12, $r20;
        android.content.BroadcastReceiver $r13;
        android.util.SparseArray $r16, $r36, $r37, $r45;
        com.android.server.appop.AppOpsService$3 $r18;
        com.android.server.appop.AppOpsService$4 $r23;
        com.android.server.appop.AppOpsService$5 $r26;
        android.os.Handler $r27;
        java.lang.Object $r28, $r31, $r33, $r38, $r39;
        com.android.server.appop.AppOpsService$6 $r29;
        android.content.pm.PackageManagerInternal $r30;
        boolean $z1, $z2, $z3;
        android.app.ActivityManagerInternal $r32;
        com.android.server.appop.AppOpsService$7 $r34;
        android.os.storage.StorageManagerInternal $r35;
        java.lang.Throwable $r46;
        com.android.server.appop.AppOpsService$UidState r48;
        java.lang.StringBuilder r50;

        r0 := @this: com.android.server.appop.AppOpsService;

        $r6 = r0.<com.android.server.appop.AppOpsService: com.android.server.appop.AppOpsService$Constants mConstants>;

        $r5 = r0.<com.android.server.appop.AppOpsService: android.content.Context mContext>;

        $r7 = virtualinvoke $r5.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        virtualinvoke $r6.<com.android.server.appop.AppOpsService$Constants: void startMonitoring(android.content.ContentResolver)>($r7);

        $r9 = r0.<com.android.server.appop.AppOpsService: com.android.server.appop.HistoricalRegistry mHistoricalRegistry>;

        $r8 = r0.<com.android.server.appop.AppOpsService: android.content.Context mContext>;

        $r10 = virtualinvoke $r8.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        virtualinvoke $r9.<com.android.server.appop.HistoricalRegistry: void systemReady(android.content.ContentResolver)>($r10);

        $r11 = new android.content.IntentFilter;

        specialinvoke $r11.<android.content.IntentFilter: void <init>()>();

        virtualinvoke $r11.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.PACKAGE_REMOVED");

        virtualinvoke $r11.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.PACKAGE_REPLACED");

        virtualinvoke $r11.<android.content.IntentFilter: void addDataScheme(java.lang.String)>("package");

        $r14 = r0.<com.android.server.appop.AppOpsService: android.content.Context mContext>;

        $r13 = r0.<com.android.server.appop.AppOpsService: android.content.BroadcastReceiver mOnPackageUpdatedReceiver>;

        $r12 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r14.<android.content.Context: android.content.Intent registerReceiverAsUser(android.content.BroadcastReceiver,android.os.UserHandle,android.content.IntentFilter,java.lang.String,android.os.Handler)>($r13, $r12, $r11, null, null);

        entermonitor r0;

     label01:
        $r16 = r0.<com.android.server.appop.AppOpsService: android.util.SparseArray mUidStates>;

        $i2 = virtualinvoke $r16.<android.util.SparseArray: int size()>();

        i4 = $i2 - 1;

     label02:
        if i4 < 0 goto label16;

     label03:
        $r36 = r0.<com.android.server.appop.AppOpsService: android.util.SparseArray mUidStates>;

        i0 = virtualinvoke $r36.<android.util.SparseArray: int keyAt(int)>(i4);

        $r37 = r0.<com.android.server.appop.AppOpsService: android.util.SparseArray mUidStates>;

        $r38 = virtualinvoke $r37.<android.util.SparseArray: java.lang.Object valueAt(int)>(i4);

        r48 = (com.android.server.appop.AppOpsService$UidState) $r38;

        $i3 = r48.<com.android.server.appop.AppOpsService$UidState: int uid>;

        r1 = staticinvoke <com.android.server.appop.AppOpsService: java.lang.String[] getPackagesForUid(int)>($i3);

        $z2 = staticinvoke <com.android.internal.util.ArrayUtils: boolean isEmpty(java.lang.Object[])>(r1);

        if $z2 == 0 goto label05;

        virtualinvoke r48.<com.android.server.appop.AppOpsService$UidState: void clear()>();

        $r45 = r0.<com.android.server.appop.AppOpsService: android.util.SparseArray mUidStates>;

        virtualinvoke $r45.<android.util.SparseArray: void removeAt(int)>(i4);

        specialinvoke r0.<com.android.server.appop.AppOpsService: void scheduleFastWriteLocked()>();

     label04:
        goto label15;

     label05:
        r2 = r48.<com.android.server.appop.AppOpsService$UidState: android.util.ArrayMap pkgOps>;

     label06:
        if r2 != null goto label07;

        goto label15;

     label07:
        i1 = virtualinvoke r2.<android.util.ArrayMap: int size()>();

     label08:
        i5 = 0;

     label09:
        if i5 >= i1 goto label15;

     label10:
        $r39 = virtualinvoke r2.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i5);

        r3 = (java.lang.String) $r39;

        $z3 = staticinvoke <com.android.internal.util.ArrayUtils: boolean contains(java.lang.Object[],java.lang.Object)>(r1, r3);

        if $z3 != 0 goto label12;

     label11:
        r49 = "android.intent.action.PACKAGE_REMOVED";

        goto label13;

     label12:
        r49 = "android.intent.action.PACKAGE_REPLACED";

     label13:
        r4 = new com.android.server.appop._$$Lambda$AppOpsService$zN6prp9KCBI96qJ_QVmqGh_kpB8;

        specialinvoke r4.<com.android.server.appop._$$Lambda$AppOpsService$zN6prp9KCBI96qJ_QVmqGh_kpB8: void <init>(com.android.server.appop.AppOpsService,java.lang.String,java.lang.String,int)>(r0, r49, r3, i0);

        r50 = new java.lang.StringBuilder;

        specialinvoke r50.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Update app-ops uidState in case package ");

        virtualinvoke r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        virtualinvoke r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" changed");

        $r43 = virtualinvoke r50.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.SystemServerInitThreadPool: java.util.concurrent.Future submit(java.lang.Runnable,java.lang.String)>(r4, $r43);

     label14:
        i5 = i5 + 1;

        goto label09;

     label15:
        i4 = i4 + -1;

        goto label02;

     label16:
        exitmonitor r0;

     label17:
        $r17 = new android.content.IntentFilter;

        specialinvoke $r17.<android.content.IntentFilter: void <init>()>();

        virtualinvoke $r17.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.PACKAGES_UNSUSPENDED");

        virtualinvoke $r17.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.PACKAGES_SUSPENDED");

        $r19 = r0.<com.android.server.appop.AppOpsService: android.content.Context mContext>;

        $r18 = new com.android.server.appop.AppOpsService$3;

        specialinvoke $r18.<com.android.server.appop.AppOpsService$3: void <init>(com.android.server.appop.AppOpsService)>(r0);

        $r20 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r19.<android.content.Context: android.content.Intent registerReceiverAsUser(android.content.BroadcastReceiver,android.os.UserHandle,android.content.IntentFilter,java.lang.String,android.os.Handler)>($r18, $r20, $r17, null, null);

        $r22 = new android.content.IntentFilter;

        specialinvoke $r22.<android.content.IntentFilter: void <init>()>();

        virtualinvoke $r22.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.PACKAGE_ADDED");

        virtualinvoke $r22.<android.content.IntentFilter: void addDataScheme(java.lang.String)>("package");

        $r24 = r0.<com.android.server.appop.AppOpsService: android.content.Context mContext>;

        $r23 = new com.android.server.appop.AppOpsService$4;

        specialinvoke $r23.<com.android.server.appop.AppOpsService$4: void <init>(com.android.server.appop.AppOpsService)>(r0);

        virtualinvoke $r24.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r23, $r22);

        $r27 = r0.<com.android.server.appop.AppOpsService: android.os.Handler mHandler>;

        $r26 = new com.android.server.appop.AppOpsService$5;

        specialinvoke $r26.<com.android.server.appop.AppOpsService$5: void <init>(com.android.server.appop.AppOpsService)>(r0);

        virtualinvoke $r27.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r26, 300000L);

        $r28 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/content/pm/PackageManagerInternal;");

        $r30 = (android.content.pm.PackageManagerInternal) $r28;

        $r29 = new com.android.server.appop.AppOpsService$6;

        specialinvoke $r29.<com.android.server.appop.AppOpsService$6: void <init>(com.android.server.appop.AppOpsService)>(r0);

        virtualinvoke $r30.<android.content.pm.PackageManagerInternal: void setExternalSourcesPolicy(android.content.pm.PackageManagerInternal$ExternalSourcesPolicy)>($r29);

        $z1 = staticinvoke <android.os.storage.StorageManager: boolean hasIsolatedStorage()>();

        if $z1 != 0 goto label18;

        $r33 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/os/storage/StorageManagerInternal;");

        $r35 = (android.os.storage.StorageManagerInternal) $r33;

        $r34 = new com.android.server.appop.AppOpsService$7;

        specialinvoke $r34.<com.android.server.appop.AppOpsService$7: void <init>(com.android.server.appop.AppOpsService)>(r0);

        virtualinvoke $r35.<android.os.storage.StorageManagerInternal: void addExternalStoragePolicy(android.os.storage.StorageManagerInternal$ExternalStorageMountPolicy)>($r34);

     label18:
        $r31 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/app/ActivityManagerInternal;");

        $r32 = (android.app.ActivityManagerInternal) $r31;

        r0.<com.android.server.appop.AppOpsService: android.app.ActivityManagerInternal mActivityManagerInternal> = $r32;

        return;

     label19:
        $r46 := @caughtexception;

     label20:
        exitmonitor r0;

     label21:
        throw $r46;

        catch java.lang.Throwable from label01 to label02 with label19;
        catch java.lang.Throwable from label03 to label04 with label19;
        catch java.lang.Throwable from label05 to label06 with label19;
        catch java.lang.Throwable from label07 to label08 with label19;
        catch java.lang.Throwable from label10 to label11 with label19;
        catch java.lang.Throwable from label13 to label14 with label19;
        catch java.lang.Throwable from label16 to label17 with label19;
        catch java.lang.Throwable from label20 to label21 with label19;
    }

    public void uidRemoved(int)
    {
        com.android.server.appop.AppOpsService r0;
        int i0, $i1;
        android.util.SparseArray $r2, $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.appop.AppOpsService;

        i0 := @parameter0: int;

        entermonitor r0;

     label1:
        $r2 = r0.<com.android.server.appop.AppOpsService: android.util.SparseArray mUidStates>;

        $i1 = virtualinvoke $r2.<android.util.SparseArray: int indexOfKey(int)>(i0);

        if $i1 < 0 goto label2;

        $r3 = r0.<com.android.server.appop.AppOpsService: android.util.SparseArray mUidStates>;

        virtualinvoke $r3.<android.util.SparseArray: void remove(int)>(i0);

        specialinvoke r0.<com.android.server.appop.AppOpsService: void scheduleFastWriteLocked()>();

     label2:
        exitmonitor r0;

     label3:
        return;

     label4:
        $r4 := @caughtexception;

     label5:
        exitmonitor r0;

     label6:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void updateUidProcState(int, int, int)
    {
        com.android.server.appop.AppOpsService r0;
        com.android.server.appop.AppOpsService$UidState r1;
        int i0, i2, i3, i4, $i5, $i6, $i7, $i10, $i11, $i12, $i13, $i14, i15, i16, i17, i18, i23, i24, i25;
        long l1, $l8, l19, $l20, $l21, $l22;
        com.android.server.appop.AppOpsService$Op r2;
        int[] $r3;
        android.util.ArrayMap $r4, $r5, $r8, $r9, $r21;
        java.lang.Object $r6, $r7, $r10;
        com.android.server.appop.AppOpsService$AttributedOp $r11;
        byte $b9;
        com.android.server.appop.AppOpsService$Constants $r12, $r13, $r14;
        java.lang.Throwable $r15;
        android.os.Handler $r16;
        com.android.server.appop.'-$$Lambda$AppOpsService$CVMS-lLMRyZYA1tmqvyuOloKBu0' $r17;
        java.lang.Long $r18;
        java.lang.Integer $r19;
        android.os.Message $r20;
        com.android.server.appop.AppOpsService$Ops r22;
        com.android.internal.util.function.TriConsumer r24;

        r0 := @this: com.android.server.appop.AppOpsService;

        i15 := @parameter0: int;

        i16 := @parameter1: int;

        i17 := @parameter2: int;

        entermonitor r0;

     label01:
        r1 = specialinvoke r0.<com.android.server.appop.AppOpsService: com.android.server.appop.AppOpsService$UidState getUidStateLocked(int,boolean)>(i15, 1);

        $r3 = <com.android.server.appop.AppOpsService: int[] PROCESS_STATE_TO_UID_STATE>;

        i0 = $r3[i16];

     label02:
        if r1 == null goto label31;

     label03:
        $i5 = r1.<com.android.server.appop.AppOpsService$UidState: int pendingState>;

        if $i5 != i0 goto label04;

        $i14 = r1.<com.android.server.appop.AppOpsService$UidState: int pendingCapability>;

        if $i14 == i17 goto label31;

     label04:
        i18 = r1.<com.android.server.appop.AppOpsService$UidState: int pendingState>;

        r1.<com.android.server.appop.AppOpsService$UidState: int pendingState> = i0;

        r1.<com.android.server.appop.AppOpsService$UidState: int pendingCapability> = i17;

        $i6 = r1.<com.android.server.appop.AppOpsService$UidState: int state>;

        if i0 < $i6 goto label17;

     label05:
        if i0 > 500 goto label08;

     label06:
        $i13 = r1.<com.android.server.appop.AppOpsService$UidState: int state>;

        if $i13 <= 500 goto label08;

     label07:
        goto label17;

     label08:
        $i7 = r1.<com.android.server.appop.AppOpsService$UidState: int state>;

        if i0 != $i7 goto label10;

        $i12 = r1.<com.android.server.appop.AppOpsService$UidState: int capability>;

        if i17 == $i12 goto label10;

        specialinvoke r0.<com.android.server.appop.AppOpsService: void commitUidPendingStateLocked(com.android.server.appop.AppOpsService$UidState)>(r1);

     label09:
        goto label18;

     label10:
        $l8 = r1.<com.android.server.appop.AppOpsService$UidState: long pendingStateCommitTime>;

        $b9 = $l8 cmp 0L;

        if $b9 != 0 goto label18;

        $i10 = r1.<com.android.server.appop.AppOpsService$UidState: int state>;

        if $i10 > 200 goto label12;

        $r14 = r0.<com.android.server.appop.AppOpsService: com.android.server.appop.AppOpsService$Constants mConstants>;

        l19 = $r14.<com.android.server.appop.AppOpsService$Constants: long TOP_STATE_SETTLE_TIME>;

     label11:
        goto label15;

     label12:
        $i11 = r1.<com.android.server.appop.AppOpsService$UidState: int state>;

        if $i11 > 400 goto label14;

        $r13 = r0.<com.android.server.appop.AppOpsService: com.android.server.appop.AppOpsService$Constants mConstants>;

        l19 = $r13.<com.android.server.appop.AppOpsService$Constants: long FG_SERVICE_STATE_SETTLE_TIME>;

     label13:
        goto label15;

     label14:
        $r12 = r0.<com.android.server.appop.AppOpsService: com.android.server.appop.AppOpsService$Constants mConstants>;

        l19 = $r12.<com.android.server.appop.AppOpsService$Constants: long BG_STATE_SETTLE_TIME>;

     label15:
        $l20 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l1 = $l20 + l19;

        r1.<com.android.server.appop.AppOpsService$UidState: long pendingStateCommitTime> = l1;

        $r16 = r0.<com.android.server.appop.AppOpsService: android.os.Handler mHandler>;

        $r17 = <com.android.server.appop._$$Lambda$AppOpsService$CVMS_lLMRyZYA1tmqvyuOloKBu0: com.android.server.appop.'-$$Lambda$AppOpsService$CVMS-lLMRyZYA1tmqvyuOloKBu0' INSTANCE>;

        $l21 = l1 + 1L;

        $r18 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l21);

        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i15);

        r24 = (com.android.internal.util.function.TriConsumer) $r17;

        $r20 = staticinvoke <com.android.internal.util.function.pooled.PooledLambda: android.os.Message obtainMessage(com.android.internal.util.function.TriConsumer,java.lang.Object,java.lang.Object,java.lang.Object)>(r24, r0, $r18, $r19);

        $l22 = 1L + l19;

        virtualinvoke $r16.<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>($r20, $l22);

     label16:
        goto label18;

     label17:
        specialinvoke r0.<com.android.server.appop.AppOpsService: void commitUidPendingStateLocked(com.android.server.appop.AppOpsService$UidState)>(r1);

     label18:
        $r21 = r1.<com.android.server.appop.AppOpsService$UidState: android.util.ArrayMap pkgOps>;

        if $r21 == null goto label31;

        $r4 = r1.<com.android.server.appop.AppOpsService$UidState: android.util.ArrayMap pkgOps>;

        i2 = virtualinvoke $r4.<android.util.ArrayMap: int size()>();

     label19:
        i23 = 0;

     label20:
        if i23 >= i2 goto label31;

     label21:
        $r5 = r1.<com.android.server.appop.AppOpsService$UidState: android.util.ArrayMap pkgOps>;

        $r6 = virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i23);

        r22 = (com.android.server.appop.AppOpsService$Ops) $r6;

        i3 = virtualinvoke r22.<com.android.server.appop.AppOpsService$Ops: int size()>();

     label22:
        i24 = 0;

     label23:
        if i24 >= i3 goto label30;

     label24:
        $r7 = virtualinvoke r22.<com.android.server.appop.AppOpsService$Ops: java.lang.Object valueAt(int)>(i24);

        r2 = (com.android.server.appop.AppOpsService$Op) $r7;

        $r8 = r2.<com.android.server.appop.AppOpsService$Op: android.util.ArrayMap mAttributions>;

        i4 = virtualinvoke $r8.<android.util.ArrayMap: int size()>();

     label25:
        i25 = 0;

     label26:
        if i25 >= i4 goto label29;

     label27:
        $r9 = r2.<com.android.server.appop.AppOpsService$Op: android.util.ArrayMap mAttributions>;

        $r10 = virtualinvoke $r9.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i25);

        $r11 = (com.android.server.appop.AppOpsService$AttributedOp) $r10;

        virtualinvoke $r11.<com.android.server.appop.AppOpsService$AttributedOp: void onUidStateChanged(int)>(i0);

     label28:
        i25 = i25 + 1;

        goto label26;

     label29:
        i24 = i24 + 1;

        goto label23;

     label30:
        i23 = i23 + 1;

        goto label20;

     label31:
        exitmonitor r0;

     label32:
        return;

     label33:
        $r15 := @caughtexception;

     label34:
        exitmonitor r0;

     label35:
        throw $r15;

        catch java.lang.Throwable from label01 to label02 with label33;
        catch java.lang.Throwable from label03 to label04 with label33;
        catch java.lang.Throwable from label04 to label05 with label33;
        catch java.lang.Throwable from label06 to label07 with label33;
        catch java.lang.Throwable from label08 to label09 with label33;
        catch java.lang.Throwable from label10 to label11 with label33;
        catch java.lang.Throwable from label12 to label13 with label33;
        catch java.lang.Throwable from label14 to label15 with label33;
        catch java.lang.Throwable from label15 to label16 with label33;
        catch java.lang.Throwable from label17 to label18 with label33;
        catch java.lang.Throwable from label18 to label19 with label33;
        catch java.lang.Throwable from label21 to label22 with label33;
        catch java.lang.Throwable from label24 to label25 with label33;
        catch java.lang.Throwable from label27 to label28 with label33;
        catch java.lang.Throwable from label31 to label32 with label33;
        catch java.lang.Throwable from label34 to label35 with label33;
    }

    void writeState()
    {
        com.android.server.appop.AppOpsService r0;
        android.util.AtomicFile r1, $r12, $r145, $r146;
        java.io.FileOutputStream r2;
        com.android.internal.util.FastXmlSerializer r3;
        android.util.SparseArray r4, $r19, $r20, $r71, $r73;
        android.app.AppOpsManager$PackageOps r5;
        boolean z0, $z1;
        android.app.AppOpsManager$OpEntry r6;
        java.util.Iterator r7;
        java.lang.String r8, $r14, $r17, $r24, $r30, $r41, $r44, $r48, $r50, $r52, $r55, $r62, $r66, $r68, $r80, r114, r118, $r125, r143, r144;
        android.app.AppOpsManager$AttributedOpEntry r9;
        long l0, l2, l3, l4;
        int i1, $i5, $i6, $i7, $i8, $i15, $i16, $i17, $i18, $i19, $i20, $i21, i24, i25, i26, i27, i28, i29, i30, i31, i32, i33, i34, i35, $i37, i38, $i39, i40, i41, i42, i43, i44, i45, i46;
        android.util.ArraySet r10, r140, r142;
        android.app.AppOpsManager$OpEventProxyInfo r11;
        java.nio.charset.Charset $r13;
        java.lang.Boolean $r15;
        java.lang.Object $r23, $r28, $r35, $r37, $r38, $r60, $r72, $r74;
        java.util.Map $r32, $r36;
        java.util.Set $r33;
        java.lang.Long $r39;
        byte $b9, $b10, $b11, $b12, $b13, $b14;
        android.util.SparseIntArray $r75, r96, r97, r101;
        java.lang.Throwable $r76, $r77, $r81, $r82, $r83, $r84, $r85, $r86, r98, r113;
        java.util.List r87, r127;
        com.android.server.appop.AppOpsService$UidState r95;
        java.lang.StringBuilder r149;

        r0 := @this: com.android.server.appop.AppOpsService;

        r1 = r0.<com.android.server.appop.AppOpsService: android.util.AtomicFile mFile>;

        entermonitor r1;

     label001:
        $r12 = r0.<com.android.server.appop.AppOpsService: android.util.AtomicFile mFile>;

        r2 = virtualinvoke $r12.<android.util.AtomicFile: java.io.FileOutputStream startWrite()>();

     label002:
        r87 = virtualinvoke r0.<com.android.server.appop.AppOpsService: java.util.List getPackagesForOps(int[])>(null);

     label003:
        r3 = new com.android.internal.util.FastXmlSerializer;

     label004:
        specialinvoke r3.<com.android.internal.util.FastXmlSerializer: void <init>()>();

     label005:
        $r13 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r14 = virtualinvoke $r13.<java.nio.charset.Charset: java.lang.String name()>();

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>(r2, $r14);

     label006:
        $r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>(null, $r15);

     label007:
        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "app-ops");

     label008:
        $r17 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(1);

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "v", $r17);

     label009:
        entermonitor r0;

     label010:
        r4 = new android.util.SparseArray;

        $r19 = r0.<com.android.server.appop.AppOpsService: android.util.SparseArray mUidStates>;

        $i5 = virtualinvoke $r19.<android.util.SparseArray: int size()>();

        specialinvoke r4.<android.util.SparseArray: void <init>(int)>($i5);

        $r20 = r0.<com.android.server.appop.AppOpsService: android.util.SparseArray mUidStates>;

        i24 = virtualinvoke $r20.<android.util.SparseArray: int size()>();

     label011:
        i25 = 0;

     label012:
        if i25 >= i24 goto label022;

     label013:
        $r71 = r0.<com.android.server.appop.AppOpsService: android.util.SparseArray mUidStates>;

        $r72 = virtualinvoke $r71.<android.util.SparseArray: java.lang.Object valueAt(int)>(i25);

        r95 = (com.android.server.appop.AppOpsService$UidState) $r72;

        $r73 = r0.<com.android.server.appop.AppOpsService: android.util.SparseArray mUidStates>;

        i26 = virtualinvoke $r73.<android.util.SparseArray: int keyAt(int)>(i25);

        r96 = r95.<com.android.server.appop.AppOpsService$UidState: android.util.SparseIntArray opModes>;

     label014:
        if r96 == null goto label020;

     label015:
        $i18 = virtualinvoke r96.<android.util.SparseIntArray: int size()>();

        if $i18 <= 0 goto label020;

        r97 = new android.util.SparseIntArray;

        $i19 = virtualinvoke r96.<android.util.SparseIntArray: int size()>();

        specialinvoke r97.<android.util.SparseIntArray: void <init>(int)>($i19);

        virtualinvoke r4.<android.util.SparseArray: void put(int,java.lang.Object)>(i26, r97);

        i27 = virtualinvoke r96.<android.util.SparseIntArray: int size()>();

     label016:
        i28 = 0;

     label017:
        if i28 >= i27 goto label020;

     label018:
        $r74 = virtualinvoke r4.<android.util.SparseArray: java.lang.Object get(int)>(i26);

        $r75 = (android.util.SparseIntArray) $r74;

        $i20 = virtualinvoke r96.<android.util.SparseIntArray: int keyAt(int)>(i28);

        $i21 = virtualinvoke r96.<android.util.SparseIntArray: int valueAt(int)>(i28);

        virtualinvoke $r75.<android.util.SparseIntArray: void put(int,int)>($i20, $i21);

     label019:
        i28 = i28 + 1;

        goto label017;

     label020:
        i25 = i25 + 1;

        goto label012;

     label021:
        $r82 := @caughtexception;

        r98 = $r82;

        goto label110;

     label022:
        exitmonitor r0;

     label023:
        i29 = virtualinvoke r4.<android.util.SparseArray: int size()>();

     label024:
        i30 = 0;

     label025:
        if i30 >= i29 goto label044;

     label026:
        $r60 = virtualinvoke r4.<android.util.SparseArray: java.lang.Object valueAt(int)>(i30);

        r101 = (android.util.SparseIntArray) $r60;

     label027:
        if r101 == null goto label042;

     label028:
        $i16 = virtualinvoke r101.<android.util.SparseIntArray: int size()>();

        if $i16 <= 0 goto label042;

     label029:
        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "uid");

     label030:
        $i17 = virtualinvoke r4.<android.util.SparseArray: int keyAt(int)>(i30);

        $r62 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i17);

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "n", $r62);

     label031:
        i31 = virtualinvoke r101.<android.util.SparseIntArray: int size()>();

     label032:
        i32 = 0;

     label033:
        if i32 >= i31 goto label041;

     label034:
        i33 = virtualinvoke r101.<android.util.SparseIntArray: int keyAt(int)>(i32);

     label035:
        i34 = virtualinvoke r101.<android.util.SparseIntArray: int valueAt(int)>(i32);

     label036:
        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "op");

     label037:
        $r66 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i33);

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "n", $r66);

     label038:
        $r68 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i34);

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "m", $r68);

     label039:
        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "op");

     label040:
        i32 = i32 + 1;

        goto label033;

     label041:
        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "uid");

     label042:
        i30 = i30 + 1;

        goto label025;

     label043:
        $r84 := @caughtexception;

        r113 = $r84;

        goto label115;

     label044:
        if r87 == null goto label107;

        r114 = null;

        i35 = 0;

     label045:
        $i6 = interfaceinvoke r87.<java.util.List: int size()>();

        if i35 >= $i6 goto label104;

     label046:
        $r23 = interfaceinvoke r87.<java.util.List: java.lang.Object get(int)>(i35);

        r5 = (android.app.AppOpsManager$PackageOps) $r23;

     label047:
        $r24 = virtualinvoke r5.<android.app.AppOpsManager$PackageOps: java.lang.String getPackageName()>();

        z0 = virtualinvoke $r24.<java.lang.String: boolean equals(java.lang.Object)>(r114);

     label048:
        r118 = r114;

        if z0 != 0 goto label053;

        if r114 == null goto label050;

     label049:
        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "pkg");

     label050:
        r118 = virtualinvoke r5.<android.app.AppOpsManager$PackageOps: java.lang.String getPackageName()>();

     label051:
        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "pkg");

     label052:
        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "n", r118);

     label053:
        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "uid");

     label054:
        $i37 = virtualinvoke r5.<android.app.AppOpsManager$PackageOps: int getUid()>();

        $r125 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i37);

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "n", $r125);

     label055:
        r127 = virtualinvoke r5.<android.app.AppOpsManager$PackageOps: java.util.List getOps()>();

     label056:
        i38 = 0;

     label057:
        $i39 = interfaceinvoke r127.<java.util.List: int size()>();

        if i38 >= $i39 goto label102;

     label058:
        $r28 = interfaceinvoke r127.<java.util.List: java.lang.Object get(int)>(i38);

        r6 = (android.app.AppOpsManager$OpEntry) $r28;

     label059:
        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "op");

     label060:
        $i7 = virtualinvoke r6.<android.app.AppOpsManager$OpEntry: int getOp()>();

        $r30 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i7);

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "n", $r30);

     label061:
        i40 = virtualinvoke r6.<android.app.AppOpsManager$OpEntry: int getMode()>();

     label062:
        $i8 = virtualinvoke r6.<android.app.AppOpsManager$OpEntry: int getOp()>();

        i41 = staticinvoke <android.app.AppOpsManager: int opToDefaultMode(int)>($i8);

     label063:
        if i40 == i41 goto label065;

     label064:
        $i15 = virtualinvoke r6.<android.app.AppOpsManager$OpEntry: int getMode()>();

        $r55 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i15);

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "m", $r55);

     label065:
        $r32 = virtualinvoke r6.<android.app.AppOpsManager$OpEntry: java.util.Map getAttributedOpEntries()>();

        $r33 = interfaceinvoke $r32.<java.util.Map: java.util.Set keySet()>();

        r7 = interfaceinvoke $r33.<java.util.Set: java.util.Iterator iterator()>();

     label066:
        $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label100;

     label067:
        $r35 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.lang.String) $r35;

     label068:
        $r36 = virtualinvoke r6.<android.app.AppOpsManager$OpEntry: java.util.Map getAttributedOpEntries()>();

        $r37 = interfaceinvoke $r36.<java.util.Map: java.lang.Object get(java.lang.Object)>(r8);

        r9 = (android.app.AppOpsManager$AttributedOpEntry) $r37;

     label069:
        r140 = virtualinvoke r9.<android.app.AppOpsManager$AttributedOpEntry: android.util.ArraySet collectKeys()>();

     label070:
        i42 = virtualinvoke r140.<android.util.ArraySet: int size()>();

     label071:
        i43 = 0;

        r142 = r140;

     label072:
        if i43 >= i42 goto label099;

        i44 = i42;

     label073:
        $r38 = virtualinvoke r142.<android.util.ArraySet: java.lang.Object valueAt(int)>(i43);

        $r39 = (java.lang.Long) $r38;

        l0 = virtualinvoke $r39.<java.lang.Long: long longValue()>();

        i1 = staticinvoke <android.app.AppOpsManager: int extractUidStateFromKey(long)>(l0);

        i45 = staticinvoke <android.app.AppOpsManager: int extractFlagsFromKey(long)>(l0);

     label074:
        r10 = r142;

     label075:
        l2 = virtualinvoke r9.<android.app.AppOpsManager$AttributedOpEntry: long getLastAccessTime(int,int,int)>(i1, i1, i45);

        l3 = virtualinvoke r9.<android.app.AppOpsManager$AttributedOpEntry: long getLastRejectTime(int,int,int)>(i1, i1, i45);

        l4 = virtualinvoke r9.<android.app.AppOpsManager$AttributedOpEntry: long getLastDuration(int,int,int)>(i1, i1, i45);

        r11 = virtualinvoke r9.<android.app.AppOpsManager$AttributedOpEntry: android.app.AppOpsManager$OpEventProxyInfo getLastProxyInfo(int,int,int)>(i1, i1, i45);

     label076:
        $b9 = l2 cmp 0L;

        if $b9 > 0 goto label077;

        $b13 = l3 cmp 0L;

        if $b13 > 0 goto label077;

        $b14 = l4 cmp 0L;

        if $b14 > 0 goto label077;

        if r11 != null goto label077;

        goto label098;

     label077:
        i46 = -1;

        if r11 == null goto label080;

     label078:
        r143 = virtualinvoke r11.<android.app.AppOpsManager$OpEventProxyInfo: java.lang.String getPackageName()>();

        r144 = virtualinvoke r11.<android.app.AppOpsManager$OpEventProxyInfo: java.lang.String getAttributionTag()>();

        i46 = virtualinvoke r11.<android.app.AppOpsManager$OpEventProxyInfo: int getUid()>();

     label079:
        goto label081;

     label080:
        r143 = null;

        r144 = null;

     label081:
        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "st");

     label082:
        if r8 == null goto label084;

     label083:
        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "id", r8);

     label084:
        $r41 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0);

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "n", $r41);

     label085:
        $b10 = l2 cmp 0L;

        if $b10 <= 0 goto label087;

     label086:
        $r52 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l2);

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "t", $r52);

     label087:
        $b11 = l3 cmp 0L;

        if $b11 <= 0 goto label089;

     label088:
        $r50 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l3);

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "r", $r50);

     label089:
        $b12 = l4 cmp 0L;

        if $b12 <= 0 goto label091;

     label090:
        $r48 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l4);

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "d", $r48);

     label091:
        if r143 == null goto label093;

     label092:
        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "pp", r143);

     label093:
        if r144 == null goto label095;

     label094:
        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "pc", r144);

     label095:
        if i46 < 0 goto label097;

     label096:
        $r44 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i46);

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "pu", $r44);

     label097:
        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "st");

     label098:
        i43 = i43 + 1;

        r142 = r10;

        i42 = i44;

        goto label072;

     label099:
        goto label066;

     label100:
        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "op");

     label101:
        i38 = i38 + 1;

        goto label057;

     label102:
        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "uid");

     label103:
        i35 = i35 + 1;

        r114 = r118;

        goto label045;

     label104:
        if r114 == null goto label107;

     label105:
        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "pkg");

     label106:
        goto label107;

     label107:
        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "app-ops");

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: void endDocument()>();

        $r145 = r0.<com.android.server.appop.AppOpsService: android.util.AtomicFile mFile>;

        virtualinvoke $r145.<android.util.AtomicFile: void finishWrite(java.io.FileOutputStream)>(r2);

     label108:
        goto label116;

     label109:
        $r81 := @caughtexception;

        r98 = $r81;

     label110:
        exitmonitor r0;

     label111:
        throw r98;

     label112:
        $r86 := @caughtexception;

        r113 = $r86;

        goto label115;

     label113:
        $r76 := @caughtexception;

        r98 = $r76;

        goto label110;

     label114:
        $r85 := @caughtexception;

        r113 = $r85;

     label115:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("AppOps", "Failed to write state, restoring backup.", r113);

        $r146 = r0.<com.android.server.appop.AppOpsService: android.util.AtomicFile mFile>;

        virtualinvoke $r146.<android.util.AtomicFile: void failWrite(java.io.FileOutputStream)>(r2);

     label116:
        exitmonitor r1;

     label117:
        return;

     label118:
        $r83 := @caughtexception;

        goto label122;

     label119:
        $r77 := @caughtexception;

     label120:
        r149 = new java.lang.StringBuilder;

        specialinvoke r149.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r149.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to write state: ");

        virtualinvoke r149.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r77);

        $r80 = virtualinvoke r149.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AppOps", $r80);

        exitmonitor r1;

     label121:
        return;

     label122:
        exitmonitor r1;

     label123:
        throw $r83;

        catch java.io.IOException from label001 to label002 with label119;
        catch java.lang.Throwable from label001 to label002 with label118;
        catch java.lang.Throwable from label002 to label003 with label118;
        catch java.io.IOException from label003 to label004 with label114;
        catch java.lang.Throwable from label003 to label004 with label118;
        catch java.io.IOException from label004 to label005 with label114;
        catch java.lang.Throwable from label004 to label005 with label118;
        catch java.io.IOException from label005 to label006 with label114;
        catch java.lang.Throwable from label005 to label006 with label118;
        catch java.io.IOException from label006 to label007 with label114;
        catch java.lang.Throwable from label006 to label007 with label118;
        catch java.io.IOException from label007 to label008 with label114;
        catch java.lang.Throwable from label007 to label008 with label118;
        catch java.io.IOException from label008 to label009 with label114;
        catch java.lang.Throwable from label008 to label009 with label118;
        catch java.io.IOException from label009 to label010 with label114;
        catch java.lang.Throwable from label009 to label010 with label118;
        catch java.lang.Throwable from label010 to label011 with label109;
        catch java.lang.Throwable from label013 to label014 with label021;
        catch java.lang.Throwable from label015 to label016 with label021;
        catch java.lang.Throwable from label018 to label019 with label021;
        catch java.lang.Throwable from label022 to label023 with label109;
        catch java.io.IOException from label023 to label024 with label114;
        catch java.lang.Throwable from label023 to label024 with label118;
        catch java.io.IOException from label026 to label027 with label043;
        catch java.lang.Throwable from label026 to label027 with label118;
        catch java.io.IOException from label028 to label029 with label043;
        catch java.lang.Throwable from label028 to label029 with label118;
        catch java.io.IOException from label029 to label030 with label043;
        catch java.lang.Throwable from label029 to label030 with label118;
        catch java.io.IOException from label030 to label031 with label043;
        catch java.lang.Throwable from label030 to label031 with label118;
        catch java.io.IOException from label031 to label032 with label043;
        catch java.lang.Throwable from label031 to label032 with label118;
        catch java.io.IOException from label034 to label035 with label043;
        catch java.lang.Throwable from label034 to label035 with label118;
        catch java.io.IOException from label035 to label036 with label043;
        catch java.lang.Throwable from label035 to label036 with label118;
        catch java.io.IOException from label036 to label037 with label043;
        catch java.lang.Throwable from label036 to label037 with label118;
        catch java.io.IOException from label037 to label038 with label043;
        catch java.lang.Throwable from label037 to label038 with label118;
        catch java.io.IOException from label038 to label039 with label043;
        catch java.lang.Throwable from label038 to label039 with label118;
        catch java.io.IOException from label039 to label040 with label043;
        catch java.lang.Throwable from label039 to label040 with label118;
        catch java.io.IOException from label041 to label042 with label043;
        catch java.lang.Throwable from label041 to label042 with label118;
        catch java.io.IOException from label045 to label046 with label114;
        catch java.lang.Throwable from label045 to label046 with label118;
        catch java.io.IOException from label046 to label047 with label114;
        catch java.lang.Throwable from label046 to label047 with label118;
        catch java.io.IOException from label047 to label048 with label114;
        catch java.lang.Throwable from label047 to label048 with label118;
        catch java.io.IOException from label049 to label050 with label043;
        catch java.lang.Throwable from label049 to label050 with label118;
        catch java.io.IOException from label050 to label051 with label043;
        catch java.lang.Throwable from label050 to label051 with label118;
        catch java.io.IOException from label051 to label052 with label043;
        catch java.lang.Throwable from label051 to label052 with label118;
        catch java.io.IOException from label052 to label053 with label043;
        catch java.lang.Throwable from label052 to label053 with label118;
        catch java.io.IOException from label053 to label054 with label114;
        catch java.lang.Throwable from label053 to label054 with label118;
        catch java.io.IOException from label054 to label055 with label114;
        catch java.lang.Throwable from label054 to label055 with label118;
        catch java.io.IOException from label055 to label056 with label114;
        catch java.lang.Throwable from label055 to label056 with label118;
        catch java.io.IOException from label057 to label058 with label114;
        catch java.lang.Throwable from label057 to label058 with label118;
        catch java.io.IOException from label058 to label059 with label114;
        catch java.lang.Throwable from label058 to label059 with label118;
        catch java.io.IOException from label059 to label060 with label114;
        catch java.lang.Throwable from label059 to label060 with label118;
        catch java.io.IOException from label060 to label061 with label114;
        catch java.lang.Throwable from label060 to label061 with label118;
        catch java.io.IOException from label061 to label062 with label114;
        catch java.lang.Throwable from label061 to label062 with label118;
        catch java.io.IOException from label062 to label063 with label114;
        catch java.lang.Throwable from label062 to label063 with label118;
        catch java.io.IOException from label064 to label065 with label043;
        catch java.lang.Throwable from label064 to label065 with label118;
        catch java.io.IOException from label065 to label066 with label114;
        catch java.lang.Throwable from label065 to label066 with label118;
        catch java.io.IOException from label066 to label067 with label114;
        catch java.lang.Throwable from label066 to label067 with label118;
        catch java.io.IOException from label067 to label068 with label114;
        catch java.lang.Throwable from label067 to label068 with label118;
        catch java.io.IOException from label068 to label069 with label114;
        catch java.lang.Throwable from label068 to label069 with label118;
        catch java.io.IOException from label069 to label070 with label114;
        catch java.lang.Throwable from label069 to label070 with label118;
        catch java.io.IOException from label070 to label071 with label114;
        catch java.lang.Throwable from label070 to label071 with label118;
        catch java.io.IOException from label073 to label074 with label112;
        catch java.lang.Throwable from label073 to label074 with label118;
        catch java.io.IOException from label075 to label076 with label112;
        catch java.lang.Throwable from label075 to label076 with label118;
        catch java.io.IOException from label078 to label079 with label112;
        catch java.lang.Throwable from label078 to label079 with label118;
        catch java.io.IOException from label081 to label082 with label112;
        catch java.lang.Throwable from label081 to label082 with label118;
        catch java.io.IOException from label083 to label084 with label112;
        catch java.lang.Throwable from label083 to label084 with label118;
        catch java.io.IOException from label084 to label085 with label112;
        catch java.lang.Throwable from label084 to label085 with label118;
        catch java.io.IOException from label086 to label087 with label112;
        catch java.lang.Throwable from label086 to label087 with label118;
        catch java.io.IOException from label088 to label089 with label112;
        catch java.lang.Throwable from label088 to label089 with label118;
        catch java.io.IOException from label090 to label091 with label112;
        catch java.lang.Throwable from label090 to label091 with label118;
        catch java.io.IOException from label092 to label093 with label112;
        catch java.lang.Throwable from label092 to label093 with label118;
        catch java.io.IOException from label094 to label095 with label112;
        catch java.lang.Throwable from label094 to label095 with label118;
        catch java.io.IOException from label096 to label097 with label112;
        catch java.lang.Throwable from label096 to label097 with label118;
        catch java.io.IOException from label097 to label098 with label112;
        catch java.lang.Throwable from label097 to label098 with label118;
        catch java.io.IOException from label100 to label101 with label112;
        catch java.lang.Throwable from label100 to label101 with label118;
        catch java.io.IOException from label102 to label103 with label112;
        catch java.lang.Throwable from label102 to label103 with label118;
        catch java.io.IOException from label105 to label106 with label112;
        catch java.lang.Throwable from label105 to label106 with label118;
        catch java.io.IOException from label107 to label108 with label112;
        catch java.lang.Throwable from label107 to label108 with label118;
        catch java.lang.Throwable from label110 to label111 with label113;
        catch java.io.IOException from label111 to label112 with label112;
        catch java.lang.Throwable from label111 to label112 with label118;
        catch java.lang.Throwable from label115 to label116 with label118;
        catch java.lang.Throwable from label116 to label117 with label118;
        catch java.lang.Throwable from label120 to label121 with label118;
        catch java.lang.Throwable from label122 to label123 with label118;
    }
}
