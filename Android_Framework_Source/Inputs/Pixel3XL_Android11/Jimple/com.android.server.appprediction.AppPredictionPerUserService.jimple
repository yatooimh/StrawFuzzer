public class com.android.server.appprediction.AppPredictionPerUserService extends com.android.server.infra.AbstractPerUserSystemService implements com.android.server.appprediction.RemoteAppPredictionService$RemoteAppPredictionServiceCallbacks
{
    private static final java.lang.String PREDICT_USING_PEOPLE_SERVICE_PREFIX;
    private static final java.lang.String TAG;
    private com.android.server.appprediction.RemoteAppPredictionService mRemoteService;
    private final android.util.ArrayMap mSessionInfos;
    private boolean mZombie;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        <com.android.server.appprediction.AppPredictionPerUserService: java.lang.String PREDICT_USING_PEOPLE_SERVICE_PREFIX> = "predict_using_people_service_";

        $r0 = class "Lcom/android/server/appprediction/AppPredictionPerUserService;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.android.server.appprediction.AppPredictionPerUserService: java.lang.String TAG> = $r1;

        return;
    }

    protected void <init>(com.android.server.appprediction.AppPredictionManagerService, java.lang.Object, int)
    {
        com.android.server.appprediction.AppPredictionPerUserService r0;
        com.android.server.appprediction.AppPredictionManagerService r1;
        java.lang.Object r2;
        int i0;
        android.util.ArrayMap $r3;

        r0 := @this: com.android.server.appprediction.AppPredictionPerUserService;

        r1 := @parameter0: com.android.server.appprediction.AppPredictionManagerService;

        r2 := @parameter1: java.lang.Object;

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.server.infra.AbstractPerUserSystemService: void <init>(com.android.server.infra.AbstractMasterSystemService,java.lang.Object,int)>(r1, r2, i0);

        $r3 = new android.util.ArrayMap;

        specialinvoke $r3.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.appprediction.AppPredictionPerUserService: android.util.ArrayMap mSessionInfos> = $r3;

        return;
    }

    private void destroyAndRebindRemoteService()
    {
        com.android.server.appprediction.AppPredictionPerUserService r0;
        com.android.server.appprediction.RemoteAppPredictionService $r2, $r3, $r4, r9;
        boolean $z0, $z1;
        java.lang.String $r5, $r6;
        java.lang.Throwable $r7;
        java.lang.Object r8;

        r0 := @this: com.android.server.appprediction.AppPredictionPerUserService;

        $r2 = r0.<com.android.server.appprediction.AppPredictionPerUserService: com.android.server.appprediction.RemoteAppPredictionService mRemoteService>;

        if $r2 != null goto label1;

        return;

     label1:
        $z0 = virtualinvoke r0.<com.android.server.appprediction.AppPredictionPerUserService: boolean isDebug()>();

        if $z0 == 0 goto label2;

        $r6 = <com.android.server.appprediction.AppPredictionPerUserService: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>($r6, "Destroying the old remote service.");

     label2:
        $r3 = r0.<com.android.server.appprediction.AppPredictionPerUserService: com.android.server.appprediction.RemoteAppPredictionService mRemoteService>;

        virtualinvoke $r3.<com.android.server.appprediction.RemoteAppPredictionService: void destroy()>();

        r0.<com.android.server.appprediction.AppPredictionPerUserService: com.android.server.appprediction.RemoteAppPredictionService mRemoteService> = null;

        r8 = r0.<com.android.server.appprediction.AppPredictionPerUserService: java.lang.Object mLock>;

        entermonitor r8;

     label3:
        r0.<com.android.server.appprediction.AppPredictionPerUserService: boolean mZombie> = 1;

        exitmonitor r8;

     label4:
        r9 = specialinvoke r0.<com.android.server.appprediction.AppPredictionPerUserService: com.android.server.appprediction.RemoteAppPredictionService getRemoteServiceLocked()>();

        r0.<com.android.server.appprediction.AppPredictionPerUserService: com.android.server.appprediction.RemoteAppPredictionService mRemoteService> = r9;

        if r9 == null goto label6;

        $z1 = virtualinvoke r0.<com.android.server.appprediction.AppPredictionPerUserService: boolean isDebug()>();

        if $z1 == 0 goto label5;

        $r5 = <com.android.server.appprediction.AppPredictionPerUserService: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>($r5, "Rebinding to the new remote service.");

     label5:
        $r4 = r0.<com.android.server.appprediction.AppPredictionPerUserService: com.android.server.appprediction.RemoteAppPredictionService mRemoteService>;

        virtualinvoke $r4.<com.android.server.appprediction.RemoteAppPredictionService: void reconnect()>();

     label6:
        return;

     label7:
        $r7 := @caughtexception;

     label8:
        exitmonitor r8;

     label9:
        throw $r7;

        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    private com.android.server.appprediction.RemoteAppPredictionService getRemoteServiceLocked()
    {
        com.android.server.appprediction.AppPredictionPerUserService r0;
        com.android.server.appprediction.RemoteAppPredictionService $r1, $r2, $r3;
        android.content.Context $r4;
        com.android.server.infra.AbstractMasterSystemService $r5, $r7, $r9;
        com.android.server.appprediction.AppPredictionManagerService $r6, $r8, $r10;
        int $i0;
        boolean $z0, $z1, $z2;
        java.lang.String $r11, r12;
        android.content.ComponentName r13;

        r0 := @this: com.android.server.appprediction.AppPredictionPerUserService;

        $r1 = r0.<com.android.server.appprediction.AppPredictionPerUserService: com.android.server.appprediction.RemoteAppPredictionService mRemoteService>;

        if $r1 != null goto label3;

        r12 = virtualinvoke r0.<com.android.server.appprediction.AppPredictionPerUserService: java.lang.String getComponentNameLocked()>();

        if r12 != null goto label2;

        $r9 = r0.<com.android.server.appprediction.AppPredictionPerUserService: com.android.server.infra.AbstractMasterSystemService mMaster>;

        $r10 = (com.android.server.appprediction.AppPredictionManagerService) $r9;

        $z2 = $r10.<com.android.server.appprediction.AppPredictionManagerService: boolean verbose>;

        if $z2 == 0 goto label1;

        $r11 = <com.android.server.appprediction.AppPredictionPerUserService: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>($r11, "getRemoteServiceLocked(): not set");

     label1:
        return null;

     label2:
        r13 = staticinvoke <android.content.ComponentName: android.content.ComponentName unflattenFromString(java.lang.String)>(r12);

        $r3 = new com.android.server.appprediction.RemoteAppPredictionService;

        $r4 = virtualinvoke r0.<com.android.server.appprediction.AppPredictionPerUserService: android.content.Context getContext()>();

        $i0 = r0.<com.android.server.appprediction.AppPredictionPerUserService: int mUserId>;

        $r5 = r0.<com.android.server.appprediction.AppPredictionPerUserService: com.android.server.infra.AbstractMasterSystemService mMaster>;

        $r6 = (com.android.server.appprediction.AppPredictionManagerService) $r5;

        $z0 = virtualinvoke $r6.<com.android.server.appprediction.AppPredictionManagerService: boolean isBindInstantServiceAllowed()>();

        $r7 = r0.<com.android.server.appprediction.AppPredictionPerUserService: com.android.server.infra.AbstractMasterSystemService mMaster>;

        $r8 = (com.android.server.appprediction.AppPredictionManagerService) $r7;

        $z1 = $r8.<com.android.server.appprediction.AppPredictionManagerService: boolean verbose>;

        specialinvoke $r3.<com.android.server.appprediction.RemoteAppPredictionService: void <init>(android.content.Context,java.lang.String,android.content.ComponentName,int,com.android.server.appprediction.RemoteAppPredictionService$RemoteAppPredictionServiceCallbacks,boolean,boolean)>($r4, "android.service.appprediction.AppPredictionService", r13, $i0, r0, $z0, $z1);

        r0.<com.android.server.appprediction.AppPredictionPerUserService: com.android.server.appprediction.RemoteAppPredictionService mRemoteService> = $r3;

     label3:
        $r2 = r0.<com.android.server.appprediction.AppPredictionPerUserService: com.android.server.appprediction.RemoteAppPredictionService mRemoteService>;

        return $r2;
    }

    static void lambda$notifyAppTargetEventLocked$1(android.app.prediction.AppPredictionSessionId, android.app.prediction.AppTargetEvent, android.service.appprediction.IPredictionService) throws android.os.RemoteException
    {
        android.app.prediction.AppPredictionSessionId r0;
        android.app.prediction.AppTargetEvent r1;
        android.service.appprediction.IPredictionService r2;

        r0 := @parameter0: android.app.prediction.AppPredictionSessionId;

        r1 := @parameter1: android.app.prediction.AppTargetEvent;

        r2 := @parameter2: android.service.appprediction.IPredictionService;

        interfaceinvoke r2.<android.service.appprediction.IPredictionService: void notifyAppTargetEvent(android.app.prediction.AppPredictionSessionId,android.app.prediction.AppTargetEvent)>(r0, r1);

        return;
    }

    static void lambda$notifyLaunchLocationShownLocked$2(android.app.prediction.AppPredictionSessionId, java.lang.String, android.content.pm.ParceledListSlice, android.service.appprediction.IPredictionService) throws android.os.RemoteException
    {
        android.app.prediction.AppPredictionSessionId r0;
        java.lang.String r1;
        android.content.pm.ParceledListSlice r2;
        android.service.appprediction.IPredictionService r3;

        r0 := @parameter0: android.app.prediction.AppPredictionSessionId;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.content.pm.ParceledListSlice;

        r3 := @parameter3: android.service.appprediction.IPredictionService;

        interfaceinvoke r3.<android.service.appprediction.IPredictionService: void notifyLaunchLocationShown(android.app.prediction.AppPredictionSessionId,java.lang.String,android.content.pm.ParceledListSlice)>(r0, r1, r2);

        return;
    }

    static void lambda$onCreatePredictionSessionLocked$0(android.app.prediction.AppPredictionContext, android.app.prediction.AppPredictionSessionId, android.service.appprediction.IPredictionService) throws android.os.RemoteException
    {
        android.app.prediction.AppPredictionContext r0;
        android.app.prediction.AppPredictionSessionId r1;
        android.service.appprediction.IPredictionService r2;

        r0 := @parameter0: android.app.prediction.AppPredictionContext;

        r1 := @parameter1: android.app.prediction.AppPredictionSessionId;

        r2 := @parameter2: android.service.appprediction.IPredictionService;

        interfaceinvoke r2.<android.service.appprediction.IPredictionService: void onCreatePredictionSession(android.app.prediction.AppPredictionContext,android.app.prediction.AppPredictionSessionId)>(r0, r1);

        return;
    }

    static void lambda$onDestroyPredictionSessionLocked$7(android.app.prediction.AppPredictionSessionId, android.service.appprediction.IPredictionService) throws android.os.RemoteException
    {
        android.app.prediction.AppPredictionSessionId r0;
        android.service.appprediction.IPredictionService r1;

        r0 := @parameter0: android.app.prediction.AppPredictionSessionId;

        r1 := @parameter1: android.service.appprediction.IPredictionService;

        interfaceinvoke r1.<android.service.appprediction.IPredictionService: void onDestroyPredictionSession(android.app.prediction.AppPredictionSessionId)>(r0);

        return;
    }

    public static void lambda$ot809pjFOVEJ6shAJalMZ9_QhCo(com.android.server.appprediction.AppPredictionPerUserService, android.app.prediction.AppPredictionSessionId)
    {
        com.android.server.appprediction.AppPredictionPerUserService r0;
        android.app.prediction.AppPredictionSessionId r1;

        r0 := @parameter0: com.android.server.appprediction.AppPredictionPerUserService;

        r1 := @parameter1: android.app.prediction.AppPredictionSessionId;

        specialinvoke r0.<com.android.server.appprediction.AppPredictionPerUserService: void removeAppPredictionSessionInfo(android.app.prediction.AppPredictionSessionId)>(r1);

        return;
    }

    static void lambda$registerPredictionUpdatesLocked$4(android.app.prediction.AppPredictionSessionId, android.app.prediction.IPredictionCallback, android.service.appprediction.IPredictionService) throws android.os.RemoteException
    {
        android.app.prediction.AppPredictionSessionId r0;
        android.app.prediction.IPredictionCallback r1;
        android.service.appprediction.IPredictionService r2;

        r0 := @parameter0: android.app.prediction.AppPredictionSessionId;

        r1 := @parameter1: android.app.prediction.IPredictionCallback;

        r2 := @parameter2: android.service.appprediction.IPredictionService;

        interfaceinvoke r2.<android.service.appprediction.IPredictionService: void registerPredictionUpdates(android.app.prediction.AppPredictionSessionId,android.app.prediction.IPredictionCallback)>(r0, r1);

        return;
    }

    static void lambda$requestPredictionUpdateLocked$6(android.app.prediction.AppPredictionSessionId, android.service.appprediction.IPredictionService) throws android.os.RemoteException
    {
        android.app.prediction.AppPredictionSessionId r0;
        android.service.appprediction.IPredictionService r1;

        r0 := @parameter0: android.app.prediction.AppPredictionSessionId;

        r1 := @parameter1: android.service.appprediction.IPredictionService;

        interfaceinvoke r1.<android.service.appprediction.IPredictionService: void requestPredictionUpdate(android.app.prediction.AppPredictionSessionId)>(r0);

        return;
    }

    static void lambda$sortAppTargetsLocked$3(android.app.prediction.AppPredictionSessionId, android.content.pm.ParceledListSlice, android.app.prediction.IPredictionCallback, android.service.appprediction.IPredictionService) throws android.os.RemoteException
    {
        android.app.prediction.AppPredictionSessionId r0;
        android.content.pm.ParceledListSlice r1;
        android.app.prediction.IPredictionCallback r2;
        android.service.appprediction.IPredictionService r3;

        r0 := @parameter0: android.app.prediction.AppPredictionSessionId;

        r1 := @parameter1: android.content.pm.ParceledListSlice;

        r2 := @parameter2: android.app.prediction.IPredictionCallback;

        r3 := @parameter3: android.service.appprediction.IPredictionService;

        interfaceinvoke r3.<android.service.appprediction.IPredictionService: void sortAppTargets(android.app.prediction.AppPredictionSessionId,android.content.pm.ParceledListSlice,android.app.prediction.IPredictionCallback)>(r0, r1, r2);

        return;
    }

    static void lambda$unregisterPredictionUpdatesLocked$5(android.app.prediction.AppPredictionSessionId, android.app.prediction.IPredictionCallback, android.service.appprediction.IPredictionService) throws android.os.RemoteException
    {
        android.app.prediction.AppPredictionSessionId r0;
        android.app.prediction.IPredictionCallback r1;
        android.service.appprediction.IPredictionService r2;

        r0 := @parameter0: android.app.prediction.AppPredictionSessionId;

        r1 := @parameter1: android.app.prediction.IPredictionCallback;

        r2 := @parameter2: android.service.appprediction.IPredictionService;

        interfaceinvoke r2.<android.service.appprediction.IPredictionService: void unregisterPredictionUpdates(android.app.prediction.AppPredictionSessionId,android.app.prediction.IPredictionCallback)>(r0, r1);

        return;
    }

    private void removeAppPredictionSessionInfo(android.app.prediction.AppPredictionSessionId)
    {
        com.android.server.appprediction.AppPredictionPerUserService r0;
        boolean $z0;
        android.util.ArrayMap $r2;
        java.lang.StringBuilder $r4;
        java.lang.String $r7, r10;
        java.lang.Throwable $r8;
        android.app.prediction.AppPredictionSessionId r9;
        java.lang.Object r11;

        r0 := @this: com.android.server.appprediction.AppPredictionPerUserService;

        r9 := @parameter0: android.app.prediction.AppPredictionSessionId;

        $z0 = virtualinvoke r0.<com.android.server.appprediction.AppPredictionPerUserService: boolean isDebug()>();

        if $z0 == 0 goto label1;

        r10 = <com.android.server.appprediction.AppPredictionPerUserService: java.lang.String TAG>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("removeAppPredictionSessionInfo(): sessionId=");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r9);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>(r10, $r7);

     label1:
        r11 = r0.<com.android.server.appprediction.AppPredictionPerUserService: java.lang.Object mLock>;

        entermonitor r11;

     label2:
        $r2 = r0.<com.android.server.appprediction.AppPredictionPerUserService: android.util.ArrayMap mSessionInfos>;

        virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r9);

        exitmonitor r11;

     label3:
        return;

     label4:
        $r8 := @caughtexception;

     label5:
        exitmonitor r11;

     label6:
        throw $r8;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    private void resurrectSessionsLocked()
    {
        com.android.server.appprediction.AppPredictionPerUserService r0;
        int i0;
        java.lang.String r1, $r14;
        android.util.ArrayMap $r2, $r3;
        boolean $z0, $z1;
        java.util.Collection $r4;
        java.lang.Object $r5;
        com.android.server.appprediction.AppPredictionPerUserService$AppPredictionSessionInfo $r6;
        java.lang.StringBuilder $r7;
        com.android.server.appprediction.RemoteAppPredictionService $r9;
        java.util.Iterator r16;

        r0 := @this: com.android.server.appprediction.AppPredictionPerUserService;

        $r2 = r0.<com.android.server.appprediction.AppPredictionPerUserService: android.util.ArrayMap mSessionInfos>;

        i0 = virtualinvoke $r2.<android.util.ArrayMap: int size()>();

        $z0 = virtualinvoke r0.<com.android.server.appprediction.AppPredictionPerUserService: boolean isDebug()>();

        if $z0 == 0 goto label1;

        r1 = <com.android.server.appprediction.AppPredictionPerUserService: java.lang.String TAG>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Resurrecting remote service (");

        $r9 = r0.<com.android.server.appprediction.AppPredictionPerUserService: com.android.server.appprediction.RemoteAppPredictionService mRemoteService>;

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") on ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" sessions.");

        $r14 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>(r1, $r14);

     label1:
        $r3 = r0.<com.android.server.appprediction.AppPredictionPerUserService: android.util.ArrayMap mSessionInfos>;

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.util.Collection values()>();

        r16 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r5 = interfaceinvoke r16.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (com.android.server.appprediction.AppPredictionPerUserService$AppPredictionSessionInfo) $r5;

        virtualinvoke $r6.<com.android.server.appprediction.AppPredictionPerUserService$AppPredictionSessionInfo: void resurrectSessionLocked(com.android.server.appprediction.AppPredictionPerUserService)>(r0);

        goto label2;

     label3:
        return;
    }

    protected android.content.pm.ServiceInfo newServiceInfoLocked(android.content.ComponentName) throws android.content.pm.PackageManager$NameNotFoundException
    {
        com.android.server.appprediction.AppPredictionPerUserService r0;
        android.content.ComponentName r1;
        android.content.pm.IPackageManager $r2;
        int $i0;
        android.os.RemoteException $r3;
        java.lang.StringBuilder $r4;
        android.content.pm.PackageManager$NameNotFoundException $r7;
        java.lang.String $r8;
        android.content.pm.ServiceInfo r9;

        r0 := @this: com.android.server.appprediction.AppPredictionPerUserService;

        r1 := @parameter0: android.content.ComponentName;

     label1:
        $r2 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        $i0 = r0.<com.android.server.appprediction.AppPredictionPerUserService: int mUserId>;

        r9 = interfaceinvoke $r2.<android.content.pm.IPackageManager: android.content.pm.ServiceInfo getServiceInfo(android.content.ComponentName,int,int)>(r1, 128, $i0);

     label2:
        return r9;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not get service for ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r7 = new android.content.pm.PackageManager$NameNotFoundException;

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<android.content.pm.PackageManager$NameNotFoundException: void <init>(java.lang.String)>($r8);

        throw $r7;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void notifyAppTargetEventLocked(android.app.prediction.AppPredictionSessionId, android.app.prediction.AppTargetEvent)
    {
        com.android.server.appprediction.AppPredictionPerUserService r0;
        android.app.prediction.AppPredictionSessionId r1;
        android.app.prediction.AppTargetEvent r2;
        com.android.server.appprediction._$$Lambda$AppPredictionPerUserService$RCK9J9m8biTqRx8y1gTxgGKmKzQ $r3;

        r0 := @this: com.android.server.appprediction.AppPredictionPerUserService;

        r1 := @parameter0: android.app.prediction.AppPredictionSessionId;

        r2 := @parameter1: android.app.prediction.AppTargetEvent;

        $r3 = new com.android.server.appprediction._$$Lambda$AppPredictionPerUserService$RCK9J9m8biTqRx8y1gTxgGKmKzQ;

        specialinvoke $r3.<com.android.server.appprediction._$$Lambda$AppPredictionPerUserService$RCK9J9m8biTqRx8y1gTxgGKmKzQ: void <init>(android.app.prediction.AppPredictionSessionId,android.app.prediction.AppTargetEvent)>(r1, r2);

        virtualinvoke r0.<com.android.server.appprediction.AppPredictionPerUserService: boolean resolveService(android.app.prediction.AppPredictionSessionId,com.android.internal.infra.AbstractRemoteService$AsyncRequest,boolean)>(r1, $r3, 0);

        return;
    }

    public void notifyLaunchLocationShownLocked(android.app.prediction.AppPredictionSessionId, java.lang.String, android.content.pm.ParceledListSlice)
    {
        com.android.server.appprediction.AppPredictionPerUserService r0;
        android.app.prediction.AppPredictionSessionId r1;
        java.lang.String r2;
        android.content.pm.ParceledListSlice r3;
        com.android.server.appprediction._$$Lambda$AppPredictionPerUserService$FdN20WxsHWEvi2kXiLyIn6qmT_8 $r4;

        r0 := @this: com.android.server.appprediction.AppPredictionPerUserService;

        r1 := @parameter0: android.app.prediction.AppPredictionSessionId;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.content.pm.ParceledListSlice;

        $r4 = new com.android.server.appprediction._$$Lambda$AppPredictionPerUserService$FdN20WxsHWEvi2kXiLyIn6qmT_8;

        specialinvoke $r4.<com.android.server.appprediction._$$Lambda$AppPredictionPerUserService$FdN20WxsHWEvi2kXiLyIn6qmT_8: void <init>(android.app.prediction.AppPredictionSessionId,java.lang.String,android.content.pm.ParceledListSlice)>(r1, r2, r3);

        virtualinvoke r0.<com.android.server.appprediction.AppPredictionPerUserService: boolean resolveService(android.app.prediction.AppPredictionSessionId,com.android.internal.infra.AbstractRemoteService$AsyncRequest,boolean)>(r1, $r4, 0);

        return;
    }

    public void onConnectedStateChanged(boolean)
    {
        com.android.server.appprediction.AppPredictionPerUserService r0;
        boolean z0, $z1, $z2;
        com.android.server.appprediction.RemoteAppPredictionService $r1;
        java.lang.String $r2, $r6, r8;
        java.lang.StringBuilder $r3;
        java.lang.Throwable $r7;
        java.lang.Object r10;

        r0 := @this: com.android.server.appprediction.AppPredictionPerUserService;

        z0 := @parameter0: boolean;

        $z1 = virtualinvoke r0.<com.android.server.appprediction.AppPredictionPerUserService: boolean isDebug()>();

        if $z1 == 0 goto label01;

        r8 = <com.android.server.appprediction.AppPredictionPerUserService: java.lang.String TAG>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onConnectedStateChanged(): connected=");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>(r8, $r6);

     label01:
        if z0 == 0 goto label10;

        r10 = r0.<com.android.server.appprediction.AppPredictionPerUserService: java.lang.Object mLock>;

        entermonitor r10;

     label02:
        $z2 = r0.<com.android.server.appprediction.AppPredictionPerUserService: boolean mZombie>;

        if $z2 == 0 goto label05;

        $r1 = r0.<com.android.server.appprediction.AppPredictionPerUserService: com.android.server.appprediction.RemoteAppPredictionService mRemoteService>;

        if $r1 != null goto label04;

        $r2 = <com.android.server.appprediction.AppPredictionPerUserService: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>($r2, "Cannot resurrect sessions because remote service is null");

        exitmonitor r10;

     label03:
        return;

     label04:
        r0.<com.android.server.appprediction.AppPredictionPerUserService: boolean mZombie> = 0;

        specialinvoke r0.<com.android.server.appprediction.AppPredictionPerUserService: void resurrectSessionsLocked()>();

     label05:
        exitmonitor r10;

     label06:
        goto label10;

     label07:
        $r7 := @caughtexception;

     label08:
        exitmonitor r10;

     label09:
        throw $r7;

     label10:
        return;

        catch java.lang.Throwable from label02 to label03 with label07;
        catch java.lang.Throwable from label04 to label05 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label08 to label09 with label07;
    }

    public void onCreatePredictionSessionLocked(android.app.prediction.AppPredictionContext, android.app.prediction.AppPredictionSessionId)
    {
        com.android.server.appprediction.AppPredictionPerUserService r0;
        android.app.prediction.AppPredictionContext r1;
        android.app.prediction.AppPredictionSessionId r2;
        android.util.ArrayMap r3, $r5, $r7;
        boolean $z0, $z1, $z2;
        com.android.server.appprediction._$$Lambda$AppPredictionPerUserService$v7zo2hsRu873qxjO1iB_LLOf0s8 $r6;
        java.lang.StringBuilder $r9;
        java.lang.String $r11, $r14;
        com.android.server.appprediction.AppPredictionPerUserService$AppPredictionSessionInfo $r13;
        com.android.server.appprediction._$$Lambda$AppPredictionPerUserService$ot809pjFOVEJ6shAJalMZ9_QhCo $r15;

        r0 := @this: com.android.server.appprediction.AppPredictionPerUserService;

        r1 := @parameter0: android.app.prediction.AppPredictionContext;

        r2 := @parameter1: android.app.prediction.AppPredictionSessionId;

        $r5 = r0.<com.android.server.appprediction.AppPredictionPerUserService: android.util.ArrayMap mSessionInfos>;

        $z0 = virtualinvoke $r5.<android.util.ArrayMap: boolean containsKey(java.lang.Object)>(r2);

        if $z0 != 0 goto label1;

        r3 = r0.<com.android.server.appprediction.AppPredictionPerUserService: android.util.ArrayMap mSessionInfos>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("predict_using_people_service_");

        $r11 = virtualinvoke r1.<android.app.prediction.AppPredictionContext: java.lang.String getUiSurface()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = new com.android.server.appprediction.AppPredictionPerUserService$AppPredictionSessionInfo;

        $r14 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $z2 = staticinvoke <android.provider.DeviceConfig: boolean getBoolean(java.lang.String,java.lang.String,boolean)>("systemui", $r14, 0);

        $r15 = new com.android.server.appprediction._$$Lambda$AppPredictionPerUserService$ot809pjFOVEJ6shAJalMZ9_QhCo;

        specialinvoke $r15.<com.android.server.appprediction._$$Lambda$AppPredictionPerUserService$ot809pjFOVEJ6shAJalMZ9_QhCo: void <init>(com.android.server.appprediction.AppPredictionPerUserService)>(r0);

        specialinvoke $r13.<com.android.server.appprediction.AppPredictionPerUserService$AppPredictionSessionInfo: void <init>(android.app.prediction.AppPredictionSessionId,android.app.prediction.AppPredictionContext,boolean,java.util.function.Consumer)>(r2, r1, $z2, $r15);

        virtualinvoke r3.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r13);

     label1:
        $r6 = new com.android.server.appprediction._$$Lambda$AppPredictionPerUserService$v7zo2hsRu873qxjO1iB_LLOf0s8;

        specialinvoke $r6.<com.android.server.appprediction._$$Lambda$AppPredictionPerUserService$v7zo2hsRu873qxjO1iB_LLOf0s8: void <init>(android.app.prediction.AppPredictionContext,android.app.prediction.AppPredictionSessionId)>(r1, r2);

        $z1 = virtualinvoke r0.<com.android.server.appprediction.AppPredictionPerUserService: boolean resolveService(android.app.prediction.AppPredictionSessionId,com.android.internal.infra.AbstractRemoteService$AsyncRequest,boolean)>(r2, $r6, 1);

        if $z1 != 0 goto label2;

        $r7 = r0.<com.android.server.appprediction.AppPredictionPerUserService: android.util.ArrayMap mSessionInfos>;

        virtualinvoke $r7.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r2);

     label2:
        return;
    }

    public void onDestroyPredictionSessionLocked(android.app.prediction.AppPredictionSessionId)
    {
        com.android.server.appprediction.AppPredictionPerUserService r0;
        boolean z0;
        com.android.server.appprediction._$$Lambda$AppPredictionPerUserService$btX3WTDbAjwJIcfzJSydbcpQWp4 $r1;
        android.util.ArrayMap $r2;
        java.lang.Object $r3;
        android.app.prediction.AppPredictionSessionId r4;
        com.android.server.appprediction.AppPredictionPerUserService$AppPredictionSessionInfo r5;

        r0 := @this: com.android.server.appprediction.AppPredictionPerUserService;

        r4 := @parameter0: android.app.prediction.AppPredictionSessionId;

        $r1 = new com.android.server.appprediction._$$Lambda$AppPredictionPerUserService$btX3WTDbAjwJIcfzJSydbcpQWp4;

        specialinvoke $r1.<com.android.server.appprediction._$$Lambda$AppPredictionPerUserService$btX3WTDbAjwJIcfzJSydbcpQWp4: void <init>(android.app.prediction.AppPredictionSessionId)>(r4);

        z0 = virtualinvoke r0.<com.android.server.appprediction.AppPredictionPerUserService: boolean resolveService(android.app.prediction.AppPredictionSessionId,com.android.internal.infra.AbstractRemoteService$AsyncRequest,boolean)>(r4, $r1, 0);

        $r2 = r0.<com.android.server.appprediction.AppPredictionPerUserService: android.util.ArrayMap mSessionInfos>;

        $r3 = virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r4);

        r5 = (com.android.server.appprediction.AppPredictionPerUserService$AppPredictionSessionInfo) $r3;

        if z0 == 0 goto label1;

        if r5 == null goto label1;

        virtualinvoke r5.<com.android.server.appprediction.AppPredictionPerUserService$AppPredictionSessionInfo: void destroy()>();

     label1:
        return;
    }

    public void onFailureOrTimeout(boolean)
    {
        com.android.server.appprediction.AppPredictionPerUserService r0;
        boolean z0, $z1;
        java.lang.String r1, $r6;
        java.lang.StringBuilder $r3;

        r0 := @this: com.android.server.appprediction.AppPredictionPerUserService;

        z0 := @parameter0: boolean;

        $z1 = virtualinvoke r0.<com.android.server.appprediction.AppPredictionPerUserService: boolean isDebug()>();

        if $z1 == 0 goto label1;

        r1 = <com.android.server.appprediction.AppPredictionPerUserService: java.lang.String TAG>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onFailureOrTimeout(): timed out=");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>(r1, $r6);

     label1:
        return;
    }

    void onPackageRestartedLocked()
    {
        com.android.server.appprediction.AppPredictionPerUserService r0;
        boolean $z0;
        java.lang.String $r1;

        r0 := @this: com.android.server.appprediction.AppPredictionPerUserService;

        $z0 = virtualinvoke r0.<com.android.server.appprediction.AppPredictionPerUserService: boolean isDebug()>();

        if $z0 == 0 goto label1;

        $r1 = <com.android.server.appprediction.AppPredictionPerUserService: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>($r1, "onPackageRestartedLocked()");

     label1:
        specialinvoke r0.<com.android.server.appprediction.AppPredictionPerUserService: void destroyAndRebindRemoteService()>();

        return;
    }

    void onPackageUpdatedLocked()
    {
        com.android.server.appprediction.AppPredictionPerUserService r0;
        boolean $z0;
        java.lang.String $r1;

        r0 := @this: com.android.server.appprediction.AppPredictionPerUserService;

        $z0 = virtualinvoke r0.<com.android.server.appprediction.AppPredictionPerUserService: boolean isDebug()>();

        if $z0 == 0 goto label1;

        $r1 = <com.android.server.appprediction.AppPredictionPerUserService: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>($r1, "onPackageUpdatedLocked()");

     label1:
        specialinvoke r0.<com.android.server.appprediction.AppPredictionPerUserService: void destroyAndRebindRemoteService()>();

        return;
    }

    public void onServiceDied(com.android.server.appprediction.RemoteAppPredictionService)
    {
        com.android.server.appprediction.AppPredictionPerUserService r0;
        boolean $z0;
        java.lang.StringBuilder $r2;
        java.lang.String $r5, r8;
        java.lang.Throwable $r6;
        com.android.server.appprediction.RemoteAppPredictionService r7;
        java.lang.Object r9;

        r0 := @this: com.android.server.appprediction.AppPredictionPerUserService;

        r7 := @parameter0: com.android.server.appprediction.RemoteAppPredictionService;

        $z0 = virtualinvoke r0.<com.android.server.appprediction.AppPredictionPerUserService: boolean isDebug()>();

        if $z0 == 0 goto label1;

        r8 = <com.android.server.appprediction.AppPredictionPerUserService: java.lang.String TAG>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onServiceDied(): service=");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>(r8, $r5);

     label1:
        r9 = r0.<com.android.server.appprediction.AppPredictionPerUserService: java.lang.Object mLock>;

        entermonitor r9;

     label2:
        r0.<com.android.server.appprediction.AppPredictionPerUserService: boolean mZombie> = 1;

        exitmonitor r9;

     label3:
        return;

     label4:
        $r6 := @caughtexception;

     label5:
        exitmonitor r9;

     label6:
        throw $r6;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public volatile void onServiceDied(java.lang.Object)
    {
        com.android.server.appprediction.AppPredictionPerUserService r0;
        java.lang.Object r1;
        com.android.server.appprediction.RemoteAppPredictionService $r2;

        r0 := @this: com.android.server.appprediction.AppPredictionPerUserService;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.android.server.appprediction.RemoteAppPredictionService) r1;

        virtualinvoke r0.<com.android.server.appprediction.AppPredictionPerUserService: void onServiceDied(com.android.server.appprediction.RemoteAppPredictionService)>($r2);

        return;
    }

    public void registerPredictionUpdatesLocked(android.app.prediction.AppPredictionSessionId, android.app.prediction.IPredictionCallback)
    {
        com.android.server.appprediction.AppPredictionPerUserService r0;
        android.app.prediction.IPredictionCallback r1;
        boolean z0;
        com.android.server.appprediction._$$Lambda$AppPredictionPerUserService$hIxY55_713pKM_HDkA5K_YGqSFg $r2;
        android.util.ArrayMap $r3;
        java.lang.Object $r4;
        android.app.prediction.AppPredictionSessionId r5;
        com.android.server.appprediction.AppPredictionPerUserService$AppPredictionSessionInfo r6;

        r0 := @this: com.android.server.appprediction.AppPredictionPerUserService;

        r5 := @parameter0: android.app.prediction.AppPredictionSessionId;

        r1 := @parameter1: android.app.prediction.IPredictionCallback;

        $r2 = new com.android.server.appprediction._$$Lambda$AppPredictionPerUserService$hIxY55_713pKM_HDkA5K_YGqSFg;

        specialinvoke $r2.<com.android.server.appprediction._$$Lambda$AppPredictionPerUserService$hIxY55_713pKM_HDkA5K_YGqSFg: void <init>(android.app.prediction.AppPredictionSessionId,android.app.prediction.IPredictionCallback)>(r5, r1);

        z0 = virtualinvoke r0.<com.android.server.appprediction.AppPredictionPerUserService: boolean resolveService(android.app.prediction.AppPredictionSessionId,com.android.internal.infra.AbstractRemoteService$AsyncRequest,boolean)>(r5, $r2, 0);

        $r3 = r0.<com.android.server.appprediction.AppPredictionPerUserService: android.util.ArrayMap mSessionInfos>;

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r5);

        r6 = (com.android.server.appprediction.AppPredictionPerUserService$AppPredictionSessionInfo) $r4;

        if z0 == 0 goto label1;

        if r6 == null goto label1;

        virtualinvoke r6.<com.android.server.appprediction.AppPredictionPerUserService$AppPredictionSessionInfo: void addCallbackLocked(android.app.prediction.IPredictionCallback)>(r1);

     label1:
        return;
    }

    public void requestPredictionUpdateLocked(android.app.prediction.AppPredictionSessionId)
    {
        com.android.server.appprediction.AppPredictionPerUserService r0;
        android.app.prediction.AppPredictionSessionId r1;
        com.android.server.appprediction._$$Lambda$AppPredictionPerUserService$wBPAAKx3x_D9Gk2CZ1ESaD9wpZY $r2;

        r0 := @this: com.android.server.appprediction.AppPredictionPerUserService;

        r1 := @parameter0: android.app.prediction.AppPredictionSessionId;

        $r2 = new com.android.server.appprediction._$$Lambda$AppPredictionPerUserService$wBPAAKx3x_D9Gk2CZ1ESaD9wpZY;

        specialinvoke $r2.<com.android.server.appprediction._$$Lambda$AppPredictionPerUserService$wBPAAKx3x_D9Gk2CZ1ESaD9wpZY: void <init>(android.app.prediction.AppPredictionSessionId)>(r1);

        virtualinvoke r0.<com.android.server.appprediction.AppPredictionPerUserService: boolean resolveService(android.app.prediction.AppPredictionSessionId,com.android.internal.infra.AbstractRemoteService$AsyncRequest,boolean)>(r1, $r2, 1);

        return;
    }

    protected boolean resolveService(android.app.prediction.AppPredictionSessionId, com.android.internal.infra.AbstractRemoteService$AsyncRequest, boolean)
    {
        com.android.server.appprediction.AppPredictionPerUserService r0;
        java.lang.String r1, $r10;
        android.util.ArrayMap $r3;
        java.lang.Object $r4, $r5;
        boolean $z2, z3, z4, z5;
        android.os.RemoteException $r6;
        java.lang.StringBuilder $r7;
        android.app.prediction.AppPredictionSessionId r11;
        com.android.internal.infra.AbstractRemoteService$AsyncRequest r12;
        com.android.server.appprediction.AppPredictionPerUserService$AppPredictionSessionInfo r13;
        android.service.appprediction.IPredictionService r14;
        com.android.server.appprediction.RemoteAppPredictionService r16;

        r0 := @this: com.android.server.appprediction.AppPredictionPerUserService;

        r11 := @parameter0: android.app.prediction.AppPredictionSessionId;

        r12 := @parameter1: com.android.internal.infra.AbstractRemoteService$AsyncRequest;

        z3 := @parameter2: boolean;

        $r3 = r0.<com.android.server.appprediction.AppPredictionPerUserService: android.util.ArrayMap mSessionInfos>;

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r11);

        r13 = (com.android.server.appprediction.AppPredictionPerUserService$AppPredictionSessionInfo) $r4;

        if r13 != null goto label01;

        return 0;

     label01:
        $z2 = staticinvoke <com.android.server.appprediction.AppPredictionPerUserService$AppPredictionSessionInfo: boolean access$000(com.android.server.appprediction.AppPredictionPerUserService$AppPredictionSessionInfo)>(r13);

        if $z2 == 0 goto label07;

        $r5 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Lcom/android/server/people/PeopleServiceInternal;");

        r14 = (android.service.appprediction.IPredictionService) $r5;

        if r14 == null goto label05;

     label02:
        interfaceinvoke r12.<com.android.internal.infra.AbstractRemoteService$AsyncRequest: void run(android.os.IInterface)>(r14);

     label03:
        goto label05;

     label04:
        $r6 := @caughtexception;

        r1 = <com.android.server.appprediction.AppPredictionPerUserService: java.lang.String TAG>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to invoke service:");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r14);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>(r1, $r10, $r6);

     label05:
        z4 = 0;

        if r14 == null goto label06;

        z4 = 1;

     label06:
        return z4;

     label07:
        r16 = specialinvoke r0.<com.android.server.appprediction.AppPredictionPerUserService: com.android.server.appprediction.RemoteAppPredictionService getRemoteServiceLocked()>();

        if r16 == null goto label09;

        if z3 == 0 goto label08;

        virtualinvoke r16.<com.android.server.appprediction.RemoteAppPredictionService: void executeOnResolvedService(com.android.internal.infra.AbstractRemoteService$AsyncRequest)>(r12);

        goto label09;

     label08:
        virtualinvoke r16.<com.android.server.appprediction.RemoteAppPredictionService: void scheduleOnResolvedService(com.android.internal.infra.AbstractRemoteService$AsyncRequest)>(r12);

     label09:
        z5 = 0;

        if r16 == null goto label10;

        z5 = 1;

     label10:
        return z5;

        catch android.os.RemoteException from label02 to label03 with label04;
    }

    public void sortAppTargetsLocked(android.app.prediction.AppPredictionSessionId, android.content.pm.ParceledListSlice, android.app.prediction.IPredictionCallback)
    {
        com.android.server.appprediction.AppPredictionPerUserService r0;
        android.app.prediction.AppPredictionSessionId r1;
        android.content.pm.ParceledListSlice r2;
        android.app.prediction.IPredictionCallback r3;
        com.android.server.appprediction._$$Lambda$AppPredictionPerUserService$oqptY32VI0KEa_puMq0WysdjStM $r4;

        r0 := @this: com.android.server.appprediction.AppPredictionPerUserService;

        r1 := @parameter0: android.app.prediction.AppPredictionSessionId;

        r2 := @parameter1: android.content.pm.ParceledListSlice;

        r3 := @parameter2: android.app.prediction.IPredictionCallback;

        $r4 = new com.android.server.appprediction._$$Lambda$AppPredictionPerUserService$oqptY32VI0KEa_puMq0WysdjStM;

        specialinvoke $r4.<com.android.server.appprediction._$$Lambda$AppPredictionPerUserService$oqptY32VI0KEa_puMq0WysdjStM: void <init>(android.app.prediction.AppPredictionSessionId,android.content.pm.ParceledListSlice,android.app.prediction.IPredictionCallback)>(r1, r2, r3);

        virtualinvoke r0.<com.android.server.appprediction.AppPredictionPerUserService: boolean resolveService(android.app.prediction.AppPredictionSessionId,com.android.internal.infra.AbstractRemoteService$AsyncRequest,boolean)>(r1, $r4, 1);

        return;
    }

    public void unregisterPredictionUpdatesLocked(android.app.prediction.AppPredictionSessionId, android.app.prediction.IPredictionCallback)
    {
        com.android.server.appprediction.AppPredictionPerUserService r0;
        android.app.prediction.IPredictionCallback r1;
        boolean z0;
        com.android.server.appprediction._$$Lambda$AppPredictionPerUserService$tttnO1OB1EjDA90qcrp178GjlPs $r2;
        android.util.ArrayMap $r3;
        java.lang.Object $r4;
        android.app.prediction.AppPredictionSessionId r5;
        com.android.server.appprediction.AppPredictionPerUserService$AppPredictionSessionInfo r6;

        r0 := @this: com.android.server.appprediction.AppPredictionPerUserService;

        r5 := @parameter0: android.app.prediction.AppPredictionSessionId;

        r1 := @parameter1: android.app.prediction.IPredictionCallback;

        $r2 = new com.android.server.appprediction._$$Lambda$AppPredictionPerUserService$tttnO1OB1EjDA90qcrp178GjlPs;

        specialinvoke $r2.<com.android.server.appprediction._$$Lambda$AppPredictionPerUserService$tttnO1OB1EjDA90qcrp178GjlPs: void <init>(android.app.prediction.AppPredictionSessionId,android.app.prediction.IPredictionCallback)>(r5, r1);

        z0 = virtualinvoke r0.<com.android.server.appprediction.AppPredictionPerUserService: boolean resolveService(android.app.prediction.AppPredictionSessionId,com.android.internal.infra.AbstractRemoteService$AsyncRequest,boolean)>(r5, $r2, 0);

        $r3 = r0.<com.android.server.appprediction.AppPredictionPerUserService: android.util.ArrayMap mSessionInfos>;

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r5);

        r6 = (com.android.server.appprediction.AppPredictionPerUserService$AppPredictionSessionInfo) $r4;

        if z0 == 0 goto label1;

        if r6 == null goto label1;

        virtualinvoke r6.<com.android.server.appprediction.AppPredictionPerUserService$AppPredictionSessionInfo: void removeCallbackLocked(android.app.prediction.IPredictionCallback)>(r1);

     label1:
        return;
    }

    protected boolean updateLocked(boolean)
    {
        com.android.server.appprediction.AppPredictionPerUserService r0;
        boolean $z0, z1, z2;

        r0 := @this: com.android.server.appprediction.AppPredictionPerUserService;

        z1 := @parameter0: boolean;

        z2 = specialinvoke r0.<com.android.server.infra.AbstractPerUserSystemService: boolean updateLocked(boolean)>(z1);

        if z2 == 0 goto label1;

        $z0 = virtualinvoke r0.<com.android.server.appprediction.AppPredictionPerUserService: boolean isEnabledLocked()>();

        if $z0 != 0 goto label1;

        r0.<com.android.server.appprediction.AppPredictionPerUserService: com.android.server.appprediction.RemoteAppPredictionService mRemoteService> = null;

     label1:
        return z2;
    }
}
