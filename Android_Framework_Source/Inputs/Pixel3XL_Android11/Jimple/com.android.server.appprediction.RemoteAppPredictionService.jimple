public class com.android.server.appprediction.RemoteAppPredictionService extends com.android.internal.infra.AbstractMultiplePendingRequestsRemoteService
{
    private static final java.lang.String TAG;
    private static final long TIMEOUT_REMOTE_REQUEST_MILLIS;
    private final com.android.server.appprediction.RemoteAppPredictionService$RemoteAppPredictionServiceCallbacks mCallback;

    public void <init>(android.content.Context, java.lang.String, android.content.ComponentName, int, com.android.server.appprediction.RemoteAppPredictionService$RemoteAppPredictionServiceCallbacks, boolean, boolean)
    {
        com.android.server.appprediction.RemoteAppPredictionService r0;
        android.content.Context r1;
        java.lang.String r2;
        android.content.ComponentName r3;
        int i0, i1;
        com.android.server.appprediction.RemoteAppPredictionService$RemoteAppPredictionServiceCallbacks r4;
        boolean z0, z1;
        android.os.Handler r5;

        r0 := @this: com.android.server.appprediction.RemoteAppPredictionService;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.content.ComponentName;

        i0 := @parameter3: int;

        r4 := @parameter4: com.android.server.appprediction.RemoteAppPredictionService$RemoteAppPredictionServiceCallbacks;

        z0 := @parameter5: boolean;

        z1 := @parameter6: boolean;

        r5 = virtualinvoke r1.<android.content.Context: android.os.Handler getMainThreadHandler()>();

        if z0 == 0 goto label1;

        i1 = 4194304;

        goto label2;

     label1:
        i1 = 0;

     label2:
        specialinvoke r0.<com.android.internal.infra.AbstractMultiplePendingRequestsRemoteService: void <init>(android.content.Context,java.lang.String,android.content.ComponentName,int,com.android.internal.infra.AbstractRemoteService$VultureCallback,android.os.Handler,int,boolean,int)>(r1, r2, r3, i0, r4, r5, i1, z1, 1);

        r0.<com.android.server.appprediction.RemoteAppPredictionService: com.android.server.appprediction.RemoteAppPredictionService$RemoteAppPredictionServiceCallbacks mCallback> = r4;

        return;
    }

    public void executeOnResolvedService(com.android.internal.infra.AbstractRemoteService$AsyncRequest)
    {
        com.android.server.appprediction.RemoteAppPredictionService r0;
        com.android.internal.infra.AbstractRemoteService$AsyncRequest r1;

        r0 := @this: com.android.server.appprediction.RemoteAppPredictionService;

        r1 := @parameter0: com.android.internal.infra.AbstractRemoteService$AsyncRequest;

        virtualinvoke r0.<com.android.server.appprediction.RemoteAppPredictionService: void executeAsyncRequest(com.android.internal.infra.AbstractRemoteService$AsyncRequest)>(r1);

        return;
    }

    protected long getRemoteRequestMillis()
    {
        com.android.server.appprediction.RemoteAppPredictionService r0;

        r0 := @this: com.android.server.appprediction.RemoteAppPredictionService;

        return 2000L;
    }

    protected volatile android.os.IInterface getServiceInterface(android.os.IBinder)
    {
        com.android.server.appprediction.RemoteAppPredictionService r0;
        android.os.IBinder r1;
        android.service.appprediction.IPredictionService $r2;

        r0 := @this: com.android.server.appprediction.RemoteAppPredictionService;

        r1 := @parameter0: android.os.IBinder;

        $r2 = virtualinvoke r0.<com.android.server.appprediction.RemoteAppPredictionService: android.service.appprediction.IPredictionService getServiceInterface(android.os.IBinder)>(r1);

        return $r2;
    }

    protected android.service.appprediction.IPredictionService getServiceInterface(android.os.IBinder)
    {
        com.android.server.appprediction.RemoteAppPredictionService r0;
        android.os.IBinder r1;
        android.service.appprediction.IPredictionService $r2;

        r0 := @this: com.android.server.appprediction.RemoteAppPredictionService;

        r1 := @parameter0: android.os.IBinder;

        $r2 = staticinvoke <android.service.appprediction.IPredictionService$Stub: android.service.appprediction.IPredictionService asInterface(android.os.IBinder)>(r1);

        return $r2;
    }

    protected long getTimeoutIdleBindMillis()
    {
        com.android.server.appprediction.RemoteAppPredictionService r0;

        r0 := @this: com.android.server.appprediction.RemoteAppPredictionService;

        return 0L;
    }

    protected void handleOnConnectedStateChanged(boolean)
    {
        com.android.server.appprediction.RemoteAppPredictionService r0;
        boolean z0;
        com.android.server.appprediction.RemoteAppPredictionService$RemoteAppPredictionServiceCallbacks r1;

        r0 := @this: com.android.server.appprediction.RemoteAppPredictionService;

        z0 := @parameter0: boolean;

        r1 = r0.<com.android.server.appprediction.RemoteAppPredictionService: com.android.server.appprediction.RemoteAppPredictionService$RemoteAppPredictionServiceCallbacks mCallback>;

        if r1 == null goto label1;

        interfaceinvoke r1.<com.android.server.appprediction.RemoteAppPredictionService$RemoteAppPredictionServiceCallbacks: void onConnectedStateChanged(boolean)>(z0);

     label1:
        return;
    }

    public void reconnect()
    {
        com.android.server.appprediction.RemoteAppPredictionService r0;

        r0 := @this: com.android.server.appprediction.RemoteAppPredictionService;

        specialinvoke r0.<com.android.internal.infra.AbstractMultiplePendingRequestsRemoteService: void scheduleBind()>();

        return;
    }

    public void scheduleOnResolvedService(com.android.internal.infra.AbstractRemoteService$AsyncRequest)
    {
        com.android.server.appprediction.RemoteAppPredictionService r0;
        com.android.internal.infra.AbstractRemoteService$AsyncRequest r1;

        r0 := @this: com.android.server.appprediction.RemoteAppPredictionService;

        r1 := @parameter0: com.android.internal.infra.AbstractRemoteService$AsyncRequest;

        virtualinvoke r0.<com.android.server.appprediction.RemoteAppPredictionService: void scheduleAsyncRequest(com.android.internal.infra.AbstractRemoteService$AsyncRequest)>(r1);

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.appprediction.RemoteAppPredictionService: long TIMEOUT_REMOTE_REQUEST_MILLIS> = 2000L;

        <com.android.server.appprediction.RemoteAppPredictionService: java.lang.String TAG> = "RemoteAppPredictionService";

        return;
    }
}
