final class com.android.server.appwidget.AppWidgetServiceImpl$SecurityPolicy extends java.lang.Object
{
    final com.android.server.appwidget.AppWidgetServiceImpl this$0;

    private void <init>(com.android.server.appwidget.AppWidgetServiceImpl)
    {
        com.android.server.appwidget.AppWidgetServiceImpl$SecurityPolicy r0;
        com.android.server.appwidget.AppWidgetServiceImpl r1;

        r0 := @this: com.android.server.appwidget.AppWidgetServiceImpl$SecurityPolicy;

        r1 := @parameter0: com.android.server.appwidget.AppWidgetServiceImpl;

        r0.<com.android.server.appwidget.AppWidgetServiceImpl$SecurityPolicy: com.android.server.appwidget.AppWidgetServiceImpl this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    void <init>(com.android.server.appwidget.AppWidgetServiceImpl, com.android.server.appwidget.AppWidgetServiceImpl$1)
    {
        com.android.server.appwidget.AppWidgetServiceImpl$SecurityPolicy r0;
        com.android.server.appwidget.AppWidgetServiceImpl r1;
        com.android.server.appwidget.AppWidgetServiceImpl$1 r2;

        r0 := @this: com.android.server.appwidget.AppWidgetServiceImpl$SecurityPolicy;

        r1 := @parameter0: com.android.server.appwidget.AppWidgetServiceImpl;

        r2 := @parameter1: com.android.server.appwidget.AppWidgetServiceImpl$1;

        specialinvoke r0.<com.android.server.appwidget.AppWidgetServiceImpl$SecurityPolicy: void <init>(com.android.server.appwidget.AppWidgetServiceImpl)>(r1);

        return;
    }

    private boolean isCallerBindAppWidgetWhiteListedLocked(java.lang.String)
    {
        com.android.server.appwidget.AppWidgetServiceImpl$SecurityPolicy r0;
        int i0, $i1;
        com.android.server.appwidget.AppWidgetServiceImpl $r1, $r9, $r10, $r12;
        java.lang.StringBuilder $r2;
        java.lang.IllegalArgumentException $r7;
        java.lang.String $r8, r15;
        java.lang.Integer $r11;
        android.util.ArraySet $r13;
        boolean $z0;
        java.lang.Throwable $r14;
        java.lang.Object r16;
        android.util.Pair r17;

        r0 := @this: com.android.server.appwidget.AppWidgetServiceImpl$SecurityPolicy;

        r15 := @parameter0: java.lang.String;

        i0 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        $r1 = r0.<com.android.server.appwidget.AppWidgetServiceImpl$SecurityPolicy: com.android.server.appwidget.AppWidgetServiceImpl this$0>;

        $i1 = staticinvoke <com.android.server.appwidget.AppWidgetServiceImpl: int access$2400(com.android.server.appwidget.AppWidgetServiceImpl,java.lang.String,int)>($r1, r15, i0);

        if $i1 < 0 goto label8;

        $r9 = r0.<com.android.server.appwidget.AppWidgetServiceImpl$SecurityPolicy: com.android.server.appwidget.AppWidgetServiceImpl this$0>;

        r16 = staticinvoke <com.android.server.appwidget.AppWidgetServiceImpl: java.lang.Object access$200(com.android.server.appwidget.AppWidgetServiceImpl)>($r9);

        entermonitor r16;

     label1:
        $r10 = r0.<com.android.server.appwidget.AppWidgetServiceImpl$SecurityPolicy: com.android.server.appwidget.AppWidgetServiceImpl this$0>;

        staticinvoke <com.android.server.appwidget.AppWidgetServiceImpl: void access$2500(com.android.server.appwidget.AppWidgetServiceImpl,int)>($r10, i0);

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        r17 = staticinvoke <android.util.Pair: android.util.Pair create(java.lang.Object,java.lang.Object)>($r11, r15);

        $r12 = r0.<com.android.server.appwidget.AppWidgetServiceImpl$SecurityPolicy: com.android.server.appwidget.AppWidgetServiceImpl this$0>;

        $r13 = staticinvoke <com.android.server.appwidget.AppWidgetServiceImpl: android.util.ArraySet access$2600(com.android.server.appwidget.AppWidgetServiceImpl)>($r12);

        $z0 = virtualinvoke $r13.<android.util.ArraySet: boolean contains(java.lang.Object)>(r17);

        if $z0 == 0 goto label3;

        exitmonitor r16;

     label2:
        return 1;

     label3:
        exitmonitor r16;

     label4:
        return 0;

     label5:
        $r14 := @caughtexception;

     label6:
        exitmonitor r16;

     label7:
        throw $r14;

     label8:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No package ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for user ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    private boolean isParentOrProfile(int, int)
    {
        com.android.server.appwidget.AppWidgetServiceImpl$SecurityPolicy r0;
        int i0, i1, $i2;
        boolean z0;

        r0 := @this: com.android.server.appwidget.AppWidgetServiceImpl$SecurityPolicy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 = 1;

        if i0 != i1 goto label1;

        return 1;

     label1:
        $i2 = virtualinvoke r0.<com.android.server.appwidget.AppWidgetServiceImpl$SecurityPolicy: int getProfileParent(int)>(i1);

        if $i2 != i0 goto label2;

        goto label3;

     label2:
        z0 = 0;

     label3:
        return z0;
    }

    private boolean isProfileEnabled(int)
    {
        com.android.server.appwidget.AppWidgetServiceImpl$SecurityPolicy r0;
        int i0;
        long l1;
        boolean z0;
        com.android.server.appwidget.AppWidgetServiceImpl $r1;
        android.os.UserManager $r2;
        java.lang.Throwable $r3;
        android.content.pm.UserInfo r4;

        r0 := @this: com.android.server.appwidget.AppWidgetServiceImpl$SecurityPolicy;

        i0 := @parameter0: int;

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r1 = r0.<com.android.server.appwidget.AppWidgetServiceImpl$SecurityPolicy: com.android.server.appwidget.AppWidgetServiceImpl this$0>;

        $r2 = staticinvoke <com.android.server.appwidget.AppWidgetServiceImpl: android.os.UserManager access$2100(com.android.server.appwidget.AppWidgetServiceImpl)>($r1);

        r4 = virtualinvoke $r2.<android.os.UserManager: android.content.pm.UserInfo getUserInfo(int)>(i0);

     label2:
        if r4 == null goto label6;

     label3:
        z0 = virtualinvoke r4.<android.content.pm.UserInfo: boolean isEnabled()>();

     label4:
        if z0 != 0 goto label5;

        goto label6;

     label5:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return 1;

     label6:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return 0;

     label7:
        $r3 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    public boolean canAccessAppWidget(com.android.server.appwidget.AppWidgetServiceImpl$Widget, int, java.lang.String)
    {
        com.android.server.appwidget.AppWidgetServiceImpl$SecurityPolicy r0;
        com.android.server.appwidget.AppWidgetServiceImpl$Widget r1;
        java.lang.String r2;
        com.android.server.appwidget.AppWidgetServiceImpl$Host $r3, $r6, $r7;
        boolean $z0, $z1, $z2;
        com.android.server.appwidget.AppWidgetServiceImpl$Provider $r4, $r5, $r10, $r11;
        int $i0, $i1, $i2, i3, i4;
        com.android.server.appwidget.AppWidgetServiceImpl $r8;
        android.content.Context $r9;

        r0 := @this: com.android.server.appwidget.AppWidgetServiceImpl$SecurityPolicy;

        r1 := @parameter0: com.android.server.appwidget.AppWidgetServiceImpl$Widget;

        i3 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        $r3 = r1.<com.android.server.appwidget.AppWidgetServiceImpl$Widget: com.android.server.appwidget.AppWidgetServiceImpl$Host host>;

        $z0 = virtualinvoke r0.<com.android.server.appwidget.AppWidgetServiceImpl$SecurityPolicy: boolean isHostInPackageForUid(com.android.server.appwidget.AppWidgetServiceImpl$Host,int,java.lang.String)>($r3, i3, r2);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $r4 = r1.<com.android.server.appwidget.AppWidgetServiceImpl$Widget: com.android.server.appwidget.AppWidgetServiceImpl$Provider provider>;

        $z1 = virtualinvoke r0.<com.android.server.appwidget.AppWidgetServiceImpl$SecurityPolicy: boolean isProviderInPackageForUid(com.android.server.appwidget.AppWidgetServiceImpl$Provider,int,java.lang.String)>($r4, i3, r2);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        $r6 = r1.<com.android.server.appwidget.AppWidgetServiceImpl$Widget: com.android.server.appwidget.AppWidgetServiceImpl$Host host>;

        $r5 = r1.<com.android.server.appwidget.AppWidgetServiceImpl$Widget: com.android.server.appwidget.AppWidgetServiceImpl$Provider provider>;

        $z2 = virtualinvoke r0.<com.android.server.appwidget.AppWidgetServiceImpl$SecurityPolicy: boolean isHostAccessingProvider(com.android.server.appwidget.AppWidgetServiceImpl$Host,com.android.server.appwidget.AppWidgetServiceImpl$Provider,int,java.lang.String)>($r6, $r5, i3, r2);

        if $z2 == 0 goto label3;

        return 1;

     label3:
        i4 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i3);

        $r7 = r1.<com.android.server.appwidget.AppWidgetServiceImpl$Widget: com.android.server.appwidget.AppWidgetServiceImpl$Host host>;

        $i0 = virtualinvoke $r7.<com.android.server.appwidget.AppWidgetServiceImpl$Host: int getUserId()>();

        if $i0 == i4 goto label4;

        $r10 = r1.<com.android.server.appwidget.AppWidgetServiceImpl$Widget: com.android.server.appwidget.AppWidgetServiceImpl$Provider provider>;

        if $r10 == null goto label5;

        $r11 = r1.<com.android.server.appwidget.AppWidgetServiceImpl$Widget: com.android.server.appwidget.AppWidgetServiceImpl$Provider provider>;

        $i2 = virtualinvoke $r11.<com.android.server.appwidget.AppWidgetServiceImpl$Provider: int getUserId()>();

        if $i2 != i4 goto label5;

     label4:
        $r8 = r0.<com.android.server.appwidget.AppWidgetServiceImpl$SecurityPolicy: com.android.server.appwidget.AppWidgetServiceImpl this$0>;

        $r9 = staticinvoke <com.android.server.appwidget.AppWidgetServiceImpl: android.content.Context access$1400(com.android.server.appwidget.AppWidgetServiceImpl)>($r8);

        $i1 = virtualinvoke $r9.<android.content.Context: int checkCallingPermission(java.lang.String)>("android.permission.BIND_APPWIDGET");

        if $i1 != 0 goto label5;

        return 1;

     label5:
        return 0;
    }

    public void enforceCallFromPackage(java.lang.String)
    {
        com.android.server.appwidget.AppWidgetServiceImpl$SecurityPolicy r0;
        java.lang.String r1;
        com.android.server.appwidget.AppWidgetServiceImpl $r2;
        android.app.AppOpsManager $r3;
        int $i0;

        r0 := @this: com.android.server.appwidget.AppWidgetServiceImpl$SecurityPolicy;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.appwidget.AppWidgetServiceImpl$SecurityPolicy: com.android.server.appwidget.AppWidgetServiceImpl this$0>;

        $r3 = staticinvoke <com.android.server.appwidget.AppWidgetServiceImpl: android.app.AppOpsManager access$2300(com.android.server.appwidget.AppWidgetServiceImpl)>($r2);

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke $r3.<android.app.AppOpsManager: void checkPackage(int,java.lang.String)>($i0, r1);

        return;
    }

    public void enforceModifyAppWidgetBindPermissions(java.lang.String)
    {
        com.android.server.appwidget.AppWidgetServiceImpl$SecurityPolicy r0;
        java.lang.String r1, $r8;
        android.content.Context r2;
        com.android.server.appwidget.AppWidgetServiceImpl $r4;
        java.lang.StringBuilder $r5;

        r0 := @this: com.android.server.appwidget.AppWidgetServiceImpl$SecurityPolicy;

        r1 := @parameter0: java.lang.String;

        $r4 = r0.<com.android.server.appwidget.AppWidgetServiceImpl$SecurityPolicy: com.android.server.appwidget.AppWidgetServiceImpl this$0>;

        r2 = staticinvoke <com.android.server.appwidget.AppWidgetServiceImpl: android.content.Context access$1400(com.android.server.appwidget.AppWidgetServiceImpl)>($r4);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("hasBindAppWidgetPermission packageName=");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.MODIFY_APPWIDGET_BIND_PERMISSIONS", $r8);

        return;
    }

    public void enforceServiceExistsAndRequiresBindRemoteViewsPermission(android.content.ComponentName, int)
    {
        com.android.server.appwidget.AppWidgetServiceImpl$SecurityPolicy r0;
        int i0;
        long l1;
        com.android.server.appwidget.AppWidgetServiceImpl $r1;
        android.content.pm.IPackageManager $r2;
        java.lang.String $r7, $r8, $r9, $r16;
        boolean $z0;
        java.lang.Throwable $r17;
        android.os.RemoteException $r18;
        android.content.ComponentName r19;
        android.content.pm.ServiceInfo r20;
        java.lang.SecurityException r21, r23;
        java.lang.StringBuilder r22, r24;

        r0 := @this: com.android.server.appwidget.AppWidgetServiceImpl$SecurityPolicy;

        r19 := @parameter0: android.content.ComponentName;

        i0 := @parameter1: int;

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r1 = r0.<com.android.server.appwidget.AppWidgetServiceImpl$SecurityPolicy: com.android.server.appwidget.AppWidgetServiceImpl this$0>;

        $r2 = staticinvoke <com.android.server.appwidget.AppWidgetServiceImpl: android.content.pm.IPackageManager access$2200(com.android.server.appwidget.AppWidgetServiceImpl)>($r1);

        r20 = interfaceinvoke $r2.<android.content.pm.IPackageManager: android.content.pm.ServiceInfo getServiceInfo(android.content.ComponentName,int,int)>(r19, 4096, i0);

     label2:
        if r20 == null goto label6;

     label3:
        $r9 = "android.permission.BIND_REMOTEVIEWS";

        $r8 = r20.<android.content.pm.ServiceInfo: java.lang.String permission>;

        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z0 == 0 goto label5;

     label4:
        goto label9;

     label5:
        r21 = new java.lang.SecurityException;

        r22 = new java.lang.StringBuilder;

        specialinvoke r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Service ");

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r19);

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in user ");

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("does not require ");

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.BIND_REMOTEVIEWS");

        $r16 = virtualinvoke r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r21.<java.lang.SecurityException: void <init>(java.lang.String)>($r16);

        throw r21;

     label6:
        r23 = new java.lang.SecurityException;

        r24 = new java.lang.StringBuilder;

        specialinvoke r24.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Service ");

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r19);

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not installed for user ");

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r23.<java.lang.SecurityException: void <init>(java.lang.String)>($r7);

        throw r23;

     label7:
        $r17 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r17;

     label8:
        $r18 := @caughtexception;

     label9:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return;

        catch android.os.RemoteException from label1 to label2 with label8;
        catch java.lang.Throwable from label1 to label2 with label7;
        catch android.os.RemoteException from label3 to label4 with label8;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch android.os.RemoteException from label5 to label6 with label8;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch android.os.RemoteException from label6 to label7 with label8;
        catch java.lang.Throwable from label6 to label7 with label7;
    }

    public int[] getEnabledGroupProfileIds(int)
    {
        com.android.server.appwidget.AppWidgetServiceImpl$SecurityPolicy r0;
        long l0;
        com.android.server.appwidget.AppWidgetServiceImpl $r1;
        android.os.UserManager $r2;
        java.lang.Throwable $r3;
        int i1, i2;
        int[] r4;

        r0 := @this: com.android.server.appwidget.AppWidgetServiceImpl$SecurityPolicy;

        i1 := @parameter0: int;

        i2 = virtualinvoke r0.<com.android.server.appwidget.AppWidgetServiceImpl$SecurityPolicy: int getGroupParent(int)>(i1);

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r1 = r0.<com.android.server.appwidget.AppWidgetServiceImpl$SecurityPolicy: com.android.server.appwidget.AppWidgetServiceImpl this$0>;

        $r2 = staticinvoke <com.android.server.appwidget.AppWidgetServiceImpl: android.os.UserManager access$2100(com.android.server.appwidget.AppWidgetServiceImpl)>($r1);

        r4 = virtualinvoke $r2.<android.os.UserManager: int[] getEnabledProfileIds(int)>(i2);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return r4;

     label3:
        $r3 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public int getGroupParent(int)
    {
        com.android.server.appwidget.AppWidgetServiceImpl$SecurityPolicy r0, $r2;
        int i0, i1;
        com.android.server.appwidget.AppWidgetServiceImpl $r1;

        r0 := @this: com.android.server.appwidget.AppWidgetServiceImpl$SecurityPolicy;

        i1 := @parameter0: int;

        $r1 = r0.<com.android.server.appwidget.AppWidgetServiceImpl$SecurityPolicy: com.android.server.appwidget.AppWidgetServiceImpl this$0>;

        $r2 = staticinvoke <com.android.server.appwidget.AppWidgetServiceImpl: com.android.server.appwidget.AppWidgetServiceImpl$SecurityPolicy access$2800(com.android.server.appwidget.AppWidgetServiceImpl)>($r1);

        i0 = virtualinvoke $r2.<com.android.server.appwidget.AppWidgetServiceImpl$SecurityPolicy: int getProfileParent(int)>(i1);

        if i0 == -10 goto label1;

        i1 = i0;

        goto label1;

     label1:
        return i1;
    }

    public int getProfileParent(int)
    {
        com.android.server.appwidget.AppWidgetServiceImpl$SecurityPolicy r0;
        long l0;
        com.android.server.appwidget.AppWidgetServiceImpl $r1;
        android.os.UserManager $r2;
        android.os.UserHandle $r3;
        java.lang.Throwable $r4;
        int i1, i2;
        android.content.pm.UserInfo r5;

        r0 := @this: com.android.server.appwidget.AppWidgetServiceImpl$SecurityPolicy;

        i1 := @parameter0: int;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r1 = r0.<com.android.server.appwidget.AppWidgetServiceImpl$SecurityPolicy: com.android.server.appwidget.AppWidgetServiceImpl this$0>;

        $r2 = staticinvoke <com.android.server.appwidget.AppWidgetServiceImpl: android.os.UserManager access$2100(com.android.server.appwidget.AppWidgetServiceImpl)>($r1);

        r5 = virtualinvoke $r2.<android.os.UserManager: android.content.pm.UserInfo getProfileParent(int)>(i1);

     label2:
        if r5 == null goto label5;

     label3:
        $r3 = virtualinvoke r5.<android.content.pm.UserInfo: android.os.UserHandle getUserHandle()>();

        i2 = virtualinvoke $r3.<android.os.UserHandle: int getIdentifier()>();

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return i2;

     label5:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return -10;

     label6:
        $r4 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
    }

    public boolean hasCallerBindPermissionOrBindWhiteListedLocked(java.lang.String)
    {
        com.android.server.appwidget.AppWidgetServiceImpl$SecurityPolicy r0;
        java.lang.String r1;
        com.android.server.appwidget.AppWidgetServiceImpl $r3;
        android.content.Context $r4;
        java.lang.Throwable $r5;
        boolean $z0;

        r0 := @this: com.android.server.appwidget.AppWidgetServiceImpl$SecurityPolicy;

        r1 := @parameter0: java.lang.String;

     label1:
        $r3 = r0.<com.android.server.appwidget.AppWidgetServiceImpl$SecurityPolicy: com.android.server.appwidget.AppWidgetServiceImpl this$0>;

        $r4 = staticinvoke <com.android.server.appwidget.AppWidgetServiceImpl: android.content.Context access$1400(com.android.server.appwidget.AppWidgetServiceImpl)>($r3);

        virtualinvoke $r4.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BIND_APPWIDGET", null);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        $z0 = specialinvoke r0.<com.android.server.appwidget.AppWidgetServiceImpl$SecurityPolicy: boolean isCallerBindAppWidgetWhiteListedLocked(java.lang.String)>(r1);

        if $z0 != 0 goto label4;

        return 0;

     label4:
        return 1;

        catch java.lang.SecurityException from label1 to label2 with label3;
    }

    public boolean isCallerInstantAppLocked()
    {
        com.android.server.appwidget.AppWidgetServiceImpl$SecurityPolicy r0;
        int i0, $i2;
        long l1;
        boolean z0, $z1;
        com.android.server.appwidget.AppWidgetServiceImpl $r1, $r3;
        android.content.pm.IPackageManager $r2, $r4;
        java.lang.String $r5;
        java.lang.Throwable $r6;
        android.os.RemoteException $r7;
        java.lang.String[] r8;

        r0 := @this: com.android.server.appwidget.AppWidgetServiceImpl$SecurityPolicy;

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r1 = r0.<com.android.server.appwidget.AppWidgetServiceImpl$SecurityPolicy: com.android.server.appwidget.AppWidgetServiceImpl this$0>;

        $r2 = staticinvoke <com.android.server.appwidget.AppWidgetServiceImpl: android.content.pm.IPackageManager access$2200(com.android.server.appwidget.AppWidgetServiceImpl)>($r1);

        r8 = interfaceinvoke $r2.<android.content.pm.IPackageManager: java.lang.String[] getPackagesForUid(int)>(i0);

        $z1 = staticinvoke <com.android.internal.util.ArrayUtils: boolean isEmpty(java.lang.Object[])>(r8);

        if $z1 != 0 goto label3;

        $r3 = r0.<com.android.server.appwidget.AppWidgetServiceImpl$SecurityPolicy: com.android.server.appwidget.AppWidgetServiceImpl this$0>;

        $r4 = staticinvoke <com.android.server.appwidget.AppWidgetServiceImpl: android.content.pm.IPackageManager access$2200(com.android.server.appwidget.AppWidgetServiceImpl)>($r3);

        $r5 = r8[0];

        $i2 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        z0 = interfaceinvoke $r4.<android.content.pm.IPackageManager: boolean isInstantApp(java.lang.String,int)>($r5, $i2);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return z0;

     label3:
        goto label6;

     label4:
        $r6 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r6;

     label5:
        $r7 := @caughtexception;

     label6:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label5;
        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public boolean isEnabledGroupProfile(int)
    {
        com.android.server.appwidget.AppWidgetServiceImpl$SecurityPolicy r0;
        int i0, $i1;
        boolean $z0, $z1, z2;

        r0 := @this: com.android.server.appwidget.AppWidgetServiceImpl$SecurityPolicy;

        i0 := @parameter0: int;

        $i1 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        $z0 = specialinvoke r0.<com.android.server.appwidget.AppWidgetServiceImpl$SecurityPolicy: boolean isParentOrProfile(int,int)>($i1, i0);

        if $z0 == 0 goto label1;

        $z1 = specialinvoke r0.<com.android.server.appwidget.AppWidgetServiceImpl$SecurityPolicy: boolean isProfileEnabled(int)>(i0);

        if $z1 == 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;
    }

    public boolean isHostAccessingProvider(com.android.server.appwidget.AppWidgetServiceImpl$Host, com.android.server.appwidget.AppWidgetServiceImpl$Provider, int, java.lang.String)
    {
        com.android.server.appwidget.AppWidgetServiceImpl$SecurityPolicy r0;
        com.android.server.appwidget.AppWidgetServiceImpl$Host r1;
        com.android.server.appwidget.AppWidgetServiceImpl$Provider r2;
        int i0, $i1;
        java.lang.String r3, $r7;
        com.android.server.appwidget.AppWidgetServiceImpl$HostId $r4;
        com.android.server.appwidget.AppWidgetServiceImpl$ProviderId $r5;
        android.content.ComponentName $r6;
        boolean $z0, z1;

        r0 := @this: com.android.server.appwidget.AppWidgetServiceImpl$SecurityPolicy;

        r1 := @parameter0: com.android.server.appwidget.AppWidgetServiceImpl$Host;

        r2 := @parameter1: com.android.server.appwidget.AppWidgetServiceImpl$Provider;

        i0 := @parameter2: int;

        r3 := @parameter3: java.lang.String;

        $r4 = r1.<com.android.server.appwidget.AppWidgetServiceImpl$Host: com.android.server.appwidget.AppWidgetServiceImpl$HostId id>;

        $i1 = $r4.<com.android.server.appwidget.AppWidgetServiceImpl$HostId: int uid>;

        if $i1 != i0 goto label1;

        if r2 == null goto label1;

        $r5 = r2.<com.android.server.appwidget.AppWidgetServiceImpl$Provider: com.android.server.appwidget.AppWidgetServiceImpl$ProviderId id>;

        $r6 = $r5.<com.android.server.appwidget.AppWidgetServiceImpl$ProviderId: android.content.ComponentName componentName>;

        $r7 = virtualinvoke $r6.<android.content.ComponentName: java.lang.String getPackageName()>();

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public boolean isHostInPackageForUid(com.android.server.appwidget.AppWidgetServiceImpl$Host, int, java.lang.String)
    {
        com.android.server.appwidget.AppWidgetServiceImpl$SecurityPolicy r0;
        com.android.server.appwidget.AppWidgetServiceImpl$Host r1;
        int i0, $i1;
        java.lang.String r2, $r5;
        com.android.server.appwidget.AppWidgetServiceImpl$HostId $r3, $r4;
        boolean $z0, z1;

        r0 := @this: com.android.server.appwidget.AppWidgetServiceImpl$SecurityPolicy;

        r1 := @parameter0: com.android.server.appwidget.AppWidgetServiceImpl$Host;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        $r3 = r1.<com.android.server.appwidget.AppWidgetServiceImpl$Host: com.android.server.appwidget.AppWidgetServiceImpl$HostId id>;

        $i1 = $r3.<com.android.server.appwidget.AppWidgetServiceImpl$HostId: int uid>;

        if $i1 != i0 goto label1;

        $r4 = r1.<com.android.server.appwidget.AppWidgetServiceImpl$Host: com.android.server.appwidget.AppWidgetServiceImpl$HostId id>;

        $r5 = $r4.<com.android.server.appwidget.AppWidgetServiceImpl$HostId: java.lang.String packageName>;

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public boolean isInstantAppLocked(java.lang.String, int)
    {
        com.android.server.appwidget.AppWidgetServiceImpl$SecurityPolicy r0;
        int i0;
        long l1;
        boolean z0;
        com.android.server.appwidget.AppWidgetServiceImpl $r1;
        android.content.pm.IPackageManager $r2;
        java.lang.Throwable $r3;
        android.os.RemoteException $r4;
        java.lang.String r5;

        r0 := @this: com.android.server.appwidget.AppWidgetServiceImpl$SecurityPolicy;

        r5 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r1 = r0.<com.android.server.appwidget.AppWidgetServiceImpl$SecurityPolicy: com.android.server.appwidget.AppWidgetServiceImpl this$0>;

        $r2 = staticinvoke <com.android.server.appwidget.AppWidgetServiceImpl: android.content.pm.IPackageManager access$2200(com.android.server.appwidget.AppWidgetServiceImpl)>($r1);

        z0 = interfaceinvoke $r2.<android.content.pm.IPackageManager: boolean isInstantApp(java.lang.String,int)>(r5, i0);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return z0;

     label3:
        $r3 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r3;

     label4:
        $r4 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public boolean isProviderInCallerOrInProfileAndWhitelListed(java.lang.String, int)
    {
        com.android.server.appwidget.AppWidgetServiceImpl$SecurityPolicy r0;
        java.lang.String r1;
        int i0, i1, $i2;
        boolean $z0;

        r0 := @this: com.android.server.appwidget.AppWidgetServiceImpl$SecurityPolicy;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        if i0 != i1 goto label1;

        return 1;

     label1:
        $i2 = virtualinvoke r0.<com.android.server.appwidget.AppWidgetServiceImpl$SecurityPolicy: int getProfileParent(int)>(i0);

        if $i2 == i1 goto label2;

        return 0;

     label2:
        $z0 = virtualinvoke r0.<com.android.server.appwidget.AppWidgetServiceImpl$SecurityPolicy: boolean isProviderWhiteListed(java.lang.String,int)>(r1, i0);

        return $z0;
    }

    public boolean isProviderInPackageForUid(com.android.server.appwidget.AppWidgetServiceImpl$Provider, int, java.lang.String)
    {
        com.android.server.appwidget.AppWidgetServiceImpl$SecurityPolicy r0;
        com.android.server.appwidget.AppWidgetServiceImpl$Provider r1;
        int i0, $i1;
        java.lang.String r2, $r6;
        com.android.server.appwidget.AppWidgetServiceImpl$ProviderId $r3, $r4;
        android.content.ComponentName $r5;
        boolean $z0, z1;

        r0 := @this: com.android.server.appwidget.AppWidgetServiceImpl$SecurityPolicy;

        r1 := @parameter0: com.android.server.appwidget.AppWidgetServiceImpl$Provider;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        if r1 == null goto label1;

        $r3 = r1.<com.android.server.appwidget.AppWidgetServiceImpl$Provider: com.android.server.appwidget.AppWidgetServiceImpl$ProviderId id>;

        $i1 = $r3.<com.android.server.appwidget.AppWidgetServiceImpl$ProviderId: int uid>;

        if $i1 != i0 goto label1;

        $r4 = r1.<com.android.server.appwidget.AppWidgetServiceImpl$Provider: com.android.server.appwidget.AppWidgetServiceImpl$ProviderId id>;

        $r5 = $r4.<com.android.server.appwidget.AppWidgetServiceImpl$ProviderId: android.content.ComponentName componentName>;

        $r6 = virtualinvoke $r5.<android.content.ComponentName: java.lang.String getPackageName()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public boolean isProviderWhiteListed(java.lang.String, int)
    {
        com.android.server.appwidget.AppWidgetServiceImpl$SecurityPolicy r0;
        java.lang.String r1;
        int i0;
        com.android.server.appwidget.AppWidgetServiceImpl $r2, $r4;
        android.app.admin.DevicePolicyManagerInternal $r3, $r5;
        java.util.List $r6;
        boolean $z0;

        r0 := @this: com.android.server.appwidget.AppWidgetServiceImpl$SecurityPolicy;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.appwidget.AppWidgetServiceImpl$SecurityPolicy: com.android.server.appwidget.AppWidgetServiceImpl this$0>;

        $r3 = staticinvoke <com.android.server.appwidget.AppWidgetServiceImpl: android.app.admin.DevicePolicyManagerInternal access$2700(com.android.server.appwidget.AppWidgetServiceImpl)>($r2);

        if $r3 != null goto label1;

        return 0;

     label1:
        $r4 = r0.<com.android.server.appwidget.AppWidgetServiceImpl$SecurityPolicy: com.android.server.appwidget.AppWidgetServiceImpl this$0>;

        $r5 = staticinvoke <com.android.server.appwidget.AppWidgetServiceImpl: android.app.admin.DevicePolicyManagerInternal access$2700(com.android.server.appwidget.AppWidgetServiceImpl)>($r4);

        $r6 = virtualinvoke $r5.<android.app.admin.DevicePolicyManagerInternal: java.util.List getCrossProfileWidgetProviders(int)>(i0);

        $z0 = interfaceinvoke $r6.<java.util.List: boolean contains(java.lang.Object)>(r1);

        return $z0;
    }
}
