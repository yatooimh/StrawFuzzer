final class com.android.server.audio.AudioDeviceBroker extends java.lang.Object
{
    private static final long BROKER_WAKELOCK_TIMEOUT_MS;
    static final int BTA2DP_DOCK_TIMEOUT_MS;
    private static final int BTA2DP_MUTE_CHECK_DELAY_MS;
    static final int BT_HEADSET_CNCT_TIMEOUT_MS;
    private static final java.util.Set MESSAGES_MUTE_MUSIC;
    private static final int MSG_BROADCAST_AUDIO_BECOMING_NOISY;
    private static final int MSG_BT_HEADSET_CNCT_FAILED;
    private static final int MSG_CHECK_MUTE_MUSIC;
    private static final int MSG_DISCONNECT_A2DP;
    private static final int MSG_DISCONNECT_A2DP_SINK;
    private static final int MSG_DISCONNECT_BT_HEADSET;
    private static final int MSG_DISCONNECT_BT_HEARING_AID;
    private static final int MSG_IIL_SET_FORCE_BT_A2DP_USE;
    private static final int MSG_IIL_SET_FORCE_USE;
    private static final int MSG_II_SET_HEARING_AID_VOLUME;
    private static final int MSG_IL_BTA2DP_TIMEOUT;
    private static final int MSG_IL_SAVE_PREF_DEVICE_FOR_STRATEGY;
    private static final int MSG_IL_SET_A2DP_SINK_CONNECTION_STATE_CONNECTED;
    private static final int MSG_IL_SET_A2DP_SINK_CONNECTION_STATE_DISCONNECTED;
    private static final int MSG_IL_SET_A2DP_SOURCE_CONNECTION_STATE;
    private static final int MSG_IL_SET_HEARING_AID_CONNECTION_STATE;
    private static final int MSG_I_BROADCAST_BT_CONNECTION_STATE;
    private static final int MSG_I_SAVE_REMOVE_PREF_DEVICE_FOR_STRATEGY;
    private static final int MSG_I_SET_AVRCP_ABSOLUTE_VOLUME;
    private static final int MSG_I_SET_MODE_OWNER_PID;
    private static final int MSG_L_A2DP_ACTIVE_DEVICE_CHANGE;
    private static final int MSG_L_A2DP_DEVICE_CONFIG_CHANGE;
    private static final int MSG_L_A2DP_DEVICE_CONNECTION_CHANGE_EXT_CONNECTION;
    private static final int MSG_L_A2DP_DEVICE_CONNECTION_CHANGE_EXT_DISCONNECTION;
    private static final int MSG_L_BT_SERVICE_CONNECTED_PROFILE_A2DP;
    private static final int MSG_L_BT_SERVICE_CONNECTED_PROFILE_A2DP_SINK;
    private static final int MSG_L_BT_SERVICE_CONNECTED_PROFILE_HEADSET;
    private static final int MSG_L_BT_SERVICE_CONNECTED_PROFILE_HEARING_AID;
    private static final int MSG_L_HEARING_AID_DEVICE_CONNECTION_CHANGE_EXT;
    private static final int MSG_L_SCOCLIENT_DIED;
    private static final int MSG_L_SET_WIRED_DEVICE_CONNECTION_STATE;
    private static final int MSG_L_SPEAKERPHONE_CLIENT_DIED;
    private static final int MSG_REPORT_NEW_ROUTES;
    private static final int MSG_REPORT_NEW_ROUTES_A2DP;
    private static final int MSG_RESTORE_DEVICES;
    private static final int MSG_TOGGLE_HDMI;
    private static final int SENDMSG_NOOP;
    private static final int SENDMSG_QUEUE;
    private static final int SENDMSG_REPLACE;
    private static final java.lang.String TAG;
    private static long sLastDeviceConnectMsgTime;
    private static final java.lang.Object sLastDeviceConnectionMsgTimeLock;
    private final com.android.server.audio.AudioService mAudioService;
    private boolean mBluetoothA2dpEnabled;
    private android.os.PowerManager$WakeLock mBrokerEventWakeLock;
    private com.android.server.audio.AudioDeviceBroker$BrokerHandler mBrokerHandler;
    private com.android.server.audio.AudioDeviceBroker$BrokerThread mBrokerThread;
    private final com.android.server.audio.BtHelper mBtHelper;
    private final android.content.Context mContext;
    private final com.android.server.audio.AudioDeviceInventory mDeviceInventory;
    private final java.lang.Object mDeviceStateLock;
    private int mForcedUseForComm;
    private int mForcedUseForCommExt;
    private int mModeOwnerPid;
    private java.util.concurrent.atomic.AtomicBoolean mMusicMuted;
    final java.lang.Object mSetModeLock;
    private final java.util.ArrayList mSpeakerphoneClients;
    private final com.android.server.audio.SystemServerAdapter mSystemServer;

    static void <clinit>()
    {
        java.lang.Object $r1;
        java.util.HashSet $r2;
        java.lang.Integer $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17;
        java.util.Set $r4, $r6, $r8, $r10, $r12, $r14, $r16;

        <com.android.server.audio.AudioDeviceBroker: java.lang.String TAG> = "AS.AudioDeviceBroker";

        <com.android.server.audio.AudioDeviceBroker: int SENDMSG_REPLACE> = 0;

        <com.android.server.audio.AudioDeviceBroker: int SENDMSG_QUEUE> = 2;

        <com.android.server.audio.AudioDeviceBroker: int SENDMSG_NOOP> = 1;

        <com.android.server.audio.AudioDeviceBroker: int MSG_TOGGLE_HDMI> = 6;

        <com.android.server.audio.AudioDeviceBroker: int MSG_RESTORE_DEVICES> = 1;

        <com.android.server.audio.AudioDeviceBroker: int MSG_REPORT_NEW_ROUTES_A2DP> = 37;

        <com.android.server.audio.AudioDeviceBroker: int MSG_REPORT_NEW_ROUTES> = 13;

        <com.android.server.audio.AudioDeviceBroker: int MSG_L_SPEAKERPHONE_CLIENT_DIED> = 35;

        <com.android.server.audio.AudioDeviceBroker: int MSG_L_SET_WIRED_DEVICE_CONNECTION_STATE> = 2;

        <com.android.server.audio.AudioDeviceBroker: int MSG_L_SCOCLIENT_DIED> = 32;

        <com.android.server.audio.AudioDeviceBroker: int MSG_L_HEARING_AID_DEVICE_CONNECTION_CHANGE_EXT> = 31;

        <com.android.server.audio.AudioDeviceBroker: int MSG_L_BT_SERVICE_CONNECTED_PROFILE_HEARING_AID> = 25;

        <com.android.server.audio.AudioDeviceBroker: int MSG_L_BT_SERVICE_CONNECTED_PROFILE_HEADSET> = 26;

        <com.android.server.audio.AudioDeviceBroker: int MSG_L_BT_SERVICE_CONNECTED_PROFILE_A2DP_SINK> = 24;

        <com.android.server.audio.AudioDeviceBroker: int MSG_L_BT_SERVICE_CONNECTED_PROFILE_A2DP> = 23;

        <com.android.server.audio.AudioDeviceBroker: int MSG_L_A2DP_DEVICE_CONNECTION_CHANGE_EXT_DISCONNECTION> = 30;

        <com.android.server.audio.AudioDeviceBroker: int MSG_L_A2DP_DEVICE_CONNECTION_CHANGE_EXT_CONNECTION> = 29;

        <com.android.server.audio.AudioDeviceBroker: int MSG_L_A2DP_DEVICE_CONFIG_CHANGE> = 11;

        <com.android.server.audio.AudioDeviceBroker: int MSG_L_A2DP_ACTIVE_DEVICE_CHANGE> = 18;

        <com.android.server.audio.AudioDeviceBroker: int MSG_I_SET_MODE_OWNER_PID> = 16;

        <com.android.server.audio.AudioDeviceBroker: int MSG_I_SET_AVRCP_ABSOLUTE_VOLUME> = 15;

        <com.android.server.audio.AudioDeviceBroker: int MSG_I_SAVE_REMOVE_PREF_DEVICE_FOR_STRATEGY> = 34;

        <com.android.server.audio.AudioDeviceBroker: int MSG_I_BROADCAST_BT_CONNECTION_STATE> = 3;

        <com.android.server.audio.AudioDeviceBroker: int MSG_IL_SET_HEARING_AID_CONNECTION_STATE> = 8;

        <com.android.server.audio.AudioDeviceBroker: int MSG_IL_SET_A2DP_SOURCE_CONNECTION_STATE> = 7;

        <com.android.server.audio.AudioDeviceBroker: int MSG_IL_SET_A2DP_SINK_CONNECTION_STATE_DISCONNECTED> = 28;

        <com.android.server.audio.AudioDeviceBroker: int MSG_IL_SET_A2DP_SINK_CONNECTION_STATE_CONNECTED> = 27;

        <com.android.server.audio.AudioDeviceBroker: int MSG_IL_SAVE_PREF_DEVICE_FOR_STRATEGY> = 33;

        <com.android.server.audio.AudioDeviceBroker: int MSG_IL_BTA2DP_TIMEOUT> = 10;

        <com.android.server.audio.AudioDeviceBroker: int MSG_II_SET_HEARING_AID_VOLUME> = 14;

        <com.android.server.audio.AudioDeviceBroker: int MSG_IIL_SET_FORCE_USE> = 4;

        <com.android.server.audio.AudioDeviceBroker: int MSG_IIL_SET_FORCE_BT_A2DP_USE> = 5;

        <com.android.server.audio.AudioDeviceBroker: int MSG_DISCONNECT_BT_HEARING_AID> = 21;

        <com.android.server.audio.AudioDeviceBroker: int MSG_DISCONNECT_BT_HEADSET> = 22;

        <com.android.server.audio.AudioDeviceBroker: int MSG_DISCONNECT_A2DP_SINK> = 20;

        <com.android.server.audio.AudioDeviceBroker: int MSG_DISCONNECT_A2DP> = 19;

        <com.android.server.audio.AudioDeviceBroker: int MSG_CHECK_MUTE_MUSIC> = 36;

        <com.android.server.audio.AudioDeviceBroker: int MSG_BT_HEADSET_CNCT_FAILED> = 9;

        <com.android.server.audio.AudioDeviceBroker: int MSG_BROADCAST_AUDIO_BECOMING_NOISY> = 12;

        <com.android.server.audio.AudioDeviceBroker: int BT_HEADSET_CNCT_TIMEOUT_MS> = 3000;

        <com.android.server.audio.AudioDeviceBroker: int BTA2DP_MUTE_CHECK_DELAY_MS> = 100;

        <com.android.server.audio.AudioDeviceBroker: int BTA2DP_DOCK_TIMEOUT_MS> = 8000;

        <com.android.server.audio.AudioDeviceBroker: long BROKER_WAKELOCK_TIMEOUT_MS> = 5000L;

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        <com.android.server.audio.AudioDeviceBroker: java.lang.Object sLastDeviceConnectionMsgTimeLock> = $r1;

        <com.android.server.audio.AudioDeviceBroker: long sLastDeviceConnectMsgTime> = 0L;

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        <com.android.server.audio.AudioDeviceBroker: java.util.Set MESSAGES_MUTE_MUSIC> = $r2;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(27);

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>($r3);

        $r4 = <com.android.server.audio.AudioDeviceBroker: java.util.Set MESSAGES_MUTE_MUSIC>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(28);

        interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>($r5);

        $r6 = <com.android.server.audio.AudioDeviceBroker: java.util.Set MESSAGES_MUTE_MUSIC>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(11);

        interfaceinvoke $r6.<java.util.Set: boolean add(java.lang.Object)>($r7);

        $r8 = <com.android.server.audio.AudioDeviceBroker: java.util.Set MESSAGES_MUTE_MUSIC>;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(18);

        interfaceinvoke $r8.<java.util.Set: boolean add(java.lang.Object)>($r9);

        $r10 = <com.android.server.audio.AudioDeviceBroker: java.util.Set MESSAGES_MUTE_MUSIC>;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(29);

        interfaceinvoke $r10.<java.util.Set: boolean add(java.lang.Object)>($r11);

        $r12 = <com.android.server.audio.AudioDeviceBroker: java.util.Set MESSAGES_MUTE_MUSIC>;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(30);

        interfaceinvoke $r12.<java.util.Set: boolean add(java.lang.Object)>($r13);

        $r14 = <com.android.server.audio.AudioDeviceBroker: java.util.Set MESSAGES_MUTE_MUSIC>;

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        interfaceinvoke $r14.<java.util.Set: boolean add(java.lang.Object)>($r15);

        $r16 = <com.android.server.audio.AudioDeviceBroker: java.util.Set MESSAGES_MUTE_MUSIC>;

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(37);

        interfaceinvoke $r16.<java.util.Set: boolean add(java.lang.Object)>($r17);

        return;
    }

    void <init>(android.content.Context, com.android.server.audio.AudioService)
    {
        com.android.server.audio.AudioDeviceBroker r0;
        android.content.Context r1, $r9;
        com.android.server.audio.AudioService r2;
        java.lang.Object $r3, $r4;
        java.util.concurrent.atomic.AtomicBoolean $r5;
        java.util.ArrayList $r6;
        com.android.server.audio.BtHelper $r7;
        com.android.server.audio.AudioDeviceInventory $r8;
        com.android.server.audio.SystemServerAdapter $r10;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.server.audio.AudioService;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.lang.Object;

        specialinvoke $r3.<java.lang.Object: void <init>()>();

        r0.<com.android.server.audio.AudioDeviceBroker: java.lang.Object mDeviceStateLock> = $r3;

        $r4 = new java.lang.Object;

        specialinvoke $r4.<java.lang.Object: void <init>()>();

        r0.<com.android.server.audio.AudioDeviceBroker: java.lang.Object mSetModeLock> = $r4;

        r0.<com.android.server.audio.AudioDeviceBroker: int mModeOwnerPid> = 0;

        $r5 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r5.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(0);

        r0.<com.android.server.audio.AudioDeviceBroker: java.util.concurrent.atomic.AtomicBoolean mMusicMuted> = $r5;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.audio.AudioDeviceBroker: java.util.ArrayList mSpeakerphoneClients> = $r6;

        r0.<com.android.server.audio.AudioDeviceBroker: android.content.Context mContext> = r1;

        r0.<com.android.server.audio.AudioDeviceBroker: com.android.server.audio.AudioService mAudioService> = r2;

        $r7 = new com.android.server.audio.BtHelper;

        specialinvoke $r7.<com.android.server.audio.BtHelper: void <init>(com.android.server.audio.AudioDeviceBroker)>(r0);

        r0.<com.android.server.audio.AudioDeviceBroker: com.android.server.audio.BtHelper mBtHelper> = $r7;

        $r8 = new com.android.server.audio.AudioDeviceInventory;

        specialinvoke $r8.<com.android.server.audio.AudioDeviceInventory: void <init>(com.android.server.audio.AudioDeviceBroker)>(r0);

        r0.<com.android.server.audio.AudioDeviceBroker: com.android.server.audio.AudioDeviceInventory mDeviceInventory> = $r8;

        $r9 = r0.<com.android.server.audio.AudioDeviceBroker: android.content.Context mContext>;

        $r10 = staticinvoke <com.android.server.audio.SystemServerAdapter: com.android.server.audio.SystemServerAdapter getDefaultAdapter(android.content.Context)>($r9);

        r0.<com.android.server.audio.AudioDeviceBroker: com.android.server.audio.SystemServerAdapter mSystemServer> = $r10;

        specialinvoke r0.<com.android.server.audio.AudioDeviceBroker: void init()>();

        return;
    }

    void <init>(android.content.Context, com.android.server.audio.AudioService, com.android.server.audio.AudioDeviceInventory, com.android.server.audio.SystemServerAdapter)
    {
        com.android.server.audio.AudioDeviceBroker r0;
        android.content.Context r1;
        com.android.server.audio.AudioService r2;
        com.android.server.audio.AudioDeviceInventory r3;
        com.android.server.audio.SystemServerAdapter r4;
        java.lang.Object $r5, $r6;
        java.util.concurrent.atomic.AtomicBoolean $r7;
        java.util.ArrayList $r8;
        com.android.server.audio.BtHelper $r9;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.server.audio.AudioService;

        r3 := @parameter2: com.android.server.audio.AudioDeviceInventory;

        r4 := @parameter3: com.android.server.audio.SystemServerAdapter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r5 = new java.lang.Object;

        specialinvoke $r5.<java.lang.Object: void <init>()>();

        r0.<com.android.server.audio.AudioDeviceBroker: java.lang.Object mDeviceStateLock> = $r5;

        $r6 = new java.lang.Object;

        specialinvoke $r6.<java.lang.Object: void <init>()>();

        r0.<com.android.server.audio.AudioDeviceBroker: java.lang.Object mSetModeLock> = $r6;

        r0.<com.android.server.audio.AudioDeviceBroker: int mModeOwnerPid> = 0;

        $r7 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r7.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(0);

        r0.<com.android.server.audio.AudioDeviceBroker: java.util.concurrent.atomic.AtomicBoolean mMusicMuted> = $r7;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.audio.AudioDeviceBroker: java.util.ArrayList mSpeakerphoneClients> = $r8;

        r0.<com.android.server.audio.AudioDeviceBroker: android.content.Context mContext> = r1;

        r0.<com.android.server.audio.AudioDeviceBroker: com.android.server.audio.AudioService mAudioService> = r2;

        $r9 = new com.android.server.audio.BtHelper;

        specialinvoke $r9.<com.android.server.audio.BtHelper: void <init>(com.android.server.audio.AudioDeviceBroker)>(r0);

        r0.<com.android.server.audio.AudioDeviceBroker: com.android.server.audio.BtHelper mBtHelper> = $r9;

        r0.<com.android.server.audio.AudioDeviceBroker: com.android.server.audio.AudioDeviceInventory mDeviceInventory> = r3;

        r0.<com.android.server.audio.AudioDeviceBroker: com.android.server.audio.SystemServerAdapter mSystemServer> = r4;

        specialinvoke r0.<com.android.server.audio.AudioDeviceBroker: void init()>();

        return;
    }

    static com.android.server.audio.AudioDeviceBroker$BrokerHandler access$002(com.android.server.audio.AudioDeviceBroker, com.android.server.audio.AudioDeviceBroker$BrokerHandler)
    {
        com.android.server.audio.AudioDeviceBroker r0;
        com.android.server.audio.AudioDeviceBroker$BrokerHandler r1;

        r0 := @parameter0: com.android.server.audio.AudioDeviceBroker;

        r1 := @parameter1: com.android.server.audio.AudioDeviceBroker$BrokerHandler;

        r0.<com.android.server.audio.AudioDeviceBroker: com.android.server.audio.AudioDeviceBroker$BrokerHandler mBrokerHandler> = r1;

        return r1;
    }

    static void access$1000(com.android.server.audio.AudioDeviceBroker, java.lang.Object)
    {
        com.android.server.audio.AudioDeviceBroker r0;
        java.lang.Object r1;

        r0 := @parameter0: com.android.server.audio.AudioDeviceBroker;

        r1 := @parameter1: java.lang.Object;

        specialinvoke r0.<com.android.server.audio.AudioDeviceBroker: void speakerphoneClientDied(java.lang.Object)>(r1);

        return;
    }

    static void access$1100(com.android.server.audio.AudioDeviceBroker, int)
    {
        com.android.server.audio.AudioDeviceBroker r0;
        int i0;

        r0 := @parameter0: com.android.server.audio.AudioDeviceBroker;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.audio.AudioDeviceBroker: void checkMessagesMuteMusic(int)>(i0);

        return;
    }

    static java.util.Set access$1200()
    {
        java.util.Set $r0;

        $r0 = <com.android.server.audio.AudioDeviceBroker: java.util.Set MESSAGES_MUTE_MUSIC>;

        return $r0;
    }

    static void access$1300(com.android.server.audio.AudioDeviceBroker, int, int, int)
    {
        com.android.server.audio.AudioDeviceBroker r0;
        int i0, i1, i2;

        r0 := @parameter0: com.android.server.audio.AudioDeviceBroker;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        specialinvoke r0.<com.android.server.audio.AudioDeviceBroker: void sendMsg(int,int,int)>(i0, i1, i2);

        return;
    }

    static boolean access$1400(int)
    {
        int i0;
        boolean $z0;

        i0 := @parameter0: int;

        $z0 = staticinvoke <com.android.server.audio.AudioDeviceBroker: boolean isMessageHandledUnderWakelock(int)>(i0);

        return $z0;
    }

    static android.os.PowerManager$WakeLock access$1500(com.android.server.audio.AudioDeviceBroker)
    {
        com.android.server.audio.AudioDeviceBroker r0;
        android.os.PowerManager$WakeLock $r1;

        r0 := @parameter0: com.android.server.audio.AudioDeviceBroker;

        $r1 = r0.<com.android.server.audio.AudioDeviceBroker: android.os.PowerManager$WakeLock mBrokerEventWakeLock>;

        return $r1;
    }

    static java.lang.Object access$200(com.android.server.audio.AudioDeviceBroker)
    {
        com.android.server.audio.AudioDeviceBroker r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.server.audio.AudioDeviceBroker;

        $r1 = r0.<com.android.server.audio.AudioDeviceBroker: java.lang.Object mDeviceStateLock>;

        return $r1;
    }

    static com.android.server.audio.AudioDeviceInventory access$300(com.android.server.audio.AudioDeviceBroker)
    {
        com.android.server.audio.AudioDeviceBroker r0;
        com.android.server.audio.AudioDeviceInventory $r1;

        r0 := @parameter0: com.android.server.audio.AudioDeviceBroker;

        $r1 = r0.<com.android.server.audio.AudioDeviceBroker: com.android.server.audio.AudioDeviceInventory mDeviceInventory>;

        return $r1;
    }

    static com.android.server.audio.BtHelper access$400(com.android.server.audio.AudioDeviceBroker)
    {
        com.android.server.audio.AudioDeviceBroker r0;
        com.android.server.audio.BtHelper $r1;

        r0 := @parameter0: com.android.server.audio.AudioDeviceBroker;

        $r1 = r0.<com.android.server.audio.AudioDeviceBroker: com.android.server.audio.BtHelper mBtHelper>;

        return $r1;
    }

    static void access$500(com.android.server.audio.AudioDeviceBroker, int, int, boolean, java.lang.String)
    {
        com.android.server.audio.AudioDeviceBroker r0;
        int i0, i1;
        boolean z0;
        java.lang.String r1;

        r0 := @parameter0: com.android.server.audio.AudioDeviceBroker;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        r1 := @parameter4: java.lang.String;

        specialinvoke r0.<com.android.server.audio.AudioDeviceBroker: void onSetForceUse(int,int,boolean,java.lang.String)>(i0, i1, z0, r1);

        return;
    }

    static com.android.server.audio.AudioService access$600(com.android.server.audio.AudioDeviceBroker)
    {
        com.android.server.audio.AudioDeviceBroker r0;
        com.android.server.audio.AudioService $r1;

        r0 := @parameter0: com.android.server.audio.AudioDeviceBroker;

        $r1 = r0.<com.android.server.audio.AudioDeviceBroker: com.android.server.audio.AudioService mAudioService>;

        return $r1;
    }

    static void access$700(com.android.server.audio.AudioDeviceBroker)
    {
        com.android.server.audio.AudioDeviceBroker r0;

        r0 := @parameter0: com.android.server.audio.AudioDeviceBroker;

        specialinvoke r0.<com.android.server.audio.AudioDeviceBroker: void onSendBecomingNoisyIntent()>();

        return;
    }

    static int access$800(com.android.server.audio.AudioDeviceBroker)
    {
        com.android.server.audio.AudioDeviceBroker r0;
        int $i0;

        r0 := @parameter0: com.android.server.audio.AudioDeviceBroker;

        $i0 = r0.<com.android.server.audio.AudioDeviceBroker: int mModeOwnerPid>;

        return $i0;
    }

    static int access$802(com.android.server.audio.AudioDeviceBroker, int)
    {
        com.android.server.audio.AudioDeviceBroker r0;
        int i0;

        r0 := @parameter0: com.android.server.audio.AudioDeviceBroker;

        i0 := @parameter1: int;

        r0.<com.android.server.audio.AudioDeviceBroker: int mModeOwnerPid> = i0;

        return i0;
    }

    static void access$900(com.android.server.audio.AudioDeviceBroker, java.lang.String)
    {
        com.android.server.audio.AudioDeviceBroker r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.server.audio.AudioDeviceBroker;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<com.android.server.audio.AudioDeviceBroker: void updateSpeakerphoneOn(java.lang.String)>(r1);

        return;
    }

    private boolean addSpeakerphoneClient(android.os.IBinder, int, boolean)
    {
        com.android.server.audio.AudioDeviceBroker r0;
        int i0;
        boolean z0, $z1;
        com.android.server.audio.AudioDeviceBroker$SpeakerphoneClient $r2;
        java.util.ArrayList $r3;
        android.os.IBinder r4;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        r4 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        specialinvoke r0.<com.android.server.audio.AudioDeviceBroker: com.android.server.audio.AudioDeviceBroker$SpeakerphoneClient removeSpeakerphoneClient(android.os.IBinder,boolean)>(r4, 1);

        $r2 = new com.android.server.audio.AudioDeviceBroker$SpeakerphoneClient;

        specialinvoke $r2.<com.android.server.audio.AudioDeviceBroker$SpeakerphoneClient: void <init>(com.android.server.audio.AudioDeviceBroker,android.os.IBinder,int,boolean)>(r0, r4, i0, z0);

        $z1 = virtualinvoke $r2.<com.android.server.audio.AudioDeviceBroker$SpeakerphoneClient: boolean registerDeathRecipient()>();

        if $z1 == 0 goto label1;

        $r3 = r0.<com.android.server.audio.AudioDeviceBroker: java.util.ArrayList mSpeakerphoneClients>;

        virtualinvoke $r3.<java.util.ArrayList: void add(int,java.lang.Object)>(0, $r2);

        return 1;

     label1:
        return 0;
    }

    private void checkMessagesMuteMusic(int)
    {
        com.android.server.audio.AudioDeviceBroker r0;
        java.util.Iterator r1;
        com.android.server.audio.AudioService $r2;
        java.util.Set $r3;
        boolean $z0, $z1, z2, z3, $z4;
        java.lang.Object $r4;
        java.lang.Integer $r5;
        com.android.server.audio.AudioDeviceBroker$BrokerHandler $r6;
        int i0, i1;
        java.util.concurrent.atomic.AtomicBoolean $r7;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        i0 := @parameter0: int;

        if i0 == 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        z3 = z2;

        if z2 != 0 goto label5;

        $r3 = <com.android.server.audio.AudioDeviceBroker: java.util.Set MESSAGES_MUTE_MUSIC>;

        r1 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        z3 = z2;

        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.lang.Integer) $r4;

        i1 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

        $r6 = r0.<com.android.server.audio.AudioDeviceBroker: com.android.server.audio.AudioDeviceBroker$BrokerHandler mBrokerHandler>;

        $z1 = virtualinvoke $r6.<com.android.server.audio.AudioDeviceBroker$BrokerHandler: boolean hasMessages(int)>(i1);

        if $z1 == 0 goto label4;

        z3 = 1;

        goto label5;

     label4:
        goto label3;

     label5:
        $r7 = r0.<com.android.server.audio.AudioDeviceBroker: java.util.concurrent.atomic.AtomicBoolean mMusicMuted>;

        $z4 = virtualinvoke $r7.<java.util.concurrent.atomic.AtomicBoolean: boolean getAndSet(boolean)>(z3);

        if z3 == $z4 goto label6;

        $r2 = r0.<com.android.server.audio.AudioDeviceBroker: com.android.server.audio.AudioService mAudioService>;

        virtualinvoke $r2.<com.android.server.audio.AudioService: void setMusicMute(boolean)>(z3);

     label6:
        return;
    }

    private void init()
    {
        com.android.server.audio.AudioDeviceBroker r0;
        android.content.Context $r1;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        $r1 = r0.<com.android.server.audio.AudioDeviceBroker: android.content.Context mContext>;

        specialinvoke r0.<com.android.server.audio.AudioDeviceBroker: void setupMessaging(android.content.Context)>($r1);

        r0.<com.android.server.audio.AudioDeviceBroker: int mForcedUseForComm> = 0;

        r0.<com.android.server.audio.AudioDeviceBroker: int mForcedUseForCommExt> = 0;

        return;
    }

    private static boolean isMessageHandledUnderWakelock(int)
    {
        int i0;

        i0 := @parameter0: int;

        if i0 == 2 goto label2;

        if i0 == 18 goto label2;

        if i0 == 36 goto label2;

        if i0 == 6 goto label2;

        if i0 == 7 goto label2;

        if i0 == 8 goto label2;

        if i0 == 10 goto label2;

        if i0 == 11 goto label2;

        tableswitch(i0)
        {
            case 27: goto label2;
            case 28: goto label2;
            case 29: goto label2;
            case 30: goto label2;
            case 31: goto label2;
            default: goto label1;
        };

     label1:
        return 0;

     label2:
        return 1;
    }

    private boolean isSpeakerphoneOnRequested()
    {
        com.android.server.audio.AudioDeviceBroker r0;
        java.util.Iterator r1;
        com.android.server.audio.AudioDeviceBroker$SpeakerphoneClient r2, $r7;
        java.util.ArrayList $r3, $r4, $r5;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Object $r6, $r8;
        int $i0, $i1;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        $r3 = r0.<com.android.server.audio.AudioDeviceBroker: java.util.ArrayList mSpeakerphoneClients>;

        $z0 = virtualinvoke $r3.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r4 = r0.<com.android.server.audio.AudioDeviceBroker: java.util.ArrayList mSpeakerphoneClients>;

        r1 = virtualinvoke $r4.<java.util.ArrayList: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r8 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.android.server.audio.AudioDeviceBroker$SpeakerphoneClient) $r8;

        $i0 = virtualinvoke r2.<com.android.server.audio.AudioDeviceBroker$SpeakerphoneClient: int getPid()>();

        $i1 = r0.<com.android.server.audio.AudioDeviceBroker: int mModeOwnerPid>;

        if $i0 != $i1 goto label3;

        $z3 = virtualinvoke r2.<com.android.server.audio.AudioDeviceBroker$SpeakerphoneClient: boolean isOn()>();

        return $z3;

     label3:
        goto label2;

     label4:
        $r5 = r0.<com.android.server.audio.AudioDeviceBroker: java.util.ArrayList mSpeakerphoneClients>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r7 = (com.android.server.audio.AudioDeviceBroker$SpeakerphoneClient) $r6;

        $z2 = virtualinvoke $r7.<com.android.server.audio.AudioDeviceBroker$SpeakerphoneClient: boolean isOn()>();

        return $z2;
    }

    static void lambda$dump$0(java.io.PrintWriter, java.lang.String, com.android.server.audio.AudioDeviceBroker$SpeakerphoneClient)
    {
        java.io.PrintWriter r0;
        java.lang.String r1, $r14;
        com.android.server.audio.AudioDeviceBroker$SpeakerphoneClient r2;
        java.lang.StringBuilder $r4;
        int $i0;
        boolean $z0;
        android.os.IBinder $r12;

        r0 := @parameter0: java.io.PrintWriter;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: com.android.server.audio.AudioDeviceBroker$SpeakerphoneClient;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pid: ");

        $i0 = virtualinvoke r2.<com.android.server.audio.AudioDeviceBroker$SpeakerphoneClient: int getPid()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" on: ");

        $z0 = virtualinvoke r2.<com.android.server.audio.AudioDeviceBroker$SpeakerphoneClient: boolean isOn()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cb: ");

        $r12 = virtualinvoke r2.<com.android.server.audio.AudioDeviceBroker$SpeakerphoneClient: android.os.IBinder getBinder()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r14 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r14);

        return;
    }

    private void onSendBecomingNoisyIntent()
    {
        com.android.server.audio.AudioDeviceBroker r0;
        com.android.server.audio.AudioEventLogger$StringEvent $r1;
        com.android.server.audio.AudioEventLogger $r2;
        com.android.server.audio.AudioEventLogger$Event $r3;
        com.android.server.audio.SystemServerAdapter $r4;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        $r2 = <com.android.server.audio.AudioService: com.android.server.audio.AudioEventLogger sDeviceLogger>;

        $r1 = new com.android.server.audio.AudioEventLogger$StringEvent;

        specialinvoke $r1.<com.android.server.audio.AudioEventLogger$StringEvent: void <init>(java.lang.String)>("broadcast ACTION_AUDIO_BECOMING_NOISY");

        $r3 = virtualinvoke $r1.<com.android.server.audio.AudioEventLogger$StringEvent: com.android.server.audio.AudioEventLogger$Event printLog(java.lang.String)>("AS.AudioDeviceBroker");

        virtualinvoke $r2.<com.android.server.audio.AudioEventLogger: void log(com.android.server.audio.AudioEventLogger$Event)>($r3);

        $r4 = r0.<com.android.server.audio.AudioDeviceBroker: com.android.server.audio.SystemServerAdapter mSystemServer>;

        virtualinvoke $r4.<com.android.server.audio.SystemServerAdapter: void sendDeviceBecomingNoisyIntent()>();

        return;
    }

    private void onSetForceUse(int, int, boolean, java.lang.String)
    {
        com.android.server.audio.AudioDeviceBroker r0;
        int i0, i1;
        boolean z0;
        java.lang.String r1, $r7, $r10, $r16;
        com.android.server.audio.AudioServiceEvents$ForceUseEvent $r3;
        com.android.server.audio.AudioEventLogger $r4;
        java.lang.StringBuilder $r5;
        android.media.MediaMetrics$Item $r9, $r12, $r14, $r17;
        android.media.MediaMetrics$Key $r11, $r13, $r15;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        r1 := @parameter3: java.lang.String;

        if i0 != 1 goto label1;

        virtualinvoke r0.<com.android.server.audio.AudioDeviceBroker: void postReportNewRoutes(boolean)>(z0);

     label1:
        $r4 = <com.android.server.audio.AudioService: com.android.server.audio.AudioEventLogger sForceUseLogger>;

        $r3 = new com.android.server.audio.AudioServiceEvents$ForceUseEvent;

        specialinvoke $r3.<com.android.server.audio.AudioServiceEvents$ForceUseEvent: void <init>(int,int,java.lang.String)>(i0, i1, r1);

        virtualinvoke $r4.<com.android.server.audio.AudioEventLogger: void log(com.android.server.audio.AudioEventLogger$Event)>($r3);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("audio.forceUse.");

        $r7 = staticinvoke <android.media.AudioSystem: java.lang.String forceUseUsageToString(int)>(i0);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = new android.media.MediaMetrics$Item;

        $r10 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<android.media.MediaMetrics$Item: void <init>(java.lang.String)>($r10);

        $r11 = <android.media.MediaMetrics$Property: android.media.MediaMetrics$Key EVENT>;

        $r12 = virtualinvoke $r9.<android.media.MediaMetrics$Item: android.media.MediaMetrics$Item set(android.media.MediaMetrics$Key,java.lang.Object)>($r11, "onSetForceUse");

        $r13 = <android.media.MediaMetrics$Property: android.media.MediaMetrics$Key FORCE_USE_DUE_TO>;

        $r14 = virtualinvoke $r12.<android.media.MediaMetrics$Item: android.media.MediaMetrics$Item set(android.media.MediaMetrics$Key,java.lang.Object)>($r13, r1);

        $r15 = <android.media.MediaMetrics$Property: android.media.MediaMetrics$Key FORCE_USE_MODE>;

        $r16 = staticinvoke <android.media.AudioSystem: java.lang.String forceUseConfigToString(int)>(i1);

        $r17 = virtualinvoke $r14.<android.media.MediaMetrics$Item: android.media.MediaMetrics$Item set(android.media.MediaMetrics$Key,java.lang.Object)>($r15, $r16);

        virtualinvoke $r17.<android.media.MediaMetrics$Item: boolean record()>();

        staticinvoke <android.media.AudioSystem: int setForceUse(int,int)>(i0, i1);

        return;
    }

    private void removeScheduledA2dpEvents(android.bluetooth.BluetoothDevice)
    {
        com.android.server.audio.AudioDeviceBroker r0;
        com.android.server.audio.AudioDeviceBroker$BrokerHandler $r2, $r4, $r5, $r7, $r8, $r9;
        com.android.server.audio.AudioDeviceBroker$BtDeviceConnectionInfo $r3;
        com.android.server.audio.BtHelper$BluetoothA2dpDeviceInfo $r6;
        android.bluetooth.BluetoothDevice r10;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        r10 := @parameter0: android.bluetooth.BluetoothDevice;

        $r2 = r0.<com.android.server.audio.AudioDeviceBroker: com.android.server.audio.AudioDeviceBroker$BrokerHandler mBrokerHandler>;

        virtualinvoke $r2.<com.android.server.audio.AudioDeviceBroker$BrokerHandler: void removeEqualMessages(int,java.lang.Object)>(11, r10);

        $r3 = new com.android.server.audio.AudioDeviceBroker$BtDeviceConnectionInfo;

        specialinvoke $r3.<com.android.server.audio.AudioDeviceBroker$BtDeviceConnectionInfo: void <init>(android.bluetooth.BluetoothDevice,int,int,boolean,int)>(r10, 2, 0, 0, -1);

        $r4 = r0.<com.android.server.audio.AudioDeviceBroker: com.android.server.audio.AudioDeviceBroker$BrokerHandler mBrokerHandler>;

        virtualinvoke $r4.<com.android.server.audio.AudioDeviceBroker$BrokerHandler: void removeEqualMessages(int,java.lang.Object)>(30, $r3);

        $r5 = r0.<com.android.server.audio.AudioDeviceBroker: com.android.server.audio.AudioDeviceBroker$BrokerHandler mBrokerHandler>;

        virtualinvoke $r5.<com.android.server.audio.AudioDeviceBroker$BrokerHandler: void removeEqualMessages(int,java.lang.Object)>(29, $r3);

        $r6 = new com.android.server.audio.BtHelper$BluetoothA2dpDeviceInfo;

        specialinvoke $r6.<com.android.server.audio.BtHelper$BluetoothA2dpDeviceInfo: void <init>(android.bluetooth.BluetoothDevice)>(r10);

        $r7 = r0.<com.android.server.audio.AudioDeviceBroker: com.android.server.audio.AudioDeviceBroker$BrokerHandler mBrokerHandler>;

        virtualinvoke $r7.<com.android.server.audio.AudioDeviceBroker$BrokerHandler: void removeEqualMessages(int,java.lang.Object)>(27, $r6);

        $r8 = r0.<com.android.server.audio.AudioDeviceBroker: com.android.server.audio.AudioDeviceBroker$BrokerHandler mBrokerHandler>;

        virtualinvoke $r8.<com.android.server.audio.AudioDeviceBroker$BrokerHandler: void removeEqualMessages(int,java.lang.Object)>(28, $r6);

        $r9 = r0.<com.android.server.audio.AudioDeviceBroker: com.android.server.audio.AudioDeviceBroker$BrokerHandler mBrokerHandler>;

        virtualinvoke $r9.<com.android.server.audio.AudioDeviceBroker$BrokerHandler: void removeEqualMessages(int,java.lang.Object)>(18, $r6);

        return;
    }

    private com.android.server.audio.AudioDeviceBroker$SpeakerphoneClient removeSpeakerphoneClient(android.os.IBinder, boolean)
    {
        com.android.server.audio.AudioDeviceBroker r0;
        android.os.IBinder r1, $r6;
        boolean z0, $z1;
        java.util.Iterator r2;
        com.android.server.audio.AudioDeviceBroker$SpeakerphoneClient r3;
        java.util.ArrayList $r4, $r7;
        java.lang.Object $r5;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        r1 := @parameter0: android.os.IBinder;

        z0 := @parameter1: boolean;

        $r4 = r0.<com.android.server.audio.AudioDeviceBroker: java.util.ArrayList mSpeakerphoneClients>;

        r2 = virtualinvoke $r4.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.server.audio.AudioDeviceBroker$SpeakerphoneClient) $r5;

        $r6 = virtualinvoke r3.<com.android.server.audio.AudioDeviceBroker$SpeakerphoneClient: android.os.IBinder getBinder()>();

        if $r6 != r1 goto label3;

        if z0 == 0 goto label2;

        virtualinvoke r3.<com.android.server.audio.AudioDeviceBroker$SpeakerphoneClient: void unregisterDeathRecipient()>();

     label2:
        $r7 = r0.<com.android.server.audio.AudioDeviceBroker: java.util.ArrayList mSpeakerphoneClients>;

        virtualinvoke $r7.<java.util.ArrayList: boolean remove(java.lang.Object)>(r3);

        return r3;

     label3:
        goto label1;

     label4:
        return null;
    }

    private void sendIILMsg(int, int, int, int, java.lang.Object, int)
    {
        com.android.server.audio.AudioDeviceBroker r0;
        int i0, i1, i2, i3, i4;
        long l5, $l6, $l7, $l8, l10, l11, $l12;
        android.os.PowerManager$WakeLock $r1;
        com.android.server.audio.AudioDeviceBroker$BrokerHandler $r2, $r3, $r11, $r12;
        boolean $z1, $z2, $z3;
        java.lang.Throwable $r4;
        java.lang.Exception $r5;
        java.lang.Object r6, r10;
        java.util.Set $r8;
        java.lang.Integer $r9;
        byte $b13;
        android.os.Message $r13;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r6 := @parameter4: java.lang.Object;

        i4 := @parameter5: int;

        if i1 != 0 goto label01;

        $r3 = r0.<com.android.server.audio.AudioDeviceBroker: com.android.server.audio.AudioDeviceBroker$BrokerHandler mBrokerHandler>;

        virtualinvoke $r3.<com.android.server.audio.AudioDeviceBroker$BrokerHandler: void removeMessages(int)>(i0);

        goto label02;

     label01:
        if i1 != 1 goto label02;

        $r2 = r0.<com.android.server.audio.AudioDeviceBroker: com.android.server.audio.AudioDeviceBroker$BrokerHandler mBrokerHandler>;

        $z1 = virtualinvoke $r2.<com.android.server.audio.AudioDeviceBroker$BrokerHandler: boolean hasMessages(int)>(i0);

        if $z1 == 0 goto label02;

        return;

     label02:
        $z2 = staticinvoke <com.android.server.audio.AudioDeviceBroker: boolean isMessageHandledUnderWakelock(int)>(i0);

        if $z2 == 0 goto label07;

        l10 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label03:
        $r1 = r0.<com.android.server.audio.AudioDeviceBroker: android.os.PowerManager$WakeLock mBrokerEventWakeLock>;

        virtualinvoke $r1.<android.os.PowerManager$WakeLock: void acquire(long)>(5000L);

     label04:
        goto label06;

     label05:
        $r5 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("AS.AudioDeviceBroker", "Exception acquiring wakelock", $r5);

     label06:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l10);

     label07:
        $r8 = <com.android.server.audio.AudioDeviceBroker: java.util.Set MESSAGES_MUTE_MUSIC>;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $z3 = interfaceinvoke $r8.<java.util.Set: boolean contains(java.lang.Object)>($r9);

        if $z3 == 0 goto label08;

        specialinvoke r0.<com.android.server.audio.AudioDeviceBroker: void checkMessagesMuteMusic(int)>(i0);

     label08:
        r10 = <com.android.server.audio.AudioDeviceBroker: java.lang.Object sLastDeviceConnectionMsgTimeLock>;

        entermonitor r10;

     label09:
        $l6 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l7 = (long) i4;

        l5 = $l6 + $l7;

     label10:
        if i0 == 2 goto label11;

        if i0 == 18 goto label11;

        if i0 == 7 goto label11;

        if i0 == 8 goto label11;

        if i0 == 10 goto label11;

        if i0 == 11 goto label11;

        if i0 == 27 goto label11;

        if i0 == 28 goto label11;

        l11 = l5;

        goto label14;

     label11:
        l11 = l5;

     label12:
        $l12 = <com.android.server.audio.AudioDeviceBroker: long sLastDeviceConnectMsgTime>;

        $b13 = $l12 cmp l5;

        if $b13 < 0 goto label13;

        $l8 = <com.android.server.audio.AudioDeviceBroker: long sLastDeviceConnectMsgTime>;

        l11 = $l8 + 30L;

     label13:
        <com.android.server.audio.AudioDeviceBroker: long sLastDeviceConnectMsgTime> = l11;

     label14:
        $r11 = r0.<com.android.server.audio.AudioDeviceBroker: com.android.server.audio.AudioDeviceBroker$BrokerHandler mBrokerHandler>;

        $r12 = r0.<com.android.server.audio.AudioDeviceBroker: com.android.server.audio.AudioDeviceBroker$BrokerHandler mBrokerHandler>;

        $r13 = virtualinvoke $r12.<com.android.server.audio.AudioDeviceBroker$BrokerHandler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(i0, i2, i3, r6);

        virtualinvoke $r11.<com.android.server.audio.AudioDeviceBroker$BrokerHandler: boolean sendMessageAtTime(android.os.Message,long)>($r13, l11);

     label15:
        exitmonitor r10;

     label16:
        return;

     label17:
        $r4 := @caughtexception;

     label18:
        exitmonitor r10;

     label19:
        throw $r4;

        catch java.lang.Exception from label03 to label04 with label05;
        catch java.lang.Throwable from label09 to label10 with label17;
        catch java.lang.Throwable from label12 to label13 with label17;
        catch java.lang.Throwable from label13 to label14 with label17;
        catch java.lang.Throwable from label14 to label15 with label17;
        catch java.lang.Throwable from label15 to label16 with label17;
        catch java.lang.Throwable from label18 to label19 with label17;
    }

    private void sendIILMsgNoDelay(int, int, int, int, java.lang.Object)
    {
        com.android.server.audio.AudioDeviceBroker r0;
        int i0, i1, i2, i3;
        java.lang.Object r1;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r1 := @parameter4: java.lang.Object;

        specialinvoke r0.<com.android.server.audio.AudioDeviceBroker: void sendIILMsg(int,int,int,int,java.lang.Object,int)>(i0, i1, i2, i3, r1, 0);

        return;
    }

    private void sendIIMsgNoDelay(int, int, int, int)
    {
        com.android.server.audio.AudioDeviceBroker r0;
        int i0, i1, i2, i3;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        specialinvoke r0.<com.android.server.audio.AudioDeviceBroker: void sendIILMsg(int,int,int,int,java.lang.Object,int)>(i0, i1, i2, i3, null, 0);

        return;
    }

    private void sendILMsg(int, int, int, java.lang.Object, int)
    {
        com.android.server.audio.AudioDeviceBroker r0;
        int i0, i1, i2, i3;
        java.lang.Object r1;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: java.lang.Object;

        i3 := @parameter4: int;

        specialinvoke r0.<com.android.server.audio.AudioDeviceBroker: void sendIILMsg(int,int,int,int,java.lang.Object,int)>(i0, i1, i2, 0, r1, i3);

        return;
    }

    private void sendILMsgNoDelay(int, int, int, java.lang.Object)
    {
        com.android.server.audio.AudioDeviceBroker r0;
        int i0, i1, i2;
        java.lang.Object r1;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: java.lang.Object;

        specialinvoke r0.<com.android.server.audio.AudioDeviceBroker: void sendIILMsg(int,int,int,int,java.lang.Object,int)>(i0, i1, i2, 0, r1, 0);

        return;
    }

    private void sendIMsg(int, int, int, int)
    {
        com.android.server.audio.AudioDeviceBroker r0;
        int i0, i1, i2, i3;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        specialinvoke r0.<com.android.server.audio.AudioDeviceBroker: void sendIILMsg(int,int,int,int,java.lang.Object,int)>(i0, i1, i2, 0, null, i3);

        return;
    }

    private void sendIMsgNoDelay(int, int, int)
    {
        com.android.server.audio.AudioDeviceBroker r0;
        int i0, i1, i2;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        specialinvoke r0.<com.android.server.audio.AudioDeviceBroker: void sendIILMsg(int,int,int,int,java.lang.Object,int)>(i0, i1, i2, 0, null, 0);

        return;
    }

    private void sendLMsg(int, int, java.lang.Object, int)
    {
        com.android.server.audio.AudioDeviceBroker r0;
        int i0, i1, i2;
        java.lang.Object r1;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.Object;

        i2 := @parameter3: int;

        specialinvoke r0.<com.android.server.audio.AudioDeviceBroker: void sendIILMsg(int,int,int,int,java.lang.Object,int)>(i0, i1, 0, 0, r1, i2);

        return;
    }

    private void sendLMsgNoDelay(int, int, java.lang.Object)
    {
        com.android.server.audio.AudioDeviceBroker r0;
        int i0, i1;
        java.lang.Object r1;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.Object;

        specialinvoke r0.<com.android.server.audio.AudioDeviceBroker: void sendIILMsg(int,int,int,int,java.lang.Object,int)>(i0, i1, 0, 0, r1, 0);

        return;
    }

    private void sendMsg(int, int, int)
    {
        com.android.server.audio.AudioDeviceBroker r0;
        int i0, i1, i2;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        specialinvoke r0.<com.android.server.audio.AudioDeviceBroker: void sendIILMsg(int,int,int,int,java.lang.Object,int)>(i0, i1, 0, 0, null, i2);

        return;
    }

    private void sendMsgNoDelay(int, int)
    {
        com.android.server.audio.AudioDeviceBroker r0;
        int i0, i1;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<com.android.server.audio.AudioDeviceBroker: void sendIILMsg(int,int,int,int,java.lang.Object,int)>(i0, i1, 0, 0, null, 0);

        return;
    }

    private void setupMessaging(android.content.Context)
    {
        com.android.server.audio.AudioDeviceBroker r0;
        java.lang.Object $r1;
        android.os.PowerManager $r2;
        android.os.PowerManager$WakeLock $r3;
        com.android.server.audio.AudioDeviceBroker$BrokerThread $r4;
        android.content.Context r5;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        r5 := @parameter0: android.content.Context;

        $r1 = virtualinvoke r5.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("power");

        $r2 = (android.os.PowerManager) $r1;

        $r3 = virtualinvoke $r2.<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>(1, "handleAudioDeviceEvent");

        r0.<com.android.server.audio.AudioDeviceBroker: android.os.PowerManager$WakeLock mBrokerEventWakeLock> = $r3;

        $r4 = new com.android.server.audio.AudioDeviceBroker$BrokerThread;

        specialinvoke $r4.<com.android.server.audio.AudioDeviceBroker$BrokerThread: void <init>(com.android.server.audio.AudioDeviceBroker)>(r0);

        r0.<com.android.server.audio.AudioDeviceBroker: com.android.server.audio.AudioDeviceBroker$BrokerThread mBrokerThread> = $r4;

        virtualinvoke $r4.<com.android.server.audio.AudioDeviceBroker$BrokerThread: void start()>();

        specialinvoke r0.<com.android.server.audio.AudioDeviceBroker: void waitForBrokerHandlerCreation()>();

        return;
    }

    private void speakerphoneClientDied(java.lang.Object)
    {
        com.android.server.audio.AudioDeviceBroker r0;
        java.lang.Object r1;
        com.android.server.audio.AudioDeviceBroker$SpeakerphoneClient $r2, $r4;
        android.os.IBinder $r3;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        r1 := @parameter0: java.lang.Object;

        if r1 != null goto label1;

        return;

     label1:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("AS.AudioDeviceBroker", "Speaker client died");

        $r2 = (com.android.server.audio.AudioDeviceBroker$SpeakerphoneClient) r1;

        $r3 = virtualinvoke $r2.<com.android.server.audio.AudioDeviceBroker$SpeakerphoneClient: android.os.IBinder getBinder()>();

        $r4 = specialinvoke r0.<com.android.server.audio.AudioDeviceBroker: com.android.server.audio.AudioDeviceBroker$SpeakerphoneClient removeSpeakerphoneClient(android.os.IBinder,boolean)>($r3, 0);

        if $r4 == null goto label2;

        specialinvoke r0.<com.android.server.audio.AudioDeviceBroker: void updateSpeakerphoneOn(java.lang.String)>("speakerphoneClientDied");

     label2:
        return;
    }

    private void updateSpeakerphoneOn(java.lang.String)
    {
        com.android.server.audio.AudioDeviceBroker r0;
        java.lang.String r1;
        int i0, $i1, $i2;
        boolean $z0, $z1;
        com.android.server.audio.BtHelper $r2;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        r1 := @parameter0: java.lang.String;

        $z0 = specialinvoke r0.<com.android.server.audio.AudioDeviceBroker: boolean isSpeakerphoneOnRequested()>();

        if $z0 == 0 goto label2;

        $i2 = r0.<com.android.server.audio.AudioDeviceBroker: int mForcedUseForComm>;

        if $i2 != 3 goto label1;

        virtualinvoke r0.<com.android.server.audio.AudioDeviceBroker: void setForceUse_Async(int,int,java.lang.String)>(2, 0, r1);

     label1:
        r0.<com.android.server.audio.AudioDeviceBroker: int mForcedUseForComm> = 1;

        goto label4;

     label2:
        $i1 = r0.<com.android.server.audio.AudioDeviceBroker: int mForcedUseForComm>;

        if $i1 != 1 goto label4;

        $r2 = r0.<com.android.server.audio.AudioDeviceBroker: com.android.server.audio.BtHelper mBtHelper>;

        $z1 = virtualinvoke $r2.<com.android.server.audio.BtHelper: boolean isBluetoothScoOn()>();

        if $z1 == 0 goto label3;

        r0.<com.android.server.audio.AudioDeviceBroker: int mForcedUseForComm> = 3;

        virtualinvoke r0.<com.android.server.audio.AudioDeviceBroker: void setForceUse_Async(int,int,java.lang.String)>(2, 3, r1);

        goto label4;

     label3:
        r0.<com.android.server.audio.AudioDeviceBroker: int mForcedUseForComm> = 0;

     label4:
        i0 = r0.<com.android.server.audio.AudioDeviceBroker: int mForcedUseForComm>;

        r0.<com.android.server.audio.AudioDeviceBroker: int mForcedUseForCommExt> = i0;

        virtualinvoke r0.<com.android.server.audio.AudioDeviceBroker: void setForceUse_Async(int,int,java.lang.String)>(0, i0, r1);

        return;
    }

    private void waitForBrokerHandlerCreation()
    {
        com.android.server.audio.AudioDeviceBroker r0;
        java.lang.Throwable $r1, $r2;
        com.android.server.audio.AudioDeviceBroker$BrokerHandler r3;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        entermonitor r0;

     label01:
        r3 = r0.<com.android.server.audio.AudioDeviceBroker: com.android.server.audio.AudioDeviceBroker$BrokerHandler mBrokerHandler>;

     label02:
        if r3 != null goto label08;

     label03:
        virtualinvoke r0.<java.lang.Object: void wait()>();

     label04:
        goto label01;

     label05:
        $r1 := @caughtexception;

     label06:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("AS.AudioDeviceBroker", "Interruption while waiting on BrokerHandler");

     label07:
        goto label01;

     label08:
        exitmonitor r0;

     label09:
        return;

     label10:
        $r2 := @caughtexception;

     label11:
        exitmonitor r0;

     label12:
        throw $r2;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.InterruptedException from label03 to label04 with label05;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    void checkMusicActive(int, java.lang.String)
    {
        com.android.server.audio.AudioDeviceBroker r0;
        int i0;
        java.lang.String r1;
        com.android.server.audio.AudioService $r2;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r2 = r0.<com.android.server.audio.AudioDeviceBroker: com.android.server.audio.AudioService mAudioService>;

        virtualinvoke $r2.<com.android.server.audio.AudioService: void checkMusicActive(int,java.lang.String)>(i0, r1);

        return;
    }

    void checkVolumeCecOnHdmiConnection(int, java.lang.String)
    {
        com.android.server.audio.AudioDeviceBroker r0;
        int i0;
        java.lang.String r1;
        com.android.server.audio.AudioService $r2;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r2 = r0.<com.android.server.audio.AudioDeviceBroker: com.android.server.audio.AudioService mAudioService>;

        virtualinvoke $r2.<com.android.server.audio.AudioService: void postCheckVolumeCecOnHdmiConnection(int,java.lang.String)>(i0, r1);

        return;
    }

    void disconnectAllBluetoothProfiles()
    {
        com.android.server.audio.AudioDeviceBroker r0;
        java.lang.Object r1;
        com.android.server.audio.BtHelper $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        r1 = r0.<com.android.server.audio.AudioDeviceBroker: java.lang.Object mDeviceStateLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.audio.AudioDeviceBroker: com.android.server.audio.BtHelper mBtHelper>;

        virtualinvoke $r3.<com.android.server.audio.BtHelper: void disconnectAllBluetoothProfiles()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    void dump(java.io.PrintWriter, java.lang.String)
    {
        com.android.server.audio.AudioDeviceBroker r0;
        java.io.PrintWriter r1;
        java.lang.String r2, $r11, $r13, $r17, $r19, $r24, $r28, $r35, $r40;
        com.android.server.audio.AudioDeviceBroker$BrokerHandler r3, $r5;
        com.android.server.audio.AudioDeviceInventory $r6;
        java.lang.StringBuilder $r7, $r14, $r20, $r25, $r32, $r37;
        int $i0, $i1, $i2;
        com.android.server.audio._$$Lambda$AudioDeviceBroker$_5btcnib9oYo5NJB53NumoDVd6c $r29;
        java.util.ArrayList $r30;
        com.android.server.audio.BtHelper $r31;
        android.util.PrintWriterPrinter $r36;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: java.lang.String;

        $r5 = r0.<com.android.server.audio.AudioDeviceBroker: com.android.server.audio.AudioDeviceBroker$BrokerHandler mBrokerHandler>;

        if $r5 == null goto label1;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Message handler (watch for unhandled messages):");

        $r35 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r35);

        r3 = r0.<com.android.server.audio.AudioDeviceBroker: com.android.server.audio.AudioDeviceBroker$BrokerHandler mBrokerHandler>;

        $r36 = new android.util.PrintWriterPrinter;

        specialinvoke $r36.<android.util.PrintWriterPrinter: void <init>(java.io.PrintWriter)>(r1);

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r40 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<com.android.server.audio.AudioDeviceBroker$BrokerHandler: void dump(android.util.Printer,java.lang.String)>($r36, $r40);

        goto label2;

     label1:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Message handler is null");

     label2:
        $r6 = r0.<com.android.server.audio.AudioDeviceBroker: com.android.server.audio.AudioDeviceInventory mDeviceInventory>;

        virtualinvoke $r6.<com.android.server.audio.AudioDeviceInventory: void dump(java.io.PrintWriter,java.lang.String)>(r1, r2);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mForcedUseForComm: ");

        $i0 = r0.<com.android.server.audio.AudioDeviceBroker: int mForcedUseForComm>;

        $r11 = staticinvoke <android.media.AudioSystem: java.lang.String forceUseConfigToString(int)>($i0);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r13);

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mForcedUseForCommExt: ");

        $i1 = r0.<com.android.server.audio.AudioDeviceBroker: int mForcedUseForCommExt>;

        $r17 = staticinvoke <android.media.AudioSystem: java.lang.String forceUseConfigToString(int)>($i1);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r19);

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mModeOwnerPid: ");

        $i2 = r0.<com.android.server.audio.AudioDeviceBroker: int mModeOwnerPid>;

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r24 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r24);

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Speakerphone clients:");

        $r28 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r28);

        $r30 = r0.<com.android.server.audio.AudioDeviceBroker: java.util.ArrayList mSpeakerphoneClients>;

        $r29 = new com.android.server.audio._$$Lambda$AudioDeviceBroker$_5btcnib9oYo5NJB53NumoDVd6c;

        specialinvoke $r29.<com.android.server.audio._$$Lambda$AudioDeviceBroker$_5btcnib9oYo5NJB53NumoDVd6c: void <init>(java.io.PrintWriter,java.lang.String)>(r1, r2);

        virtualinvoke $r30.<java.util.ArrayList: void forEach(java.util.function.Consumer)>($r29);

        $r31 = r0.<com.android.server.audio.AudioDeviceBroker: com.android.server.audio.BtHelper mBtHelper>;

        virtualinvoke $r31.<com.android.server.audio.BtHelper: void dump(java.io.PrintWriter,java.lang.String)>(r1, r2);

        return;
    }

    int getA2dpCodec(android.bluetooth.BluetoothDevice)
    {
        com.android.server.audio.AudioDeviceBroker r0;
        java.lang.Object r1;
        int i0;
        com.android.server.audio.BtHelper $r2;
        java.lang.Throwable $r3;
        android.bluetooth.BluetoothDevice r4;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        r4 := @parameter0: android.bluetooth.BluetoothDevice;

        r1 = r0.<com.android.server.audio.AudioDeviceBroker: java.lang.Object mDeviceStateLock>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.audio.AudioDeviceBroker: com.android.server.audio.BtHelper mBtHelper>;

        i0 = virtualinvoke $r2.<com.android.server.audio.BtHelper: int getA2dpCodec(android.bluetooth.BluetoothDevice)>(r4);

        exitmonitor r1;

     label2:
        return i0;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    boolean getBluetoothA2dpEnabled()
    {
        com.android.server.audio.AudioDeviceBroker r0;
        java.lang.Object r1;
        boolean z0;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        r1 = r0.<com.android.server.audio.AudioDeviceBroker: java.lang.Object mDeviceStateLock>;

        entermonitor r1;

     label1:
        z0 = r0.<com.android.server.audio.AudioDeviceBroker: boolean mBluetoothA2dpEnabled>;

        exitmonitor r1;

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    android.content.ContentResolver getContentResolver()
    {
        com.android.server.audio.AudioDeviceBroker r0;
        com.android.server.audio.AudioService $r1;
        android.content.ContentResolver $r2;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        $r1 = r0.<com.android.server.audio.AudioDeviceBroker: com.android.server.audio.AudioService mAudioService>;

        $r2 = virtualinvoke $r1.<com.android.server.audio.AudioService: android.content.ContentResolver getContentResolver()>();

        return $r2;
    }

    android.content.Context getContext()
    {
        com.android.server.audio.AudioDeviceBroker r0;
        android.content.Context $r1;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        $r1 = r0.<com.android.server.audio.AudioDeviceBroker: android.content.Context mContext>;

        return $r1;
    }

    android.media.AudioRoutesInfo getCurAudioRoutes()
    {
        com.android.server.audio.AudioDeviceBroker r0;
        java.lang.Object r1;
        com.android.server.audio.AudioDeviceInventory $r2;
        java.lang.Throwable $r3;
        android.media.AudioRoutesInfo r4;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        r1 = r0.<com.android.server.audio.AudioDeviceBroker: java.lang.Object mDeviceStateLock>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.audio.AudioDeviceBroker: com.android.server.audio.AudioDeviceInventory mDeviceInventory>;

        r4 = virtualinvoke $r2.<com.android.server.audio.AudioDeviceInventory: android.media.AudioRoutesInfo getCurAudioRoutes()>();

        exitmonitor r1;

     label2:
        return r4;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    int getDeviceForStream(int)
    {
        com.android.server.audio.AudioDeviceBroker r0;
        int i0, $i1;
        com.android.server.audio.AudioService $r1;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.audio.AudioDeviceBroker: com.android.server.audio.AudioService mAudioService>;

        $i1 = virtualinvoke $r1.<com.android.server.audio.AudioService: int getDeviceForStream(int)>(i0);

        return $i1;
    }

    int getModeOwnerPid()
    {
        com.android.server.audio.AudioDeviceBroker r0;
        int $i0;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        $i0 = r0.<com.android.server.audio.AudioDeviceBroker: int mModeOwnerPid>;

        return $i0;
    }

    int getVssVolumeForDevice(int, int)
    {
        com.android.server.audio.AudioDeviceBroker r0;
        int i0, i1, $i2;
        com.android.server.audio.AudioService $r1;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.server.audio.AudioDeviceBroker: com.android.server.audio.AudioService mAudioService>;

        $i2 = virtualinvoke $r1.<com.android.server.audio.AudioService: int getVssVolumeForDevice(int,int)>(i0, i1);

        return $i2;
    }

    void handleCancelFailureToConnectToBtHeadsetService()
    {
        com.android.server.audio.AudioDeviceBroker r0;
        com.android.server.audio.AudioDeviceBroker$BrokerHandler $r1;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        $r1 = r0.<com.android.server.audio.AudioDeviceBroker: com.android.server.audio.AudioDeviceBroker$BrokerHandler mBrokerHandler>;

        virtualinvoke $r1.<com.android.server.audio.AudioDeviceBroker$BrokerHandler: void removeMessages(int)>(9);

        return;
    }

    boolean handleDeviceConnection(boolean, int, java.lang.String, java.lang.String)
    {
        com.android.server.audio.AudioDeviceBroker r0;
        int i0;
        java.lang.String r1, r5;
        java.lang.Object r2;
        com.android.server.audio.AudioDeviceInventory $r3;
        java.lang.Throwable $r4;
        boolean z0, z1;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        r5 := @parameter2: java.lang.String;

        r1 := @parameter3: java.lang.String;

        r2 = r0.<com.android.server.audio.AudioDeviceBroker: java.lang.Object mDeviceStateLock>;

        entermonitor r2;

     label1:
        $r3 = r0.<com.android.server.audio.AudioDeviceBroker: com.android.server.audio.AudioDeviceInventory mDeviceInventory>;

        z1 = virtualinvoke $r3.<com.android.server.audio.AudioDeviceInventory: boolean handleDeviceConnection(boolean,int,java.lang.String,java.lang.String)>(z0, i0, r5, r1);

        exitmonitor r2;

     label2:
        return z1;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r2;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    void handleFailureToConnectToBtHeadsetService(int)
    {
        com.android.server.audio.AudioDeviceBroker r0;
        int i0;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        i0 := @parameter0: int;

        specialinvoke r0.<com.android.server.audio.AudioDeviceBroker: void sendMsg(int,int,int)>(9, 0, i0);

        return;
    }

    boolean hasAudioFocusUsers()
    {
        com.android.server.audio.AudioDeviceBroker r0;
        com.android.server.audio.AudioService $r1;
        boolean $z0;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        $r1 = r0.<com.android.server.audio.AudioDeviceBroker: com.android.server.audio.AudioService mAudioService>;

        $z0 = virtualinvoke $r1.<com.android.server.audio.AudioService: boolean hasAudioFocusUsers()>();

        return $z0;
    }

    boolean hasMediaDynamicPolicy()
    {
        com.android.server.audio.AudioDeviceBroker r0;
        com.android.server.audio.AudioService $r1;
        boolean $z0;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        $r1 = r0.<com.android.server.audio.AudioDeviceBroker: com.android.server.audio.AudioService mAudioService>;

        $z0 = virtualinvoke $r1.<com.android.server.audio.AudioService: boolean hasMediaDynamicPolicy()>();

        return $z0;
    }

    boolean hasScheduledA2dpSinkConnectionState(android.bluetooth.BluetoothDevice)
    {
        com.android.server.audio.AudioDeviceBroker r0;
        com.android.server.audio.BtHelper$BluetoothA2dpDeviceInfo $r1;
        com.android.server.audio.AudioDeviceBroker$BrokerHandler $r2, $r3;
        boolean $z0, $z1, z2;
        android.bluetooth.BluetoothDevice r4;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        r4 := @parameter0: android.bluetooth.BluetoothDevice;

        $r1 = new com.android.server.audio.BtHelper$BluetoothA2dpDeviceInfo;

        specialinvoke $r1.<com.android.server.audio.BtHelper$BluetoothA2dpDeviceInfo: void <init>(android.bluetooth.BluetoothDevice)>(r4);

        $r2 = r0.<com.android.server.audio.AudioDeviceBroker: com.android.server.audio.AudioDeviceBroker$BrokerHandler mBrokerHandler>;

        $z0 = virtualinvoke $r2.<com.android.server.audio.AudioDeviceBroker$BrokerHandler: boolean hasEqualMessages(int,java.lang.Object)>(27, $r1);

        if $z0 != 0 goto label2;

        $r3 = r0.<com.android.server.audio.AudioDeviceBroker: com.android.server.audio.AudioDeviceBroker$BrokerHandler mBrokerHandler>;

        $z1 = virtualinvoke $r3.<com.android.server.audio.AudioDeviceBroker$BrokerHandler: boolean hasEqualMessages(int,java.lang.Object)>(28, $r1);

        if $z1 == 0 goto label1;

        goto label2;

     label1:
        z2 = 0;

        goto label3;

     label2:
        z2 = 1;

     label3:
        return z2;
    }

    boolean isAvrcpAbsoluteVolumeSupported()
    {
        com.android.server.audio.AudioDeviceBroker r0;
        java.lang.Object r1;
        boolean z0;
        com.android.server.audio.BtHelper $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        r1 = r0.<com.android.server.audio.AudioDeviceBroker: java.lang.Object mDeviceStateLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.audio.AudioDeviceBroker: com.android.server.audio.BtHelper mBtHelper>;

        z0 = virtualinvoke $r3.<com.android.server.audio.BtHelper: boolean isAvrcpAbsoluteVolumeSupported()>();

        exitmonitor r1;

     label2:
        return z0;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    boolean isBluetoothA2dpOn()
    {
        com.android.server.audio.AudioDeviceBroker r0;
        java.lang.Object r1;
        boolean z0;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        r1 = r0.<com.android.server.audio.AudioDeviceBroker: java.lang.Object mDeviceStateLock>;

        entermonitor r1;

     label1:
        z0 = r0.<com.android.server.audio.AudioDeviceBroker: boolean mBluetoothA2dpEnabled>;

        exitmonitor r1;

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    boolean isBluetoothScoOnForApp()
    {
        com.android.server.audio.AudioDeviceBroker r0;
        java.lang.Object r1;
        int $i0;
        java.lang.Throwable $r3;
        boolean z0;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        r1 = r0.<com.android.server.audio.AudioDeviceBroker: java.lang.Object mDeviceStateLock>;

        entermonitor r1;

     label1:
        $i0 = r0.<com.android.server.audio.AudioDeviceBroker: int mForcedUseForCommExt>;

        if $i0 != 3 goto label3;

     label2:
        z0 = 1;

        goto label4;

     label3:
        z0 = 0;

     label4:
        exitmonitor r1;

     label5:
        return z0;

     label6:
        $r3 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    boolean isInCommunication()
    {
        com.android.server.audio.AudioDeviceBroker r0;
        com.android.server.audio.AudioService $r1;
        boolean $z0;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        $r1 = r0.<com.android.server.audio.AudioDeviceBroker: com.android.server.audio.AudioService mAudioService>;

        $z0 = virtualinvoke $r1.<com.android.server.audio.AudioService: boolean isInCommunication()>();

        return $z0;
    }

    boolean isSpeakerphoneOn()
    {
        com.android.server.audio.AudioDeviceBroker r0;
        java.lang.Object r1;
        int i0;
        java.lang.Throwable $r3;
        boolean z0;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        r1 = r0.<com.android.server.audio.AudioDeviceBroker: java.lang.Object mDeviceStateLock>;

        entermonitor r1;

     label1:
        i0 = r0.<com.android.server.audio.AudioDeviceBroker: int mForcedUseForCommExt>;

     label2:
        z0 = 1;

        if i0 != 1 goto label3;

        goto label4;

     label3:
        z0 = 0;

     label4:
        exitmonitor r1;

     label5:
        return z0;

     label6:
        $r3 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    void onAudioServerDied()
    {
        com.android.server.audio.AudioDeviceBroker r0;
        java.lang.Object r1;
        java.lang.StringBuilder r2;
        int $i0, $i2, $i3;
        java.lang.String $r5, r7;
        java.lang.Throwable $r6;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        r1 = r0.<com.android.server.audio.AudioDeviceBroker: java.lang.Object mDeviceStateLock>;

        entermonitor r1;

     label1:
        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BT_SCO=");

        $i0 = r0.<com.android.server.audio.AudioDeviceBroker: int mForcedUseForComm>;

        if $i0 != 3 goto label3;

     label2:
        r7 = "on";

        goto label4;

     label3:
        r7 = "off";

     label4:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r5 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.media.AudioSystem: int setParameters(java.lang.String)>($r5);

        $i2 = r0.<com.android.server.audio.AudioDeviceBroker: int mForcedUseForComm>;

        specialinvoke r0.<com.android.server.audio.AudioDeviceBroker: void onSetForceUse(int,int,boolean,java.lang.String)>(0, $i2, 0, "onAudioServerDied");

        $i3 = r0.<com.android.server.audio.AudioDeviceBroker: int mForcedUseForComm>;

        specialinvoke r0.<com.android.server.audio.AudioDeviceBroker: void onSetForceUse(int,int,boolean,java.lang.String)>(2, $i3, 0, "onAudioServerDied");

        exitmonitor r1;

     label5:
        specialinvoke r0.<com.android.server.audio.AudioDeviceBroker: void sendMsgNoDelay(int,int)>(1, 0);

        return;

     label6:
        $r6 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    void onSystemReady()
    {
        com.android.server.audio.AudioDeviceBroker r0;
        java.lang.Object r1, r2;
        com.android.server.audio.AudioService $r3;
        int $i0;
        com.android.server.audio.BtHelper $r4;
        java.lang.Throwable $r5, $r6;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        r1 = r0.<com.android.server.audio.AudioDeviceBroker: java.lang.Object mSetModeLock>;

        entermonitor r1;

     label01:
        r2 = r0.<com.android.server.audio.AudioDeviceBroker: java.lang.Object mDeviceStateLock>;

        entermonitor r2;

     label02:
        $r3 = r0.<com.android.server.audio.AudioDeviceBroker: com.android.server.audio.AudioService mAudioService>;

        $i0 = virtualinvoke $r3.<com.android.server.audio.AudioService: int getModeOwnerPid()>();

        r0.<com.android.server.audio.AudioDeviceBroker: int mModeOwnerPid> = $i0;

        $r4 = r0.<com.android.server.audio.AudioDeviceBroker: com.android.server.audio.BtHelper mBtHelper>;

        virtualinvoke $r4.<com.android.server.audio.BtHelper: void onSystemReady()>();

        exitmonitor r2;

     label03:
        exitmonitor r1;

     label04:
        return;

     label05:
        $r5 := @caughtexception;

     label06:
        exitmonitor r2;

     label07:
        throw $r5;

     label08:
        $r6 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label02 to label03 with label05;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label06 to label07 with label05;
        catch java.lang.Throwable from label07 to label08 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    void postA2dpActiveDeviceChange(com.android.server.audio.BtHelper$BluetoothA2dpDeviceInfo)
    {
        com.android.server.audio.AudioDeviceBroker r0;
        com.android.server.audio.BtHelper$BluetoothA2dpDeviceInfo r1;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        r1 := @parameter0: com.android.server.audio.BtHelper$BluetoothA2dpDeviceInfo;

        specialinvoke r0.<com.android.server.audio.AudioDeviceBroker: void sendLMsgNoDelay(int,int,java.lang.Object)>(18, 2, r1);

        return;
    }

    void postA2dpSinkConnection(int, com.android.server.audio.BtHelper$BluetoothA2dpDeviceInfo, int)
    {
        com.android.server.audio.AudioDeviceBroker r0;
        int i0, i1;
        com.android.server.audio.BtHelper$BluetoothA2dpDeviceInfo r1;
        byte b2;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.server.audio.BtHelper$BluetoothA2dpDeviceInfo;

        i1 := @parameter2: int;

        if i0 != 2 goto label1;

        b2 = 27;

        goto label2;

     label1:
        b2 = 28;

     label2:
        specialinvoke r0.<com.android.server.audio.AudioDeviceBroker: void sendILMsg(int,int,int,java.lang.Object,int)>(b2, 2, i0, r1, i1);

        return;
    }

    void postA2dpSourceConnection(int, com.android.server.audio.BtHelper$BluetoothA2dpDeviceInfo, int)
    {
        com.android.server.audio.AudioDeviceBroker r0;
        int i0, i1;
        com.android.server.audio.BtHelper$BluetoothA2dpDeviceInfo r1;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.server.audio.BtHelper$BluetoothA2dpDeviceInfo;

        i1 := @parameter2: int;

        specialinvoke r0.<com.android.server.audio.AudioDeviceBroker: void sendILMsg(int,int,int,java.lang.Object,int)>(7, 2, i0, r1, i1);

        return;
    }

    void postAccessoryPlugMediaUnmute(int)
    {
        com.android.server.audio.AudioDeviceBroker r0;
        int i0;
        com.android.server.audio.AudioService $r1;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.audio.AudioDeviceBroker: com.android.server.audio.AudioService mAudioService>;

        virtualinvoke $r1.<com.android.server.audio.AudioService: void postAccessoryPlugMediaUnmute(int)>(i0);

        return;
    }

    void postApplyVolumeOnDevice(int, int, java.lang.String)
    {
        com.android.server.audio.AudioDeviceBroker r0;
        int i0, i1;
        java.lang.String r1;
        com.android.server.audio.AudioService $r2;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        $r2 = r0.<com.android.server.audio.AudioDeviceBroker: com.android.server.audio.AudioService mAudioService>;

        virtualinvoke $r2.<com.android.server.audio.AudioService: void postApplyVolumeOnDevice(int,int,java.lang.String)>(i0, i1, r1);

        return;
    }

    void postBluetoothA2dpDeviceConfigChange(android.bluetooth.BluetoothDevice)
    {
        com.android.server.audio.AudioDeviceBroker r0;
        android.bluetooth.BluetoothDevice r1;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        specialinvoke r0.<com.android.server.audio.AudioDeviceBroker: void sendLMsgNoDelay(int,int,java.lang.Object)>(11, 2, r1);

        return;
    }

    void postBluetoothA2dpDeviceConnectionStateSuppressNoisyIntent(android.bluetooth.BluetoothDevice, int, int, boolean, int)
    {
        com.android.server.audio.AudioDeviceBroker r0;
        int i0, i1, i2;
        boolean z0;
        java.lang.String r2, $r6, r16;
        android.media.MediaMetrics$Key r4, $r9, $r12;
        com.android.server.audio.AudioDeviceBroker$BtDeviceConnectionInfo $r5;
        android.media.MediaMetrics$Item $r7, $r8, $r11, $r13;
        java.lang.Integer $r10;
        java.lang.Throwable $r14;
        android.bluetooth.BluetoothDevice r15;
        java.lang.Object r17;
        byte b3;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        r15 := @parameter0: android.bluetooth.BluetoothDevice;

        i2 := @parameter1: int;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        i1 := @parameter4: int;

        $r5 = new com.android.server.audio.AudioDeviceBroker$BtDeviceConnectionInfo;

        specialinvoke $r5.<com.android.server.audio.AudioDeviceBroker$BtDeviceConnectionInfo: void <init>(android.bluetooth.BluetoothDevice,int,int,boolean,int)>(r15, i2, i0, z0, i1);

        $r6 = virtualinvoke r15.<android.bluetooth.BluetoothDevice: java.lang.String getName()>();

        r2 = staticinvoke <android.text.TextUtils: java.lang.String emptyIfNull(java.lang.String)>($r6);

        $r7 = new android.media.MediaMetrics$Item;

        specialinvoke $r7.<android.media.MediaMetrics$Item: void <init>(java.lang.String)>("audio.device.postBluetoothA2dpDeviceConnectionStateSuppressNoisyIntent");

        r4 = <android.media.MediaMetrics$Property: android.media.MediaMetrics$Key STATE>;

        if i2 != 2 goto label01;

        r16 = "connected";

        goto label02;

     label01:
        r16 = "disconnected";

     label02:
        $r8 = virtualinvoke $r7.<android.media.MediaMetrics$Item: android.media.MediaMetrics$Item set(android.media.MediaMetrics$Key,java.lang.Object)>(r4, r16);

        $r9 = <android.media.MediaMetrics$Property: android.media.MediaMetrics$Key INDEX>;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r11 = virtualinvoke $r8.<android.media.MediaMetrics$Item: android.media.MediaMetrics$Item set(android.media.MediaMetrics$Key,java.lang.Object)>($r9, $r10);

        $r12 = <android.media.MediaMetrics$Property: android.media.MediaMetrics$Key NAME>;

        $r13 = virtualinvoke $r11.<android.media.MediaMetrics$Item: android.media.MediaMetrics$Item set(android.media.MediaMetrics$Key,java.lang.Object)>($r12, r2);

        virtualinvoke $r13.<android.media.MediaMetrics$Item: boolean record()>();

        r17 = r0.<com.android.server.audio.AudioDeviceBroker: java.lang.Object mDeviceStateLock>;

        entermonitor r17;

     label03:
        specialinvoke r0.<com.android.server.audio.AudioDeviceBroker: void removeScheduledA2dpEvents(android.bluetooth.BluetoothDevice)>(r15);

     label04:
        if i2 != 2 goto label05;

        b3 = 29;

        goto label06;

     label05:
        b3 = 30;

     label06:
        specialinvoke r0.<com.android.server.audio.AudioDeviceBroker: void sendLMsgNoDelay(int,int,java.lang.Object)>(b3, 2, $r5);

        exitmonitor r17;

     label07:
        return;

     label08:
        $r14 := @caughtexception;

     label09:
        exitmonitor r17;

     label10:
        throw $r14;

        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    void postBluetoothHearingAidDeviceConnectionState(android.bluetooth.BluetoothDevice, int, boolean, int, java.lang.String)
    {
        com.android.server.audio.AudioDeviceBroker r0;
        android.bluetooth.BluetoothDevice r1;
        int i0, i1;
        boolean z0;
        java.lang.String r2;
        com.android.server.audio.AudioDeviceBroker$HearingAidDeviceConnectionInfo $r3;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        i1 := @parameter3: int;

        r2 := @parameter4: java.lang.String;

        $r3 = new com.android.server.audio.AudioDeviceBroker$HearingAidDeviceConnectionInfo;

        specialinvoke $r3.<com.android.server.audio.AudioDeviceBroker$HearingAidDeviceConnectionInfo: void <init>(android.bluetooth.BluetoothDevice,int,boolean,int,java.lang.String)>(r1, i0, z0, i1, r2);

        specialinvoke r0.<com.android.server.audio.AudioDeviceBroker: void sendLMsgNoDelay(int,int,java.lang.Object)>(31, 2, $r3);

        return;
    }

    void postBroadcastBecomingNoisy()
    {
        com.android.server.audio.AudioDeviceBroker r0;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        specialinvoke r0.<com.android.server.audio.AudioDeviceBroker: void sendMsgNoDelay(int,int)>(12, 0);

        return;
    }

    void postBroadcastScoConnectionState(int)
    {
        com.android.server.audio.AudioDeviceBroker r0;
        int i0;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        i0 := @parameter0: int;

        specialinvoke r0.<com.android.server.audio.AudioDeviceBroker: void sendIMsgNoDelay(int,int,int)>(3, 2, i0);

        return;
    }

    void postBtA2dpProfileConnected(android.bluetooth.BluetoothA2dp)
    {
        com.android.server.audio.AudioDeviceBroker r0;
        android.bluetooth.BluetoothA2dp r1;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        r1 := @parameter0: android.bluetooth.BluetoothA2dp;

        specialinvoke r0.<com.android.server.audio.AudioDeviceBroker: void sendLMsgNoDelay(int,int,java.lang.Object)>(23, 2, r1);

        return;
    }

    void postBtA2dpSinkProfileConnected(android.bluetooth.BluetoothProfile)
    {
        com.android.server.audio.AudioDeviceBroker r0;
        android.bluetooth.BluetoothProfile r1;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        r1 := @parameter0: android.bluetooth.BluetoothProfile;

        specialinvoke r0.<com.android.server.audio.AudioDeviceBroker: void sendLMsgNoDelay(int,int,java.lang.Object)>(24, 2, r1);

        return;
    }

    void postBtHearingAidProfileConnected(android.bluetooth.BluetoothHearingAid)
    {
        com.android.server.audio.AudioDeviceBroker r0;
        android.bluetooth.BluetoothHearingAid r1;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        r1 := @parameter0: android.bluetooth.BluetoothHearingAid;

        specialinvoke r0.<com.android.server.audio.AudioDeviceBroker: void sendLMsgNoDelay(int,int,java.lang.Object)>(25, 2, r1);

        return;
    }

    void postBtHeasetProfileConnected(android.bluetooth.BluetoothHeadset)
    {
        com.android.server.audio.AudioDeviceBroker r0;
        android.bluetooth.BluetoothHeadset r1;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        r1 := @parameter0: android.bluetooth.BluetoothHeadset;

        specialinvoke r0.<com.android.server.audio.AudioDeviceBroker: void sendLMsgNoDelay(int,int,java.lang.Object)>(26, 2, r1);

        return;
    }

    void postDisconnectA2dp()
    {
        com.android.server.audio.AudioDeviceBroker r0;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        specialinvoke r0.<com.android.server.audio.AudioDeviceBroker: void sendMsgNoDelay(int,int)>(19, 2);

        return;
    }

    void postDisconnectA2dpSink()
    {
        com.android.server.audio.AudioDeviceBroker r0;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        specialinvoke r0.<com.android.server.audio.AudioDeviceBroker: void sendMsgNoDelay(int,int)>(20, 2);

        return;
    }

    void postDisconnectHeadset()
    {
        com.android.server.audio.AudioDeviceBroker r0;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        specialinvoke r0.<com.android.server.audio.AudioDeviceBroker: void sendMsgNoDelay(int,int)>(22, 2);

        return;
    }

    void postDisconnectHearingAid()
    {
        com.android.server.audio.AudioDeviceBroker r0;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        specialinvoke r0.<com.android.server.audio.AudioDeviceBroker: void sendMsgNoDelay(int,int)>(21, 2);

        return;
    }

    void postObserveDevicesForAllStreams()
    {
        com.android.server.audio.AudioDeviceBroker r0;
        com.android.server.audio.AudioService $r1;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        $r1 = r0.<com.android.server.audio.AudioDeviceBroker: com.android.server.audio.AudioService mAudioService>;

        virtualinvoke $r1.<com.android.server.audio.AudioService: void postObserveDevicesForAllStreams()>();

        return;
    }

    void postReportNewRoutes(boolean)
    {
        com.android.server.audio.AudioDeviceBroker r0;
        boolean z0;
        byte b0;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        b0 = 37;

        goto label2;

     label1:
        b0 = 13;

     label2:
        specialinvoke r0.<com.android.server.audio.AudioDeviceBroker: void sendMsgNoDelay(int,int)>(b0, 1);

        return;
    }

    void postSaveRemovePreferredDeviceForStrategy(int)
    {
        com.android.server.audio.AudioDeviceBroker r0;
        int i0;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        i0 := @parameter0: int;

        specialinvoke r0.<com.android.server.audio.AudioDeviceBroker: void sendIMsgNoDelay(int,int,int)>(34, 2, i0);

        return;
    }

    void postSaveSetPreferredDeviceForStrategy(int, android.media.AudioDeviceAttributes)
    {
        com.android.server.audio.AudioDeviceBroker r0;
        int i0;
        android.media.AudioDeviceAttributes r1;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        i0 := @parameter0: int;

        r1 := @parameter1: android.media.AudioDeviceAttributes;

        specialinvoke r0.<com.android.server.audio.AudioDeviceBroker: void sendILMsgNoDelay(int,int,int,java.lang.Object)>(33, 2, i0, r1);

        return;
    }

    void postScoClientDied(java.lang.Object)
    {
        com.android.server.audio.AudioDeviceBroker r0;
        java.lang.Object r1;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<com.android.server.audio.AudioDeviceBroker: void sendLMsgNoDelay(int,int,java.lang.Object)>(32, 2, r1);

        return;
    }

    void postSetA2dpSourceConnectionState(int, com.android.server.audio.BtHelper$BluetoothA2dpDeviceInfo)
    {
        com.android.server.audio.AudioDeviceBroker r0;
        int i0;
        com.android.server.audio.BtHelper$BluetoothA2dpDeviceInfo r1;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.server.audio.BtHelper$BluetoothA2dpDeviceInfo;

        if i0 != 2 goto label1;

        goto label1;

     label1:
        specialinvoke r0.<com.android.server.audio.AudioDeviceBroker: void sendILMsgNoDelay(int,int,int,java.lang.Object)>(7, 2, i0, r1);

        return;
    }

    void postSetAvrcpAbsoluteVolumeIndex(int)
    {
        com.android.server.audio.AudioDeviceBroker r0;
        int i0;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        i0 := @parameter0: int;

        specialinvoke r0.<com.android.server.audio.AudioDeviceBroker: void sendIMsgNoDelay(int,int,int)>(15, 0, i0);

        return;
    }

    void postSetHearingAidConnectionState(int, android.bluetooth.BluetoothDevice, int)
    {
        com.android.server.audio.AudioDeviceBroker r0;
        int i0, i1;
        android.bluetooth.BluetoothDevice r1;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        i0 := @parameter0: int;

        r1 := @parameter1: android.bluetooth.BluetoothDevice;

        i1 := @parameter2: int;

        specialinvoke r0.<com.android.server.audio.AudioDeviceBroker: void sendILMsg(int,int,int,java.lang.Object,int)>(8, 2, i0, r1, i1);

        return;
    }

    void postSetHearingAidVolumeIndex(int, int)
    {
        com.android.server.audio.AudioDeviceBroker r0;
        int i0, i1;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<com.android.server.audio.AudioDeviceBroker: void sendIIMsgNoDelay(int,int,int,int)>(14, 0, i0, i1);

        return;
    }

    void postSetModeOwnerPid(int)
    {
        com.android.server.audio.AudioDeviceBroker r0;
        int i0;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        i0 := @parameter0: int;

        specialinvoke r0.<com.android.server.audio.AudioDeviceBroker: void sendIMsgNoDelay(int,int,int)>(16, 0, i0);

        return;
    }

    void postSetVolumeIndexOnDevice(int, int, int, java.lang.String)
    {
        com.android.server.audio.AudioDeviceBroker r0;
        int i0, i1, i2;
        java.lang.String r1;
        com.android.server.audio.AudioService $r2;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: java.lang.String;

        $r2 = r0.<com.android.server.audio.AudioDeviceBroker: com.android.server.audio.AudioService mAudioService>;

        virtualinvoke $r2.<com.android.server.audio.AudioService: void postSetVolumeIndexOnDevice(int,int,int,java.lang.String)>(i0, i1, i2, r1);

        return;
    }

    void postSetWiredDeviceConnectionState(com.android.server.audio.AudioDeviceInventory$WiredDeviceConnectionState, int)
    {
        com.android.server.audio.AudioDeviceBroker r0;
        com.android.server.audio.AudioDeviceInventory$WiredDeviceConnectionState r1;
        int i0;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        r1 := @parameter0: com.android.server.audio.AudioDeviceInventory$WiredDeviceConnectionState;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.audio.AudioDeviceBroker: void sendLMsg(int,int,java.lang.Object,int)>(2, 2, r1, i0);

        return;
    }

    void postSpeakerphoneClientDied(java.lang.Object)
    {
        com.android.server.audio.AudioDeviceBroker r0;
        java.lang.Object r1;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<com.android.server.audio.AudioDeviceBroker: void sendLMsgNoDelay(int,int,java.lang.Object)>(35, 2, r1);

        return;
    }

    void receiveBtEvent(android.content.Intent)
    {
        com.android.server.audio.AudioDeviceBroker r0;
        java.lang.Object r1, r2;
        com.android.server.audio.BtHelper $r3;
        java.lang.Throwable $r4, $r5;
        android.content.Intent r6;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        r6 := @parameter0: android.content.Intent;

        r1 = r0.<com.android.server.audio.AudioDeviceBroker: java.lang.Object mSetModeLock>;

        entermonitor r1;

     label01:
        r2 = r0.<com.android.server.audio.AudioDeviceBroker: java.lang.Object mDeviceStateLock>;

        entermonitor r2;

     label02:
        $r3 = r0.<com.android.server.audio.AudioDeviceBroker: com.android.server.audio.BtHelper mBtHelper>;

        virtualinvoke $r3.<com.android.server.audio.BtHelper: void receiveBtEvent(android.content.Intent)>(r6);

        exitmonitor r2;

     label03:
        exitmonitor r1;

     label04:
        return;

     label05:
        $r4 := @caughtexception;

     label06:
        exitmonitor r2;

     label07:
        throw $r4;

     label08:
        $r5 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r5;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label02 to label03 with label05;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label06 to label07 with label05;
        catch java.lang.Throwable from label07 to label08 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    void registerStrategyPreferredDeviceDispatcher(android.media.IStrategyPreferredDeviceDispatcher)
    {
        com.android.server.audio.AudioDeviceBroker r0;
        android.media.IStrategyPreferredDeviceDispatcher r1;
        com.android.server.audio.AudioDeviceInventory $r2;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        r1 := @parameter0: android.media.IStrategyPreferredDeviceDispatcher;

        $r2 = r0.<com.android.server.audio.AudioDeviceBroker: com.android.server.audio.AudioDeviceInventory mDeviceInventory>;

        virtualinvoke $r2.<com.android.server.audio.AudioDeviceInventory: void registerStrategyPreferredDeviceDispatcher(android.media.IStrategyPreferredDeviceDispatcher)>(r1);

        return;
    }

    int removePreferredDeviceForStrategySync(int)
    {
        com.android.server.audio.AudioDeviceBroker r0;
        int i0, $i1;
        com.android.server.audio.AudioDeviceInventory $r1;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.audio.AudioDeviceBroker: com.android.server.audio.AudioDeviceInventory mDeviceInventory>;

        $i1 = virtualinvoke $r1.<com.android.server.audio.AudioDeviceInventory: int removePreferredDeviceForStrategySync(int)>(i0);

        return $i1;
    }

    void setA2dpTimeout(java.lang.String, int, int)
    {
        com.android.server.audio.AudioDeviceBroker r0;
        java.lang.String r1;
        int i0, i1;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<com.android.server.audio.AudioDeviceBroker: void sendILMsg(int,int,int,java.lang.Object,int)>(10, 2, i0, r1, i1);

        return;
    }

    void setAvrcpAbsoluteVolumeSupported(boolean)
    {
        com.android.server.audio.AudioDeviceBroker r0;
        boolean z0;
        java.lang.Object r1;
        com.android.server.audio.BtHelper $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        z0 := @parameter0: boolean;

        r1 = r0.<com.android.server.audio.AudioDeviceBroker: java.lang.Object mDeviceStateLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.audio.AudioDeviceBroker: com.android.server.audio.BtHelper mBtHelper>;

        virtualinvoke $r3.<com.android.server.audio.BtHelper: void setAvrcpAbsoluteVolumeSupported(boolean)>(z0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    void setBluetoothA2dpOnInt(boolean, boolean, java.lang.String)
    {
        com.android.server.audio.AudioDeviceBroker r0;
        boolean z0, z1, $z2;
        java.lang.StringBuilder $r1;
        int $i0, $i1;
        com.android.server.audio.AudioDeviceBroker$BrokerHandler $r9;
        java.lang.Throwable $r10;
        java.lang.String r11, r13;
        java.lang.Object r14;
        byte b2;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        r11 := @parameter2: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("setBluetoothA2dpOn(");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") from u/pid:");

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" src:");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);

        r13 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        r14 = r0.<com.android.server.audio.AudioDeviceBroker: java.lang.Object mDeviceStateLock>;

        entermonitor r14;

     label1:
        r0.<com.android.server.audio.AudioDeviceBroker: boolean mBluetoothA2dpEnabled> = z0;

        $r9 = r0.<com.android.server.audio.AudioDeviceBroker: com.android.server.audio.AudioDeviceBroker$BrokerHandler mBrokerHandler>;

        virtualinvoke $r9.<com.android.server.audio.AudioDeviceBroker$BrokerHandler: void removeMessages(int)>(5);

        $z2 = r0.<com.android.server.audio.AudioDeviceBroker: boolean mBluetoothA2dpEnabled>;

        if $z2 == 0 goto label3;

     label2:
        b2 = 0;

        goto label4;

     label3:
        b2 = 10;

     label4:
        specialinvoke r0.<com.android.server.audio.AudioDeviceBroker: void onSetForceUse(int,int,boolean,java.lang.String)>(1, b2, z1, r13);

        exitmonitor r14;

     label5:
        return;

     label6:
        $r10 := @caughtexception;

     label7:
        exitmonitor r14;

     label8:
        throw $r10;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    void setBluetoothA2dpOn_Async(boolean, java.lang.String)
    {
        com.android.server.audio.AudioDeviceBroker r0;
        boolean z0, $z1, $z2;
        java.lang.Object r1;
        com.android.server.audio.AudioDeviceBroker$BrokerHandler $r2;
        java.lang.Throwable $r3;
        java.lang.String r4;
        byte b0;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        z0 := @parameter0: boolean;

        r4 := @parameter1: java.lang.String;

        r1 = r0.<com.android.server.audio.AudioDeviceBroker: java.lang.Object mDeviceStateLock>;

        entermonitor r1;

     label01:
        $z1 = r0.<com.android.server.audio.AudioDeviceBroker: boolean mBluetoothA2dpEnabled>;

        if $z1 != z0 goto label03;

        exitmonitor r1;

     label02:
        return;

     label03:
        r0.<com.android.server.audio.AudioDeviceBroker: boolean mBluetoothA2dpEnabled> = z0;

        $r2 = r0.<com.android.server.audio.AudioDeviceBroker: com.android.server.audio.AudioDeviceBroker$BrokerHandler mBrokerHandler>;

        virtualinvoke $r2.<com.android.server.audio.AudioDeviceBroker$BrokerHandler: void removeMessages(int)>(5);

        $z2 = r0.<com.android.server.audio.AudioDeviceBroker: boolean mBluetoothA2dpEnabled>;

        if $z2 == 0 goto label05;

     label04:
        b0 = 0;

        goto label06;

     label05:
        b0 = 10;

     label06:
        specialinvoke r0.<com.android.server.audio.AudioDeviceBroker: void sendIILMsgNoDelay(int,int,int,int,java.lang.Object)>(5, 2, 1, b0, r4);

        exitmonitor r1;

     label07:
        return;

     label08:
        $r3 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r3;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    void setBluetoothScoOn(boolean, java.lang.String)
    {
        com.android.server.audio.AudioDeviceBroker r0;
        boolean z0, $z1, $z2;
        java.lang.Object r1;
        java.lang.StringBuilder r2;
        int $i0, $i2, $i3, $i5;
        java.lang.String $r5, r9, r10;
        com.android.server.audio.AudioService $r6;
        com.android.server.audio.BtHelper $r7;
        java.lang.Throwable $r8;
        byte b4;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        z0 := @parameter0: boolean;

        r9 := @parameter1: java.lang.String;

        r1 = r0.<com.android.server.audio.AudioDeviceBroker: java.lang.Object mDeviceStateLock>;

        entermonitor r1;

        if z0 == 0 goto label05;

     label01:
        $r7 = r0.<com.android.server.audio.AudioDeviceBroker: com.android.server.audio.BtHelper mBtHelper>;

        $z2 = virtualinvoke $r7.<com.android.server.audio.BtHelper: boolean isBluetoothScoOn()>();

        if $z2 != 0 goto label03;

        r0.<com.android.server.audio.AudioDeviceBroker: int mForcedUseForCommExt> = 3;

        exitmonitor r1;

     label02:
        return;

     label03:
        r0.<com.android.server.audio.AudioDeviceBroker: int mForcedUseForComm> = 3;

     label04:
        goto label09;

     label05:
        $i0 = r0.<com.android.server.audio.AudioDeviceBroker: int mForcedUseForComm>;

        if $i0 != 3 goto label09;

        $z1 = specialinvoke r0.<com.android.server.audio.AudioDeviceBroker: boolean isSpeakerphoneOnRequested()>();

        if $z1 == 0 goto label07;

     label06:
        b4 = 1;

        goto label08;

     label07:
        b4 = 0;

     label08:
        r0.<com.android.server.audio.AudioDeviceBroker: int mForcedUseForComm> = b4;

     label09:
        $i5 = r0.<com.android.server.audio.AudioDeviceBroker: int mForcedUseForComm>;

        r0.<com.android.server.audio.AudioDeviceBroker: int mForcedUseForCommExt> = $i5;

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BT_SCO=");

     label10:
        if z0 == 0 goto label11;

        r10 = "on";

        goto label12;

     label11:
        r10 = "off";

     label12:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        $r5 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.media.AudioSystem: int setParameters(java.lang.String)>($r5);

        $i2 = r0.<com.android.server.audio.AudioDeviceBroker: int mForcedUseForComm>;

        specialinvoke r0.<com.android.server.audio.AudioDeviceBroker: void sendIILMsgNoDelay(int,int,int,int,java.lang.Object)>(4, 2, 0, $i2, r9);

        $i3 = r0.<com.android.server.audio.AudioDeviceBroker: int mForcedUseForComm>;

        specialinvoke r0.<com.android.server.audio.AudioDeviceBroker: void sendIILMsgNoDelay(int,int,int,int,java.lang.Object)>(4, 2, 2, $i3, r9);

        exitmonitor r1;

     label13:
        $r6 = r0.<com.android.server.audio.AudioDeviceBroker: com.android.server.audio.AudioService mAudioService>;

        virtualinvoke $r6.<com.android.server.audio.AudioService: void postUpdateRingerModeServiceInt()>();

        return;

     label14:
        $r8 := @caughtexception;

     label15:
        exitmonitor r1;

     label16:
        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.Throwable from label05 to label06 with label14;
        catch java.lang.Throwable from label08 to label09 with label14;
        catch java.lang.Throwable from label09 to label10 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label15 to label16 with label14;
    }

    void setBluetoothScoOnByApp(boolean)
    {
        com.android.server.audio.AudioDeviceBroker r0;
        boolean z0;
        java.lang.Object r1;
        java.lang.Throwable $r3;
        byte b0;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        z0 := @parameter0: boolean;

        r1 = r0.<com.android.server.audio.AudioDeviceBroker: java.lang.Object mDeviceStateLock>;

        entermonitor r1;

        if z0 == 0 goto label1;

        b0 = 3;

        goto label2;

     label1:
        b0 = 0;

     label2:
        r0.<com.android.server.audio.AudioDeviceBroker: int mForcedUseForCommExt> = b0;

        exitmonitor r1;

     label3:
        return;

     label4:
        $r3 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r3;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    void setForceUse_Async(int, int, java.lang.String)
    {
        com.android.server.audio.AudioDeviceBroker r0;
        int i0, i1;
        java.lang.String r1;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        specialinvoke r0.<com.android.server.audio.AudioDeviceBroker: void sendIILMsgNoDelay(int,int,int,int,java.lang.Object)>(4, 2, i0, i1, r1);

        return;
    }

    int setPreferredDeviceForStrategySync(int, android.media.AudioDeviceAttributes)
    {
        com.android.server.audio.AudioDeviceBroker r0;
        int i0, $i1;
        android.media.AudioDeviceAttributes r1;
        com.android.server.audio.AudioDeviceInventory $r2;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        i0 := @parameter0: int;

        r1 := @parameter1: android.media.AudioDeviceAttributes;

        $r2 = r0.<com.android.server.audio.AudioDeviceBroker: com.android.server.audio.AudioDeviceInventory mDeviceInventory>;

        $i1 = virtualinvoke $r2.<com.android.server.audio.AudioDeviceInventory: int setPreferredDeviceForStrategySync(int,android.media.AudioDeviceAttributes)>(i0, r1);

        return $i1;
    }

    boolean setSpeakerphoneOn(android.os.IBinder, int, boolean, java.lang.String)
    {
        com.android.server.audio.AudioDeviceBroker r0;
        int i0;
        java.lang.String r1;
        java.lang.Object r2;
        boolean $z0, z1, z2, z3, z4;
        java.lang.Throwable $r3;
        android.os.IBinder r4;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        r4 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        z1 := @parameter2: boolean;

        r1 := @parameter3: java.lang.String;

        r2 = r0.<com.android.server.audio.AudioDeviceBroker: java.lang.Object mDeviceStateLock>;

        entermonitor r2;

     label01:
        z2 = specialinvoke r0.<com.android.server.audio.AudioDeviceBroker: boolean addSpeakerphoneClient(android.os.IBinder,int,boolean)>(r4, i0, z1);

     label02:
        z3 = 0;

        if z2 != 0 goto label05;

     label03:
        exitmonitor r2;

     label04:
        return 0;

     label05:
        z4 = virtualinvoke r0.<com.android.server.audio.AudioDeviceBroker: boolean isSpeakerphoneOn()>();

        specialinvoke r0.<com.android.server.audio.AudioDeviceBroker: void updateSpeakerphoneOn(java.lang.String)>(r1);

     label06:
        $z0 = virtualinvoke r0.<com.android.server.audio.AudioDeviceBroker: boolean isSpeakerphoneOn()>();

        if z4 == $z0 goto label08;

     label07:
        z3 = 1;

     label08:
        exitmonitor r2;

     label09:
        return z3;

     label10:
        $r3 := @caughtexception;

     label11:
        exitmonitor r2;

     label12:
        throw $r3;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    void setWiredDeviceConnectionState(int, int, java.lang.String, java.lang.String, java.lang.String)
    {
        com.android.server.audio.AudioDeviceBroker r0;
        int i0, i1;
        java.lang.String r1, r2, r6;
        java.lang.Object r3;
        com.android.server.audio.AudioDeviceInventory $r4;
        java.lang.Throwable $r5;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r6 := @parameter2: java.lang.String;

        r1 := @parameter3: java.lang.String;

        r2 := @parameter4: java.lang.String;

        r3 = r0.<com.android.server.audio.AudioDeviceBroker: java.lang.Object mDeviceStateLock>;

        entermonitor r3;

     label1:
        $r4 = r0.<com.android.server.audio.AudioDeviceBroker: com.android.server.audio.AudioDeviceInventory mDeviceInventory>;

        virtualinvoke $r4.<com.android.server.audio.AudioDeviceInventory: int setWiredDeviceConnectionState(int,int,java.lang.String,java.lang.String,java.lang.String)>(i0, i1, r6, r1, r2);

        exitmonitor r3;

     label2:
        return;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r3;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    void startBluetoothScoForClient_Sync(android.os.IBinder, int, java.lang.String)
    {
        com.android.server.audio.AudioDeviceBroker r0;
        int i0;
        java.lang.String r1;
        java.lang.Object r2;
        com.android.server.audio.BtHelper $r3;
        java.lang.Throwable $r4;
        android.os.IBinder r5;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        r5 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 = r0.<com.android.server.audio.AudioDeviceBroker: java.lang.Object mDeviceStateLock>;

        entermonitor r2;

     label1:
        $r3 = r0.<com.android.server.audio.AudioDeviceBroker: com.android.server.audio.BtHelper mBtHelper>;

        virtualinvoke $r3.<com.android.server.audio.BtHelper: void startBluetoothScoForClient(android.os.IBinder,int,java.lang.String)>(r5, i0, r1);

        exitmonitor r2;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r2;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    android.media.AudioRoutesInfo startWatchingRoutes(android.media.IAudioRoutesObserver)
    {
        com.android.server.audio.AudioDeviceBroker r0;
        java.lang.Object r1;
        com.android.server.audio.AudioDeviceInventory $r2;
        java.lang.Throwable $r3;
        android.media.IAudioRoutesObserver r4;
        android.media.AudioRoutesInfo r5;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        r4 := @parameter0: android.media.IAudioRoutesObserver;

        r1 = r0.<com.android.server.audio.AudioDeviceBroker: java.lang.Object mDeviceStateLock>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.audio.AudioDeviceBroker: com.android.server.audio.AudioDeviceInventory mDeviceInventory>;

        r5 = virtualinvoke $r2.<com.android.server.audio.AudioDeviceInventory: android.media.AudioRoutesInfo startWatchingRoutes(android.media.IAudioRoutesObserver)>(r4);

        exitmonitor r1;

     label2:
        return r5;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    void stopBluetoothScoForClient_Sync(android.os.IBinder, java.lang.String)
    {
        com.android.server.audio.AudioDeviceBroker r0;
        java.lang.String r1;
        java.lang.Object r2;
        com.android.server.audio.BtHelper $r3;
        java.lang.Throwable $r4;
        android.os.IBinder r5;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        r5 := @parameter0: android.os.IBinder;

        r1 := @parameter1: java.lang.String;

        r2 = r0.<com.android.server.audio.AudioDeviceBroker: java.lang.Object mDeviceStateLock>;

        entermonitor r2;

     label1:
        $r3 = r0.<com.android.server.audio.AudioDeviceBroker: com.android.server.audio.BtHelper mBtHelper>;

        virtualinvoke $r3.<com.android.server.audio.BtHelper: void stopBluetoothScoForClient(android.os.IBinder,java.lang.String)>(r5, r1);

        exitmonitor r2;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r2;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    void toggleHdmiIfConnected_Async()
    {
        com.android.server.audio.AudioDeviceBroker r0;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        specialinvoke r0.<com.android.server.audio.AudioDeviceBroker: void sendMsgNoDelay(int,int)>(6, 2);

        return;
    }

    void unregisterStrategyPreferredDeviceDispatcher(android.media.IStrategyPreferredDeviceDispatcher)
    {
        com.android.server.audio.AudioDeviceBroker r0;
        android.media.IStrategyPreferredDeviceDispatcher r1;
        com.android.server.audio.AudioDeviceInventory $r2;

        r0 := @this: com.android.server.audio.AudioDeviceBroker;

        r1 := @parameter0: android.media.IStrategyPreferredDeviceDispatcher;

        $r2 = r0.<com.android.server.audio.AudioDeviceBroker: com.android.server.audio.AudioDeviceInventory mDeviceInventory>;

        virtualinvoke $r2.<com.android.server.audio.AudioDeviceInventory: void unregisterStrategyPreferredDeviceDispatcher(android.media.IStrategyPreferredDeviceDispatcher)>(r1);

        return;
    }
}
