public class com.android.server.audio.AudioDeviceInventory extends java.lang.Object
{
    private static final java.util.Set BECOMING_NOISY_INTENT_DEVICES_SET;
    private static final java.lang.String CONNECT_INTENT_KEY_ADDRESS;
    private static final java.lang.String CONNECT_INTENT_KEY_DEVICE_CLASS;
    private static final java.lang.String CONNECT_INTENT_KEY_HAS_CAPTURE;
    private static final java.lang.String CONNECT_INTENT_KEY_HAS_MIDI;
    private static final java.lang.String CONNECT_INTENT_KEY_HAS_PLAYBACK;
    private static final java.lang.String CONNECT_INTENT_KEY_PORT_NAME;
    private static final java.lang.String CONNECT_INTENT_KEY_STATE;
    private static final java.util.Set DEVICE_OVERRIDE_A2DP_ROUTE_ON_PLUG_SET;
    private static final java.lang.String TAG;
    private static final java.lang.String mMetricsId;
    private final android.util.ArrayMap mApmConnectedDevices;
    private final com.android.server.audio.AudioSystemAdapter mAudioSystem;
    private final java.util.LinkedHashMap mConnectedDevices;
    final android.media.AudioRoutesInfo mCurAudioRoutes;
    private com.android.server.audio.AudioDeviceBroker mDeviceBroker;
    private final java.lang.Object mDevicesLock;
    final android.os.RemoteCallbackList mPrefDevDispatchers;
    private final android.util.ArrayMap mPreferredDevices;
    final android.os.RemoteCallbackList mRoutesObservers;

    static void <clinit>()
    {
        java.lang.Integer r0, $r7, $r9, $r11, $r14, r21, r23;
        java.util.HashSet $r1, $r4;
        java.util.Set $r2, $r3, $r5, $r6, $r8, $r10, $r12, $r13, $r15, $r16, $r17, $r18, r20, r22;

        <com.android.server.audio.AudioDeviceInventory: java.lang.String mMetricsId> = "audio.device.";

        <com.android.server.audio.AudioDeviceInventory: java.lang.String TAG> = "AS.AudioDeviceInventory";

        <com.android.server.audio.AudioDeviceInventory: java.lang.String CONNECT_INTENT_KEY_STATE> = "state";

        <com.android.server.audio.AudioDeviceInventory: java.lang.String CONNECT_INTENT_KEY_PORT_NAME> = "portName";

        <com.android.server.audio.AudioDeviceInventory: java.lang.String CONNECT_INTENT_KEY_HAS_PLAYBACK> = "hasPlayback";

        <com.android.server.audio.AudioDeviceInventory: java.lang.String CONNECT_INTENT_KEY_HAS_MIDI> = "hasMIDI";

        <com.android.server.audio.AudioDeviceInventory: java.lang.String CONNECT_INTENT_KEY_HAS_CAPTURE> = "hasCapture";

        <com.android.server.audio.AudioDeviceInventory: java.lang.String CONNECT_INTENT_KEY_DEVICE_CLASS> = "class";

        <com.android.server.audio.AudioDeviceInventory: java.lang.String CONNECT_INTENT_KEY_ADDRESS> = "address";

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        <com.android.server.audio.AudioDeviceInventory: java.util.Set DEVICE_OVERRIDE_A2DP_ROUTE_ON_PLUG_SET> = $r1;

        r0 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>(r0);

        r20 = <com.android.server.audio.AudioDeviceInventory: java.util.Set DEVICE_OVERRIDE_A2DP_ROUTE_ON_PLUG_SET>;

        r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(8);

        interfaceinvoke r20.<java.util.Set: boolean add(java.lang.Object)>(r21);

        r22 = <com.android.server.audio.AudioDeviceInventory: java.util.Set DEVICE_OVERRIDE_A2DP_ROUTE_ON_PLUG_SET>;

        r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(131072);

        interfaceinvoke r22.<java.util.Set: boolean add(java.lang.Object)>(r23);

        $r3 = <com.android.server.audio.AudioDeviceInventory: java.util.Set DEVICE_OVERRIDE_A2DP_ROUTE_ON_PLUG_SET>;

        $r2 = <android.media.AudioSystem: java.util.Set DEVICE_OUT_ALL_USB_SET>;

        interfaceinvoke $r3.<java.util.Set: boolean addAll(java.util.Collection)>($r2);

        $r4 = new java.util.HashSet;

        specialinvoke $r4.<java.util.HashSet: void <init>()>();

        <com.android.server.audio.AudioDeviceInventory: java.util.Set BECOMING_NOISY_INTENT_DEVICES_SET> = $r4;

        interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>(r0);

        $r5 = <com.android.server.audio.AudioDeviceInventory: java.util.Set BECOMING_NOISY_INTENT_DEVICES_SET>;

        interfaceinvoke $r5.<java.util.Set: boolean add(java.lang.Object)>(r21);

        $r6 = <com.android.server.audio.AudioDeviceInventory: java.util.Set BECOMING_NOISY_INTENT_DEVICES_SET>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1024);

        interfaceinvoke $r6.<java.util.Set: boolean add(java.lang.Object)>($r7);

        $r8 = <com.android.server.audio.AudioDeviceInventory: java.util.Set BECOMING_NOISY_INTENT_DEVICES_SET>;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2048);

        interfaceinvoke $r8.<java.util.Set: boolean add(java.lang.Object)>($r9);

        $r10 = <com.android.server.audio.AudioDeviceInventory: java.util.Set BECOMING_NOISY_INTENT_DEVICES_SET>;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4096);

        interfaceinvoke $r10.<java.util.Set: boolean add(java.lang.Object)>($r11);

        $r12 = <com.android.server.audio.AudioDeviceInventory: java.util.Set BECOMING_NOISY_INTENT_DEVICES_SET>;

        interfaceinvoke $r12.<java.util.Set: boolean add(java.lang.Object)>(r23);

        $r13 = <com.android.server.audio.AudioDeviceInventory: java.util.Set BECOMING_NOISY_INTENT_DEVICES_SET>;

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(134217728);

        interfaceinvoke $r13.<java.util.Set: boolean add(java.lang.Object)>($r14);

        $r16 = <com.android.server.audio.AudioDeviceInventory: java.util.Set BECOMING_NOISY_INTENT_DEVICES_SET>;

        $r15 = <android.media.AudioSystem: java.util.Set DEVICE_OUT_ALL_A2DP_SET>;

        interfaceinvoke $r16.<java.util.Set: boolean addAll(java.util.Collection)>($r15);

        $r18 = <com.android.server.audio.AudioDeviceInventory: java.util.Set BECOMING_NOISY_INTENT_DEVICES_SET>;

        $r17 = <android.media.AudioSystem: java.util.Set DEVICE_OUT_ALL_USB_SET>;

        interfaceinvoke $r18.<java.util.Set: boolean addAll(java.util.Collection)>($r17);

        return;
    }

    void <init>(com.android.server.audio.AudioDeviceBroker)
    {
        com.android.server.audio.AudioDeviceInventory r0;
        com.android.server.audio.AudioDeviceBroker r1;
        java.lang.Object $r2;
        com.android.server.audio.AudioDeviceInventory$1 $r3;
        android.util.ArrayMap $r4, $r5;
        android.media.AudioRoutesInfo $r6;
        android.os.RemoteCallbackList $r7, $r8;
        com.android.server.audio.AudioSystemAdapter $r9;

        r0 := @this: com.android.server.audio.AudioDeviceInventory;

        r1 := @parameter0: com.android.server.audio.AudioDeviceBroker;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<com.android.server.audio.AudioDeviceInventory: java.lang.Object mDevicesLock> = $r2;

        $r3 = new com.android.server.audio.AudioDeviceInventory$1;

        specialinvoke $r3.<com.android.server.audio.AudioDeviceInventory$1: void <init>(com.android.server.audio.AudioDeviceInventory)>(r0);

        r0.<com.android.server.audio.AudioDeviceInventory: java.util.LinkedHashMap mConnectedDevices> = $r3;

        $r4 = new android.util.ArrayMap;

        specialinvoke $r4.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.audio.AudioDeviceInventory: android.util.ArrayMap mApmConnectedDevices> = $r4;

        $r5 = new android.util.ArrayMap;

        specialinvoke $r5.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.audio.AudioDeviceInventory: android.util.ArrayMap mPreferredDevices> = $r5;

        $r6 = new android.media.AudioRoutesInfo;

        specialinvoke $r6.<android.media.AudioRoutesInfo: void <init>()>();

        r0.<com.android.server.audio.AudioDeviceInventory: android.media.AudioRoutesInfo mCurAudioRoutes> = $r6;

        $r7 = new android.os.RemoteCallbackList;

        specialinvoke $r7.<android.os.RemoteCallbackList: void <init>()>();

        r0.<com.android.server.audio.AudioDeviceInventory: android.os.RemoteCallbackList mRoutesObservers> = $r7;

        $r8 = new android.os.RemoteCallbackList;

        specialinvoke $r8.<android.os.RemoteCallbackList: void <init>()>();

        r0.<com.android.server.audio.AudioDeviceInventory: android.os.RemoteCallbackList mPrefDevDispatchers> = $r8;

        r0.<com.android.server.audio.AudioDeviceInventory: com.android.server.audio.AudioDeviceBroker mDeviceBroker> = r1;

        $r9 = staticinvoke <com.android.server.audio.AudioSystemAdapter: com.android.server.audio.AudioSystemAdapter getDefaultAdapter()>();

        r0.<com.android.server.audio.AudioDeviceInventory: com.android.server.audio.AudioSystemAdapter mAudioSystem> = $r9;

        return;
    }

    void <init>(com.android.server.audio.AudioSystemAdapter)
    {
        com.android.server.audio.AudioDeviceInventory r0;
        com.android.server.audio.AudioSystemAdapter r1;
        java.lang.Object $r2;
        com.android.server.audio.AudioDeviceInventory$1 $r3;
        android.util.ArrayMap $r4, $r5;
        android.media.AudioRoutesInfo $r6;
        android.os.RemoteCallbackList $r7, $r8;

        r0 := @this: com.android.server.audio.AudioDeviceInventory;

        r1 := @parameter0: com.android.server.audio.AudioSystemAdapter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<com.android.server.audio.AudioDeviceInventory: java.lang.Object mDevicesLock> = $r2;

        $r3 = new com.android.server.audio.AudioDeviceInventory$1;

        specialinvoke $r3.<com.android.server.audio.AudioDeviceInventory$1: void <init>(com.android.server.audio.AudioDeviceInventory)>(r0);

        r0.<com.android.server.audio.AudioDeviceInventory: java.util.LinkedHashMap mConnectedDevices> = $r3;

        $r4 = new android.util.ArrayMap;

        specialinvoke $r4.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.audio.AudioDeviceInventory: android.util.ArrayMap mApmConnectedDevices> = $r4;

        $r5 = new android.util.ArrayMap;

        specialinvoke $r5.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.audio.AudioDeviceInventory: android.util.ArrayMap mPreferredDevices> = $r5;

        $r6 = new android.media.AudioRoutesInfo;

        specialinvoke $r6.<android.media.AudioRoutesInfo: void <init>()>();

        r0.<com.android.server.audio.AudioDeviceInventory: android.media.AudioRoutesInfo mCurAudioRoutes> = $r6;

        $r7 = new android.os.RemoteCallbackList;

        specialinvoke $r7.<android.os.RemoteCallbackList: void <init>()>();

        r0.<com.android.server.audio.AudioDeviceInventory: android.os.RemoteCallbackList mRoutesObservers> = $r7;

        $r8 = new android.os.RemoteCallbackList;

        specialinvoke $r8.<android.os.RemoteCallbackList: void <init>()>();

        r0.<com.android.server.audio.AudioDeviceInventory: android.os.RemoteCallbackList mPrefDevDispatchers> = $r8;

        r0.<com.android.server.audio.AudioDeviceInventory: com.android.server.audio.AudioDeviceBroker mDeviceBroker> = null;

        r0.<com.android.server.audio.AudioDeviceInventory: com.android.server.audio.AudioSystemAdapter mAudioSystem> = r1;

        return;
    }

    private int checkSendBecomingNoisyIntentInt(int, int, int)
    {
        com.android.server.audio.AudioDeviceInventory r0;
        int i0, $i2, $i3, $i4, $i5, i6, i7, i8;
        android.media.MediaMetrics$Item $r2, $r19, $r28, $r31, r32, r35, $r40;
        android.media.MediaMetrics$Key $r3, $r17, $r26, $r29, r33, $r38;
        java.lang.String $r4, r34;
        java.util.Set $r5, $r23;
        java.lang.Integer $r6, $r18, $r24, $r25, $r27, $r30, $r39;
        boolean $z0, $z1, $z2, $z4, $z5, $z6, $z8, $z9;
        java.util.HashSet $r7;
        java.util.LinkedHashMap $r8;
        java.util.Collection $r9;
        com.android.server.audio.AudioDeviceBroker $r10, $r12, $r13, $r20, $r21;
        com.android.server.audio.AudioSystemAdapter $r11;
        com.android.server.audio.AudioEventLogger$StringEvent $r14;
        com.android.server.audio.AudioEventLogger $r15;
        com.android.server.audio.AudioEventLogger$Event $r16;
        java.lang.Object $r22;
        java.util.Iterator r36;
        com.android.server.audio.AudioDeviceInventory$DeviceInfo r37;
        short s9;

        r0 := @this: com.android.server.audio.AudioDeviceInventory;

        i0 := @parameter0: int;

        i6 := @parameter1: int;

        i7 := @parameter2: int;

        $r2 = new android.media.MediaMetrics$Item;

        specialinvoke $r2.<android.media.MediaMetrics$Item: void <init>(java.lang.String)>("audio.device.checkSendBecomingNoisyIntentInt");

        $r3 = <android.media.MediaMetrics$Property: android.media.MediaMetrics$Key DEVICE>;

        $r4 = staticinvoke <android.media.AudioSystem: java.lang.String getDeviceName(int)>(i0);

        r32 = virtualinvoke $r2.<android.media.MediaMetrics$Item: android.media.MediaMetrics$Item set(android.media.MediaMetrics$Key,java.lang.Object)>($r3, $r4);

        r33 = <android.media.MediaMetrics$Property: android.media.MediaMetrics$Key STATE>;

        if i6 != 1 goto label01;

        r34 = "connected";

        goto label02;

     label01:
        r34 = "disconnected";

     label02:
        r35 = virtualinvoke r32.<android.media.MediaMetrics$Item: android.media.MediaMetrics$Item set(android.media.MediaMetrics$Key,java.lang.Object)>(r33, r34);

        if i6 == 0 goto label03;

        $r29 = <android.media.MediaMetrics$Property: android.media.MediaMetrics$Key DELAY_MS>;

        $r30 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r31 = virtualinvoke r35.<android.media.MediaMetrics$Item: android.media.MediaMetrics$Item set(android.media.MediaMetrics$Key,java.lang.Object)>($r29, $r30);

        virtualinvoke $r31.<android.media.MediaMetrics$Item: boolean record()>();

        return 0;

     label03:
        $r5 = <com.android.server.audio.AudioDeviceInventory: java.util.Set BECOMING_NOISY_INTENT_DEVICES_SET>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $z0 = interfaceinvoke $r5.<java.util.Set: boolean contains(java.lang.Object)>($r6);

        if $z0 != 0 goto label04;

        $r26 = <android.media.MediaMetrics$Property: android.media.MediaMetrics$Key DELAY_MS>;

        $r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r28 = virtualinvoke r35.<android.media.MediaMetrics$Item: android.media.MediaMetrics$Item set(android.media.MediaMetrics$Key,java.lang.Object)>($r26, $r27);

        virtualinvoke $r28.<android.media.MediaMetrics$Item: boolean record()>();

        return 0;

     label04:
        $r7 = new java.util.HashSet;

        specialinvoke $r7.<java.util.HashSet: void <init>()>();

        $r8 = r0.<com.android.server.audio.AudioDeviceInventory: java.util.LinkedHashMap mConnectedDevices>;

        $r9 = virtualinvoke $r8.<java.util.LinkedHashMap: java.util.Collection values()>();

        r36 = interfaceinvoke $r9.<java.util.Collection: java.util.Iterator iterator()>();

     label05:
        $z1 = interfaceinvoke r36.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label07;

        $r22 = interfaceinvoke r36.<java.util.Iterator: java.lang.Object next()>();

        r37 = (com.android.server.audio.AudioDeviceInventory$DeviceInfo) $r22;

        $i2 = r37.<com.android.server.audio.AudioDeviceInventory$DeviceInfo: int mDeviceType>;

        $i3 = $i2 & -2147483648;

        if $i3 != 0 goto label06;

        $r23 = <com.android.server.audio.AudioDeviceInventory: java.util.Set BECOMING_NOISY_INTENT_DEVICES_SET>;

        $i4 = r37.<com.android.server.audio.AudioDeviceInventory$DeviceInfo: int mDeviceType>;

        $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $z9 = interfaceinvoke $r23.<java.util.Set: boolean contains(java.lang.Object)>($r24);

        if $z9 == 0 goto label06;

        $i5 = r37.<com.android.server.audio.AudioDeviceInventory$DeviceInfo: int mDeviceType>;

        $r25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        interfaceinvoke $r7.<java.util.Set: boolean add(java.lang.Object)>($r25);

     label06:
        goto label05;

     label07:
        i8 = i7;

        if i7 != 0 goto label08;

        $r21 = r0.<com.android.server.audio.AudioDeviceInventory: com.android.server.audio.AudioDeviceBroker mDeviceBroker>;

        i8 = virtualinvoke $r21.<com.android.server.audio.AudioDeviceBroker: int getDeviceForStream(int)>(3);

     label08:
        if i0 == i8 goto label09;

        s9 = 0;

        $r20 = r0.<com.android.server.audio.AudioDeviceInventory: com.android.server.audio.AudioDeviceBroker mDeviceBroker>;

        $z8 = virtualinvoke $r20.<com.android.server.audio.AudioDeviceBroker: boolean isInCommunication()>();

        if $z8 == 0 goto label11;

     label09:
        s9 = 0;

        $z2 = staticinvoke <android.media.AudioSystem: boolean isSingleAudioDeviceType(java.util.Set,int)>($r7, i0);

        if $z2 == 0 goto label11;

        s9 = 0;

        $r10 = r0.<com.android.server.audio.AudioDeviceInventory: com.android.server.audio.AudioDeviceBroker mDeviceBroker>;

        $z4 = virtualinvoke $r10.<com.android.server.audio.AudioDeviceBroker: boolean hasMediaDynamicPolicy()>();

        if $z4 != 0 goto label11;

        s9 = 0;

        if i8 == 32768 goto label11;

        $r11 = r0.<com.android.server.audio.AudioDeviceInventory: com.android.server.audio.AudioSystemAdapter mAudioSystem>;

        $z5 = virtualinvoke $r11.<com.android.server.audio.AudioSystemAdapter: boolean isStreamActive(int,int)>(3, 0);

        if $z5 != 0 goto label10;

        $r13 = r0.<com.android.server.audio.AudioDeviceInventory: com.android.server.audio.AudioDeviceBroker mDeviceBroker>;

        $z6 = virtualinvoke $r13.<com.android.server.audio.AudioDeviceBroker: boolean hasAudioFocusUsers()>();

        if $z6 != 0 goto label10;

        $r15 = <com.android.server.audio.AudioService: com.android.server.audio.AudioEventLogger sDeviceLogger>;

        $r14 = new com.android.server.audio.AudioEventLogger$StringEvent;

        specialinvoke $r14.<com.android.server.audio.AudioEventLogger$StringEvent: void <init>(java.lang.String)>("dropping ACTION_AUDIO_BECOMING_NOISY");

        $r16 = virtualinvoke $r14.<com.android.server.audio.AudioEventLogger$StringEvent: com.android.server.audio.AudioEventLogger$Event printLog(java.lang.String)>("AS.AudioDeviceInventory");

        virtualinvoke $r15.<com.android.server.audio.AudioEventLogger: void log(com.android.server.audio.AudioEventLogger$Event)>($r16);

        $r17 = <android.media.MediaMetrics$Property: android.media.MediaMetrics$Key DELAY_MS>;

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r19 = virtualinvoke r35.<android.media.MediaMetrics$Item: android.media.MediaMetrics$Item set(android.media.MediaMetrics$Key,java.lang.Object)>($r17, $r18);

        virtualinvoke $r19.<android.media.MediaMetrics$Item: boolean record()>();

        return 0;

     label10:
        $r12 = r0.<com.android.server.audio.AudioDeviceInventory: com.android.server.audio.AudioDeviceBroker mDeviceBroker>;

        virtualinvoke $r12.<com.android.server.audio.AudioDeviceBroker: void postBroadcastBecomingNoisy()>();

        s9 = 1000;

     label11:
        $r38 = <android.media.MediaMetrics$Property: android.media.MediaMetrics$Key DELAY_MS>;

        $r39 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(s9);

        $r40 = virtualinvoke r35.<android.media.MediaMetrics$Item: android.media.MediaMetrics$Item set(android.media.MediaMetrics$Key,java.lang.Object)>($r38, $r39);

        virtualinvoke $r40.<android.media.MediaMetrics$Item: boolean record()>();

        return s9;
    }

    private void configureHdmiPlugIntent(android.content.Intent, int)
    {
        com.android.server.audio.AudioDeviceInventory r0;
        int[] r1, $r6, $r8, $r14, r28;
        int i0, $i1, $i2, $i3, i5, i6, i7, i9, i10, i11, i13, i14, i15, i16;
        java.lang.Object $r7;
        boolean $z0, $z2;
        java.util.stream.Stream $r11;
        com.android.server.audio.'-$$Lambda$AudioDeviceInventory$BF-h0pJdMg-xR5-FyHERBLWDjA0' $r12;
        java.util.stream.IntStream $r13;
        java.lang.Integer $r16;
        java.lang.String $r21;
        android.content.Intent r22;
        java.util.Iterator r25;
        android.media.AudioPort r26;
        android.media.AudioDevicePort r27;
        java.util.ArrayList r29, r31;
        java.lang.StringBuilder r30;
        java.util.function.ToIntFunction r32;

        r0 := @this: com.android.server.audio.AudioDeviceInventory;

        r22 := @parameter0: android.content.Intent;

        i5 := @parameter1: int;

        virtualinvoke r22.<android.content.Intent: android.content.Intent setAction(java.lang.String)>("android.media.action.HDMI_AUDIO_PLUG");

        virtualinvoke r22.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.media.extra.AUDIO_PLUG_STATE", i5);

        if i5 == 1 goto label01;

        return;

     label01:
        r29 = new java.util.ArrayList;

        specialinvoke r29.<java.util.ArrayList: void <init>()>();

        $r6 = newarray (int)[1];

        i6 = staticinvoke <android.media.AudioSystem: int listAudioPorts(java.util.ArrayList,int[])>(r29, $r6);

        if i6 == 0 goto label02;

        r30 = new java.lang.StringBuilder;

        specialinvoke r30.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("listAudioPorts error ");

        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6);

        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in configureHdmiPlugIntent");

        $r21 = virtualinvoke r30.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("AS.AudioDeviceInventory", $r21);

        return;

     label02:
        r25 = virtualinvoke r29.<java.util.ArrayList: java.util.Iterator iterator()>();

     label03:
        $z2 = interfaceinvoke r25.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label13;

        $r7 = interfaceinvoke r25.<java.util.Iterator: java.lang.Object next()>();

        r26 = (android.media.AudioPort) $r7;

        $z0 = r26 instanceof android.media.AudioDevicePort;

        if $z0 != 0 goto label04;

        goto label03;

     label04:
        r27 = (android.media.AudioDevicePort) r26;

        $i1 = virtualinvoke r27.<android.media.AudioDevicePort: int type()>();

        if $i1 == 1024 goto label05;

        $i3 = virtualinvoke r27.<android.media.AudioDevicePort: int type()>();

        if $i3 == 262144 goto label05;

        goto label03;

     label05:
        $r8 = virtualinvoke r27.<android.media.AudioDevicePort: int[] formats()>();

        r1 = staticinvoke <android.media.AudioFormat: int[] filterPublicFormats(int[])>($r8);

        i7 = lengthof r1;

        if i7 <= 0 goto label09;

        r31 = new java.util.ArrayList;

        specialinvoke r31.<java.util.ArrayList: void <init>(int)>(1);

        i9 = lengthof r1;

        i10 = 0;

     label06:
        if i10 >= i9 goto label08;

        i11 = r1[i10];

        if i11 == 0 goto label07;

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i11);

        virtualinvoke r31.<java.util.ArrayList: boolean add(java.lang.Object)>($r16);

     label07:
        i10 = i10 + 1;

        goto label06;

     label08:
        $r11 = virtualinvoke r31.<java.util.ArrayList: java.util.stream.Stream stream()>();

        $r12 = <com.android.server.audio._$$Lambda$AudioDeviceInventory$BF_h0pJdMg_xR5_FyHERBLWDjA0: com.android.server.audio.'-$$Lambda$AudioDeviceInventory$BF-h0pJdMg-xR5-FyHERBLWDjA0' INSTANCE>;

        r32 = (java.util.function.ToIntFunction) $r12;

        $r13 = interfaceinvoke $r11.<java.util.stream.Stream: java.util.stream.IntStream mapToInt(java.util.function.ToIntFunction)>(r32);

        $r14 = interfaceinvoke $r13.<java.util.stream.IntStream: int[] toArray()>();

        virtualinvoke r22.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int[])>("android.media.extra.ENCODINGS", $r14);

     label09:
        r28 = virtualinvoke r27.<android.media.AudioDevicePort: int[] channelMasks()>();

        i0 = lengthof r28;

        i13 = 0;

        i14 = 0;

     label10:
        if i13 >= i0 goto label12;

        $i2 = r28[i13];

        i15 = staticinvoke <android.media.AudioFormat: int channelCountFromOutChannelMask(int)>($i2);

        i16 = i14;

        if i15 <= i14 goto label11;

        i16 = i15;

     label11:
        i13 = i13 + 1;

        i14 = i16;

        goto label10;

     label12:
        virtualinvoke r22.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.media.extra.MAX_CHANNEL_COUNT", i14);

        goto label03;

     label13:
        return;
    }

    private void dispatchPreferredDevice(int, android.media.AudioDeviceAttributes)
    {
        com.android.server.audio.AudioDeviceInventory r0;
        int i0, i1, i2;
        android.media.AudioDeviceAttributes r1;
        android.os.RemoteCallbackList $r3, $r4, $r5;
        android.os.IInterface $r6;
        android.media.IStrategyPreferredDeviceDispatcher $r7;
        android.os.RemoteException $r8;

        r0 := @this: com.android.server.audio.AudioDeviceInventory;

        i0 := @parameter0: int;

        r1 := @parameter1: android.media.AudioDeviceAttributes;

        $r3 = r0.<com.android.server.audio.AudioDeviceInventory: android.os.RemoteCallbackList mPrefDevDispatchers>;

        i1 = virtualinvoke $r3.<android.os.RemoteCallbackList: int beginBroadcast()>();

        i2 = 0;

     label1:
        if i2 >= i1 goto label6;

     label2:
        $r5 = r0.<com.android.server.audio.AudioDeviceInventory: android.os.RemoteCallbackList mPrefDevDispatchers>;

        $r6 = virtualinvoke $r5.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>(i2);

        $r7 = (android.media.IStrategyPreferredDeviceDispatcher) $r6;

        interfaceinvoke $r7.<android.media.IStrategyPreferredDeviceDispatcher: void dispatchPrefDeviceChanged(int,android.media.AudioDeviceAttributes)>(i0, r1);

     label3:
        goto label5;

     label4:
        $r8 := @caughtexception;

     label5:
        i2 = i2 + 1;

        goto label1;

     label6:
        $r4 = r0.<com.android.server.audio.AudioDeviceInventory: android.os.RemoteCallbackList mPrefDevDispatchers>;

        virtualinvoke $r4.<android.os.RemoteCallbackList: void finishBroadcast()>();

        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    private boolean isCurrentDeviceConnected()
    {
        com.android.server.audio.AudioDeviceInventory r0;
        java.util.LinkedHashMap $r1;
        java.util.Collection $r2;
        java.util.stream.Stream $r3;
        com.android.server.audio._$$Lambda$AudioDeviceInventory$_CdHBhvBDErZWSm39GafCXJiOqQ $r4;
        boolean $z0;

        r0 := @this: com.android.server.audio.AudioDeviceInventory;

        $r1 = r0.<com.android.server.audio.AudioDeviceInventory: java.util.LinkedHashMap mConnectedDevices>;

        $r2 = virtualinvoke $r1.<java.util.LinkedHashMap: java.util.Collection values()>();

        $r3 = interfaceinvoke $r2.<java.util.Collection: java.util.stream.Stream stream()>();

        $r4 = new com.android.server.audio._$$Lambda$AudioDeviceInventory$_CdHBhvBDErZWSm39GafCXJiOqQ;

        specialinvoke $r4.<com.android.server.audio._$$Lambda$AudioDeviceInventory$_CdHBhvBDErZWSm39GafCXJiOqQ: void <init>(com.android.server.audio.AudioDeviceInventory)>(r0);

        $z0 = interfaceinvoke $r3.<java.util.stream.Stream: boolean anyMatch(java.util.function.Predicate)>($r4);

        return $z0;
    }

    static int lambda$configureHdmiPlugIntent$11(java.lang.Integer)
    {
        java.lang.Integer r0;
        int $i0;

        r0 := @parameter0: java.lang.Integer;

        $i0 = virtualinvoke r0.<java.lang.Integer: int intValue()>();

        return $i0;
    }

    static void lambda$disconnectA2dp$4(android.util.ArraySet, com.android.server.audio.AudioDeviceInventory$DeviceInfo)
    {
        android.util.ArraySet r0;
        com.android.server.audio.AudioDeviceInventory$DeviceInfo r1;
        int $i0;
        java.lang.String $r2;

        r0 := @parameter0: android.util.ArraySet;

        r1 := @parameter1: com.android.server.audio.AudioDeviceInventory$DeviceInfo;

        $i0 = r1.<com.android.server.audio.AudioDeviceInventory$DeviceInfo: int mDeviceType>;

        if $i0 != 128 goto label1;

        $r2 = r1.<com.android.server.audio.AudioDeviceInventory$DeviceInfo: java.lang.String mDeviceAddress>;

        virtualinvoke r0.<android.util.ArraySet: boolean add(java.lang.Object)>($r2);

     label1:
        return;
    }

    static void lambda$disconnectA2dpSink$6(android.util.ArraySet, com.android.server.audio.AudioDeviceInventory$DeviceInfo)
    {
        android.util.ArraySet r0;
        com.android.server.audio.AudioDeviceInventory$DeviceInfo r1;
        int $i0;
        java.lang.String $r2;

        r0 := @parameter0: android.util.ArraySet;

        r1 := @parameter1: com.android.server.audio.AudioDeviceInventory$DeviceInfo;

        $i0 = r1.<com.android.server.audio.AudioDeviceInventory$DeviceInfo: int mDeviceType>;

        if $i0 != -2147352576 goto label1;

        $r2 = r1.<com.android.server.audio.AudioDeviceInventory$DeviceInfo: java.lang.String mDeviceAddress>;

        virtualinvoke r0.<android.util.ArraySet: boolean add(java.lang.Object)>($r2);

     label1:
        return;
    }

    static void lambda$disconnectHearingAid$8(android.util.ArraySet, com.android.server.audio.AudioDeviceInventory$DeviceInfo)
    {
        android.util.ArraySet r0;
        com.android.server.audio.AudioDeviceInventory$DeviceInfo r1;
        int $i0;
        java.lang.String $r2;

        r0 := @parameter0: android.util.ArraySet;

        r1 := @parameter1: com.android.server.audio.AudioDeviceInventory$DeviceInfo;

        $i0 = r1.<com.android.server.audio.AudioDeviceInventory$DeviceInfo: int mDeviceType>;

        if $i0 != 134217728 goto label1;

        $r2 = r1.<com.android.server.audio.AudioDeviceInventory$DeviceInfo: java.lang.String mDeviceAddress>;

        virtualinvoke r0.<android.util.ArraySet: boolean add(java.lang.Object)>($r2);

     label1:
        return;
    }

    static void lambda$dump$0(java.io.PrintWriter, java.lang.String, java.lang.Integer, android.media.AudioDeviceAttributes)
    {
        java.io.PrintWriter r0;
        java.lang.String r1, $r12;
        java.lang.Integer r2;
        android.media.AudioDeviceAttributes r3;
        java.lang.StringBuilder $r5;

        r0 := @parameter0: java.io.PrintWriter;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Integer;

        r3 := @parameter3: android.media.AudioDeviceAttributes;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("strategy:");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" device:");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r12 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r12);

        return;
    }

    static void lambda$dump$1(java.io.PrintWriter, java.lang.String, java.lang.String, com.android.server.audio.AudioDeviceInventory$DeviceInfo)
    {
        java.io.PrintWriter r0;
        java.lang.String r1, $r6, $r8, r9;
        com.android.server.audio.AudioDeviceInventory$DeviceInfo r2;
        java.lang.StringBuilder $r3;

        r0 := @parameter0: java.io.PrintWriter;

        r1 := @parameter1: java.lang.String;

        r9 := @parameter2: java.lang.String;

        r2 := @parameter3: com.android.server.audio.AudioDeviceInventory$DeviceInfo;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke r2.<com.android.server.audio.AudioDeviceInventory$DeviceInfo: java.lang.String toString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r8);

        return;
    }

    static void lambda$dump$2(java.io.PrintWriter, java.lang.String, java.lang.Integer, java.lang.String)
    {
        java.io.PrintWriter r0;
        java.lang.String r1, r3, $r9, $r12, $r16;
        java.lang.Integer r2;
        java.lang.StringBuilder $r5;
        int $i0, $i1;

        r0 := @parameter0: java.io.PrintWriter;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Integer;

        r3 := @parameter3: java.lang.String;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" type:0x");

        $i0 = virtualinvoke r2.<java.lang.Integer: int intValue()>();

        $r9 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $i1 = virtualinvoke r2.<java.lang.Integer: int intValue()>();

        $r12 = staticinvoke <android.media.AudioSystem: java.lang.String getDeviceName(int)>($i1);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") addr:");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r16 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r16);

        return;
    }

    private void makeA2dpDeviceAvailable(java.lang.String, java.lang.String, java.lang.String, int)
    {
        com.android.server.audio.AudioDeviceInventory r0;
        java.lang.String r1, $r9, $r25, r27, r28, r34;
        int i0, i1;
        com.android.server.audio.AudioDeviceBroker $r2, $r18;
        com.android.server.audio.AudioSystemAdapter $r3, $r11;
        java.lang.StringBuilder $r4, $r19;
        com.android.server.audio.AudioEventLogger$StringEvent $r8, $r24;
        com.android.server.audio.AudioEventLogger$Event $r10, $r26;
        com.android.server.audio.AudioDeviceInventory$DeviceInfo $r12;
        java.util.LinkedHashMap $r13;
        android.util.ArrayMap $r15;
        java.lang.Integer $r16;
        com.android.server.audio.AudioEventLogger r29, r31;

        r0 := @this: com.android.server.audio.AudioDeviceInventory;

        r27 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r28 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        $r2 = r0.<com.android.server.audio.AudioDeviceInventory: com.android.server.audio.AudioDeviceBroker mDeviceBroker>;

        virtualinvoke $r2.<com.android.server.audio.AudioDeviceBroker: void setBluetoothA2dpOnInt(boolean,boolean,java.lang.String)>(1, 1, r28);

        $r3 = r0.<com.android.server.audio.AudioDeviceInventory: com.android.server.audio.AudioSystemAdapter mAudioSystem>;

        i1 = virtualinvoke $r3.<com.android.server.audio.AudioSystemAdapter: int setDeviceConnectionState(int,int,java.lang.String,java.lang.String,int)>(128, 1, r27, r1, i0);

        if i1 == 0 goto label1;

        r29 = <com.android.server.audio.AudioService: com.android.server.audio.AudioEventLogger sDeviceLogger>;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("APM failed to make available A2DP device addr=");

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r27);

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" error=");

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r24 = new com.android.server.audio.AudioEventLogger$StringEvent;

        $r25 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r24.<com.android.server.audio.AudioEventLogger$StringEvent: void <init>(java.lang.String)>($r25);

        $r26 = virtualinvoke $r24.<com.android.server.audio.AudioEventLogger$StringEvent: com.android.server.audio.AudioEventLogger$Event printLog(java.lang.String)>("AS.AudioDeviceInventory");

        virtualinvoke r29.<com.android.server.audio.AudioEventLogger: void log(com.android.server.audio.AudioEventLogger$Event)>($r26);

        goto label2;

     label1:
        r31 = <com.android.server.audio.AudioService: com.android.server.audio.AudioEventLogger sDeviceLogger>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("A2DP device addr=");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r27);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" now available");

        $r8 = new com.android.server.audio.AudioEventLogger$StringEvent;

        $r9 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<com.android.server.audio.AudioEventLogger$StringEvent: void <init>(java.lang.String)>($r9);

        $r10 = virtualinvoke $r8.<com.android.server.audio.AudioEventLogger$StringEvent: com.android.server.audio.AudioEventLogger$Event printLog(java.lang.String)>("AS.AudioDeviceInventory");

        virtualinvoke r31.<com.android.server.audio.AudioEventLogger: void log(com.android.server.audio.AudioEventLogger$Event)>($r10);

     label2:
        $r11 = r0.<com.android.server.audio.AudioDeviceInventory: com.android.server.audio.AudioSystemAdapter mAudioSystem>;

        virtualinvoke $r11.<com.android.server.audio.AudioSystemAdapter: int setParameters(java.lang.String)>("A2dpSuspended=false");

        $r12 = new com.android.server.audio.AudioDeviceInventory$DeviceInfo;

        specialinvoke $r12.<com.android.server.audio.AudioDeviceInventory$DeviceInfo: void <init>(int,java.lang.String,java.lang.String,int)>(128, r1, r27, i0);

        r34 = virtualinvoke $r12.<com.android.server.audio.AudioDeviceInventory$DeviceInfo: java.lang.String getKey()>();

        $r13 = r0.<com.android.server.audio.AudioDeviceInventory: java.util.LinkedHashMap mConnectedDevices>;

        virtualinvoke $r13.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r34, $r12);

        $r15 = r0.<com.android.server.audio.AudioDeviceInventory: android.util.ArrayMap mApmConnectedDevices>;

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(128);

        virtualinvoke $r15.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r16, r34);

        $r18 = r0.<com.android.server.audio.AudioDeviceInventory: com.android.server.audio.AudioDeviceBroker mDeviceBroker>;

        virtualinvoke $r18.<com.android.server.audio.AudioDeviceBroker: void postAccessoryPlugMediaUnmute(int)>(128);

        specialinvoke r0.<com.android.server.audio.AudioDeviceInventory: void setCurrentAudioRouteNameIfPossible(java.lang.String,boolean)>(r1, 1);

        return;
    }

    private void makeA2dpDeviceUnavailableLater(java.lang.String, int)
    {
        com.android.server.audio.AudioDeviceInventory r0;
        java.lang.String r1, r2;
        int i0, i2;
        com.android.server.audio.AudioDeviceInventory$DeviceInfo r3;
        com.android.server.audio.AudioSystemAdapter $r4;
        java.util.LinkedHashMap $r5, $r7;
        java.lang.Object $r6;
        com.android.server.audio.AudioDeviceBroker $r9;

        r0 := @this: com.android.server.audio.AudioDeviceInventory;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r4 = r0.<com.android.server.audio.AudioDeviceInventory: com.android.server.audio.AudioSystemAdapter mAudioSystem>;

        virtualinvoke $r4.<com.android.server.audio.AudioSystemAdapter: int setParameters(java.lang.String)>("A2dpSuspended=true");

        r2 = staticinvoke <com.android.server.audio.AudioDeviceInventory$DeviceInfo: java.lang.String access$000(int,java.lang.String)>(128, r1);

        $r5 = r0.<com.android.server.audio.AudioDeviceInventory: java.util.LinkedHashMap mConnectedDevices>;

        $r6 = virtualinvoke $r5.<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>(r2);

        r3 = (com.android.server.audio.AudioDeviceInventory$DeviceInfo) $r6;

        if r3 == null goto label1;

        i2 = r3.<com.android.server.audio.AudioDeviceInventory$DeviceInfo: int mDeviceCodecFormat>;

        goto label2;

     label1:
        i2 = 0;

     label2:
        $r7 = r0.<com.android.server.audio.AudioDeviceInventory: java.util.LinkedHashMap mConnectedDevices>;

        virtualinvoke $r7.<java.util.LinkedHashMap: java.lang.Object remove(java.lang.Object)>(r2);

        $r9 = r0.<com.android.server.audio.AudioDeviceInventory: com.android.server.audio.AudioDeviceBroker mDeviceBroker>;

        virtualinvoke $r9.<com.android.server.audio.AudioDeviceBroker: void setA2dpTimeout(java.lang.String,int,int)>(r1, i2, i0);

        return;
    }

    private void makeA2dpDeviceUnavailableNow(java.lang.String, int)
    {
        com.android.server.audio.AudioDeviceInventory r0;
        java.lang.String r1, $r6, $r8, $r23, $r34, $r41, r49;
        java.lang.StringBuilder $r2, $r18, $r28, $r36;
        android.media.MediaMetrics$Item $r5, $r9, $r44, $r46, r48;
        android.media.MediaMetrics$Key $r7, $r10, $r43, $r45;
        java.util.LinkedHashMap $r11;
        android.util.ArrayMap $r13, $r25;
        java.lang.Integer $r14, $r26;
        java.lang.Object $r15;
        boolean $z0;
        com.android.server.audio.AudioDeviceBroker $r16;
        com.android.server.audio.AudioSystemAdapter $r17;
        com.android.server.audio.AudioEventLogger$StringEvent $r22, $r33, $r40;
        com.android.server.audio.AudioEventLogger$Event $r24, $r35, $r42;
        int i0, i1;
        com.android.server.audio.AudioEventLogger r50, r52, r54;

        r0 := @this: com.android.server.audio.AudioDeviceInventory;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("audio.device.a2dp.");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = new android.media.MediaMetrics$Item;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<android.media.MediaMetrics$Item: void <init>(java.lang.String)>($r6);

        $r7 = <android.media.MediaMetrics$Property: android.media.MediaMetrics$Key ENCODING>;

        $r8 = staticinvoke <android.media.AudioSystem: java.lang.String audioFormatToString(int)>(i0);

        $r9 = virtualinvoke $r5.<android.media.MediaMetrics$Item: android.media.MediaMetrics$Item set(android.media.MediaMetrics$Key,java.lang.Object)>($r7, $r8);

        $r10 = <android.media.MediaMetrics$Property: android.media.MediaMetrics$Key EVENT>;

        r48 = virtualinvoke $r9.<android.media.MediaMetrics$Item: android.media.MediaMetrics$Item set(android.media.MediaMetrics$Key,java.lang.Object)>($r10, "makeA2dpDeviceUnavailableNow");

        if r1 != null goto label1;

        $r45 = <android.media.MediaMetrics$Property: android.media.MediaMetrics$Key EARLY_RETURN>;

        $r46 = virtualinvoke r48.<android.media.MediaMetrics$Item: android.media.MediaMetrics$Item set(android.media.MediaMetrics$Key,java.lang.Object)>($r45, "address null");

        virtualinvoke $r46.<android.media.MediaMetrics$Item: boolean record()>();

        return;

     label1:
        r49 = staticinvoke <com.android.server.audio.AudioDeviceInventory$DeviceInfo: java.lang.String access$000(int,java.lang.String)>(128, r1);

        $r11 = r0.<com.android.server.audio.AudioDeviceInventory: java.util.LinkedHashMap mConnectedDevices>;

        virtualinvoke $r11.<java.util.LinkedHashMap: java.lang.Object remove(java.lang.Object)>(r49);

        $r13 = r0.<com.android.server.audio.AudioDeviceInventory: android.util.ArrayMap mApmConnectedDevices>;

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(128);

        $r15 = virtualinvoke $r13.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r14);

        $z0 = virtualinvoke r49.<java.lang.String: boolean equals(java.lang.Object)>($r15);

        if $z0 != 0 goto label2;

        r50 = <com.android.server.audio.AudioService: com.android.server.audio.AudioEventLogger sDeviceLogger>;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("A2DP device ");

        virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" made unavailable, was not used");

        $r40 = new com.android.server.audio.AudioEventLogger$StringEvent;

        $r41 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r40.<com.android.server.audio.AudioEventLogger$StringEvent: void <init>(java.lang.String)>($r41);

        $r42 = virtualinvoke $r40.<com.android.server.audio.AudioEventLogger$StringEvent: com.android.server.audio.AudioEventLogger$Event printLog(java.lang.String)>("AS.AudioDeviceInventory");

        virtualinvoke r50.<com.android.server.audio.AudioEventLogger: void log(com.android.server.audio.AudioEventLogger$Event)>($r42);

        $r43 = <android.media.MediaMetrics$Property: android.media.MediaMetrics$Key EARLY_RETURN>;

        $r44 = virtualinvoke r48.<android.media.MediaMetrics$Item: android.media.MediaMetrics$Item set(android.media.MediaMetrics$Key,java.lang.Object)>($r43, "A2DP device made unavailable, was not used");

        virtualinvoke $r44.<android.media.MediaMetrics$Item: boolean record()>();

        return;

     label2:
        $r16 = r0.<com.android.server.audio.AudioDeviceInventory: com.android.server.audio.AudioDeviceBroker mDeviceBroker>;

        virtualinvoke $r16.<com.android.server.audio.AudioDeviceBroker: void setAvrcpAbsoluteVolumeSupported(boolean)>(0);

        $r17 = r0.<com.android.server.audio.AudioDeviceInventory: com.android.server.audio.AudioSystemAdapter mAudioSystem>;

        i1 = virtualinvoke $r17.<com.android.server.audio.AudioSystemAdapter: int setDeviceConnectionState(int,int,java.lang.String,java.lang.String,int)>(128, 0, r1, "", i0);

        if i1 == 0 goto label3;

        r52 = <com.android.server.audio.AudioService: com.android.server.audio.AudioEventLogger sDeviceLogger>;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("APM failed to make unavailable A2DP device addr=");

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" error=");

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r33 = new com.android.server.audio.AudioEventLogger$StringEvent;

        $r34 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r33.<com.android.server.audio.AudioEventLogger$StringEvent: void <init>(java.lang.String)>($r34);

        $r35 = virtualinvoke $r33.<com.android.server.audio.AudioEventLogger$StringEvent: com.android.server.audio.AudioEventLogger$Event printLog(java.lang.String)>("AS.AudioDeviceInventory");

        virtualinvoke r52.<com.android.server.audio.AudioEventLogger: void log(com.android.server.audio.AudioEventLogger$Event)>($r35);

        goto label4;

     label3:
        r54 = <com.android.server.audio.AudioService: com.android.server.audio.AudioEventLogger sDeviceLogger>;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("A2DP device addr=");

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" made unavailable");

        $r22 = new com.android.server.audio.AudioEventLogger$StringEvent;

        $r23 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r22.<com.android.server.audio.AudioEventLogger$StringEvent: void <init>(java.lang.String)>($r23);

        $r24 = virtualinvoke $r22.<com.android.server.audio.AudioEventLogger$StringEvent: com.android.server.audio.AudioEventLogger$Event printLog(java.lang.String)>("AS.AudioDeviceInventory");

        virtualinvoke r54.<com.android.server.audio.AudioEventLogger: void log(com.android.server.audio.AudioEventLogger$Event)>($r24);

     label4:
        $r25 = r0.<com.android.server.audio.AudioDeviceInventory: android.util.ArrayMap mApmConnectedDevices>;

        $r26 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(128);

        virtualinvoke $r25.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>($r26);

        specialinvoke r0.<com.android.server.audio.AudioDeviceInventory: void setCurrentAudioRouteNameIfPossible(java.lang.String,boolean)>(null, 1);

        virtualinvoke r48.<android.media.MediaMetrics$Item: boolean record()>();

        return;
    }

    private void makeA2dpSrcAvailable(java.lang.String)
    {
        com.android.server.audio.AudioDeviceInventory r0;
        java.lang.String r1, $r4;
        com.android.server.audio.AudioSystemAdapter $r2;
        java.util.LinkedHashMap $r3;
        com.android.server.audio.AudioDeviceInventory$DeviceInfo $r5;

        r0 := @this: com.android.server.audio.AudioDeviceInventory;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.audio.AudioDeviceInventory: com.android.server.audio.AudioSystemAdapter mAudioSystem>;

        virtualinvoke $r2.<com.android.server.audio.AudioSystemAdapter: int setDeviceConnectionState(int,int,java.lang.String,java.lang.String,int)>(-2147352576, 1, r1, "", 0);

        $r3 = r0.<com.android.server.audio.AudioDeviceInventory: java.util.LinkedHashMap mConnectedDevices>;

        $r4 = staticinvoke <com.android.server.audio.AudioDeviceInventory$DeviceInfo: java.lang.String access$000(int,java.lang.String)>(-2147352576, r1);

        $r5 = new com.android.server.audio.AudioDeviceInventory$DeviceInfo;

        specialinvoke $r5.<com.android.server.audio.AudioDeviceInventory$DeviceInfo: void <init>(int,java.lang.String,java.lang.String,int)>(-2147352576, "", r1, 0);

        virtualinvoke $r3.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r5);

        return;
    }

    private void makeA2dpSrcUnavailable(java.lang.String)
    {
        com.android.server.audio.AudioDeviceInventory r0;
        java.lang.String r1, $r4;
        com.android.server.audio.AudioSystemAdapter $r2;
        java.util.LinkedHashMap $r3;

        r0 := @this: com.android.server.audio.AudioDeviceInventory;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.audio.AudioDeviceInventory: com.android.server.audio.AudioSystemAdapter mAudioSystem>;

        virtualinvoke $r2.<com.android.server.audio.AudioSystemAdapter: int setDeviceConnectionState(int,int,java.lang.String,java.lang.String,int)>(-2147352576, 0, r1, "", 0);

        $r3 = r0.<com.android.server.audio.AudioDeviceInventory: java.util.LinkedHashMap mConnectedDevices>;

        $r4 = staticinvoke <com.android.server.audio.AudioDeviceInventory$DeviceInfo: java.lang.String access$000(int,java.lang.String)>(-2147352576, r1);

        virtualinvoke $r3.<java.util.LinkedHashMap: java.lang.Object remove(java.lang.Object)>($r4);

        return;
    }

    private void makeHearingAidDeviceAvailable(java.lang.String, java.lang.String, int, java.lang.String)
    {
        com.android.server.audio.AudioDeviceInventory r0;
        java.lang.String r1, $r7, $r15, $r20, r22, r23;
        int i0, i1;
        android.media.MediaMetrics$Key r2, $r14, $r17, $r19;
        com.android.server.audio.AudioDeviceBroker $r3, $r4, $r10, $r11;
        com.android.server.audio.AudioSystemAdapter $r5;
        java.util.LinkedHashMap $r6;
        com.android.server.audio.AudioDeviceInventory$DeviceInfo $r8;
        android.media.MediaMetrics$Item $r12, $r13, $r16, $r18, $r21;

        r0 := @this: com.android.server.audio.AudioDeviceInventory;

        r22 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r23 := @parameter3: java.lang.String;

        $r3 = r0.<com.android.server.audio.AudioDeviceInventory: com.android.server.audio.AudioDeviceBroker mDeviceBroker>;

        i1 = virtualinvoke $r3.<com.android.server.audio.AudioDeviceBroker: int getVssVolumeForDevice(int,int)>(i0, 134217728);

        $r4 = r0.<com.android.server.audio.AudioDeviceInventory: com.android.server.audio.AudioDeviceBroker mDeviceBroker>;

        virtualinvoke $r4.<com.android.server.audio.AudioDeviceBroker: void postSetHearingAidVolumeIndex(int,int)>(i1, i0);

        $r5 = r0.<com.android.server.audio.AudioDeviceInventory: com.android.server.audio.AudioSystemAdapter mAudioSystem>;

        virtualinvoke $r5.<com.android.server.audio.AudioSystemAdapter: int setDeviceConnectionState(int,int,java.lang.String,java.lang.String,int)>(134217728, 1, r22, r1, 0);

        $r6 = r0.<com.android.server.audio.AudioDeviceInventory: java.util.LinkedHashMap mConnectedDevices>;

        $r7 = staticinvoke <com.android.server.audio.AudioDeviceInventory$DeviceInfo: java.lang.String access$000(int,java.lang.String)>(134217728, r22);

        $r8 = new com.android.server.audio.AudioDeviceInventory$DeviceInfo;

        specialinvoke $r8.<com.android.server.audio.AudioDeviceInventory$DeviceInfo: void <init>(int,java.lang.String,java.lang.String,int)>(134217728, r1, r22, 0);

        virtualinvoke $r6.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r8);

        $r10 = r0.<com.android.server.audio.AudioDeviceInventory: com.android.server.audio.AudioDeviceBroker mDeviceBroker>;

        virtualinvoke $r10.<com.android.server.audio.AudioDeviceBroker: void postAccessoryPlugMediaUnmute(int)>(134217728);

        $r11 = r0.<com.android.server.audio.AudioDeviceInventory: com.android.server.audio.AudioDeviceBroker mDeviceBroker>;

        virtualinvoke $r11.<com.android.server.audio.AudioDeviceBroker: void postApplyVolumeOnDevice(int,int,java.lang.String)>(i0, 134217728, "makeHearingAidDeviceAvailable");

        specialinvoke r0.<com.android.server.audio.AudioDeviceInventory: void setCurrentAudioRouteNameIfPossible(java.lang.String,boolean)>(r1, 0);

        $r12 = new android.media.MediaMetrics$Item;

        specialinvoke $r12.<android.media.MediaMetrics$Item: void <init>(java.lang.String)>("audio.device.makeHearingAidDeviceAvailable");

        r2 = <android.media.MediaMetrics$Property: android.media.MediaMetrics$Key ADDRESS>;

        if r22 == null goto label1;

        goto label2;

     label1:
        r22 = "";

     label2:
        $r13 = virtualinvoke $r12.<android.media.MediaMetrics$Item: android.media.MediaMetrics$Item set(android.media.MediaMetrics$Key,java.lang.Object)>(r2, r22);

        $r14 = <android.media.MediaMetrics$Property: android.media.MediaMetrics$Key DEVICE>;

        $r15 = staticinvoke <android.media.AudioSystem: java.lang.String getDeviceName(int)>(134217728);

        $r16 = virtualinvoke $r13.<android.media.MediaMetrics$Item: android.media.MediaMetrics$Item set(android.media.MediaMetrics$Key,java.lang.Object)>($r14, $r15);

        $r17 = <android.media.MediaMetrics$Property: android.media.MediaMetrics$Key NAME>;

        $r18 = virtualinvoke $r16.<android.media.MediaMetrics$Item: android.media.MediaMetrics$Item set(android.media.MediaMetrics$Key,java.lang.Object)>($r17, r1);

        $r19 = <android.media.MediaMetrics$Property: android.media.MediaMetrics$Key STREAM_TYPE>;

        $r20 = staticinvoke <android.media.AudioSystem: java.lang.String streamToString(int)>(i0);

        $r21 = virtualinvoke $r18.<android.media.MediaMetrics$Item: android.media.MediaMetrics$Item set(android.media.MediaMetrics$Key,java.lang.Object)>($r19, $r20);

        virtualinvoke $r21.<android.media.MediaMetrics$Item: boolean record()>();

        return;
    }

    private void makeHearingAidDeviceUnavailable(java.lang.String)
    {
        com.android.server.audio.AudioDeviceInventory r0;
        android.media.MediaMetrics$Key r2, $r9;
        com.android.server.audio.AudioSystemAdapter $r3;
        java.util.LinkedHashMap $r4;
        java.lang.String $r5, $r10, r12;
        android.media.MediaMetrics$Item $r7, $r8, $r11;

        r0 := @this: com.android.server.audio.AudioDeviceInventory;

        r12 := @parameter0: java.lang.String;

        $r3 = r0.<com.android.server.audio.AudioDeviceInventory: com.android.server.audio.AudioSystemAdapter mAudioSystem>;

        virtualinvoke $r3.<com.android.server.audio.AudioSystemAdapter: int setDeviceConnectionState(int,int,java.lang.String,java.lang.String,int)>(134217728, 0, r12, "", 0);

        $r4 = r0.<com.android.server.audio.AudioDeviceInventory: java.util.LinkedHashMap mConnectedDevices>;

        $r5 = staticinvoke <com.android.server.audio.AudioDeviceInventory$DeviceInfo: java.lang.String access$000(int,java.lang.String)>(134217728, r12);

        virtualinvoke $r4.<java.util.LinkedHashMap: java.lang.Object remove(java.lang.Object)>($r5);

        specialinvoke r0.<com.android.server.audio.AudioDeviceInventory: void setCurrentAudioRouteNameIfPossible(java.lang.String,boolean)>(null, 0);

        $r7 = new android.media.MediaMetrics$Item;

        specialinvoke $r7.<android.media.MediaMetrics$Item: void <init>(java.lang.String)>("audio.device.makeHearingAidDeviceUnavailable");

        r2 = <android.media.MediaMetrics$Property: android.media.MediaMetrics$Key ADDRESS>;

        if r12 == null goto label1;

        goto label2;

     label1:
        r12 = "";

     label2:
        $r8 = virtualinvoke $r7.<android.media.MediaMetrics$Item: android.media.MediaMetrics$Item set(android.media.MediaMetrics$Key,java.lang.Object)>(r2, r12);

        $r9 = <android.media.MediaMetrics$Property: android.media.MediaMetrics$Key DEVICE>;

        $r10 = staticinvoke <android.media.AudioSystem: java.lang.String getDeviceName(int)>(134217728);

        $r11 = virtualinvoke $r8.<android.media.MediaMetrics$Item: android.media.MediaMetrics$Item set(android.media.MediaMetrics$Key,java.lang.Object)>($r9, $r10);

        virtualinvoke $r11.<android.media.MediaMetrics$Item: boolean record()>();

        return;
    }

    private void sendDeviceConnectionIntent(int, int, java.lang.String, java.lang.String)
    {
        com.android.server.audio.AudioDeviceInventory r0;
        int i0, $i3, $i4, i5;
        java.lang.String r1, r17, $r18;
        long l2;
        android.content.Intent $r3;
        java.lang.Throwable $r16;
        byte b6;

        r0 := @this: com.android.server.audio.AudioDeviceInventory;

        i5 := @parameter0: int;

        i0 := @parameter1: int;

        r17 := @parameter2: java.lang.String;

        r1 := @parameter3: java.lang.String;

        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>()>();

        if i5 == -2113929216 goto label07;

        if i5 == 4 goto label06;

        if i5 == 8 goto label05;

        if i5 == 1024 goto label04;

        if i5 == 131072 goto label05;

        if i5 == 262144 goto label04;

        if i5 == 67108864 goto label01;

        goto label08;

     label01:
        virtualinvoke $r3.<android.content.Intent: android.content.Intent setAction(java.lang.String)>("android.intent.action.HEADSET_PLUG");

        $i4 = staticinvoke <android.media.AudioSystem: int getDeviceConnectionState(int,java.lang.String)>(-2113929216, "");

        if $i4 != 1 goto label02;

        b6 = 1;

        goto label03;

     label02:
        b6 = 0;

     label03:
        virtualinvoke $r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("microphone", b6);

        goto label08;

     label04:
        specialinvoke r0.<com.android.server.audio.AudioDeviceInventory: void configureHdmiPlugIntent(android.content.Intent,int)>($r3, i0);

        goto label08;

     label05:
        virtualinvoke $r3.<android.content.Intent: android.content.Intent setAction(java.lang.String)>("android.intent.action.HEADSET_PLUG");

        virtualinvoke $r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("microphone", 0);

        goto label08;

     label06:
        virtualinvoke $r3.<android.content.Intent: android.content.Intent setAction(java.lang.String)>("android.intent.action.HEADSET_PLUG");

        virtualinvoke $r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("microphone", 1);

        goto label08;

     label07:
        $i3 = staticinvoke <android.media.AudioSystem: int getDeviceConnectionState(int,java.lang.String)>(67108864, "");

        if $i3 != 1 goto label13;

        virtualinvoke $r3.<android.content.Intent: android.content.Intent setAction(java.lang.String)>("android.intent.action.HEADSET_PLUG");

        virtualinvoke $r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("microphone", 1);

     label08:
        $r18 = virtualinvoke $r3.<android.content.Intent: java.lang.String getAction()>();

        if $r18 != null goto label09;

        return;

     label09:
        virtualinvoke $r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("state", i0);

        virtualinvoke $r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("address", r17);

        virtualinvoke $r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("portName", r1);

        virtualinvoke $r3.<android.content.Intent: android.content.Intent addFlags(int)>(1073741824);

        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label10:
        staticinvoke <android.app.ActivityManager: void broadcastStickyIntent(android.content.Intent,int)>($r3, -2);

     label11:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        return;

     label12:
        $r16 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw $r16;

     label13:
        return;

        catch java.lang.Throwable from label10 to label11 with label12;
    }

    private void setCurrentAudioRouteNameIfPossible(java.lang.String, boolean)
    {
        com.android.server.audio.AudioDeviceInventory r0;
        boolean z0, $z1, $z2;
        android.media.AudioRoutesInfo r1, $r2, $r4;
        java.lang.CharSequence $r3;
        com.android.server.audio.AudioDeviceBroker $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: com.android.server.audio.AudioDeviceInventory;

        r7 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r1 = r0.<com.android.server.audio.AudioDeviceInventory: android.media.AudioRoutesInfo mCurAudioRoutes>;

        entermonitor r1;

     label01:
        $r2 = r0.<com.android.server.audio.AudioDeviceInventory: android.media.AudioRoutesInfo mCurAudioRoutes>;

        $r3 = $r2.<android.media.AudioRoutesInfo: java.lang.CharSequence bluetoothName>;

        $z1 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>($r3, r7);

        if $z1 == 0 goto label03;

        exitmonitor r1;

     label02:
        return;

     label03:
        if r7 != null goto label05;

     label04:
        $z2 = specialinvoke r0.<com.android.server.audio.AudioDeviceInventory: boolean isCurrentDeviceConnected()>();

        if $z2 != 0 goto label06;

     label05:
        $r4 = r0.<com.android.server.audio.AudioDeviceInventory: android.media.AudioRoutesInfo mCurAudioRoutes>;

        $r4.<android.media.AudioRoutesInfo: java.lang.CharSequence bluetoothName> = r7;

        $r5 = r0.<com.android.server.audio.AudioDeviceInventory: com.android.server.audio.AudioDeviceBroker mDeviceBroker>;

        virtualinvoke $r5.<com.android.server.audio.AudioDeviceBroker: void postReportNewRoutes(boolean)>(z0);

     label06:
        exitmonitor r1;

     label07:
        return;

     label08:
        $r6 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    private void updateAudioRoutes(int, int)
    {
        com.android.server.audio.AudioDeviceInventory r0;
        int i0, $i1, i2, i5, i6;
        android.media.AudioRoutesInfo r1, $r3, $r4, $r5;
        com.android.server.audio.AudioDeviceBroker $r6;
        java.lang.Throwable $r7;
        byte b4;

        r0 := @this: com.android.server.audio.AudioDeviceInventory;

        i2 := @parameter0: int;

        i0 := @parameter1: int;

        if i2 == 4 goto label04;

        if i2 == 8 goto label03;

        if i2 == 1024 goto label02;

        if i2 == 16384 goto label01;

        if i2 == 131072 goto label03;

        if i2 == 262144 goto label02;

        if i2 == 67108864 goto label01;

        b4 = 0;

        goto label05;

     label01:
        b4 = 16;

        goto label05;

     label02:
        b4 = 8;

        goto label05;

     label03:
        b4 = 2;

        goto label05;

     label04:
        b4 = 1;

     label05:
        r1 = r0.<com.android.server.audio.AudioDeviceInventory: android.media.AudioRoutesInfo mCurAudioRoutes>;

        entermonitor r1;

        if b4 != 0 goto label08;

     label06:
        exitmonitor r1;

     label07:
        return;

     label08:
        $r3 = r0.<com.android.server.audio.AudioDeviceInventory: android.media.AudioRoutesInfo mCurAudioRoutes>;

        i5 = $r3.<android.media.AudioRoutesInfo: int mainType>;

     label09:
        if i0 == 0 goto label10;

        i6 = i5 | b4;

        goto label11;

     label10:
        i6 = i5 & b4;

     label11:
        $r4 = r0.<com.android.server.audio.AudioDeviceInventory: android.media.AudioRoutesInfo mCurAudioRoutes>;

        $i1 = $r4.<android.media.AudioRoutesInfo: int mainType>;

        if i6 == $i1 goto label12;

        $r5 = r0.<com.android.server.audio.AudioDeviceInventory: android.media.AudioRoutesInfo mCurAudioRoutes>;

        $r5.<android.media.AudioRoutesInfo: int mainType> = i6;

        $r6 = r0.<com.android.server.audio.AudioDeviceInventory: com.android.server.audio.AudioDeviceBroker mDeviceBroker>;

        virtualinvoke $r6.<com.android.server.audio.AudioDeviceBroker: void postReportNewRoutes(boolean)>(0);

     label12:
        exitmonitor r1;

     label13:
        return;

     label14:
        $r7 := @caughtexception;

     label15:
        exitmonitor r1;

     label16:
        throw $r7;

        catch java.lang.Throwable from label06 to label07 with label14;
        catch java.lang.Throwable from label08 to label09 with label14;
        catch java.lang.Throwable from label11 to label12 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label15 to label16 with label14;
    }

    int checkSendBecomingNoisyIntent(int, int, int)
    {
        com.android.server.audio.AudioDeviceInventory r0;
        int i0, i1, i2, i3;
        java.lang.Object r1;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.audio.AudioDeviceInventory;

        i2 := @parameter0: int;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 = r0.<com.android.server.audio.AudioDeviceInventory: java.lang.Object mDevicesLock>;

        entermonitor r1;

     label1:
        i3 = specialinvoke r0.<com.android.server.audio.AudioDeviceInventory: int checkSendBecomingNoisyIntentInt(int,int,int)>(i2, i0, i1);

        exitmonitor r1;

     label2:
        return i3;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    void disconnectA2dp()
    {
        com.android.server.audio.AudioDeviceInventory r0;
        java.lang.Object r1;
        com.android.server.audio._$$Lambda$AudioDeviceInventory$BMFj2tw2PdB9dFQB6gMjDjefzwg r2;
        int i0, $i1;
        java.util.LinkedHashMap $r3;
        java.lang.Throwable $r4;
        android.util.ArraySet r5;
        java.util.Collection r6;
        android.media.MediaMetrics$Item r7;
        java.util.stream.Stream r8;
        com.android.server.audio._$$Lambda$AudioDeviceInventory$Jg62meZgoWI_a0zxOvpWdJWRPfI r9;

        r0 := @this: com.android.server.audio.AudioDeviceInventory;

        r1 = r0.<com.android.server.audio.AudioDeviceInventory: java.lang.Object mDevicesLock>;

        entermonitor r1;

     label1:
        r5 = new android.util.ArraySet;

        specialinvoke r5.<android.util.ArraySet: void <init>()>();

        $r3 = r0.<com.android.server.audio.AudioDeviceInventory: java.util.LinkedHashMap mConnectedDevices>;

        r6 = virtualinvoke $r3.<java.util.LinkedHashMap: java.util.Collection values()>();

        r2 = new com.android.server.audio._$$Lambda$AudioDeviceInventory$BMFj2tw2PdB9dFQB6gMjDjefzwg;

        specialinvoke r2.<com.android.server.audio._$$Lambda$AudioDeviceInventory$BMFj2tw2PdB9dFQB6gMjDjefzwg: void <init>(android.util.ArraySet)>(r5);

        interfaceinvoke r6.<java.util.Collection: void forEach(java.util.function.Consumer)>(r2);

        r7 = new android.media.MediaMetrics$Item;

        specialinvoke r7.<android.media.MediaMetrics$Item: void <init>(java.lang.String)>("audio.device.disconnectA2dp");

        virtualinvoke r7.<android.media.MediaMetrics$Item: boolean record()>();

        $i1 = virtualinvoke r5.<android.util.ArraySet: int size()>();

        if $i1 <= 0 goto label2;

        i0 = specialinvoke r0.<com.android.server.audio.AudioDeviceInventory: int checkSendBecomingNoisyIntentInt(int,int,int)>(128, 0, 0);

        r8 = virtualinvoke r5.<android.util.ArraySet: java.util.stream.Stream stream()>();

        r9 = new com.android.server.audio._$$Lambda$AudioDeviceInventory$Jg62meZgoWI_a0zxOvpWdJWRPfI;

        specialinvoke r9.<com.android.server.audio._$$Lambda$AudioDeviceInventory$Jg62meZgoWI_a0zxOvpWdJWRPfI: void <init>(com.android.server.audio.AudioDeviceInventory,int)>(r0, i0);

        interfaceinvoke r8.<java.util.stream.Stream: void forEach(java.util.function.Consumer)>(r9);

     label2:
        exitmonitor r1;

     label3:
        return;

     label4:
        $r4 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    void disconnectA2dpSink()
    {
        com.android.server.audio.AudioDeviceInventory r0;
        java.lang.Object r1;
        com.android.server.audio._$$Lambda$AudioDeviceInventory$Kq15BolmuFXaWWabjDNQiScRxjo r2;
        java.util.LinkedHashMap $r3;
        java.lang.Throwable $r4;
        android.util.ArraySet r5;
        java.util.Collection r6;
        android.media.MediaMetrics$Item r7;
        java.util.stream.Stream r8;
        com.android.server.audio._$$Lambda$AudioDeviceInventory$A06w_GDNkrLVK3IhlqiuSJkZdos r9;

        r0 := @this: com.android.server.audio.AudioDeviceInventory;

        r1 = r0.<com.android.server.audio.AudioDeviceInventory: java.lang.Object mDevicesLock>;

        entermonitor r1;

     label1:
        r5 = new android.util.ArraySet;

        specialinvoke r5.<android.util.ArraySet: void <init>()>();

        $r3 = r0.<com.android.server.audio.AudioDeviceInventory: java.util.LinkedHashMap mConnectedDevices>;

        r6 = virtualinvoke $r3.<java.util.LinkedHashMap: java.util.Collection values()>();

        r2 = new com.android.server.audio._$$Lambda$AudioDeviceInventory$Kq15BolmuFXaWWabjDNQiScRxjo;

        specialinvoke r2.<com.android.server.audio._$$Lambda$AudioDeviceInventory$Kq15BolmuFXaWWabjDNQiScRxjo: void <init>(android.util.ArraySet)>(r5);

        interfaceinvoke r6.<java.util.Collection: void forEach(java.util.function.Consumer)>(r2);

        r7 = new android.media.MediaMetrics$Item;

        specialinvoke r7.<android.media.MediaMetrics$Item: void <init>(java.lang.String)>("audio.device.disconnectA2dpSink");

        virtualinvoke r7.<android.media.MediaMetrics$Item: boolean record()>();

        r8 = virtualinvoke r5.<android.util.ArraySet: java.util.stream.Stream stream()>();

        r9 = new com.android.server.audio._$$Lambda$AudioDeviceInventory$A06w_GDNkrLVK3IhlqiuSJkZdos;

        specialinvoke r9.<com.android.server.audio._$$Lambda$AudioDeviceInventory$A06w_GDNkrLVK3IhlqiuSJkZdos: void <init>(com.android.server.audio.AudioDeviceInventory)>(r0);

        interfaceinvoke r8.<java.util.stream.Stream: void forEach(java.util.function.Consumer)>(r9);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    void disconnectHearingAid()
    {
        com.android.server.audio.AudioDeviceInventory r0;
        java.lang.Object r1;
        java.util.Collection r2;
        java.util.LinkedHashMap $r3;
        int $i0;
        java.lang.Throwable $r4;
        android.util.ArraySet r5;
        com.android.server.audio._$$Lambda$AudioDeviceInventory$2HRlO1Fuzgf97A2Y249yqOtNAlc r6;
        android.media.MediaMetrics$Item r7;
        java.util.stream.Stream r8;
        com.android.server.audio._$$Lambda$AudioDeviceInventory$7s2_dtMUrYgHtM2Mpc1sS0XgWCw r9;

        r0 := @this: com.android.server.audio.AudioDeviceInventory;

        r1 = r0.<com.android.server.audio.AudioDeviceInventory: java.lang.Object mDevicesLock>;

        entermonitor r1;

     label1:
        r5 = new android.util.ArraySet;

        specialinvoke r5.<android.util.ArraySet: void <init>()>();

        $r3 = r0.<com.android.server.audio.AudioDeviceInventory: java.util.LinkedHashMap mConnectedDevices>;

        r2 = virtualinvoke $r3.<java.util.LinkedHashMap: java.util.Collection values()>();

        r6 = new com.android.server.audio._$$Lambda$AudioDeviceInventory$2HRlO1Fuzgf97A2Y249yqOtNAlc;

        specialinvoke r6.<com.android.server.audio._$$Lambda$AudioDeviceInventory$2HRlO1Fuzgf97A2Y249yqOtNAlc: void <init>(android.util.ArraySet)>(r5);

        interfaceinvoke r2.<java.util.Collection: void forEach(java.util.function.Consumer)>(r6);

        r7 = new android.media.MediaMetrics$Item;

        specialinvoke r7.<android.media.MediaMetrics$Item: void <init>(java.lang.String)>("audio.device.disconnectHearingAid");

        virtualinvoke r7.<android.media.MediaMetrics$Item: boolean record()>();

        $i0 = virtualinvoke r5.<android.util.ArraySet: int size()>();

        if $i0 <= 0 goto label2;

        specialinvoke r0.<com.android.server.audio.AudioDeviceInventory: int checkSendBecomingNoisyIntentInt(int,int,int)>(134217728, 0, 0);

        r8 = virtualinvoke r5.<android.util.ArraySet: java.util.stream.Stream stream()>();

        r9 = new com.android.server.audio._$$Lambda$AudioDeviceInventory$7s2_dtMUrYgHtM2Mpc1sS0XgWCw;

        specialinvoke r9.<com.android.server.audio._$$Lambda$AudioDeviceInventory$7s2_dtMUrYgHtM2Mpc1sS0XgWCw: void <init>(com.android.server.audio.AudioDeviceInventory)>(r0);

        interfaceinvoke r8.<java.util.stream.Stream: void forEach(java.util.function.Consumer)>(r9);

     label2:
        exitmonitor r1;

     label3:
        return;

     label4:
        $r4 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    void dump(java.io.PrintWriter, java.lang.String)
    {
        com.android.server.audio.AudioDeviceInventory r0;
        java.io.PrintWriter r1;
        java.lang.String r2, $r7, $r14, $r21;
        java.lang.StringBuilder $r3, $r10, $r17;
        com.android.server.audio._$$Lambda$AudioDeviceInventory$X6RLjT4CIM4r8i0wBWo1TE_1qak $r8;
        android.util.ArrayMap $r9, $r23;
        com.android.server.audio._$$Lambda$AudioDeviceInventory$YxgcWZ4jspoxzltUgvW9l8k40io $r15;
        java.util.LinkedHashMap $r16;
        com.android.server.audio._$$Lambda$AudioDeviceInventory$7CtpUHI2aS8Sdar40vc2ScvU1zA $r22;

        r0 := @this: com.android.server.audio.AudioDeviceInventory;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Preferred devices for strategy:");

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r7);

        $r9 = r0.<com.android.server.audio.AudioDeviceInventory: android.util.ArrayMap mPreferredDevices>;

        $r8 = new com.android.server.audio._$$Lambda$AudioDeviceInventory$X6RLjT4CIM4r8i0wBWo1TE_1qak;

        specialinvoke $r8.<com.android.server.audio._$$Lambda$AudioDeviceInventory$X6RLjT4CIM4r8i0wBWo1TE_1qak: void <init>(java.io.PrintWriter,java.lang.String)>(r1, r2);

        virtualinvoke $r9.<android.util.ArrayMap: void forEach(java.util.function.BiConsumer)>($r8);

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Connected devices:");

        $r14 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r14);

        $r16 = r0.<com.android.server.audio.AudioDeviceInventory: java.util.LinkedHashMap mConnectedDevices>;

        $r15 = new com.android.server.audio._$$Lambda$AudioDeviceInventory$YxgcWZ4jspoxzltUgvW9l8k40io;

        specialinvoke $r15.<com.android.server.audio._$$Lambda$AudioDeviceInventory$YxgcWZ4jspoxzltUgvW9l8k40io: void <init>(java.io.PrintWriter,java.lang.String)>(r1, r2);

        virtualinvoke $r16.<java.util.LinkedHashMap: void forEach(java.util.function.BiConsumer)>($r15);

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("APM Connected device (A2DP sink only):");

        $r21 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r21);

        $r23 = r0.<com.android.server.audio.AudioDeviceInventory: android.util.ArrayMap mApmConnectedDevices>;

        $r22 = new com.android.server.audio._$$Lambda$AudioDeviceInventory$7CtpUHI2aS8Sdar40vc2ScvU1zA;

        specialinvoke $r22.<com.android.server.audio._$$Lambda$AudioDeviceInventory$7CtpUHI2aS8Sdar40vc2ScvU1zA: void <init>(java.io.PrintWriter,java.lang.String)>(r1, r2);

        virtualinvoke $r23.<android.util.ArrayMap: void forEach(java.util.function.BiConsumer)>($r22);

        return;
    }

    android.media.AudioRoutesInfo getCurAudioRoutes()
    {
        com.android.server.audio.AudioDeviceInventory r0;
        android.media.AudioRoutesInfo $r1;

        r0 := @this: com.android.server.audio.AudioDeviceInventory;

        $r1 = r0.<com.android.server.audio.AudioDeviceInventory: android.media.AudioRoutesInfo mCurAudioRoutes>;

        return $r1;
    }

    boolean handleDeviceConnection(boolean, int, java.lang.String, java.lang.String)
    {
        com.android.server.audio.AudioDeviceInventory r0;
        boolean z0, z5;
        int i0, i4;
        java.lang.String r1, $r7, $r18, $r32, r41, r44, r47, r50;
        java.util.LinkedHashMap r2, $r10, $r22;
        android.media.MediaMetrics$Item $r3, $r5, $r8, $r20, $r25, $r30, $r37, $r39, r42, r45;
        android.media.MediaMetrics$Key $r4, $r6, $r9, $r19, $r24, $r29, $r36, $r38, r43;
        java.lang.Object $r11, r46;
        com.android.server.audio.AudioSystemAdapter $r21, $r26;
        com.android.server.audio.AudioDeviceBroker $r28;
        java.lang.Throwable $r40;
        com.android.server.audio.AudioDeviceInventory$DeviceInfo r48, r51;
        java.lang.StringBuilder r49, r52;

        r0 := @this: com.android.server.audio.AudioDeviceInventory;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        r41 := @parameter2: java.lang.String;

        r1 := @parameter3: java.lang.String;

        $r3 = new android.media.MediaMetrics$Item;

        specialinvoke $r3.<android.media.MediaMetrics$Item: void <init>(java.lang.String)>("audio.device.handleDeviceConnection");

        $r4 = <android.media.MediaMetrics$Property: android.media.MediaMetrics$Key ADDRESS>;

        $r5 = virtualinvoke $r3.<android.media.MediaMetrics$Item: android.media.MediaMetrics$Item set(android.media.MediaMetrics$Key,java.lang.Object)>($r4, r41);

        $r6 = <android.media.MediaMetrics$Property: android.media.MediaMetrics$Key DEVICE>;

        $r7 = staticinvoke <android.media.AudioSystem: java.lang.String getDeviceName(int)>(i0);

        r42 = virtualinvoke $r5.<android.media.MediaMetrics$Item: android.media.MediaMetrics$Item set(android.media.MediaMetrics$Key,java.lang.Object)>($r6, $r7);

        r43 = <android.media.MediaMetrics$Property: android.media.MediaMetrics$Key MODE>;

        if z0 == 0 goto label01;

        r44 = "connect";

        goto label02;

     label01:
        r44 = "disconnect";

     label02:
        $r8 = virtualinvoke r42.<android.media.MediaMetrics$Item: android.media.MediaMetrics$Item set(android.media.MediaMetrics$Key,java.lang.Object)>(r43, r44);

        $r9 = <android.media.MediaMetrics$Property: android.media.MediaMetrics$Key NAME>;

        r45 = virtualinvoke $r8.<android.media.MediaMetrics$Item: android.media.MediaMetrics$Item set(android.media.MediaMetrics$Key,java.lang.Object)>($r9, r1);

        r46 = r0.<com.android.server.audio.AudioDeviceInventory: java.lang.Object mDevicesLock>;

        entermonitor r46;

     label03:
        r47 = staticinvoke <com.android.server.audio.AudioDeviceInventory$DeviceInfo: java.lang.String access$000(int,java.lang.String)>(i0, r41);

        $r10 = r0.<com.android.server.audio.AudioDeviceInventory: java.util.LinkedHashMap mConnectedDevices>;

        $r11 = virtualinvoke $r10.<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>(r47);

        r48 = (com.android.server.audio.AudioDeviceInventory$DeviceInfo) $r11;

     label04:
        if r48 == null goto label05;

        z5 = 1;

        goto label06;

     label05:
        z5 = 0;

     label06:
        if z0 == 0 goto label13;

        if z5 != 0 goto label13;

     label07:
        $r26 = r0.<com.android.server.audio.AudioDeviceInventory: com.android.server.audio.AudioSystemAdapter mAudioSystem>;

        i4 = virtualinvoke $r26.<com.android.server.audio.AudioSystemAdapter: int setDeviceConnectionState(int,int,java.lang.String,java.lang.String,int)>(i0, 1, r41, r1, 0);

     label08:
        if i4 == 0 goto label11;

     label09:
        r49 = new java.lang.StringBuilder;

        specialinvoke r49.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("not connecting device 0x");

        $r32 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        virtualinvoke r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        virtualinvoke r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" due to command error ");

        virtualinvoke r49.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        r50 = virtualinvoke r49.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("AS.AudioDeviceInventory", r50);

        $r36 = <android.media.MediaMetrics$Property: android.media.MediaMetrics$Key EARLY_RETURN>;

        $r37 = virtualinvoke r45.<android.media.MediaMetrics$Item: android.media.MediaMetrics$Item set(android.media.MediaMetrics$Key,java.lang.Object)>($r36, r50);

        $r38 = <android.media.MediaMetrics$Property: android.media.MediaMetrics$Key STATE>;

        $r39 = virtualinvoke $r37.<android.media.MediaMetrics$Item: android.media.MediaMetrics$Item set(android.media.MediaMetrics$Key,java.lang.Object)>($r38, "disconnected");

        virtualinvoke $r39.<android.media.MediaMetrics$Item: boolean record()>();

        exitmonitor r46;

     label10:
        return 0;

     label11:
        r2 = r0.<com.android.server.audio.AudioDeviceInventory: java.util.LinkedHashMap mConnectedDevices>;

        r51 = new com.android.server.audio.AudioDeviceInventory$DeviceInfo;

        specialinvoke r51.<com.android.server.audio.AudioDeviceInventory$DeviceInfo: void <init>(int,java.lang.String,java.lang.String,int)>(i0, r1, r41, 0);

        virtualinvoke r2.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r47, r51);

        $r28 = r0.<com.android.server.audio.AudioDeviceInventory: com.android.server.audio.AudioDeviceBroker mDeviceBroker>;

        virtualinvoke $r28.<com.android.server.audio.AudioDeviceBroker: void postAccessoryPlugMediaUnmute(int)>(i0);

        $r29 = <android.media.MediaMetrics$Property: android.media.MediaMetrics$Key STATE>;

        $r30 = virtualinvoke r45.<android.media.MediaMetrics$Item: android.media.MediaMetrics$Item set(android.media.MediaMetrics$Key,java.lang.Object)>($r29, "connected");

        virtualinvoke $r30.<android.media.MediaMetrics$Item: boolean record()>();

        exitmonitor r46;

     label12:
        return 1;

     label13:
        if z0 != 0 goto label16;

        if z5 == 0 goto label16;

     label14:
        $r21 = r0.<com.android.server.audio.AudioDeviceInventory: com.android.server.audio.AudioSystemAdapter mAudioSystem>;

        virtualinvoke $r21.<com.android.server.audio.AudioSystemAdapter: int setDeviceConnectionState(int,int,java.lang.String,java.lang.String,int)>(i0, 0, r41, r1, 0);

        $r22 = r0.<com.android.server.audio.AudioDeviceInventory: java.util.LinkedHashMap mConnectedDevices>;

        virtualinvoke $r22.<java.util.LinkedHashMap: java.lang.Object remove(java.lang.Object)>(r47);

        $r24 = <android.media.MediaMetrics$Property: android.media.MediaMetrics$Key STATE>;

        $r25 = virtualinvoke r45.<android.media.MediaMetrics$Item: android.media.MediaMetrics$Item set(android.media.MediaMetrics$Key,java.lang.Object)>($r24, "connected");

        virtualinvoke $r25.<android.media.MediaMetrics$Item: boolean record()>();

        exitmonitor r46;

     label15:
        return 1;

     label16:
        r52 = new java.lang.StringBuilder;

        specialinvoke r52.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handleDeviceConnection() failed, deviceKey=");

        virtualinvoke r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r47);

        virtualinvoke r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", deviceSpec=");

        virtualinvoke r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r48);

        virtualinvoke r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", connect=");

        virtualinvoke r52.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r18 = virtualinvoke r52.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("AS.AudioDeviceInventory", $r18);

     label17:
        exitmonitor r46;

     label18:
        $r19 = <android.media.MediaMetrics$Property: android.media.MediaMetrics$Key STATE>;

        $r20 = virtualinvoke r45.<android.media.MediaMetrics$Item: android.media.MediaMetrics$Item set(android.media.MediaMetrics$Key,java.lang.Object)>($r19, "disconnected");

        virtualinvoke $r20.<android.media.MediaMetrics$Item: boolean record()>();

        return 0;

     label19:
        $r40 := @caughtexception;

     label20:
        exitmonitor r46;

     label21:
        throw $r40;

        catch java.lang.Throwable from label03 to label04 with label19;
        catch java.lang.Throwable from label07 to label08 with label19;
        catch java.lang.Throwable from label09 to label10 with label19;
        catch java.lang.Throwable from label11 to label12 with label19;
        catch java.lang.Throwable from label14 to label15 with label19;
        catch java.lang.Throwable from label16 to label17 with label19;
        catch java.lang.Throwable from label17 to label18 with label19;
        catch java.lang.Throwable from label20 to label21 with label19;
    }

    public boolean isA2dpDeviceConnected(android.bluetooth.BluetoothDevice)
    {
        com.android.server.audio.AudioDeviceInventory r0;
        java.lang.String $r1, r6;
        java.util.LinkedHashMap $r2;
        java.lang.Object $r3, r7;
        java.lang.Throwable $r4;
        android.bluetooth.BluetoothDevice r5;
        boolean z0;

        r0 := @this: com.android.server.audio.AudioDeviceInventory;

        r5 := @parameter0: android.bluetooth.BluetoothDevice;

        $r1 = virtualinvoke r5.<android.bluetooth.BluetoothDevice: java.lang.String getAddress()>();

        r6 = staticinvoke <com.android.server.audio.AudioDeviceInventory$DeviceInfo: java.lang.String access$000(int,java.lang.String)>(128, $r1);

        r7 = r0.<com.android.server.audio.AudioDeviceInventory: java.lang.Object mDevicesLock>;

        entermonitor r7;

     label1:
        $r2 = r0.<com.android.server.audio.AudioDeviceInventory: java.util.LinkedHashMap mConnectedDevices>;

        $r3 = virtualinvoke $r2.<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>(r6);

        if $r3 == null goto label3;

     label2:
        z0 = 1;

        goto label4;

     label3:
        z0 = 0;

     label4:
        exitmonitor r7;

     label5:
        return z0;

     label6:
        $r4 := @caughtexception;

     label7:
        exitmonitor r7;

     label8:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public void lambda$disconnectA2dp$5$AudioDeviceInventory(int, java.lang.String)
    {
        com.android.server.audio.AudioDeviceInventory r0;
        int i0;
        java.lang.String r1;

        r0 := @this: com.android.server.audio.AudioDeviceInventory;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<com.android.server.audio.AudioDeviceInventory: void makeA2dpDeviceUnavailableLater(java.lang.String,int)>(r1, i0);

        return;
    }

    public void lambda$disconnectA2dpSink$7$AudioDeviceInventory(java.lang.String)
    {
        com.android.server.audio.AudioDeviceInventory r0;
        java.lang.String r1;

        r0 := @this: com.android.server.audio.AudioDeviceInventory;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<com.android.server.audio.AudioDeviceInventory: void makeA2dpSrcUnavailable(java.lang.String)>(r1);

        return;
    }

    public void lambda$disconnectHearingAid$9$AudioDeviceInventory(java.lang.String)
    {
        com.android.server.audio.AudioDeviceInventory r0;
        java.lang.String r1;

        r0 := @this: com.android.server.audio.AudioDeviceInventory;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<com.android.server.audio.AudioDeviceInventory: void makeHearingAidDeviceUnavailable(java.lang.String)>(r1);

        return;
    }

    public boolean lambda$isCurrentDeviceConnected$10$AudioDeviceInventory(com.android.server.audio.AudioDeviceInventory$DeviceInfo)
    {
        com.android.server.audio.AudioDeviceInventory r0;
        com.android.server.audio.AudioDeviceInventory$DeviceInfo r1;
        android.media.AudioRoutesInfo $r2;
        java.lang.CharSequence $r3;
        java.lang.String $r4;
        boolean $z0;

        r0 := @this: com.android.server.audio.AudioDeviceInventory;

        r1 := @parameter0: com.android.server.audio.AudioDeviceInventory$DeviceInfo;

        $r4 = r1.<com.android.server.audio.AudioDeviceInventory$DeviceInfo: java.lang.String mDeviceName>;

        $r2 = r0.<com.android.server.audio.AudioDeviceInventory: android.media.AudioRoutesInfo mCurAudioRoutes>;

        $r3 = $r2.<android.media.AudioRoutesInfo: java.lang.CharSequence bluetoothName>;

        $z0 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>($r4, $r3);

        return $z0;
    }

    public void lambda$onRestoreDevices$3$AudioDeviceInventory(java.lang.Integer, android.media.AudioDeviceAttributes)
    {
        com.android.server.audio.AudioDeviceInventory r0;
        java.lang.Integer r1;
        android.media.AudioDeviceAttributes r2;
        com.android.server.audio.AudioSystemAdapter $r3;
        int $i0;

        r0 := @this: com.android.server.audio.AudioDeviceInventory;

        r1 := @parameter0: java.lang.Integer;

        r2 := @parameter1: android.media.AudioDeviceAttributes;

        $r3 = r0.<com.android.server.audio.AudioDeviceInventory: com.android.server.audio.AudioSystemAdapter mAudioSystem>;

        $i0 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        virtualinvoke $r3.<com.android.server.audio.AudioSystemAdapter: int setPreferredDeviceForStrategy(int,android.media.AudioDeviceAttributes)>($i0, r2);

        return;
    }

    void onBluetoothA2dpActiveDeviceChange(com.android.server.audio.BtHelper$BluetoothA2dpDeviceInfo, int)
    {
        com.android.server.audio.AudioDeviceInventory r0;
        int i0, i1, i2, $i3, $i4, $i5, $i7;
        android.media.MediaMetrics$Item r1, $r3, $r18, $r21, $r24, $r47, $r50, $r52;
        java.lang.StringBuilder r2, $r6, r70;
        android.media.MediaMetrics$Key $r4, $r17, $r19, $r22, $r26, $r46, $r49, $r51;
        java.lang.String $r5, $r10, $r13, $r20, $r25, $r31, $r33, $r38, $r40, r56, r62, $r65;
        boolean $z0, $z1;
        com.android.server.audio.AudioEventLogger$StringEvent $r12, r61, r67, r69;
        com.android.server.audio.AudioDeviceBroker $r14, $r42, $r45;
        java.util.LinkedHashMap $r15, $r43;
        java.lang.Object $r16, r59;
        java.lang.Integer $r23;
        com.android.server.audio.AudioEventLogger$Event $r34, $r41, $r48;
        java.lang.Throwable $r53;
        com.android.server.audio.BtHelper$BluetoothA2dpDeviceInfo r54;
        android.bluetooth.BluetoothDevice r55;
        com.android.server.audio.AudioEventLogger r57, r60, r66, r68;
        com.android.server.audio.AudioDeviceInventory$DeviceInfo r63;
        com.android.server.audio.AudioSystemAdapter $r64;

        r0 := @this: com.android.server.audio.AudioDeviceInventory;

        r54 := @parameter0: com.android.server.audio.BtHelper$BluetoothA2dpDeviceInfo;

        i0 := @parameter1: int;

        $r3 = new android.media.MediaMetrics$Item;

        specialinvoke $r3.<android.media.MediaMetrics$Item: void <init>(java.lang.String)>("audio.device.onBluetoothA2dpActiveDeviceChange");

        $r4 = <android.media.MediaMetrics$Property: android.media.MediaMetrics$Key EVENT>;

        $r5 = staticinvoke <com.android.server.audio.BtHelper: java.lang.String a2dpDeviceEventToString(int)>(i0);

        r1 = virtualinvoke $r3.<android.media.MediaMetrics$Item: android.media.MediaMetrics$Item set(android.media.MediaMetrics$Key,java.lang.Object)>($r4, $r5);

        r55 = virtualinvoke r54.<com.android.server.audio.BtHelper$BluetoothA2dpDeviceInfo: android.bluetooth.BluetoothDevice getBtDevice()>();

        if r55 != null goto label01;

        $r51 = <android.media.MediaMetrics$Property: android.media.MediaMetrics$Key EARLY_RETURN>;

        $r52 = virtualinvoke r1.<android.media.MediaMetrics$Item: android.media.MediaMetrics$Item set(android.media.MediaMetrics$Key,java.lang.Object)>($r51, "btDevice null");

        virtualinvoke $r52.<android.media.MediaMetrics$Item: boolean record()>();

        return;

     label01:
        i1 = virtualinvoke r54.<com.android.server.audio.BtHelper$BluetoothA2dpDeviceInfo: int getVolume()>();

        i2 = virtualinvoke r54.<com.android.server.audio.BtHelper$BluetoothA2dpDeviceInfo: int getCodec()>();

        r56 = virtualinvoke r55.<android.bluetooth.BluetoothDevice: java.lang.String getAddress()>();

        $z0 = staticinvoke <android.bluetooth.BluetoothAdapter: boolean checkBluetoothAddress(java.lang.String)>(r56);

        if $z0 != 0 goto label02;

        r56 = "";

        goto label02;

     label02:
        r57 = <com.android.server.audio.AudioService: com.android.server.audio.AudioEventLogger sDeviceLogger>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onBluetoothA2dpActiveDeviceChange addr=");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r56);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" event=");

        $r10 = staticinvoke <com.android.server.audio.BtHelper: java.lang.String a2dpDeviceEventToString(int)>(i0);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = new com.android.server.audio.AudioEventLogger$StringEvent;

        $r13 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<com.android.server.audio.AudioEventLogger$StringEvent: void <init>(java.lang.String)>($r13);

        virtualinvoke r57.<com.android.server.audio.AudioEventLogger: void log(com.android.server.audio.AudioEventLogger$Event)>($r12);

        r59 = r0.<com.android.server.audio.AudioDeviceInventory: java.lang.Object mDevicesLock>;

        entermonitor r59;

     label03:
        $r14 = r0.<com.android.server.audio.AudioDeviceInventory: com.android.server.audio.AudioDeviceBroker mDeviceBroker>;

        $z1 = virtualinvoke $r14.<com.android.server.audio.AudioDeviceBroker: boolean hasScheduledA2dpSinkConnectionState(android.bluetooth.BluetoothDevice)>(r55);

        if $z1 == 0 goto label05;

        r60 = <com.android.server.audio.AudioService: com.android.server.audio.AudioEventLogger sDeviceLogger>;

        r61 = new com.android.server.audio.AudioEventLogger$StringEvent;

        specialinvoke r61.<com.android.server.audio.AudioEventLogger$StringEvent: void <init>(java.lang.String)>("A2dp config change ignored (scheduled connection change)");

        $r48 = virtualinvoke r61.<com.android.server.audio.AudioEventLogger$StringEvent: com.android.server.audio.AudioEventLogger$Event printLog(java.lang.String)>("AS.AudioDeviceInventory");

        virtualinvoke r60.<com.android.server.audio.AudioEventLogger: void log(com.android.server.audio.AudioEventLogger$Event)>($r48);

        $r49 = <android.media.MediaMetrics$Property: android.media.MediaMetrics$Key EARLY_RETURN>;

        $r50 = virtualinvoke r1.<android.media.MediaMetrics$Item: android.media.MediaMetrics$Item set(android.media.MediaMetrics$Key,java.lang.Object)>($r49, "A2dp config change ignored");

        virtualinvoke $r50.<android.media.MediaMetrics$Item: boolean record()>();

        exitmonitor r59;

     label04:
        return;

     label05:
        r62 = staticinvoke <com.android.server.audio.AudioDeviceInventory$DeviceInfo: java.lang.String access$000(int,java.lang.String)>(128, r56);

        $r15 = r0.<com.android.server.audio.AudioDeviceInventory: java.util.LinkedHashMap mConnectedDevices>;

        $r16 = virtualinvoke $r15.<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>(r62);

        r63 = (com.android.server.audio.AudioDeviceInventory$DeviceInfo) $r16;

     label06:
        if r63 != null goto label09;

     label07:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("AS.AudioDeviceInventory", "invalid null DeviceInfo in onBluetoothA2dpActiveDeviceChange");

        $r46 = <android.media.MediaMetrics$Property: android.media.MediaMetrics$Key EARLY_RETURN>;

        $r47 = virtualinvoke r1.<android.media.MediaMetrics$Item: android.media.MediaMetrics$Item set(android.media.MediaMetrics$Key,java.lang.Object)>($r46, "null DeviceInfo");

        virtualinvoke $r47.<android.media.MediaMetrics$Item: boolean record()>();

        exitmonitor r59;

     label08:
        return;

     label09:
        $r17 = <android.media.MediaMetrics$Property: android.media.MediaMetrics$Key ADDRESS>;

        $r18 = virtualinvoke r1.<android.media.MediaMetrics$Item: android.media.MediaMetrics$Item set(android.media.MediaMetrics$Key,java.lang.Object)>($r17, r56);

        $r19 = <android.media.MediaMetrics$Property: android.media.MediaMetrics$Key ENCODING>;

        $r20 = staticinvoke <android.media.AudioSystem: java.lang.String audioFormatToString(int)>(i2);

        $r21 = virtualinvoke $r18.<android.media.MediaMetrics$Item: android.media.MediaMetrics$Item set(android.media.MediaMetrics$Key,java.lang.Object)>($r19, $r20);

        $r22 = <android.media.MediaMetrics$Property: android.media.MediaMetrics$Key INDEX>;

        $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r24 = virtualinvoke $r21.<android.media.MediaMetrics$Item: android.media.MediaMetrics$Item set(android.media.MediaMetrics$Key,java.lang.Object)>($r22, $r23);

        $r26 = <android.media.MediaMetrics$Property: android.media.MediaMetrics$Key NAME>;

        $r25 = r63.<com.android.server.audio.AudioDeviceInventory$DeviceInfo: java.lang.String mDeviceName>;

        virtualinvoke $r24.<android.media.MediaMetrics$Item: android.media.MediaMetrics$Item set(android.media.MediaMetrics$Key,java.lang.Object)>($r26, $r25);

     label10:
        if i0 != 1 goto label13;

        if i1 == -1 goto label15;

     label11:
        $r45 = r0.<com.android.server.audio.AudioDeviceInventory: com.android.server.audio.AudioDeviceBroker mDeviceBroker>;

        $i5 = i1 * 10;

        virtualinvoke $r45.<com.android.server.audio.AudioDeviceBroker: void postSetVolumeIndexOnDevice(int,int,int,java.lang.String)>(3, $i5, 128, "onBluetoothA2dpActiveDeviceChange");

     label12:
        goto label15;

     label13:
        if i0 != 0 goto label15;

     label14:
        $i4 = r63.<com.android.server.audio.AudioDeviceInventory$DeviceInfo: int mDeviceCodecFormat>;

        if $i4 == i2 goto label15;

        r63.<com.android.server.audio.AudioDeviceInventory$DeviceInfo: int mDeviceCodecFormat> = i2;

        $r43 = r0.<com.android.server.audio.AudioDeviceInventory: java.util.LinkedHashMap mConnectedDevices>;

        virtualinvoke $r43.<java.util.LinkedHashMap: java.lang.Object replace(java.lang.Object,java.lang.Object)>(r62, r63);

     label15:
        $r64 = r0.<com.android.server.audio.AudioDeviceInventory: com.android.server.audio.AudioSystemAdapter mAudioSystem>;

        $r65 = staticinvoke <com.android.server.audio.BtHelper: java.lang.String getName(android.bluetooth.BluetoothDevice)>(r55);

        $i7 = virtualinvoke $r64.<com.android.server.audio.AudioSystemAdapter: int handleDeviceConfigChange(int,java.lang.String,java.lang.String,int)>(128, r56, $r65, i2);

        if $i7 == 0 goto label17;

        r66 = <com.android.server.audio.AudioService: com.android.server.audio.AudioEventLogger sDeviceLogger>;

        r67 = new com.android.server.audio.AudioEventLogger$StringEvent;

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("APM handleDeviceConfigChange failed for A2DP device addr=");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r56);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" codec=");

        $r38 = staticinvoke <android.media.AudioSystem: java.lang.String audioFormatToString(int)>(i2);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        $r40 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r67.<com.android.server.audio.AudioEventLogger$StringEvent: void <init>(java.lang.String)>($r40);

        $r41 = virtualinvoke r67.<com.android.server.audio.AudioEventLogger$StringEvent: com.android.server.audio.AudioEventLogger$Event printLog(java.lang.String)>("AS.AudioDeviceInventory");

        virtualinvoke r66.<com.android.server.audio.AudioEventLogger: void log(com.android.server.audio.AudioEventLogger$Event)>($r41);

        $r42 = r0.<com.android.server.audio.AudioDeviceInventory: com.android.server.audio.AudioDeviceBroker mDeviceBroker>;

        $i3 = virtualinvoke $r42.<com.android.server.audio.AudioDeviceBroker: int getDeviceForStream(int)>(3);

        virtualinvoke r0.<com.android.server.audio.AudioDeviceInventory: void setBluetoothA2dpDeviceConnectionState(android.bluetooth.BluetoothDevice,int,int,boolean,int,int)>(r55, 0, 2, 0, $i3, -1);

     label16:
        goto label18;

     label17:
        r68 = <com.android.server.audio.AudioService: com.android.server.audio.AudioEventLogger sDeviceLogger>;

        r69 = new com.android.server.audio.AudioEventLogger$StringEvent;

        r70 = new java.lang.StringBuilder;

        specialinvoke r70.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("APM handleDeviceConfigChange success for A2DP device addr=");

        virtualinvoke r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r56);

        virtualinvoke r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" codec=");

        $r31 = staticinvoke <android.media.AudioSystem: java.lang.String audioFormatToString(int)>(i2);

        virtualinvoke r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        $r33 = virtualinvoke r70.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r69.<com.android.server.audio.AudioEventLogger$StringEvent: void <init>(java.lang.String)>($r33);

        $r34 = virtualinvoke r69.<com.android.server.audio.AudioEventLogger$StringEvent: com.android.server.audio.AudioEventLogger$Event printLog(java.lang.String)>("AS.AudioDeviceInventory");

        virtualinvoke r68.<com.android.server.audio.AudioEventLogger: void log(com.android.server.audio.AudioEventLogger$Event)>($r34);

     label18:
        exitmonitor r59;

     label19:
        virtualinvoke r1.<android.media.MediaMetrics$Item: boolean record()>();

        return;

     label20:
        $r53 := @caughtexception;

     label21:
        exitmonitor r59;

     label22:
        throw $r53;

        catch java.lang.Throwable from label03 to label04 with label20;
        catch java.lang.Throwable from label05 to label06 with label20;
        catch java.lang.Throwable from label07 to label08 with label20;
        catch java.lang.Throwable from label09 to label10 with label20;
        catch java.lang.Throwable from label11 to label12 with label20;
        catch java.lang.Throwable from label14 to label15 with label20;
        catch java.lang.Throwable from label15 to label16 with label20;
        catch java.lang.Throwable from label17 to label18 with label20;
        catch java.lang.Throwable from label18 to label19 with label20;
        catch java.lang.Throwable from label21 to label22 with label20;
    }

    void onMakeA2dpDeviceUnavailableNow(java.lang.String, int)
    {
        com.android.server.audio.AudioDeviceInventory r0;
        int i0;
        java.lang.Object r1;
        java.lang.Throwable $r2;
        java.lang.String r3;

        r0 := @this: com.android.server.audio.AudioDeviceInventory;

        r3 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 = r0.<com.android.server.audio.AudioDeviceInventory: java.lang.Object mDevicesLock>;

        entermonitor r1;

     label1:
        specialinvoke r0.<com.android.server.audio.AudioDeviceInventory: void makeA2dpDeviceUnavailableNow(java.lang.String,int)>(r3, i0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    void onReportNewRoutes()
    {
        com.android.server.audio.AudioDeviceInventory r0;
        android.os.RemoteCallbackList $r1, $r2, $r9;
        com.android.server.audio.AudioDeviceBroker $r3;
        android.media.MediaMetrics$Item $r4, $r7;
        android.media.MediaMetrics$Key $r5;
        java.lang.Integer $r6;
        android.media.AudioRoutesInfo $r8, r13, r14;
        android.os.IInterface $r10;
        android.os.RemoteException $r11;
        java.lang.Throwable $r12;
        int i0;
        android.media.IAudioRoutesObserver r15;

        r0 := @this: com.android.server.audio.AudioDeviceInventory;

        $r1 = r0.<com.android.server.audio.AudioDeviceInventory: android.os.RemoteCallbackList mRoutesObservers>;

        i0 = virtualinvoke $r1.<android.os.RemoteCallbackList: int beginBroadcast()>();

        if i0 <= 0 goto label10;

        $r4 = new android.media.MediaMetrics$Item;

        specialinvoke $r4.<android.media.MediaMetrics$Item: void <init>(java.lang.String)>("audio.device.onReportNewRoutes");

        $r5 = <android.media.MediaMetrics$Property: android.media.MediaMetrics$Key OBSERVERS>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r7 = virtualinvoke $r4.<android.media.MediaMetrics$Item: android.media.MediaMetrics$Item set(android.media.MediaMetrics$Key,java.lang.Object)>($r5, $r6);

        virtualinvoke $r7.<android.media.MediaMetrics$Item: boolean record()>();

        r13 = r0.<com.android.server.audio.AudioDeviceInventory: android.media.AudioRoutesInfo mCurAudioRoutes>;

        entermonitor r13;

     label01:
        r14 = new android.media.AudioRoutesInfo;

        $r8 = r0.<com.android.server.audio.AudioDeviceInventory: android.media.AudioRoutesInfo mCurAudioRoutes>;

        specialinvoke r14.<android.media.AudioRoutesInfo: void <init>(android.media.AudioRoutesInfo)>($r8);

        exitmonitor r13;

     label02:
        if i0 <= 0 goto label10;

        i0 = i0 + -1;

        $r9 = r0.<com.android.server.audio.AudioDeviceInventory: android.os.RemoteCallbackList mRoutesObservers>;

        $r10 = virtualinvoke $r9.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>(i0);

        r15 = (android.media.IAudioRoutesObserver) $r10;

     label03:
        interfaceinvoke r15.<android.media.IAudioRoutesObserver: void dispatchAudioRoutesChanged(android.media.AudioRoutesInfo)>(r14);

     label04:
        goto label06;

     label05:
        $r11 := @caughtexception;

        goto label04;

     label06:
        goto label02;

     label07:
        $r12 := @caughtexception;

     label08:
        exitmonitor r13;

     label09:
        throw $r12;

     label10:
        $r2 = r0.<com.android.server.audio.AudioDeviceInventory: android.os.RemoteCallbackList mRoutesObservers>;

        virtualinvoke $r2.<android.os.RemoteCallbackList: void finishBroadcast()>();

        $r3 = r0.<com.android.server.audio.AudioDeviceInventory: com.android.server.audio.AudioDeviceBroker mDeviceBroker>;

        virtualinvoke $r3.<com.android.server.audio.AudioDeviceBroker: void postObserveDevicesForAllStreams()>();

        return;

        catch java.lang.Throwable from label01 to label02 with label07;
        catch android.os.RemoteException from label03 to label04 with label05;
        catch java.lang.Throwable from label08 to label09 with label07;
    }

    void onRestoreDevices()
    {
        com.android.server.audio.AudioDeviceInventory r0;
        java.util.LinkedHashMap $r1;
        java.util.Collection $r2;
        boolean $z0;
        java.lang.Object $r3, r9;
        int $i0, $i1;
        java.lang.String $r4, $r5;
        com.android.server.audio.AudioSystemAdapter $r6;
        java.lang.Throwable $r7, $r8;
        java.util.Iterator r10;
        com.android.server.audio.AudioDeviceInventory$DeviceInfo r11;
        android.util.ArrayMap r12, r13;
        com.android.server.audio._$$Lambda$AudioDeviceInventory$rVjCbPoeHeOpk1Tf1e7TcZZH4rw r14;

        r0 := @this: com.android.server.audio.AudioDeviceInventory;

        r9 = r0.<com.android.server.audio.AudioDeviceInventory: java.lang.Object mDevicesLock>;

        entermonitor r9;

     label01:
        $r1 = r0.<com.android.server.audio.AudioDeviceInventory: java.util.LinkedHashMap mConnectedDevices>;

        $r2 = virtualinvoke $r1.<java.util.LinkedHashMap: java.util.Collection values()>();

        r10 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label04;

        $r3 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>();

        r11 = (com.android.server.audio.AudioDeviceInventory$DeviceInfo) $r3;

        $r6 = r0.<com.android.server.audio.AudioDeviceInventory: com.android.server.audio.AudioSystemAdapter mAudioSystem>;

        $i1 = r11.<com.android.server.audio.AudioDeviceInventory$DeviceInfo: int mDeviceType>;

        $r5 = r11.<com.android.server.audio.AudioDeviceInventory$DeviceInfo: java.lang.String mDeviceAddress>;

        $r4 = r11.<com.android.server.audio.AudioDeviceInventory$DeviceInfo: java.lang.String mDeviceName>;

        $i0 = r11.<com.android.server.audio.AudioDeviceInventory$DeviceInfo: int mDeviceCodecFormat>;

        virtualinvoke $r6.<com.android.server.audio.AudioSystemAdapter: int setDeviceConnectionState(int,int,java.lang.String,java.lang.String,int)>($i1, 1, $r5, $r4, $i0);

     label03:
        goto label02;

     label04:
        exitmonitor r9;

     label05:
        r12 = r0.<com.android.server.audio.AudioDeviceInventory: android.util.ArrayMap mPreferredDevices>;

        entermonitor r12;

     label06:
        r13 = r0.<com.android.server.audio.AudioDeviceInventory: android.util.ArrayMap mPreferredDevices>;

        r14 = new com.android.server.audio._$$Lambda$AudioDeviceInventory$rVjCbPoeHeOpk1Tf1e7TcZZH4rw;

        specialinvoke r14.<com.android.server.audio._$$Lambda$AudioDeviceInventory$rVjCbPoeHeOpk1Tf1e7TcZZH4rw: void <init>(com.android.server.audio.AudioDeviceInventory)>(r0);

        virtualinvoke r13.<android.util.ArrayMap: void forEach(java.util.function.BiConsumer)>(r14);

        exitmonitor r12;

     label07:
        return;

     label08:
        $r8 := @caughtexception;

     label09:
        exitmonitor r12;

     label10:
        throw $r8;

     label11:
        $r7 := @caughtexception;

     label12:
        exitmonitor r9;

     label13:
        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label02 to label03 with label11;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    void onSaveRemovePreferredDevice(int)
    {
        com.android.server.audio.AudioDeviceInventory r0;
        int i0;
        android.util.ArrayMap $r1;
        java.lang.Integer $r2;

        r0 := @this: com.android.server.audio.AudioDeviceInventory;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.audio.AudioDeviceInventory: android.util.ArrayMap mPreferredDevices>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r1.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>($r2);

        specialinvoke r0.<com.android.server.audio.AudioDeviceInventory: void dispatchPreferredDevice(int,android.media.AudioDeviceAttributes)>(i0, null);

        return;
    }

    void onSaveSetPreferredDevice(int, android.media.AudioDeviceAttributes)
    {
        com.android.server.audio.AudioDeviceInventory r0;
        int i0;
        android.media.AudioDeviceAttributes r1;
        android.util.ArrayMap $r2;
        java.lang.Integer $r3;

        r0 := @this: com.android.server.audio.AudioDeviceInventory;

        i0 := @parameter0: int;

        r1 := @parameter1: android.media.AudioDeviceAttributes;

        $r2 = r0.<com.android.server.audio.AudioDeviceInventory: android.util.ArrayMap mPreferredDevices>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, r1);

        specialinvoke r0.<com.android.server.audio.AudioDeviceInventory: void dispatchPreferredDevice(int,android.media.AudioDeviceAttributes)>(i0, r1);

        return;
    }

    public void onSetA2dpSinkConnectionState(com.android.server.audio.BtHelper$BluetoothA2dpDeviceInfo, int)
    {
        com.android.server.audio.AudioDeviceInventory r0;
        int i0, i1, i2, $i3, $i4, $i5;
        android.bluetooth.BluetoothDevice r1;
        android.media.MediaMetrics$Item r2, $r15, $r17, $r20, $r22, $r25;
        boolean $z0, z2;
        java.lang.StringBuilder $r3;
        java.lang.String $r9, $r14, $r19, $r26, $r29, r34, r35, r36, r40, r42;
        com.android.server.audio.AudioEventLogger$StringEvent $r13;
        android.media.MediaMetrics$Key $r16, $r18, $r21, $r23, r39;
        java.lang.Integer $r24;
        java.util.LinkedHashMap $r27;
        java.lang.Object $r28, r41;
        com.android.server.audio.AudioDeviceBroker $r30, $r31;
        java.lang.Throwable $r32;
        com.android.server.audio.BtHelper$BluetoothA2dpDeviceInfo r33;
        com.android.server.audio.AudioEventLogger r37;
        com.android.server.audio.AudioDeviceInventory$DeviceInfo r43;

        r0 := @this: com.android.server.audio.AudioDeviceInventory;

        r33 := @parameter0: com.android.server.audio.BtHelper$BluetoothA2dpDeviceInfo;

        i0 := @parameter1: int;

        r1 = virtualinvoke r33.<com.android.server.audio.BtHelper$BluetoothA2dpDeviceInfo: android.bluetooth.BluetoothDevice getBtDevice()>();

        i1 = virtualinvoke r33.<com.android.server.audio.BtHelper$BluetoothA2dpDeviceInfo: int getVolume()>();

        r34 = virtualinvoke r1.<android.bluetooth.BluetoothDevice: java.lang.String getAddress()>();

        r35 = r34;

        if r34 != null goto label01;

        r35 = "";

     label01:
        r36 = r35;

        $z0 = staticinvoke <android.bluetooth.BluetoothAdapter: boolean checkBluetoothAddress(java.lang.String)>(r35);

        if $z0 != 0 goto label02;

        r36 = "";

     label02:
        i2 = virtualinvoke r33.<com.android.server.audio.BtHelper$BluetoothA2dpDeviceInfo: int getCodec()>();

        r37 = <com.android.server.audio.AudioService: com.android.server.audio.AudioEventLogger sDeviceLogger>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("A2DP sink connected: device addr=");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r36);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" state=");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" codec=");

        $r9 = staticinvoke <android.media.AudioSystem: java.lang.String audioFormatToString(int)>(i2);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" vol=");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r13 = new com.android.server.audio.AudioEventLogger$StringEvent;

        $r14 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<com.android.server.audio.AudioEventLogger$StringEvent: void <init>(java.lang.String)>($r14);

        virtualinvoke r37.<com.android.server.audio.AudioEventLogger: void log(com.android.server.audio.AudioEventLogger$Event)>($r13);

        $r15 = new android.media.MediaMetrics$Item;

        specialinvoke $r15.<android.media.MediaMetrics$Item: void <init>(java.lang.String)>("audio.device.a2dp");

        $r16 = <android.media.MediaMetrics$Property: android.media.MediaMetrics$Key ADDRESS>;

        $r17 = virtualinvoke $r15.<android.media.MediaMetrics$Item: android.media.MediaMetrics$Item set(android.media.MediaMetrics$Key,java.lang.Object)>($r16, r36);

        $r18 = <android.media.MediaMetrics$Property: android.media.MediaMetrics$Key ENCODING>;

        $r19 = staticinvoke <android.media.AudioSystem: java.lang.String audioFormatToString(int)>(i2);

        $r20 = virtualinvoke $r17.<android.media.MediaMetrics$Item: android.media.MediaMetrics$Item set(android.media.MediaMetrics$Key,java.lang.Object)>($r18, $r19);

        $r21 = <android.media.MediaMetrics$Property: android.media.MediaMetrics$Key EVENT>;

        $r22 = virtualinvoke $r20.<android.media.MediaMetrics$Item: android.media.MediaMetrics$Item set(android.media.MediaMetrics$Key,java.lang.Object)>($r21, "onSetA2dpSinkConnectionState");

        $r23 = <android.media.MediaMetrics$Property: android.media.MediaMetrics$Key INDEX>;

        $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        r2 = virtualinvoke $r22.<android.media.MediaMetrics$Item: android.media.MediaMetrics$Item set(android.media.MediaMetrics$Key,java.lang.Object)>($r23, $r24);

        r39 = <android.media.MediaMetrics$Property: android.media.MediaMetrics$Key STATE>;

        if i0 != 2 goto label03;

        r40 = "connected";

        goto label04;

     label03:
        r40 = "disconnected";

     label04:
        $r25 = virtualinvoke r2.<android.media.MediaMetrics$Item: android.media.MediaMetrics$Item set(android.media.MediaMetrics$Key,java.lang.Object)>(r39, r40);

        virtualinvoke $r25.<android.media.MediaMetrics$Item: boolean record()>();

        r41 = r0.<com.android.server.audio.AudioDeviceInventory: java.lang.Object mDevicesLock>;

        entermonitor r41;

     label05:
        $r26 = virtualinvoke r1.<android.bluetooth.BluetoothDevice: java.lang.String getAddress()>();

        r42 = staticinvoke <com.android.server.audio.AudioDeviceInventory$DeviceInfo: java.lang.String access$000(int,java.lang.String)>(128, $r26);

        $r27 = r0.<com.android.server.audio.AudioDeviceInventory: java.util.LinkedHashMap mConnectedDevices>;

        $r28 = virtualinvoke $r27.<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>(r42);

        r43 = (com.android.server.audio.AudioDeviceInventory$DeviceInfo) $r28;

     label06:
        if r43 == null goto label07;

        z2 = 1;

        goto label08;

     label07:
        z2 = 0;

     label08:
        if z2 == 0 goto label13;

        if i0 != 2 goto label11;

     label09:
        $i5 = r43.<com.android.server.audio.AudioDeviceInventory$DeviceInfo: int mDeviceCodecFormat>;

        if i2 == $i5 goto label16;

        $r31 = r0.<com.android.server.audio.AudioDeviceInventory: com.android.server.audio.AudioDeviceBroker mDeviceBroker>;

        virtualinvoke $r31.<com.android.server.audio.AudioDeviceBroker: void postBluetoothA2dpDeviceConfigChange(android.bluetooth.BluetoothDevice)>(r1);

     label10:
        goto label16;

     label11:
        $i4 = r43.<com.android.server.audio.AudioDeviceInventory$DeviceInfo: int mDeviceCodecFormat>;

        specialinvoke r0.<com.android.server.audio.AudioDeviceInventory: void makeA2dpDeviceUnavailableNow(java.lang.String,int)>(r36, $i4);

     label12:
        goto label16;

     label13:
        if i0 != 2 goto label16;

        if i1 == -1 goto label15;

     label14:
        $r30 = r0.<com.android.server.audio.AudioDeviceInventory: com.android.server.audio.AudioDeviceBroker mDeviceBroker>;

        $i3 = i1 * 10;

        virtualinvoke $r30.<com.android.server.audio.AudioDeviceBroker: void postSetVolumeIndexOnDevice(int,int,int,java.lang.String)>(3, $i3, 128, "onSetA2dpSinkConnectionState");

     label15:
        $r29 = staticinvoke <com.android.server.audio.BtHelper: java.lang.String getName(android.bluetooth.BluetoothDevice)>(r1);

        specialinvoke r0.<com.android.server.audio.AudioDeviceInventory: void makeA2dpDeviceAvailable(java.lang.String,java.lang.String,java.lang.String,int)>(r36, $r29, "onSetA2dpSinkConnectionState", i2);

     label16:
        exitmonitor r41;

     label17:
        return;

     label18:
        $r32 := @caughtexception;

     label19:
        exitmonitor r41;

     label20:
        throw $r32;

        catch java.lang.Throwable from label05 to label06 with label18;
        catch java.lang.Throwable from label09 to label10 with label18;
        catch java.lang.Throwable from label11 to label12 with label18;
        catch java.lang.Throwable from label14 to label15 with label18;
        catch java.lang.Throwable from label15 to label16 with label18;
        catch java.lang.Throwable from label16 to label17 with label18;
        catch java.lang.Throwable from label19 to label20 with label18;
    }

    void onSetA2dpSourceConnectionState(com.android.server.audio.BtHelper$BluetoothA2dpDeviceInfo, int)
    {
        com.android.server.audio.AudioDeviceInventory r0;
        int i0;
        java.lang.Object r1, $r6;
        android.media.MediaMetrics$Item r2, $r9, $r12, r18;
        android.media.MediaMetrics$Key r3, $r8, $r10;
        android.bluetooth.BluetoothDevice $r4;
        boolean $z0, z2;
        java.util.LinkedHashMap $r5;
        com.android.server.audio.AudioDeviceInventory$DeviceInfo $r7;
        java.lang.String $r11, r15, r16, r17, r19;
        java.lang.Throwable $r13;
        com.android.server.audio.BtHelper$BluetoothA2dpDeviceInfo r14;

        r0 := @this: com.android.server.audio.AudioDeviceInventory;

        r14 := @parameter0: com.android.server.audio.BtHelper$BluetoothA2dpDeviceInfo;

        i0 := @parameter1: int;

        $r4 = virtualinvoke r14.<com.android.server.audio.BtHelper$BluetoothA2dpDeviceInfo: android.bluetooth.BluetoothDevice getBtDevice()>();

        r15 = virtualinvoke $r4.<android.bluetooth.BluetoothDevice: java.lang.String getAddress()>();

        r16 = r15;

        $z0 = staticinvoke <android.bluetooth.BluetoothAdapter: boolean checkBluetoothAddress(java.lang.String)>(r15);

        if $z0 != 0 goto label01;

        r16 = "";

     label01:
        r1 = r0.<com.android.server.audio.AudioDeviceInventory: java.lang.Object mDevicesLock>;

        entermonitor r1;

     label02:
        r17 = staticinvoke <com.android.server.audio.AudioDeviceInventory$DeviceInfo: java.lang.String access$000(int,java.lang.String)>(-2147352576, r16);

        $r5 = r0.<com.android.server.audio.AudioDeviceInventory: java.util.LinkedHashMap mConnectedDevices>;

        $r6 = virtualinvoke $r5.<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>(r17);

        $r7 = (com.android.server.audio.AudioDeviceInventory$DeviceInfo) $r6;

        if $r7 == null goto label04;

     label03:
        z2 = 1;

        goto label05;

     label04:
        z2 = 0;

     label05:
        r18 = new android.media.MediaMetrics$Item;

        specialinvoke r18.<android.media.MediaMetrics$Item: void <init>(java.lang.String)>("audio.device.onSetA2dpSourceConnectionState");

        $r8 = <android.media.MediaMetrics$Property: android.media.MediaMetrics$Key ADDRESS>;

        $r9 = virtualinvoke r18.<android.media.MediaMetrics$Item: android.media.MediaMetrics$Item set(android.media.MediaMetrics$Key,java.lang.Object)>($r8, r16);

        $r10 = <android.media.MediaMetrics$Property: android.media.MediaMetrics$Key DEVICE>;

        $r11 = staticinvoke <android.media.AudioSystem: java.lang.String getDeviceName(int)>(-2147352576);

        r2 = virtualinvoke $r9.<android.media.MediaMetrics$Item: android.media.MediaMetrics$Item set(android.media.MediaMetrics$Key,java.lang.Object)>($r10, $r11);

        r3 = <android.media.MediaMetrics$Property: android.media.MediaMetrics$Key STATE>;

     label06:
        if i0 != 2 goto label07;

        r19 = "connected";

        goto label08;

     label07:
        r19 = "disconnected";

     label08:
        $r12 = virtualinvoke r2.<android.media.MediaMetrics$Item: android.media.MediaMetrics$Item set(android.media.MediaMetrics$Key,java.lang.Object)>(r3, r19);

        virtualinvoke $r12.<android.media.MediaMetrics$Item: boolean record()>();

     label09:
        if z2 == 0 goto label12;

        if i0 == 2 goto label12;

     label10:
        specialinvoke r0.<com.android.server.audio.AudioDeviceInventory: void makeA2dpSrcUnavailable(java.lang.String)>(r16);

     label11:
        goto label14;

     label12:
        if z2 != 0 goto label14;

        if i0 != 2 goto label14;

     label13:
        specialinvoke r0.<com.android.server.audio.AudioDeviceInventory: void makeA2dpSrcAvailable(java.lang.String)>(r16);

     label14:
        exitmonitor r1;

     label15:
        return;

     label16:
        $r13 := @caughtexception;

     label17:
        exitmonitor r1;

     label18:
        throw $r13;

        catch java.lang.Throwable from label02 to label03 with label16;
        catch java.lang.Throwable from label05 to label06 with label16;
        catch java.lang.Throwable from label08 to label09 with label16;
        catch java.lang.Throwable from label10 to label11 with label16;
        catch java.lang.Throwable from label13 to label14 with label16;
        catch java.lang.Throwable from label14 to label15 with label16;
        catch java.lang.Throwable from label17 to label18 with label16;
    }

    void onSetHearingAidConnectionState(android.bluetooth.BluetoothDevice, int, int)
    {
        com.android.server.audio.AudioDeviceInventory r0;
        int i0, i1;
        android.media.MediaMetrics$Item r1, $r7, $r9, $r12, $r15;
        boolean $z0, z2;
        java.lang.StringBuilder $r2;
        com.android.server.audio.AudioEventLogger$StringEvent $r5;
        java.lang.String $r6, $r11, $r14, $r16, $r20, r23, r24, r28, r30;
        android.media.MediaMetrics$Key $r8, $r10, $r13, r27;
        java.util.LinkedHashMap $r17;
        java.lang.Object $r18, r29;
        com.android.server.audio.AudioDeviceInventory$DeviceInfo $r19;
        java.lang.Throwable $r21;
        android.bluetooth.BluetoothDevice r22;
        com.android.server.audio.AudioEventLogger r25;

        r0 := @this: com.android.server.audio.AudioDeviceInventory;

        r22 := @parameter0: android.bluetooth.BluetoothDevice;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r23 = virtualinvoke r22.<android.bluetooth.BluetoothDevice: java.lang.String getAddress()>();

        r24 = r23;

        $z0 = staticinvoke <android.bluetooth.BluetoothAdapter: boolean checkBluetoothAddress(java.lang.String)>(r23);

        if $z0 != 0 goto label01;

        r24 = "";

     label01:
        r25 = <com.android.server.audio.AudioService: com.android.server.audio.AudioEventLogger sDeviceLogger>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onSetHearingAidConnectionState addr=");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r24);

        $r5 = new com.android.server.audio.AudioEventLogger$StringEvent;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<com.android.server.audio.AudioEventLogger$StringEvent: void <init>(java.lang.String)>($r6);

        virtualinvoke r25.<com.android.server.audio.AudioEventLogger: void log(com.android.server.audio.AudioEventLogger$Event)>($r5);

        $r7 = new android.media.MediaMetrics$Item;

        specialinvoke $r7.<android.media.MediaMetrics$Item: void <init>(java.lang.String)>("audio.device.onSetHearingAidConnectionState");

        $r8 = <android.media.MediaMetrics$Property: android.media.MediaMetrics$Key ADDRESS>;

        $r9 = virtualinvoke $r7.<android.media.MediaMetrics$Item: android.media.MediaMetrics$Item set(android.media.MediaMetrics$Key,java.lang.Object)>($r8, r24);

        $r10 = <android.media.MediaMetrics$Property: android.media.MediaMetrics$Key DEVICE>;

        $r11 = staticinvoke <android.media.AudioSystem: java.lang.String getDeviceName(int)>(-2147352576);

        r1 = virtualinvoke $r9.<android.media.MediaMetrics$Item: android.media.MediaMetrics$Item set(android.media.MediaMetrics$Key,java.lang.Object)>($r10, $r11);

        r27 = <android.media.MediaMetrics$Property: android.media.MediaMetrics$Key STATE>;

        if i0 != 2 goto label02;

        r28 = "connected";

        goto label03;

     label02:
        r28 = "disconnected";

     label03:
        $r12 = virtualinvoke r1.<android.media.MediaMetrics$Item: android.media.MediaMetrics$Item set(android.media.MediaMetrics$Key,java.lang.Object)>(r27, r28);

        $r13 = <android.media.MediaMetrics$Property: android.media.MediaMetrics$Key STREAM_TYPE>;

        $r14 = staticinvoke <android.media.AudioSystem: java.lang.String streamToString(int)>(i1);

        $r15 = virtualinvoke $r12.<android.media.MediaMetrics$Item: android.media.MediaMetrics$Item set(android.media.MediaMetrics$Key,java.lang.Object)>($r13, $r14);

        virtualinvoke $r15.<android.media.MediaMetrics$Item: boolean record()>();

        r29 = r0.<com.android.server.audio.AudioDeviceInventory: java.lang.Object mDevicesLock>;

        entermonitor r29;

     label04:
        $r16 = virtualinvoke r22.<android.bluetooth.BluetoothDevice: java.lang.String getAddress()>();

        r30 = staticinvoke <com.android.server.audio.AudioDeviceInventory$DeviceInfo: java.lang.String access$000(int,java.lang.String)>(134217728, $r16);

        $r17 = r0.<com.android.server.audio.AudioDeviceInventory: java.util.LinkedHashMap mConnectedDevices>;

        $r18 = virtualinvoke $r17.<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>(r30);

        $r19 = (com.android.server.audio.AudioDeviceInventory$DeviceInfo) $r18;

        if $r19 == null goto label06;

     label05:
        z2 = 1;

        goto label07;

     label06:
        z2 = 0;

     label07:
        if z2 == 0 goto label10;

        if i0 == 2 goto label10;

     label08:
        specialinvoke r0.<com.android.server.audio.AudioDeviceInventory: void makeHearingAidDeviceUnavailable(java.lang.String)>(r24);

     label09:
        goto label12;

     label10:
        if z2 != 0 goto label12;

        if i0 != 2 goto label12;

     label11:
        $r20 = staticinvoke <com.android.server.audio.BtHelper: java.lang.String getName(android.bluetooth.BluetoothDevice)>(r22);

        specialinvoke r0.<com.android.server.audio.AudioDeviceInventory: void makeHearingAidDeviceAvailable(java.lang.String,java.lang.String,int,java.lang.String)>(r24, $r20, i1, "onSetHearingAidConnectionState");

     label12:
        exitmonitor r29;

     label13:
        return;

     label14:
        $r21 := @caughtexception;

     label15:
        exitmonitor r29;

     label16:
        throw $r21;

        catch java.lang.Throwable from label04 to label05 with label14;
        catch java.lang.Throwable from label08 to label09 with label14;
        catch java.lang.Throwable from label11 to label12 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label15 to label16 with label14;
    }

    void onSetWiredDeviceConnectionState(com.android.server.audio.AudioDeviceInventory$WiredDeviceConnectionState)
    {
        com.android.server.audio.AudioDeviceInventory r0;
        android.media.MediaMetrics$Item r1, $r4, $r7, $r22, r30;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        com.android.server.audio.AudioServiceEvents$WiredDevConnectEvent $r2;
        com.android.server.audio.AudioEventLogger $r3;
        java.lang.String $r5, $r9, $r10, $r11, $r12, $r13, $r14, $r18, r29;
        android.media.MediaMetrics$Key $r6, $r8, $r21, r28;
        boolean $z0, $z2, $z4, z5;
        com.android.server.audio.AudioDeviceBroker $r15, $r19, $r20, $r25;
        java.util.Set $r16, $r23;
        java.lang.Integer $r17, $r24;
        java.lang.Throwable $r26;
        com.android.server.audio.AudioDeviceInventory$WiredDeviceConnectionState r27;
        java.lang.Object r31;

        r0 := @this: com.android.server.audio.AudioDeviceInventory;

        r27 := @parameter0: com.android.server.audio.AudioDeviceInventory$WiredDeviceConnectionState;

        $r3 = <com.android.server.audio.AudioService: com.android.server.audio.AudioEventLogger sDeviceLogger>;

        $r2 = new com.android.server.audio.AudioServiceEvents$WiredDevConnectEvent;

        specialinvoke $r2.<com.android.server.audio.AudioServiceEvents$WiredDevConnectEvent: void <init>(com.android.server.audio.AudioDeviceInventory$WiredDeviceConnectionState)>(r27);

        virtualinvoke $r3.<com.android.server.audio.AudioEventLogger: void log(com.android.server.audio.AudioEventLogger$Event)>($r2);

        $r4 = new android.media.MediaMetrics$Item;

        specialinvoke $r4.<android.media.MediaMetrics$Item: void <init>(java.lang.String)>("audio.device.onSetWiredDeviceConnectionState");

        $r6 = <android.media.MediaMetrics$Property: android.media.MediaMetrics$Key ADDRESS>;

        $r5 = r27.<com.android.server.audio.AudioDeviceInventory$WiredDeviceConnectionState: java.lang.String mAddress>;

        $r7 = virtualinvoke $r4.<android.media.MediaMetrics$Item: android.media.MediaMetrics$Item set(android.media.MediaMetrics$Key,java.lang.Object)>($r6, $r5);

        $r8 = <android.media.MediaMetrics$Property: android.media.MediaMetrics$Key DEVICE>;

        $i1 = r27.<com.android.server.audio.AudioDeviceInventory$WiredDeviceConnectionState: int mType>;

        $r9 = staticinvoke <android.media.AudioSystem: java.lang.String getDeviceName(int)>($i1);

        r1 = virtualinvoke $r7.<android.media.MediaMetrics$Item: android.media.MediaMetrics$Item set(android.media.MediaMetrics$Key,java.lang.Object)>($r8, $r9);

        r28 = <android.media.MediaMetrics$Property: android.media.MediaMetrics$Key STATE>;

        $i2 = r27.<com.android.server.audio.AudioDeviceInventory$WiredDeviceConnectionState: int mState>;

        if $i2 != 0 goto label01;

        r29 = "disconnected";

        goto label02;

     label01:
        r29 = "connected";

     label02:
        r30 = virtualinvoke r1.<android.media.MediaMetrics$Item: android.media.MediaMetrics$Item set(android.media.MediaMetrics$Key,java.lang.Object)>(r28, r29);

        r31 = r0.<com.android.server.audio.AudioDeviceInventory: java.lang.Object mDevicesLock>;

        entermonitor r31;

     label03:
        i0 = r27.<com.android.server.audio.AudioDeviceInventory$WiredDeviceConnectionState: int mState>;

     label04:
        z5 = 1;

        if i0 != 0 goto label06;

     label05:
        $r23 = <com.android.server.audio.AudioDeviceInventory: java.util.Set DEVICE_OVERRIDE_A2DP_ROUTE_ON_PLUG_SET>;

        $i12 = r27.<com.android.server.audio.AudioDeviceInventory$WiredDeviceConnectionState: int mType>;

        $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i12);

        $z4 = interfaceinvoke $r23.<java.util.Set: boolean contains(java.lang.Object)>($r24);

        if $z4 == 0 goto label06;

        $r25 = r0.<com.android.server.audio.AudioDeviceInventory: com.android.server.audio.AudioDeviceBroker mDeviceBroker>;

        virtualinvoke $r25.<com.android.server.audio.AudioDeviceBroker: void setBluetoothA2dpOnInt(boolean,boolean,java.lang.String)>(1, 0, "onSetWiredDeviceConnectionState state DISCONNECTED");

     label06:
        $i13 = r27.<com.android.server.audio.AudioDeviceInventory$WiredDeviceConnectionState: int mState>;

        if $i13 != 1 goto label08;

     label07:
        goto label09;

     label08:
        z5 = 0;

     label09:
        $i3 = r27.<com.android.server.audio.AudioDeviceInventory$WiredDeviceConnectionState: int mType>;

        $r11 = r27.<com.android.server.audio.AudioDeviceInventory$WiredDeviceConnectionState: java.lang.String mAddress>;

        $r10 = r27.<com.android.server.audio.AudioDeviceInventory$WiredDeviceConnectionState: java.lang.String mName>;

        $z0 = virtualinvoke r0.<com.android.server.audio.AudioDeviceInventory: boolean handleDeviceConnection(boolean,int,java.lang.String,java.lang.String)>(z5, $i3, $r11, $r10);

        if $z0 != 0 goto label11;

        $r21 = <android.media.MediaMetrics$Property: android.media.MediaMetrics$Key EARLY_RETURN>;

        $r22 = virtualinvoke r30.<android.media.MediaMetrics$Item: android.media.MediaMetrics$Item set(android.media.MediaMetrics$Key,java.lang.Object)>($r21, "change of connection state failed");

        virtualinvoke $r22.<android.media.MediaMetrics$Item: boolean record()>();

        exitmonitor r31;

     label10:
        return;

     label11:
        $i4 = r27.<com.android.server.audio.AudioDeviceInventory$WiredDeviceConnectionState: int mState>;

        if $i4 == 0 goto label13;

        $r16 = <com.android.server.audio.AudioDeviceInventory: java.util.Set DEVICE_OVERRIDE_A2DP_ROUTE_ON_PLUG_SET>;

        $i10 = r27.<com.android.server.audio.AudioDeviceInventory$WiredDeviceConnectionState: int mType>;

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i10);

        $z2 = interfaceinvoke $r16.<java.util.Set: boolean contains(java.lang.Object)>($r17);

        if $z2 == 0 goto label12;

        $r20 = r0.<com.android.server.audio.AudioDeviceInventory: com.android.server.audio.AudioDeviceBroker mDeviceBroker>;

        virtualinvoke $r20.<com.android.server.audio.AudioDeviceBroker: void setBluetoothA2dpOnInt(boolean,boolean,java.lang.String)>(0, 0, "onSetWiredDeviceConnectionState state not DISCONNECTED");

     label12:
        $r19 = r0.<com.android.server.audio.AudioDeviceInventory: com.android.server.audio.AudioDeviceBroker mDeviceBroker>;

        $i11 = r27.<com.android.server.audio.AudioDeviceInventory$WiredDeviceConnectionState: int mType>;

        $r18 = r27.<com.android.server.audio.AudioDeviceInventory$WiredDeviceConnectionState: java.lang.String mCaller>;

        virtualinvoke $r19.<com.android.server.audio.AudioDeviceBroker: void checkMusicActive(int,java.lang.String)>($i11, $r18);

     label13:
        $i14 = r27.<com.android.server.audio.AudioDeviceInventory$WiredDeviceConnectionState: int mType>;

        if $i14 != 1024 goto label14;

        $r15 = r0.<com.android.server.audio.AudioDeviceInventory: com.android.server.audio.AudioDeviceBroker mDeviceBroker>;

        $i9 = r27.<com.android.server.audio.AudioDeviceInventory$WiredDeviceConnectionState: int mState>;

        $r14 = r27.<com.android.server.audio.AudioDeviceInventory$WiredDeviceConnectionState: java.lang.String mCaller>;

        virtualinvoke $r15.<com.android.server.audio.AudioDeviceBroker: void checkVolumeCecOnHdmiConnection(int,java.lang.String)>($i9, $r14);

     label14:
        $i6 = r27.<com.android.server.audio.AudioDeviceInventory$WiredDeviceConnectionState: int mType>;

        $i5 = r27.<com.android.server.audio.AudioDeviceInventory$WiredDeviceConnectionState: int mState>;

        $r13 = r27.<com.android.server.audio.AudioDeviceInventory$WiredDeviceConnectionState: java.lang.String mAddress>;

        $r12 = r27.<com.android.server.audio.AudioDeviceInventory$WiredDeviceConnectionState: java.lang.String mName>;

        specialinvoke r0.<com.android.server.audio.AudioDeviceInventory: void sendDeviceConnectionIntent(int,int,java.lang.String,java.lang.String)>($i6, $i5, $r13, $r12);

        $i8 = r27.<com.android.server.audio.AudioDeviceInventory$WiredDeviceConnectionState: int mType>;

        $i7 = r27.<com.android.server.audio.AudioDeviceInventory$WiredDeviceConnectionState: int mState>;

        specialinvoke r0.<com.android.server.audio.AudioDeviceInventory: void updateAudioRoutes(int,int)>($i8, $i7);

        exitmonitor r31;

     label15:
        virtualinvoke r30.<android.media.MediaMetrics$Item: boolean record()>();

        return;

     label16:
        $r26 := @caughtexception;

     label17:
        exitmonitor r31;

     label18:
        throw $r26;

        catch java.lang.Throwable from label03 to label04 with label16;
        catch java.lang.Throwable from label05 to label06 with label16;
        catch java.lang.Throwable from label06 to label07 with label16;
        catch java.lang.Throwable from label09 to label10 with label16;
        catch java.lang.Throwable from label11 to label12 with label16;
        catch java.lang.Throwable from label12 to label13 with label16;
        catch java.lang.Throwable from label13 to label14 with label16;
        catch java.lang.Throwable from label14 to label15 with label16;
        catch java.lang.Throwable from label17 to label18 with label16;
    }

    void onToggleHdmi()
    {
        com.android.server.audio.AudioDeviceInventory r0;
        android.media.MediaMetrics$Item r1, $r3, $r10;
        java.lang.Object r2, $r7;
        android.media.MediaMetrics$Key $r4, $r9;
        java.lang.String $r5, r12;
        java.util.LinkedHashMap $r6;
        com.android.server.audio.AudioDeviceInventory$DeviceInfo $r8;
        java.lang.Throwable $r11;

        r0 := @this: com.android.server.audio.AudioDeviceInventory;

        $r3 = new android.media.MediaMetrics$Item;

        specialinvoke $r3.<android.media.MediaMetrics$Item: void <init>(java.lang.String)>("audio.device.onToggleHdmi");

        $r4 = <android.media.MediaMetrics$Property: android.media.MediaMetrics$Key DEVICE>;

        $r5 = staticinvoke <android.media.AudioSystem: java.lang.String getDeviceName(int)>(1024);

        r1 = virtualinvoke $r3.<android.media.MediaMetrics$Item: android.media.MediaMetrics$Item set(android.media.MediaMetrics$Key,java.lang.Object)>($r4, $r5);

        r2 = r0.<com.android.server.audio.AudioDeviceInventory: java.lang.Object mDevicesLock>;

        entermonitor r2;

     label1:
        r12 = staticinvoke <com.android.server.audio.AudioDeviceInventory$DeviceInfo: java.lang.String access$000(int,java.lang.String)>(1024, "");

        $r6 = r0.<com.android.server.audio.AudioDeviceInventory: java.util.LinkedHashMap mConnectedDevices>;

        $r7 = virtualinvoke $r6.<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>(r12);

        $r8 = (com.android.server.audio.AudioDeviceInventory$DeviceInfo) $r7;

        if $r8 != null goto label3;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("AS.AudioDeviceInventory", "invalid null DeviceInfo in onToggleHdmi");

        $r9 = <android.media.MediaMetrics$Property: android.media.MediaMetrics$Key EARLY_RETURN>;

        $r10 = virtualinvoke r1.<android.media.MediaMetrics$Item: android.media.MediaMetrics$Item set(android.media.MediaMetrics$Key,java.lang.Object)>($r9, "invalid null DeviceInfo");

        virtualinvoke $r10.<android.media.MediaMetrics$Item: boolean record()>();

        exitmonitor r2;

     label2:
        return;

     label3:
        virtualinvoke r0.<com.android.server.audio.AudioDeviceInventory: int setWiredDeviceConnectionState(int,int,java.lang.String,java.lang.String,java.lang.String)>(1024, 0, "", "", "android");

        virtualinvoke r0.<com.android.server.audio.AudioDeviceInventory: int setWiredDeviceConnectionState(int,int,java.lang.String,java.lang.String,java.lang.String)>(1024, 1, "", "", "android");

     label4:
        exitmonitor r2;

     label5:
        virtualinvoke r1.<android.media.MediaMetrics$Item: boolean record()>();

        return;

     label6:
        $r11 := @caughtexception;

     label7:
        exitmonitor r2;

     label8:
        throw $r11;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    void registerStrategyPreferredDeviceDispatcher(android.media.IStrategyPreferredDeviceDispatcher)
    {
        com.android.server.audio.AudioDeviceInventory r0;
        android.media.IStrategyPreferredDeviceDispatcher r1;
        android.os.RemoteCallbackList $r2;

        r0 := @this: com.android.server.audio.AudioDeviceInventory;

        r1 := @parameter0: android.media.IStrategyPreferredDeviceDispatcher;

        $r2 = r0.<com.android.server.audio.AudioDeviceInventory: android.os.RemoteCallbackList mPrefDevDispatchers>;

        virtualinvoke $r2.<android.os.RemoteCallbackList: boolean register(android.os.IInterface)>(r1);

        return;
    }

    int removePreferredDeviceForStrategySync(int)
    {
        com.android.server.audio.AudioDeviceInventory r0;
        int i0, i2;
        long l1;
        com.android.server.audio.AudioSystemAdapter $r1;
        com.android.server.audio.AudioDeviceBroker $r2;

        r0 := @this: com.android.server.audio.AudioDeviceInventory;

        i0 := @parameter0: int;

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        $r1 = r0.<com.android.server.audio.AudioDeviceInventory: com.android.server.audio.AudioSystemAdapter mAudioSystem>;

        i2 = virtualinvoke $r1.<com.android.server.audio.AudioSystemAdapter: int removePreferredDeviceForStrategy(int)>(i0);

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        if i2 != 0 goto label1;

        $r2 = r0.<com.android.server.audio.AudioDeviceInventory: com.android.server.audio.AudioDeviceBroker mDeviceBroker>;

        virtualinvoke $r2.<com.android.server.audio.AudioDeviceBroker: void postSaveRemovePreferredDeviceForStrategy(int)>(i0);

     label1:
        return i2;
    }

    public void setBluetoothA2dpDeviceConnectionState(android.bluetooth.BluetoothDevice, int, int, boolean, int, int)
    {
        com.android.server.audio.AudioDeviceInventory r0;
        int i0, i1, i2, i3, i5, i6;
        boolean z0;
        java.lang.Object r1;
        com.android.server.audio.BtHelper$BluetoothA2dpDeviceInfo r2;
        com.android.server.audio.AudioDeviceBroker $r3, $r4, $r13;
        java.lang.StringBuilder $r5;
        java.lang.IllegalArgumentException $r8;
        java.lang.String $r9;
        java.lang.Throwable $r10;
        android.bluetooth.BluetoothDevice r11;
        byte b4;

        r0 := @this: com.android.server.audio.AudioDeviceInventory;

        r11 := @parameter0: android.bluetooth.BluetoothDevice;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        i3 := @parameter4: int;

        i2 := @parameter5: int;

        if i1 == 2 goto label02;

        if i1 != 11 goto label01;

        goto label02;

     label01:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid profile ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r8;

     label02:
        r1 = r0.<com.android.server.audio.AudioDeviceInventory: java.lang.Object mDevicesLock>;

        entermonitor r1;

        if i1 != 2 goto label06;

        if z0 != 0 goto label06;

        if i0 != 2 goto label03;

        b4 = 1;

        goto label04;

     label03:
        b4 = 0;

     label04:
        i5 = specialinvoke r0.<com.android.server.audio.AudioDeviceInventory: int checkSendBecomingNoisyIntentInt(int,int,int)>(128, b4, i3);

     label05:
        goto label07;

     label06:
        i5 = 0;

     label07:
        $r13 = r0.<com.android.server.audio.AudioDeviceInventory: com.android.server.audio.AudioDeviceBroker mDeviceBroker>;

        i6 = virtualinvoke $r13.<com.android.server.audio.AudioDeviceBroker: int getA2dpCodec(android.bluetooth.BluetoothDevice)>(r11);

        r2 = new com.android.server.audio.BtHelper$BluetoothA2dpDeviceInfo;

        specialinvoke r2.<com.android.server.audio.BtHelper$BluetoothA2dpDeviceInfo: void <init>(android.bluetooth.BluetoothDevice,int,int)>(r11, i2, i6);

     label08:
        if i1 != 2 goto label11;

     label09:
        $r4 = r0.<com.android.server.audio.AudioDeviceInventory: com.android.server.audio.AudioDeviceBroker mDeviceBroker>;

        virtualinvoke $r4.<com.android.server.audio.AudioDeviceBroker: void postA2dpSinkConnection(int,com.android.server.audio.BtHelper$BluetoothA2dpDeviceInfo,int)>(i0, r2, i5);

     label10:
        goto label12;

     label11:
        $r3 = r0.<com.android.server.audio.AudioDeviceInventory: com.android.server.audio.AudioDeviceBroker mDeviceBroker>;

        virtualinvoke $r3.<com.android.server.audio.AudioDeviceBroker: void postA2dpSourceConnection(int,com.android.server.audio.BtHelper$BluetoothA2dpDeviceInfo,int)>(i0, r2, i5);

     label12:
        exitmonitor r1;

     label13:
        return;

     label14:
        $r10 := @caughtexception;

     label15:
        exitmonitor r1;

     label16:
        throw $r10;

        catch java.lang.Throwable from label04 to label05 with label14;
        catch java.lang.Throwable from label07 to label08 with label14;
        catch java.lang.Throwable from label09 to label10 with label14;
        catch java.lang.Throwable from label11 to label12 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label15 to label16 with label14;
    }

    int setBluetoothHearingAidDeviceConnectionState(android.bluetooth.BluetoothDevice, int, boolean, int)
    {
        com.android.server.audio.AudioDeviceInventory r0;
        int i0, i1, i3;
        boolean z0;
        java.lang.Object r1;
        com.android.server.audio.AudioDeviceBroker $r2, $r3;
        java.lang.Throwable $r4;
        android.bluetooth.BluetoothDevice r5;
        byte b2;

        r0 := @this: com.android.server.audio.AudioDeviceInventory;

        r5 := @parameter0: android.bluetooth.BluetoothDevice;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        i1 := @parameter3: int;

        r1 = r0.<com.android.server.audio.AudioDeviceInventory: java.lang.Object mDevicesLock>;

        entermonitor r1;

        if z0 != 0 goto label04;

        if i0 != 2 goto label01;

        b2 = 1;

        goto label02;

     label01:
        b2 = 0;

     label02:
        i3 = specialinvoke r0.<com.android.server.audio.AudioDeviceInventory: int checkSendBecomingNoisyIntentInt(int,int,int)>(134217728, b2, i1);

     label03:
        goto label05;

     label04:
        i3 = 0;

     label05:
        $r2 = r0.<com.android.server.audio.AudioDeviceInventory: com.android.server.audio.AudioDeviceBroker mDeviceBroker>;

        virtualinvoke $r2.<com.android.server.audio.AudioDeviceBroker: void postSetHearingAidConnectionState(int,android.bluetooth.BluetoothDevice,int)>(i0, r5, i3);

     label06:
        if i0 != 2 goto label08;

     label07:
        $r3 = r0.<com.android.server.audio.AudioDeviceInventory: com.android.server.audio.AudioDeviceBroker mDeviceBroker>;

        virtualinvoke $r3.<com.android.server.audio.AudioDeviceBroker: void setForceUse_Async(int,int,java.lang.String)>(1, 0, "HEARING_AID set to CONNECTED");

     label08:
        exitmonitor r1;

     label09:
        return i3;

     label10:
        $r4 := @caughtexception;

     label11:
        exitmonitor r1;

     label12:
        throw $r4;

        catch java.lang.Throwable from label02 to label03 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    void setDeviceBroker(com.android.server.audio.AudioDeviceBroker)
    {
        com.android.server.audio.AudioDeviceInventory r0;
        com.android.server.audio.AudioDeviceBroker r1;

        r0 := @this: com.android.server.audio.AudioDeviceInventory;

        r1 := @parameter0: com.android.server.audio.AudioDeviceBroker;

        r0.<com.android.server.audio.AudioDeviceInventory: com.android.server.audio.AudioDeviceBroker mDeviceBroker> = r1;

        return;
    }

    int setPreferredDeviceForStrategySync(int, android.media.AudioDeviceAttributes)
    {
        com.android.server.audio.AudioDeviceInventory r0;
        int i0, i2;
        android.media.AudioDeviceAttributes r1;
        long l1;
        com.android.server.audio.AudioSystemAdapter $r2;
        com.android.server.audio.AudioDeviceBroker $r3;

        r0 := @this: com.android.server.audio.AudioDeviceInventory;

        i0 := @parameter0: int;

        r1 := @parameter1: android.media.AudioDeviceAttributes;

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        $r2 = r0.<com.android.server.audio.AudioDeviceInventory: com.android.server.audio.AudioSystemAdapter mAudioSystem>;

        i2 = virtualinvoke $r2.<com.android.server.audio.AudioSystemAdapter: int setPreferredDeviceForStrategy(int,android.media.AudioDeviceAttributes)>(i0, r1);

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        if i2 != 0 goto label1;

        $r3 = r0.<com.android.server.audio.AudioDeviceInventory: com.android.server.audio.AudioDeviceBroker mDeviceBroker>;

        virtualinvoke $r3.<com.android.server.audio.AudioDeviceBroker: void postSaveSetPreferredDeviceForStrategy(int,android.media.AudioDeviceAttributes)>(i0, r1);

     label1:
        return i2;
    }

    int setWiredDeviceConnectionState(int, int, java.lang.String, java.lang.String, java.lang.String)
    {
        com.android.server.audio.AudioDeviceInventory r0;
        int i0, i1, i2;
        java.lang.String r1, r2, r7;
        java.lang.Object r3;
        com.android.server.audio.AudioDeviceBroker r4;
        com.android.server.audio.AudioDeviceInventory$WiredDeviceConnectionState r5;
        java.lang.Throwable $r6;

        r0 := @this: com.android.server.audio.AudioDeviceInventory;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r7 := @parameter2: java.lang.String;

        r1 := @parameter3: java.lang.String;

        r2 := @parameter4: java.lang.String;

        r3 = r0.<com.android.server.audio.AudioDeviceInventory: java.lang.Object mDevicesLock>;

        entermonitor r3;

     label1:
        i2 = specialinvoke r0.<com.android.server.audio.AudioDeviceInventory: int checkSendBecomingNoisyIntentInt(int,int,int)>(i0, i1, 0);

        r4 = r0.<com.android.server.audio.AudioDeviceInventory: com.android.server.audio.AudioDeviceBroker mDeviceBroker>;

        r5 = new com.android.server.audio.AudioDeviceInventory$WiredDeviceConnectionState;

        specialinvoke r5.<com.android.server.audio.AudioDeviceInventory$WiredDeviceConnectionState: void <init>(com.android.server.audio.AudioDeviceInventory,int,int,java.lang.String,java.lang.String,java.lang.String)>(r0, i0, i1, r7, r1, r2);

        virtualinvoke r4.<com.android.server.audio.AudioDeviceBroker: void postSetWiredDeviceConnectionState(com.android.server.audio.AudioDeviceInventory$WiredDeviceConnectionState,int)>(r5, i2);

        exitmonitor r3;

     label2:
        return i2;

     label3:
        $r6 := @caughtexception;

     label4:
        exitmonitor r3;

     label5:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    android.media.AudioRoutesInfo startWatchingRoutes(android.media.IAudioRoutesObserver)
    {
        com.android.server.audio.AudioDeviceInventory r0;
        android.media.AudioRoutesInfo r1, r2, $r3;
        android.os.RemoteCallbackList $r4;
        java.lang.Throwable $r5;
        android.media.IAudioRoutesObserver r6;

        r0 := @this: com.android.server.audio.AudioDeviceInventory;

        r6 := @parameter0: android.media.IAudioRoutesObserver;

        r1 = r0.<com.android.server.audio.AudioDeviceInventory: android.media.AudioRoutesInfo mCurAudioRoutes>;

        entermonitor r1;

     label1:
        r2 = new android.media.AudioRoutesInfo;

        $r3 = r0.<com.android.server.audio.AudioDeviceInventory: android.media.AudioRoutesInfo mCurAudioRoutes>;

        specialinvoke r2.<android.media.AudioRoutesInfo: void <init>(android.media.AudioRoutesInfo)>($r3);

        $r4 = r0.<com.android.server.audio.AudioDeviceInventory: android.os.RemoteCallbackList mRoutesObservers>;

        virtualinvoke $r4.<android.os.RemoteCallbackList: boolean register(android.os.IInterface)>(r6);

        exitmonitor r1;

     label2:
        return r2;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    void unregisterStrategyPreferredDeviceDispatcher(android.media.IStrategyPreferredDeviceDispatcher)
    {
        com.android.server.audio.AudioDeviceInventory r0;
        android.media.IStrategyPreferredDeviceDispatcher r1;
        android.os.RemoteCallbackList $r2;

        r0 := @this: com.android.server.audio.AudioDeviceInventory;

        r1 := @parameter0: android.media.IStrategyPreferredDeviceDispatcher;

        $r2 = r0.<com.android.server.audio.AudioDeviceInventory: android.os.RemoteCallbackList mPrefDevDispatchers>;

        virtualinvoke $r2.<android.os.RemoteCallbackList: boolean unregister(android.os.IInterface)>(r1);

        return;
    }
}
