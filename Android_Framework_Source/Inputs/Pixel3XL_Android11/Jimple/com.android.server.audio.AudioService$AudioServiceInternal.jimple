final class com.android.server.audio.AudioService$AudioServiceInternal extends android.media.AudioManagerInternal
{
    final com.android.server.audio.AudioService this$0;

    void <init>(com.android.server.audio.AudioService)
    {
        com.android.server.audio.AudioService$AudioServiceInternal r0;
        com.android.server.audio.AudioService r1;

        r0 := @this: com.android.server.audio.AudioService$AudioServiceInternal;

        r1 := @parameter0: com.android.server.audio.AudioService;

        r0.<com.android.server.audio.AudioService$AudioServiceInternal: com.android.server.audio.AudioService this$0> = r1;

        specialinvoke r0.<android.media.AudioManagerInternal: void <init>()>();

        return;
    }

    public void adjustStreamVolumeForUid(int, int, int, java.lang.String, int, int)
    {
        com.android.server.audio.AudioService$AudioServiceInternal r0;
        int i0, i1, i2, i3, i4, $i5;
        java.lang.String r1, $r11;
        com.android.server.audio.AudioEventLogger r2;
        com.android.server.audio.AudioService $r4, $r6;
        android.content.Context $r5;
        java.lang.StringBuilder $r7;
        com.android.server.audio.AudioServiceEvents$VolumeEvent $r10;
        boolean z0;

        r0 := @this: com.android.server.audio.AudioService$AudioServiceInternal;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: java.lang.String;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        if i1 == 0 goto label1;

        r2 = <com.android.server.audio.AudioService: com.android.server.audio.AudioEventLogger sVolumeLogger>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>(r1);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" uid:");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r10 = new com.android.server.audio.AudioServiceEvents$VolumeEvent;

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<com.android.server.audio.AudioServiceEvents$VolumeEvent: void <init>(int,int,int,int,java.lang.String)>(5, i0, i1, i2, $r11);

        virtualinvoke r2.<com.android.server.audio.AudioEventLogger: void log(com.android.server.audio.AudioEventLogger$Event)>($r10);

        goto label1;

     label1:
        $r4 = r0.<com.android.server.audio.AudioService$AudioServiceInternal: com.android.server.audio.AudioService this$0>;

        $r5 = staticinvoke <com.android.server.audio.AudioService: android.content.Context access$600(com.android.server.audio.AudioService)>($r4);

        $i5 = virtualinvoke $r5.<android.content.Context: int checkPermission(java.lang.String,int,int)>("android.permission.MODIFY_AUDIO_SETTINGS", i4, i3);

        if $i5 != 0 goto label2;

        z0 = 1;

        goto label3;

     label2:
        z0 = 0;

     label3:
        $r6 = r0.<com.android.server.audio.AudioService$AudioServiceInternal: com.android.server.audio.AudioService this$0>;

        virtualinvoke $r6.<com.android.server.audio.AudioService: void adjustStreamVolume(int,int,int,java.lang.String,java.lang.String,int,boolean,int)>(i0, i1, i2, r1, r1, i3, z0, 0);

        return;
    }

    public void adjustSuggestedStreamVolumeForUid(int, int, int, java.lang.String, int, int)
    {
        com.android.server.audio.AudioService$AudioServiceInternal r0;
        int i0, i1, i2, i3, i4, $i5;
        java.lang.String r1;
        com.android.server.audio.AudioService $r2, $r4;
        android.content.Context $r3;
        boolean z0;

        r0 := @this: com.android.server.audio.AudioService$AudioServiceInternal;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: java.lang.String;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        $r2 = r0.<com.android.server.audio.AudioService$AudioServiceInternal: com.android.server.audio.AudioService this$0>;

        $r3 = staticinvoke <com.android.server.audio.AudioService: android.content.Context access$600(com.android.server.audio.AudioService)>($r2);

        $i5 = virtualinvoke $r3.<android.content.Context: int checkPermission(java.lang.String,int,int)>("android.permission.MODIFY_AUDIO_SETTINGS", i4, i3);

        if $i5 != 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        $r4 = r0.<com.android.server.audio.AudioService$AudioServiceInternal: com.android.server.audio.AudioService this$0>;

        staticinvoke <com.android.server.audio.AudioService: void access$8900(com.android.server.audio.AudioService,int,int,int,java.lang.String,java.lang.String,int,boolean,int)>($r4, i1, i0, i2, r1, r1, i3, z0, 0);

        return;
    }

    public int getRingerModeInternal()
    {
        com.android.server.audio.AudioService$AudioServiceInternal r0;
        com.android.server.audio.AudioService $r1;
        int $i0;

        r0 := @this: com.android.server.audio.AudioService$AudioServiceInternal;

        $r1 = r0.<com.android.server.audio.AudioService$AudioServiceInternal: com.android.server.audio.AudioService this$0>;

        $i0 = virtualinvoke $r1.<com.android.server.audio.AudioService: int getRingerModeInternal()>();

        return $i0;
    }

    public void setAccessibilityServiceUids(android.util.IntArray)
    {
        com.android.server.audio.AudioService$AudioServiceInternal r0;
        java.lang.Object r1;
        com.android.server.audio.AudioService $r2, $r3, $r5, $r8, $r10, $r12, $r14, $r18;
        int $i0, $i2, $i3, $i4, $i5, $i6, i7;
        int[] $r4, $r6, $r9, $r11, $r13, $r19;
        java.lang.Throwable $r16;
        android.util.IntArray r17;
        boolean z0, z1;

        r0 := @this: com.android.server.audio.AudioService$AudioServiceInternal;

        r17 := @parameter0: android.util.IntArray;

        $r2 = r0.<com.android.server.audio.AudioService$AudioServiceInternal: com.android.server.audio.AudioService this$0>;

        r1 = staticinvoke <com.android.server.audio.AudioService: java.lang.Object access$9100(com.android.server.audio.AudioService)>($r2);

        entermonitor r1;

     label01:
        $i0 = virtualinvoke r17.<android.util.IntArray: int size()>();

        if $i0 != 0 goto label03;

        $r14 = r0.<com.android.server.audio.AudioService$AudioServiceInternal: com.android.server.audio.AudioService this$0>;

        staticinvoke <com.android.server.audio.AudioService: int[] access$9202(com.android.server.audio.AudioService,int[])>($r14, null);

     label02:
        goto label14;

     label03:
        $r3 = r0.<com.android.server.audio.AudioService$AudioServiceInternal: com.android.server.audio.AudioService this$0>;

        $r4 = staticinvoke <com.android.server.audio.AudioService: int[] access$9200(com.android.server.audio.AudioService)>($r3);

        if $r4 == null goto label06;

        $r12 = r0.<com.android.server.audio.AudioService$AudioServiceInternal: com.android.server.audio.AudioService this$0>;

        $r13 = staticinvoke <com.android.server.audio.AudioService: int[] access$9200(com.android.server.audio.AudioService)>($r12);

        $i5 = lengthof $r13;

        $i6 = virtualinvoke r17.<android.util.IntArray: int size()>();

        if $i5 == $i6 goto label05;

     label04:
        goto label06;

     label05:
        z0 = 0;

        goto label07;

     label06:
        z0 = 1;

     label07:
        z1 = z0;

        if z0 != 0 goto label12;

        i7 = 0;

     label08:
        z1 = z0;

     label09:
        $r8 = r0.<com.android.server.audio.AudioService$AudioServiceInternal: com.android.server.audio.AudioService this$0>;

        $r9 = staticinvoke <com.android.server.audio.AudioService: int[] access$9200(com.android.server.audio.AudioService)>($r8);

        $i2 = lengthof $r9;

        if i7 >= $i2 goto label12;

        $i3 = virtualinvoke r17.<android.util.IntArray: int get(int)>(i7);

        $r10 = r0.<com.android.server.audio.AudioService$AudioServiceInternal: com.android.server.audio.AudioService this$0>;

        $r11 = staticinvoke <com.android.server.audio.AudioService: int[] access$9200(com.android.server.audio.AudioService)>($r10);

        $i4 = $r11[i7];

        if $i3 == $i4 goto label11;

     label10:
        z1 = 1;

        goto label12;

     label11:
        i7 = i7 + 1;

        goto label08;

     label12:
        if z1 == 0 goto label14;

     label13:
        $r5 = r0.<com.android.server.audio.AudioService$AudioServiceInternal: com.android.server.audio.AudioService this$0>;

        $r6 = virtualinvoke r17.<android.util.IntArray: int[] toArray()>();

        staticinvoke <com.android.server.audio.AudioService: int[] access$9202(com.android.server.audio.AudioService,int[])>($r5, $r6);

     label14:
        $r18 = r0.<com.android.server.audio.AudioService$AudioServiceInternal: com.android.server.audio.AudioService this$0>;

        $r19 = staticinvoke <com.android.server.audio.AudioService: int[] access$9200(com.android.server.audio.AudioService)>($r18);

        staticinvoke <android.media.AudioSystem: int setA11yServicesUids(int[])>($r19);

        exitmonitor r1;

     label15:
        return;

     label16:
        $r16 := @caughtexception;

     label17:
        exitmonitor r1;

     label18:
        throw $r16;

        catch java.lang.Throwable from label01 to label02 with label16;
        catch java.lang.Throwable from label03 to label04 with label16;
        catch java.lang.Throwable from label09 to label10 with label16;
        catch java.lang.Throwable from label13 to label14 with label16;
        catch java.lang.Throwable from label14 to label15 with label16;
        catch java.lang.Throwable from label17 to label18 with label16;
    }

    public void setInputMethodServiceUid(int)
    {
        com.android.server.audio.AudioService$AudioServiceInternal r0;
        int i0, $i1;
        java.lang.Object r1;
        com.android.server.audio.AudioService $r3, $r4, $r5, $r7;
        com.android.server.audio.AudioSystemAdapter $r6;
        java.lang.Throwable $r8;

        r0 := @this: com.android.server.audio.AudioService$AudioServiceInternal;

        i0 := @parameter0: int;

        $r3 = r0.<com.android.server.audio.AudioService$AudioServiceInternal: com.android.server.audio.AudioService this$0>;

        r1 = staticinvoke <com.android.server.audio.AudioService: java.lang.Object access$9300(com.android.server.audio.AudioService)>($r3);

        entermonitor r1;

     label1:
        $r4 = r0.<com.android.server.audio.AudioService$AudioServiceInternal: com.android.server.audio.AudioService this$0>;

        $i1 = staticinvoke <com.android.server.audio.AudioService: int access$9400(com.android.server.audio.AudioService)>($r4);

        if $i1 == i0 goto label2;

        $r5 = r0.<com.android.server.audio.AudioService$AudioServiceInternal: com.android.server.audio.AudioService this$0>;

        $r6 = staticinvoke <com.android.server.audio.AudioService: com.android.server.audio.AudioSystemAdapter access$9500(com.android.server.audio.AudioService)>($r5);

        virtualinvoke $r6.<com.android.server.audio.AudioSystemAdapter: int setCurrentImeUid(int)>(i0);

        $r7 = r0.<com.android.server.audio.AudioService$AudioServiceInternal: com.android.server.audio.AudioService this$0>;

        staticinvoke <com.android.server.audio.AudioService: int access$9402(com.android.server.audio.AudioService,int)>($r7, i0);

     label2:
        exitmonitor r1;

     label3:
        return;

     label4:
        $r8 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void setRingerModeDelegate(android.media.AudioManagerInternal$RingerModeDelegate)
    {
        com.android.server.audio.AudioService$AudioServiceInternal r0;
        com.android.server.audio.AudioService $r2, $r4, $r6, $r7;
        android.media.AudioManagerInternal$RingerModeDelegate $r5, r9;
        int $i0;
        java.lang.Throwable $r8;
        java.lang.Object r10;

        r0 := @this: com.android.server.audio.AudioService$AudioServiceInternal;

        r9 := @parameter0: android.media.AudioManagerInternal$RingerModeDelegate;

        $r2 = r0.<com.android.server.audio.AudioService$AudioServiceInternal: com.android.server.audio.AudioService this$0>;

        staticinvoke <com.android.server.audio.AudioService: android.media.AudioManagerInternal$RingerModeDelegate access$8802(com.android.server.audio.AudioService,android.media.AudioManagerInternal$RingerModeDelegate)>($r2, r9);

        $r4 = r0.<com.android.server.audio.AudioService$AudioServiceInternal: com.android.server.audio.AudioService this$0>;

        $r5 = staticinvoke <com.android.server.audio.AudioService: android.media.AudioManagerInternal$RingerModeDelegate access$8800(com.android.server.audio.AudioService)>($r4);

        if $r5 == null goto label6;

        $r6 = r0.<com.android.server.audio.AudioService$AudioServiceInternal: com.android.server.audio.AudioService this$0>;

        r10 = staticinvoke <com.android.server.audio.AudioService: java.lang.Object access$3100(com.android.server.audio.AudioService)>($r6);

        entermonitor r10;

     label1:
        $r7 = r0.<com.android.server.audio.AudioService$AudioServiceInternal: com.android.server.audio.AudioService this$0>;

        staticinvoke <com.android.server.audio.AudioService: boolean access$6200(com.android.server.audio.AudioService)>($r7);

        exitmonitor r10;

     label2:
        $i0 = virtualinvoke r0.<com.android.server.audio.AudioService$AudioServiceInternal: int getRingerModeInternal()>();

        virtualinvoke r0.<com.android.server.audio.AudioService$AudioServiceInternal: void setRingerModeInternal(int,java.lang.String)>($i0, "AS.AudioService.setRingerModeDelegate");

        goto label6;

     label3:
        $r8 := @caughtexception;

     label4:
        exitmonitor r10;

     label5:
        throw $r8;

     label6:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void setRingerModeInternal(int, java.lang.String)
    {
        com.android.server.audio.AudioService$AudioServiceInternal r0;
        int i0;
        java.lang.String r1;
        com.android.server.audio.AudioService $r2;

        r0 := @this: com.android.server.audio.AudioService$AudioServiceInternal;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r2 = r0.<com.android.server.audio.AudioService$AudioServiceInternal: com.android.server.audio.AudioService this$0>;

        virtualinvoke $r2.<com.android.server.audio.AudioService: void setRingerModeInternal(int,java.lang.String)>(i0, r1);

        return;
    }

    public void setStreamVolumeForUid(int, int, int, java.lang.String, int, int)
    {
        com.android.server.audio.AudioService$AudioServiceInternal r0;
        int i0, i1, i2, i3, i4, $i5;
        java.lang.String r1;
        com.android.server.audio.AudioService $r2, $r4;
        android.content.Context $r3;
        boolean z0;

        r0 := @this: com.android.server.audio.AudioService$AudioServiceInternal;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: java.lang.String;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        $r2 = r0.<com.android.server.audio.AudioService$AudioServiceInternal: com.android.server.audio.AudioService this$0>;

        $r3 = staticinvoke <com.android.server.audio.AudioService: android.content.Context access$600(com.android.server.audio.AudioService)>($r2);

        $i5 = virtualinvoke $r3.<android.content.Context: int checkPermission(java.lang.String,int,int)>("android.permission.MODIFY_AUDIO_SETTINGS", i4, i3);

        if $i5 != 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        $r4 = r0.<com.android.server.audio.AudioService$AudioServiceInternal: com.android.server.audio.AudioService this$0>;

        staticinvoke <com.android.server.audio.AudioService: void access$9000(com.android.server.audio.AudioService,int,int,int,java.lang.String,java.lang.String,int,boolean)>($r4, i0, i1, i2, r1, r1, i3, z0);

        return;
    }

    public void silenceRingerModeInternal(java.lang.String)
    {
        com.android.server.audio.AudioService$AudioServiceInternal r0;
        java.lang.String r1;
        com.android.server.audio.AudioService $r2;

        r0 := @this: com.android.server.audio.AudioService$AudioServiceInternal;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.audio.AudioService$AudioServiceInternal: com.android.server.audio.AudioService this$0>;

        virtualinvoke $r2.<com.android.server.audio.AudioService: void silenceRingerModeInternal(java.lang.String)>(r1);

        return;
    }

    public void updateRingerModeAffectedStreamsInternal()
    {
        com.android.server.audio.AudioService$AudioServiceInternal r0;
        java.lang.Object r1;
        com.android.server.audio.AudioService $r3, $r4, $r5;
        boolean $z0;
        int $i0;
        java.lang.Throwable $r6;

        r0 := @this: com.android.server.audio.AudioService$AudioServiceInternal;

        $r3 = r0.<com.android.server.audio.AudioService$AudioServiceInternal: com.android.server.audio.AudioService this$0>;

        r1 = staticinvoke <com.android.server.audio.AudioService: java.lang.Object access$3100(com.android.server.audio.AudioService)>($r3);

        entermonitor r1;

     label1:
        $r4 = r0.<com.android.server.audio.AudioService$AudioServiceInternal: com.android.server.audio.AudioService this$0>;

        $z0 = staticinvoke <com.android.server.audio.AudioService: boolean access$6200(com.android.server.audio.AudioService)>($r4);

        if $z0 == 0 goto label2;

        $r5 = r0.<com.android.server.audio.AudioService$AudioServiceInternal: com.android.server.audio.AudioService this$0>;

        $i0 = virtualinvoke r0.<com.android.server.audio.AudioService$AudioServiceInternal: int getRingerModeInternal()>();

        staticinvoke <com.android.server.audio.AudioService: void access$6300(com.android.server.audio.AudioService,int,boolean)>($r5, $i0, 0);

     label2:
        exitmonitor r1;

     label3:
        return;

     label4:
        $r6 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }
}
