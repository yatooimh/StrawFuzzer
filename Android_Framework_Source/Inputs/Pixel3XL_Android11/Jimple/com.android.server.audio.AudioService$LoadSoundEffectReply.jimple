final class com.android.server.audio.AudioService$LoadSoundEffectReply extends java.lang.Object implements com.android.server.audio.SoundEffectsHelper$OnEffectsLoadCompleteHandler
{
    private static final int SOUND_EFFECTS_ERROR;
    private static final int SOUND_EFFECTS_LOADED;
    private static final int SOUND_EFFECTS_LOADING;
    private static final int SOUND_EFFECTS_LOAD_TIMEOUT_MS;
    private int mStatus;

    private void <init>()
    {
        com.android.server.audio.AudioService$LoadSoundEffectReply r0;

        r0 := @this: com.android.server.audio.AudioService$LoadSoundEffectReply;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.audio.AudioService$LoadSoundEffectReply: int mStatus> = 1;

        return;
    }

    void <init>(com.android.server.audio.AudioService$1)
    {
        com.android.server.audio.AudioService$LoadSoundEffectReply r0;
        com.android.server.audio.AudioService$1 r1;

        r0 := @this: com.android.server.audio.AudioService$LoadSoundEffectReply;

        r1 := @parameter0: com.android.server.audio.AudioService$1;

        specialinvoke r0.<com.android.server.audio.AudioService$LoadSoundEffectReply: void <init>()>();

        return;
    }

    public void run(boolean)
    {
        com.android.server.audio.AudioService$LoadSoundEffectReply r0;
        boolean z0;
        java.lang.Throwable $r2;
        byte b0;

        r0 := @this: com.android.server.audio.AudioService$LoadSoundEffectReply;

        z0 := @parameter0: boolean;

        entermonitor r0;

        if z0 == 0 goto label1;

        b0 = 0;

        goto label2;

     label1:
        b0 = -1;

     label2:
        r0.<com.android.server.audio.AudioService$LoadSoundEffectReply: int mStatus> = b0;

        virtualinvoke r0.<java.lang.Object: void notify()>();

     label3:
        exitmonitor r0;

        return;

     label4:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public boolean waitForLoaded(int)
    {
        com.android.server.audio.AudioService$LoadSoundEffectReply r0;
        int i0, i2, i3;
        java.lang.Throwable $r1, $r2;
        boolean z0;

        r0 := @this: com.android.server.audio.AudioService$LoadSoundEffectReply;

        i2 := @parameter0: int;

        entermonitor r0;

     label01:
        i0 = r0.<com.android.server.audio.AudioService$LoadSoundEffectReply: int mStatus>;

     label02:
        z0 = 1;

        if i0 != 1 goto label08;

        if i2 <= 0 goto label08;

     label03:
        virtualinvoke r0.<java.lang.Object: void wait(long)>(5000L);

     label04:
        goto label07;

     label05:
        $r2 := @caughtexception;

     label06:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("AS.AudioService", "Interrupted while waiting sound pool loaded.");

     label07:
        i2 = i2 + -1;

        goto label01;

     label08:
        i3 = r0.<com.android.server.audio.AudioService$LoadSoundEffectReply: int mStatus>;

     label09:
        if i3 != 0 goto label10;

        goto label11;

     label10:
        z0 = 0;

     label11:
        exitmonitor r0;

        return z0;

     label12:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.InterruptedException from label03 to label04 with label05;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
    }

    public static void <clinit>()
    {
        <com.android.server.audio.AudioService$LoadSoundEffectReply: int SOUND_EFFECTS_LOAD_TIMEOUT_MS> = 5000;

        <com.android.server.audio.AudioService$LoadSoundEffectReply: int SOUND_EFFECTS_LOADING> = 1;

        <com.android.server.audio.AudioService$LoadSoundEffectReply: int SOUND_EFFECTS_LOADED> = 0;

        <com.android.server.audio.AudioService$LoadSoundEffectReply: int SOUND_EFFECTS_ERROR> = -1;

        return;
    }
}
