class com.android.server.audio.AudioService$MyHdmiCecVolumeControlFeatureListener extends java.lang.Object implements android.hardware.hdmi.HdmiControlManager$HdmiCecVolumeControlFeatureListener
{
    final com.android.server.audio.AudioService this$0;

    private void <init>(com.android.server.audio.AudioService)
    {
        com.android.server.audio.AudioService$MyHdmiCecVolumeControlFeatureListener r0;
        com.android.server.audio.AudioService r1;

        r0 := @this: com.android.server.audio.AudioService$MyHdmiCecVolumeControlFeatureListener;

        r1 := @parameter0: com.android.server.audio.AudioService;

        r0.<com.android.server.audio.AudioService$MyHdmiCecVolumeControlFeatureListener: com.android.server.audio.AudioService this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    void <init>(com.android.server.audio.AudioService, com.android.server.audio.AudioService$1)
    {
        com.android.server.audio.AudioService$MyHdmiCecVolumeControlFeatureListener r0;
        com.android.server.audio.AudioService r1;
        com.android.server.audio.AudioService$1 r2;

        r0 := @this: com.android.server.audio.AudioService$MyHdmiCecVolumeControlFeatureListener;

        r1 := @parameter0: com.android.server.audio.AudioService;

        r2 := @parameter1: com.android.server.audio.AudioService$1;

        specialinvoke r0.<com.android.server.audio.AudioService$MyHdmiCecVolumeControlFeatureListener: void <init>(com.android.server.audio.AudioService)>(r1);

        return;
    }

    public void onHdmiCecVolumeControlFeature(boolean)
    {
        com.android.server.audio.AudioService$MyHdmiCecVolumeControlFeatureListener r0;
        boolean z0;
        java.lang.Object r1;
        com.android.server.audio.AudioService $r3, $r4, $r6;
        android.hardware.hdmi.HdmiControlManager $r5;
        java.lang.Throwable $r7;

        r0 := @this: com.android.server.audio.AudioService$MyHdmiCecVolumeControlFeatureListener;

        z0 := @parameter0: boolean;

        $r3 = r0.<com.android.server.audio.AudioService$MyHdmiCecVolumeControlFeatureListener: com.android.server.audio.AudioService this$0>;

        r1 = staticinvoke <com.android.server.audio.AudioService: java.lang.Object access$8100(com.android.server.audio.AudioService)>($r3);

        entermonitor r1;

     label1:
        $r4 = r0.<com.android.server.audio.AudioService$MyHdmiCecVolumeControlFeatureListener: com.android.server.audio.AudioService this$0>;

        $r5 = staticinvoke <com.android.server.audio.AudioService: android.hardware.hdmi.HdmiControlManager access$8200(com.android.server.audio.AudioService)>($r4);

        if $r5 != null goto label3;

        exitmonitor r1;

     label2:
        return;

     label3:
        $r6 = r0.<com.android.server.audio.AudioService$MyHdmiCecVolumeControlFeatureListener: com.android.server.audio.AudioService this$0>;

        staticinvoke <com.android.server.audio.AudioService: boolean access$8402(com.android.server.audio.AudioService,boolean)>($r6, z0);

        exitmonitor r1;

     label4:
        return;

     label5:
        $r7 := @caughtexception;

     label6:
        exitmonitor r1;

     label7:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }
}
