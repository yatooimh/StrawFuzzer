class com.android.server.audio.AudioService$VolumeGroupState extends java.lang.Object
{
    private android.media.AudioAttributes mAudioAttributes;
    private final android.media.audiopolicy.AudioVolumeGroup mAudioVolumeGroup;
    private final android.util.SparseIntArray mIndexMap;
    private int mIndexMax;
    private int mIndexMin;
    private int mLegacyStreamType;
    private int mPublicStreamType;
    final com.android.server.audio.AudioService this$0;

    private void <init>(com.android.server.audio.AudioService, android.media.audiopolicy.AudioVolumeGroup)
    {
        com.android.server.audio.AudioService$VolumeGroupState r0;
        android.media.audiopolicy.AudioVolumeGroup r1, $r6, $r10;
        java.util.Iterator r2;
        int i0, i1, $i2, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12;
        android.util.SparseIntArray $r3;
        android.media.AudioAttributes $r4, $r15, $r16, $r20, r22;
        java.util.List $r5, $r7;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r8;
        java.lang.String $r11, $r14;
        int[] $r17, $r18, r23;
        java.lang.Object $r19;
        com.android.server.audio.AudioService r21;

        r0 := @this: com.android.server.audio.AudioService$VolumeGroupState;

        r21 := @parameter0: com.android.server.audio.AudioService;

        r1 := @parameter1: android.media.audiopolicy.AudioVolumeGroup;

        r0.<com.android.server.audio.AudioService$VolumeGroupState: com.android.server.audio.AudioService this$0> = r21;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new android.util.SparseIntArray;

        specialinvoke $r3.<android.util.SparseIntArray: void <init>(int)>(8);

        r0.<com.android.server.audio.AudioService$VolumeGroupState: android.util.SparseIntArray mIndexMap> = $r3;

        r0.<com.android.server.audio.AudioService$VolumeGroupState: int mLegacyStreamType> = -1;

        r0.<com.android.server.audio.AudioService$VolumeGroupState: int mPublicStreamType> = 3;

        $r4 = <android.media.audiopolicy.AudioProductStrategy: android.media.AudioAttributes sDefaultAttributes>;

        r0.<com.android.server.audio.AudioService$VolumeGroupState: android.media.AudioAttributes mAudioAttributes> = $r4;

        r0.<com.android.server.audio.AudioService$VolumeGroupState: android.media.audiopolicy.AudioVolumeGroup mAudioVolumeGroup> = r1;

        $r5 = virtualinvoke r1.<android.media.audiopolicy.AudioVolumeGroup: java.util.List getAudioAttributes()>();

        r2 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r19 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r22 = (android.media.AudioAttributes) $r19;

        $r20 = <android.media.audiopolicy.AudioProductStrategy: android.media.AudioAttributes sDefaultAttributes>;

        $z2 = virtualinvoke r22.<android.media.AudioAttributes: boolean equals(java.lang.Object)>($r20);

        if $z2 != 0 goto label2;

        r0.<com.android.server.audio.AudioService$VolumeGroupState: android.media.AudioAttributes mAudioAttributes> = r22;

        goto label3;

     label2:
        goto label1;

     label3:
        $r6 = r0.<com.android.server.audio.AudioService$VolumeGroupState: android.media.audiopolicy.AudioVolumeGroup mAudioVolumeGroup>;

        r23 = virtualinvoke $r6.<android.media.audiopolicy.AudioVolumeGroup: int[] getLegacyStreamTypes()>();

        $i2 = lengthof r23;

        if $i2 == 0 goto label7;

        i12 = 0;

        $i6 = r23[0];

        r0.<com.android.server.audio.AudioService$VolumeGroupState: int mLegacyStreamType> = $i6;

        i0 = lengthof r23;

     label4:
        if i12 >= i0 goto label6;

        i1 = r23[i12];

        if i1 == -1 goto label5;

        $i11 = staticinvoke <android.media.AudioSystem: int getNumStreamTypes()>();

        if i1 >= $i11 goto label5;

        r0.<com.android.server.audio.AudioService$VolumeGroupState: int mPublicStreamType> = i1;

        goto label6;

     label5:
        i12 = i12 + 1;

        goto label4;

     label6:
        $r17 = <com.android.server.audio.AudioService: int[] MIN_STREAM_VOLUME>;

        $i7 = r0.<com.android.server.audio.AudioService$VolumeGroupState: int mPublicStreamType>;

        $i8 = $r17[$i7];

        r0.<com.android.server.audio.AudioService$VolumeGroupState: int mIndexMin> = $i8;

        $r18 = <com.android.server.audio.AudioService: int[] MAX_STREAM_VOLUME>;

        $i9 = r0.<com.android.server.audio.AudioService$VolumeGroupState: int mPublicStreamType>;

        $i10 = $r18[$i9];

        r0.<com.android.server.audio.AudioService$VolumeGroupState: int mIndexMax> = $i10;

        goto label8;

     label7:
        $r7 = virtualinvoke r1.<android.media.audiopolicy.AudioVolumeGroup: java.util.List getAudioAttributes()>();

        $z1 = interfaceinvoke $r7.<java.util.List: boolean isEmpty()>();

        if $z1 != 0 goto label9;

        $r15 = r0.<com.android.server.audio.AudioService$VolumeGroupState: android.media.AudioAttributes mAudioAttributes>;

        $i4 = staticinvoke <android.media.AudioSystem: int getMinVolumeIndexForAttributes(android.media.AudioAttributes)>($r15);

        r0.<com.android.server.audio.AudioService$VolumeGroupState: int mIndexMin> = $i4;

        $r16 = r0.<com.android.server.audio.AudioService$VolumeGroupState: android.media.AudioAttributes mAudioAttributes>;

        $i5 = staticinvoke <android.media.AudioSystem: int getMaxVolumeIndexForAttributes(android.media.AudioAttributes)>($r16);

        r0.<com.android.server.audio.AudioService$VolumeGroupState: int mIndexMax> = $i5;

     label8:
        virtualinvoke r0.<com.android.server.audio.AudioService$VolumeGroupState: void readSettings()>();

        return;

     label9:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("volume group: ");

        $r10 = r0.<com.android.server.audio.AudioService$VolumeGroupState: android.media.audiopolicy.AudioVolumeGroup mAudioVolumeGroup>;

        $r11 = virtualinvoke $r10.<android.media.audiopolicy.AudioVolumeGroup: java.lang.String name()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has neither valid attributes nor valid stream types assigned");

        $r14 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("AS.AudioService", $r14);

        return;
    }

    void <init>(com.android.server.audio.AudioService, android.media.audiopolicy.AudioVolumeGroup, com.android.server.audio.AudioService$1)
    {
        com.android.server.audio.AudioService$VolumeGroupState r0;
        com.android.server.audio.AudioService r1;
        android.media.audiopolicy.AudioVolumeGroup r2;
        com.android.server.audio.AudioService$1 r3;

        r0 := @this: com.android.server.audio.AudioService$VolumeGroupState;

        r1 := @parameter0: com.android.server.audio.AudioService;

        r2 := @parameter1: android.media.audiopolicy.AudioVolumeGroup;

        r3 := @parameter2: com.android.server.audio.AudioService$1;

        specialinvoke r0.<com.android.server.audio.AudioService$VolumeGroupState: void <init>(com.android.server.audio.AudioService,android.media.audiopolicy.AudioVolumeGroup)>(r1, r2);

        return;
    }

    static void access$2400(com.android.server.audio.AudioService$VolumeGroupState, java.io.PrintWriter)
    {
        com.android.server.audio.AudioService$VolumeGroupState r0;
        java.io.PrintWriter r1;

        r0 := @parameter0: com.android.server.audio.AudioService$VolumeGroupState;

        r1 := @parameter1: java.io.PrintWriter;

        specialinvoke r0.<com.android.server.audio.AudioService$VolumeGroupState: void dump(java.io.PrintWriter)>(r1);

        return;
    }

    static void access$4200(com.android.server.audio.AudioService$VolumeGroupState, int)
    {
        com.android.server.audio.AudioService$VolumeGroupState r0;
        int i0;

        r0 := @parameter0: com.android.server.audio.AudioService$VolumeGroupState;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.audio.AudioService$VolumeGroupState: void persistVolumeGroup(int)>(i0);

        return;
    }

    private void dump(java.io.PrintWriter)
    {
        com.android.server.audio.AudioService$VolumeGroupState r0;
        java.io.PrintWriter r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, i7, i8, i9, i10;
        java.lang.StringBuilder $r2;
        android.media.audiopolicy.AudioVolumeGroup $r4;
        java.lang.String $r5, $r8, $r13, $r15, r18;
        android.util.SparseIntArray $r9, $r14, $r16;
        java.util.Set $r10;
        boolean $z0, $z1;
        java.lang.Object $r11;
        java.lang.Integer $r12;
        java.util.Iterator r19;

        r0 := @this: com.android.server.audio.AudioService$VolumeGroupState;

        r1 := @parameter0: java.io.PrintWriter;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("- VOLUME GROUP ");

        $r4 = r0.<com.android.server.audio.AudioService$VolumeGroupState: android.media.audiopolicy.AudioVolumeGroup mAudioVolumeGroup>;

        $r5 = virtualinvoke $r4.<android.media.audiopolicy.AudioVolumeGroup: java.lang.String name()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r8 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r8);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("   Min: ");

        $i2 = r0.<com.android.server.audio.AudioService$VolumeGroupState: int mIndexMin>;

        virtualinvoke r1.<java.io.PrintWriter: void println(int)>($i2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("   Max: ");

        $i3 = r0.<com.android.server.audio.AudioService$VolumeGroupState: int mIndexMax>;

        virtualinvoke r1.<java.io.PrintWriter: void println(int)>($i3);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("   Current: ");

        i7 = 0;

     label01:
        $r9 = r0.<com.android.server.audio.AudioService$VolumeGroupState: android.util.SparseIntArray mIndexMap>;

        $i4 = virtualinvoke $r9.<android.util.SparseIntArray: int size()>();

        if i7 >= $i4 goto label06;

        if i7 <= 0 goto label02;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(", ");

     label02:
        $r14 = r0.<com.android.server.audio.AudioService$VolumeGroupState: android.util.SparseIntArray mIndexMap>;

        i8 = virtualinvoke $r14.<android.util.SparseIntArray: int keyAt(int)>(i7);

        $r15 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i8);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r15);

        if i8 != 1073741824 goto label03;

        r18 = "default";

        goto label04;

     label03:
        r18 = staticinvoke <android.media.AudioSystem: java.lang.String getOutputDeviceName(int)>(i8);

     label04:
        $z1 = virtualinvoke r18.<java.lang.String: boolean isEmpty()>();

        if $z1 != 0 goto label05;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" (");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r18);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(")");

     label05:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        $r16 = r0.<com.android.server.audio.AudioService$VolumeGroupState: android.util.SparseIntArray mIndexMap>;

        $i6 = virtualinvoke $r16.<android.util.SparseIntArray: int valueAt(int)>(i7);

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i6);

        i7 = i7 + 1;

        goto label01;

     label06:
        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("   Devices: ");

        i9 = 0;

        i0 = specialinvoke r0.<com.android.server.audio.AudioService$VolumeGroupState: int getDeviceForVolume()>();

        $r10 = <android.media.AudioSystem: java.util.Set DEVICE_OUT_ALL_SET>;

        r19 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();

     label07:
        $z0 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label10;

        $r11 = interfaceinvoke r19.<java.util.Iterator: java.lang.Object next()>();

        $r12 = (java.lang.Integer) $r11;

        i1 = virtualinvoke $r12.<java.lang.Integer: int intValue()>();

        i10 = i9;

        $i5 = i0 & i1;

        if $i5 != i1 goto label09;

        if i9 <= 0 goto label08;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(", ");

     label08:
        $r13 = staticinvoke <android.media.AudioSystem: java.lang.String getOutputDeviceName(int)>(i1);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r13);

        i10 = i9 + 1;

     label09:
        i9 = i10;

        goto label07;

     label10:
        return;
    }

    private int getDeviceForVolume()
    {
        com.android.server.audio.AudioService$VolumeGroupState r0;
        int $i0, $i1;
        com.android.server.audio.AudioService $r1;

        r0 := @this: com.android.server.audio.AudioService$VolumeGroupState;

        $r1 = r0.<com.android.server.audio.AudioService$VolumeGroupState: com.android.server.audio.AudioService this$0>;

        $i0 = r0.<com.android.server.audio.AudioService$VolumeGroupState: int mPublicStreamType>;

        $i1 = virtualinvoke $r1.<com.android.server.audio.AudioService: int getDeviceForStream(int)>($i0);

        return $i1;
    }

    private int getValidIndex(int)
    {
        com.android.server.audio.AudioService$VolumeGroupState r0;
        int i0, i1, $i2, $i3;
        com.android.server.audio.AudioService $r1;
        boolean $z0;

        r0 := @this: com.android.server.audio.AudioService$VolumeGroupState;

        i0 := @parameter0: int;

        i1 = r0.<com.android.server.audio.AudioService$VolumeGroupState: int mIndexMin>;

        if i0 >= i1 goto label1;

        return i1;

     label1:
        $r1 = r0.<com.android.server.audio.AudioService$VolumeGroupState: com.android.server.audio.AudioService this$0>;

        $z0 = staticinvoke <com.android.server.audio.AudioService: boolean access$2500(com.android.server.audio.AudioService)>($r1);

        if $z0 != 0 goto label3;

        $i3 = r0.<com.android.server.audio.AudioService$VolumeGroupState: int mIndexMax>;

        if i0 <= $i3 goto label2;

        goto label3;

     label2:
        return i0;

     label3:
        $i2 = r0.<com.android.server.audio.AudioService$VolumeGroupState: int mIndexMax>;

        return $i2;
    }

    private void persistVolumeGroup(int)
    {
        com.android.server.audio.AudioService$VolumeGroupState r0;
        int i0, $i1;
        com.android.server.audio.AudioService $r2, $r3;
        boolean $z0, $z1;
        android.content.ContentResolver $r4;
        java.lang.String $r5, $r9, $r11;
        java.lang.StringBuilder $r6;
        android.media.audiopolicy.AudioVolumeGroup $r8;

        r0 := @this: com.android.server.audio.AudioService$VolumeGroupState;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.audio.AudioService$VolumeGroupState: com.android.server.audio.AudioService this$0>;

        $z0 = staticinvoke <com.android.server.audio.AudioService: boolean access$2500(com.android.server.audio.AudioService)>($r2);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r3 = r0.<com.android.server.audio.AudioService$VolumeGroupState: com.android.server.audio.AudioService this$0>;

        $r4 = staticinvoke <com.android.server.audio.AudioService: android.content.ContentResolver access$2700(com.android.server.audio.AudioService)>($r3);

        $r5 = virtualinvoke r0.<com.android.server.audio.AudioService$VolumeGroupState: java.lang.String getSettingNameForDevice(int)>(i0);

        $i1 = virtualinvoke r0.<com.android.server.audio.AudioService$VolumeGroupState: int getIndex(int)>(i0);

        $z1 = staticinvoke <android.provider.Settings$System: boolean putIntForUser(android.content.ContentResolver,java.lang.String,int,int)>($r4, $r5, $i1, -2);

        if $z1 != 0 goto label2;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("persistVolumeGroup failed for group ");

        $r8 = r0.<com.android.server.audio.AudioService$VolumeGroupState: android.media.audiopolicy.AudioVolumeGroup mAudioVolumeGroup>;

        $r9 = virtualinvoke $r8.<android.media.audiopolicy.AudioVolumeGroup: java.lang.String name()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("AS.AudioService", $r11);

     label2:
        return;
    }

    private void setVolumeIndex(int, int, int)
    {
        com.android.server.audio.AudioService$VolumeGroupState r0;
        int i0, i1, i2;
        android.util.SparseIntArray $r1;
        com.android.server.audio.AudioService $r2;
        com.android.server.audio.AudioService$AudioHandler $r3;

        r0 := @this: com.android.server.audio.AudioService$VolumeGroupState;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        specialinvoke r0.<com.android.server.audio.AudioService$VolumeGroupState: void setVolumeIndexInt(int,int,int)>(i0, i1, i2);

        $r1 = r0.<com.android.server.audio.AudioService$VolumeGroupState: android.util.SparseIntArray mIndexMap>;

        virtualinvoke $r1.<android.util.SparseIntArray: void put(int,int)>(i1, i0);

        $r2 = r0.<com.android.server.audio.AudioService$VolumeGroupState: com.android.server.audio.AudioService this$0>;

        $r3 = staticinvoke <com.android.server.audio.AudioService: com.android.server.audio.AudioService$AudioHandler access$100(com.android.server.audio.AudioService)>($r2);

        staticinvoke <com.android.server.audio.AudioService: void access$200(android.os.Handler,int,int,int,int,java.lang.Object,int)>($r3, 2, 2, i1, 0, r0, 500);

        return;
    }

    private void setVolumeIndexInt(int, int, int)
    {
        com.android.server.audio.AudioService$VolumeGroupState r0;
        int i0, i1, $i2, $i3, i5, i6;
        com.android.server.audio.AudioService $r1;
        com.android.server.audio.AudioService$VolumeStreamState[] $r2;
        com.android.server.audio.AudioService$VolumeStreamState $r3;
        boolean $z0;
        android.media.AudioAttributes $r4;

        r0 := @this: com.android.server.audio.AudioService$VolumeGroupState;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i5 := @parameter2: int;

        $r1 = r0.<com.android.server.audio.AudioService$VolumeGroupState: com.android.server.audio.AudioService this$0>;

        $r2 = staticinvoke <com.android.server.audio.AudioService: com.android.server.audio.AudioService$VolumeStreamState[] access$2600(com.android.server.audio.AudioService)>($r1);

        $i2 = r0.<com.android.server.audio.AudioService$VolumeGroupState: int mPublicStreamType>;

        $r3 = $r2[$i2];

        $z0 = virtualinvoke $r3.<com.android.server.audio.AudioService$VolumeStreamState: boolean isFullyMuted()>();

        if $z0 == 0 goto label1;

        i6 = 0;

        goto label2;

     label1:
        i6 = i0;

        $i3 = r0.<com.android.server.audio.AudioService$VolumeGroupState: int mPublicStreamType>;

        if $i3 != 6 goto label2;

        i6 = i0;

        if i0 != 0 goto label2;

        i6 = 1;

     label2:
        $r4 = r0.<com.android.server.audio.AudioService$VolumeGroupState: android.media.AudioAttributes mAudioAttributes>;

        staticinvoke <android.media.AudioSystem: int setVolumeIndexForAttributes(android.media.AudioAttributes,int,int)>($r4, i6, i1);

        return;
    }

    public void applyAllVolumes()
    {
        com.android.server.audio.AudioService$VolumeGroupState r0;
        int i0, $i1, $i2, $i3, i4;
        android.util.SparseIntArray $r2, $r3, $r4;
        java.lang.Throwable $r5;

        r0 := @this: com.android.server.audio.AudioService$VolumeGroupState;

        entermonitor class "Lcom/android/server/audio/AudioService$VolumeGroupState;";

        i4 = 0;

     label1:
        $r2 = r0.<com.android.server.audio.AudioService$VolumeGroupState: android.util.SparseIntArray mIndexMap>;

        $i1 = virtualinvoke $r2.<android.util.SparseIntArray: int size()>();

        if i4 >= $i1 goto label5;

        $r3 = r0.<com.android.server.audio.AudioService$VolumeGroupState: android.util.SparseIntArray mIndexMap>;

        i0 = virtualinvoke $r3.<android.util.SparseIntArray: int keyAt(int)>(i4);

     label2:
        if i0 == 1073741824 goto label4;

     label3:
        $r4 = r0.<com.android.server.audio.AudioService$VolumeGroupState: android.util.SparseIntArray mIndexMap>;

        $i3 = virtualinvoke $r4.<android.util.SparseIntArray: int valueAt(int)>(i4);

        specialinvoke r0.<com.android.server.audio.AudioService$VolumeGroupState: void setVolumeIndexInt(int,int,int)>($i3, i0, 0);

     label4:
        i4 = i4 + 1;

        goto label1;

     label5:
        $i2 = virtualinvoke r0.<com.android.server.audio.AudioService$VolumeGroupState: int getIndex(int)>(1073741824);

        specialinvoke r0.<com.android.server.audio.AudioService$VolumeGroupState: void setVolumeIndexInt(int,int,int)>($i2, 1073741824, 0);

        exitmonitor class "Lcom/android/server/audio/AudioService$VolumeGroupState;";

     label6:
        return;

     label7:
        $r5 := @caughtexception;

     label8:
        exitmonitor class "Lcom/android/server/audio/AudioService$VolumeGroupState;";

     label9:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public int getIndex(int)
    {
        com.android.server.audio.AudioService$VolumeGroupState r0;
        android.util.SparseIntArray $r2, $r3;
        java.lang.Throwable $r4;
        int i0, i1;

        r0 := @this: com.android.server.audio.AudioService$VolumeGroupState;

        i0 := @parameter0: int;

        entermonitor class "Lcom/android/server/audio/AudioService$VolumeGroupState;";

     label1:
        $r2 = r0.<com.android.server.audio.AudioService$VolumeGroupState: android.util.SparseIntArray mIndexMap>;

        i1 = virtualinvoke $r2.<android.util.SparseIntArray: int get(int,int)>(i0, -1);

     label2:
        if i1 == -1 goto label3;

        goto label4;

     label3:
        $r3 = r0.<com.android.server.audio.AudioService$VolumeGroupState: android.util.SparseIntArray mIndexMap>;

        i1 = virtualinvoke $r3.<android.util.SparseIntArray: int get(int)>(1073741824);

     label4:
        exitmonitor class "Lcom/android/server/audio/AudioService$VolumeGroupState;";

     label5:
        return i1;

     label6:
        $r4 := @caughtexception;

     label7:
        exitmonitor class "Lcom/android/server/audio/AudioService$VolumeGroupState;";

     label8:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public int[] getLegacyStreamTypes()
    {
        com.android.server.audio.AudioService$VolumeGroupState r0;
        android.media.audiopolicy.AudioVolumeGroup $r1;
        int[] $r2;

        r0 := @this: com.android.server.audio.AudioService$VolumeGroupState;

        $r1 = r0.<com.android.server.audio.AudioService$VolumeGroupState: android.media.audiopolicy.AudioVolumeGroup mAudioVolumeGroup>;

        $r2 = virtualinvoke $r1.<android.media.audiopolicy.AudioVolumeGroup: int[] getLegacyStreamTypes()>();

        return $r2;
    }

    public int getMaxIndex()
    {
        com.android.server.audio.AudioService$VolumeGroupState r0;
        int $i0;

        r0 := @this: com.android.server.audio.AudioService$VolumeGroupState;

        $i0 = r0.<com.android.server.audio.AudioService$VolumeGroupState: int mIndexMax>;

        return $i0;
    }

    public int getMinIndex()
    {
        com.android.server.audio.AudioService$VolumeGroupState r0;
        int $i0;

        r0 := @this: com.android.server.audio.AudioService$VolumeGroupState;

        $i0 = r0.<com.android.server.audio.AudioService$VolumeGroupState: int mIndexMin>;

        return $i0;
    }

    public java.lang.String getSettingNameForDevice(int)
    {
        com.android.server.audio.AudioService$VolumeGroupState r0;
        int i0;
        java.lang.String $r2, $r5, $r8, $r10, $r12;
        boolean $z0;
        java.lang.StringBuilder $r3;
        android.media.audiopolicy.AudioVolumeGroup $r4, $r11;

        r0 := @this: com.android.server.audio.AudioService$VolumeGroupState;

        i0 := @parameter0: int;

        $r2 = staticinvoke <android.media.AudioSystem: java.lang.String getOutputDeviceName(int)>(i0);

        $z0 = virtualinvoke $r2.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r11 = r0.<com.android.server.audio.AudioService$VolumeGroupState: android.media.audiopolicy.AudioVolumeGroup mAudioVolumeGroup>;

        $r12 = virtualinvoke $r11.<android.media.audiopolicy.AudioVolumeGroup: java.lang.String name()>();

        return $r12;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = r0.<com.android.server.audio.AudioService$VolumeGroupState: android.media.audiopolicy.AudioVolumeGroup mAudioVolumeGroup>;

        $r5 = virtualinvoke $r4.<android.media.audiopolicy.AudioVolumeGroup: java.lang.String name()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_");

        $r8 = staticinvoke <android.media.AudioSystem: java.lang.String getOutputDeviceName(int)>(i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    public int getVolumeIndex()
    {
        com.android.server.audio.AudioService$VolumeGroupState r0;
        int $i0, $i1;

        r0 := @this: com.android.server.audio.AudioService$VolumeGroupState;

        $i0 = specialinvoke r0.<com.android.server.audio.AudioService$VolumeGroupState: int getDeviceForVolume()>();

        $i1 = virtualinvoke r0.<com.android.server.audio.AudioService$VolumeGroupState: int getIndex(int)>($i0);

        return $i1;
    }

    public boolean hasIndexForDevice(int)
    {
        com.android.server.audio.AudioService$VolumeGroupState r0;
        int i0, $i1;
        android.util.SparseIntArray $r2;
        java.lang.Throwable $r3;
        boolean z0;

        r0 := @this: com.android.server.audio.AudioService$VolumeGroupState;

        i0 := @parameter0: int;

        entermonitor class "Lcom/android/server/audio/AudioService$VolumeGroupState;";

     label1:
        $r2 = r0.<com.android.server.audio.AudioService$VolumeGroupState: android.util.SparseIntArray mIndexMap>;

        $i1 = virtualinvoke $r2.<android.util.SparseIntArray: int get(int,int)>(i0, -1);

        if $i1 == -1 goto label3;

     label2:
        z0 = 1;

        goto label4;

     label3:
        z0 = 0;

     label4:
        exitmonitor class "Lcom/android/server/audio/AudioService$VolumeGroupState;";

     label5:
        return z0;

     label6:
        $r3 := @caughtexception;

     label7:
        exitmonitor class "Lcom/android/server/audio/AudioService$VolumeGroupState;";

     label8:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public java.lang.String name()
    {
        com.android.server.audio.AudioService$VolumeGroupState r0;
        android.media.audiopolicy.AudioVolumeGroup $r1;
        java.lang.String $r2;

        r0 := @this: com.android.server.audio.AudioService$VolumeGroupState;

        $r1 = r0.<com.android.server.audio.AudioService$VolumeGroupState: android.media.audiopolicy.AudioVolumeGroup mAudioVolumeGroup>;

        $r2 = virtualinvoke $r1.<android.media.audiopolicy.AudioVolumeGroup: java.lang.String name()>();

        return $r2;
    }

    public void readSettings()
    {
        com.android.server.audio.AudioService$VolumeGroupState r0;
        int i0, $i1, $i2, $i3, i4, i5;
        java.lang.String r1;
        android.util.SparseIntArray $r2, $r9, $r11;
        com.android.server.audio.AudioService $r3, $r7;
        boolean $z0, $z1;
        java.util.Set $r4;
        java.lang.Object $r5;
        java.lang.Integer $r6;
        android.content.ContentResolver $r8;
        int[] $r10;
        java.lang.Throwable $r12;
        java.util.Iterator r13;

        r0 := @this: com.android.server.audio.AudioService$VolumeGroupState;

        entermonitor class "Lcom/android/server/audio/AudioService$VolumeGroupState;";

     label01:
        $r2 = r0.<com.android.server.audio.AudioService$VolumeGroupState: android.util.SparseIntArray mIndexMap>;

        virtualinvoke $r2.<android.util.SparseIntArray: void clear()>();

        $r3 = r0.<com.android.server.audio.AudioService$VolumeGroupState: com.android.server.audio.AudioService this$0>;

        $z0 = staticinvoke <com.android.server.audio.AudioService: boolean access$2500(com.android.server.audio.AudioService)>($r3);

        if $z0 == 0 goto label03;

        $r11 = r0.<com.android.server.audio.AudioService$VolumeGroupState: android.util.SparseIntArray mIndexMap>;

        $i3 = r0.<com.android.server.audio.AudioService$VolumeGroupState: int mIndexMax>;

        virtualinvoke $r11.<android.util.SparseIntArray: void put(int,int)>(1073741824, $i3);

        exitmonitor class "Lcom/android/server/audio/AudioService$VolumeGroupState;";

     label02:
        return;

     label03:
        $r4 = <android.media.AudioSystem: java.util.Set DEVICE_OUT_ALL_SET>;

        r13 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label04:
        $z1 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label13;

        $r5 = interfaceinvoke r13.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (java.lang.Integer) $r5;

        i0 = virtualinvoke $r6.<java.lang.Integer: int intValue()>();

     label05:
        if i0 != 1073741824 goto label08;

     label06:
        $r10 = <android.media.AudioSystem: int[] DEFAULT_STREAM_VOLUME>;

        $i2 = r0.<com.android.server.audio.AudioService$VolumeGroupState: int mPublicStreamType>;

        i4 = $r10[$i2];

     label07:
        goto label09;

     label08:
        i4 = -1;

     label09:
        r1 = virtualinvoke r0.<com.android.server.audio.AudioService$VolumeGroupState: java.lang.String getSettingNameForDevice(int)>(i0);

        $r7 = r0.<com.android.server.audio.AudioService$VolumeGroupState: com.android.server.audio.AudioService this$0>;

        $r8 = staticinvoke <com.android.server.audio.AudioService: android.content.ContentResolver access$2700(com.android.server.audio.AudioService)>($r7);

        i5 = staticinvoke <android.provider.Settings$System: int getIntForUser(android.content.ContentResolver,java.lang.String,int,int)>($r8, r1, i4, -2);

     label10:
        if i5 != -1 goto label11;

        goto label04;

     label11:
        $r9 = r0.<com.android.server.audio.AudioService$VolumeGroupState: android.util.SparseIntArray mIndexMap>;

        $i1 = specialinvoke r0.<com.android.server.audio.AudioService$VolumeGroupState: int getValidIndex(int)>(i5);

        virtualinvoke $r9.<android.util.SparseIntArray: void put(int,int)>(i0, $i1);

     label12:
        goto label04;

     label13:
        exitmonitor class "Lcom/android/server/audio/AudioService$VolumeGroupState;";

     label14:
        return;

     label15:
        $r12 := @caughtexception;

     label16:
        exitmonitor class "Lcom/android/server/audio/AudioService$VolumeGroupState;";

     label17:
        throw $r12;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Throwable from label04 to label05 with label15;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch java.lang.Throwable from label09 to label10 with label15;
        catch java.lang.Throwable from label11 to label12 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label16 to label17 with label15;
    }

    public void setVolumeIndex(int, int)
    {
        com.android.server.audio.AudioService$VolumeGroupState r0;
        int i0, i1, $i2;
        com.android.server.audio.AudioService $r1;
        boolean $z0;

        r0 := @this: com.android.server.audio.AudioService$VolumeGroupState;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.server.audio.AudioService$VolumeGroupState: com.android.server.audio.AudioService this$0>;

        $z0 = staticinvoke <com.android.server.audio.AudioService: boolean access$2500(com.android.server.audio.AudioService)>($r1);

        if $z0 == 0 goto label1;

        return;

     label1:
        $i2 = specialinvoke r0.<com.android.server.audio.AudioService$VolumeGroupState: int getDeviceForVolume()>();

        specialinvoke r0.<com.android.server.audio.AudioService$VolumeGroupState: void setVolumeIndex(int,int,int)>(i0, $i2, i1);

        return;
    }
}
