class com.android.server.audio.AudioService$VolumeStreamState extends java.lang.Object
{
    private final android.util.SparseIntArray mIndexMap;
    private int mIndexMax;
    private int mIndexMin;
    private int mIndexMinNoPerm;
    private boolean mIsMuted;
    private boolean mIsMutedInternally;
    private int mObservedDevices;
    private final android.content.Intent mStreamDevicesChanged;
    private final int mStreamType;
    private final android.content.Intent mVolumeChanged;
    private java.lang.String mVolumeIndexSettingName;
    final com.android.server.audio.AudioService this$0;

    private void <init>(com.android.server.audio.AudioService, java.lang.String, int)
    {
        com.android.server.audio.AudioService$VolumeStreamState r0;
        java.lang.String r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i7, $i8, i9, i10;
        com.android.server.audio.AudioService$VolumeStreamState$1 $r2;
        int[] $r3, $r4;
        android.content.Intent $r5, $r7;
        com.android.server.audio.AudioService r9;

        r0 := @this: com.android.server.audio.AudioService$VolumeStreamState;

        r9 := @parameter0: com.android.server.audio.AudioService;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r0.<com.android.server.audio.AudioService$VolumeStreamState: com.android.server.audio.AudioService this$0> = r9;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new com.android.server.audio.AudioService$VolumeStreamState$1;

        specialinvoke $r2.<com.android.server.audio.AudioService$VolumeStreamState$1: void <init>(com.android.server.audio.AudioService$VolumeStreamState,int)>(r0, 8);

        r0.<com.android.server.audio.AudioService$VolumeStreamState: android.util.SparseIntArray mIndexMap> = $r2;

        r0.<com.android.server.audio.AudioService$VolumeStreamState: java.lang.String mVolumeIndexSettingName> = r1;

        r0.<com.android.server.audio.AudioService$VolumeStreamState: int mStreamType> = i0;

        $r3 = <com.android.server.audio.AudioService: int[] MIN_STREAM_VOLUME>;

        $i1 = $r3[i0];

        i9 = $i1 * 10;

        r0.<com.android.server.audio.AudioService$VolumeStreamState: int mIndexMin> = i9;

        r0.<com.android.server.audio.AudioService$VolumeStreamState: int mIndexMinNoPerm> = i9;

        $r4 = <com.android.server.audio.AudioService: int[] MAX_STREAM_VOLUME>;

        $i2 = $r4[i0];

        i10 = $i2 * 10;

        r0.<com.android.server.audio.AudioService$VolumeStreamState: int mIndexMax> = i10;

        $i3 = r0.<com.android.server.audio.AudioService$VolumeStreamState: int mIndexMin>;

        $i5 = $i3 / 10;

        $i4 = i10 / 10;

        staticinvoke <android.media.AudioSystem: int initStreamVolume(int,int,int)>(i0, $i5, $i4);

        virtualinvoke r0.<com.android.server.audio.AudioService$VolumeStreamState: void readSettings()>();

        $r5 = new android.content.Intent;

        specialinvoke $r5.<android.content.Intent: void <init>(java.lang.String)>("android.media.VOLUME_CHANGED_ACTION");

        r0.<com.android.server.audio.AudioService$VolumeStreamState: android.content.Intent mVolumeChanged> = $r5;

        $i7 = r0.<com.android.server.audio.AudioService$VolumeStreamState: int mStreamType>;

        virtualinvoke $r5.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.media.EXTRA_VOLUME_STREAM_TYPE", $i7);

        $r7 = new android.content.Intent;

        specialinvoke $r7.<android.content.Intent: void <init>(java.lang.String)>("android.media.STREAM_DEVICES_CHANGED_ACTION");

        r0.<com.android.server.audio.AudioService$VolumeStreamState: android.content.Intent mStreamDevicesChanged> = $r7;

        $i8 = r0.<com.android.server.audio.AudioService$VolumeStreamState: int mStreamType>;

        virtualinvoke $r7.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.media.EXTRA_VOLUME_STREAM_TYPE", $i8);

        return;
    }

    void <init>(com.android.server.audio.AudioService, java.lang.String, int, com.android.server.audio.AudioService$1)
    {
        com.android.server.audio.AudioService$VolumeStreamState r0;
        com.android.server.audio.AudioService r1;
        java.lang.String r2;
        int i0;
        com.android.server.audio.AudioService$1 r3;

        r0 := @this: com.android.server.audio.AudioService$VolumeStreamState;

        r1 := @parameter0: com.android.server.audio.AudioService;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 := @parameter3: com.android.server.audio.AudioService$1;

        specialinvoke r0.<com.android.server.audio.AudioService$VolumeStreamState: void <init>(com.android.server.audio.AudioService,java.lang.String,int)>(r1, r2, i0);

        return;
    }

    static boolean access$1000(com.android.server.audio.AudioService$VolumeStreamState)
    {
        com.android.server.audio.AudioService$VolumeStreamState r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.audio.AudioService$VolumeStreamState;

        $z0 = r0.<com.android.server.audio.AudioService$VolumeStreamState: boolean mIsMuted>;

        return $z0;
    }

    static boolean access$1002(com.android.server.audio.AudioService$VolumeStreamState, boolean)
    {
        com.android.server.audio.AudioService$VolumeStreamState r0;
        boolean z0;

        r0 := @parameter0: com.android.server.audio.AudioService$VolumeStreamState;

        z0 := @parameter1: boolean;

        r0.<com.android.server.audio.AudioService$VolumeStreamState: boolean mIsMuted> = z0;

        return z0;
    }

    static int access$1100(com.android.server.audio.AudioService$VolumeStreamState)
    {
        com.android.server.audio.AudioService$VolumeStreamState r0;
        int $i0;

        r0 := @parameter0: com.android.server.audio.AudioService$VolumeStreamState;

        $i0 = r0.<com.android.server.audio.AudioService$VolumeStreamState: int mStreamType>;

        return $i0;
    }

    static void access$1300(com.android.server.audio.AudioService$VolumeStreamState, java.io.PrintWriter)
    {
        com.android.server.audio.AudioService$VolumeStreamState r0;
        java.io.PrintWriter r1;

        r0 := @parameter0: com.android.server.audio.AudioService$VolumeStreamState;

        r1 := @parameter1: java.io.PrintWriter;

        specialinvoke r0.<com.android.server.audio.AudioService$VolumeStreamState: void dump(java.io.PrintWriter)>(r1);

        return;
    }

    static java.lang.String access$1402(com.android.server.audio.AudioService$VolumeStreamState, java.lang.String)
    {
        com.android.server.audio.AudioService$VolumeStreamState r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.server.audio.AudioService$VolumeStreamState;

        r1 := @parameter1: java.lang.String;

        r0.<com.android.server.audio.AudioService$VolumeStreamState: java.lang.String mVolumeIndexSettingName> = r1;

        return r1;
    }

    static android.util.SparseIntArray access$1900(com.android.server.audio.AudioService$VolumeStreamState)
    {
        com.android.server.audio.AudioService$VolumeStreamState r0;
        android.util.SparseIntArray $r1;

        r0 := @parameter0: com.android.server.audio.AudioService$VolumeStreamState;

        $r1 = r0.<com.android.server.audio.AudioService$VolumeStreamState: android.util.SparseIntArray mIndexMap>;

        return $r1;
    }

    static boolean access$4100(com.android.server.audio.AudioService$VolumeStreamState)
    {
        com.android.server.audio.AudioService$VolumeStreamState r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.audio.AudioService$VolumeStreamState;

        $z0 = specialinvoke r0.<com.android.server.audio.AudioService$VolumeStreamState: boolean hasValidSettingsName()>();

        return $z0;
    }

    static int access$800(com.android.server.audio.AudioService$VolumeStreamState)
    {
        com.android.server.audio.AudioService$VolumeStreamState r0;
        int $i0;

        r0 := @parameter0: com.android.server.audio.AudioService$VolumeStreamState;

        $i0 = r0.<com.android.server.audio.AudioService$VolumeStreamState: int mIndexMin>;

        return $i0;
    }

    static int access$900(com.android.server.audio.AudioService$VolumeStreamState)
    {
        com.android.server.audio.AudioService$VolumeStreamState r0;
        int $i0;

        r0 := @parameter0: com.android.server.audio.AudioService$VolumeStreamState;

        $i0 = r0.<com.android.server.audio.AudioService$VolumeStreamState: int mIndexMax>;

        return $i0;
    }

    private void dump(java.io.PrintWriter)
    {
        com.android.server.audio.AudioService$VolumeStreamState r0;
        java.io.PrintWriter r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, i20, $i21, i22, i23, i24, i25;
        boolean $z0, $z1, $z2;
        com.android.server.audio.AudioService $r2, $r3;
        java.lang.String $r4, $r6, r9;
        android.util.SparseIntArray $r5, $r7, $r8;

        r0 := @this: com.android.server.audio.AudioService$VolumeStreamState;

        r1 := @parameter0: java.io.PrintWriter;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("   Muted: ");

        $z0 = r0.<com.android.server.audio.AudioService$VolumeStreamState: boolean mIsMuted>;

        virtualinvoke r1.<java.io.PrintWriter: void println(boolean)>($z0);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("   Muted Internally: ");

        $z1 = r0.<com.android.server.audio.AudioService$VolumeStreamState: boolean mIsMutedInternally>;

        virtualinvoke r1.<java.io.PrintWriter: void println(boolean)>($z1);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("   Min: ");

        $i2 = r0.<com.android.server.audio.AudioService$VolumeStreamState: int mIndexMin>;

        $i3 = $i2 + 5;

        $i4 = $i3 / 10;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i4);

        $i6 = r0.<com.android.server.audio.AudioService$VolumeStreamState: int mIndexMin>;

        $i5 = r0.<com.android.server.audio.AudioService$VolumeStreamState: int mIndexMinNoPerm>;

        if $i6 == $i5 goto label01;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" w/o perm:");

        $i17 = r0.<com.android.server.audio.AudioService$VolumeStreamState: int mIndexMinNoPerm>;

        $i18 = $i17 + 5;

        $i19 = $i18 / 10;

        virtualinvoke r1.<java.io.PrintWriter: void println(int)>($i19);

        goto label02;

     label01:
        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label02:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("   Max: ");

        $i7 = r0.<com.android.server.audio.AudioService$VolumeStreamState: int mIndexMax>;

        $i8 = $i7 + 5;

        $i9 = $i8 / 10;

        virtualinvoke r1.<java.io.PrintWriter: void println(int)>($i9);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("   streamVolume:");

        $r2 = r0.<com.android.server.audio.AudioService$VolumeStreamState: com.android.server.audio.AudioService this$0>;

        $i10 = r0.<com.android.server.audio.AudioService$VolumeStreamState: int mStreamType>;

        $i11 = virtualinvoke $r2.<com.android.server.audio.AudioService: int getStreamVolume(int)>($i10);

        virtualinvoke r1.<java.io.PrintWriter: void println(int)>($i11);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("   Current: ");

        i20 = 0;

     label03:
        $r8 = r0.<com.android.server.audio.AudioService$VolumeStreamState: android.util.SparseIntArray mIndexMap>;

        $i21 = virtualinvoke $r8.<android.util.SparseIntArray: int size()>();

        if i20 >= $i21 goto label08;

        if i20 <= 0 goto label04;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(", ");

     label04:
        $r5 = r0.<com.android.server.audio.AudioService$VolumeStreamState: android.util.SparseIntArray mIndexMap>;

        i22 = virtualinvoke $r5.<android.util.SparseIntArray: int keyAt(int)>(i20);

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i22);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r6);

        if i22 != 1073741824 goto label05;

        r9 = "default";

        goto label06;

     label05:
        r9 = staticinvoke <android.media.AudioSystem: java.lang.String getOutputDeviceName(int)>(i22);

     label06:
        $z2 = virtualinvoke r9.<java.lang.String: boolean isEmpty()>();

        if $z2 != 0 goto label07;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" (");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r9);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(")");

     label07:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        $r7 = r0.<com.android.server.audio.AudioService$VolumeStreamState: android.util.SparseIntArray mIndexMap>;

        $i14 = virtualinvoke $r7.<android.util.SparseIntArray: int valueAt(int)>(i20);

        $i15 = $i14 + 5;

        $i16 = $i15 / 10;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i16);

        i20 = i20 + 1;

        goto label03;

     label08:
        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("   Devices: ");

        $r3 = r0.<com.android.server.audio.AudioService$VolumeStreamState: com.android.server.audio.AudioService this$0>;

        $i12 = r0.<com.android.server.audio.AudioService$VolumeStreamState: int mStreamType>;

        i0 = staticinvoke <com.android.server.audio.AudioService: int access$3800(com.android.server.audio.AudioService,int)>($r3, $i12);

        i23 = 0;

        i24 = 0;

     label09:
        i1 = 1 << i23;

        if i1 == 1073741824 goto label12;

        i25 = i24;

        $i13 = i0 & i1;

        if $i13 == 0 goto label11;

        if i24 <= 0 goto label10;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(", ");

     label10:
        $r4 = staticinvoke <android.media.AudioSystem: java.lang.String getOutputDeviceName(int)>(i1);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r4);

        i25 = i24 + 1;

     label11:
        i23 = i23 + 1;

        i24 = i25;

        goto label09;

     label12:
        return;
    }

    private int getAbsoluteVolumeIndex(int)
    {
        com.android.server.audio.AudioService$VolumeStreamState r0;
        int $i0, $i1, $i2, $i3, $i4, i5, i6;
        com.android.server.audio.AudioService $r1;
        float $f0, $f1, $f2;
        float[] $r2;

        r0 := @this: com.android.server.audio.AudioService$VolumeStreamState;

        i5 := @parameter0: int;

        if i5 != 0 goto label1;

        i6 = 0;

        goto label3;

     label1:
        if i5 <= 0 goto label2;

        if i5 > 3 goto label2;

        $i2 = r0.<com.android.server.audio.AudioService$VolumeStreamState: int mIndexMax>;

        $f0 = (float) $i2;

        $r1 = r0.<com.android.server.audio.AudioService$VolumeStreamState: com.android.server.audio.AudioService this$0>;

        $r2 = staticinvoke <com.android.server.audio.AudioService: float[] access$3300(com.android.server.audio.AudioService)>($r1);

        $i3 = i5 - 1;

        $f1 = $r2[$i3];

        $f2 = $f0 * $f1;

        $i4 = (int) $f2;

        i6 = $i4 / 10;

        goto label3;

     label2:
        $i0 = r0.<com.android.server.audio.AudioService$VolumeStreamState: int mIndexMax>;

        $i1 = $i0 + 5;

        i6 = $i1 / 10;

     label3:
        return i6;
    }

    private int getValidIndex(int, boolean)
    {
        com.android.server.audio.AudioService$VolumeStreamState r0;
        int i0, $i1, $i2, i3;
        boolean z0, $z1;
        com.android.server.audio.AudioService $r1;

        r0 := @this: com.android.server.audio.AudioService$VolumeStreamState;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        i3 = r0.<com.android.server.audio.AudioService$VolumeStreamState: int mIndexMin>;

        goto label2;

     label1:
        i3 = r0.<com.android.server.audio.AudioService$VolumeStreamState: int mIndexMinNoPerm>;

     label2:
        if i0 >= i3 goto label3;

        return i3;

     label3:
        $r1 = r0.<com.android.server.audio.AudioService$VolumeStreamState: com.android.server.audio.AudioService this$0>;

        $z1 = staticinvoke <com.android.server.audio.AudioService: boolean access$2500(com.android.server.audio.AudioService)>($r1);

        if $z1 != 0 goto label5;

        $i2 = r0.<com.android.server.audio.AudioService$VolumeStreamState: int mIndexMax>;

        if i0 <= $i2 goto label4;

        goto label5;

     label4:
        return i0;

     label5:
        $i1 = r0.<com.android.server.audio.AudioService$VolumeStreamState: int mIndexMax>;

        return $i1;
    }

    private boolean hasValidSettingsName()
    {
        com.android.server.audio.AudioService$VolumeStreamState r0;
        java.lang.String r1;
        boolean $z0, z1;

        r0 := @this: com.android.server.audio.AudioService$VolumeStreamState;

        r1 = r0.<com.android.server.audio.AudioService$VolumeStreamState: java.lang.String mVolumeIndexSettingName>;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    private void setStreamVolumeIndex(int, int)
    {
        com.android.server.audio.AudioService$VolumeStreamState r0;
        int i0, i1, $i2, i4, $i5;
        boolean $z0;

        r0 := @this: com.android.server.audio.AudioService$VolumeStreamState;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i4 = i0;

        $i2 = r0.<com.android.server.audio.AudioService$VolumeStreamState: int mStreamType>;

        if $i2 != 6 goto label1;

        i4 = i0;

        if i0 != 0 goto label1;

        i4 = i0;

        $z0 = virtualinvoke r0.<com.android.server.audio.AudioService$VolumeStreamState: boolean isFullyMuted()>();

        if $z0 != 0 goto label1;

        i4 = 1;

     label1:
        $i5 = r0.<com.android.server.audio.AudioService$VolumeStreamState: int mStreamType>;

        staticinvoke <android.media.AudioSystem: int setStreamVolumeIndexAS(int,int,int)>($i5, i4, i1);

        return;
    }

    public boolean adjustIndex(int, int, java.lang.String, boolean)
    {
        com.android.server.audio.AudioService$VolumeStreamState r0;
        int i0, i1, $i2, $i3;
        java.lang.String r1;
        boolean z0, $z1;

        r0 := @this: com.android.server.audio.AudioService$VolumeStreamState;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        $i2 = virtualinvoke r0.<com.android.server.audio.AudioService$VolumeStreamState: int getIndex(int)>(i1);

        $i3 = $i2 + i0;

        $z1 = virtualinvoke r0.<com.android.server.audio.AudioService$VolumeStreamState: boolean setIndex(int,int,java.lang.String,boolean)>($i3, i1, r1, z0);

        return $z1;
    }

    public void applyAllVolumes()
    {
        com.android.server.audio.AudioService$VolumeStreamState r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, i14, i15;
        android.util.SparseIntArray $r2, $r3, $r7;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.Set $r4;
        java.lang.Integer $r5;
        com.android.server.audio.AudioService $r6, $r8;
        java.lang.Throwable $r9;

        r0 := @this: com.android.server.audio.AudioService$VolumeStreamState;

        entermonitor class "Lcom/android/server/audio/AudioService$VolumeStreamState;";

        i13 = 0;

     label01:
        $r2 = r0.<com.android.server.audio.AudioService$VolumeStreamState: android.util.SparseIntArray mIndexMap>;

        $i1 = virtualinvoke $r2.<android.util.SparseIntArray: int size()>();

        if i13 >= $i1 goto label15;

        $r3 = r0.<com.android.server.audio.AudioService$VolumeStreamState: android.util.SparseIntArray mIndexMap>;

        i0 = virtualinvoke $r3.<android.util.SparseIntArray: int keyAt(int)>(i13);

     label02:
        if i0 == 1073741824 goto label14;

     label03:
        $z1 = virtualinvoke r0.<com.android.server.audio.AudioService$VolumeStreamState: boolean isFullyMuted()>();

        if $z1 == 0 goto label05;

     label04:
        i14 = 0;

        goto label13;

     label05:
        $r4 = <android.media.AudioSystem: java.util.Set DEVICE_OUT_ALL_A2DP_SET>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $z2 = interfaceinvoke $r4.<java.util.Set: boolean contains(java.lang.Object)>($r5);

        if $z2 == 0 goto label07;

        $r8 = r0.<com.android.server.audio.AudioService$VolumeStreamState: com.android.server.audio.AudioService this$0>;

        $z4 = staticinvoke <com.android.server.audio.AudioService: boolean access$3400(com.android.server.audio.AudioService)>($r8);

        if $z4 == 0 goto label07;

        $i10 = virtualinvoke r0.<com.android.server.audio.AudioService$VolumeStreamState: int getIndex(int)>(i0);

        $i11 = $i10 + 5;

        $i12 = $i11 / 10;

        i14 = specialinvoke r0.<com.android.server.audio.AudioService$VolumeStreamState: int getAbsoluteVolumeIndex(int)>($i12);

     label06:
        goto label13;

     label07:
        $r6 = r0.<com.android.server.audio.AudioService$VolumeStreamState: com.android.server.audio.AudioService this$0>;

        $z3 = staticinvoke <com.android.server.audio.AudioService: boolean access$3500(com.android.server.audio.AudioService,int)>($r6, i0);

        if $z3 == 0 goto label09;

        $i8 = r0.<com.android.server.audio.AudioService$VolumeStreamState: int mIndexMax>;

        $i9 = $i8 + 5;

        i14 = $i9 / 10;

     label08:
        goto label13;

     label09:
        if i0 != 134217728 goto label12;

     label10:
        $i6 = r0.<com.android.server.audio.AudioService$VolumeStreamState: int mIndexMax>;

        $i7 = $i6 + 5;

        i14 = $i7 / 10;

     label11:
        goto label13;

     label12:
        $r7 = r0.<com.android.server.audio.AudioService$VolumeStreamState: android.util.SparseIntArray mIndexMap>;

        $i4 = virtualinvoke $r7.<android.util.SparseIntArray: int valueAt(int)>(i13);

        $i5 = $i4 + 5;

        i14 = $i5 / 10;

     label13:
        specialinvoke r0.<com.android.server.audio.AudioService$VolumeStreamState: void setStreamVolumeIndex(int,int)>(i14, i0);

     label14:
        i13 = i13 + 1;

        goto label01;

     label15:
        $z0 = virtualinvoke r0.<com.android.server.audio.AudioService$VolumeStreamState: boolean isFullyMuted()>();

        if $z0 == 0 goto label17;

     label16:
        i15 = 0;

        goto label18;

     label17:
        $i2 = virtualinvoke r0.<com.android.server.audio.AudioService$VolumeStreamState: int getIndex(int)>(1073741824);

        $i3 = $i2 + 5;

        i15 = $i3 / 10;

     label18:
        specialinvoke r0.<com.android.server.audio.AudioService$VolumeStreamState: void setStreamVolumeIndex(int,int)>(i15, 1073741824);

        exitmonitor class "Lcom/android/server/audio/AudioService$VolumeStreamState;";

     label19:
        return;

     label20:
        $r9 := @caughtexception;

     label21:
        exitmonitor class "Lcom/android/server/audio/AudioService$VolumeStreamState;";

     label22:
        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label20;
        catch java.lang.Throwable from label03 to label04 with label20;
        catch java.lang.Throwable from label05 to label06 with label20;
        catch java.lang.Throwable from label07 to label08 with label20;
        catch java.lang.Throwable from label10 to label11 with label20;
        catch java.lang.Throwable from label12 to label13 with label20;
        catch java.lang.Throwable from label13 to label14 with label20;
        catch java.lang.Throwable from label15 to label16 with label20;
        catch java.lang.Throwable from label17 to label18 with label20;
        catch java.lang.Throwable from label18 to label19 with label20;
        catch java.lang.Throwable from label21 to label22 with label20;
    }

    void applyDeviceVolume_syncVSS(int)
    {
        com.android.server.audio.AudioService$VolumeStreamState r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10;
        boolean $z0, $z1, $z2, $z3;
        java.util.Set $r1;
        java.lang.Integer $r2;
        com.android.server.audio.AudioService $r3, $r4;

        r0 := @this: com.android.server.audio.AudioService$VolumeStreamState;

        i0 := @parameter0: int;

        $z0 = virtualinvoke r0.<com.android.server.audio.AudioService$VolumeStreamState: boolean isFullyMuted()>();

        if $z0 == 0 goto label1;

        i10 = 0;

        goto label5;

     label1:
        $r1 = <android.media.AudioSystem: java.util.Set DEVICE_OUT_ALL_A2DP_SET>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $z1 = interfaceinvoke $r1.<java.util.Set: boolean contains(java.lang.Object)>($r2);

        if $z1 == 0 goto label2;

        $r4 = r0.<com.android.server.audio.AudioService$VolumeStreamState: com.android.server.audio.AudioService this$0>;

        $z3 = staticinvoke <com.android.server.audio.AudioService: boolean access$3400(com.android.server.audio.AudioService)>($r4);

        if $z3 == 0 goto label2;

        $i7 = virtualinvoke r0.<com.android.server.audio.AudioService$VolumeStreamState: int getIndex(int)>(i0);

        $i8 = $i7 + 5;

        $i9 = $i8 / 10;

        i10 = specialinvoke r0.<com.android.server.audio.AudioService$VolumeStreamState: int getAbsoluteVolumeIndex(int)>($i9);

        goto label5;

     label2:
        $r3 = r0.<com.android.server.audio.AudioService$VolumeStreamState: com.android.server.audio.AudioService this$0>;

        $z2 = staticinvoke <com.android.server.audio.AudioService: boolean access$3500(com.android.server.audio.AudioService,int)>($r3, i0);

        if $z2 == 0 goto label3;

        $i5 = r0.<com.android.server.audio.AudioService$VolumeStreamState: int mIndexMax>;

        $i6 = $i5 + 5;

        i10 = $i6 / 10;

        goto label5;

     label3:
        if i0 != 134217728 goto label4;

        $i3 = r0.<com.android.server.audio.AudioService$VolumeStreamState: int mIndexMax>;

        $i4 = $i3 + 5;

        i10 = $i4 / 10;

        goto label5;

     label4:
        $i1 = virtualinvoke r0.<com.android.server.audio.AudioService$VolumeStreamState: int getIndex(int)>(i0);

        $i2 = $i1 + 5;

        i10 = $i2 / 10;

     label5:
        specialinvoke r0.<com.android.server.audio.AudioService$VolumeStreamState: void setStreamVolumeIndex(int,int)>(i10, i0);

        return;
    }

    public void checkFixedVolumeDevices()
    {
        com.android.server.audio.AudioService$VolumeStreamState r0;
        int i0, i1, $i2, $i3, $i4, $i5, i6;
        int[] $r2;
        android.util.SparseIntArray $r3, $r4, $r5, $r7;
        com.android.server.audio.AudioService $r6, $r8;
        boolean $z0, $z1;
        java.lang.Throwable $r9;

        r0 := @this: com.android.server.audio.AudioService$VolumeStreamState;

        entermonitor class "Lcom/android/server/audio/AudioService$VolumeStreamState;";

     label01:
        $r2 = <com.android.server.audio.AudioService: int[] mStreamVolumeAlias>;

        $i2 = r0.<com.android.server.audio.AudioService$VolumeStreamState: int mStreamType>;

        $i3 = $r2[$i2];

        if $i3 != 3 goto label08;

     label02:
        i6 = 0;

     label03:
        $r3 = r0.<com.android.server.audio.AudioService$VolumeStreamState: android.util.SparseIntArray mIndexMap>;

        $i4 = virtualinvoke $r3.<android.util.SparseIntArray: int size()>();

        if i6 >= $i4 goto label08;

        $r4 = r0.<com.android.server.audio.AudioService$VolumeStreamState: android.util.SparseIntArray mIndexMap>;

        i0 = virtualinvoke $r4.<android.util.SparseIntArray: int keyAt(int)>(i6);

        $r5 = r0.<com.android.server.audio.AudioService$VolumeStreamState: android.util.SparseIntArray mIndexMap>;

        i1 = virtualinvoke $r5.<android.util.SparseIntArray: int valueAt(int)>(i6);

        $r6 = r0.<com.android.server.audio.AudioService$VolumeStreamState: com.android.server.audio.AudioService this$0>;

        $z0 = staticinvoke <com.android.server.audio.AudioService: boolean access$3500(com.android.server.audio.AudioService,int)>($r6, i0);

        if $z0 != 0 goto label05;

        $r8 = r0.<com.android.server.audio.AudioService$VolumeStreamState: com.android.server.audio.AudioService this$0>;

        $z1 = staticinvoke <com.android.server.audio.AudioService: boolean access$3700(com.android.server.audio.AudioService,int)>($r8, i0);

        if $z1 == 0 goto label06;

     label04:
        if i1 == 0 goto label06;

     label05:
        $r7 = r0.<com.android.server.audio.AudioService$VolumeStreamState: android.util.SparseIntArray mIndexMap>;

        $i5 = r0.<com.android.server.audio.AudioService$VolumeStreamState: int mIndexMax>;

        virtualinvoke $r7.<android.util.SparseIntArray: void put(int,int)>(i0, $i5);

     label06:
        virtualinvoke r0.<com.android.server.audio.AudioService$VolumeStreamState: void applyDeviceVolume_syncVSS(int)>(i0);

     label07:
        i6 = i6 + 1;

        goto label03;

     label08:
        exitmonitor class "Lcom/android/server/audio/AudioService$VolumeStreamState;";

     label09:
        return;

     label10:
        $r9 := @caughtexception;

     label11:
        exitmonitor class "Lcom/android/server/audio/AudioService$VolumeStreamState;";

     label12:
        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public int getIndex(int)
    {
        com.android.server.audio.AudioService$VolumeStreamState r0;
        int i0, i1, i2;
        android.util.SparseIntArray $r2, $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.audio.AudioService$VolumeStreamState;

        i1 := @parameter0: int;

        entermonitor class "Lcom/android/server/audio/AudioService$VolumeStreamState;";

     label1:
        $r2 = r0.<com.android.server.audio.AudioService$VolumeStreamState: android.util.SparseIntArray mIndexMap>;

        i0 = virtualinvoke $r2.<android.util.SparseIntArray: int get(int,int)>(i1, -1);

     label2:
        i2 = i0;

        if i0 != -1 goto label4;

     label3:
        $r3 = r0.<com.android.server.audio.AudioService$VolumeStreamState: android.util.SparseIntArray mIndexMap>;

        i2 = virtualinvoke $r3.<android.util.SparseIntArray: int get(int)>(1073741824);

     label4:
        exitmonitor class "Lcom/android/server/audio/AudioService$VolumeStreamState;";

     label5:
        return i2;

     label6:
        $r4 := @caughtexception;

     label7:
        exitmonitor class "Lcom/android/server/audio/AudioService$VolumeStreamState;";

     label8:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public int getMaxIndex()
    {
        com.android.server.audio.AudioService$VolumeStreamState r0;
        int $i0;

        r0 := @this: com.android.server.audio.AudioService$VolumeStreamState;

        $i0 = r0.<com.android.server.audio.AudioService$VolumeStreamState: int mIndexMax>;

        return $i0;
    }

    public int getMinIndex()
    {
        com.android.server.audio.AudioService$VolumeStreamState r0;
        int $i0;

        r0 := @this: com.android.server.audio.AudioService$VolumeStreamState;

        $i0 = r0.<com.android.server.audio.AudioService$VolumeStreamState: int mIndexMin>;

        return $i0;
    }

    public int getMinIndex(boolean)
    {
        com.android.server.audio.AudioService$VolumeStreamState r0;
        boolean z0;
        int i0;

        r0 := @this: com.android.server.audio.AudioService$VolumeStreamState;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        i0 = r0.<com.android.server.audio.AudioService$VolumeStreamState: int mIndexMin>;

        goto label2;

     label1:
        i0 = r0.<com.android.server.audio.AudioService$VolumeStreamState: int mIndexMinNoPerm>;

     label2:
        return i0;
    }

    public java.lang.String getSettingNameForDevice(int)
    {
        com.android.server.audio.AudioService$VolumeStreamState r0;
        int i0;
        java.lang.String r1, $r4, $r8, $r9;
        boolean $z0, $z1;
        java.lang.StringBuilder $r3;

        r0 := @this: com.android.server.audio.AudioService$VolumeStreamState;

        i0 := @parameter0: int;

        $z0 = specialinvoke r0.<com.android.server.audio.AudioService$VolumeStreamState: boolean hasValidSettingsName()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        r1 = staticinvoke <android.media.AudioSystem: java.lang.String getOutputDeviceName(int)>(i0);

        $z1 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>();

        if $z1 == 0 goto label2;

        $r9 = r0.<com.android.server.audio.AudioService$VolumeStreamState: java.lang.String mVolumeIndexSettingName>;

        return $r9;

     label2:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = r0.<com.android.server.audio.AudioService$VolumeStreamState: java.lang.String mVolumeIndexSettingName>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    public int getStreamType()
    {
        com.android.server.audio.AudioService$VolumeStreamState r0;
        int $i0;

        r0 := @this: com.android.server.audio.AudioService$VolumeStreamState;

        $i0 = r0.<com.android.server.audio.AudioService$VolumeStreamState: int mStreamType>;

        return $i0;
    }

    public boolean hasIndexForDevice(int)
    {
        com.android.server.audio.AudioService$VolumeStreamState r0;
        int i0, $i1;
        android.util.SparseIntArray $r2;
        java.lang.Throwable $r3;
        boolean z0;

        r0 := @this: com.android.server.audio.AudioService$VolumeStreamState;

        i0 := @parameter0: int;

        entermonitor class "Lcom/android/server/audio/AudioService$VolumeStreamState;";

     label1:
        $r2 = r0.<com.android.server.audio.AudioService$VolumeStreamState: android.util.SparseIntArray mIndexMap>;

        $i1 = virtualinvoke $r2.<android.util.SparseIntArray: int get(int,int)>(i0, -1);

        if $i1 == -1 goto label3;

     label2:
        z0 = 1;

        goto label4;

     label3:
        z0 = 0;

     label4:
        exitmonitor class "Lcom/android/server/audio/AudioService$VolumeStreamState;";

     label5:
        return z0;

     label6:
        $r3 := @caughtexception;

     label7:
        exitmonitor class "Lcom/android/server/audio/AudioService$VolumeStreamState;";

     label8:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public boolean isFullyMuted()
    {
        com.android.server.audio.AudioService$VolumeStreamState r0;
        boolean $z0, $z1, z2;

        r0 := @this: com.android.server.audio.AudioService$VolumeStreamState;

        $z0 = r0.<com.android.server.audio.AudioService$VolumeStreamState: boolean mIsMuted>;

        if $z0 != 0 goto label2;

        $z1 = r0.<com.android.server.audio.AudioService$VolumeStreamState: boolean mIsMutedInternally>;

        if $z1 == 0 goto label1;

        goto label2;

     label1:
        z2 = 0;

        goto label3;

     label2:
        z2 = 1;

     label3:
        return z2;
    }

    public boolean mute(boolean)
    {
        com.android.server.audio.AudioService$VolumeStreamState r0;
        boolean z0, $z1, z2;
        android.content.Intent $r1;
        int $i0;
        com.android.server.audio.AudioService $r4, $r5;
        com.android.server.audio.AudioService$AudioHandler $r6;
        java.lang.Throwable $r7;

        r0 := @this: com.android.server.audio.AudioService$VolumeStreamState;

        z0 := @parameter0: boolean;

        z2 = 0;

        entermonitor class "Lcom/android/server/audio/AudioService$VolumeStreamState;";

     label1:
        $z1 = r0.<com.android.server.audio.AudioService$VolumeStreamState: boolean mIsMuted>;

        if z0 == $z1 goto label4;

     label2:
        z2 = 1;

     label3:
        r0.<com.android.server.audio.AudioService$VolumeStreamState: boolean mIsMuted> = z0;

        $r5 = r0.<com.android.server.audio.AudioService$VolumeStreamState: com.android.server.audio.AudioService this$0>;

        $r6 = staticinvoke <com.android.server.audio.AudioService: com.android.server.audio.AudioService$AudioHandler access$100(com.android.server.audio.AudioService)>($r5);

        staticinvoke <com.android.server.audio.AudioService: void access$200(android.os.Handler,int,int,int,int,java.lang.Object,int)>($r6, 10, 2, 0, 0, r0, 0);

     label4:
        exitmonitor class "Lcom/android/server/audio/AudioService$VolumeStreamState;";

     label5:
        if z2 == 0 goto label6;

        $r1 = new android.content.Intent;

        specialinvoke $r1.<android.content.Intent: void <init>(java.lang.String)>("android.media.STREAM_MUTE_CHANGED_ACTION");

        $i0 = r0.<com.android.server.audio.AudioService$VolumeStreamState: int mStreamType>;

        virtualinvoke $r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.media.EXTRA_VOLUME_STREAM_TYPE", $i0);

        virtualinvoke $r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("android.media.EXTRA_STREAM_VOLUME_MUTED", z0);

        $r4 = r0.<com.android.server.audio.AudioService$VolumeStreamState: com.android.server.audio.AudioService this$0>;

        staticinvoke <com.android.server.audio.AudioService: void access$3000(com.android.server.audio.AudioService,android.content.Intent)>($r4, $r1);

     label6:
        return z2;

     label7:
        $r7 := @caughtexception;

     label8:
        exitmonitor class "Lcom/android/server/audio/AudioService$VolumeStreamState;";

     label9:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public boolean muteInternally(boolean)
    {
        com.android.server.audio.AudioService$VolumeStreamState r0;
        boolean z0, $z1, z2;
        com.android.server.audio.AudioServiceEvents$VolumeEvent $r2;
        int $i0;
        com.android.server.audio.AudioEventLogger $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.audio.AudioService$VolumeStreamState;

        z0 := @parameter0: boolean;

        z2 = 0;

        entermonitor class "Lcom/android/server/audio/AudioService$VolumeStreamState;";

     label1:
        $z1 = r0.<com.android.server.audio.AudioService$VolumeStreamState: boolean mIsMutedInternally>;

        if z0 == $z1 goto label4;

     label2:
        z2 = 1;

     label3:
        r0.<com.android.server.audio.AudioService$VolumeStreamState: boolean mIsMutedInternally> = z0;

        virtualinvoke r0.<com.android.server.audio.AudioService$VolumeStreamState: void applyAllVolumes()>();

     label4:
        exitmonitor class "Lcom/android/server/audio/AudioService$VolumeStreamState;";

     label5:
        if z2 == 0 goto label6;

        $r3 = <com.android.server.audio.AudioService: com.android.server.audio.AudioEventLogger sVolumeLogger>;

        $r2 = new com.android.server.audio.AudioServiceEvents$VolumeEvent;

        $i0 = r0.<com.android.server.audio.AudioService$VolumeStreamState: int mStreamType>;

        specialinvoke $r2.<com.android.server.audio.AudioServiceEvents$VolumeEvent: void <init>(int,int,boolean)>(9, $i0, z0);

        virtualinvoke $r3.<com.android.server.audio.AudioEventLogger: void log(com.android.server.audio.AudioEventLogger$Event)>($r2);

     label6:
        return z2;

     label7:
        $r4 := @caughtexception;

     label8:
        exitmonitor class "Lcom/android/server/audio/AudioService$VolumeStreamState;";

     label9:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public int observeDevicesForStream_syncVSS(boolean)
    {
        com.android.server.audio.AudioService$VolumeStreamState r0;
        boolean z0, $z1;
        int i0, i1, i2, $i3, $i4, $i5, $i6;
        int[] r1;
        com.android.server.audio.AudioService $r2, $r5, $r8;
        com.android.server.audio.SystemServerAdapter $r3;
        android.content.Intent $r4, $r6, $r7;

        r0 := @this: com.android.server.audio.AudioService$VolumeStreamState;

        z0 := @parameter0: boolean;

        $r2 = r0.<com.android.server.audio.AudioService$VolumeStreamState: com.android.server.audio.AudioService this$0>;

        $r3 = staticinvoke <com.android.server.audio.AudioService: com.android.server.audio.SystemServerAdapter access$2800(com.android.server.audio.AudioService)>($r2);

        $z1 = virtualinvoke $r3.<com.android.server.audio.SystemServerAdapter: boolean isPrivileged()>();

        if $z1 != 0 goto label1;

        return 0;

     label1:
        $i3 = r0.<com.android.server.audio.AudioService$VolumeStreamState: int mStreamType>;

        i0 = staticinvoke <android.media.AudioSystem: int getDevicesForStream(int)>($i3);

        $i4 = r0.<com.android.server.audio.AudioService$VolumeStreamState: int mObservedDevices>;

        if i0 != $i4 goto label2;

        return i0;

     label2:
        i1 = r0.<com.android.server.audio.AudioService$VolumeStreamState: int mObservedDevices>;

        r0.<com.android.server.audio.AudioService$VolumeStreamState: int mObservedDevices> = i0;

        if z0 == 0 goto label3;

        $r8 = r0.<com.android.server.audio.AudioService$VolumeStreamState: com.android.server.audio.AudioService this$0>;

        $i6 = r0.<com.android.server.audio.AudioService$VolumeStreamState: int mStreamType>;

        staticinvoke <com.android.server.audio.AudioService: void access$2900(com.android.server.audio.AudioService,int)>($r8, $i6);

     label3:
        r1 = <com.android.server.audio.AudioService: int[] mStreamVolumeAlias>;

        i2 = r0.<com.android.server.audio.AudioService$VolumeStreamState: int mStreamType>;

        $i5 = r1[i2];

        if $i5 != i2 goto label4;

        staticinvoke <com.android.server.EventLogTags: void writeStreamDevicesChanged(int,int,int)>(i2, i1, i0);

     label4:
        $r5 = r0.<com.android.server.audio.AudioService$VolumeStreamState: com.android.server.audio.AudioService this$0>;

        $r4 = r0.<com.android.server.audio.AudioService$VolumeStreamState: android.content.Intent mStreamDevicesChanged>;

        $r6 = virtualinvoke $r4.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.media.EXTRA_PREV_VOLUME_STREAM_DEVICES", i1);

        $r7 = virtualinvoke $r6.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.media.EXTRA_VOLUME_STREAM_DEVICES", i0);

        staticinvoke <com.android.server.audio.AudioService: void access$3000(com.android.server.audio.AudioService,android.content.Intent)>($r5, $r7);

        return i0;
    }

    public void readSettings()
    {
        com.android.server.audio.AudioService$VolumeStreamState r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10;
        com.android.server.audio.AudioService $r1, $r2, $r4, $r9;
        boolean $z0, $z1, $z2, $z3;
        int[] $r3, $r12;
        android.util.SparseIntArray $r5, $r11, $r13;
        java.util.Set $r6;
        java.lang.Object $r7, r17;
        java.lang.Integer $r8;
        android.content.ContentResolver $r10;
        java.lang.Throwable $r14, $r15, $r16;
        java.util.Iterator r18;
        java.lang.String r19;

        r0 := @this: com.android.server.audio.AudioService$VolumeStreamState;

        $r1 = r0.<com.android.server.audio.AudioService$VolumeStreamState: com.android.server.audio.AudioService this$0>;

        r17 = staticinvoke <com.android.server.audio.AudioService: java.lang.Object access$3100(com.android.server.audio.AudioService)>($r1);

        entermonitor r17;

     label01:
        entermonitor class "Lcom/android/server/audio/AudioService$VolumeStreamState;";

     label02:
        $r2 = r0.<com.android.server.audio.AudioService$VolumeStreamState: com.android.server.audio.AudioService this$0>;

        $z0 = staticinvoke <com.android.server.audio.AudioService: boolean access$2500(com.android.server.audio.AudioService)>($r2);

        if $z0 == 0 goto label05;

        $r13 = r0.<com.android.server.audio.AudioService$VolumeStreamState: android.util.SparseIntArray mIndexMap>;

        $i8 = r0.<com.android.server.audio.AudioService$VolumeStreamState: int mIndexMax>;

        virtualinvoke $r13.<android.util.SparseIntArray: void put(int,int)>(1073741824, $i8);

        exitmonitor class "Lcom/android/server/audio/AudioService$VolumeStreamState;";

     label03:
        exitmonitor r17;

     label04:
        return;

     label05:
        $i1 = r0.<com.android.server.audio.AudioService$VolumeStreamState: int mStreamType>;

        if $i1 == 1 goto label27;

        $i4 = r0.<com.android.server.audio.AudioService$VolumeStreamState: int mStreamType>;

        if $i4 != 7 goto label07;

     label06:
        goto label27;

     label07:
        exitmonitor class "Lcom/android/server/audio/AudioService$VolumeStreamState;";

     label08:
        exitmonitor r17;

     label09:
        entermonitor class "Lcom/android/server/audio/AudioService$VolumeStreamState;";

     label10:
        $r6 = <android.media.AudioSystem: java.util.Set DEVICE_OUT_ALL_SET>;

        r18 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label11:
        $z3 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label22;

        $r7 = interfaceinvoke r18.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (java.lang.Integer) $r7;

        i0 = virtualinvoke $r8.<java.lang.Integer: int intValue()>();

     label12:
        if i0 != 1073741824 goto label15;

     label13:
        $r12 = <android.media.AudioSystem: int[] DEFAULT_STREAM_VOLUME>;

        $i7 = r0.<com.android.server.audio.AudioService$VolumeStreamState: int mStreamType>;

        i9 = $r12[$i7];

     label14:
        goto label16;

     label15:
        i9 = -1;

     label16:
        $z2 = specialinvoke r0.<com.android.server.audio.AudioService$VolumeStreamState: boolean hasValidSettingsName()>();

        if $z2 != 0 goto label18;

     label17:
        goto label19;

     label18:
        r19 = virtualinvoke r0.<com.android.server.audio.AudioService$VolumeStreamState: java.lang.String getSettingNameForDevice(int)>(i0);

        $r9 = r0.<com.android.server.audio.AudioService$VolumeStreamState: com.android.server.audio.AudioService this$0>;

        $r10 = staticinvoke <com.android.server.audio.AudioService: android.content.ContentResolver access$2700(com.android.server.audio.AudioService)>($r9);

        i9 = staticinvoke <android.provider.Settings$System: int getIntForUser(android.content.ContentResolver,java.lang.String,int,int)>($r10, r19, i9, -2);

     label19:
        if i9 != -1 goto label20;

        goto label11;

     label20:
        $r11 = r0.<com.android.server.audio.AudioService$VolumeStreamState: android.util.SparseIntArray mIndexMap>;

        $i5 = i9 * 10;

        $i6 = specialinvoke r0.<com.android.server.audio.AudioService$VolumeStreamState: int getValidIndex(int,boolean)>($i5, 1);

        virtualinvoke $r11.<android.util.SparseIntArray: void put(int,int)>(i0, $i6);

     label21:
        goto label11;

     label22:
        exitmonitor class "Lcom/android/server/audio/AudioService$VolumeStreamState;";

     label23:
        return;

     label24:
        $r14 := @caughtexception;

     label25:
        exitmonitor class "Lcom/android/server/audio/AudioService$VolumeStreamState;";

     label26:
        throw $r14;

     label27:
        $r3 = <android.media.AudioSystem: int[] DEFAULT_STREAM_VOLUME>;

        $i2 = r0.<com.android.server.audio.AudioService$VolumeStreamState: int mStreamType>;

        $i3 = $r3[$i2];

        i10 = $i3 * 10;

     label28:
        $r4 = r0.<com.android.server.audio.AudioService$VolumeStreamState: com.android.server.audio.AudioService this$0>;

        $z1 = staticinvoke <com.android.server.audio.AudioService: boolean access$3200(com.android.server.audio.AudioService)>($r4);

        if $z1 == 0 goto label29;

        i10 = r0.<com.android.server.audio.AudioService$VolumeStreamState: int mIndexMax>;

     label29:
        $r5 = r0.<com.android.server.audio.AudioService$VolumeStreamState: android.util.SparseIntArray mIndexMap>;

        virtualinvoke $r5.<android.util.SparseIntArray: void put(int,int)>(1073741824, i10);

        exitmonitor class "Lcom/android/server/audio/AudioService$VolumeStreamState;";

     label30:
        exitmonitor r17;

     label31:
        return;

     label32:
        $r15 := @caughtexception;

     label33:
        exitmonitor class "Lcom/android/server/audio/AudioService$VolumeStreamState;";

     label34:
        throw $r15;

     label35:
        $r16 := @caughtexception;

     label36:
        exitmonitor r17;

     label37:
        throw $r16;

        catch java.lang.Throwable from label01 to label02 with label35;
        catch java.lang.Throwable from label02 to label03 with label32;
        catch java.lang.Throwable from label03 to label04 with label35;
        catch java.lang.Throwable from label05 to label06 with label32;
        catch java.lang.Throwable from label07 to label08 with label32;
        catch java.lang.Throwable from label08 to label09 with label35;
        catch java.lang.Throwable from label10 to label11 with label24;
        catch java.lang.Throwable from label11 to label12 with label24;
        catch java.lang.Throwable from label13 to label14 with label24;
        catch java.lang.Throwable from label16 to label17 with label24;
        catch java.lang.Throwable from label18 to label19 with label24;
        catch java.lang.Throwable from label20 to label21 with label24;
        catch java.lang.Throwable from label22 to label23 with label24;
        catch java.lang.Throwable from label25 to label26 with label24;
        catch java.lang.Throwable from label27 to label28 with label32;
        catch java.lang.Throwable from label28 to label29 with label32;
        catch java.lang.Throwable from label29 to label30 with label32;
        catch java.lang.Throwable from label30 to label31 with label35;
        catch java.lang.Throwable from label33 to label34 with label32;
        catch java.lang.Throwable from label34 to label35 with label35;
        catch java.lang.Throwable from label36 to label37 with label35;
    }

    public void setAllIndexes(com.android.server.audio.AudioService$VolumeStreamState, java.lang.String)
    {
        com.android.server.audio.AudioService$VolumeStreamState r0, r6;
        java.lang.String r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11, i12, i13, i14;
        android.util.SparseIntArray r2, $r4, r7;
        com.android.server.audio.AudioService $r3, $r5;

        r0 := @this: com.android.server.audio.AudioService$VolumeStreamState;

        r6 := @parameter0: com.android.server.audio.AudioService$VolumeStreamState;

        r1 := @parameter1: java.lang.String;

        $i3 = r0.<com.android.server.audio.AudioService$VolumeStreamState: int mStreamType>;

        $i2 = r6.<com.android.server.audio.AudioService$VolumeStreamState: int mStreamType>;

        if $i3 != $i2 goto label1;

        return;

     label1:
        i0 = virtualinvoke r6.<com.android.server.audio.AudioService$VolumeStreamState: int getStreamType()>();

        i10 = virtualinvoke r6.<com.android.server.audio.AudioService$VolumeStreamState: int getIndex(int)>(1073741824);

        $r3 = r0.<com.android.server.audio.AudioService$VolumeStreamState: com.android.server.audio.AudioService this$0>;

        $i4 = r0.<com.android.server.audio.AudioService$VolumeStreamState: int mStreamType>;

        i11 = staticinvoke <com.android.server.audio.AudioService: int access$3600(com.android.server.audio.AudioService,int,int,int)>($r3, i10, i0, $i4);

        i12 = 0;

     label2:
        $r4 = r0.<com.android.server.audio.AudioService$VolumeStreamState: android.util.SparseIntArray mIndexMap>;

        $i5 = virtualinvoke $r4.<android.util.SparseIntArray: int size()>();

        if i12 >= $i5 goto label3;

        r2 = r0.<com.android.server.audio.AudioService$VolumeStreamState: android.util.SparseIntArray mIndexMap>;

        $i9 = virtualinvoke r2.<android.util.SparseIntArray: int keyAt(int)>(i12);

        virtualinvoke r2.<android.util.SparseIntArray: void put(int,int)>($i9, i11);

        i12 = i12 + 1;

        goto label2;

     label3:
        r7 = r6.<com.android.server.audio.AudioService$VolumeStreamState: android.util.SparseIntArray mIndexMap>;

        i13 = 0;

     label4:
        $i6 = virtualinvoke r7.<android.util.SparseIntArray: int size()>();

        if i13 >= $i6 goto label5;

        i14 = virtualinvoke r7.<android.util.SparseIntArray: int keyAt(int)>(i13);

        i1 = virtualinvoke r7.<android.util.SparseIntArray: int valueAt(int)>(i13);

        $r5 = r0.<com.android.server.audio.AudioService$VolumeStreamState: com.android.server.audio.AudioService this$0>;

        $i7 = r0.<com.android.server.audio.AudioService$VolumeStreamState: int mStreamType>;

        $i8 = staticinvoke <com.android.server.audio.AudioService: int access$3600(com.android.server.audio.AudioService,int,int,int)>($r5, i1, i0, $i7);

        virtualinvoke r0.<com.android.server.audio.AudioService$VolumeStreamState: boolean setIndex(int,int,java.lang.String,boolean)>($i8, i14, r1, 1);

        i13 = i13 + 1;

        goto label4;

     label5:
        return;
    }

    public void setAllIndexesToMax()
    {
        com.android.server.audio.AudioService$VolumeStreamState r0;
        android.util.SparseIntArray r1, $r2;
        int $i0, $i1, $i2, i3;

        r0 := @this: com.android.server.audio.AudioService$VolumeStreamState;

        i3 = 0;

     label1:
        $r2 = r0.<com.android.server.audio.AudioService$VolumeStreamState: android.util.SparseIntArray mIndexMap>;

        $i0 = virtualinvoke $r2.<android.util.SparseIntArray: int size()>();

        if i3 >= $i0 goto label2;

        r1 = r0.<com.android.server.audio.AudioService$VolumeStreamState: android.util.SparseIntArray mIndexMap>;

        $i1 = virtualinvoke r1.<android.util.SparseIntArray: int keyAt(int)>(i3);

        $i2 = r0.<com.android.server.audio.AudioService$VolumeStreamState: int mIndexMax>;

        virtualinvoke r1.<android.util.SparseIntArray: void put(int,int)>($i1, $i2);

        i3 = i3 + 1;

        goto label1;

     label2:
        return;
    }

    public boolean setIndex(int, int, java.lang.String, boolean)
    {
        com.android.server.audio.AudioService$VolumeStreamState r0, r1;
        boolean z0, $z1, $z4, $z5, z6, z7;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i13, $i14, $i15, $i16, $i17, $i18, $i19, i20, i21, i22, i23, i24, i25, i26, i27, i28, i29, $i30, $i31;
        com.android.server.audio.AudioService $r2, $r3, $r13, $r16, $r17, $r18, $r29;
        java.lang.Throwable $r7, $r19, $r20;
        android.util.SparseIntArray $r8, $r9, $r12, $r23;
        java.util.Set $r10;
        java.lang.Integer $r11;
        com.android.server.audio.AudioService$VolumeStreamState[] $r14;
        int[] $r15, r24, $r28;
        java.lang.String r21;
        java.lang.Object r22;
        android.content.Intent $r25, $r26, $r27, $r30;

        r0 := @this: com.android.server.audio.AudioService$VolumeStreamState;

        i20 := @parameter0: int;

        i21 := @parameter1: int;

        r21 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        $r2 = r0.<com.android.server.audio.AudioService$VolumeStreamState: com.android.server.audio.AudioService this$0>;

        r22 = staticinvoke <com.android.server.audio.AudioService: java.lang.Object access$3100(com.android.server.audio.AudioService)>($r2);

        entermonitor r22;

     label01:
        entermonitor class "Lcom/android/server/audio/AudioService$VolumeStreamState;";

     label02:
        i0 = virtualinvoke r0.<com.android.server.audio.AudioService$VolumeStreamState: int getIndex(int)>(i21);

        i22 = specialinvoke r0.<com.android.server.audio.AudioService$VolumeStreamState: int getValidIndex(int,boolean)>(i20, z0);

     label03:
        i23 = i22;

     label04:
        $i2 = r0.<com.android.server.audio.AudioService$VolumeStreamState: int mStreamType>;

        if $i2 != 7 goto label07;

     label05:
        i23 = i22;

     label06:
        $r18 = r0.<com.android.server.audio.AudioService$VolumeStreamState: com.android.server.audio.AudioService this$0>;

        $z5 = staticinvoke <com.android.server.audio.AudioService: boolean access$3200(com.android.server.audio.AudioService)>($r18);

        if $z5 == 0 goto label07;

        i23 = r0.<com.android.server.audio.AudioService$VolumeStreamState: int mIndexMax>;

     label07:
        $r23 = r0.<com.android.server.audio.AudioService$VolumeStreamState: android.util.SparseIntArray mIndexMap>;

        virtualinvoke $r23.<android.util.SparseIntArray: void put(int,int)>(i21, i23);

     label08:
        z6 = 0;

        if i0 == i23 goto label09;

        z7 = 1;

        goto label10;

     label09:
        z7 = 0;

     label10:
        $r3 = r0.<com.android.server.audio.AudioService$VolumeStreamState: com.android.server.audio.AudioService this$0>;

        $i3 = r0.<com.android.server.audio.AudioService$VolumeStreamState: int mStreamType>;

        $i4 = virtualinvoke $r3.<com.android.server.audio.AudioService: int getDeviceForStream(int)>($i3);

        if i21 != $i4 goto label12;

     label11:
        z6 = 1;

     label12:
        $i5 = staticinvoke <android.media.AudioSystem: int getNumStreamTypes()>();

        i24 = $i5 - 1;

     label13:
        if i24 < 0 goto label21;

     label14:
        $r13 = r0.<com.android.server.audio.AudioService$VolumeStreamState: com.android.server.audio.AudioService this$0>;

        $r14 = staticinvoke <com.android.server.audio.AudioService: com.android.server.audio.AudioService$VolumeStreamState[] access$2600(com.android.server.audio.AudioService)>($r13);

        r1 = $r14[i24];

        $i15 = r0.<com.android.server.audio.AudioService$VolumeStreamState: int mStreamType>;

        if i24 == $i15 goto label20;

        $r15 = <com.android.server.audio.AudioService: int[] mStreamVolumeAlias>;

        $i17 = $r15[i24];

        $i16 = r0.<com.android.server.audio.AudioService$VolumeStreamState: int mStreamType>;

        if $i17 != $i16 goto label20;

     label15:
        if z7 != 0 goto label17;

     label16:
        $z4 = virtualinvoke r1.<com.android.server.audio.AudioService$VolumeStreamState: boolean hasIndexForDevice(int)>(i21);

        if $z4 != 0 goto label20;

     label17:
        $r16 = r0.<com.android.server.audio.AudioService$VolumeStreamState: com.android.server.audio.AudioService this$0>;

        $i18 = r0.<com.android.server.audio.AudioService$VolumeStreamState: int mStreamType>;

        i1 = staticinvoke <com.android.server.audio.AudioService: int access$3600(com.android.server.audio.AudioService,int,int,int)>($r16, i23, $i18, i24);

        virtualinvoke r1.<com.android.server.audio.AudioService$VolumeStreamState: boolean setIndex(int,int,java.lang.String,boolean)>(i1, i21, r21, z0);

     label18:
        if z6 == 0 goto label20;

     label19:
        $r17 = r0.<com.android.server.audio.AudioService$VolumeStreamState: com.android.server.audio.AudioService this$0>;

        $i19 = virtualinvoke $r17.<com.android.server.audio.AudioService: int getDeviceForStream(int)>(i24);

        virtualinvoke r1.<com.android.server.audio.AudioService$VolumeStreamState: boolean setIndex(int,int,java.lang.String,boolean)>(i1, $i19, r21, z0);

     label20:
        i24 = i24 + -1;

        goto label13;

     label21:
        if z7 == 0 goto label26;

     label22:
        $i13 = r0.<com.android.server.audio.AudioService$VolumeStreamState: int mStreamType>;

        if $i13 != 2 goto label26;

     label23:
        if i21 != 2 goto label26;

        i25 = 0;

     label24:
        $r8 = r0.<com.android.server.audio.AudioService$VolumeStreamState: android.util.SparseIntArray mIndexMap>;

        $i14 = virtualinvoke $r8.<android.util.SparseIntArray: int size()>();

        if i25 >= $i14 goto label26;

        $r9 = r0.<com.android.server.audio.AudioService$VolumeStreamState: android.util.SparseIntArray mIndexMap>;

        i26 = virtualinvoke $r9.<android.util.SparseIntArray: int keyAt(int)>(i25);

        $r10 = <android.media.AudioSystem: java.util.Set DEVICE_OUT_ALL_SCO_SET>;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i26);

        $z1 = interfaceinvoke $r10.<java.util.Set: boolean contains(java.lang.Object)>($r11);

        if $z1 == 0 goto label25;

        $r12 = r0.<com.android.server.audio.AudioService$VolumeStreamState: android.util.SparseIntArray mIndexMap>;

        virtualinvoke $r12.<android.util.SparseIntArray: void put(int,int)>(i26, i23);

     label25:
        i25 = i25 + 1;

        goto label24;

     label26:
        exitmonitor class "Lcom/android/server/audio/AudioService$VolumeStreamState;";

     label27:
        exitmonitor r22;

     label28:
        if z7 == 0 goto label31;

        $i6 = i0 + 5;

        i27 = $i6 / 10;

        $i7 = i23 + 5;

        i28 = $i7 / 10;

        r24 = <com.android.server.audio.AudioService: int[] mStreamVolumeAlias>;

        i29 = r0.<com.android.server.audio.AudioService$VolumeStreamState: int mStreamType>;

        $i8 = r24[i29];

        if $i8 != i29 goto label30;

        if r21 != null goto label29;

        $r7 = new java.lang.Throwable;

        specialinvoke $r7.<java.lang.Throwable: void <init>()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("AS.AudioService", "No caller for volume_changed event", $r7);

     label29:
        $i11 = r0.<com.android.server.audio.AudioService$VolumeStreamState: int mStreamType>;

        $i9 = r0.<com.android.server.audio.AudioService$VolumeStreamState: int mIndexMax>;

        $i10 = $i9 / 10;

        staticinvoke <com.android.server.EventLogTags: void writeVolumeChanged(int,int,int,int,java.lang.String)>($i11, i27, i28, $i10, r21);

     label30:
        $r25 = r0.<com.android.server.audio.AudioService$VolumeStreamState: android.content.Intent mVolumeChanged>;

        virtualinvoke $r25.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.media.EXTRA_VOLUME_STREAM_VALUE", i28);

        $r26 = r0.<com.android.server.audio.AudioService$VolumeStreamState: android.content.Intent mVolumeChanged>;

        virtualinvoke $r26.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.media.EXTRA_PREV_VOLUME_STREAM_VALUE", i27);

        $r27 = r0.<com.android.server.audio.AudioService$VolumeStreamState: android.content.Intent mVolumeChanged>;

        $r28 = <com.android.server.audio.AudioService: int[] mStreamVolumeAlias>;

        $i30 = r0.<com.android.server.audio.AudioService$VolumeStreamState: int mStreamType>;

        $i31 = $r28[$i30];

        virtualinvoke $r27.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.media.EXTRA_VOLUME_STREAM_TYPE_ALIAS", $i31);

        $r29 = r0.<com.android.server.audio.AudioService$VolumeStreamState: com.android.server.audio.AudioService this$0>;

        $r30 = r0.<com.android.server.audio.AudioService$VolumeStreamState: android.content.Intent mVolumeChanged>;

        staticinvoke <com.android.server.audio.AudioService: void access$3000(com.android.server.audio.AudioService,android.content.Intent)>($r29, $r30);

     label31:
        return z7;

     label32:
        $r19 := @caughtexception;

     label33:
        exitmonitor class "Lcom/android/server/audio/AudioService$VolumeStreamState;";

     label34:
        throw $r19;

     label35:
        $r20 := @caughtexception;

     label36:
        exitmonitor r22;

     label37:
        throw $r20;

        catch java.lang.Throwable from label01 to label02 with label35;
        catch java.lang.Throwable from label02 to label03 with label32;
        catch java.lang.Throwable from label04 to label05 with label32;
        catch java.lang.Throwable from label06 to label07 with label32;
        catch java.lang.Throwable from label07 to label08 with label32;
        catch java.lang.Throwable from label10 to label11 with label32;
        catch java.lang.Throwable from label12 to label13 with label32;
        catch java.lang.Throwable from label14 to label15 with label32;
        catch java.lang.Throwable from label16 to label17 with label32;
        catch java.lang.Throwable from label17 to label18 with label32;
        catch java.lang.Throwable from label19 to label20 with label32;
        catch java.lang.Throwable from label22 to label23 with label32;
        catch java.lang.Throwable from label24 to label25 with label32;
        catch java.lang.Throwable from label26 to label27 with label32;
        catch java.lang.Throwable from label27 to label28 with label35;
        catch java.lang.Throwable from label33 to label34 with label32;
        catch java.lang.Throwable from label34 to label35 with label35;
        catch java.lang.Throwable from label36 to label37 with label35;
    }

    public void updateNoPermMinIndex(int)
    {
        com.android.server.audio.AudioService$VolumeStreamState r0;
        int $i0, $i1, $i3, i4, i5;
        java.lang.StringBuilder $r2;
        java.lang.String $r5;

        r0 := @this: com.android.server.audio.AudioService$VolumeStreamState;

        i4 := @parameter0: int;

        i5 = i4 * 10;

        r0.<com.android.server.audio.AudioService$VolumeStreamState: int mIndexMinNoPerm> = i5;

        $i0 = r0.<com.android.server.audio.AudioService$VolumeStreamState: int mIndexMin>;

        if i5 >= $i0 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid mIndexMinNoPerm for stream ");

        $i1 = r0.<com.android.server.audio.AudioService$VolumeStreamState: int mStreamType>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("AS.AudioService", $r5);

        $i3 = r0.<com.android.server.audio.AudioService$VolumeStreamState: int mIndexMin>;

        r0.<com.android.server.audio.AudioService$VolumeStreamState: int mIndexMinNoPerm> = $i3;

     label1:
        return;
    }
}
