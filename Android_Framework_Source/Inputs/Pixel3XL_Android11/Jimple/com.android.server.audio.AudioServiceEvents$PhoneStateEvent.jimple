final class com.android.server.audio.AudioServiceEvents$PhoneStateEvent extends com.android.server.audio.AudioEventLogger$Event
{
    static final int MODE_IN_COMMUNICATION_TIMEOUT;
    static final int MODE_SET;
    private static final java.lang.String mMetricsId;
    final int mActualMode;
    final int mOp;
    final int mOwnerPid;
    final java.lang.String mPackage;
    final int mRequestedMode;
    final int mRequesterPid;

    void <init>(java.lang.String, int)
    {
        com.android.server.audio.AudioServiceEvents$PhoneStateEvent r0;
        java.lang.String r1;
        int i0;

        r0 := @this: com.android.server.audio.AudioServiceEvents$PhoneStateEvent;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.audio.AudioEventLogger$Event: void <init>()>();

        r0.<com.android.server.audio.AudioServiceEvents$PhoneStateEvent: int mOp> = 1;

        r0.<com.android.server.audio.AudioServiceEvents$PhoneStateEvent: java.lang.String mPackage> = r1;

        r0.<com.android.server.audio.AudioServiceEvents$PhoneStateEvent: int mOwnerPid> = i0;

        r0.<com.android.server.audio.AudioServiceEvents$PhoneStateEvent: int mRequesterPid> = 0;

        r0.<com.android.server.audio.AudioServiceEvents$PhoneStateEvent: int mRequestedMode> = 0;

        r0.<com.android.server.audio.AudioServiceEvents$PhoneStateEvent: int mActualMode> = 0;

        specialinvoke r0.<com.android.server.audio.AudioServiceEvents$PhoneStateEvent: void logMetricEvent()>();

        return;
    }

    void <init>(java.lang.String, int, int, int, int)
    {
        com.android.server.audio.AudioServiceEvents$PhoneStateEvent r0;
        java.lang.String r1;
        int i0, i1, i2, i3;

        r0 := @this: com.android.server.audio.AudioServiceEvents$PhoneStateEvent;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        specialinvoke r0.<com.android.server.audio.AudioEventLogger$Event: void <init>()>();

        r0.<com.android.server.audio.AudioServiceEvents$PhoneStateEvent: int mOp> = 0;

        r0.<com.android.server.audio.AudioServiceEvents$PhoneStateEvent: java.lang.String mPackage> = r1;

        r0.<com.android.server.audio.AudioServiceEvents$PhoneStateEvent: int mRequesterPid> = i0;

        r0.<com.android.server.audio.AudioServiceEvents$PhoneStateEvent: int mRequestedMode> = i1;

        r0.<com.android.server.audio.AudioServiceEvents$PhoneStateEvent: int mOwnerPid> = i2;

        r0.<com.android.server.audio.AudioServiceEvents$PhoneStateEvent: int mActualMode> = i3;

        specialinvoke r0.<com.android.server.audio.AudioServiceEvents$PhoneStateEvent: void logMetricEvent()>();

        return;
    }

    private void logMetricEvent()
    {
        com.android.server.audio.AudioServiceEvents$PhoneStateEvent r0;
        int i0, $i1, $i2;
        android.media.MediaMetrics$Item $r1, $r3, $r6, $r9, $r12, $r13, $r15, $r18;
        android.media.MediaMetrics$Key $r2, $r4, $r7, $r11, $r14, $r17;
        java.lang.String $r5, $r8, $r10, $r16;

        r0 := @this: com.android.server.audio.AudioServiceEvents$PhoneStateEvent;

        i0 = r0.<com.android.server.audio.AudioServiceEvents$PhoneStateEvent: int mOp>;

        if i0 == 0 goto label2;

        if i0 == 1 goto label1;

        return;

     label1:
        $r13 = new android.media.MediaMetrics$Item;

        specialinvoke $r13.<android.media.MediaMetrics$Item: void <init>(java.lang.String)>("audio.mode");

        $r14 = <android.media.MediaMetrics$Property: android.media.MediaMetrics$Key EVENT>;

        $r15 = virtualinvoke $r13.<android.media.MediaMetrics$Item: android.media.MediaMetrics$Item set(android.media.MediaMetrics$Key,java.lang.Object)>($r14, "inCommunicationTimeout");

        $r17 = <android.media.MediaMetrics$Property: android.media.MediaMetrics$Key CALLING_PACKAGE>;

        $r16 = r0.<com.android.server.audio.AudioServiceEvents$PhoneStateEvent: java.lang.String mPackage>;

        $r18 = virtualinvoke $r15.<android.media.MediaMetrics$Item: android.media.MediaMetrics$Item set(android.media.MediaMetrics$Key,java.lang.Object)>($r17, $r16);

        virtualinvoke $r18.<android.media.MediaMetrics$Item: boolean record()>();

        return;

     label2:
        $r1 = new android.media.MediaMetrics$Item;

        specialinvoke $r1.<android.media.MediaMetrics$Item: void <init>(java.lang.String)>("audio.mode");

        $r2 = <android.media.MediaMetrics$Property: android.media.MediaMetrics$Key EVENT>;

        $r3 = virtualinvoke $r1.<android.media.MediaMetrics$Item: android.media.MediaMetrics$Item set(android.media.MediaMetrics$Key,java.lang.Object)>($r2, "set");

        $r4 = <android.media.MediaMetrics$Property: android.media.MediaMetrics$Key REQUESTED_MODE>;

        $i1 = r0.<com.android.server.audio.AudioServiceEvents$PhoneStateEvent: int mRequestedMode>;

        $r5 = staticinvoke <android.media.AudioSystem: java.lang.String modeToString(int)>($i1);

        $r6 = virtualinvoke $r3.<android.media.MediaMetrics$Item: android.media.MediaMetrics$Item set(android.media.MediaMetrics$Key,java.lang.Object)>($r4, $r5);

        $r7 = <android.media.MediaMetrics$Property: android.media.MediaMetrics$Key MODE>;

        $i2 = r0.<com.android.server.audio.AudioServiceEvents$PhoneStateEvent: int mActualMode>;

        $r8 = staticinvoke <android.media.AudioSystem: java.lang.String modeToString(int)>($i2);

        $r9 = virtualinvoke $r6.<android.media.MediaMetrics$Item: android.media.MediaMetrics$Item set(android.media.MediaMetrics$Key,java.lang.Object)>($r7, $r8);

        $r11 = <android.media.MediaMetrics$Property: android.media.MediaMetrics$Key CALLING_PACKAGE>;

        $r10 = r0.<com.android.server.audio.AudioServiceEvents$PhoneStateEvent: java.lang.String mPackage>;

        $r12 = virtualinvoke $r9.<android.media.MediaMetrics$Item: android.media.MediaMetrics$Item set(android.media.MediaMetrics$Key,java.lang.Object)>($r11, $r10);

        virtualinvoke $r12.<android.media.MediaMetrics$Item: boolean record()>();

        return;
    }

    public java.lang.String eventToString()
    {
        com.android.server.audio.AudioServiceEvents$PhoneStateEvent r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.StringBuilder $r1, $r15, $r22;
        java.lang.String $r2, $r5, $r10, $r14, $r17, $r21, $r24;

        r0 := @this: com.android.server.audio.AudioServiceEvents$PhoneStateEvent;

        i0 = r0.<com.android.server.audio.AudioServiceEvents$PhoneStateEvent: int mOp>;

        if i0 == 0 goto label2;

        if i0 == 1 goto label1;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>(java.lang.String)>("FIXME invalid op:");

        $i6 = r0.<com.android.server.audio.AudioServiceEvents$PhoneStateEvent: int mOp>;

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r24;

     label1:
        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>(java.lang.String)>("mode IN COMMUNICATION timeout");

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for package=");

        $r17 = r0.<com.android.server.audio.AudioServiceEvents$PhoneStateEvent: java.lang.String mPackage>;

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" pid=");

        $i5 = r0.<com.android.server.audio.AudioServiceEvents$PhoneStateEvent: int mOwnerPid>;

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r21 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r21;

     label2:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("setMode(");

        $i1 = r0.<com.android.server.audio.AudioServiceEvents$PhoneStateEvent: int mRequestedMode>;

        $r2 = staticinvoke <android.media.AudioSystem: java.lang.String modeToString(int)>($i1);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") from package=");

        $r5 = r0.<com.android.server.audio.AudioServiceEvents$PhoneStateEvent: java.lang.String mPackage>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" pid=");

        $i2 = r0.<com.android.server.audio.AudioServiceEvents$PhoneStateEvent: int mRequesterPid>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" selected mode=");

        $i3 = r0.<com.android.server.audio.AudioServiceEvents$PhoneStateEvent: int mActualMode>;

        $r10 = staticinvoke <android.media.AudioSystem: java.lang.String modeToString(int)>($i3);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" by pid=");

        $i4 = r0.<com.android.server.audio.AudioServiceEvents$PhoneStateEvent: int mOwnerPid>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r14 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r14;
    }

    public static void <clinit>()
    {
        <com.android.server.audio.AudioServiceEvents$PhoneStateEvent: java.lang.String mMetricsId> = "audio.mode";

        <com.android.server.audio.AudioServiceEvents$PhoneStateEvent: int MODE_SET> = 0;

        <com.android.server.audio.AudioServiceEvents$PhoneStateEvent: int MODE_IN_COMMUNICATION_TIMEOUT> = 1;

        return;
    }
}
