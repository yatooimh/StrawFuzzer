public class com.android.server.audio.FocusRequester extends java.lang.Object
{
    private static final boolean DEBUG;
    private static final java.lang.String TAG;
    private final android.media.AudioAttributes mAttributes;
    private final int mCallingUid;
    private final java.lang.String mClientId;
    private com.android.server.audio.MediaFocusControl$AudioFocusDeathHandler mDeathHandler;
    private final com.android.server.audio.MediaFocusControl mFocusController;
    private android.media.IAudioFocusDispatcher mFocusDispatcher;
    private final int mFocusGainRequest;
    private int mFocusLossReceived;
    private boolean mFocusLossWasNotified;
    private final int mGrantFlags;
    private final java.lang.String mPackageName;
    private final int mSdkTarget;
    private final android.os.IBinder mSourceRef;

    void <init>(android.media.AudioAttributes, int, int, android.media.IAudioFocusDispatcher, android.os.IBinder, java.lang.String, com.android.server.audio.MediaFocusControl$AudioFocusDeathHandler, java.lang.String, int, com.android.server.audio.MediaFocusControl, int)
    {
        com.android.server.audio.FocusRequester r0;
        android.media.AudioAttributes r1;
        int i0, i1, i2, i3;
        android.media.IAudioFocusDispatcher r2;
        android.os.IBinder r3;
        java.lang.String r4, r6;
        com.android.server.audio.MediaFocusControl$AudioFocusDeathHandler r5;
        com.android.server.audio.MediaFocusControl r7;

        r0 := @this: com.android.server.audio.FocusRequester;

        r1 := @parameter0: android.media.AudioAttributes;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: android.media.IAudioFocusDispatcher;

        r3 := @parameter4: android.os.IBinder;

        r4 := @parameter5: java.lang.String;

        r5 := @parameter6: com.android.server.audio.MediaFocusControl$AudioFocusDeathHandler;

        r6 := @parameter7: java.lang.String;

        i2 := @parameter8: int;

        r7 := @parameter9: com.android.server.audio.MediaFocusControl;

        i3 := @parameter10: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.audio.FocusRequester: android.media.AudioAttributes mAttributes> = r1;

        r0.<com.android.server.audio.FocusRequester: android.media.IAudioFocusDispatcher mFocusDispatcher> = r2;

        r0.<com.android.server.audio.FocusRequester: android.os.IBinder mSourceRef> = r3;

        r0.<com.android.server.audio.FocusRequester: java.lang.String mClientId> = r4;

        r0.<com.android.server.audio.FocusRequester: com.android.server.audio.MediaFocusControl$AudioFocusDeathHandler mDeathHandler> = r5;

        r0.<com.android.server.audio.FocusRequester: java.lang.String mPackageName> = r6;

        r0.<com.android.server.audio.FocusRequester: int mCallingUid> = i2;

        r0.<com.android.server.audio.FocusRequester: int mFocusGainRequest> = i0;

        r0.<com.android.server.audio.FocusRequester: int mGrantFlags> = i1;

        r0.<com.android.server.audio.FocusRequester: int mFocusLossReceived> = 0;

        r0.<com.android.server.audio.FocusRequester: boolean mFocusLossWasNotified> = 1;

        r0.<com.android.server.audio.FocusRequester: com.android.server.audio.MediaFocusControl mFocusController> = r7;

        r0.<com.android.server.audio.FocusRequester: int mSdkTarget> = i3;

        return;
    }

    void <init>(android.media.AudioFocusInfo, android.media.IAudioFocusDispatcher, android.os.IBinder, com.android.server.audio.MediaFocusControl$AudioFocusDeathHandler, com.android.server.audio.MediaFocusControl)
    {
        com.android.server.audio.FocusRequester r0;
        android.media.AudioFocusInfo r1;
        android.media.IAudioFocusDispatcher r2;
        android.os.IBinder r3;
        com.android.server.audio.MediaFocusControl$AudioFocusDeathHandler r4;
        com.android.server.audio.MediaFocusControl r5;
        android.media.AudioAttributes $r6;
        java.lang.String $r7, $r8;
        int $i0, $i1, $i2, $i3;

        r0 := @this: com.android.server.audio.FocusRequester;

        r1 := @parameter0: android.media.AudioFocusInfo;

        r2 := @parameter1: android.media.IAudioFocusDispatcher;

        r3 := @parameter2: android.os.IBinder;

        r4 := @parameter3: com.android.server.audio.MediaFocusControl$AudioFocusDeathHandler;

        r5 := @parameter4: com.android.server.audio.MediaFocusControl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r6 = virtualinvoke r1.<android.media.AudioFocusInfo: android.media.AudioAttributes getAttributes()>();

        r0.<com.android.server.audio.FocusRequester: android.media.AudioAttributes mAttributes> = $r6;

        $r7 = virtualinvoke r1.<android.media.AudioFocusInfo: java.lang.String getClientId()>();

        r0.<com.android.server.audio.FocusRequester: java.lang.String mClientId> = $r7;

        $r8 = virtualinvoke r1.<android.media.AudioFocusInfo: java.lang.String getPackageName()>();

        r0.<com.android.server.audio.FocusRequester: java.lang.String mPackageName> = $r8;

        $i0 = virtualinvoke r1.<android.media.AudioFocusInfo: int getClientUid()>();

        r0.<com.android.server.audio.FocusRequester: int mCallingUid> = $i0;

        $i1 = virtualinvoke r1.<android.media.AudioFocusInfo: int getGainRequest()>();

        r0.<com.android.server.audio.FocusRequester: int mFocusGainRequest> = $i1;

        r0.<com.android.server.audio.FocusRequester: int mFocusLossReceived> = 0;

        r0.<com.android.server.audio.FocusRequester: boolean mFocusLossWasNotified> = 1;

        $i2 = virtualinvoke r1.<android.media.AudioFocusInfo: int getFlags()>();

        r0.<com.android.server.audio.FocusRequester: int mGrantFlags> = $i2;

        $i3 = virtualinvoke r1.<android.media.AudioFocusInfo: int getSdkTarget()>();

        r0.<com.android.server.audio.FocusRequester: int mSdkTarget> = $i3;

        r0.<com.android.server.audio.FocusRequester: android.media.IAudioFocusDispatcher mFocusDispatcher> = r2;

        r0.<com.android.server.audio.FocusRequester: android.os.IBinder mSourceRef> = r3;

        r0.<com.android.server.audio.FocusRequester: com.android.server.audio.MediaFocusControl$AudioFocusDeathHandler mDeathHandler> = r4;

        r0.<com.android.server.audio.FocusRequester: com.android.server.audio.MediaFocusControl mFocusController> = r5;

        return;
    }

    private static java.lang.String flagsToString(int)
    {
        int i0, $i1, $i2, $i3;
        java.lang.String $r0, r17, r19, r20, r23, r24;
        boolean $z0, $z1;
        java.lang.StringBuilder $r1, $r4, $r7, $r10, $r13;

        i0 := @parameter0: int;

        $r0 = new java.lang.String;

        specialinvoke $r0.<java.lang.String: void <init>()>();

        r17 = $r0;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DELAY_OK");

        r17 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        r19 = r17;

        $i2 = i0 & 4;

        if $i2 == 0 goto label3;

        r20 = r17;

        $z1 = virtualinvoke r17.<java.lang.String: boolean isEmpty()>();

        if $z1 != 0 goto label2;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r17);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("|");

        r20 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r20);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LOCK");

        r19 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        r23 = r19;

        $i3 = i0 & 2;

        if $i3 == 0 goto label5;

        r24 = r19;

        $z0 = virtualinvoke r19.<java.lang.String: boolean isEmpty()>();

        if $z0 != 0 goto label4;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r19);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("|");

        r24 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

     label4:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r24);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PAUSES_ON_DUCKABLE_LOSS");

        r23 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

     label5:
        return r23;
    }

    private static java.lang.String focusChangeToString(int)
    {
        int i0;
        java.lang.StringBuilder $r1;
        java.lang.String $r5;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case -3: goto label9;
            case -2: goto label8;
            case -1: goto label7;
            case 0: goto label6;
            case 1: goto label5;
            case 2: goto label4;
            case 3: goto label3;
            case 4: goto label2;
            default: goto label1;
        };

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[invalid focus change");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;

     label2:
        return "GAIN_TRANSIENT_EXCLUSIVE";

     label3:
        return "GAIN_TRANSIENT_MAY_DUCK";

     label4:
        return "GAIN_TRANSIENT";

     label5:
        return "GAIN";

     label6:
        return "none";

     label7:
        return "LOSS";

     label8:
        return "LOSS_TRANSIENT";

     label9:
        return "LOSS_TRANSIENT_CAN_DUCK";
    }

    private java.lang.String focusGainToString()
    {
        com.android.server.audio.FocusRequester r0;
        int $i0;
        java.lang.String $r1;

        r0 := @this: com.android.server.audio.FocusRequester;

        $i0 = r0.<com.android.server.audio.FocusRequester: int mFocusGainRequest>;

        $r1 = staticinvoke <com.android.server.audio.FocusRequester: java.lang.String focusChangeToString(int)>($i0);

        return $r1;
    }

    private int focusLossForGainRequest(int)
    {
        com.android.server.audio.FocusRequester r0;
        int i0, i2, i3, i4;
        java.lang.StringBuilder $r2;
        java.lang.String $r5;

        r0 := @this: com.android.server.audio.FocusRequester;

        i0 := @parameter0: int;

        if i0 == 1 goto label01;

        if i0 == 2 goto label02;

        if i0 == 3 goto label03;

        if i0 == 4 goto label02;

        goto label04;

     label01:
        i2 = r0.<com.android.server.audio.FocusRequester: int mFocusLossReceived>;

        if i2 == -3 goto label10;

        if i2 == -2 goto label10;

        if i2 == -1 goto label10;

        if i2 == 0 goto label10;

     label02:
        i3 = r0.<com.android.server.audio.FocusRequester: int mFocusLossReceived>;

        if i3 == -3 goto label09;

        if i3 == -2 goto label09;

        if i3 == -1 goto label08;

        if i3 == 0 goto label09;

     label03:
        i4 = r0.<com.android.server.audio.FocusRequester: int mFocusLossReceived>;

        if i4 == -3 goto label07;

        if i4 == -2 goto label06;

        if i4 == -1 goto label05;

        if i4 == 0 goto label07;

     label04:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("focusLossForGainRequest() for invalid focus request ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MediaFocusControl", $r5);

        return 0;

     label05:
        return -1;

     label06:
        return -2;

     label07:
        return -3;

     label08:
        return -1;

     label09:
        return -2;

     label10:
        return -1;
    }

    private java.lang.String focusLossToString()
    {
        com.android.server.audio.FocusRequester r0;
        int $i0;
        java.lang.String $r1;

        r0 := @this: com.android.server.audio.FocusRequester;

        $i0 = r0.<com.android.server.audio.FocusRequester: int mFocusLossReceived>;

        $r1 = staticinvoke <com.android.server.audio.FocusRequester: java.lang.String focusChangeToString(int)>($i0);

        return $r1;
    }

    private boolean frameworkHandleFocusLoss(int, com.android.server.audio.FocusRequester, boolean)
    {
        com.android.server.audio.FocusRequester r0, r12;
        int i0, $i1, $i2, $i3, $i4, $i6, $i7, $i8;
        boolean z0, $z1;
        com.android.server.audio.MediaFocusControl $r1;
        java.lang.StringBuilder $r2, $r7;
        java.lang.String $r6, $r11;

        r0 := @this: com.android.server.audio.FocusRequester;

        i0 := @parameter0: int;

        r12 := @parameter1: com.android.server.audio.FocusRequester;

        z0 := @parameter2: boolean;

        $i2 = r12.<com.android.server.audio.FocusRequester: int mCallingUid>;

        $i1 = r0.<com.android.server.audio.FocusRequester: int mCallingUid>;

        if $i2 != $i1 goto label1;

        return 0;

     label1:
        if i0 != -3 goto label4;

        if z0 != 0 goto label2;

        $i6 = r0.<com.android.server.audio.FocusRequester: int mGrantFlags>;

        $i7 = $i6 & 2;

        if $i7 == 0 goto label2;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("not ducking uid ");

        $i8 = r0.<com.android.server.audio.FocusRequester: int mCallingUid>;

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - flags");

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("MediaFocusControl", $r11);

        return 0;

     label2:
        if z0 != 0 goto label3;

        $i3 = virtualinvoke r0.<com.android.server.audio.FocusRequester: int getSdkTarget()>();

        if $i3 > 25 goto label3;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("not ducking uid ");

        $i4 = r0.<com.android.server.audio.FocusRequester: int mCallingUid>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - old SDK");

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("MediaFocusControl", $r6);

        return 0;

     label3:
        $r1 = r0.<com.android.server.audio.FocusRequester: com.android.server.audio.MediaFocusControl mFocusController>;

        $z1 = virtualinvoke $r1.<com.android.server.audio.MediaFocusControl: boolean duckPlayers(com.android.server.audio.FocusRequester,com.android.server.audio.FocusRequester,boolean)>(r12, r0, z0);

        return $z1;

     label4:
        return 0;
    }

    int dispatchFocusChange(int)
    {
        com.android.server.audio.FocusRequester r0;
        int i0, $i1, $i4;
        java.lang.StringBuilder $r1, $r8;
        java.lang.String $r6, $r10, $r12, $r15;
        android.os.RemoteException $r7;
        android.media.IAudioFocusDispatcher r13;

        r0 := @this: com.android.server.audio.FocusRequester;

        i0 := @parameter0: int;

        r13 = r0.<com.android.server.audio.FocusRequester: android.media.IAudioFocusDispatcher mFocusDispatcher>;

        if r13 != null goto label1;

        return 0;

     label1:
        if i0 != 0 goto label2;

        return 0;

     label2:
        if i0 == 3 goto label3;

        if i0 == 4 goto label3;

        if i0 == 2 goto label3;

        if i0 != 1 goto label4;

     label3:
        $i4 = r0.<com.android.server.audio.FocusRequester: int mFocusGainRequest>;

        if $i4 == i0 goto label4;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("focus gain was requested with ");

        $i1 = r0.<com.android.server.audio.FocusRequester: int mFocusGainRequest>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", dispatching ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MediaFocusControl", $r6);

        goto label6;

     label4:
        if i0 == -3 goto label5;

        if i0 == -2 goto label5;

        if i0 != -1 goto label6;

     label5:
        r0.<com.android.server.audio.FocusRequester: int mFocusLossReceived> = i0;

     label6:
        $r15 = r0.<com.android.server.audio.FocusRequester: java.lang.String mClientId>;

        interfaceinvoke r13.<android.media.IAudioFocusDispatcher: void dispatchAudioFocusChange(int,java.lang.String)>(i0, $r15);

     label7:
        return 1;

     label8:
        $r7 := @caughtexception;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dispatchFocusChange: error talking to focus listener ");

        $r10 = r0.<com.android.server.audio.FocusRequester: java.lang.String mClientId>;

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaFocusControl", $r12, $r7);

        return 0;

        catch android.os.RemoteException from label6 to label7 with label8;
    }

    void dispatchFocusResultFromExtPolicy(int)
    {
        com.android.server.audio.FocusRequester r0;
        int i0;
        java.lang.String $r2, $r6, $r8;
        android.os.RemoteException $r3;
        java.lang.StringBuilder $r4;
        android.media.IAudioFocusDispatcher r9;

        r0 := @this: com.android.server.audio.FocusRequester;

        i0 := @parameter0: int;

        r9 = r0.<com.android.server.audio.FocusRequester: android.media.IAudioFocusDispatcher mFocusDispatcher>;

        if r9 != null goto label1;

        return;

     label1:
        $r2 = r0.<com.android.server.audio.FocusRequester: java.lang.String mClientId>;

        interfaceinvoke r9.<android.media.IAudioFocusDispatcher: void dispatchFocusResultFromExtPolicy(int,java.lang.String)>(i0, $r2);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dispatchFocusResultFromExtPolicy: error talking to focus listener");

        $r6 = r0.<com.android.server.audio.FocusRequester: java.lang.String mClientId>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaFocusControl", $r8, $r3);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    void dump(java.io.PrintWriter)
    {
        com.android.server.audio.FocusRequester r0;
        java.io.PrintWriter r1;
        java.lang.StringBuilder $r3;
        android.os.IBinder $r5;
        java.lang.String $r8, $r11, $r14, $r17, $r20, $r31;
        int $i0, $i1, $i2;
        boolean $z0;
        android.media.AudioAttributes $r27;

        r0 := @this: com.android.server.audio.FocusRequester;

        r1 := @parameter0: java.io.PrintWriter;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  source:");

        $r5 = r0.<com.android.server.audio.FocusRequester: android.os.IBinder mSourceRef>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -- pack: ");

        $r8 = r0.<com.android.server.audio.FocusRequester: java.lang.String mPackageName>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -- client: ");

        $r11 = r0.<com.android.server.audio.FocusRequester: java.lang.String mClientId>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -- gain: ");

        $r14 = specialinvoke r0.<com.android.server.audio.FocusRequester: java.lang.String focusGainToString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -- flags: ");

        $i0 = r0.<com.android.server.audio.FocusRequester: int mGrantFlags>;

        $r17 = staticinvoke <com.android.server.audio.FocusRequester: java.lang.String flagsToString(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -- loss: ");

        $r20 = specialinvoke r0.<com.android.server.audio.FocusRequester: java.lang.String focusLossToString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -- notified: ");

        $z0 = r0.<com.android.server.audio.FocusRequester: boolean mFocusLossWasNotified>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -- uid: ");

        $i1 = r0.<com.android.server.audio.FocusRequester: int mCallingUid>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -- attr: ");

        $r27 = r0.<com.android.server.audio.FocusRequester: android.media.AudioAttributes mAttributes>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r27);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -- sdk:");

        $i2 = r0.<com.android.server.audio.FocusRequester: int mSdkTarget>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r31 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r31);

        return;
    }

    protected void finalize() throws java.lang.Throwable
    {
        com.android.server.audio.FocusRequester r0;

        r0 := @this: com.android.server.audio.FocusRequester;

        virtualinvoke r0.<com.android.server.audio.FocusRequester: void release()>();

        specialinvoke r0.<java.lang.Object: void finalize()>();

        return;
    }

    android.media.AudioAttributes getAudioAttributes()
    {
        com.android.server.audio.FocusRequester r0;
        android.media.AudioAttributes $r1;

        r0 := @this: com.android.server.audio.FocusRequester;

        $r1 = r0.<com.android.server.audio.FocusRequester: android.media.AudioAttributes mAttributes>;

        return $r1;
    }

    java.lang.String getClientId()
    {
        com.android.server.audio.FocusRequester r0;
        java.lang.String $r1;

        r0 := @this: com.android.server.audio.FocusRequester;

        $r1 = r0.<com.android.server.audio.FocusRequester: java.lang.String mClientId>;

        return $r1;
    }

    int getClientUid()
    {
        com.android.server.audio.FocusRequester r0;
        int $i0;

        r0 := @this: com.android.server.audio.FocusRequester;

        $i0 = r0.<com.android.server.audio.FocusRequester: int mCallingUid>;

        return $i0;
    }

    int getGainRequest()
    {
        com.android.server.audio.FocusRequester r0;
        int $i0;

        r0 := @this: com.android.server.audio.FocusRequester;

        $i0 = r0.<com.android.server.audio.FocusRequester: int mFocusGainRequest>;

        return $i0;
    }

    int getGrantFlags()
    {
        com.android.server.audio.FocusRequester r0;
        int $i0;

        r0 := @this: com.android.server.audio.FocusRequester;

        $i0 = r0.<com.android.server.audio.FocusRequester: int mGrantFlags>;

        return $i0;
    }

    int getSdkTarget()
    {
        com.android.server.audio.FocusRequester r0;
        int $i0;

        r0 := @this: com.android.server.audio.FocusRequester;

        $i0 = r0.<com.android.server.audio.FocusRequester: int mSdkTarget>;

        return $i0;
    }

    void handleFocusGain(int)
    {
        com.android.server.audio.FocusRequester r0;
        int i0;
        com.android.server.audio.MediaFocusControl $r1, $r6;
        android.media.AudioFocusInfo $r2;
        boolean $z0;
        java.lang.String $r3;
        android.os.RemoteException $r4;
        android.media.IAudioFocusDispatcher r5;

        r0 := @this: com.android.server.audio.FocusRequester;

        i0 := @parameter0: int;

     label1:
        r0.<com.android.server.audio.FocusRequester: int mFocusLossReceived> = 0;

        $r1 = r0.<com.android.server.audio.FocusRequester: com.android.server.audio.MediaFocusControl mFocusController>;

        $r2 = virtualinvoke r0.<com.android.server.audio.FocusRequester: android.media.AudioFocusInfo toAudioFocusInfo()>();

        virtualinvoke $r1.<com.android.server.audio.MediaFocusControl: void notifyExtPolicyFocusGrant_syncAf(android.media.AudioFocusInfo,int)>($r2, 1);

        r5 = r0.<com.android.server.audio.FocusRequester: android.media.IAudioFocusDispatcher mFocusDispatcher>;

     label2:
        if r5 == null goto label4;

     label3:
        $z0 = r0.<com.android.server.audio.FocusRequester: boolean mFocusLossWasNotified>;

        if $z0 == 0 goto label4;

        $r3 = r0.<com.android.server.audio.FocusRequester: java.lang.String mClientId>;

        interfaceinvoke r5.<android.media.IAudioFocusDispatcher: void dispatchAudioFocusChange(int,java.lang.String)>(i0, $r3);

     label4:
        $r6 = r0.<com.android.server.audio.FocusRequester: com.android.server.audio.MediaFocusControl mFocusController>;

        virtualinvoke $r6.<com.android.server.audio.MediaFocusControl: void unduckPlayers(com.android.server.audio.FocusRequester)>(r0);

     label5:
        goto label7;

     label6:
        $r4 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaFocusControl", "Failure to signal gain of audio focus due to: ", $r4);

     label7:
        return;

        catch android.os.RemoteException from label1 to label2 with label6;
        catch android.os.RemoteException from label3 to label4 with label6;
        catch android.os.RemoteException from label4 to label5 with label6;
    }

    void handleFocusGainFromRequest(int)
    {
        com.android.server.audio.FocusRequester r0;
        int i0;
        com.android.server.audio.MediaFocusControl $r1;

        r0 := @this: com.android.server.audio.FocusRequester;

        i0 := @parameter0: int;

        if i0 != 1 goto label1;

        $r1 = r0.<com.android.server.audio.FocusRequester: com.android.server.audio.MediaFocusControl mFocusController>;

        virtualinvoke $r1.<com.android.server.audio.MediaFocusControl: void unduckPlayers(com.android.server.audio.FocusRequester)>(r0);

     label1:
        return;
    }

    void handleFocusLoss(int, com.android.server.audio.FocusRequester, boolean)
    {
        com.android.server.audio.FocusRequester r0, r10;
        int i0, $i1, $i2, $i3, $i4, $i5;
        boolean z0, $z1, z2;
        com.android.server.audio.MediaFocusControl $r1, $r2, $r5, $r7;
        android.media.AudioFocusInfo $r3, $r6, $r8;
        java.lang.String $r4;
        android.os.RemoteException $r9;
        android.media.IAudioFocusDispatcher r11;

        r0 := @this: com.android.server.audio.FocusRequester;

        i0 := @parameter0: int;

        r10 := @parameter1: com.android.server.audio.FocusRequester;

        z0 := @parameter2: boolean;

     label01:
        $i1 = r0.<com.android.server.audio.FocusRequester: int mFocusLossReceived>;

        if i0 == $i1 goto label11;

        r0.<com.android.server.audio.FocusRequester: int mFocusLossReceived> = i0;

        r0.<com.android.server.audio.FocusRequester: boolean mFocusLossWasNotified> = 0;

        $r1 = r0.<com.android.server.audio.FocusRequester: com.android.server.audio.MediaFocusControl mFocusController>;

        $z1 = virtualinvoke $r1.<com.android.server.audio.MediaFocusControl: boolean mustNotifyFocusOwnerOnDuck()>();

        if $z1 != 0 goto label03;

        $i3 = r0.<com.android.server.audio.FocusRequester: int mFocusLossReceived>;

        if $i3 != -3 goto label03;

        $i4 = r0.<com.android.server.audio.FocusRequester: int mGrantFlags>;

        $i5 = $i4 & 2;

        if $i5 != 0 goto label03;

        $r7 = r0.<com.android.server.audio.FocusRequester: com.android.server.audio.MediaFocusControl mFocusController>;

        $r8 = virtualinvoke r0.<com.android.server.audio.FocusRequester: android.media.AudioFocusInfo toAudioFocusInfo()>();

        virtualinvoke $r7.<com.android.server.audio.MediaFocusControl: void notifyExtPolicyFocusLoss_syncAf(android.media.AudioFocusInfo,boolean)>($r8, 0);

     label02:
        return;

     label03:
        z2 = 0;

        if r10 == null goto label05;

     label04:
        z2 = specialinvoke r0.<com.android.server.audio.FocusRequester: boolean frameworkHandleFocusLoss(int,com.android.server.audio.FocusRequester,boolean)>(i0, r10, z0);

     label05:
        if z2 == 0 goto label08;

     label06:
        $r5 = r0.<com.android.server.audio.FocusRequester: com.android.server.audio.MediaFocusControl mFocusController>;

        $r6 = virtualinvoke r0.<com.android.server.audio.FocusRequester: android.media.AudioFocusInfo toAudioFocusInfo()>();

        virtualinvoke $r5.<com.android.server.audio.MediaFocusControl: void notifyExtPolicyFocusLoss_syncAf(android.media.AudioFocusInfo,boolean)>($r6, 0);

     label07:
        return;

     label08:
        r11 = r0.<com.android.server.audio.FocusRequester: android.media.IAudioFocusDispatcher mFocusDispatcher>;

     label09:
        if r11 == null goto label11;

     label10:
        $r2 = r0.<com.android.server.audio.FocusRequester: com.android.server.audio.MediaFocusControl mFocusController>;

        $r3 = virtualinvoke r0.<com.android.server.audio.FocusRequester: android.media.AudioFocusInfo toAudioFocusInfo()>();

        virtualinvoke $r2.<com.android.server.audio.MediaFocusControl: void notifyExtPolicyFocusLoss_syncAf(android.media.AudioFocusInfo,boolean)>($r3, 1);

        r0.<com.android.server.audio.FocusRequester: boolean mFocusLossWasNotified> = 1;

        $i2 = r0.<com.android.server.audio.FocusRequester: int mFocusLossReceived>;

        $r4 = r0.<com.android.server.audio.FocusRequester: java.lang.String mClientId>;

        interfaceinvoke r11.<android.media.IAudioFocusDispatcher: void dispatchAudioFocusChange(int,java.lang.String)>($i2, $r4);

     label11:
        goto label13;

     label12:
        $r9 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaFocusControl", "Failure to signal loss of audio focus due to:", $r9);

     label13:
        return;

        catch android.os.RemoteException from label01 to label02 with label12;
        catch android.os.RemoteException from label04 to label05 with label12;
        catch android.os.RemoteException from label06 to label07 with label12;
        catch android.os.RemoteException from label08 to label09 with label12;
        catch android.os.RemoteException from label10 to label11 with label12;
    }

    boolean handleFocusLossFromGain(int, com.android.server.audio.FocusRequester, boolean)
    {
        com.android.server.audio.FocusRequester r0, r1;
        int i0, i1;
        boolean z0, z1;

        r0 := @this: com.android.server.audio.FocusRequester;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.server.audio.FocusRequester;

        z0 := @parameter2: boolean;

        i1 = specialinvoke r0.<com.android.server.audio.FocusRequester: int focusLossForGainRequest(int)>(i0);

        virtualinvoke r0.<com.android.server.audio.FocusRequester: void handleFocusLoss(int,com.android.server.audio.FocusRequester,boolean)>(i1, r1, z0);

        if i1 != -1 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    boolean hasSameBinder(android.os.IBinder)
    {
        com.android.server.audio.FocusRequester r0;
        android.os.IBinder r1, r2;
        boolean $z0, z1;

        r0 := @this: com.android.server.audio.FocusRequester;

        r1 := @parameter0: android.os.IBinder;

        r2 = r0.<com.android.server.audio.FocusRequester: android.os.IBinder mSourceRef>;

        if r2 == null goto label1;

        $z0 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    boolean hasSameClient(java.lang.String)
    {
        com.android.server.audio.FocusRequester r0;
        java.lang.String r1, $r2;
        int $i0;
        boolean z0;

        r0 := @this: com.android.server.audio.FocusRequester;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.audio.FocusRequester: java.lang.String mClientId>;

        $i0 = virtualinvoke $r2.<java.lang.String: int compareTo(java.lang.String)>(r1);

        if $i0 != 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    boolean hasSameDispatcher(android.media.IAudioFocusDispatcher)
    {
        com.android.server.audio.FocusRequester r0;
        android.media.IAudioFocusDispatcher r1, r2;
        boolean $z0, z1;

        r0 := @this: com.android.server.audio.FocusRequester;

        r1 := @parameter0: android.media.IAudioFocusDispatcher;

        r2 = r0.<com.android.server.audio.FocusRequester: android.media.IAudioFocusDispatcher mFocusDispatcher>;

        if r2 == null goto label1;

        $z0 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    boolean hasSamePackage(java.lang.String)
    {
        com.android.server.audio.FocusRequester r0;
        java.lang.String r1, $r2;
        int $i0;
        boolean z0;

        r0 := @this: com.android.server.audio.FocusRequester;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.audio.FocusRequester: java.lang.String mPackageName>;

        $i0 = virtualinvoke $r2.<java.lang.String: int compareTo(java.lang.String)>(r1);

        if $i0 != 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    boolean hasSameUid(int)
    {
        com.android.server.audio.FocusRequester r0;
        int i0, $i1;
        boolean z0;

        r0 := @this: com.android.server.audio.FocusRequester;

        i0 := @parameter0: int;

        $i1 = r0.<com.android.server.audio.FocusRequester: int mCallingUid>;

        if $i1 != i0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    boolean isLockedFocusOwner()
    {
        com.android.server.audio.FocusRequester r0;
        int $i0, $i1;
        boolean z0;

        r0 := @this: com.android.server.audio.FocusRequester;

        $i0 = r0.<com.android.server.audio.FocusRequester: int mGrantFlags>;

        $i1 = $i0 & 4;

        if $i1 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    void release()
    {
        com.android.server.audio.FocusRequester r0;
        com.android.server.audio.MediaFocusControl$AudioFocusDeathHandler r1;
        java.lang.Throwable $r2;
        android.os.IBinder r3;

        r0 := @this: com.android.server.audio.FocusRequester;

        r3 = r0.<com.android.server.audio.FocusRequester: android.os.IBinder mSourceRef>;

        r1 = r0.<com.android.server.audio.FocusRequester: com.android.server.audio.MediaFocusControl$AudioFocusDeathHandler mDeathHandler>;

        if r3 == null goto label4;

        if r1 == null goto label4;

     label1:
        interfaceinvoke r3.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>(r1, 0);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

     label4:
        r0.<com.android.server.audio.FocusRequester: com.android.server.audio.MediaFocusControl$AudioFocusDeathHandler mDeathHandler> = null;

        r0.<com.android.server.audio.FocusRequester: android.media.IAudioFocusDispatcher mFocusDispatcher> = null;

        return;

        catch java.util.NoSuchElementException from label1 to label2 with label3;
    }

    android.media.AudioFocusInfo toAudioFocusInfo()
    {
        com.android.server.audio.FocusRequester r0;
        android.media.AudioFocusInfo $r1;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.String $r2, $r3;
        android.media.AudioAttributes $r4;

        r0 := @this: com.android.server.audio.FocusRequester;

        $r1 = new android.media.AudioFocusInfo;

        $r4 = r0.<com.android.server.audio.FocusRequester: android.media.AudioAttributes mAttributes>;

        $i4 = r0.<com.android.server.audio.FocusRequester: int mCallingUid>;

        $r3 = r0.<com.android.server.audio.FocusRequester: java.lang.String mClientId>;

        $r2 = r0.<com.android.server.audio.FocusRequester: java.lang.String mPackageName>;

        $i3 = r0.<com.android.server.audio.FocusRequester: int mFocusGainRequest>;

        $i2 = r0.<com.android.server.audio.FocusRequester: int mFocusLossReceived>;

        $i1 = r0.<com.android.server.audio.FocusRequester: int mGrantFlags>;

        $i0 = r0.<com.android.server.audio.FocusRequester: int mSdkTarget>;

        specialinvoke $r1.<android.media.AudioFocusInfo: void <init>(android.media.AudioAttributes,int,java.lang.String,java.lang.String,int,int,int,int)>($r4, $i4, $r3, $r2, $i3, $i2, $i1, $i0);

        return $r1;
    }

    public static void <clinit>()
    {
        <com.android.server.audio.FocusRequester: java.lang.String TAG> = "MediaFocusControl";

        <com.android.server.audio.FocusRequester: boolean DEBUG> = 0;

        return;
    }
}
