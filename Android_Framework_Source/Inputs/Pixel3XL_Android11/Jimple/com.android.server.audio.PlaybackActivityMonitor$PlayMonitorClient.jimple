final class com.android.server.audio.PlaybackActivityMonitor$PlayMonitorClient extends java.lang.Object implements android.os.IBinder$DeathRecipient
{
    static final int MAX_ERRORS;
    static com.android.server.audio.PlaybackActivityMonitor sListenerDeathMonitor;
    final android.media.IPlaybackConfigDispatcher mDispatcherCb;
    int mErrorCount;
    final boolean mIsPrivileged;

    void <init>(android.media.IPlaybackConfigDispatcher, boolean)
    {
        com.android.server.audio.PlaybackActivityMonitor$PlayMonitorClient r0;
        android.media.IPlaybackConfigDispatcher r1;
        boolean z0;

        r0 := @this: com.android.server.audio.PlaybackActivityMonitor$PlayMonitorClient;

        r1 := @parameter0: android.media.IPlaybackConfigDispatcher;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.audio.PlaybackActivityMonitor$PlayMonitorClient: int mErrorCount> = 0;

        r0.<com.android.server.audio.PlaybackActivityMonitor$PlayMonitorClient: android.media.IPlaybackConfigDispatcher mDispatcherCb> = r1;

        r0.<com.android.server.audio.PlaybackActivityMonitor$PlayMonitorClient: boolean mIsPrivileged> = z0;

        return;
    }

    public void binderDied()
    {
        com.android.server.audio.PlaybackActivityMonitor$PlayMonitorClient r0;
        android.media.IPlaybackConfigDispatcher $r1;
        com.android.server.audio.PlaybackActivityMonitor $r2;

        r0 := @this: com.android.server.audio.PlaybackActivityMonitor$PlayMonitorClient;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("AudioService.PlaybackActivityMonitor", "client died");

        $r2 = <com.android.server.audio.PlaybackActivityMonitor$PlayMonitorClient: com.android.server.audio.PlaybackActivityMonitor sListenerDeathMonitor>;

        $r1 = r0.<com.android.server.audio.PlaybackActivityMonitor$PlayMonitorClient: android.media.IPlaybackConfigDispatcher mDispatcherCb>;

        virtualinvoke $r2.<com.android.server.audio.PlaybackActivityMonitor: void unregisterPlaybackCallback(android.media.IPlaybackConfigDispatcher)>($r1);

        return;
    }

    boolean init()
    {
        com.android.server.audio.PlaybackActivityMonitor$PlayMonitorClient r0;
        android.media.IPlaybackConfigDispatcher $r2;
        android.os.IBinder $r3;
        android.os.RemoteException $r4;

        r0 := @this: com.android.server.audio.PlaybackActivityMonitor$PlayMonitorClient;

     label1:
        $r2 = r0.<com.android.server.audio.PlaybackActivityMonitor$PlayMonitorClient: android.media.IPlaybackConfigDispatcher mDispatcherCb>;

        $r3 = interfaceinvoke $r2.<android.media.IPlaybackConfigDispatcher: android.os.IBinder asBinder()>();

        interfaceinvoke $r3.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>(r0, 0);

     label2:
        return 1;

     label3:
        $r4 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("AudioService.PlaybackActivityMonitor", "Could not link to client death", $r4);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    void release()
    {
        com.android.server.audio.PlaybackActivityMonitor$PlayMonitorClient r0;
        android.media.IPlaybackConfigDispatcher $r1;
        android.os.IBinder $r2;

        r0 := @this: com.android.server.audio.PlaybackActivityMonitor$PlayMonitorClient;

        $r1 = r0.<com.android.server.audio.PlaybackActivityMonitor$PlayMonitorClient: android.media.IPlaybackConfigDispatcher mDispatcherCb>;

        $r2 = interfaceinvoke $r1.<android.media.IPlaybackConfigDispatcher: android.os.IBinder asBinder()>();

        interfaceinvoke $r2.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>(r0, 0);

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.audio.PlaybackActivityMonitor$PlayMonitorClient: int MAX_ERRORS> = 5;

        return;
    }
}
