final class com.android.server.audio.RecordingActivityMonitor$RecMonitorClient extends java.lang.Object implements android.os.IBinder$DeathRecipient
{
    static com.android.server.audio.RecordingActivityMonitor sMonitor;
    final android.media.IRecordingConfigDispatcher mDispatcherCb;
    final boolean mIsPrivileged;

    void <init>(android.media.IRecordingConfigDispatcher, boolean)
    {
        com.android.server.audio.RecordingActivityMonitor$RecMonitorClient r0;
        android.media.IRecordingConfigDispatcher r1;
        boolean z0;

        r0 := @this: com.android.server.audio.RecordingActivityMonitor$RecMonitorClient;

        r1 := @parameter0: android.media.IRecordingConfigDispatcher;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.audio.RecordingActivityMonitor$RecMonitorClient: android.media.IRecordingConfigDispatcher mDispatcherCb> = r1;

        r0.<com.android.server.audio.RecordingActivityMonitor$RecMonitorClient: boolean mIsPrivileged> = z0;

        return;
    }

    public void binderDied()
    {
        com.android.server.audio.RecordingActivityMonitor$RecMonitorClient r0;
        android.media.IRecordingConfigDispatcher $r1;
        com.android.server.audio.RecordingActivityMonitor $r2;

        r0 := @this: com.android.server.audio.RecordingActivityMonitor$RecMonitorClient;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("AudioService.RecordingActivityMonitor", "client died");

        $r2 = <com.android.server.audio.RecordingActivityMonitor$RecMonitorClient: com.android.server.audio.RecordingActivityMonitor sMonitor>;

        $r1 = r0.<com.android.server.audio.RecordingActivityMonitor$RecMonitorClient: android.media.IRecordingConfigDispatcher mDispatcherCb>;

        virtualinvoke $r2.<com.android.server.audio.RecordingActivityMonitor: void unregisterRecordingCallback(android.media.IRecordingConfigDispatcher)>($r1);

        return;
    }

    boolean init()
    {
        com.android.server.audio.RecordingActivityMonitor$RecMonitorClient r0;
        android.media.IRecordingConfigDispatcher $r2;
        android.os.IBinder $r3;
        android.os.RemoteException $r4;

        r0 := @this: com.android.server.audio.RecordingActivityMonitor$RecMonitorClient;

     label1:
        $r2 = r0.<com.android.server.audio.RecordingActivityMonitor$RecMonitorClient: android.media.IRecordingConfigDispatcher mDispatcherCb>;

        $r3 = interfaceinvoke $r2.<android.media.IRecordingConfigDispatcher: android.os.IBinder asBinder()>();

        interfaceinvoke $r3.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>(r0, 0);

     label2:
        return 1;

     label3:
        $r4 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("AudioService.RecordingActivityMonitor", "Could not link to client death", $r4);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    void release()
    {
        com.android.server.audio.RecordingActivityMonitor$RecMonitorClient r0;
        android.media.IRecordingConfigDispatcher $r1;
        android.os.IBinder $r2;

        r0 := @this: com.android.server.audio.RecordingActivityMonitor$RecMonitorClient;

        $r1 = r0.<com.android.server.audio.RecordingActivityMonitor$RecMonitorClient: android.media.IRecordingConfigDispatcher mDispatcherCb>;

        $r2 = interfaceinvoke $r1.<android.media.IRecordingConfigDispatcher: android.os.IBinder asBinder()>();

        interfaceinvoke $r2.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>(r0, 0);

        return;
    }
}
