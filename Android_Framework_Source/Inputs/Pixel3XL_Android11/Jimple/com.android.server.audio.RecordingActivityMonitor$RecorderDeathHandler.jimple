final class com.android.server.audio.RecordingActivityMonitor$RecorderDeathHandler extends java.lang.Object implements android.os.IBinder$DeathRecipient
{
    static com.android.server.audio.RecordingActivityMonitor sMonitor;
    private final android.os.IBinder mRecorderToken;
    final int mRiid;

    void <init>(int, android.os.IBinder)
    {
        com.android.server.audio.RecordingActivityMonitor$RecorderDeathHandler r0;
        int i0;
        android.os.IBinder r1;

        r0 := @this: com.android.server.audio.RecordingActivityMonitor$RecorderDeathHandler;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.audio.RecordingActivityMonitor$RecorderDeathHandler: int mRiid> = i0;

        r0.<com.android.server.audio.RecordingActivityMonitor$RecorderDeathHandler: android.os.IBinder mRecorderToken> = r1;

        return;
    }

    public void binderDied()
    {
        com.android.server.audio.RecordingActivityMonitor$RecorderDeathHandler r0;
        int $i0;
        com.android.server.audio.RecordingActivityMonitor $r1;

        r0 := @this: com.android.server.audio.RecordingActivityMonitor$RecorderDeathHandler;

        $r1 = <com.android.server.audio.RecordingActivityMonitor$RecorderDeathHandler: com.android.server.audio.RecordingActivityMonitor sMonitor>;

        $i0 = r0.<com.android.server.audio.RecordingActivityMonitor$RecorderDeathHandler: int mRiid>;

        virtualinvoke $r1.<com.android.server.audio.RecordingActivityMonitor: void releaseRecorder(int)>($i0);

        return;
    }

    boolean init()
    {
        com.android.server.audio.RecordingActivityMonitor$RecorderDeathHandler r0;
        android.os.IBinder $r2;
        android.os.RemoteException $r3;

        r0 := @this: com.android.server.audio.RecordingActivityMonitor$RecorderDeathHandler;

     label1:
        $r2 = r0.<com.android.server.audio.RecordingActivityMonitor$RecorderDeathHandler: android.os.IBinder mRecorderToken>;

        interfaceinvoke $r2.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>(r0, 0);

     label2:
        return 1;

     label3:
        $r3 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("AudioService.RecordingActivityMonitor", "Could not link to recorder death", $r3);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    void release()
    {
        com.android.server.audio.RecordingActivityMonitor$RecorderDeathHandler r0;
        android.os.IBinder $r1;

        r0 := @this: com.android.server.audio.RecordingActivityMonitor$RecorderDeathHandler;

        $r1 = r0.<com.android.server.audio.RecordingActivityMonitor$RecorderDeathHandler: android.os.IBinder mRecorderToken>;

        interfaceinvoke $r1.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>(r0, 0);

        return;
    }
}
