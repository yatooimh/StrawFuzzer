class com.android.server.audio.RotationHelper extends java.lang.Object
{
    private static final java.lang.String TAG;
    private static android.content.Context sContext;
    private static int sDeviceRotation;
    private static com.android.server.audio.RotationHelper$AudioDisplayListener sDisplayListener;
    private static android.os.Handler sHandler;
    private static final java.lang.Object sRotationLock;

    static void <clinit>()
    {
        java.lang.Object $r0;

        <com.android.server.audio.RotationHelper: java.lang.String TAG> = "AudioService.RotationHelper";

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <com.android.server.audio.RotationHelper: java.lang.Object sRotationLock> = $r0;

        <com.android.server.audio.RotationHelper: int sDeviceRotation> = 0;

        return;
    }

    void <init>()
    {
        com.android.server.audio.RotationHelper r0;

        r0 := @this: com.android.server.audio.RotationHelper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void disable()
    {
        android.content.Context $r0;
        java.lang.Object $r1;
        com.android.server.audio.RotationHelper$AudioDisplayListener $r2;
        android.hardware.display.DisplayManager $r3;

        $r0 = <com.android.server.audio.RotationHelper: android.content.Context sContext>;

        $r1 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("display");

        $r3 = (android.hardware.display.DisplayManager) $r1;

        $r2 = <com.android.server.audio.RotationHelper: com.android.server.audio.RotationHelper$AudioDisplayListener sDisplayListener>;

        virtualinvoke $r3.<android.hardware.display.DisplayManager: void unregisterDisplayListener(android.hardware.display.DisplayManager$DisplayListener)>($r2);

        return;
    }

    static void enable()
    {
        android.content.Context $r0;
        java.lang.Object $r1;
        android.os.Handler $r2;
        com.android.server.audio.RotationHelper$AudioDisplayListener $r3;
        android.hardware.display.DisplayManager $r4;

        $r0 = <com.android.server.audio.RotationHelper: android.content.Context sContext>;

        $r1 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("display");

        $r4 = (android.hardware.display.DisplayManager) $r1;

        $r3 = <com.android.server.audio.RotationHelper: com.android.server.audio.RotationHelper$AudioDisplayListener sDisplayListener>;

        $r2 = <com.android.server.audio.RotationHelper: android.os.Handler sHandler>;

        virtualinvoke $r4.<android.hardware.display.DisplayManager: void registerDisplayListener(android.hardware.display.DisplayManager$DisplayListener,android.os.Handler)>($r3, $r2);

        staticinvoke <com.android.server.audio.RotationHelper: void updateOrientation()>();

        return;
    }

    static void init(android.content.Context, android.os.Handler)
    {
        android.content.Context r0;
        android.os.Handler r1;
        java.lang.IllegalArgumentException $r2;
        com.android.server.audio.RotationHelper$AudioDisplayListener $r3;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.os.Handler;

        if r0 == null goto label1;

        <com.android.server.audio.RotationHelper: android.content.Context sContext> = r0;

        <com.android.server.audio.RotationHelper: android.os.Handler sHandler> = r1;

        $r3 = new com.android.server.audio.RotationHelper$AudioDisplayListener;

        specialinvoke $r3.<com.android.server.audio.RotationHelper$AudioDisplayListener: void <init>()>();

        <com.android.server.audio.RotationHelper: com.android.server.audio.RotationHelper$AudioDisplayListener sDisplayListener> = $r3;

        staticinvoke <com.android.server.audio.RotationHelper: void enable()>();

        return;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid null context");

        throw $r2;
    }

    private static void publishRotation(int)
    {
        int i0;
        java.lang.StringBuilder $r1;
        java.lang.String $r5;

        i0 := @parameter0: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("publishing device rotation =");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (x90deg)");

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("AudioService.RotationHelper", $r5);

        if i0 == 0 goto label4;

        if i0 == 1 goto label3;

        if i0 == 2 goto label2;

        if i0 == 3 goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("AudioService.RotationHelper", "Unknown device rotation");

        goto label5;

     label1:
        staticinvoke <android.media.AudioSystem: int setParameters(java.lang.String)>("rotation=270");

        goto label5;

     label2:
        staticinvoke <android.media.AudioSystem: int setParameters(java.lang.String)>("rotation=180");

        goto label5;

     label3:
        staticinvoke <android.media.AudioSystem: int setParameters(java.lang.String)>("rotation=90");

        goto label5;

     label4:
        staticinvoke <android.media.AudioSystem: int setParameters(java.lang.String)>("rotation=0");

     label5:
        return;
    }

    static void updateOrientation()
    {
        int i0, $i1;
        java.lang.Object r0, $r3;
        android.content.Context $r2;
        android.view.WindowManager $r4;
        android.view.Display $r5;
        java.lang.Throwable $r6;

        $r2 = <com.android.server.audio.RotationHelper: android.content.Context sContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("window");

        $r4 = (android.view.WindowManager) $r3;

        $r5 = interfaceinvoke $r4.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        i0 = virtualinvoke $r5.<android.view.Display: int getRotation()>();

        r0 = <com.android.server.audio.RotationHelper: java.lang.Object sRotationLock>;

        entermonitor r0;

     label1:
        $i1 = <com.android.server.audio.RotationHelper: int sDeviceRotation>;

        if i0 == $i1 goto label2;

        <com.android.server.audio.RotationHelper: int sDeviceRotation> = i0;

        staticinvoke <com.android.server.audio.RotationHelper: void publishRotation(int)>(i0);

     label2:
        exitmonitor r0;

     label3:
        return;

     label4:
        $r6 := @caughtexception;

     label5:
        exitmonitor r0;

     label6:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }
}
