class com.android.server.audio.SoundEffectsHelper extends java.lang.Object
{
    private static final java.lang.String ASSET_FILE_VERSION;
    private static final java.lang.String ATTR_ASSET_FILE;
    private static final java.lang.String ATTR_ASSET_ID;
    private static final java.lang.String ATTR_GROUP_NAME;
    private static final java.lang.String ATTR_VERSION;
    private static final int EFFECT_NOT_IN_SOUND_POOL;
    private static final java.lang.String GROUP_TOUCH_SOUNDS;
    private static final int MSG_LOAD_EFFECTS;
    private static final int MSG_LOAD_EFFECTS_TIMEOUT;
    private static final int MSG_PLAY_EFFECT;
    private static final int MSG_UNLOAD_EFFECTS;
    private static final int NUM_SOUNDPOOL_CHANNELS;
    private static final int SOUND_EFFECTS_LOAD_TIMEOUT_MS;
    private static final java.lang.String SOUND_EFFECTS_PATH;
    private static final java.lang.String TAG;
    private static final java.lang.String TAG_ASSET;
    private static final java.lang.String TAG_AUDIO_ASSETS;
    private static final java.lang.String TAG_GROUP;
    private final android.content.Context mContext;
    private final int[] mEffects;
    private final java.util.List mResources;
    private final int mSfxAttenuationDb;
    private com.android.server.audio.SoundEffectsHelper$SfxHandler mSfxHandler;
    private final com.android.server.audio.AudioEventLogger mSfxLogger;
    private com.android.server.audio.SoundEffectsHelper$SfxWorker mSfxWorker;
    private android.media.SoundPool mSoundPool;
    private com.android.server.audio.SoundEffectsHelper$SoundPoolLoader mSoundPoolLoader;

    void <init>(android.content.Context)
    {
        com.android.server.audio.SoundEffectsHelper r0;
        android.content.Context r1;
        com.android.server.audio.AudioEventLogger $r2;
        java.util.ArrayList $r3;
        int[] $r4;
        android.content.res.Resources $r5;
        int $i0;

        r0 := @this: com.android.server.audio.SoundEffectsHelper;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new com.android.server.audio.AudioEventLogger;

        specialinvoke $r2.<com.android.server.audio.AudioEventLogger: void <init>(int,java.lang.String)>(20, "Sound Effects Loading");

        r0.<com.android.server.audio.SoundEffectsHelper: com.android.server.audio.AudioEventLogger mSfxLogger> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.audio.SoundEffectsHelper: java.util.List mResources> = $r3;

        $r4 = newarray (int)[10];

        r0.<com.android.server.audio.SoundEffectsHelper: int[] mEffects> = $r4;

        r0.<com.android.server.audio.SoundEffectsHelper: android.content.Context mContext> = r1;

        $r5 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $i0 = virtualinvoke $r5.<android.content.res.Resources: int getInteger(int)>(17694904);

        r0.<com.android.server.audio.SoundEffectsHelper: int mSfxAttenuationDb> = $i0;

        specialinvoke r0.<com.android.server.audio.SoundEffectsHelper: void startWorker()>();

        return;
    }

    static com.android.server.audio.SoundEffectsHelper$SoundPoolLoader access$000(com.android.server.audio.SoundEffectsHelper)
    {
        com.android.server.audio.SoundEffectsHelper r0;
        com.android.server.audio.SoundEffectsHelper$SoundPoolLoader $r1;

        r0 := @parameter0: com.android.server.audio.SoundEffectsHelper;

        $r1 = r0.<com.android.server.audio.SoundEffectsHelper: com.android.server.audio.SoundEffectsHelper$SoundPoolLoader mSoundPoolLoader>;

        return $r1;
    }

    static com.android.server.audio.SoundEffectsHelper$SoundPoolLoader access$002(com.android.server.audio.SoundEffectsHelper, com.android.server.audio.SoundEffectsHelper$SoundPoolLoader)
    {
        com.android.server.audio.SoundEffectsHelper r0;
        com.android.server.audio.SoundEffectsHelper$SoundPoolLoader r1;

        r0 := @parameter0: com.android.server.audio.SoundEffectsHelper;

        r1 := @parameter1: com.android.server.audio.SoundEffectsHelper$SoundPoolLoader;

        r0.<com.android.server.audio.SoundEffectsHelper: com.android.server.audio.SoundEffectsHelper$SoundPoolLoader mSoundPoolLoader> = r1;

        return r1;
    }

    static void access$100(android.media.MediaPlayer)
    {
        android.media.MediaPlayer r0;

        r0 := @parameter0: android.media.MediaPlayer;

        staticinvoke <com.android.server.audio.SoundEffectsHelper: void cleanupPlayer(android.media.MediaPlayer)>(r0);

        return;
    }

    static com.android.server.audio.SoundEffectsHelper$SfxHandler access$202(com.android.server.audio.SoundEffectsHelper, com.android.server.audio.SoundEffectsHelper$SfxHandler)
    {
        com.android.server.audio.SoundEffectsHelper r0;
        com.android.server.audio.SoundEffectsHelper$SfxHandler r1;

        r0 := @parameter0: com.android.server.audio.SoundEffectsHelper;

        r1 := @parameter1: com.android.server.audio.SoundEffectsHelper$SfxHandler;

        r0.<com.android.server.audio.SoundEffectsHelper: com.android.server.audio.SoundEffectsHelper$SfxHandler mSfxHandler> = r1;

        return r1;
    }

    static void access$400(com.android.server.audio.SoundEffectsHelper, com.android.server.audio.SoundEffectsHelper$OnEffectsLoadCompleteHandler)
    {
        com.android.server.audio.SoundEffectsHelper r0;
        com.android.server.audio.SoundEffectsHelper$OnEffectsLoadCompleteHandler r1;

        r0 := @parameter0: com.android.server.audio.SoundEffectsHelper;

        r1 := @parameter1: com.android.server.audio.SoundEffectsHelper$OnEffectsLoadCompleteHandler;

        specialinvoke r0.<com.android.server.audio.SoundEffectsHelper: void onLoadSoundEffects(com.android.server.audio.SoundEffectsHelper$OnEffectsLoadCompleteHandler)>(r1);

        return;
    }

    static android.media.SoundPool access$500(com.android.server.audio.SoundEffectsHelper)
    {
        com.android.server.audio.SoundEffectsHelper r0;
        android.media.SoundPool $r1;

        r0 := @parameter0: com.android.server.audio.SoundEffectsHelper;

        $r1 = r0.<com.android.server.audio.SoundEffectsHelper: android.media.SoundPool mSoundPool>;

        return $r1;
    }

    static java.util.List access$600(com.android.server.audio.SoundEffectsHelper)
    {
        com.android.server.audio.SoundEffectsHelper r0;
        java.util.List $r1;

        r0 := @parameter0: com.android.server.audio.SoundEffectsHelper;

        $r1 = r0.<com.android.server.audio.SoundEffectsHelper: java.util.List mResources>;

        return $r1;
    }

    static void access$700(com.android.server.audio.SoundEffectsHelper, java.lang.String)
    {
        com.android.server.audio.SoundEffectsHelper r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.server.audio.SoundEffectsHelper;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<com.android.server.audio.SoundEffectsHelper: void logEvent(java.lang.String)>(r1);

        return;
    }

    static com.android.server.audio.SoundEffectsHelper$Resource access$800(com.android.server.audio.SoundEffectsHelper, int)
    {
        com.android.server.audio.SoundEffectsHelper r0;
        int i0;
        com.android.server.audio.SoundEffectsHelper$Resource $r1;

        r0 := @parameter0: com.android.server.audio.SoundEffectsHelper;

        i0 := @parameter1: int;

        $r1 = specialinvoke r0.<com.android.server.audio.SoundEffectsHelper: com.android.server.audio.SoundEffectsHelper$Resource findResourceBySampleId(int)>(i0);

        return $r1;
    }

    static java.lang.String access$900(com.android.server.audio.SoundEffectsHelper, com.android.server.audio.SoundEffectsHelper$Resource)
    {
        com.android.server.audio.SoundEffectsHelper r0;
        com.android.server.audio.SoundEffectsHelper$Resource r1;
        java.lang.String $r2;

        r0 := @parameter0: com.android.server.audio.SoundEffectsHelper;

        r1 := @parameter1: com.android.server.audio.SoundEffectsHelper$Resource;

        $r2 = specialinvoke r0.<com.android.server.audio.SoundEffectsHelper: java.lang.String getResourceFilePath(com.android.server.audio.SoundEffectsHelper$Resource)>(r1);

        return $r2;
    }

    private static void cleanupPlayer(android.media.MediaPlayer)
    {
        java.lang.Throwable $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r5;
        android.media.MediaPlayer r6;

        r6 := @parameter0: android.media.MediaPlayer;

        if r6 == null goto label4;

     label1:
        virtualinvoke r6.<android.media.MediaPlayer: void stop()>();

        virtualinvoke r6.<android.media.MediaPlayer: void release()>();

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MediaPlayer IllegalStateException: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("AS.SfxHelper", $r5);

     label4:
        return;

        catch java.lang.IllegalStateException from label1 to label2 with label3;
    }

    private int findOrAddResourceByFileName(java.lang.String)
    {
        com.android.server.audio.SoundEffectsHelper r0;
        java.lang.String r1, $r9;
        java.util.List $r2, $r3, $r5, $r6;
        int $i0, i1, i2;
        com.android.server.audio.SoundEffectsHelper$Resource $r4, $r8;
        java.lang.Object $r7;
        boolean $z1;

        r0 := @this: com.android.server.audio.SoundEffectsHelper;

        r1 := @parameter0: java.lang.String;

        i1 = 0;

     label1:
        $r2 = r0.<com.android.server.audio.SoundEffectsHelper: java.util.List mResources>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if i1 >= $i0 goto label3;

        $r6 = r0.<com.android.server.audio.SoundEffectsHelper: java.util.List mResources>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i1);

        $r8 = (com.android.server.audio.SoundEffectsHelper$Resource) $r7;

        $r9 = $r8.<com.android.server.audio.SoundEffectsHelper$Resource: java.lang.String mFileName>;

        $z1 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label2;

        return i1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r3 = r0.<com.android.server.audio.SoundEffectsHelper: java.util.List mResources>;

        i2 = interfaceinvoke $r3.<java.util.List: int size()>();

        $r5 = r0.<com.android.server.audio.SoundEffectsHelper: java.util.List mResources>;

        $r4 = new com.android.server.audio.SoundEffectsHelper$Resource;

        specialinvoke $r4.<com.android.server.audio.SoundEffectsHelper$Resource: void <init>(java.lang.String)>(r1);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r4);

        return i2;
    }

    private com.android.server.audio.SoundEffectsHelper$Resource findResourceBySampleId(int)
    {
        com.android.server.audio.SoundEffectsHelper r0;
        int i0, $i1;
        java.util.Iterator r1;
        com.android.server.audio.SoundEffectsHelper$Resource r2;
        java.util.List $r3;
        boolean $z0;
        java.lang.Object $r4;

        r0 := @this: com.android.server.audio.SoundEffectsHelper;

        i0 := @parameter0: int;

        $r3 = r0.<com.android.server.audio.SoundEffectsHelper: java.util.List mResources>;

        r1 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.android.server.audio.SoundEffectsHelper$Resource) $r4;

        $i1 = r2.<com.android.server.audio.SoundEffectsHelper$Resource: int mSampleId>;

        if $i1 != i0 goto label2;

        return r2;

     label2:
        goto label1;

     label3:
        return null;
    }

    private java.lang.String getResourceFilePath(com.android.server.audio.SoundEffectsHelper$Resource)
    {
        com.android.server.audio.SoundEffectsHelper r0;
        com.android.server.audio.SoundEffectsHelper$Resource r1;
        java.lang.String r2, $r7, $r14, r17;
        java.lang.StringBuilder $r3, $r10;
        java.io.File $r4, $r9, $r11;
        boolean $z0;

        r0 := @this: com.android.server.audio.SoundEffectsHelper;

        r1 := @parameter0: com.android.server.audio.SoundEffectsHelper$Resource;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = staticinvoke <android.os.Environment: java.io.File getProductDirectory()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/media/audio/ui/");

        $r7 = r1.<com.android.server.audio.SoundEffectsHelper$Resource: java.lang.String mFileName>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        r17 = r2;

        $r9 = new java.io.File;

        specialinvoke $r9.<java.io.File: void <init>(java.lang.String)>(r2);

        $z0 = virtualinvoke $r9.<java.io.File: boolean isFile()>();

        if $z0 != 0 goto label1;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = staticinvoke <android.os.Environment: java.io.File getRootDirectory()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/media/audio/ui/");

        $r14 = r1.<com.android.server.audio.SoundEffectsHelper$Resource: java.lang.String mFileName>;

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        r17 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        return r17;
    }

    private void loadTouchSoundAssetDefaults()
    {
        com.android.server.audio.SoundEffectsHelper r0;
        int i0, $i1, i2;
        int[] r1;
        java.util.List $r2, $r4;
        com.android.server.audio.SoundEffectsHelper$Resource $r3;

        r0 := @this: com.android.server.audio.SoundEffectsHelper;

        $r2 = r0.<com.android.server.audio.SoundEffectsHelper: java.util.List mResources>;

        i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        $r4 = r0.<com.android.server.audio.SoundEffectsHelper: java.util.List mResources>;

        $r3 = new com.android.server.audio.SoundEffectsHelper$Resource;

        specialinvoke $r3.<com.android.server.audio.SoundEffectsHelper$Resource: void <init>(java.lang.String)>("Effect_Tick.ogg");

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r3);

        i2 = 0;

     label1:
        r1 = r0.<com.android.server.audio.SoundEffectsHelper: int[] mEffects>;

        $i1 = lengthof r1;

        if i2 >= $i1 goto label2;

        r1[i2] = i0;

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    private void loadTouchSoundAssets()
    {
        com.android.server.audio.SoundEffectsHelper r0;
        int i0, $i1;
        java.util.List $r1;
        boolean $z0, $z1, $z2, $z3, $z4, z5;
        android.content.Context $r2;
        android.content.res.Resources $r3;
        java.lang.String $r4, $r5, $r6, $r13, r23, r24, r25, r26, r27;
        java.lang.Class $r7;
        java.lang.reflect.Field $r8;
        int[] $r9;
        java.lang.Exception $r10;
        java.lang.Throwable $r14, $r15, $r17;
        android.content.res.Resources$NotFoundException $r16;
        android.content.res.XmlResourceParser r18, r19, r20, r21, r22;
        java.lang.StringBuilder r29;

        r0 := @this: com.android.server.audio.SoundEffectsHelper;

        r18 = null;

        r19 = null;

        r20 = null;

        r21 = null;

        $r1 = r0.<com.android.server.audio.SoundEffectsHelper: java.util.List mResources>;

        $z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label01;

        return;

     label01:
        specialinvoke r0.<com.android.server.audio.SoundEffectsHelper: void loadTouchSoundAssetDefaults()>();

     label02:
        $r2 = r0.<com.android.server.audio.SoundEffectsHelper: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.res.Resources getResources()>();

        r22 = virtualinvoke $r3.<android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>(18284545);

     label03:
        r21 = r22;

        r18 = r22;

        r19 = r22;

        r20 = r22;

     label04:
        staticinvoke <com.android.internal.util.XmlUtils: void beginDocument(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r22, "audio_assets");

     label05:
        r21 = r22;

        r18 = r22;

        r19 = r22;

        r20 = r22;

     label06:
        r23 = interfaceinvoke r22.<android.content.res.XmlResourceParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "version");

     label07:
        z5 = 0;

        r21 = r22;

        r18 = r22;

        r19 = r22;

        r20 = r22;

     label08:
        $r4 = "1.0";

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r23);

        if $z1 == 0 goto label47;

     label09:
        r21 = r22;

        r18 = r22;

        r19 = r22;

        r20 = r22;

     label10:
        staticinvoke <com.android.internal.util.XmlUtils: void nextElement(org.xmlpull.v1.XmlPullParser)>(r22);

     label11:
        r21 = r22;

        r18 = r22;

        r19 = r22;

        r20 = r22;

     label12:
        r24 = interfaceinvoke r22.<android.content.res.XmlResourceParser: java.lang.String getName()>();

     label13:
        if r24 != null goto label14;

        goto label19;

     label14:
        r21 = r22;

        r18 = r22;

        r19 = r22;

        r20 = r22;

     label15:
        $z2 = virtualinvoke r24.<java.lang.String: boolean equals(java.lang.Object)>("group");

        if $z2 == 0 goto label46;

     label16:
        r21 = r22;

        r18 = r22;

        r19 = r22;

        r20 = r22;

     label17:
        $r5 = "touch_sounds";

        $r6 = interfaceinvoke r22.<android.content.res.XmlResourceParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

        $z3 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z3 == 0 goto label46;

     label18:
        z5 = 1;

     label19:
        if z5 == 0 goto label47;

        r21 = r22;

        r18 = r22;

        r19 = r22;

        r20 = r22;

     label20:
        staticinvoke <com.android.internal.util.XmlUtils: void nextElement(org.xmlpull.v1.XmlPullParser)>(r22);

     label21:
        r21 = r22;

        r18 = r22;

        r19 = r22;

        r20 = r22;

     label22:
        r25 = interfaceinvoke r22.<android.content.res.XmlResourceParser: java.lang.String getName()>();

     label23:
        if r25 != null goto label24;

        goto label47;

     label24:
        r21 = r22;

        r18 = r22;

        r19 = r22;

        r20 = r22;

     label25:
        $z4 = virtualinvoke r25.<java.lang.String: boolean equals(java.lang.Object)>("asset");

        if $z4 == 0 goto label47;

     label26:
        r21 = r22;

        r18 = r22;

        r19 = r22;

        r20 = r22;

     label27:
        r26 = interfaceinvoke r22.<android.content.res.XmlResourceParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "id");

     label28:
        r21 = r22;

        r18 = r22;

        r19 = r22;

        r20 = r22;

     label29:
        r27 = interfaceinvoke r22.<android.content.res.XmlResourceParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "file");

     label30:
        r21 = r22;

        r18 = r22;

        r19 = r22;

        r20 = r22;

     label31:
        $r7 = class "Landroid/media/AudioManager;";

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>(r26);

        i0 = virtualinvoke $r8.<java.lang.reflect.Field: int getInt(java.lang.Object)>(null);

     label32:
        r21 = r22;

        r18 = r22;

        r19 = r22;

        r20 = r22;

     label33:
        $r9 = r0.<com.android.server.audio.SoundEffectsHelper: int[] mEffects>;

        $i1 = specialinvoke r0.<com.android.server.audio.SoundEffectsHelper: int findOrAddResourceByFileName(java.lang.String)>(r27);

        $r9[i0] = $i1;

     label34:
        goto label19;

     label35:
        $r10 := @caughtexception;

        r21 = r22;

        r18 = r22;

        r19 = r22;

        r20 = r22;

     label36:
        r29 = new java.lang.StringBuilder;

     label37:
        r21 = r22;

        r18 = r22;

        r19 = r22;

        r20 = r22;

     label38:
        specialinvoke r29.<java.lang.StringBuilder: void <init>()>();

     label39:
        r21 = r22;

        r18 = r22;

        r19 = r22;

        r20 = r22;

     label40:
        virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid touch sound ID: ");

     label41:
        r21 = r22;

        r18 = r22;

        r19 = r22;

        r20 = r22;

     label42:
        virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r26);

     label43:
        r21 = r22;

        r18 = r22;

        r19 = r22;

        r20 = r22;

     label44:
        $r13 = virtualinvoke r29.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("AS.SfxHelper", $r13);

     label45:
        goto label19;

     label46:
        goto label09;

     label47:
        if r22 == null goto label59;

     label48:
        interfaceinvoke r22.<android.content.res.XmlResourceParser: void close()>();

        goto label59;

     label49:
        $r15 := @caughtexception;

        goto label60;

     label50:
        $r17 := @caughtexception;

        r21 = r18;

     label51:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("AS.SfxHelper", "I/O exception reading touch sound assets", $r17);

     label52:
        if r18 == null goto label59;

        r22 = r18;

        goto label48;

     label53:
        $r14 := @caughtexception;

        r21 = r19;

     label54:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("AS.SfxHelper", "XML parser exception reading touch sound assets", $r14);

     label55:
        if r19 == null goto label59;

        r22 = r19;

        goto label48;

     label56:
        $r16 := @caughtexception;

        r21 = r20;

     label57:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("AS.SfxHelper", "audio assets file not found", $r16);

     label58:
        if r20 == null goto label59;

        r22 = r20;

        goto label48;

     label59:
        return;

     label60:
        if r21 == null goto label61;

        interfaceinvoke r21.<android.content.res.XmlResourceParser: void close()>();

     label61:
        throw $r15;

        catch android.content.res.Resources$NotFoundException from label02 to label03 with label56;
        catch org.xmlpull.v1.XmlPullParserException from label02 to label03 with label53;
        catch java.io.IOException from label02 to label03 with label50;
        catch java.lang.Throwable from label02 to label03 with label49;
        catch android.content.res.Resources$NotFoundException from label04 to label05 with label56;
        catch org.xmlpull.v1.XmlPullParserException from label04 to label05 with label53;
        catch java.io.IOException from label04 to label05 with label50;
        catch java.lang.Throwable from label04 to label05 with label49;
        catch android.content.res.Resources$NotFoundException from label06 to label07 with label56;
        catch org.xmlpull.v1.XmlPullParserException from label06 to label07 with label53;
        catch java.io.IOException from label06 to label07 with label50;
        catch java.lang.Throwable from label06 to label07 with label49;
        catch android.content.res.Resources$NotFoundException from label08 to label09 with label56;
        catch org.xmlpull.v1.XmlPullParserException from label08 to label09 with label53;
        catch java.io.IOException from label08 to label09 with label50;
        catch java.lang.Throwable from label08 to label09 with label49;
        catch android.content.res.Resources$NotFoundException from label10 to label11 with label56;
        catch org.xmlpull.v1.XmlPullParserException from label10 to label11 with label53;
        catch java.io.IOException from label10 to label11 with label50;
        catch java.lang.Throwable from label10 to label11 with label49;
        catch android.content.res.Resources$NotFoundException from label12 to label13 with label56;
        catch org.xmlpull.v1.XmlPullParserException from label12 to label13 with label53;
        catch java.io.IOException from label12 to label13 with label50;
        catch java.lang.Throwable from label12 to label13 with label49;
        catch android.content.res.Resources$NotFoundException from label15 to label16 with label56;
        catch org.xmlpull.v1.XmlPullParserException from label15 to label16 with label53;
        catch java.io.IOException from label15 to label16 with label50;
        catch java.lang.Throwable from label15 to label16 with label49;
        catch android.content.res.Resources$NotFoundException from label17 to label18 with label56;
        catch org.xmlpull.v1.XmlPullParserException from label17 to label18 with label53;
        catch java.io.IOException from label17 to label18 with label50;
        catch java.lang.Throwable from label17 to label18 with label49;
        catch android.content.res.Resources$NotFoundException from label20 to label21 with label56;
        catch org.xmlpull.v1.XmlPullParserException from label20 to label21 with label53;
        catch java.io.IOException from label20 to label21 with label50;
        catch java.lang.Throwable from label20 to label21 with label49;
        catch android.content.res.Resources$NotFoundException from label22 to label23 with label56;
        catch org.xmlpull.v1.XmlPullParserException from label22 to label23 with label53;
        catch java.io.IOException from label22 to label23 with label50;
        catch java.lang.Throwable from label22 to label23 with label49;
        catch android.content.res.Resources$NotFoundException from label25 to label26 with label56;
        catch org.xmlpull.v1.XmlPullParserException from label25 to label26 with label53;
        catch java.io.IOException from label25 to label26 with label50;
        catch java.lang.Throwable from label25 to label26 with label49;
        catch android.content.res.Resources$NotFoundException from label27 to label28 with label56;
        catch org.xmlpull.v1.XmlPullParserException from label27 to label28 with label53;
        catch java.io.IOException from label27 to label28 with label50;
        catch java.lang.Throwable from label27 to label28 with label49;
        catch android.content.res.Resources$NotFoundException from label29 to label30 with label56;
        catch org.xmlpull.v1.XmlPullParserException from label29 to label30 with label53;
        catch java.io.IOException from label29 to label30 with label50;
        catch java.lang.Throwable from label29 to label30 with label49;
        catch java.lang.Exception from label31 to label32 with label35;
        catch android.content.res.Resources$NotFoundException from label31 to label32 with label56;
        catch org.xmlpull.v1.XmlPullParserException from label31 to label32 with label53;
        catch java.io.IOException from label31 to label32 with label50;
        catch java.lang.Throwable from label31 to label32 with label49;
        catch android.content.res.Resources$NotFoundException from label33 to label34 with label56;
        catch org.xmlpull.v1.XmlPullParserException from label33 to label34 with label53;
        catch java.io.IOException from label33 to label34 with label50;
        catch java.lang.Throwable from label33 to label34 with label49;
        catch android.content.res.Resources$NotFoundException from label36 to label37 with label56;
        catch org.xmlpull.v1.XmlPullParserException from label36 to label37 with label53;
        catch java.io.IOException from label36 to label37 with label50;
        catch java.lang.Throwable from label36 to label37 with label49;
        catch android.content.res.Resources$NotFoundException from label38 to label39 with label56;
        catch org.xmlpull.v1.XmlPullParserException from label38 to label39 with label53;
        catch java.io.IOException from label38 to label39 with label50;
        catch java.lang.Throwable from label38 to label39 with label49;
        catch android.content.res.Resources$NotFoundException from label40 to label41 with label56;
        catch org.xmlpull.v1.XmlPullParserException from label40 to label41 with label53;
        catch java.io.IOException from label40 to label41 with label50;
        catch java.lang.Throwable from label40 to label41 with label49;
        catch android.content.res.Resources$NotFoundException from label42 to label43 with label56;
        catch org.xmlpull.v1.XmlPullParserException from label42 to label43 with label53;
        catch java.io.IOException from label42 to label43 with label50;
        catch java.lang.Throwable from label42 to label43 with label49;
        catch android.content.res.Resources$NotFoundException from label44 to label45 with label56;
        catch org.xmlpull.v1.XmlPullParserException from label44 to label45 with label53;
        catch java.io.IOException from label44 to label45 with label50;
        catch java.lang.Throwable from label44 to label45 with label49;
        catch java.lang.Throwable from label51 to label52 with label49;
        catch java.lang.Throwable from label54 to label55 with label49;
        catch java.lang.Throwable from label57 to label58 with label49;
    }

    private void logEvent(java.lang.String)
    {
        com.android.server.audio.SoundEffectsHelper r0;
        java.lang.String r1;
        com.android.server.audio.AudioEventLogger$StringEvent $r2;
        com.android.server.audio.AudioEventLogger $r3;

        r0 := @this: com.android.server.audio.SoundEffectsHelper;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<com.android.server.audio.SoundEffectsHelper: com.android.server.audio.AudioEventLogger mSfxLogger>;

        $r2 = new com.android.server.audio.AudioEventLogger$StringEvent;

        specialinvoke $r2.<com.android.server.audio.AudioEventLogger$StringEvent: void <init>(java.lang.String)>(r1);

        virtualinvoke $r3.<com.android.server.audio.AudioEventLogger: void log(com.android.server.audio.AudioEventLogger$Event)>($r2);

        return;
    }

    private void onLoadSoundEffects(com.android.server.audio.SoundEffectsHelper$OnEffectsLoadCompleteHandler)
    {
        com.android.server.audio.SoundEffectsHelper r0;
        int i0, i2;
        android.media.SoundPool $r1, $r9, $r16;
        android.media.SoundPool$Builder $r2, $r3, $r8;
        android.media.AudioAttributes$Builder $r4, $r5, $r6;
        android.media.AudioAttributes $r7;
        com.android.server.audio.SoundEffectsHelper$SoundPoolLoader $r10, $r12, $r14, r27;
        com.android.server.audio.SoundEffectsHelper$1 $r11;
        java.util.List $r13;
        boolean $z0;
        java.lang.Object $r15;
        java.lang.StringBuilder $r17, $r22;
        java.lang.String $r21, $r25, r31;
        com.android.server.audio.SoundEffectsHelper$OnEffectsLoadCompleteHandler r26;
        java.util.Iterator r29;
        com.android.server.audio.SoundEffectsHelper$Resource r30;

        r0 := @this: com.android.server.audio.SoundEffectsHelper;

        r26 := @parameter0: com.android.server.audio.SoundEffectsHelper$OnEffectsLoadCompleteHandler;

        r27 = r0.<com.android.server.audio.SoundEffectsHelper: com.android.server.audio.SoundEffectsHelper$SoundPoolLoader mSoundPoolLoader>;

        if r27 == null goto label1;

        virtualinvoke r27.<com.android.server.audio.SoundEffectsHelper$SoundPoolLoader: void addHandler(com.android.server.audio.SoundEffectsHelper$OnEffectsLoadCompleteHandler)>(r26);

        return;

     label1:
        $r1 = r0.<com.android.server.audio.SoundEffectsHelper: android.media.SoundPool mSoundPool>;

        if $r1 == null goto label3;

        if r26 == null goto label2;

        interfaceinvoke r26.<com.android.server.audio.SoundEffectsHelper$OnEffectsLoadCompleteHandler: void run(boolean)>(1);

     label2:
        return;

     label3:
        specialinvoke r0.<com.android.server.audio.SoundEffectsHelper: void logEvent(java.lang.String)>("effects loading started");

        $r2 = new android.media.SoundPool$Builder;

        specialinvoke $r2.<android.media.SoundPool$Builder: void <init>()>();

        $r3 = virtualinvoke $r2.<android.media.SoundPool$Builder: android.media.SoundPool$Builder setMaxStreams(int)>(4);

        $r4 = new android.media.AudioAttributes$Builder;

        specialinvoke $r4.<android.media.AudioAttributes$Builder: void <init>()>();

        $r5 = virtualinvoke $r4.<android.media.AudioAttributes$Builder: android.media.AudioAttributes$Builder setUsage(int)>(13);

        $r6 = virtualinvoke $r5.<android.media.AudioAttributes$Builder: android.media.AudioAttributes$Builder setContentType(int)>(4);

        $r7 = virtualinvoke $r6.<android.media.AudioAttributes$Builder: android.media.AudioAttributes build()>();

        $r8 = virtualinvoke $r3.<android.media.SoundPool$Builder: android.media.SoundPool$Builder setAudioAttributes(android.media.AudioAttributes)>($r7);

        $r9 = virtualinvoke $r8.<android.media.SoundPool$Builder: android.media.SoundPool build()>();

        r0.<com.android.server.audio.SoundEffectsHelper: android.media.SoundPool mSoundPool> = $r9;

        specialinvoke r0.<com.android.server.audio.SoundEffectsHelper: void loadTouchSoundAssets()>();

        $r10 = new com.android.server.audio.SoundEffectsHelper$SoundPoolLoader;

        specialinvoke $r10.<com.android.server.audio.SoundEffectsHelper$SoundPoolLoader: void <init>(com.android.server.audio.SoundEffectsHelper)>(r0);

        r0.<com.android.server.audio.SoundEffectsHelper: com.android.server.audio.SoundEffectsHelper$SoundPoolLoader mSoundPoolLoader> = $r10;

        $r11 = new com.android.server.audio.SoundEffectsHelper$1;

        specialinvoke $r11.<com.android.server.audio.SoundEffectsHelper$1: void <init>(com.android.server.audio.SoundEffectsHelper)>(r0);

        virtualinvoke $r10.<com.android.server.audio.SoundEffectsHelper$SoundPoolLoader: void addHandler(com.android.server.audio.SoundEffectsHelper$OnEffectsLoadCompleteHandler)>($r11);

        $r12 = r0.<com.android.server.audio.SoundEffectsHelper: com.android.server.audio.SoundEffectsHelper$SoundPoolLoader mSoundPoolLoader>;

        virtualinvoke $r12.<com.android.server.audio.SoundEffectsHelper$SoundPoolLoader: void addHandler(com.android.server.audio.SoundEffectsHelper$OnEffectsLoadCompleteHandler)>(r26);

        i2 = 0;

        $r13 = r0.<com.android.server.audio.SoundEffectsHelper: java.util.List mResources>;

        r29 = interfaceinvoke $r13.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z0 = interfaceinvoke r29.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r15 = interfaceinvoke r29.<java.util.Iterator: java.lang.Object next()>();

        r30 = (com.android.server.audio.SoundEffectsHelper$Resource) $r15;

        r31 = specialinvoke r0.<com.android.server.audio.SoundEffectsHelper: java.lang.String getResourceFilePath(com.android.server.audio.SoundEffectsHelper$Resource)>(r30);

        $r16 = r0.<com.android.server.audio.SoundEffectsHelper: android.media.SoundPool mSoundPool>;

        i0 = virtualinvoke $r16.<android.media.SoundPool: int load(java.lang.String,int)>(r31, 0);

        if i0 <= 0 goto label5;

        r30.<com.android.server.audio.SoundEffectsHelper$Resource: int mSampleId> = i0;

        r30.<com.android.server.audio.SoundEffectsHelper$Resource: boolean mLoaded> = 0;

        i2 = i2 + 1;

        goto label6;

     label5:
        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("effect ");

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r31);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" rejected by SoundPool");

        $r21 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.audio.SoundEffectsHelper: void logEvent(java.lang.String)>($r21);

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SoundPool could not load file: ");

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r31);

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("AS.SfxHelper", $r25);

     label6:
        goto label4;

     label7:
        if i2 <= 0 goto label8;

        specialinvoke r0.<com.android.server.audio.SoundEffectsHelper: void sendMsg(int,int,int,java.lang.Object,int)>(3, 0, 0, null, 15000);

        goto label9;

     label8:
        specialinvoke r0.<com.android.server.audio.SoundEffectsHelper: void logEvent(java.lang.String)>("effects loading completed, no effects to load");

        $r14 = r0.<com.android.server.audio.SoundEffectsHelper: com.android.server.audio.SoundEffectsHelper$SoundPoolLoader mSoundPoolLoader>;

        virtualinvoke $r14.<com.android.server.audio.SoundEffectsHelper$SoundPoolLoader: void onComplete(boolean)>(1);

     label9:
        return;
    }

    private void sendMsg(int, int, int, java.lang.Object, int)
    {
        com.android.server.audio.SoundEffectsHelper r0;
        int i0, i1, i2, i3;
        java.lang.Object r1;
        com.android.server.audio.SoundEffectsHelper$SfxHandler r2;
        android.os.Message $r3;
        long $l4;

        r0 := @this: com.android.server.audio.SoundEffectsHelper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: java.lang.Object;

        i3 := @parameter4: int;

        r2 = r0.<com.android.server.audio.SoundEffectsHelper: com.android.server.audio.SoundEffectsHelper$SfxHandler mSfxHandler>;

        $r3 = virtualinvoke r2.<com.android.server.audio.SoundEffectsHelper$SfxHandler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(i0, i1, i2, r1);

        $l4 = (long) i3;

        virtualinvoke r2.<com.android.server.audio.SoundEffectsHelper$SfxHandler: boolean sendMessageDelayed(android.os.Message,long)>($r3, $l4);

        return;
    }

    private void startWorker()
    {
        com.android.server.audio.SoundEffectsHelper r0;
        com.android.server.audio.SoundEffectsHelper$SfxWorker $r1, $r5;
        java.lang.Throwable $r2, $r3;
        java.lang.String $r6, $r9;
        com.android.server.audio.SoundEffectsHelper$SfxHandler r11;
        java.lang.StringBuilder r13;

        r0 := @this: com.android.server.audio.SoundEffectsHelper;

        $r1 = new com.android.server.audio.SoundEffectsHelper$SfxWorker;

        specialinvoke $r1.<com.android.server.audio.SoundEffectsHelper$SfxWorker: void <init>(com.android.server.audio.SoundEffectsHelper)>(r0);

        r0.<com.android.server.audio.SoundEffectsHelper: com.android.server.audio.SoundEffectsHelper$SfxWorker mSfxWorker> = $r1;

        virtualinvoke $r1.<com.android.server.audio.SoundEffectsHelper$SfxWorker: void start()>();

        entermonitor r0;

     label01:
        r11 = r0.<com.android.server.audio.SoundEffectsHelper: com.android.server.audio.SoundEffectsHelper$SfxHandler mSfxHandler>;

     label02:
        if r11 != null goto label08;

     label03:
        virtualinvoke r0.<java.lang.Object: void wait()>();

     label04:
        goto label01;

     label05:
        $r3 := @caughtexception;

     label06:
        r13 = new java.lang.StringBuilder;

        specialinvoke r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Interrupted while waiting ");

        $r5 = r0.<com.android.server.audio.SoundEffectsHelper: com.android.server.audio.SoundEffectsHelper$SfxWorker mSfxWorker>;

        $r6 = virtualinvoke $r5.<com.android.server.audio.SoundEffectsHelper$SfxWorker: java.lang.String getName()>();

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to start");

        $r9 = virtualinvoke r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("AS.SfxHelper", $r9);

     label07:
        goto label01;

     label08:
        exitmonitor r0;

     label09:
        return;

     label10:
        $r2 := @caughtexception;

     label11:
        exitmonitor r0;

     label12:
        throw $r2;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.InterruptedException from label03 to label04 with label05;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    void dump(java.io.PrintWriter, java.lang.String)
    {
        com.android.server.audio.SoundEffectsHelper r0;
        java.io.PrintWriter r1;
        java.lang.String r2, $r7, $r12, $r17;
        com.android.server.audio.SoundEffectsHelper$SfxHandler $r3, $r19;
        java.lang.StringBuilder $r4, $r8, $r14;
        int $i0;
        com.android.server.audio.AudioEventLogger $r13;
        android.util.PrintWriterPrinter $r18;

        r0 := @this: com.android.server.audio.SoundEffectsHelper;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<com.android.server.audio.SoundEffectsHelper: com.android.server.audio.SoundEffectsHelper$SfxHandler mSfxHandler>;

        if $r3 == null goto label1;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Message handler (watch for unhandled messages):");

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r17);

        $r19 = r0.<com.android.server.audio.SoundEffectsHelper: com.android.server.audio.SoundEffectsHelper$SfxHandler mSfxHandler>;

        $r18 = new android.util.PrintWriterPrinter;

        specialinvoke $r18.<android.util.PrintWriterPrinter: void <init>(java.io.PrintWriter)>(r1);

        virtualinvoke $r19.<com.android.server.audio.SoundEffectsHelper$SfxHandler: void dump(android.util.Printer,java.lang.String)>($r18, "  ");

        goto label2;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Message handler is null");

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r7);

     label2:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Default attenuation (dB): ");

        $i0 = r0.<com.android.server.audio.SoundEffectsHelper: int mSfxAttenuationDb>;

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r12);

        $r13 = r0.<com.android.server.audio.SoundEffectsHelper: com.android.server.audio.AudioEventLogger mSfxLogger>;

        virtualinvoke $r13.<com.android.server.audio.AudioEventLogger: void dump(java.io.PrintWriter)>(r1);

        return;
    }

    void loadSoundEffects(com.android.server.audio.SoundEffectsHelper$OnEffectsLoadCompleteHandler)
    {
        com.android.server.audio.SoundEffectsHelper r0;
        com.android.server.audio.SoundEffectsHelper$OnEffectsLoadCompleteHandler r1;

        r0 := @this: com.android.server.audio.SoundEffectsHelper;

        r1 := @parameter0: com.android.server.audio.SoundEffectsHelper$OnEffectsLoadCompleteHandler;

        specialinvoke r0.<com.android.server.audio.SoundEffectsHelper: void sendMsg(int,int,int,java.lang.Object,int)>(0, 0, 0, r1, 0);

        return;
    }

    void onPlaySoundEffect(int, int)
    {
        com.android.server.audio.SoundEffectsHelper r0;
        int i0, i1, $i2, $i3, $i4, $i6;
        float $f0, $f1, $f2, f3;
        int[] $r1;
        java.util.List $r2;
        java.lang.Object $r3;
        android.media.SoundPool $r4, $r5;
        boolean $z0;
        double $d0, $d1;
        java.lang.Throwable $r6, $r11, $r16;
        java.lang.StringBuilder $r7, $r12, $r17;
        java.lang.String $r10, $r15, $r20, $r24;
        com.android.server.audio.SoundEffectsHelper$Resource r21;
        android.media.MediaPlayer $r22;
        com.android.server.audio.SoundEffectsHelper$3 r25;
        com.android.server.audio.SoundEffectsHelper$4 r26;

        r0 := @this: com.android.server.audio.SoundEffectsHelper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i1 >= 0 goto label1;

        $i6 = r0.<com.android.server.audio.SoundEffectsHelper: int mSfxAttenuationDb>;

        $f1 = (float) $i6;

        $f2 = $f1 / 20.0F;

        $d0 = (double) $f2;

        $d1 = staticinvoke <java.lang.Math: double pow(double,double)>(10.0, $d0);

        f3 = (float) $d1;

        goto label2;

     label1:
        $f0 = (float) i1;

        f3 = $f0 / 1000.0F;

     label2:
        $r2 = r0.<com.android.server.audio.SoundEffectsHelper: java.util.List mResources>;

        $r1 = r0.<com.android.server.audio.SoundEffectsHelper: int[] mEffects>;

        $i2 = $r1[i0];

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i2);

        r21 = (com.android.server.audio.SoundEffectsHelper$Resource) $r3;

        $r4 = r0.<com.android.server.audio.SoundEffectsHelper: android.media.SoundPool mSoundPool>;

        if $r4 == null goto label3;

        $i3 = r21.<com.android.server.audio.SoundEffectsHelper$Resource: int mSampleId>;

        if $i3 == 0 goto label3;

        $z0 = r21.<com.android.server.audio.SoundEffectsHelper$Resource: boolean mLoaded>;

        if $z0 == 0 goto label3;

        $r5 = r0.<com.android.server.audio.SoundEffectsHelper: android.media.SoundPool mSoundPool>;

        $i4 = r21.<com.android.server.audio.SoundEffectsHelper$Resource: int mSampleId>;

        virtualinvoke $r5.<android.media.SoundPool: int play(int,float,float,int,int,float)>($i4, f3, f3, 0, 0, 1.0F);

        goto label9;

     label3:
        $r22 = new android.media.MediaPlayer;

        specialinvoke $r22.<android.media.MediaPlayer: void <init>()>();

     label4:
        $r24 = specialinvoke r0.<com.android.server.audio.SoundEffectsHelper: java.lang.String getResourceFilePath(com.android.server.audio.SoundEffectsHelper$Resource)>(r21);

        virtualinvoke $r22.<android.media.MediaPlayer: void setDataSource(java.lang.String)>($r24);

        virtualinvoke $r22.<android.media.MediaPlayer: void setAudioStreamType(int)>(1);

        virtualinvoke $r22.<android.media.MediaPlayer: void prepare()>();

        virtualinvoke $r22.<android.media.MediaPlayer: void setVolume(float)>(f3);

        r25 = new com.android.server.audio.SoundEffectsHelper$3;

        specialinvoke r25.<com.android.server.audio.SoundEffectsHelper$3: void <init>(com.android.server.audio.SoundEffectsHelper)>(r0);

        virtualinvoke $r22.<android.media.MediaPlayer: void setOnCompletionListener(android.media.MediaPlayer$OnCompletionListener)>(r25);

        r26 = new com.android.server.audio.SoundEffectsHelper$4;

        specialinvoke r26.<com.android.server.audio.SoundEffectsHelper$4: void <init>(com.android.server.audio.SoundEffectsHelper)>(r0);

        virtualinvoke $r22.<android.media.MediaPlayer: void setOnErrorListener(android.media.MediaPlayer$OnErrorListener)>(r26);

        virtualinvoke $r22.<android.media.MediaPlayer: void start()>();

     label5:
        goto label9;

     label6:
        $r6 := @caughtexception;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MediaPlayer IllegalStateException: ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("AS.SfxHelper", $r10);

        goto label9;

     label7:
        $r16 := @caughtexception;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MediaPlayer IllegalArgumentException: ");

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("AS.SfxHelper", $r20);

        goto label9;

     label8:
        $r11 := @caughtexception;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MediaPlayer IOException: ");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("AS.SfxHelper", $r15);

     label9:
        return;

        catch java.io.IOException from label4 to label5 with label8;
        catch java.lang.IllegalArgumentException from label4 to label5 with label7;
        catch java.lang.IllegalStateException from label4 to label5 with label6;
    }

    void onUnloadSoundEffects()
    {
        com.android.server.audio.SoundEffectsHelper r0;
        java.util.Iterator r1;
        android.media.SoundPool $r2, $r4, $r6;
        java.util.List $r3;
        java.lang.Object $r5;
        int $i0, $i1;
        com.android.server.audio.SoundEffectsHelper$2 $r7;
        com.android.server.audio.SoundEffectsHelper$SoundPoolLoader r8;
        boolean $z1;
        com.android.server.audio.SoundEffectsHelper$Resource r9;

        r0 := @this: com.android.server.audio.SoundEffectsHelper;

        $r2 = r0.<com.android.server.audio.SoundEffectsHelper: android.media.SoundPool mSoundPool>;

        if $r2 != null goto label1;

        return;

     label1:
        r8 = r0.<com.android.server.audio.SoundEffectsHelper: com.android.server.audio.SoundEffectsHelper$SoundPoolLoader mSoundPoolLoader>;

        if r8 == null goto label2;

        $r7 = new com.android.server.audio.SoundEffectsHelper$2;

        specialinvoke $r7.<com.android.server.audio.SoundEffectsHelper$2: void <init>(com.android.server.audio.SoundEffectsHelper)>(r0);

        virtualinvoke r8.<com.android.server.audio.SoundEffectsHelper$SoundPoolLoader: void addHandler(com.android.server.audio.SoundEffectsHelper$OnEffectsLoadCompleteHandler)>($r7);

     label2:
        specialinvoke r0.<com.android.server.audio.SoundEffectsHelper: void logEvent(java.lang.String)>("effects unloading started");

        $r3 = r0.<com.android.server.audio.SoundEffectsHelper: java.util.List mResources>;

        r1 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r9 = (com.android.server.audio.SoundEffectsHelper$Resource) $r5;

        $i0 = r9.<com.android.server.audio.SoundEffectsHelper$Resource: int mSampleId>;

        if $i0 == 0 goto label4;

        $r6 = r0.<com.android.server.audio.SoundEffectsHelper: android.media.SoundPool mSoundPool>;

        $i1 = r9.<com.android.server.audio.SoundEffectsHelper$Resource: int mSampleId>;

        virtualinvoke $r6.<android.media.SoundPool: boolean unload(int)>($i1);

     label4:
        goto label3;

     label5:
        $r4 = r0.<com.android.server.audio.SoundEffectsHelper: android.media.SoundPool mSoundPool>;

        virtualinvoke $r4.<android.media.SoundPool: void release()>();

        r0.<com.android.server.audio.SoundEffectsHelper: android.media.SoundPool mSoundPool> = null;

        specialinvoke r0.<com.android.server.audio.SoundEffectsHelper: void logEvent(java.lang.String)>("effects unloading completed");

        return;
    }

    void playSoundEffect(int, int)
    {
        com.android.server.audio.SoundEffectsHelper r0;
        int i0, i1;

        r0 := @this: com.android.server.audio.SoundEffectsHelper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<com.android.server.audio.SoundEffectsHelper: void sendMsg(int,int,int,java.lang.Object,int)>(2, i0, i1, null, 0);

        return;
    }

    void unloadSoundEffects()
    {
        com.android.server.audio.SoundEffectsHelper r0;

        r0 := @this: com.android.server.audio.SoundEffectsHelper;

        specialinvoke r0.<com.android.server.audio.SoundEffectsHelper: void sendMsg(int,int,int,java.lang.Object,int)>(1, 0, 0, null, 0);

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.audio.SoundEffectsHelper: java.lang.String TAG_GROUP> = "group";

        <com.android.server.audio.SoundEffectsHelper: java.lang.String TAG_AUDIO_ASSETS> = "audio_assets";

        <com.android.server.audio.SoundEffectsHelper: java.lang.String TAG_ASSET> = "asset";

        <com.android.server.audio.SoundEffectsHelper: java.lang.String TAG> = "AS.SfxHelper";

        <com.android.server.audio.SoundEffectsHelper: java.lang.String SOUND_EFFECTS_PATH> = "/media/audio/ui/";

        <com.android.server.audio.SoundEffectsHelper: int SOUND_EFFECTS_LOAD_TIMEOUT_MS> = 15000;

        <com.android.server.audio.SoundEffectsHelper: int NUM_SOUNDPOOL_CHANNELS> = 4;

        <com.android.server.audio.SoundEffectsHelper: int MSG_UNLOAD_EFFECTS> = 1;

        <com.android.server.audio.SoundEffectsHelper: int MSG_PLAY_EFFECT> = 2;

        <com.android.server.audio.SoundEffectsHelper: int MSG_LOAD_EFFECTS_TIMEOUT> = 3;

        <com.android.server.audio.SoundEffectsHelper: int MSG_LOAD_EFFECTS> = 0;

        <com.android.server.audio.SoundEffectsHelper: java.lang.String GROUP_TOUCH_SOUNDS> = "touch_sounds";

        <com.android.server.audio.SoundEffectsHelper: int EFFECT_NOT_IN_SOUND_POOL> = 0;

        <com.android.server.audio.SoundEffectsHelper: java.lang.String ATTR_VERSION> = "version";

        <com.android.server.audio.SoundEffectsHelper: java.lang.String ATTR_GROUP_NAME> = "name";

        <com.android.server.audio.SoundEffectsHelper: java.lang.String ATTR_ASSET_ID> = "id";

        <com.android.server.audio.SoundEffectsHelper: java.lang.String ATTR_ASSET_FILE> = "file";

        <com.android.server.audio.SoundEffectsHelper: java.lang.String ASSET_FILE_VERSION> = "1.0";

        return;
    }
}
