final class com.android.server.autofill.AutofillManagerService$DisabledInfoCache extends java.lang.Object
{
    private final android.util.SparseArray mCache;
    private final java.lang.Object mLock;

    void <init>()
    {
        com.android.server.autofill.AutofillManagerService$DisabledInfoCache r0;
        java.lang.Object $r1;
        android.util.SparseArray $r2;

        r0 := @this: com.android.server.autofill.AutofillManagerService$DisabledInfoCache;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        r0.<com.android.server.autofill.AutofillManagerService$DisabledInfoCache: java.lang.Object mLock> = $r1;

        $r2 = new android.util.SparseArray;

        specialinvoke $r2.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.autofill.AutofillManagerService$DisabledInfoCache: android.util.SparseArray mCache> = $r2;

        return;
    }

    private com.android.server.autofill.AutofillManagerService$AutofillDisabledInfo getOrCreateAutofillDisabledInfoByUserIdLocked(int)
    {
        com.android.server.autofill.AutofillManagerService$DisabledInfoCache r0;
        int i0;
        com.android.server.autofill.AutofillManagerService$AutofillDisabledInfo r1, $r4, r6;
        android.util.SparseArray $r2, $r5;
        java.lang.Object $r3;

        r0 := @this: com.android.server.autofill.AutofillManagerService$DisabledInfoCache;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.autofill.AutofillManagerService$DisabledInfoCache: android.util.SparseArray mCache>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r1 = (com.android.server.autofill.AutofillManagerService$AutofillDisabledInfo) $r3;

        r6 = r1;

        if r1 != null goto label1;

        $r4 = new com.android.server.autofill.AutofillManagerService$AutofillDisabledInfo;

        specialinvoke $r4.<com.android.server.autofill.AutofillManagerService$AutofillDisabledInfo: void <init>(com.android.server.autofill.AutofillManagerService$1)>(null);

        r6 = $r4;

        $r5 = r0.<com.android.server.autofill.AutofillManagerService$DisabledInfoCache: android.util.SparseArray mCache>;

        virtualinvoke $r5.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, $r4);

     label1:
        return r6;
    }

    void addDisabledActivityLocked(int, android.content.ComponentName, long)
    {
        com.android.server.autofill.AutofillManagerService$DisabledInfoCache r0;
        int i0;
        long l1;
        java.lang.Object r1;
        com.android.server.autofill.AutofillManagerService$AutofillDisabledInfo $r3;
        java.lang.Throwable $r4;
        android.content.ComponentName r5;

        r0 := @this: com.android.server.autofill.AutofillManagerService$DisabledInfoCache;

        i0 := @parameter0: int;

        r5 := @parameter1: android.content.ComponentName;

        l1 := @parameter2: long;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r5);

        r1 = r0.<com.android.server.autofill.AutofillManagerService$DisabledInfoCache: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = specialinvoke r0.<com.android.server.autofill.AutofillManagerService$DisabledInfoCache: com.android.server.autofill.AutofillManagerService$AutofillDisabledInfo getOrCreateAutofillDisabledInfoByUserIdLocked(int)>(i0);

        virtualinvoke $r3.<com.android.server.autofill.AutofillManagerService$AutofillDisabledInfo: void putDisableActivityLocked(android.content.ComponentName,long)>(r5, l1);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    void addDisabledAppLocked(int, java.lang.String, long)
    {
        com.android.server.autofill.AutofillManagerService$DisabledInfoCache r0;
        int i0;
        long l1;
        java.lang.Object r1;
        com.android.server.autofill.AutofillManagerService$AutofillDisabledInfo $r3;
        java.lang.Throwable $r4;
        java.lang.String r5;

        r0 := @this: com.android.server.autofill.AutofillManagerService$DisabledInfoCache;

        i0 := @parameter0: int;

        r5 := @parameter1: java.lang.String;

        l1 := @parameter2: long;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r5);

        r1 = r0.<com.android.server.autofill.AutofillManagerService$DisabledInfoCache: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = specialinvoke r0.<com.android.server.autofill.AutofillManagerService$DisabledInfoCache: com.android.server.autofill.AutofillManagerService$AutofillDisabledInfo getOrCreateAutofillDisabledInfoByUserIdLocked(int)>(i0);

        virtualinvoke $r3.<com.android.server.autofill.AutofillManagerService$AutofillDisabledInfo: void putDisableAppsLocked(java.lang.String,long)>(r5, l1);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    void dump(int, java.lang.String, java.io.PrintWriter)
    {
        com.android.server.autofill.AutofillManagerService$DisabledInfoCache r0;
        int i0;
        java.io.PrintWriter r1;
        java.lang.Object r2, $r5;
        com.android.server.autofill.AutofillManagerService$AutofillDisabledInfo r3;
        android.util.SparseArray $r4;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: com.android.server.autofill.AutofillManagerService$DisabledInfoCache;

        i0 := @parameter0: int;

        r7 := @parameter1: java.lang.String;

        r1 := @parameter2: java.io.PrintWriter;

        r2 = r0.<com.android.server.autofill.AutofillManagerService$DisabledInfoCache: java.lang.Object mLock>;

        entermonitor r2;

     label1:
        $r4 = r0.<com.android.server.autofill.AutofillManagerService$DisabledInfoCache: android.util.SparseArray mCache>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r3 = (com.android.server.autofill.AutofillManagerService$AutofillDisabledInfo) $r5;

     label2:
        if r3 == null goto label4;

     label3:
        virtualinvoke r3.<com.android.server.autofill.AutofillManagerService$AutofillDisabledInfo: void dumpLocked(java.lang.String,java.io.PrintWriter)>(r7, r1);

     label4:
        exitmonitor r2;

     label5:
        return;

     label6:
        $r6 := @caughtexception;

     label7:
        exitmonitor r2;

     label8:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    android.util.ArrayMap getAppDisabledActivities(int, java.lang.String)
    {
        com.android.server.autofill.AutofillManagerService$DisabledInfoCache r0;
        int i0;
        java.lang.Object r1, $r5;
        com.android.server.autofill.AutofillManagerService$AutofillDisabledInfo r2;
        android.util.SparseArray $r4;
        java.lang.Throwable $r6;
        java.lang.String r7;
        android.util.ArrayMap r8;

        r0 := @this: com.android.server.autofill.AutofillManagerService$DisabledInfoCache;

        i0 := @parameter0: int;

        r7 := @parameter1: java.lang.String;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r7);

        r1 = r0.<com.android.server.autofill.AutofillManagerService$DisabledInfoCache: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r4 = r0.<com.android.server.autofill.AutofillManagerService$DisabledInfoCache: android.util.SparseArray mCache>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r2 = (com.android.server.autofill.AutofillManagerService$AutofillDisabledInfo) $r5;

     label02:
        if r2 == null goto label05;

     label03:
        r8 = virtualinvoke r2.<com.android.server.autofill.AutofillManagerService$AutofillDisabledInfo: android.util.ArrayMap getAppDisabledActivitiesLocked(java.lang.String)>(r7);

     label04:
        goto label06;

     label05:
        r8 = null;

     label06:
        exitmonitor r1;

     label07:
        return r8;

     label08:
        $r6 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    long getAppDisabledExpiration(int, java.lang.String)
    {
        com.android.server.autofill.AutofillManagerService$DisabledInfoCache r0;
        int i0;
        java.lang.Object r1, $r5;
        com.android.server.autofill.AutofillManagerService$AutofillDisabledInfo r2;
        android.util.SparseArray $r4;
        java.lang.Long $r6;
        long $l1, l2;
        java.lang.Throwable $r7;
        java.lang.String r8;

        r0 := @this: com.android.server.autofill.AutofillManagerService$DisabledInfoCache;

        i0 := @parameter0: int;

        r8 := @parameter1: java.lang.String;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r8);

        r1 = r0.<com.android.server.autofill.AutofillManagerService$DisabledInfoCache: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r4 = r0.<com.android.server.autofill.AutofillManagerService$DisabledInfoCache: android.util.SparseArray mCache>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r2 = (com.android.server.autofill.AutofillManagerService$AutofillDisabledInfo) $r5;

     label02:
        if r2 == null goto label05;

     label03:
        l2 = virtualinvoke r2.<com.android.server.autofill.AutofillManagerService$AutofillDisabledInfo: long getAppDisabledExpirationLocked(java.lang.String)>(r8);

     label04:
        goto label06;

     label05:
        l2 = 0L;

     label06:
        exitmonitor r1;

     label07:
        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l2);

        $l1 = virtualinvoke $r6.<java.lang.Long: long longValue()>();

        return $l1;

     label08:
        $r7 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    boolean isAutofillDisabledLocked(int, android.content.ComponentName)
    {
        com.android.server.autofill.AutofillManagerService$DisabledInfoCache r0;
        int i0;
        java.lang.Object r1, $r5;
        com.android.server.autofill.AutofillManagerService$AutofillDisabledInfo r2;
        android.util.SparseArray $r4;
        java.lang.Throwable $r6;
        android.content.ComponentName r7;
        boolean z0;

        r0 := @this: com.android.server.autofill.AutofillManagerService$DisabledInfoCache;

        i0 := @parameter0: int;

        r7 := @parameter1: android.content.ComponentName;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r7);

        r1 = r0.<com.android.server.autofill.AutofillManagerService$DisabledInfoCache: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r4 = r0.<com.android.server.autofill.AutofillManagerService$DisabledInfoCache: android.util.SparseArray mCache>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r2 = (com.android.server.autofill.AutofillManagerService$AutofillDisabledInfo) $r5;

     label02:
        if r2 == null goto label05;

     label03:
        z0 = virtualinvoke r2.<com.android.server.autofill.AutofillManagerService$AutofillDisabledInfo: boolean isAutofillDisabledLocked(android.content.ComponentName)>(r7);

     label04:
        goto label06;

     label05:
        z0 = 0;

     label06:
        exitmonitor r1;

     label07:
        return z0;

     label08:
        $r6 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    void remove(int)
    {
        com.android.server.autofill.AutofillManagerService$DisabledInfoCache r0;
        int i0;
        java.lang.Object r1;
        android.util.SparseArray $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.autofill.AutofillManagerService$DisabledInfoCache;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.autofill.AutofillManagerService$DisabledInfoCache: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.autofill.AutofillManagerService$DisabledInfoCache: android.util.SparseArray mCache>;

        virtualinvoke $r3.<android.util.SparseArray: void remove(int)>(i0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }
}
