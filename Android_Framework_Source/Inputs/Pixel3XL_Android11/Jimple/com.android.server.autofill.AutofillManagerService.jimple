public final class com.android.server.autofill.AutofillManagerService extends com.android.server.infra.AbstractMasterSystemService
{
    private static final char COMPAT_PACKAGE_DELIMITER;
    private static final char COMPAT_PACKAGE_URL_IDS_BLOCK_BEGIN;
    private static final char COMPAT_PACKAGE_URL_IDS_BLOCK_END;
    private static final char COMPAT_PACKAGE_URL_IDS_DELIMITER;
    private static final int DEFAULT_AUGMENTED_AUTOFILL_REQUEST_TIMEOUT_MILLIS;
    static final java.lang.String RECEIVER_BUNDLE_EXTRA_SESSIONS;
    private static final java.lang.String TAG;
    private static final java.lang.Object sLock;
    private static int sPartitionMaxCount;
    private static int sVisibleDatasetsMaxCount;
    private final android.app.ActivityManagerInternal mAm;
    final com.android.server.infra.FrameworkResourcesServiceNameResolver mAugmentedAutofillResolver;
    final com.android.server.autofill.AutofillManagerService$AugmentedAutofillState mAugmentedAutofillState;
    int mAugmentedServiceIdleUnbindTimeoutMs;
    int mAugmentedServiceRequestTimeoutMs;
    private final com.android.server.autofill.AutofillManagerService$AutofillCompatState mAutofillCompatState;
    private final android.content.BroadcastReceiver mBroadcastReceiver;
    private final com.android.server.autofill.AutofillManagerService$DisabledInfoCache mDisabledInfoCache;
    private final com.android.server.autofill.AutofillManagerService$LocalService mLocalService;
    private final android.util.LocalLog mRequestsHistory;
    private int mSupportedSmartSuggestionModes;
    private final com.android.server.autofill.ui.AutoFillUI mUi;
    private final android.util.LocalLog mUiLatencyHistory;
    private final android.util.LocalLog mWtfHistory;

    static void <clinit>()
    {
        <com.android.server.autofill.AutofillManagerService: java.lang.String TAG> = "AutofillManagerService";

        <com.android.server.autofill.AutofillManagerService: java.lang.String RECEIVER_BUNDLE_EXTRA_SESSIONS> = "sessions";

        <com.android.server.autofill.AutofillManagerService: int DEFAULT_AUGMENTED_AUTOFILL_REQUEST_TIMEOUT_MILLIS> = 5000;

        <com.android.server.autofill.AutofillManagerService: char COMPAT_PACKAGE_URL_IDS_DELIMITER> = 44;

        <com.android.server.autofill.AutofillManagerService: char COMPAT_PACKAGE_URL_IDS_BLOCK_END> = 93;

        <com.android.server.autofill.AutofillManagerService: char COMPAT_PACKAGE_URL_IDS_BLOCK_BEGIN> = 91;

        <com.android.server.autofill.AutofillManagerService: char COMPAT_PACKAGE_DELIMITER> = 58;

        <com.android.server.autofill.AutofillManagerService: java.lang.Object sLock> = class "Lcom/android/server/autofill/AutofillManagerService;";

        <com.android.server.autofill.AutofillManagerService: int sPartitionMaxCount> = 10;

        <com.android.server.autofill.AutofillManagerService: int sVisibleDatasetsMaxCount> = 0;

        return;
    }

    public void <init>(android.content.Context)
    {
        com.android.server.autofill.AutofillManagerService r0;
        int i0, $i1, $i2, i3;
        com.android.server.infra.SecureSettingsServiceNameResolver $r2;
        android.util.LocalLog $r3, $r4, $r5;
        com.android.server.autofill.AutofillManagerService$AutofillCompatState $r6;
        com.android.server.autofill.AutofillManagerService$DisabledInfoCache $r7;
        com.android.server.autofill.AutofillManagerService$LocalService $r8;
        com.android.server.autofill.AutofillManagerService$1 $r9;
        com.android.server.autofill.AutofillManagerService$AugmentedAutofillState $r10, $r30;
        com.android.server.autofill.ui.AutoFillUI $r11;
        android.app.ActivityThread $r12;
        android.app.ContextImpl $r13;
        java.lang.Object $r14, $r26;
        android.app.ActivityManagerInternal $r15;
        android.app.Application $r16;
        java.util.concurrent.Executor $r17;
        com.android.server.autofill._$$Lambda$AutofillManagerService$AjdnAnVaegTp2pojE30m5yjqZx8 $r18;
        android.content.IntentFilter $r19;
        android.content.BroadcastReceiver $r20;
        android.os.Handler $r21;
        com.android.server.infra.FrameworkResourcesServiceNameResolver $r23, $r29, $r32;
        android.content.Context $r24, r33;
        com.android.server.autofill._$$Lambda$AutofillManagerService$6afarI_dhLaYDLGebVyDMPu2nok $r25;
        android.content.pm.UserInfo $r27;
        java.lang.String $r31;
        boolean $z0;
        java.util.List r35;

        r0 := @this: com.android.server.autofill.AutofillManagerService;

        r33 := @parameter0: android.content.Context;

        $r2 = new com.android.server.infra.SecureSettingsServiceNameResolver;

        specialinvoke $r2.<com.android.server.infra.SecureSettingsServiceNameResolver: void <init>(android.content.Context,java.lang.String)>(r33, "autofill_service");

        specialinvoke r0.<com.android.server.infra.AbstractMasterSystemService: void <init>(android.content.Context,com.android.server.infra.ServiceNameResolver,java.lang.String,int)>(r33, $r2, "no_autofill", 4);

        $r3 = new android.util.LocalLog;

        specialinvoke $r3.<android.util.LocalLog: void <init>(int)>(20);

        r0.<com.android.server.autofill.AutofillManagerService: android.util.LocalLog mRequestsHistory> = $r3;

        $r4 = new android.util.LocalLog;

        specialinvoke $r4.<android.util.LocalLog: void <init>(int)>(20);

        r0.<com.android.server.autofill.AutofillManagerService: android.util.LocalLog mUiLatencyHistory> = $r4;

        $r5 = new android.util.LocalLog;

        specialinvoke $r5.<android.util.LocalLog: void <init>(int)>(50);

        r0.<com.android.server.autofill.AutofillManagerService: android.util.LocalLog mWtfHistory> = $r5;

        $r6 = new com.android.server.autofill.AutofillManagerService$AutofillCompatState;

        specialinvoke $r6.<com.android.server.autofill.AutofillManagerService$AutofillCompatState: void <init>()>();

        r0.<com.android.server.autofill.AutofillManagerService: com.android.server.autofill.AutofillManagerService$AutofillCompatState mAutofillCompatState> = $r6;

        $r7 = new com.android.server.autofill.AutofillManagerService$DisabledInfoCache;

        specialinvoke $r7.<com.android.server.autofill.AutofillManagerService$DisabledInfoCache: void <init>()>();

        r0.<com.android.server.autofill.AutofillManagerService: com.android.server.autofill.AutofillManagerService$DisabledInfoCache mDisabledInfoCache> = $r7;

        $r8 = new com.android.server.autofill.AutofillManagerService$LocalService;

        specialinvoke $r8.<com.android.server.autofill.AutofillManagerService$LocalService: void <init>(com.android.server.autofill.AutofillManagerService,com.android.server.autofill.AutofillManagerService$1)>(r0, null);

        r0.<com.android.server.autofill.AutofillManagerService: com.android.server.autofill.AutofillManagerService$LocalService mLocalService> = $r8;

        $r9 = new com.android.server.autofill.AutofillManagerService$1;

        specialinvoke $r9.<com.android.server.autofill.AutofillManagerService$1: void <init>(com.android.server.autofill.AutofillManagerService)>(r0);

        r0.<com.android.server.autofill.AutofillManagerService: android.content.BroadcastReceiver mBroadcastReceiver> = $r9;

        $r10 = new com.android.server.autofill.AutofillManagerService$AugmentedAutofillState;

        specialinvoke $r10.<com.android.server.autofill.AutofillManagerService$AugmentedAutofillState: void <init>()>();

        r0.<com.android.server.autofill.AutofillManagerService: com.android.server.autofill.AutofillManagerService$AugmentedAutofillState mAugmentedAutofillState> = $r10;

        $r11 = new com.android.server.autofill.ui.AutoFillUI;

        $r12 = staticinvoke <android.app.ActivityThread: android.app.ActivityThread currentActivityThread()>();

        $r13 = virtualinvoke $r12.<android.app.ActivityThread: android.app.ContextImpl getSystemUiContext()>();

        specialinvoke $r11.<com.android.server.autofill.ui.AutoFillUI: void <init>(android.content.Context)>($r13);

        r0.<com.android.server.autofill.AutofillManagerService: com.android.server.autofill.ui.AutoFillUI mUi> = $r11;

        $r14 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/app/ActivityManagerInternal;");

        $r15 = (android.app.ActivityManagerInternal) $r14;

        r0.<com.android.server.autofill.AutofillManagerService: android.app.ActivityManagerInternal mAm> = $r15;

        $r16 = staticinvoke <android.app.ActivityThread: android.app.Application currentApplication()>();

        $r17 = virtualinvoke $r16.<android.app.Application: java.util.concurrent.Executor getMainExecutor()>();

        $r18 = new com.android.server.autofill._$$Lambda$AutofillManagerService$AjdnAnVaegTp2pojE30m5yjqZx8;

        specialinvoke $r18.<com.android.server.autofill._$$Lambda$AutofillManagerService$AjdnAnVaegTp2pojE30m5yjqZx8: void <init>(com.android.server.autofill.AutofillManagerService)>(r0);

        staticinvoke <android.provider.DeviceConfig: void addOnPropertiesChangedListener(java.lang.String,java.util.concurrent.Executor,android.provider.DeviceConfig$OnPropertiesChangedListener)>("autofill", $r17, $r18);

        specialinvoke r0.<com.android.server.autofill.AutofillManagerService: void setLogLevelFromSettings()>();

        specialinvoke r0.<com.android.server.autofill.AutofillManagerService: void setMaxPartitionsFromSettings()>();

        specialinvoke r0.<com.android.server.autofill.AutofillManagerService: void setMaxVisibleDatasetsFromSettings()>();

        specialinvoke r0.<com.android.server.autofill.AutofillManagerService: void setDeviceConfigProperties()>();

        $r19 = new android.content.IntentFilter;

        specialinvoke $r19.<android.content.IntentFilter: void <init>()>();

        virtualinvoke $r19.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.CLOSE_SYSTEM_DIALOGS");

        $r20 = r0.<com.android.server.autofill.AutofillManagerService: android.content.BroadcastReceiver mBroadcastReceiver>;

        $r21 = staticinvoke <com.android.server.FgThread: android.os.Handler getHandler()>();

        virtualinvoke r33.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler)>($r20, $r19, null, $r21);

        $r23 = new com.android.server.infra.FrameworkResourcesServiceNameResolver;

        $r24 = virtualinvoke r0.<com.android.server.autofill.AutofillManagerService: android.content.Context getContext()>();

        specialinvoke $r23.<com.android.server.infra.FrameworkResourcesServiceNameResolver: void <init>(android.content.Context,int)>($r24, 17039858);

        r0.<com.android.server.autofill.AutofillManagerService: com.android.server.infra.FrameworkResourcesServiceNameResolver mAugmentedAutofillResolver> = $r23;

        $r25 = new com.android.server.autofill._$$Lambda$AutofillManagerService$6afarI_dhLaYDLGebVyDMPu2nok;

        specialinvoke $r25.<com.android.server.autofill._$$Lambda$AutofillManagerService$6afarI_dhLaYDLGebVyDMPu2nok: void <init>(com.android.server.autofill.AutofillManagerService)>(r0);

        virtualinvoke $r23.<com.android.server.infra.FrameworkResourcesServiceNameResolver: void setOnTemporaryServiceNameChangedCallback(com.android.server.infra.ServiceNameResolver$NameResolverListener)>($r25);

        $i1 = r0.<com.android.server.autofill.AutofillManagerService: int mSupportedSmartSuggestionModes>;

        if $i1 == 0 goto label2;

        r35 = virtualinvoke r0.<com.android.server.autofill.AutofillManagerService: java.util.List getSupportedUsers()>();

        i3 = 0;

     label1:
        $i2 = interfaceinvoke r35.<java.util.List: int size()>();

        if i3 >= $i2 goto label2;

        $r26 = interfaceinvoke r35.<java.util.List: java.lang.Object get(int)>(i3);

        $r27 = (android.content.pm.UserInfo) $r26;

        i0 = $r27.<android.content.pm.UserInfo: int id>;

        virtualinvoke r0.<com.android.server.autofill.AutofillManagerService: com.android.server.infra.AbstractPerUserSystemService getServiceForUserLocked(int)>(i0);

        $r30 = r0.<com.android.server.autofill.AutofillManagerService: com.android.server.autofill.AutofillManagerService$AugmentedAutofillState mAugmentedAutofillState>;

        $r29 = r0.<com.android.server.autofill.AutofillManagerService: com.android.server.infra.FrameworkResourcesServiceNameResolver mAugmentedAutofillResolver>;

        $r31 = virtualinvoke $r29.<com.android.server.infra.FrameworkResourcesServiceNameResolver: java.lang.String getServiceName(int)>(i0);

        $r32 = r0.<com.android.server.autofill.AutofillManagerService: com.android.server.infra.FrameworkResourcesServiceNameResolver mAugmentedAutofillResolver>;

        $z0 = virtualinvoke $r32.<com.android.server.infra.FrameworkResourcesServiceNameResolver: boolean isTemporary(int)>(i0);

        staticinvoke <com.android.server.autofill.AutofillManagerService$AugmentedAutofillState: void access$400(com.android.server.autofill.AutofillManagerService$AugmentedAutofillState,int,java.lang.String,boolean)>($r30, i0, $r31, $z0);

        i3 = i3 + 1;

        goto label1;

     label2:
        return;
    }

    static java.lang.Object access$100(com.android.server.autofill.AutofillManagerService)
    {
        com.android.server.autofill.AutofillManagerService r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.server.autofill.AutofillManagerService;

        $r1 = r0.<com.android.server.autofill.AutofillManagerService: java.lang.Object mLock>;

        return $r1;
    }

    static com.android.server.autofill.AutofillManagerService$DisabledInfoCache access$1000(com.android.server.autofill.AutofillManagerService)
    {
        com.android.server.autofill.AutofillManagerService r0;
        com.android.server.autofill.AutofillManagerService$DisabledInfoCache $r1;

        r0 := @parameter0: com.android.server.autofill.AutofillManagerService;

        $r1 = r0.<com.android.server.autofill.AutofillManagerService: com.android.server.autofill.AutofillManagerService$DisabledInfoCache mDisabledInfoCache>;

        return $r1;
    }

    static java.lang.Object access$1400(com.android.server.autofill.AutofillManagerService)
    {
        com.android.server.autofill.AutofillManagerService r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.server.autofill.AutofillManagerService;

        $r1 = r0.<com.android.server.autofill.AutofillManagerService: java.lang.Object mLock>;

        return $r1;
    }

    static com.android.server.infra.AbstractPerUserSystemService access$1500(com.android.server.autofill.AutofillManagerService, int)
    {
        com.android.server.autofill.AutofillManagerService r0;
        int i0;
        com.android.server.infra.AbstractPerUserSystemService $r1;

        r0 := @parameter0: com.android.server.autofill.AutofillManagerService;

        i0 := @parameter1: int;

        $r1 = virtualinvoke r0.<com.android.server.autofill.AutofillManagerService: com.android.server.infra.AbstractPerUserSystemService getServiceForUserLocked(int)>(i0);

        return $r1;
    }

    static void access$1600(com.android.server.autofill.AutofillManagerService, com.android.internal.os.IResultReceiver, int)
    {
        com.android.server.autofill.AutofillManagerService r0;
        com.android.internal.os.IResultReceiver r1;
        int i0;

        r0 := @parameter0: com.android.server.autofill.AutofillManagerService;

        r1 := @parameter1: com.android.internal.os.IResultReceiver;

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.server.autofill.AutofillManagerService: void send(com.android.internal.os.IResultReceiver,int)>(r1, i0);

        return;
    }

    static java.lang.Object access$1700(com.android.server.autofill.AutofillManagerService)
    {
        com.android.server.autofill.AutofillManagerService r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.server.autofill.AutofillManagerService;

        $r1 = r0.<com.android.server.autofill.AutofillManagerService: java.lang.Object mLock>;

        return $r1;
    }

    static com.android.server.infra.AbstractPerUserSystemService access$1800(com.android.server.autofill.AutofillManagerService, int)
    {
        com.android.server.autofill.AutofillManagerService r0;
        int i0;
        com.android.server.infra.AbstractPerUserSystemService $r1;

        r0 := @parameter0: com.android.server.autofill.AutofillManagerService;

        i0 := @parameter1: int;

        $r1 = virtualinvoke r0.<com.android.server.autofill.AutofillManagerService: com.android.server.infra.AbstractPerUserSystemService peekServiceForUserLocked(int)>(i0);

        return $r1;
    }

    static java.lang.Object access$1900(com.android.server.autofill.AutofillManagerService)
    {
        com.android.server.autofill.AutofillManagerService r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.server.autofill.AutofillManagerService;

        $r1 = r0.<com.android.server.autofill.AutofillManagerService: java.lang.Object mLock>;

        return $r1;
    }

    static void access$200(com.android.server.autofill.AutofillManagerService, com.android.server.infra.AbstractMasterSystemService$Visitor)
    {
        com.android.server.autofill.AutofillManagerService r0;
        com.android.server.infra.AbstractMasterSystemService$Visitor r1;

        r0 := @parameter0: com.android.server.autofill.AutofillManagerService;

        r1 := @parameter1: com.android.server.infra.AbstractMasterSystemService$Visitor;

        virtualinvoke r0.<com.android.server.autofill.AutofillManagerService: void visitServicesLocked(com.android.server.infra.AbstractMasterSystemService$Visitor)>(r1);

        return;
    }

    static com.android.server.infra.AbstractPerUserSystemService access$2000(com.android.server.autofill.AutofillManagerService, int)
    {
        com.android.server.autofill.AutofillManagerService r0;
        int i0;
        com.android.server.infra.AbstractPerUserSystemService $r1;

        r0 := @parameter0: com.android.server.autofill.AutofillManagerService;

        i0 := @parameter1: int;

        $r1 = virtualinvoke r0.<com.android.server.autofill.AutofillManagerService: com.android.server.infra.AbstractPerUserSystemService getServiceForUserLocked(int)>(i0);

        return $r1;
    }

    static java.lang.Object access$2100(com.android.server.autofill.AutofillManagerService)
    {
        com.android.server.autofill.AutofillManagerService r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.server.autofill.AutofillManagerService;

        $r1 = r0.<com.android.server.autofill.AutofillManagerService: java.lang.Object mLock>;

        return $r1;
    }

    static com.android.server.infra.AbstractPerUserSystemService access$2200(com.android.server.autofill.AutofillManagerService, int)
    {
        com.android.server.autofill.AutofillManagerService r0;
        int i0;
        com.android.server.infra.AbstractPerUserSystemService $r1;

        r0 := @parameter0: com.android.server.autofill.AutofillManagerService;

        i0 := @parameter1: int;

        $r1 = virtualinvoke r0.<com.android.server.autofill.AutofillManagerService: com.android.server.infra.AbstractPerUserSystemService getServiceForUserLocked(int)>(i0);

        return $r1;
    }

    static android.app.ActivityManagerInternal access$2300(com.android.server.autofill.AutofillManagerService)
    {
        com.android.server.autofill.AutofillManagerService r0;
        android.app.ActivityManagerInternal $r1;

        r0 := @parameter0: com.android.server.autofill.AutofillManagerService;

        $r1 = r0.<com.android.server.autofill.AutofillManagerService: android.app.ActivityManagerInternal mAm>;

        return $r1;
    }

    static java.lang.Object access$2400(com.android.server.autofill.AutofillManagerService)
    {
        com.android.server.autofill.AutofillManagerService r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.server.autofill.AutofillManagerService;

        $r1 = r0.<com.android.server.autofill.AutofillManagerService: java.lang.Object mLock>;

        return $r1;
    }

    static com.android.server.infra.AbstractPerUserSystemService access$2500(com.android.server.autofill.AutofillManagerService, int)
    {
        com.android.server.autofill.AutofillManagerService r0;
        int i0;
        com.android.server.infra.AbstractPerUserSystemService $r1;

        r0 := @parameter0: com.android.server.autofill.AutofillManagerService;

        i0 := @parameter1: int;

        $r1 = virtualinvoke r0.<com.android.server.autofill.AutofillManagerService: com.android.server.infra.AbstractPerUserSystemService getServiceForUserLocked(int)>(i0);

        return $r1;
    }

    static boolean access$2600(com.android.server.autofill.AutofillManagerService)
    {
        com.android.server.autofill.AutofillManagerService r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.autofill.AutofillManagerService;

        $z0 = r0.<com.android.server.autofill.AutofillManagerService: boolean mAllowInstantService>;

        return $z0;
    }

    static void access$2700(com.android.server.autofill.AutofillManagerService, com.android.internal.os.IResultReceiver, int, int)
    {
        com.android.server.autofill.AutofillManagerService r0;
        com.android.internal.os.IResultReceiver r1;
        int i0, i1;

        r0 := @parameter0: com.android.server.autofill.AutofillManagerService;

        r1 := @parameter1: com.android.internal.os.IResultReceiver;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<com.android.server.autofill.AutofillManagerService: void send(com.android.internal.os.IResultReceiver,int,int)>(r1, i0, i1);

        return;
    }

    static java.lang.Object access$2800(com.android.server.autofill.AutofillManagerService)
    {
        com.android.server.autofill.AutofillManagerService r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.server.autofill.AutofillManagerService;

        $r1 = r0.<com.android.server.autofill.AutofillManagerService: java.lang.Object mLock>;

        return $r1;
    }

    static com.android.server.infra.AbstractPerUserSystemService access$2900(com.android.server.autofill.AutofillManagerService, int)
    {
        com.android.server.autofill.AutofillManagerService r0;
        int i0;
        com.android.server.infra.AbstractPerUserSystemService $r1;

        r0 := @parameter0: com.android.server.autofill.AutofillManagerService;

        i0 := @parameter1: int;

        $r1 = virtualinvoke r0.<com.android.server.autofill.AutofillManagerService: com.android.server.infra.AbstractPerUserSystemService peekServiceForUserLocked(int)>(i0);

        return $r1;
    }

    static com.android.server.autofill.ui.AutoFillUI access$300(com.android.server.autofill.AutofillManagerService)
    {
        com.android.server.autofill.AutofillManagerService r0;
        com.android.server.autofill.ui.AutoFillUI $r1;

        r0 := @parameter0: com.android.server.autofill.AutofillManagerService;

        $r1 = r0.<com.android.server.autofill.AutofillManagerService: com.android.server.autofill.ui.AutoFillUI mUi>;

        return $r1;
    }

    static void access$3000(com.android.server.autofill.AutofillManagerService, com.android.internal.os.IResultReceiver, android.os.Parcelable)
    {
        com.android.server.autofill.AutofillManagerService r0;
        com.android.internal.os.IResultReceiver r1;
        android.os.Parcelable r2;

        r0 := @parameter0: com.android.server.autofill.AutofillManagerService;

        r1 := @parameter1: com.android.internal.os.IResultReceiver;

        r2 := @parameter2: android.os.Parcelable;

        specialinvoke r0.<com.android.server.autofill.AutofillManagerService: void send(com.android.internal.os.IResultReceiver,android.os.Parcelable)>(r1, r2);

        return;
    }

    static java.lang.Object access$3100(com.android.server.autofill.AutofillManagerService)
    {
        com.android.server.autofill.AutofillManagerService r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.server.autofill.AutofillManagerService;

        $r1 = r0.<com.android.server.autofill.AutofillManagerService: java.lang.Object mLock>;

        return $r1;
    }

    static com.android.server.infra.AbstractPerUserSystemService access$3200(com.android.server.autofill.AutofillManagerService, int)
    {
        com.android.server.autofill.AutofillManagerService r0;
        int i0;
        com.android.server.infra.AbstractPerUserSystemService $r1;

        r0 := @parameter0: com.android.server.autofill.AutofillManagerService;

        i0 := @parameter1: int;

        $r1 = virtualinvoke r0.<com.android.server.autofill.AutofillManagerService: com.android.server.infra.AbstractPerUserSystemService peekServiceForUserLocked(int)>(i0);

        return $r1;
    }

    static java.lang.Object access$3300(com.android.server.autofill.AutofillManagerService)
    {
        com.android.server.autofill.AutofillManagerService r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.server.autofill.AutofillManagerService;

        $r1 = r0.<com.android.server.autofill.AutofillManagerService: java.lang.Object mLock>;

        return $r1;
    }

    static com.android.server.infra.AbstractPerUserSystemService access$3400(com.android.server.autofill.AutofillManagerService, int)
    {
        com.android.server.autofill.AutofillManagerService r0;
        int i0;
        com.android.server.infra.AbstractPerUserSystemService $r1;

        r0 := @parameter0: com.android.server.autofill.AutofillManagerService;

        i0 := @parameter1: int;

        $r1 = virtualinvoke r0.<com.android.server.autofill.AutofillManagerService: com.android.server.infra.AbstractPerUserSystemService peekServiceForUserLocked(int)>(i0);

        return $r1;
    }

    static void access$3500(com.android.server.autofill.AutofillManagerService, com.android.internal.os.IResultReceiver, java.lang.String)
    {
        com.android.server.autofill.AutofillManagerService r0;
        com.android.internal.os.IResultReceiver r1;
        java.lang.String r2;

        r0 := @parameter0: com.android.server.autofill.AutofillManagerService;

        r1 := @parameter1: com.android.internal.os.IResultReceiver;

        r2 := @parameter2: java.lang.String;

        specialinvoke r0.<com.android.server.autofill.AutofillManagerService: void send(com.android.internal.os.IResultReceiver,java.lang.String)>(r1, r2);

        return;
    }

    static java.lang.Object access$3600(com.android.server.autofill.AutofillManagerService)
    {
        com.android.server.autofill.AutofillManagerService r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.server.autofill.AutofillManagerService;

        $r1 = r0.<com.android.server.autofill.AutofillManagerService: java.lang.Object mLock>;

        return $r1;
    }

    static com.android.server.infra.AbstractPerUserSystemService access$3700(com.android.server.autofill.AutofillManagerService, int)
    {
        com.android.server.autofill.AutofillManagerService r0;
        int i0;
        com.android.server.infra.AbstractPerUserSystemService $r1;

        r0 := @parameter0: com.android.server.autofill.AutofillManagerService;

        i0 := @parameter1: int;

        $r1 = virtualinvoke r0.<com.android.server.autofill.AutofillManagerService: com.android.server.infra.AbstractPerUserSystemService peekServiceForUserLocked(int)>(i0);

        return $r1;
    }

    static java.lang.Object access$3800(com.android.server.autofill.AutofillManagerService)
    {
        com.android.server.autofill.AutofillManagerService r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.server.autofill.AutofillManagerService;

        $r1 = r0.<com.android.server.autofill.AutofillManagerService: java.lang.Object mLock>;

        return $r1;
    }

    static com.android.server.infra.AbstractPerUserSystemService access$3900(com.android.server.autofill.AutofillManagerService, int)
    {
        com.android.server.autofill.AutofillManagerService r0;
        int i0;
        com.android.server.infra.AbstractPerUserSystemService $r1;

        r0 := @parameter0: com.android.server.autofill.AutofillManagerService;

        i0 := @parameter1: int;

        $r1 = virtualinvoke r0.<com.android.server.autofill.AutofillManagerService: com.android.server.infra.AbstractPerUserSystemService peekServiceForUserLocked(int)>(i0);

        return $r1;
    }

    static void access$4000(com.android.server.autofill.AutofillManagerService, com.android.internal.os.IResultReceiver, boolean)
    {
        com.android.server.autofill.AutofillManagerService r0;
        com.android.internal.os.IResultReceiver r1;
        boolean z0;

        r0 := @parameter0: com.android.server.autofill.AutofillManagerService;

        r1 := @parameter1: com.android.internal.os.IResultReceiver;

        z0 := @parameter2: boolean;

        specialinvoke r0.<com.android.server.autofill.AutofillManagerService: void send(com.android.internal.os.IResultReceiver,boolean)>(r1, z0);

        return;
    }

    static java.lang.Object access$4100(com.android.server.autofill.AutofillManagerService)
    {
        com.android.server.autofill.AutofillManagerService r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.server.autofill.AutofillManagerService;

        $r1 = r0.<com.android.server.autofill.AutofillManagerService: java.lang.Object mLock>;

        return $r1;
    }

    static com.android.server.infra.AbstractPerUserSystemService access$4200(com.android.server.autofill.AutofillManagerService, int)
    {
        com.android.server.autofill.AutofillManagerService r0;
        int i0;
        com.android.server.infra.AbstractPerUserSystemService $r1;

        r0 := @parameter0: com.android.server.autofill.AutofillManagerService;

        i0 := @parameter1: int;

        $r1 = virtualinvoke r0.<com.android.server.autofill.AutofillManagerService: com.android.server.infra.AbstractPerUserSystemService peekServiceForUserLocked(int)>(i0);

        return $r1;
    }

    static java.lang.Object access$4300(com.android.server.autofill.AutofillManagerService)
    {
        com.android.server.autofill.AutofillManagerService r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.server.autofill.AutofillManagerService;

        $r1 = r0.<com.android.server.autofill.AutofillManagerService: java.lang.Object mLock>;

        return $r1;
    }

    static com.android.server.infra.AbstractPerUserSystemService access$4400(com.android.server.autofill.AutofillManagerService, int)
    {
        com.android.server.autofill.AutofillManagerService r0;
        int i0;
        com.android.server.infra.AbstractPerUserSystemService $r1;

        r0 := @parameter0: com.android.server.autofill.AutofillManagerService;

        i0 := @parameter1: int;

        $r1 = virtualinvoke r0.<com.android.server.autofill.AutofillManagerService: com.android.server.infra.AbstractPerUserSystemService peekServiceForUserLocked(int)>(i0);

        return $r1;
    }

    static java.lang.Object access$4500(com.android.server.autofill.AutofillManagerService)
    {
        com.android.server.autofill.AutofillManagerService r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.server.autofill.AutofillManagerService;

        $r1 = r0.<com.android.server.autofill.AutofillManagerService: java.lang.Object mLock>;

        return $r1;
    }

    static com.android.server.infra.AbstractPerUserSystemService access$4600(com.android.server.autofill.AutofillManagerService, int)
    {
        com.android.server.autofill.AutofillManagerService r0;
        int i0;
        com.android.server.infra.AbstractPerUserSystemService $r1;

        r0 := @parameter0: com.android.server.autofill.AutofillManagerService;

        i0 := @parameter1: int;

        $r1 = virtualinvoke r0.<com.android.server.autofill.AutofillManagerService: com.android.server.infra.AbstractPerUserSystemService peekServiceForUserLocked(int)>(i0);

        return $r1;
    }

    static void access$4700(com.android.server.autofill.AutofillManagerService, com.android.internal.os.IResultReceiver, java.lang.String[])
    {
        com.android.server.autofill.AutofillManagerService r0;
        com.android.internal.os.IResultReceiver r1;
        java.lang.String[] r2;

        r0 := @parameter0: com.android.server.autofill.AutofillManagerService;

        r1 := @parameter1: com.android.internal.os.IResultReceiver;

        r2 := @parameter2: java.lang.String[];

        specialinvoke r0.<com.android.server.autofill.AutofillManagerService: void send(com.android.internal.os.IResultReceiver,java.lang.String[])>(r1, r2);

        return;
    }

    static java.lang.Object access$4800(com.android.server.autofill.AutofillManagerService)
    {
        com.android.server.autofill.AutofillManagerService r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.server.autofill.AutofillManagerService;

        $r1 = r0.<com.android.server.autofill.AutofillManagerService: java.lang.Object mLock>;

        return $r1;
    }

    static com.android.server.infra.AbstractPerUserSystemService access$4900(com.android.server.autofill.AutofillManagerService, int)
    {
        com.android.server.autofill.AutofillManagerService r0;
        int i0;
        com.android.server.infra.AbstractPerUserSystemService $r1;

        r0 := @parameter0: com.android.server.autofill.AutofillManagerService;

        i0 := @parameter1: int;

        $r1 = virtualinvoke r0.<com.android.server.autofill.AutofillManagerService: com.android.server.infra.AbstractPerUserSystemService peekServiceForUserLocked(int)>(i0);

        return $r1;
    }

    static java.lang.Object access$500(com.android.server.autofill.AutofillManagerService)
    {
        com.android.server.autofill.AutofillManagerService r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.server.autofill.AutofillManagerService;

        $r1 = r0.<com.android.server.autofill.AutofillManagerService: java.lang.Object mLock>;

        return $r1;
    }

    static java.lang.Object access$5000(com.android.server.autofill.AutofillManagerService)
    {
        com.android.server.autofill.AutofillManagerService r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.server.autofill.AutofillManagerService;

        $r1 = r0.<com.android.server.autofill.AutofillManagerService: java.lang.Object mLock>;

        return $r1;
    }

    static com.android.server.infra.AbstractPerUserSystemService access$5100(com.android.server.autofill.AutofillManagerService, int)
    {
        com.android.server.autofill.AutofillManagerService r0;
        int i0;
        com.android.server.infra.AbstractPerUserSystemService $r1;

        r0 := @parameter0: com.android.server.autofill.AutofillManagerService;

        i0 := @parameter1: int;

        $r1 = virtualinvoke r0.<com.android.server.autofill.AutofillManagerService: com.android.server.infra.AbstractPerUserSystemService peekServiceForUserLocked(int)>(i0);

        return $r1;
    }

    static java.lang.Object access$5200(com.android.server.autofill.AutofillManagerService)
    {
        com.android.server.autofill.AutofillManagerService r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.server.autofill.AutofillManagerService;

        $r1 = r0.<com.android.server.autofill.AutofillManagerService: java.lang.Object mLock>;

        return $r1;
    }

    static com.android.server.infra.AbstractPerUserSystemService access$5300(com.android.server.autofill.AutofillManagerService, int)
    {
        com.android.server.autofill.AutofillManagerService r0;
        int i0;
        com.android.server.infra.AbstractPerUserSystemService $r1;

        r0 := @parameter0: com.android.server.autofill.AutofillManagerService;

        i0 := @parameter1: int;

        $r1 = virtualinvoke r0.<com.android.server.autofill.AutofillManagerService: com.android.server.infra.AbstractPerUserSystemService peekServiceForUserLocked(int)>(i0);

        return $r1;
    }

    static java.lang.Object access$5400(com.android.server.autofill.AutofillManagerService)
    {
        com.android.server.autofill.AutofillManagerService r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.server.autofill.AutofillManagerService;

        $r1 = r0.<com.android.server.autofill.AutofillManagerService: java.lang.Object mLock>;

        return $r1;
    }

    static com.android.server.infra.AbstractPerUserSystemService access$5500(com.android.server.autofill.AutofillManagerService, int)
    {
        com.android.server.autofill.AutofillManagerService r0;
        int i0;
        com.android.server.infra.AbstractPerUserSystemService $r1;

        r0 := @parameter0: com.android.server.autofill.AutofillManagerService;

        i0 := @parameter1: int;

        $r1 = virtualinvoke r0.<com.android.server.autofill.AutofillManagerService: com.android.server.infra.AbstractPerUserSystemService peekServiceForUserLocked(int)>(i0);

        return $r1;
    }

    static java.lang.Object access$5600(com.android.server.autofill.AutofillManagerService)
    {
        com.android.server.autofill.AutofillManagerService r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.server.autofill.AutofillManagerService;

        $r1 = r0.<com.android.server.autofill.AutofillManagerService: java.lang.Object mLock>;

        return $r1;
    }

    static com.android.server.infra.AbstractPerUserSystemService access$5700(com.android.server.autofill.AutofillManagerService, int)
    {
        com.android.server.autofill.AutofillManagerService r0;
        int i0;
        com.android.server.infra.AbstractPerUserSystemService $r1;

        r0 := @parameter0: com.android.server.autofill.AutofillManagerService;

        i0 := @parameter1: int;

        $r1 = virtualinvoke r0.<com.android.server.autofill.AutofillManagerService: com.android.server.infra.AbstractPerUserSystemService peekServiceForUserLocked(int)>(i0);

        return $r1;
    }

    static java.lang.Object access$5800(com.android.server.autofill.AutofillManagerService)
    {
        com.android.server.autofill.AutofillManagerService r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.server.autofill.AutofillManagerService;

        $r1 = r0.<com.android.server.autofill.AutofillManagerService: java.lang.Object mLock>;

        return $r1;
    }

    static com.android.server.infra.AbstractPerUserSystemService access$5900(com.android.server.autofill.AutofillManagerService, int)
    {
        com.android.server.autofill.AutofillManagerService r0;
        int i0;
        com.android.server.infra.AbstractPerUserSystemService $r1;

        r0 := @parameter0: com.android.server.autofill.AutofillManagerService;

        i0 := @parameter1: int;

        $r1 = virtualinvoke r0.<com.android.server.autofill.AutofillManagerService: com.android.server.infra.AbstractPerUserSystemService peekServiceForUserLocked(int)>(i0);

        return $r1;
    }

    static com.android.server.infra.AbstractPerUserSystemService access$600(com.android.server.autofill.AutofillManagerService, int)
    {
        com.android.server.autofill.AutofillManagerService r0;
        int i0;
        com.android.server.infra.AbstractPerUserSystemService $r1;

        r0 := @parameter0: com.android.server.autofill.AutofillManagerService;

        i0 := @parameter1: int;

        $r1 = virtualinvoke r0.<com.android.server.autofill.AutofillManagerService: com.android.server.infra.AbstractPerUserSystemService getServiceForUserLocked(int)>(i0);

        return $r1;
    }

    static java.lang.Object access$6000(com.android.server.autofill.AutofillManagerService)
    {
        com.android.server.autofill.AutofillManagerService r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.server.autofill.AutofillManagerService;

        $r1 = r0.<com.android.server.autofill.AutofillManagerService: java.lang.Object mLock>;

        return $r1;
    }

    static com.android.server.infra.AbstractPerUserSystemService access$6100(com.android.server.autofill.AutofillManagerService, int)
    {
        com.android.server.autofill.AutofillManagerService r0;
        int i0;
        com.android.server.infra.AbstractPerUserSystemService $r1;

        r0 := @parameter0: com.android.server.autofill.AutofillManagerService;

        i0 := @parameter1: int;

        $r1 = virtualinvoke r0.<com.android.server.autofill.AutofillManagerService: com.android.server.infra.AbstractPerUserSystemService peekServiceForUserLocked(int)>(i0);

        return $r1;
    }

    static java.lang.Object access$6200(com.android.server.autofill.AutofillManagerService)
    {
        com.android.server.autofill.AutofillManagerService r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.server.autofill.AutofillManagerService;

        $r1 = r0.<com.android.server.autofill.AutofillManagerService: java.lang.Object mLock>;

        return $r1;
    }

    static boolean access$6300(com.android.server.autofill.AutofillManagerService, int)
    {
        com.android.server.autofill.AutofillManagerService r0;
        int i0;
        boolean $z0;

        r0 := @parameter0: com.android.server.autofill.AutofillManagerService;

        i0 := @parameter1: int;

        $z0 = virtualinvoke r0.<com.android.server.autofill.AutofillManagerService: boolean isDisabledLocked(int)>(i0);

        return $z0;
    }

    static java.lang.Object access$6400(com.android.server.autofill.AutofillManagerService)
    {
        com.android.server.autofill.AutofillManagerService r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.server.autofill.AutofillManagerService;

        $r1 = r0.<com.android.server.autofill.AutofillManagerService: java.lang.Object mLock>;

        return $r1;
    }

    static com.android.server.infra.AbstractPerUserSystemService access$6500(com.android.server.autofill.AutofillManagerService, int)
    {
        com.android.server.autofill.AutofillManagerService r0;
        int i0;
        com.android.server.infra.AbstractPerUserSystemService $r1;

        r0 := @parameter0: com.android.server.autofill.AutofillManagerService;

        i0 := @parameter1: int;

        $r1 = virtualinvoke r0.<com.android.server.autofill.AutofillManagerService: com.android.server.infra.AbstractPerUserSystemService getServiceForUserLocked(int)>(i0);

        return $r1;
    }

    static java.lang.Object access$6600(com.android.server.autofill.AutofillManagerService)
    {
        com.android.server.autofill.AutofillManagerService r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.server.autofill.AutofillManagerService;

        $r1 = r0.<com.android.server.autofill.AutofillManagerService: java.lang.Object mLock>;

        return $r1;
    }

    static com.android.server.infra.AbstractPerUserSystemService access$6700(com.android.server.autofill.AutofillManagerService, int)
    {
        com.android.server.autofill.AutofillManagerService r0;
        int i0;
        com.android.server.infra.AbstractPerUserSystemService $r1;

        r0 := @parameter0: com.android.server.autofill.AutofillManagerService;

        i0 := @parameter1: int;

        $r1 = virtualinvoke r0.<com.android.server.autofill.AutofillManagerService: com.android.server.infra.AbstractPerUserSystemService peekServiceForUserLocked(int)>(i0);

        return $r1;
    }

    static java.lang.Object access$6800(com.android.server.autofill.AutofillManagerService)
    {
        com.android.server.autofill.AutofillManagerService r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.server.autofill.AutofillManagerService;

        $r1 = r0.<com.android.server.autofill.AutofillManagerService: java.lang.Object mLock>;

        return $r1;
    }

    static void access$6900(com.android.server.autofill.AutofillManagerService, java.lang.String, java.io.PrintWriter)
    {
        com.android.server.autofill.AutofillManagerService r0;
        java.lang.String r1;
        java.io.PrintWriter r2;

        r0 := @parameter0: com.android.server.autofill.AutofillManagerService;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.io.PrintWriter;

        virtualinvoke r0.<com.android.server.autofill.AutofillManagerService: void dumpLocked(java.lang.String,java.io.PrintWriter)>(r1, r2);

        return;
    }

    static com.android.server.autofill.AutofillManagerService$AutofillCompatState access$700(com.android.server.autofill.AutofillManagerService)
    {
        com.android.server.autofill.AutofillManagerService r0;
        com.android.server.autofill.AutofillManagerService$AutofillCompatState $r1;

        r0 := @parameter0: com.android.server.autofill.AutofillManagerService;

        $r1 = r0.<com.android.server.autofill.AutofillManagerService: com.android.server.autofill.AutofillManagerService$AutofillCompatState mAutofillCompatState>;

        return $r1;
    }

    static int access$7000()
    {
        int $i0;

        $i0 = <com.android.server.autofill.AutofillManagerService: int sPartitionMaxCount>;

        return $i0;
    }

    static int access$7100()
    {
        int $i0;

        $i0 = <com.android.server.autofill.AutofillManagerService: int sVisibleDatasetsMaxCount>;

        return $i0;
    }

    static java.lang.String access$7300(com.android.server.autofill.AutofillManagerService)
    {
        com.android.server.autofill.AutofillManagerService r0;
        java.lang.String $r1;

        r0 := @parameter0: com.android.server.autofill.AutofillManagerService;

        $r1 = specialinvoke r0.<com.android.server.autofill.AutofillManagerService: java.lang.String getWhitelistedCompatModePackagesFromSettings()>();

        return $r1;
    }

    static int access$7400(com.android.server.autofill.AutofillManagerService)
    {
        com.android.server.autofill.AutofillManagerService r0;
        int $i0;

        r0 := @parameter0: com.android.server.autofill.AutofillManagerService;

        $i0 = r0.<com.android.server.autofill.AutofillManagerService: int mSupportedSmartSuggestionModes>;

        return $i0;
    }

    static android.util.LocalLog access$7500(com.android.server.autofill.AutofillManagerService)
    {
        com.android.server.autofill.AutofillManagerService r0;
        android.util.LocalLog $r1;

        r0 := @parameter0: com.android.server.autofill.AutofillManagerService;

        $r1 = r0.<com.android.server.autofill.AutofillManagerService: android.util.LocalLog mRequestsHistory>;

        return $r1;
    }

    static android.util.LocalLog access$7600(com.android.server.autofill.AutofillManagerService)
    {
        com.android.server.autofill.AutofillManagerService r0;
        android.util.LocalLog $r1;

        r0 := @parameter0: com.android.server.autofill.AutofillManagerService;

        $r1 = r0.<com.android.server.autofill.AutofillManagerService: android.util.LocalLog mUiLatencyHistory>;

        return $r1;
    }

    static android.util.LocalLog access$7700(com.android.server.autofill.AutofillManagerService)
    {
        com.android.server.autofill.AutofillManagerService r0;
        android.util.LocalLog $r1;

        r0 := @parameter0: com.android.server.autofill.AutofillManagerService;

        $r1 = r0.<com.android.server.autofill.AutofillManagerService: android.util.LocalLog mWtfHistory>;

        return $r1;
    }

    static java.lang.Object access$800(com.android.server.autofill.AutofillManagerService)
    {
        com.android.server.autofill.AutofillManagerService r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.server.autofill.AutofillManagerService;

        $r1 = r0.<com.android.server.autofill.AutofillManagerService: java.lang.Object mLock>;

        return $r1;
    }

    static com.android.server.infra.AbstractPerUserSystemService access$900(com.android.server.autofill.AutofillManagerService, int)
    {
        com.android.server.autofill.AutofillManagerService r0;
        int i0;
        com.android.server.infra.AbstractPerUserSystemService $r1;

        r0 := @parameter0: com.android.server.autofill.AutofillManagerService;

        i0 := @parameter1: int;

        $r1 = virtualinvoke r0.<com.android.server.autofill.AutofillManagerService: com.android.server.infra.AbstractPerUserSystemService peekServiceForUserLocked(int)>(i0);

        return $r1;
    }

    private void addCompatibilityModeRequestsLocked(com.android.server.autofill.AutofillManagerServiceImpl, int)
    {
        com.android.server.autofill.AutofillManagerService r0;
        int i0, i1, i4;
        java.util.Map r1;
        java.lang.String r2, $r8;
        com.android.server.autofill.AutofillManagerService$AutofillCompatState $r3, $r10;
        boolean $z0, $z1;
        java.lang.Object $r4, $r9, $r11;
        java.lang.StringBuilder $r5;
        long $l3;
        java.lang.String[] $r12;
        com.android.server.autofill.AutofillManagerServiceImpl r13;
        android.util.ArrayMap r14;
        java.lang.Long r15;

        r0 := @this: com.android.server.autofill.AutofillManagerService;

        r13 := @parameter0: com.android.server.autofill.AutofillManagerServiceImpl;

        i0 := @parameter1: int;

        $r3 = r0.<com.android.server.autofill.AutofillManagerService: com.android.server.autofill.AutofillManagerService$AutofillCompatState mAutofillCompatState>;

        virtualinvoke $r3.<com.android.server.autofill.AutofillManagerService$AutofillCompatState: void reset(int)>(i0);

        r14 = virtualinvoke r13.<com.android.server.autofill.AutofillManagerServiceImpl: android.util.ArrayMap getCompatibilityPackagesLocked()>();

        if r14 == null goto label7;

        $z0 = virtualinvoke r14.<android.util.ArrayMap: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        goto label7;

     label1:
        r1 = specialinvoke r0.<com.android.server.autofill.AutofillManagerService: java.util.Map getWhitelistedCompatModePackages()>();

        i1 = virtualinvoke r14.<android.util.ArrayMap: int size()>();

        i4 = 0;

     label2:
        if i4 >= i1 goto label6;

        $r4 = virtualinvoke r14.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i4);

        r2 = (java.lang.String) $r4;

        if r1 == null goto label4;

        $z1 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>(r2);

        if $z1 != 0 goto label3;

        goto label4;

     label3:
        $r9 = virtualinvoke r14.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i4);

        r15 = (java.lang.Long) $r9;

        if r15 == null goto label5;

        $r10 = r0.<com.android.server.autofill.AutofillManagerService: com.android.server.autofill.AutofillManagerService$AutofillCompatState mAutofillCompatState>;

        $l3 = virtualinvoke r15.<java.lang.Long: long longValue()>();

        $r11 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        $r12 = (java.lang.String[]) $r11;

        virtualinvoke $r10.<com.android.server.autofill.AutofillManagerService$AutofillCompatState: void addCompatibilityModeRequest(java.lang.String,long,java.lang.String[],int)>(r2, $l3, $r12, i0);

        goto label5;

     label4:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring not whitelisted compat package ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AutofillManagerService", $r8);

     label5:
        i4 = i4 + 1;

        goto label2;

     label6:
        return;

     label7:
        return;
    }

    public static int getPartitionMaxCount()
    {
        java.lang.Object r0;
        int i0;
        java.lang.Throwable $r2;

        r0 = <com.android.server.autofill.AutofillManagerService: java.lang.Object sLock>;

        entermonitor r0;

     label1:
        i0 = <com.android.server.autofill.AutofillManagerService: int sPartitionMaxCount>;

        exitmonitor r0;

     label2:
        return i0;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public static int getVisibleDatasetsMaxCount()
    {
        java.lang.Object r0;
        int i0;
        java.lang.Throwable $r2;

        r0 = <com.android.server.autofill.AutofillManagerService: java.lang.Object sLock>;

        entermonitor r0;

     label1:
        i0 = <com.android.server.autofill.AutofillManagerService: int sVisibleDatasetsMaxCount>;

        exitmonitor r0;

     label2:
        return i0;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private java.util.Map getWhitelistedCompatModePackages()
    {
        com.android.server.autofill.AutofillManagerService r0;
        java.lang.String $r1;
        java.util.Map $r2;

        r0 := @this: com.android.server.autofill.AutofillManagerService;

        $r1 = specialinvoke r0.<com.android.server.autofill.AutofillManagerService: java.lang.String getWhitelistedCompatModePackagesFromSettings()>();

        $r2 = staticinvoke <com.android.server.autofill.AutofillManagerService: java.util.Map getWhitelistedCompatModePackages(java.lang.String)>($r1);

        return $r2;
    }

    static java.util.Map getWhitelistedCompatModePackages(java.lang.String)
    {
        java.lang.String r0, r3, $r12, $r23, $r32, r33, r34;
        int i0, $i1, $i2, $i4, $i5, $i6, $i7;
        boolean $z0, $z1, $z3, $z4;
        android.util.ArrayMap $r5;
        android.text.TextUtils$SimpleStringSplitter $r6, $r8;
        char $c3;
        java.util.ArrayList $r7, r35;
        java.lang.StringBuilder $r13, $r24;
        java.lang.String[] r39;

        r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r0);

        if $z0 == 0 goto label01;

        return null;

     label01:
        $r5 = new android.util.ArrayMap;

        specialinvoke $r5.<android.util.ArrayMap: void <init>()>();

        $r6 = new android.text.TextUtils$SimpleStringSplitter;

        specialinvoke $r6.<android.text.TextUtils$SimpleStringSplitter: void <init>(char)>(58);

        virtualinvoke $r6.<android.text.TextUtils$SimpleStringSplitter: void setString(java.lang.String)>(r0);

     label02:
        $z3 = virtualinvoke $r6.<android.text.TextUtils$SimpleStringSplitter: boolean hasNext()>();

        if $z3 == 0 goto label11;

        r33 = virtualinvoke $r6.<android.text.TextUtils$SimpleStringSplitter: java.lang.String next()>();

        i0 = virtualinvoke r33.<java.lang.String: int indexOf(int)>(91);

        if i0 != -1 goto label03;

        r34 = r33;

        r35 = null;

        goto label08;

     label03:
        $i1 = virtualinvoke r33.<java.lang.String: int length()>();

        $i2 = $i1 - 1;

        $c3 = virtualinvoke r33.<java.lang.String: char charAt(int)>($i2);

        if $c3 == 93 goto label04;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring entry \'");

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r33);

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' on \'");

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'because it does not end on \'");

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r32 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AutofillManagerService", $r32);

        goto label02;

     label04:
        r34 = virtualinvoke r33.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        $i4 = i0 + 1;

        $i5 = virtualinvoke r33.<java.lang.String: int length()>();

        $i6 = $i5 - 1;

        r3 = virtualinvoke r33.<java.lang.String: java.lang.String substring(int,int)>($i4, $i6);

        $z1 = <com.android.server.autofill.Helper: boolean sVerbose>;

        if $z1 == 0 goto label05;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pkg:");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r34);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": block:");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r33);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": urls:");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": block:");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r23 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("AutofillManagerService", $r23);

     label05:
        $r8 = new android.text.TextUtils$SimpleStringSplitter;

        specialinvoke $r8.<android.text.TextUtils$SimpleStringSplitter: void <init>(char)>(44);

        virtualinvoke $r8.<android.text.TextUtils$SimpleStringSplitter: void setString(java.lang.String)>(r3);

     label06:
        $z4 = virtualinvoke $r8.<android.text.TextUtils$SimpleStringSplitter: boolean hasNext()>();

        if $z4 == 0 goto label07;

        $r12 = virtualinvoke $r8.<android.text.TextUtils$SimpleStringSplitter: java.lang.String next()>();

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r12);

        goto label06;

     label07:
        r35 = $r7;

     label08:
        if r35 != null goto label09;

        virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r34, null);

        goto label10;

     label09:
        $i7 = interfaceinvoke r35.<java.util.List: int size()>();

        r39 = newarray (java.lang.String)[$i7];

        interfaceinvoke r35.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r39);

        virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r34, r39);

     label10:
        goto label02;

     label11:
        return $r5;
    }

    private java.lang.String getWhitelistedCompatModePackagesFromSettings()
    {
        com.android.server.autofill.AutofillManagerService r0;
        android.content.Context $r1;
        android.content.ContentResolver $r2;
        java.lang.String $r3;

        r0 := @this: com.android.server.autofill.AutofillManagerService;

        $r1 = virtualinvoke r0.<com.android.server.autofill.AutofillManagerService: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r3 = staticinvoke <android.provider.Settings$Global: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r2, "autofill_compat_mode_allowed_packages");

        return $r3;
    }

    private void handleInputMethodSwitch(int)
    {
        com.android.server.autofill.AutofillManagerService r0;
        int i0;
        java.lang.Object r1;
        com.android.server.infra.AbstractPerUserSystemService $r2;
        java.lang.Throwable $r3;
        com.android.server.autofill.AutofillManagerServiceImpl r4;

        r0 := @this: com.android.server.autofill.AutofillManagerService;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.autofill.AutofillManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r2 = virtualinvoke r0.<com.android.server.autofill.AutofillManagerService: com.android.server.infra.AbstractPerUserSystemService peekServiceForUserLocked(int)>(i0);

        r4 = (com.android.server.autofill.AutofillManagerServiceImpl) $r2;

     label2:
        if r4 == null goto label4;

     label3:
        virtualinvoke r4.<com.android.server.autofill.AutofillManagerServiceImpl: void onSwitchInputMethod()>();

     label4:
        exitmonitor r1;

     label5:
        return;

     label6:
        $r3 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    static void lambda$destroySessions$2(com.android.server.autofill.AutofillManagerServiceImpl)
    {
        com.android.server.autofill.AutofillManagerServiceImpl r0;

        r0 := @parameter0: com.android.server.autofill.AutofillManagerServiceImpl;

        virtualinvoke r0.<com.android.server.autofill.AutofillManagerServiceImpl: void destroySessionsLocked()>();

        return;
    }

    static void lambda$listSessions$3(java.util.ArrayList, com.android.server.autofill.AutofillManagerServiceImpl)
    {
        java.util.ArrayList r0;
        com.android.server.autofill.AutofillManagerServiceImpl r1;

        r0 := @parameter0: java.util.ArrayList;

        r1 := @parameter1: com.android.server.autofill.AutofillManagerServiceImpl;

        virtualinvoke r1.<com.android.server.autofill.AutofillManagerServiceImpl: void listSessionsLocked(java.util.ArrayList)>(r0);

        return;
    }

    static void lambda$reset$4(com.android.server.autofill.AutofillManagerServiceImpl)
    {
        com.android.server.autofill.AutofillManagerServiceImpl r0;

        r0 := @parameter0: com.android.server.autofill.AutofillManagerServiceImpl;

        virtualinvoke r0.<com.android.server.autofill.AutofillManagerServiceImpl: void destroyLocked()>();

        return;
    }

    private void onAugmentedServiceNameChanged(int, java.lang.String, boolean)
    {
        com.android.server.autofill.AutofillManagerService r0;
        int i0;
        boolean z0;
        com.android.server.autofill.AutofillManagerService$AugmentedAutofillState $r1;
        com.android.server.infra.AbstractPerUserSystemService $r2;
        java.lang.Throwable $r4;
        java.lang.String r5;
        java.lang.Object r6;
        com.android.server.autofill.AutofillManagerServiceImpl r7;

        r0 := @this: com.android.server.autofill.AutofillManagerService;

        i0 := @parameter0: int;

        r5 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $r1 = r0.<com.android.server.autofill.AutofillManagerService: com.android.server.autofill.AutofillManagerService$AugmentedAutofillState mAugmentedAutofillState>;

        staticinvoke <com.android.server.autofill.AutofillManagerService$AugmentedAutofillState: void access$400(com.android.server.autofill.AutofillManagerService$AugmentedAutofillState,int,java.lang.String,boolean)>($r1, i0, r5, z0);

        r6 = r0.<com.android.server.autofill.AutofillManagerService: java.lang.Object mLock>;

        entermonitor r6;

     label01:
        $r2 = virtualinvoke r0.<com.android.server.autofill.AutofillManagerService: com.android.server.infra.AbstractPerUserSystemService peekServiceForUserLocked(int)>(i0);

        r7 = (com.android.server.autofill.AutofillManagerServiceImpl) $r2;

     label02:
        if r7 != null goto label05;

     label03:
        virtualinvoke r0.<com.android.server.autofill.AutofillManagerService: com.android.server.infra.AbstractPerUserSystemService getServiceForUserLocked(int)>(i0);

     label04:
        goto label06;

     label05:
        virtualinvoke r7.<com.android.server.autofill.AutofillManagerServiceImpl: void updateRemoteAugmentedAutofillService()>();

     label06:
        exitmonitor r6;

     label07:
        return;

     label08:
        $r4 := @caughtexception;

     label09:
        exitmonitor r6;

     label10:
        throw $r4;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    private void onDeviceConfigChange(java.util.Set)
    {
        com.android.server.autofill.AutofillManagerService r0;
        java.lang.String r1, r2, $r8;
        int i0;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Object $r4;
        java.lang.StringBuilder $r5;
        java.util.Set r9;
        java.util.Iterator r10;
        byte b2;

        r0 := @this: com.android.server.autofill.AutofillManagerService;

        r9 := @parameter0: java.util.Set;

        r10 = interfaceinvoke r9.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label9;

        $r4 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>();

        r1 = (java.lang.String) $r4;

        b2 = -1;

        i0 = virtualinvoke r1.<java.lang.String: int hashCode()>();

        if i0 == -1546842390 goto label5;

        if i0 == -987506216 goto label4;

        if i0 == 1709136986 goto label3;

     label2:
        goto label6;

     label3:
        $z3 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("smart_suggestion_supported_modes");

        if $z3 == 0 goto label2;

        b2 = 0;

        goto label6;

     label4:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("augmented_service_request_timeout");

        if $z2 == 0 goto label2;

        b2 = 2;

        goto label6;

     label5:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("augmented_service_idle_unbind_timeout");

        if $z1 == 0 goto label2;

        b2 = 1;

     label6:
        if b2 == 0 goto label7;

        if b2 == 1 goto label7;

        if b2 == 2 goto label7;

        r2 = r0.<com.android.server.autofill.AutofillManagerService: java.lang.String mTag>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring change on ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>(r2, $r8);

        goto label8;

     label7:
        specialinvoke r0.<com.android.server.autofill.AutofillManagerService: void setDeviceConfigProperties()>();

     label8:
        goto label1;

     label9:
        return;
    }

    private void send(com.android.internal.os.IResultReceiver, int)
    {
        com.android.server.autofill.AutofillManagerService r0;
        int i0;
        android.os.RemoteException $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r6;
        com.android.internal.os.IResultReceiver r7;

        r0 := @this: com.android.server.autofill.AutofillManagerService;

        r7 := @parameter0: com.android.internal.os.IResultReceiver;

        i0 := @parameter1: int;

     label1:
        interfaceinvoke r7.<com.android.internal.os.IResultReceiver: void send(int,android.os.Bundle)>(i0, null);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error async reporting result to client: ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AutofillManagerService", $r6);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private void send(com.android.internal.os.IResultReceiver, int, int)
    {
        com.android.server.autofill.AutofillManagerService r0;
        int i0, i1;
        android.os.Bundle $r2;
        android.os.RemoteException $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r7;
        com.android.internal.os.IResultReceiver r8;

        r0 := @this: com.android.server.autofill.AutofillManagerService;

        r8 := @parameter0: com.android.internal.os.IResultReceiver;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

     label1:
        $r2 = staticinvoke <com.android.internal.util.SyncResultReceiver: android.os.Bundle bundleFor(int)>(i1);

        interfaceinvoke r8.<com.android.internal.os.IResultReceiver: void send(int,android.os.Bundle)>(i0, $r2);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error async reporting result to client: ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AutofillManagerService", $r7);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private void send(com.android.internal.os.IResultReceiver, android.os.Bundle)
    {
        com.android.server.autofill.AutofillManagerService r0;
        android.os.RemoteException $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r5;
        com.android.internal.os.IResultReceiver r6;
        android.os.Bundle r7;

        r0 := @this: com.android.server.autofill.AutofillManagerService;

        r6 := @parameter0: com.android.internal.os.IResultReceiver;

        r7 := @parameter1: android.os.Bundle;

     label1:
        interfaceinvoke r6.<com.android.internal.os.IResultReceiver: void send(int,android.os.Bundle)>(0, r7);

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error async reporting result to client: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AutofillManagerService", $r5);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private void send(com.android.internal.os.IResultReceiver, android.os.Parcelable)
    {
        com.android.server.autofill.AutofillManagerService r0;
        com.android.internal.os.IResultReceiver r1;
        android.os.Parcelable r2;
        android.os.Bundle $r3;

        r0 := @this: com.android.server.autofill.AutofillManagerService;

        r1 := @parameter0: com.android.internal.os.IResultReceiver;

        r2 := @parameter1: android.os.Parcelable;

        $r3 = staticinvoke <com.android.internal.util.SyncResultReceiver: android.os.Bundle bundleFor(android.os.Parcelable)>(r2);

        specialinvoke r0.<com.android.server.autofill.AutofillManagerService: void send(com.android.internal.os.IResultReceiver,android.os.Bundle)>(r1, $r3);

        return;
    }

    private void send(com.android.internal.os.IResultReceiver, java.lang.String)
    {
        com.android.server.autofill.AutofillManagerService r0;
        com.android.internal.os.IResultReceiver r1;
        java.lang.String r2;
        android.os.Bundle $r3;

        r0 := @this: com.android.server.autofill.AutofillManagerService;

        r1 := @parameter0: com.android.internal.os.IResultReceiver;

        r2 := @parameter1: java.lang.String;

        $r3 = staticinvoke <com.android.internal.util.SyncResultReceiver: android.os.Bundle bundleFor(java.lang.String)>(r2);

        specialinvoke r0.<com.android.server.autofill.AutofillManagerService: void send(com.android.internal.os.IResultReceiver,android.os.Bundle)>(r1, $r3);

        return;
    }

    private void send(com.android.internal.os.IResultReceiver, boolean)
    {
        com.android.server.autofill.AutofillManagerService r0;
        com.android.internal.os.IResultReceiver r1;
        boolean z0;
        int i0;

        r0 := @this: com.android.server.autofill.AutofillManagerService;

        r1 := @parameter0: com.android.internal.os.IResultReceiver;

        z0 := @parameter1: boolean;

        i0 = (int) z0;

        specialinvoke r0.<com.android.server.autofill.AutofillManagerService: void send(com.android.internal.os.IResultReceiver,int)>(r1, i0);

        return;
    }

    private void send(com.android.internal.os.IResultReceiver, java.lang.String[])
    {
        com.android.server.autofill.AutofillManagerService r0;
        com.android.internal.os.IResultReceiver r1;
        java.lang.String[] r2;
        android.os.Bundle $r3;

        r0 := @this: com.android.server.autofill.AutofillManagerService;

        r1 := @parameter0: com.android.internal.os.IResultReceiver;

        r2 := @parameter1: java.lang.String[];

        $r3 = staticinvoke <com.android.internal.util.SyncResultReceiver: android.os.Bundle bundleFor(java.lang.String[])>(r2);

        specialinvoke r0.<com.android.server.autofill.AutofillManagerService: void send(com.android.internal.os.IResultReceiver,android.os.Bundle)>(r1, $r3);

        return;
    }

    private void setDeviceConfigProperties()
    {
        com.android.server.autofill.AutofillManagerService r0;
        java.lang.Object r1;
        java.lang.String r2, $r8, $r10;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        boolean $z0;
        java.lang.Throwable $r11;
        java.lang.StringBuilder r12;

        r0 := @this: com.android.server.autofill.AutofillManagerService;

        r1 = r0.<com.android.server.autofill.AutofillManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $i0 = staticinvoke <android.provider.DeviceConfig: int getInt(java.lang.String,java.lang.String,int)>("autofill", "augmented_service_idle_unbind_timeout", 0);

        r0.<com.android.server.autofill.AutofillManagerService: int mAugmentedServiceIdleUnbindTimeoutMs> = $i0;

        $i1 = staticinvoke <android.provider.DeviceConfig: int getInt(java.lang.String,java.lang.String,int)>("autofill", "augmented_service_request_timeout", 5000);

        r0.<com.android.server.autofill.AutofillManagerService: int mAugmentedServiceRequestTimeoutMs> = $i1;

        $i2 = staticinvoke <android.provider.DeviceConfig: int getInt(java.lang.String,java.lang.String,int)>("autofill", "smart_suggestion_supported_modes", 1);

        r0.<com.android.server.autofill.AutofillManagerService: int mSupportedSmartSuggestionModes> = $i2;

        $z0 = r0.<com.android.server.autofill.AutofillManagerService: boolean verbose>;

        if $z0 == 0 goto label2;

        r2 = r0.<com.android.server.autofill.AutofillManagerService: java.lang.String mTag>;

        r12 = new java.lang.StringBuilder;

        specialinvoke r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setDeviceConfigProperties(): augmentedIdleTimeout=");

        $i3 = r0.<com.android.server.autofill.AutofillManagerService: int mAugmentedServiceIdleUnbindTimeoutMs>;

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", augmentedRequestTimeout=");

        $i4 = r0.<com.android.server.autofill.AutofillManagerService: int mAugmentedServiceRequestTimeoutMs>;

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", smartSuggestionMode=");

        $i5 = r0.<com.android.server.autofill.AutofillManagerService: int mSupportedSmartSuggestionModes>;

        $r8 = staticinvoke <android.view.autofill.AutofillManager: java.lang.String getSmartSuggestionModeToString(int)>($i5);

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>(r2, $r10);

     label2:
        exitmonitor r1;

     label3:
        return;

     label4:
        $r11 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r11;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    private void setLogLevelFromSettings()
    {
        com.android.server.autofill.AutofillManagerService r0;
        int i0, $i1;
        java.lang.Object r1;
        android.content.Context $r2;
        android.content.ContentResolver $r3;
        java.lang.StringBuilder $r4, $r12;
        java.lang.String $r11, $r15;
        boolean $z2, z3, z4;
        java.lang.Throwable $r16;

        r0 := @this: com.android.server.autofill.AutofillManagerService;

        $r2 = virtualinvoke r0.<com.android.server.autofill.AutofillManagerService: android.content.Context getContext()>();

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i1 = <android.view.autofill.AutofillManager: int DEFAULT_LOGGING_LEVEL>;

        i0 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>($r3, "autofill_logging_level", $i1);

        z3 = 0;

        z4 = 0;

        if i0 == 0 goto label03;

        if i0 != 4 goto label01;

        z4 = 1;

        z3 = 1;

        goto label03;

     label01:
        if i0 != 2 goto label02;

        z3 = 1;

        z4 = 0;

        goto label03;

     label02:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setLogLevelFromSettings(): invalid level: ");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AutofillManagerService", $r15);

        z4 = 0;

        z3 = 0;

     label03:
        if z3 != 0 goto label04;

        $z2 = <com.android.server.autofill.Helper: boolean sDebug>;

        if $z2 == 0 goto label05;

     label04:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setLogLevelFromSettings(): level=");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", debug=");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z3);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", verbose=");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z4);

        $r11 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("AutofillManagerService", $r11);

     label05:
        r1 = r0.<com.android.server.autofill.AutofillManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label06:
        specialinvoke r0.<com.android.server.autofill.AutofillManagerService: void setLoggingLevelsLocked(boolean,boolean)>(z3, z4);

        exitmonitor r1;

     label07:
        return;

     label08:
        $r16 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r16;

        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    private void setLoggingLevelsLocked(boolean, boolean)
    {
        com.android.server.autofill.AutofillManagerService r0;
        boolean z0, z1;

        r0 := @this: com.android.server.autofill.AutofillManagerService;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        <com.android.server.autofill.Helper: boolean sDebug> = z0;

        <android.view.autofill.Helper: boolean sDebug> = z0;

        r0.<com.android.server.autofill.AutofillManagerService: boolean debug> = z0;

        <com.android.server.autofill.Helper: boolean sVerbose> = z1;

        <android.view.autofill.Helper: boolean sVerbose> = z1;

        r0.<com.android.server.autofill.AutofillManagerService: boolean verbose> = z1;

        return;
    }

    private void setMaxPartitionsFromSettings()
    {
        com.android.server.autofill.AutofillManagerService r0;
        int i0;
        android.content.Context $r2;
        android.content.ContentResolver $r3;
        boolean $z0;
        java.lang.StringBuilder $r4;
        java.lang.String $r7;
        java.lang.Throwable $r8;
        java.lang.Object r10;

        r0 := @this: com.android.server.autofill.AutofillManagerService;

        $r2 = virtualinvoke r0.<com.android.server.autofill.AutofillManagerService: android.content.Context getContext()>();

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        i0 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>($r3, "autofill_max_partitions_size", 10);

        $z0 = <com.android.server.autofill.Helper: boolean sDebug>;

        if $z0 == 0 goto label1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setMaxPartitionsFromSettings(): ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("AutofillManagerService", $r7);

     label1:
        r10 = <com.android.server.autofill.AutofillManagerService: java.lang.Object sLock>;

        entermonitor r10;

     label2:
        <com.android.server.autofill.AutofillManagerService: int sPartitionMaxCount> = i0;

        exitmonitor r10;

     label3:
        return;

     label4:
        $r8 := @caughtexception;

     label5:
        exitmonitor r10;

     label6:
        throw $r8;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    private void setMaxVisibleDatasetsFromSettings()
    {
        com.android.server.autofill.AutofillManagerService r0;
        int i0;
        java.lang.Object r1;
        android.content.Context $r2;
        android.content.ContentResolver $r3;
        boolean $z0;
        java.lang.StringBuilder $r4;
        java.lang.String $r7;
        java.lang.Throwable $r8;

        r0 := @this: com.android.server.autofill.AutofillManagerService;

        $r2 = virtualinvoke r0.<com.android.server.autofill.AutofillManagerService: android.content.Context getContext()>();

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        i0 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>($r3, "autofill_max_visible_datasets", 0);

        $z0 = <com.android.server.autofill.Helper: boolean sDebug>;

        if $z0 == 0 goto label1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setMaxVisibleDatasetsFromSettings(): ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("AutofillManagerService", $r7);

     label1:
        r1 = <com.android.server.autofill.AutofillManagerService: java.lang.Object sLock>;

        entermonitor r1;

     label2:
        <com.android.server.autofill.AutofillManagerService: int sVisibleDatasetsMaxCount> = i0;

        exitmonitor r1;

     label3:
        return;

     label4:
        $r8 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r8;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    void calculateScore(java.lang.String, java.lang.String, java.lang.String, android.os.RemoteCallback)
    {
        com.android.server.autofill.AutofillManagerService r0;
        java.lang.String r1, r2, r3;
        android.os.RemoteCallback r4;
        com.android.server.autofill.FieldClassificationStrategy $r5;
        android.content.Context $r6;
        android.view.autofill.AutofillValue[] $r7;
        android.view.autofill.AutofillValue $r8;
        java.util.List $r9;
        java.lang.String[] $r10, $r11;

        r0 := @this: com.android.server.autofill.AutofillManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.os.RemoteCallback;

        virtualinvoke r0.<com.android.server.autofill.AutofillManagerService: void enforceCallingPermissionForManagement()>();

        $r5 = new com.android.server.autofill.FieldClassificationStrategy;

        $r6 = virtualinvoke r0.<com.android.server.autofill.AutofillManagerService: android.content.Context getContext()>();

        specialinvoke $r5.<com.android.server.autofill.FieldClassificationStrategy: void <init>(android.content.Context,int)>($r6, -2);

        $r7 = newarray (android.view.autofill.AutofillValue)[1];

        $r8 = staticinvoke <android.view.autofill.AutofillValue: android.view.autofill.AutofillValue forText(java.lang.CharSequence)>(r2);

        $r7[0] = $r8;

        $r9 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r7);

        $r10 = newarray (java.lang.String)[1];

        $r10[0] = r3;

        $r11 = newarray (java.lang.String)[1];

        $r11[0] = null;

        virtualinvoke $r5.<com.android.server.autofill.FieldClassificationStrategy: void calculateScores(android.os.RemoteCallback,java.util.List,java.lang.String[],java.lang.String[],java.lang.String,android.os.Bundle,android.util.ArrayMap,android.util.ArrayMap)>(r4, $r9, $r10, $r11, r1, null, null, null);

        return;
    }

    void destroySessions(int, com.android.internal.os.IResultReceiver)
    {
        com.android.server.autofill.AutofillManagerService r0;
        int i0;
        com.android.server.autofill.AutofillManagerServiceImpl r1;
        java.lang.String $r5;
        com.android.server.autofill.'-$$Lambda$AutofillManagerService$J4rMQC_cWRd6Td3UdzyhcfhT9xc' $r6;
        com.android.server.infra.AbstractPerUserSystemService $r7;
        android.os.RemoteException $r8;
        java.lang.Throwable $r9;
        com.android.internal.os.IResultReceiver r10;
        java.lang.Object r12;
        java.lang.StringBuilder r16;
        android.os.Bundle r17;
        com.android.server.infra.AbstractMasterSystemService$Visitor r18;

        r0 := @this: com.android.server.autofill.AutofillManagerService;

        i0 := @parameter0: int;

        r10 := @parameter1: com.android.internal.os.IResultReceiver;

        r16 = new java.lang.StringBuilder;

        specialinvoke r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("destroySessions() for userId ");

        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("AutofillManagerService", $r5);

        virtualinvoke r0.<com.android.server.autofill.AutofillManagerService: void enforceCallingPermissionForManagement()>();

        r12 = r0.<com.android.server.autofill.AutofillManagerService: java.lang.Object mLock>;

        entermonitor r12;

        if i0 == -1 goto label05;

     label01:
        $r7 = virtualinvoke r0.<com.android.server.autofill.AutofillManagerService: com.android.server.infra.AbstractPerUserSystemService peekServiceForUserLocked(int)>(i0);

        r1 = (com.android.server.autofill.AutofillManagerServiceImpl) $r7;

     label02:
        if r1 == null goto label04;

     label03:
        virtualinvoke r1.<com.android.server.autofill.AutofillManagerServiceImpl: void destroySessionsLocked()>();

     label04:
        goto label06;

     label05:
        $r6 = <com.android.server.autofill._$$Lambda$AutofillManagerService$J4rMQC_cWRd6Td3UdzyhcfhT9xc: com.android.server.autofill.'-$$Lambda$AutofillManagerService$J4rMQC_cWRd6Td3UdzyhcfhT9xc' INSTANCE>;

        r18 = (com.android.server.infra.AbstractMasterSystemService$Visitor) $r6;

        virtualinvoke r0.<com.android.server.autofill.AutofillManagerService: void visitServicesLocked(com.android.server.infra.AbstractMasterSystemService$Visitor)>(r18);

     label06:
        exitmonitor r12;

     label07:
        r17 = new android.os.Bundle;

        specialinvoke r17.<android.os.Bundle: void <init>()>();

        interfaceinvoke r10.<com.android.internal.os.IResultReceiver: void send(int,android.os.Bundle)>(0, r17);

     label08:
        goto label10;

     label09:
        $r8 := @caughtexception;

     label10:
        return;

     label11:
        $r9 := @caughtexception;

     label12:
        exitmonitor r12;

     label13:
        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch android.os.RemoteException from label07 to label08 with label09;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    protected void enforceCallingPermissionForManagement()
    {
        com.android.server.autofill.AutofillManagerService r0;
        android.content.Context $r1;

        r0 := @this: com.android.server.autofill.AutofillManagerService;

        $r1 = virtualinvoke r0.<com.android.server.autofill.AutofillManagerService: android.content.Context getContext()>();

        virtualinvoke $r1.<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.MANAGE_AUTO_FILL", "AutofillManagerService");

        return;
    }

    java.lang.Boolean getFullScreenMode()
    {
        com.android.server.autofill.AutofillManagerService r0;
        java.lang.Boolean $r1;

        r0 := @this: com.android.server.autofill.AutofillManagerService;

        virtualinvoke r0.<com.android.server.autofill.AutofillManagerService: void enforceCallingPermissionForManagement()>();

        $r1 = <com.android.server.autofill.Helper: java.lang.Boolean sFullScreenMode>;

        return $r1;
    }

    int getLogLevel()
    {
        com.android.server.autofill.AutofillManagerService r0;
        java.lang.Object r1;
        boolean $z0, $z1;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.autofill.AutofillManagerService;

        virtualinvoke r0.<com.android.server.autofill.AutofillManagerService: void enforceCallingPermissionForManagement()>();

        r1 = r0.<com.android.server.autofill.AutofillManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $z0 = <com.android.server.autofill.Helper: boolean sVerbose>;

        if $z0 == 0 goto label3;

        exitmonitor r1;

     label2:
        return 4;

     label3:
        $z1 = <com.android.server.autofill.Helper: boolean sDebug>;

        if $z1 == 0 goto label5;

        exitmonitor r1;

     label4:
        return 2;

     label5:
        exitmonitor r1;

     label6:
        return 0;

     label7:
        $r3 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    int getMaxPartitions()
    {
        com.android.server.autofill.AutofillManagerService r0;
        java.lang.Object r1;
        int i0;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.autofill.AutofillManagerService;

        virtualinvoke r0.<com.android.server.autofill.AutofillManagerService: void enforceCallingPermissionForManagement()>();

        r1 = r0.<com.android.server.autofill.AutofillManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        i0 = <com.android.server.autofill.AutofillManagerService: int sPartitionMaxCount>;

        exitmonitor r1;

     label2:
        return i0;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    int getMaxVisibleDatasets()
    {
        com.android.server.autofill.AutofillManagerService r0;
        java.lang.Object r1;
        int i0;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.autofill.AutofillManagerService;

        virtualinvoke r0.<com.android.server.autofill.AutofillManagerService: void enforceCallingPermissionForManagement()>();

        r1 = <com.android.server.autofill.AutofillManagerService: java.lang.Object sLock>;

        entermonitor r1;

     label1:
        i0 = <com.android.server.autofill.AutofillManagerService: int sVisibleDatasetsMaxCount>;

        exitmonitor r1;

     label2:
        return i0;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    protected java.lang.String getServiceSettingsProperty()
    {
        com.android.server.autofill.AutofillManagerService r0;

        r0 := @this: com.android.server.autofill.AutofillManagerService;

        return "autofill_service";
    }

    int getSupportedSmartSuggestionModesLocked()
    {
        com.android.server.autofill.AutofillManagerService r0;
        int $i0;

        r0 := @this: com.android.server.autofill.AutofillManagerService;

        $i0 = r0.<com.android.server.autofill.AutofillManagerService: int mSupportedSmartSuggestionModes>;

        return $i0;
    }

    boolean isDefaultAugmentedServiceEnabled(int)
    {
        com.android.server.autofill.AutofillManagerService r0;
        int i0;
        com.android.server.infra.FrameworkResourcesServiceNameResolver $r1;
        boolean $z0;

        r0 := @this: com.android.server.autofill.AutofillManagerService;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.server.autofill.AutofillManagerService: void enforceCallingPermissionForManagement()>();

        $r1 = r0.<com.android.server.autofill.AutofillManagerService: com.android.server.infra.FrameworkResourcesServiceNameResolver mAugmentedAutofillResolver>;

        $z0 = virtualinvoke $r1.<com.android.server.infra.FrameworkResourcesServiceNameResolver: boolean isDefaultServiceEnabled(int)>(i0);

        return $z0;
    }

    boolean isInstantServiceAllowed()
    {
        com.android.server.autofill.AutofillManagerService r0;
        boolean $z0;

        r0 := @this: com.android.server.autofill.AutofillManagerService;

        $z0 = r0.<com.android.server.autofill.AutofillManagerService: boolean mAllowInstantService>;

        return $z0;
    }

    public boolean isUserSupported(com.android.server.SystemService$TargetUser)
    {
        com.android.server.autofill.AutofillManagerService r0;
        com.android.server.SystemService$TargetUser r1;
        android.content.pm.UserInfo $r2, $r3;
        boolean $z0, $z1, z2;

        r0 := @this: com.android.server.autofill.AutofillManagerService;

        r1 := @parameter0: com.android.server.SystemService$TargetUser;

        $r2 = virtualinvoke r1.<com.android.server.SystemService$TargetUser: android.content.pm.UserInfo getUserInfo()>();

        $z0 = virtualinvoke $r2.<android.content.pm.UserInfo: boolean isFull()>();

        if $z0 != 0 goto label2;

        $r3 = virtualinvoke r1.<com.android.server.SystemService$TargetUser: android.content.pm.UserInfo getUserInfo()>();

        $z1 = virtualinvoke $r3.<android.content.pm.UserInfo: boolean isManagedProfile()>();

        if $z1 == 0 goto label1;

        goto label2;

     label1:
        z2 = 0;

        goto label3;

     label2:
        z2 = 1;

     label3:
        return z2;
    }

    public void lambda$new$0$AutofillManagerService(android.provider.DeviceConfig$Properties)
    {
        com.android.server.autofill.AutofillManagerService r0;
        android.provider.DeviceConfig$Properties r1;
        java.util.Set $r2;

        r0 := @this: com.android.server.autofill.AutofillManagerService;

        r1 := @parameter0: android.provider.DeviceConfig$Properties;

        $r2 = virtualinvoke r1.<android.provider.DeviceConfig$Properties: java.util.Set getKeyset()>();

        specialinvoke r0.<com.android.server.autofill.AutofillManagerService: void onDeviceConfigChange(java.util.Set)>($r2);

        return;
    }

    public void lambda$new$1$AutofillManagerService(int, java.lang.String, boolean)
    {
        com.android.server.autofill.AutofillManagerService r0;
        int i0;
        java.lang.String r1;
        boolean z0;

        r0 := @this: com.android.server.autofill.AutofillManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        specialinvoke r0.<com.android.server.autofill.AutofillManagerService: void onAugmentedServiceNameChanged(int,java.lang.String,boolean)>(i0, r1, z0);

        return;
    }

    void listSessions(int, com.android.internal.os.IResultReceiver)
    {
        com.android.server.autofill.AutofillManagerService r0;
        int i0;
        java.lang.StringBuilder $r3;
        java.lang.String $r6;
        android.os.Bundle $r7;
        java.util.ArrayList $r8;
        com.android.server.infra.AbstractPerUserSystemService $r9;
        java.lang.Throwable $r10;
        android.os.RemoteException $r11;
        com.android.internal.os.IResultReceiver r12;
        java.lang.Object r14;
        com.android.server.autofill.AutofillManagerServiceImpl r15;
        com.android.server.autofill._$$Lambda$AutofillManagerService$froT1eG0jUnRoVv7cbUMLtO1bho r17;

        r0 := @this: com.android.server.autofill.AutofillManagerService;

        i0 := @parameter0: int;

        r12 := @parameter1: com.android.internal.os.IResultReceiver;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("listSessions() for userId ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("AutofillManagerService", $r6);

        virtualinvoke r0.<com.android.server.autofill.AutofillManagerService: void enforceCallingPermissionForManagement()>();

        $r7 = new android.os.Bundle;

        specialinvoke $r7.<android.os.Bundle: void <init>()>();

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r14 = r0.<com.android.server.autofill.AutofillManagerService: java.lang.Object mLock>;

        entermonitor r14;

        if i0 == -1 goto label06;

     label01:
        $r9 = virtualinvoke r0.<com.android.server.autofill.AutofillManagerService: com.android.server.infra.AbstractPerUserSystemService peekServiceForUserLocked(int)>(i0);

        r15 = (com.android.server.autofill.AutofillManagerServiceImpl) $r9;

     label02:
        if r15 == null goto label04;

     label03:
        virtualinvoke r15.<com.android.server.autofill.AutofillManagerServiceImpl: void listSessionsLocked(java.util.ArrayList)>($r8);

     label04:
        goto label07;

     label05:
        $r10 := @caughtexception;

        goto label13;

     label06:
        r17 = new com.android.server.autofill._$$Lambda$AutofillManagerService$froT1eG0jUnRoVv7cbUMLtO1bho;

        specialinvoke r17.<com.android.server.autofill._$$Lambda$AutofillManagerService$froT1eG0jUnRoVv7cbUMLtO1bho: void <init>(java.util.ArrayList)>($r8);

        virtualinvoke r0.<com.android.server.autofill.AutofillManagerService: void visitServicesLocked(com.android.server.infra.AbstractMasterSystemService$Visitor)>(r17);

     label07:
        exitmonitor r14;

     label08:
        virtualinvoke $r7.<android.os.Bundle: void putStringArrayList(java.lang.String,java.util.ArrayList)>("sessions", $r8);

     label09:
        interfaceinvoke r12.<com.android.internal.os.IResultReceiver: void send(int,android.os.Bundle)>(0, $r7);

     label10:
        goto label12;

     label11:
        $r11 := @caughtexception;

     label12:
        return;

     label13:
        exitmonitor r14;

     label14:
        throw $r10;

        catch java.lang.Throwable from label01 to label02 with label05;
        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label06 to label07 with label05;
        catch java.lang.Throwable from label07 to label08 with label05;
        catch android.os.RemoteException from label09 to label10 with label11;
        catch java.lang.Throwable from label13 to label14 with label05;
    }

    void logRequestLocked(java.lang.String)
    {
        com.android.server.autofill.AutofillManagerService r0;
        java.lang.String r1;
        android.util.LocalLog $r2;

        r0 := @this: com.android.server.autofill.AutofillManagerService;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.autofill.AutofillManagerService: android.util.LocalLog mRequestsHistory>;

        virtualinvoke $r2.<android.util.LocalLog: void log(java.lang.String)>(r1);

        return;
    }

    protected com.android.server.autofill.AutofillManagerServiceImpl newServiceLocked(int, boolean)
    {
        com.android.server.autofill.AutofillManagerService r0;
        int i0;
        boolean z0;
        com.android.server.autofill.AutofillManagerServiceImpl $r1;
        com.android.server.autofill.AutofillManagerService$DisabledInfoCache $r2;
        com.android.server.autofill.AutofillManagerService$AutofillCompatState $r3;
        com.android.server.autofill.ui.AutoFillUI $r4;
        android.util.LocalLog $r5, $r6;
        java.lang.Object $r7;

        r0 := @this: com.android.server.autofill.AutofillManagerService;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r1 = new com.android.server.autofill.AutofillManagerServiceImpl;

        $r7 = r0.<com.android.server.autofill.AutofillManagerService: java.lang.Object mLock>;

        $r6 = r0.<com.android.server.autofill.AutofillManagerService: android.util.LocalLog mUiLatencyHistory>;

        $r5 = r0.<com.android.server.autofill.AutofillManagerService: android.util.LocalLog mWtfHistory>;

        $r4 = r0.<com.android.server.autofill.AutofillManagerService: com.android.server.autofill.ui.AutoFillUI mUi>;

        $r3 = r0.<com.android.server.autofill.AutofillManagerService: com.android.server.autofill.AutofillManagerService$AutofillCompatState mAutofillCompatState>;

        $r2 = r0.<com.android.server.autofill.AutofillManagerService: com.android.server.autofill.AutofillManagerService$DisabledInfoCache mDisabledInfoCache>;

        specialinvoke $r1.<com.android.server.autofill.AutofillManagerServiceImpl: void <init>(com.android.server.autofill.AutofillManagerService,java.lang.Object,android.util.LocalLog,android.util.LocalLog,int,com.android.server.autofill.ui.AutoFillUI,com.android.server.autofill.AutofillManagerService$AutofillCompatState,boolean,com.android.server.autofill.AutofillManagerService$DisabledInfoCache)>(r0, $r7, $r6, $r5, i0, $r4, $r3, z0, $r2);

        return $r1;
    }

    protected volatile com.android.server.infra.AbstractPerUserSystemService newServiceLocked(int, boolean)
    {
        com.android.server.autofill.AutofillManagerService r0;
        int i0;
        boolean z0;
        com.android.server.autofill.AutofillManagerServiceImpl $r1;

        r0 := @this: com.android.server.autofill.AutofillManagerService;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r1 = virtualinvoke r0.<com.android.server.autofill.AutofillManagerService: com.android.server.autofill.AutofillManagerServiceImpl newServiceLocked(int,boolean)>(i0, z0);

        return $r1;
    }

    protected void onServiceEnabledLocked(com.android.server.autofill.AutofillManagerServiceImpl, int)
    {
        com.android.server.autofill.AutofillManagerService r0;
        com.android.server.autofill.AutofillManagerServiceImpl r1;
        int i0;

        r0 := @this: com.android.server.autofill.AutofillManagerService;

        r1 := @parameter0: com.android.server.autofill.AutofillManagerServiceImpl;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.autofill.AutofillManagerService: void addCompatibilityModeRequestsLocked(com.android.server.autofill.AutofillManagerServiceImpl,int)>(r1, i0);

        return;
    }

    protected volatile void onServiceEnabledLocked(com.android.server.infra.AbstractPerUserSystemService, int)
    {
        com.android.server.autofill.AutofillManagerService r0;
        com.android.server.infra.AbstractPerUserSystemService r1;
        int i0;
        com.android.server.autofill.AutofillManagerServiceImpl $r2;

        r0 := @this: com.android.server.autofill.AutofillManagerService;

        r1 := @parameter0: com.android.server.infra.AbstractPerUserSystemService;

        i0 := @parameter1: int;

        $r2 = (com.android.server.autofill.AutofillManagerServiceImpl) r1;

        virtualinvoke r0.<com.android.server.autofill.AutofillManagerService: void onServiceEnabledLocked(com.android.server.autofill.AutofillManagerServiceImpl,int)>($r2, i0);

        return;
    }

    protected void onServiceRemoved(com.android.server.autofill.AutofillManagerServiceImpl, int)
    {
        com.android.server.autofill.AutofillManagerService r0;
        com.android.server.autofill.AutofillManagerServiceImpl r1;
        int i0;
        com.android.server.autofill.AutofillManagerService$DisabledInfoCache $r2;
        com.android.server.autofill.AutofillManagerService$AutofillCompatState $r3;

        r0 := @this: com.android.server.autofill.AutofillManagerService;

        r1 := @parameter0: com.android.server.autofill.AutofillManagerServiceImpl;

        i0 := @parameter1: int;

        virtualinvoke r1.<com.android.server.autofill.AutofillManagerServiceImpl: void destroyLocked()>();

        $r2 = r0.<com.android.server.autofill.AutofillManagerService: com.android.server.autofill.AutofillManagerService$DisabledInfoCache mDisabledInfoCache>;

        virtualinvoke $r2.<com.android.server.autofill.AutofillManagerService$DisabledInfoCache: void remove(int)>(i0);

        $r3 = r0.<com.android.server.autofill.AutofillManagerService: com.android.server.autofill.AutofillManagerService$AutofillCompatState mAutofillCompatState>;

        virtualinvoke $r3.<com.android.server.autofill.AutofillManagerService$AutofillCompatState: void removeCompatibilityModeRequests(int)>(i0);

        return;
    }

    protected volatile void onServiceRemoved(com.android.server.infra.AbstractPerUserSystemService, int)
    {
        com.android.server.autofill.AutofillManagerService r0;
        com.android.server.infra.AbstractPerUserSystemService r1;
        int i0;
        com.android.server.autofill.AutofillManagerServiceImpl $r2;

        r0 := @this: com.android.server.autofill.AutofillManagerService;

        r1 := @parameter0: com.android.server.infra.AbstractPerUserSystemService;

        i0 := @parameter1: int;

        $r2 = (com.android.server.autofill.AutofillManagerServiceImpl) r1;

        virtualinvoke r0.<com.android.server.autofill.AutofillManagerService: void onServiceRemoved(com.android.server.autofill.AutofillManagerServiceImpl,int)>($r2, i0);

        return;
    }

    protected void onSettingsChanged(int, java.lang.String)
    {
        com.android.server.autofill.AutofillManagerService r0;
        int i0, $i1;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.StringBuilder $r1;
        java.lang.String $r5, r7;
        java.lang.Throwable $r6;
        byte b3;
        java.lang.Object r9;

        r0 := @this: com.android.server.autofill.AutofillManagerService;

        i0 := @parameter0: int;

        r7 := @parameter1: java.lang.String;

        $i1 = virtualinvoke r7.<java.lang.String: int hashCode()>();

        lookupswitch($i1)
        {
            case -1848997872: goto label06;
            case -1299292969: goto label05;
            case -1048937777: goto label04;
            case 1194058837: goto label03;
            case 1670367536: goto label02;
            default: goto label01;
        };

     label01:
        goto label07;

     label02:
        $z0 = virtualinvoke r7.<java.lang.String: boolean equals(java.lang.Object)>("autofill_compat_mode_allowed_packages");

        if $z0 == 0 goto label01;

        b3 = 5;

        goto label08;

     label03:
        $z1 = virtualinvoke r7.<java.lang.String: boolean equals(java.lang.Object)>("selected_input_method_subtype");

        if $z1 == 0 goto label01;

        b3 = 3;

        goto label08;

     label04:
        $z2 = virtualinvoke r7.<java.lang.String: boolean equals(java.lang.Object)>("autofill_max_partitions_size");

        if $z2 == 0 goto label01;

        b3 = 1;

        goto label08;

     label05:
        $z3 = virtualinvoke r7.<java.lang.String: boolean equals(java.lang.Object)>("autofill_logging_level");

        if $z3 == 0 goto label01;

        b3 = 0;

        goto label08;

     label06:
        $z4 = virtualinvoke r7.<java.lang.String: boolean equals(java.lang.Object)>("autofill_max_visible_datasets");

        if $z4 == 0 goto label01;

        b3 = 2;

        goto label08;

     label07:
        b3 = -1;

     label08:
        if b3 == 0 goto label18;

        if b3 == 1 goto label17;

        if b3 == 2 goto label16;

        if b3 == 3 goto label15;

        if b3 == 5 goto label09;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected property (");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("); updating cache instead");

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AutofillManagerService", $r5);

     label09:
        r9 = r0.<com.android.server.autofill.AutofillManagerService: java.lang.Object mLock>;

        entermonitor r9;

     label10:
        virtualinvoke r0.<com.android.server.autofill.AutofillManagerService: void updateCachedServiceLocked(int)>(i0);

        exitmonitor r9;

     label11:
        goto label19;

     label12:
        $r6 := @caughtexception;

     label13:
        exitmonitor r9;

     label14:
        throw $r6;

     label15:
        specialinvoke r0.<com.android.server.autofill.AutofillManagerService: void handleInputMethodSwitch(int)>(i0);

        goto label19;

     label16:
        specialinvoke r0.<com.android.server.autofill.AutofillManagerService: void setMaxVisibleDatasetsFromSettings()>();

        goto label19;

     label17:
        specialinvoke r0.<com.android.server.autofill.AutofillManagerService: void setMaxPartitionsFromSettings()>();

        goto label19;

     label18:
        specialinvoke r0.<com.android.server.autofill.AutofillManagerService: void setLogLevelFromSettings()>();

     label19:
        return;

        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public void onStart()
    {
        com.android.server.autofill.AutofillManagerService r0;
        com.android.server.autofill.AutofillManagerService$AutoFillManagerServiceStub $r1;
        com.android.server.autofill.AutofillManagerService$LocalService $r2;

        r0 := @this: com.android.server.autofill.AutofillManagerService;

        $r1 = new com.android.server.autofill.AutofillManagerService$AutoFillManagerServiceStub;

        specialinvoke $r1.<com.android.server.autofill.AutofillManagerService$AutoFillManagerServiceStub: void <init>(com.android.server.autofill.AutofillManagerService)>(r0);

        virtualinvoke r0.<com.android.server.autofill.AutofillManagerService: void publishBinderService(java.lang.String,android.os.IBinder)>("autofill", $r1);

        $r2 = r0.<com.android.server.autofill.AutofillManagerService: com.android.server.autofill.AutofillManagerService$LocalService mLocalService>;

        virtualinvoke r0.<com.android.server.autofill.AutofillManagerService: void publishLocalService(java.lang.Class,java.lang.Object)>(class "Landroid/view/autofill/AutofillManagerInternal;", $r2);

        return;
    }

    public void onSwitchUser(int)
    {
        com.android.server.autofill.AutofillManagerService r0;
        int i0;
        boolean $z0;
        com.android.server.autofill.ui.AutoFillUI $r1;

        r0 := @this: com.android.server.autofill.AutofillManagerService;

        i0 := @parameter0: int;

        $z0 = <com.android.server.autofill.Helper: boolean sDebug>;

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("AutofillManagerService", "Hiding UI when user switched");

     label1:
        $r1 = r0.<com.android.server.autofill.AutofillManagerService: com.android.server.autofill.ui.AutoFillUI mUi>;

        virtualinvoke $r1.<com.android.server.autofill.ui.AutoFillUI: void hideAll(com.android.server.autofill.ui.AutoFillUI$AutoFillUiCallback)>(null);

        return;
    }

    protected void registerForExtraSettingsChanges(android.content.ContentResolver, android.database.ContentObserver)
    {
        com.android.server.autofill.AutofillManagerService r0;
        android.content.ContentResolver r1;
        android.database.ContentObserver r2;
        android.net.Uri $r3, $r4, $r5, $r6, $r7;

        r0 := @this: com.android.server.autofill.AutofillManagerService;

        r1 := @parameter0: android.content.ContentResolver;

        r2 := @parameter1: android.database.ContentObserver;

        $r3 = staticinvoke <android.provider.Settings$Global: android.net.Uri getUriFor(java.lang.String)>("autofill_compat_mode_allowed_packages");

        virtualinvoke r1.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver,int)>($r3, 0, r2, -1);

        $r4 = staticinvoke <android.provider.Settings$Global: android.net.Uri getUriFor(java.lang.String)>("autofill_logging_level");

        virtualinvoke r1.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver,int)>($r4, 0, r2, -1);

        $r5 = staticinvoke <android.provider.Settings$Global: android.net.Uri getUriFor(java.lang.String)>("autofill_max_partitions_size");

        virtualinvoke r1.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver,int)>($r5, 0, r2, -1);

        $r6 = staticinvoke <android.provider.Settings$Global: android.net.Uri getUriFor(java.lang.String)>("autofill_max_visible_datasets");

        virtualinvoke r1.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver,int)>($r6, 0, r2, -1);

        $r7 = staticinvoke <android.provider.Settings$Secure: android.net.Uri getUriFor(java.lang.String)>("selected_input_method_subtype");

        virtualinvoke r1.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver,int)>($r7, 0, r2, -1);

        return;
    }

    void reset()
    {
        com.android.server.autofill.AutofillManagerService r0;
        java.lang.Object r1;
        com.android.server.autofill.'-$$Lambda$AutofillManagerService$PR6iUwKxXatnzjgBDLARdxaGV3A' $r3;
        java.lang.Throwable $r4;
        com.android.server.infra.AbstractMasterSystemService$Visitor r5;

        r0 := @this: com.android.server.autofill.AutofillManagerService;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("AutofillManagerService", "reset()");

        virtualinvoke r0.<com.android.server.autofill.AutofillManagerService: void enforceCallingPermissionForManagement()>();

        r1 = r0.<com.android.server.autofill.AutofillManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = <com.android.server.autofill._$$Lambda$AutofillManagerService$PR6iUwKxXatnzjgBDLARdxaGV3A: com.android.server.autofill.'-$$Lambda$AutofillManagerService$PR6iUwKxXatnzjgBDLARdxaGV3A' INSTANCE>;

        r5 = (com.android.server.infra.AbstractMasterSystemService$Visitor) $r3;

        virtualinvoke r0.<com.android.server.autofill.AutofillManagerService: void visitServicesLocked(com.android.server.infra.AbstractMasterSystemService$Visitor)>(r5);

        virtualinvoke r0.<com.android.server.autofill.AutofillManagerService: void clearCacheLocked()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    void resetTemporaryAugmentedAutofillService(int)
    {
        com.android.server.autofill.AutofillManagerService r0;
        int i0;
        com.android.server.infra.FrameworkResourcesServiceNameResolver $r1;

        r0 := @this: com.android.server.autofill.AutofillManagerService;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.server.autofill.AutofillManagerService: void enforceCallingPermissionForManagement()>();

        $r1 = r0.<com.android.server.autofill.AutofillManagerService: com.android.server.infra.FrameworkResourcesServiceNameResolver mAugmentedAutofillResolver>;

        virtualinvoke $r1.<com.android.server.infra.FrameworkResourcesServiceNameResolver: void resetTemporaryService(int)>(i0);

        return;
    }

    boolean setDefaultAugmentedServiceEnabled(int, boolean)
    {
        com.android.server.autofill.AutofillManagerService r0;
        int i0;
        boolean z0, $z1, $z2;
        java.lang.StringBuilder $r1, r17;
        java.lang.String $r6, $r11, r13;
        com.android.server.infra.AbstractPerUserSystemService $r7;
        com.android.server.infra.FrameworkResourcesServiceNameResolver $r8;
        java.lang.Throwable $r12;
        java.lang.Object r15;
        com.android.server.autofill.AutofillManagerServiceImpl r16;

        r0 := @this: com.android.server.autofill.AutofillManagerService;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r13 = r0.<com.android.server.autofill.AutofillManagerService: java.lang.String mTag>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setDefaultAugmentedServiceEnabled() for userId ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r6 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>(r13, $r6);

        virtualinvoke r0.<com.android.server.autofill.AutofillManagerService: void enforceCallingPermissionForManagement()>();

        r15 = r0.<com.android.server.autofill.AutofillManagerService: java.lang.Object mLock>;

        entermonitor r15;

     label01:
        $r7 = virtualinvoke r0.<com.android.server.autofill.AutofillManagerService: com.android.server.infra.AbstractPerUserSystemService getServiceForUserLocked(int)>(i0);

        r16 = (com.android.server.autofill.AutofillManagerServiceImpl) $r7;

     label02:
        if r16 == null goto label06;

     label03:
        $r8 = r0.<com.android.server.autofill.AutofillManagerService: com.android.server.infra.FrameworkResourcesServiceNameResolver mAugmentedAutofillResolver>;

        $z1 = virtualinvoke $r8.<com.android.server.infra.FrameworkResourcesServiceNameResolver: boolean setDefaultServiceEnabled(int,boolean)>(i0, z0);

        if $z1 == 0 goto label05;

        virtualinvoke r16.<com.android.server.autofill.AutofillManagerServiceImpl: void updateRemoteAugmentedAutofillService()>();

        exitmonitor r15;

     label04:
        return 1;

     label05:
        $z2 = r0.<com.android.server.autofill.AutofillManagerService: boolean debug>;

        if $z2 == 0 goto label06;

        r17 = new java.lang.StringBuilder;

        specialinvoke r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setDefaultAugmentedServiceEnabled(): already ");

        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r11 = virtualinvoke r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("AutofillManagerService", $r11);

     label06:
        exitmonitor r15;

     label07:
        return 0;

     label08:
        $r12 := @caughtexception;

     label09:
        exitmonitor r15;

     label10:
        throw $r12;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    void setFullScreenMode(java.lang.Boolean)
    {
        com.android.server.autofill.AutofillManagerService r0;
        java.lang.Boolean r1;

        r0 := @this: com.android.server.autofill.AutofillManagerService;

        r1 := @parameter0: java.lang.Boolean;

        virtualinvoke r0.<com.android.server.autofill.AutofillManagerService: void enforceCallingPermissionForManagement()>();

        <com.android.server.autofill.Helper: java.lang.Boolean sFullScreenMode> = r1;

        return;
    }

    void setLogLevel(int)
    {
        com.android.server.autofill.AutofillManagerService r0;
        int i0;
        long l1;
        java.lang.StringBuilder $r1;
        java.lang.String $r4;
        android.content.Context $r5;
        android.content.ContentResolver $r6;
        java.lang.Throwable $r7;

        r0 := @this: com.android.server.autofill.AutofillManagerService;

        i0 := @parameter0: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setLogLevel(): ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("AutofillManagerService", $r4);

        virtualinvoke r0.<com.android.server.autofill.AutofillManagerService: void enforceCallingPermissionForManagement()>();

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r5 = virtualinvoke r0.<com.android.server.autofill.AutofillManagerService: android.content.Context getContext()>();

        $r6 = virtualinvoke $r5.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        staticinvoke <android.provider.Settings$Global: boolean putInt(android.content.ContentResolver,java.lang.String,int)>($r6, "autofill_logging_level", i0);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return;

     label3:
        $r7 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void setMaxPartitions(int)
    {
        com.android.server.autofill.AutofillManagerService r0;
        int i0;
        long l1;
        java.lang.StringBuilder $r1;
        java.lang.String $r4;
        android.content.Context $r5;
        android.content.ContentResolver $r6;
        java.lang.Throwable $r7;

        r0 := @this: com.android.server.autofill.AutofillManagerService;

        i0 := @parameter0: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setMaxPartitions(): ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("AutofillManagerService", $r4);

        virtualinvoke r0.<com.android.server.autofill.AutofillManagerService: void enforceCallingPermissionForManagement()>();

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r5 = virtualinvoke r0.<com.android.server.autofill.AutofillManagerService: android.content.Context getContext()>();

        $r6 = virtualinvoke $r5.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        staticinvoke <android.provider.Settings$Global: boolean putInt(android.content.ContentResolver,java.lang.String,int)>($r6, "autofill_max_partitions_size", i0);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return;

     label3:
        $r7 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void setMaxVisibleDatasets(int)
    {
        com.android.server.autofill.AutofillManagerService r0;
        int i0;
        long l1;
        java.lang.StringBuilder $r1;
        java.lang.String $r4;
        android.content.Context $r5;
        android.content.ContentResolver $r6;
        java.lang.Throwable $r7;

        r0 := @this: com.android.server.autofill.AutofillManagerService;

        i0 := @parameter0: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setMaxVisibleDatasets(): ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("AutofillManagerService", $r4);

        virtualinvoke r0.<com.android.server.autofill.AutofillManagerService: void enforceCallingPermissionForManagement()>();

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r5 = virtualinvoke r0.<com.android.server.autofill.AutofillManagerService: android.content.Context getContext()>();

        $r6 = virtualinvoke $r5.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        staticinvoke <android.provider.Settings$Global: boolean putInt(android.content.ContentResolver,java.lang.String,int)>($r6, "autofill_max_visible_datasets", i0);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return;

     label3:
        $r7 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void setTemporaryAugmentedAutofillService(int, java.lang.String, int)
    {
        com.android.server.autofill.AutofillManagerService r0;
        int i0, i1;
        java.lang.String r1, $r11, $r18, r20;
        java.lang.StringBuilder $r3, $r13;
        java.lang.IllegalArgumentException $r17;
        com.android.server.infra.FrameworkResourcesServiceNameResolver $r19;

        r0 := @this: com.android.server.autofill.AutofillManagerService;

        i0 := @parameter0: int;

        r20 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        r1 = r0.<com.android.server.autofill.AutofillManagerService: java.lang.String mTag>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setTemporaryAugmentedAutofillService(");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") to ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r20);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms");

        $r11 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>(r1, $r11);

        virtualinvoke r0.<com.android.server.autofill.AutofillManagerService: void enforceCallingPermissionForManagement()>();

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r20);

        if i1 > 120000 goto label1;

        $r19 = r0.<com.android.server.autofill.AutofillManagerService: com.android.server.infra.FrameworkResourcesServiceNameResolver mAugmentedAutofillResolver>;

        virtualinvoke $r19.<com.android.server.infra.FrameworkResourcesServiceNameResolver: void setTemporaryService(int,java.lang.String,int)>(i0, r20, i1);

        return;

     label1:
        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Max duration is 120000 (called with ");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r17 = new java.lang.IllegalArgumentException;

        $r18 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r18);

        throw $r17;
    }
}
