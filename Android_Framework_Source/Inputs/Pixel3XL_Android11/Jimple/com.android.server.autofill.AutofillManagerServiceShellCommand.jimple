public final class com.android.server.autofill.AutofillManagerServiceShellCommand extends android.os.ShellCommand
{
    private final com.android.server.autofill.AutofillManagerService mService;

    public void <init>(com.android.server.autofill.AutofillManagerService)
    {
        com.android.server.autofill.AutofillManagerServiceShellCommand r0;
        com.android.server.autofill.AutofillManagerService r1;

        r0 := @this: com.android.server.autofill.AutofillManagerServiceShellCommand;

        r1 := @parameter0: com.android.server.autofill.AutofillManagerService;

        specialinvoke r0.<android.os.ShellCommand: void <init>()>();

        r0.<com.android.server.autofill.AutofillManagerServiceShellCommand: com.android.server.autofill.AutofillManagerService mService> = r1;

        return;
    }

    private int getBindInstantService(java.io.PrintWriter)
    {
        com.android.server.autofill.AutofillManagerServiceShellCommand r0;
        java.io.PrintWriter r1;
        com.android.server.autofill.AutofillManagerService $r2;
        boolean $z0;

        r0 := @this: com.android.server.autofill.AutofillManagerServiceShellCommand;

        r1 := @parameter0: java.io.PrintWriter;

        $r2 = r0.<com.android.server.autofill.AutofillManagerServiceShellCommand: com.android.server.autofill.AutofillManagerService mService>;

        $z0 = virtualinvoke $r2.<com.android.server.autofill.AutofillManagerService: boolean getAllowInstantService()>();

        if $z0 == 0 goto label1;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("true");

        goto label2;

     label1:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("false");

     label2:
        return 0;
    }

    private int getDefaultAugmentedServiceEnabled(java.io.PrintWriter)
    {
        com.android.server.autofill.AutofillManagerServiceShellCommand r0;
        java.io.PrintWriter r1;
        int i0;
        com.android.server.autofill.AutofillManagerService $r2;
        boolean $z0;

        r0 := @this: com.android.server.autofill.AutofillManagerServiceShellCommand;

        r1 := @parameter0: java.io.PrintWriter;

        i0 = specialinvoke r0.<com.android.server.autofill.AutofillManagerServiceShellCommand: int getNextIntArgRequired()>();

        $r2 = r0.<com.android.server.autofill.AutofillManagerServiceShellCommand: com.android.server.autofill.AutofillManagerService mService>;

        $z0 = virtualinvoke $r2.<com.android.server.autofill.AutofillManagerService: boolean isDefaultAugmentedServiceEnabled(int)>(i0);

        virtualinvoke r1.<java.io.PrintWriter: void println(boolean)>($z0);

        return 0;
    }

    private int getFieldClassificationScore(java.io.PrintWriter)
    {
        com.android.server.autofill.AutofillManagerServiceShellCommand r0;
        java.io.PrintWriter r1;
        java.lang.String r2, $r4, r9, r10;
        boolean $z0;
        java.util.concurrent.CountDownLatch $r5;
        android.os.RemoteCallback $r6;
        com.android.server.autofill._$$Lambda$AutofillManagerServiceShellCommand$3WCRplTGFh_xsmb8tmAG8x_Pn5A $r7;
        com.android.server.autofill.AutofillManagerService $r8;
        int $i0;

        r0 := @this: com.android.server.autofill.AutofillManagerServiceShellCommand;

        r1 := @parameter0: java.io.PrintWriter;

        r9 = virtualinvoke r0.<com.android.server.autofill.AutofillManagerServiceShellCommand: java.lang.String getNextArgRequired()>();

        $r4 = "--algorithm";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r9);

        if $z0 == 0 goto label1;

        r10 = virtualinvoke r0.<com.android.server.autofill.AutofillManagerServiceShellCommand: java.lang.String getNextArgRequired()>();

        r9 = virtualinvoke r0.<com.android.server.autofill.AutofillManagerServiceShellCommand: java.lang.String getNextArgRequired()>();

        goto label2;

     label1:
        r10 = null;

     label2:
        r2 = virtualinvoke r0.<com.android.server.autofill.AutofillManagerServiceShellCommand: java.lang.String getNextArgRequired()>();

        $r5 = new java.util.concurrent.CountDownLatch;

        specialinvoke $r5.<java.util.concurrent.CountDownLatch: void <init>(int)>(1);

        $r8 = r0.<com.android.server.autofill.AutofillManagerServiceShellCommand: com.android.server.autofill.AutofillManagerService mService>;

        $r6 = new android.os.RemoteCallback;

        $r7 = new com.android.server.autofill._$$Lambda$AutofillManagerServiceShellCommand$3WCRplTGFh_xsmb8tmAG8x_Pn5A;

        specialinvoke $r7.<com.android.server.autofill._$$Lambda$AutofillManagerServiceShellCommand$3WCRplTGFh_xsmb8tmAG8x_Pn5A: void <init>(java.io.PrintWriter,java.util.concurrent.CountDownLatch)>(r1, $r5);

        specialinvoke $r6.<android.os.RemoteCallback: void <init>(android.os.RemoteCallback$OnResultListener)>($r7);

        virtualinvoke $r8.<com.android.server.autofill.AutofillManagerService: void calculateScore(java.lang.String,java.lang.String,java.lang.String,android.os.RemoteCallback)>(r10, r9, r2, $r6);

        $i0 = specialinvoke r0.<com.android.server.autofill.AutofillManagerServiceShellCommand: int waitForLatch(java.io.PrintWriter,java.util.concurrent.CountDownLatch)>(r1, $r5);

        return $i0;
    }

    private int getFullScreenMode(java.io.PrintWriter)
    {
        com.android.server.autofill.AutofillManagerServiceShellCommand r0;
        java.io.PrintWriter r1;
        java.lang.Boolean r2;
        com.android.server.autofill.AutofillManagerService $r3;
        boolean $z0;

        r0 := @this: com.android.server.autofill.AutofillManagerServiceShellCommand;

        r1 := @parameter0: java.io.PrintWriter;

        $r3 = r0.<com.android.server.autofill.AutofillManagerServiceShellCommand: com.android.server.autofill.AutofillManagerService mService>;

        r2 = virtualinvoke $r3.<com.android.server.autofill.AutofillManagerService: java.lang.Boolean getFullScreenMode()>();

        if r2 != null goto label1;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("default");

        goto label3;

     label1:
        $z0 = virtualinvoke r2.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("true");

        goto label3;

     label2:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("false");

     label3:
        return 0;
    }

    private int getLogLevel(java.io.PrintWriter)
    {
        com.android.server.autofill.AutofillManagerServiceShellCommand r0;
        java.io.PrintWriter r1;
        int i0;
        com.android.server.autofill.AutofillManagerService $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r8;

        r0 := @this: com.android.server.autofill.AutofillManagerServiceShellCommand;

        r1 := @parameter0: java.io.PrintWriter;

        $r3 = r0.<com.android.server.autofill.AutofillManagerServiceShellCommand: com.android.server.autofill.AutofillManagerService mService>;

        i0 = virtualinvoke $r3.<com.android.server.autofill.AutofillManagerService: int getLogLevel()>();

        if i0 == 0 goto label3;

        if i0 == 2 goto label2;

        if i0 == 4 goto label1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unknow (");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r8);

        return 0;

     label1:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("verbose");

        return 0;

     label2:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("debug");

        return 0;

     label3:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("off");

        return 0;
    }

    private int getMaxPartitions(java.io.PrintWriter)
    {
        com.android.server.autofill.AutofillManagerServiceShellCommand r0;
        java.io.PrintWriter r1;
        com.android.server.autofill.AutofillManagerService $r2;
        int $i0;

        r0 := @this: com.android.server.autofill.AutofillManagerServiceShellCommand;

        r1 := @parameter0: java.io.PrintWriter;

        $r2 = r0.<com.android.server.autofill.AutofillManagerServiceShellCommand: com.android.server.autofill.AutofillManagerService mService>;

        $i0 = virtualinvoke $r2.<com.android.server.autofill.AutofillManagerService: int getMaxPartitions()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(int)>($i0);

        return 0;
    }

    private int getMaxVisibileDatasets(java.io.PrintWriter)
    {
        com.android.server.autofill.AutofillManagerServiceShellCommand r0;
        java.io.PrintWriter r1;
        com.android.server.autofill.AutofillManagerService $r2;
        int $i0;

        r0 := @this: com.android.server.autofill.AutofillManagerServiceShellCommand;

        r1 := @parameter0: java.io.PrintWriter;

        $r2 = r0.<com.android.server.autofill.AutofillManagerServiceShellCommand: com.android.server.autofill.AutofillManagerService mService>;

        $i0 = virtualinvoke $r2.<com.android.server.autofill.AutofillManagerService: int getMaxVisibleDatasets()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(int)>($i0);

        return 0;
    }

    private int getNextIntArgRequired()
    {
        com.android.server.autofill.AutofillManagerServiceShellCommand r0;
        java.lang.String $r1;
        int $i0;

        r0 := @this: com.android.server.autofill.AutofillManagerServiceShellCommand;

        $r1 = virtualinvoke r0.<com.android.server.autofill.AutofillManagerServiceShellCommand: java.lang.String getNextArgRequired()>();

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1);

        return $i0;
    }

    private int getUserIdFromArgsOrAllUsers()
    {
        com.android.server.autofill.AutofillManagerServiceShellCommand r0;
        java.lang.String $r1, $r2, $r3;
        boolean $z0;
        int $i0;

        r0 := @this: com.android.server.autofill.AutofillManagerServiceShellCommand;

        $r1 = "--user";

        $r2 = virtualinvoke r0.<com.android.server.autofill.AutofillManagerServiceShellCommand: java.lang.String getNextArg()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke r0.<com.android.server.autofill.AutofillManagerServiceShellCommand: java.lang.String getNextArgRequired()>();

        $i0 = staticinvoke <android.os.UserHandle: int parseUserArg(java.lang.String)>($r3);

        return $i0;

     label1:
        return -1;
    }

    private boolean isNextArgSessions(java.io.PrintWriter)
    {
        com.android.server.autofill.AutofillManagerServiceShellCommand r0;
        java.io.PrintWriter r1;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: com.android.server.autofill.AutofillManagerServiceShellCommand;

        r1 := @parameter0: java.io.PrintWriter;

        $r2 = virtualinvoke r0.<com.android.server.autofill.AutofillManagerServiceShellCommand: java.lang.String getNextArgRequired()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("sessions");

        if $z0 != 0 goto label1;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Error: invalid list type");

        return 0;

     label1:
        return 1;
    }

    static void lambda$getFieldClassificationScore$0(java.io.PrintWriter, java.util.concurrent.CountDownLatch, android.os.Bundle)
    {
        java.io.PrintWriter r0;
        java.util.concurrent.CountDownLatch r1;
        android.os.Parcelable $r2;
        float[][] $r3;
        float[] $r4;
        float $f0;
        android.os.Bundle r5;
        android.service.autofill.AutofillFieldClassificationService$Scores r6;

        r0 := @parameter0: java.io.PrintWriter;

        r1 := @parameter1: java.util.concurrent.CountDownLatch;

        r5 := @parameter2: android.os.Bundle;

        $r2 = virtualinvoke r5.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>("scores");

        r6 = (android.service.autofill.AutofillFieldClassificationService$Scores) $r2;

        if r6 != null goto label1;

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("no score");

        goto label2;

     label1:
        $r3 = r6.<android.service.autofill.AutofillFieldClassificationService$Scores: float[][] scores>;

        $r4 = $r3[0];

        $f0 = $r4[0];

        virtualinvoke r0.<java.io.PrintWriter: void println(float)>($f0);

     label2:
        virtualinvoke r1.<java.util.concurrent.CountDownLatch: void countDown()>();

        return;
    }

    private int requestDestroy(java.io.PrintWriter)
    {
        com.android.server.autofill.AutofillManagerServiceShellCommand r0;
        java.io.PrintWriter r1;
        int i0, $i1;
        boolean $z0;
        java.util.concurrent.CountDownLatch $r3;
        com.android.server.autofill._$$Lambda$AutofillManagerServiceShellCommand$ww56nbkJspkRdVJ0yMdT4sroSiY $r4;
        com.android.server.autofill.AutofillManagerServiceShellCommand$1 $r5;

        r0 := @this: com.android.server.autofill.AutofillManagerServiceShellCommand;

        r1 := @parameter0: java.io.PrintWriter;

        $z0 = specialinvoke r0.<com.android.server.autofill.AutofillManagerServiceShellCommand: boolean isNextArgSessions(java.io.PrintWriter)>(r1);

        if $z0 != 0 goto label1;

        return -1;

     label1:
        i0 = specialinvoke r0.<com.android.server.autofill.AutofillManagerServiceShellCommand: int getUserIdFromArgsOrAllUsers()>();

        $r3 = new java.util.concurrent.CountDownLatch;

        specialinvoke $r3.<java.util.concurrent.CountDownLatch: void <init>(int)>(1);

        $r4 = new com.android.server.autofill._$$Lambda$AutofillManagerServiceShellCommand$ww56nbkJspkRdVJ0yMdT4sroSiY;

        $r5 = new com.android.server.autofill.AutofillManagerServiceShellCommand$1;

        specialinvoke $r5.<com.android.server.autofill.AutofillManagerServiceShellCommand$1: void <init>(com.android.server.autofill.AutofillManagerServiceShellCommand,java.util.concurrent.CountDownLatch)>(r0, $r3);

        specialinvoke $r4.<com.android.server.autofill._$$Lambda$AutofillManagerServiceShellCommand$ww56nbkJspkRdVJ0yMdT4sroSiY: void <init>(com.android.server.autofill.AutofillManagerServiceShellCommand,int,com.android.internal.os.IResultReceiver)>(r0, i0, $r5);

        $i1 = specialinvoke r0.<com.android.server.autofill.AutofillManagerServiceShellCommand: int requestSessionCommon(java.io.PrintWriter,java.util.concurrent.CountDownLatch,java.lang.Runnable)>(r1, $r3, $r4);

        return $i1;
    }

    private int requestGet(java.io.PrintWriter)
    {
        com.android.server.autofill.AutofillManagerServiceShellCommand r0;
        java.io.PrintWriter r1;
        java.lang.String r2, $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.StringBuilder $r4;
        byte b8;

        r0 := @this: com.android.server.autofill.AutofillManagerServiceShellCommand;

        r1 := @parameter0: java.io.PrintWriter;

        r2 = virtualinvoke r0.<com.android.server.autofill.AutofillManagerServiceShellCommand: java.lang.String getNextArgRequired()>();

        $i0 = virtualinvoke r2.<java.lang.String: int hashCode()>();

        lookupswitch($i0)
        {
            case -2124387184: goto label08;
            case -2006901047: goto label07;
            case -1298810906: goto label06;
            case 809633044: goto label05;
            case 852405952: goto label04;
            case 1393110435: goto label03;
            case 1772188804: goto label02;
            default: goto label01;
        };

     label01:
        goto label09;

     label02:
        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("max_partitions");

        if $z0 == 0 goto label01;

        b8 = 1;

        goto label10;

     label03:
        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("max_visible_datasets");

        if $z1 == 0 goto label01;

        b8 = 2;

        goto label10;

     label04:
        $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("default-augmented-service-enabled");

        if $z2 == 0 goto label01;

        b8 = 6;

        goto label10;

     label05:
        $z3 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("bind-instant-service-allowed");

        if $z3 == 0 goto label01;

        b8 = 5;

        goto label10;

     label06:
        $z4 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("full_screen_mode");

        if $z4 == 0 goto label01;

        b8 = 4;

        goto label10;

     label07:
        $z5 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("log_level");

        if $z5 == 0 goto label01;

        b8 = 0;

        goto label10;

     label08:
        $z6 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("fc_score");

        if $z6 == 0 goto label01;

        b8 = 3;

        goto label10;

     label09:
        b8 = -1;

     label10:
        tableswitch(b8)
        {
            case 0: goto label18;
            case 1: goto label17;
            case 2: goto label16;
            case 3: goto label15;
            case 4: goto label14;
            case 5: goto label13;
            case 6: goto label12;
            default: goto label11;
        };

     label11:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid set: ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r7);

        return -1;

     label12:
        $i1 = specialinvoke r0.<com.android.server.autofill.AutofillManagerServiceShellCommand: int getDefaultAugmentedServiceEnabled(java.io.PrintWriter)>(r1);

        return $i1;

     label13:
        $i2 = specialinvoke r0.<com.android.server.autofill.AutofillManagerServiceShellCommand: int getBindInstantService(java.io.PrintWriter)>(r1);

        return $i2;

     label14:
        $i3 = specialinvoke r0.<com.android.server.autofill.AutofillManagerServiceShellCommand: int getFullScreenMode(java.io.PrintWriter)>(r1);

        return $i3;

     label15:
        $i4 = specialinvoke r0.<com.android.server.autofill.AutofillManagerServiceShellCommand: int getFieldClassificationScore(java.io.PrintWriter)>(r1);

        return $i4;

     label16:
        $i5 = specialinvoke r0.<com.android.server.autofill.AutofillManagerServiceShellCommand: int getMaxVisibileDatasets(java.io.PrintWriter)>(r1);

        return $i5;

     label17:
        $i6 = specialinvoke r0.<com.android.server.autofill.AutofillManagerServiceShellCommand: int getMaxPartitions(java.io.PrintWriter)>(r1);

        return $i6;

     label18:
        $i7 = specialinvoke r0.<com.android.server.autofill.AutofillManagerServiceShellCommand: int getLogLevel(java.io.PrintWriter)>(r1);

        return $i7;
    }

    private int requestList(java.io.PrintWriter)
    {
        com.android.server.autofill.AutofillManagerServiceShellCommand r0;
        java.io.PrintWriter r1;
        int i0, $i1;
        boolean $z0;
        java.util.concurrent.CountDownLatch $r3;
        com.android.server.autofill._$$Lambda$AutofillManagerServiceShellCommand$WrWpLlZPawytZji8_6Dx9_p70Dw $r4;
        com.android.server.autofill.AutofillManagerServiceShellCommand$2 $r5;

        r0 := @this: com.android.server.autofill.AutofillManagerServiceShellCommand;

        r1 := @parameter0: java.io.PrintWriter;

        $z0 = specialinvoke r0.<com.android.server.autofill.AutofillManagerServiceShellCommand: boolean isNextArgSessions(java.io.PrintWriter)>(r1);

        if $z0 != 0 goto label1;

        return -1;

     label1:
        i0 = specialinvoke r0.<com.android.server.autofill.AutofillManagerServiceShellCommand: int getUserIdFromArgsOrAllUsers()>();

        $r3 = new java.util.concurrent.CountDownLatch;

        specialinvoke $r3.<java.util.concurrent.CountDownLatch: void <init>(int)>(1);

        $r4 = new com.android.server.autofill._$$Lambda$AutofillManagerServiceShellCommand$WrWpLlZPawytZji8_6Dx9_p70Dw;

        $r5 = new com.android.server.autofill.AutofillManagerServiceShellCommand$2;

        specialinvoke $r5.<com.android.server.autofill.AutofillManagerServiceShellCommand$2: void <init>(com.android.server.autofill.AutofillManagerServiceShellCommand,java.io.PrintWriter,java.util.concurrent.CountDownLatch)>(r0, r1, $r3);

        specialinvoke $r4.<com.android.server.autofill._$$Lambda$AutofillManagerServiceShellCommand$WrWpLlZPawytZji8_6Dx9_p70Dw: void <init>(com.android.server.autofill.AutofillManagerServiceShellCommand,int,com.android.internal.os.IResultReceiver)>(r0, i0, $r5);

        $i1 = specialinvoke r0.<com.android.server.autofill.AutofillManagerServiceShellCommand: int requestSessionCommon(java.io.PrintWriter,java.util.concurrent.CountDownLatch,java.lang.Runnable)>(r1, $r3, $r4);

        return $i1;
    }

    private int requestReset()
    {
        com.android.server.autofill.AutofillManagerServiceShellCommand r0;
        com.android.server.autofill.AutofillManagerService $r1;

        r0 := @this: com.android.server.autofill.AutofillManagerServiceShellCommand;

        $r1 = r0.<com.android.server.autofill.AutofillManagerServiceShellCommand: com.android.server.autofill.AutofillManagerService mService>;

        virtualinvoke $r1.<com.android.server.autofill.AutofillManagerService: void reset()>();

        return 0;
    }

    private int requestSessionCommon(java.io.PrintWriter, java.util.concurrent.CountDownLatch, java.lang.Runnable)
    {
        com.android.server.autofill.AutofillManagerServiceShellCommand r0;
        java.io.PrintWriter r1;
        java.util.concurrent.CountDownLatch r2;
        java.lang.Runnable r3;
        int $i0;

        r0 := @this: com.android.server.autofill.AutofillManagerServiceShellCommand;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: java.util.concurrent.CountDownLatch;

        r3 := @parameter2: java.lang.Runnable;

        interfaceinvoke r3.<java.lang.Runnable: void run()>();

        $i0 = specialinvoke r0.<com.android.server.autofill.AutofillManagerServiceShellCommand: int waitForLatch(java.io.PrintWriter,java.util.concurrent.CountDownLatch)>(r1, r2);

        return $i0;
    }

    private int requestSet(java.io.PrintWriter)
    {
        com.android.server.autofill.AutofillManagerServiceShellCommand r0;
        java.io.PrintWriter r1;
        java.lang.String r2, $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.StringBuilder $r4;
        byte b8;

        r0 := @this: com.android.server.autofill.AutofillManagerServiceShellCommand;

        r1 := @parameter0: java.io.PrintWriter;

        r2 = virtualinvoke r0.<com.android.server.autofill.AutofillManagerServiceShellCommand: java.lang.String getNextArgRequired()>();

        $i0 = virtualinvoke r2.<java.lang.String: int hashCode()>();

        lookupswitch($i0)
        {
            case -2006901047: goto label08;
            case -1298810906: goto label07;
            case -571600804: goto label06;
            case 809633044: goto label05;
            case 852405952: goto label04;
            case 1393110435: goto label03;
            case 1772188804: goto label02;
            default: goto label01;
        };

     label01:
        goto label09;

     label02:
        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("max_partitions");

        if $z0 == 0 goto label01;

        b8 = 1;

        goto label10;

     label03:
        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("max_visible_datasets");

        if $z1 == 0 goto label01;

        b8 = 2;

        goto label10;

     label04:
        $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("default-augmented-service-enabled");

        if $z2 == 0 goto label01;

        b8 = 6;

        goto label10;

     label05:
        $z3 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("bind-instant-service-allowed");

        if $z3 == 0 goto label01;

        b8 = 4;

        goto label10;

     label06:
        $z4 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("temporary-augmented-service");

        if $z4 == 0 goto label01;

        b8 = 5;

        goto label10;

     label07:
        $z5 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("full_screen_mode");

        if $z5 == 0 goto label01;

        b8 = 3;

        goto label10;

     label08:
        $z6 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("log_level");

        if $z6 == 0 goto label01;

        b8 = 0;

        goto label10;

     label09:
        b8 = -1;

     label10:
        tableswitch(b8)
        {
            case 0: goto label18;
            case 1: goto label17;
            case 2: goto label16;
            case 3: goto label15;
            case 4: goto label14;
            case 5: goto label13;
            case 6: goto label12;
            default: goto label11;
        };

     label11:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid set: ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r7);

        return -1;

     label12:
        $i1 = specialinvoke r0.<com.android.server.autofill.AutofillManagerServiceShellCommand: int setDefaultAugmentedServiceEnabled(java.io.PrintWriter)>(r1);

        return $i1;

     label13:
        $i2 = specialinvoke r0.<com.android.server.autofill.AutofillManagerServiceShellCommand: int setTemporaryAugmentedService(java.io.PrintWriter)>(r1);

        return $i2;

     label14:
        $i3 = specialinvoke r0.<com.android.server.autofill.AutofillManagerServiceShellCommand: int setBindInstantService(java.io.PrintWriter)>(r1);

        return $i3;

     label15:
        $i4 = specialinvoke r0.<com.android.server.autofill.AutofillManagerServiceShellCommand: int setFullScreenMode(java.io.PrintWriter)>(r1);

        return $i4;

     label16:
        $i5 = specialinvoke r0.<com.android.server.autofill.AutofillManagerServiceShellCommand: int setMaxVisibileDatasets()>();

        return $i5;

     label17:
        $i6 = specialinvoke r0.<com.android.server.autofill.AutofillManagerServiceShellCommand: int setMaxPartitions()>();

        return $i6;

     label18:
        $i7 = specialinvoke r0.<com.android.server.autofill.AutofillManagerServiceShellCommand: int setLogLevel(java.io.PrintWriter)>(r1);

        return $i7;
    }

    private int setBindInstantService(java.io.PrintWriter)
    {
        com.android.server.autofill.AutofillManagerServiceShellCommand r0;
        java.io.PrintWriter r1;
        java.lang.String r2, $r8, r9;
        boolean $z0, $z1;
        com.android.server.autofill.AutofillManagerService $r3, $r4;
        java.lang.StringBuilder $r5;
        int i0;
        byte b1;

        r0 := @this: com.android.server.autofill.AutofillManagerServiceShellCommand;

        r1 := @parameter0: java.io.PrintWriter;

        r2 = virtualinvoke r0.<com.android.server.autofill.AutofillManagerServiceShellCommand: java.lang.String getNextArgRequired()>();

        r9 = virtualinvoke r2.<java.lang.String: java.lang.String toLowerCase()>();

        i0 = virtualinvoke r9.<java.lang.String: int hashCode()>();

        if i0 == 3569038 goto label3;

        if i0 == 97196323 goto label2;

     label1:
        goto label4;

     label2:
        $z1 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("false");

        if $z1 == 0 goto label1;

        b1 = 1;

        goto label5;

     label3:
        $z0 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("true");

        if $z0 == 0 goto label1;

        b1 = 0;

        goto label5;

     label4:
        b1 = -1;

     label5:
        if b1 == 0 goto label7;

        if b1 == 1 goto label6;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid mode: ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r8);

        return -1;

     label6:
        $r4 = r0.<com.android.server.autofill.AutofillManagerServiceShellCommand: com.android.server.autofill.AutofillManagerService mService>;

        virtualinvoke $r4.<com.android.server.autofill.AutofillManagerService: void setAllowInstantService(boolean)>(0);

        return 0;

     label7:
        $r3 = r0.<com.android.server.autofill.AutofillManagerServiceShellCommand: com.android.server.autofill.AutofillManagerService mService>;

        virtualinvoke $r3.<com.android.server.autofill.AutofillManagerService: void setAllowInstantService(boolean)>(1);

        return 0;
    }

    private int setDefaultAugmentedServiceEnabled(java.io.PrintWriter)
    {
        com.android.server.autofill.AutofillManagerServiceShellCommand r0;
        java.io.PrintWriter r1;
        int i0;
        boolean z0, $z1;
        java.lang.String $r3, $r8;
        com.android.server.autofill.AutofillManagerService $r4;
        java.lang.StringBuilder $r5;

        r0 := @this: com.android.server.autofill.AutofillManagerServiceShellCommand;

        r1 := @parameter0: java.io.PrintWriter;

        i0 = specialinvoke r0.<com.android.server.autofill.AutofillManagerServiceShellCommand: int getNextIntArgRequired()>();

        $r3 = virtualinvoke r0.<com.android.server.autofill.AutofillManagerServiceShellCommand: java.lang.String getNextArgRequired()>();

        z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r3);

        $r4 = r0.<com.android.server.autofill.AutofillManagerServiceShellCommand: com.android.server.autofill.AutofillManagerService mService>;

        $z1 = virtualinvoke $r4.<com.android.server.autofill.AutofillManagerService: boolean setDefaultAugmentedServiceEnabled(int,boolean)>(i0, z0);

        if $z1 != 0 goto label1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("already ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r8);

     label1:
        return 0;
    }

    private int setFullScreenMode(java.io.PrintWriter)
    {
        com.android.server.autofill.AutofillManagerServiceShellCommand r0;
        java.io.PrintWriter r1;
        java.lang.String r2, $r11, r12;
        boolean $z0, $z1, $z2;
        java.lang.Boolean $r3, $r5;
        com.android.server.autofill.AutofillManagerService $r4, $r6, $r7;
        java.lang.StringBuilder $r8;
        int i0;
        byte b1;

        r0 := @this: com.android.server.autofill.AutofillManagerServiceShellCommand;

        r1 := @parameter0: java.io.PrintWriter;

        r2 = virtualinvoke r0.<com.android.server.autofill.AutofillManagerServiceShellCommand: java.lang.String getNextArgRequired()>();

        r12 = virtualinvoke r2.<java.lang.String: java.lang.String toLowerCase()>();

        i0 = virtualinvoke r12.<java.lang.String: int hashCode()>();

        if i0 == 3569038 goto label4;

        if i0 == 97196323 goto label3;

        if i0 == 1544803905 goto label2;

     label1:
        goto label5;

     label2:
        $z2 = virtualinvoke r12.<java.lang.String: boolean equals(java.lang.Object)>("default");

        if $z2 == 0 goto label1;

        b1 = 2;

        goto label6;

     label3:
        $z1 = virtualinvoke r12.<java.lang.String: boolean equals(java.lang.Object)>("false");

        if $z1 == 0 goto label1;

        b1 = 1;

        goto label6;

     label4:
        $z0 = virtualinvoke r12.<java.lang.String: boolean equals(java.lang.Object)>("true");

        if $z0 == 0 goto label1;

        b1 = 0;

        goto label6;

     label5:
        b1 = -1;

     label6:
        if b1 == 0 goto label9;

        if b1 == 1 goto label8;

        if b1 == 2 goto label7;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid mode: ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r11);

        return -1;

     label7:
        $r7 = r0.<com.android.server.autofill.AutofillManagerServiceShellCommand: com.android.server.autofill.AutofillManagerService mService>;

        virtualinvoke $r7.<com.android.server.autofill.AutofillManagerService: void setFullScreenMode(java.lang.Boolean)>(null);

        return 0;

     label8:
        $r6 = r0.<com.android.server.autofill.AutofillManagerServiceShellCommand: com.android.server.autofill.AutofillManagerService mService>;

        $r5 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r6.<com.android.server.autofill.AutofillManagerService: void setFullScreenMode(java.lang.Boolean)>($r5);

        return 0;

     label9:
        $r4 = r0.<com.android.server.autofill.AutofillManagerServiceShellCommand: com.android.server.autofill.AutofillManagerService mService>;

        $r3 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke $r4.<com.android.server.autofill.AutofillManagerService: void setFullScreenMode(java.lang.Boolean)>($r3);

        return 0;
    }

    private int setLogLevel(java.io.PrintWriter)
    {
        com.android.server.autofill.AutofillManagerServiceShellCommand r0;
        java.io.PrintWriter r1;
        java.lang.String r2, $r9, r10;
        boolean $z0, $z1, $z2;
        com.android.server.autofill.AutofillManagerService $r3, $r4, $r5;
        java.lang.StringBuilder $r6;
        int i0;
        byte b1;

        r0 := @this: com.android.server.autofill.AutofillManagerServiceShellCommand;

        r1 := @parameter0: java.io.PrintWriter;

        r2 = virtualinvoke r0.<com.android.server.autofill.AutofillManagerServiceShellCommand: java.lang.String getNextArgRequired()>();

        r10 = virtualinvoke r2.<java.lang.String: java.lang.String toLowerCase()>();

        i0 = virtualinvoke r10.<java.lang.String: int hashCode()>();

        if i0 == 109935 goto label4;

        if i0 == 95458899 goto label3;

        if i0 == 351107458 goto label2;

     label1:
        goto label5;

     label2:
        $z2 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>("verbose");

        if $z2 == 0 goto label1;

        b1 = 0;

        goto label6;

     label3:
        $z1 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>("debug");

        if $z1 == 0 goto label1;

        b1 = 1;

        goto label6;

     label4:
        $z0 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>("off");

        if $z0 == 0 goto label1;

        b1 = 2;

        goto label6;

     label5:
        b1 = -1;

     label6:
        if b1 == 0 goto label9;

        if b1 == 1 goto label8;

        if b1 == 2 goto label7;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid level: ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r9);

        return -1;

     label7:
        $r5 = r0.<com.android.server.autofill.AutofillManagerServiceShellCommand: com.android.server.autofill.AutofillManagerService mService>;

        virtualinvoke $r5.<com.android.server.autofill.AutofillManagerService: void setLogLevel(int)>(0);

        return 0;

     label8:
        $r4 = r0.<com.android.server.autofill.AutofillManagerServiceShellCommand: com.android.server.autofill.AutofillManagerService mService>;

        virtualinvoke $r4.<com.android.server.autofill.AutofillManagerService: void setLogLevel(int)>(2);

        return 0;

     label9:
        $r3 = r0.<com.android.server.autofill.AutofillManagerServiceShellCommand: com.android.server.autofill.AutofillManagerService mService>;

        virtualinvoke $r3.<com.android.server.autofill.AutofillManagerService: void setLogLevel(int)>(4);

        return 0;
    }

    private int setMaxPartitions()
    {
        com.android.server.autofill.AutofillManagerServiceShellCommand r0;
        com.android.server.autofill.AutofillManagerService $r1;
        java.lang.String $r2;
        int $i0;

        r0 := @this: com.android.server.autofill.AutofillManagerServiceShellCommand;

        $r1 = r0.<com.android.server.autofill.AutofillManagerServiceShellCommand: com.android.server.autofill.AutofillManagerService mService>;

        $r2 = virtualinvoke r0.<com.android.server.autofill.AutofillManagerServiceShellCommand: java.lang.String getNextArgRequired()>();

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);

        virtualinvoke $r1.<com.android.server.autofill.AutofillManagerService: void setMaxPartitions(int)>($i0);

        return 0;
    }

    private int setMaxVisibileDatasets()
    {
        com.android.server.autofill.AutofillManagerServiceShellCommand r0;
        com.android.server.autofill.AutofillManagerService $r1;
        java.lang.String $r2;
        int $i0;

        r0 := @this: com.android.server.autofill.AutofillManagerServiceShellCommand;

        $r1 = r0.<com.android.server.autofill.AutofillManagerServiceShellCommand: com.android.server.autofill.AutofillManagerService mService>;

        $r2 = virtualinvoke r0.<com.android.server.autofill.AutofillManagerServiceShellCommand: java.lang.String getNextArgRequired()>();

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);

        virtualinvoke $r1.<com.android.server.autofill.AutofillManagerService: void setMaxVisibleDatasets(int)>($i0);

        return 0;
    }

    private int setTemporaryAugmentedService(java.io.PrintWriter)
    {
        com.android.server.autofill.AutofillManagerServiceShellCommand r0;
        java.io.PrintWriter r1;
        int i0, i1;
        java.lang.String r2, $r11;
        com.android.server.autofill.AutofillManagerService $r4, $r12;
        java.lang.StringBuilder $r5;

        r0 := @this: com.android.server.autofill.AutofillManagerServiceShellCommand;

        r1 := @parameter0: java.io.PrintWriter;

        i0 = specialinvoke r0.<com.android.server.autofill.AutofillManagerServiceShellCommand: int getNextIntArgRequired()>();

        r2 = virtualinvoke r0.<com.android.server.autofill.AutofillManagerServiceShellCommand: java.lang.String getNextArg()>();

        if r2 != null goto label1;

        $r12 = r0.<com.android.server.autofill.AutofillManagerServiceShellCommand: com.android.server.autofill.AutofillManagerService mService>;

        virtualinvoke $r12.<com.android.server.autofill.AutofillManagerService: void resetTemporaryAugmentedAutofillService(int)>(i0);

        return 0;

     label1:
        i1 = specialinvoke r0.<com.android.server.autofill.AutofillManagerServiceShellCommand: int getNextIntArgRequired()>();

        $r4 = r0.<com.android.server.autofill.AutofillManagerServiceShellCommand: com.android.server.autofill.AutofillManagerService mService>;

        virtualinvoke $r4.<com.android.server.autofill.AutofillManagerService: void setTemporaryAugmentedAutofillService(int,java.lang.String,int)>(i0, r2, i1);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AugmentedAutofillService temporarily set to ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms");

        $r11 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r11);

        return 0;
    }

    private int waitForLatch(java.io.PrintWriter, java.util.concurrent.CountDownLatch)
    {
        com.android.server.autofill.AutofillManagerServiceShellCommand r0;
        java.io.PrintWriter r1;
        java.util.concurrent.TimeUnit $r2;
        boolean $z0;
        java.lang.Throwable $r3;
        java.lang.Thread $r4;
        java.util.concurrent.CountDownLatch r5;

        r0 := @this: com.android.server.autofill.AutofillManagerServiceShellCommand;

        r1 := @parameter0: java.io.PrintWriter;

        r5 := @parameter1: java.util.concurrent.CountDownLatch;

     label1:
        $r2 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        $z0 = virtualinvoke r5.<java.util.concurrent.CountDownLatch: boolean await(long,java.util.concurrent.TimeUnit)>(5L, $r2);

        if $z0 != 0 goto label3;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Timed out after 5 seconds");

     label2:
        return -1;

     label3:
        return 0;

     label4:
        $r3 := @caughtexception;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("System call interrupted");

        $r4 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r4.<java.lang.Thread: void interrupt()>();

        return -1;

        catch java.lang.InterruptedException from label1 to label2 with label4;
    }

    public void lambda$requestDestroy$1$AutofillManagerServiceShellCommand(int, com.android.internal.os.IResultReceiver)
    {
        com.android.server.autofill.AutofillManagerServiceShellCommand r0;
        int i0;
        com.android.internal.os.IResultReceiver r1;
        com.android.server.autofill.AutofillManagerService $r2;

        r0 := @this: com.android.server.autofill.AutofillManagerServiceShellCommand;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.internal.os.IResultReceiver;

        $r2 = r0.<com.android.server.autofill.AutofillManagerServiceShellCommand: com.android.server.autofill.AutofillManagerService mService>;

        virtualinvoke $r2.<com.android.server.autofill.AutofillManagerService: void destroySessions(int,com.android.internal.os.IResultReceiver)>(i0, r1);

        return;
    }

    public void lambda$requestList$2$AutofillManagerServiceShellCommand(int, com.android.internal.os.IResultReceiver)
    {
        com.android.server.autofill.AutofillManagerServiceShellCommand r0;
        int i0;
        com.android.internal.os.IResultReceiver r1;
        com.android.server.autofill.AutofillManagerService $r2;

        r0 := @this: com.android.server.autofill.AutofillManagerServiceShellCommand;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.internal.os.IResultReceiver;

        $r2 = r0.<com.android.server.autofill.AutofillManagerServiceShellCommand: com.android.server.autofill.AutofillManagerService mService>;

        virtualinvoke $r2.<com.android.server.autofill.AutofillManagerService: void listSessions(int,com.android.internal.os.IResultReceiver)>(i0, r1);

        return;
    }

    public int onCommand(java.lang.String)
    {
        com.android.server.autofill.AutofillManagerServiceShellCommand r0;
        java.lang.String r1;
        java.io.PrintWriter r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        boolean $z0, $z1, $z2, $z3, $z4;
        byte b8;

        r0 := @this: com.android.server.autofill.AutofillManagerServiceShellCommand;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label01;

        $i7 = virtualinvoke r0.<com.android.server.autofill.AutofillManagerServiceShellCommand: int handleDefaultCommands(java.lang.String)>(r1);

        return $i7;

     label01:
        r2 = virtualinvoke r0.<com.android.server.autofill.AutofillManagerServiceShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        b8 = -1;

        $i0 = virtualinvoke r1.<java.lang.String: int hashCode()>();

        lookupswitch($i0)
        {
            case 102230: goto label07;
            case 113762: goto label06;
            case 3322014: goto label05;
            case 108404047: goto label04;
            case 1557372922: goto label03;
            default: goto label02;
        };

     label02:
        goto label08;

     label03:
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("destroy");

        if $z0 == 0 goto label02;

        b8 = 1;

        goto label08;

     label04:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("reset");

        if $z1 == 0 goto label02;

        b8 = 2;

        goto label08;

     label05:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("list");

        if $z2 == 0 goto label02;

        b8 = 0;

        goto label08;

     label06:
        $z3 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("set");

        if $z3 == 0 goto label02;

        b8 = 4;

        goto label08;

     label07:
        $z4 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("get");

        if $z4 == 0 goto label02;

        b8 = 3;

     label08:
        if b8 == 0 goto label13;

        if b8 == 1 goto label12;

        if b8 == 2 goto label11;

        if b8 == 3 goto label10;

        if b8 == 4 goto label09;

        $i6 = virtualinvoke r0.<com.android.server.autofill.AutofillManagerServiceShellCommand: int handleDefaultCommands(java.lang.String)>(r1);

        return $i6;

     label09:
        $i5 = specialinvoke r0.<com.android.server.autofill.AutofillManagerServiceShellCommand: int requestSet(java.io.PrintWriter)>(r2);

        return $i5;

     label10:
        $i4 = specialinvoke r0.<com.android.server.autofill.AutofillManagerServiceShellCommand: int requestGet(java.io.PrintWriter)>(r2);

        return $i4;

     label11:
        $i3 = specialinvoke r0.<com.android.server.autofill.AutofillManagerServiceShellCommand: int requestReset()>();

        return $i3;

     label12:
        $i2 = specialinvoke r0.<com.android.server.autofill.AutofillManagerServiceShellCommand: int requestDestroy(java.io.PrintWriter)>(r2);

        return $i2;

     label13:
        $i1 = specialinvoke r0.<com.android.server.autofill.AutofillManagerServiceShellCommand: int requestList(java.io.PrintWriter)>(r2);

        return $i1;
    }

    public void onHelp()
    {
        com.android.server.autofill.AutofillManagerServiceShellCommand r0;
        java.lang.Throwable $r2, $r3;
        java.io.PrintWriter r4;

        r0 := @this: com.android.server.autofill.AutofillManagerServiceShellCommand;

        r4 = virtualinvoke r0.<com.android.server.autofill.AutofillManagerServiceShellCommand: java.io.PrintWriter getOutPrintWriter()>();

     label1:
        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("AutoFill Service (autofill) commands:");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("  help");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("    Prints this help text.");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("  get log_level ");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("    Gets the Autofill log level (off | debug | verbose).");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("  get max_partitions");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("    Gets the maximum number of partitions per session.");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("  get max_visible_datasets");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("    Gets the maximum number of visible datasets in the UI.");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("  get full_screen_mode");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("    Gets the Fill UI full screen mode");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("  get fc_score [--algorithm ALGORITHM] value1 value2");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("    Gets the field classification score for 2 fields.");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("  get bind-instant-service-allowed");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("    Gets whether binding to services provided by instant apps is allowed");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("  set log_level [off | debug | verbose]");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("    Sets the Autofill log level.");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("  set max_partitions number");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("    Sets the maximum number of partitions per session.");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("  set max_visible_datasets number");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("    Sets the maximum number of visible datasets in the UI.");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("  set full_screen_mode [true | false | default]");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("    Sets the Fill UI full screen mode");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("  set bind-instant-service-allowed [true | false]");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("    Sets whether binding to services provided by instant apps is allowed");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("  set temporary-augmented-service USER_ID [COMPONENT_NAME DURATION]");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("    Temporarily (for DURATION ms) changes the augmented autofill service implementation.");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("    To reset, call with just the USER_ID argument.");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("  set default-augmented-service-enabled USER_ID [true|false]");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("    Enable / disable the default augmented autofill service for the user.");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("  get default-augmented-service-enabled USER_ID");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("    Checks whether the default augmented autofill service is enabled for the user.");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("  list sessions [--user USER_ID]");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("    Lists all pending sessions.");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("  destroy sessions [--user USER_ID]");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("    Destroys all pending sessions.");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("  reset");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("    Resets all pending sessions and cached service connections.");

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("");

     label2:
        if r4 == null goto label3;

        virtualinvoke r4.<java.io.PrintWriter: void close()>();

     label3:
        return;

     label4:
        $r2 := @caughtexception;

        if r4 == null goto label8;

     label5:
        virtualinvoke r4.<java.io.PrintWriter: void close()>();

     label6:
        goto label8;

     label7:
        $r3 := @caughtexception;

        virtualinvoke $r2.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r3);

     label8:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label5 to label6 with label7;
    }
}
