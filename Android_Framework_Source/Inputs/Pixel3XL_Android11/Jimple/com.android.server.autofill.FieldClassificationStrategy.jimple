final class com.android.server.autofill.FieldClassificationStrategy extends java.lang.Object
{
    private static final java.lang.String TAG;
    private final android.content.Context mContext;
    private final java.lang.Object mLock;
    private java.util.ArrayList mQueuedCommands;
    private android.service.autofill.IAutofillFieldClassificationService mRemoteService;
    private android.content.ServiceConnection mServiceConnection;
    private final int mUserId;

    public void <init>(android.content.Context, int)
    {
        com.android.server.autofill.FieldClassificationStrategy r0;
        android.content.Context r1;
        int i0;
        java.lang.Object $r2;

        r0 := @this: com.android.server.autofill.FieldClassificationStrategy;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<com.android.server.autofill.FieldClassificationStrategy: java.lang.Object mLock> = $r2;

        r0.<com.android.server.autofill.FieldClassificationStrategy: android.content.Context mContext> = r1;

        r0.<com.android.server.autofill.FieldClassificationStrategy: int mUserId> = i0;

        return;
    }

    static java.lang.Object access$000(com.android.server.autofill.FieldClassificationStrategy)
    {
        com.android.server.autofill.FieldClassificationStrategy r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.server.autofill.FieldClassificationStrategy;

        $r1 = r0.<com.android.server.autofill.FieldClassificationStrategy: java.lang.Object mLock>;

        return $r1;
    }

    static android.service.autofill.IAutofillFieldClassificationService access$100(com.android.server.autofill.FieldClassificationStrategy)
    {
        com.android.server.autofill.FieldClassificationStrategy r0;
        android.service.autofill.IAutofillFieldClassificationService $r1;

        r0 := @parameter0: com.android.server.autofill.FieldClassificationStrategy;

        $r1 = r0.<com.android.server.autofill.FieldClassificationStrategy: android.service.autofill.IAutofillFieldClassificationService mRemoteService>;

        return $r1;
    }

    static android.service.autofill.IAutofillFieldClassificationService access$102(com.android.server.autofill.FieldClassificationStrategy, android.service.autofill.IAutofillFieldClassificationService)
    {
        com.android.server.autofill.FieldClassificationStrategy r0;
        android.service.autofill.IAutofillFieldClassificationService r1;

        r0 := @parameter0: com.android.server.autofill.FieldClassificationStrategy;

        r1 := @parameter1: android.service.autofill.IAutofillFieldClassificationService;

        r0.<com.android.server.autofill.FieldClassificationStrategy: android.service.autofill.IAutofillFieldClassificationService mRemoteService> = r1;

        return r1;
    }

    static java.util.ArrayList access$200(com.android.server.autofill.FieldClassificationStrategy)
    {
        com.android.server.autofill.FieldClassificationStrategy r0;
        java.util.ArrayList $r1;

        r0 := @parameter0: com.android.server.autofill.FieldClassificationStrategy;

        $r1 = r0.<com.android.server.autofill.FieldClassificationStrategy: java.util.ArrayList mQueuedCommands>;

        return $r1;
    }

    static java.util.ArrayList access$202(com.android.server.autofill.FieldClassificationStrategy, java.util.ArrayList)
    {
        com.android.server.autofill.FieldClassificationStrategy r0;
        java.util.ArrayList r1;

        r0 := @parameter0: com.android.server.autofill.FieldClassificationStrategy;

        r1 := @parameter1: java.util.ArrayList;

        r0.<com.android.server.autofill.FieldClassificationStrategy: java.util.ArrayList mQueuedCommands> = r1;

        return r1;
    }

    private void connectAndRun(com.android.server.autofill.FieldClassificationStrategy$Command)
    {
        com.android.server.autofill.FieldClassificationStrategy r0;
        java.lang.Object r1;
        long l0;
        boolean $z0, $z2, $z3, $z5, $z6;
        java.util.ArrayList $r2, $r3, r23;
        android.content.ServiceConnection $r4, $r7;
        int $i1;
        android.content.Context $r6;
        android.os.UserHandle $r8;
        java.lang.String $r11, $r17;
        android.service.autofill.IAutofillFieldClassificationService $r12, r20;
        java.lang.Throwable $r13, $r18;
        android.os.RemoteException $r14;
        com.android.server.autofill.FieldClassificationStrategy$Command r19;
        java.lang.StringBuilder r22, r26;
        com.android.server.autofill.FieldClassificationStrategy$1 r24;
        android.content.ComponentName r25;
        android.content.Intent r27;

        r0 := @this: com.android.server.autofill.FieldClassificationStrategy;

        r19 := @parameter0: com.android.server.autofill.FieldClassificationStrategy$Command;

        r1 = r0.<com.android.server.autofill.FieldClassificationStrategy: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        r20 = r0.<com.android.server.autofill.FieldClassificationStrategy: android.service.autofill.IAutofillFieldClassificationService mRemoteService>;

     label02:
        if r20 == null goto label10;

     label03:
        $z6 = <com.android.server.autofill.Helper: boolean sVerbose>;

        if $z6 == 0 goto label04;

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("FieldClassificationStrategy", "running command right away");

     label04:
        $r12 = r0.<com.android.server.autofill.FieldClassificationStrategy: android.service.autofill.IAutofillFieldClassificationService mRemoteService>;

        interfaceinvoke r19.<com.android.server.autofill.FieldClassificationStrategy$Command: void run(android.service.autofill.IAutofillFieldClassificationService)>($r12);

     label05:
        goto label08;

     label06:
        $r14 := @caughtexception;

     label07:
        r22 = new java.lang.StringBuilder;

        specialinvoke r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("exception calling service: ");

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        $r17 = virtualinvoke r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("FieldClassificationStrategy", $r17);

     label08:
        exitmonitor r1;

     label09:
        return;

     label10:
        $z0 = <com.android.server.autofill.Helper: boolean sDebug>;

        if $z0 == 0 goto label11;

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("FieldClassificationStrategy", "service is null; queuing command");

     label11:
        $r2 = r0.<com.android.server.autofill.FieldClassificationStrategy: java.util.ArrayList mQueuedCommands>;

        if $r2 != null goto label12;

        r23 = new java.util.ArrayList;

        specialinvoke r23.<java.util.ArrayList: void <init>(int)>(1);

        r0.<com.android.server.autofill.FieldClassificationStrategy: java.util.ArrayList mQueuedCommands> = r23;

     label12:
        $r3 = r0.<com.android.server.autofill.FieldClassificationStrategy: java.util.ArrayList mQueuedCommands>;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r19);

        $r4 = r0.<com.android.server.autofill.FieldClassificationStrategy: android.content.ServiceConnection mServiceConnection>;

        if $r4 == null goto label14;

        exitmonitor r1;

     label13:
        return;

     label14:
        $z2 = <com.android.server.autofill.Helper: boolean sVerbose>;

        if $z2 == 0 goto label15;

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("FieldClassificationStrategy", "creating connection");

     label15:
        r24 = new com.android.server.autofill.FieldClassificationStrategy$1;

        specialinvoke r24.<com.android.server.autofill.FieldClassificationStrategy$1: void <init>(com.android.server.autofill.FieldClassificationStrategy)>(r0);

        r0.<com.android.server.autofill.FieldClassificationStrategy: android.content.ServiceConnection mServiceConnection> = r24;

        r25 = specialinvoke r0.<com.android.server.autofill.FieldClassificationStrategy: android.content.ComponentName getServiceComponentName()>();

        $z3 = <com.android.server.autofill.Helper: boolean sVerbose>;

        if $z3 == 0 goto label16;

        r26 = new java.lang.StringBuilder;

        specialinvoke r26.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("binding to: ");

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r25);

        $r11 = virtualinvoke r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("FieldClassificationStrategy", $r11);

     label16:
        if r25 == null goto label24;

     label17:
        r27 = new android.content.Intent;

        specialinvoke r27.<android.content.Intent: void <init>()>();

        virtualinvoke r27.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>(r25);

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label18:
        $r6 = r0.<com.android.server.autofill.FieldClassificationStrategy: android.content.Context mContext>;

        $r7 = r0.<com.android.server.autofill.FieldClassificationStrategy: android.content.ServiceConnection mServiceConnection>;

        $i1 = r0.<com.android.server.autofill.FieldClassificationStrategy: int mUserId>;

        $r8 = staticinvoke <android.os.UserHandle: android.os.UserHandle of(int)>($i1);

        virtualinvoke $r6.<android.content.Context: boolean bindServiceAsUser(android.content.Intent,android.content.ServiceConnection,int,android.os.UserHandle)>(r27, $r7, 1, $r8);

        $z5 = <com.android.server.autofill.Helper: boolean sVerbose>;

        if $z5 == 0 goto label19;

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("FieldClassificationStrategy", "bound");

     label19:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

     label20:
        goto label24;

     label21:
        $r18 := @caughtexception;

     label22:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

     label23:
        throw $r18;

     label24:
        exitmonitor r1;

     label25:
        return;

     label26:
        $r13 := @caughtexception;

     label27:
        exitmonitor r1;

     label28:
        throw $r13;

        catch java.lang.Throwable from label01 to label02 with label26;
        catch android.os.RemoteException from label03 to label04 with label06;
        catch java.lang.Throwable from label03 to label04 with label26;
        catch android.os.RemoteException from label04 to label05 with label06;
        catch java.lang.Throwable from label04 to label05 with label26;
        catch java.lang.Throwable from label07 to label08 with label26;
        catch java.lang.Throwable from label08 to label09 with label26;
        catch java.lang.Throwable from label10 to label11 with label26;
        catch java.lang.Throwable from label11 to label12 with label26;
        catch java.lang.Throwable from label12 to label13 with label26;
        catch java.lang.Throwable from label14 to label15 with label26;
        catch java.lang.Throwable from label15 to label16 with label26;
        catch java.lang.Throwable from label17 to label18 with label26;
        catch java.lang.Throwable from label18 to label19 with label21;
        catch java.lang.Throwable from label19 to label20 with label26;
        catch java.lang.Throwable from label22 to label23 with label26;
        catch java.lang.Throwable from label23 to label24 with label26;
        catch java.lang.Throwable from label24 to label25 with label26;
        catch java.lang.Throwable from label27 to label28 with label26;
    }

    private java.lang.Object getMetadataValue(java.lang.String, com.android.server.autofill.FieldClassificationStrategy$MetadataParser)
    {
        com.android.server.autofill.FieldClassificationStrategy r0;
        android.content.pm.ServiceInfo r1;
        android.content.Context $r2;
        android.content.pm.ApplicationInfo $r3;
        android.os.Bundle $r4;
        int $i0;
        java.lang.Object $r5;
        android.content.pm.PackageManager$NameNotFoundException $r6;
        java.lang.StringBuilder $r7;
        java.lang.String $r10, r11;
        com.android.server.autofill.FieldClassificationStrategy$MetadataParser r12;
        android.content.pm.PackageManager r13;
        android.content.res.Resources r14;

        r0 := @this: com.android.server.autofill.FieldClassificationStrategy;

        r11 := @parameter0: java.lang.String;

        r12 := @parameter1: com.android.server.autofill.FieldClassificationStrategy$MetadataParser;

        r1 = virtualinvoke r0.<com.android.server.autofill.FieldClassificationStrategy: android.content.pm.ServiceInfo getServiceInfo()>();

        if r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<com.android.server.autofill.FieldClassificationStrategy: android.content.Context mContext>;

        r13 = virtualinvoke $r2.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

     label2:
        $r3 = r1.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo>;

        r14 = virtualinvoke r13.<android.content.pm.PackageManager: android.content.res.Resources getResourcesForApplication(android.content.pm.ApplicationInfo)>($r3);

     label3:
        $r4 = r1.<android.content.pm.ServiceInfo: android.os.Bundle metaData>;

        $i0 = virtualinvoke $r4.<android.os.Bundle: int getInt(java.lang.String)>(r11);

        $r5 = interfaceinvoke r12.<com.android.server.autofill.FieldClassificationStrategy$MetadataParser: java.lang.Object get(android.content.res.Resources,int)>(r14, $i0);

        return $r5;

     label4:
        $r6 := @caughtexception;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error getting application resources for ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("FieldClassificationStrategy", $r10, $r6);

        return null;

        catch android.content.pm.PackageManager$NameNotFoundException from label2 to label3 with label4;
    }

    private android.content.ComponentName getServiceComponentName()
    {
        com.android.server.autofill.FieldClassificationStrategy r0;
        android.content.ComponentName $r2;
        java.lang.String $r3, $r4, $r5, $r6, $r10, $r12, $r16;
        boolean $z0, $z1;
        java.lang.StringBuilder $r7, $r11;
        android.content.pm.ServiceInfo r17;

        r0 := @this: com.android.server.autofill.FieldClassificationStrategy;

        r17 = virtualinvoke r0.<com.android.server.autofill.FieldClassificationStrategy: android.content.pm.ServiceInfo getServiceInfo()>();

        if r17 != null goto label1;

        return null;

     label1:
        $r2 = new android.content.ComponentName;

        $r4 = r17.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        $r3 = r17.<android.content.pm.ServiceInfo: java.lang.String name>;

        specialinvoke $r2.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r4, $r3);

        $r6 = "android.permission.BIND_AUTOFILL_FIELD_CLASSIFICATION_SERVICE";

        $r5 = r17.<android.content.pm.ServiceInfo: java.lang.String permission>;

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 != 0 goto label2;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r2.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not require permission ");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.BIND_AUTOFILL_FIELD_CLASSIFICATION_SERVICE");

        $r16 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("FieldClassificationStrategy", $r16);

        return null;

     label2:
        $z1 = <com.android.server.autofill.Helper: boolean sVerbose>;

        if $z1 == 0 goto label3;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getServiceComponentName(): ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("FieldClassificationStrategy", $r10);

     label3:
        return $r2;
    }

    static void lambda$calculateScores$2(android.os.RemoteCallback, java.util.List, java.lang.String[], java.lang.String[], java.lang.String, android.os.Bundle, android.util.ArrayMap, android.util.ArrayMap, android.service.autofill.IAutofillFieldClassificationService) throws android.os.RemoteException
    {
        android.os.RemoteCallback r0;
        java.util.List r1;
        java.lang.String[] r2, r3;
        java.lang.String r4;
        android.os.Bundle r5;
        android.util.ArrayMap r6, r7;
        android.service.autofill.IAutofillFieldClassificationService r8;

        r0 := @parameter0: android.os.RemoteCallback;

        r1 := @parameter1: java.util.List;

        r2 := @parameter2: java.lang.String[];

        r3 := @parameter3: java.lang.String[];

        r4 := @parameter4: java.lang.String;

        r5 := @parameter5: android.os.Bundle;

        r6 := @parameter6: android.util.ArrayMap;

        r7 := @parameter7: android.util.ArrayMap;

        r8 := @parameter8: android.service.autofill.IAutofillFieldClassificationService;

        interfaceinvoke r8.<android.service.autofill.IAutofillFieldClassificationService: void calculateScores(android.os.RemoteCallback,java.util.List,java.lang.String[],java.lang.String[],java.lang.String,android.os.Bundle,java.util.Map,java.util.Map)>(r0, r1, r2, r3, r4, r5, r6, r7);

        return;
    }

    static java.lang.String[] lambda$getAvailableAlgorithms$0(android.content.res.Resources, int)
    {
        android.content.res.Resources r0;
        int i0;
        java.lang.String[] $r1;

        r0 := @parameter0: android.content.res.Resources;

        i0 := @parameter1: int;

        $r1 = virtualinvoke r0.<android.content.res.Resources: java.lang.String[] getStringArray(int)>(i0);

        return $r1;
    }

    static java.lang.String lambda$getDefaultAlgorithm$1(android.content.res.Resources, int)
    {
        android.content.res.Resources r0;
        int i0;
        java.lang.String $r1;

        r0 := @parameter0: android.content.res.Resources;

        i0 := @parameter1: int;

        $r1 = virtualinvoke r0.<android.content.res.Resources: java.lang.String getString(int)>(i0);

        return $r1;
    }

    void calculateScores(android.os.RemoteCallback, java.util.List, java.lang.String[], java.lang.String[], java.lang.String, android.os.Bundle, android.util.ArrayMap, android.util.ArrayMap)
    {
        com.android.server.autofill.FieldClassificationStrategy r0;
        android.os.RemoteCallback r1;
        java.util.List r2;
        java.lang.String[] r3, r4;
        java.lang.String r5;
        android.os.Bundle r6;
        android.util.ArrayMap r7, r8;
        com.android.server.autofill._$$Lambda$FieldClassificationStrategy$cXTbqmCb6_V5mVc5dTOipqK5X_E $r9;

        r0 := @this: com.android.server.autofill.FieldClassificationStrategy;

        r1 := @parameter0: android.os.RemoteCallback;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: java.lang.String[];

        r4 := @parameter3: java.lang.String[];

        r5 := @parameter4: java.lang.String;

        r6 := @parameter5: android.os.Bundle;

        r7 := @parameter6: android.util.ArrayMap;

        r8 := @parameter7: android.util.ArrayMap;

        $r9 = new com.android.server.autofill._$$Lambda$FieldClassificationStrategy$cXTbqmCb6_V5mVc5dTOipqK5X_E;

        specialinvoke $r9.<com.android.server.autofill._$$Lambda$FieldClassificationStrategy$cXTbqmCb6_V5mVc5dTOipqK5X_E: void <init>(android.os.RemoteCallback,java.util.List,java.lang.String[],java.lang.String[],java.lang.String,android.os.Bundle,android.util.ArrayMap,android.util.ArrayMap)>(r1, r2, r3, r4, r5, r6, r7, r8);

        specialinvoke r0.<com.android.server.autofill.FieldClassificationStrategy: void connectAndRun(com.android.server.autofill.FieldClassificationStrategy$Command)>($r9);

        return;
    }

    void dump(java.lang.String, java.io.PrintWriter)
    {
        com.android.server.autofill.FieldClassificationStrategy r0;
        java.io.PrintWriter r1;
        android.content.ComponentName r2;
        java.util.ArrayList r3;
        int $i0, $i1;
        java.lang.String $r4, $r6, $r7, r9;
        java.lang.String[] $r5;
        java.lang.Exception $r8;

        r0 := @this: com.android.server.autofill.FieldClassificationStrategy;

        r9 := @parameter0: java.lang.String;

        r1 := @parameter1: java.io.PrintWriter;

        r2 = specialinvoke r0.<com.android.server.autofill.FieldClassificationStrategy: android.content.ComponentName getServiceComponentName()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r9);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("User ID: ");

        $i0 = r0.<com.android.server.autofill.FieldClassificationStrategy: int mUserId>;

        virtualinvoke r1.<java.io.PrintWriter: void println(int)>($i0);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r9);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("Queued commands: ");

        r3 = r0.<com.android.server.autofill.FieldClassificationStrategy: java.util.ArrayList mQueuedCommands>;

        if r3 != null goto label1;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("N/A");

        goto label2;

     label1:
        $i1 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(int)>($i1);

     label2:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r9);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("Implementation: ");

        if r2 != null goto label3;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("N/A");

        return;

     label3:
        $r4 = virtualinvoke r2.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r4);

     label4:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r9);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("Available algorithms: ");

        $r5 = virtualinvoke r0.<com.android.server.autofill.FieldClassificationStrategy: java.lang.String[] getAvailableAlgorithms()>();

        $r6 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>($r5);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r6);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r9);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("Default algorithm: ");

        $r7 = virtualinvoke r0.<com.android.server.autofill.FieldClassificationStrategy: java.lang.String getDefaultAlgorithm()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r7);

     label5:
        goto label7;

     label6:
        $r8 := @caughtexception;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("ERROR CALLING SERVICE: ");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>($r8);

     label7:
        return;

        catch java.lang.Exception from label4 to label5 with label6;
    }

    java.lang.String[] getAvailableAlgorithms()
    {
        com.android.server.autofill.FieldClassificationStrategy r0;
        com.android.server.autofill.'-$$Lambda$FieldClassificationStrategy$NQQgQ63vxhPkiwOWrnwRyuYSHTM' $r1;
        java.lang.Object $r2;
        java.lang.String[] $r3;
        com.android.server.autofill.FieldClassificationStrategy$MetadataParser r4;

        r0 := @this: com.android.server.autofill.FieldClassificationStrategy;

        $r1 = <com.android.server.autofill._$$Lambda$FieldClassificationStrategy$NQQgQ63vxhPkiwOWrnwRyuYSHTM: com.android.server.autofill.'-$$Lambda$FieldClassificationStrategy$NQQgQ63vxhPkiwOWrnwRyuYSHTM' INSTANCE>;

        r4 = (com.android.server.autofill.FieldClassificationStrategy$MetadataParser) $r1;

        $r2 = specialinvoke r0.<com.android.server.autofill.FieldClassificationStrategy: java.lang.Object getMetadataValue(java.lang.String,com.android.server.autofill.FieldClassificationStrategy$MetadataParser)>("android.autofill.field_classification.available_algorithms", r4);

        $r3 = (java.lang.String[]) $r2;

        return $r3;
    }

    java.lang.String getDefaultAlgorithm()
    {
        com.android.server.autofill.FieldClassificationStrategy r0;
        com.android.server.autofill.'-$$Lambda$FieldClassificationStrategy$vGIL1YGX_9ksoSV74T7gO4fkEBE' $r1;
        java.lang.Object $r2;
        java.lang.String $r3;
        com.android.server.autofill.FieldClassificationStrategy$MetadataParser r4;

        r0 := @this: com.android.server.autofill.FieldClassificationStrategy;

        $r1 = <com.android.server.autofill._$$Lambda$FieldClassificationStrategy$vGIL1YGX_9ksoSV74T7gO4fkEBE: com.android.server.autofill.'-$$Lambda$FieldClassificationStrategy$vGIL1YGX_9ksoSV74T7gO4fkEBE' INSTANCE>;

        r4 = (com.android.server.autofill.FieldClassificationStrategy$MetadataParser) $r1;

        $r2 = specialinvoke r0.<com.android.server.autofill.FieldClassificationStrategy: java.lang.Object getMetadataValue(java.lang.String,com.android.server.autofill.FieldClassificationStrategy$MetadataParser)>("android.autofill.field_classification.default_algorithm", r4);

        $r3 = (java.lang.String) $r2;

        return $r3;
    }

    android.content.pm.ServiceInfo getServiceInfo()
    {
        com.android.server.autofill.FieldClassificationStrategy r0;
        java.lang.String r1;
        android.content.Context $r2, $r6;
        android.content.pm.PackageManager $r3, $r7;
        android.content.Intent $r4;
        android.content.pm.ServiceInfo $r8, $r9;
        android.content.pm.ResolveInfo r11;

        r0 := @this: com.android.server.autofill.FieldClassificationStrategy;

        $r2 = r0.<com.android.server.autofill.FieldClassificationStrategy: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r1 = virtualinvoke $r3.<android.content.pm.PackageManager: java.lang.String getServicesSystemSharedLibraryPackageName()>();

        if r1 != null goto label1;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("FieldClassificationStrategy", "no external services package!");

        return null;

     label1:
        $r4 = new android.content.Intent;

        specialinvoke $r4.<android.content.Intent: void <init>(java.lang.String)>("android.service.autofill.AutofillFieldClassificationService");

        virtualinvoke $r4.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>(r1);

        $r6 = r0.<com.android.server.autofill.FieldClassificationStrategy: android.content.Context mContext>;

        $r7 = virtualinvoke $r6.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r11 = virtualinvoke $r7.<android.content.pm.PackageManager: android.content.pm.ResolveInfo resolveService(android.content.Intent,int)>($r4, 132);

        if r11 == null goto label3;

        $r8 = r11.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        if $r8 != null goto label2;

        goto label3;

     label2:
        $r9 = r11.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        return $r9;

     label3:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("FieldClassificationStrategy", "No valid components found.");

        return null;
    }

    void reset()
    {
        com.android.server.autofill.FieldClassificationStrategy r0;
        java.lang.Object r1;
        android.content.ServiceConnection $r3, $r4;
        boolean $z0, $z1;
        android.content.Context $r5;
        java.lang.Throwable $r6, $r7;
        java.lang.String $r9, $r11;
        java.lang.StringBuilder r14;
        java.lang.IllegalArgumentException r15;

        r0 := @this: com.android.server.autofill.FieldClassificationStrategy;

        r1 = r0.<com.android.server.autofill.FieldClassificationStrategy: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r3 = r0.<com.android.server.autofill.FieldClassificationStrategy: android.content.ServiceConnection mServiceConnection>;

        if $r3 == null goto label08;

        $z1 = <com.android.server.autofill.Helper: boolean sDebug>;

        if $z1 == 0 goto label02;

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("FieldClassificationStrategy", "reset(): unbinding service.");

     label02:
        $r5 = r0.<com.android.server.autofill.FieldClassificationStrategy: android.content.Context mContext>;

        $r4 = r0.<com.android.server.autofill.FieldClassificationStrategy: android.content.ServiceConnection mServiceConnection>;

        virtualinvoke $r5.<android.content.Context: void unbindService(android.content.ServiceConnection)>($r4);

     label03:
        goto label06;

     label04:
        $r7 := @caughtexception;

     label05:
        r14 = new java.lang.StringBuilder;

        specialinvoke r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("reset(): ");

        r15 = (java.lang.IllegalArgumentException) $r7;

        $r9 = virtualinvoke r15.<java.lang.IllegalArgumentException: java.lang.String getMessage()>();

        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("FieldClassificationStrategy", $r11);

     label06:
        r0.<com.android.server.autofill.FieldClassificationStrategy: android.content.ServiceConnection mServiceConnection> = null;

     label07:
        goto label09;

     label08:
        $z0 = <com.android.server.autofill.Helper: boolean sDebug>;

        if $z0 == 0 goto label09;

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("FieldClassificationStrategy", "reset(): service is not bound. Do nothing.");

     label09:
        exitmonitor r1;

     label10:
        return;

     label11:
        $r6 := @caughtexception;

     label12:
        exitmonitor r1;

     label13:
        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.IllegalArgumentException from label02 to label03 with label04;
        catch java.lang.Throwable from label02 to label03 with label11;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label08 to label09 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    public static void <clinit>()
    {
        <com.android.server.autofill.FieldClassificationStrategy: java.lang.String TAG> = "FieldClassificationStrategy";

        return;
    }
}
