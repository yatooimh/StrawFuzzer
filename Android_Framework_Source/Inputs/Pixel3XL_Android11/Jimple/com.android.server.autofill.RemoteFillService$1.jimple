class com.android.server.autofill.RemoteFillService$1 extends android.service.autofill.IFillCallback$Stub
{
    final com.android.server.autofill.RemoteFillService this$0;
    final java.util.concurrent.atomic.AtomicReference val$cancellationSink;
    final java.util.concurrent.CompletableFuture val$fillRequest;
    final java.util.concurrent.atomic.AtomicReference val$futureRef;

    void <init>(com.android.server.autofill.RemoteFillService, java.util.concurrent.atomic.AtomicReference, java.util.concurrent.atomic.AtomicReference, java.util.concurrent.CompletableFuture)
    {
        com.android.server.autofill.RemoteFillService$1 r0;
        com.android.server.autofill.RemoteFillService r1;
        java.util.concurrent.atomic.AtomicReference r2, r3;
        java.util.concurrent.CompletableFuture r4;

        r0 := @this: com.android.server.autofill.RemoteFillService$1;

        r1 := @parameter0: com.android.server.autofill.RemoteFillService;

        r2 := @parameter1: java.util.concurrent.atomic.AtomicReference;

        r3 := @parameter2: java.util.concurrent.atomic.AtomicReference;

        r4 := @parameter3: java.util.concurrent.CompletableFuture;

        r0.<com.android.server.autofill.RemoteFillService$1: com.android.server.autofill.RemoteFillService this$0> = r1;

        r0.<com.android.server.autofill.RemoteFillService$1: java.util.concurrent.atomic.AtomicReference val$futureRef> = r2;

        r0.<com.android.server.autofill.RemoteFillService$1: java.util.concurrent.atomic.AtomicReference val$cancellationSink> = r3;

        r0.<com.android.server.autofill.RemoteFillService$1: java.util.concurrent.CompletableFuture val$fillRequest> = r4;

        specialinvoke r0.<android.service.autofill.IFillCallback$Stub: void <init>()>();

        return;
    }

    public void onCancellable(android.os.ICancellationSignal)
    {
        com.android.server.autofill.RemoteFillService$1 r0;
        android.os.ICancellationSignal r1;
        java.util.concurrent.CompletableFuture r2;
        java.util.concurrent.atomic.AtomicReference $r3, $r5;
        java.lang.Object $r4;
        boolean $z0;
        com.android.server.autofill.RemoteFillService $r6;

        r0 := @this: com.android.server.autofill.RemoteFillService$1;

        r1 := @parameter0: android.os.ICancellationSignal;

        $r3 = r0.<com.android.server.autofill.RemoteFillService$1: java.util.concurrent.atomic.AtomicReference val$futureRef>;

        $r4 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        r2 = (java.util.concurrent.CompletableFuture) $r4;

        if r2 == null goto label1;

        $z0 = virtualinvoke r2.<java.util.concurrent.CompletableFuture: boolean isCancelled()>();

        if $z0 == 0 goto label1;

        $r6 = r0.<com.android.server.autofill.RemoteFillService$1: com.android.server.autofill.RemoteFillService this$0>;

        staticinvoke <com.android.server.autofill.RemoteFillService: void access$000(com.android.server.autofill.RemoteFillService,android.os.ICancellationSignal)>($r6, r1);

        goto label2;

     label1:
        $r5 = r0.<com.android.server.autofill.RemoteFillService$1: java.util.concurrent.atomic.AtomicReference val$cancellationSink>;

        virtualinvoke $r5.<java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>(r1);

     label2:
        return;
    }

    public void onFailure(int, java.lang.CharSequence)
    {
        com.android.server.autofill.RemoteFillService$1 r0;
        int i0;
        java.lang.CharSequence r1;
        java.lang.RuntimeException $r2;
        java.util.concurrent.CompletableFuture $r3;
        java.lang.String $r4;

        r0 := @this: com.android.server.autofill.RemoteFillService$1;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.CharSequence;

        $r3 = r0.<com.android.server.autofill.RemoteFillService$1: java.util.concurrent.CompletableFuture val$fillRequest>;

        $r2 = new java.lang.RuntimeException;

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>($r4);

        virtualinvoke $r3.<java.util.concurrent.CompletableFuture: boolean completeExceptionally(java.lang.Throwable)>($r2);

        return;
    }

    public void onSuccess(android.service.autofill.FillResponse)
    {
        com.android.server.autofill.RemoteFillService$1 r0;
        android.service.autofill.FillResponse r1;
        java.util.concurrent.CompletableFuture $r2;

        r0 := @this: com.android.server.autofill.RemoteFillService$1;

        r1 := @parameter0: android.service.autofill.FillResponse;

        $r2 = r0.<com.android.server.autofill.RemoteFillService$1: java.util.concurrent.CompletableFuture val$fillRequest>;

        virtualinvoke $r2.<java.util.concurrent.CompletableFuture: boolean complete(java.lang.Object)>(r1);

        return;
    }
}
