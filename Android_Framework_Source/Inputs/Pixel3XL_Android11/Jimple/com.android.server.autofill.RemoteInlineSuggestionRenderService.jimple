public final class com.android.server.autofill.RemoteInlineSuggestionRenderService extends com.android.internal.infra.AbstractMultiplePendingRequestsRemoteService
{
    private static final java.lang.String TAG;
    private final long mIdleUnbindTimeoutMs;

    void <init>(android.content.Context, android.content.ComponentName, java.lang.String, int, com.android.server.autofill.RemoteInlineSuggestionRenderService$InlineSuggestionRenderCallbacks, boolean, boolean)
    {
        com.android.server.autofill.RemoteInlineSuggestionRenderService r0;
        android.content.Context r1;
        android.content.ComponentName r2;
        java.lang.String r3;
        int i0, i1;
        com.android.server.autofill.RemoteInlineSuggestionRenderService$InlineSuggestionRenderCallbacks r4;
        boolean z0, z1;
        android.os.Handler r5;

        r0 := @this: com.android.server.autofill.RemoteInlineSuggestionRenderService;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.ComponentName;

        r3 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        r4 := @parameter4: com.android.server.autofill.RemoteInlineSuggestionRenderService$InlineSuggestionRenderCallbacks;

        z0 := @parameter5: boolean;

        z1 := @parameter6: boolean;

        r5 = virtualinvoke r1.<android.content.Context: android.os.Handler getMainThreadHandler()>();

        if z0 == 0 goto label1;

        i1 = 4194304;

        goto label2;

     label1:
        i1 = 0;

     label2:
        specialinvoke r0.<com.android.internal.infra.AbstractMultiplePendingRequestsRemoteService: void <init>(android.content.Context,java.lang.String,android.content.ComponentName,int,com.android.internal.infra.AbstractRemoteService$VultureCallback,android.os.Handler,int,boolean,int)>(r1, r3, r2, i0, r4, r5, i1, z1, 2);

        r0.<com.android.server.autofill.RemoteInlineSuggestionRenderService: long mIdleUnbindTimeoutMs> = 0L;

        virtualinvoke r0.<com.android.server.autofill.RemoteInlineSuggestionRenderService: void ensureBound()>();

        return;
    }

    public static android.content.ComponentName getServiceComponentName(android.content.Context, int)
    {
        int i0;
        android.content.ComponentName $r1;
        java.lang.String $r2, $r3, $r7;
        boolean $z0;
        java.lang.StringBuilder $r4;
        android.content.Context r8;
        android.content.pm.ServiceInfo r9;

        r8 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r9 = staticinvoke <com.android.server.autofill.RemoteInlineSuggestionRenderService: android.content.pm.ServiceInfo getServiceInfo(android.content.Context,int)>(r8, i0);

        if r9 != null goto label1;

        return null;

     label1:
        $r1 = new android.content.ComponentName;

        $r3 = r9.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        $r2 = r9.<android.content.pm.ServiceInfo: java.lang.String name>;

        specialinvoke $r1.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r3, $r2);

        $z0 = <com.android.server.autofill.Helper: boolean sVerbose>;

        if $z0 == 0 goto label2;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getServiceComponentName(): ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("RemoteInlineSuggestionRenderService", $r7);

     label2:
        return $r1;
    }

    private static android.content.pm.ServiceInfo getServiceInfo(android.content.Context, int)
    {
        int i0;
        android.content.pm.PackageManager $r1, $r4;
        android.content.Intent $r2;
        java.lang.String $r5, $r6, $r8, $r12, r14;
        boolean $z0;
        java.lang.StringBuilder $r7;
        android.content.Context r13;
        android.content.pm.ResolveInfo r15;
        android.content.pm.ServiceInfo r16;

        r13 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        $r1 = virtualinvoke r13.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r14 = virtualinvoke $r1.<android.content.pm.PackageManager: java.lang.String getServicesSystemSharedLibraryPackageName()>();

        if r14 != null goto label1;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("RemoteInlineSuggestionRenderService", "no external services package!");

        return null;

     label1:
        $r2 = new android.content.Intent;

        specialinvoke $r2.<android.content.Intent: void <init>(java.lang.String)>("android.service.autofill.InlineSuggestionRenderService");

        virtualinvoke $r2.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>(r14);

        $r4 = virtualinvoke r13.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r15 = virtualinvoke $r4.<android.content.pm.PackageManager: android.content.pm.ResolveInfo resolveServiceAsUser(android.content.Intent,int,int)>($r2, 132, i0);

        if r15 != null goto label2;

        r16 = null;

        goto label3;

     label2:
        r16 = r15.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

     label3:
        if r15 == null goto label6;

        if r16 != null goto label4;

        goto label6;

     label4:
        $r6 = "android.permission.BIND_INLINE_SUGGESTION_RENDER_SERVICE";

        $r5 = r16.<android.content.pm.ServiceInfo: java.lang.String permission>;

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 != 0 goto label5;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = r16.<android.content.pm.ServiceInfo: java.lang.String name>;

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not require permission ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.BIND_INLINE_SUGGESTION_RENDER_SERVICE");

        $r12 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("RemoteInlineSuggestionRenderService", $r12);

        return null;

     label5:
        return r16;

     label6:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("RemoteInlineSuggestionRenderService", "No valid components found.");

        return null;
    }

    static void lambda$destroySuggestionViews$2(int, int, android.service.autofill.IInlineSuggestionRenderService) throws android.os.RemoteException
    {
        int i0, i1;
        android.service.autofill.IInlineSuggestionRenderService r0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0 := @parameter2: android.service.autofill.IInlineSuggestionRenderService;

        interfaceinvoke r0.<android.service.autofill.IInlineSuggestionRenderService: void destroySuggestionViews(int,int)>(i0, i1);

        return;
    }

    static void lambda$getInlineSuggestionsRendererInfo$1(android.os.RemoteCallback, android.service.autofill.IInlineSuggestionRenderService) throws android.os.RemoteException
    {
        android.os.RemoteCallback r0;
        android.service.autofill.IInlineSuggestionRenderService r1;

        r0 := @parameter0: android.os.RemoteCallback;

        r1 := @parameter1: android.service.autofill.IInlineSuggestionRenderService;

        interfaceinvoke r1.<android.service.autofill.IInlineSuggestionRenderService: void getInlineSuggestionsRendererInfo(android.os.RemoteCallback)>(r0);

        return;
    }

    static void lambda$renderSuggestion$0(android.service.autofill.IInlineSuggestionUiCallback, android.service.autofill.InlinePresentation, int, int, android.os.IBinder, int, int, int, android.service.autofill.IInlineSuggestionRenderService) throws android.os.RemoteException
    {
        android.service.autofill.IInlineSuggestionUiCallback r0;
        android.service.autofill.InlinePresentation r1;
        int i0, i1, i2, i3, i4;
        android.os.IBinder r2;
        android.service.autofill.IInlineSuggestionRenderService r3;

        r0 := @parameter0: android.service.autofill.IInlineSuggestionUiCallback;

        r1 := @parameter1: android.service.autofill.InlinePresentation;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r2 := @parameter4: android.os.IBinder;

        i2 := @parameter5: int;

        i3 := @parameter6: int;

        i4 := @parameter7: int;

        r3 := @parameter8: android.service.autofill.IInlineSuggestionRenderService;

        interfaceinvoke r3.<android.service.autofill.IInlineSuggestionRenderService: void renderSuggestion(android.service.autofill.IInlineSuggestionUiCallback,android.service.autofill.InlinePresentation,int,int,android.os.IBinder,int,int,int)>(r0, r1, i0, i1, r2, i2, i3, i4);

        return;
    }

    public void destroySuggestionViews(int, int)
    {
        com.android.server.autofill.RemoteInlineSuggestionRenderService r0;
        int i0, i1;
        com.android.server.autofill._$$Lambda$RemoteInlineSuggestionRenderService$TuHcQ_1NgaycY4boDHeJGU4PhnA $r1;

        r0 := @this: com.android.server.autofill.RemoteInlineSuggestionRenderService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = new com.android.server.autofill._$$Lambda$RemoteInlineSuggestionRenderService$TuHcQ_1NgaycY4boDHeJGU4PhnA;

        specialinvoke $r1.<com.android.server.autofill._$$Lambda$RemoteInlineSuggestionRenderService$TuHcQ_1NgaycY4boDHeJGU4PhnA: void <init>(int,int)>(i0, i1);

        virtualinvoke r0.<com.android.server.autofill.RemoteInlineSuggestionRenderService: void scheduleAsyncRequest(com.android.internal.infra.AbstractRemoteService$AsyncRequest)>($r1);

        return;
    }

    public void ensureBound()
    {
        com.android.server.autofill.RemoteInlineSuggestionRenderService r0;

        r0 := @this: com.android.server.autofill.RemoteInlineSuggestionRenderService;

        virtualinvoke r0.<com.android.server.autofill.RemoteInlineSuggestionRenderService: void scheduleBind()>();

        return;
    }

    public void getInlineSuggestionsRendererInfo(android.os.RemoteCallback)
    {
        com.android.server.autofill.RemoteInlineSuggestionRenderService r0;
        android.os.RemoteCallback r1;
        com.android.server.autofill._$$Lambda$RemoteInlineSuggestionRenderService$FqcxltVlZ48okYD3kwsYbGd36eo $r2;

        r0 := @this: com.android.server.autofill.RemoteInlineSuggestionRenderService;

        r1 := @parameter0: android.os.RemoteCallback;

        $r2 = new com.android.server.autofill._$$Lambda$RemoteInlineSuggestionRenderService$FqcxltVlZ48okYD3kwsYbGd36eo;

        specialinvoke $r2.<com.android.server.autofill._$$Lambda$RemoteInlineSuggestionRenderService$FqcxltVlZ48okYD3kwsYbGd36eo: void <init>(android.os.RemoteCallback)>(r1);

        virtualinvoke r0.<com.android.server.autofill.RemoteInlineSuggestionRenderService: void scheduleAsyncRequest(com.android.internal.infra.AbstractRemoteService$AsyncRequest)>($r2);

        return;
    }

    protected volatile android.os.IInterface getServiceInterface(android.os.IBinder)
    {
        com.android.server.autofill.RemoteInlineSuggestionRenderService r0;
        android.os.IBinder r1;
        android.service.autofill.IInlineSuggestionRenderService $r2;

        r0 := @this: com.android.server.autofill.RemoteInlineSuggestionRenderService;

        r1 := @parameter0: android.os.IBinder;

        $r2 = virtualinvoke r0.<com.android.server.autofill.RemoteInlineSuggestionRenderService: android.service.autofill.IInlineSuggestionRenderService getServiceInterface(android.os.IBinder)>(r1);

        return $r2;
    }

    protected android.service.autofill.IInlineSuggestionRenderService getServiceInterface(android.os.IBinder)
    {
        com.android.server.autofill.RemoteInlineSuggestionRenderService r0;
        android.os.IBinder r1;
        android.service.autofill.IInlineSuggestionRenderService $r2;

        r0 := @this: com.android.server.autofill.RemoteInlineSuggestionRenderService;

        r1 := @parameter0: android.os.IBinder;

        $r2 = staticinvoke <android.service.autofill.IInlineSuggestionRenderService$Stub: android.service.autofill.IInlineSuggestionRenderService asInterface(android.os.IBinder)>(r1);

        return $r2;
    }

    protected long getTimeoutIdleBindMillis()
    {
        com.android.server.autofill.RemoteInlineSuggestionRenderService r0;

        r0 := @this: com.android.server.autofill.RemoteInlineSuggestionRenderService;

        return 0L;
    }

    protected void handleOnConnectedStateChanged(boolean)
    {
        com.android.server.autofill.RemoteInlineSuggestionRenderService r0;
        boolean z0;
        long $l0;
        byte $b1;

        r0 := @this: com.android.server.autofill.RemoteInlineSuggestionRenderService;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $l0 = virtualinvoke r0.<com.android.server.autofill.RemoteInlineSuggestionRenderService: long getTimeoutIdleBindMillis()>();

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label1;

        virtualinvoke r0.<com.android.server.autofill.RemoteInlineSuggestionRenderService: void scheduleUnbind()>();

     label1:
        specialinvoke r0.<com.android.internal.infra.AbstractMultiplePendingRequestsRemoteService: void handleOnConnectedStateChanged(boolean)>(z0);

        return;
    }

    public void renderSuggestion(android.service.autofill.IInlineSuggestionUiCallback, android.service.autofill.InlinePresentation, int, int, android.os.IBinder, int, int, int)
    {
        com.android.server.autofill.RemoteInlineSuggestionRenderService r0;
        android.service.autofill.IInlineSuggestionUiCallback r1;
        android.service.autofill.InlinePresentation r2;
        int i0, i1, i2, i3, i4;
        android.os.IBinder r3;
        com.android.server.autofill._$$Lambda$RemoteInlineSuggestionRenderService$Ynu9LYMZF_i1OFnFcaANpQNOYfo $r4;

        r0 := @this: com.android.server.autofill.RemoteInlineSuggestionRenderService;

        r1 := @parameter0: android.service.autofill.IInlineSuggestionUiCallback;

        r2 := @parameter1: android.service.autofill.InlinePresentation;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r3 := @parameter4: android.os.IBinder;

        i2 := @parameter5: int;

        i3 := @parameter6: int;

        i4 := @parameter7: int;

        $r4 = new com.android.server.autofill._$$Lambda$RemoteInlineSuggestionRenderService$Ynu9LYMZF_i1OFnFcaANpQNOYfo;

        specialinvoke $r4.<com.android.server.autofill._$$Lambda$RemoteInlineSuggestionRenderService$Ynu9LYMZF_i1OFnFcaANpQNOYfo: void <init>(android.service.autofill.IInlineSuggestionUiCallback,android.service.autofill.InlinePresentation,int,int,android.os.IBinder,int,int,int)>(r1, r2, i0, i1, r3, i2, i3, i4);

        virtualinvoke r0.<com.android.server.autofill.RemoteInlineSuggestionRenderService: void scheduleAsyncRequest(com.android.internal.infra.AbstractRemoteService$AsyncRequest)>($r4);

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.autofill.RemoteInlineSuggestionRenderService: java.lang.String TAG> = "RemoteInlineSuggestionRenderService";

        return;
    }
}
