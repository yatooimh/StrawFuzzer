final class com.android.server.autofill.ui.FillUi$AnchoredWindow extends java.lang.Object
{
    private final android.view.View mContentView;
    private final com.android.server.autofill.ui.OverlayControl mOverlayControl;
    private android.view.WindowManager$LayoutParams mShowParams;
    private boolean mShowing;
    private final android.view.WindowManager mWm;
    final com.android.server.autofill.ui.FillUi this$0;

    void <init>(com.android.server.autofill.ui.FillUi, android.view.View, com.android.server.autofill.ui.OverlayControl)
    {
        com.android.server.autofill.ui.FillUi$AnchoredWindow r0;
        com.android.server.autofill.ui.FillUi r1;
        android.view.View r2;
        com.android.server.autofill.ui.OverlayControl r3;
        android.content.Context $r4;
        java.lang.Object $r5;
        android.view.WindowManager $r6;

        r0 := @this: com.android.server.autofill.ui.FillUi$AnchoredWindow;

        r1 := @parameter0: com.android.server.autofill.ui.FillUi;

        r2 := @parameter1: android.view.View;

        r3 := @parameter2: com.android.server.autofill.ui.OverlayControl;

        r0.<com.android.server.autofill.ui.FillUi$AnchoredWindow: com.android.server.autofill.ui.FillUi this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = virtualinvoke r2.<android.view.View: android.content.Context getContext()>();

        $r5 = virtualinvoke $r4.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/view/WindowManager;");

        $r6 = (android.view.WindowManager) $r5;

        r0.<com.android.server.autofill.ui.FillUi$AnchoredWindow: android.view.WindowManager mWm> = $r6;

        r0.<com.android.server.autofill.ui.FillUi$AnchoredWindow: android.view.View mContentView> = r2;

        r0.<com.android.server.autofill.ui.FillUi$AnchoredWindow: com.android.server.autofill.ui.OverlayControl mOverlayControl> = r3;

        return;
    }

    static boolean access$300(com.android.server.autofill.ui.FillUi$AnchoredWindow)
    {
        com.android.server.autofill.ui.FillUi$AnchoredWindow r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.autofill.ui.FillUi$AnchoredWindow;

        $z0 = r0.<com.android.server.autofill.ui.FillUi$AnchoredWindow: boolean mShowing>;

        return $z0;
    }

    static android.view.View access$400(com.android.server.autofill.ui.FillUi$AnchoredWindow)
    {
        com.android.server.autofill.ui.FillUi$AnchoredWindow r0;
        android.view.View $r1;

        r0 := @parameter0: com.android.server.autofill.ui.FillUi$AnchoredWindow;

        $r1 = r0.<com.android.server.autofill.ui.FillUi$AnchoredWindow: android.view.View mContentView>;

        return $r1;
    }

    static android.view.WindowManager$LayoutParams access$500(com.android.server.autofill.ui.FillUi$AnchoredWindow)
    {
        com.android.server.autofill.ui.FillUi$AnchoredWindow r0;
        android.view.WindowManager$LayoutParams $r1;

        r0 := @parameter0: com.android.server.autofill.ui.FillUi$AnchoredWindow;

        $r1 = r0.<com.android.server.autofill.ui.FillUi$AnchoredWindow: android.view.WindowManager$LayoutParams mShowParams>;

        return $r1;
    }

    void hide()
    {
        com.android.server.autofill.ui.FillUi$AnchoredWindow r0;

        r0 := @this: com.android.server.autofill.ui.FillUi$AnchoredWindow;

        virtualinvoke r0.<com.android.server.autofill.ui.FillUi$AnchoredWindow: void hide(boolean)>(1);

        return;
    }

    void hide(boolean)
    {
        com.android.server.autofill.ui.FillUi$AnchoredWindow r0;
        boolean z0, $z1;
        android.view.View $r1;
        android.view.WindowManager $r2;
        java.lang.Throwable $r3, $r5;
        com.android.server.autofill.ui.OverlayControl $r4, $r8;
        com.android.server.autofill.ui.FillUi $r6;
        com.android.server.autofill.ui.FillUi$Callback $r7;

        r0 := @this: com.android.server.autofill.ui.FillUi$AnchoredWindow;

        z0 := @parameter0: boolean;

     label01:
        $z1 = r0.<com.android.server.autofill.ui.FillUi$AnchoredWindow: boolean mShowing>;

        if $z1 == 0 goto label02;

        $r2 = r0.<com.android.server.autofill.ui.FillUi$AnchoredWindow: android.view.WindowManager mWm>;

        $r1 = r0.<com.android.server.autofill.ui.FillUi$AnchoredWindow: android.view.View mContentView>;

        interfaceinvoke $r2.<android.view.WindowManager: void removeView(android.view.View)>($r1);

        r0.<com.android.server.autofill.ui.FillUi$AnchoredWindow: boolean mShowing> = 0;

     label02:
        $r8 = r0.<com.android.server.autofill.ui.FillUi$AnchoredWindow: com.android.server.autofill.ui.OverlayControl mOverlayControl>;

        virtualinvoke $r8.<com.android.server.autofill.ui.OverlayControl: void showOverlays()>();

        goto label09;

     label03:
        $r3 := @caughtexception;

        goto label10;

     label04:
        $r5 := @caughtexception;

     label05:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("FillUi", "Exception hiding window ", $r5);

     label06:
        if z0 == 0 goto label02;

     label07:
        $r6 = r0.<com.android.server.autofill.ui.FillUi$AnchoredWindow: com.android.server.autofill.ui.FillUi this$0>;

        $r7 = staticinvoke <com.android.server.autofill.ui.FillUi: com.android.server.autofill.ui.FillUi$Callback access$200(com.android.server.autofill.ui.FillUi)>($r6);

        interfaceinvoke $r7.<com.android.server.autofill.ui.FillUi$Callback: void onDestroy()>();

     label08:
        goto label02;

     label09:
        return;

     label10:
        $r4 = r0.<com.android.server.autofill.ui.FillUi$AnchoredWindow: com.android.server.autofill.ui.OverlayControl mOverlayControl>;

        virtualinvoke $r4.<com.android.server.autofill.ui.OverlayControl: void showOverlays()>();

        throw $r3;

        catch java.lang.IllegalStateException from label01 to label02 with label04;
        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label05 to label06 with label03;
        catch java.lang.Throwable from label07 to label08 with label03;
    }

    public void show(android.view.WindowManager$LayoutParams)
    {
        com.android.server.autofill.ui.FillUi$AnchoredWindow r0;
        android.view.WindowManager$LayoutParams r1;
        boolean $z0, $z1, $z2, $z3;
        android.view.View $r3, $r5, $r8;
        android.view.WindowManager $r4, $r9;
        android.content.Context $r6;
        java.lang.String $r7, $r15, $r17, $r26, $r31;
        com.android.server.autofill.ui.OverlayControl $r10;
        java.lang.StringBuilder $r11, $r21, $r28;
        android.view.WindowManager$BadTokenException $r18;
        com.android.server.autofill.ui.FillUi $r19, $r32;
        com.android.server.autofill.ui.FillUi$Callback $r20, $r33;
        android.os.IBinder $r23;
        java.lang.Throwable $r27;

        r0 := @this: com.android.server.autofill.ui.FillUi$AnchoredWindow;

        r1 := @parameter0: android.view.WindowManager$LayoutParams;

        r0.<com.android.server.autofill.ui.FillUi$AnchoredWindow: android.view.WindowManager$LayoutParams mShowParams> = r1;

        $z0 = <com.android.server.autofill.Helper: boolean sVerbose>;

        if $z0 == 0 goto label1;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("show(): showing=");

        $z2 = r0.<com.android.server.autofill.ui.FillUi$AnchoredWindow: boolean mShowing>;

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", params=");

        $r15 = staticinvoke <com.android.server.autofill.Helper: java.lang.String paramsToString(android.view.WindowManager$LayoutParams)>(r1);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("FillUi", $r17);

     label1:
        r1.<android.view.WindowManager$LayoutParams: java.lang.String packageName> = "android";

        virtualinvoke r1.<android.view.WindowManager$LayoutParams: void setTitle(java.lang.CharSequence)>("Autofill UI");

        $z1 = r0.<com.android.server.autofill.ui.FillUi$AnchoredWindow: boolean mShowing>;

        if $z1 != 0 goto label3;

        $r5 = r0.<com.android.server.autofill.ui.FillUi$AnchoredWindow: android.view.View mContentView>;

        $r6 = virtualinvoke $r5.<android.view.View: android.content.Context getContext()>();

        $r7 = virtualinvoke $r6.<android.content.Context: java.lang.String getString(int)>(17039711);

        r1.<android.view.WindowManager$LayoutParams: java.lang.CharSequence accessibilityTitle> = $r7;

        $r9 = r0.<com.android.server.autofill.ui.FillUi$AnchoredWindow: android.view.WindowManager mWm>;

        $r8 = r0.<com.android.server.autofill.ui.FillUi$AnchoredWindow: android.view.View mContentView>;

        interfaceinvoke $r9.<android.view.WindowManager: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>($r8, r1);

        $r10 = r0.<com.android.server.autofill.ui.FillUi$AnchoredWindow: com.android.server.autofill.ui.OverlayControl mOverlayControl>;

        virtualinvoke $r10.<com.android.server.autofill.ui.OverlayControl: void hideOverlays()>();

        r0.<com.android.server.autofill.ui.FillUi$AnchoredWindow: boolean mShowing> = 1;

     label2:
        goto label8;

     label3:
        $r4 = r0.<com.android.server.autofill.ui.FillUi$AnchoredWindow: android.view.WindowManager mWm>;

        $r3 = r0.<com.android.server.autofill.ui.FillUi$AnchoredWindow: android.view.View mContentView>;

        interfaceinvoke $r4.<android.view.WindowManager: void updateViewLayout(android.view.View,android.view.ViewGroup$LayoutParams)>($r3, r1);

     label4:
        goto label8;

     label5:
        $r27 := @caughtexception;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception showing window ");

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r31 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("FillUi", $r31, $r27);

        $r32 = r0.<com.android.server.autofill.ui.FillUi$AnchoredWindow: com.android.server.autofill.ui.FillUi this$0>;

        $r33 = staticinvoke <com.android.server.autofill.ui.FillUi: com.android.server.autofill.ui.FillUi$Callback access$200(com.android.server.autofill.ui.FillUi)>($r32);

        interfaceinvoke $r33.<com.android.server.autofill.ui.FillUi$Callback: void onDestroy()>();

        goto label8;

     label6:
        $r18 := @caughtexception;

        $z3 = <com.android.server.autofill.Helper: boolean sDebug>;

        if $z3 == 0 goto label7;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Filed with with token ");

        $r23 = r1.<android.view.WindowManager$LayoutParams: android.os.IBinder token>;

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r23);

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" gone.");

        $r26 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("FillUi", $r26);

     label7:
        $r19 = r0.<com.android.server.autofill.ui.FillUi$AnchoredWindow: com.android.server.autofill.ui.FillUi this$0>;

        $r20 = staticinvoke <com.android.server.autofill.ui.FillUi: com.android.server.autofill.ui.FillUi$Callback access$200(com.android.server.autofill.ui.FillUi)>($r19);

        interfaceinvoke $r20.<com.android.server.autofill.ui.FillUi$Callback: void onDestroy()>();

     label8:
        return;

        catch android.view.WindowManager$BadTokenException from label1 to label2 with label6;
        catch java.lang.IllegalStateException from label1 to label2 with label5;
        catch android.view.WindowManager$BadTokenException from label3 to label4 with label6;
        catch java.lang.IllegalStateException from label3 to label4 with label5;
    }
}
