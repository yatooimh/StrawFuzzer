public class com.android.server.backup.AccountSyncSettingsBackupHelper extends java.lang.Object implements android.app.backup.BackupHelper
{
    private static final boolean DEBUG;
    private static final java.lang.String JSON_FORMAT_ENCODING;
    private static final java.lang.String JSON_FORMAT_HEADER_KEY;
    private static final int JSON_FORMAT_VERSION;
    private static final java.lang.String KEY_ACCOUNTS;
    private static final java.lang.String KEY_ACCOUNT_AUTHORITIES;
    private static final java.lang.String KEY_ACCOUNT_NAME;
    private static final java.lang.String KEY_ACCOUNT_TYPE;
    private static final java.lang.String KEY_AUTHORITY_NAME;
    private static final java.lang.String KEY_AUTHORITY_SYNC_ENABLED;
    private static final java.lang.String KEY_AUTHORITY_SYNC_STATE;
    private static final java.lang.String KEY_MASTER_SYNC_ENABLED;
    private static final java.lang.String KEY_VERSION;
    private static final int MD5_BYTE_SIZE;
    private static final java.lang.String STASH_FILE;
    private static final int STATE_VERSION;
    private static final int SYNC_REQUEST_LATCH_TIMEOUT_SECONDS;
    private static final java.lang.String TAG;
    private android.accounts.AccountManager mAccountManager;
    private android.content.Context mContext;
    private final int mUserId;

    public void <init>(android.content.Context, int)
    {
        com.android.server.backup.AccountSyncSettingsBackupHelper r0;
        android.content.Context r1;
        int i0;
        android.accounts.AccountManager $r2;

        r0 := @this: com.android.server.backup.AccountSyncSettingsBackupHelper;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.backup.AccountSyncSettingsBackupHelper: android.content.Context mContext> = r1;

        $r2 = staticinvoke <android.accounts.AccountManager: android.accounts.AccountManager get(android.content.Context)>(r1);

        r0.<com.android.server.backup.AccountSyncSettingsBackupHelper: android.accounts.AccountManager mAccountManager> = $r2;

        r0.<com.android.server.backup.AccountSyncSettingsBackupHelper: int mUserId> = i0;

        return;
    }

    public static void accountAdded(android.content.Context, int)
    {
        android.content.Context r0;
        int i0;
        com.android.server.backup.AccountSyncSettingsBackupHelper $r1;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        $r1 = new com.android.server.backup.AccountSyncSettingsBackupHelper;

        specialinvoke $r1.<com.android.server.backup.AccountSyncSettingsBackupHelper: void <init>(android.content.Context,int)>(r0, i0);

        specialinvoke $r1.<com.android.server.backup.AccountSyncSettingsBackupHelper: void accountAddedInternal(int)>(i0);

        return;
    }

    private void accountAddedInternal(int)
    {
        com.android.server.backup.AccountSyncSettingsBackupHelper r0;
        int i0;
        java.io.File $r1;
        java.lang.Throwable $r2, $r3, $r4, $r5, $r6;
        java.io.FileInputStream r7;
        java.io.DataInputStream r8;
        java.lang.String r9;
        org.json.JSONArray r10;

        r0 := @this: com.android.server.backup.AccountSyncSettingsBackupHelper;

        i0 := @parameter0: int;

     label01:
        r7 = new java.io.FileInputStream;

        $r1 = staticinvoke <com.android.server.backup.AccountSyncSettingsBackupHelper: java.io.File getStashFile(int)>(i0);

        specialinvoke r7.<java.io.FileInputStream: void <init>(java.io.File)>($r1);

     label02:
        r8 = new java.io.DataInputStream;

        specialinvoke r8.<java.io.DataInputStream: void <init>(java.io.InputStream)>(r7);

        r9 = virtualinvoke r8.<java.io.DataInputStream: java.lang.String readUTF()>();

     label03:
        virtualinvoke r7.<java.io.FileInputStream: void close()>();

     label04:
        r10 = new org.json.JSONArray;

        specialinvoke r10.<org.json.JSONArray: void <init>(java.lang.String)>(r9);

        specialinvoke r0.<com.android.server.backup.AccountSyncSettingsBackupHelper: void restoreFromJsonArray(org.json.JSONArray,int)>(r10, i0);

     label05:
        goto label07;

     label06:
        $r4 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("AccountSyncSettingsBackupHelper", "there was an error with the stashed sync settings", $r4);

     label07:
        return;

     label08:
        $r2 := @caughtexception;

     label09:
        virtualinvoke r7.<java.io.FileInputStream: void close()>();

     label10:
        goto label13;

     label11:
        $r3 := @caughtexception;

     label12:
        virtualinvoke $r2.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r3);

     label13:
        throw $r2;

     label14:
        $r6 := @caughtexception;

        return;

     label15:
        $r5 := @caughtexception;

        return;

        catch java.io.FileNotFoundException from label01 to label02 with label15;
        catch java.io.IOException from label01 to label02 with label14;
        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.io.FileNotFoundException from label03 to label04 with label15;
        catch java.io.IOException from label03 to label04 with label14;
        catch org.json.JSONException from label04 to label05 with label06;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.io.FileNotFoundException from label12 to label13 with label15;
        catch java.io.IOException from label12 to label13 with label14;
        catch java.io.FileNotFoundException from label13 to label14 with label15;
        catch java.io.IOException from label13 to label14 with label14;
    }

    private byte[] generateMd5Checksum(byte[]) throws java.security.NoSuchAlgorithmException
    {
        com.android.server.backup.AccountSyncSettingsBackupHelper r0;
        byte[] r1, $r3;
        java.security.MessageDigest $r2;

        r0 := @this: com.android.server.backup.AccountSyncSettingsBackupHelper;

        r1 := @parameter0: byte[];

        if r1 != null goto label1;

        return null;

     label1:
        $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("MD5");

        $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>(r1);

        return $r3;
    }

    private java.util.Set getAccounts(int)
    {
        com.android.server.backup.AccountSyncSettingsBackupHelper r0;
        android.accounts.Account[] r1;
        int i0, i1, i2;
        android.accounts.AccountManager $r3;
        java.util.HashSet $r4;
        android.accounts.Account $r5;

        r0 := @this: com.android.server.backup.AccountSyncSettingsBackupHelper;

        i1 := @parameter0: int;

        $r3 = r0.<com.android.server.backup.AccountSyncSettingsBackupHelper: android.accounts.AccountManager mAccountManager>;

        r1 = virtualinvoke $r3.<android.accounts.AccountManager: android.accounts.Account[] getAccountsAsUser(int)>(i1);

        $r4 = new java.util.HashSet;

        specialinvoke $r4.<java.util.HashSet: void <init>()>();

        i0 = lengthof r1;

        i2 = 0;

     label1:
        if i2 >= i0 goto label2;

        $r5 = r1[i2];

        interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>($r5);

        i2 = i2 + 1;

        goto label1;

     label2:
        return $r4;
    }

    private static java.io.File getStashFile(int)
    {
        int i0;
        java.io.File $r0, r1;

        i0 := @parameter0: int;

        if i0 != 0 goto label1;

        r1 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        goto label2;

     label1:
        r1 = staticinvoke <android.os.Environment: java.io.File getDataSystemCeDirectory(int)>(i0);

     label2:
        $r0 = new java.io.File;

        specialinvoke $r0.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, "/backup/unadded_account_syncsettings.json");

        return $r0;
    }

    private byte[] readOldMd5Checksum(android.os.ParcelFileDescriptor) throws java.io.IOException
    {
        com.android.server.backup.AccountSyncSettingsBackupHelper r0;
        java.io.DataInputStream $r1;
        java.io.FileInputStream $r2;
        java.io.FileDescriptor $r3;
        java.lang.String $r9;
        byte $b1;
        java.lang.Throwable $r10;
        android.os.ParcelFileDescriptor r11;
        byte[] r13;
        int i2, i3;
        java.lang.StringBuilder r14;

        r0 := @this: com.android.server.backup.AccountSyncSettingsBackupHelper;

        r11 := @parameter0: android.os.ParcelFileDescriptor;

        $r1 = new java.io.DataInputStream;

        $r2 = new java.io.FileInputStream;

        $r3 = virtualinvoke r11.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        specialinvoke $r2.<java.io.FileInputStream: void <init>(java.io.FileDescriptor)>($r3);

        specialinvoke $r1.<java.io.DataInputStream: void <init>(java.io.InputStream)>($r2);

        r13 = newarray (byte)[16];

     label01:
        i2 = virtualinvoke $r1.<java.io.DataInputStream: int readInt()>();

     label02:
        if i2 > 1 goto label07;

        i3 = 0;

     label03:
        if i3 >= 16 goto label06;

     label04:
        $b1 = virtualinvoke $r1.<java.io.DataInputStream: byte readByte()>();

        r13[i3] = $b1;

     label05:
        i3 = i3 + 1;

        goto label03;

     label06:
        goto label08;

     label07:
        r14 = new java.lang.StringBuilder;

        specialinvoke r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Backup state version is: ");

        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (support only up to version ");

        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(1);

        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r9 = virtualinvoke r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("AccountSyncSettingsBackupHelper", $r9);

     label08:
        goto label10;

     label09:
        $r10 := @caughtexception;

     label10:
        return r13;

        catch java.io.EOFException from label01 to label02 with label09;
        catch java.io.EOFException from label04 to label05 with label09;
        catch java.io.EOFException from label07 to label08 with label09;
    }

    private void restoreExistingAccountSyncSettingsFromJSON(org.json.JSONObject, int) throws org.json.JSONException
    {
        com.android.server.backup.AccountSyncSettingsBackupHelper r0;
        int i0, $i1, i2, i3;
        org.json.JSONArray r1;
        org.json.JSONObject r3, r8;
        boolean z0;
        android.accounts.Account $r4;
        java.lang.String $r5, $r6, r9;
        java.lang.Object $r7;
        byte b4;

        r0 := @this: com.android.server.backup.AccountSyncSettingsBackupHelper;

        r8 := @parameter0: org.json.JSONObject;

        i0 := @parameter1: int;

        r1 = virtualinvoke r8.<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>("authorities");

        $r4 = new android.accounts.Account;

        $r5 = virtualinvoke r8.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("name");

        $r6 = virtualinvoke r8.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("type");

        specialinvoke $r4.<android.accounts.Account: void <init>(java.lang.String,java.lang.String)>($r5, $r6);

        i2 = 0;

     label1:
        $i1 = virtualinvoke r1.<org.json.JSONArray: int length()>();

        if i2 >= $i1 goto label5;

        $r7 = virtualinvoke r1.<org.json.JSONArray: java.lang.Object get(int)>(i2);

        r3 = (org.json.JSONObject) $r7;

        r9 = virtualinvoke r3.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("name");

        z0 = virtualinvoke r3.<org.json.JSONObject: boolean getBoolean(java.lang.String)>("syncEnabled");

        i3 = virtualinvoke r3.<org.json.JSONObject: int getInt(java.lang.String)>("syncState");

        staticinvoke <android.content.ContentResolver: void setSyncAutomaticallyAsUser(android.accounts.Account,java.lang.String,boolean,int)>($r4, r9, z0, i0);

        if z0 != 0 goto label4;

        if i3 != 0 goto label2;

        b4 = 0;

        goto label3;

     label2:
        b4 = 2;

     label3:
        staticinvoke <android.content.ContentResolver: void setIsSyncableAsUser(android.accounts.Account,java.lang.String,int,int)>($r4, r9, b4, i0);

     label4:
        i2 = i2 + 1;

        goto label1;

     label5:
        return;
    }

    private void restoreFromJsonArray(org.json.JSONArray, int) throws org.json.JSONException
    {
        com.android.server.backup.AccountSyncSettingsBackupHelper r0;
        int i0, $i1, $i2, i4;
        org.json.JSONObject r1;
        java.lang.String r2, r15, r18;
        android.accounts.Account r3;
        org.json.JSONArray $r4, r12;
        boolean $z0, $z2;
        java.io.File $r5, r23;
        java.lang.Object $r6;
        java.lang.Throwable $r8, $r9, $r10, $r11;
        java.util.Set r13;
        java.io.FileOutputStream r17;
        java.io.DataOutputStream r19;

        r0 := @this: com.android.server.backup.AccountSyncSettingsBackupHelper;

        r12 := @parameter0: org.json.JSONArray;

        i0 := @parameter1: int;

        r13 = specialinvoke r0.<com.android.server.backup.AccountSyncSettingsBackupHelper: java.util.Set getAccounts(int)>(i0);

        $r4 = new org.json.JSONArray;

        specialinvoke $r4.<org.json.JSONArray: void <init>()>();

        i4 = 0;

     label01:
        $i1 = virtualinvoke r12.<org.json.JSONArray: int length()>();

        if i4 >= $i1 goto label07;

        $r6 = virtualinvoke r12.<org.json.JSONArray: java.lang.Object get(int)>(i4);

        r1 = (org.json.JSONObject) $r6;

        r15 = virtualinvoke r1.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("name");

        r2 = virtualinvoke r1.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("type");

     label02:
        r3 = new android.accounts.Account;

        specialinvoke r3.<android.accounts.Account: void <init>(java.lang.String,java.lang.String)>(r15, r2);

     label03:
        $z2 = interfaceinvoke r13.<java.util.Set: boolean contains(java.lang.Object)>(r3);

        if $z2 == 0 goto label04;

        specialinvoke r0.<com.android.server.backup.AccountSyncSettingsBackupHelper: void restoreExistingAccountSyncSettingsFromJSON(org.json.JSONObject,int)>(r1, i0);

        goto label06;

     label04:
        virtualinvoke $r4.<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>(r1);

        goto label06;

     label05:
        $r8 := @caughtexception;

     label06:
        i4 = i4 + 1;

        goto label01;

     label07:
        $i2 = virtualinvoke $r4.<org.json.JSONArray: int length()>();

        if $i2 <= 0 goto label20;

     label08:
        r17 = new java.io.FileOutputStream;

        $r5 = staticinvoke <com.android.server.backup.AccountSyncSettingsBackupHelper: java.io.File getStashFile(int)>(i0);

        specialinvoke r17.<java.io.FileOutputStream: void <init>(java.io.File)>($r5);

     label09:
        r18 = virtualinvoke $r4.<org.json.JSONArray: java.lang.String toString()>();

        r19 = new java.io.DataOutputStream;

        specialinvoke r19.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>(r17);

        virtualinvoke r19.<java.io.DataOutputStream: void writeUTF(java.lang.String)>(r18);

     label10:
        virtualinvoke r17.<java.io.FileOutputStream: void close()>();

     label11:
        goto label19;

     label12:
        $r10 := @caughtexception;

     label13:
        virtualinvoke r17.<java.io.FileOutputStream: void close()>();

     label14:
        goto label17;

     label15:
        $r11 := @caughtexception;

     label16:
        virtualinvoke $r10.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r11);

     label17:
        throw $r10;

     label18:
        $r9 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("AccountSyncSettingsBackupHelper", "unable to write the sync settings to the stash file", $r9);

     label19:
        goto label21;

     label20:
        r23 = staticinvoke <com.android.server.backup.AccountSyncSettingsBackupHelper: java.io.File getStashFile(int)>(i0);

        $z0 = virtualinvoke r23.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label21;

        virtualinvoke r23.<java.io.File: boolean delete()>();

     label21:
        return;

        catch java.lang.IllegalArgumentException from label02 to label03 with label05;
        catch java.io.IOException from label08 to label09 with label18;
        catch java.lang.Throwable from label09 to label10 with label12;
        catch java.io.IOException from label10 to label11 with label18;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.io.IOException from label16 to label17 with label18;
        catch java.io.IOException from label17 to label18 with label18;
    }

    private org.json.JSONObject serializeAccountSyncSettingsToJSON(int) throws org.json.JSONException
    {
        com.android.server.backup.AccountSyncSettingsBackupHelper r0;
        int i0, i1, i2, i4, i5, i6;
        java.lang.String r6, $r15, $r18, $r20, $r31, $r32, $r34, $r37;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        android.accounts.AccountManager $r8;
        java.util.HashMap $r9;
        org.json.JSONObject $r10, $r17, $r26;
        org.json.JSONArray $r13, $r22;
        java.lang.Object $r16, $r25, $r33;
        java.util.List $r35, r43;
        java.util.ArrayList $r36;
        android.accounts.Account[] r39, r45;
        android.content.SyncAdapterType[] r40;
        android.content.SyncAdapterType r41;
        android.accounts.Account r42;
        java.util.Iterator r47;

        r0 := @this: com.android.server.backup.AccountSyncSettingsBackupHelper;

        i0 := @parameter0: int;

        $r8 = r0.<com.android.server.backup.AccountSyncSettingsBackupHelper: android.accounts.AccountManager mAccountManager>;

        r39 = virtualinvoke $r8.<android.accounts.AccountManager: android.accounts.Account[] getAccountsAsUser(int)>(i0);

        r40 = staticinvoke <android.content.ContentResolver: android.content.SyncAdapterType[] getSyncAdapterTypesAsUser(int)>(i0);

        $r9 = new java.util.HashMap;

        specialinvoke $r9.<java.util.HashMap: void <init>()>();

        i2 = lengthof r40;

        i4 = 0;

     label01:
        if i4 >= i2 goto label05;

        r41 = r40[i4];

        $z4 = virtualinvoke r41.<android.content.SyncAdapterType: boolean isUserVisible()>();

        if $z4 != 0 goto label02;

        goto label04;

     label02:
        $r31 = r41.<android.content.SyncAdapterType: java.lang.String accountType>;

        $z5 = virtualinvoke $r9.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r31);

        if $z5 != 0 goto label03;

        $r37 = r41.<android.content.SyncAdapterType: java.lang.String accountType>;

        $r36 = new java.util.ArrayList;

        specialinvoke $r36.<java.util.ArrayList: void <init>()>();

        virtualinvoke $r9.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r37, $r36);

     label03:
        $r32 = r41.<android.content.SyncAdapterType: java.lang.String accountType>;

        $r33 = virtualinvoke $r9.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r32);

        $r35 = (java.util.List) $r33;

        $r34 = r41.<android.content.SyncAdapterType: java.lang.String authority>;

        interfaceinvoke $r35.<java.util.List: boolean add(java.lang.Object)>($r34);

     label04:
        i4 = i4 + 1;

        goto label01;

     label05:
        $r10 = new org.json.JSONObject;

        specialinvoke $r10.<org.json.JSONObject: void <init>()>();

        virtualinvoke $r10.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>("version", 1);

        $z1 = staticinvoke <android.content.ContentResolver: boolean getMasterSyncAutomaticallyAsUser(int)>(i0);

        virtualinvoke $r10.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,boolean)>("masterSyncEnabled", $z1);

        $r13 = new org.json.JSONArray;

        specialinvoke $r13.<org.json.JSONArray: void <init>()>();

        i5 = lengthof r39;

        i6 = 0;

     label06:
        if i6 >= i5 goto label12;

        r42 = r39[i6];

        $r15 = r42.<android.accounts.Account: java.lang.String type>;

        $r16 = virtualinvoke $r9.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r15);

        r43 = (java.util.List) $r16;

        if r43 == null goto label10;

        $z2 = interfaceinvoke r43.<java.util.List: boolean isEmpty()>();

        if $z2 == 0 goto label07;

        r45 = r39;

        goto label11;

     label07:
        $r17 = new org.json.JSONObject;

        specialinvoke $r17.<org.json.JSONObject: void <init>()>();

        $r18 = r42.<android.accounts.Account: java.lang.String name>;

        virtualinvoke $r17.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("name", $r18);

        $r20 = r42.<android.accounts.Account: java.lang.String type>;

        virtualinvoke $r17.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("type", $r20);

        $r22 = new org.json.JSONArray;

        specialinvoke $r22.<org.json.JSONArray: void <init>()>();

        r47 = interfaceinvoke r43.<java.util.List: java.util.Iterator iterator()>();

     label08:
        $z3 = interfaceinvoke r47.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label09;

        $r25 = interfaceinvoke r47.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.lang.String) $r25;

        i1 = staticinvoke <android.content.ContentResolver: int getIsSyncableAsUser(android.accounts.Account,java.lang.String,int)>(r42, r6, i0);

        z0 = staticinvoke <android.content.ContentResolver: boolean getSyncAutomaticallyAsUser(android.accounts.Account,java.lang.String,int)>(r42, r6, i0);

        $r26 = new org.json.JSONObject;

        specialinvoke $r26.<org.json.JSONObject: void <init>()>();

        virtualinvoke $r26.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("name", r6);

        virtualinvoke $r26.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>("syncState", i1);

        virtualinvoke $r26.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,boolean)>("syncEnabled", z0);

        virtualinvoke $r22.<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>($r26);

        goto label08;

     label09:
        virtualinvoke $r17.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("authorities", $r22);

        virtualinvoke $r13.<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>($r17);

        r45 = r39;

        goto label11;

     label10:
        r45 = r39;

     label11:
        i6 = i6 + 1;

        r39 = r45;

        goto label06;

     label12:
        virtualinvoke $r10.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("accounts", $r13);

        return $r10;
    }

    private void writeNewMd5Checksum(android.os.ParcelFileDescriptor, byte[]) throws java.io.IOException
    {
        com.android.server.backup.AccountSyncSettingsBackupHelper r0;
        byte[] r1;
        java.io.DataOutputStream $r2;
        java.io.BufferedOutputStream $r3;
        java.io.FileOutputStream $r4;
        java.io.FileDescriptor $r5;
        android.os.ParcelFileDescriptor r6;

        r0 := @this: com.android.server.backup.AccountSyncSettingsBackupHelper;

        r6 := @parameter0: android.os.ParcelFileDescriptor;

        r1 := @parameter1: byte[];

        $r2 = new java.io.DataOutputStream;

        $r3 = new java.io.BufferedOutputStream;

        $r4 = new java.io.FileOutputStream;

        $r5 = virtualinvoke r6.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        specialinvoke $r4.<java.io.FileOutputStream: void <init>(java.io.FileDescriptor)>($r5);

        specialinvoke $r3.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r4);

        specialinvoke $r2.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r3);

        virtualinvoke $r2.<java.io.DataOutputStream: void writeInt(int)>(1);

        virtualinvoke $r2.<java.io.DataOutputStream: void write(byte[])>(r1);

        return;
    }

    public void performBackup(android.os.ParcelFileDescriptor, android.app.backup.BackupDataOutput, android.os.ParcelFileDescriptor)
    {
        com.android.server.backup.AccountSyncSettingsBackupHelper r0;
        android.os.ParcelFileDescriptor r1, r11;
        byte[] r2, r3, r13;
        int i0, $i1;
        org.json.JSONObject $r4;
        java.lang.String $r5, $r10;
        boolean $z0;
        java.lang.Throwable $r6;
        java.lang.StringBuilder $r7;
        android.app.backup.BackupDataOutput r12;

        r0 := @this: com.android.server.backup.AccountSyncSettingsBackupHelper;

        r11 := @parameter0: android.os.ParcelFileDescriptor;

        r12 := @parameter1: android.app.backup.BackupDataOutput;

        r1 := @parameter2: android.os.ParcelFileDescriptor;

     label1:
        $i1 = r0.<com.android.server.backup.AccountSyncSettingsBackupHelper: int mUserId>;

        $r4 = specialinvoke r0.<com.android.server.backup.AccountSyncSettingsBackupHelper: org.json.JSONObject serializeAccountSyncSettingsToJSON(int)>($i1);

        $r5 = virtualinvoke $r4.<org.json.JSONObject: java.lang.String toString()>();

        r2 = virtualinvoke $r5.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        r13 = specialinvoke r0.<com.android.server.backup.AccountSyncSettingsBackupHelper: byte[] readOldMd5Checksum(android.os.ParcelFileDescriptor)>(r11);

        r3 = specialinvoke r0.<com.android.server.backup.AccountSyncSettingsBackupHelper: byte[] generateMd5Checksum(byte[])>(r2);

        $z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r13, r3);

        if $z0 != 0 goto label3;

        i0 = lengthof r2;

        virtualinvoke r12.<android.app.backup.BackupDataOutput: int writeEntityHeader(java.lang.String,int)>("account_data", i0);

        virtualinvoke r12.<android.app.backup.BackupDataOutput: int writeEntityData(byte[],int)>(r2, i0);

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("AccountSyncSettingsBackupHelper", "Backup successful.");

     label2:
        goto label4;

     label3:
        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("AccountSyncSettingsBackupHelper", "Old and new MD5 checksums match. Skipping backup.");

     label4:
        specialinvoke r0.<com.android.server.backup.AccountSyncSettingsBackupHelper: void writeNewMd5Checksum(android.os.ParcelFileDescriptor,byte[])>(r1, r3);

     label5:
        goto label7;

     label6:
        $r6 := @caughtexception;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t backup account sync settings\n");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("AccountSyncSettingsBackupHelper", $r10);

     label7:
        return;

        catch org.json.JSONException from label1 to label2 with label6;
        catch java.io.IOException from label1 to label2 with label6;
        catch java.security.NoSuchAlgorithmException from label1 to label2 with label6;
        catch org.json.JSONException from label3 to label4 with label6;
        catch java.io.IOException from label3 to label4 with label6;
        catch java.security.NoSuchAlgorithmException from label3 to label4 with label6;
        catch org.json.JSONException from label4 to label5 with label6;
        catch java.io.IOException from label4 to label5 with label6;
        catch java.security.NoSuchAlgorithmException from label4 to label5 with label6;
    }

    public void restoreEntity(android.app.backup.BackupDataInputStream)
    {
        com.android.server.backup.AccountSyncSettingsBackupHelper r0;
        boolean z0, $z1;
        int $i0, $i2, $i3, $i4, $i6, $i7;
        java.lang.Throwable $r1, $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r6, r9;
        android.app.backup.BackupDataInputStream r7;
        byte[] r8;
        org.json.JSONObject r10;
        org.json.JSONArray r11;

        r0 := @this: com.android.server.backup.AccountSyncSettingsBackupHelper;

        r7 := @parameter0: android.app.backup.BackupDataInputStream;

        $i0 = virtualinvoke r7.<android.app.backup.BackupDataInputStream: int size()>();

        r8 = newarray (byte)[$i0];

     label01:
        virtualinvoke r7.<android.app.backup.BackupDataInputStream: int read(byte[])>(r8);

        r9 = new java.lang.String;

        specialinvoke r9.<java.lang.String: void <init>(byte[],java.lang.String)>(r8, "UTF-8");

        r10 = new org.json.JSONObject;

        specialinvoke r10.<org.json.JSONObject: void <init>(java.lang.String)>(r9);

        z0 = virtualinvoke r10.<org.json.JSONObject: boolean getBoolean(java.lang.String)>("masterSyncEnabled");

        r11 = virtualinvoke r10.<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>("accounts");

        $i2 = r0.<com.android.server.backup.AccountSyncSettingsBackupHelper: int mUserId>;

        $z1 = staticinvoke <android.content.ContentResolver: boolean getMasterSyncAutomaticallyAsUser(int)>($i2);

        if $z1 == 0 goto label02;

        $i6 = r0.<com.android.server.backup.AccountSyncSettingsBackupHelper: int mUserId>;

        staticinvoke <android.content.ContentResolver: void setMasterSyncAutomaticallyAsUser(boolean,int)>(0, $i6);

     label02:
        $i3 = r0.<com.android.server.backup.AccountSyncSettingsBackupHelper: int mUserId>;

        specialinvoke r0.<com.android.server.backup.AccountSyncSettingsBackupHelper: void restoreFromJsonArray(org.json.JSONArray,int)>(r11, $i3);

     label03:
        $i4 = r0.<com.android.server.backup.AccountSyncSettingsBackupHelper: int mUserId>;

        staticinvoke <android.content.ContentResolver: void setMasterSyncAutomaticallyAsUser(boolean,int)>(z0, $i4);

     label04:
        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("AccountSyncSettingsBackupHelper", "Restore successful.");

     label05:
        goto label10;

     label06:
        $r1 := @caughtexception;

     label07:
        $i7 = r0.<com.android.server.backup.AccountSyncSettingsBackupHelper: int mUserId>;

        staticinvoke <android.content.ContentResolver: void setMasterSyncAutomaticallyAsUser(boolean,int)>(z0, $i7);

     label08:
        throw $r1;

     label09:
        $r2 := @caughtexception;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t restore account sync settings\n");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("AccountSyncSettingsBackupHelper", $r6);

     label10:
        return;

        catch java.io.IOException from label01 to label02 with label09;
        catch org.json.JSONException from label01 to label02 with label09;
        catch java.lang.Throwable from label02 to label03 with label06;
        catch java.io.IOException from label03 to label04 with label09;
        catch org.json.JSONException from label03 to label04 with label09;
        catch java.io.IOException from label04 to label05 with label09;
        catch org.json.JSONException from label04 to label05 with label09;
        catch java.io.IOException from label07 to label08 with label09;
        catch org.json.JSONException from label07 to label08 with label09;
        catch java.io.IOException from label08 to label09 with label09;
        catch org.json.JSONException from label08 to label09 with label09;
    }

    public void writeNewStateDescription(android.os.ParcelFileDescriptor)
    {
        com.android.server.backup.AccountSyncSettingsBackupHelper r0;
        android.os.ParcelFileDescriptor r1;

        r0 := @this: com.android.server.backup.AccountSyncSettingsBackupHelper;

        r1 := @parameter0: android.os.ParcelFileDescriptor;

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.backup.AccountSyncSettingsBackupHelper: java.lang.String TAG> = "AccountSyncSettingsBackupHelper";

        <com.android.server.backup.AccountSyncSettingsBackupHelper: int SYNC_REQUEST_LATCH_TIMEOUT_SECONDS> = 1;

        <com.android.server.backup.AccountSyncSettingsBackupHelper: int STATE_VERSION> = 1;

        <com.android.server.backup.AccountSyncSettingsBackupHelper: java.lang.String STASH_FILE> = "/backup/unadded_account_syncsettings.json";

        <com.android.server.backup.AccountSyncSettingsBackupHelper: int MD5_BYTE_SIZE> = 16;

        <com.android.server.backup.AccountSyncSettingsBackupHelper: java.lang.String KEY_VERSION> = "version";

        <com.android.server.backup.AccountSyncSettingsBackupHelper: java.lang.String KEY_MASTER_SYNC_ENABLED> = "masterSyncEnabled";

        <com.android.server.backup.AccountSyncSettingsBackupHelper: java.lang.String KEY_AUTHORITY_SYNC_STATE> = "syncState";

        <com.android.server.backup.AccountSyncSettingsBackupHelper: java.lang.String KEY_AUTHORITY_SYNC_ENABLED> = "syncEnabled";

        <com.android.server.backup.AccountSyncSettingsBackupHelper: java.lang.String KEY_AUTHORITY_NAME> = "name";

        <com.android.server.backup.AccountSyncSettingsBackupHelper: java.lang.String KEY_ACCOUNT_TYPE> = "type";

        <com.android.server.backup.AccountSyncSettingsBackupHelper: java.lang.String KEY_ACCOUNT_NAME> = "name";

        <com.android.server.backup.AccountSyncSettingsBackupHelper: java.lang.String KEY_ACCOUNT_AUTHORITIES> = "authorities";

        <com.android.server.backup.AccountSyncSettingsBackupHelper: java.lang.String KEY_ACCOUNTS> = "accounts";

        <com.android.server.backup.AccountSyncSettingsBackupHelper: int JSON_FORMAT_VERSION> = 1;

        <com.android.server.backup.AccountSyncSettingsBackupHelper: java.lang.String JSON_FORMAT_HEADER_KEY> = "account_data";

        <com.android.server.backup.AccountSyncSettingsBackupHelper: java.lang.String JSON_FORMAT_ENCODING> = "UTF-8";

        <com.android.server.backup.AccountSyncSettingsBackupHelper: boolean DEBUG> = 0;

        return;
    }
}
