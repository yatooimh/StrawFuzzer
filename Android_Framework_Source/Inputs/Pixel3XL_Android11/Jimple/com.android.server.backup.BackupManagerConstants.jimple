public class com.android.server.backup.BackupManagerConstants extends android.util.KeyValueSettingObserver
{
    public static final java.lang.String BACKUP_FINISHED_NOTIFICATION_RECEIVERS;
    public static final java.lang.String DEFAULT_BACKUP_FINISHED_NOTIFICATION_RECEIVERS;
    public static final long DEFAULT_FULL_BACKUP_INTERVAL_MILLISECONDS;
    public static final int DEFAULT_FULL_BACKUP_REQUIRED_NETWORK_TYPE;
    public static final boolean DEFAULT_FULL_BACKUP_REQUIRE_CHARGING;
    public static final long DEFAULT_KEY_VALUE_BACKUP_FUZZ_MILLISECONDS;
    public static final long DEFAULT_KEY_VALUE_BACKUP_INTERVAL_MILLISECONDS;
    public static final int DEFAULT_KEY_VALUE_BACKUP_REQUIRED_NETWORK_TYPE;
    public static final boolean DEFAULT_KEY_VALUE_BACKUP_REQUIRE_CHARGING;
    public static final java.lang.String FULL_BACKUP_INTERVAL_MILLISECONDS;
    public static final java.lang.String FULL_BACKUP_REQUIRED_NETWORK_TYPE;
    public static final java.lang.String FULL_BACKUP_REQUIRE_CHARGING;
    public static final java.lang.String KEY_VALUE_BACKUP_FUZZ_MILLISECONDS;
    public static final java.lang.String KEY_VALUE_BACKUP_INTERVAL_MILLISECONDS;
    public static final java.lang.String KEY_VALUE_BACKUP_REQUIRED_NETWORK_TYPE;
    public static final java.lang.String KEY_VALUE_BACKUP_REQUIRE_CHARGING;
    private static final java.lang.String SETTING;
    private static final java.lang.String TAG;
    private java.lang.String[] mBackupFinishedNotificationReceivers;
    private long mFullBackupIntervalMilliseconds;
    private boolean mFullBackupRequireCharging;
    private int mFullBackupRequiredNetworkType;
    private long mKeyValueBackupFuzzMilliseconds;
    private long mKeyValueBackupIntervalMilliseconds;
    private boolean mKeyValueBackupRequireCharging;
    private int mKeyValueBackupRequiredNetworkType;

    public void <init>(android.os.Handler, android.content.ContentResolver)
    {
        com.android.server.backup.BackupManagerConstants r0;
        android.os.Handler r1;
        android.content.ContentResolver r2;
        android.net.Uri $r3;

        r0 := @this: com.android.server.backup.BackupManagerConstants;

        r1 := @parameter0: android.os.Handler;

        r2 := @parameter1: android.content.ContentResolver;

        $r3 = staticinvoke <android.provider.Settings$Secure: android.net.Uri getUriFor(java.lang.String)>("backup_manager_constants");

        specialinvoke r0.<android.util.KeyValueSettingObserver: void <init>(android.os.Handler,android.content.ContentResolver,android.net.Uri)>(r1, r2, $r3);

        return;
    }

    public java.lang.String[] getBackupFinishedNotificationReceivers()
    {
        com.android.server.backup.BackupManagerConstants r0;
        java.lang.String[] $r2, r8;
        java.lang.String $r3, $r5;
        java.lang.Throwable $r6;
        java.lang.StringBuilder r7;

        r0 := @this: com.android.server.backup.BackupManagerConstants;

        entermonitor r0;

     label1:
        r7 = new java.lang.StringBuilder;

        specialinvoke r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getBackupFinishedNotificationReceivers(...) returns ");

        $r2 = r0.<com.android.server.backup.BackupManagerConstants: java.lang.String[] mBackupFinishedNotificationReceivers>;

        $r3 = staticinvoke <android.text.TextUtils: java.lang.String join(java.lang.CharSequence,java.lang.Object[])>(", ", $r2);

        virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("BackupManagerConstants", $r5);

        r8 = r0.<com.android.server.backup.BackupManagerConstants: java.lang.String[] mBackupFinishedNotificationReceivers>;

     label2:
        exitmonitor r0;

        return r8;

     label3:
        $r6 := @caughtexception;

        exitmonitor r0;

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public long getFullBackupIntervalMilliseconds()
    {
        com.android.server.backup.BackupManagerConstants r0;
        long l0, $l1;
        java.lang.String $r3;
        java.lang.Throwable $r4;
        java.lang.StringBuilder r5;

        r0 := @this: com.android.server.backup.BackupManagerConstants;

        entermonitor r0;

     label1:
        r5 = new java.lang.StringBuilder;

        specialinvoke r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getFullBackupIntervalMilliseconds(...) returns ");

        $l1 = r0.<com.android.server.backup.BackupManagerConstants: long mFullBackupIntervalMilliseconds>;

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r3 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("BackupManagerConstants", $r3);

        l0 = r0.<com.android.server.backup.BackupManagerConstants: long mFullBackupIntervalMilliseconds>;

     label2:
        exitmonitor r0;

        return l0;

     label3:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public boolean getFullBackupRequireCharging()
    {
        com.android.server.backup.BackupManagerConstants r0;
        boolean z0, $z1;
        java.lang.String $r3;
        java.lang.Throwable $r4;
        java.lang.StringBuilder r5;

        r0 := @this: com.android.server.backup.BackupManagerConstants;

        entermonitor r0;

     label1:
        r5 = new java.lang.StringBuilder;

        specialinvoke r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getFullBackupRequireCharging(...) returns ");

        $z1 = r0.<com.android.server.backup.BackupManagerConstants: boolean mFullBackupRequireCharging>;

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r3 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("BackupManagerConstants", $r3);

        z0 = r0.<com.android.server.backup.BackupManagerConstants: boolean mFullBackupRequireCharging>;

     label2:
        exitmonitor r0;

        return z0;

     label3:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public int getFullBackupRequiredNetworkType()
    {
        com.android.server.backup.BackupManagerConstants r0;
        int i0, $i1;
        java.lang.String $r3;
        java.lang.Throwable $r4;
        java.lang.StringBuilder r5;

        r0 := @this: com.android.server.backup.BackupManagerConstants;

        entermonitor r0;

     label1:
        r5 = new java.lang.StringBuilder;

        specialinvoke r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getFullBackupRequiredNetworkType(...) returns ");

        $i1 = r0.<com.android.server.backup.BackupManagerConstants: int mFullBackupRequiredNetworkType>;

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r3 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("BackupManagerConstants", $r3);

        i0 = r0.<com.android.server.backup.BackupManagerConstants: int mFullBackupRequiredNetworkType>;

     label2:
        exitmonitor r0;

        return i0;

     label3:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public long getKeyValueBackupFuzzMilliseconds()
    {
        com.android.server.backup.BackupManagerConstants r0;
        long l0, $l1;
        java.lang.String $r3;
        java.lang.Throwable $r4;
        java.lang.StringBuilder r5;

        r0 := @this: com.android.server.backup.BackupManagerConstants;

        entermonitor r0;

     label1:
        r5 = new java.lang.StringBuilder;

        specialinvoke r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getKeyValueBackupFuzzMilliseconds(...) returns ");

        $l1 = r0.<com.android.server.backup.BackupManagerConstants: long mKeyValueBackupFuzzMilliseconds>;

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r3 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("BackupManagerConstants", $r3);

        l0 = r0.<com.android.server.backup.BackupManagerConstants: long mKeyValueBackupFuzzMilliseconds>;

     label2:
        exitmonitor r0;

        return l0;

     label3:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public long getKeyValueBackupIntervalMilliseconds()
    {
        com.android.server.backup.BackupManagerConstants r0;
        long l0, $l1;
        java.lang.String $r3;
        java.lang.Throwable $r4;
        java.lang.StringBuilder r5;

        r0 := @this: com.android.server.backup.BackupManagerConstants;

        entermonitor r0;

     label1:
        r5 = new java.lang.StringBuilder;

        specialinvoke r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getKeyValueBackupIntervalMilliseconds(...) returns ");

        $l1 = r0.<com.android.server.backup.BackupManagerConstants: long mKeyValueBackupIntervalMilliseconds>;

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r3 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("BackupManagerConstants", $r3);

        l0 = r0.<com.android.server.backup.BackupManagerConstants: long mKeyValueBackupIntervalMilliseconds>;

     label2:
        exitmonitor r0;

        return l0;

     label3:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public boolean getKeyValueBackupRequireCharging()
    {
        com.android.server.backup.BackupManagerConstants r0;
        boolean z0, $z1;
        java.lang.String $r3;
        java.lang.Throwable $r4;
        java.lang.StringBuilder r5;

        r0 := @this: com.android.server.backup.BackupManagerConstants;

        entermonitor r0;

     label1:
        r5 = new java.lang.StringBuilder;

        specialinvoke r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getKeyValueBackupRequireCharging(...) returns ");

        $z1 = r0.<com.android.server.backup.BackupManagerConstants: boolean mKeyValueBackupRequireCharging>;

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r3 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("BackupManagerConstants", $r3);

        z0 = r0.<com.android.server.backup.BackupManagerConstants: boolean mKeyValueBackupRequireCharging>;

     label2:
        exitmonitor r0;

        return z0;

     label3:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public int getKeyValueBackupRequiredNetworkType()
    {
        com.android.server.backup.BackupManagerConstants r0;
        int i0, $i1;
        java.lang.String $r3;
        java.lang.Throwable $r4;
        java.lang.StringBuilder r5;

        r0 := @this: com.android.server.backup.BackupManagerConstants;

        entermonitor r0;

     label1:
        r5 = new java.lang.StringBuilder;

        specialinvoke r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getKeyValueBackupRequiredNetworkType(...) returns ");

        $i1 = r0.<com.android.server.backup.BackupManagerConstants: int mKeyValueBackupRequiredNetworkType>;

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r3 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("BackupManagerConstants", $r3);

        i0 = r0.<com.android.server.backup.BackupManagerConstants: int mKeyValueBackupRequiredNetworkType>;

     label2:
        exitmonitor r0;

        return i0;

     label3:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public java.lang.String getSettingValue(android.content.ContentResolver)
    {
        com.android.server.backup.BackupManagerConstants r0;
        android.content.ContentResolver r1;
        java.lang.String $r2;

        r0 := @this: com.android.server.backup.BackupManagerConstants;

        r1 := @parameter0: android.content.ContentResolver;

        $r2 = staticinvoke <android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>(r1, "backup_manager_constants");

        return $r2;
    }

    public void update(android.util.KeyValueListParser)
    {
        com.android.server.backup.BackupManagerConstants r0;
        long $l0, $l1, $l3;
        boolean $z0, $z1, $z2;
        int $i2, $i4;
        java.lang.String[] $r1, $r2;
        java.lang.Throwable $r3;
        android.util.KeyValueListParser r4;
        java.lang.String r5;

        r0 := @this: com.android.server.backup.BackupManagerConstants;

        r4 := @parameter0: android.util.KeyValueListParser;

        entermonitor r0;

     label1:
        $l0 = virtualinvoke r4.<android.util.KeyValueListParser: long getLong(java.lang.String,long)>("key_value_backup_interval_milliseconds", 14400000L);

        r0.<com.android.server.backup.BackupManagerConstants: long mKeyValueBackupIntervalMilliseconds> = $l0;

        $l1 = virtualinvoke r4.<android.util.KeyValueListParser: long getLong(java.lang.String,long)>("key_value_backup_fuzz_milliseconds", 600000L);

        r0.<com.android.server.backup.BackupManagerConstants: long mKeyValueBackupFuzzMilliseconds> = $l1;

        $z0 = virtualinvoke r4.<android.util.KeyValueListParser: boolean getBoolean(java.lang.String,boolean)>("key_value_backup_require_charging", 1);

        r0.<com.android.server.backup.BackupManagerConstants: boolean mKeyValueBackupRequireCharging> = $z0;

        $i2 = virtualinvoke r4.<android.util.KeyValueListParser: int getInt(java.lang.String,int)>("key_value_backup_required_network_type", 1);

        r0.<com.android.server.backup.BackupManagerConstants: int mKeyValueBackupRequiredNetworkType> = $i2;

        $l3 = virtualinvoke r4.<android.util.KeyValueListParser: long getLong(java.lang.String,long)>("full_backup_interval_milliseconds", 86400000L);

        r0.<com.android.server.backup.BackupManagerConstants: long mFullBackupIntervalMilliseconds> = $l3;

        $z1 = virtualinvoke r4.<android.util.KeyValueListParser: boolean getBoolean(java.lang.String,boolean)>("full_backup_require_charging", 1);

        r0.<com.android.server.backup.BackupManagerConstants: boolean mFullBackupRequireCharging> = $z1;

        $i4 = virtualinvoke r4.<android.util.KeyValueListParser: int getInt(java.lang.String,int)>("full_backup_required_network_type", 2);

        r0.<com.android.server.backup.BackupManagerConstants: int mFullBackupRequiredNetworkType> = $i4;

        r5 = virtualinvoke r4.<android.util.KeyValueListParser: java.lang.String getString(java.lang.String,java.lang.String)>("backup_finished_notification_receivers", "");

        $z2 = virtualinvoke r5.<java.lang.String: boolean isEmpty()>();

        if $z2 == 0 goto label3;

        $r2 = newarray (java.lang.String)[0];

        r0.<com.android.server.backup.BackupManagerConstants: java.lang.String[] mBackupFinishedNotificationReceivers> = $r2;

     label2:
        goto label4;

     label3:
        $r1 = virtualinvoke r5.<java.lang.String: java.lang.String[] split(java.lang.String)>(":");

        r0.<com.android.server.backup.BackupManagerConstants: java.lang.String[] mBackupFinishedNotificationReceivers> = $r1;

     label4:
        exitmonitor r0;

        return;

     label5:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public static void <clinit>()
    {
        <com.android.server.backup.BackupManagerConstants: java.lang.String TAG> = "BackupManagerConstants";

        <com.android.server.backup.BackupManagerConstants: java.lang.String SETTING> = "backup_manager_constants";

        <com.android.server.backup.BackupManagerConstants: java.lang.String KEY_VALUE_BACKUP_REQUIRE_CHARGING> = "key_value_backup_require_charging";

        <com.android.server.backup.BackupManagerConstants: java.lang.String KEY_VALUE_BACKUP_REQUIRED_NETWORK_TYPE> = "key_value_backup_required_network_type";

        <com.android.server.backup.BackupManagerConstants: java.lang.String KEY_VALUE_BACKUP_INTERVAL_MILLISECONDS> = "key_value_backup_interval_milliseconds";

        <com.android.server.backup.BackupManagerConstants: java.lang.String KEY_VALUE_BACKUP_FUZZ_MILLISECONDS> = "key_value_backup_fuzz_milliseconds";

        <com.android.server.backup.BackupManagerConstants: java.lang.String FULL_BACKUP_REQUIRE_CHARGING> = "full_backup_require_charging";

        <com.android.server.backup.BackupManagerConstants: java.lang.String FULL_BACKUP_REQUIRED_NETWORK_TYPE> = "full_backup_required_network_type";

        <com.android.server.backup.BackupManagerConstants: java.lang.String FULL_BACKUP_INTERVAL_MILLISECONDS> = "full_backup_interval_milliseconds";

        <com.android.server.backup.BackupManagerConstants: boolean DEFAULT_KEY_VALUE_BACKUP_REQUIRE_CHARGING> = 1;

        <com.android.server.backup.BackupManagerConstants: int DEFAULT_KEY_VALUE_BACKUP_REQUIRED_NETWORK_TYPE> = 1;

        <com.android.server.backup.BackupManagerConstants: long DEFAULT_KEY_VALUE_BACKUP_INTERVAL_MILLISECONDS> = 14400000L;

        <com.android.server.backup.BackupManagerConstants: long DEFAULT_KEY_VALUE_BACKUP_FUZZ_MILLISECONDS> = 600000L;

        <com.android.server.backup.BackupManagerConstants: boolean DEFAULT_FULL_BACKUP_REQUIRE_CHARGING> = 1;

        <com.android.server.backup.BackupManagerConstants: int DEFAULT_FULL_BACKUP_REQUIRED_NETWORK_TYPE> = 2;

        <com.android.server.backup.BackupManagerConstants: long DEFAULT_FULL_BACKUP_INTERVAL_MILLISECONDS> = 86400000L;

        <com.android.server.backup.BackupManagerConstants: java.lang.String DEFAULT_BACKUP_FINISHED_NOTIFICATION_RECEIVERS> = "";

        <com.android.server.backup.BackupManagerConstants: java.lang.String BACKUP_FINISHED_NOTIFICATION_RECEIVERS> = "backup_finished_notification_receivers";

        return;
    }
}
