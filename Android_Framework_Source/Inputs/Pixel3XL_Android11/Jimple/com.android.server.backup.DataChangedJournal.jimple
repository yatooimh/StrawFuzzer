public class com.android.server.backup.DataChangedJournal extends java.lang.Object
{
    private static final int BUFFER_SIZE_BYTES;
    private static final java.lang.String FILE_NAME_PREFIX;
    private static final java.lang.String TAG;
    private final java.io.File mFile;

    void <init>(java.io.File)
    {
        com.android.server.backup.DataChangedJournal r0;
        java.io.File r1;

        r0 := @this: com.android.server.backup.DataChangedJournal;

        r1 := @parameter0: java.io.File;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.backup.DataChangedJournal: java.io.File mFile> = r1;

        return;
    }

    static java.util.ArrayList listJournals(java.io.File)
    {
        int i0, i2;
        java.util.ArrayList $r1;
        com.android.server.backup.DataChangedJournal $r2;
        java.io.File $r3, r4;
        java.io.File[] r5;

        r4 := @parameter0: java.io.File;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r5 = virtualinvoke r4.<java.io.File: java.io.File[] listFiles()>();

        if r5 != null goto label1;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("DataChangedJournal", "Failed to read journal files");

        return $r1;

     label1:
        i0 = lengthof r5;

        i2 = 0;

     label2:
        if i2 >= i0 goto label3;

        $r2 = new com.android.server.backup.DataChangedJournal;

        $r3 = r5[i2];

        specialinvoke $r2.<com.android.server.backup.DataChangedJournal: void <init>(java.io.File)>($r3);

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        i2 = i2 + 1;

        goto label2;

     label3:
        return $r1;
    }

    static com.android.server.backup.DataChangedJournal newJournal(java.io.File) throws java.io.IOException
    {
        java.io.File r0, $r2;
        com.android.server.backup.DataChangedJournal $r1;

        r0 := @parameter0: java.io.File;

        $r1 = new com.android.server.backup.DataChangedJournal;

        $r2 = staticinvoke <java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File)>("journal", null, r0);

        specialinvoke $r1.<com.android.server.backup.DataChangedJournal: void <init>(java.io.File)>($r2);

        return $r1;
    }

    public void addPackage(java.lang.String) throws java.io.IOException
    {
        com.android.server.backup.DataChangedJournal r0;
        java.io.RandomAccessFile $r1;
        java.io.File $r2;
        long $l0;
        java.lang.Throwable $r3, $r4;
        java.lang.String r5;

        r0 := @this: com.android.server.backup.DataChangedJournal;

        r5 := @parameter0: java.lang.String;

        $r1 = new java.io.RandomAccessFile;

        $r2 = r0.<com.android.server.backup.DataChangedJournal: java.io.File mFile>;

        specialinvoke $r1.<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>($r2, "rws");

     label1:
        $l0 = virtualinvoke $r1.<java.io.RandomAccessFile: long length()>();

        virtualinvoke $r1.<java.io.RandomAccessFile: void seek(long)>($l0);

        virtualinvoke $r1.<java.io.RandomAccessFile: void writeUTF(java.lang.String)>(r5);

     label2:
        virtualinvoke $r1.<java.io.RandomAccessFile: void close()>();

        return;

     label3:
        $r4 := @caughtexception;

     label4:
        virtualinvoke $r1.<java.io.RandomAccessFile: void close()>();

     label5:
        goto label7;

     label6:
        $r3 := @caughtexception;

        virtualinvoke $r4.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r3);

     label7:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public boolean delete()
    {
        com.android.server.backup.DataChangedJournal r0;
        java.io.File $r1;
        boolean $z0;

        r0 := @this: com.android.server.backup.DataChangedJournal;

        $r1 = r0.<com.android.server.backup.DataChangedJournal: java.io.File mFile>;

        $z0 = virtualinvoke $r1.<java.io.File: boolean delete()>();

        return $z0;
    }

    public boolean equals(java.lang.Object)
    {
        com.android.server.backup.DataChangedJournal r0, r7;
        boolean z0, $z1;
        java.io.File $r1, $r3;
        java.lang.String $r2, $r4;
        java.lang.Throwable $r5;
        java.lang.Object r6;

        r0 := @this: com.android.server.backup.DataChangedJournal;

        r6 := @parameter0: java.lang.Object;

        $z1 = r6 instanceof com.android.server.backup.DataChangedJournal;

        if $z1 == 0 goto label4;

        r7 = (com.android.server.backup.DataChangedJournal) r6;

     label1:
        $r1 = r0.<com.android.server.backup.DataChangedJournal: java.io.File mFile>;

        $r2 = virtualinvoke $r1.<java.io.File: java.lang.String getCanonicalPath()>();

        $r3 = r7.<com.android.server.backup.DataChangedJournal: java.io.File mFile>;

        $r4 = virtualinvoke $r3.<java.io.File: java.lang.String getCanonicalPath()>();

        z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r4);

     label2:
        return z0;

     label3:
        $r5 := @caughtexception;

        return 0;

     label4:
        return 0;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void forEach(java.util.function.Consumer) throws java.io.IOException
    {
        com.android.server.backup.DataChangedJournal r0;
        java.io.BufferedInputStream $r1;
        java.io.FileInputStream $r2;
        java.io.File $r3;
        int $i0;
        java.lang.String $r4;
        java.lang.Throwable $r5, $r6, $r7, $r8;
        java.util.function.Consumer r9;
        java.io.DataInputStream r11;

        r0 := @this: com.android.server.backup.DataChangedJournal;

        r9 := @parameter0: java.util.function.Consumer;

        $r1 = new java.io.BufferedInputStream;

        $r2 = new java.io.FileInputStream;

        $r3 = r0.<com.android.server.backup.DataChangedJournal: java.io.File mFile>;

        specialinvoke $r2.<java.io.FileInputStream: void <init>(java.io.File)>($r3);

        specialinvoke $r1.<java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>($r2, 8192);

     label01:
        r11 = new java.io.DataInputStream;

        specialinvoke r11.<java.io.DataInputStream: void <init>(java.io.InputStream)>($r1);

     label02:
        $i0 = virtualinvoke r11.<java.io.DataInputStream: int available()>();

        if $i0 <= 0 goto label04;

        $r4 = virtualinvoke r11.<java.io.DataInputStream: java.lang.String readUTF()>();

        interfaceinvoke r9.<java.util.function.Consumer: void accept(java.lang.Object)>($r4);

     label03:
        goto label02;

     label04:
        virtualinvoke r11.<java.io.DataInputStream: void close()>();

     label05:
        virtualinvoke $r1.<java.io.BufferedInputStream: void close()>();

        return;

     label06:
        $r5 := @caughtexception;

     label07:
        virtualinvoke r11.<java.io.DataInputStream: void close()>();

     label08:
        goto label11;

     label09:
        $r8 := @caughtexception;

     label10:
        virtualinvoke $r5.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r8);

     label11:
        throw $r5;

     label12:
        $r6 := @caughtexception;

     label13:
        virtualinvoke $r1.<java.io.BufferedInputStream: void close()>();

     label14:
        goto label16;

     label15:
        $r7 := @caughtexception;

        virtualinvoke $r6.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r7);

     label16:
        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label02 to label03 with label06;
        catch java.lang.Throwable from label04 to label05 with label12;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label11 to label12 with label12;
        catch java.lang.Throwable from label13 to label14 with label15;
    }

    public java.util.List getPackages() throws java.io.IOException
    {
        com.android.server.backup.DataChangedJournal r0;
        java.util.ArrayList $r2;
        com.android.server.backup._$$Lambda$NsJlXDEZZRYyD6JsbnCsdcb4L4A $r4;

        r0 := @this: com.android.server.backup.DataChangedJournal;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r2);

        $r4 = new com.android.server.backup._$$Lambda$NsJlXDEZZRYyD6JsbnCsdcb4L4A;

        specialinvoke $r4.<com.android.server.backup._$$Lambda$NsJlXDEZZRYyD6JsbnCsdcb4L4A: void <init>(java.util.List)>($r2);

        virtualinvoke r0.<com.android.server.backup.DataChangedJournal: void forEach(java.util.function.Consumer)>($r4);

        return $r2;
    }

    public java.lang.String toString()
    {
        com.android.server.backup.DataChangedJournal r0;
        java.io.File $r1;
        java.lang.String $r2;

        r0 := @this: com.android.server.backup.DataChangedJournal;

        $r1 = r0.<com.android.server.backup.DataChangedJournal: java.io.File mFile>;

        $r2 = virtualinvoke $r1.<java.io.File: java.lang.String toString()>();

        return $r2;
    }

    public static void <clinit>()
    {
        <com.android.server.backup.DataChangedJournal: java.lang.String TAG> = "DataChangedJournal";

        <com.android.server.backup.DataChangedJournal: java.lang.String FILE_NAME_PREFIX> = "journal";

        <com.android.server.backup.DataChangedJournal: int BUFFER_SIZE_BYTES> = 8192;

        return;
    }
}
