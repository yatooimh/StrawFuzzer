class com.android.server.backup.KeyValueAdbBackupEngine$KeyValueAdbBackupDataCopier extends java.lang.Object implements java.lang.Runnable
{
    private final android.content.pm.PackageInfo mPackage;
    private final android.os.ParcelFileDescriptor mPipe;
    private final int mToken;
    final com.android.server.backup.KeyValueAdbBackupEngine this$0;

    void <init>(com.android.server.backup.KeyValueAdbBackupEngine, android.content.pm.PackageInfo, android.os.ParcelFileDescriptor, int) throws java.io.IOException
    {
        com.android.server.backup.KeyValueAdbBackupEngine$KeyValueAdbBackupDataCopier r0;
        com.android.server.backup.KeyValueAdbBackupEngine r1;
        android.content.pm.PackageInfo r2;
        android.os.ParcelFileDescriptor r3, $r5;
        int i0;
        java.io.FileDescriptor $r4;

        r0 := @this: com.android.server.backup.KeyValueAdbBackupEngine$KeyValueAdbBackupDataCopier;

        r1 := @parameter0: com.android.server.backup.KeyValueAdbBackupEngine;

        r2 := @parameter1: android.content.pm.PackageInfo;

        r3 := @parameter2: android.os.ParcelFileDescriptor;

        i0 := @parameter3: int;

        r0.<com.android.server.backup.KeyValueAdbBackupEngine$KeyValueAdbBackupDataCopier: com.android.server.backup.KeyValueAdbBackupEngine this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.backup.KeyValueAdbBackupEngine$KeyValueAdbBackupDataCopier: android.content.pm.PackageInfo mPackage> = r2;

        $r4 = virtualinvoke r3.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        $r5 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor dup(java.io.FileDescriptor)>($r4);

        r0.<com.android.server.backup.KeyValueAdbBackupEngine$KeyValueAdbBackupDataCopier: android.os.ParcelFileDescriptor mPipe> = $r5;

        r0.<com.android.server.backup.KeyValueAdbBackupEngine$KeyValueAdbBackupDataCopier: int mToken> = i0;

        return;
    }

    public void run()
    {
        com.android.server.backup.KeyValueAdbBackupEngine$KeyValueAdbBackupDataCopier r0;
        android.os.ParcelFileDescriptor $r1, $r19, $r25, $r27;
        com.android.server.backup.KeyValueAdbBackupEngine $r2, $r4, $r7, $r9, $r12, $r16, $r22;
        android.content.pm.PackageManager $r3;
        android.content.pm.PackageInfo $r5, $r11, $r31;
        java.io.File $r6, $r8, $r10, $r14, $r17;
        java.lang.String $r13, $r15, $r18, $r32, $r36;
        java.io.FileDescriptor $r20;
        byte[] $r21;
        com.android.server.backup.UserBackupManagerService $r23;
        android.app.backup.IBackupManager $r24;
        int $i1;
        java.lang.Throwable $r26, $r29, $r37;
        android.os.RemoteException $r28;
        android.app.backup.FullBackupDataOutput r38;
        com.android.server.backup.fullbackup.AppMetadataBackupWriter r39;
        java.io.FileOutputStream r40;
        java.lang.StringBuilder r45;

        r0 := @this: com.android.server.backup.KeyValueAdbBackupEngine$KeyValueAdbBackupDataCopier;

     label01:
        r38 = new android.app.backup.FullBackupDataOutput;

        $r1 = r0.<com.android.server.backup.KeyValueAdbBackupEngine$KeyValueAdbBackupDataCopier: android.os.ParcelFileDescriptor mPipe>;

        specialinvoke r38.<android.app.backup.FullBackupDataOutput: void <init>(android.os.ParcelFileDescriptor)>($r1);

        r39 = new com.android.server.backup.fullbackup.AppMetadataBackupWriter;

        $r2 = r0.<com.android.server.backup.KeyValueAdbBackupEngine$KeyValueAdbBackupDataCopier: com.android.server.backup.KeyValueAdbBackupEngine this$0>;

        $r3 = staticinvoke <com.android.server.backup.KeyValueAdbBackupEngine: android.content.pm.PackageManager access$000(com.android.server.backup.KeyValueAdbBackupEngine)>($r2);

        specialinvoke r39.<com.android.server.backup.fullbackup.AppMetadataBackupWriter: void <init>(android.app.backup.FullBackupDataOutput,android.content.pm.PackageManager)>(r38, $r3);

        $r5 = r0.<com.android.server.backup.KeyValueAdbBackupEngine$KeyValueAdbBackupDataCopier: android.content.pm.PackageInfo mPackage>;

        $r4 = r0.<com.android.server.backup.KeyValueAdbBackupEngine$KeyValueAdbBackupDataCopier: com.android.server.backup.KeyValueAdbBackupEngine this$0>;

        $r6 = staticinvoke <com.android.server.backup.KeyValueAdbBackupEngine: java.io.File access$100(com.android.server.backup.KeyValueAdbBackupEngine)>($r4);

        $r7 = r0.<com.android.server.backup.KeyValueAdbBackupEngine$KeyValueAdbBackupDataCopier: com.android.server.backup.KeyValueAdbBackupEngine this$0>;

        $r8 = staticinvoke <com.android.server.backup.KeyValueAdbBackupEngine: java.io.File access$200(com.android.server.backup.KeyValueAdbBackupEngine)>($r7);

        virtualinvoke r39.<com.android.server.backup.fullbackup.AppMetadataBackupWriter: void backupManifest(android.content.pm.PackageInfo,java.io.File,java.io.File,java.lang.String,java.lang.String,boolean)>($r5, $r6, $r8, "k", null, 0);

        $r9 = r0.<com.android.server.backup.KeyValueAdbBackupEngine$KeyValueAdbBackupDataCopier: com.android.server.backup.KeyValueAdbBackupEngine this$0>;

        $r10 = staticinvoke <com.android.server.backup.KeyValueAdbBackupEngine: java.io.File access$100(com.android.server.backup.KeyValueAdbBackupEngine)>($r9);

        virtualinvoke $r10.<java.io.File: boolean delete()>();

        $r11 = r0.<com.android.server.backup.KeyValueAdbBackupEngine$KeyValueAdbBackupDataCopier: android.content.pm.PackageInfo mPackage>;

        $r13 = $r11.<android.content.pm.PackageInfo: java.lang.String packageName>;

        $r12 = r0.<com.android.server.backup.KeyValueAdbBackupEngine$KeyValueAdbBackupDataCopier: com.android.server.backup.KeyValueAdbBackupEngine this$0>;

        $r14 = staticinvoke <com.android.server.backup.KeyValueAdbBackupEngine: java.io.File access$200(com.android.server.backup.KeyValueAdbBackupEngine)>($r12);

        $r15 = virtualinvoke $r14.<java.io.File: java.lang.String getAbsolutePath()>();

        $r16 = r0.<com.android.server.backup.KeyValueAdbBackupEngine$KeyValueAdbBackupDataCopier: com.android.server.backup.KeyValueAdbBackupEngine this$0>;

        $r17 = staticinvoke <com.android.server.backup.KeyValueAdbBackupEngine: java.io.File access$300(com.android.server.backup.KeyValueAdbBackupEngine)>($r16);

        $r18 = virtualinvoke $r17.<java.io.File: java.lang.String getAbsolutePath()>();

        staticinvoke <android.app.backup.FullBackup: int backupToTar(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.app.backup.FullBackupDataOutput)>($r13, "k", null, $r15, $r18, r38);

     label02:
        r40 = new java.io.FileOutputStream;

        $r19 = r0.<com.android.server.backup.KeyValueAdbBackupEngine$KeyValueAdbBackupDataCopier: android.os.ParcelFileDescriptor mPipe>;

        $r20 = virtualinvoke $r19.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        specialinvoke r40.<java.io.FileOutputStream: void <init>(java.io.FileDescriptor)>($r20);

        $r21 = newarray (byte)[4];

        virtualinvoke r40.<java.io.FileOutputStream: void write(byte[])>($r21);

     label03:
        goto label06;

     label04:
        $r37 := @caughtexception;

     label05:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("KeyValueAdbBackupEngine", "Unable to finalize backup stream!");

     label06:
        $r22 = r0.<com.android.server.backup.KeyValueAdbBackupEngine$KeyValueAdbBackupDataCopier: com.android.server.backup.KeyValueAdbBackupEngine this$0>;

        $r23 = staticinvoke <com.android.server.backup.KeyValueAdbBackupEngine: com.android.server.backup.UserBackupManagerService access$400(com.android.server.backup.KeyValueAdbBackupEngine)>($r22);

        $r24 = virtualinvoke $r23.<com.android.server.backup.UserBackupManagerService: android.app.backup.IBackupManager getBackupManagerBinder()>();

        $i1 = r0.<com.android.server.backup.KeyValueAdbBackupEngine$KeyValueAdbBackupDataCopier: int mToken>;

        interfaceinvoke $r24.<android.app.backup.IBackupManager: void opComplete(int,long)>($i1, 0L);

     label07:
        goto label09;

     label08:
        $r28 := @caughtexception;

     label09:
        goto label13;

     label10:
        $r26 := @caughtexception;

        goto label14;

     label11:
        $r29 := @caughtexception;

     label12:
        r45 = new java.lang.StringBuilder;

        specialinvoke r45.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error running full backup for ");

        $r31 = r0.<com.android.server.backup.KeyValueAdbBackupEngine$KeyValueAdbBackupDataCopier: android.content.pm.PackageInfo mPackage>;

        $r32 = $r31.<android.content.pm.PackageInfo: java.lang.String packageName>;

        virtualinvoke r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        virtualinvoke r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". ");

        virtualinvoke r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r29);

        $r36 = virtualinvoke r45.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("KeyValueAdbBackupEngine", $r36);

     label13:
        $r25 = r0.<com.android.server.backup.KeyValueAdbBackupEngine$KeyValueAdbBackupDataCopier: android.os.ParcelFileDescriptor mPipe>;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>($r25);

        return;

     label14:
        $r27 = r0.<com.android.server.backup.KeyValueAdbBackupEngine$KeyValueAdbBackupDataCopier: android.os.ParcelFileDescriptor mPipe>;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>($r27);

        throw $r26;

        catch java.io.IOException from label01 to label02 with label11;
        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.io.IOException from label02 to label03 with label04;
        catch java.lang.Throwable from label02 to label03 with label10;
        catch java.io.IOException from label05 to label06 with label11;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch android.os.RemoteException from label06 to label07 with label08;
        catch java.io.IOException from label06 to label07 with label11;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label12 to label13 with label10;
    }
}
