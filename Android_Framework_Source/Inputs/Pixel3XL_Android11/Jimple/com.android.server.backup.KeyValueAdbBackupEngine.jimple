public class com.android.server.backup.KeyValueAdbBackupEngine extends java.lang.Object
{
    private static final java.lang.String BACKUP_KEY_VALUE_BACKUP_DATA_FILENAME_SUFFIX;
    private static final java.lang.String BACKUP_KEY_VALUE_BLANK_STATE_FILENAME;
    private static final java.lang.String BACKUP_KEY_VALUE_DIRECTORY_NAME;
    private static final java.lang.String BACKUP_KEY_VALUE_NEW_STATE_FILENAME_SUFFIX;
    private static final boolean DEBUG;
    private static final java.lang.String TAG;
    private final com.android.server.backup.BackupAgentTimeoutParameters mAgentTimeoutParameters;
    private android.os.ParcelFileDescriptor mBackupData;
    private final java.io.File mBackupDataName;
    private com.android.server.backup.UserBackupManagerService mBackupManagerService;
    private final java.io.File mBlankStateName;
    private final android.content.pm.PackageInfo mCurrentPackage;
    private final java.io.File mDataDir;
    private final java.io.File mManifestFile;
    private android.os.ParcelFileDescriptor mNewState;
    private final java.io.File mNewStateName;
    private final java.io.OutputStream mOutput;
    private final android.content.pm.PackageManager mPackageManager;
    private android.os.ParcelFileDescriptor mSavedState;
    private final java.io.File mStateDir;

    public void <init>(java.io.OutputStream, android.content.pm.PackageInfo, com.android.server.backup.UserBackupManagerService, android.content.pm.PackageManager, java.io.File, java.io.File)
    {
        com.android.server.backup.KeyValueAdbBackupEngine r0;
        com.android.server.backup.UserBackupManagerService r1;
        java.io.File r2, r3, $r4, $r6, $r7, $r11, $r16, $r18, $r19, r27, r29;
        android.content.pm.PackageInfo $r5, r23;
        java.lang.StringBuilder $r8, $r13;
        java.lang.String $r12, $r17, r26;
        com.android.server.backup.BackupAgentTimeoutParameters $r21, r31;
        java.io.OutputStream r22;
        android.content.pm.PackageManager r24;

        r0 := @this: com.android.server.backup.KeyValueAdbBackupEngine;

        r22 := @parameter0: java.io.OutputStream;

        r23 := @parameter1: android.content.pm.PackageInfo;

        r1 := @parameter2: com.android.server.backup.UserBackupManagerService;

        r24 := @parameter3: android.content.pm.PackageManager;

        r2 := @parameter4: java.io.File;

        r3 := @parameter5: java.io.File;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.backup.KeyValueAdbBackupEngine: java.io.OutputStream mOutput> = r22;

        r0.<com.android.server.backup.KeyValueAdbBackupEngine: android.content.pm.PackageInfo mCurrentPackage> = r23;

        r0.<com.android.server.backup.KeyValueAdbBackupEngine: com.android.server.backup.UserBackupManagerService mBackupManagerService> = r1;

        r0.<com.android.server.backup.KeyValueAdbBackupEngine: android.content.pm.PackageManager mPackageManager> = r24;

        r0.<com.android.server.backup.KeyValueAdbBackupEngine: java.io.File mDataDir> = r3;

        $r4 = new java.io.File;

        specialinvoke $r4.<java.io.File: void <init>(java.io.File,java.lang.String)>(r2, "key_value_dir");

        r0.<com.android.server.backup.KeyValueAdbBackupEngine: java.io.File mStateDir> = $r4;

        virtualinvoke $r4.<java.io.File: boolean mkdirs()>();

        $r5 = r0.<com.android.server.backup.KeyValueAdbBackupEngine: android.content.pm.PackageInfo mCurrentPackage>;

        r26 = $r5.<android.content.pm.PackageInfo: java.lang.String packageName>;

        $r6 = new java.io.File;

        $r7 = r0.<com.android.server.backup.KeyValueAdbBackupEngine: java.io.File mStateDir>;

        specialinvoke $r6.<java.io.File: void <init>(java.io.File,java.lang.String)>($r7, "blank_state");

        r0.<com.android.server.backup.KeyValueAdbBackupEngine: java.io.File mBlankStateName> = $r6;

        r27 = r0.<com.android.server.backup.KeyValueAdbBackupEngine: java.io.File mDataDir>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r26);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".data");

        $r11 = new java.io.File;

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.io.File: void <init>(java.io.File,java.lang.String)>(r27, $r12);

        r0.<com.android.server.backup.KeyValueAdbBackupEngine: java.io.File mBackupDataName> = $r11;

        r29 = r0.<com.android.server.backup.KeyValueAdbBackupEngine: java.io.File mStateDir>;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r26);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".new");

        $r16 = new java.io.File;

        $r17 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.io.File: void <init>(java.io.File,java.lang.String)>(r29, $r17);

        r0.<com.android.server.backup.KeyValueAdbBackupEngine: java.io.File mNewStateName> = $r16;

        $r18 = new java.io.File;

        $r19 = r0.<com.android.server.backup.KeyValueAdbBackupEngine: java.io.File mDataDir>;

        specialinvoke $r18.<java.io.File: void <init>(java.io.File,java.lang.String)>($r19, "_manifest");

        r0.<com.android.server.backup.KeyValueAdbBackupEngine: java.io.File mManifestFile> = $r18;

        r31 = virtualinvoke r1.<com.android.server.backup.UserBackupManagerService: com.android.server.backup.BackupAgentTimeoutParameters getAgentTimeoutParameters()>();

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r31, "Timeout parameters cannot be null");

        $r21 = (com.android.server.backup.BackupAgentTimeoutParameters) r31;

        r0.<com.android.server.backup.KeyValueAdbBackupEngine: com.android.server.backup.BackupAgentTimeoutParameters mAgentTimeoutParameters> = $r21;

        return;
    }

    static android.content.pm.PackageManager access$000(com.android.server.backup.KeyValueAdbBackupEngine)
    {
        com.android.server.backup.KeyValueAdbBackupEngine r0;
        android.content.pm.PackageManager $r1;

        r0 := @parameter0: com.android.server.backup.KeyValueAdbBackupEngine;

        $r1 = r0.<com.android.server.backup.KeyValueAdbBackupEngine: android.content.pm.PackageManager mPackageManager>;

        return $r1;
    }

    static java.io.File access$100(com.android.server.backup.KeyValueAdbBackupEngine)
    {
        com.android.server.backup.KeyValueAdbBackupEngine r0;
        java.io.File $r1;

        r0 := @parameter0: com.android.server.backup.KeyValueAdbBackupEngine;

        $r1 = r0.<com.android.server.backup.KeyValueAdbBackupEngine: java.io.File mManifestFile>;

        return $r1;
    }

    static java.io.File access$200(com.android.server.backup.KeyValueAdbBackupEngine)
    {
        com.android.server.backup.KeyValueAdbBackupEngine r0;
        java.io.File $r1;

        r0 := @parameter0: com.android.server.backup.KeyValueAdbBackupEngine;

        $r1 = r0.<com.android.server.backup.KeyValueAdbBackupEngine: java.io.File mDataDir>;

        return $r1;
    }

    static java.io.File access$300(com.android.server.backup.KeyValueAdbBackupEngine)
    {
        com.android.server.backup.KeyValueAdbBackupEngine r0;
        java.io.File $r1;

        r0 := @parameter0: com.android.server.backup.KeyValueAdbBackupEngine;

        $r1 = r0.<com.android.server.backup.KeyValueAdbBackupEngine: java.io.File mBackupDataName>;

        return $r1;
    }

    static com.android.server.backup.UserBackupManagerService access$400(com.android.server.backup.KeyValueAdbBackupEngine)
    {
        com.android.server.backup.KeyValueAdbBackupEngine r0;
        com.android.server.backup.UserBackupManagerService $r1;

        r0 := @parameter0: com.android.server.backup.KeyValueAdbBackupEngine;

        $r1 = r0.<com.android.server.backup.KeyValueAdbBackupEngine: com.android.server.backup.UserBackupManagerService mBackupManagerService>;

        return $r1;
    }

    private android.app.IBackupAgent bindToAgent(android.content.pm.ApplicationInfo)
    {
        com.android.server.backup.KeyValueAdbBackupEngine r0;
        android.content.pm.ApplicationInfo r1;
        com.android.server.backup.UserBackupManagerService $r3;
        java.lang.Throwable $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r7, $r11;
        android.app.IBackupAgent r12;

        r0 := @this: com.android.server.backup.KeyValueAdbBackupEngine;

        r1 := @parameter0: android.content.pm.ApplicationInfo;

     label1:
        $r3 = r0.<com.android.server.backup.KeyValueAdbBackupEngine: com.android.server.backup.UserBackupManagerService mBackupManagerService>;

        r12 = virtualinvoke $r3.<com.android.server.backup.UserBackupManagerService: android.app.IBackupAgent bindToAgentSynchronous(android.content.pm.ApplicationInfo,int)>(r1, 0);

     label2:
        return r12;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("error in binding to agent for package ");

        $r7 = r1.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r11 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("KeyValueAdbBackupEngine", $r11);

        return null;

        catch java.lang.SecurityException from label1 to label2 with label3;
    }

    private void cleanup()
    {
        com.android.server.backup.KeyValueAdbBackupEngine r0;
        android.content.pm.PackageInfo $r1;
        android.content.pm.ApplicationInfo $r2;
        com.android.server.backup.UserBackupManagerService $r3;
        java.io.File $r4, $r5, $r6;

        r0 := @this: com.android.server.backup.KeyValueAdbBackupEngine;

        $r3 = r0.<com.android.server.backup.KeyValueAdbBackupEngine: com.android.server.backup.UserBackupManagerService mBackupManagerService>;

        $r1 = r0.<com.android.server.backup.KeyValueAdbBackupEngine: android.content.pm.PackageInfo mCurrentPackage>;

        $r2 = $r1.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        virtualinvoke $r3.<com.android.server.backup.UserBackupManagerService: void tearDownAgentAndKill(android.content.pm.ApplicationInfo)>($r2);

        $r4 = r0.<com.android.server.backup.KeyValueAdbBackupEngine: java.io.File mBlankStateName>;

        virtualinvoke $r4.<java.io.File: boolean delete()>();

        $r5 = r0.<com.android.server.backup.KeyValueAdbBackupEngine: java.io.File mNewStateName>;

        virtualinvoke $r5.<java.io.File: boolean delete()>();

        $r6 = r0.<com.android.server.backup.KeyValueAdbBackupEngine: java.io.File mBackupDataName>;

        virtualinvoke $r6.<java.io.File: boolean delete()>();

        return;
    }

    private boolean invokeAgentForAdbBackup(java.lang.String, android.app.IBackupAgent)
    {
        com.android.server.backup.KeyValueAdbBackupEngine r0;
        java.lang.String r1, $r13, $r20;
        int i0;
        long l1;
        com.android.server.backup.UserBackupManagerService $r2, $r4, $r5, $r10;
        com.android.server.backup.BackupAgentTimeoutParameters $r3;
        android.app.backup.IBackupManager $r6;
        android.os.ParcelFileDescriptor $r7, $r8, $r9;
        boolean $z0;
        android.os.RemoteException $r14;
        java.lang.StringBuilder $r15, r23;
        android.app.IBackupAgent r21;
        com.android.server.backup.remote.ServiceBackupCallback r22;

        r0 := @this: com.android.server.backup.KeyValueAdbBackupEngine;

        r1 := @parameter0: java.lang.String;

        r21 := @parameter1: android.app.IBackupAgent;

        $r2 = r0.<com.android.server.backup.KeyValueAdbBackupEngine: com.android.server.backup.UserBackupManagerService mBackupManagerService>;

        i0 = virtualinvoke $r2.<com.android.server.backup.UserBackupManagerService: int generateRandomIntegerToken()>();

        $r3 = r0.<com.android.server.backup.KeyValueAdbBackupEngine: com.android.server.backup.BackupAgentTimeoutParameters mAgentTimeoutParameters>;

        l1 = virtualinvoke $r3.<com.android.server.backup.BackupAgentTimeoutParameters: long getKvBackupAgentTimeoutMillis()>();

     label1:
        $r4 = r0.<com.android.server.backup.KeyValueAdbBackupEngine: com.android.server.backup.UserBackupManagerService mBackupManagerService>;

        virtualinvoke $r4.<com.android.server.backup.UserBackupManagerService: void prepareOperationTimeout(int,long,com.android.server.backup.BackupRestoreTask,int)>(i0, l1, null, 0);

        r22 = new com.android.server.backup.remote.ServiceBackupCallback;

        $r5 = r0.<com.android.server.backup.KeyValueAdbBackupEngine: com.android.server.backup.UserBackupManagerService mBackupManagerService>;

        $r6 = virtualinvoke $r5.<com.android.server.backup.UserBackupManagerService: android.app.backup.IBackupManager getBackupManagerBinder()>();

        specialinvoke r22.<com.android.server.backup.remote.ServiceBackupCallback: void <init>(android.app.backup.IBackupManager,int)>($r6, i0);

        $r9 = r0.<com.android.server.backup.KeyValueAdbBackupEngine: android.os.ParcelFileDescriptor mSavedState>;

        $r8 = r0.<com.android.server.backup.KeyValueAdbBackupEngine: android.os.ParcelFileDescriptor mBackupData>;

        $r7 = r0.<com.android.server.backup.KeyValueAdbBackupEngine: android.os.ParcelFileDescriptor mNewState>;

        interfaceinvoke r21.<android.app.IBackupAgent: void doBackup(android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,long,android.app.backup.IBackupCallback,int)>($r9, $r8, $r7, 9223372036854775807L, r22, 0);

        $r10 = r0.<com.android.server.backup.KeyValueAdbBackupEngine: com.android.server.backup.UserBackupManagerService mBackupManagerService>;

        $z0 = virtualinvoke $r10.<com.android.server.backup.UserBackupManagerService: boolean waitUntilOperationComplete(int)>(i0);

        if $z0 != 0 goto label3;

        r23 = new java.lang.StringBuilder;

        specialinvoke r23.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Key-value backup failed on package ");

        virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r13 = virtualinvoke r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("KeyValueAdbBackupEngine", $r13);

     label2:
        return 0;

     label3:
        return 1;

     label4:
        $r14 := @caughtexception;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error invoking agent for backup on ");

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". ");

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        $r20 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("KeyValueAdbBackupEngine", $r20);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    private void prepareBackupFiles(java.lang.String) throws java.io.FileNotFoundException
    {
        com.android.server.backup.KeyValueAdbBackupEngine r0;
        java.io.File $r1, $r3, $r5, $r6, $r10;
        android.os.ParcelFileDescriptor $r2, $r4, $r7;
        boolean $z0;
        java.lang.StringBuilder $r8;
        java.lang.String $r12, r13;

        r0 := @this: com.android.server.backup.KeyValueAdbBackupEngine;

        r13 := @parameter0: java.lang.String;

        $r1 = r0.<com.android.server.backup.KeyValueAdbBackupEngine: java.io.File mBlankStateName>;

        $r2 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor open(java.io.File,int)>($r1, 402653184);

        r0.<com.android.server.backup.KeyValueAdbBackupEngine: android.os.ParcelFileDescriptor mSavedState> = $r2;

        $r3 = r0.<com.android.server.backup.KeyValueAdbBackupEngine: java.io.File mBackupDataName>;

        $r4 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor open(java.io.File,int)>($r3, 1006632960);

        r0.<com.android.server.backup.KeyValueAdbBackupEngine: android.os.ParcelFileDescriptor mBackupData> = $r4;

        $r5 = r0.<com.android.server.backup.KeyValueAdbBackupEngine: java.io.File mBackupDataName>;

        $z0 = staticinvoke <android.os.SELinux: boolean restorecon(java.io.File)>($r5);

        if $z0 != 0 goto label1;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SELinux restorecon failed on ");

        $r10 = r0.<com.android.server.backup.KeyValueAdbBackupEngine: java.io.File mBackupDataName>;

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("KeyValueAdbBackupEngine", $r12);

     label1:
        $r6 = r0.<com.android.server.backup.KeyValueAdbBackupEngine: java.io.File mNewStateName>;

        $r7 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor open(java.io.File,int)>($r6, 1006632960);

        r0.<com.android.server.backup.KeyValueAdbBackupEngine: android.os.ParcelFileDescriptor mNewState> = $r7;

        return;
    }

    private void writeBackupData() throws java.io.IOException
    {
        com.android.server.backup.KeyValueAdbBackupEngine r0;
        int i0;
        long l1;
        com.android.server.backup.UserBackupManagerService $r1, $r3, $r9;
        com.android.server.backup.BackupAgentTimeoutParameters $r2;
        android.os.ParcelFileDescriptor $r4, $r6, $r8, $r11, $r19, $r20, $r30, r40;
        android.content.pm.PackageInfo $r5, $r13, $r23;
        java.io.OutputStream $r7, $r10, $r18, $r29;
        boolean $z0;
        java.lang.String $r14, $r16, $r24, $r28;
        java.lang.Throwable $r17, $r21, $r31, $r32, r42, r43;
        android.os.ParcelFileDescriptor[] r33, r34, r35, r36;
        com.android.server.backup.KeyValueAdbBackupEngine$KeyValueAdbBackupDataCopier r37;
        java.lang.Thread r38;
        java.lang.StringBuilder r39, r44;

        r0 := @this: com.android.server.backup.KeyValueAdbBackupEngine;

        $r1 = r0.<com.android.server.backup.KeyValueAdbBackupEngine: com.android.server.backup.UserBackupManagerService mBackupManagerService>;

        i0 = virtualinvoke $r1.<com.android.server.backup.UserBackupManagerService: int generateRandomIntegerToken()>();

        $r2 = r0.<com.android.server.backup.KeyValueAdbBackupEngine: com.android.server.backup.BackupAgentTimeoutParameters mAgentTimeoutParameters>;

        l1 = virtualinvoke $r2.<com.android.server.backup.BackupAgentTimeoutParameters: long getKvBackupAgentTimeoutMillis()>();

        r33 = null;

     label01:
        r34 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor[] createPipe()>();

     label02:
        r35 = r34;

        r36 = r34;

     label03:
        $r3 = r0.<com.android.server.backup.KeyValueAdbBackupEngine: com.android.server.backup.UserBackupManagerService mBackupManagerService>;

        virtualinvoke $r3.<com.android.server.backup.UserBackupManagerService: void prepareOperationTimeout(int,long,com.android.server.backup.BackupRestoreTask,int)>(i0, l1, null, 0);

     label04:
        r36 = r34;

     label05:
        r37 = new com.android.server.backup.KeyValueAdbBackupEngine$KeyValueAdbBackupDataCopier;

     label06:
        r36 = r34;

     label07:
        $r5 = r0.<com.android.server.backup.KeyValueAdbBackupEngine: android.content.pm.PackageInfo mCurrentPackage>;

        $r4 = r34[1];

        specialinvoke r37.<com.android.server.backup.KeyValueAdbBackupEngine$KeyValueAdbBackupDataCopier: void <init>(com.android.server.backup.KeyValueAdbBackupEngine,android.content.pm.PackageInfo,android.os.ParcelFileDescriptor,int)>(r0, $r5, $r4, i0);

     label08:
        r36 = r34;

     label09:
        $r6 = r34[1];

        virtualinvoke $r6.<android.os.ParcelFileDescriptor: void close()>();

     label10:
        r34[1] = null;

        r36 = r34;

     label11:
        r38 = new java.lang.Thread;

     label12:
        r36 = r34;

     label13:
        specialinvoke r38.<java.lang.Thread: void <init>(java.lang.Runnable,java.lang.String)>(r37, "key-value-app-data-runner");

     label14:
        r36 = r34;

     label15:
        virtualinvoke r38.<java.lang.Thread: void start()>();

     label16:
        r36 = r34;

     label17:
        $r8 = r34[0];

        $r7 = r0.<com.android.server.backup.KeyValueAdbBackupEngine: java.io.OutputStream mOutput>;

        staticinvoke <com.android.server.backup.utils.FullBackupUtils: void routeSocketDataToOutput(android.os.ParcelFileDescriptor,java.io.OutputStream)>($r8, $r7);

     label18:
        r36 = r34;

     label19:
        $r9 = r0.<com.android.server.backup.KeyValueAdbBackupEngine: com.android.server.backup.UserBackupManagerService mBackupManagerService>;

        $z0 = virtualinvoke $r9.<com.android.server.backup.UserBackupManagerService: boolean waitUntilOperationComplete(int)>(i0);

        if $z0 != 0 goto label30;

     label20:
        r36 = r34;

     label21:
        r39 = new java.lang.StringBuilder;

     label22:
        r36 = r34;

     label23:
        specialinvoke r39.<java.lang.StringBuilder: void <init>()>();

     label24:
        r36 = r34;

     label25:
        virtualinvoke r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Full backup failed on package ");

     label26:
        r36 = r34;

     label27:
        $r13 = r0.<com.android.server.backup.KeyValueAdbBackupEngine: android.content.pm.PackageInfo mCurrentPackage>;

        $r14 = $r13.<android.content.pm.PackageInfo: java.lang.String packageName>;

        virtualinvoke r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

     label28:
        r36 = r34;

     label29:
        $r16 = virtualinvoke r39.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("KeyValueAdbBackupEngine", $r16);

     label30:
        $r10 = r0.<com.android.server.backup.KeyValueAdbBackupEngine: java.io.OutputStream mOutput>;

        virtualinvoke $r10.<java.io.OutputStream: void flush()>();

        if r34 == null goto label51;

        $r11 = r34[0];

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>($r11);

        r40 = r34[1];

     label31:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r40);

        goto label51;

     label32:
        $r32 := @caughtexception;

        r33 = r36;

        r42 = $r32;

        goto label52;

     label33:
        $r21 := @caughtexception;

        r43 = $r21;

        goto label36;

     label34:
        $r17 := @caughtexception;

        r42 = $r17;

        goto label52;

     label35:
        $r31 := @caughtexception;

        r43 = $r31;

        r35 = null;

     label36:
        r36 = r35;

     label37:
        r44 = new java.lang.StringBuilder;

     label38:
        r36 = r35;

     label39:
        specialinvoke r44.<java.lang.StringBuilder: void <init>()>();

     label40:
        r36 = r35;

     label41:
        virtualinvoke r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error backing up ");

     label42:
        r36 = r35;

     label43:
        $r23 = r0.<com.android.server.backup.KeyValueAdbBackupEngine: android.content.pm.PackageInfo mCurrentPackage>;

        $r24 = $r23.<android.content.pm.PackageInfo: java.lang.String packageName>;

        virtualinvoke r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

     label44:
        r36 = r35;

     label45:
        virtualinvoke r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

     label46:
        r36 = r35;

     label47:
        virtualinvoke r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r43);

     label48:
        r36 = r35;

     label49:
        $r28 = virtualinvoke r44.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("KeyValueAdbBackupEngine", $r28);

     label50:
        $r29 = r0.<com.android.server.backup.KeyValueAdbBackupEngine: java.io.OutputStream mOutput>;

        virtualinvoke $r29.<java.io.OutputStream: void flush()>();

        if r35 == null goto label51;

        $r30 = r35[0];

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>($r30);

        r40 = r35[1];

        goto label31;

     label51:
        return;

     label52:
        $r18 = r0.<com.android.server.backup.KeyValueAdbBackupEngine: java.io.OutputStream mOutput>;

        virtualinvoke $r18.<java.io.OutputStream: void flush()>();

        if r33 == null goto label53;

        $r19 = r33[0];

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>($r19);

        $r20 = r33[1];

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>($r20);

     label53:
        throw r42;

        catch java.io.IOException from label01 to label02 with label35;
        catch java.lang.Throwable from label01 to label02 with label34;
        catch java.io.IOException from label03 to label04 with label33;
        catch java.lang.Throwable from label03 to label04 with label32;
        catch java.io.IOException from label05 to label06 with label33;
        catch java.lang.Throwable from label05 to label06 with label32;
        catch java.io.IOException from label07 to label08 with label33;
        catch java.lang.Throwable from label07 to label08 with label32;
        catch java.io.IOException from label09 to label10 with label33;
        catch java.lang.Throwable from label09 to label10 with label32;
        catch java.io.IOException from label11 to label12 with label33;
        catch java.lang.Throwable from label11 to label12 with label32;
        catch java.io.IOException from label13 to label14 with label33;
        catch java.lang.Throwable from label13 to label14 with label32;
        catch java.io.IOException from label15 to label16 with label33;
        catch java.lang.Throwable from label15 to label16 with label32;
        catch java.io.IOException from label17 to label18 with label33;
        catch java.lang.Throwable from label17 to label18 with label32;
        catch java.io.IOException from label19 to label20 with label33;
        catch java.lang.Throwable from label19 to label20 with label32;
        catch java.io.IOException from label21 to label22 with label33;
        catch java.lang.Throwable from label21 to label22 with label32;
        catch java.io.IOException from label23 to label24 with label33;
        catch java.lang.Throwable from label23 to label24 with label32;
        catch java.io.IOException from label25 to label26 with label33;
        catch java.lang.Throwable from label25 to label26 with label32;
        catch java.io.IOException from label27 to label28 with label33;
        catch java.lang.Throwable from label27 to label28 with label32;
        catch java.io.IOException from label29 to label30 with label33;
        catch java.lang.Throwable from label29 to label30 with label32;
        catch java.lang.Throwable from label37 to label38 with label32;
        catch java.lang.Throwable from label39 to label40 with label32;
        catch java.lang.Throwable from label41 to label42 with label32;
        catch java.lang.Throwable from label43 to label44 with label32;
        catch java.lang.Throwable from label45 to label46 with label32;
        catch java.lang.Throwable from label47 to label48 with label32;
        catch java.lang.Throwable from label49 to label50 with label32;
    }

    public void backupOnePackage() throws java.io.IOException
    {
        com.android.server.backup.KeyValueAdbBackupEngine r0;
        java.lang.StringBuilder r1, r28, r29;
        android.content.pm.PackageInfo $r2, $r3, $r5, $r8, $r13, $r20;
        java.lang.String $r4, $r6, $r9, $r11, $r14, $r16, $r21, $r25;
        boolean $z0;
        java.lang.Throwable $r17, $r18;
        android.content.pm.ApplicationInfo r26;
        android.app.IBackupAgent r27;

        r0 := @this: com.android.server.backup.KeyValueAdbBackupEngine;

        $r2 = r0.<com.android.server.backup.KeyValueAdbBackupEngine: android.content.pm.PackageInfo mCurrentPackage>;

        r26 = $r2.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

     label01:
        $r3 = r0.<com.android.server.backup.KeyValueAdbBackupEngine: android.content.pm.PackageInfo mCurrentPackage>;

        $r4 = $r3.<android.content.pm.PackageInfo: java.lang.String packageName>;

        specialinvoke r0.<com.android.server.backup.KeyValueAdbBackupEngine: void prepareBackupFiles(java.lang.String)>($r4);

        r27 = specialinvoke r0.<com.android.server.backup.KeyValueAdbBackupEngine: android.app.IBackupAgent bindToAgent(android.content.pm.ApplicationInfo)>(r26);

     label02:
        if r27 != null goto label05;

     label03:
        r28 = new java.lang.StringBuilder;

        specialinvoke r28.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed binding to BackupAgent for package ");

        $r13 = r0.<com.android.server.backup.KeyValueAdbBackupEngine: android.content.pm.PackageInfo mCurrentPackage>;

        $r14 = $r13.<android.content.pm.PackageInfo: java.lang.String packageName>;

        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke r28.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("KeyValueAdbBackupEngine", $r16);

     label04:
        specialinvoke r0.<com.android.server.backup.KeyValueAdbBackupEngine: void cleanup()>();

        return;

     label05:
        $r5 = r0.<com.android.server.backup.KeyValueAdbBackupEngine: android.content.pm.PackageInfo mCurrentPackage>;

        $r6 = $r5.<android.content.pm.PackageInfo: java.lang.String packageName>;

        $z0 = specialinvoke r0.<com.android.server.backup.KeyValueAdbBackupEngine: boolean invokeAgentForAdbBackup(java.lang.String,android.app.IBackupAgent)>($r6, r27);

        if $z0 != 0 goto label07;

        r29 = new java.lang.StringBuilder;

        specialinvoke r29.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Backup Failed for package ");

        $r8 = r0.<com.android.server.backup.KeyValueAdbBackupEngine: android.content.pm.PackageInfo mCurrentPackage>;

        $r9 = $r8.<android.content.pm.PackageInfo: java.lang.String packageName>;

        virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke r29.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("KeyValueAdbBackupEngine", $r11);

     label06:
        specialinvoke r0.<com.android.server.backup.KeyValueAdbBackupEngine: void cleanup()>();

        return;

     label07:
        specialinvoke r0.<com.android.server.backup.KeyValueAdbBackupEngine: void writeBackupData()>();

     label08:
        specialinvoke r0.<com.android.server.backup.KeyValueAdbBackupEngine: void cleanup()>();

        goto label13;

     label09:
        $r17 := @caughtexception;

        goto label14;

     label10:
        $r18 := @caughtexception;

     label11:
        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed creating files for package ");

        $r20 = r0.<com.android.server.backup.KeyValueAdbBackupEngine: android.content.pm.PackageInfo mCurrentPackage>;

        $r21 = $r20.<android.content.pm.PackageInfo: java.lang.String packageName>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" will ignore package. ");

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18);

        $r25 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("KeyValueAdbBackupEngine", $r25);

     label12:
        goto label08;

     label13:
        return;

     label14:
        specialinvoke r0.<com.android.server.backup.KeyValueAdbBackupEngine: void cleanup()>();

        throw $r17;

        catch java.io.FileNotFoundException from label01 to label02 with label10;
        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.io.FileNotFoundException from label03 to label04 with label10;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.io.FileNotFoundException from label05 to label06 with label10;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.io.FileNotFoundException from label07 to label08 with label10;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label11 to label12 with label09;
    }

    public static void <clinit>()
    {
        <com.android.server.backup.KeyValueAdbBackupEngine: java.lang.String TAG> = "KeyValueAdbBackupEngine";

        <com.android.server.backup.KeyValueAdbBackupEngine: boolean DEBUG> = 0;

        <com.android.server.backup.KeyValueAdbBackupEngine: java.lang.String BACKUP_KEY_VALUE_NEW_STATE_FILENAME_SUFFIX> = ".new";

        <com.android.server.backup.KeyValueAdbBackupEngine: java.lang.String BACKUP_KEY_VALUE_DIRECTORY_NAME> = "key_value_dir";

        <com.android.server.backup.KeyValueAdbBackupEngine: java.lang.String BACKUP_KEY_VALUE_BLANK_STATE_FILENAME> = "blank_state";

        <com.android.server.backup.KeyValueAdbBackupEngine: java.lang.String BACKUP_KEY_VALUE_BACKUP_DATA_FILENAME_SUFFIX> = ".data";

        return;
    }
}
