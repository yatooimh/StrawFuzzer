public class com.android.server.backup.KeyValueBackupJob extends android.app.job.JobService
{
    private static final long MAX_DEFERRAL;
    public static final int MAX_JOB_ID;
    public static final int MIN_JOB_ID;
    private static final java.lang.String TAG;
    private static final java.lang.String USER_ID_EXTRA_KEY;
    private static android.content.ComponentName sKeyValueJobService;
    private static final android.util.SparseLongArray sNextScheduledForUserId;
    private static final android.util.SparseBooleanArray sScheduledForUserId;

    static void <clinit>()
    {
        android.content.ComponentName $r0;
        java.lang.Class $r1;
        java.lang.String $r2;
        android.util.SparseBooleanArray $r3;
        android.util.SparseLongArray $r4;

        <com.android.server.backup.KeyValueBackupJob: java.lang.String USER_ID_EXTRA_KEY> = "userId";

        <com.android.server.backup.KeyValueBackupJob: java.lang.String TAG> = "KeyValueBackupJob";

        <com.android.server.backup.KeyValueBackupJob: int MIN_JOB_ID> = 52417896;

        <com.android.server.backup.KeyValueBackupJob: int MAX_JOB_ID> = 52418896;

        <com.android.server.backup.KeyValueBackupJob: long MAX_DEFERRAL> = 86400000L;

        $r0 = new android.content.ComponentName;

        $r1 = class "Lcom/android/server/backup/KeyValueBackupJob;";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        specialinvoke $r0.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>("android", $r2);

        <com.android.server.backup.KeyValueBackupJob: android.content.ComponentName sKeyValueJobService> = $r0;

        $r3 = new android.util.SparseBooleanArray;

        specialinvoke $r3.<android.util.SparseBooleanArray: void <init>()>();

        <com.android.server.backup.KeyValueBackupJob: android.util.SparseBooleanArray sScheduledForUserId> = $r3;

        $r4 = new android.util.SparseLongArray;

        specialinvoke $r4.<android.util.SparseLongArray: void <init>()>();

        <com.android.server.backup.KeyValueBackupJob: android.util.SparseLongArray sNextScheduledForUserId> = $r4;

        return;
    }

    public void <init>()
    {
        com.android.server.backup.KeyValueBackupJob r0;

        r0 := @this: com.android.server.backup.KeyValueBackupJob;

        specialinvoke r0.<android.app.job.JobService: void <init>()>();

        return;
    }

    public static void cancel(int, android.content.Context)
    {
        int i0, $i1;
        java.lang.Object $r0;
        android.app.job.JobScheduler $r1;
        java.lang.Throwable $r2;
        android.content.Context r3;

        i0 := @parameter0: int;

        r3 := @parameter1: android.content.Context;

        entermonitor class "Lcom/android/server/backup/KeyValueBackupJob;";

     label1:
        $r0 = virtualinvoke r3.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("jobscheduler");

        $r1 = (android.app.job.JobScheduler) $r0;

        $i1 = staticinvoke <com.android.server.backup.KeyValueBackupJob: int getJobIdForUserId(int)>(i0);

        virtualinvoke $r1.<android.app.job.JobScheduler: void cancel(int)>($i1);

        staticinvoke <com.android.server.backup.KeyValueBackupJob: void clearScheduledForUserId(int)>(i0);

        exitmonitor class "Lcom/android/server/backup/KeyValueBackupJob;";

     label2:
        return;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor class "Lcom/android/server/backup/KeyValueBackupJob;";

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private static void clearScheduledForUserId(int)
    {
        int i0;
        android.util.SparseBooleanArray $r0;
        android.util.SparseLongArray $r1;

        i0 := @parameter0: int;

        $r0 = <com.android.server.backup.KeyValueBackupJob: android.util.SparseBooleanArray sScheduledForUserId>;

        virtualinvoke $r0.<android.util.SparseBooleanArray: void delete(int)>(i0);

        $r1 = <com.android.server.backup.KeyValueBackupJob: android.util.SparseLongArray sNextScheduledForUserId>;

        virtualinvoke $r1.<android.util.SparseLongArray: void delete(int)>(i0);

        return;
    }

    private static int getJobIdForUserId(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        $i1 = staticinvoke <com.android.server.backup.JobIdManager: int getJobIdForUserId(int,int,int)>(52417896, 52418896, i0);

        return $i1;
    }

    public static boolean isScheduled(int)
    {
        int i0;
        boolean z0;
        android.util.SparseBooleanArray $r1;
        java.lang.Throwable $r2;

        i0 := @parameter0: int;

        entermonitor class "Lcom/android/server/backup/KeyValueBackupJob;";

     label1:
        $r1 = <com.android.server.backup.KeyValueBackupJob: android.util.SparseBooleanArray sScheduledForUserId>;

        z0 = virtualinvoke $r1.<android.util.SparseBooleanArray: boolean get(int)>(i0);

        exitmonitor class "Lcom/android/server/backup/KeyValueBackupJob;";

     label2:
        return z0;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor class "Lcom/android/server/backup/KeyValueBackupJob;";

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public static long nextScheduled(int)
    {
        int i0;
        long l1;
        android.util.SparseLongArray $r1;
        java.lang.Throwable $r2;

        i0 := @parameter0: int;

        entermonitor class "Lcom/android/server/backup/KeyValueBackupJob;";

     label1:
        $r1 = <com.android.server.backup.KeyValueBackupJob: android.util.SparseLongArray sNextScheduledForUserId>;

        l1 = virtualinvoke $r1.<android.util.SparseLongArray: long get(int)>(i0);

        exitmonitor class "Lcom/android/server/backup/KeyValueBackupJob;";

     label2:
        return l1;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor class "Lcom/android/server/backup/KeyValueBackupJob;";

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public static void schedule(int, android.content.Context, long, com.android.server.backup.BackupManagerConstants)
    {
        int i0, i3, i4, $i9, $i13;
        long l1, l2, $l6, $l7, $l11, $l12, $l14, l15;
        boolean z0, $z1;
        android.os.Bundle r0;
        android.util.SparseBooleanArray $r1, $r14;
        byte $b5;
        java.lang.String $r5;
        android.content.ComponentName $r6;
        android.app.job.JobInfo$Builder $r7, $r8, $r9, r26, r27;
        java.lang.Object $r11;
        android.app.job.JobScheduler $r12;
        android.app.job.JobInfo $r13;
        android.util.SparseLongArray $r15;
        java.lang.Throwable $r16, $r17, $r18, $r19, $r20, $r21, r28, r29;
        android.content.Context r22;
        com.android.server.backup.BackupManagerConstants r23;
        java.util.Random r24;
        java.lang.StringBuilder r25;

        i0 := @parameter0: int;

        r22 := @parameter1: android.content.Context;

        l15 := @parameter2: long;

        r23 := @parameter3: com.android.server.backup.BackupManagerConstants;

        entermonitor class "Lcom/android/server/backup/KeyValueBackupJob;";

     label01:
        $r1 = <com.android.server.backup.KeyValueBackupJob: android.util.SparseBooleanArray sScheduledForUserId>;

        $z1 = virtualinvoke $r1.<android.util.SparseBooleanArray: boolean get(int)>(i0);

        if $z1 == 0 goto label03;

        exitmonitor class "Lcom/android/server/backup/KeyValueBackupJob;";

     label02:
        return;

     label03:
        entermonitor r23;

     label04:
        l1 = virtualinvoke r23.<com.android.server.backup.BackupManagerConstants: long getKeyValueBackupIntervalMilliseconds()>();

        l2 = virtualinvoke r23.<com.android.server.backup.BackupManagerConstants: long getKeyValueBackupFuzzMilliseconds()>();

        i3 = virtualinvoke r23.<com.android.server.backup.BackupManagerConstants: int getKeyValueBackupRequiredNetworkType()>();

        z0 = virtualinvoke r23.<com.android.server.backup.BackupManagerConstants: boolean getKeyValueBackupRequireCharging()>();

        exitmonitor r23;

     label05:
        $b5 = l15 cmp 0L;

        if $b5 > 0 goto label08;

     label06:
        r24 = new java.util.Random;

        specialinvoke r24.<java.util.Random: void <init>()>();

        $i13 = (int) l2;

        i4 = virtualinvoke r24.<java.util.Random: int nextInt(int)>($i13);

     label07:
        $l14 = (long) i4;

        l15 = $l14 + l1;

        goto label08;

     label08:
        r25 = new java.lang.StringBuilder;

        specialinvoke r25.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Scheduling k/v pass in ");

        $l6 = l15 / 1000L;

        $l7 = $l6 / 60L;

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l7);

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" minutes");

        $r5 = virtualinvoke r25.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("KeyValueBackupJob", $r5);

        r26 = new android.app.job.JobInfo$Builder;

        $i9 = staticinvoke <com.android.server.backup.KeyValueBackupJob: int getJobIdForUserId(int)>(i0);

        $r6 = <com.android.server.backup.KeyValueBackupJob: android.content.ComponentName sKeyValueJobService>;

        specialinvoke r26.<android.app.job.JobInfo$Builder: void <init>(int,android.content.ComponentName)>($i9, $r6);

        $r7 = virtualinvoke r26.<android.app.job.JobInfo$Builder: android.app.job.JobInfo$Builder setMinimumLatency(long)>(l15);

        $r8 = virtualinvoke $r7.<android.app.job.JobInfo$Builder: android.app.job.JobInfo$Builder setRequiredNetworkType(int)>(i3);

        $r9 = virtualinvoke $r8.<android.app.job.JobInfo$Builder: android.app.job.JobInfo$Builder setRequiresCharging(boolean)>(z0);

        r27 = virtualinvoke $r9.<android.app.job.JobInfo$Builder: android.app.job.JobInfo$Builder setOverrideDeadline(long)>(86400000L);

        r0 = new android.os.Bundle;

        specialinvoke r0.<android.os.Bundle: void <init>()>();

        virtualinvoke r0.<android.os.Bundle: void putInt(java.lang.String,int)>("userId", i0);

        virtualinvoke r27.<android.app.job.JobInfo$Builder: android.app.job.JobInfo$Builder setTransientExtras(android.os.Bundle)>(r0);

     label09:
        $r11 = virtualinvoke r22.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("jobscheduler");

        $r12 = (android.app.job.JobScheduler) $r11;

        $r13 = virtualinvoke r27.<android.app.job.JobInfo$Builder: android.app.job.JobInfo build()>();

        virtualinvoke $r12.<android.app.job.JobScheduler: int schedule(android.app.job.JobInfo)>($r13);

        $r14 = <com.android.server.backup.KeyValueBackupJob: android.util.SparseBooleanArray sScheduledForUserId>;

        virtualinvoke $r14.<android.util.SparseBooleanArray: void put(int,boolean)>(i0, 1);

        $r15 = <com.android.server.backup.KeyValueBackupJob: android.util.SparseLongArray sNextScheduledForUserId>;

        $l11 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l12 = $l11 + l15;

        virtualinvoke $r15.<android.util.SparseLongArray: void put(int,long)>(i0, $l12);

        exitmonitor class "Lcom/android/server/backup/KeyValueBackupJob;";

     label10:
        return;

     label11:
        $r16 := @caughtexception;

        r28 = $r16;

        goto label18;

     label12:
        $r20 := @caughtexception;

        r29 = $r20;

     label13:
        exitmonitor r23;

     label14:
        throw r29;

     label15:
        $r18 := @caughtexception;

        r28 = $r18;

        goto label18;

     label16:
        $r19 := @caughtexception;

        r29 = $r19;

        goto label13;

     label17:
        $r17 := @caughtexception;

        r28 = $r17;

     label18:
        exitmonitor class "Lcom/android/server/backup/KeyValueBackupJob;";

     label19:
        throw r28;

     label20:
        $r21 := @caughtexception;

        r28 = $r21;

        goto label18;

        catch java.lang.Throwable from label01 to label02 with label17;
        catch java.lang.Throwable from label03 to label04 with label17;
        catch java.lang.Throwable from label04 to label05 with label12;
        catch java.lang.Throwable from label06 to label07 with label17;
        catch java.lang.Throwable from label08 to label09 with label11;
        catch java.lang.Throwable from label09 to label10 with label20;
        catch java.lang.Throwable from label13 to label14 with label16;
        catch java.lang.Throwable from label14 to label15 with label15;
        catch java.lang.Throwable from label18 to label19 with label20;
    }

    public static void schedule(int, android.content.Context, com.android.server.backup.BackupManagerConstants)
    {
        int i0;
        android.content.Context r0;
        com.android.server.backup.BackupManagerConstants r1;

        i0 := @parameter0: int;

        r0 := @parameter1: android.content.Context;

        r1 := @parameter2: com.android.server.backup.BackupManagerConstants;

        staticinvoke <com.android.server.backup.KeyValueBackupJob: void schedule(int,android.content.Context,long,com.android.server.backup.BackupManagerConstants)>(i0, r0, 0L, r1);

        return;
    }

    public boolean onStartJob(android.app.job.JobParameters)
    {
        com.android.server.backup.KeyValueBackupJob r0;
        int i0;
        android.os.Bundle $r1;
        android.os.RemoteException $r2;
        java.lang.Throwable $r3;
        android.app.job.JobParameters r4;
        com.android.server.backup.BackupManagerService r5;

        r0 := @this: com.android.server.backup.KeyValueBackupJob;

        r4 := @parameter0: android.app.job.JobParameters;

        $r1 = virtualinvoke r4.<android.app.job.JobParameters: android.os.Bundle getTransientExtras()>();

        i0 = virtualinvoke $r1.<android.os.Bundle: int getInt(java.lang.String)>("userId");

        entermonitor class "Lcom/android/server/backup/KeyValueBackupJob;";

     label1:
        staticinvoke <com.android.server.backup.KeyValueBackupJob: void clearScheduledForUserId(int)>(i0);

        exitmonitor class "Lcom/android/server/backup/KeyValueBackupJob;";

     label2:
        r5 = staticinvoke <com.android.server.backup.BackupManagerService: com.android.server.backup.BackupManagerService getInstance()>();

     label3:
        virtualinvoke r5.<com.android.server.backup.BackupManagerService: void backupNowForUser(int)>(i0);

     label4:
        goto label6;

     label5:
        $r2 := @caughtexception;

        goto label4;

     label6:
        return 0;

     label7:
        $r3 := @caughtexception;

     label8:
        exitmonitor class "Lcom/android/server/backup/KeyValueBackupJob;";

     label9:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch android.os.RemoteException from label3 to label4 with label5;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public boolean onStopJob(android.app.job.JobParameters)
    {
        com.android.server.backup.KeyValueBackupJob r0;
        android.app.job.JobParameters r1;

        r0 := @this: com.android.server.backup.KeyValueBackupJob;

        r1 := @parameter0: android.app.job.JobParameters;

        return 0;
    }
}
