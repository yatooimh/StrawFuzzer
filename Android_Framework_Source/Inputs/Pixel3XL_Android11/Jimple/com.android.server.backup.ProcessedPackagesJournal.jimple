final class com.android.server.backup.ProcessedPackagesJournal extends java.lang.Object
{
    private static final boolean DEBUG;
    private static final java.lang.String JOURNAL_FILE_NAME;
    private static final java.lang.String TAG;
    private final java.util.Set mProcessedPackages;
    private final java.io.File mStateDirectory;

    void <init>(java.io.File)
    {
        com.android.server.backup.ProcessedPackagesJournal r0;
        java.io.File r1;
        java.util.HashSet $r2;

        r0 := @this: com.android.server.backup.ProcessedPackagesJournal;

        r1 := @parameter0: java.io.File;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        r0.<com.android.server.backup.ProcessedPackagesJournal: java.util.Set mProcessedPackages> = $r2;

        r0.<com.android.server.backup.ProcessedPackagesJournal: java.io.File mStateDirectory> = r1;

        return;
    }

    private void loadFromDisk()
    {
        com.android.server.backup.ProcessedPackagesJournal r0;
        java.io.File $r2, $r3;
        boolean $z0;
        java.lang.String $r6, r15;
        java.util.Set $r7;
        java.lang.Throwable $r8, $r9, $r10, $r11;
        java.io.DataInputStream r12;
        java.io.BufferedInputStream r13;
        java.io.FileInputStream r14;
        java.lang.StringBuilder r16;

        r0 := @this: com.android.server.backup.ProcessedPackagesJournal;

        $r2 = new java.io.File;

        $r3 = r0.<com.android.server.backup.ProcessedPackagesJournal: java.io.File mStateDirectory>;

        specialinvoke $r2.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, "processed");

        $z0 = virtualinvoke $r2.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label01;

        return;

     label01:
        r12 = new java.io.DataInputStream;

        r13 = new java.io.BufferedInputStream;

        r14 = new java.io.FileInputStream;

        specialinvoke r14.<java.io.FileInputStream: void <init>(java.io.File)>($r2);

        specialinvoke r13.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>(r14);

        specialinvoke r12.<java.io.DataInputStream: void <init>(java.io.InputStream)>(r13);

     label02:
        r15 = virtualinvoke r12.<java.io.DataInputStream: java.lang.String readUTF()>();

        r16 = new java.lang.StringBuilder;

        specialinvoke r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("   + ");

        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);

        $r6 = virtualinvoke r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("ProcessedPackagesJournal", $r6);

        $r7 = r0.<com.android.server.backup.ProcessedPackagesJournal: java.util.Set mProcessedPackages>;

        interfaceinvoke $r7.<java.util.Set: boolean add(java.lang.Object)>(r15);

     label03:
        goto label02;

     label04:
        $r11 := @caughtexception;

     label05:
        virtualinvoke r12.<java.io.DataInputStream: void close()>();

     label06:
        goto label09;

     label07:
        $r9 := @caughtexception;

     label08:
        virtualinvoke $r11.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r9);

     label09:
        throw $r11;

     label10:
        $r8 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ProcessedPackagesJournal", "Error reading processed packages journal", $r8);

        goto label12;

     label11:
        $r10 := @caughtexception;

     label12:
        return;

        catch java.io.EOFException from label01 to label02 with label11;
        catch java.io.IOException from label01 to label02 with label10;
        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.io.EOFException from label08 to label09 with label11;
        catch java.io.IOException from label08 to label09 with label10;
        catch java.io.EOFException from label09 to label10 with label11;
        catch java.io.IOException from label09 to label10 with label10;
    }

    void addPackage(java.lang.String)
    {
        com.android.server.backup.ProcessedPackagesJournal r0;
        java.util.Set r1, $r3;
        java.io.File r2, $r4;
        boolean $z0;
        long $l0;
        java.lang.Throwable $r5, $r6, $r7, $r13;
        java.lang.String $r12, r14;
        java.io.RandomAccessFile r15;
        java.lang.StringBuilder r19;

        r0 := @this: com.android.server.backup.ProcessedPackagesJournal;

        r14 := @parameter0: java.lang.String;

        r1 = r0.<com.android.server.backup.ProcessedPackagesJournal: java.util.Set mProcessedPackages>;

        entermonitor r1;

     label01:
        $r3 = r0.<com.android.server.backup.ProcessedPackagesJournal: java.util.Set mProcessedPackages>;

        $z0 = interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>(r14);

        if $z0 != 0 goto label03;

        exitmonitor r1;

     label02:
        return;

     label03:
        r2 = new java.io.File;

        $r4 = r0.<com.android.server.backup.ProcessedPackagesJournal: java.io.File mStateDirectory>;

        specialinvoke r2.<java.io.File: void <init>(java.io.File,java.lang.String)>($r4, "processed");

     label04:
        r15 = new java.io.RandomAccessFile;

        specialinvoke r15.<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>(r2, "rws");

     label05:
        $l0 = virtualinvoke r15.<java.io.RandomAccessFile: long length()>();

        virtualinvoke r15.<java.io.RandomAccessFile: void seek(long)>($l0);

        virtualinvoke r15.<java.io.RandomAccessFile: void writeUTF(java.lang.String)>(r14);

     label06:
        virtualinvoke r15.<java.io.RandomAccessFile: void close()>();

     label07:
        goto label16;

     label08:
        $r6 := @caughtexception;

     label09:
        virtualinvoke r15.<java.io.RandomAccessFile: void close()>();

     label10:
        goto label13;

     label11:
        $r13 := @caughtexception;

     label12:
        virtualinvoke $r6.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r13);

     label13:
        throw $r6;

     label14:
        $r7 := @caughtexception;

     label15:
        r19 = new java.lang.StringBuilder;

        specialinvoke r19.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t log backup of ");

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r14);

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r12 = virtualinvoke r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ProcessedPackagesJournal", $r12);

     label16:
        exitmonitor r1;

     label17:
        return;

     label18:
        $r5 := @caughtexception;

     label19:
        exitmonitor r1;

     label20:
        throw $r5;

        catch java.lang.Throwable from label01 to label02 with label18;
        catch java.lang.Throwable from label03 to label04 with label18;
        catch java.io.IOException from label04 to label05 with label14;
        catch java.lang.Throwable from label04 to label05 with label18;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.io.IOException from label06 to label07 with label14;
        catch java.lang.Throwable from label06 to label07 with label18;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.io.IOException from label12 to label13 with label14;
        catch java.lang.Throwable from label12 to label13 with label18;
        catch java.io.IOException from label13 to label14 with label14;
        catch java.lang.Throwable from label13 to label14 with label18;
        catch java.lang.Throwable from label15 to label16 with label18;
        catch java.lang.Throwable from label16 to label17 with label18;
        catch java.lang.Throwable from label19 to label20 with label18;
    }

    java.util.Set getPackagesCopy()
    {
        com.android.server.backup.ProcessedPackagesJournal r0;
        java.util.Set r1, $r2;
        java.lang.Throwable $r3;
        java.util.HashSet r4;

        r0 := @this: com.android.server.backup.ProcessedPackagesJournal;

        r1 = r0.<com.android.server.backup.ProcessedPackagesJournal: java.util.Set mProcessedPackages>;

        entermonitor r1;

     label1:
        r4 = new java.util.HashSet;

        $r2 = r0.<com.android.server.backup.ProcessedPackagesJournal: java.util.Set mProcessedPackages>;

        specialinvoke r4.<java.util.HashSet: void <init>(java.util.Collection)>($r2);

        exitmonitor r1;

     label2:
        return r4;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    boolean hasBeenProcessed(java.lang.String)
    {
        com.android.server.backup.ProcessedPackagesJournal r0;
        java.util.Set r1, $r2;
        boolean z0;
        java.lang.Throwable $r3;
        java.lang.String r4;

        r0 := @this: com.android.server.backup.ProcessedPackagesJournal;

        r4 := @parameter0: java.lang.String;

        r1 = r0.<com.android.server.backup.ProcessedPackagesJournal: java.util.Set mProcessedPackages>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.backup.ProcessedPackagesJournal: java.util.Set mProcessedPackages>;

        z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>(r4);

        exitmonitor r1;

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    void init()
    {
        com.android.server.backup.ProcessedPackagesJournal r0;
        java.util.Set r1;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.backup.ProcessedPackagesJournal;

        r1 = r0.<com.android.server.backup.ProcessedPackagesJournal: java.util.Set mProcessedPackages>;

        entermonitor r1;

     label1:
        specialinvoke r0.<com.android.server.backup.ProcessedPackagesJournal: void loadFromDisk()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    void reset()
    {
        com.android.server.backup.ProcessedPackagesJournal r0;
        java.util.Set r1, $r2;
        java.io.File $r3, r5;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.backup.ProcessedPackagesJournal;

        r1 = r0.<com.android.server.backup.ProcessedPackagesJournal: java.util.Set mProcessedPackages>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.server.backup.ProcessedPackagesJournal: java.util.Set mProcessedPackages>;

        interfaceinvoke $r2.<java.util.Set: void clear()>();

        r5 = new java.io.File;

        $r3 = r0.<com.android.server.backup.ProcessedPackagesJournal: java.io.File mStateDirectory>;

        specialinvoke r5.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, "processed");

        virtualinvoke r5.<java.io.File: boolean delete()>();

     label2:
        exitmonitor r1;

     label3:
        return;

     label4:
        $r4 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public static void <clinit>()
    {
        <com.android.server.backup.ProcessedPackagesJournal: java.lang.String TAG> = "ProcessedPackagesJournal";

        <com.android.server.backup.ProcessedPackagesJournal: java.lang.String JOURNAL_FILE_NAME> = "processed";

        <com.android.server.backup.ProcessedPackagesJournal: boolean DEBUG> = 1;

        return;
    }
}
