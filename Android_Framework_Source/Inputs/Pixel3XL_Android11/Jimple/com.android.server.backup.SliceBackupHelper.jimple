public class com.android.server.backup.SliceBackupHelper extends android.app.backup.BlobBackupHelper
{
    static final int BLOB_VERSION;
    static final boolean DEBUG;
    static final java.lang.String KEY_SLICES;
    static final java.lang.String TAG;

    static void <clinit>()
    {
        boolean $z0;

        <com.android.server.backup.SliceBackupHelper: java.lang.String TAG> = "SliceBackupHelper";

        <com.android.server.backup.SliceBackupHelper: java.lang.String KEY_SLICES> = "slices";

        <com.android.server.backup.SliceBackupHelper: int BLOB_VERSION> = 1;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("SliceBackupHelper", 3);

        <com.android.server.backup.SliceBackupHelper: boolean DEBUG> = $z0;

        return;
    }

    public void <init>(android.content.Context)
    {
        com.android.server.backup.SliceBackupHelper r0;
        android.content.Context r1;
        java.lang.String[] $r2;

        r0 := @this: com.android.server.backup.SliceBackupHelper;

        r1 := @parameter0: android.content.Context;

        $r2 = newarray (java.lang.String)[1];

        $r2[0] = "slices";

        specialinvoke r0.<android.app.backup.BlobBackupHelper: void <init>(int,java.lang.String[])>(1, $r2);

        return;
    }

    protected void applyRestoredPayload(java.lang.String, byte[])
    {
        com.android.server.backup.SliceBackupHelper r0;
        byte[] r1;
        boolean $z0, $z1;
        java.lang.String $r3, $r9, r11;
        android.os.IBinder $r4;
        android.app.slice.ISliceManager $r5;
        java.lang.StringBuilder $r6;
        java.lang.Exception $r10;

        r0 := @this: com.android.server.backup.SliceBackupHelper;

        r11 := @parameter0: java.lang.String;

        r1 := @parameter1: byte[];

        $z0 = <com.android.server.backup.SliceBackupHelper: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got restore of ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("SliceBackupHelper", $r9);

     label1:
        $r3 = "slices";

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r11);

        if $z1 == 0 goto label5;

     label2:
        $r4 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("slice");

        $r5 = staticinvoke <android.app.slice.ISliceManager$Stub: android.app.slice.ISliceManager asInterface(android.os.IBinder)>($r4);

        interfaceinvoke $r5.<android.app.slice.ISliceManager: void applyRestore(byte[],int)>(r1, 0);

     label3:
        goto label5;

     label4:
        $r10 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("SliceBackupHelper", "Couldn\'t communicate with slice manager");

     label5:
        return;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    protected byte[] getBackupPayload(java.lang.String)
    {
        com.android.server.backup.SliceBackupHelper r0;
        java.lang.String $r1, r5;
        boolean $z0;
        android.os.IBinder $r2;
        android.app.slice.ISliceManager $r3;
        java.lang.Exception $r4;
        byte[] r6;

        r0 := @this: com.android.server.backup.SliceBackupHelper;

        r5 := @parameter0: java.lang.String;

        r6 = null;

        $r1 = "slices";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r5);

        if $z0 == 0 goto label4;

     label1:
        $r2 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("slice");

        $r3 = staticinvoke <android.app.slice.ISliceManager$Stub: android.app.slice.ISliceManager asInterface(android.os.IBinder)>($r2);

        r6 = interfaceinvoke $r3.<android.app.slice.ISliceManager: byte[] getBackupPayload(int)>(0);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("SliceBackupHelper", "Couldn\'t communicate with slice manager");

        r6 = null;

     label4:
        return r6;

        catch java.lang.Exception from label1 to label2 with label3;
    }
}
