final class com.android.server.backup.UserBackupManagerFilePersistedSettings extends java.lang.Object
{
    private static final java.lang.String BACKUP_ENABLE_FILE;

    void <init>()
    {
        com.android.server.backup.UserBackupManagerFilePersistedSettings r0;

        r0 := @this: com.android.server.backup.UserBackupManagerFilePersistedSettings;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static boolean readBackupEnableState(int)
    {
        int i0;
        boolean z0;
        java.io.File $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r7;

        i0 := @parameter0: int;

        $r1 = staticinvoke <com.android.server.backup.UserBackupManagerFiles: java.io.File getBaseStateDir(int)>(i0);

        z0 = staticinvoke <com.android.server.backup.UserBackupManagerFilePersistedSettings: boolean readBackupEnableState(java.io.File)>($r1);

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("user:");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" readBackupEnableState enabled:");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("BackupManagerService", $r7);

        return z0;
    }

    private static boolean readBackupEnableState(java.io.File)
    {
        int i0;
        java.io.File $r0, r7;
        boolean $z0, z1;
        java.lang.String $r3;
        java.lang.Throwable $r4, $r5, $r6;
        java.io.FileInputStream r9;
        java.lang.StringBuilder r10;

        r7 := @parameter0: java.io.File;

        $r0 = new java.io.File;

        specialinvoke $r0.<java.io.File: void <init>(java.io.File,java.lang.String)>(r7, "backup_enabled");

        $z0 = virtualinvoke $r0.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label16;

     label01:
        r9 = new java.io.FileInputStream;

        specialinvoke r9.<java.io.FileInputStream: void <init>(java.io.File)>($r0);

     label02:
        i0 = virtualinvoke r9.<java.io.FileInputStream: int read()>();

     label03:
        z1 = 1;

        if i0 == 0 goto label05;

        if i0 == 1 goto label05;

     label04:
        r10 = new java.lang.StringBuilder;

        specialinvoke r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected enabled state:");

        virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r3 = virtualinvoke r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("BackupManagerService", $r3);

     label05:
        if i0 == 0 goto label06;

        goto label07;

     label06:
        z1 = 0;

     label07:
        virtualinvoke r9.<java.io.FileInputStream: void close()>();

     label08:
        return z1;

     label09:
        $r4 := @caughtexception;

     label10:
        virtualinvoke r9.<java.io.FileInputStream: void close()>();

     label11:
        goto label14;

     label12:
        $r6 := @caughtexception;

     label13:
        virtualinvoke $r4.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r6);

     label14:
        throw $r4;

     label15:
        $r5 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("BackupManagerService", "Cannot read enable state; assuming disabled");

        goto label17;

     label16:
        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("BackupManagerService", "isBackupEnabled() => false due to absent settings file");

     label17:
        return 0;

        catch java.io.IOException from label01 to label02 with label15;
        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.io.IOException from label07 to label08 with label15;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.io.IOException from label13 to label14 with label15;
        catch java.io.IOException from label14 to label15 with label15;
    }

    static void writeBackupEnableState(int, boolean)
    {
        int i0;
        boolean z0;
        java.lang.StringBuilder $r1;
        java.lang.String $r6;
        java.io.File $r7;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("user:");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" writeBackupEnableState enable:");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r6 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("BackupManagerService", $r6);

        $r7 = staticinvoke <com.android.server.backup.UserBackupManagerFiles: java.io.File getBaseStateDir(int)>(i0);

        staticinvoke <com.android.server.backup.UserBackupManagerFilePersistedSettings: void writeBackupEnableState(java.io.File,boolean)>($r7, z0);

        return;
    }

    private static void writeBackupEnableState(java.io.File, boolean)
    {
        boolean z0, $z1;
        java.lang.Throwable $r3, $r4, $r5;
        java.lang.String $r8, $r10;
        java.io.File r11, r18, r19;
        byte b2;
        java.io.FileOutputStream r20;
        java.lang.StringBuilder r21;
        java.lang.Exception r22;

        r11 := @parameter0: java.io.File;

        z0 := @parameter1: boolean;

        r18 = new java.io.File;

        specialinvoke r18.<java.io.File: void <init>(java.io.File,java.lang.String)>(r11, "backup_enabled");

        r19 = new java.io.File;

        specialinvoke r19.<java.io.File: void <init>(java.io.File,java.lang.String)>(r11, "backup_enabled-stage");

     label01:
        r20 = new java.io.FileOutputStream;

        specialinvoke r20.<java.io.FileOutputStream: void <init>(java.io.File)>(r19);

     label02:
        if z0 == 0 goto label03;

        b2 = 1;

        goto label04;

     label03:
        b2 = 0;

     label04:
        virtualinvoke r20.<java.io.FileOutputStream: void write(int)>(b2);

        virtualinvoke r20.<java.io.FileOutputStream: void close()>();

        $z1 = virtualinvoke r19.<java.io.File: boolean renameTo(java.io.File)>(r18);

        if $z1 != 0 goto label05;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("BackupManagerService", "Write enable failed as could not rename staging file to actual");

     label05:
        virtualinvoke r20.<java.io.FileOutputStream: void close()>();

     label06:
        goto label14;

     label07:
        $r3 := @caughtexception;

     label08:
        virtualinvoke r20.<java.io.FileOutputStream: void close()>();

     label09:
        goto label12;

     label10:
        $r4 := @caughtexception;

     label11:
        virtualinvoke $r3.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r4);

     label12:
        throw $r3;

     label13:
        $r5 := @caughtexception;

        r21 = new java.lang.StringBuilder;

        specialinvoke r21.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to record backup enable state; reverting to disabled: ");

        r22 = (java.lang.Exception) $r5;

        $r8 = virtualinvoke r22.<java.lang.Exception: java.lang.String getMessage()>();

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("BackupManagerService", $r10);

        virtualinvoke r18.<java.io.File: boolean delete()>();

        virtualinvoke r19.<java.io.File: boolean delete()>();

     label14:
        return;

        catch java.io.IOException from label01 to label02 with label13;
        catch java.lang.RuntimeException from label01 to label02 with label13;
        catch java.lang.Throwable from label04 to label05 with label07;
        catch java.io.IOException from label05 to label06 with label13;
        catch java.lang.RuntimeException from label05 to label06 with label13;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.io.IOException from label11 to label12 with label13;
        catch java.lang.RuntimeException from label11 to label12 with label13;
        catch java.io.IOException from label12 to label13 with label13;
        catch java.lang.RuntimeException from label12 to label13 with label13;
    }

    public static void <clinit>()
    {
        <com.android.server.backup.UserBackupManagerFilePersistedSettings: java.lang.String BACKUP_ENABLE_FILE> = "backup_enabled";

        return;
    }
}
