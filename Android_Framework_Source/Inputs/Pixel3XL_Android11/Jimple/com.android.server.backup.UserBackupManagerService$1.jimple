class com.android.server.backup.UserBackupManagerService$1 extends java.lang.Object implements java.lang.Runnable
{
    final com.android.server.backup.UserBackupManagerService this$0;

    void <init>(com.android.server.backup.UserBackupManagerService)
    {
        com.android.server.backup.UserBackupManagerService$1 r0;
        com.android.server.backup.UserBackupManagerService r1;

        r0 := @this: com.android.server.backup.UserBackupManagerService$1;

        r1 := @parameter0: com.android.server.backup.UserBackupManagerService;

        r0.<com.android.server.backup.UserBackupManagerService$1: com.android.server.backup.UserBackupManagerService this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        com.android.server.backup.UserBackupManagerService$1 r0;
        java.lang.Object r1, $r10;
        int i0, $i2, i4;
        com.android.server.backup.UserBackupManagerService $r2, $r3, $r5, $r8, $r14;
        java.util.ArrayList $r4, $r9;
        java.io.File $r6;
        byte[] $r7;
        java.lang.String $r11, $r15;
        long $l1;
        java.lang.Throwable $r12;
        java.lang.Exception $r13;
        java.io.ByteArrayOutputStream r16;
        java.io.DataOutputStream r17;
        com.android.server.backup.fullbackup.FullBackupEntry r18;
        android.util.AtomicFile r19;
        java.io.FileOutputStream r20;

        r0 := @this: com.android.server.backup.UserBackupManagerService$1;

        $r2 = r0.<com.android.server.backup.UserBackupManagerService$1: com.android.server.backup.UserBackupManagerService this$0>;

        r1 = staticinvoke <com.android.server.backup.UserBackupManagerService: java.lang.Object access$200(com.android.server.backup.UserBackupManagerService)>($r2);

        entermonitor r1;

     label01:
        r16 = new java.io.ByteArrayOutputStream;

        specialinvoke r16.<java.io.ByteArrayOutputStream: void <init>(int)>(4096);

        r17 = new java.io.DataOutputStream;

        specialinvoke r17.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>(r16);

        virtualinvoke r17.<java.io.DataOutputStream: void writeInt(int)>(1);

        $r3 = r0.<com.android.server.backup.UserBackupManagerService$1: com.android.server.backup.UserBackupManagerService this$0>;

        $r4 = staticinvoke <com.android.server.backup.UserBackupManagerService: java.util.ArrayList access$300(com.android.server.backup.UserBackupManagerService)>($r3);

        i0 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        virtualinvoke r17.<java.io.DataOutputStream: void writeInt(int)>(i0);

     label02:
        i4 = 0;

     label03:
        if i4 >= i0 goto label06;

     label04:
        $r8 = r0.<com.android.server.backup.UserBackupManagerService$1: com.android.server.backup.UserBackupManagerService this$0>;

        $r9 = staticinvoke <com.android.server.backup.UserBackupManagerService: java.util.ArrayList access$300(com.android.server.backup.UserBackupManagerService)>($r8);

        $r10 = virtualinvoke $r9.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        r18 = (com.android.server.backup.fullbackup.FullBackupEntry) $r10;

        $r11 = r18.<com.android.server.backup.fullbackup.FullBackupEntry: java.lang.String packageName>;

        virtualinvoke r17.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r11);

        $l1 = r18.<com.android.server.backup.fullbackup.FullBackupEntry: long lastBackup>;

        virtualinvoke r17.<java.io.DataOutputStream: void writeLong(long)>($l1);

     label05:
        i4 = i4 + 1;

        goto label03;

     label06:
        virtualinvoke r17.<java.io.DataOutputStream: void flush()>();

        r19 = new android.util.AtomicFile;

        $r5 = r0.<com.android.server.backup.UserBackupManagerService$1: com.android.server.backup.UserBackupManagerService this$0>;

        $r6 = staticinvoke <com.android.server.backup.UserBackupManagerService: java.io.File access$400(com.android.server.backup.UserBackupManagerService)>($r5);

        specialinvoke r19.<android.util.AtomicFile: void <init>(java.io.File)>($r6);

        r20 = virtualinvoke r19.<android.util.AtomicFile: java.io.FileOutputStream startWrite()>();

        $r7 = virtualinvoke r16.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        virtualinvoke r20.<java.io.FileOutputStream: void write(byte[])>($r7);

        virtualinvoke r19.<android.util.AtomicFile: void finishWrite(java.io.FileOutputStream)>(r20);

     label07:
        goto label11;

     label08:
        $r12 := @caughtexception;

        goto label13;

     label09:
        $r13 := @caughtexception;

     label10:
        $r14 = r0.<com.android.server.backup.UserBackupManagerService$1: com.android.server.backup.UserBackupManagerService this$0>;

        $i2 = staticinvoke <com.android.server.backup.UserBackupManagerService: int access$500(com.android.server.backup.UserBackupManagerService)>($r14);

        $r15 = staticinvoke <com.android.server.backup.UserBackupManagerService: java.lang.String access$000(int,java.lang.String)>($i2, "Unable to write backup schedule!");

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BackupManagerService", $r15, $r13);

     label11:
        exitmonitor r1;

     label12:
        return;

     label13:
        exitmonitor r1;

     label14:
        throw $r12;

        catch java.lang.Exception from label01 to label02 with label09;
        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Exception from label04 to label05 with label09;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Exception from label06 to label07 with label09;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label10 to label11 with label08;
        catch java.lang.Throwable from label11 to label12 with label08;
        catch java.lang.Throwable from label13 to label14 with label08;
    }
}
