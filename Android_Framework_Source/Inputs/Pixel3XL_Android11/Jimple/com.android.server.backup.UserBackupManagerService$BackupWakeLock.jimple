public class com.android.server.backup.UserBackupManagerService$BackupWakeLock extends java.lang.Object
{
    private boolean mHasQuit;
    private final android.os.PowerManager$WakeLock mPowerManagerWakeLock;
    private int mUserId;

    public void <init>(android.os.PowerManager$WakeLock, int)
    {
        com.android.server.backup.UserBackupManagerService$BackupWakeLock r0;
        android.os.PowerManager$WakeLock r1;
        int i0;

        r0 := @this: com.android.server.backup.UserBackupManagerService$BackupWakeLock;

        r1 := @parameter0: android.os.PowerManager$WakeLock;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.backup.UserBackupManagerService$BackupWakeLock: boolean mHasQuit> = 0;

        r0.<com.android.server.backup.UserBackupManagerService$BackupWakeLock: android.os.PowerManager$WakeLock mPowerManagerWakeLock> = r1;

        r0.<com.android.server.backup.UserBackupManagerService$BackupWakeLock: int mUserId> = i0;

        return;
    }

    static android.os.PowerManager$WakeLock access$100(com.android.server.backup.UserBackupManagerService$BackupWakeLock)
    {
        com.android.server.backup.UserBackupManagerService$BackupWakeLock r0;
        android.os.PowerManager$WakeLock $r1;

        r0 := @parameter0: com.android.server.backup.UserBackupManagerService$BackupWakeLock;

        $r1 = r0.<com.android.server.backup.UserBackupManagerService$BackupWakeLock: android.os.PowerManager$WakeLock mPowerManagerWakeLock>;

        return $r1;
    }

    public void acquire()
    {
        com.android.server.backup.UserBackupManagerService$BackupWakeLock r0;
        boolean $z0;
        android.os.PowerManager$WakeLock $r1, $r3, $r9;
        java.lang.String $r4, $r6, $r7, $r10, $r12, $r13;
        java.lang.Throwable $r14;
        int i2, i3;
        java.lang.StringBuilder r15, r16;

        r0 := @this: com.android.server.backup.UserBackupManagerService$BackupWakeLock;

        entermonitor r0;

     label1:
        $z0 = r0.<com.android.server.backup.UserBackupManagerService$BackupWakeLock: boolean mHasQuit>;

        if $z0 == 0 goto label3;

        i2 = r0.<com.android.server.backup.UserBackupManagerService$BackupWakeLock: int mUserId>;

        r15 = new java.lang.StringBuilder;

        specialinvoke r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignore wakelock acquire after quit: ");

        $r9 = r0.<com.android.server.backup.UserBackupManagerService$BackupWakeLock: android.os.PowerManager$WakeLock mPowerManagerWakeLock>;

        $r10 = virtualinvoke $r9.<android.os.PowerManager$WakeLock: java.lang.String getTag()>();

        virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke r15.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = staticinvoke <com.android.server.backup.UserBackupManagerService: java.lang.String access$000(int,java.lang.String)>(i2, $r12);

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("BackupManagerService", $r13);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r1 = r0.<com.android.server.backup.UserBackupManagerService$BackupWakeLock: android.os.PowerManager$WakeLock mPowerManagerWakeLock>;

        virtualinvoke $r1.<android.os.PowerManager$WakeLock: void acquire()>();

        i3 = r0.<com.android.server.backup.UserBackupManagerService$BackupWakeLock: int mUserId>;

        r16 = new java.lang.StringBuilder;

        specialinvoke r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Acquired wakelock:");

        $r3 = r0.<com.android.server.backup.UserBackupManagerService$BackupWakeLock: android.os.PowerManager$WakeLock mPowerManagerWakeLock>;

        $r4 = virtualinvoke $r3.<android.os.PowerManager$WakeLock: java.lang.String getTag()>();

        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke r16.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = staticinvoke <com.android.server.backup.UserBackupManagerService: java.lang.String access$000(int,java.lang.String)>(i3, $r6);

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("BackupManagerService", $r7);

     label4:
        exitmonitor r0;

        return;

     label5:
        $r14 := @caughtexception;

        exitmonitor r0;

        throw $r14;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public boolean isHeld()
    {
        com.android.server.backup.UserBackupManagerService$BackupWakeLock r0;
        boolean z0;
        android.os.PowerManager$WakeLock $r2;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.backup.UserBackupManagerService$BackupWakeLock;

        entermonitor r0;

     label1:
        $r2 = r0.<com.android.server.backup.UserBackupManagerService$BackupWakeLock: android.os.PowerManager$WakeLock mPowerManagerWakeLock>;

        z0 = virtualinvoke $r2.<android.os.PowerManager$WakeLock: boolean isHeld()>();

     label2:
        exitmonitor r0;

        return z0;

     label3:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void quit()
    {
        com.android.server.backup.UserBackupManagerService$BackupWakeLock r0;
        int i0;
        android.os.PowerManager$WakeLock $r1, $r3, $r8;
        boolean $z0;
        java.lang.String $r4, $r6, $r7;
        java.lang.Throwable $r9;
        java.lang.StringBuilder r10;

        r0 := @this: com.android.server.backup.UserBackupManagerService$BackupWakeLock;

        entermonitor r0;

     label1:
        $r1 = r0.<com.android.server.backup.UserBackupManagerService$BackupWakeLock: android.os.PowerManager$WakeLock mPowerManagerWakeLock>;

        $z0 = virtualinvoke $r1.<android.os.PowerManager$WakeLock: boolean isHeld()>();

        if $z0 == 0 goto label3;

        i0 = r0.<com.android.server.backup.UserBackupManagerService$BackupWakeLock: int mUserId>;

        r10 = new java.lang.StringBuilder;

        specialinvoke r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Releasing wakelock: ");

        $r3 = r0.<com.android.server.backup.UserBackupManagerService$BackupWakeLock: android.os.PowerManager$WakeLock mPowerManagerWakeLock>;

        $r4 = virtualinvoke $r3.<android.os.PowerManager$WakeLock: java.lang.String getTag()>();

        virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = staticinvoke <com.android.server.backup.UserBackupManagerService: java.lang.String access$000(int,java.lang.String)>(i0, $r6);

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("BackupManagerService", $r7);

        $r8 = r0.<com.android.server.backup.UserBackupManagerService$BackupWakeLock: android.os.PowerManager$WakeLock mPowerManagerWakeLock>;

        virtualinvoke $r8.<android.os.PowerManager$WakeLock: void release()>();

     label2:
        goto label1;

     label3:
        r0.<com.android.server.backup.UserBackupManagerService$BackupWakeLock: boolean mHasQuit> = 1;

     label4:
        exitmonitor r0;

        return;

     label5:
        $r9 := @caughtexception;

        exitmonitor r0;

        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void release()
    {
        com.android.server.backup.UserBackupManagerService$BackupWakeLock r0;
        boolean $z0;
        android.os.PowerManager$WakeLock $r1, $r3, $r9;
        java.lang.String $r4, $r6, $r7, $r10, $r12, $r13;
        java.lang.Throwable $r14;
        int i2, i3;
        java.lang.StringBuilder r15, r16;

        r0 := @this: com.android.server.backup.UserBackupManagerService$BackupWakeLock;

        entermonitor r0;

     label1:
        $z0 = r0.<com.android.server.backup.UserBackupManagerService$BackupWakeLock: boolean mHasQuit>;

        if $z0 == 0 goto label3;

        i2 = r0.<com.android.server.backup.UserBackupManagerService$BackupWakeLock: int mUserId>;

        r15 = new java.lang.StringBuilder;

        specialinvoke r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignore wakelock release after quit: ");

        $r9 = r0.<com.android.server.backup.UserBackupManagerService$BackupWakeLock: android.os.PowerManager$WakeLock mPowerManagerWakeLock>;

        $r10 = virtualinvoke $r9.<android.os.PowerManager$WakeLock: java.lang.String getTag()>();

        virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke r15.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = staticinvoke <com.android.server.backup.UserBackupManagerService: java.lang.String access$000(int,java.lang.String)>(i2, $r12);

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("BackupManagerService", $r13);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r1 = r0.<com.android.server.backup.UserBackupManagerService$BackupWakeLock: android.os.PowerManager$WakeLock mPowerManagerWakeLock>;

        virtualinvoke $r1.<android.os.PowerManager$WakeLock: void release()>();

        i3 = r0.<com.android.server.backup.UserBackupManagerService$BackupWakeLock: int mUserId>;

        r16 = new java.lang.StringBuilder;

        specialinvoke r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Released wakelock:");

        $r3 = r0.<com.android.server.backup.UserBackupManagerService$BackupWakeLock: android.os.PowerManager$WakeLock mPowerManagerWakeLock>;

        $r4 = virtualinvoke $r3.<android.os.PowerManager$WakeLock: java.lang.String getTag()>();

        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke r16.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = staticinvoke <com.android.server.backup.UserBackupManagerService: java.lang.String access$000(int,java.lang.String)>(i3, $r6);

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("BackupManagerService", $r7);

     label4:
        exitmonitor r0;

        return;

     label5:
        $r14 := @caughtexception;

        exitmonitor r0;

        throw $r14;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }
}
