class com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupPreflight extends java.lang.Object implements com.android.server.backup.BackupRestoreTask, com.android.server.backup.fullbackup.FullBackupPreflight
{
    private final int mCurrentOpToken;
    final java.util.concurrent.CountDownLatch mLatch;
    final long mQuota;
    final java.util.concurrent.atomic.AtomicLong mResult;
    final com.android.server.backup.transport.TransportClient mTransportClient;
    private final int mTransportFlags;
    final com.android.server.backup.fullbackup.PerformFullTransportBackupTask this$0;

    void <init>(com.android.server.backup.fullbackup.PerformFullTransportBackupTask, com.android.server.backup.transport.TransportClient, long, int, int)
    {
        com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupPreflight r0;
        com.android.server.backup.fullbackup.PerformFullTransportBackupTask r1;
        com.android.server.backup.transport.TransportClient r2;
        long l0;
        int i1, i2;
        java.util.concurrent.atomic.AtomicLong $r3;
        java.util.concurrent.CountDownLatch $r4;

        r0 := @this: com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupPreflight;

        r1 := @parameter0: com.android.server.backup.fullbackup.PerformFullTransportBackupTask;

        r2 := @parameter1: com.android.server.backup.transport.TransportClient;

        l0 := @parameter2: long;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupPreflight: com.android.server.backup.fullbackup.PerformFullTransportBackupTask this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.util.concurrent.atomic.AtomicLong;

        specialinvoke $r3.<java.util.concurrent.atomic.AtomicLong: void <init>(long)>(-1003L);

        r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupPreflight: java.util.concurrent.atomic.AtomicLong mResult> = $r3;

        $r4 = new java.util.concurrent.CountDownLatch;

        specialinvoke $r4.<java.util.concurrent.CountDownLatch: void <init>(int)>(1);

        r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupPreflight: java.util.concurrent.CountDownLatch mLatch> = $r4;

        r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupPreflight: com.android.server.backup.transport.TransportClient mTransportClient> = r2;

        r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupPreflight: long mQuota> = l0;

        r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupPreflight: int mCurrentOpToken> = i1;

        r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupPreflight: int mTransportFlags> = i2;

        return;
    }

    public void execute()
    {
        com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupPreflight r0;

        r0 := @this: com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupPreflight;

        return;
    }

    public long getExpectedSizeOrErrorCode()
    {
        com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupPreflight r0;
        com.android.server.backup.fullbackup.PerformFullTransportBackupTask $r2;
        com.android.server.backup.BackupAgentTimeoutParameters $r3;
        java.util.concurrent.TimeUnit $r4;
        java.util.concurrent.CountDownLatch $r5;
        java.util.concurrent.atomic.AtomicLong $r6;
        java.lang.Throwable $r7;
        long l0, l1;

        r0 := @this: com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupPreflight;

        $r2 = r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupPreflight: com.android.server.backup.fullbackup.PerformFullTransportBackupTask this$0>;

        $r3 = staticinvoke <com.android.server.backup.fullbackup.PerformFullTransportBackupTask: com.android.server.backup.BackupAgentTimeoutParameters access$000(com.android.server.backup.fullbackup.PerformFullTransportBackupTask)>($r2);

        l0 = virtualinvoke $r3.<com.android.server.backup.BackupAgentTimeoutParameters: long getFullBackupAgentTimeoutMillis()>();

     label1:
        $r5 = r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupPreflight: java.util.concurrent.CountDownLatch mLatch>;

        $r4 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        virtualinvoke $r5.<java.util.concurrent.CountDownLatch: boolean await(long,java.util.concurrent.TimeUnit)>(l0, $r4);

        $r6 = r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupPreflight: java.util.concurrent.atomic.AtomicLong mResult>;

        l1 = virtualinvoke $r6.<java.util.concurrent.atomic.AtomicLong: long get()>();

     label2:
        return l1;

     label3:
        $r7 := @caughtexception;

        return -1L;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }

    public void handleCancel(boolean)
    {
        com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupPreflight r0;
        boolean z0;
        java.util.concurrent.atomic.AtomicLong $r1;
        java.util.concurrent.CountDownLatch $r2;
        com.android.server.backup.fullbackup.PerformFullTransportBackupTask $r3;
        com.android.server.backup.UserBackupManagerService $r4;
        int $i0;

        r0 := @this: com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupPreflight;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupPreflight: java.util.concurrent.atomic.AtomicLong mResult>;

        virtualinvoke $r1.<java.util.concurrent.atomic.AtomicLong: void set(long)>(-1003L);

        $r2 = r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupPreflight: java.util.concurrent.CountDownLatch mLatch>;

        virtualinvoke $r2.<java.util.concurrent.CountDownLatch: void countDown()>();

        $r3 = r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupPreflight: com.android.server.backup.fullbackup.PerformFullTransportBackupTask this$0>;

        $r4 = staticinvoke <com.android.server.backup.fullbackup.PerformFullTransportBackupTask: com.android.server.backup.UserBackupManagerService access$100(com.android.server.backup.fullbackup.PerformFullTransportBackupTask)>($r3);

        $i0 = r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupPreflight: int mCurrentOpToken>;

        virtualinvoke $r4.<com.android.server.backup.UserBackupManagerService: void removeOperation(int)>($i0);

        return;
    }

    public void lambda$preflightFullBackup$0$PerformFullTransportBackupTask$SinglePackageBackupPreflight(android.app.IBackupAgent, long, android.app.backup.IBackupCallback) throws android.os.RemoteException
    {
        com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupPreflight r0;
        android.app.IBackupAgent r1;
        long l0, $l1;
        android.app.backup.IBackupCallback r2;

        r0 := @this: com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupPreflight;

        r1 := @parameter0: android.app.IBackupAgent;

        l0 := @parameter1: long;

        r2 := @parameter2: android.app.backup.IBackupCallback;

        $l1 = r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupPreflight: long mQuota>;

        interfaceinvoke r1.<android.app.IBackupAgent: void doQuotaExceeded(long,long,android.app.backup.IBackupCallback)>(l0, $l1, r2);

        return;
    }

    public void operationComplete(long)
    {
        com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupPreflight r0;
        long l0;
        java.util.concurrent.atomic.AtomicLong $r1;
        java.util.concurrent.CountDownLatch $r2;
        com.android.server.backup.fullbackup.PerformFullTransportBackupTask $r3;
        com.android.server.backup.UserBackupManagerService $r4;
        int $i1;

        r0 := @this: com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupPreflight;

        l0 := @parameter0: long;

        $r1 = r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupPreflight: java.util.concurrent.atomic.AtomicLong mResult>;

        virtualinvoke $r1.<java.util.concurrent.atomic.AtomicLong: void set(long)>(l0);

        $r2 = r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupPreflight: java.util.concurrent.CountDownLatch mLatch>;

        virtualinvoke $r2.<java.util.concurrent.CountDownLatch: void countDown()>();

        $r3 = r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupPreflight: com.android.server.backup.fullbackup.PerformFullTransportBackupTask this$0>;

        $r4 = staticinvoke <com.android.server.backup.fullbackup.PerformFullTransportBackupTask: com.android.server.backup.UserBackupManagerService access$100(com.android.server.backup.fullbackup.PerformFullTransportBackupTask)>($r3);

        $i1 = r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupPreflight: int mCurrentOpToken>;

        virtualinvoke $r4.<com.android.server.backup.UserBackupManagerService: void removeOperation(int)>($i1);

        return;
    }

    public int preflightFullBackup(android.content.pm.PackageInfo, android.app.IBackupAgent)
    {
        com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupPreflight r0;
        android.content.pm.PackageInfo r1;
        com.android.server.backup.fullbackup.PerformFullTransportBackupTask $r2, $r4, $r6, $r14;
        com.android.server.backup.BackupAgentTimeoutParameters $r3, $r15;
        com.android.server.backup.UserBackupManagerService $r5, $r7;
        int $i0, $i2, $i3, $i6, i10;
        long $l1, $l5, l8, l9;
        android.app.backup.IBackupManager $r8;
        java.util.concurrent.TimeUnit $r9;
        java.util.concurrent.CountDownLatch $r10;
        java.util.concurrent.atomic.AtomicLong $r11;
        byte $b4;
        com.android.server.backup.transport.TransportClient $r12;
        com.android.internal.backup.IBackupTransport $r13;
        java.lang.Exception $r17, $r26, r29;
        java.lang.StringBuilder $r18;
        java.lang.String $r20, $r23, $r25;
        android.app.IBackupAgent r27;
        com.android.server.backup.fullbackup._$$Lambda$PerformFullTransportBackupTask$SinglePackageBackupPreflight$hWbC3_rWMPrteAdbbM5aSW2SKD0 r28;

        r0 := @this: com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupPreflight;

        r1 := @parameter0: android.content.pm.PackageInfo;

        r27 := @parameter1: android.app.IBackupAgent;

        $r2 = r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupPreflight: com.android.server.backup.fullbackup.PerformFullTransportBackupTask this$0>;

        $r3 = staticinvoke <com.android.server.backup.fullbackup.PerformFullTransportBackupTask: com.android.server.backup.BackupAgentTimeoutParameters access$000(com.android.server.backup.fullbackup.PerformFullTransportBackupTask)>($r2);

        l8 = virtualinvoke $r3.<com.android.server.backup.BackupAgentTimeoutParameters: long getFullBackupAgentTimeoutMillis()>();

     label01:
        $r4 = r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupPreflight: com.android.server.backup.fullbackup.PerformFullTransportBackupTask this$0>;

        $r5 = staticinvoke <com.android.server.backup.fullbackup.PerformFullTransportBackupTask: com.android.server.backup.UserBackupManagerService access$100(com.android.server.backup.fullbackup.PerformFullTransportBackupTask)>($r4);

        $i0 = r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupPreflight: int mCurrentOpToken>;

        virtualinvoke $r5.<com.android.server.backup.UserBackupManagerService: void prepareOperationTimeout(int,long,com.android.server.backup.BackupRestoreTask,int)>($i0, l8, r0, 0);

        $l1 = r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupPreflight: long mQuota>;

        $i2 = r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupPreflight: int mCurrentOpToken>;

        $r6 = r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupPreflight: com.android.server.backup.fullbackup.PerformFullTransportBackupTask this$0>;

        $r7 = staticinvoke <com.android.server.backup.fullbackup.PerformFullTransportBackupTask: com.android.server.backup.UserBackupManagerService access$100(com.android.server.backup.fullbackup.PerformFullTransportBackupTask)>($r6);

        $r8 = virtualinvoke $r7.<com.android.server.backup.UserBackupManagerService: android.app.backup.IBackupManager getBackupManagerBinder()>();

        $i3 = r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupPreflight: int mTransportFlags>;

        interfaceinvoke r27.<android.app.IBackupAgent: void doMeasureFullBackup(long,int,android.app.backup.IBackupManager,int)>($l1, $i2, $r8, $i3);

        $r10 = r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupPreflight: java.util.concurrent.CountDownLatch mLatch>;

        $r9 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        virtualinvoke $r10.<java.util.concurrent.CountDownLatch: boolean await(long,java.util.concurrent.TimeUnit)>(l8, $r9);

        $r11 = r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupPreflight: java.util.concurrent.atomic.AtomicLong mResult>;

        l9 = virtualinvoke $r11.<java.util.concurrent.atomic.AtomicLong: long get()>();

     label02:
        $b4 = l9 cmp 0L;

        if $b4 >= 0 goto label03;

        $i6 = (int) l9;

        return $i6;

     label03:
        $r12 = r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupPreflight: com.android.server.backup.transport.TransportClient mTransportClient>;

        $r13 = virtualinvoke $r12.<com.android.server.backup.transport.TransportClient: com.android.internal.backup.IBackupTransport connectOrThrow(java.lang.String)>("PFTBT$SPBP.preflightFullBackup()");

        i10 = interfaceinvoke $r13.<com.android.internal.backup.IBackupTransport: int checkFullBackupSize(long)>(l9);

     label04:
        if i10 != -1005 goto label09;

     label05:
        r28 = new com.android.server.backup.fullbackup._$$Lambda$PerformFullTransportBackupTask$SinglePackageBackupPreflight$hWbC3_rWMPrteAdbbM5aSW2SKD0;

     label06:
        specialinvoke r28.<com.android.server.backup.fullbackup._$$Lambda$PerformFullTransportBackupTask$SinglePackageBackupPreflight$hWbC3_rWMPrteAdbbM5aSW2SKD0: void <init>(com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupPreflight,android.app.IBackupAgent,long)>(r0, r27, l9);

        $r14 = r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupPreflight: com.android.server.backup.fullbackup.PerformFullTransportBackupTask this$0>;

        $r15 = staticinvoke <com.android.server.backup.fullbackup.PerformFullTransportBackupTask: com.android.server.backup.BackupAgentTimeoutParameters access$000(com.android.server.backup.fullbackup.PerformFullTransportBackupTask)>($r14);

        $l5 = virtualinvoke $r15.<com.android.server.backup.BackupAgentTimeoutParameters: long getQuotaExceededTimeoutMillis()>();

        staticinvoke <com.android.server.backup.remote.RemoteCall: com.android.server.backup.remote.RemoteResult execute(com.android.server.backup.remote.RemoteCallable,long)>(r28, $l5);

     label07:
        goto label09;

     label08:
        $r26 := @caughtexception;

        r29 = $r26;

        goto label11;

     label09:
        goto label12;

     label10:
        $r17 := @caughtexception;

        r29 = $r17;

     label11:
        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception preflighting ");

        $r20 = r1.<android.content.pm.PackageInfo: java.lang.String packageName>;

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r23 = virtualinvoke r29.<java.lang.Exception: java.lang.String getMessage()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PFTBT", $r25);

        i10 = -1003;

     label12:
        return i10;

        catch java.lang.Exception from label01 to label02 with label10;
        catch java.lang.Exception from label03 to label04 with label10;
        catch java.lang.Exception from label05 to label06 with label10;
        catch java.lang.Exception from label06 to label07 with label08;
    }
}
