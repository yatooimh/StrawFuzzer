class com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupRunner extends java.lang.Object implements java.lang.Runnable, com.android.server.backup.BackupRestoreTask
{
    final java.util.concurrent.CountDownLatch mBackupLatch;
    private volatile int mBackupResult;
    private final int mCurrentOpToken;
    private com.android.server.backup.fullbackup.FullBackupEngine mEngine;
    private final int mEphemeralToken;
    private volatile boolean mIsCancelled;
    final android.os.ParcelFileDescriptor mOutput;
    final com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupPreflight mPreflight;
    final java.util.concurrent.CountDownLatch mPreflightLatch;
    private volatile int mPreflightResult;
    private final long mQuota;
    final android.content.pm.PackageInfo mTarget;
    private final int mTransportFlags;
    final com.android.server.backup.fullbackup.PerformFullTransportBackupTask this$0;

    void <init>(com.android.server.backup.fullbackup.PerformFullTransportBackupTask, android.os.ParcelFileDescriptor, android.content.pm.PackageInfo, com.android.server.backup.transport.TransportClient, long, int, int) throws java.io.IOException
    {
        com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupRunner r0;
        com.android.server.backup.fullbackup.PerformFullTransportBackupTask r1;
        android.os.ParcelFileDescriptor r2, $r6;
        android.content.pm.PackageInfo r3;
        com.android.server.backup.transport.TransportClient r4;
        long l0;
        int i1, i2, i3;
        java.io.FileDescriptor $r5;
        com.android.server.backup.UserBackupManagerService $r7;
        com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupPreflight $r8;
        java.util.concurrent.CountDownLatch $r9, $r10;

        r0 := @this: com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupRunner;

        r1 := @parameter0: com.android.server.backup.fullbackup.PerformFullTransportBackupTask;

        r2 := @parameter1: android.os.ParcelFileDescriptor;

        r3 := @parameter2: android.content.pm.PackageInfo;

        r4 := @parameter3: com.android.server.backup.transport.TransportClient;

        l0 := @parameter4: long;

        i2 := @parameter5: int;

        i1 := @parameter6: int;

        r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupRunner: com.android.server.backup.fullbackup.PerformFullTransportBackupTask this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r5 = virtualinvoke r2.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        $r6 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor dup(java.io.FileDescriptor)>($r5);

        r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupRunner: android.os.ParcelFileDescriptor mOutput> = $r6;

        r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupRunner: android.content.pm.PackageInfo mTarget> = r3;

        r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupRunner: int mCurrentOpToken> = i2;

        $r7 = staticinvoke <com.android.server.backup.fullbackup.PerformFullTransportBackupTask: com.android.server.backup.UserBackupManagerService access$100(com.android.server.backup.fullbackup.PerformFullTransportBackupTask)>(r1);

        i3 = virtualinvoke $r7.<com.android.server.backup.UserBackupManagerService: int generateRandomIntegerToken()>();

        r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupRunner: int mEphemeralToken> = i3;

        $r8 = new com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupPreflight;

        specialinvoke $r8.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupPreflight: void <init>(com.android.server.backup.fullbackup.PerformFullTransportBackupTask,com.android.server.backup.transport.TransportClient,long,int,int)>(r1, r4, l0, i3, i1);

        r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupRunner: com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupPreflight mPreflight> = $r8;

        $r9 = new java.util.concurrent.CountDownLatch;

        specialinvoke $r9.<java.util.concurrent.CountDownLatch: void <init>(int)>(1);

        r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupRunner: java.util.concurrent.CountDownLatch mPreflightLatch> = $r9;

        $r10 = new java.util.concurrent.CountDownLatch;

        specialinvoke $r10.<java.util.concurrent.CountDownLatch: void <init>(int)>(1);

        r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupRunner: java.util.concurrent.CountDownLatch mBackupLatch> = $r10;

        r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupRunner: int mPreflightResult> = -1003;

        r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupRunner: int mBackupResult> = -1003;

        r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupRunner: long mQuota> = l0;

        r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupRunner: int mTransportFlags> = i1;

        virtualinvoke r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupRunner: void registerTask()>();

        return;
    }

    public void execute()
    {
        com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupRunner r0;

        r0 := @this: com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupRunner;

        return;
    }

    int getBackupResultBlocking()
    {
        com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupRunner r0;
        long l0;
        int i1;
        com.android.server.backup.fullbackup.PerformFullTransportBackupTask $r2;
        com.android.server.backup.BackupAgentTimeoutParameters $r3;
        java.util.concurrent.TimeUnit $r4;
        java.util.concurrent.CountDownLatch $r5;
        boolean $z1;
        java.lang.Throwable $r6;

        r0 := @this: com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupRunner;

        $r2 = r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupRunner: com.android.server.backup.fullbackup.PerformFullTransportBackupTask this$0>;

        $r3 = staticinvoke <com.android.server.backup.fullbackup.PerformFullTransportBackupTask: com.android.server.backup.BackupAgentTimeoutParameters access$000(com.android.server.backup.fullbackup.PerformFullTransportBackupTask)>($r2);

        l0 = virtualinvoke $r3.<com.android.server.backup.BackupAgentTimeoutParameters: long getFullBackupAgentTimeoutMillis()>();

     label1:
        $r5 = r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupRunner: java.util.concurrent.CountDownLatch mBackupLatch>;

        $r4 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        virtualinvoke $r5.<java.util.concurrent.CountDownLatch: boolean await(long,java.util.concurrent.TimeUnit)>(l0, $r4);

        $z1 = r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupRunner: boolean mIsCancelled>;

        if $z1 == 0 goto label3;

     label2:
        return -2003;

     label3:
        i1 = r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupRunner: int mBackupResult>;

     label4:
        return i1;

     label5:
        $r6 := @caughtexception;

        return -1003;

        catch java.lang.InterruptedException from label1 to label2 with label5;
        catch java.lang.InterruptedException from label3 to label4 with label5;
    }

    long getPreflightResultBlocking()
    {
        com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupRunner r0;
        long l0, $l3, $l4;
        int i1, $i2;
        com.android.server.backup.fullbackup.PerformFullTransportBackupTask $r2;
        com.android.server.backup.BackupAgentTimeoutParameters $r3;
        java.util.concurrent.TimeUnit $r4;
        java.util.concurrent.CountDownLatch $r5;
        boolean $z1;
        com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupPreflight $r6;
        java.lang.Throwable $r7;

        r0 := @this: com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupRunner;

        $r2 = r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupRunner: com.android.server.backup.fullbackup.PerformFullTransportBackupTask this$0>;

        $r3 = staticinvoke <com.android.server.backup.fullbackup.PerformFullTransportBackupTask: com.android.server.backup.BackupAgentTimeoutParameters access$000(com.android.server.backup.fullbackup.PerformFullTransportBackupTask)>($r2);

        l0 = virtualinvoke $r3.<com.android.server.backup.BackupAgentTimeoutParameters: long getFullBackupAgentTimeoutMillis()>();

     label1:
        $r5 = r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupRunner: java.util.concurrent.CountDownLatch mPreflightLatch>;

        $r4 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        virtualinvoke $r5.<java.util.concurrent.CountDownLatch: boolean await(long,java.util.concurrent.TimeUnit)>(l0, $r4);

        $z1 = r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupRunner: boolean mIsCancelled>;

        if $z1 == 0 goto label3;

     label2:
        return -2003L;

     label3:
        $i2 = r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupRunner: int mPreflightResult>;

        if $i2 != 0 goto label4;

        $r6 = r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupRunner: com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupPreflight mPreflight>;

        $l4 = virtualinvoke $r6.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupPreflight: long getExpectedSizeOrErrorCode()>();

        return $l4;

     label4:
        i1 = r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupRunner: int mPreflightResult>;

     label5:
        $l3 = (long) i1;

        return $l3;

     label6:
        $r7 := @caughtexception;

        return -1003L;

        catch java.lang.InterruptedException from label1 to label2 with label6;
        catch java.lang.InterruptedException from label3 to label4 with label6;
        catch java.lang.InterruptedException from label4 to label5 with label6;
    }

    public void handleCancel(boolean)
    {
        com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupRunner r0;
        boolean z0;
        java.lang.StringBuilder $r1;
        android.content.pm.PackageInfo $r3, $r9, $r16;
        java.lang.String $r4, $r6;
        android.app.backup.IBackupManagerMonitor $r7, $r10;
        com.android.server.backup.fullbackup.PerformFullTransportBackupTask $r8, $r12, $r14, $r20, r23;
        com.android.server.backup.UserBackupManagerService $r13, $r15, $r21;
        int $i1, $i2;
        android.content.pm.ApplicationInfo $r17;
        java.util.concurrent.CountDownLatch $r18, $r19;

        r0 := @this: com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupRunner;

        z0 := @parameter0: boolean;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Full backup cancel of ");

        $r3 = r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupRunner: android.content.pm.PackageInfo mTarget>;

        $r4 = $r3.<android.content.pm.PackageInfo: java.lang.String packageName>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PFTBT", $r6);

        r23 = r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupRunner: com.android.server.backup.fullbackup.PerformFullTransportBackupTask this$0>;

        $r7 = staticinvoke <com.android.server.backup.fullbackup.PerformFullTransportBackupTask: android.app.backup.IBackupManagerMonitor access$200(com.android.server.backup.fullbackup.PerformFullTransportBackupTask)>(r23);

        $r8 = r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupRunner: com.android.server.backup.fullbackup.PerformFullTransportBackupTask this$0>;

        $r9 = $r8.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask: android.content.pm.PackageInfo mCurrentPackage>;

        $r10 = staticinvoke <com.android.server.backup.utils.BackupManagerMonitorUtils: android.app.backup.IBackupManagerMonitor monitorEvent(android.app.backup.IBackupManagerMonitor,int,android.content.pm.PackageInfo,int,android.os.Bundle)>($r7, 4, $r9, 2, null);

        staticinvoke <com.android.server.backup.fullbackup.PerformFullTransportBackupTask: android.app.backup.IBackupManagerMonitor access$202(com.android.server.backup.fullbackup.PerformFullTransportBackupTask,android.app.backup.IBackupManagerMonitor)>(r23, $r10);

        r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupRunner: boolean mIsCancelled> = 1;

        $r12 = r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupRunner: com.android.server.backup.fullbackup.PerformFullTransportBackupTask this$0>;

        $r13 = staticinvoke <com.android.server.backup.fullbackup.PerformFullTransportBackupTask: com.android.server.backup.UserBackupManagerService access$100(com.android.server.backup.fullbackup.PerformFullTransportBackupTask)>($r12);

        $i1 = r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupRunner: int mEphemeralToken>;

        virtualinvoke $r13.<com.android.server.backup.UserBackupManagerService: void handleCancel(int,boolean)>($i1, z0);

        $r14 = r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupRunner: com.android.server.backup.fullbackup.PerformFullTransportBackupTask this$0>;

        $r15 = staticinvoke <com.android.server.backup.fullbackup.PerformFullTransportBackupTask: com.android.server.backup.UserBackupManagerService access$100(com.android.server.backup.fullbackup.PerformFullTransportBackupTask)>($r14);

        $r16 = r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupRunner: android.content.pm.PackageInfo mTarget>;

        $r17 = $r16.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        virtualinvoke $r15.<com.android.server.backup.UserBackupManagerService: void tearDownAgentAndKill(android.content.pm.ApplicationInfo)>($r17);

        $r18 = r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupRunner: java.util.concurrent.CountDownLatch mPreflightLatch>;

        virtualinvoke $r18.<java.util.concurrent.CountDownLatch: void countDown()>();

        $r19 = r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupRunner: java.util.concurrent.CountDownLatch mBackupLatch>;

        virtualinvoke $r19.<java.util.concurrent.CountDownLatch: void countDown()>();

        $r20 = r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupRunner: com.android.server.backup.fullbackup.PerformFullTransportBackupTask this$0>;

        $r21 = staticinvoke <com.android.server.backup.fullbackup.PerformFullTransportBackupTask: com.android.server.backup.UserBackupManagerService access$100(com.android.server.backup.fullbackup.PerformFullTransportBackupTask)>($r20);

        $i2 = r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupRunner: int mCurrentOpToken>;

        virtualinvoke $r21.<com.android.server.backup.UserBackupManagerService: void removeOperation(int)>($i2);

        return;
    }

    public void operationComplete(long)
    {
        com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupRunner r0;
        long l0;

        r0 := @this: com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupRunner;

        l0 := @parameter0: long;

        return;
    }

    void registerTask()
    {
        com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupRunner r0;
        java.lang.Object r1;
        int i0;
        com.android.server.backup.internal.Operation r2;
        com.android.server.backup.fullbackup.PerformFullTransportBackupTask $r3, $r5;
        com.android.server.backup.UserBackupManagerService $r4, $r6;
        java.lang.Throwable $r7;
        android.util.SparseArray r8;

        r0 := @this: com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupRunner;

        $r3 = r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupRunner: com.android.server.backup.fullbackup.PerformFullTransportBackupTask this$0>;

        $r4 = staticinvoke <com.android.server.backup.fullbackup.PerformFullTransportBackupTask: com.android.server.backup.UserBackupManagerService access$100(com.android.server.backup.fullbackup.PerformFullTransportBackupTask)>($r3);

        r1 = virtualinvoke $r4.<com.android.server.backup.UserBackupManagerService: java.lang.Object getCurrentOpLock()>();

        entermonitor r1;

     label1:
        $r5 = r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupRunner: com.android.server.backup.fullbackup.PerformFullTransportBackupTask this$0>;

        $r6 = staticinvoke <com.android.server.backup.fullbackup.PerformFullTransportBackupTask: com.android.server.backup.UserBackupManagerService access$100(com.android.server.backup.fullbackup.PerformFullTransportBackupTask)>($r5);

        r8 = virtualinvoke $r6.<com.android.server.backup.UserBackupManagerService: android.util.SparseArray getCurrentOperations()>();

        i0 = r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupRunner: int mCurrentOpToken>;

        r2 = new com.android.server.backup.internal.Operation;

        specialinvoke r2.<com.android.server.backup.internal.Operation: void <init>(int,com.android.server.backup.BackupRestoreTask,int)>(0, r0, 0);

        virtualinvoke r8.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r2);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r7 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void run()
    {
        com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupRunner r0;
        java.io.FileOutputStream $r1;
        android.os.ParcelFileDescriptor $r2, $r19, $r24, $r29;
        java.io.FileDescriptor $r3;
        com.android.server.backup.fullbackup.FullBackupEngine $r4, $r10, $r11;
        com.android.server.backup.fullbackup.PerformFullTransportBackupTask $r5;
        com.android.server.backup.UserBackupManagerService $r6;
        int $i0, $i1, $i3, $i4, $i5;
        long $l2;
        android.content.pm.PackageInfo $r7, $r14;
        com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupPreflight $r8;
        boolean $z0, $z1;
        java.util.concurrent.CountDownLatch $r9, $r18, $r23, $r26, $r28;
        java.lang.Exception $r12;
        java.lang.String $r15, $r17;
        java.lang.Throwable $r20, $r21, $r22, $r25;
        java.lang.StringBuilder r34;

        r0 := @this: com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupRunner;

        $r1 = new java.io.FileOutputStream;

        $r2 = r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupRunner: android.os.ParcelFileDescriptor mOutput>;

        $r3 = virtualinvoke $r2.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        specialinvoke $r1.<java.io.FileOutputStream: void <init>(java.io.FileDescriptor)>($r3);

        $r4 = new com.android.server.backup.fullbackup.FullBackupEngine;

        $r5 = r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupRunner: com.android.server.backup.fullbackup.PerformFullTransportBackupTask this$0>;

        $r6 = staticinvoke <com.android.server.backup.fullbackup.PerformFullTransportBackupTask: com.android.server.backup.UserBackupManagerService access$100(com.android.server.backup.fullbackup.PerformFullTransportBackupTask)>($r5);

        $r8 = r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupRunner: com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupPreflight mPreflight>;

        $r7 = r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupRunner: android.content.pm.PackageInfo mTarget>;

        $l2 = r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupRunner: long mQuota>;

        $i1 = r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupRunner: int mCurrentOpToken>;

        $i0 = r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupRunner: int mTransportFlags>;

        specialinvoke $r4.<com.android.server.backup.fullbackup.FullBackupEngine: void <init>(com.android.server.backup.UserBackupManagerService,java.io.OutputStream,com.android.server.backup.fullbackup.FullBackupPreflight,android.content.pm.PackageInfo,boolean,com.android.server.backup.BackupRestoreTask,long,int,int)>($r6, $r1, $r8, $r7, 0, r0, $l2, $i1, $i0);

        r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupRunner: com.android.server.backup.fullbackup.FullBackupEngine mEngine> = $r4;

     label01:
        $z0 = r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupRunner: boolean mIsCancelled>;

        if $z0 != 0 goto label02;

        $r11 = r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupRunner: com.android.server.backup.fullbackup.FullBackupEngine mEngine>;

        $i5 = virtualinvoke $r11.<com.android.server.backup.fullbackup.FullBackupEngine: int preflightCheck()>();

        r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupRunner: int mPreflightResult> = $i5;

     label02:
        $r9 = r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupRunner: java.util.concurrent.CountDownLatch mPreflightLatch>;

        virtualinvoke $r9.<java.util.concurrent.CountDownLatch: void countDown()>();

     label03:
        $i3 = r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupRunner: int mPreflightResult>;

        if $i3 != 0 goto label04;

        $z1 = r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupRunner: boolean mIsCancelled>;

        if $z1 != 0 goto label04;

        $r10 = r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupRunner: com.android.server.backup.fullbackup.FullBackupEngine mEngine>;

        $i4 = virtualinvoke $r10.<com.android.server.backup.fullbackup.FullBackupEngine: int backupOnePackage()>();

        r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupRunner: int mBackupResult> = $i4;

     label04:
        virtualinvoke r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupRunner: void unregisterTask()>();

        $r28 = r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupRunner: java.util.concurrent.CountDownLatch mBackupLatch>;

        virtualinvoke $r28.<java.util.concurrent.CountDownLatch: void countDown()>();

     label05:
        $r29 = r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupRunner: android.os.ParcelFileDescriptor mOutput>;

        virtualinvoke $r29.<android.os.ParcelFileDescriptor: void close()>();

     label06:
        goto label17;

     label07:
        $r21 := @caughtexception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PFTBT", "Error closing transport pipe in runner");

        goto label17;

     label08:
        $r25 := @caughtexception;

     label09:
        $r26 = r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupRunner: java.util.concurrent.CountDownLatch mPreflightLatch>;

        virtualinvoke $r26.<java.util.concurrent.CountDownLatch: void countDown()>();

     label10:
        throw $r25;

     label11:
        $r22 := @caughtexception;

        goto label18;

     label12:
        $r12 := @caughtexception;

     label13:
        r34 = new java.lang.StringBuilder;

        specialinvoke r34.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception during full package backup of ");

        $r14 = r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupRunner: android.content.pm.PackageInfo mTarget>;

        $r15 = $r14.<android.content.pm.PackageInfo: java.lang.String packageName>;

        virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke r34.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("PFTBT", $r17, $r12);

     label14:
        virtualinvoke r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupRunner: void unregisterTask()>();

        $r18 = r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupRunner: java.util.concurrent.CountDownLatch mBackupLatch>;

        virtualinvoke $r18.<java.util.concurrent.CountDownLatch: void countDown()>();

     label15:
        $r19 = r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupRunner: android.os.ParcelFileDescriptor mOutput>;

        virtualinvoke $r19.<android.os.ParcelFileDescriptor: void close()>();

     label16:
        goto label06;

     label17:
        return;

     label18:
        virtualinvoke r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupRunner: void unregisterTask()>();

        $r23 = r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupRunner: java.util.concurrent.CountDownLatch mBackupLatch>;

        virtualinvoke $r23.<java.util.concurrent.CountDownLatch: void countDown()>();

     label19:
        $r24 = r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupRunner: android.os.ParcelFileDescriptor mOutput>;

        virtualinvoke $r24.<android.os.ParcelFileDescriptor: void close()>();

     label20:
        goto label22;

     label21:
        $r20 := @caughtexception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PFTBT", "Error closing transport pipe in runner");

     label22:
        throw $r22;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Exception from label02 to label03 with label12;
        catch java.lang.Throwable from label02 to label03 with label11;
        catch java.lang.Exception from label03 to label04 with label12;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.io.IOException from label05 to label06 with label07;
        catch java.lang.Exception from label09 to label10 with label12;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Exception from label10 to label11 with label12;
        catch java.lang.Throwable from label10 to label11 with label11;
        catch java.lang.Throwable from label13 to label14 with label11;
        catch java.io.IOException from label15 to label16 with label07;
        catch java.io.IOException from label19 to label20 with label21;
    }

    public void sendQuotaExceeded(long, long)
    {
        com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupRunner r0;
        long l0, l1;
        com.android.server.backup.fullbackup.FullBackupEngine $r1;

        r0 := @this: com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupRunner;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $r1 = r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupRunner: com.android.server.backup.fullbackup.FullBackupEngine mEngine>;

        virtualinvoke $r1.<com.android.server.backup.fullbackup.FullBackupEngine: void sendQuotaExceeded(long,long)>(l0, l1);

        return;
    }

    void unregisterTask()
    {
        com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupRunner r0;
        java.lang.Object r1;
        com.android.server.backup.fullbackup.PerformFullTransportBackupTask $r3, $r5;
        com.android.server.backup.UserBackupManagerService $r4, $r6;
        android.util.SparseArray $r7;
        int $i0;
        java.lang.Throwable $r8;

        r0 := @this: com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupRunner;

        $r3 = r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupRunner: com.android.server.backup.fullbackup.PerformFullTransportBackupTask this$0>;

        $r4 = staticinvoke <com.android.server.backup.fullbackup.PerformFullTransportBackupTask: com.android.server.backup.UserBackupManagerService access$100(com.android.server.backup.fullbackup.PerformFullTransportBackupTask)>($r3);

        r1 = virtualinvoke $r4.<com.android.server.backup.UserBackupManagerService: java.lang.Object getCurrentOpLock()>();

        entermonitor r1;

     label1:
        $r5 = r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupRunner: com.android.server.backup.fullbackup.PerformFullTransportBackupTask this$0>;

        $r6 = staticinvoke <com.android.server.backup.fullbackup.PerformFullTransportBackupTask: com.android.server.backup.UserBackupManagerService access$100(com.android.server.backup.fullbackup.PerformFullTransportBackupTask)>($r5);

        $r7 = virtualinvoke $r6.<com.android.server.backup.UserBackupManagerService: android.util.SparseArray getCurrentOperations()>();

        $i0 = r0.<com.android.server.backup.fullbackup.PerformFullTransportBackupTask$SinglePackageBackupRunner: int mCurrentOpToken>;

        virtualinvoke $r7.<android.util.SparseArray: void remove(int)>($i0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r8 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }
}
