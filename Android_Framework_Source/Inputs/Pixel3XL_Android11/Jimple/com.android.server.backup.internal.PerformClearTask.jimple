public class com.android.server.backup.internal.PerformClearTask extends java.lang.Object implements java.lang.Runnable
{
    private final com.android.server.backup.UserBackupManagerService mBackupManagerService;
    private final com.android.server.backup.internal.OnTaskFinishedListener mListener;
    private final android.content.pm.PackageInfo mPackage;
    private final com.android.server.backup.transport.TransportClient mTransportClient;
    private final com.android.server.backup.TransportManager mTransportManager;

    void <init>(com.android.server.backup.UserBackupManagerService, com.android.server.backup.transport.TransportClient, android.content.pm.PackageInfo, com.android.server.backup.internal.OnTaskFinishedListener)
    {
        com.android.server.backup.internal.PerformClearTask r0;
        com.android.server.backup.UserBackupManagerService r1;
        com.android.server.backup.transport.TransportClient r2;
        android.content.pm.PackageInfo r3;
        com.android.server.backup.internal.OnTaskFinishedListener r4;
        com.android.server.backup.TransportManager $r5;

        r0 := @this: com.android.server.backup.internal.PerformClearTask;

        r1 := @parameter0: com.android.server.backup.UserBackupManagerService;

        r2 := @parameter1: com.android.server.backup.transport.TransportClient;

        r3 := @parameter2: android.content.pm.PackageInfo;

        r4 := @parameter3: com.android.server.backup.internal.OnTaskFinishedListener;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.backup.internal.PerformClearTask: com.android.server.backup.UserBackupManagerService mBackupManagerService> = r1;

        $r5 = virtualinvoke r1.<com.android.server.backup.UserBackupManagerService: com.android.server.backup.TransportManager getTransportManager()>();

        r0.<com.android.server.backup.internal.PerformClearTask: com.android.server.backup.TransportManager mTransportManager> = $r5;

        r0.<com.android.server.backup.internal.PerformClearTask: com.android.server.backup.transport.TransportClient mTransportClient> = r2;

        r0.<com.android.server.backup.internal.PerformClearTask: android.content.pm.PackageInfo mPackage> = r3;

        r0.<com.android.server.backup.internal.PerformClearTask: com.android.server.backup.internal.OnTaskFinishedListener mListener> = r4;

        return;
    }

    public void run()
    {
        com.android.server.backup.internal.PerformClearTask r0;
        java.io.File r1, $r6, r29;
        com.android.server.backup.transport.TransportClient $r2, $r9;
        com.android.server.backup.TransportManager $r3;
        android.content.ComponentName $r4;
        com.android.server.backup.UserBackupManagerService $r5, $r37, $r42;
        android.content.pm.PackageInfo $r7, $r10, $r18;
        java.lang.String $r8, $r13, $r14, $r19, $r20, $r24, $r25, r28;
        java.lang.Exception $r11, $r15, $r17, $r22, r31;
        java.lang.StringBuilder $r12, $r16, $r23, r32, r35;
        java.lang.Throwable $r21;
        com.android.internal.backup.IBackupTransport r26, r27, r30;
        com.android.server.backup.internal.OnTaskFinishedListener $r36, $r41;
        com.android.server.backup.UserBackupManagerService$BackupWakeLock $r38, $r43;

        r0 := @this: com.android.server.backup.internal.PerformClearTask;

        r26 = null;

        r27 = null;

     label01:
        $r3 = r0.<com.android.server.backup.internal.PerformClearTask: com.android.server.backup.TransportManager mTransportManager>;

        $r2 = r0.<com.android.server.backup.internal.PerformClearTask: com.android.server.backup.transport.TransportClient mTransportClient>;

        $r4 = virtualinvoke $r2.<com.android.server.backup.transport.TransportClient: android.content.ComponentName getTransportComponent()>();

        r28 = virtualinvoke $r3.<com.android.server.backup.TransportManager: java.lang.String getTransportDirName(android.content.ComponentName)>($r4);

     label02:
        r26 = null;

        r27 = null;

     label03:
        r1 = new java.io.File;

     label04:
        r26 = null;

        r27 = null;

     label05:
        $r5 = r0.<com.android.server.backup.internal.PerformClearTask: com.android.server.backup.UserBackupManagerService mBackupManagerService>;

        $r6 = virtualinvoke $r5.<com.android.server.backup.UserBackupManagerService: java.io.File getBaseStateDir()>();

        specialinvoke r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r6, r28);

     label06:
        r26 = null;

        r27 = null;

     label07:
        r29 = new java.io.File;

     label08:
        r26 = null;

        r27 = null;

     label09:
        $r7 = r0.<com.android.server.backup.internal.PerformClearTask: android.content.pm.PackageInfo mPackage>;

        $r8 = $r7.<android.content.pm.PackageInfo: java.lang.String packageName>;

        specialinvoke r29.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, $r8);

     label10:
        r26 = null;

        r27 = null;

     label11:
        virtualinvoke r29.<java.io.File: boolean delete()>();

     label12:
        r26 = null;

        r27 = null;

     label13:
        $r9 = r0.<com.android.server.backup.internal.PerformClearTask: com.android.server.backup.transport.TransportClient mTransportClient>;

        r30 = virtualinvoke $r9.<com.android.server.backup.transport.TransportClient: com.android.internal.backup.IBackupTransport connectOrThrow(java.lang.String)>("PerformClearTask.run()");

     label14:
        r26 = r30;

        r27 = r30;

     label15:
        $r10 = r0.<com.android.server.backup.internal.PerformClearTask: android.content.pm.PackageInfo mPackage>;

        interfaceinvoke r30.<com.android.internal.backup.IBackupTransport: int clearBackupData(android.content.pm.PackageInfo)>($r10);

     label16:
        if r30 == null goto label40;

     label17:
        interfaceinvoke r30.<com.android.internal.backup.IBackupTransport: int finishBackup()>();

     label18:
        goto label37;

     label19:
        $r15 := @caughtexception;

        r31 = $r15;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        r32 = $r16;

        goto label39;

     label20:
        $r21 := @caughtexception;

        goto label41;

     label21:
        $r17 := @caughtexception;

        r26 = r27;

     label22:
        r35 = new java.lang.StringBuilder;

     label23:
        r26 = r27;

     label24:
        specialinvoke r35.<java.lang.StringBuilder: void <init>()>();

     label25:
        r26 = r27;

     label26:
        virtualinvoke r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Transport threw clearing data for ");

     label27:
        r26 = r27;

     label28:
        $r18 = r0.<com.android.server.backup.internal.PerformClearTask: android.content.pm.PackageInfo mPackage>;

        virtualinvoke r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18);

     label29:
        r26 = r27;

     label30:
        virtualinvoke r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

     label31:
        r26 = r27;

     label32:
        $r19 = virtualinvoke $r17.<java.lang.Exception: java.lang.String getMessage()>();

        virtualinvoke r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

     label33:
        r26 = r27;

     label34:
        $r20 = virtualinvoke r35.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("BackupManagerService", $r20);

     label35:
        if r27 == null goto label40;

     label36:
        interfaceinvoke r27.<com.android.internal.backup.IBackupTransport: int finishBackup()>();

     label37:
        goto label40;

     label38:
        $r11 := @caughtexception;

        r31 = $r11;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        r32 = $r12;

     label39:
        virtualinvoke r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to mark clear operation finished: ");

        $r13 = virtualinvoke r31.<java.lang.Exception: java.lang.String getMessage()>();

        virtualinvoke r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r14 = virtualinvoke r32.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("BackupManagerService", $r14);

     label40:
        $r36 = r0.<com.android.server.backup.internal.PerformClearTask: com.android.server.backup.internal.OnTaskFinishedListener mListener>;

        interfaceinvoke $r36.<com.android.server.backup.internal.OnTaskFinishedListener: void onFinished(java.lang.String)>("PerformClearTask.run()");

        $r37 = r0.<com.android.server.backup.internal.PerformClearTask: com.android.server.backup.UserBackupManagerService mBackupManagerService>;

        $r38 = virtualinvoke $r37.<com.android.server.backup.UserBackupManagerService: com.android.server.backup.UserBackupManagerService$BackupWakeLock getWakelock()>();

        virtualinvoke $r38.<com.android.server.backup.UserBackupManagerService$BackupWakeLock: void release()>();

        return;

     label41:
        if r26 == null goto label45;

     label42:
        interfaceinvoke r26.<com.android.internal.backup.IBackupTransport: int finishBackup()>();

     label43:
        goto label45;

     label44:
        $r22 := @caughtexception;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to mark clear operation finished: ");

        $r24 = virtualinvoke $r22.<java.lang.Exception: java.lang.String getMessage()>();

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("BackupManagerService", $r25);

     label45:
        $r41 = r0.<com.android.server.backup.internal.PerformClearTask: com.android.server.backup.internal.OnTaskFinishedListener mListener>;

        interfaceinvoke $r41.<com.android.server.backup.internal.OnTaskFinishedListener: void onFinished(java.lang.String)>("PerformClearTask.run()");

        $r42 = r0.<com.android.server.backup.internal.PerformClearTask: com.android.server.backup.UserBackupManagerService mBackupManagerService>;

        $r43 = virtualinvoke $r42.<com.android.server.backup.UserBackupManagerService: com.android.server.backup.UserBackupManagerService$BackupWakeLock getWakelock()>();

        virtualinvoke $r43.<com.android.server.backup.UserBackupManagerService$BackupWakeLock: void release()>();

        throw $r21;

        catch java.lang.Exception from label01 to label02 with label21;
        catch java.lang.Throwable from label01 to label02 with label20;
        catch java.lang.Exception from label03 to label04 with label21;
        catch java.lang.Throwable from label03 to label04 with label20;
        catch java.lang.Exception from label05 to label06 with label21;
        catch java.lang.Throwable from label05 to label06 with label20;
        catch java.lang.Exception from label07 to label08 with label21;
        catch java.lang.Throwable from label07 to label08 with label20;
        catch java.lang.Exception from label09 to label10 with label21;
        catch java.lang.Throwable from label09 to label10 with label20;
        catch java.lang.Exception from label11 to label12 with label21;
        catch java.lang.Throwable from label11 to label12 with label20;
        catch java.lang.Exception from label13 to label14 with label21;
        catch java.lang.Throwable from label13 to label14 with label20;
        catch java.lang.Exception from label15 to label16 with label21;
        catch java.lang.Throwable from label15 to label16 with label20;
        catch java.lang.Exception from label17 to label18 with label19;
        catch java.lang.Throwable from label22 to label23 with label20;
        catch java.lang.Throwable from label24 to label25 with label20;
        catch java.lang.Throwable from label26 to label27 with label20;
        catch java.lang.Throwable from label28 to label29 with label20;
        catch java.lang.Throwable from label30 to label31 with label20;
        catch java.lang.Throwable from label32 to label33 with label20;
        catch java.lang.Throwable from label34 to label35 with label20;
        catch java.lang.Exception from label36 to label37 with label38;
        catch java.lang.Exception from label42 to label43 with label44;
    }
}
