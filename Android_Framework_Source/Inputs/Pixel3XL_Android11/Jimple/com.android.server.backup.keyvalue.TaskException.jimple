class com.android.server.backup.keyvalue.TaskException extends com.android.server.backup.keyvalue.BackupException
{
    private static final int DEFAULT_STATUS;
    private final boolean mStateCompromised;
    private final int mStatus;

    private void <init>(java.lang.Exception, boolean, int)
    {
        com.android.server.backup.keyvalue.TaskException r0;
        java.lang.Exception r1;
        boolean z0;
        int i0;

        r0 := @this: com.android.server.backup.keyvalue.TaskException;

        r1 := @parameter0: java.lang.Exception;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.server.backup.keyvalue.BackupException: void <init>(java.lang.Exception)>(r1);

        r0.<com.android.server.backup.keyvalue.TaskException: boolean mStateCompromised> = z0;

        r0.<com.android.server.backup.keyvalue.TaskException: int mStatus> = i0;

        return;
    }

    private void <init>(boolean, int)
    {
        com.android.server.backup.keyvalue.TaskException r0;
        boolean z0;
        int i0;

        r0 := @this: com.android.server.backup.keyvalue.TaskException;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.backup.keyvalue.BackupException: void <init>()>();

        r0.<com.android.server.backup.keyvalue.TaskException: boolean mStateCompromised> = z0;

        r0.<com.android.server.backup.keyvalue.TaskException: int mStatus> = i0;

        return;
    }

    static com.android.server.backup.keyvalue.TaskException causedBy(java.lang.Exception)
    {
        java.lang.Exception r0;
        boolean $z0;
        com.android.server.backup.keyvalue.TaskException $r1, $r2;

        r0 := @parameter0: java.lang.Exception;

        $z0 = r0 instanceof com.android.server.backup.keyvalue.TaskException;

        if $z0 == 0 goto label1;

        $r2 = (com.android.server.backup.keyvalue.TaskException) r0;

        return $r2;

     label1:
        $r1 = new com.android.server.backup.keyvalue.TaskException;

        specialinvoke $r1.<com.android.server.backup.keyvalue.TaskException: void <init>(java.lang.Exception,boolean,int)>(r0, 0, -1000);

        return $r1;
    }

    static com.android.server.backup.keyvalue.TaskException create()
    {
        com.android.server.backup.keyvalue.TaskException $r0;

        $r0 = new com.android.server.backup.keyvalue.TaskException;

        specialinvoke $r0.<com.android.server.backup.keyvalue.TaskException: void <init>(boolean,int)>(0, -1000);

        return $r0;
    }

    static com.android.server.backup.keyvalue.TaskException forStatus(int)
    {
        int i0;
        com.android.server.backup.keyvalue.TaskException $r0;
        boolean z0;

        i0 := @parameter0: int;

        if i0 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        staticinvoke <com.android.internal.util.Preconditions: void checkArgument(boolean,java.lang.Object)>(z0, "Exception based on TRANSPORT_OK");

        $r0 = new com.android.server.backup.keyvalue.TaskException;

        specialinvoke $r0.<com.android.server.backup.keyvalue.TaskException: void <init>(boolean,int)>(0, i0);

        return $r0;
    }

    static com.android.server.backup.keyvalue.TaskException stateCompromised()
    {
        com.android.server.backup.keyvalue.TaskException $r0;

        $r0 = new com.android.server.backup.keyvalue.TaskException;

        specialinvoke $r0.<com.android.server.backup.keyvalue.TaskException: void <init>(boolean,int)>(1, -1000);

        return $r0;
    }

    static com.android.server.backup.keyvalue.TaskException stateCompromised(java.lang.Exception)
    {
        java.lang.Exception r0;
        boolean $z0;
        com.android.server.backup.keyvalue.TaskException $r1, $r2, $r3;
        int $i0;

        r0 := @parameter0: java.lang.Exception;

        $z0 = r0 instanceof com.android.server.backup.keyvalue.TaskException;

        if $z0 == 0 goto label1;

        $r2 = new com.android.server.backup.keyvalue.TaskException;

        $r3 = (com.android.server.backup.keyvalue.TaskException) r0;

        $i0 = virtualinvoke $r3.<com.android.server.backup.keyvalue.TaskException: int getStatus()>();

        specialinvoke $r2.<com.android.server.backup.keyvalue.TaskException: void <init>(java.lang.Exception,boolean,int)>(r0, 1, $i0);

        return $r2;

     label1:
        $r1 = new com.android.server.backup.keyvalue.TaskException;

        specialinvoke $r1.<com.android.server.backup.keyvalue.TaskException: void <init>(java.lang.Exception,boolean,int)>(r0, 1, -1000);

        return $r1;
    }

    int getStatus()
    {
        com.android.server.backup.keyvalue.TaskException r0;
        int $i0;

        r0 := @this: com.android.server.backup.keyvalue.TaskException;

        $i0 = r0.<com.android.server.backup.keyvalue.TaskException: int mStatus>;

        return $i0;
    }

    boolean isStateCompromised()
    {
        com.android.server.backup.keyvalue.TaskException r0;
        boolean $z0;

        r0 := @this: com.android.server.backup.keyvalue.TaskException;

        $z0 = r0.<com.android.server.backup.keyvalue.TaskException: boolean mStateCompromised>;

        return $z0;
    }

    public static void <clinit>()
    {
        <com.android.server.backup.keyvalue.TaskException: int DEFAULT_STATUS> = -1000;

        return;
    }
}
