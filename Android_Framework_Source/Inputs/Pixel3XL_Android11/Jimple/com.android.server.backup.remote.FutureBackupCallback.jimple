public class com.android.server.backup.remote.FutureBackupCallback extends android.app.backup.IBackupCallback$Stub
{
    private final java.util.concurrent.CompletableFuture mFuture;

    void <init>(java.util.concurrent.CompletableFuture)
    {
        com.android.server.backup.remote.FutureBackupCallback r0;
        java.util.concurrent.CompletableFuture r1;

        r0 := @this: com.android.server.backup.remote.FutureBackupCallback;

        r1 := @parameter0: java.util.concurrent.CompletableFuture;

        specialinvoke r0.<android.app.backup.IBackupCallback$Stub: void <init>()>();

        r0.<com.android.server.backup.remote.FutureBackupCallback: java.util.concurrent.CompletableFuture mFuture> = r1;

        return;
    }

    public void operationComplete(long) throws android.os.RemoteException
    {
        com.android.server.backup.remote.FutureBackupCallback r0;
        long l0;
        java.util.concurrent.CompletableFuture $r1;
        com.android.server.backup.remote.RemoteResult $r2;

        r0 := @this: com.android.server.backup.remote.FutureBackupCallback;

        l0 := @parameter0: long;

        $r1 = r0.<com.android.server.backup.remote.FutureBackupCallback: java.util.concurrent.CompletableFuture mFuture>;

        $r2 = staticinvoke <com.android.server.backup.remote.RemoteResult: com.android.server.backup.remote.RemoteResult of(long)>(l0);

        virtualinvoke $r1.<java.util.concurrent.CompletableFuture: boolean complete(java.lang.Object)>($r2);

        return;
    }
}
