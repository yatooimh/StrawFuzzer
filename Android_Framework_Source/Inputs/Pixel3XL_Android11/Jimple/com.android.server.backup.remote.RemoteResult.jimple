public class com.android.server.backup.remote.RemoteResult extends java.lang.Object
{
    public static final com.android.server.backup.remote.RemoteResult FAILED_CANCELLED;
    public static final com.android.server.backup.remote.RemoteResult FAILED_THREAD_INTERRUPTED;
    public static final com.android.server.backup.remote.RemoteResult FAILED_TIMED_OUT;
    private final int mType;
    private final long mValue;

    static void <clinit>()
    {
        com.android.server.backup.remote.RemoteResult $r0, $r1, $r2;

        $r0 = new com.android.server.backup.remote.RemoteResult;

        specialinvoke $r0.<com.android.server.backup.remote.RemoteResult: void <init>(int,long)>(1, 0L);

        <com.android.server.backup.remote.RemoteResult: com.android.server.backup.remote.RemoteResult FAILED_TIMED_OUT> = $r0;

        $r1 = new com.android.server.backup.remote.RemoteResult;

        specialinvoke $r1.<com.android.server.backup.remote.RemoteResult: void <init>(int,long)>(2, 0L);

        <com.android.server.backup.remote.RemoteResult: com.android.server.backup.remote.RemoteResult FAILED_CANCELLED> = $r1;

        $r2 = new com.android.server.backup.remote.RemoteResult;

        specialinvoke $r2.<com.android.server.backup.remote.RemoteResult: void <init>(int,long)>(3, 0L);

        <com.android.server.backup.remote.RemoteResult: com.android.server.backup.remote.RemoteResult FAILED_THREAD_INTERRUPTED> = $r2;

        return;
    }

    private void <init>(int, long)
    {
        com.android.server.backup.remote.RemoteResult r0;
        int i0;
        long l1;

        r0 := @this: com.android.server.backup.remote.RemoteResult;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.backup.remote.RemoteResult: int mType> = i0;

        r0.<com.android.server.backup.remote.RemoteResult: long mValue> = l1;

        return;
    }

    public static com.android.server.backup.remote.RemoteResult of(long)
    {
        long l0;
        com.android.server.backup.remote.RemoteResult $r0;

        l0 := @parameter0: long;

        $r0 = new com.android.server.backup.remote.RemoteResult;

        specialinvoke $r0.<com.android.server.backup.remote.RemoteResult: void <init>(int,long)>(0, l0);

        return $r0;
    }

    private java.lang.String toStringDescription()
    {
        com.android.server.backup.remote.RemoteResult r0;
        int i0;
        long $l1;
        java.lang.String $r1;
        java.lang.AssertionError $r2;

        r0 := @this: com.android.server.backup.remote.RemoteResult;

        i0 = r0.<com.android.server.backup.remote.RemoteResult: int mType>;

        if i0 == 0 goto label4;

        if i0 == 1 goto label3;

        if i0 == 2 goto label2;

        if i0 != 3 goto label1;

        return "FAILED_THREAD_INTERRUPTED";

     label1:
        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>(java.lang.Object)>("Unknown type");

        throw $r2;

     label2:
        return "FAILED_CANCELLED";

     label3:
        return "FAILED_TIMED_OUT";

     label4:
        $l1 = r0.<com.android.server.backup.remote.RemoteResult: long mValue>;

        $r1 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l1);

        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        com.android.server.backup.remote.RemoteResult r0, r2;
        boolean $z0, z1;
        int $i0, $i1;
        long $l2, $l3;
        byte $b4;
        java.lang.Object r1;

        r0 := @this: com.android.server.backup.remote.RemoteResult;

        r1 := @parameter0: java.lang.Object;

        z1 = 1;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof com.android.server.backup.remote.RemoteResult;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (com.android.server.backup.remote.RemoteResult) r1;

        $i1 = r0.<com.android.server.backup.remote.RemoteResult: int mType>;

        $i0 = r2.<com.android.server.backup.remote.RemoteResult: int mType>;

        if $i1 != $i0 goto label3;

        $l3 = r0.<com.android.server.backup.remote.RemoteResult: long mValue>;

        $l2 = r2.<com.android.server.backup.remote.RemoteResult: long mValue>;

        $b4 = $l3 cmp $l2;

        if $b4 != 0 goto label3;

        goto label4;

     label3:
        z1 = 0;

     label4:
        return z1;
    }

    public long get()
    {
        com.android.server.backup.remote.RemoteResult r0;
        boolean $z0;
        long $l0;

        r0 := @this: com.android.server.backup.remote.RemoteResult;

        $z0 = virtualinvoke r0.<com.android.server.backup.remote.RemoteResult: boolean isPresent()>();

        staticinvoke <com.android.internal.util.Preconditions: void checkState(boolean,java.lang.String)>($z0, "Can\'t obtain value of failed result");

        $l0 = r0.<com.android.server.backup.remote.RemoteResult: long mValue>;

        return $l0;
    }

    public int hashCode()
    {
        com.android.server.backup.remote.RemoteResult r0;
        java.lang.Object[] $r1;
        int $i0, $i2;
        java.lang.Integer $r2;
        long $l1;
        java.lang.Long $r3;

        r0 := @this: com.android.server.backup.remote.RemoteResult;

        $r1 = newarray (java.lang.Object)[2];

        $i0 = r0.<com.android.server.backup.remote.RemoteResult: int mType>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r1[0] = $r2;

        $l1 = r0.<com.android.server.backup.remote.RemoteResult: long mValue>;

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r1[1] = $r3;

        $i2 = staticinvoke <java.util.Objects: int hash(java.lang.Object[])>($r1);

        return $i2;
    }

    public boolean isPresent()
    {
        com.android.server.backup.remote.RemoteResult r0;
        int $i0;
        boolean z0;

        r0 := @this: com.android.server.backup.remote.RemoteResult;

        $i0 = r0.<com.android.server.backup.remote.RemoteResult: int mType>;

        if $i0 != 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public java.lang.String toString()
    {
        com.android.server.backup.remote.RemoteResult r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r4, $r7;

        r0 := @this: com.android.server.backup.remote.RemoteResult;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RemoteResult{");

        $r4 = specialinvoke r0.<com.android.server.backup.remote.RemoteResult: java.lang.String toStringDescription()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }
}
