public class com.android.server.backup.restore.AdbRestoreFinishedLatch extends java.lang.Object implements com.android.server.backup.BackupRestoreTask
{
    private static final java.lang.String TAG;
    private com.android.server.backup.UserBackupManagerService backupManagerService;
    private final com.android.server.backup.BackupAgentTimeoutParameters mAgentTimeoutParameters;
    private final int mCurrentOpToken;
    final java.util.concurrent.CountDownLatch mLatch;

    public void <init>(com.android.server.backup.UserBackupManagerService, int)
    {
        com.android.server.backup.restore.AdbRestoreFinishedLatch r0;
        int i0;
        java.util.concurrent.CountDownLatch $r1;
        com.android.server.backup.BackupAgentTimeoutParameters $r3, r5;
        com.android.server.backup.UserBackupManagerService r4;

        r0 := @this: com.android.server.backup.restore.AdbRestoreFinishedLatch;

        r4 := @parameter0: com.android.server.backup.UserBackupManagerService;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.backup.restore.AdbRestoreFinishedLatch: com.android.server.backup.UserBackupManagerService backupManagerService> = r4;

        $r1 = new java.util.concurrent.CountDownLatch;

        specialinvoke $r1.<java.util.concurrent.CountDownLatch: void <init>(int)>(1);

        r0.<com.android.server.backup.restore.AdbRestoreFinishedLatch: java.util.concurrent.CountDownLatch mLatch> = $r1;

        r0.<com.android.server.backup.restore.AdbRestoreFinishedLatch: int mCurrentOpToken> = i0;

        r5 = virtualinvoke r4.<com.android.server.backup.UserBackupManagerService: com.android.server.backup.BackupAgentTimeoutParameters getAgentTimeoutParameters()>();

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r5, "Timeout parameters cannot be null");

        $r3 = (com.android.server.backup.BackupAgentTimeoutParameters) r5;

        r0.<com.android.server.backup.restore.AdbRestoreFinishedLatch: com.android.server.backup.BackupAgentTimeoutParameters mAgentTimeoutParameters> = $r3;

        return;
    }

    void await()
    {
        com.android.server.backup.restore.AdbRestoreFinishedLatch r0;
        long l0;
        com.android.server.backup.BackupAgentTimeoutParameters $r2;
        java.util.concurrent.TimeUnit $r3;
        java.util.concurrent.CountDownLatch $r4;
        java.lang.Throwable $r5;

        r0 := @this: com.android.server.backup.restore.AdbRestoreFinishedLatch;

        $r2 = r0.<com.android.server.backup.restore.AdbRestoreFinishedLatch: com.android.server.backup.BackupAgentTimeoutParameters mAgentTimeoutParameters>;

        l0 = virtualinvoke $r2.<com.android.server.backup.BackupAgentTimeoutParameters: long getFullBackupAgentTimeoutMillis()>();

     label1:
        $r4 = r0.<com.android.server.backup.restore.AdbRestoreFinishedLatch: java.util.concurrent.CountDownLatch mLatch>;

        $r3 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        virtualinvoke $r4.<java.util.concurrent.CountDownLatch: boolean await(long,java.util.concurrent.TimeUnit)>(l0, $r3);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AdbRestoreFinishedLatch", "Interrupted!");

     label4:
        return;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }

    public void execute()
    {
        com.android.server.backup.restore.AdbRestoreFinishedLatch r0;

        r0 := @this: com.android.server.backup.restore.AdbRestoreFinishedLatch;

        return;
    }

    public void handleCancel(boolean)
    {
        com.android.server.backup.restore.AdbRestoreFinishedLatch r0;
        boolean z0;
        java.util.concurrent.CountDownLatch $r1;
        int $i1;
        com.android.server.backup.UserBackupManagerService $r2;

        r0 := @this: com.android.server.backup.restore.AdbRestoreFinishedLatch;

        z0 := @parameter0: boolean;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AdbRestoreFinishedLatch", "adb onRestoreFinished() timed out");

        $r1 = r0.<com.android.server.backup.restore.AdbRestoreFinishedLatch: java.util.concurrent.CountDownLatch mLatch>;

        virtualinvoke $r1.<java.util.concurrent.CountDownLatch: void countDown()>();

        $r2 = r0.<com.android.server.backup.restore.AdbRestoreFinishedLatch: com.android.server.backup.UserBackupManagerService backupManagerService>;

        $i1 = r0.<com.android.server.backup.restore.AdbRestoreFinishedLatch: int mCurrentOpToken>;

        virtualinvoke $r2.<com.android.server.backup.UserBackupManagerService: void removeOperation(int)>($i1);

        return;
    }

    public void operationComplete(long)
    {
        com.android.server.backup.restore.AdbRestoreFinishedLatch r0;
        long l0;
        java.util.concurrent.CountDownLatch $r1;
        int $i1;
        com.android.server.backup.UserBackupManagerService $r2;

        r0 := @this: com.android.server.backup.restore.AdbRestoreFinishedLatch;

        l0 := @parameter0: long;

        $r1 = r0.<com.android.server.backup.restore.AdbRestoreFinishedLatch: java.util.concurrent.CountDownLatch mLatch>;

        virtualinvoke $r1.<java.util.concurrent.CountDownLatch: void countDown()>();

        $r2 = r0.<com.android.server.backup.restore.AdbRestoreFinishedLatch: com.android.server.backup.UserBackupManagerService backupManagerService>;

        $i1 = r0.<com.android.server.backup.restore.AdbRestoreFinishedLatch: int mCurrentOpToken>;

        virtualinvoke $r2.<com.android.server.backup.UserBackupManagerService: void removeOperation(int)>($i1);

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.backup.restore.AdbRestoreFinishedLatch: java.lang.String TAG> = "AdbRestoreFinishedLatch";

        return;
    }
}
