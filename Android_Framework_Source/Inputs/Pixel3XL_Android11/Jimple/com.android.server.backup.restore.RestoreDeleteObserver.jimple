public class com.android.server.backup.restore.RestoreDeleteObserver extends android.content.pm.IPackageDeleteObserver$Stub
{
    private final java.util.concurrent.atomic.AtomicBoolean mDone;

    public void <init>()
    {
        com.android.server.backup.restore.RestoreDeleteObserver r0;
        java.util.concurrent.atomic.AtomicBoolean $r1;

        r0 := @this: com.android.server.backup.restore.RestoreDeleteObserver;

        specialinvoke r0.<android.content.pm.IPackageDeleteObserver$Stub: void <init>()>();

        $r1 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: void <init>()>();

        r0.<com.android.server.backup.restore.RestoreDeleteObserver: java.util.concurrent.atomic.AtomicBoolean mDone> = $r1;

        return;
    }

    public void packageDeleted(java.lang.String, int) throws android.os.RemoteException
    {
        com.android.server.backup.restore.RestoreDeleteObserver r0;
        int i0;
        java.util.concurrent.atomic.AtomicBoolean $r2, $r3, r6;
        java.lang.Throwable $r4;
        java.lang.String r5;

        r0 := @this: com.android.server.backup.restore.RestoreDeleteObserver;

        r5 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r6 = r0.<com.android.server.backup.restore.RestoreDeleteObserver: java.util.concurrent.atomic.AtomicBoolean mDone>;

        entermonitor r6;

     label1:
        $r2 = r0.<com.android.server.backup.restore.RestoreDeleteObserver: java.util.concurrent.atomic.AtomicBoolean mDone>;

        virtualinvoke $r2.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(1);

        $r3 = r0.<com.android.server.backup.restore.RestoreDeleteObserver: java.util.concurrent.atomic.AtomicBoolean mDone>;

        virtualinvoke $r3.<java.lang.Object: void notifyAll()>();

        exitmonitor r6;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r6;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void reset()
    {
        com.android.server.backup.restore.RestoreDeleteObserver r0;
        java.util.concurrent.atomic.AtomicBoolean r1, $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.backup.restore.RestoreDeleteObserver;

        r1 = r0.<com.android.server.backup.restore.RestoreDeleteObserver: java.util.concurrent.atomic.AtomicBoolean mDone>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.backup.restore.RestoreDeleteObserver: java.util.concurrent.atomic.AtomicBoolean mDone>;

        virtualinvoke $r3.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void waitForCompletion()
    {
        com.android.server.backup.restore.RestoreDeleteObserver r0;
        java.util.concurrent.atomic.AtomicBoolean r1, $r2, $r3;
        boolean z0;
        java.lang.Throwable $r4, $r5;

        r0 := @this: com.android.server.backup.restore.RestoreDeleteObserver;

        r1 = r0.<com.android.server.backup.restore.RestoreDeleteObserver: java.util.concurrent.atomic.AtomicBoolean mDone>;

        entermonitor r1;

     label01:
        $r2 = r0.<com.android.server.backup.restore.RestoreDeleteObserver: java.util.concurrent.atomic.AtomicBoolean mDone>;

        z0 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

     label02:
        if z0 != 0 goto label07;

     label03:
        $r3 = r0.<com.android.server.backup.restore.RestoreDeleteObserver: java.util.concurrent.atomic.AtomicBoolean mDone>;

        virtualinvoke $r3.<java.lang.Object: void wait()>();

     label04:
        goto label06;

     label05:
        $r5 := @caughtexception;

     label06:
        goto label01;

     label07:
        exitmonitor r1;

     label08:
        return;

     label09:
        $r4 := @caughtexception;

     label10:
        exitmonitor r1;

     label11:
        throw $r4;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.InterruptedException from label03 to label04 with label05;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }
}
