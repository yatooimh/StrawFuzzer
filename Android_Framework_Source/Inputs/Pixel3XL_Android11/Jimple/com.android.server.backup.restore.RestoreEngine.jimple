public abstract class com.android.server.backup.restore.RestoreEngine extends java.lang.Object
{
    public static final int SUCCESS;
    private static final java.lang.String TAG;
    public static final int TARGET_FAILURE;
    public static final int TRANSPORT_FAILURE;
    private final java.util.concurrent.atomic.AtomicInteger mResult;
    private final java.util.concurrent.atomic.AtomicBoolean mRunning;

    public void <init>()
    {
        com.android.server.backup.restore.RestoreEngine r0;
        java.util.concurrent.atomic.AtomicBoolean $r1;
        java.util.concurrent.atomic.AtomicInteger $r2;

        r0 := @this: com.android.server.backup.restore.RestoreEngine;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(0);

        r0.<com.android.server.backup.restore.RestoreEngine: java.util.concurrent.atomic.AtomicBoolean mRunning> = $r1;

        $r2 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r2.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>(0);

        r0.<com.android.server.backup.restore.RestoreEngine: java.util.concurrent.atomic.AtomicInteger mResult> = $r2;

        return;
    }

    public int getResult()
    {
        com.android.server.backup.restore.RestoreEngine r0;
        java.util.concurrent.atomic.AtomicInteger $r1;
        int $i0;

        r0 := @this: com.android.server.backup.restore.RestoreEngine;

        $r1 = r0.<com.android.server.backup.restore.RestoreEngine: java.util.concurrent.atomic.AtomicInteger mResult>;

        $i0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        return $i0;
    }

    public boolean isRunning()
    {
        com.android.server.backup.restore.RestoreEngine r0;
        java.util.concurrent.atomic.AtomicBoolean $r1;
        boolean $z0;

        r0 := @this: com.android.server.backup.restore.RestoreEngine;

        $r1 = r0.<com.android.server.backup.restore.RestoreEngine: java.util.concurrent.atomic.AtomicBoolean mRunning>;

        $z0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        return $z0;
    }

    public void setResult(int)
    {
        com.android.server.backup.restore.RestoreEngine r0;
        int i0;
        java.util.concurrent.atomic.AtomicInteger $r1;

        r0 := @this: com.android.server.backup.restore.RestoreEngine;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.backup.restore.RestoreEngine: java.util.concurrent.atomic.AtomicInteger mResult>;

        virtualinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: void set(int)>(i0);

        return;
    }

    public void setRunning(boolean)
    {
        com.android.server.backup.restore.RestoreEngine r0;
        boolean z0;
        java.util.concurrent.atomic.AtomicBoolean r1, $r3, $r4;
        java.lang.Throwable $r5;

        r0 := @this: com.android.server.backup.restore.RestoreEngine;

        z0 := @parameter0: boolean;

        r1 = r0.<com.android.server.backup.restore.RestoreEngine: java.util.concurrent.atomic.AtomicBoolean mRunning>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.backup.restore.RestoreEngine: java.util.concurrent.atomic.AtomicBoolean mRunning>;

        virtualinvoke $r3.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(z0);

        $r4 = r0.<com.android.server.backup.restore.RestoreEngine: java.util.concurrent.atomic.AtomicBoolean mRunning>;

        virtualinvoke $r4.<java.lang.Object: void notifyAll()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public int waitForResult()
    {
        com.android.server.backup.restore.RestoreEngine r0;
        java.util.concurrent.atomic.AtomicBoolean r1, $r2;
        boolean z0;
        int $i0;
        java.lang.Throwable $r3, $r4;

        r0 := @this: com.android.server.backup.restore.RestoreEngine;

        r1 = r0.<com.android.server.backup.restore.RestoreEngine: java.util.concurrent.atomic.AtomicBoolean mRunning>;

        entermonitor r1;

     label01:
        z0 = virtualinvoke r0.<com.android.server.backup.restore.RestoreEngine: boolean isRunning()>();

     label02:
        if z0 == 0 goto label07;

     label03:
        $r2 = r0.<com.android.server.backup.restore.RestoreEngine: java.util.concurrent.atomic.AtomicBoolean mRunning>;

        virtualinvoke $r2.<java.lang.Object: void wait()>();

     label04:
        goto label06;

     label05:
        $r4 := @caughtexception;

     label06:
        goto label01;

     label07:
        exitmonitor r1;

     label08:
        $i0 = virtualinvoke r0.<com.android.server.backup.restore.RestoreEngine: int getResult()>();

        return $i0;

     label09:
        $r3 := @caughtexception;

     label10:
        exitmonitor r1;

     label11:
        throw $r3;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.InterruptedException from label03 to label04 with label05;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public static void <clinit>()
    {
        <com.android.server.backup.restore.RestoreEngine: int TRANSPORT_FAILURE> = -3;

        <com.android.server.backup.restore.RestoreEngine: int TARGET_FAILURE> = -2;

        <com.android.server.backup.restore.RestoreEngine: java.lang.String TAG> = "RestoreEngine";

        <com.android.server.backup.restore.RestoreEngine: int SUCCESS> = 0;

        return;
    }
}
