public class com.android.server.backup.transport.TransportStats extends java.lang.Object
{
    private final java.lang.Object mStatsLock;
    private final java.util.Map mTransportStats;

    public void <init>()
    {
        com.android.server.backup.transport.TransportStats r0;
        java.lang.Object $r1;
        java.util.HashMap $r2;

        r0 := @this: com.android.server.backup.transport.TransportStats;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        r0.<com.android.server.backup.transport.TransportStats: java.lang.Object mStatsLock> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.backup.transport.TransportStats: java.util.Map mTransportStats> = $r2;

        return;
    }

    private static void dumpStats(java.io.PrintWriter, java.lang.String, com.android.server.backup.transport.TransportStats$Stats)
    {
        java.io.PrintWriter r0;
        java.lang.String r1, $r6, $r10, $r14, $r18;
        com.android.server.backup.transport.TransportStats$Stats r2;
        java.lang.Object[] $r3, $r7, $r11, $r15;
        double $d0;
        java.util.Locale $r4, $r8, $r12, $r16;
        java.lang.Double $r5;
        long $l0, $l1;
        java.lang.Long $r9, $r13;
        int $i2;
        java.lang.Integer $r17;

        r0 := @parameter0: java.io.PrintWriter;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: com.android.server.backup.transport.TransportStats$Stats;

        $r4 = <java.util.Locale: java.util.Locale US>;

        $r3 = newarray (java.lang.Object)[2];

        $r3[0] = r1;

        $d0 = r2.<com.android.server.backup.transport.TransportStats$Stats: double average>;

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r3[1] = $r5;

        $r6 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r4, "%sAverage connection time: %.2f ms", $r3);

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r6);

        $r8 = <java.util.Locale: java.util.Locale US>;

        $r7 = newarray (java.lang.Object)[2];

        $r7[0] = r1;

        $l0 = r2.<com.android.server.backup.transport.TransportStats$Stats: long max>;

        $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r7[1] = $r9;

        $r10 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r8, "%sMax connection time: %d ms", $r7);

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r10);

        $r12 = <java.util.Locale: java.util.Locale US>;

        $r11 = newarray (java.lang.Object)[2];

        $r11[0] = r1;

        $l1 = r2.<com.android.server.backup.transport.TransportStats$Stats: long min>;

        $r13 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r11[1] = $r13;

        $r14 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r12, "%sMin connection time: %d ms", $r11);

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r14);

        $r16 = <java.util.Locale: java.util.Locale US>;

        $r15 = newarray (java.lang.Object)[2];

        $r15[0] = r1;

        $i2 = r2.<com.android.server.backup.transport.TransportStats$Stats: int n>;

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r15[1] = $r17;

        $r18 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r16, "%sNumber of connections: %d ", $r15);

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r18);

        return;
    }

    public void dump(java.io.PrintWriter)
    {
        com.android.server.backup.transport.TransportStats r0;
        java.lang.Object r1, $r12, $r14, $r19;
        java.util.Iterator r2;
        com.android.server.backup.transport.TransportStats$Stats r3, $r20;
        java.util.Map $r5, $r9, $r10, $r13;
        java.util.Collection $r6;
        java.util.stream.Stream $r7;
        com.android.server.backup.transport.'-$$Lambda$bnpJn6l0a4iWMupJTDnTAfwT1eA' $r8;
        boolean $z0, $z1, $z2;
        java.util.Set $r11;
        java.lang.String $r16, $r18;
        java.lang.Throwable $r21;
        java.io.PrintWriter r22;
        java.util.Optional r23;
        android.content.ComponentName r24;
        java.lang.StringBuilder r26;
        java.util.function.BinaryOperator r27;

        r0 := @this: com.android.server.backup.transport.TransportStats;

        r22 := @parameter0: java.io.PrintWriter;

        r1 = r0.<com.android.server.backup.transport.TransportStats: java.lang.Object mStatsLock>;

        entermonitor r1;

     label1:
        $r5 = r0.<com.android.server.backup.transport.TransportStats: java.util.Map mTransportStats>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.util.Collection values()>();

        $r7 = interfaceinvoke $r6.<java.util.Collection: java.util.stream.Stream stream()>();

        $r8 = <com.android.server.backup.transport._$$Lambda$bnpJn6l0a4iWMupJTDnTAfwT1eA: com.android.server.backup.transport.'-$$Lambda$bnpJn6l0a4iWMupJTDnTAfwT1eA' INSTANCE>;

        r27 = (java.util.function.BinaryOperator) $r8;

        r23 = interfaceinvoke $r7.<java.util.stream.Stream: java.util.Optional reduce(java.util.function.BinaryOperator)>(r27);

        $z0 = virtualinvoke r23.<java.util.Optional: boolean isPresent()>();

        if $z0 == 0 goto label2;

        $r19 = virtualinvoke r23.<java.util.Optional: java.lang.Object get()>();

        $r20 = (com.android.server.backup.transport.TransportStats$Stats) $r19;

        staticinvoke <com.android.server.backup.transport.TransportStats: void dumpStats(java.io.PrintWriter,java.lang.String,com.android.server.backup.transport.TransportStats$Stats)>(r22, "", $r20);

     label2:
        $r9 = r0.<com.android.server.backup.transport.TransportStats: java.util.Map mTransportStats>;

        $z1 = interfaceinvoke $r9.<java.util.Map: boolean isEmpty()>();

        if $z1 != 0 goto label5;

        virtualinvoke r22.<java.io.PrintWriter: void println(java.lang.String)>("Per transport:");

        $r10 = r0.<com.android.server.backup.transport.TransportStats: java.util.Map mTransportStats>;

        $r11 = interfaceinvoke $r10.<java.util.Map: java.util.Set keySet()>();

        r2 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label5;

        $r12 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r24 = (android.content.ComponentName) $r12;

        $r13 = r0.<com.android.server.backup.transport.TransportStats: java.util.Map mTransportStats>;

        $r14 = interfaceinvoke $r13.<java.util.Map: java.lang.Object get(java.lang.Object)>(r24);

        r3 = (com.android.server.backup.transport.TransportStats$Stats) $r14;

        r26 = new java.lang.StringBuilder;

        specialinvoke r26.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");

        $r16 = virtualinvoke r24.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke r26.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r22.<java.io.PrintWriter: void println(java.lang.String)>($r18);

        staticinvoke <com.android.server.backup.transport.TransportStats: void dumpStats(java.io.PrintWriter,java.lang.String,com.android.server.backup.transport.TransportStats$Stats)>(r22, "        ", r3);

     label4:
        goto label3;

     label5:
        exitmonitor r1;

     label6:
        return;

     label7:
        $r21 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r21;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public com.android.server.backup.transport.TransportStats$Stats getStatsForTransport(android.content.ComponentName)
    {
        com.android.server.backup.transport.TransportStats r0;
        java.lang.Object r1, $r4;
        com.android.server.backup.transport.TransportStats$Stats r2, r7;
        java.util.Map $r3;
        java.lang.Throwable $r5;
        android.content.ComponentName r6;

        r0 := @this: com.android.server.backup.transport.TransportStats;

        r6 := @parameter0: android.content.ComponentName;

        r1 = r0.<com.android.server.backup.transport.TransportStats: java.lang.Object mStatsLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.backup.transport.TransportStats: java.util.Map mTransportStats>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r6);

        r2 = (com.android.server.backup.transport.TransportStats$Stats) $r4;

     label2:
        if r2 != null goto label5;

     label3:
        exitmonitor r1;

     label4:
        return null;

     label5:
        r7 = new com.android.server.backup.transport.TransportStats$Stats;

        specialinvoke r7.<com.android.server.backup.transport.TransportStats$Stats: void <init>(com.android.server.backup.transport.TransportStats$Stats,com.android.server.backup.transport.TransportStats$1)>(r2, null);

        exitmonitor r1;

     label6:
        return r7;

     label7:
        $r5 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    void registerConnectionTime(android.content.ComponentName, long)
    {
        com.android.server.backup.transport.TransportStats r0;
        long l0;
        java.lang.Object r1, $r4;
        com.android.server.backup.transport.TransportStats$Stats r2, r9;
        java.util.Map $r3, $r5;
        java.lang.Throwable $r7;
        android.content.ComponentName r8;

        r0 := @this: com.android.server.backup.transport.TransportStats;

        r8 := @parameter0: android.content.ComponentName;

        l0 := @parameter1: long;

        r1 = r0.<com.android.server.backup.transport.TransportStats: java.lang.Object mStatsLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.backup.transport.TransportStats: java.util.Map mTransportStats>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r8);

        r2 = (com.android.server.backup.transport.TransportStats$Stats) $r4;

     label2:
        r9 = r2;

        if r2 != null goto label5;

     label3:
        r9 = new com.android.server.backup.transport.TransportStats$Stats;

        specialinvoke r9.<com.android.server.backup.transport.TransportStats$Stats: void <init>()>();

     label4:
        $r5 = r0.<com.android.server.backup.transport.TransportStats: java.util.Map mTransportStats>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r8, r9);

     label5:
        staticinvoke <com.android.server.backup.transport.TransportStats$Stats: void access$000(com.android.server.backup.transport.TransportStats$Stats,long)>(r9, l0);

        exitmonitor r1;

     label6:
        return;

     label7:
        $r7 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }
}
