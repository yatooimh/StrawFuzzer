public class com.android.server.backup.transport.TransportUtils extends java.lang.Object
{
    private static final java.lang.String TAG;

    private void <init>()
    {
        com.android.server.backup.transport.TransportUtils r0;

        r0 := @this: com.android.server.backup.transport.TransportUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.android.internal.backup.IBackupTransport checkTransportNotNull(com.android.internal.backup.IBackupTransport) throws com.android.server.backup.transport.TransportNotAvailableException
    {
        com.android.internal.backup.IBackupTransport r0;
        com.android.server.backup.transport.TransportNotAvailableException $r1;

        r0 := @parameter0: com.android.internal.backup.IBackupTransport;

        if r0 == null goto label1;

        return r0;

     label1:
        staticinvoke <com.android.server.backup.transport.TransportUtils: void log(int,java.lang.String,java.lang.String)>(6, "TransportUtils", "Transport not available");

        $r1 = new com.android.server.backup.transport.TransportNotAvailableException;

        specialinvoke $r1.<com.android.server.backup.transport.TransportNotAvailableException: void <init>()>();

        throw $r1;
    }

    static java.lang.String formatMessage(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, r2, $r6;
        java.lang.StringBuilder $r4;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        if r0 == null goto label1;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

     label1:
        if r1 == null goto label2;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] ");

     label2:
        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    static void log(int, java.lang.String, java.lang.String)
    {
        int i0;
        java.lang.String r0, r1;
        boolean $z0;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        if i0 != -1 goto label1;

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>(r0, r1);

        goto label2;

     label1:
        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>(r0, i0);

        if $z0 == 0 goto label2;

        staticinvoke <android.util.Slog: int println(int,java.lang.String,java.lang.String)>(i0, r0, r1);

     label2:
        return;
    }

    public static void <clinit>()
    {
        <com.android.server.backup.transport.TransportUtils: java.lang.String TAG> = "TransportUtils";

        return;
    }
}
