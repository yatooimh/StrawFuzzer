public class com.android.server.backup.utils.AppBackupUtils extends java.lang.Object
{
    private static final boolean DEBUG;
    private static final java.util.Set systemPackagesWhitelistedForAllUsers;

    static void <clinit>()
    {
        java.lang.String[] $r0;
        android.util.ArraySet $r1;

        <com.android.server.backup.utils.AppBackupUtils: boolean DEBUG> = 0;

        $r0 = newarray (java.lang.String)[2];

        $r0[0] = "@pm@";

        $r0[1] = "android";

        $r1 = staticinvoke <com.google.android.collect.Sets: android.util.ArraySet newArraySet(java.lang.Object[])>($r0);

        <com.android.server.backup.utils.AppBackupUtils: java.util.Set systemPackagesWhitelistedForAllUsers> = $r1;

        return;
    }

    public void <init>()
    {
        com.android.server.backup.utils.AppBackupUtils r0;

        r0 := @this: com.android.server.backup.utils.AppBackupUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean appGetsFullBackup(android.content.pm.PackageInfo)
    {
        android.content.pm.PackageInfo r0;
        java.lang.String r1;
        android.content.pm.ApplicationInfo $r2, $r3;
        int $i0, $i1;
        boolean z0;

        r0 := @parameter0: android.content.pm.PackageInfo;

        $r2 = r0.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        r1 = $r2.<android.content.pm.ApplicationInfo: java.lang.String backupAgentName>;

        z0 = 1;

        if r1 == null goto label3;

        $r3 = r0.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i0 = $r3.<android.content.pm.ApplicationInfo: int flags>;

        $i1 = $i0 & 67108864;

        if $i1 == 0 goto label1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;

     label3:
        return 1;
    }

    static boolean appIsDisabled(android.content.pm.ApplicationInfo, int)
    {
        android.content.pm.ApplicationInfo r0;
        int i0;
        java.lang.Object $r1;
        android.content.pm.PackageManagerInternal $r2;
        boolean $z0;

        r0 := @parameter0: android.content.pm.ApplicationInfo;

        i0 := @parameter1: int;

        $r1 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/content/pm/PackageManagerInternal;");

        $r2 = (android.content.pm.PackageManagerInternal) $r1;

        $z0 = staticinvoke <com.android.server.backup.utils.AppBackupUtils: boolean appIsDisabled(android.content.pm.ApplicationInfo,android.content.pm.PackageManagerInternal,int)>(r0, $r2, i0);

        return $z0;
    }

    static boolean appIsDisabled(android.content.pm.ApplicationInfo, android.content.pm.PackageManagerInternal, int)
    {
        android.content.pm.ApplicationInfo r0;
        android.content.pm.PackageManagerInternal r1;
        java.lang.String $r2;
        boolean $z0, $z1;
        int i0, i1;

        r0 := @parameter0: android.content.pm.ApplicationInfo;

        r1 := @parameter1: android.content.pm.PackageManagerInternal;

        i0 := @parameter2: int;

        $r2 = r0.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        i1 = virtualinvoke r1.<android.content.pm.PackageManagerInternal: int getApplicationEnabledState(java.lang.String,int)>($r2, i0);

        if i1 == 0 goto label2;

        if i1 == 2 goto label1;

        if i1 == 3 goto label1;

        if i1 == 4 goto label1;

        return 0;

     label1:
        return 1;

     label2:
        $z0 = r0.<android.content.pm.ApplicationInfo: boolean enabled>;

        $z1 = 1 ^ $z0;

        return $z1;
    }

    public static boolean appIsEligibleForBackup(android.content.pm.ApplicationInfo, int)
    {
        android.content.pm.ApplicationInfo r0;
        int i0;
        java.lang.Object $r1;
        android.content.pm.PackageManagerInternal $r2;
        boolean $z0;

        r0 := @parameter0: android.content.pm.ApplicationInfo;

        i0 := @parameter1: int;

        $r1 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Landroid/content/pm/PackageManagerInternal;");

        $r2 = (android.content.pm.PackageManagerInternal) $r1;

        $z0 = staticinvoke <com.android.server.backup.utils.AppBackupUtils: boolean appIsEligibleForBackup(android.content.pm.ApplicationInfo,android.content.pm.PackageManagerInternal,int)>(r0, $r2, i0);

        return $z0;
    }

    static boolean appIsEligibleForBackup(android.content.pm.ApplicationInfo, android.content.pm.PackageManagerInternal, int)
    {
        android.content.pm.ApplicationInfo r0;
        android.content.pm.PackageManagerInternal r1;
        int i0, $i1, $i2, $i3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.String $r2, $r3, $r4;
        java.util.Set $r5;

        r0 := @parameter0: android.content.pm.ApplicationInfo;

        r1 := @parameter1: android.content.pm.PackageManagerInternal;

        i0 := @parameter2: int;

        $i1 = r0.<android.content.pm.ApplicationInfo: int flags>;

        $i2 = $i1 & 32768;

        if $i2 != 0 goto label1;

        return 0;

     label1:
        $i3 = r0.<android.content.pm.ApplicationInfo: int uid>;

        $z0 = staticinvoke <android.os.UserHandle: boolean isCore(int)>($i3);

        if $z0 == 0 goto label3;

        if i0 == 0 goto label2;

        $r5 = <com.android.server.backup.utils.AppBackupUtils: java.util.Set systemPackagesWhitelistedForAllUsers>;

        $r4 = r0.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $z5 = interfaceinvoke $r5.<java.util.Set: boolean contains(java.lang.Object)>($r4);

        if $z5 != 0 goto label2;

        return 0;

     label2:
        $r3 = r0.<android.content.pm.ApplicationInfo: java.lang.String backupAgentName>;

        if $r3 != null goto label3;

        return 0;

     label3:
        $r2 = r0.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("com.android.sharedstoragebackup");

        if $z1 == 0 goto label4;

        return 0;

     label4:
        $z2 = virtualinvoke r0.<android.content.pm.ApplicationInfo: boolean isInstantApp()>();

        if $z2 == 0 goto label5;

        return 0;

     label5:
        $z3 = staticinvoke <com.android.server.backup.utils.AppBackupUtils: boolean appIsDisabled(android.content.pm.ApplicationInfo,android.content.pm.PackageManagerInternal,int)>(r0, r1, i0);

        $z4 = $z3 ^ 1;

        return $z4;
    }

    public static boolean appIsKeyValueOnly(android.content.pm.PackageInfo)
    {
        android.content.pm.PackageInfo r0;
        boolean $z0, $z1;

        r0 := @parameter0: android.content.pm.PackageInfo;

        $z0 = staticinvoke <com.android.server.backup.utils.AppBackupUtils: boolean appGetsFullBackup(android.content.pm.PackageInfo)>(r0);

        $z1 = $z0 ^ 1;

        return $z1;
    }

    public static boolean appIsRunningAndEligibleForBackupWithTransport(com.android.server.backup.transport.TransportClient, java.lang.String, android.content.pm.PackageManager, int)
    {
        int i0;
        boolean $z0, $z1, $z2, z3, z4;
        java.lang.Exception $r0;
        java.lang.String $r2, $r4, r7;
        android.content.pm.PackageManager$NameNotFoundException $r5;
        com.android.server.backup.transport.TransportClient r6;
        android.content.pm.PackageManager r8;
        android.content.pm.PackageInfo r9;
        android.content.pm.ApplicationInfo r10;
        com.android.internal.backup.IBackupTransport r11;
        java.lang.StringBuilder r13;

        r6 := @parameter0: com.android.server.backup.transport.TransportClient;

        r7 := @parameter1: java.lang.String;

        r8 := @parameter2: android.content.pm.PackageManager;

        i0 := @parameter3: int;

     label01:
        r9 = virtualinvoke r8.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfoAsUser(java.lang.String,int,int)>(r7, 134217728, i0);

        r10 = r9.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $z0 = staticinvoke <com.android.server.backup.utils.AppBackupUtils: boolean appIsEligibleForBackup(android.content.pm.ApplicationInfo,int)>(r10, i0);

        if $z0 == 0 goto label10;

        $z1 = staticinvoke <com.android.server.backup.utils.AppBackupUtils: boolean appIsStopped(android.content.pm.ApplicationInfo)>(r10);

        if $z1 != 0 goto label10;

        z3 = staticinvoke <com.android.server.backup.utils.AppBackupUtils: boolean appIsDisabled(android.content.pm.ApplicationInfo,int)>(r10, i0);

     label02:
        if z3 == 0 goto label03;

        goto label10;

     label03:
        if r6 == null goto label09;

     label04:
        r11 = virtualinvoke r6.<com.android.server.backup.transport.TransportClient: com.android.internal.backup.IBackupTransport connectOrThrow(java.lang.String)>("AppBackupUtils.appIsRunningAndEligibleForBackupWithTransport");

     label05:
        $z2 = staticinvoke <com.android.server.backup.utils.AppBackupUtils: boolean appGetsFullBackup(android.content.pm.PackageInfo)>(r9);

        z4 = interfaceinvoke r11.<com.android.internal.backup.IBackupTransport: boolean isAppEligibleForBackup(android.content.pm.PackageInfo,boolean)>(r9, $z2);

     label06:
        return z4;

     label07:
        $r0 := @caughtexception;

     label08:
        r13 = new java.lang.StringBuilder;

        specialinvoke r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to ask about eligibility: ");

        $r2 = virtualinvoke $r0.<java.lang.Exception: java.lang.String getMessage()>();

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("BackupManagerService", $r4);

     label09:
        return 1;

     label10:
        return 0;

     label11:
        $r5 := @caughtexception;

        return 0;

        catch android.content.pm.PackageManager$NameNotFoundException from label01 to label02 with label11;
        catch java.lang.Exception from label04 to label05 with label07;
        catch android.content.pm.PackageManager$NameNotFoundException from label04 to label05 with label11;
        catch java.lang.Exception from label05 to label06 with label07;
        catch android.content.pm.PackageManager$NameNotFoundException from label05 to label06 with label11;
        catch android.content.pm.PackageManager$NameNotFoundException from label08 to label09 with label11;
    }

    public static boolean appIsStopped(android.content.pm.ApplicationInfo)
    {
        android.content.pm.ApplicationInfo r0;
        int $i0, $i1;
        boolean z0;

        r0 := @parameter0: android.content.pm.ApplicationInfo;

        $i0 = r0.<android.content.pm.ApplicationInfo: int flags>;

        $i1 = $i0 & 2097152;

        if $i1 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public static boolean signaturesMatch(android.content.pm.Signature[], android.content.pm.PackageInfo, android.content.pm.PackageManagerInternal)
    {
        android.content.pm.Signature[] r0, r10;
        android.content.pm.PackageManagerInternal r1;
        android.content.pm.SigningInfo r2;
        int i0, i1, $i2, $i3, i5, i6;
        java.lang.String $r3, $r7;
        android.content.pm.ApplicationInfo $r4;
        boolean $z1, $z2, $z3, z4;
        android.content.pm.Signature $r5, $r6, $r8;
        android.content.pm.PackageInfo r9;

        r0 := @parameter0: android.content.pm.Signature[];

        r9 := @parameter1: android.content.pm.PackageInfo;

        r1 := @parameter2: android.content.pm.PackageManagerInternal;

        if r9 == null goto label12;

        $r3 = r9.<android.content.pm.PackageInfo: java.lang.String packageName>;

        if $r3 != null goto label01;

        goto label12;

     label01:
        $r4 = r9.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i2 = $r4.<android.content.pm.ApplicationInfo: int flags>;

        $i3 = $i2 & 1;

        if $i3 == 0 goto label02;

        return 1;

     label02:
        $z1 = staticinvoke <com.android.internal.util.ArrayUtils: boolean isEmpty(java.lang.Object[])>(r0);

        if $z1 == 0 goto label03;

        return 0;

     label03:
        r2 = r9.<android.content.pm.PackageInfo: android.content.pm.SigningInfo signingInfo>;

        if r2 != null goto label04;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BackupManagerService", "signingInfo is empty, app was either unsigned or the flag PackageManager#GET_SIGNING_CERTIFICATES was not specified");

        return 0;

     label04:
        i0 = lengthof r0;

        if i0 != 1 goto label05;

        $r8 = r0[0];

        $r7 = r9.<android.content.pm.PackageInfo: java.lang.String packageName>;

        $z3 = virtualinvoke r1.<android.content.pm.PackageManagerInternal: boolean isDataRestoreSafe(android.content.pm.Signature,java.lang.String)>($r8, $r7);

        return $z3;

     label05:
        r10 = virtualinvoke r2.<android.content.pm.SigningInfo: android.content.pm.Signature[] getApkContentsSigners()>();

        i1 = lengthof r10;

        i5 = 0;

     label06:
        if i5 >= i0 goto label11;

        i6 = 0;

     label07:
        z4 = 0;

        if i6 >= i1 goto label09;

        $r6 = r0[i5];

        $r5 = r10[i6];

        $z2 = virtualinvoke $r6.<android.content.pm.Signature: boolean equals(java.lang.Object)>($r5);

        if $z2 == 0 goto label08;

        z4 = 1;

        goto label09;

     label08:
        i6 = i6 + 1;

        goto label07;

     label09:
        if z4 != 0 goto label10;

        return 0;

     label10:
        i5 = i5 + 1;

        goto label06;

     label11:
        return 1;

     label12:
        return 0;
    }
}
