public final class com.android.server.backup.utils.RandomAccessFileUtils extends java.lang.Object
{

    public void <init>()
    {
        com.android.server.backup.utils.RandomAccessFileUtils r0;

        r0 := @this: com.android.server.backup.utils.RandomAccessFileUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static java.io.RandomAccessFile getRandomAccessFile(java.io.File) throws java.io.FileNotFoundException
    {
        java.io.File r0;
        java.io.RandomAccessFile $r1;

        r0 := @parameter0: java.io.File;

        $r1 = new java.io.RandomAccessFile;

        specialinvoke $r1.<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>(r0, "rwd");

        return $r1;
    }

    public static boolean readBoolean(java.io.File, boolean)
    {
        java.io.File r0;
        boolean z0, z1;
        java.lang.Throwable $r1, $r2, $r8;
        java.lang.StringBuilder $r3;
        java.lang.String $r5, $r7;
        java.io.RandomAccessFile r9;

        r0 := @parameter0: java.io.File;

        z0 := @parameter1: boolean;

     label01:
        r9 = staticinvoke <com.android.server.backup.utils.RandomAccessFileUtils: java.io.RandomAccessFile getRandomAccessFile(java.io.File)>(r0);

     label02:
        z1 = virtualinvoke r9.<java.io.RandomAccessFile: boolean readBoolean()>();

     label03:
        if r9 == null goto label05;

     label04:
        virtualinvoke r9.<java.io.RandomAccessFile: void close()>();

     label05:
        return z1;

     label06:
        $r1 := @caughtexception;

        if r9 == null goto label11;

     label07:
        virtualinvoke r9.<java.io.RandomAccessFile: void close()>();

     label08:
        goto label11;

     label09:
        $r8 := @caughtexception;

     label10:
        virtualinvoke $r1.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r8);

     label11:
        throw $r1;

     label12:
        $r2 := @caughtexception;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error reading file:");

        $r5 = virtualinvoke r0.<java.io.File: java.lang.String getAbsolutePath()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("BackupManagerService", $r7, $r2);

        return z0;

        catch java.io.IOException from label01 to label02 with label12;
        catch java.lang.Throwable from label02 to label03 with label06;
        catch java.io.IOException from label04 to label05 with label12;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.io.IOException from label10 to label11 with label12;
        catch java.io.IOException from label11 to label12 with label12;
    }

    public static void writeBoolean(java.io.File, boolean)
    {
        java.io.File r0;
        boolean z0;
        java.lang.Throwable $r1, $r2, $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r6, $r8;
        java.io.RandomAccessFile r9;

        r0 := @parameter0: java.io.File;

        z0 := @parameter1: boolean;

     label01:
        r9 = staticinvoke <com.android.server.backup.utils.RandomAccessFileUtils: java.io.RandomAccessFile getRandomAccessFile(java.io.File)>(r0);

     label02:
        virtualinvoke r9.<java.io.RandomAccessFile: void writeBoolean(boolean)>(z0);

     label03:
        if r9 == null goto label05;

     label04:
        virtualinvoke r9.<java.io.RandomAccessFile: void close()>();

     label05:
        goto label13;

     label06:
        $r2 := @caughtexception;

        if r9 == null goto label11;

     label07:
        virtualinvoke r9.<java.io.RandomAccessFile: void close()>();

     label08:
        goto label11;

     label09:
        $r1 := @caughtexception;

     label10:
        virtualinvoke $r2.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r1);

     label11:
        throw $r2;

     label12:
        $r3 := @caughtexception;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error writing file:");

        $r6 = virtualinvoke r0.<java.io.File: java.lang.String getAbsolutePath()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("BackupManagerService", $r8, $r3);

     label13:
        return;

        catch java.io.IOException from label01 to label02 with label12;
        catch java.lang.Throwable from label02 to label03 with label06;
        catch java.io.IOException from label04 to label05 with label12;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.io.IOException from label10 to label11 with label12;
        catch java.io.IOException from label11 to label12 with label12;
    }
}
