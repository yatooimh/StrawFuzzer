public class com.android.server.backup.utils.RestoreUtils extends java.lang.Object
{

    public void <init>()
    {
        com.android.server.backup.utils.RestoreUtils r0;

        r0 := @this: com.android.server.backup.utils.RestoreUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean installApk(java.io.InputStream, android.content.Context, com.android.server.backup.restore.RestoreDeleteObserver, java.util.HashMap, java.util.HashMap, com.android.server.backup.FileMetadata, java.lang.String, com.android.server.backup.utils.BytesReadListener, int)
    {
        java.util.HashMap r0, r35;
        com.android.server.backup.FileMetadata r1;
        com.android.server.backup.utils.BytesReadListener r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r5, $r7, $r10, r36, r46;
        com.android.server.backup.utils.RestoreUtils$LocalIntentReceiver $r8;
        android.content.pm.PackageManager $r9;
        long $l1, $l3, $l5, l9, l12, l15;
        byte $b2, $b4;
        java.lang.Object $r12;
        com.android.server.backup.restore.RestorePolicy $r13;
        java.lang.Throwable $r14, $r15, $r16, $r17, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r28, $r29, $r30, $r31, r43, r49;
        java.lang.Exception $r18, $r19, $r27, r45;
        java.io.InputStream r32;
        android.content.Context r33;
        com.android.server.backup.restore.RestoreDeleteObserver r34;
        int i7, i8, i10, i11, i13, i14;
        boolean z0;
        android.content.pm.PackageInstaller r38;
        android.content.pm.PackageInstaller$SessionParams r39;
        android.content.pm.PackageInstaller$Session r40;
        java.io.OutputStream r41;
        byte[] r42;

        r32 := @parameter0: java.io.InputStream;

        r33 := @parameter1: android.content.Context;

        r34 := @parameter2: com.android.server.backup.restore.RestoreDeleteObserver;

        r35 := @parameter3: java.util.HashMap;

        r0 := @parameter4: java.util.HashMap;

        r1 := @parameter5: com.android.server.backup.FileMetadata;

        r36 := @parameter6: java.lang.String;

        r2 := @parameter7: com.android.server.backup.utils.BytesReadListener;

        i7 := @parameter8: int;

        z0 = 1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Installing from backup: ");

        $r5 = r1.<com.android.server.backup.FileMetadata: java.lang.String packageName>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("BackupManagerService", $r7);

     label01:
        $r8 = new com.android.server.backup.utils.RestoreUtils$LocalIntentReceiver;

        specialinvoke $r8.<com.android.server.backup.utils.RestoreUtils$LocalIntentReceiver: void <init>(com.android.server.backup.utils.RestoreUtils$1)>(null);

        $r9 = virtualinvoke r33.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r38 = virtualinvoke $r9.<android.content.pm.PackageManager: android.content.pm.PackageInstaller getPackageInstaller()>();

        r39 = new android.content.pm.PackageInstaller$SessionParams;

        specialinvoke r39.<android.content.pm.PackageInstaller$SessionParams: void <init>(int)>(1);

     label02:
        virtualinvoke r39.<android.content.pm.PackageInstaller$SessionParams: void setInstallerPackageName(java.lang.String)>(r36);

        i8 = virtualinvoke r38.<android.content.pm.PackageInstaller: int createSession(android.content.pm.PackageInstaller$SessionParams)>(r39);

     label03:
        r40 = virtualinvoke r38.<android.content.pm.PackageInstaller: android.content.pm.PackageInstaller$Session openSession(int)>(i8);

     label04:
        $r10 = r1.<com.android.server.backup.FileMetadata: java.lang.String packageName>;

        $l1 = r1.<com.android.server.backup.FileMetadata: long size>;

        r41 = virtualinvoke r40.<android.content.pm.PackageInstaller$Session: java.io.OutputStream openWrite(java.lang.String,long,long)>($r10, 0L, $l1);

     label05:
        r42 = newarray (byte)[32768];

        l9 = r1.<com.android.server.backup.FileMetadata: long size>;

     label06:
        $b2 = l9 cmp 0L;

        if $b2 <= 0 goto label22;

     label07:
        i10 = lengthof r42;

     label08:
        $l3 = (long) i10;

        $b4 = $l3 cmp l9;

        if $b4 >= 0 goto label12;

     label09:
        i11 = lengthof r42;

     label10:
        l12 = (long) i11;

        goto label13;

     label11:
        $r22 := @caughtexception;

        r43 = $r22;

        goto label40;

     label12:
        l12 = l9;

     label13:
        i13 = (int) l12;

     label14:
        i14 = virtualinvoke r32.<java.io.InputStream: int read(byte[],int,int)>(r42, 0, i13);

     label15:
        if i14 < 0 goto label18;

        l15 = (long) i14;

     label16:
        interfaceinvoke r2.<com.android.server.backup.utils.BytesReadListener: void onBytesRead(long)>(l15);

     label17:
        goto label18;

     label18:
        virtualinvoke r41.<java.io.OutputStream: void write(byte[],int,int)>(r42, 0, i14);

     label19:
        $l5 = (long) i14;

        l9 = l9 - $l5;

        goto label06;

     label20:
        $r14 := @caughtexception;

        r43 = $r14;

        goto label40;

     label21:
        $r26 := @caughtexception;

        r43 = $r26;

        goto label40;

     label22:
        if r41 == null goto label24;

     label23:
        virtualinvoke r41.<java.io.OutputStream: void close()>();

     label24:
        virtualinvoke r40.<android.content.pm.PackageInstaller$Session: void abandon()>();

     label25:
        if r40 == null goto label30;

     label26:
        virtualinvoke r40.<android.content.pm.PackageInstaller$Session: void close()>();

     label27:
        goto label30;

     label28:
        $r30 := @caughtexception;

        goto label60;

     label29:
        $r27 := @caughtexception;

        r45 = $r27;

        goto label57;

     label30:
        r46 = r1.<com.android.server.backup.FileMetadata: java.lang.String packageName>;

     label31:
        $r12 = virtualinvoke r0.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r46);

        $r13 = <com.android.server.backup.restore.RestorePolicy: com.android.server.backup.restore.RestorePolicy ACCEPT>;

        if $r12 == $r13 goto label33;

     label32:
        z0 = 0;

        goto label35;

     label33:
        goto label35;

     label34:
        $r29 := @caughtexception;

        goto label37;

     label35:
        goto label64;

     label36:
        $r23 := @caughtexception;

     label37:
        goto label60;

     label38:
        $r28 := @caughtexception;

        r49 = $r28;

        goto label47;

     label39:
        $r17 := @caughtexception;

        r43 = $r17;

     label40:
        if r41 == null goto label45;

     label41:
        virtualinvoke r41.<java.io.OutputStream: void close()>();

     label42:
        goto label45;

     label43:
        $r21 := @caughtexception;

     label44:
        virtualinvoke r43.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r21);

     label45:
        throw r43;

     label46:
        $r24 := @caughtexception;

        r49 = $r24;

     label47:
        goto label49;

     label48:
        $r16 := @caughtexception;

        r49 = $r16;

     label49:
        if r40 == null goto label54;

     label50:
        virtualinvoke r40.<android.content.pm.PackageInstaller$Session: void close()>();

     label51:
        goto label54;

     label52:
        $r31 := @caughtexception;

     label53:
        virtualinvoke r49.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r31);

     label54:
        throw r49;

     label55:
        $r19 := @caughtexception;

        r45 = $r19;

        goto label57;

     label56:
        $r18 := @caughtexception;

        r45 = $r18;

     label57:
        virtualinvoke r38.<android.content.pm.PackageInstaller: void abandonSession(int)>(i8);

     label58:
        throw r45;

     label59:
        $r15 := @caughtexception;

     label60:
        goto label63;

     label61:
        $r25 := @caughtexception;

        goto label63;

     label62:
        $r20 := @caughtexception;

     label63:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("BackupManagerService", "Unable to transcribe restored apk for install");

        z0 = 0;

     label64:
        return z0;

        catch java.io.IOException from label01 to label02 with label62;
        catch java.io.IOException from label02 to label03 with label61;
        catch java.lang.Exception from label03 to label04 with label56;
        catch java.io.IOException from label03 to label04 with label61;
        catch java.lang.Throwable from label04 to label05 with label48;
        catch java.lang.Throwable from label05 to label06 with label39;
        catch java.lang.Throwable from label07 to label08 with label21;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label14 to label15 with label21;
        catch java.lang.Throwable from label16 to label17 with label20;
        catch java.lang.Throwable from label18 to label19 with label20;
        catch java.lang.Throwable from label23 to label24 with label38;
        catch java.lang.Throwable from label24 to label25 with label38;
        catch java.lang.Exception from label26 to label27 with label29;
        catch java.io.IOException from label26 to label27 with label28;
        catch java.io.IOException from label30 to label31 with label34;
        catch java.io.IOException from label31 to label32 with label36;
        catch java.io.IOException from label35 to label35 with label36;
        catch java.lang.Throwable from label41 to label42 with label43;
        catch java.lang.Throwable from label44 to label45 with label46;
        catch java.lang.Throwable from label45 to label46 with label46;
        catch java.lang.Throwable from label50 to label51 with label52;
        catch java.lang.Exception from label53 to label54 with label55;
        catch java.io.IOException from label53 to label54 with label59;
        catch java.lang.Exception from label54 to label55 with label55;
        catch java.io.IOException from label54 to label55 with label59;
        catch java.io.IOException from label57 to label58 with label59;
        catch java.io.IOException from label58 to label59 with label59;
    }
}
