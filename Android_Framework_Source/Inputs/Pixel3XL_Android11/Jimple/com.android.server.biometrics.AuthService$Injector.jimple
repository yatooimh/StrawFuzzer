public class com.android.server.biometrics.AuthService$Injector extends java.lang.Object
{

    public void <init>()
    {
        com.android.server.biometrics.AuthService$Injector r0;

        r0 := @this: com.android.server.biometrics.AuthService$Injector;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public android.hardware.biometrics.IBiometricService getBiometricService()
    {
        com.android.server.biometrics.AuthService$Injector r0;
        android.os.IBinder $r1;
        android.hardware.biometrics.IBiometricService $r2;

        r0 := @this: com.android.server.biometrics.AuthService$Injector;

        $r1 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("biometric");

        $r2 = staticinvoke <android.hardware.biometrics.IBiometricService$Stub: android.hardware.biometrics.IBiometricService asInterface(android.os.IBinder)>($r1);

        return $r2;
    }

    public java.lang.String[] getConfiguration(android.content.Context)
    {
        com.android.server.biometrics.AuthService$Injector r0;
        android.content.Context r1;
        android.content.res.Resources $r2;
        java.lang.String[] $r3;

        r0 := @this: com.android.server.biometrics.AuthService$Injector;

        r1 := @parameter0: android.content.Context;

        $r2 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources: java.lang.String[] getStringArray(int)>(17235994);

        return $r3;
    }

    public android.hardware.face.IFaceService getFaceService()
    {
        com.android.server.biometrics.AuthService$Injector r0;
        android.os.IBinder $r1;
        android.hardware.face.IFaceService $r2;

        r0 := @this: com.android.server.biometrics.AuthService$Injector;

        $r1 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("face");

        $r2 = staticinvoke <android.hardware.face.IFaceService$Stub: android.hardware.face.IFaceService asInterface(android.os.IBinder)>($r1);

        return $r2;
    }

    public android.hardware.fingerprint.IFingerprintService getFingerprintService()
    {
        com.android.server.biometrics.AuthService$Injector r0;
        android.os.IBinder $r1;
        android.hardware.fingerprint.IFingerprintService $r2;

        r0 := @this: com.android.server.biometrics.AuthService$Injector;

        $r1 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("fingerprint");

        $r2 = staticinvoke <android.hardware.fingerprint.IFingerprintService$Stub: android.hardware.fingerprint.IFingerprintService asInterface(android.os.IBinder)>($r1);

        return $r2;
    }

    public android.hardware.iris.IIrisService getIrisService()
    {
        com.android.server.biometrics.AuthService$Injector r0;
        android.os.IBinder $r1;
        android.hardware.iris.IIrisService $r2;

        r0 := @this: com.android.server.biometrics.AuthService$Injector;

        $r1 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("iris");

        $r2 = staticinvoke <android.hardware.iris.IIrisService$Stub: android.hardware.iris.IIrisService asInterface(android.os.IBinder)>($r1);

        return $r2;
    }

    public void publishBinderService(com.android.server.biometrics.AuthService, android.hardware.biometrics.IAuthService$Stub)
    {
        com.android.server.biometrics.AuthService$Injector r0;
        com.android.server.biometrics.AuthService r1;
        android.hardware.biometrics.IAuthService$Stub r2;

        r0 := @this: com.android.server.biometrics.AuthService$Injector;

        r1 := @parameter0: com.android.server.biometrics.AuthService;

        r2 := @parameter1: android.hardware.biometrics.IAuthService$Stub;

        staticinvoke <com.android.server.biometrics.AuthService: void access$000(com.android.server.biometrics.AuthService,java.lang.String,android.os.IBinder)>(r1, "auth", r2);

        return;
    }
}
