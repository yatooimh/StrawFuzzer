public class com.android.server.biometrics.AuthService extends com.android.server.SystemService
{
    private static final boolean DEBUG;
    private static final java.lang.String TAG;
    private android.hardware.biometrics.IBiometricService mBiometricService;
    final android.hardware.biometrics.IAuthService$Stub mImpl;
    private final com.android.server.biometrics.AuthService$Injector mInjector;

    public void <init>(android.content.Context)
    {
        com.android.server.biometrics.AuthService r0;
        android.content.Context r1;
        com.android.server.biometrics.AuthService$Injector $r2;

        r0 := @this: com.android.server.biometrics.AuthService;

        r1 := @parameter0: android.content.Context;

        $r2 = new com.android.server.biometrics.AuthService$Injector;

        specialinvoke $r2.<com.android.server.biometrics.AuthService$Injector: void <init>()>();

        specialinvoke r0.<com.android.server.biometrics.AuthService: void <init>(android.content.Context,com.android.server.biometrics.AuthService$Injector)>(r1, $r2);

        return;
    }

    public void <init>(android.content.Context, com.android.server.biometrics.AuthService$Injector)
    {
        com.android.server.biometrics.AuthService r0;
        android.content.Context r1;
        com.android.server.biometrics.AuthService$Injector r2;
        com.android.server.biometrics.AuthService$AuthServiceImpl $r3;

        r0 := @this: com.android.server.biometrics.AuthService;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.server.biometrics.AuthService$Injector;

        specialinvoke r0.<com.android.server.SystemService: void <init>(android.content.Context)>(r1);

        r0.<com.android.server.biometrics.AuthService: com.android.server.biometrics.AuthService$Injector mInjector> = r2;

        $r3 = new com.android.server.biometrics.AuthService$AuthServiceImpl;

        specialinvoke $r3.<com.android.server.biometrics.AuthService$AuthServiceImpl: void <init>(com.android.server.biometrics.AuthService,com.android.server.biometrics.AuthService$1)>(r0, null);

        r0.<com.android.server.biometrics.AuthService: android.hardware.biometrics.IAuthService$Stub mImpl> = $r3;

        return;
    }

    static void access$000(com.android.server.biometrics.AuthService, java.lang.String, android.os.IBinder)
    {
        com.android.server.biometrics.AuthService r0;
        java.lang.String r1;
        android.os.IBinder r2;

        r0 := @parameter0: com.android.server.biometrics.AuthService;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.os.IBinder;

        virtualinvoke r0.<com.android.server.biometrics.AuthService: void publishBinderService(java.lang.String,android.os.IBinder)>(r1, r2);

        return;
    }

    static void access$100(com.android.server.biometrics.AuthService)
    {
        com.android.server.biometrics.AuthService r0;

        r0 := @parameter0: com.android.server.biometrics.AuthService;

        specialinvoke r0.<com.android.server.biometrics.AuthService: void checkPermission()>();

        return;
    }

    static void access$200(com.android.server.biometrics.AuthService)
    {
        com.android.server.biometrics.AuthService r0;

        r0 := @parameter0: com.android.server.biometrics.AuthService;

        specialinvoke r0.<com.android.server.biometrics.AuthService: void checkInternalPermission()>();

        return;
    }

    static android.hardware.biometrics.IBiometricService access$300(com.android.server.biometrics.AuthService)
    {
        com.android.server.biometrics.AuthService r0;
        android.hardware.biometrics.IBiometricService $r1;

        r0 := @parameter0: com.android.server.biometrics.AuthService;

        $r1 = r0.<com.android.server.biometrics.AuthService: android.hardware.biometrics.IBiometricService mBiometricService>;

        return $r1;
    }

    private void checkInternalPermission()
    {
        com.android.server.biometrics.AuthService r0;
        android.content.Context $r1;

        r0 := @this: com.android.server.biometrics.AuthService;

        $r1 = virtualinvoke r0.<com.android.server.biometrics.AuthService: android.content.Context getContext()>();

        virtualinvoke $r1.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.USE_BIOMETRIC_INTERNAL", "Must have USE_BIOMETRIC_INTERNAL permission");

        return;
    }

    private void checkPermission()
    {
        com.android.server.biometrics.AuthService r0;
        android.content.Context $r1, $r2;
        int $i0;

        r0 := @this: com.android.server.biometrics.AuthService;

        $r1 = virtualinvoke r0.<com.android.server.biometrics.AuthService: android.content.Context getContext()>();

        $i0 = virtualinvoke $r1.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.USE_FINGERPRINT");

        if $i0 == 0 goto label1;

        $r2 = virtualinvoke r0.<com.android.server.biometrics.AuthService: android.content.Context getContext()>();

        virtualinvoke $r2.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.USE_BIOMETRIC", "Must have USE_BIOMETRIC permission");

     label1:
        return;
    }

    private void registerAuthenticator(com.android.server.biometrics.SensorConfig) throws android.os.RemoteException
    {
        com.android.server.biometrics.AuthService r0;
        com.android.server.biometrics.SensorConfig r1;
        int i0, $i1, $i2, $i3, $i5, $i7, $i9, $i11, $i13, $i14, $i15;
        java.lang.StringBuilder $r2, $r16;
        java.lang.String $r9, $r19;
        com.android.server.biometrics.AuthService$Injector $r10, $r12, $r14;
        com.android.server.biometrics.fingerprint.FingerprintAuthenticator $r11;
        com.android.server.biometrics.iris.IrisAuthenticator $r13;
        com.android.server.biometrics.face.FaceAuthenticator $r15;
        android.hardware.face.IFaceService r22;
        android.hardware.biometrics.IBiometricAuthenticator$Stub r23;
        android.hardware.iris.IIrisService r24;
        android.hardware.fingerprint.IFingerprintService r25;
        android.hardware.biometrics.IBiometricService $r26;

        r0 := @this: com.android.server.biometrics.AuthService;

        r1 := @parameter0: com.android.server.biometrics.SensorConfig;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Registering ID: ");

        $i1 = r1.<com.android.server.biometrics.SensorConfig: int mId>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Modality: ");

        $i2 = r1.<com.android.server.biometrics.SensorConfig: int mModality>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Strength: ");

        $i3 = r1.<com.android.server.biometrics.SensorConfig: int mStrength>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r9 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("AuthService", $r9);

        i0 = r1.<com.android.server.biometrics.SensorConfig: int mModality>;

        if i0 == 2 goto label5;

        if i0 == 4 goto label3;

        if i0 == 8 goto label1;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown modality: ");

        $i11 = r1.<com.android.server.biometrics.SensorConfig: int mModality>;

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("AuthService", $r19);

        return;

     label1:
        $r14 = r0.<com.android.server.biometrics.AuthService: com.android.server.biometrics.AuthService$Injector mInjector>;

        r22 = virtualinvoke $r14.<com.android.server.biometrics.AuthService$Injector: android.hardware.face.IFaceService getFaceService()>();

        if r22 != null goto label2;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("AuthService", "Attempting to register with null FaceService. Please check  your device configuration.");

        return;

     label2:
        $r15 = new com.android.server.biometrics.face.FaceAuthenticator;

        specialinvoke $r15.<com.android.server.biometrics.face.FaceAuthenticator: void <init>(android.hardware.face.IFaceService)>(r22);

        r23 = $r15;

        $i9 = r1.<com.android.server.biometrics.SensorConfig: int mStrength>;

        interfaceinvoke r22.<android.hardware.face.IFaceService: void initConfiguredStrength(int)>($i9);

        goto label7;

     label3:
        $r12 = r0.<com.android.server.biometrics.AuthService: com.android.server.biometrics.AuthService$Injector mInjector>;

        r24 = virtualinvoke $r12.<com.android.server.biometrics.AuthService$Injector: android.hardware.iris.IIrisService getIrisService()>();

        if r24 != null goto label4;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("AuthService", "Attempting to register with null IrisService. Please check your device configuration.");

        return;

     label4:
        $r13 = new com.android.server.biometrics.iris.IrisAuthenticator;

        specialinvoke $r13.<com.android.server.biometrics.iris.IrisAuthenticator: void <init>(android.hardware.iris.IIrisService)>(r24);

        r23 = $r13;

        $i7 = r1.<com.android.server.biometrics.SensorConfig: int mStrength>;

        interfaceinvoke r24.<android.hardware.iris.IIrisService: void initConfiguredStrength(int)>($i7);

        goto label7;

     label5:
        $r10 = r0.<com.android.server.biometrics.AuthService: com.android.server.biometrics.AuthService$Injector mInjector>;

        r25 = virtualinvoke $r10.<com.android.server.biometrics.AuthService$Injector: android.hardware.fingerprint.IFingerprintService getFingerprintService()>();

        if r25 != null goto label6;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("AuthService", "Attempting to register with null FingerprintService. Please check your device configuration.");

        return;

     label6:
        $r11 = new com.android.server.biometrics.fingerprint.FingerprintAuthenticator;

        specialinvoke $r11.<com.android.server.biometrics.fingerprint.FingerprintAuthenticator: void <init>(android.hardware.fingerprint.IFingerprintService)>(r25);

        r23 = $r11;

        $i5 = r1.<com.android.server.biometrics.SensorConfig: int mStrength>;

        interfaceinvoke r25.<android.hardware.fingerprint.IFingerprintService: void initConfiguredStrength(int)>($i5);

     label7:
        $r26 = r0.<com.android.server.biometrics.AuthService: android.hardware.biometrics.IBiometricService mBiometricService>;

        $i13 = r1.<com.android.server.biometrics.SensorConfig: int mId>;

        $i14 = r1.<com.android.server.biometrics.SensorConfig: int mModality>;

        $i15 = r1.<com.android.server.biometrics.SensorConfig: int mStrength>;

        interfaceinvoke $r26.<android.hardware.biometrics.IBiometricService: void registerAuthenticator(int,int,int,android.hardware.biometrics.IBiometricAuthenticator)>($i13, $i14, $i15, r23);

        return;
    }

    public void onStart()
    {
        com.android.server.biometrics.AuthService r0;
        java.lang.String[] r1;
        int i0, i2;
        java.lang.String r2;
        com.android.server.biometrics.AuthService$Injector $r3, $r5, $r8;
        android.hardware.biometrics.IBiometricService $r4;
        android.content.Context $r6;
        android.hardware.biometrics.IAuthService$Stub $r7;
        android.os.RemoteException $r9;
        com.android.server.biometrics.SensorConfig r10;

        r0 := @this: com.android.server.biometrics.AuthService;

        $r3 = r0.<com.android.server.biometrics.AuthService: com.android.server.biometrics.AuthService$Injector mInjector>;

        $r4 = virtualinvoke $r3.<com.android.server.biometrics.AuthService$Injector: android.hardware.biometrics.IBiometricService getBiometricService()>();

        r0.<com.android.server.biometrics.AuthService: android.hardware.biometrics.IBiometricService mBiometricService> = $r4;

        $r5 = r0.<com.android.server.biometrics.AuthService: com.android.server.biometrics.AuthService$Injector mInjector>;

        $r6 = virtualinvoke r0.<com.android.server.biometrics.AuthService: android.content.Context getContext()>();

        r1 = virtualinvoke $r5.<com.android.server.biometrics.AuthService$Injector: java.lang.String[] getConfiguration(android.content.Context)>($r6);

        i0 = lengthof r1;

        i2 = 0;

     label1:
        if i2 >= i0 goto label6;

        r2 = r1[i2];

     label2:
        r10 = new com.android.server.biometrics.SensorConfig;

        specialinvoke r10.<com.android.server.biometrics.SensorConfig: void <init>(java.lang.String)>(r2);

        specialinvoke r0.<com.android.server.biometrics.AuthService: void registerAuthenticator(com.android.server.biometrics.SensorConfig)>(r10);

     label3:
        goto label5;

     label4:
        $r9 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("AuthService", "Remote exception", $r9);

     label5:
        i2 = i2 + 1;

        goto label1;

     label6:
        $r8 = r0.<com.android.server.biometrics.AuthService: com.android.server.biometrics.AuthService$Injector mInjector>;

        $r7 = r0.<com.android.server.biometrics.AuthService: android.hardware.biometrics.IAuthService$Stub mImpl>;

        virtualinvoke $r8.<com.android.server.biometrics.AuthService$Injector: void publishBinderService(com.android.server.biometrics.AuthService,android.hardware.biometrics.IAuthService$Stub)>(r0, $r7);

        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    public static void <clinit>()
    {
        <com.android.server.biometrics.AuthService: java.lang.String TAG> = "AuthService";

        <com.android.server.biometrics.AuthService: boolean DEBUG> = 0;

        return;
    }
}
