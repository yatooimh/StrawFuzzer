final class com.android.server.biometrics.BiometricService$AuthSession extends java.lang.Object implements android.os.IBinder$DeathRecipient
{
    private long mAuthenticatedTimeMs;
    final android.os.Bundle mBundle;
    final int mCallingPid;
    final int mCallingUid;
    final int mCallingUserId;
    final android.hardware.biometrics.IBiometricServiceReceiver mClientReceiver;
    int mErrorEscrow;
    final java.util.HashMap mModalitiesMatched;
    final java.util.HashMap mModalitiesWaiting;
    final int mModality;
    final java.lang.String mOpPackageName;
    final boolean mRequireConfirmation;
    final long mSessionId;
    private long mStartTimeMs;
    int mState;
    final int mSysUiSessionId;
    final android.os.IBinder mToken;
    byte[] mTokenEscrow;
    final int mUserId;
    int mVendorCodeEscrow;
    final com.android.server.biometrics.BiometricService this$0;

    void <init>(com.android.server.biometrics.BiometricService, java.util.HashMap, android.os.IBinder, long, int, android.hardware.biometrics.IBiometricServiceReceiver, java.lang.String, android.os.Bundle, int, int, int, int, boolean)
    {
        com.android.server.biometrics.BiometricService$AuthSession r0;
        java.util.HashMap r1, $r6;
        android.os.IBinder r2, $r13;
        long l0;
        int i1, i2, i3, i4, i5, $i6, $i7;
        android.hardware.biometrics.IBiometricServiceReceiver r3, $r12;
        java.lang.String r4, $r11;
        android.os.Bundle r5;
        boolean z0;
        java.util.Random $r7;
        java.lang.StringBuilder $r8;
        android.os.RemoteException $r14;
        com.android.server.biometrics.BiometricService r15;

        r0 := @this: com.android.server.biometrics.BiometricService$AuthSession;

        r15 := @parameter0: com.android.server.biometrics.BiometricService;

        r1 := @parameter1: java.util.HashMap;

        r2 := @parameter2: android.os.IBinder;

        l0 := @parameter3: long;

        i1 := @parameter4: int;

        r3 := @parameter5: android.hardware.biometrics.IBiometricServiceReceiver;

        r4 := @parameter6: java.lang.String;

        r5 := @parameter7: android.os.Bundle;

        i2 := @parameter8: int;

        i3 := @parameter9: int;

        i4 := @parameter10: int;

        i5 := @parameter11: int;

        z0 := @parameter12: boolean;

        r0.<com.android.server.biometrics.BiometricService$AuthSession: com.android.server.biometrics.BiometricService this$0> = r15;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.biometrics.BiometricService$AuthSession: java.util.HashMap mModalitiesMatched> = $r6;

        r0.<com.android.server.biometrics.BiometricService$AuthSession: int mState> = 0;

        r0.<com.android.server.biometrics.BiometricService$AuthSession: java.util.HashMap mModalitiesWaiting> = r1;

        r0.<com.android.server.biometrics.BiometricService$AuthSession: android.os.IBinder mToken> = r2;

        r0.<com.android.server.biometrics.BiometricService$AuthSession: long mSessionId> = l0;

        r0.<com.android.server.biometrics.BiometricService$AuthSession: int mUserId> = i1;

        r0.<com.android.server.biometrics.BiometricService$AuthSession: android.hardware.biometrics.IBiometricServiceReceiver mClientReceiver> = r3;

        r0.<com.android.server.biometrics.BiometricService$AuthSession: java.lang.String mOpPackageName> = r4;

        r0.<com.android.server.biometrics.BiometricService$AuthSession: android.os.Bundle mBundle> = r5;

        $r7 = staticinvoke <com.android.server.biometrics.BiometricService: java.util.Random access$000(com.android.server.biometrics.BiometricService)>(r15);

        $i6 = virtualinvoke $r7.<java.util.Random: int nextInt()>();

        r0.<com.android.server.biometrics.BiometricService$AuthSession: int mSysUiSessionId> = $i6;

        r0.<com.android.server.biometrics.BiometricService$AuthSession: int mCallingUid> = i2;

        r0.<com.android.server.biometrics.BiometricService$AuthSession: int mCallingPid> = i3;

        r0.<com.android.server.biometrics.BiometricService$AuthSession: int mCallingUserId> = i4;

        r0.<com.android.server.biometrics.BiometricService$AuthSession: int mModality> = i5;

        r0.<com.android.server.biometrics.BiometricService$AuthSession: boolean mRequireConfirmation> = z0;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("New AuthSession, mSysUiSessionId: ");

        $i7 = r0.<com.android.server.biometrics.BiometricService$AuthSession: int mSysUiSessionId>;

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("BiometricService", $r11);

     label1:
        $r12 = r0.<com.android.server.biometrics.BiometricService$AuthSession: android.hardware.biometrics.IBiometricServiceReceiver mClientReceiver>;

        $r13 = interfaceinvoke $r12.<android.hardware.biometrics.IBiometricServiceReceiver: android.os.IBinder asBinder()>();

        interfaceinvoke $r13.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>(r0, 0);

     label2:
        goto label4;

     label3:
        $r14 := @caughtexception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BiometricService", "Unable to link to death");

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    static long access$2000(com.android.server.biometrics.BiometricService$AuthSession)
    {
        com.android.server.biometrics.BiometricService$AuthSession r0;
        long $l0;

        r0 := @parameter0: com.android.server.biometrics.BiometricService$AuthSession;

        $l0 = r0.<com.android.server.biometrics.BiometricService$AuthSession: long mAuthenticatedTimeMs>;

        return $l0;
    }

    static long access$2002(com.android.server.biometrics.BiometricService$AuthSession, long)
    {
        com.android.server.biometrics.BiometricService$AuthSession r0;
        long l0;

        r0 := @parameter0: com.android.server.biometrics.BiometricService$AuthSession;

        l0 := @parameter1: long;

        r0.<com.android.server.biometrics.BiometricService$AuthSession: long mAuthenticatedTimeMs> = l0;

        return l0;
    }

    static long access$2100(com.android.server.biometrics.BiometricService$AuthSession)
    {
        com.android.server.biometrics.BiometricService$AuthSession r0;
        long $l0;

        r0 := @parameter0: com.android.server.biometrics.BiometricService$AuthSession;

        $l0 = r0.<com.android.server.biometrics.BiometricService$AuthSession: long mStartTimeMs>;

        return $l0;
    }

    static long access$2102(com.android.server.biometrics.BiometricService$AuthSession, long)
    {
        com.android.server.biometrics.BiometricService$AuthSession r0;
        long l0;

        r0 := @parameter0: com.android.server.biometrics.BiometricService$AuthSession;

        l0 := @parameter1: long;

        r0.<com.android.server.biometrics.BiometricService$AuthSession: long mStartTimeMs> = l0;

        return l0;
    }

    public void binderDied()
    {
        com.android.server.biometrics.BiometricService$AuthSession r0;
        java.lang.StringBuilder $r2;
        int $i0;
        java.lang.String $r5;
        com.android.server.biometrics.BiometricService $r6;
        android.os.Handler $r7;
        android.os.Message $r8;

        r0 := @this: com.android.server.biometrics.BiometricService$AuthSession;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Binder died, sysUiSessionId: ");

        $i0 = r0.<com.android.server.biometrics.BiometricService$AuthSession: int mSysUiSessionId>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("BiometricService", $r5);

        $r6 = r0.<com.android.server.biometrics.BiometricService$AuthSession: com.android.server.biometrics.BiometricService this$0>;

        $r7 = $r6.<com.android.server.biometrics.BiometricService: android.os.Handler mHandler>;

        $r8 = virtualinvoke $r7.<android.os.Handler: android.os.Message obtainMessage(int)>(14);

        virtualinvoke $r8.<android.os.Message: void sendToTarget()>();

        return;
    }

    boolean containsCookie(int)
    {
        com.android.server.biometrics.BiometricService$AuthSession r0;
        int i0;
        java.lang.Integer $r1, $r2;
        boolean $z0, $z1;
        java.util.HashMap r3, r4;

        r0 := @this: com.android.server.biometrics.BiometricService$AuthSession;

        i0 := @parameter0: int;

        r3 = r0.<com.android.server.biometrics.BiometricService$AuthSession: java.util.HashMap mModalitiesWaiting>;

        if r3 == null goto label1;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $z1 = virtualinvoke r3.<java.util.HashMap: boolean containsValue(java.lang.Object)>($r2);

        if $z1 == 0 goto label1;

        return 1;

     label1:
        r4 = r0.<com.android.server.biometrics.BiometricService$AuthSession: java.util.HashMap mModalitiesMatched>;

        if r4 == null goto label2;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $z0 = virtualinvoke r4.<java.util.HashMap: boolean containsValue(java.lang.Object)>($r1);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    boolean isAllowDeviceCredential()
    {
        com.android.server.biometrics.BiometricService$AuthSession r0;
        android.os.Bundle $r1;
        boolean $z0;

        r0 := @this: com.android.server.biometrics.BiometricService$AuthSession;

        $r1 = r0.<com.android.server.biometrics.BiometricService$AuthSession: android.os.Bundle mBundle>;

        $z0 = staticinvoke <com.android.server.biometrics.Utils: boolean isCredentialRequested(android.os.Bundle)>($r1);

        return $z0;
    }

    boolean isCrypto()
    {
        com.android.server.biometrics.BiometricService$AuthSession r0;
        long $l0;
        byte $b1;
        boolean z0;

        r0 := @this: com.android.server.biometrics.BiometricService$AuthSession;

        $l0 = r0.<com.android.server.biometrics.BiometricService$AuthSession: long mSessionId>;

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }
}
