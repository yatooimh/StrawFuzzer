final class com.android.server.biometrics.BiometricServiceBase$LockoutResetMonitor extends java.lang.Object implements android.os.IBinder$DeathRecipient
{
    private static final long WAKELOCK_TIMEOUT_MS;
    private final android.hardware.biometrics.IBiometricServiceLockoutResetCallback mCallback;
    private final java.lang.Runnable mRemoveCallbackRunnable;
    private final android.os.PowerManager$WakeLock mWakeLock;
    final com.android.server.biometrics.BiometricServiceBase this$0;

    public void <init>(com.android.server.biometrics.BiometricServiceBase, android.hardware.biometrics.IBiometricServiceLockoutResetCallback)
    {
        com.android.server.biometrics.BiometricServiceBase$LockoutResetMonitor r0;
        com.android.server.biometrics.BiometricServiceBase r1;
        com.android.server.biometrics.BiometricServiceBase$LockoutResetMonitor$2 $r2;
        android.os.PowerManager $r3;
        android.os.PowerManager$WakeLock $r4;
        android.hardware.biometrics.IBiometricServiceLockoutResetCallback $r5, r9;
        android.os.IBinder $r6;
        android.os.RemoteException $r7;
        java.lang.String $r8;

        r0 := @this: com.android.server.biometrics.BiometricServiceBase$LockoutResetMonitor;

        r1 := @parameter0: com.android.server.biometrics.BiometricServiceBase;

        r9 := @parameter1: android.hardware.biometrics.IBiometricServiceLockoutResetCallback;

        r0.<com.android.server.biometrics.BiometricServiceBase$LockoutResetMonitor: com.android.server.biometrics.BiometricServiceBase this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new com.android.server.biometrics.BiometricServiceBase$LockoutResetMonitor$2;

        specialinvoke $r2.<com.android.server.biometrics.BiometricServiceBase$LockoutResetMonitor$2: void <init>(com.android.server.biometrics.BiometricServiceBase$LockoutResetMonitor)>(r0);

        r0.<com.android.server.biometrics.BiometricServiceBase$LockoutResetMonitor: java.lang.Runnable mRemoveCallbackRunnable> = $r2;

        r0.<com.android.server.biometrics.BiometricServiceBase$LockoutResetMonitor: android.hardware.biometrics.IBiometricServiceLockoutResetCallback mCallback> = r9;

        $r3 = staticinvoke <com.android.server.biometrics.BiometricServiceBase: android.os.PowerManager access$1000(com.android.server.biometrics.BiometricServiceBase)>(r1);

        $r4 = virtualinvoke $r3.<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>(1, "lockout reset callback");

        r0.<com.android.server.biometrics.BiometricServiceBase$LockoutResetMonitor: android.os.PowerManager$WakeLock mWakeLock> = $r4;

     label1:
        $r5 = r0.<com.android.server.biometrics.BiometricServiceBase$LockoutResetMonitor: android.hardware.biometrics.IBiometricServiceLockoutResetCallback mCallback>;

        $r6 = interfaceinvoke $r5.<android.hardware.biometrics.IBiometricServiceLockoutResetCallback: android.os.IBinder asBinder()>();

        interfaceinvoke $r6.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>(r0, 0);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        $r8 = virtualinvoke r1.<com.android.server.biometrics.BiometricServiceBase: java.lang.String getTag()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r8, "caught remote exception in linkToDeath", $r7);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    static void access$1100(com.android.server.biometrics.BiometricServiceBase$LockoutResetMonitor)
    {
        com.android.server.biometrics.BiometricServiceBase$LockoutResetMonitor r0;

        r0 := @parameter0: com.android.server.biometrics.BiometricServiceBase$LockoutResetMonitor;

        specialinvoke r0.<com.android.server.biometrics.BiometricServiceBase$LockoutResetMonitor: void releaseWakelock()>();

        return;
    }

    private void releaseWakelock()
    {
        com.android.server.biometrics.BiometricServiceBase$LockoutResetMonitor r0;
        android.os.PowerManager$WakeLock $r1, $r2;
        boolean $z0;

        r0 := @this: com.android.server.biometrics.BiometricServiceBase$LockoutResetMonitor;

        $r1 = r0.<com.android.server.biometrics.BiometricServiceBase$LockoutResetMonitor: android.os.PowerManager$WakeLock mWakeLock>;

        $z0 = virtualinvoke $r1.<android.os.PowerManager$WakeLock: boolean isHeld()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<com.android.server.biometrics.BiometricServiceBase$LockoutResetMonitor: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r2.<android.os.PowerManager$WakeLock: void release()>();

     label1:
        return;
    }

    public void binderDied()
    {
        com.android.server.biometrics.BiometricServiceBase$LockoutResetMonitor r0;
        com.android.server.biometrics.BiometricServiceBase $r1, $r3;
        java.lang.String $r2;
        java.lang.Runnable $r4;
        android.os.Handler $r5;

        r0 := @this: com.android.server.biometrics.BiometricServiceBase$LockoutResetMonitor;

        $r1 = r0.<com.android.server.biometrics.BiometricServiceBase$LockoutResetMonitor: com.android.server.biometrics.BiometricServiceBase this$0>;

        $r2 = virtualinvoke $r1.<com.android.server.biometrics.BiometricServiceBase: java.lang.String getTag()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>($r2, "Lockout reset callback binder died");

        $r3 = r0.<com.android.server.biometrics.BiometricServiceBase$LockoutResetMonitor: com.android.server.biometrics.BiometricServiceBase this$0>;

        $r5 = $r3.<com.android.server.biometrics.BiometricServiceBase: android.os.Handler mHandler>;

        $r4 = r0.<com.android.server.biometrics.BiometricServiceBase$LockoutResetMonitor: java.lang.Runnable mRemoveCallbackRunnable>;

        virtualinvoke $r5.<android.os.Handler: boolean post(java.lang.Runnable)>($r4);

        return;
    }

    public void sendLockoutReset()
    {
        com.android.server.biometrics.BiometricServiceBase$LockoutResetMonitor r0;
        long l0;
        com.android.server.biometrics.BiometricServiceBase$LockoutResetMonitor$1 r1;
        android.hardware.biometrics.IBiometricServiceLockoutResetCallback $r2, r14;
        android.os.PowerManager$WakeLock $r3;
        com.android.server.biometrics.BiometricServiceBase $r4, $r6, $r9, $r11;
        android.os.RemoteException $r5;
        java.lang.String $r7, $r10;
        android.os.DeadObjectException $r8;
        java.lang.Runnable $r12;
        android.os.Handler $r13;

        r0 := @this: com.android.server.biometrics.BiometricServiceBase$LockoutResetMonitor;

        $r2 = r0.<com.android.server.biometrics.BiometricServiceBase$LockoutResetMonitor: android.hardware.biometrics.IBiometricServiceLockoutResetCallback mCallback>;

        if $r2 == null goto label5;

     label1:
        $r3 = r0.<com.android.server.biometrics.BiometricServiceBase$LockoutResetMonitor: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r3.<android.os.PowerManager$WakeLock: void acquire(long)>(2000L);

        r14 = r0.<com.android.server.biometrics.BiometricServiceBase$LockoutResetMonitor: android.hardware.biometrics.IBiometricServiceLockoutResetCallback mCallback>;

        $r4 = r0.<com.android.server.biometrics.BiometricServiceBase$LockoutResetMonitor: com.android.server.biometrics.BiometricServiceBase this$0>;

        l0 = virtualinvoke $r4.<com.android.server.biometrics.BiometricServiceBase: long getHalDeviceId()>();

        r1 = new com.android.server.biometrics.BiometricServiceBase$LockoutResetMonitor$1;

        specialinvoke r1.<com.android.server.biometrics.BiometricServiceBase$LockoutResetMonitor$1: void <init>(com.android.server.biometrics.BiometricServiceBase$LockoutResetMonitor)>(r0);

        interfaceinvoke r14.<android.hardware.biometrics.IBiometricServiceLockoutResetCallback: void onLockoutReset(long,android.os.IRemoteCallback)>(l0, r1);

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        $r6 = r0.<com.android.server.biometrics.BiometricServiceBase$LockoutResetMonitor: com.android.server.biometrics.BiometricServiceBase this$0>;

        $r7 = virtualinvoke $r6.<com.android.server.biometrics.BiometricServiceBase: java.lang.String getTag()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r7, "Failed to invoke onLockoutReset: ", $r5);

        specialinvoke r0.<com.android.server.biometrics.BiometricServiceBase$LockoutResetMonitor: void releaseWakelock()>();

        goto label5;

     label4:
        $r8 := @caughtexception;

        $r9 = r0.<com.android.server.biometrics.BiometricServiceBase$LockoutResetMonitor: com.android.server.biometrics.BiometricServiceBase this$0>;

        $r10 = virtualinvoke $r9.<com.android.server.biometrics.BiometricServiceBase: java.lang.String getTag()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r10, "Death object while invoking onLockoutReset: ", $r8);

        $r11 = r0.<com.android.server.biometrics.BiometricServiceBase$LockoutResetMonitor: com.android.server.biometrics.BiometricServiceBase this$0>;

        $r13 = $r11.<com.android.server.biometrics.BiometricServiceBase: android.os.Handler mHandler>;

        $r12 = r0.<com.android.server.biometrics.BiometricServiceBase$LockoutResetMonitor: java.lang.Runnable mRemoveCallbackRunnable>;

        virtualinvoke $r13.<android.os.Handler: boolean post(java.lang.Runnable)>($r12);

     label5:
        return;

        catch android.os.DeadObjectException from label1 to label2 with label4;
        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <com.android.server.biometrics.BiometricServiceBase$LockoutResetMonitor: long WAKELOCK_TIMEOUT_MS> = 2000L;

        return;
    }
}
