public abstract class com.android.server.biometrics.BiometricServiceBase extends com.android.server.SystemService implements android.os.IHwBinder$DeathRecipient
{
    private static final long CANCEL_TIMEOUT_LIMIT;
    private static final boolean CLEANUP_UNKNOWN_TEMPLATES;
    protected static final boolean DEBUG;
    private static final java.lang.String KEY_LOCKOUT_RESET_USER;
    private static final int MSG_USER_SWITCHING;
    private final android.app.IActivityTaskManager mActivityTaskManager;
    protected final android.app.AppOpsManager mAppOps;
    protected final java.util.Map mAuthenticatorIds;
    private android.hardware.biometrics.IBiometricService mBiometricService;
    private final android.content.Context mContext;
    protected java.util.HashMap mCryptoPerformanceMap;
    private com.android.server.biometrics.ClientMonitor mCurrentClient;
    protected int mCurrentUserId;
    protected int mHALDeathCount;
    protected long mHalDeviceId;
    protected final android.os.Handler mHandler;
    protected boolean mIsCrypto;
    private final java.lang.String mKeyguardPackage;
    private final java.util.ArrayList mLockoutMonitors;
    private final com.android.internal.logging.MetricsLogger mMetricsLogger;
    private int mOEMStrength;
    private final java.lang.Runnable mOnTaskStackChangedRunnable;
    private com.android.server.biometrics.ClientMonitor mPendingClient;
    protected java.util.HashMap mPerformanceMap;
    private com.android.server.biometrics.BiometricServiceBase$PerformanceStats mPerformanceStats;
    private final android.os.PowerManager mPowerManager;
    private final com.android.server.biometrics.BiometricServiceBase$ResetClientStateRunnable mResetClientState;
    protected final com.android.internal.statusbar.IStatusBarService mStatusBarService;
    private final com.android.server.biometrics.BiometricServiceBase$BiometricTaskStackListener mTaskStackListener;
    private final android.os.IBinder mToken;
    private final java.util.ArrayList mUnknownHALTemplates;
    private final android.os.UserManager mUserManager;

    public void <init>(android.content.Context)
    {
        com.android.server.biometrics.BiometricServiceBase r0;
        android.content.ComponentName r1;
        com.android.server.biometrics.BiometricServiceBase$BiometricTaskStackListener $r2;
        com.android.server.biometrics.BiometricServiceBase$ResetClientStateRunnable $r3;
        java.util.ArrayList $r4, $r10;
        java.util.HashMap $r5, $r11, $r12;
        java.util.Map $r6;
        com.android.server.biometrics.BiometricServiceBase$1 $r7;
        android.os.Looper $r8;
        android.os.Binder $r9;
        com.android.server.biometrics.BiometricServiceBase$2 $r13;
        android.os.IBinder $r14;
        com.android.internal.statusbar.IStatusBarService $r15;
        android.content.res.Resources $r16;
        java.lang.String $r17, r29;
        java.lang.Object $r18, $r20, $r23;
        android.app.AppOpsManager $r19;
        android.app.IActivityTaskManager $r21;
        android.content.Context $r22, $r25, r28;
        android.os.PowerManager $r24;
        android.os.UserManager $r26;
        com.android.internal.logging.MetricsLogger $r27;
        android.app.ActivityTaskManager r30;

        r0 := @this: com.android.server.biometrics.BiometricServiceBase;

        r28 := @parameter0: android.content.Context;

        specialinvoke r0.<com.android.server.SystemService: void <init>(android.content.Context)>(r28);

        r29 = null;

        $r2 = new com.android.server.biometrics.BiometricServiceBase$BiometricTaskStackListener;

        specialinvoke $r2.<com.android.server.biometrics.BiometricServiceBase$BiometricTaskStackListener: void <init>(com.android.server.biometrics.BiometricServiceBase,com.android.server.biometrics.BiometricServiceBase$1)>(r0, null);

        r0.<com.android.server.biometrics.BiometricServiceBase: com.android.server.biometrics.BiometricServiceBase$BiometricTaskStackListener mTaskStackListener> = $r2;

        $r3 = new com.android.server.biometrics.BiometricServiceBase$ResetClientStateRunnable;

        specialinvoke $r3.<com.android.server.biometrics.BiometricServiceBase$ResetClientStateRunnable: void <init>(com.android.server.biometrics.BiometricServiceBase,com.android.server.biometrics.BiometricServiceBase$1)>(r0, null);

        r0.<com.android.server.biometrics.BiometricServiceBase: com.android.server.biometrics.BiometricServiceBase$ResetClientStateRunnable mResetClientState> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.biometrics.BiometricServiceBase: java.util.ArrayList mLockoutMonitors> = $r4;

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        $r6 = staticinvoke <java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>($r5);

        r0.<com.android.server.biometrics.BiometricServiceBase: java.util.Map mAuthenticatorIds> = $r6;

        $r7 = new com.android.server.biometrics.BiometricServiceBase$1;

        $r8 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        specialinvoke $r7.<com.android.server.biometrics.BiometricServiceBase$1: void <init>(com.android.server.biometrics.BiometricServiceBase,android.os.Looper)>(r0, $r8);

        r0.<com.android.server.biometrics.BiometricServiceBase: android.os.Handler mHandler> = $r7;

        $r9 = new android.os.Binder;

        specialinvoke $r9.<android.os.Binder: void <init>()>();

        r0.<com.android.server.biometrics.BiometricServiceBase: android.os.IBinder mToken> = $r9;

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.biometrics.BiometricServiceBase: java.util.ArrayList mUnknownHALTemplates> = $r10;

        r0.<com.android.server.biometrics.BiometricServiceBase: int mCurrentUserId> = -10000;

        $r11 = new java.util.HashMap;

        specialinvoke $r11.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.biometrics.BiometricServiceBase: java.util.HashMap mPerformanceMap> = $r11;

        $r12 = new java.util.HashMap;

        specialinvoke $r12.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.biometrics.BiometricServiceBase: java.util.HashMap mCryptoPerformanceMap> = $r12;

        $r13 = new com.android.server.biometrics.BiometricServiceBase$2;

        specialinvoke $r13.<com.android.server.biometrics.BiometricServiceBase$2: void <init>(com.android.server.biometrics.BiometricServiceBase)>(r0);

        r0.<com.android.server.biometrics.BiometricServiceBase: java.lang.Runnable mOnTaskStackChangedRunnable> = $r13;

        r0.<com.android.server.biometrics.BiometricServiceBase: android.content.Context mContext> = r28;

        $r14 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("statusbar");

        $r15 = staticinvoke <com.android.internal.statusbar.IStatusBarService$Stub: com.android.internal.statusbar.IStatusBarService asInterface(android.os.IBinder)>($r14);

        r0.<com.android.server.biometrics.BiometricServiceBase: com.android.internal.statusbar.IStatusBarService mStatusBarService> = $r15;

        $r16 = virtualinvoke r28.<android.content.Context: android.content.res.Resources getResources()>();

        $r17 = virtualinvoke $r16.<android.content.res.Resources: java.lang.String getString(int)>(17039909);

        r1 = staticinvoke <android.content.ComponentName: android.content.ComponentName unflattenFromString(java.lang.String)>($r17);

        if r1 == null goto label1;

        r29 = virtualinvoke r1.<android.content.ComponentName: java.lang.String getPackageName()>();

     label1:
        r0.<com.android.server.biometrics.BiometricServiceBase: java.lang.String mKeyguardPackage> = r29;

        $r18 = virtualinvoke r28.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/app/AppOpsManager;");

        $r19 = (android.app.AppOpsManager) $r18;

        r0.<com.android.server.biometrics.BiometricServiceBase: android.app.AppOpsManager mAppOps> = $r19;

        $r20 = virtualinvoke r28.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("activity_task");

        r30 = (android.app.ActivityTaskManager) $r20;

        $r21 = staticinvoke <android.app.ActivityTaskManager: android.app.IActivityTaskManager getService()>();

        r0.<com.android.server.biometrics.BiometricServiceBase: android.app.IActivityTaskManager mActivityTaskManager> = $r21;

        $r22 = r0.<com.android.server.biometrics.BiometricServiceBase: android.content.Context mContext>;

        $r23 = virtualinvoke $r22.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/os/PowerManager;");

        $r24 = (android.os.PowerManager) $r23;

        r0.<com.android.server.biometrics.BiometricServiceBase: android.os.PowerManager mPowerManager> = $r24;

        $r25 = r0.<com.android.server.biometrics.BiometricServiceBase: android.content.Context mContext>;

        $r26 = staticinvoke <android.os.UserManager: android.os.UserManager get(android.content.Context)>($r25);

        r0.<com.android.server.biometrics.BiometricServiceBase: android.os.UserManager mUserManager> = $r26;

        $r27 = new com.android.internal.logging.MetricsLogger;

        specialinvoke $r27.<com.android.internal.logging.MetricsLogger: void <init>()>();

        r0.<com.android.server.biometrics.BiometricServiceBase: com.android.internal.logging.MetricsLogger mMetricsLogger> = $r27;

        return;
    }

    static android.os.PowerManager access$1000(com.android.server.biometrics.BiometricServiceBase)
    {
        com.android.server.biometrics.BiometricServiceBase r0;
        android.os.PowerManager $r1;

        r0 := @parameter0: com.android.server.biometrics.BiometricServiceBase;

        $r1 = r0.<com.android.server.biometrics.BiometricServiceBase: android.os.PowerManager mPowerManager>;

        return $r1;
    }

    static void access$1200(com.android.server.biometrics.BiometricServiceBase, com.android.server.biometrics.BiometricServiceBase$LockoutResetMonitor)
    {
        com.android.server.biometrics.BiometricServiceBase r0;
        com.android.server.biometrics.BiometricServiceBase$LockoutResetMonitor r1;

        r0 := @parameter0: com.android.server.biometrics.BiometricServiceBase;

        r1 := @parameter1: com.android.server.biometrics.BiometricServiceBase$LockoutResetMonitor;

        specialinvoke r0.<com.android.server.biometrics.BiometricServiceBase: void removeLockoutResetCallback(com.android.server.biometrics.BiometricServiceBase$LockoutResetMonitor)>(r1);

        return;
    }

    static boolean access$200(com.android.server.biometrics.BiometricServiceBase, java.lang.String)
    {
        com.android.server.biometrics.BiometricServiceBase r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @parameter0: com.android.server.biometrics.BiometricServiceBase;

        r1 := @parameter1: java.lang.String;

        $z0 = specialinvoke r0.<com.android.server.biometrics.BiometricServiceBase: boolean isKeyguard(java.lang.String)>(r1);

        return $z0;
    }

    static com.android.server.biometrics.BiometricServiceBase$BiometricTaskStackListener access$300(com.android.server.biometrics.BiometricServiceBase)
    {
        com.android.server.biometrics.BiometricServiceBase r0;
        com.android.server.biometrics.BiometricServiceBase$BiometricTaskStackListener $r1;

        r0 := @parameter0: com.android.server.biometrics.BiometricServiceBase;

        $r1 = r0.<com.android.server.biometrics.BiometricServiceBase: com.android.server.biometrics.BiometricServiceBase$BiometricTaskStackListener mTaskStackListener>;

        return $r1;
    }

    static android.app.IActivityTaskManager access$400(com.android.server.biometrics.BiometricServiceBase)
    {
        com.android.server.biometrics.BiometricServiceBase r0;
        android.app.IActivityTaskManager $r1;

        r0 := @parameter0: com.android.server.biometrics.BiometricServiceBase;

        $r1 = r0.<com.android.server.biometrics.BiometricServiceBase: android.app.IActivityTaskManager mActivityTaskManager>;

        return $r1;
    }

    static void access$500(com.android.server.biometrics.BiometricServiceBase)
    {
        com.android.server.biometrics.BiometricServiceBase r0;

        r0 := @parameter0: com.android.server.biometrics.BiometricServiceBase;

        specialinvoke r0.<com.android.server.biometrics.BiometricServiceBase: void userActivity()>();

        return;
    }

    static com.android.server.biometrics.BiometricServiceBase$PerformanceStats access$600(com.android.server.biometrics.BiometricServiceBase)
    {
        com.android.server.biometrics.BiometricServiceBase r0;
        com.android.server.biometrics.BiometricServiceBase$PerformanceStats $r1;

        r0 := @parameter0: com.android.server.biometrics.BiometricServiceBase;

        $r1 = r0.<com.android.server.biometrics.BiometricServiceBase: com.android.server.biometrics.BiometricServiceBase$PerformanceStats mPerformanceStats>;

        return $r1;
    }

    static com.android.server.biometrics.ClientMonitor access$700(com.android.server.biometrics.BiometricServiceBase)
    {
        com.android.server.biometrics.BiometricServiceBase r0;
        com.android.server.biometrics.ClientMonitor $r1;

        r0 := @parameter0: com.android.server.biometrics.BiometricServiceBase;

        $r1 = r0.<com.android.server.biometrics.BiometricServiceBase: com.android.server.biometrics.ClientMonitor mCurrentClient>;

        return $r1;
    }

    static com.android.server.biometrics.ClientMonitor access$702(com.android.server.biometrics.BiometricServiceBase, com.android.server.biometrics.ClientMonitor)
    {
        com.android.server.biometrics.BiometricServiceBase r0;
        com.android.server.biometrics.ClientMonitor r1;

        r0 := @parameter0: com.android.server.biometrics.BiometricServiceBase;

        r1 := @parameter1: com.android.server.biometrics.ClientMonitor;

        r0.<com.android.server.biometrics.BiometricServiceBase: com.android.server.biometrics.ClientMonitor mCurrentClient> = r1;

        return r1;
    }

    static java.lang.Runnable access$800(com.android.server.biometrics.BiometricServiceBase)
    {
        com.android.server.biometrics.BiometricServiceBase r0;
        java.lang.Runnable $r1;

        r0 := @parameter0: com.android.server.biometrics.BiometricServiceBase;

        $r1 = r0.<com.android.server.biometrics.BiometricServiceBase: java.lang.Runnable mOnTaskStackChangedRunnable>;

        return $r1;
    }

    static com.android.server.biometrics.ClientMonitor access$900(com.android.server.biometrics.BiometricServiceBase)
    {
        com.android.server.biometrics.BiometricServiceBase r0;
        com.android.server.biometrics.ClientMonitor $r1;

        r0 := @parameter0: com.android.server.biometrics.BiometricServiceBase;

        $r1 = r0.<com.android.server.biometrics.BiometricServiceBase: com.android.server.biometrics.ClientMonitor mPendingClient>;

        return $r1;
    }

    static com.android.server.biometrics.ClientMonitor access$902(com.android.server.biometrics.BiometricServiceBase, com.android.server.biometrics.ClientMonitor)
    {
        com.android.server.biometrics.BiometricServiceBase r0;
        com.android.server.biometrics.ClientMonitor r1;

        r0 := @parameter0: com.android.server.biometrics.BiometricServiceBase;

        r1 := @parameter1: com.android.server.biometrics.ClientMonitor;

        r0.<com.android.server.biometrics.BiometricServiceBase: com.android.server.biometrics.ClientMonitor mPendingClient> = r1;

        return r1;
    }

    private void clearEnumerateState()
    {
        com.android.server.biometrics.BiometricServiceBase r0;
        java.lang.String $r1;
        java.util.ArrayList $r2;

        r0 := @this: com.android.server.biometrics.BiometricServiceBase;

        $r1 = virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: java.lang.String getTag()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>($r1, "clearEnumerateState()");

        $r2 = r0.<com.android.server.biometrics.BiometricServiceBase: java.util.ArrayList mUnknownHALTemplates>;

        virtualinvoke $r2.<java.util.ArrayList: void clear()>();

        return;
    }

    private void enumerateUser(int)
    {
        com.android.server.biometrics.BiometricServiceBase r0;
        int i0;
        java.lang.String r1, $r6, $r7, $r13;
        boolean z0, $z1;
        java.lang.StringBuilder $r2;
        com.android.server.biometrics.BiometricServiceBase$InternalEnumerateClient $r8;
        android.content.Context $r9, $r12;
        com.android.server.biometrics.BiometricServiceBase$DaemonWrapper $r10;
        long $l2;
        android.os.IBinder $r11;
        com.android.server.biometrics.BiometricUtils $r14;
        java.util.List r16;

        r0 := @this: com.android.server.biometrics.BiometricServiceBase;

        i0 := @parameter0: int;

        r1 = virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: java.lang.String getTag()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Enumerating user(");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>(r1, $r6);

        $r7 = virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: java.lang.String getManageBiometricPermission()>();

        z0 = virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: boolean hasPermission(java.lang.String)>($r7);

        r16 = virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: java.util.List getEnrolledTemplates(int)>(i0);

        $r8 = new com.android.server.biometrics.BiometricServiceBase$InternalEnumerateClient;

        $r9 = virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: android.content.Context getContext()>();

        $r10 = virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: com.android.server.biometrics.BiometricServiceBase$DaemonWrapper getDaemonWrapper()>();

        $l2 = r0.<com.android.server.biometrics.BiometricServiceBase: long mHalDeviceId>;

        $r11 = r0.<com.android.server.biometrics.BiometricServiceBase: android.os.IBinder mToken>;

        $z1 = z0 ^ 1;

        $r12 = virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: android.content.Context getContext()>();

        $r13 = virtualinvoke $r12.<android.content.Context: java.lang.String getOpPackageName()>();

        $r14 = virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: com.android.server.biometrics.BiometricUtils getBiometricUtils()>();

        specialinvoke $r8.<com.android.server.biometrics.BiometricServiceBase$InternalEnumerateClient: void <init>(com.android.server.biometrics.BiometricServiceBase,android.content.Context,com.android.server.biometrics.BiometricServiceBase$DaemonWrapper,long,android.os.IBinder,com.android.server.biometrics.BiometricServiceBase$ServiceListener,int,int,boolean,java.lang.String,java.util.List,com.android.server.biometrics.BiometricUtils)>(r0, $r9, $r10, $l2, $r11, null, i0, i0, $z1, $r13, r16, $r14);

        virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: void enumerateInternal(com.android.server.biometrics.EnumerateClient)>($r8);

        return;
    }

    private int getEffectiveUserId(int)
    {
        com.android.server.biometrics.BiometricServiceBase r0;
        android.os.UserManager r1;
        long l0;
        android.content.Context $r2;
        java.lang.String $r3;
        int i2;

        r0 := @this: com.android.server.biometrics.BiometricServiceBase;

        i2 := @parameter0: int;

        $r2 = r0.<com.android.server.biometrics.BiometricServiceBase: android.content.Context mContext>;

        r1 = staticinvoke <android.os.UserManager: android.os.UserManager get(android.content.Context)>($r2);

        if r1 == null goto label1;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        i2 = virtualinvoke r1.<android.os.UserManager: int getCredentialOwnerProfile(int)>(i2);

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        goto label2;

     label1:
        $r3 = virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: java.lang.String getTag()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>($r3, "Unable to acquire UserManager");

     label2:
        return i2;
    }

    private boolean isCurrentClient(java.lang.String)
    {
        com.android.server.biometrics.BiometricServiceBase r0;
        java.lang.String r1, $r3;
        com.android.server.biometrics.ClientMonitor r2;
        boolean $z0, z1;

        r0 := @this: com.android.server.biometrics.BiometricServiceBase;

        r1 := @parameter0: java.lang.String;

        r2 = r0.<com.android.server.biometrics.BiometricServiceBase: com.android.server.biometrics.ClientMonitor mCurrentClient>;

        if r2 == null goto label1;

        $r3 = virtualinvoke r2.<com.android.server.biometrics.ClientMonitor: java.lang.String getOwnerString()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    private boolean isForegroundActivity(int, int)
    {
        com.android.server.biometrics.BiometricServiceBase r0;
        int i0, i1, i2, i3, $i4, $i5, i8;
        java.util.List r1;
        android.app.IActivityManager $r2;
        java.lang.Object $r3;
        java.lang.String $r4, $r6;
        android.os.RemoteException $r5;
        android.app.ActivityManager$RunningAppProcessInfo r7;

        r0 := @this: com.android.server.biometrics.BiometricServiceBase;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

     label01:
        $r2 = staticinvoke <android.app.ActivityManager: android.app.IActivityManager getService()>();

        r1 = interfaceinvoke $r2.<android.app.IActivityManager: java.util.List getRunningAppProcesses()>();

     label02:
        if r1 != null goto label05;

     label03:
        $r4 = virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: java.lang.String getTag()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>($r4, "Processes null, defaulting to true");

     label04:
        return 1;

     label05:
        i2 = interfaceinvoke r1.<java.util.List: int size()>();

     label06:
        i8 = 0;

     label07:
        if i8 >= i2 goto label11;

     label08:
        $r3 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i8);

        r7 = (android.app.ActivityManager$RunningAppProcessInfo) $r3;

        $i4 = r7.<android.app.ActivityManager$RunningAppProcessInfo: int pid>;

        if $i4 != i1 goto label10;

        $i5 = r7.<android.app.ActivityManager$RunningAppProcessInfo: int uid>;

        if $i5 != i0 goto label10;

        i3 = r7.<android.app.ActivityManager$RunningAppProcessInfo: int importance>;

     label09:
        if i3 > 125 goto label10;

        return 1;

     label10:
        i8 = i8 + 1;

        goto label07;

     label11:
        goto label13;

     label12:
        $r5 := @caughtexception;

        $r6 = virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: java.lang.String getTag()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>($r6, "am.getRunningAppProcesses() failed");

     label13:
        return 0;

        catch android.os.RemoteException from label01 to label02 with label12;
        catch android.os.RemoteException from label03 to label04 with label12;
        catch android.os.RemoteException from label05 to label06 with label12;
        catch android.os.RemoteException from label08 to label09 with label12;
    }

    private boolean isKeyguard(java.lang.String)
    {
        com.android.server.biometrics.BiometricServiceBase r0;
        java.lang.String r1, $r2;
        boolean $z0;

        r0 := @this: com.android.server.biometrics.BiometricServiceBase;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.biometrics.BiometricServiceBase: java.lang.String mKeyguardPackage>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        return $z0;
    }

    private boolean isWorkProfile(int)
    {
        com.android.server.biometrics.BiometricServiceBase r0;
        int i0;
        long l1;
        android.os.UserManager $r1;
        boolean $z0, z1;
        java.lang.Throwable $r2;
        android.content.pm.UserInfo r3;

        r0 := @this: com.android.server.biometrics.BiometricServiceBase;

        i0 := @parameter0: int;

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r1 = r0.<com.android.server.biometrics.BiometricServiceBase: android.os.UserManager mUserManager>;

        r3 = virtualinvoke $r1.<android.os.UserManager: android.content.pm.UserInfo getUserInfo(int)>(i0);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        if r3 == null goto label3;

        $z0 = virtualinvoke r3.<android.content.pm.UserInfo: boolean isManagedProfile()>();

        if $z0 == 0 goto label3;

        z1 = 1;

        goto label4;

     label3:
        z1 = 0;

     label4:
        return z1;

     label5:
        $r2 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label5;
    }

    private void listenForUserSwitches()
    {
        com.android.server.biometrics.BiometricServiceBase r0;
        com.android.server.biometrics.BiometricServiceBase$3 r1;
        java.lang.String $r2, $r4;
        android.os.RemoteException $r3;
        android.app.IActivityManager r5;

        r0 := @this: com.android.server.biometrics.BiometricServiceBase;

     label1:
        r5 = staticinvoke <android.app.ActivityManager: android.app.IActivityManager getService()>();

        r1 = new com.android.server.biometrics.BiometricServiceBase$3;

        specialinvoke r1.<com.android.server.biometrics.BiometricServiceBase$3: void <init>(com.android.server.biometrics.BiometricServiceBase)>(r0);

        $r2 = virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: java.lang.String getTag()>();

        interfaceinvoke r5.<android.app.IActivityManager: void registerUserSwitchObserver(android.app.IUserSwitchObserver,java.lang.String)>(r1, $r2);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: java.lang.String getTag()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r4, "Failed to listen for user switching event", $r3);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private void removeLockoutResetCallback(com.android.server.biometrics.BiometricServiceBase$LockoutResetMonitor)
    {
        com.android.server.biometrics.BiometricServiceBase r0;
        com.android.server.biometrics.BiometricServiceBase$LockoutResetMonitor r1;
        java.util.ArrayList $r2;

        r0 := @this: com.android.server.biometrics.BiometricServiceBase;

        r1 := @parameter0: com.android.server.biometrics.BiometricServiceBase$LockoutResetMonitor;

        $r2 = r0.<com.android.server.biometrics.BiometricServiceBase: java.util.ArrayList mLockoutMonitors>;

        virtualinvoke $r2.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        return;
    }

    private void startAuthentication(com.android.server.biometrics.BiometricServiceBase$AuthenticationClientImpl, java.lang.String)
    {
        com.android.server.biometrics.BiometricServiceBase r0;
        com.android.server.biometrics.BiometricServiceBase$AuthenticationClientImpl r1;
        java.lang.StringBuilder $r3, $r8;
        java.lang.String $r7, $r12, $r13, r14, r15, r16;
        long $l2;
        boolean $z0;
        int i4;
        byte b5;

        r0 := @this: com.android.server.biometrics.BiometricServiceBase;

        r1 := @parameter0: com.android.server.biometrics.BiometricServiceBase$AuthenticationClientImpl;

        r14 := @parameter1: java.lang.String;

        r15 = virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: java.lang.String getTag()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("startAuthentication(");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r14);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>(r15, $r7);

        i4 = virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: int getLockoutMode()>();

        if i4 == 0 goto label4;

        r16 = virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: java.lang.String getTag()>();

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("In lockout mode(");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") ; disallowing authentication");

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>(r16, $r12);

        if i4 != 1 goto label1;

        b5 = 7;

        goto label2;

     label1:
        b5 = 9;

     label2:
        $l2 = virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: long getHalDeviceId()>();

        $z0 = virtualinvoke r1.<com.android.server.biometrics.BiometricServiceBase$AuthenticationClientImpl: boolean onError(long,int,int)>($l2, b5, 0);

        if $z0 != 0 goto label3;

        $r13 = virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: java.lang.String getTag()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>($r13, "Cannot send permanent lockout message to client");

     label3:
        return;

     label4:
        virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: void startClient(com.android.server.biometrics.ClientMonitor,boolean)>(r1, 1);

        return;
    }

    private void startCleanupUnknownHALTemplates()
    {
        com.android.server.biometrics.BiometricServiceBase r0;
        com.android.server.biometrics.BiometricServiceBase$UserTemplate r1;
        boolean z0, $z1, $z3;
        java.util.ArrayList $r2, $r6, $r8;
        com.android.server.biometrics.ClientMonitor $r3, $r5;
        java.lang.String $r4, $r9, $r16;
        java.lang.Object $r7;
        com.android.server.biometrics.BiometricServiceBase$InternalRemovalClient $r10;
        android.content.Context $r11, $r15;
        com.android.server.biometrics.BiometricServiceBase$DaemonWrapper $r12;
        android.hardware.biometrics.BiometricAuthenticator$Identifier $r13;
        long $l1;
        android.os.IBinder $r14;
        int $i2, $i3, $i4;

        r0 := @this: com.android.server.biometrics.BiometricServiceBase;

        $r2 = r0.<com.android.server.biometrics.BiometricServiceBase: java.util.ArrayList mUnknownHALTemplates>;

        $z1 = virtualinvoke $r2.<java.util.ArrayList: boolean isEmpty()>();

        if $z1 != 0 goto label1;

        $r6 = r0.<com.android.server.biometrics.BiometricServiceBase: java.util.ArrayList mUnknownHALTemplates>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(0);

        r1 = (com.android.server.biometrics.BiometricServiceBase$UserTemplate) $r7;

        $r8 = r0.<com.android.server.biometrics.BiometricServiceBase: java.util.ArrayList mUnknownHALTemplates>;

        virtualinvoke $r8.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        $r9 = virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: java.lang.String getManageBiometricPermission()>();

        z0 = virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: boolean hasPermission(java.lang.String)>($r9);

        $r10 = new com.android.server.biometrics.BiometricServiceBase$InternalRemovalClient;

        $r11 = virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: android.content.Context getContext()>();

        $r12 = virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: com.android.server.biometrics.BiometricServiceBase$DaemonWrapper getDaemonWrapper()>();

        $l1 = r0.<com.android.server.biometrics.BiometricServiceBase: long mHalDeviceId>;

        $r14 = r0.<com.android.server.biometrics.BiometricServiceBase: android.os.IBinder mToken>;

        $r13 = r1.<com.android.server.biometrics.BiometricServiceBase$UserTemplate: android.hardware.biometrics.BiometricAuthenticator$Identifier mIdentifier>;

        $i2 = virtualinvoke $r13.<android.hardware.biometrics.BiometricAuthenticator$Identifier: int getBiometricId()>();

        $i3 = r1.<com.android.server.biometrics.BiometricServiceBase$UserTemplate: int mUserId>;

        $z3 = z0 ^ 1;

        $r15 = virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: android.content.Context getContext()>();

        $r16 = virtualinvoke $r15.<android.content.Context: java.lang.String getPackageName()>();

        specialinvoke $r10.<com.android.server.biometrics.BiometricServiceBase$InternalRemovalClient: void <init>(com.android.server.biometrics.BiometricServiceBase,android.content.Context,com.android.server.biometrics.BiometricServiceBase$DaemonWrapper,long,android.os.IBinder,com.android.server.biometrics.BiometricServiceBase$ServiceListener,int,int,int,boolean,java.lang.String)>(r0, $r11, $r12, $l1, $r14, null, $i2, 0, $i3, $z3, $r16);

        virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: void removeInternal(com.android.server.biometrics.RemovalClient)>($r10);

        $i4 = virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: int statsModality()>();

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int,int)>(148, $i4, 3);

        goto label2;

     label1:
        specialinvoke r0.<com.android.server.biometrics.BiometricServiceBase: void clearEnumerateState()>();

        $r3 = r0.<com.android.server.biometrics.BiometricServiceBase: com.android.server.biometrics.ClientMonitor mPendingClient>;

        if $r3 == null goto label2;

        $r4 = virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: java.lang.String getTag()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>($r4, "Enumerate finished, starting pending client");

        $r5 = r0.<com.android.server.biometrics.BiometricServiceBase: com.android.server.biometrics.ClientMonitor mPendingClient>;

        virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: void startClient(com.android.server.biometrics.ClientMonitor,boolean)>($r5, 0);

        r0.<com.android.server.biometrics.BiometricServiceBase: com.android.server.biometrics.ClientMonitor mPendingClient> = null;

     label2:
        return;
    }

    private void userActivity()
    {
        com.android.server.biometrics.BiometricServiceBase r0;
        long l0;
        android.os.PowerManager $r1;

        r0 := @this: com.android.server.biometrics.BiometricServiceBase;

        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r1 = r0.<com.android.server.biometrics.BiometricServiceBase: android.os.PowerManager mPowerManager>;

        virtualinvoke $r1.<android.os.PowerManager: void userActivity(long,int,int)>(l0, 2, 0);

        return;
    }

    protected void addLockoutResetCallback(android.hardware.biometrics.IBiometricServiceLockoutResetCallback)
    {
        com.android.server.biometrics.BiometricServiceBase r0;
        android.hardware.biometrics.IBiometricServiceLockoutResetCallback r1;
        com.android.server.biometrics._$$Lambda$BiometricServiceBase$5zE_f_JKSpUWsfwvdtw36YktZZ0 $r2;
        android.os.Handler $r3;
        java.lang.String $r4;

        r0 := @this: com.android.server.biometrics.BiometricServiceBase;

        r1 := @parameter0: android.hardware.biometrics.IBiometricServiceLockoutResetCallback;

        if r1 != null goto label1;

        $r4 = virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: java.lang.String getTag()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>($r4, "Null LockoutResetCallback");

        return;

     label1:
        $r3 = r0.<com.android.server.biometrics.BiometricServiceBase: android.os.Handler mHandler>;

        $r2 = new com.android.server.biometrics._$$Lambda$BiometricServiceBase$5zE_f_JKSpUWsfwvdtw36YktZZ0;

        specialinvoke $r2.<com.android.server.biometrics._$$Lambda$BiometricServiceBase$5zE_f_JKSpUWsfwvdtw36YktZZ0: void <init>(com.android.server.biometrics.BiometricServiceBase,android.hardware.biometrics.IBiometricServiceLockoutResetCallback)>(r0, r1);

        virtualinvoke $r3.<android.os.Handler: boolean post(java.lang.Runnable)>($r2);

        return;
    }

    protected void authenticateInternal(com.android.server.biometrics.BiometricServiceBase$AuthenticationClientImpl, long, java.lang.String)
    {
        com.android.server.biometrics.BiometricServiceBase r0;
        com.android.server.biometrics.BiometricServiceBase$AuthenticationClientImpl r1;
        long l0;
        java.lang.String r2;
        int $i1, $i2, $i3;

        r0 := @this: com.android.server.biometrics.BiometricServiceBase;

        r1 := @parameter0: com.android.server.biometrics.BiometricServiceBase$AuthenticationClientImpl;

        l0 := @parameter1: long;

        r2 := @parameter2: java.lang.String;

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i2 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i3 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: void authenticateInternal(com.android.server.biometrics.BiometricServiceBase$AuthenticationClientImpl,long,java.lang.String,int,int,int)>(r1, l0, r2, $i1, $i2, $i3);

        return;
    }

    protected void authenticateInternal(com.android.server.biometrics.BiometricServiceBase$AuthenticationClientImpl, long, java.lang.String, int, int, int)
    {
        com.android.server.biometrics.BiometricServiceBase r0;
        long l0;
        java.lang.String r1, r2, $r8;
        int i1, i2, i3;
        boolean $z0;
        com.android.server.biometrics._$$Lambda$BiometricServiceBase$VFT8WmkESkAnonaxJDq_GS_vB4E $r3;
        android.os.Handler $r4;
        java.lang.StringBuilder $r5;
        com.android.server.biometrics.BiometricServiceBase$AuthenticationClientImpl r9;

        r0 := @this: com.android.server.biometrics.BiometricServiceBase;

        r9 := @parameter0: com.android.server.biometrics.BiometricServiceBase$AuthenticationClientImpl;

        l0 := @parameter1: long;

        r1 := @parameter2: java.lang.String;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        $z0 = virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: boolean canUseBiometric(java.lang.String,boolean,int,int,int)>(r1, 1, i1, i2, i3);

        if $z0 != 0 goto label1;

        r2 = virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: java.lang.String getTag()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("authenticate(): reject ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>(r2, $r8);

        return;

     label1:
        $r4 = r0.<com.android.server.biometrics.BiometricServiceBase: android.os.Handler mHandler>;

        $r3 = new com.android.server.biometrics._$$Lambda$BiometricServiceBase$VFT8WmkESkAnonaxJDq_GS_vB4E;

        specialinvoke $r3.<com.android.server.biometrics._$$Lambda$BiometricServiceBase$VFT8WmkESkAnonaxJDq_GS_vB4E: void <init>(com.android.server.biometrics.BiometricServiceBase,long,com.android.server.biometrics.BiometricServiceBase$AuthenticationClientImpl,java.lang.String)>(r0, l0, r9, r1);

        virtualinvoke $r4.<android.os.Handler: boolean post(java.lang.Runnable)>($r3);

        return;
    }

    protected boolean canUseBiometric(java.lang.String, boolean, int, int, int)
    {
        com.android.server.biometrics.BiometricServiceBase r0;
        java.lang.String r1, $r6, $r11, $r16, r17, r19, r21;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        int i0, i1, i2, $i3;
        java.lang.StringBuilder $r2, $r7, $r12;

        r0 := @this: com.android.server.biometrics.BiometricServiceBase;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: void checkUseBiometricPermission()>();

        $i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if $i3 != 1000 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.<com.android.server.biometrics.BiometricServiceBase: boolean isKeyguard(java.lang.String)>(r1);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        $z2 = virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: boolean isCurrentUserOrProfile(int)>(i2);

        if $z2 != 0 goto label3;

        r17 = virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: java.lang.String getTag()>();

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Rejecting ");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; not a current user or profile");

        $r16 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>(r17, $r16);

        return 0;

     label3:
        $z3 = virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: boolean checkAppOps(int,java.lang.String)>(i0, r1);

        if $z3 != 0 goto label4;

        r19 = virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: java.lang.String getTag()>();

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Rejecting ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; permission denied");

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>(r19, $r11);

        return 0;

     label4:
        if z0 == 0 goto label5;

        $z4 = specialinvoke r0.<com.android.server.biometrics.BiometricServiceBase: boolean isForegroundActivity(int,int)>(i0, i1);

        if $z4 != 0 goto label5;

        $z5 = specialinvoke r0.<com.android.server.biometrics.BiometricServiceBase: boolean isCurrentClient(java.lang.String)>(r1);

        if $z5 != 0 goto label5;

        r21 = virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: java.lang.String getTag()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Rejecting ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; not in foreground");

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>(r21, $r6);

        return 0;

     label5:
        return 1;
    }

    protected void cancelAuthenticationInternal(android.os.IBinder, java.lang.String)
    {
        com.android.server.biometrics.BiometricServiceBase r0;
        android.os.IBinder r1;
        java.lang.String r2;
        int $i0, $i1, $i2;

        r0 := @this: com.android.server.biometrics.BiometricServiceBase;

        r1 := @parameter0: android.os.IBinder;

        r2 := @parameter1: java.lang.String;

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i2 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: void cancelAuthenticationInternal(android.os.IBinder,java.lang.String,int,int,int,boolean)>(r1, r2, $i0, $i1, $i2, 1);

        return;
    }

    protected void cancelAuthenticationInternal(android.os.IBinder, java.lang.String, int, int, int, boolean)
    {
        com.android.server.biometrics.BiometricServiceBase r0;
        java.lang.String r1, $r7, $r13, r15, r16;
        int i0, i1, i2;
        boolean z0, $z2;
        java.lang.StringBuilder $r3, $r10;
        com.android.server.biometrics._$$Lambda$BiometricServiceBase$B1PDNz5plOtQUbeZgXMkI_dh_yQ $r8;
        android.os.Handler $r9;
        android.os.IBinder r14;

        r0 := @this: com.android.server.biometrics.BiometricServiceBase;

        r14 := @parameter0: android.os.IBinder;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        z0 := @parameter5: boolean;

        r15 = virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: java.lang.String getTag()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cancelAuthentication(");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>(r15, $r7);

        if z0 == 0 goto label1;

        $z2 = virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: boolean canUseBiometric(java.lang.String,boolean,int,int,int)>(r1, 1, i0, i1, i2);

        if $z2 != 0 goto label1;

        r16 = virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: java.lang.String getTag()>();

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cancelAuthentication(): reject ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>(r16, $r13);

        return;

     label1:
        $r9 = r0.<com.android.server.biometrics.BiometricServiceBase: android.os.Handler mHandler>;

        $r8 = new com.android.server.biometrics._$$Lambda$BiometricServiceBase$B1PDNz5plOtQUbeZgXMkI_dh_yQ;

        specialinvoke $r8.<com.android.server.biometrics._$$Lambda$BiometricServiceBase$B1PDNz5plOtQUbeZgXMkI_dh_yQ: void <init>(com.android.server.biometrics.BiometricServiceBase,android.os.IBinder,boolean)>(r0, r14, z0);

        virtualinvoke $r9.<android.os.Handler: boolean post(java.lang.Runnable)>($r8);

        return;
    }

    protected void cancelEnrollmentInternal(android.os.IBinder)
    {
        com.android.server.biometrics.BiometricServiceBase r0;
        android.os.IBinder r1;
        com.android.server.biometrics._$$Lambda$BiometricServiceBase$yj0NG4umGnnyUerNM_EKxeka05A $r2;
        android.os.Handler $r3;

        r0 := @this: com.android.server.biometrics.BiometricServiceBase;

        r1 := @parameter0: android.os.IBinder;

        $r3 = r0.<com.android.server.biometrics.BiometricServiceBase: android.os.Handler mHandler>;

        $r2 = new com.android.server.biometrics._$$Lambda$BiometricServiceBase$yj0NG4umGnnyUerNM_EKxeka05A;

        specialinvoke $r2.<com.android.server.biometrics._$$Lambda$BiometricServiceBase$yj0NG4umGnnyUerNM_EKxeka05A: void <init>(com.android.server.biometrics.BiometricServiceBase,android.os.IBinder)>(r0, r1);

        virtualinvoke $r3.<android.os.Handler: boolean post(java.lang.Runnable)>($r2);

        return;
    }

    protected abstract boolean checkAppOps(int, java.lang.String);

    protected void checkPermission(java.lang.String)
    {
        com.android.server.biometrics.BiometricServiceBase r0;
        java.lang.String r1, $r8;
        android.content.Context r2;
        java.lang.StringBuilder $r4;

        r0 := @this: com.android.server.biometrics.BiometricServiceBase;

        r1 := @parameter0: java.lang.String;

        r2 = virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: android.content.Context getContext()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Must have ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" permission.");

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>(r1, $r8);

        return;
    }

    protected abstract void checkUseBiometricPermission();

    protected void doTemplateCleanupForUser(int)
    {
        com.android.server.biometrics.BiometricServiceBase r0;
        int i0;

        r0 := @this: com.android.server.biometrics.BiometricServiceBase;

        i0 := @parameter0: int;

        specialinvoke r0.<com.android.server.biometrics.BiometricServiceBase: void enumerateUser(int)>(i0);

        return;
    }

    protected void enrollInternal(com.android.server.biometrics.BiometricServiceBase$EnrollClientImpl, int)
    {
        com.android.server.biometrics.BiometricServiceBase r0;
        com.android.server.biometrics.BiometricServiceBase$EnrollClientImpl r1;
        int i0;
        boolean $z0, $z1;
        com.android.server.biometrics._$$Lambda$BiometricServiceBase$Zy4OXo3HMpNNxU1x5VMDe_5Q3vI $r2;
        android.os.Handler $r3;

        r0 := @this: com.android.server.biometrics.BiometricServiceBase;

        r1 := @parameter0: com.android.server.biometrics.BiometricServiceBase$EnrollClientImpl;

        i0 := @parameter1: int;

        $z0 = virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: boolean hasReachedEnrollmentLimit(int)>(i0);

        if $z0 == 0 goto label1;

        return;

     label1:
        $z1 = virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: boolean isCurrentUserOrProfile(int)>(i0);

        if $z1 != 0 goto label2;

        return;

     label2:
        $r3 = r0.<com.android.server.biometrics.BiometricServiceBase: android.os.Handler mHandler>;

        $r2 = new com.android.server.biometrics._$$Lambda$BiometricServiceBase$Zy4OXo3HMpNNxU1x5VMDe_5Q3vI;

        specialinvoke $r2.<com.android.server.biometrics._$$Lambda$BiometricServiceBase$Zy4OXo3HMpNNxU1x5VMDe_5Q3vI: void <init>(com.android.server.biometrics.BiometricServiceBase,com.android.server.biometrics.BiometricServiceBase$EnrollClientImpl)>(r0, r1);

        virtualinvoke $r3.<android.os.Handler: boolean post(java.lang.Runnable)>($r2);

        return;
    }

    protected void enumerateInternal(com.android.server.biometrics.EnumerateClient)
    {
        com.android.server.biometrics.BiometricServiceBase r0;
        com.android.server.biometrics.EnumerateClient r1;
        com.android.server.biometrics._$$Lambda$BiometricServiceBase$lM_Gght_XjLuQG2iY0xHchO8Xgk $r2;
        android.os.Handler $r3;

        r0 := @this: com.android.server.biometrics.BiometricServiceBase;

        r1 := @parameter0: com.android.server.biometrics.EnumerateClient;

        $r3 = r0.<com.android.server.biometrics.BiometricServiceBase: android.os.Handler mHandler>;

        $r2 = new com.android.server.biometrics._$$Lambda$BiometricServiceBase$lM_Gght_XjLuQG2iY0xHchO8Xgk;

        specialinvoke $r2.<com.android.server.biometrics._$$Lambda$BiometricServiceBase$lM_Gght_XjLuQG2iY0xHchO8Xgk: void <init>(com.android.server.biometrics.BiometricServiceBase,com.android.server.biometrics.EnumerateClient)>(r0, r1);

        virtualinvoke $r3.<android.os.Handler: boolean post(java.lang.Runnable)>($r2);

        return;
    }

    protected long getAuthenticatorId(int)
    {
        com.android.server.biometrics.BiometricServiceBase r0;
        java.util.Map $r1;
        java.lang.Integer $r2;
        java.lang.Long $r3, $r5;
        java.lang.Object $r4;
        long $l0;
        int i1, i2;

        r0 := @this: com.android.server.biometrics.BiometricServiceBase;

        i1 := @parameter0: int;

        i2 = virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: int getUserOrWorkProfileId(java.lang.String,int)>(null, i1);

        $r1 = r0.<com.android.server.biometrics.BiometricServiceBase: java.util.Map mAuthenticatorIds>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L);

        $r4 = interfaceinvoke $r1.<java.util.Map: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)>($r2, $r3);

        $r5 = (java.lang.Long) $r4;

        $l0 = virtualinvoke $r5.<java.lang.Long: long longValue()>();

        return $l0;
    }

    protected abstract com.android.server.biometrics.BiometricUtils getBiometricUtils();

    protected abstract com.android.server.biometrics.Constants getConstants();

    protected com.android.server.biometrics.ClientMonitor getCurrentClient()
    {
        com.android.server.biometrics.BiometricServiceBase r0;
        com.android.server.biometrics.ClientMonitor $r1;

        r0 := @this: com.android.server.biometrics.BiometricServiceBase;

        $r1 = r0.<com.android.server.biometrics.BiometricServiceBase: com.android.server.biometrics.ClientMonitor mCurrentClient>;

        return $r1;
    }

    protected abstract com.android.server.biometrics.BiometricServiceBase$DaemonWrapper getDaemonWrapper();

    protected abstract java.util.List getEnrolledTemplates(int);

    protected abstract long getHalDeviceId();

    protected abstract java.lang.String getLockoutBroadcastPermission();

    protected abstract int getLockoutMode();

    protected abstract java.lang.String getLockoutResetIntent();

    protected abstract java.lang.String getManageBiometricPermission();

    protected com.android.server.biometrics.ClientMonitor getPendingClient()
    {
        com.android.server.biometrics.BiometricServiceBase r0;
        com.android.server.biometrics.ClientMonitor $r1;

        r0 := @this: com.android.server.biometrics.BiometricServiceBase;

        $r1 = r0.<com.android.server.biometrics.BiometricServiceBase: com.android.server.biometrics.ClientMonitor mPendingClient>;

        return $r1;
    }

    protected abstract java.lang.String getTag();

    protected int getUserOrWorkProfileId(java.lang.String, int)
    {
        com.android.server.biometrics.BiometricServiceBase r0;
        java.lang.String r1;
        int i0, $i1;
        boolean $z0, $z1;

        r0 := @this: com.android.server.biometrics.BiometricServiceBase;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $z0 = specialinvoke r0.<com.android.server.biometrics.BiometricServiceBase: boolean isKeyguard(java.lang.String)>(r1);

        if $z0 != 0 goto label1;

        $z1 = specialinvoke r0.<com.android.server.biometrics.BiometricServiceBase: boolean isWorkProfile(int)>(i0);

        if $z1 == 0 goto label1;

        return i0;

     label1:
        $i1 = specialinvoke r0.<com.android.server.biometrics.BiometricServiceBase: int getEffectiveUserId(int)>(i0);

        return $i1;
    }

    protected void handleAcquired(long, int, int)
    {
        com.android.server.biometrics.BiometricServiceBase r0;
        long l0;
        int i1, i2, $i3, $i4, $i5;
        boolean $z0, $z1;
        com.android.server.biometrics.ClientMonitor r1;
        com.android.server.biometrics.BiometricServiceBase$PerformanceStats $r2, r3;

        r0 := @this: com.android.server.biometrics.BiometricServiceBase;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 = r0.<com.android.server.biometrics.BiometricServiceBase: com.android.server.biometrics.ClientMonitor mCurrentClient>;

        if r1 == null goto label1;

        $z1 = virtualinvoke r1.<com.android.server.biometrics.ClientMonitor: boolean onAcquired(int,int)>(i1, i2);

        if $z1 == 0 goto label1;

        virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: void removeClient(com.android.server.biometrics.ClientMonitor)>(r1);

     label1:
        $r2 = r0.<com.android.server.biometrics.BiometricServiceBase: com.android.server.biometrics.BiometricServiceBase$PerformanceStats mPerformanceStats>;

        if $r2 == null goto label2;

        $i3 = virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: int getLockoutMode()>();

        if $i3 != 0 goto label2;

        $z0 = r1 instanceof com.android.server.biometrics.AuthenticationClient;

        if $z0 == 0 goto label2;

        r3 = r0.<com.android.server.biometrics.BiometricServiceBase: com.android.server.biometrics.BiometricServiceBase$PerformanceStats mPerformanceStats>;

        $i4 = r3.<com.android.server.biometrics.BiometricServiceBase$PerformanceStats: int acquire>;

        $i5 = $i4 + 1;

        r3.<com.android.server.biometrics.BiometricServiceBase$PerformanceStats: int acquire> = $i5;

     label2:
        return;
    }

    protected void handleAuthenticated(android.hardware.biometrics.BiometricAuthenticator$Identifier, java.util.ArrayList)
    {
        com.android.server.biometrics.BiometricServiceBase r0;
        java.util.ArrayList r1;
        com.android.server.biometrics.ClientMonitor r2;
        int $i0, $i1, $i2, $i3, $i4;
        boolean $z0, z1;
        android.hardware.biometrics.BiometricAuthenticator$Identifier r3;
        com.android.server.biometrics.BiometricServiceBase$PerformanceStats r4, r5;

        r0 := @this: com.android.server.biometrics.BiometricServiceBase;

        r3 := @parameter0: android.hardware.biometrics.BiometricAuthenticator$Identifier;

        r1 := @parameter1: java.util.ArrayList;

        r2 = r0.<com.android.server.biometrics.BiometricServiceBase: com.android.server.biometrics.ClientMonitor mCurrentClient>;

        $i0 = virtualinvoke r3.<android.hardware.biometrics.BiometricAuthenticator$Identifier: int getBiometricId()>();

        if $i0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        if r2 == null goto label3;

        $z0 = virtualinvoke r2.<com.android.server.biometrics.ClientMonitor: boolean onAuthenticated(android.hardware.biometrics.BiometricAuthenticator$Identifier,boolean,java.util.ArrayList)>(r3, z1, r1);

        if $z0 == 0 goto label3;

        virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: void removeClient(com.android.server.biometrics.ClientMonitor)>(r2);

     label3:
        if z1 == 0 goto label4;

        r4 = r0.<com.android.server.biometrics.BiometricServiceBase: com.android.server.biometrics.BiometricServiceBase$PerformanceStats mPerformanceStats>;

        $i3 = r4.<com.android.server.biometrics.BiometricServiceBase$PerformanceStats: int accept>;

        $i4 = $i3 + 1;

        r4.<com.android.server.biometrics.BiometricServiceBase$PerformanceStats: int accept> = $i4;

        goto label5;

     label4:
        r5 = r0.<com.android.server.biometrics.BiometricServiceBase: com.android.server.biometrics.BiometricServiceBase$PerformanceStats mPerformanceStats>;

        $i1 = r5.<com.android.server.biometrics.BiometricServiceBase$PerformanceStats: int reject>;

        $i2 = $i1 + 1;

        r5.<com.android.server.biometrics.BiometricServiceBase$PerformanceStats: int reject> = $i2;

     label5:
        return;
    }

    protected void handleEnrollResult(android.hardware.biometrics.BiometricAuthenticator$Identifier, int)
    {
        com.android.server.biometrics.BiometricServiceBase r0;
        android.hardware.biometrics.BiometricAuthenticator$Identifier r1;
        int i0, $i1;
        com.android.server.biometrics.ClientMonitor r2;
        boolean $z0, $z1;
        android.hardware.fingerprint.Fingerprint $r3;

        r0 := @this: com.android.server.biometrics.BiometricServiceBase;

        r1 := @parameter0: android.hardware.biometrics.BiometricAuthenticator$Identifier;

        i0 := @parameter1: int;

        r2 = r0.<com.android.server.biometrics.BiometricServiceBase: com.android.server.biometrics.ClientMonitor mCurrentClient>;

        if r2 == null goto label1;

        $z0 = virtualinvoke r2.<com.android.server.biometrics.ClientMonitor: boolean onEnrollResult(android.hardware.biometrics.BiometricAuthenticator$Identifier,int)>(r1, i0);

        if $z0 == 0 goto label1;

        virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: void removeClient(com.android.server.biometrics.ClientMonitor)>(r2);

        $z1 = r1 instanceof android.hardware.fingerprint.Fingerprint;

        if $z1 == 0 goto label1;

        $r3 = (android.hardware.fingerprint.Fingerprint) r1;

        $i1 = virtualinvoke $r3.<android.hardware.fingerprint.Fingerprint: int getGroupId()>();

        virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: void updateActiveGroup(int,java.lang.String)>($i1, null);

     label1:
        return;
    }

    protected void handleEnumerate(android.hardware.biometrics.BiometricAuthenticator$Identifier, int)
    {
        com.android.server.biometrics.BiometricServiceBase r0;
        com.android.server.biometrics.ClientMonitor r1;
        java.util.List r2;
        boolean $z0, $z1;
        com.android.server.biometrics.BiometricServiceBase$InternalEnumerateClient $r4;
        com.android.server.biometrics.BiometricServiceBase$UserTemplate $r5;
        java.util.ArrayList $r6;
        java.lang.Object $r7;
        android.hardware.biometrics.BiometricAuthenticator$Identifier $r8, r14;
        int $i0, $i1, i3, i4, $i5;
        java.lang.StringBuilder $r9;
        java.lang.String $r13, r15;

        r0 := @this: com.android.server.biometrics.BiometricServiceBase;

        r14 := @parameter0: android.hardware.biometrics.BiometricAuthenticator$Identifier;

        i3 := @parameter1: int;

        r1 = r0.<com.android.server.biometrics.BiometricServiceBase: com.android.server.biometrics.ClientMonitor mCurrentClient>;

        if r1 == null goto label1;

        virtualinvoke r1.<com.android.server.biometrics.ClientMonitor: boolean onEnumerationResult(android.hardware.biometrics.BiometricAuthenticator$Identifier,int)>(r14, i3);

     label1:
        if i3 != 0 goto label6;

        $z0 = r1 instanceof com.android.server.biometrics.BiometricServiceBase$InternalEnumerateClient;

        if $z0 == 0 goto label5;

        $r4 = (com.android.server.biometrics.BiometricServiceBase$InternalEnumerateClient) r1;

        r2 = virtualinvoke $r4.<com.android.server.biometrics.BiometricServiceBase$InternalEnumerateClient: java.util.List getUnknownHALTemplates()>();

        $z1 = interfaceinvoke r2.<java.util.List: boolean isEmpty()>();

        if $z1 != 0 goto label2;

        r15 = virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: java.lang.String getTag()>();

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Adding ");

        $i1 = interfaceinvoke r2.<java.util.List: int size()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" templates for deletion");

        $r13 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>(r15, $r13);

     label2:
        i4 = 0;

     label3:
        $i5 = interfaceinvoke r2.<java.util.List: int size()>();

        if i4 >= $i5 goto label4;

        $r6 = r0.<com.android.server.biometrics.BiometricServiceBase: java.util.ArrayList mUnknownHALTemplates>;

        $r5 = new com.android.server.biometrics.BiometricServiceBase$UserTemplate;

        $r7 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i4);

        $r8 = (android.hardware.biometrics.BiometricAuthenticator$Identifier) $r7;

        $i0 = virtualinvoke r1.<com.android.server.biometrics.ClientMonitor: int getTargetUserId()>();

        specialinvoke $r5.<com.android.server.biometrics.BiometricServiceBase$UserTemplate: void <init>(com.android.server.biometrics.BiometricServiceBase,android.hardware.biometrics.BiometricAuthenticator$Identifier,int)>(r0, $r8, $i0);

        virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        i4 = i4 + 1;

        goto label3;

     label4:
        virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: void removeClient(com.android.server.biometrics.ClientMonitor)>(r1);

        specialinvoke r0.<com.android.server.biometrics.BiometricServiceBase: void startCleanupUnknownHALTemplates()>();

        goto label6;

     label5:
        if r1 == null goto label6;

        virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: void removeClient(com.android.server.biometrics.ClientMonitor)>(r1);

     label6:
        return;
    }

    protected void handleError(long, int, int)
    {
        com.android.server.biometrics.BiometricServiceBase r0;
        long l0;
        int i1, i2;
        java.lang.String r1, $r9, $r16, $r18, r21, r22;
        java.lang.StringBuilder $r3, $r13;
        boolean $z0, $z1, $z2;
        com.android.server.biometrics.BiometricServiceBase$ResetClientStateRunnable $r10;
        android.os.Handler $r11;
        com.android.server.biometrics.ClientMonitor $r12, $r15, $r19, r20;

        r0 := @this: com.android.server.biometrics.BiometricServiceBase;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r20 = r0.<com.android.server.biometrics.BiometricServiceBase: com.android.server.biometrics.ClientMonitor mCurrentClient>;

        r1 = virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: java.lang.String getTag()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handleError(client=");

        if r20 == null goto label1;

        r21 = virtualinvoke r20.<com.android.server.biometrics.ClientMonitor: java.lang.String getOwnerString()>();

        goto label2;

     label1:
        r21 = "null";

     label2:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r21);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", error = ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>(r1, $r9);

        $z0 = r20 instanceof com.android.server.biometrics.BiometricServiceBase$InternalRemovalClient;

        if $z0 != 0 goto label3;

        $z2 = r20 instanceof com.android.server.biometrics.BiometricServiceBase$InternalEnumerateClient;

        if $z2 == 0 goto label4;

     label3:
        specialinvoke r0.<com.android.server.biometrics.BiometricServiceBase: void clearEnumerateState()>();

     label4:
        if r20 == null goto label5;

        $z1 = virtualinvoke r20.<com.android.server.biometrics.ClientMonitor: boolean onError(long,int,int)>(l0, i1, i2);

        if $z1 == 0 goto label5;

        virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: void removeClient(com.android.server.biometrics.ClientMonitor)>(r20);

     label5:
        if i1 != 5 goto label6;

        $r11 = r0.<com.android.server.biometrics.BiometricServiceBase: android.os.Handler mHandler>;

        $r10 = r0.<com.android.server.biometrics.BiometricServiceBase: com.android.server.biometrics.BiometricServiceBase$ResetClientStateRunnable mResetClientState>;

        virtualinvoke $r11.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r10);

        $r12 = r0.<com.android.server.biometrics.BiometricServiceBase: com.android.server.biometrics.ClientMonitor mPendingClient>;

        if $r12 == null goto label6;

        r22 = virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: java.lang.String getTag()>();

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("start pending client ");

        $r15 = r0.<com.android.server.biometrics.BiometricServiceBase: com.android.server.biometrics.ClientMonitor mPendingClient>;

        $r16 = virtualinvoke $r15.<com.android.server.biometrics.ClientMonitor: java.lang.String getOwnerString()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>(r22, $r18);

        $r19 = r0.<com.android.server.biometrics.BiometricServiceBase: com.android.server.biometrics.ClientMonitor mPendingClient>;

        virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: void startClient(com.android.server.biometrics.ClientMonitor,boolean)>($r19, 0);

        r0.<com.android.server.biometrics.BiometricServiceBase: com.android.server.biometrics.ClientMonitor mPendingClient> = null;

     label6:
        return;
    }

    protected void handleRemoved(android.hardware.biometrics.BiometricAuthenticator$Identifier, int)
    {
        com.android.server.biometrics.BiometricServiceBase r0;
        android.hardware.biometrics.BiometricAuthenticator$Identifier r1;
        java.lang.String r2, $r10;
        java.lang.StringBuilder $r3;
        int $i0, i3, i4;
        long $l1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.util.ArrayList $r11;
        android.hardware.fingerprint.Fingerprint $r12;
        com.android.server.biometrics.ClientMonitor r14;

        r0 := @this: com.android.server.biometrics.BiometricServiceBase;

        r1 := @parameter0: android.hardware.biometrics.BiometricAuthenticator$Identifier;

        i3 := @parameter1: int;

        r2 = virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: java.lang.String getTag()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removed: fid=");

        $i0 = virtualinvoke r1.<android.hardware.biometrics.BiometricAuthenticator$Identifier: int getBiometricId()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", dev=");

        $l1 = virtualinvoke r1.<android.hardware.biometrics.BiometricAuthenticator$Identifier: long getDeviceId()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", rem=");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r10 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>(r2, $r10);

        r14 = r0.<com.android.server.biometrics.BiometricServiceBase: com.android.server.biometrics.ClientMonitor mCurrentClient>;

        if r14 == null goto label2;

        $z2 = virtualinvoke r14.<com.android.server.biometrics.ClientMonitor: boolean onRemoved(android.hardware.biometrics.BiometricAuthenticator$Identifier,int)>(r1, i3);

        if $z2 == 0 goto label2;

        virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: void removeClient(com.android.server.biometrics.ClientMonitor)>(r14);

        i4 = r0.<com.android.server.biometrics.BiometricServiceBase: int mCurrentUserId>;

        $z3 = r1 instanceof android.hardware.fingerprint.Fingerprint;

        if $z3 == 0 goto label1;

        $r12 = (android.hardware.fingerprint.Fingerprint) r1;

        i4 = virtualinvoke $r12.<android.hardware.fingerprint.Fingerprint: int getGroupId()>();

     label1:
        $z4 = virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: boolean hasEnrolledBiometrics(int)>(i4);

        if $z4 != 0 goto label2;

        virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: void updateActiveGroup(int,java.lang.String)>(i4, null);

     label2:
        $z5 = r14 instanceof com.android.server.biometrics.BiometricServiceBase$InternalRemovalClient;

        if $z5 == 0 goto label3;

        $r11 = r0.<com.android.server.biometrics.BiometricServiceBase: java.util.ArrayList mUnknownHALTemplates>;

        $z1 = virtualinvoke $r11.<java.util.ArrayList: boolean isEmpty()>();

        if $z1 != 0 goto label3;

        specialinvoke r0.<com.android.server.biometrics.BiometricServiceBase: void startCleanupUnknownHALTemplates()>();

        goto label4;

     label3:
        $z0 = r14 instanceof com.android.server.biometrics.BiometricServiceBase$InternalRemovalClient;

        if $z0 == 0 goto label4;

        specialinvoke r0.<com.android.server.biometrics.BiometricServiceBase: void clearEnumerateState()>();

     label4:
        return;
    }

    protected void handleUserSwitching(int)
    {
        com.android.server.biometrics.BiometricServiceBase r0;
        int i0;
        com.android.server.biometrics.ClientMonitor $r1, $r3;
        boolean $z0, $z1;
        java.lang.String $r2;

        r0 := @this: com.android.server.biometrics.BiometricServiceBase;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: com.android.server.biometrics.ClientMonitor getCurrentClient()>();

        $z0 = $r1 instanceof com.android.server.biometrics.BiometricServiceBase$InternalRemovalClient;

        if $z0 != 0 goto label1;

        $r3 = virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: com.android.server.biometrics.ClientMonitor getCurrentClient()>();

        $z1 = $r3 instanceof com.android.server.biometrics.BiometricServiceBase$InternalEnumerateClient;

        if $z1 == 0 goto label2;

     label1:
        $r2 = virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: java.lang.String getTag()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>($r2, "User switched while performing cleanup");

     label2:
        virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: void updateActiveGroup(int,java.lang.String)>(i0, null);

        virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: void doTemplateCleanupForUser(int)>(i0);

        return;
    }

    protected abstract boolean hasEnrolledBiometrics(int);

    protected boolean hasPermission(java.lang.String)
    {
        com.android.server.biometrics.BiometricServiceBase r0;
        java.lang.String r1;
        android.content.Context $r2;
        int $i0;
        boolean z0;

        r0 := @this: com.android.server.biometrics.BiometricServiceBase;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: android.content.Context getContext()>();

        $i0 = virtualinvoke $r2.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>(r1);

        if $i0 != 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    protected abstract boolean hasReachedEnrollmentLimit(int);

    protected void initConfiguredStrengthInternal(int)
    {
        com.android.server.biometrics.BiometricServiceBase r0;
        int i0;
        java.lang.String r1, $r7;
        java.lang.StringBuilder $r3;

        r0 := @this: com.android.server.biometrics.BiometricServiceBase;

        i0 := @parameter0: int;

        r1 = virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: java.lang.String getTag()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("initConfiguredStrengthInternal(");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>(r1, $r7);

        r0.<com.android.server.biometrics.BiometricServiceBase: int mOEMStrength> = i0;

        return;
    }

    protected boolean isCurrentUserOrProfile(int)
    {
        com.android.server.biometrics.BiometricServiceBase r0;
        int i0, i2, i3, $i4, i6;
        long l1;
        android.content.Context $r1;
        java.lang.String $r2;
        java.lang.Throwable $r3;
        android.os.UserManager r4;
        int[] r5;

        r0 := @this: com.android.server.biometrics.BiometricServiceBase;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.biometrics.BiometricServiceBase: android.content.Context mContext>;

        r4 = staticinvoke <android.os.UserManager: android.os.UserManager get(android.content.Context)>($r1);

        if r4 != null goto label1;

        $r2 = virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: java.lang.String getTag()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>($r2, "Unable to acquire UserManager");

        return 0;

     label1:
        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label2:
        $i4 = staticinvoke <android.app.ActivityManager: int getCurrentUser()>();

        r5 = virtualinvoke r4.<android.os.UserManager: int[] getEnabledProfileIds(int)>($i4);

        i2 = lengthof r5;

     label3:
        i6 = 0;

     label4:
        if i6 >= i2 goto label6;

        i3 = r5[i6];

        if i3 != i0 goto label5;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return 1;

     label5:
        i6 = i6 + 1;

        goto label4;

     label6:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return 0;

     label7:
        $r3 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw $r3;

        catch java.lang.Throwable from label2 to label3 with label7;
    }

    protected boolean isRestricted()
    {
        com.android.server.biometrics.BiometricServiceBase r0;
        java.lang.String $r1;
        boolean $z0, $z1;

        r0 := @this: com.android.server.biometrics.BiometricServiceBase;

        $r1 = virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: java.lang.String getManageBiometricPermission()>();

        $z0 = virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: boolean hasPermission(java.lang.String)>($r1);

        $z1 = $z0 ^ 1;

        return $z1;
    }

    protected boolean isStrongBiometric()
    {
        com.android.server.biometrics.BiometricServiceBase r0;
        int $i0, $i1;
        boolean z0;

        r0 := @this: com.android.server.biometrics.BiometricServiceBase;

        $i0 = r0.<com.android.server.biometrics.BiometricServiceBase: int mOEMStrength>;

        $i1 = $i0 & 32767;

        if $i1 != 15 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public void lambda$addLockoutResetCallback$8$BiometricServiceBase(android.hardware.biometrics.IBiometricServiceLockoutResetCallback)
    {
        com.android.server.biometrics.BiometricServiceBase r0;
        com.android.server.biometrics.BiometricServiceBase$LockoutResetMonitor $r1;
        java.util.ArrayList $r2, $r3;
        boolean $z0;
        android.hardware.biometrics.IBiometricServiceLockoutResetCallback r4;

        r0 := @this: com.android.server.biometrics.BiometricServiceBase;

        r4 := @parameter0: android.hardware.biometrics.IBiometricServiceLockoutResetCallback;

        $r1 = new com.android.server.biometrics.BiometricServiceBase$LockoutResetMonitor;

        specialinvoke $r1.<com.android.server.biometrics.BiometricServiceBase$LockoutResetMonitor: void <init>(com.android.server.biometrics.BiometricServiceBase,android.hardware.biometrics.IBiometricServiceLockoutResetCallback)>(r0, r4);

        $r2 = r0.<com.android.server.biometrics.BiometricServiceBase: java.util.ArrayList mLockoutMonitors>;

        $z0 = virtualinvoke $r2.<java.util.ArrayList: boolean contains(java.lang.Object)>($r1);

        if $z0 != 0 goto label1;

        $r3 = r0.<com.android.server.biometrics.BiometricServiceBase: java.util.ArrayList mLockoutMonitors>;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

     label1:
        return;
    }

    public void lambda$authenticateInternal$3$BiometricServiceBase(long, com.android.server.biometrics.BiometricServiceBase$AuthenticationClientImpl, java.lang.String)
    {
        com.android.server.biometrics.BiometricServiceBase r0;
        long l0;
        com.android.server.biometrics.BiometricServiceBase$AuthenticationClientImpl r1;
        java.lang.String r2, r11;
        com.android.server.biometrics.BiometricServiceBase$PerformanceStats r3, $r7, r13;
        com.android.server.biometrics.Constants $r4;
        byte $b1, $b2, $b4, b6;
        int $i3, $i5;
        java.lang.Integer $r5, $r8;
        java.lang.Object $r6;
        com.android.internal.logging.MetricsLogger r10;
        boolean z0;
        java.util.HashMap r12;

        r0 := @this: com.android.server.biometrics.BiometricServiceBase;

        l0 := @parameter0: long;

        r1 := @parameter1: com.android.server.biometrics.BiometricServiceBase$AuthenticationClientImpl;

        r2 := @parameter2: java.lang.String;

        r10 = r0.<com.android.server.biometrics.BiometricServiceBase: com.android.internal.logging.MetricsLogger mMetricsLogger>;

        $r4 = virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: com.android.server.biometrics.Constants getConstants()>();

        r11 = interfaceinvoke $r4.<com.android.server.biometrics.Constants: java.lang.String tagAuthToken()>();

        z0 = 1;

        $b1 = l0 cmp 0L;

        if $b1 == 0 goto label1;

        b6 = 1;

        goto label2;

     label1:
        b6 = 0;

     label2:
        virtualinvoke r10.<com.android.internal.logging.MetricsLogger: void histogram(java.lang.String,int)>(r11, b6);

        $b2 = l0 cmp 0L;

        if $b2 != 0 goto label3;

        r12 = r0.<com.android.server.biometrics.BiometricServiceBase: java.util.HashMap mPerformanceMap>;

        goto label4;

     label3:
        r12 = r0.<com.android.server.biometrics.BiometricServiceBase: java.util.HashMap mCryptoPerformanceMap>;

     label4:
        $i3 = r0.<com.android.server.biometrics.BiometricServiceBase: int mCurrentUserId>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r6 = virtualinvoke r12.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r5);

        r3 = (com.android.server.biometrics.BiometricServiceBase$PerformanceStats) $r6;

        r13 = r3;

        if r3 != null goto label5;

        $r7 = new com.android.server.biometrics.BiometricServiceBase$PerformanceStats;

        specialinvoke $r7.<com.android.server.biometrics.BiometricServiceBase$PerformanceStats: void <init>(com.android.server.biometrics.BiometricServiceBase)>(r0);

        r13 = $r7;

        $i5 = r0.<com.android.server.biometrics.BiometricServiceBase: int mCurrentUserId>;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        virtualinvoke r12.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r7);

     label5:
        r0.<com.android.server.biometrics.BiometricServiceBase: com.android.server.biometrics.BiometricServiceBase$PerformanceStats mPerformanceStats> = r13;

        $b4 = l0 cmp 0L;

        if $b4 == 0 goto label6;

        goto label7;

     label6:
        z0 = 0;

     label7:
        r0.<com.android.server.biometrics.BiometricServiceBase: boolean mIsCrypto> = z0;

        specialinvoke r0.<com.android.server.biometrics.BiometricServiceBase: void startAuthentication(com.android.server.biometrics.BiometricServiceBase$AuthenticationClientImpl,java.lang.String)>(r1, r2);

        return;
    }

    public void lambda$cancelAuthenticationInternal$4$BiometricServiceBase(android.os.IBinder, boolean)
    {
        com.android.server.biometrics.BiometricServiceBase r0;
        com.android.server.biometrics.ClientMonitor r1;
        java.lang.String r2, $r5, $r7, $r11, $r15, $r19, $r23, r25, r28;
        boolean $z0, z1, z2;
        java.lang.StringBuilder $r3, $r9, $r17;
        android.os.IBinder $r8, $r16, r24;

        r0 := @this: com.android.server.biometrics.BiometricServiceBase;

        r24 := @parameter0: android.os.IBinder;

        z1 := @parameter1: boolean;

        r1 = r0.<com.android.server.biometrics.BiometricServiceBase: com.android.server.biometrics.ClientMonitor mCurrentClient>;

        $z0 = r1 instanceof com.android.server.biometrics.AuthenticationClient;

        if $z0 == 0 goto label5;

        $r8 = virtualinvoke r1.<com.android.server.biometrics.ClientMonitor: android.os.IBinder getToken()>();

        if $r8 == r24 goto label2;

        if z1 != 0 goto label1;

        goto label2;

     label1:
        r25 = virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: java.lang.String getTag()>();

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t stop client ");

        $r19 = virtualinvoke r1.<com.android.server.biometrics.ClientMonitor: java.lang.String getOwnerString()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" since tokens don\'t match. fromClient: ");

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z1);

        $r23 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>(r25, $r23);

        goto label6;

     label2:
        r2 = virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: java.lang.String getTag()>();

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Stopping client ");

        $r11 = virtualinvoke r1.<com.android.server.biometrics.ClientMonitor: java.lang.String getOwnerString()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", fromClient: ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z1);

        $r15 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>(r2, $r15);

        $r16 = virtualinvoke r1.<com.android.server.biometrics.ClientMonitor: android.os.IBinder getToken()>();

        if $r16 != r24 goto label3;

        z2 = 1;

        goto label4;

     label3:
        z2 = 0;

     label4:
        virtualinvoke r1.<com.android.server.biometrics.ClientMonitor: int stop(boolean)>(z2);

        goto label6;

     label5:
        if r1 == null goto label6;

        r28 = virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: java.lang.String getTag()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t cancel non-authenticating client ");

        $r5 = virtualinvoke r1.<com.android.server.biometrics.ClientMonitor: java.lang.String getOwnerString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>(r28, $r7);

     label6:
        return;
    }

    public void lambda$cancelEnrollmentInternal$2$BiometricServiceBase(android.os.IBinder)
    {
        com.android.server.biometrics.BiometricServiceBase r0;
        android.os.IBinder r1, $r3, $r5;
        com.android.server.biometrics.ClientMonitor r2;
        boolean $z0, z1;
        java.lang.String $r4;

        r0 := @this: com.android.server.biometrics.BiometricServiceBase;

        r1 := @parameter0: android.os.IBinder;

        r2 = r0.<com.android.server.biometrics.BiometricServiceBase: com.android.server.biometrics.ClientMonitor mCurrentClient>;

        $z0 = r2 instanceof com.android.server.biometrics.EnrollClient;

        if $z0 == 0 goto label3;

        $r3 = virtualinvoke r2.<com.android.server.biometrics.ClientMonitor: android.os.IBinder getToken()>();

        if $r3 != r1 goto label3;

        $r4 = virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: java.lang.String getTag()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>($r4, "Cancelling enrollment");

        $r5 = virtualinvoke r2.<com.android.server.biometrics.ClientMonitor: android.os.IBinder getToken()>();

        if $r5 != r1 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        virtualinvoke r2.<com.android.server.biometrics.ClientMonitor: int stop(boolean)>(z1);

     label3:
        return;
    }

    public void lambda$enrollInternal$1$BiometricServiceBase(com.android.server.biometrics.BiometricServiceBase$EnrollClientImpl)
    {
        com.android.server.biometrics.BiometricServiceBase r0;
        com.android.server.biometrics.BiometricServiceBase$EnrollClientImpl r1;

        r0 := @this: com.android.server.biometrics.BiometricServiceBase;

        r1 := @parameter0: com.android.server.biometrics.BiometricServiceBase$EnrollClientImpl;

        virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: void startClient(com.android.server.biometrics.ClientMonitor,boolean)>(r1, 1);

        return;
    }

    public void lambda$enumerateInternal$7$BiometricServiceBase(com.android.server.biometrics.EnumerateClient)
    {
        com.android.server.biometrics.BiometricServiceBase r0;
        com.android.server.biometrics.EnumerateClient r1;

        r0 := @this: com.android.server.biometrics.BiometricServiceBase;

        r1 := @parameter0: com.android.server.biometrics.EnumerateClient;

        virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: void startClient(com.android.server.biometrics.ClientMonitor,boolean)>(r1, 1);

        return;
    }

    public void lambda$removeInternal$6$BiometricServiceBase(com.android.server.biometrics.RemovalClient)
    {
        com.android.server.biometrics.BiometricServiceBase r0;
        com.android.server.biometrics.RemovalClient r1;

        r0 := @this: com.android.server.biometrics.BiometricServiceBase;

        r1 := @parameter0: com.android.server.biometrics.RemovalClient;

        virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: void startClient(com.android.server.biometrics.ClientMonitor,boolean)>(r1, 1);

        return;
    }

    public void lambda$serviceDied$0$BiometricServiceBase()
    {
        com.android.server.biometrics.BiometricServiceBase r0;
        java.lang.String $r1;
        long $l1;

        r0 := @this: com.android.server.biometrics.BiometricServiceBase;

        $r1 = virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: java.lang.String getTag()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>($r1, "Sending BIOMETRIC_ERROR_HW_UNAVAILABLE after HAL crash");

        $l1 = virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: long getHalDeviceId()>();

        virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: void handleError(long,int,int)>($l1, 1, 0);

        return;
    }

    public void lambda$setActiveUserInternal$5$BiometricServiceBase(int)
    {
        com.android.server.biometrics.BiometricServiceBase r0;
        int i0;
        java.lang.String r1, $r7;
        java.lang.StringBuilder $r3;

        r0 := @this: com.android.server.biometrics.BiometricServiceBase;

        i0 := @parameter0: int;

        r1 = virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: java.lang.String getTag()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setActiveUser(");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>(r1, $r7);

        virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: void updateActiveGroup(int,java.lang.String)>(i0, null);

        return;
    }

    protected void loadAuthenticatorIds()
    {
        com.android.server.biometrics.BiometricServiceBase r0;
        int i0, $i4;
        java.util.Map $r2, $r13;
        android.content.Context $r3;
        android.os.UserManager $r4;
        java.util.List $r5;
        boolean $z0, $z1;
        long $l1, l5, l6;
        byte $b2;
        java.lang.StringBuilder $r6;
        java.lang.String $r10, r16;
        java.lang.Object $r11;
        android.content.pm.UserInfo $r12;
        java.lang.Integer $r14;
        java.util.Iterator r15;

        r0 := @this: com.android.server.biometrics.BiometricServiceBase;

        l5 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r2 = r0.<com.android.server.biometrics.BiometricServiceBase: java.util.Map mAuthenticatorIds>;

        interfaceinvoke $r2.<java.util.Map: void clear()>();

        $r3 = virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: android.content.Context getContext()>();

        $r4 = staticinvoke <android.os.UserManager: android.os.UserManager get(android.content.Context)>($r3);

        $r5 = virtualinvoke $r4.<android.os.UserManager: java.util.List getUsers(boolean)>(1);

        r15 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r11 = interfaceinvoke r15.<java.util.Iterator: java.lang.Object next()>();

        $r12 = (android.content.pm.UserInfo) $r11;

        $i4 = $r12.<android.content.pm.UserInfo: int id>;

        i0 = virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: int getUserOrWorkProfileId(java.lang.String,int)>(null, $i4);

        $r13 = r0.<com.android.server.biometrics.BiometricServiceBase: java.util.Map mAuthenticatorIds>;

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $z1 = interfaceinvoke $r13.<java.util.Map: boolean containsKey(java.lang.Object)>($r14);

        if $z1 != 0 goto label2;

        virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: void updateActiveGroup(int,java.lang.String)>(i0, null);

     label2:
        goto label1;

     label3:
        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l6 = $l1 - l5;

        $b2 = l6 cmp 1000L;

        if $b2 <= 0 goto label4;

        r16 = virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: java.lang.String getTag()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("loadAuthenticatorIds() taking too long: ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l6);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms");

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>(r16, $r10);

     label4:
        return;
    }

    protected void notifyClientActiveCallbacks(boolean)
    {
        com.android.server.biometrics.BiometricServiceBase r0;
        boolean z0;

        r0 := @this: com.android.server.biometrics.BiometricServiceBase;

        z0 := @parameter0: boolean;

        return;
    }

    protected void notifyLockoutResetMonitors()
    {
        com.android.server.biometrics.BiometricServiceBase r0;
        java.util.ArrayList $r1, $r2;
        int $i0, i1;
        java.lang.Object $r3;
        com.android.server.biometrics.BiometricServiceBase$LockoutResetMonitor $r4;

        r0 := @this: com.android.server.biometrics.BiometricServiceBase;

        i1 = 0;

     label1:
        $r1 = r0.<com.android.server.biometrics.BiometricServiceBase: java.util.ArrayList mLockoutMonitors>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if i1 >= $i0 goto label2;

        $r2 = r0.<com.android.server.biometrics.BiometricServiceBase: java.util.ArrayList mLockoutMonitors>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r4 = (com.android.server.biometrics.BiometricServiceBase$LockoutResetMonitor) $r3;

        virtualinvoke $r4.<com.android.server.biometrics.BiometricServiceBase$LockoutResetMonitor: void sendLockoutReset()>();

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void onStart()
    {
        com.android.server.biometrics.BiometricServiceBase r0;

        r0 := @this: com.android.server.biometrics.BiometricServiceBase;

        specialinvoke r0.<com.android.server.biometrics.BiometricServiceBase: void listenForUserSwitches()>();

        return;
    }

    protected void removeClient(com.android.server.biometrics.ClientMonitor)
    {
        com.android.server.biometrics.BiometricServiceBase r0;
        java.lang.String r1, $r6, $r8, $r11, $r15, $r17, r22;
        com.android.server.biometrics.ClientMonitor $r2, $r5, $r14, r18, r19, $r21;
        java.lang.StringBuilder $r3, $r9;

        r0 := @this: com.android.server.biometrics.BiometricServiceBase;

        r18 := @parameter0: com.android.server.biometrics.ClientMonitor;

        if r18 == null goto label1;

        virtualinvoke r18.<com.android.server.biometrics.ClientMonitor: void destroy()>();

        r19 = r0.<com.android.server.biometrics.BiometricServiceBase: com.android.server.biometrics.ClientMonitor mCurrentClient>;

        if r18 == r19 goto label1;

        if r19 == null goto label1;

        r1 = virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: java.lang.String getTag()>();

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected client: ");

        $r11 = virtualinvoke r18.<com.android.server.biometrics.ClientMonitor: java.lang.String getOwnerString()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("expected: ");

        $r14 = r0.<com.android.server.biometrics.BiometricServiceBase: com.android.server.biometrics.ClientMonitor mCurrentClient>;

        $r15 = virtualinvoke $r14.<com.android.server.biometrics.ClientMonitor: java.lang.String getOwnerString()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>(r1, $r17);

     label1:
        $r21 = r0.<com.android.server.biometrics.BiometricServiceBase: com.android.server.biometrics.ClientMonitor mCurrentClient>;

        if $r21 == null goto label2;

        r22 = virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: java.lang.String getTag()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Done with client: ");

        $r5 = r0.<com.android.server.biometrics.BiometricServiceBase: com.android.server.biometrics.ClientMonitor mCurrentClient>;

        $r6 = virtualinvoke $r5.<com.android.server.biometrics.ClientMonitor: java.lang.String getOwnerString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>(r22, $r8);

        r0.<com.android.server.biometrics.BiometricServiceBase: com.android.server.biometrics.ClientMonitor mCurrentClient> = null;

     label2:
        $r2 = r0.<com.android.server.biometrics.BiometricServiceBase: com.android.server.biometrics.ClientMonitor mPendingClient>;

        if $r2 != null goto label3;

        virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: void notifyClientActiveCallbacks(boolean)>(0);

     label3:
        return;
    }

    protected void removeInternal(com.android.server.biometrics.RemovalClient)
    {
        com.android.server.biometrics.BiometricServiceBase r0;
        com.android.server.biometrics.RemovalClient r1;
        com.android.server.biometrics._$$Lambda$BiometricServiceBase$8_hCNL3jMZVMKItY0KyN7TBk6u8 $r2;
        android.os.Handler $r3;

        r0 := @this: com.android.server.biometrics.BiometricServiceBase;

        r1 := @parameter0: com.android.server.biometrics.RemovalClient;

        $r3 = r0.<com.android.server.biometrics.BiometricServiceBase: android.os.Handler mHandler>;

        $r2 = new com.android.server.biometrics._$$Lambda$BiometricServiceBase$8_hCNL3jMZVMKItY0KyN7TBk6u8;

        specialinvoke $r2.<com.android.server.biometrics._$$Lambda$BiometricServiceBase$8_hCNL3jMZVMKItY0KyN7TBk6u8: void <init>(com.android.server.biometrics.BiometricServiceBase,com.android.server.biometrics.RemovalClient)>(r0, r1);

        virtualinvoke $r3.<android.os.Handler: boolean post(java.lang.Runnable)>($r2);

        return;
    }

    public void serviceDied(long)
    {
        com.android.server.biometrics.BiometricServiceBase r0;
        long l0;
        java.lang.String $r1, $r4;
        com.android.internal.logging.MetricsLogger $r2;
        com.android.server.biometrics.Constants $r3;
        int $i2, $i3, $i4;
        com.android.server.biometrics._$$Lambda$BiometricServiceBase$iRNlDOJhMpMFOTQxuHjuZ0z5dlY $r5;
        android.os.Handler $r6;

        r0 := @this: com.android.server.biometrics.BiometricServiceBase;

        l0 := @parameter0: long;

        $r1 = virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: java.lang.String getTag()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>($r1, "HAL died");

        $r2 = r0.<com.android.server.biometrics.BiometricServiceBase: com.android.internal.logging.MetricsLogger mMetricsLogger>;

        $r3 = virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: com.android.server.biometrics.Constants getConstants()>();

        $r4 = interfaceinvoke $r3.<com.android.server.biometrics.Constants: java.lang.String tagHalDied()>();

        virtualinvoke $r2.<com.android.internal.logging.MetricsLogger: void count(java.lang.String,int)>($r4, 1);

        $i2 = r0.<com.android.server.biometrics.BiometricServiceBase: int mHALDeathCount>;

        $i3 = $i2 + 1;

        r0.<com.android.server.biometrics.BiometricServiceBase: int mHALDeathCount> = $i3;

        r0.<com.android.server.biometrics.BiometricServiceBase: int mCurrentUserId> = -10000;

        $r6 = r0.<com.android.server.biometrics.BiometricServiceBase: android.os.Handler mHandler>;

        $r5 = new com.android.server.biometrics._$$Lambda$BiometricServiceBase$iRNlDOJhMpMFOTQxuHjuZ0z5dlY;

        specialinvoke $r5.<com.android.server.biometrics._$$Lambda$BiometricServiceBase$iRNlDOJhMpMFOTQxuHjuZ0z5dlY: void <init>(com.android.server.biometrics.BiometricServiceBase)>(r0);

        virtualinvoke $r6.<android.os.Handler: boolean post(java.lang.Runnable)>($r5);

        $i4 = virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: int statsModality()>();

        staticinvoke <com.android.internal.util.FrameworkStatsLog: void write(int,int,int)>(148, $i4, 1);

        return;
    }

    protected void setActiveUserInternal(int)
    {
        com.android.server.biometrics.BiometricServiceBase r0;
        int i0;
        com.android.server.biometrics._$$Lambda$BiometricServiceBase$rf3hjPI_nf4EvVsQV7gFCF1_HpI $r1;
        android.os.Handler $r2;

        r0 := @this: com.android.server.biometrics.BiometricServiceBase;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.biometrics.BiometricServiceBase: android.os.Handler mHandler>;

        $r1 = new com.android.server.biometrics._$$Lambda$BiometricServiceBase$rf3hjPI_nf4EvVsQV7gFCF1_HpI;

        specialinvoke $r1.<com.android.server.biometrics._$$Lambda$BiometricServiceBase$rf3hjPI_nf4EvVsQV7gFCF1_HpI: void <init>(com.android.server.biometrics.BiometricServiceBase,int)>(r0, i0);

        virtualinvoke $r2.<android.os.Handler: boolean post(java.lang.Runnable)>($r1);

        return;
    }

    void startClient(com.android.server.biometrics.ClientMonitor, boolean)
    {
        com.android.server.biometrics.BiometricServiceBase r0;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        int $i0, $i1, $i3, $i4;
        java.lang.StringBuilder $r1, $r9, $r14;
        java.lang.String $r4, $r11, $r13, $r18, $r21, $r25, $r31, r34, r36, r39;
        android.hardware.biometrics.IBiometricService $r5, $r6, $r8;
        android.os.IBinder $r7;
        java.lang.Class $r16, $r17;
        com.android.server.biometrics.BiometricServiceBase$ResetClientStateRunnable $r26, $r28;
        android.os.Handler $r27, $r29;
        android.os.RemoteException $r30;
        com.android.server.biometrics.ClientMonitor r32, r33;
        com.android.server.biometrics.AuthenticationClient r38;

        r0 := @this: com.android.server.biometrics.BiometricServiceBase;

        r32 := @parameter0: com.android.server.biometrics.ClientMonitor;

        z0 := @parameter1: boolean;

        r33 = r0.<com.android.server.biometrics.BiometricServiceBase: com.android.server.biometrics.ClientMonitor mCurrentClient>;

        if r33 == null goto label04;

        r34 = virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: java.lang.String getTag()>();

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("request stop current client ");

        $r11 = virtualinvoke r33.<com.android.server.biometrics.ClientMonitor: java.lang.String getOwnerString()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>(r34, $r13);

        $z4 = r33 instanceof com.android.server.biometrics.BiometricServiceBase$InternalEnumerateClient;

        if $z4 != 0 goto label02;

        $z5 = r33 instanceof com.android.server.biometrics.BiometricServiceBase$InternalRemovalClient;

        if $z5 == 0 goto label01;

        goto label02;

     label01:
        virtualinvoke r33.<com.android.server.biometrics.ClientMonitor: int stop(boolean)>(z0);

        $r27 = r0.<com.android.server.biometrics.BiometricServiceBase: android.os.Handler mHandler>;

        $r26 = r0.<com.android.server.biometrics.BiometricServiceBase: com.android.server.biometrics.BiometricServiceBase$ResetClientStateRunnable mResetClientState>;

        virtualinvoke $r27.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r26);

        $r29 = r0.<com.android.server.biometrics.BiometricServiceBase: android.os.Handler mHandler>;

        $r28 = r0.<com.android.server.biometrics.BiometricServiceBase: com.android.server.biometrics.BiometricServiceBase$ResetClientStateRunnable mResetClientState>;

        virtualinvoke $r29.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r28, 3000L);

        goto label03;

     label02:
        if r32 == null goto label03;

        r36 = virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: java.lang.String getTag()>();

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Internal cleanup in progress but trying to start client ");

        $r16 = virtualinvoke r32.<java.lang.Object: java.lang.Class getClass()>();

        $r17 = virtualinvoke $r16.<java.lang.Class: java.lang.Class getSuperclass()>();

        $r18 = virtualinvoke $r17.<java.lang.Class: java.lang.String getSimpleName()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r21 = virtualinvoke r32.<com.android.server.biometrics.ClientMonitor: java.lang.String getOwnerString()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("), initiatedByClient = ");

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r25 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>(r36, $r25);

     label03:
        r0.<com.android.server.biometrics.BiometricServiceBase: com.android.server.biometrics.ClientMonitor mPendingClient> = r32;

        goto label10;

     label04:
        if r32 == null goto label10;

        $z1 = r32 instanceof com.android.server.biometrics.AuthenticationClient;

        if $z1 == 0 goto label09;

        r38 = (com.android.server.biometrics.AuthenticationClient) r32;

        $z2 = virtualinvoke r38.<com.android.server.biometrics.AuthenticationClient: boolean isBiometricPrompt()>();

        if $z2 == 0 goto label09;

        r39 = virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: java.lang.String getTag()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Returning cookie: ");

        $i1 = virtualinvoke r38.<com.android.server.biometrics.AuthenticationClient: int getCookie()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>(r39, $r4);

        r0.<com.android.server.biometrics.BiometricServiceBase: com.android.server.biometrics.ClientMonitor mCurrentClient> = r32;

        $r5 = r0.<com.android.server.biometrics.BiometricServiceBase: android.hardware.biometrics.IBiometricService mBiometricService>;

        if $r5 != null goto label05;

        $r7 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("biometric");

        $r8 = staticinvoke <android.hardware.biometrics.IBiometricService$Stub: android.hardware.biometrics.IBiometricService asInterface(android.os.IBinder)>($r7);

        r0.<com.android.server.biometrics.BiometricServiceBase: android.hardware.biometrics.IBiometricService mBiometricService> = $r8;

     label05:
        $r6 = r0.<com.android.server.biometrics.BiometricServiceBase: android.hardware.biometrics.IBiometricService mBiometricService>;

        $i3 = virtualinvoke r38.<com.android.server.biometrics.AuthenticationClient: int getCookie()>();

        $z3 = virtualinvoke r38.<com.android.server.biometrics.AuthenticationClient: boolean getRequireConfirmation()>();

        $i4 = virtualinvoke r38.<com.android.server.biometrics.AuthenticationClient: int getTargetUserId()>();

        interfaceinvoke $r6.<android.hardware.biometrics.IBiometricService: void onReadyForAuthentication(int,boolean,int)>($i3, $z3, $i4);

     label06:
        goto label08;

     label07:
        $r30 := @caughtexception;

        $r31 = virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: java.lang.String getTag()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r31, "Remote exception", $r30);

     label08:
        return;

     label09:
        r0.<com.android.server.biometrics.BiometricServiceBase: com.android.server.biometrics.ClientMonitor mCurrentClient> = r32;

        $i0 = virtualinvoke r32.<com.android.server.biometrics.ClientMonitor: int getCookie()>();

        virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: void startCurrentClient(int)>($i0);

     label10:
        return;

        catch android.os.RemoteException from label05 to label06 with label07;
    }

    protected void startCurrentClient(int)
    {
        com.android.server.biometrics.BiometricServiceBase r0;
        int i0, $i1, $i2, $i3, $i5, $i6;
        java.lang.String r1, $r9, $r13, $r25, $r30, $r31;
        com.android.server.biometrics.ClientMonitor $r3, $r6, $r12, $r16, $r23, $r26, $r27, $r28, $r29;
        java.lang.StringBuilder $r4;
        java.lang.Class $r7, $r8;
        long $l7;

        r0 := @this: com.android.server.biometrics.BiometricServiceBase;

        i0 := @parameter0: int;

        $r3 = r0.<com.android.server.biometrics.BiometricServiceBase: com.android.server.biometrics.ClientMonitor mCurrentClient>;

        if $r3 != null goto label1;

        $r31 = virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: java.lang.String getTag()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>($r31, "Trying to start null client!");

        return;

     label1:
        r1 = virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: java.lang.String getTag()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("starting client ");

        $r6 = r0.<com.android.server.biometrics.BiometricServiceBase: com.android.server.biometrics.ClientMonitor mCurrentClient>;

        $r7 = virtualinvoke $r6.<java.lang.Object: java.lang.Class getClass()>();

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.Class getSuperclass()>();

        $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.String getSimpleName()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r12 = r0.<com.android.server.biometrics.BiometricServiceBase: com.android.server.biometrics.ClientMonitor mCurrentClient>;

        $r13 = virtualinvoke $r12.<com.android.server.biometrics.ClientMonitor: java.lang.String getOwnerString()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") targetUserId: ");

        $r16 = r0.<com.android.server.biometrics.BiometricServiceBase: com.android.server.biometrics.ClientMonitor mCurrentClient>;

        $i1 = virtualinvoke $r16.<com.android.server.biometrics.ClientMonitor: int getTargetUserId()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" currentUserId: ");

        $i2 = r0.<com.android.server.biometrics.BiometricServiceBase: int mCurrentUserId>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cookie: ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r23 = r0.<com.android.server.biometrics.BiometricServiceBase: com.android.server.biometrics.ClientMonitor mCurrentClient>;

        $i3 = virtualinvoke $r23.<com.android.server.biometrics.ClientMonitor: int getCookie()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r25 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>(r1, $r25);

        $r26 = r0.<com.android.server.biometrics.BiometricServiceBase: com.android.server.biometrics.ClientMonitor mCurrentClient>;

        $i5 = virtualinvoke $r26.<com.android.server.biometrics.ClientMonitor: int getCookie()>();

        if i0 == $i5 goto label2;

        $r30 = virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: java.lang.String getTag()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>($r30, "Mismatched cookie");

        return;

     label2:
        $r27 = r0.<com.android.server.biometrics.BiometricServiceBase: com.android.server.biometrics.ClientMonitor mCurrentClient>;

        $i6 = virtualinvoke $r27.<com.android.server.biometrics.ClientMonitor: int start()>();

        if $i6 != 0 goto label3;

        virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: void notifyClientActiveCallbacks(boolean)>(1);

        goto label4;

     label3:
        $r28 = r0.<com.android.server.biometrics.BiometricServiceBase: com.android.server.biometrics.ClientMonitor mCurrentClient>;

        $l7 = virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: long getHalDeviceId()>();

        virtualinvoke $r28.<com.android.server.biometrics.ClientMonitor: boolean onError(long,int,int)>($l7, 1, 0);

        $r29 = r0.<com.android.server.biometrics.BiometricServiceBase: com.android.server.biometrics.ClientMonitor mCurrentClient>;

        virtualinvoke r0.<com.android.server.biometrics.BiometricServiceBase: void removeClient(com.android.server.biometrics.ClientMonitor)>($r29);

     label4:
        return;
    }

    protected abstract int statsModality();

    protected abstract void updateActiveGroup(int, java.lang.String);

    public static void <clinit>()
    {
        <com.android.server.biometrics.BiometricServiceBase: int MSG_USER_SWITCHING> = 10;

        <com.android.server.biometrics.BiometricServiceBase: java.lang.String KEY_LOCKOUT_RESET_USER> = "lockout_reset_user";

        <com.android.server.biometrics.BiometricServiceBase: boolean DEBUG> = 1;

        <com.android.server.biometrics.BiometricServiceBase: boolean CLEANUP_UNKNOWN_TEMPLATES> = 1;

        <com.android.server.biometrics.BiometricServiceBase: long CANCEL_TIMEOUT_LIMIT> = 3000L;

        return;
    }
}
