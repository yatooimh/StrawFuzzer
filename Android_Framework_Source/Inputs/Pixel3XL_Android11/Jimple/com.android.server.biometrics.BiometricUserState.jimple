public abstract class com.android.server.biometrics.BiometricUserState extends java.lang.Object
{
    private static final java.lang.String TAG;
    protected final java.util.ArrayList mBiometrics;
    protected final android.content.Context mContext;
    protected final java.io.File mFile;
    private final java.lang.Runnable mWriteStateRunnable;

    public void <init>(android.content.Context, int)
    {
        com.android.server.biometrics.BiometricUserState r0;
        int i0;
        java.util.ArrayList $r1;
        com.android.server.biometrics.BiometricUserState$1 $r2;
        java.io.File $r3;
        java.lang.Throwable $r4;
        android.content.Context r5;

        r0 := @this: com.android.server.biometrics.BiometricUserState;

        r5 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.biometrics.BiometricUserState: java.util.ArrayList mBiometrics> = $r1;

        $r2 = new com.android.server.biometrics.BiometricUserState$1;

        specialinvoke $r2.<com.android.server.biometrics.BiometricUserState$1: void <init>(com.android.server.biometrics.BiometricUserState)>(r0);

        r0.<com.android.server.biometrics.BiometricUserState: java.lang.Runnable mWriteStateRunnable> = $r2;

        $r3 = specialinvoke r0.<com.android.server.biometrics.BiometricUserState: java.io.File getFileForUser(int)>(i0);

        r0.<com.android.server.biometrics.BiometricUserState: java.io.File mFile> = $r3;

        r0.<com.android.server.biometrics.BiometricUserState: android.content.Context mContext> = r5;

        entermonitor r0;

     label1:
        specialinvoke r0.<com.android.server.biometrics.BiometricUserState: void readStateSyncLocked()>();

        exitmonitor r0;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private java.io.File getFileForUser(int)
    {
        com.android.server.biometrics.BiometricUserState r0;
        int i0;
        java.io.File $r1, $r2;
        java.lang.String $r3;

        r0 := @this: com.android.server.biometrics.BiometricUserState;

        i0 := @parameter0: int;

        $r1 = new java.io.File;

        $r2 = staticinvoke <android.os.Environment: java.io.File getUserSystemDirectory(int)>(i0);

        $r3 = virtualinvoke r0.<com.android.server.biometrics.BiometricUserState: java.lang.String getBiometricFile()>();

        specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r2, $r3);

        return $r1;
    }

    private boolean isUnique(java.lang.String)
    {
        com.android.server.biometrics.BiometricUserState r0;
        java.lang.String r1;
        java.util.Iterator r2;
        java.util.ArrayList $r3;
        boolean $z0, $z1;
        java.lang.Object $r4;
        android.hardware.biometrics.BiometricAuthenticator$Identifier $r5;
        java.lang.CharSequence $r6;

        r0 := @this: com.android.server.biometrics.BiometricUserState;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<com.android.server.biometrics.BiometricUserState: java.util.ArrayList mBiometrics>;

        r2 = virtualinvoke $r3.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (android.hardware.biometrics.BiometricAuthenticator$Identifier) $r4;

        $r6 = virtualinvoke $r5.<android.hardware.biometrics.BiometricAuthenticator$Identifier: java.lang.CharSequence getName()>();

        $z1 = virtualinvoke $r6.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label2;

        return 0;

     label2:
        goto label1;

     label3:
        return 1;
    }

    private void parseStateLocked(org.xmlpull.v1.XmlPullParser) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        com.android.server.biometrics.BiometricUserState r0;
        org.xmlpull.v1.XmlPullParser r1;
        int i0, i1, $i2;
        java.lang.String $r2, $r3;
        boolean $z0;

        r0 := @this: com.android.server.biometrics.BiometricUserState;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        i0 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label1:
        i1 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i1 == 1 goto label5;

        if i1 != 3 goto label2;

        $i2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i2 <= i0 goto label5;

     label2:
        if i1 == 3 goto label1;

        if i1 != 4 goto label3;

        goto label1;

     label3:
        $r2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r3 = virtualinvoke r0.<com.android.server.biometrics.BiometricUserState: java.lang.String getBiometricsTag()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label4;

        virtualinvoke r0.<com.android.server.biometrics.BiometricUserState: void parseBiometricsLocked(org.xmlpull.v1.XmlPullParser)>(r1);

     label4:
        goto label1;

     label5:
        return;
    }

    private void readStateSyncLocked()
    {
        com.android.server.biometrics.BiometricUserState r0;
        java.lang.IllegalStateException r1;
        java.lang.StringBuilder r2;
        java.io.File $r3, $r5, $r10;
        boolean $z0;
        java.io.FileInputStream $r4;
        java.lang.Throwable $r6, $r7, $r8;
        java.lang.String $r12;
        org.xmlpull.v1.XmlPullParser r14;

        r0 := @this: com.android.server.biometrics.BiometricUserState;

        $r3 = r0.<com.android.server.biometrics.BiometricUserState: java.io.File mFile>;

        $z0 = virtualinvoke $r3.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r4 = new java.io.FileInputStream;

        $r5 = r0.<com.android.server.biometrics.BiometricUserState: java.io.File mFile>;

        specialinvoke $r4.<java.io.FileInputStream: void <init>(java.io.File)>($r5);

     label2:
        r14 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

        interfaceinvoke r14.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>($r4, null);

        specialinvoke r0.<com.android.server.biometrics.BiometricUserState: void parseStateLocked(org.xmlpull.v1.XmlPullParser)>(r14);

     label3:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>($r4);

        return;

     label4:
        $r7 := @caughtexception;

        goto label7;

     label5:
        $r8 := @caughtexception;

     label6:
        r1 = new java.lang.IllegalStateException;

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed parsing settings file: ");

        $r10 = r0.<com.android.server.biometrics.BiometricUserState: java.io.File mFile>;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r12 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r1.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>($r12, $r8);

        throw r1;

     label7:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>($r4);

        throw $r7;

     label8:
        $r6 := @caughtexception;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("UserState", "No fingerprint state");

        return;

        catch java.io.FileNotFoundException from label1 to label2 with label8;
        catch org.xmlpull.v1.XmlPullParserException from label2 to label3 with label5;
        catch java.io.IOException from label2 to label3 with label5;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label6 to label7 with label4;
    }

    private void scheduleWriteStateLocked()
    {
        com.android.server.biometrics.BiometricUserState r0;
        java.lang.Runnable $r1;

        r0 := @this: com.android.server.biometrics.BiometricUserState;

        $r1 = r0.<com.android.server.biometrics.BiometricUserState: java.lang.Runnable mWriteStateRunnable>;

        staticinvoke <android.os.AsyncTask: void execute(java.lang.Runnable)>($r1);

        return;
    }

    public void addBiometric(android.hardware.biometrics.BiometricAuthenticator$Identifier)
    {
        com.android.server.biometrics.BiometricUserState r0;
        java.util.ArrayList $r1;
        java.lang.Throwable $r2;
        android.hardware.biometrics.BiometricAuthenticator$Identifier r3;

        r0 := @this: com.android.server.biometrics.BiometricUserState;

        r3 := @parameter0: android.hardware.biometrics.BiometricAuthenticator$Identifier;

        entermonitor r0;

     label1:
        $r1 = r0.<com.android.server.biometrics.BiometricUserState: java.util.ArrayList mBiometrics>;

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r3);

        specialinvoke r0.<com.android.server.biometrics.BiometricUserState: void scheduleWriteStateLocked()>();

        exitmonitor r0;

     label2:
        return;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    protected abstract void doWriteState();

    protected abstract java.lang.String getBiometricFile();

    public java.util.List getBiometrics()
    {
        com.android.server.biometrics.BiometricUserState r0;
        java.util.ArrayList $r1, r3;
        java.lang.Throwable $r2;

        r0 := @this: com.android.server.biometrics.BiometricUserState;

        entermonitor r0;

     label1:
        $r1 = r0.<com.android.server.biometrics.BiometricUserState: java.util.ArrayList mBiometrics>;

        r3 = virtualinvoke r0.<com.android.server.biometrics.BiometricUserState: java.util.ArrayList getCopy(java.util.ArrayList)>($r1);

        exitmonitor r0;

     label2:
        return r3;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    protected abstract java.lang.String getBiometricsTag();

    protected abstract java.util.ArrayList getCopy(java.util.ArrayList);

    protected abstract int getNameTemplateResource();

    public java.lang.String getUniqueName()
    {
        com.android.server.biometrics.BiometricUserState r0;
        java.lang.String r1;
        android.content.Context $r2;
        int $i0, i1;
        java.lang.Object[] $r3;
        java.lang.Integer $r4;
        boolean $z0;

        r0 := @this: com.android.server.biometrics.BiometricUserState;

        i1 = 1;

     label1:
        $r2 = r0.<com.android.server.biometrics.BiometricUserState: android.content.Context mContext>;

        $i0 = virtualinvoke r0.<com.android.server.biometrics.BiometricUserState: int getNameTemplateResource()>();

        $r3 = newarray (java.lang.Object)[1];

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r3[0] = $r4;

        r1 = virtualinvoke $r2.<android.content.Context: java.lang.String getString(int,java.lang.Object[])>($i0, $r3);

        $z0 = specialinvoke r0.<com.android.server.biometrics.BiometricUserState: boolean isUnique(java.lang.String)>(r1);

        if $z0 == 0 goto label2;

        return r1;

     label2:
        i1 = i1 + 1;

        goto label1;
    }

    protected abstract void parseBiometricsLocked(org.xmlpull.v1.XmlPullParser) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException;

    public void removeBiometric(int)
    {
        com.android.server.biometrics.BiometricUserState r0;
        int i0, $i1, $i2, i3;
        java.util.ArrayList $r2, $r3, $r6;
        java.lang.Object $r4;
        android.hardware.biometrics.BiometricAuthenticator$Identifier $r5;
        java.lang.Throwable $r8;

        r0 := @this: com.android.server.biometrics.BiometricUserState;

        i0 := @parameter0: int;

        entermonitor r0;

        i3 = 0;

     label1:
        $r2 = r0.<com.android.server.biometrics.BiometricUserState: java.util.ArrayList mBiometrics>;

        $i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if i3 >= $i1 goto label4;

        $r3 = r0.<com.android.server.biometrics.BiometricUserState: java.util.ArrayList mBiometrics>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        $r5 = (android.hardware.biometrics.BiometricAuthenticator$Identifier) $r4;

        $i2 = virtualinvoke $r5.<android.hardware.biometrics.BiometricAuthenticator$Identifier: int getBiometricId()>();

        if $i2 != i0 goto label3;

        $r6 = r0.<com.android.server.biometrics.BiometricUserState: java.util.ArrayList mBiometrics>;

        virtualinvoke $r6.<java.util.ArrayList: java.lang.Object remove(int)>(i3);

        specialinvoke r0.<com.android.server.biometrics.BiometricUserState: void scheduleWriteStateLocked()>();

     label2:
        goto label4;

     label3:
        i3 = i3 + 1;

        goto label1;

     label4:
        exitmonitor r0;

     label5:
        return;

     label6:
        $r8 := @caughtexception;

     label7:
        exitmonitor r0;

     label8:
        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public void renameBiometric(int, java.lang.CharSequence)
    {
        com.android.server.biometrics.BiometricUserState r0;
        int i0, $i1, $i2, i3;
        java.util.ArrayList $r1, $r2, $r5;
        java.lang.Object $r3, $r6;
        android.hardware.biometrics.BiometricAuthenticator$Identifier $r4, $r7;
        java.lang.Throwable $r8;
        java.lang.CharSequence r9;

        r0 := @this: com.android.server.biometrics.BiometricUserState;

        i0 := @parameter0: int;

        r9 := @parameter1: java.lang.CharSequence;

        entermonitor r0;

        i3 = 0;

     label1:
        $r1 = r0.<com.android.server.biometrics.BiometricUserState: java.util.ArrayList mBiometrics>;

        $i1 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if i3 >= $i1 goto label4;

        $r2 = r0.<com.android.server.biometrics.BiometricUserState: java.util.ArrayList mBiometrics>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        $r4 = (android.hardware.biometrics.BiometricAuthenticator$Identifier) $r3;

        $i2 = virtualinvoke $r4.<android.hardware.biometrics.BiometricAuthenticator$Identifier: int getBiometricId()>();

        if $i2 != i0 goto label3;

        $r5 = r0.<com.android.server.biometrics.BiometricUserState: java.util.ArrayList mBiometrics>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        $r7 = (android.hardware.biometrics.BiometricAuthenticator$Identifier) $r6;

        virtualinvoke $r7.<android.hardware.biometrics.BiometricAuthenticator$Identifier: void setName(java.lang.CharSequence)>(r9);

        specialinvoke r0.<com.android.server.biometrics.BiometricUserState: void scheduleWriteStateLocked()>();

     label2:
        goto label4;

     label3:
        i3 = i3 + 1;

        goto label1;

     label4:
        exitmonitor r0;

     label5:
        return;

     label6:
        $r8 := @caughtexception;

     label7:
        exitmonitor r0;

     label8:
        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public static void <clinit>()
    {
        <com.android.server.biometrics.BiometricUserState: java.lang.String TAG> = "UserState";

        return;
    }
}
