public abstract class com.android.server.biometrics.ClientMonitor extends com.android.server.biometrics.LoggableMonitor implements android.os.IBinder$DeathRecipient
{
    protected static final boolean DEBUG;
    protected static final int ERROR_ESRCH;
    private static final android.media.AudioAttributes FINGERPRINT_SONFICATION_ATTRIBUTES;
    protected boolean mAlreadyCancelled;
    protected boolean mAlreadyDone;
    protected final com.android.server.biometrics.Constants mConstants;
    private final android.content.Context mContext;
    private final int mCookie;
    private final com.android.server.biometrics.BiometricServiceBase$DaemonWrapper mDaemon;
    private final android.os.VibrationEffect mErrorVibrationEffect;
    private final int mGroupId;
    private final long mHalDeviceId;
    private final boolean mIsRestricted;
    private com.android.server.biometrics.BiometricServiceBase$ServiceListener mListener;
    protected final com.android.internal.logging.MetricsLogger mMetricsLogger;
    private final java.lang.String mOwner;
    private final android.os.VibrationEffect mSuccessVibrationEffect;
    private final int mTargetUserId;
    private android.os.IBinder mToken;

    static void <clinit>()
    {
        android.media.AudioAttributes$Builder $r0, $r1, $r2;
        android.media.AudioAttributes $r3;

        <com.android.server.biometrics.ClientMonitor: int ERROR_ESRCH> = 3;

        <com.android.server.biometrics.ClientMonitor: boolean DEBUG> = 1;

        $r0 = new android.media.AudioAttributes$Builder;

        specialinvoke $r0.<android.media.AudioAttributes$Builder: void <init>()>();

        $r1 = virtualinvoke $r0.<android.media.AudioAttributes$Builder: android.media.AudioAttributes$Builder setContentType(int)>(4);

        $r2 = virtualinvoke $r1.<android.media.AudioAttributes$Builder: android.media.AudioAttributes$Builder setUsage(int)>(13);

        $r3 = virtualinvoke $r2.<android.media.AudioAttributes$Builder: android.media.AudioAttributes build()>();

        <com.android.server.biometrics.ClientMonitor: android.media.AudioAttributes FINGERPRINT_SONFICATION_ATTRIBUTES> = $r3;

        return;
    }

    public void <init>(android.content.Context, com.android.server.biometrics.Constants, com.android.server.biometrics.BiometricServiceBase$DaemonWrapper, long, android.os.IBinder, com.android.server.biometrics.BiometricServiceBase$ServiceListener, int, int, boolean, java.lang.String, int)
    {
        com.android.server.biometrics.ClientMonitor r0;
        com.android.server.biometrics.Constants r1;
        com.android.server.biometrics.BiometricServiceBase$DaemonWrapper r2;
        long l0;
        android.os.IBinder r3;
        com.android.server.biometrics.BiometricServiceBase$ServiceListener r4;
        int i1, i2, i3;
        boolean z0;
        java.lang.String r5, $r10;
        android.os.VibrationEffect $r6, $r7;
        com.android.internal.logging.MetricsLogger $r8;
        android.os.RemoteException $r9;
        android.content.Context r11;

        r0 := @this: com.android.server.biometrics.ClientMonitor;

        r11 := @parameter0: android.content.Context;

        r1 := @parameter1: com.android.server.biometrics.Constants;

        r2 := @parameter2: com.android.server.biometrics.BiometricServiceBase$DaemonWrapper;

        l0 := @parameter3: long;

        r3 := @parameter4: android.os.IBinder;

        r4 := @parameter5: com.android.server.biometrics.BiometricServiceBase$ServiceListener;

        i1 := @parameter6: int;

        i2 := @parameter7: int;

        z0 := @parameter8: boolean;

        r5 := @parameter9: java.lang.String;

        i3 := @parameter10: int;

        specialinvoke r0.<com.android.server.biometrics.LoggableMonitor: void <init>()>();

        r0.<com.android.server.biometrics.ClientMonitor: android.content.Context mContext> = r11;

        r0.<com.android.server.biometrics.ClientMonitor: com.android.server.biometrics.Constants mConstants> = r1;

        r0.<com.android.server.biometrics.ClientMonitor: com.android.server.biometrics.BiometricServiceBase$DaemonWrapper mDaemon> = r2;

        r0.<com.android.server.biometrics.ClientMonitor: long mHalDeviceId> = l0;

        r0.<com.android.server.biometrics.ClientMonitor: android.os.IBinder mToken> = r3;

        r0.<com.android.server.biometrics.ClientMonitor: com.android.server.biometrics.BiometricServiceBase$ServiceListener mListener> = r4;

        r0.<com.android.server.biometrics.ClientMonitor: int mTargetUserId> = i1;

        r0.<com.android.server.biometrics.ClientMonitor: int mGroupId> = i2;

        r0.<com.android.server.biometrics.ClientMonitor: boolean mIsRestricted> = z0;

        r0.<com.android.server.biometrics.ClientMonitor: java.lang.String mOwner> = r5;

        r0.<com.android.server.biometrics.ClientMonitor: int mCookie> = i3;

        $r6 = staticinvoke <android.os.VibrationEffect: android.os.VibrationEffect get(int)>(0);

        r0.<com.android.server.biometrics.ClientMonitor: android.os.VibrationEffect mSuccessVibrationEffect> = $r6;

        $r7 = staticinvoke <android.os.VibrationEffect: android.os.VibrationEffect get(int)>(1);

        r0.<com.android.server.biometrics.ClientMonitor: android.os.VibrationEffect mErrorVibrationEffect> = $r7;

        $r8 = new com.android.internal.logging.MetricsLogger;

        specialinvoke $r8.<com.android.internal.logging.MetricsLogger: void <init>()>();

        r0.<com.android.server.biometrics.ClientMonitor: com.android.internal.logging.MetricsLogger mMetricsLogger> = $r8;

        if r3 == null goto label4;

     label1:
        interfaceinvoke r3.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>(r0, 0);

     label2:
        goto label4;

     label3:
        $r9 := @caughtexception;

        $r10 = virtualinvoke r0.<com.android.server.biometrics.ClientMonitor: java.lang.String getLogTag()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r10, "caught remote exception in linkToDeath: ", $r9);

        goto label4;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private boolean blacklistContains(int, int)
    {
        com.android.server.biometrics.ClientMonitor r0;
        com.android.server.biometrics.Constants $r1;
        int $i0, $i1, $i2, $i4, $i5, i7, i8, i9, i10;
        int[] $r2, $r3, $r8, $r9;
        java.lang.StringBuilder $r4, $r10;
        java.lang.String $r7, $r13, r14, r16;

        r0 := @this: com.android.server.biometrics.ClientMonitor;

        i7 := @parameter0: int;

        i8 := @parameter1: int;

        $r1 = r0.<com.android.server.biometrics.ClientMonitor: com.android.server.biometrics.Constants mConstants>;

        $i0 = interfaceinvoke $r1.<com.android.server.biometrics.Constants: int acquireVendorCode()>();

        if i7 != $i0 goto label4;

        i9 = 0;

     label1:
        $r8 = virtualinvoke r0.<com.android.server.biometrics.ClientMonitor: int[] getAcquireVendorIgnorelist()>();

        $i4 = lengthof $r8;

        if i9 >= $i4 goto label3;

        $r9 = virtualinvoke r0.<com.android.server.biometrics.ClientMonitor: int[] getAcquireVendorIgnorelist()>();

        $i5 = $r9[i9];

        if $i5 != i8 goto label2;

        r14 = virtualinvoke r0.<com.android.server.biometrics.ClientMonitor: java.lang.String getLogTag()>();

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring vendor message: ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i8);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>(r14, $r13);

        return 1;

     label2:
        i9 = i9 + 1;

        goto label1;

     label3:
        goto label7;

     label4:
        i10 = 0;

     label5:
        $r2 = virtualinvoke r0.<com.android.server.biometrics.ClientMonitor: int[] getAcquireIgnorelist()>();

        $i1 = lengthof $r2;

        if i10 >= $i1 goto label7;

        $r3 = virtualinvoke r0.<com.android.server.biometrics.ClientMonitor: int[] getAcquireIgnorelist()>();

        $i2 = $r3[i10];

        if $i2 != i7 goto label6;

        r16 = virtualinvoke r0.<com.android.server.biometrics.ClientMonitor: java.lang.String getLogTag()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring message: ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i7);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>(r16, $r7);

        return 1;

     label6:
        i10 = i10 + 1;

        goto label5;

     label7:
        return 0;
    }

    public void binderDied()
    {
        com.android.server.biometrics.ClientMonitor r0;

        r0 := @this: com.android.server.biometrics.ClientMonitor;

        virtualinvoke r0.<com.android.server.biometrics.ClientMonitor: void binderDiedInternal(boolean)>(1);

        return;
    }

    void binderDiedInternal(boolean)
    {
        com.android.server.biometrics.ClientMonitor r0;
        boolean z0;
        java.lang.String $r1;

        r0 := @this: com.android.server.biometrics.ClientMonitor;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<com.android.server.biometrics.ClientMonitor: java.lang.String getLogTag()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>($r1, "Binder died, cancelling client");

        virtualinvoke r0.<com.android.server.biometrics.ClientMonitor: int stop(boolean)>(0);

        r0.<com.android.server.biometrics.ClientMonitor: android.os.IBinder mToken> = null;

        if z0 == 0 goto label1;

        r0.<com.android.server.biometrics.ClientMonitor: com.android.server.biometrics.BiometricServiceBase$ServiceListener mListener> = null;

     label1:
        return;
    }

    public void destroy()
    {
        com.android.server.biometrics.ClientMonitor r0;
        java.lang.Throwable $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r7, r11;
        java.lang.Exception $r8;
        android.os.IBinder r9;

        r0 := @this: com.android.server.biometrics.ClientMonitor;

        r9 = r0.<com.android.server.biometrics.ClientMonitor: android.os.IBinder mToken>;

        if r9 == null goto label5;

     label1:
        interfaceinvoke r9.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>(r0, 0);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        r11 = virtualinvoke r0.<com.android.server.biometrics.ClientMonitor: java.lang.String getLogTag()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("destroy(): ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = new java.lang.Exception;

        specialinvoke $r8.<java.lang.Exception: void <init>(java.lang.String)>("here");

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>(r11, $r7, $r8);

     label4:
        r0.<com.android.server.biometrics.ClientMonitor: android.os.IBinder mToken> = null;

     label5:
        r0.<com.android.server.biometrics.ClientMonitor: com.android.server.biometrics.BiometricServiceBase$ServiceListener mListener> = null;

        return;

        catch java.util.NoSuchElementException from label1 to label2 with label3;
    }

    protected void finalize() throws java.lang.Throwable
    {
        com.android.server.biometrics.ClientMonitor r0;
        java.lang.StringBuilder r1;
        android.os.IBinder $r2, $r4;
        java.lang.String $r6, r8;
        long $l1;
        java.lang.Throwable $r7;

        r0 := @this: com.android.server.biometrics.ClientMonitor;

     label1:
        $r2 = r0.<com.android.server.biometrics.ClientMonitor: android.os.IBinder mToken>;

        if $r2 == null goto label2;

        r8 = virtualinvoke r0.<com.android.server.biometrics.ClientMonitor: java.lang.String getLogTag()>();

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("removing leaked reference: ");

        $r4 = r0.<com.android.server.biometrics.ClientMonitor: android.os.IBinder mToken>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r6 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>(r8, $r6);

        $l1 = virtualinvoke r0.<com.android.server.biometrics.ClientMonitor: long getHalDeviceId()>();

        virtualinvoke r0.<com.android.server.biometrics.ClientMonitor: boolean onError(long,int,int)>($l1, 1, 0);

     label2:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        return;

     label3:
        $r7 := @caughtexception;

        specialinvoke r0.<java.lang.Object: void finalize()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public int[] getAcquireIgnorelist()
    {
        com.android.server.biometrics.ClientMonitor r0;
        int[] $r1;

        r0 := @this: com.android.server.biometrics.ClientMonitor;

        $r1 = newarray (int)[0];

        return $r1;
    }

    public int[] getAcquireVendorIgnorelist()
    {
        com.android.server.biometrics.ClientMonitor r0;
        int[] $r1;

        r0 := @this: com.android.server.biometrics.ClientMonitor;

        $r1 = newarray (int)[0];

        return $r1;
    }

    public final android.content.Context getContext()
    {
        com.android.server.biometrics.ClientMonitor r0;
        android.content.Context $r1;

        r0 := @this: com.android.server.biometrics.ClientMonitor;

        $r1 = r0.<com.android.server.biometrics.ClientMonitor: android.content.Context mContext>;

        return $r1;
    }

    public int getCookie()
    {
        com.android.server.biometrics.ClientMonitor r0;
        int $i0;

        r0 := @this: com.android.server.biometrics.ClientMonitor;

        $i0 = r0.<com.android.server.biometrics.ClientMonitor: int mCookie>;

        return $i0;
    }

    public final com.android.server.biometrics.BiometricServiceBase$DaemonWrapper getDaemonWrapper()
    {
        com.android.server.biometrics.ClientMonitor r0;
        com.android.server.biometrics.BiometricServiceBase$DaemonWrapper $r1;

        r0 := @this: com.android.server.biometrics.ClientMonitor;

        $r1 = r0.<com.android.server.biometrics.ClientMonitor: com.android.server.biometrics.BiometricServiceBase$DaemonWrapper mDaemon>;

        return $r1;
    }

    public final int getGroupId()
    {
        com.android.server.biometrics.ClientMonitor r0;
        int $i0;

        r0 := @this: com.android.server.biometrics.ClientMonitor;

        $i0 = r0.<com.android.server.biometrics.ClientMonitor: int mGroupId>;

        return $i0;
    }

    public final long getHalDeviceId()
    {
        com.android.server.biometrics.ClientMonitor r0;
        long $l0;

        r0 := @this: com.android.server.biometrics.ClientMonitor;

        $l0 = r0.<com.android.server.biometrics.ClientMonitor: long mHalDeviceId>;

        return $l0;
    }

    public final boolean getIsRestricted()
    {
        com.android.server.biometrics.ClientMonitor r0;
        boolean $z0;

        r0 := @this: com.android.server.biometrics.ClientMonitor;

        $z0 = r0.<com.android.server.biometrics.ClientMonitor: boolean mIsRestricted>;

        return $z0;
    }

    public final com.android.server.biometrics.BiometricServiceBase$ServiceListener getListener()
    {
        com.android.server.biometrics.ClientMonitor r0;
        com.android.server.biometrics.BiometricServiceBase$ServiceListener $r1;

        r0 := @this: com.android.server.biometrics.ClientMonitor;

        $r1 = r0.<com.android.server.biometrics.ClientMonitor: com.android.server.biometrics.BiometricServiceBase$ServiceListener mListener>;

        return $r1;
    }

    protected java.lang.String getLogTag()
    {
        com.android.server.biometrics.ClientMonitor r0;
        com.android.server.biometrics.Constants $r1;
        java.lang.String $r2;

        r0 := @this: com.android.server.biometrics.ClientMonitor;

        $r1 = r0.<com.android.server.biometrics.ClientMonitor: com.android.server.biometrics.Constants mConstants>;

        $r2 = interfaceinvoke $r1.<com.android.server.biometrics.Constants: java.lang.String logTag()>();

        return $r2;
    }

    public final java.lang.String getOwnerString()
    {
        com.android.server.biometrics.ClientMonitor r0;
        java.lang.String $r1;

        r0 := @this: com.android.server.biometrics.ClientMonitor;

        $r1 = r0.<com.android.server.biometrics.ClientMonitor: java.lang.String mOwner>;

        return $r1;
    }

    public final int getTargetUserId()
    {
        com.android.server.biometrics.ClientMonitor r0;
        int $i0;

        r0 := @this: com.android.server.biometrics.ClientMonitor;

        $i0 = r0.<com.android.server.biometrics.ClientMonitor: int mTargetUserId>;

        return $i0;
    }

    public final android.os.IBinder getToken()
    {
        com.android.server.biometrics.ClientMonitor r0;
        android.os.IBinder $r1;

        r0 := @this: com.android.server.biometrics.ClientMonitor;

        $r1 = r0.<com.android.server.biometrics.ClientMonitor: android.os.IBinder mToken>;

        return $r1;
    }

    public boolean isAlreadyDone()
    {
        com.android.server.biometrics.ClientMonitor r0;
        boolean $z0;

        r0 := @this: com.android.server.biometrics.ClientMonitor;

        $z0 = r0.<com.android.server.biometrics.ClientMonitor: boolean mAlreadyDone>;

        return $z0;
    }

    public abstract void notifyUserActivity();

    public boolean onAcquired(int, int)
    {
        com.android.server.biometrics.ClientMonitor r0;
        int i0, i1, $i2;
        android.content.Context $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r8, $r13, r14;
        com.android.server.biometrics.BiometricServiceBase$ServiceListener $r9, $r10;
        boolean $z0;
        long $l4;
        java.lang.Throwable $r11;
        android.os.RemoteException $r12;

        r0 := @this: com.android.server.biometrics.ClientMonitor;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = r0.<com.android.server.biometrics.ClientMonitor: android.content.Context mContext>;

        $i2 = virtualinvoke r0.<com.android.server.biometrics.ClientMonitor: int getTargetUserId()>();

        specialinvoke r0.<com.android.server.biometrics.LoggableMonitor: void logOnAcquired(android.content.Context,int,int,int)>($r2, i0, i1, $i2);

        r14 = virtualinvoke r0.<com.android.server.biometrics.ClientMonitor: java.lang.String getLogTag()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Acquired: ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>(r14, $r8);

     label01:
        $r9 = r0.<com.android.server.biometrics.ClientMonitor: com.android.server.biometrics.BiometricServiceBase$ServiceListener mListener>;

        if $r9 == null goto label02;

        $z0 = specialinvoke r0.<com.android.server.biometrics.ClientMonitor: boolean blacklistContains(int,int)>(i0, i1);

        if $z0 != 0 goto label02;

        $r10 = r0.<com.android.server.biometrics.ClientMonitor: com.android.server.biometrics.BiometricServiceBase$ServiceListener mListener>;

        $l4 = virtualinvoke r0.<com.android.server.biometrics.ClientMonitor: long getHalDeviceId()>();

        interfaceinvoke $r10.<com.android.server.biometrics.BiometricServiceBase$ServiceListener: void onAcquired(long,int,int)>($l4, i0, i1);

     label02:
        if i0 != 0 goto label03;

        virtualinvoke r0.<com.android.server.biometrics.ClientMonitor: void notifyUserActivity()>();

     label03:
        return 0;

     label04:
        $r11 := @caughtexception;

        goto label09;

     label05:
        $r12 := @caughtexception;

     label06:
        $r13 = virtualinvoke r0.<com.android.server.biometrics.ClientMonitor: java.lang.String getLogTag()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r13, "Failed to invoke sendAcquired", $r12);

     label07:
        if i0 != 0 goto label08;

        virtualinvoke r0.<com.android.server.biometrics.ClientMonitor: void notifyUserActivity()>();

     label08:
        return 1;

     label09:
        if i0 != 0 goto label10;

        virtualinvoke r0.<com.android.server.biometrics.ClientMonitor: void notifyUserActivity()>();

     label10:
        throw $r11;

        catch android.os.RemoteException from label01 to label02 with label05;
        catch java.lang.Throwable from label01 to label02 with label04;
        catch java.lang.Throwable from label06 to label07 with label04;
    }

    public abstract boolean onAuthenticated(android.hardware.biometrics.BiometricAuthenticator$Identifier, boolean, java.util.ArrayList);

    public abstract boolean onEnrollResult(android.hardware.biometrics.BiometricAuthenticator$Identifier, int);

    public abstract boolean onEnumerationResult(android.hardware.biometrics.BiometricAuthenticator$Identifier, int);

    public boolean onError(long, int, int)
    {
        com.android.server.biometrics.ClientMonitor r0;
        long l0;
        int i1, i2, $i3, $i4;
        android.content.Context $r2;
        com.android.server.biometrics.BiometricServiceBase$ServiceListener $r3, $r4;
        android.os.RemoteException $r5;
        java.lang.String $r6;

        r0 := @this: com.android.server.biometrics.ClientMonitor;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r2 = r0.<com.android.server.biometrics.ClientMonitor: android.content.Context mContext>;

        $i3 = virtualinvoke r0.<com.android.server.biometrics.ClientMonitor: int getTargetUserId()>();

        specialinvoke r0.<com.android.server.biometrics.LoggableMonitor: void logOnError(android.content.Context,int,int,int)>($r2, i1, i2, $i3);

     label1:
        $r3 = r0.<com.android.server.biometrics.ClientMonitor: com.android.server.biometrics.BiometricServiceBase$ServiceListener mListener>;

        if $r3 == null goto label2;

        $r4 = r0.<com.android.server.biometrics.ClientMonitor: com.android.server.biometrics.BiometricServiceBase$ServiceListener mListener>;

        $i4 = virtualinvoke r0.<com.android.server.biometrics.ClientMonitor: int getCookie()>();

        interfaceinvoke $r4.<com.android.server.biometrics.BiometricServiceBase$ServiceListener: void onError(long,int,int,int)>(l0, i1, i2, $i4);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        $r6 = virtualinvoke r0.<com.android.server.biometrics.ClientMonitor: java.lang.String getLogTag()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r6, "Failed to invoke sendError", $r5);

     label4:
        return 1;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public abstract boolean onRemoved(android.hardware.biometrics.BiometricAuthenticator$Identifier, int);

    public abstract int start();

    public abstract int stop(boolean);

    public final void vibrateError()
    {
        com.android.server.biometrics.ClientMonitor r0;
        android.os.Vibrator r1;
        android.content.Context $r2;
        java.lang.Object $r3;
        android.media.AudioAttributes $r4;
        android.os.VibrationEffect $r5;

        r0 := @this: com.android.server.biometrics.ClientMonitor;

        $r2 = r0.<com.android.server.biometrics.ClientMonitor: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/os/Vibrator;");

        r1 = (android.os.Vibrator) $r3;

        if r1 == null goto label1;

        $r5 = r0.<com.android.server.biometrics.ClientMonitor: android.os.VibrationEffect mErrorVibrationEffect>;

        $r4 = <com.android.server.biometrics.ClientMonitor: android.media.AudioAttributes FINGERPRINT_SONFICATION_ATTRIBUTES>;

        virtualinvoke r1.<android.os.Vibrator: void vibrate(android.os.VibrationEffect,android.media.AudioAttributes)>($r5, $r4);

     label1:
        return;
    }

    public final void vibrateSuccess()
    {
        com.android.server.biometrics.ClientMonitor r0;
        android.os.Vibrator r1;
        android.content.Context $r2;
        java.lang.Object $r3;
        android.media.AudioAttributes $r4;
        android.os.VibrationEffect $r5;

        r0 := @this: com.android.server.biometrics.ClientMonitor;

        $r2 = r0.<com.android.server.biometrics.ClientMonitor: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/os/Vibrator;");

        r1 = (android.os.Vibrator) $r3;

        if r1 == null goto label1;

        $r5 = r0.<com.android.server.biometrics.ClientMonitor: android.os.VibrationEffect mSuccessVibrationEffect>;

        $r4 = <com.android.server.biometrics.ClientMonitor: android.media.AudioAttributes FINGERPRINT_SONFICATION_ATTRIBUTES>;

        virtualinvoke r1.<android.os.Vibrator: void vibrate(android.os.VibrationEffect,android.media.AudioAttributes)>($r5, $r4);

     label1:
        return;
    }
}
