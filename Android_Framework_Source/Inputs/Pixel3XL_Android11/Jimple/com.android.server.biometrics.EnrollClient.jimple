public abstract class com.android.server.biometrics.EnrollClient extends com.android.server.biometrics.ClientMonitor
{
    private final com.android.server.biometrics.BiometricUtils mBiometricUtils;
    private final byte[] mCryptoToken;
    private final int[] mDisabledFeatures;
    private long mEnrollmentStartTimeMs;
    private final int mTimeoutSec;

    public void <init>(android.content.Context, com.android.server.biometrics.Constants, com.android.server.biometrics.BiometricServiceBase$DaemonWrapper, long, android.os.IBinder, com.android.server.biometrics.BiometricServiceBase$ServiceListener, int, int, byte[], boolean, java.lang.String, com.android.server.biometrics.BiometricUtils, int[], int)
    {
        com.android.server.biometrics.EnrollClient r0;
        android.content.Context r1;
        com.android.server.biometrics.Constants r2;
        com.android.server.biometrics.BiometricServiceBase$DaemonWrapper r3;
        long l0;
        android.os.IBinder r4;
        com.android.server.biometrics.BiometricServiceBase$ServiceListener r5;
        int i1, i2, i3, $i4, $i5;
        byte[] r6, $r10;
        boolean z0;
        java.lang.String r7;
        com.android.server.biometrics.BiometricUtils r8;
        int[] r9, $r11;

        r0 := @this: com.android.server.biometrics.EnrollClient;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.server.biometrics.Constants;

        r3 := @parameter2: com.android.server.biometrics.BiometricServiceBase$DaemonWrapper;

        l0 := @parameter3: long;

        r4 := @parameter4: android.os.IBinder;

        r5 := @parameter5: com.android.server.biometrics.BiometricServiceBase$ServiceListener;

        i1 := @parameter6: int;

        i2 := @parameter7: int;

        r6 := @parameter8: byte[];

        z0 := @parameter9: boolean;

        r7 := @parameter10: java.lang.String;

        r8 := @parameter11: com.android.server.biometrics.BiometricUtils;

        r9 := @parameter12: int[];

        i3 := @parameter13: int;

        specialinvoke r0.<com.android.server.biometrics.ClientMonitor: void <init>(android.content.Context,com.android.server.biometrics.Constants,com.android.server.biometrics.BiometricServiceBase$DaemonWrapper,long,android.os.IBinder,com.android.server.biometrics.BiometricServiceBase$ServiceListener,int,int,boolean,java.lang.String,int)>(r1, r2, r3, l0, r4, r5, i1, i2, z0, r7, 0);

        r0.<com.android.server.biometrics.EnrollClient: com.android.server.biometrics.BiometricUtils mBiometricUtils> = r8;

        $i4 = lengthof r6;

        $r10 = staticinvoke <java.util.Arrays: byte[] copyOf(byte[],int)>(r6, $i4);

        r0.<com.android.server.biometrics.EnrollClient: byte[] mCryptoToken> = $r10;

        $i5 = lengthof r9;

        $r11 = staticinvoke <java.util.Arrays: int[] copyOf(int[],int)>(r9, $i5);

        r0.<com.android.server.biometrics.EnrollClient: int[] mDisabledFeatures> = $r11;

        r0.<com.android.server.biometrics.EnrollClient: int mTimeoutSec> = i3;

        return;
    }

    private boolean sendEnrollResult(android.hardware.biometrics.BiometricAuthenticator$Identifier, int)
    {
        com.android.server.biometrics.EnrollClient r0;
        int i0, $i1;
        com.android.server.biometrics.BiometricServiceBase$ServiceListener r1;
        boolean $z0, z1;
        com.android.server.biometrics.Constants $r2;
        com.android.internal.logging.MetricsLogger $r3;
        android.os.RemoteException $r4;
        java.lang.String $r5;
        android.hardware.biometrics.BiometricAuthenticator$Identifier r6;

        r0 := @this: com.android.server.biometrics.EnrollClient;

        r6 := @parameter0: android.hardware.biometrics.BiometricAuthenticator$Identifier;

        i0 := @parameter1: int;

        $z0 = virtualinvoke r0.<com.android.server.biometrics.EnrollClient: boolean shouldVibrate()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<com.android.server.biometrics.EnrollClient: void vibrateSuccess()>();

     label1:
        $r3 = r0.<com.android.server.biometrics.EnrollClient: com.android.internal.logging.MetricsLogger mMetricsLogger>;

        $r2 = r0.<com.android.server.biometrics.EnrollClient: com.android.server.biometrics.Constants mConstants>;

        $i1 = interfaceinvoke $r2.<com.android.server.biometrics.Constants: int actionBiometricEnroll()>();

        virtualinvoke $r3.<com.android.internal.logging.MetricsLogger: void action(int)>($i1);

        z1 = 1;

     label2:
        r1 = virtualinvoke r0.<com.android.server.biometrics.EnrollClient: com.android.server.biometrics.BiometricServiceBase$ServiceListener getListener()>();

     label3:
        if r1 == null goto label5;

     label4:
        interfaceinvoke r1.<com.android.server.biometrics.BiometricServiceBase$ServiceListener: void onEnrollResult(android.hardware.biometrics.BiometricAuthenticator$Identifier,int)>(r6, i0);

     label5:
        if i0 != 0 goto label6;

        goto label7;

     label6:
        z1 = 0;

     label7:
        return z1;

     label8:
        $r4 := @caughtexception;

        $r5 = virtualinvoke r0.<com.android.server.biometrics.EnrollClient: java.lang.String getLogTag()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r5, "Failed to notify EnrollResult:", $r4);

        return 1;

        catch android.os.RemoteException from label2 to label3 with label8;
        catch android.os.RemoteException from label4 to label5 with label8;
    }

    public boolean onAuthenticated(android.hardware.biometrics.BiometricAuthenticator$Identifier, boolean, java.util.ArrayList)
    {
        com.android.server.biometrics.EnrollClient r0;
        android.hardware.biometrics.BiometricAuthenticator$Identifier r1;
        boolean z0;
        java.util.ArrayList r2;
        java.lang.String $r3;

        r0 := @this: com.android.server.biometrics.EnrollClient;

        r1 := @parameter0: android.hardware.biometrics.BiometricAuthenticator$Identifier;

        z0 := @parameter1: boolean;

        r2 := @parameter2: java.util.ArrayList;

        $r3 = virtualinvoke r0.<com.android.server.biometrics.EnrollClient: java.lang.String getLogTag()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>($r3, "onAuthenticated() called for enroll!");

        return 1;
    }

    public boolean onEnrollResult(android.hardware.biometrics.BiometricAuthenticator$Identifier, int)
    {
        com.android.server.biometrics.EnrollClient r0;
        android.hardware.biometrics.BiometricAuthenticator$Identifier r1;
        int i0, $i1, $i2;
        boolean $z0;
        com.android.server.biometrics.BiometricUtils $r2;
        android.content.Context $r3;
        long $l3, $l4, $l5;

        r0 := @this: com.android.server.biometrics.EnrollClient;

        r1 := @parameter0: android.hardware.biometrics.BiometricAuthenticator$Identifier;

        i0 := @parameter1: int;

        if i0 != 0 goto label1;

        $r2 = r0.<com.android.server.biometrics.EnrollClient: com.android.server.biometrics.BiometricUtils mBiometricUtils>;

        $r3 = virtualinvoke r0.<com.android.server.biometrics.EnrollClient: android.content.Context getContext()>();

        $i1 = virtualinvoke r0.<com.android.server.biometrics.EnrollClient: int getTargetUserId()>();

        interfaceinvoke $r2.<com.android.server.biometrics.BiometricUtils: void addBiometricForUser(android.content.Context,int,android.hardware.biometrics.BiometricAuthenticator$Identifier)>($r3, $i1, r1);

        $i2 = virtualinvoke r0.<com.android.server.biometrics.EnrollClient: int getTargetUserId()>();

        $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l4 = r0.<com.android.server.biometrics.EnrollClient: long mEnrollmentStartTimeMs>;

        $l5 = $l3 - $l4;

        virtualinvoke r0.<com.android.server.biometrics.EnrollClient: void logOnEnrolled(int,long,boolean)>($i2, $l5, 1);

     label1:
        virtualinvoke r0.<com.android.server.biometrics.EnrollClient: void notifyUserActivity()>();

        $z0 = specialinvoke r0.<com.android.server.biometrics.EnrollClient: boolean sendEnrollResult(android.hardware.biometrics.BiometricAuthenticator$Identifier,int)>(r1, i0);

        return $z0;
    }

    public boolean onEnumerationResult(android.hardware.biometrics.BiometricAuthenticator$Identifier, int)
    {
        com.android.server.biometrics.EnrollClient r0;
        android.hardware.biometrics.BiometricAuthenticator$Identifier r1;
        int i0;
        java.lang.String $r2;

        r0 := @this: com.android.server.biometrics.EnrollClient;

        r1 := @parameter0: android.hardware.biometrics.BiometricAuthenticator$Identifier;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r0.<com.android.server.biometrics.EnrollClient: java.lang.String getLogTag()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>($r2, "onEnumerationResult() called for enroll!");

        return 1;
    }

    public boolean onError(long, int, int)
    {
        com.android.server.biometrics.EnrollClient r0;
        long l0, $l4, $l5, $l6;
        int i1, i2, $i3;
        boolean $z0;

        r0 := @this: com.android.server.biometrics.EnrollClient;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $i3 = virtualinvoke r0.<com.android.server.biometrics.EnrollClient: int getTargetUserId()>();

        $l4 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l5 = r0.<com.android.server.biometrics.EnrollClient: long mEnrollmentStartTimeMs>;

        $l6 = $l4 - $l5;

        virtualinvoke r0.<com.android.server.biometrics.EnrollClient: void logOnEnrolled(int,long,boolean)>($i3, $l6, 0);

        $z0 = specialinvoke r0.<com.android.server.biometrics.ClientMonitor: boolean onError(long,int,int)>(l0, i1, i2);

        return $z0;
    }

    public boolean onRemoved(android.hardware.biometrics.BiometricAuthenticator$Identifier, int)
    {
        com.android.server.biometrics.EnrollClient r0;
        android.hardware.biometrics.BiometricAuthenticator$Identifier r1;
        int i0;
        java.lang.String $r2;

        r0 := @this: com.android.server.biometrics.EnrollClient;

        r1 := @parameter0: android.hardware.biometrics.BiometricAuthenticator$Identifier;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r0.<com.android.server.biometrics.EnrollClient: java.lang.String getLogTag()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>($r2, "onRemoved() called for enroll!");

        return 1;
    }

    public abstract boolean shouldVibrate();

    public int start()
    {
        com.android.server.biometrics.EnrollClient r0;
        java.lang.StringBuilder r1;
        long $l0, $l5;
        int[] $r2, $r11;
        int $i1, $i2, $i3, $i6, i8, i9;
        com.android.server.biometrics.BiometricServiceBase$DaemonWrapper $r3;
        byte[] $r4;
        java.lang.String $r7, $r10, $r14, r16;
        com.android.server.biometrics.Constants $r8;
        com.android.internal.logging.MetricsLogger $r9;
        java.lang.Integer $r12;
        android.os.RemoteException $r13;
        java.util.ArrayList r15;

        r0 := @this: com.android.server.biometrics.EnrollClient;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<com.android.server.biometrics.EnrollClient: long mEnrollmentStartTimeMs> = $l0;

     label01:
        r15 = new java.util.ArrayList;

        specialinvoke r15.<java.util.ArrayList: void <init>()>();

     label02:
        i8 = 0;

     label03:
        $r2 = r0.<com.android.server.biometrics.EnrollClient: int[] mDisabledFeatures>;

        $i1 = lengthof $r2;

        if i8 >= $i1 goto label05;

        $r11 = r0.<com.android.server.biometrics.EnrollClient: int[] mDisabledFeatures>;

        $i6 = $r11[i8];

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        virtualinvoke r15.<java.util.ArrayList: boolean add(java.lang.Object)>($r12);

     label04:
        i8 = i8 + 1;

        goto label03;

     label05:
        $r3 = virtualinvoke r0.<com.android.server.biometrics.EnrollClient: com.android.server.biometrics.BiometricServiceBase$DaemonWrapper getDaemonWrapper()>();

        $r4 = r0.<com.android.server.biometrics.EnrollClient: byte[] mCryptoToken>;

        $i2 = virtualinvoke r0.<com.android.server.biometrics.EnrollClient: int getGroupId()>();

        $i3 = r0.<com.android.server.biometrics.EnrollClient: int mTimeoutSec>;

        i9 = interfaceinvoke $r3.<com.android.server.biometrics.BiometricServiceBase$DaemonWrapper: int enroll(byte[],int,int,java.util.ArrayList)>($r4, $i2, $i3, r15);

     label06:
        if i9 == 0 goto label09;

     label07:
        r16 = virtualinvoke r0.<com.android.server.biometrics.EnrollClient: java.lang.String getLogTag()>();

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("startEnroll failed, result=");

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i9);

        $r7 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>(r16, $r7);

        $r9 = r0.<com.android.server.biometrics.EnrollClient: com.android.internal.logging.MetricsLogger mMetricsLogger>;

        $r8 = r0.<com.android.server.biometrics.EnrollClient: com.android.server.biometrics.Constants mConstants>;

        $r10 = interfaceinvoke $r8.<com.android.server.biometrics.Constants: java.lang.String tagEnrollStartError()>();

        virtualinvoke $r9.<com.android.internal.logging.MetricsLogger: void histogram(java.lang.String,int)>($r10, i9);

        $l5 = virtualinvoke r0.<com.android.server.biometrics.EnrollClient: long getHalDeviceId()>();

        virtualinvoke r0.<com.android.server.biometrics.EnrollClient: boolean onError(long,int,int)>($l5, 1, 0);

     label08:
        return i9;

     label09:
        goto label11;

     label10:
        $r13 := @caughtexception;

        $r14 = virtualinvoke r0.<com.android.server.biometrics.EnrollClient: java.lang.String getLogTag()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r14, "startEnroll failed", $r13);

     label11:
        return 0;

        catch android.os.RemoteException from label01 to label02 with label10;
        catch android.os.RemoteException from label03 to label04 with label10;
        catch android.os.RemoteException from label05 to label06 with label10;
        catch android.os.RemoteException from label07 to label08 with label10;
    }

    protected int statsAction()
    {
        com.android.server.biometrics.EnrollClient r0;

        r0 := @this: com.android.server.biometrics.EnrollClient;

        return 1;
    }

    public int stop(boolean)
    {
        com.android.server.biometrics.EnrollClient r0;
        boolean z0, $z1;
        int i0;
        java.lang.StringBuilder r1;
        com.android.server.biometrics.BiometricServiceBase$DaemonWrapper $r2;
        java.lang.String $r5, $r6, $r8, r9;
        android.os.RemoteException $r7;

        r0 := @this: com.android.server.biometrics.EnrollClient;

        z0 := @parameter0: boolean;

        $z1 = r0.<com.android.server.biometrics.EnrollClient: boolean mAlreadyCancelled>;

        if $z1 == 0 goto label1;

        $r6 = virtualinvoke r0.<com.android.server.biometrics.EnrollClient: java.lang.String getLogTag()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>($r6, "stopEnroll: already cancelled!");

        return 0;

     label1:
        $r2 = virtualinvoke r0.<com.android.server.biometrics.EnrollClient: com.android.server.biometrics.BiometricServiceBase$DaemonWrapper getDaemonWrapper()>();

        i0 = interfaceinvoke $r2.<com.android.server.biometrics.BiometricServiceBase$DaemonWrapper: int cancel()>();

     label2:
        if i0 == 0 goto label5;

     label3:
        r9 = virtualinvoke r0.<com.android.server.biometrics.EnrollClient: java.lang.String getLogTag()>();

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("startEnrollCancel failed, result = ");

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>(r9, $r5);

     label4:
        return i0;

     label5:
        goto label7;

     label6:
        $r7 := @caughtexception;

        $r8 = virtualinvoke r0.<com.android.server.biometrics.EnrollClient: java.lang.String getLogTag()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r8, "stopEnrollment failed", $r7);

     label7:
        r0.<com.android.server.biometrics.EnrollClient: boolean mAlreadyCancelled> = 1;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label6;
        catch android.os.RemoteException from label3 to label4 with label6;
    }
}
