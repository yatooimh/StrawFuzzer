public class com.android.server.biometrics.Utils extends java.lang.Object
{

    public void <init>()
    {
        com.android.server.biometrics.Utils r0;

        r0 := @this: com.android.server.biometrics.Utils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static int biometricConstantsToBiometricManager(int)
    {
        java.lang.StringBuilder $r1;
        java.lang.String $r4;
        int i1;
        byte b2;

        i1 := @parameter0: int;

        if i1 == 0 goto label5;

        if i1 == 1 goto label4;

        if i1 == 11 goto label3;

        if i1 == 12 goto label2;

        if i1 == 14 goto label3;

        if i1 == 15 goto label1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unhandled result code: ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("BiometricService", $r4);

        b2 = 1;

        goto label6;

     label1:
        b2 = 15;

        goto label6;

     label2:
        b2 = 12;

        goto label6;

     label3:
        b2 = 11;

        goto label6;

     label4:
        b2 = 1;

        goto label6;

     label5:
        b2 = 0;

     label6:
        return b2;
    }

    public static void combineAuthenticatorBundles(android.os.Bundle)
    {
        android.os.Bundle r0;
        boolean z0, $z1;
        int i0;

        r0 := @parameter0: android.os.Bundle;

        z0 = virtualinvoke r0.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>("allow_device_credential", 0);

        virtualinvoke r0.<android.os.Bundle: void remove(java.lang.String)>("allow_device_credential");

        $z1 = virtualinvoke r0.<android.os.Bundle: boolean containsKey(java.lang.String)>("authenticators_allowed");

        if $z1 == 0 goto label1;

        i0 = virtualinvoke r0.<android.os.Bundle: int getInt(java.lang.String,int)>("authenticators_allowed", 0);

        goto label3;

     label1:
        if z0 == 0 goto label2;

        i0 = 33023;

        goto label3;

     label2:
        i0 = 255;

     label3:
        virtualinvoke r0.<android.os.Bundle: void putInt(java.lang.String,int)>("authenticators_allowed", i0);

        return;
    }

    public static int getAuthenticationTypeForResult(int)
    {
        int i0;
        java.lang.StringBuilder $r1;
        java.lang.IllegalArgumentException $r4;
        java.lang.String $r5;

        i0 := @parameter0: int;

        if i0 == 1 goto label2;

        if i0 == 4 goto label2;

        if i0 != 7 goto label1;

        return 1;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported dismissal reason: ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r4;

     label2:
        return 2;
    }

    public static int getPublicBiometricStrength(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        $i1 = i0 & 255;

        return $i1;
    }

    public static int getPublicBiometricStrength(android.os.Bundle)
    {
        android.os.Bundle r0;
        int $i0, $i1;

        r0 := @parameter0: android.os.Bundle;

        $i0 = virtualinvoke r0.<android.os.Bundle: int getInt(java.lang.String)>("authenticators_allowed");

        $i1 = staticinvoke <com.android.server.biometrics.Utils: int getPublicBiometricStrength(int)>($i0);

        return $i1;
    }

    public static boolean isAtLeastStrength(int, int)
    {
        int i0, i1, $i2, $i4, i5, i6;
        java.lang.StringBuilder $r1;
        java.lang.String $r6;

        i5 := @parameter0: int;

        i0 := @parameter1: int;

        i1 = i5 & 32767;

        $i2 = i0 & i1;

        if $i2 == 0 goto label1;

        return 0;

     label1:
        i6 = 1;

     label2:
        if i6 > i0 goto label4;

        if i6 != i1 goto label3;

        return 1;

     label3:
        $i4 = i6 << 1;

        i6 = $i4 | 1;

        goto label2;

     label4:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown sensorStrength: ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", requestedStrength: ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("BiometricService", $r6);

        return 0;
    }

    public static boolean isBiometricRequested(android.os.Bundle)
    {
        android.os.Bundle r0;
        int $i0;
        boolean z0;

        r0 := @parameter0: android.os.Bundle;

        $i0 = staticinvoke <com.android.server.biometrics.Utils: int getPublicBiometricStrength(android.os.Bundle)>(r0);

        if $i0 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public static boolean isCredentialRequested(int)
    {
        int i0, $i1;
        boolean z0;

        i0 := @parameter0: int;

        $i1 = 32768 & i0;

        if $i1 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public static boolean isCredentialRequested(android.os.Bundle)
    {
        android.os.Bundle r0;
        int $i0;
        boolean $z0;

        r0 := @parameter0: android.os.Bundle;

        $i0 = virtualinvoke r0.<android.os.Bundle: int getInt(java.lang.String)>("authenticators_allowed");

        $z0 = staticinvoke <com.android.server.biometrics.Utils: boolean isCredentialRequested(int)>($i0);

        return $z0;
    }

    public static boolean isDebugEnabled(android.content.Context, int)
    {
        android.content.Context r0;
        int i0, $i1;
        boolean $z0, $z1;
        android.content.ContentResolver $r1;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        if i0 != -10000 goto label1;

        return 0;

     label1:
        $z0 = <android.os.Build: boolean IS_ENG>;

        if $z0 != 0 goto label2;

        $z1 = <android.os.Build: boolean IS_USERDEBUG>;

        if $z1 != 0 goto label2;

        return 0;

     label2:
        $r1 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i1 = staticinvoke <android.provider.Settings$Secure: int getIntForUser(android.content.ContentResolver,java.lang.String,int,int)>($r1, "biometric_debug_enabled", 0, i0);

        if $i1 != 0 goto label3;

        return 0;

     label3:
        return 1;
    }

    public static boolean isValidAuthenticatorConfig(int)
    {
        int i0, i1, $i2;
        java.lang.StringBuilder $r0, $r4;
        java.lang.String $r3, $r7;
        boolean $z0;

        i0 := @parameter0: int;

        if i0 != 0 goto label1;

        return 1;

     label1:
        $i2 = -65536 & i0;

        if $i2 == 0 goto label2;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Non-biometric, non-credential bits found. Authenticators: ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("BiometricService", $r7);

        return 0;

     label2:
        i1 = i0 & 32767;

        if i1 != 0 goto label3;

        $z0 = staticinvoke <com.android.server.biometrics.Utils: boolean isCredentialRequested(int)>(i0);

        if $z0 == 0 goto label3;

        return 1;

     label3:
        if i1 != 15 goto label4;

        return 1;

     label4:
        if i1 != 255 goto label5;

        return 1;

     label5:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported biometric flags. Authenticators: ");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("BiometricService", $r3);

        return 0;
    }

    public static boolean isValidAuthenticatorConfig(android.os.Bundle)
    {
        android.os.Bundle r0;
        int $i0;
        boolean $z0;

        r0 := @parameter0: android.os.Bundle;

        $i0 = virtualinvoke r0.<android.os.Bundle: int getInt(java.lang.String)>("authenticators_allowed");

        $z0 = staticinvoke <com.android.server.biometrics.Utils: boolean isValidAuthenticatorConfig(int)>($i0);

        return $z0;
    }
}
